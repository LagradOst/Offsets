namespace off {
	constexpr auto GNames = 0x61a9b40;
	constexpr auto GObjects = 0x61c22d0;
	constexpr auto GWorld = 0x62f8800;

	namespace n_UCrowReplicationGraphSettings {
		constexpr auto RPC_PolicySettingsList = 0x38; // TArray<FCrowReplicationRPCPolicyInfo>
		constexpr auto DefaultReplicationSettings = 0x48; // FCrowRepGraphSettings
		constexpr auto ReplicationSettingsList = 0xb0; // TArray<FCrowRepGraphSettings>
		constexpr auto OverrideReplicationSettings = 0xc0; // bool
		constexpr auto OverrideReplicationSettingsIndex = 0xc4; // uint32_t
		constexpr auto ScopeSightRateHalfFOVArray = 0xc8; // TArray<float>
		constexpr auto ScopeSightRateDistanceDivider = 0xd8; // TArray<float>
		constexpr auto ShowConnectionReplicationLog = 0xe8; // bool
		constexpr auto ShowAlwaysRelevantReplicationLog = 0xe9; // bool
		constexpr auto ShowPawnReplicationLog = 0xea; // bool
		constexpr auto ShowGridReplicationLog = 0xeb; // bool
		constexpr auto ShowPlayerStateReplicationLog = 0xec; // bool
		constexpr auto ReplicationSettingsIndex = 0xf0; // uint32_t
	}

	namespace n_UDynamicMeshBrushTool {
		constexpr auto PreviewMesh = 0x1c0; // UPreviewMesh*
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_UCrowTabMenuWeaponCategoryWidget {
		constexpr auto CustomizeItemDescWidget = 0x380; // UCrowCustomizeItemDescWidget*
	}

	namespace n_UWB_Crosshair_Mh6_Flare_C {
		constexpr auto IMG_ZoomIn = 0x460; // UImage*
		constexpr auto IMG_ZoomIn_5 = 0x468; // UImage*
	}

	namespace n_ACrowWorldEventSupply {
		constexpr auto StartPoint = 0x370; // UStaticMeshComponent*
		constexpr auto EndPoint = 0x378; // UStaticMeshComponent*
		constexpr auto MovingSpeed = 0x380; // float
		constexpr auto TransportActor = 0x388; // ACrowSupplyEventPlaneActor*
		constexpr auto SupplyBoxActor = 0x390; // ACrowSupplyEventBoxActor*
		constexpr auto DelayTimeMin = 0x398; // float
		constexpr auto DelayTimeMax = 0x39c; // float
		constexpr auto SupplyDropBoxCount = 0x3a0; // int32_t
		constexpr auto DropIntervalTimeMin = 0x3a4; // float
		constexpr auto DropIntervalTimeMax = 0x3a8; // float
		constexpr auto FixItemIndexArray = 0x3b0; // TArray<int32_t>
		constexpr auto PlaneActor = 0x3c0; // ACrowSupplyEventPlaneActor*
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UWaterSplineComponent {
		constexpr auto WaterSplineDefaults = 0x538; // FWaterSplineCurveDefaults
		constexpr auto PreviousWaterSplineDefaults = 0x548; // FWaterSplineCurveDefaults
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UCrowCloudScapeDataAsset {
		constexpr auto Settings = 0x30; // TArray<FCrowCloudScapeSetting>
	}

	namespace n_ACrowMeshDestructionActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto DestructionAUD = 0x228; // UCrowWorldDestructionAUD*
		constexpr auto ChainExplosionDamageType = 0x230; // UCrowChainExplosionDamageType*
		constexpr auto DestructionCause = 0x240; // ECrowWorldDestructionCause
		constexpr auto IsDedicatedServer = 0x241; // bool
		constexpr auto SimulationSKC = 0x248; // USkeletalMeshComponent*
		constexpr auto DestructibleActor = 0x250; // ADestructibleActor*
		constexpr auto DestructibleComponent = 0x258; // UDestructibleComponent*
		constexpr auto DestroyTime = 0x260; // float
		constexpr auto DestroyTimerHandle = 0x268; // FTimerHandle
		constexpr auto ExplosionDamage = 0x270; // float
		constexpr auto ExplosionDamageRadius = 0x274; // float
		constexpr auto ExplosionDamageTime = 0x278; // float
		constexpr auto HitGroundTime = 0x27c; // float
		constexpr auto HitGroundCount = 0x280; // int32_t
		constexpr auto FxComponents = 0x288; // TArray<UFXSystemComponent*>
		constexpr auto FxComponentsAttached = 0x298; // TArray<UFXSystemComponent*>
		constexpr auto TemporalMeshes = 0x2a8; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_ACrowSupplyEventBoxActor {
		constexpr auto RewardIconActor = 0x2c8; // ACrowWorldIconActor*
		constexpr auto RewardSmokeEffect = 0x2d0; // UParticleSystemComponent*
		constexpr auto BuoyancyComponent = 0x2d8; // UCrowSimpleBuoyancyComponent*
		constexpr auto DefaultItemIndex = 0x2e0; // int32_t
		constexpr auto ParachuteClass = 0x2e8; // ACrowSupplyEventParachuteActor*
		constexpr auto ParachuteDownAni = 0x2f0; // UAnimationAsset*
		constexpr auto ParachuteUpAni = 0x2f8; // UAnimationAsset*
		constexpr auto DropHeight = 0x300; // float
		constexpr auto MaxSpeed = 0x304; // float
		constexpr auto EffectSmoke = 0x308; // UParticleSystem*
		constexpr auto IconDisplayInfo = 0x310; // FCrowGameIconDisplayInfo
		constexpr auto EffectSmokeComp = 0x398; // UParticleSystemComponent*
		constexpr auto ParachuteActor = 0x3a0; // ACrowSupplyEventParachuteActor*
		constexpr auto EventState = 0x3a8; // ECrowSupplyEventState
		constexpr auto OwnerTeamID = 0x3a9; // char
		constexpr auto SquadRewardIndex = 0x3aa; // char
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x228; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x240; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x248; // FSoftObjectPath
		constexpr auto BindingOverride = 0x260; // FTemplateSequenceBindingOverrideData
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UCrowSquadLoadoutWidget {
		constexpr auto WB_Objective_CountDown = 0x368; // UCrowCountdownWidget*
		constexpr auto BT_EscBack = 0x370; // UCrowButton*
		constexpr auto BT_SelectComplete = 0x378; // UCrowButton*
		constexpr auto HB_Weapon_Main = 0x380; // UHorizontalBox*
		constexpr auto HB_Weapon_Sub = 0x388; // UHorizontalBox*
		constexpr auto HB_Weapon_Melee = 0x390; // UHorizontalBox*
		constexpr auto HB_Gadget_Throwable = 0x398; // UHorizontalBox*
		constexpr auto HB_Gadget_Healkit = 0x3a0; // UHorizontalBox*
		constexpr auto WeaponMainWidgetArray = 0x3a8; // TArray<UCrowSquadLoadoutSlotWeaponWidget*>
		constexpr auto WeaponSubWidgetArray = 0x3b8; // TArray<UCrowSquadLoadoutSlotWeaponWidget*>
		constexpr auto WeaponMeleeWidgetArray = 0x3c8; // TArray<UCrowSquadLoadoutSlotWeaponWidget*>
		constexpr auto GadgetThrowableWidgetArray = 0x3d8; // TArray<UCrowSquadLoadoutSlotGadgetWidget*>
		constexpr auto GadgetHealkitWidgetArray = 0x3e8; // TArray<UCrowSquadLoadoutSlotGadgetWidget*>
	}

	namespace n_UCrowRankingDateInfoTableManager {
		constexpr auto RankingDateInfoTable = 0x28; // TMap<uint32_t, FCrowRankingDateInfoTableRow>
	}

	namespace n_UMultiTransformer {
		constexpr auto GizmoManager = 0x70; // UInteractiveGizmoManager*
		constexpr auto TransformGizmo = 0xe0; // UTransformGizmo*
		constexpr auto TransformProxy = 0xe8; // UTransformProxy*
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_ACrowItemVehicleSkin {
		constexpr auto ItemData = 0x2b8; // FCrowItemData
		constexpr auto ItemTable = 0x2e8; // FCrowVehicleSkinTableRow
		constexpr auto VehicleClassArray = 0x4a0; // TArray<UObject*>
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UCrowKeyGuideSlotWidget {
		constexpr auto RTBMessage = 0x348; // URichTextBlock*
		constexpr auto TBDescription = 0x350; // UTextBlock*
	}

	namespace n_ACrowSafeBoxEventBox {
		constexpr auto EffectNormal = 0x388; // USceneComponent*
		constexpr auto BoxMesh = 0x390; // USkeletalMeshComponent*
	}

	namespace n_UCrowScoreBoardConquestUserWidget {
		constexpr auto WS_ScoreBoard = 0x348; // UWidgetSwitcher*
		constexpr auto BT_EscBack = 0x350; // UCrowButton*
		constexpr auto IMG_AllyIcon = 0x358; // UImage*
		constexpr auto IMG_EnemyIcon = 0x360; // UImage*
		constexpr auto WB_ConquestScoreAlly = 0x368; // UCrowScoreInfoConquestUserSummary*
		constexpr auto WB_ConqestScoreEnemy = 0x370; // UCrowScoreInfoConquestUserSummary*
		constexpr auto RedTeamImage = 0x378; // FSlateBrush
		constexpr auto BlueTeamImage = 0x400; // FSlateBrush
		constexpr auto CrowGameStateConquest = 0x488; // ACrowGameStateConquest*
		constexpr auto LocalPlayerState = 0x490; // ACrowPlayerStateBase*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UAkXboxOneInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_AGroomActor {
		constexpr auto GroomComponent = 0x220; // UGroomComponent*
	}

	namespace n_USteamVRHQStereoLayerShape {
		constexpr auto bCurved = 0x28; // bool
		constexpr auto bAntiAlias = 0x29; // bool
		constexpr auto AutoCurveMinDistance = 0x2c; // float
		constexpr auto AutoCurveMaxDistance = 0x30; // float
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UCrowConquestAreaGaugeHQ {
		constexpr auto RedMyTeam = 0x558; // UPaperSprite*
		constexpr auto RedEnemy = 0x560; // UPaperSprite*
		constexpr auto BlueMyTeam = 0x568; // UPaperSprite*
		constexpr auto BlueEnemy = 0x570; // UPaperSprite*
		constexpr auto IMG_Icon = 0x578; // UImage*
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBP_MachineGunAnimInst_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x2f8; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_MachineGun = 0x328; // FAnimNode_MachineGunHandler
		constexpr auto AnimGraphNode_Slot = 0x418; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x460; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x480; // FAnimNode_ConvertLocalToComponentSpace
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UCrowMultiSystemMessageBoxWidget {
		constexpr auto WB_MultiSystemMessage_2 = 0x348; // UCrowMultiSystemMessageWidget*
		constexpr auto WB_MultiSystemMessage_3 = 0x350; // UCrowMultiSystemMessageWidget*
		constexpr auto WB_MultiSystemMessage_4 = 0x358; // UCrowMultiSystemMessageWidget*
		constexpr auto MessageBoxArray = 0x360; // TArray<UCrowMultiSystemMessageWidget*>
		constexpr auto HideTime = 0x370; // float
	}

	namespace n_UCrowWidgetConquestVehicleButton {
		constexpr auto BT_ConquestRespawn = 0x348; // UCrowToggleButton*
		constexpr auto IMG_Icon = 0x350; // UImage*
		constexpr auto IMG_Icon_2 = 0x358; // UImage*
		constexpr auto TargetComponent = 0x360; // UCrowConquestAreaVehicleSpawner*
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UCrowSocialWidget {
		constexpr auto WB_TabMenu_Social = 0x348; // UCrowTabMenuSocialWidget*
		constexpr auto WS_Social = 0x350; // UWidgetSwitcher*
		constexpr auto CP_FriendList = 0x358; // UCanvasPanel*
		constexpr auto WS_FriendList = 0x360; // UWidgetSwitcher*
		constexpr auto GP_UserList_Friend = 0x368; // UGridPanel*
		constexpr auto CP_RequestFriend = 0x370; // UCanvasPanel*
		constexpr auto CP_GetRquest = 0x378; // UCanvasPanel*
		constexpr auto TB_GetCount = 0x380; // UTextBlock*
		constexpr auto WS_GetRequest = 0x388; // UWidgetSwitcher*
		constexpr auto SB_GetRequest = 0x390; // UScrollBox*
		constexpr auto CP_SendRquest = 0x398; // UCanvasPanel*
		constexpr auto TB_SendCount = 0x3a0; // UTextBlock*
		constexpr auto WS_SendRequest = 0x3a8; // UWidgetSwitcher*
		constexpr auto SB_SendRequest = 0x3b0; // UScrollBox*
		constexpr auto CP_Recent = 0x3b8; // UCanvasPanel*
		constexpr auto WS_RecentList = 0x3c0; // UWidgetSwitcher*
		constexpr auto GP_UserList_Recent = 0x3c8; // UGridPanel*
		constexpr auto CP_SearchFriend = 0x3d0; // UCanvasPanel*
		constexpr auto TB_TypingUserName = 0x3d8; // UEditableTextBox*
		constexpr auto BT_Search = 0x3e0; // UCrowButton*
		constexpr auto WS_SearchList = 0x3e8; // UWidgetSwitcher*
		constexpr auto GP_UserList_Search = 0x3f0; // UGridPanel*
		constexpr auto HB_Page = 0x3f8; // UHorizontalBox*
		constexpr auto BT_Prev = 0x400; // UCrowButton*
		constexpr auto BT_Next = 0x408; // UCrowButton*
		constexpr auto TB_Page = 0x410; // UTextBlock*
		constexpr auto BT_Prev_Search = 0x418; // UCrowButton*
		constexpr auto BT_Next_Search = 0x420; // UCrowButton*
		constexpr auto TB_Page_Search = 0x428; // UTextBlock*
		constexpr auto FriendSlotWidgetClass = 0x430; // UCrowFriendSlotWidget*
		constexpr auto SearchUserNameLegnthMin = 0x438; // char
		constexpr auto CurrentTabType = 0x439; // ESocialTabType
		constexpr auto SceneLobby = 0x440; // ACrowSceneLobby*
		constexpr auto CurrentPage = 0x448; // uint32_t
		constexpr auto PageMax = 0x44c; // uint32_t
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_ACrowWeaponRocketLauncher {
		constexpr auto BottomBlastEffect = 0x1eb8; // UParticleSystem*
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UViewAlignedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UCrowWeaponListItemBase {
		constexpr auto WeaponPanel = 0x670; // TArray<UWidget*>
		constexpr auto WeaponBase = 0x680; // ACrowWeaponBase*
		constexpr auto WeaponTable = 0x690; // FCrowWeaponTableRow
		constexpr auto WeaponData = 0x18b0; // FCrowWeaponData
		constexpr auto SlotIndex = 0x1a18; // int32_t
		constexpr auto CurrAmmoCount = 0x1a1c; // int32_t
		constexpr auto WeaponSubType = 0x1a20; // ECrowWeaponSubType
		constexpr auto WS_AmmoCount = 0x1a28; // UWidgetSwitcher*
		constexpr auto IMG_Weapon = 0x1a30; // UCrowWidgetImage*
		constexpr auto TB_RemainAmmo = 0x1a38; // UTextBlock*
		constexpr auto WeaponIconImage = 0x1a40; // UTexture2D*
	}

	namespace n_UCrowPlatformSteam {
		constexpr auto DefaultTexture = 0x80; // UTexture2D*
		constexpr auto TexCache = 0x88; // TMap<uint64_t, UTexture2D*>
	}

	namespace n_UCrowVehicleMovementRotor {
		constexpr auto BodyConfig = 0x190; // UCrowRotorConfigHeli*
		constexpr auto VehiclePawn = 0x198; // APawn*
		constexpr auto PhysicsBody = 0x1a0; // UPrimitiveComponent*
		constexpr auto PhysicsParam = 0x1a8; // FCrowRotorBodySetting
		constexpr auto IdleHoverForce = 0x248; // float
		constexpr auto WorldOceanZ = 0x24c; // float
		constexpr auto WorldAltitudeLimitZ = 0x250; // float
		constexpr auto RotorType = 0x254; // int32_t
		constexpr auto TorqueToAccel = 0x258; // float
		constexpr auto IsDirtyClientInput = 0x25c; // bool
		constexpr auto ClientRawInput = 0x260; // FCrowMovementRotorValues
		constexpr auto ReceivedInput = 0x278; // FCrowMovementRotorValues
		constexpr auto CalculatedInput = 0x290; // FCrowMovementRotorValues
		constexpr auto ForceAndTorque = 0x2a8; // FCrowMovementRotorValues
		constexpr auto ForceAndTorqueCurrent = 0x2c0; // FCrowMovementRotorValues
		constexpr auto PhysicsBodyForward = 0x3a0; // FVector
		constexpr auto PhysicsBodyRight = 0x3ac; // FVector
		constexpr auto PhysicsBodyUp = 0x3b8; // FVector
		constexpr auto PlanarForward = 0x3c4; // FVector
		constexpr auto PlanarRight = 0x3d0; // FVector
		constexpr auto PhysicsBodyVelocity = 0x3dc; // FVector
		constexpr auto DirectionalVelocity = 0x3e8; // FVector
		constexpr auto DragForce = 0x3f4; // FVector
		constexpr auto IdleDampingForce = 0x400; // FVector
		constexpr auto CurrentCollectiveForce = 0x40c; // float
		constexpr auto IsEngineStart = 0x410; // bool
		constexpr auto DamagedEffectInput = 0x414; // FCrowMovementRotorValues
		constexpr auto DamagedEffectEnginePower = 0x42c; // float
		constexpr auto DamagedInputFactor = 0x430; // float
	}

	namespace n_UBakedTexture2DImageProperties {
		constexpr auto SourceTexture = 0x60; // UTexture2D*
		constexpr auto UVLayer = 0x68; // int32_t
	}

	namespace n_UCrowTabGenderWidget {
		constexpr auto CustomizeCharacterDescWidget = 0x380; // UCrowCustomizeCharacterDescWidget*
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_ACrowWorldActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto WorldAnimator = 0x228; // UCrowWorldAnimator*
		constexpr auto ReplicationActor = 0x230; // ACrowWorldReplicationActor*
		constexpr auto LODUpdater = 0x238; // UCrowWorldLODUpdater*
		constexpr auto UseActorDestruction = 0x240; // char : 1
		constexpr auto UseWorldActorLOD = 0x240; // char : 1
		constexpr auto DestroyedFlagInCluster = 0x240; // char : 1
		constexpr auto DestroyedFlagInLandmark = 0x240; // char : 1
		constexpr auto SkipItemDestroyedFlag = 0x240; // char : 1
		constexpr auto InitializedLayoutItems = 0x240; // char : 1
		constexpr auto InitializedLOD = 0x240; // char : 1
		constexpr auto FullyDestroyed = 0x240; // char : 1
		constexpr auto ActorLayoutIndex = 0x242; // int16_t
		constexpr auto WorldActorIndex = 0x244; // uint32_t
		constexpr auto SectorIndex = 0x248; // uint32_t
		constexpr auto ClusterIndex = 0x24c; // uint32_t
		constexpr auto ActorDestructibleFlagLookupInSector = 0x250; // int16_t
		constexpr auto ActorDestructibleFlagLookupInCluster = 0x252; // int16_t
		constexpr auto ActorDestructibleFlagLookupInLandmark = 0x254; // int16_t
		constexpr auto LayoutItemDestructibleFlagOrigin = 0x256; // int16_t
		constexpr auto LayoutItemDynamicStateOrigin = 0x258; // int16_t
		constexpr auto LayoutItemLookups = 0x260; // FCrowWorldActorLayoutItemLookups
		constexpr auto LayoutItemInstances = 0x2a0; // TArray<FCrowWorldActorLayoutItemInstance>
		constexpr auto ActorDestructionState = 0x2b0; // FCrowWorldActorDestructionState
		constexpr auto ActorLODStates = 0x2d8; // TArray<FCrowWorldActorLODState>
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x458; // float
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_UGroupEdgeInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UGroupEdgeInsertionTool*
	}

	namespace n_UBaseKelvinletBrushOpProps {
		constexpr auto Stiffness = 0x60; // float
		constexpr auto Incompressiblity = 0x64; // float
		constexpr auto BrushSteps = 0x68; // int32_t
	}

	namespace n_ACrowWorldReplicationController {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto PlayerController = 0x228; // APlayerController*
		constexpr auto ReplicationActor = 0x230; // ACrowWorldReplicationActor*
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x468; // UPaperSprite*
		constexpr auto MaterialOverride = 0x470; // UMaterialInterface*
		constexpr auto SpriteColor = 0x478; // FLinearColor
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UGerstnerWaterWaves {
		constexpr auto GerstnerWaveGenerator = 0x28; // UGerstnerWaterWaveGeneratorBase*
		constexpr auto GerstnerWaves = 0x30; // TArray<FGerstnerWave>
		constexpr auto MaxWaveHeight = 0x40; // float
	}

	namespace n_UCrowScoreRankSlotModeWidget {
		constexpr auto TB_Rank = 0x350; // UTextBlock*
		constexpr auto TB_Class = 0x358; // UTextBlock*
		constexpr auto TB_ID = 0x360; // UTextBlock*
		constexpr auto TB_Score = 0x368; // UTextBlock*
		constexpr auto TB_PlayTime = 0x370; // UTextBlock*
		constexpr auto TB_PlayCount = 0x378; // UTextBlock*
		constexpr auto TB_AverageScore = 0x380; // UTextBlock*
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UTMG_CustomMesh {
		constexpr auto Properties = 0x28; // FCustomMeshProperties
	}

	namespace n_UCrowBattleMenuInput {
		constexpr auto PlayerController = 0x140; // APlayerController*
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x218; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x220; // UAkRoomComponent*
		constexpr auto Priority = 0x228; // float
		constexpr auto WallOcclusion = 0x22c; // float
		constexpr auto AuxSendLevel = 0x230; // float
		constexpr auto AutoPost = 0x234; // bool
	}

	namespace n_UCrowVehicleCrosshairMh6Minigun {
		constexpr auto IMG_Overheating_Gauge = 0x428; // UImage*
		constexpr auto ImgOverheatingGuageMaterial = 0x430; // UMaterialInstanceDynamic*
		constexpr auto OverheatingCurve = 0x438; // UCurveLinearColor*
		constexpr auto IsCooling = 0x440; // bool
		constexpr auto WeaponInfoWidget = 0x448; // UCrowWeaponInfoWidget*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_Side_LPX8_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto AK_LasersightSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_AUPSFormation_FromFormationPoints {
		constexpr auto FormationPointComponents = 0x280; // TArray<UUPSFormationPointComponent*>
	}

	namespace n_UInAppPurchaseComponent {
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_UCrowFoliageParamSetting {
		constexpr auto MeshHeightParamName = 0x28; // FName
		constexpr auto BendingPowerName = 0x30; // FName
		constexpr auto MaxRotationParamName = 0x38; // FName
		constexpr auto DynamicFoliageMaskName = 0x40; // FName
		constexpr auto DynamicFoliageMaskSizeName = 0x48; // FName
		constexpr auto AddSineName1 = 0x50; // FName
		constexpr auto AddSineName2 = 0x58; // FName
		constexpr auto IgnoreContainKeywords = 0x60; // TSet<FString>
		constexpr auto ValidParentMaterialNames = 0xb0; // TSet<FString>
		constexpr auto GrassParams = 0x100; // TArray<FCrowFoliageParam>
		constexpr auto BushParams = 0x110; // TArray<FCrowFoliageParam>
		constexpr auto TreeParams = 0x120; // TArray<FCrowFoliageParam>
	}

	namespace n_UCrowDotDamageComponent {
		constexpr auto DestroyTimerHandle = 0xb0; // FTimerHandle
		constexpr auto ActivateTimerHandle = 0xb8; // FTimerHandle
		constexpr auto CrowDotDamageFxInfo = 0xc0; // TArray<FCrowDotDamageFxInfo>
		constexpr auto ActivateDamageTimeSecond = 0xd0; // float
		constexpr auto RunningTime = 0xd4; // float
		constexpr auto Damage = 0xd8; // float
		constexpr auto bCreateFx = 0xdc; // bool
		constexpr auto FXParticlesComps = 0xe0; // TArray<UParticleSystemComponent*>
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UCrowPreviewActorComponent {
		constexpr auto TargetActor = 0xb0; // AActor*
		constexpr auto MeshCompArray = 0xb8; // TArray<UMeshComponent*>
	}

	namespace n_UCrowRotorAnimInstance {
		constexpr auto AnimInstanceProxy = 0x2c0; // FCrowRotorAnimInstanceProxy
		constexpr auto VehiclePawn = 0xa30; // ACrowVehiclePawn*
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UOffsetWeightMapSetProperties {
		constexpr auto MinDistance = 0x80; // float
	}

	namespace n_ACrowRandomBoxTriggerActor {
		constexpr auto BoxWidgetClass = 0x220; // UCrowRandomBoxWidget*
		constexpr auto LevelSequencePlayer = 0x228; // ULevelSequencePlayer*
		constexpr auto BoxWidget = 0x230; // UCrowRandomBoxWidget*
		constexpr auto CurrMessageIndex = 0x238; // int32_t
		constexpr auto IsTouch = 0x23c; // bool
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_ACrowKitBomberProjectile {
		constexpr auto AmmoTableIndex = 0x1840; // int32_t
		constexpr auto Speed = 0x1844; // float
		constexpr auto DamageSetting = 0x1848; // FWeaponDamageSettings
		constexpr auto DamegeType = 0x1870; // UDamageType*
		constexpr auto CameraShakeFP = 0x1878; // UMatineeCameraShake*
		constexpr auto CameraShakeTP = 0x1880; // UMatineeCameraShake*
		constexpr auto Dir = 0x1888; // FVector
		constexpr auto BomberActor = 0x1898; // ACrowKitBomber*
		constexpr auto TargetActorPos = 0x18a0; // FVector
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Machinegun_First_C {
		constexpr auto Image = 0x438; // UImage*
		constexpr auto Image_372 = 0x440; // UImage*
		constexpr auto IMG_Box_CrossHair = 0x448; // UImage*
		constexpr auto IMG_Crosshair_Gauge = 0x450; // UImage*
		constexpr auto IMG_Crosshair_Gauge_Base = 0x458; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x460; // UImage*
		constexpr auto IMG_CrosshairFrame = 0x468; // UImage*
		constexpr auto IMG_FPS_CMG_Down = 0x470; // UImage*
		constexpr auto IMG_FPS_CMG_Down_3 = 0x478; // UImage*
		constexpr auto IMG_FPS_CMG_Left = 0x480; // UImage*
		constexpr auto IMG_FPS_CMG_Left_3 = 0x488; // UImage*
		constexpr auto IMG_FPS_CMG_Right = 0x490; // UImage*
		constexpr auto IMG_FPS_CMG_Right_3 = 0x498; // UImage*
		constexpr auto IMG_FPS_CMG_Up = 0x4a0; // UImage*
		constexpr auto IMG_FPS_CMG_Up_3 = 0x4a8; // UImage*
		constexpr auto IMG_ZoomIn = 0x4b0; // UImage*
		constexpr auto IMG_ZoomIn_2 = 0x4b8; // UImage*
		constexpr auto IMG_ZoomIn_3 = 0x4c0; // UImage*
		constexpr auto IMG_ZoomIn_4 = 0x4c8; // UImage*
		constexpr auto IMG_ZoomIn_5 = 0x4d0; // UImage*
		constexpr auto IMG_ZoomIn_6 = 0x4d8; // UImage*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_UM2_Browning_Boat_Back_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x318; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x348; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x390; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_VehicleWeapon = 0x3d0; // FAnimNode_VehicleWeaponHandler
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x440; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x448; // bool
		constexpr auto bFilledSpline = 0x449; // bool
		constexpr auto AssociatedSpline = 0x450; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x458; // int32_t
		constexpr auto SegmentOverlapAmount = 0x45c; // float
		constexpr auto TerrainColor = 0x460; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x470; // int32_t
		constexpr auto SpriteCollisionDomain = 0x474; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x478; // float
		constexpr auto CachedBodySetup = 0x480; // UBodySetup*
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UCrowPingIndicatorWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CP_Ping = 0x358; // UCanvasPanel*
		constexpr auto IMG_LocateArrow = 0x360; // UImage*
		constexpr auto IMG_Ping_Point = 0x368; // UImage*
		constexpr auto IMG_Ping_BG = 0x370; // UImage*
		constexpr auto IMG_Ping = 0x378; // UImage*
		constexpr auto IMG_Ping_Active_2 = 0x380; // UImage*
		constexpr auto IMG_Ping_Active_3 = 0x388; // UImage*
		constexpr auto TB_Distance = 0x390; // UTextBlock*
		constexpr auto TB_Name = 0x398; // UTextBlock*
		constexpr auto AniWidgetActive = 0x3a0; // UWidgetAnimation*
		constexpr auto TargetActor = 0x3a8; // ACrowPingBase*
		constexpr auto ImgPingBG_Small = 0x3b0; // UImage*
		constexpr auto BorderPingItem_BG = 0x3b8; // UBorder*
		constexpr auto ImgPing_Item = 0x3c0; // UImage*
		constexpr auto BorderPingItem_Grade = 0x3c8; // UBorder*
	}

	namespace n_ACrowProjectileTankSmoke {
		constexpr auto VehicleVelocity = 0x18d0; // FVector
		constexpr auto SmokeEffect = 0x18e0; // UParticleSystem*
		constexpr auto ExplosionSound = 0x18e8; // UAkAudioEvent*
		constexpr auto ImpedimentsActorClass = 0x18f0; // AActor*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto HG_Lasersight_SIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UCrowScoreInfoDeathMatchListItem {
		constexpr auto IMG_BackGround = 0x348; // UImage*
		constexpr auto IMG_SquadLeader = 0x350; // UImage*
		constexpr auto IMG_LocalPlayer = 0x358; // UImage*
		constexpr auto IMG_SideLineL = 0x360; // UImage*
		constexpr auto IMG_SideLineR = 0x368; // UImage*
		constexpr auto HB_Contents = 0x370; // UHorizontalBox*
		constexpr auto WS_Status = 0x378; // UWidgetSwitcher*
		constexpr auto TB_PlayerRank = 0x380; // UTextBlock*
		constexpr auto TB_PlayerName = 0x388; // UTextBlock*
		constexpr auto TB_KillCount = 0x390; // UTextBlock*
		constexpr auto TB_DeathCount = 0x398; // UTextBlock*
		constexpr auto LocalPlayerBackColor = 0x3a0; // FLinearColor
		constexpr auto LocalPlayerTextColor = 0x3b0; // FLinearColor
		constexpr auto DefaultBackColor = 0x3c0; // FLinearColor
		constexpr auto DefaultTextColor = 0x3d0; // FLinearColor
		constexpr auto SquadListAlpha = 0x3e0; // float
	}

	namespace n_UCrowLobbyProfileSeasonWidget {
		constexpr auto Dropdown_All = 0x348; // UCrowDropDownWidget*
		constexpr auto Dropdown_Time = 0x350; // UCrowDropDownWidget*
		constexpr auto TB_Rank = 0x358; // UTextBlock*
		constexpr auto TB_Level = 0x360; // UTextBlock*
		constexpr auto TB_Kill = 0x368; // UTextBlock*
		constexpr auto TB_Assist = 0x370; // UTextBlock*
		constexpr auto TB_Death = 0x378; // UTextBlock*
		constexpr auto TB_Faint = 0x380; // UTextBlock*
		constexpr auto TB_TotalScore = 0x388; // UTextBlock*
		constexpr auto TB_AverageScore = 0x390; // UTextBlock*
		constexpr auto TB_WinLose = 0x398; // UTextBlock*
		constexpr auto TB_PlayTime = 0x3a0; // UTextBlock*
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_UCrowInvenCenterPanelWidget {
		constexpr auto TB_Item_Category = 0x348; // UTextBlock*
		constexpr auto TB_WeaponName = 0x350; // UTextBlock*
		constexpr auto TB_ItemDesc_Text = 0x358; // UTextBlock*
		constexpr auto TB_Value_Amount = 0x360; // UTextBlock*
		constexpr auto TB_Value_Split = 0x368; // UTextBlock*
		constexpr auto TB_AmmoType = 0x370; // UTextBlock*
		constexpr auto TB_CurrentAmmo = 0x378; // UTextBlock*
		constexpr auto TB_ReaminAmmo = 0x380; // UTextBlock*
		constexpr auto TB_MenuTitle = 0x388; // UTextBlock*
		constexpr auto IMG_Weapon = 0x390; // UCrowWidgetImage*
		constexpr auto IMG_Item = 0x398; // UCrowWidgetImage*
		constexpr auto WS_ItemTypeAction = 0x3a0; // UWidgetSwitcher*
		constexpr auto WS_WeaponType = 0x3a8; // UWidgetSwitcher*
		constexpr auto WS_ItemIcon = 0x3b0; // UWidgetSwitcher*
		constexpr auto WB_Item_Status_Desc0 = 0x3b8; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc1 = 0x3c0; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc2 = 0x3c8; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc3 = 0x3d0; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc4 = 0x3d8; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc5 = 0x3e0; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_Status_Desc6 = 0x3e8; // UCrowItemStatusDescWidget*
		constexpr auto WB_Item_DamageDrop = 0x3f0; // UUserWidget*
		constexpr auto VB_WeaponStat = 0x3f8; // UVerticalBox*
		constexpr auto VB_AmmoType = 0x400; // UVerticalBox*
		constexpr auto Slider_SplitSlider = 0x408; // USlider*
		constexpr auto HB_AmmoType = 0x410; // UHorizontalBox*
		constexpr auto HB_BurstType = 0x418; // UHorizontalBox*
		constexpr auto IMG_Seperate = 0x420; // UImage*
		constexpr auto CP_ItemSplitInfo = 0x428; // UCanvasPanel*
		constexpr auto TB_ReaminAmmoBar = 0x430; // UTextBlock*
		constexpr auto TB_Descripction = 0x438; // UTextBlock*
		constexpr auto MaxAmountValue = 0x440; // float
		constexpr auto IsDropMode = 0x444; // bool
	}

	namespace n_UCrowPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ACrowItemTableOverviewSMC {
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UWB_EnemyWatching_PlayerIndicator_C {
		constexpr auto Image = 0x370; // UImage*
		constexpr auto Image_23 = 0x378; // UImage*
		constexpr auto IMG_LocateArrow = 0x380; // UImage*
	}

	namespace n_ACrowGameStateBombMission {
		constexpr auto ScoreArray = 0x410; // TArray<FCrowScoreInfoBombMission>
		constexpr auto RedTeamPlayerStartArray = 0x420; // TArray<ACrowPlayerStartTDM*>
		constexpr auto BlueTeamPlayerStartArray = 0x430; // TArray<ACrowPlayerStartTDM*>
		constexpr auto CrowGameRoundState = 0x440; // ECrowGameRoundState
		constexpr auto RoundTimeSec = 0x444; // float
		constexpr auto CurrentRoundCount = 0x448; // char
		constexpr auto CurrentRoundTransitionCount = 0x449; // char
		constexpr auto bIsWinToTimeout = 0x44a; // bool
		constexpr auto FirstRoundWaitTimeSec = 0x44c; // float
		constexpr auto RoundWaitTimeSec = 0x450; // float
		constexpr auto RoundMatchTimeSec = 0x454; // float
		constexpr auto RoundFinishTimeSec = 0x458; // float
		constexpr auto TotalRoundCount = 0x45c; // char
		constexpr auto RoundTransitionCount = 0x45d; // char
		constexpr auto LoadoutTimeSec = 0x460; // float
		constexpr auto CompositionCTimeSec = 0x464; // float
		constexpr auto AttackerTeam = 0x468; // char
		constexpr auto SpectatorModeWaitTimeSec = 0x46c; // float
		constexpr auto bIsAvailableLoadout = 0x470; // bool
		constexpr auto RedTeamWinCount = 0x471; // char
		constexpr auto BlueTeamWinCount = 0x472; // char
		constexpr auto RoundWinTeamID = 0x473; // char
		constexpr auto UnearnedWinTeamID = 0x474; // char
		constexpr auto bIsPlantCompositionC = 0x475; // bool
		constexpr auto PlantCompositionCPlayerId = 0x478; // int32_t
		constexpr auto TeamWinByPlantCompositionC = 0x47c; // char
		constexpr auto TeamWinByDefuseCompositionC = 0x47d; // char
		constexpr auto CompositionCHolderPlayer = 0x480; // ACrowPlayerStateBase*
		constexpr auto bIsSelectedCompositionCHolder = 0x488; // bool
		constexpr auto TeamInfoMap = 0x490; // TMap<char, FCrowTeamInfoBombMission>
		constexpr auto PlayerCountMap = 0x4e0; // TMap<char, FCrowPlayerCountInfoBombMission>
		constexpr auto RemainRoundTime = 0x530; // UCrowRemainTimeSync*
	}

	namespace n_ACrowImpedimentsActor {
		constexpr auto ImpedimentsParticleComp = 0x220; // UParticleSystemComponent*
	}

	namespace n_UGroomHairGroupsPreview {
		constexpr auto Groups = 0x28; // TArray<FGroomHairGroupPreview>
	}

	namespace n_UCrowDynamicFoliageManager {
		constexpr auto ClearColor = 0xb0; // FLinearColor
		constexpr auto PixelSizePerMeter = 0xc0; // float
		constexpr auto CaptureSize = 0xc4; // float
		constexpr auto RenderTarget = 0xc8; // UTextureRenderTarget2D*
		constexpr auto CrowParamCollection = 0xd0; // UMaterialParameterCollection*
		constexpr auto DynamicFoliageConfig = 0xd8; // UCrowDynamicFoliageConfig*
		constexpr auto FoliageParamSetting = 0xe0; // UCrowFoliageParamSetting*
		constexpr auto MaskRotation = 0xe8; // float
		constexpr auto DrawComponent = 0xf0; // UCrowDynamicFoliageDrawComponent*
		constexpr auto bNeedCleanup = 0xf8; // bool
		constexpr auto FrameCount = 0xfc; // int32_t
		constexpr auto RemoveAffectorList = 0x100; // TArray<int32_t>
		constexpr auto AddAffectorList = 0x110; // TArray<TWeakObjectPtr<UCrowFoliageAffectorComponent>>
		constexpr auto MapFoliageAffector = 0x120; // TMap<int32_t, TWeakObjectPtr<UCrowFoliageAffectorComponent>>
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UCrowReplayPlayerWidget {
		constexpr auto BookMarkWidget = 0x348; // UUserWidget*
		constexpr auto BookMarkSize = 0x350; // FVector2D
		constexpr auto BT_Pause = 0x358; // UCrowButton*
		constexpr auto BT_Play = 0x360; // UCrowButton*
		constexpr auto BT_PlayRatePlus = 0x368; // UCrowButton*
		constexpr auto BT_PlayRateMinus = 0x370; // UCrowButton*
		constexpr auto BT_Next = 0x378; // UCrowButton*
		constexpr auto BT_Prev = 0x380; // UCrowButton*
		constexpr auto BT_BookMarkPlus = 0x388; // UCrowButton*
		constexpr auto BT_BookMarkMinus = 0x390; // UCrowButton*
		constexpr auto TB_Username = 0x398; // UTextBlock*
		constexpr auto TB_Playrate = 0x3a0; // UTextBlock*
		constexpr auto TB_CurrentGameTime = 0x3a8; // UTextBlock*
		constexpr auto TB_MaxGameTime = 0x3b0; // UTextBlock*
		constexpr auto CP_TrackBar = 0x3b8; // UCanvasPanel*
		constexpr auto CP_HelpBar = 0x3c0; // UCanvasPanel*
		constexpr auto CP_BookMarkArea = 0x3c8; // UCanvasPanel*
		constexpr auto CP_PlayTime = 0x3d0; // UCanvasPanel*
		constexpr auto WS_ViewMode = 0x3d8; // UWidgetSwitcher*
		constexpr auto PlayPauseSwitcher = 0x3e0; // UWidgetSwitcher*
		constexpr auto SB_PlayScroll = 0x3e8; // USlider*
		constexpr auto ReplayController = 0x3f0; // TWeakObjectPtr<ACrowPlayerControllerReplay>
		constexpr auto SelectedBookMark = 0x3f8; // UCrowBookMarkWidget*
	}

	namespace n_UCrowVehiclePhysicalMaterial {
		constexpr auto MaxEngineRPMForwardMultiply = 0x80; // float
		constexpr auto MaxEngineRPMReverseMultiply = 0x84; // float
		constexpr auto MaxEngineTorqueMultiply = 0x88; // float
		constexpr auto WheelFrictionMultiply = 0x8c; // float
		constexpr auto ImpactFx = 0x90; // UParticleSystem*
		constexpr auto IgnoreMetalFx = 0x98; // bool
	}

	namespace n_UCrowServerOnlyCharacterControll {
		constexpr auto CharacterOwner = 0xb0; // ACrowCharacterPawn*
		constexpr auto MoveTypeInfo = 0xb8; // FCrowServerOnlyCharacterInfo
		constexpr auto MoveForwardInfo = 0xd0; // FCrowServerOnlyCharacterInfo
		constexpr auto MoveRightInfo = 0xe8; // FCrowServerOnlyCharacterInfo
		constexpr auto LookRightInfo = 0x100; // FCrowServerOnlyCharacterInfo
		constexpr auto LookUpInfo = 0x118; // FCrowServerOnlyCharacterInfo
		constexpr auto WeaponFire = 0x130; // FCrowServerOnlyCharacterInfo
	}

	namespace n_UCrowSquadNotiTimerWidget {
		constexpr auto TB_Timer = 0x370; // UTextBlock*
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UWB_Vehicle_Warning_Heli_C {
		constexpr auto Ani_Damage_Orange = 0x418; // UWidgetAnimation*
		constexpr auto Ani_Damage_Yellow = 0x420; // UWidgetAnimation*
		constexpr auto NewAnimation = 0x428; // UWidgetAnimation*
		constexpr auto Ani_MissileIncoming = 0x430; // UWidgetAnimation*
		constexpr auto Ani_Damage_Red = 0x438; // UWidgetAnimation*
		constexpr auto IMG_Base_BG = 0x440; // UImage*
		constexpr auto IMG_BG = 0x448; // UImage*
		constexpr auto IMG_IMG_Effect = 0x450; // UImage*
		constexpr auto IMG_Missile = 0x458; // UImage*
		constexpr auto IMG_Warning = 0x460; // UImage*
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UCrowObjectiveBoardWidget {
		constexpr auto WB_Objective_WIdget = 0x348; // UUserWidget*
		constexpr auto WB_SquadWidget = 0x350; // UCrowSquadWidget*
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_ACrowAIZoneRewardBase {
		constexpr auto RewardSupplyBoxActor = 0x220; // ACrowSupplyEventBoxActor*
		constexpr auto FixItemIndexList = 0x228; // TArray<int32_t>
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_UDrawPolyPathProperties {
		constexpr auto OutputType = 0x60; // EDrawPolyPathOutputMode
		constexpr auto WidthMode = 0x64; // EDrawPolyPathWidthMode
		constexpr auto Width = 0x68; // float
		constexpr auto HeightMode = 0x6c; // EDrawPolyPathHeightMode
		constexpr auto Height = 0x70; // float
		constexpr auto RampStartRatio = 0x74; // float
		constexpr auto bSnapToWorldGrid = 0x78; // bool
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UCrowCharacterAnimTableManager {
		constexpr auto PrivateTP = 0x28; // UDataTable*
		constexpr auto PrivateFP = 0x30; // UDataTable*
		constexpr auto PrivateShoot = 0x38; // UDataTable*
		constexpr auto PrivateReload = 0x40; // UDataTable*
		constexpr auto ItemAction = 0x48; // UDataTable*
		constexpr auto OnVehicle = 0x50; // UDataTable*
		constexpr auto Common = 0x58; // UDataTable*
		constexpr auto GroundPoseTable = 0x60; // UDataTable*
		constexpr auto VehiclePoseTable = 0x68; // UDataTable*
		constexpr auto GripPoseTable = 0x70; // UDataTable*
		constexpr auto CommonAnimTable = 0x78; // UDataTable*
	}

	namespace n_ACrowSceneGame {
		constexpr auto WeaponLoadOutLevel = 0x940; // ULevelStreamingDynamic*
		constexpr auto WeaponLoadoutObjectBider = 0x948; // ACrowWeaponLoadoutObjectBider*
		constexpr auto IngameCustomWeapon = 0x950; // ACrowWeaponLobby*
		constexpr auto TestCustomWeapon = 0x958; // ACrowWeaponLobby*
		constexpr auto SkyLightArray = 0x960; // TArray<ASkyLight*>
		constexpr auto DefaultCustomWeaponRotion = 0x970; // FRotator
		constexpr auto DragStartCustomWeaponRotion = 0x97c; // FRotator
		constexpr auto DragStartScreenPosition = 0x988; // FVector2D
		constexpr auto WeaponRotationMode = 0x990; // ERotationMode
		constexpr auto CurrentLoadOutMode = 0x991; // ELoadOutMode
		constexpr auto SaveValueMapIndex = 0x994; // int32_t
		constexpr auto SaveValueWeaponIndex = 0x998; // int64_t
		constexpr auto SaveValueWeaponSlot = 0x9a0; // int8_t
		constexpr auto SaveValueUserServerKey = 0x9a8; // int64_t
		constexpr auto SaveValueAppearanceIndex = 0x9b0; // int32_t [0x8]
		constexpr auto SaveNickName = 0x9d0; // FString
		constexpr auto CurrentCameraAppearanceType = 0x9e0; // ECrowCharacterAppearanceType
		constexpr auto CurrCamera = 0x9e8; // AActor*
	}

	namespace n_ABP_SkydivingPawn_C {
		constexpr auto Vel_Arrow_Z = 0xac0; // UArrowComponent*
		constexpr auto Vel_Arrow_Y = 0xac8; // UArrowComponent*
		constexpr auto Vel_Arrow_X = 0xad0; // UArrowComponent*
		constexpr auto Camera = 0xad8; // UCameraComponent*
		constexpr auto CrowSpringArm = 0xae0; // UCrowSpringArmComponent*
		constexpr auto Vel_Arrow = 0xae8; // UArrowComponent*
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3a8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b0; // bool
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_ACrowLobbyBinderSwitchActor {
		constexpr auto SceneMode = 0x220; // ELobbySceneMode
		constexpr auto CharacterCount = 0x224; // ECrowSampleCharacterCount
		constexpr auto SampleCharacterInfo = 0x228; // FCrowSampleCharacterInfo
		constexpr auto LobbyWeaponInfo_Primary = 0x240; // FCrowSampleWeaponInfo
		constexpr auto LobbyWeaponInfo_Secondary = 0x258; // FCrowSampleWeaponInfo
		constexpr auto LobbyWeaponInfo_Melee = 0x270; // FCrowSampleWeaponInfo
		constexpr auto LobbyWeaponInfo_Throw1 = 0x288; // FCrowSampleWeaponInfo
		constexpr auto LobbyWeaponInfo_Throw2 = 0x2a0; // FCrowSampleWeaponInfo
		constexpr auto SampleWeaponInfo = 0x2b8; // FCrowSampleWeaponInfo
		constexpr auto SwitchRoot = 0x2d0; // USceneComponent*
		constexpr auto SphereMesh = 0x2d8; // UStaticMeshComponent*
		constexpr auto FrameCount = 0x2e0; // int32_t
		constexpr auto InputPlayerController = 0x2e8; // APlayerController*
		constexpr auto MainCharacters = 0x2f0; // TMap<char, ACrowLobbyCharacterPawn*>
		constexpr auto MainCharacterWeapons = 0x340; // TMap<char, ACrowWeaponLobby*>
		constexpr auto CustomCharacterPawn = 0x390; // ACrowLobbyCharacterPawn*
		constexpr auto CustomCharacterWeapon = 0x398; // ACrowWeaponLobby*
		constexpr auto LobbyWeapon = 0x3a0; // ACrowWeaponLobby*
		constexpr auto LobbySampleWeapons = 0x3a8; // TArray<ACrowWeaponLobby*>
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UCrowVehicleCrosshairAbramCannon {
		constexpr auto IMG_Crosshair_Gauge_Base = 0x428; // UImage*
		constexpr auto IMG_Crosshair_Gauge = 0x430; // UImage*
		constexpr auto AmmoTypeTextBlock = 0x438; // UTextBlock*
		constexpr auto ImgCrosshairGuageMaterial = 0x440; // UMaterialInstanceDynamic*
		constexpr auto WeaponInfoWidget = 0x448; // UCrowWeaponInfoWidget*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UCrowWorldMapIconPing {
		constexpr auto VisibleWorldMap = 0x1b0; // bool
		constexpr auto VisibleMiniMap = 0x1b1; // bool
		constexpr auto VisibleRespawnMap = 0x1b2; // bool
		constexpr auto TargetPing = 0x1b8; // ACrowPingBase*
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_UCrowCustomizeEmotionRadialWidget {
		constexpr auto WB_Customize_EmotionRadialMenu_5Button_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_EmotionRadialMenu_5Button_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_EmotionRadialMenu_5Button_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_EmotionRadialMenu_5Button_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_EmotionRadialMenu_5Button_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
		constexpr auto IMG_CircleSelect = 0x3f8; // UImage*
		constexpr auto CP_MouseTip = 0x400; // UCanvasPanel*
		constexpr auto CP_HoverIcon = 0x408; // UCanvasPanel*
		constexpr auto State = 0x410; // ECrowCustomizeEmotionRadialState
		constexpr auto RegistAnimation = 0x418; // UWidgetAnimation*
	}

	namespace n_UCrowVehicleHUDBase {
		constexpr auto VehiclePawn = 0x348; // ACrowVehiclePawn*
		constexpr auto SB_Vehicle_Croshair = 0x350; // USizeBox*
		constexpr auto SB_Buttom = 0x358; // USizeBox*
		constexpr auto CP_HUD_Vehicle = 0x360; // UCanvasPanel*
		constexpr auto WB_LockOnAlert = 0x368; // UUserWidget*
		constexpr auto crosshairWidget = 0x370; // UCrowWeaponCrosshairBase*
		constexpr auto SpecialCrosshairWidget = 0x378; // UCrowWeaponCrosshairBase*
		constexpr auto LockOnStartEvent = 0x380; // UAkAudioEvent*
		constexpr auto LockOnEventID = 0x388; // int32_t
	}

	namespace n_AUPSGroupMemberMovementPoint {
		constexpr auto BillboardComponent = 0x220; // UBillboardComponent*
	}

	namespace n_UCrowReplayListItemWidget {
		constexpr auto BT_ListSlot = 0x348; // UCrowToggleButton*
		constexpr auto IMG_Lock = 0x350; // UImage*
		constexpr auto TB_Date = 0x358; // UTextBlock*
		constexpr auto TB_MapMode = 0x360; // UTextBlock*
		constexpr auto TB_TotalTime = 0x368; // UTextBlock*
		constexpr auto TB_FileSize = 0x370; // UTextBlock*
		constexpr auto TB_Version = 0x378; // UTextBlock*
		constexpr auto TB_Usable = 0x380; // UTextBlock*
		constexpr auto IMG_Deselect = 0x388; // UImage*
		constexpr auto IMG_Lock_Select = 0x390; // UImage*
		constexpr auto TB_Date_Select = 0x398; // UTextBlock*
		constexpr auto TB_MapMode_Select = 0x3a0; // UTextBlock*
		constexpr auto TB_TotalTime_Select = 0x3a8; // UTextBlock*
		constexpr auto TB_FileSize_Select = 0x3b0; // UTextBlock*
		constexpr auto TB_Version_Select = 0x3b8; // UTextBlock*
		constexpr auto TB_Usable_Select = 0x3c0; // UTextBlock*
		constexpr auto RootWidget = 0x3c8; // UCrowReplayWidget*
		constexpr auto Info = 0x3d0; // UCrowReplayInfo*
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UCrowReplayInfo {
		constexpr auto ReplayName = 0x28; // FString
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Timestamp = 0x48; // FDateTime
		constexpr auto LengthInMS = 0x50; // int32_t
		constexpr auto SizeOfByte = 0x54; // int32_t
		constexpr auto Version = 0x58; // int32_t
		constexpr auto bLock = 0x5c; // bool
		constexpr auto MapIndex = 0x60; // int32_t
		constexpr auto ServerKey = 0x68; // uint64_t
		constexpr auto MyPlayerName = 0x70; // FString
		constexpr auto MySquadList = 0x80; // TArray<FString>
		constexpr auto CheckPointList = 0x90; // TArray<FTimespan>
	}

	namespace n_UCrowSettingsDefaultConfig {
		constexpr auto KeySlotCategoryInfos = 0x28; // TArray<FKeySlotCategoryInfo>
		constexpr auto KeySlotUICategoryInfos = 0x38; // TArray<FKeySlotCategoryInfo>
		constexpr auto ActionKeySlots = 0x48; // TArray<FActionKeySlot>
		constexpr auto AxisKeySlots = 0x58; // TArray<FAxisKeySlot>
		constexpr auto SettingItems = 0x68; // TArray<FSettingItem>
		constexpr auto FixedKeys = 0x78; // TArray<FKey>
		constexpr auto OptionExplanations = 0x88; // TArray<FOptionExplanation>
		constexpr auto AxisToBehaviourNames = 0x98; // TArray<FAxisNameToBehaviourName>
		constexpr auto AllowedResolutions = 0xa8; // TArray<FIntPoint>
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCrowGRACWidget {
		constexpr auto HideAnimationName = 0x358; // FName
		constexpr auto DisplayTime = 0x360; // float
	}

	namespace n_UOceanGenerator {
		constexpr auto CollisionBoxes = 0x28; // TArray<UOceanBoxCollisionComponent*>
		constexpr auto CollisionHullSets = 0x38; // TArray<UOceanCollisionComponent*>
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_AUPSGroupMovementAIController {
		constexpr auto OnAIStartMovementToLocationDelegate = 0x328; // FMulticastInlineDelegate
		constexpr auto OnAIStartMovementToActorDelegate = 0x338; // FMulticastInlineDelegate
	}

	namespace n_UCrowWeaponManagerComponent {
		constexpr auto CharacterOwner = 0xb0; // ACrowCharacterPawn*
		constexpr auto GameInventory = 0xb8; // UCrowGameInvenComponent*
		constexpr auto IsPrewWeaponAiming = 0xc0; // bool
		constexpr auto CrowInGameHUD = 0xc8; // ACrowGameHUDBase*
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x440; // FColor
		constexpr auto ArrowSize = 0x444; // float
		constexpr auto ArrowLength = 0x448; // float
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto bIsScreenSizeScaled = 0x450; // char : 1
		constexpr auto bTreatAsASprite = 0x450; // char : 1
	}

	namespace n_UCrowBoatsConfigEngine {
		constexpr auto Debug = 0x28; // bool
		constexpr auto BodySocketName = 0x2c; // FName
		constexpr auto EngineSizeRadius = 0x34; // float
		constexpr auto MinWaterDepthForEngine = 0x38; // float
		constexpr auto SpeedMaxKmPH = 0x3c; // float
		constexpr auto SpeedReverseMaxKmPH = 0x40; // float
		constexpr auto SpeedIdleKmPH = 0x44; // float
		constexpr auto BrakeStrength = 0x48; // float
		constexpr auto AccelerationTime = 0x4c; // float
		constexpr auto SteeringMultiply = 0x50; // float
		constexpr auto SteeringRatioMax = 0x54; // float
		constexpr auto SteeringSpeedMax = 0x58; // float
		constexpr auto AccelerationInputSetting = 0x5c; // FCrowVehicleInputSetting
		constexpr auto SteeringInputSetting = 0x64; // FCrowVehicleInputSetting
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UWB_EnemyWatching_EnemyIndicator_C {
		constexpr auto IMG_LocateArrow = 0x370; // UImage*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_UCrowHUDWeaponUnlockWidget {
		constexpr auto TB_Level = 0x348; // UTextBlock*
		constexpr auto TB_LevelUpMsg = 0x350; // UTextBlock*
		constexpr auto TB_UnLockMsg = 0x358; // UTextBlock*
		constexpr auto IMG_Icon = 0x360; // UImage*
		constexpr auto AniShowWeaponLevelUp = 0x368; // UWidgetAnimation*
		constexpr auto AniShowWeaponUnlock = 0x370; // UWidgetAnimation*
		constexpr auto AniHide = 0x378; // UWidgetAnimation*
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UCrowVehicleHUDMh6 {
		constexpr auto CP_FPView = 0x390; // UCanvasPanel*
		constexpr auto WB_Vehicle_Level = 0x398; // UCrowVehicleWidgetLevel*
		constexpr auto CrosshairImages = 0x3a0; // TArray<UImage*>
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x448; // TArray<FNavigationLink>
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UCrowBinderTargetBase {
		constexpr auto RootPawn = 0x28; // APawn*
		constexpr auto OwnerBinder = 0x30; // UCrowBinderActorComponent*
		constexpr auto BindingFlags = 0x38; // int32_t
	}

	namespace n_UCrowScoreInfoConquestUSItem {
		constexpr auto IMG_BackGround = 0x348; // UImage*
		constexpr auto IMG_Class = 0x350; // UImage*
		constexpr auto IMG_IsLocalPlayer = 0x358; // UImage*
		constexpr auto TB_NickName = 0x360; // UTextBlock*
		constexpr auto TB_Score = 0x368; // UTextBlock*
		constexpr auto TB_CurrentRanking = 0x370; // UTextBlock*
		constexpr auto TB_EnemyDying = 0x378; // UTextBlock*
		constexpr auto TB_Kill = 0x380; // UTextBlock*
		constexpr auto TB_Death = 0x388; // UTextBlock*
		constexpr auto TB_Latency = 0x390; // UTextBlock*
		constexpr auto CP_Squad = 0x398; // UCanvasPanel*
		constexpr auto IMG_SquadColor = 0x3a0; // UImage*
		constexpr auto TB_SquadIndex = 0x3a8; // UTextBlock*
		constexpr auto IMG_SquadLeader = 0x3b0; // UImage*
		constexpr auto LocalPlayerColor = 0x3b8; // FLinearColor
		constexpr auto EvenCurrentRankingBackgroundColor = 0x3c8; // FLinearColor
		constexpr auto OddCurrentRankingBackgroundColor = 0x3d8; // FLinearColor
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UCrowVehicleWidgetSeat {
		constexpr auto SeatCellInfos = 0x358; // TArray<FCrowVehicleSeatCell>
		constexpr auto SeatIcons = 0x368; // TArray<FCrowVehicleWidgetSeatIcon>
		constexpr auto SeatIconImageList = 0x378; // TArray<UImage*>
		constexpr auto SeatIconSquadWidgetList = 0x388; // TArray<UCrowSeatSquadIconWidget*>
	}

	namespace n_UUPSAITask_AIRotateToTarget {
		constexpr auto OnRotationTaskFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto AIC = 0x78; // AAIController*
		constexpr auto Character = 0x80; // ACharacter*
		constexpr auto TargetActor = 0x88; // AActor*
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_ACLSCharacter {
		constexpr auto IsPressSprintKey = 0x4c8; // bool
		constexpr auto CurrentLadder = 0x4d0; // AActor*
		constexpr auto bIsProned = 0x4d8; // char : 1
		constexpr auto bIsSprinted = 0x4d8; // char : 1
		constexpr auto bIsWalked = 0x4d8; // char : 1
		constexpr auto bIsLookedFocus = 0x4d8; // char : 1
		constexpr auto bRightShoulder = 0x4d8; // char : 1
		constexpr auto bIsLookAround = 0x4d8; // char : 1
		constexpr auto bUnresolvedReplication_IsProned = 0x4d8; // char : 1
		constexpr auto bUnresolvedReplication_IsCrouched = 0x4d8; // char : 1
		constexpr auto bUnresolvedReplication_IsSprint = 0x4d9; // char : 1
		constexpr auto bUnresolvedReplication_IsWalk = 0x4d9; // char : 1
		constexpr auto bUnresolvedReplication_IsLookFocus = 0x4d9; // char : 1
		constexpr auto LookUpDownRate = 0x4dc; // float
		constexpr auto LookLeftRightRate = 0x4e0; // float
		constexpr auto LookDeltaSeconds = 0x4e4; // float
		constexpr auto StandToCrouchAnimRate = 0x4e8; // float
		constexpr auto StandToProneAnimRate = 0x4ec; // float
		constexpr auto CrouchToStandAnimRate = 0x4f0; // float
		constexpr auto CrouchToProneAnimRate = 0x4f4; // float
		constexpr auto ProneToStandAnimRate = 0x4f8; // float
		constexpr auto ProneToCrouchAnimRate = 0x4fc; // float
		constexpr auto bUseProneLimitedArea = 0x500; // char : 1
		constexpr auto CachedCharacterMovement = 0x508; // UCLSCharacterMovement*
		constexpr auto AdjustClientRotationMode = 0x510; // ECLSRotationMode
		constexpr auto VaultTimeline = 0x518; // UTimelineComponent*
		constexpr auto VaultTimelineCurve = 0x520; // UCurveFloat*
		constexpr auto RotationMode = 0x528; // ECLSRotationMode
		constexpr auto DesiredViewMode = 0x529; // ECLSViewMode
		constexpr auto ViewMode = 0x52a; // ECLSViewMode
		constexpr auto DesiredRotationMode = 0x52b; // ECLSRotationMode
		constexpr auto CurrentMovementMode = 0x52c; // ECLSMovementMode
		constexpr auto PrevMovementMode = 0x52d; // ECLSMovementMode
		constexpr auto MovementAction = 0x52e; // ECLSMovementAction
		constexpr auto WeaponAction = 0x52f; // ECLSWeaponAction
		constexpr auto CommonAction = 0x530; // ECLSCommonAction
		constexpr auto BattleStance = 0x531; // ECLSBattleStance
		constexpr auto OverlayState = 0x532; // ECLSOverlayState
		constexpr auto DesiredPeekState = 0x533; // ECLSPeekState
		constexpr auto ActualPeekState = 0x534; // ECLSPeekState
		constexpr auto bDesiredFiringState = 0x535; // bool
		constexpr auto bActualFiringState = 0x536; // bool
		constexpr auto LadderState = 0x537; // ECLSLadderState
		constexpr auto LookingRotation = 0x538; // FRotator
		constexpr auto LookAroundRotation = 0x544; // FRotator
		constexpr auto Acceleration = 0x550; // FVector
		constexpr auto bIsMoving = 0x55c; // bool
		constexpr auto bHasMovementInput = 0x55d; // bool
		constexpr auto LastVelocityRotation = 0x560; // FRotator
		constexpr auto LastMovementInputRotation = 0x56c; // FRotator
		constexpr auto Speed = 0x578; // float
		constexpr auto MovementInputAmount = 0x57c; // float
		constexpr auto AimYawRate = 0x580; // float
		constexpr auto SubRootOffset = 0x584; // FVector
		constexpr auto CurrentSlopeAngle = 0x590; // float
		constexpr auto bUseArmLOverwrite = 0x594; // bool
		constexpr auto CameraParameters = 0x595; // FCLSCameraParameters
		constexpr auto MovementModel = 0x598; // FDataTableRowHandle
		constexpr auto MovementData = 0x5a8; // FCLSMovementSettingsData
		constexpr auto SmoothTargetRotation = 0x6c8; // FRotator
		constexpr auto TurnTargetRotation = 0x6d4; // FRotator
		constexpr auto InAirRotation = 0x6e0; // FRotator
		constexpr auto YawOffset = 0x6ec; // float
		constexpr auto bRotateOnChangingProne = 0x6f0; // bool
		constexpr auto bPendingGroundRotate = 0x6f1; // bool
		constexpr auto bIsKeepWalking = 0x6f2; // bool
		constexpr auto VaultParams = 0x6f8; // FCLSVaultParams
		constexpr auto VaultLedgeLS = 0x720; // FCLSComponentTransform
		constexpr auto VaultTarget = 0x840; // FTransform
		constexpr auto VaultActualStartOffset = 0x870; // FTransform
		constexpr auto VaultAnimatedStartOffset = 0x8a0; // FTransform
		constexpr auto GroundedTraceSettings = 0x8d0; // FCLSVaultTraceSettings
		constexpr auto FallingTraceSettings = 0x8ec; // FCLSVaultTraceSettings
		constexpr auto RagdollLocation = 0x908; // FVector
		constexpr auto RagdollVelocity = 0x914; // FVector
		constexpr auto bRagdollOnGround = 0x920; // bool
		constexpr auto bRagdollFaceUp = 0x921; // bool
		constexpr auto PreviousVelocity = 0x924; // FVector
		constexpr auto PreviousAimYaw = 0x930; // float
		constexpr auto PreviousSlopeAngle = 0x934; // float
		constexpr auto BattleStanceTimeSetting = 0x938; // FCLSCharacterBattleStanceTime
		constexpr auto Vault1MCurve = 0x948; // UCurveVector*
		constexpr auto Vault2MCurve = 0x950; // UCurveVector*
		constexpr auto Vault_2M_Default = 0x958; // FCLSVaultAsset
		constexpr auto Vault_1M_Default = 0x998; // FCLSVaultAsset
		constexpr auto Vault_1M_RH = 0x9d8; // FCLSVaultAsset
		constexpr auto Vault_1M_LH = 0xa18; // FCLSVaultAsset
		constexpr auto Vault_1M_2H = 0xa58; // FCLSVaultAsset
		constexpr auto Vault_1M_Box = 0xa98; // FCLSVaultAsset
		constexpr auto Vault_Low70 = 0xad8; // FCLSVaultAsset
		constexpr auto Vault_Low70_Melee = 0xb18; // FCLSVaultAsset
		constexpr auto JumpOver_Low70 = 0xb58; // FCLSVaultAsset
		constexpr auto JumpOver_Low70_Melee = 0xb98; // FCLSVaultAsset
		constexpr auto JumpOver_1M = 0xbd8; // FCLSVaultAsset
		constexpr auto JumpOver_1M_Under = 0xc18; // FCLSVaultAsset
		constexpr auto JumpOver_1M_Damage = 0xc58; // FCLSVaultAsset
		constexpr auto JumpOver_1M_Dying = 0xc98; // FCLSVaultAsset
		constexpr auto JumpOver_1M_Dead = 0xcd8; // FCLSVaultAsset
		constexpr auto JumpOver_2M = 0xd18; // FCLSVaultAsset
		constexpr auto JumpOver2M_Damage = 0xd58; // FCLSVaultAsset
		constexpr auto JumpOver_2M_Under = 0xd98; // FCLSVaultAsset
		constexpr auto JumpOver_2M_Dying = 0xdd8; // FCLSVaultAsset
		constexpr auto JumpOver_2M_Dead = 0xe18; // FCLSVaultAsset
		constexpr auto JumpOver_Window = 0xe58; // FCLSVaultAsset
		constexpr auto JumpOver_Window_Under = 0xe98; // FCLSVaultAsset
		constexpr auto NotMovingPivotOffset = 0xed8; // FVector
		constexpr auto WalkingPivotOffset = 0xee4; // FVector
		constexpr auto RunningPivotOffset = 0xef0; // FVector
		constexpr auto SprintingPivotOffset = 0xefc; // FVector
		constexpr auto CrouchSprintingPivotOffset = 0xf08; // FVector
		constexpr auto CrouchPivotOffsetZRatio = 0xf14; // float
		constexpr auto PronePivotOffsetZRatio = 0xf18; // float
		constexpr auto AddPronePivotOffset = 0xf1c; // FVector
		constexpr auto WalkingPivotLerpSpeed = 0xf28; // FVector
		constexpr auto RunningPivotLerpSpeed = 0xf34; // FVector
		constexpr auto SprintingPivotLerpSpeed = 0xf40; // FVector
		constexpr auto CrouchSprintingPivotLerpSpeed = 0xf4c; // FVector
		constexpr auto WalkingAddFOV = 0xf58; // float
		constexpr auto RunningAddFOV = 0xf5c; // float
		constexpr auto SprintingAddFOV = 0xf60; // float
		constexpr auto CrouchSprintingAddFOV = 0xf64; // float
		constexpr auto WalkingAddFOVLerpSpeed = 0xf68; // float
		constexpr auto RunningAddFOVLerpSpeed = 0xf6c; // float
		constexpr auto SprintingAddFOVLerpSpeed = 0xf70; // float
		constexpr auto CrouchSprintingAddFOVLerpSpeed = 0xf74; // float
		constexpr auto DeadPivotOffset = 0xf78; // FVector
		constexpr auto ShoulderViewChangedInterpolationSpeed = 0xf84; // float
		constexpr auto FPStandingOffset = 0xf88; // FVector
		constexpr auto FPCrouchingOffset = 0xf94; // FVector
		constexpr auto PrePivot = 0xfa0; // FVector
		constexpr auto bShoulderViewChanged = 0xfac; // bool
		constexpr auto PrevPivotY = 0xfb0; // float
		constexpr auto CurrentAdditionalFPCameraOffset = 0xfb4; // FVector
		constexpr auto IsJumping = 0x10cc; // bool
		constexpr auto IsJumpOverVault = 0x10cd; // bool
		constexpr auto CurrVaultType = 0x10ce; // ECLSVaultType
		constexpr auto IsPlayingVault = 0x10cf; // bool
		constexpr auto PrevVaultPos = 0x10d0; // FVector
		constexpr auto StartVaultPosition = 0x10dc; // float
		constexpr auto PrevZValue = 0x10e0; // float
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UUPSEnemyAction {
		constexpr auto OnActionFinishedDelegate = 0x30; // FMulticastInlineDelegate
		constexpr auto Character = 0x40; // ACharacter*
		constexpr auto EnemyActionScripts = 0x50; // TArray<UUPSEnemyActionScript*>
		constexpr auto ActionConditions = 0x60; // TArray<UUPSActionCondition*>
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UCrowWorldLightProbeVolume {
		constexpr auto LightForward = 0x460; // FVector
		constexpr auto LightRotation = 0x46c; // FRotator
		constexpr auto LightProbeSetting = 0x478; // FCrowWorldLightProbeSetting
		constexpr auto LightProbeVolumeSetting = 0x4c4; // FCrowWorldLightProbeVolumeSetting
		constexpr auto LightGroups = 0x4e8; // TArray<FCrowWorldLightGroup>
		constexpr auto LightProbes = 0x4f8; // TArray<UCrowWorldLightProbe*>
	}

	namespace n_UAkMacInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UCrowConquestMeteorShowerPoint {
		constexpr auto Billboard = 0x1f8; // UBillboardComponent*
		constexpr auto IconScale = 0x200; // float
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UCrowLobbyProfileMercenaryWidget {
		constexpr auto Dropdown_All = 0x348; // UCrowDropDownWidget*
		constexpr auto Dropdown_Time = 0x350; // UCrowDropDownWidget*
		constexpr auto TB_Rank = 0x358; // UTextBlock*
		constexpr auto TB_Grade = 0x360; // UTextBlock*
		constexpr auto TB_Kill = 0x368; // UTextBlock*
		constexpr auto TB_Assist = 0x370; // UTextBlock*
		constexpr auto TB_Death = 0x378; // UTextBlock*
		constexpr auto TB_Faint = 0x380; // UTextBlock*
		constexpr auto TB_TotalScore = 0x388; // UTextBlock*
		constexpr auto TB_AverageScore = 0x390; // UTextBlock*
		constexpr auto TB_WinLose = 0x398; // UTextBlock*
		constexpr auto TB_PlayTime = 0x3a0; // UTextBlock*
	}

	namespace n_UCrowCharacterAliveIconWidget {
		constexpr auto CP_DisconnectIcon = 0x3c8; // UCanvasPanel*
		constexpr auto IMG_Icon = 0x3d0; // UImage*
		constexpr auto TB_SquadNum = 0x3d8; // UTextBlock*
		constexpr auto LocalPlayerState = 0x3e0; // ACrowPlayerStateBase*
		constexpr auto TargetPlayerState = 0x3e8; // ACrowPlayerStateBase*
		constexpr auto CharacterPawn = 0x3f0; // ACrowCharacterPawn*
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UDrawPolygonToolStandardProperties {
		constexpr auto PolygonType = 0x60; // EDrawPolygonDrawMode
		constexpr auto OutputMode = 0x61; // EDrawPolygonOutputMode
		constexpr auto FeatureSizeRatio = 0x64; // float
		constexpr auto ExtrudeHeight = 0x68; // float
		constexpr auto Steps = 0x6c; // int32_t
		constexpr auto bAllowSelfIntersections = 0x70; // bool
		constexpr auto bShowGizmo = 0x71; // bool
	}

	namespace n_UCrowVehicleFSM {
		constexpr auto VehicleName = 0xb0; // FName
		constexpr auto VehiclePawn = 0xb8; // ACrowVehiclePawn*
		constexpr auto CurrentStateID = 0xc0; // ECrowVehicleState
		constexpr auto CurrentState = 0xc8; // UCrowVehicleStateBase*
		constexpr auto StateMap = 0xd0; // TMap<ECrowVehicleState, UCrowVehicleStateBase*>
		constexpr auto TaskMap = 0x120; // TMap<ECrowVehicleTask, UCrowVehicleTaskBase*>
	}

	namespace n_UCrowRotorTaskBase {
		constexpr auto RotorFSM = 0x38; // UCrowRotorFSM*
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_ACrowWeaponMelee {
		constexpr auto SavePos = 0x1eb8; // FVector
		constexpr auto CurrPos = 0x1ec4; // FVector
		constexpr auto SaveTime = 0x1ed0; // float
		constexpr auto AddDeltaTime = 0x1ed4; // float
		constexpr auto TimeStack = 0x1ed8; // TArray<FVector>
		constexpr auto HasCheck = 0x1ee8; // bool
		constexpr auto OverrideWeaponTable = 0x1ef0; // FCrowWeaponTableRow
		constexpr auto OverrideAmmoTable = 0x3110; // FCrowAmmoTableRow
		constexpr auto ThrowablePoseOnVehicleHandle = 0x3338; // FTimerHandle
	}

	namespace n_ABP_SkydivingSkillPawn_C {
		constexpr auto Vel_Arrow_Z = 0xac0; // UArrowComponent*
		constexpr auto Vel_Arrow_Y = 0xac8; // UArrowComponent*
		constexpr auto Vel_Arrow_X = 0xad0; // UArrowComponent*
		constexpr auto Camera = 0xad8; // UCameraComponent*
		constexpr auto CrowSpringArm = 0xae0; // UCrowSpringArmComponent*
		constexpr auto Vel_Arrow = 0xae8; // UArrowComponent*
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UUPSGroupMovementVisualizer {
		constexpr auto MovementGroups = 0x38; // TMap<TWeakObjectPtr<AUPSMovementGroup>, bool>
	}

	namespace n_ACrowDeathZoneVolume {
		constexpr auto DefaultTimeToDieTimeSecond = 0x258; // float
		constexpr auto DeathZoneWidgetClass = 0x260; // UUserWidget*
		constexpr auto DeathZonePostProcessVolume = 0x268; // APostProcessVolume*
		constexpr auto DeathZoneWidget = 0x270; // UCrowDeathZoneWidget*
		constexpr auto EnterActors = 0x278; // TArray<FCrowDeathZoneVolumeActor>
	}

	namespace n_URevolveBoundaryOperatorFactory {
		constexpr auto RevolveBoundaryTool = 0x30; // URevolveBoundaryTool*
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UCrowWeaponZoomDistWidget {
		constexpr auto TB_Distance = 0x370; // UTextBlock*
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x440; // FColor
		constexpr auto FrustumAngle = 0x444; // float
		constexpr auto FrustumAspectRatio = 0x448; // float
		constexpr auto FrustumStartDist = 0x44c; // float
		constexpr auto FrustumEndDist = 0x450; // float
		constexpr auto Texture = 0x458; // UTexture*
	}

	namespace n_UCrowIndicatorViewInfoPing {
		constexpr auto PingIndicatorWidget = 0x198; // UCrowPingIndicatorWidget*
	}

	namespace n_ACrowPlayerStateSquadMatch {
		constexpr auto SquadBattleInfo = 0xb78; // FCrowSquadBattleInfo
		constexpr auto AssistCount = 0xb80; // uint32_t
		constexpr auto bIsReserveZombie = 0xb84; // bool
		constexpr auto AttachedSpectatorCount = 0xb88; // int32_t
		constexpr auto SquadMatchResultInfo = 0xb90; // FCrowSquadMatchResultInfo
		constexpr auto OverlappedMiningPoint = 0xbb0; // ACrowMiningPointActor*
		constexpr auto ChageZombieEffectComp = 0xbb8; // ACrowTargetTraceEffect*
		constexpr auto RewardInfoArray = 0xbc0; // TArray<FCrowSquadRewardInfo>
	}

	namespace n_ACrowPlayerControllerReplay {
		constexpr auto ReplayPlayerWidget = 0xf20; // UCrowWidgetBase*
		constexpr auto CacheAttachedServerKey = 0xf28; // uint64_t
		constexpr auto CacheTeamId = 0xf30; // char
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_ACrowGameHUD_BombMission {
		constexpr auto MainBombMissionWidgetClass = 0x5f0; // UUserWidget*
		constexpr auto InGameLoadoutWidgetClass = 0x5f8; // UCrowInGameLoadoutWidget*
		constexpr auto InGameLoadoutPopupWidgetClass = 0x600; // UCrowInGameLoadoutPopupWidget*
		constexpr auto ObjectiveBombMissionWidgetClass = 0x608; // UUserWidget*
		constexpr auto ResultScoreBombMissionWidgetClass = 0x610; // UUserWidget*
		constexpr auto StartMatchWidgetClass = 0x618; // UUserWidget*
		constexpr auto PositionChangeWidgetClass = 0x620; // UUserWidget*
		constexpr auto MainBombMissionWidget = 0x628; // UCrowHUDBombMissionWidget*
		constexpr auto InGameLoadoutWidget = 0x630; // UCrowInGameLoadoutWidget*
		constexpr auto InGameLoadoutPopupWidget = 0x638; // UCrowInGameLoadoutPopupWidget*
		constexpr auto ObjectiveBombMissionWidget = 0x640; // UCrowObjectiveBombMissionWidget*
		constexpr auto BombMissionScoreBoardWidget = 0x648; // UCrowBombMissionScoreBoardWidget*
		constexpr auto ResultScoreBombMissionWidget = 0x650; // UCrowResultScoreBombMissionWidget*
		constexpr auto StartMatchWidget = 0x658; // UCrowBMStartMatchWidget*
		constexpr auto PositionChangeWidget = 0x660; // UCrowBMPositionChangeWidget*
		constexpr auto PrevTeamID = 0x668; // char
		constexpr auto PrevAttackerTeamID = 0x669; // char
		constexpr auto DelayedShowPositionChangeWidgetTimeSec = 0x66c; // float
		constexpr auto ShowPositionChangeWidgetHandle = 0x670; // FTimerHandle
		constexpr auto ShowMatchPointWidgetHandle = 0x678; // FTimerHandle
		constexpr auto PlayCountdownTimerHandle = 0x680; // FTimerHandle
		constexpr auto bIsBlockScreen = 0x688; // bool
	}

	namespace n_UCrowVehicleCrosshairTankSmoke {
		constexpr auto RTB_Smoke_Ready = 0x428; // URichTextBlock*
		constexpr auto RTB_Smoke_Timer = 0x430; // URichTextBlock*
		constexpr auto TimerTextKey = 0x438; // FString
		constexpr auto ReadyTextKey = 0x448; // FString
		constexpr auto StatusWidget = 0x458; // UCrowStatusWidget*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UMagicLeapSettings {
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UCrowInGameMissionAlarmWidget {
		constexpr auto VB_List = 0x348; // UVerticalBox*
		constexpr auto ComplateItem = 0x350; // UCrowInGameMissionAlarmItem*
		constexpr auto CountingItem = 0x358; // UCrowInGameMissionAlarmItem*
	}

	namespace n_UCrowZombieWaitingWidget {
		constexpr auto TB_Timer = 0x348; // UTextBlock*
		constexpr auto AniShow = 0x350; // UWidgetAnimation*
	}

	namespace n_UMirrorToolProperties {
		constexpr auto OperationMode = 0x60; // EMirrorOperationMode
		constexpr auto bCropAlongMirrorPlaneFirst = 0x61; // bool
		constexpr auto bWeldVerticesOnMirrorPlane = 0x62; // bool
		constexpr auto bAllowBowtieVertexCreation = 0x63; // bool
		constexpr auto bSnapToWorldGrid = 0x64; // bool
		constexpr auto CtrlClickBehavior = 0x65; // EMirrorCtrlClickBehavior
		constexpr auto bButtonsOnlyChangeOrientation = 0x66; // bool
		constexpr auto bShowPreview = 0x67; // bool
		constexpr auto SaveMode = 0x68; // EMirrorSaveMode
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_ACrowParachuteSupplyActor {
		constexpr auto MovementComp = 0x220; // UProjectileMovementComponent*
		constexpr auto ParachuteMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto MaxSpeed = 0x230; // float
		constexpr auto DestroyRateSecond = 0x234; // float
		constexpr auto AttachTargetActor = 0x238; // TWeakObjectPtr<AActor>
		constexpr auto Timer_Destroy = 0x240; // FTimerHandle
		constexpr auto AnimMontage = 0x248; // UAnimMontage*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UCrowMailPopupSlotWidget {
		constexpr auto WS_SlotTitle = 0x368; // UWidgetSwitcher*
		constexpr auto TB_Username = 0x370; // UTextBlock*
		constexpr auto TB_RewardTitle = 0x378; // UTextBlock*
		constexpr auto IMG_Reward = 0x380; // UCrowWidgetImage*
		constexpr auto TB_RemainTime = 0x388; // UTextBlock*
		constexpr auto TB_RewardName = 0x390; // UTextBlock*
		constexpr auto WS_ButtonStatus = 0x398; // UWidgetSwitcher*
		constexpr auto BT_Reward = 0x3a0; // UCrowButton*
		constexpr auto BT_Delete = 0x3a8; // UCrowButton*
		constexpr auto MailNo = 0x3b0; // int64_t
		constexpr auto MailType = 0x3b8; // char
		constexpr auto RewardEndDateTime = 0x3c0; // FDateTime
		constexpr auto bIsUpdateRemainTime = 0x3c8; // bool
	}

	namespace n_ACrowWorldOverviewActor {
		constexpr auto SphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto AutoCollectSyncHub = 0x228; // bool
		constexpr auto SizeColumn = 0x22c; // float
		constexpr auto SizeRow = 0x230; // float
		constexpr auto RandomYaw = 0x234; // float
		constexpr auto RandomScale = 0x238; // float
		constexpr auto CountInRow = 0x23c; // int32_t
		constexpr auto RepeatWhole = 0x240; // int32_t
		constexpr auto RepeatItem = 0x244; // int32_t
		constexpr auto EditorPreview = 0x248; // FCrowBuildingEditorPreview
		constexpr auto ActorAssets = 0x250; // TArray<UBlueprint*>
		constexpr auto ActorInstances = 0x260; // TArray<AActor*>
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UM2_Browning_Boat_Front_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x318; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x348; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x390; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_VehicleWeapon = 0x3d0; // FAnimNode_VehicleWeaponHandler
	}

	namespace n_UConvertToPolygonsTool {
		constexpr auto Settings = 0x88; // UConvertToPolygonsToolProperties*
		constexpr auto PreviewMesh = 0x90; // UPreviewMesh*
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UCrowCharacterHUD {
		constexpr auto HudSetting = 0x260; // FCrowCharacterHUDSetting
	}

	namespace n_UCrowLoadingWidget {
		constexpr auto TB_MapName = 0x348; // UTextBlock*
		constexpr auto TB_GameMode = 0x350; // UTextBlock*
		constexpr auto TB_TipDesc = 0x358; // UTextBlock*
		constexpr auto IMG_LoadingIMG = 0x360; // UImage*
		constexpr auto TipImage = 0x368; // UImage*
		constexpr auto IMG_Loading_In = 0x370; // UImage*
		constexpr auto VB_ModeDescList = 0x378; // UVerticalBox*
		constexpr auto AniStart = 0x380; // UWidgetAnimation*
		constexpr auto AniStartPlayer = 0x388; // UUMGSequencePlayer*
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UCrowCharacterAnimInstBase {
		constexpr auto CurrentWeaponType = 0x2b8; // ECrowWeaponSubType
		constexpr auto RotationMode = 0x2b9; // ECrowRotationMode
		constexpr auto CurrentMovementMode = 0x2ba; // ECrowMovementMode
		constexpr auto PrevMovementMode = 0x2bb; // ECrowMovementMode
		constexpr auto CurrentStance = 0x2bc; // ECrowCharacterAnimStance
		constexpr auto TransitionStance = 0x2bd; // ECrowCharacterAnimStance
		constexpr auto BattleStance = 0x2be; // ECrowCharacterBattleStance
		constexpr auto bIsMoving = 0x2bf; // bool
		constexpr auto Velocity = 0x2c0; // FVector
		constexpr auto AimOffset = 0x2cc; // FVector2D
		constexpr auto MoveDirection = 0x2d4; // float
		constexpr auto GaitValue = 0x2d8; // float
		constexpr auto PlayRateStand = 0x2dc; // float
		constexpr auto PlayRateCrouch = 0x2e0; // float
		constexpr auto PlayRateProne = 0x2e4; // float
		constexpr auto bIsTurnInPlace = 0x2e8; // bool
		constexpr auto StanceBlendingTime = 0x2ec; // float
		constexpr auto bIsWeaponRightHanded = 0x2f0; // bool
		constexpr auto bIsProneMoving = 0x2f1; // bool
		constexpr auto bIsOnInteract = 0x2f2; // bool
	}

	namespace n_UCrowWorldSplineDeformComponent {
		constexpr auto bLeftsideDeform = 0xb0; // bool
		constexpr auto bRightsideDeform = 0xb1; // bool
		constexpr auto CrowSplineComponent = 0xb8; // UCrowWorldSplineComponent*
		constexpr auto bInitialized = 0xc0; // bool
		constexpr auto CachedPoints = 0xc8; // TArray<FCrowLandscapeSplineInterpPoint>
		constexpr auto CachedPointsFalloffTrace = 0xd8; // int32_t
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UCrowBattleInventoryWidget {
		constexpr auto DragStartInputHandler = 0x368; // UCrowInventoryInputEventHandler*
		constexpr auto DragEndInputHandler = 0x370; // UCrowInventoryInputEventHandler*
		constexpr auto DragStartWidget = 0x378; // UCrowInvenItemSlot*
		constexpr auto DragEndWidget = 0x380; // UCrowInvenItemSlot*
		constexpr auto WB_BackPackInfo = 0x388; // UCrowBackPackInfoWidget*
		constexpr auto WB_LoadoutInfo = 0x390; // UCrowLoadoutInfoWidget*
		constexpr auto WB_Tutorial_Inventory_2 = 0x398; // UCrowTutorialInventoryWidget*
		constexpr auto WB_Tutorial_Inventory_3 = 0x3a0; // UCrowTutorialInventoryWidget*
		constexpr auto WB_Tutorial_Inventory_4 = 0x3a8; // UCrowTutorialInventoryWidget*
		constexpr auto WB_Tutorial_Inventory_5 = 0x3b0; // UCrowTutorialInventoryWidget*
		constexpr auto WB_Tutorial_Inventory_6 = 0x3b8; // UCrowTutorialInventoryWidget*
		constexpr auto WB_InvenArmorInfo = 0x3c0; // UCrowInvenArmorInfoWidget*
		constexpr auto WB_DropBox_L = 0x3c8; // UCrowDropBoxWidget*
		constexpr auto WB_DropBox__R = 0x3d0; // UCrowDropBoxWidget*
		constexpr auto BTN_PIE_Exit = 0x3d8; // UButton*
		constexpr auto DiscriptionWidgetList = 0x3e0; // TArray<UCrowTutorialInventoryWidget*>
		constexpr auto CrowGameInvenComponent = 0x3f0; // TWeakObjectPtr<UCrowGameInvenComponent>
		constexpr auto SelectDragWidget = 0x3f8; // UCrowInventoryInputEventHandler*
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UCrowPartyWidget {
		constexpr auto WB_LocalPlayer = 0x348; // UCrowFriendSlotWidget*
		constexpr auto VB_EmptySlot = 0x350; // UVerticalBox*
		constexpr auto VB_PartySlot = 0x358; // UVerticalBox*
		constexpr auto BT_Close = 0x360; // UCrowButton*
		constexpr auto BT_Promote = 0x368; // UCrowButton*
		constexpr auto BT_CancelPromote = 0x370; // UCrowButton*
		constexpr auto BT_ExitParty = 0x378; // UCrowButton*
		constexpr auto BT_AddParty_2 = 0x380; // UCrowButton*
		constexpr auto BT_AddParty_3 = 0x388; // UCrowButton*
		constexpr auto BT_AddParty_4 = 0x390; // UCrowButton*
		constexpr auto FriendSlotWidgetClass = 0x398; // UCrowFriendSlotWidget*
		constexpr auto SceneLobby = 0x3a0; // ACrowSceneLobby*
		constexpr auto PromoteMode = 0x3a8; // bool
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UCrowFoliageAffectorComponent {
		constexpr auto bLoop = 0x1f8; // bool
		constexpr auto OnTimeAnimationFinished = 0x200; // FMulticastInlineDelegate
		constexpr auto bVolatileAffector = 0x210; // bool
		constexpr auto bAlwaysRender = 0x211; // bool
		constexpr auto bWindAffector = 0x212; // bool
		constexpr auto bStartWithBeginPlay = 0x213; // bool
		constexpr auto bChangeViewModeLocation = 0x214; // bool
		constexpr auto Location_FP = 0x218; // FVector
		constexpr auto Location_TP = 0x224; // FVector
		constexpr auto MI = 0x230; // UMaterialInterface*
		constexpr auto AffectByDistance = 0x238; // FCrowFoliageAffectByDistance
		constexpr auto AnimData = 0x258; // UCrowFoliageAffectorAnimData*
		constexpr auto IsVehicle = 0x260; // bool
		constexpr auto BindVehicleState = 0x268; // TSet<ECrowVehicleState>
		constexpr auto ScaleMultiplier = 0x2b8; // float
		constexpr auto PowerMultiplier = 0x2bc; // float
		constexpr auto MIDBrush = 0x2c0; // UMaterialInstanceDynamic*
		constexpr auto RotorFSM = 0x2c8; // UCrowRotorFSM*
		constexpr auto AnimDataInstance = 0x2d0; // UCrowFoliageAffectorAnimData*
		constexpr auto DrawParam = 0x2d8; // FCrowFoliageAffectorDrawParam
		constexpr auto bRegisted = 0x310; // bool
		constexpr auto bNeedRegister = 0x311; // bool
		constexpr auto LocationByViewMode = 0x314; // FVector
		constexpr auto CurrentVehicleState = 0x320; // ECrowVehicleState
	}

	namespace n_UCrowUserExpTableManager {
		constexpr auto UserExpData = 0x28; // TMap<int32_t, FCrowUserExpTableRow>
	}

	namespace n_UCrowCustomCursorSpaceWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CustomCursor = 0x350; // UCrowCustomCursorBase*
		constexpr auto CursorPanelSlot = 0x358; // UCanvasPanelSlot*
	}

	namespace n_UCrowTriggerCommandGaugeBar {
		constexpr auto GaugeWidget = 0x128; // UCrowProgressBarWidget*
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UCrowGameModWidget {
		constexpr auto SelectWorldButtonWidgetClass = 0x348; // UCrowSelectWorldButtonWidget*
		constexpr auto HB_ModeList = 0x350; // UHorizontalBox*
		constexpr auto HB_MapList = 0x358; // UHorizontalBox*
		constexpr auto TB_SelectModeName = 0x360; // UTextBlock*
		constexpr auto TB_StageName = 0x368; // UTextBlock*
		constexpr auto BT_Apply = 0x370; // UCrowButton*
		constexpr auto WB_SelectModButton_SM = 0x378; // UCrowSelectModButtonWidget*
		constexpr auto WB_SelectModButton_SO = 0x380; // UCrowSelectModButtonWidget*
		constexpr auto WB_SelectModButton_TDE = 0x388; // UCrowSelectModButtonWidget*
		constexpr auto WB_SelectModButton_TG = 0x390; // UCrowSelectModButtonWidget*
		constexpr auto CurrentGameMode = 0x398; // ECrowGameMode
		constexpr auto CurrentMapIndex = 0x39c; // uint32_t
		constexpr auto ModButtonWidgetArray = 0x3a0; // TArray<UCrowSelectModButtonWidget*>
	}

	namespace n_UCrowSquadInfo {
		constexpr auto TeamID = 0x34; // char
		constexpr auto SquadKey = 0x38; // FString
		constexpr auto SquadName = 0x48; // FString
		constexpr auto PlayerArray = 0x58; // TArray<FCrowSquadPlayer>
		constexpr auto PlayerCount = 0x68; // int32_t
		constexpr auto SquadPoint = 0x6c; // uint32_t
		constexpr auto WaitRespawnArea = 0x70; // ACrowMissionArea*
		constexpr auto TotalRetreivedMineral = 0x78; // uint32_t
		constexpr auto UpdateModePointIndexArray = 0x80; // TArray<ECrowModPointIndex>
		constexpr auto PingDataArray = 0x90; // TArray<FCrowPingData>
		constexpr auto RewardInfoArray = 0xa0; // TArray<FCrowSquadRewardInfo>
	}

	namespace n_UAnimNotify_CLSWeaponAction {
		constexpr auto WeaponAction = 0x30; // ECLSWeaponAction
	}

	namespace n_UCrowWorldSyncHubStatisticsComp {
		constexpr auto CollectionBuildingLink = 0xb0; // TArray<FCrowWorldSyncBuildingLink>
		constexpr auto CollectionBuildingPropLink = 0xc0; // TArray<FCrowWorldSyncBuildingPropLink>
		constexpr auto CollectionWorldPropLink = 0xd0; // TArray<FCrowWorldSyncWorldPropLink>
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x468; // EWidgetSpace
		constexpr auto TimingPolicy = 0x469; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x470; // UUserWidget*
		constexpr auto DrawSize = 0x478; // FIntPoint
		constexpr auto bManuallyRedraw = 0x480; // bool
		constexpr auto bRedrawRequested = 0x481; // bool
		constexpr auto RedrawTime = 0x484; // float
		constexpr auto CurrentDrawSize = 0x490; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x498; // bool
		constexpr auto Pivot = 0x49c; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4a4; // bool
		constexpr auto bWindowFocusable = 0x4a5; // bool
		constexpr auto WindowVisibility = 0x4a6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4a7; // bool
		constexpr auto OwnerPlayer = 0x4a8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4b0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4c0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4d0; // float
		constexpr auto BlendMode = 0x4d4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4d5; // bool
		constexpr auto TickWhenOffscreen = 0x4d6; // bool
		constexpr auto BodySetup = 0x4d8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4e0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4e8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x500; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto RenderTarget = 0x510; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x518; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x520; // bool
		constexpr auto bEditTimeUsable = 0x521; // bool
		constexpr auto SharedLayerName = 0x524; // FName
		constexpr auto LayerZOrder = 0x52c; // int32_t
		constexpr auto GeometryMode = 0x530; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x534; // float
		constexpr auto TickMode = 0x538; // ETickMode
		constexpr auto Widget = 0x560; // UUserWidget*
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x468; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x478; // TArray<FSpriteInstanceData>
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCrowCharacterMainAnimBase {
		constexpr auto MontagesDepends = 0x2f8; // FCrowCharacterMontageDepends
		constexpr auto MontagesOwner = 0x348; // UCrowCharacterAnimInstBase*
		constexpr auto CachedTurnMontage = 0x350; // UAnimMontage*
		constexpr auto HandIKType = 0x358; // ECrowCharacterHandIKType
		constexpr auto LeftHandIKTransform = 0x360; // FTransform
		constexpr auto VehicleType = 0x390; // ECrowCharacterVehicleAnimType
		constexpr auto ElapsedHandIK = 0x394; // float
		constexpr auto AlphaHandIK = 0x398; // float
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Machinegun_Third_C {
		constexpr auto IMG_Crosshair_Gauge = 0x438; // UImage*
		constexpr auto IMG_Crosshair_Gauge_Base = 0x440; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x448; // UImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x450; // UImage*
		constexpr auto IMG_Crosshair_Spread = 0x458; // UImage*
		constexpr auto IMG_Crosshair_Spread_2 = 0x460; // UImage*
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_ACrowSpectatorPawnBombMission {
		constexpr auto AttachedPlayerStateBombMission = 0x2f8; // ACrowPlayerStateBombMission*
	}

	namespace n_UCrowMainMedalManager {
		constexpr auto MainMedalInfos = 0x28; // TMap<uint32_t, FCrowMainMedalInfos>
		constexpr auto MainMedalGroupInfos = 0x78; // TMap<uint32_t, FCrowMainMedalGroupInfo>
		constexpr auto ReqMedalGroupRewardWidget = 0xc8; // UCrowWidgetBase*
	}

	namespace n_UWB_SettingsSlot_C {
		constexpr auto IMG_BG = 0x530; // UImage*
		constexpr auto IMG_Blue00 = 0x538; // UImage*
		constexpr auto WB_CrossHairPreset = 0x540; // UWB_CrossHairPreset_C*
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_ACrowDebugSceneLoadActor {
		constexpr auto LoadMapIndex = 0x220; // uint32_t
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UCrowLoadingModeTextWidget {
		constexpr auto TB_ModeDesc = 0x260; // UTextBlock*
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UDisplaceMeshPerlinNoiseProperties {
		constexpr auto PerlinLayerProperties = 0x60; // TArray<FPerlinLayerProperties>
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_ACrowCharacterBase {
		constexpr auto ReplicatedAppearance = 0x10f0; // FCrowCharacterAppearance
		constexpr auto DefaultClothesList = 0x10f8; // TArray<FCrowClothItemData>
		constexpr auto DefaultTattooIndexList = 0x1108; // TArray<uint32_t>
		constexpr auto DefaultResultMVPIndex = 0x1118; // uint32_t
		constexpr auto bIsHuman = 0x111c; // bool
		constexpr auto PelvisBoneName = 0x1120; // FName
		constexpr auto ElapsedForceSyncRotation = 0x1128; // float
		constexpr auto bIsWeaponFiring = 0x112c; // char : 1
		constexpr auto PronedEyeHeight = 0x1130; // float
		constexpr auto CrowMovement = 0x1138; // UCrowCharacterMovement*
		constexpr auto ProneCollisionCapsuleComponent = 0x1140; // UCrowProneCapsuleComponent*
		constexpr auto TP_ClothComponent = 0x1148; // UCrowClothActorComponent*
		constexpr auto CurrentAppearance = 0x1150; // FCrowCharacterAppearance
		constexpr auto CurrentTattooFaceIndex = 0x1158; // uint32_t
		constexpr auto CurrentTattooArmIndex = 0x115c; // uint32_t
		constexpr auto CharacterPhysicsAsset = 0x1160; // UPhysicsAsset*
		constexpr auto RagdollPhysicsAsset = 0x1168; // UPhysicsAsset*
		constexpr auto MergeMeshTask = 0x1170; // UCrowLibraryMergeSKCTask*
		constexpr auto OptimizationWeaponMesh = 0x1180; // USkeletalMesh*
		constexpr auto OptimizationCharacterMesh = 0x1188; // USkeletalMesh*
		constexpr auto BackupNoOptimizationCharacterMesh = 0x1190; // USkeletalMesh*
		constexpr auto BackupNoOptimizationCharacterMaterial = 0x1198; // UMaterialInterface*
		constexpr auto CacheMergedMeshIndex = 0x11a0; // int32_t
		constexpr auto BackupAnimClass = 0x11a8; // UObject*
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UCrowWeaponExpTableManager {
		constexpr auto WeaponExpData = 0x28; // TMap<int32_t, FCrowWeaponExpTableRow>
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UCrowConquestHeavyBomberIcon {
		constexpr auto HeavyBomberActor = 0x3d8; // ACrowConquestHeavyBomberActor*
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UCollisionGeometryVisualizationProperties {
		constexpr auto LineThickness = 0x60; // float
		constexpr auto bShowHidden = 0x64; // bool
		constexpr auto Color = 0x68; // FColor
	}

	namespace n_UNiagaraDataInterfacePhysicsAsset {
		constexpr auto DefaultSource = 0x38; // UPhysicsAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_AWaterBodyOcean {
		constexpr auto OceanGenerator = 0xdd0; // UOceanGenerator*
		constexpr auto CollisionExtents = 0xdd8; // FVector
		constexpr auto HeightOffset = 0xde4; // float
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection {
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UAkLuminInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UCrowProjectileISMC {
		constexpr auto StaticMeshAsset = 0x578; // UStaticMesh*
		constexpr auto MaterialAssetOverrides = 0x580; // TArray<UMaterialInstance*>
		constexpr auto UIDtoIndexArray = 0x590; // TMap<uint32_t, int32_t>
		constexpr auto IdleIndexArray = 0x5e0; // TArray<int32_t>
		constexpr auto ComponentArray = 0x5f0; // TArray<USceneComponent*>
	}

	namespace n_UCrowRespawnMapWidget {
		constexpr auto RespawnCamera = 0x368; // ACameraActor*
		constexpr auto RespawnButtonClass = 0x370; // UCrowRespawnButton*
		constexpr auto RespawnButtonSmallClass = 0x378; // UCrowRespawnButton*
		constexpr auto SelectedSkydivingPoint = 0x380; // bool
		constexpr auto WB_Map = 0x388; // UCrowWorldMap*
		constexpr auto WB_RespawnProgressBar = 0x390; // UCrowProgressBarWidget*
		constexpr auto WB_RespawnSelectInfo = 0x398; // UCrowRespawnSelectInfoWidget*
		constexpr auto TB_MessageTitle = 0x3a0; // UTextBlock*
		constexpr auto TB_Message = 0x3a8; // UTextBlock*
		constexpr auto CP_SelectPoint = 0x3b0; // UCanvasPanel*
		constexpr auto CP_OutAreaAlram = 0x3b8; // UCanvasPanel*
		constexpr auto CP_RespawnPoint = 0x3c0; // UCanvasPanel*
		constexpr auto BT_FastRespawn = 0x3c8; // UCrowButton*
		constexpr auto TB_FastRespawnPrice = 0x3d0; // UTextBlock*
		constexpr auto TB_FastRespawnPriceDisable = 0x3d8; // UTextBlock*
		constexpr auto TB_HaveBattleMoney = 0x3e0; // UTextBlock*
		constexpr auto WS_FastRespawnButton = 0x3e8; // UWidgetSwitcher*
		constexpr auto PB_FastRespawn = 0x3f0; // UProgressBar*
		constexpr auto BD_FastRespawnDisable = 0x3f8; // UBorder*
		constexpr auto IMG_ImPossibleRespawnArea = 0x400; // UImage*
		constexpr auto TB_AlarmMessage = 0x408; // UTextBlock*
		constexpr auto WB_Popup_Loadout_Ingame = 0x410; // UCrowInGameLoadoutPopupWidget*
		constexpr auto BT_Loadout = 0x418; // UCrowButton*
		constexpr auto CP_DiveRespawnAlarm = 0x420; // UCanvasPanel*
		constexpr auto CP_SquadMatch = 0x428; // UCanvasPanel*
		constexpr auto CP_Conquest = 0x430; // UCanvasPanel*
		constexpr auto CP_FastRespawnRoot = 0x438; // UCanvasPanel*
		constexpr auto RespawnDelaySeconds = 0x440; // float
		constexpr auto AnimShow = 0x448; // UWidgetAnimation*
		constexpr auto AnimUnselectable = 0x450; // UWidgetAnimation*
		constexpr auto AnimSelectPointActive = 0x458; // UWidgetAnimation*
		constexpr auto AnimSelectFastActive = 0x460; // UWidgetAnimation*
		constexpr auto AnimRespawnAlram = 0x468; // UWidgetAnimation*
		constexpr auto AnimShowName = 0x470; // FName
		constexpr auto AnimUnselectableName = 0x478; // FName
		constexpr auto AnimSelectPointActiveName = 0x480; // FName
		constexpr auto AnimSelectFastActiveName = 0x488; // FName
		constexpr auto AnimRespawnAlramName = 0x490; // FName
		constexpr auto FastRespawnButtonNeedPressSecond = 0x498; // float
		constexpr auto FastRespawnPressedSecond = 0x49c; // float
	}

	namespace n_UCrowWidgetTrainingGroundResult {
		constexpr auto WB_Objective_CountDown = 0x368; // UCrowCountdownWidget*
		constexpr auto BT_ReturnLobby = 0x370; // UCrowButton*
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_ULuminARSessionConfig {
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_ACrowPlayerStateConquest {
		constexpr auto SkillManager = 0xb78; // UCrowConquestSkillManager*
		constexpr auto CurrentConquestArea = 0xb80; // ACrowConquestArea*
		constexpr auto ConquestResultInfo = 0xb88; // FCrowConquestResultInfo
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UCrowLibraryMergeSKCTask {
		constexpr auto SkeletalMeshMerge = 0x28; // UCrowSkeletalMeshMerge*
		constexpr auto MergeParams = 0x30; // FSkeletalMeshMergeParams
		constexpr auto PoseOverride = 0x90; // USkeletalMesh*
		constexpr auto CacheMergedMeshIndex = 0x98; // int32_t
		constexpr auto World = 0xa0; // UWorld*
		constexpr auto GeneratedSkeletalMesh = 0xa8; // USkeletalMesh*
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UCrowWidgetDying {
		constexpr auto TB_Message = 0x348; // UTextBlock*
		constexpr auto WB_HealGauge = 0x350; // UCrowHealGauge*
		constexpr auto BG_Blur = 0x358; // UBackgroundBlur*
		constexpr auto IMG_Vignette = 0x360; // UImage*
		constexpr auto MaxBlurValue = 0x368; // float
		constexpr auto NormalLoopAniName = 0x36c; // FName
		constexpr auto StopBleedingAnimName = 0x374; // FName
		constexpr auto FastBleedingAnimName = 0x37c; // FName
		constexpr auto CallHelpAnimName = 0x384; // FName
		constexpr auto HelpSoundEvent = 0x390; // UAkAudioEvent*
		constexpr auto PreBleedingType = 0x398; // ECrowBleedingType
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UCrowWorldEditorCollectActorArray {
		constexpr auto AllActors = 0x28; // TArray<AActor*>
	}

	namespace n_UCrowMissionResultWidget {
		constexpr auto TXT_MissionResult = 0x348; // UTextBlock*
		constexpr auto SuccessAnimation = 0x350; // UWidgetAnimation*
		constexpr auto FadeAnimation = 0x358; // UWidgetAnimation*
	}

	namespace n_UCrowWorldIconWidgetContamination {
		constexpr auto IMG_AreaGoal = 0x3d8; // UImage*
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UCrowSoundCrossFadeByDistance {
		constexpr auto SpeedOfSound = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
		constexpr auto TestDistance = 0x50; // float
	}

	namespace n_UCrowWorldAssetPointLight {
		constexpr auto PointLightData = 0x28; // UPointLightComponent*
	}

	namespace n_ACrowSoundStateVolume {
		constexpr auto SoundStateType = 0x220; // ECrowSoundStateType
		constexpr auto SoundVolumes = 0x228; // TArray<UStaticMeshComponent*>
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UCrowVehicleDamageHandler {
		constexpr auto Vehicle = 0xb0; // ACrowVehiclePawn*
		constexpr auto DestroyedVehicle = 0xb8; // AActor*
		constexpr auto VehicleParam = 0xc0; // UCrowVehicleParam*
		constexpr auto BattleStatus = 0xc8; // UCrowBattleStatus*
		constexpr auto DamageSetup = 0xd0; // FCrowVehicleDamageSetup
		constexpr auto Timer_Burning = 0x170; // FTimerHandle
		constexpr auto LastTakeHitTimeTimeout = 0x178; // float
		constexpr auto CurrentDamageEffect = 0x180; // FCrowVehicleDamageEffect
		constexpr auto DamageType = 0x1c0; // UDamageType*
		constexpr auto EnginePowerDropEndTimerHandle = 0x1c8; // FTimerHandle
		constexpr auto EnginePowerDropRecoverTimerHandle = 0x1d0; // FTimerHandle
		constexpr auto EnginePowerDropRecoverTimeSecond = 0x1d8; // float
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_UCrowGameResultTDMWidget {
		constexpr auto TXT_Result = 0x368; // UTextBlock*
		constexpr auto TXT_TimeResult = 0x370; // UTextBlock*
		constexpr auto TXT_BlueScore = 0x378; // UTextBlock*
		constexpr auto TXT_RedScore = 0x380; // UTextBlock*
		constexpr auto WS_Status = 0x388; // UWidgetSwitcher*
		constexpr auto WB_BT_Exit = 0x390; // UCrowButton*
		constexpr auto AniResultStart = 0x398; // UWidgetAnimation*
		constexpr auto AniBlueTeamWin = 0x3a0; // UWidgetAnimation*
		constexpr auto AniRedTeamWin = 0x3a8; // UWidgetAnimation*
		constexpr auto AniDraw = 0x3b0; // UWidgetAnimation*
	}

	namespace n_ACrowWorldEventBase {
		constexpr auto Root = 0x228; // UBoxComponent*
		constexpr auto IconLocation = 0x230; // USceneComponent*
		constexpr auto Reactivation = 0x238; // bool
		constexpr auto LeftTimeAfterActivation = 0x23c; // float
		constexpr auto TimeLimit = 0x240; // float
		constexpr auto EventActivationTitle = 0x248; // FText
		constexpr auto EventActivationDescription = 0x260; // FText
		constexpr auto EventActivationDescriptionList = 0x278; // TArray<FString>
		constexpr auto BeforeObjectiveTitle = 0x288; // FText
		constexpr auto BeforeObjective = 0x2a0; // FText
		constexpr auto AfterObjectiveTitle = 0x2b8; // FText
		constexpr auto AfterObjective = 0x2d0; // FText
		constexpr auto DisplaySuccessUI = 0x2e8; // bool
		constexpr auto SuccessText = 0x2f0; // FText
		constexpr auto SuccessIcon = 0x308; // UObject*
		constexpr auto DisplayFailUI = 0x310; // bool
		constexpr auto FailText = 0x318; // FText
		constexpr auto FailIcon = 0x330; // UObject*
		constexpr auto EventInfo = 0x338; // FWorldEventInfo
		constexpr auto EventObjectiveActorArray = 0x340; // TArray<AActor*>
		constexpr auto WorldEventSetting = 0x350; // ACrowWorldEventSetting*
	}

	namespace n_USelfUnionMeshesToolProperties {
		constexpr auto bAttemptFixHoles = 0x60; // bool
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bTrimFlaps = 0x62; // bool
		constexpr auto WindingNumberThreshold = 0x68; // double
		constexpr auto bOnlyUseFirstMeshMaterials = 0x70; // bool
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_ACrowRaymarchActor {
		constexpr auto MaterialInterface = 0x230; // UMaterialInterface*
		constexpr auto Mid = 0x238; // UMaterialInstanceDynamic*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UCrowConqustVehicleDestroyer {
		constexpr auto VehiclePawn = 0xb0; // ACrowVehiclePawn*
		constexpr auto GameStateConquest = 0xb8; // ACrowGameStateConquest*
	}

	namespace n_UCSGMeshesTool {
		constexpr auto CSGProperties = 0xf0; // UCSGMeshesToolProperties*
		constexpr auto DrawnLineSet = 0x108; // ULineSetComponent*
	}

	namespace n_UOculusMR_Settings {
		constexpr auto ClippingReference = 0x28; // EOculusMR_ClippingReference
		constexpr auto bUseTrackedCameraResolution = 0x29; // bool
		constexpr auto WidthPerView = 0x2c; // int32_t
		constexpr auto HeightPerView = 0x30; // int32_t
		constexpr auto CastingLatency = 0x34; // float
		constexpr auto BackdropColor = 0x38; // FColor
		constexpr auto HandPoseStateLatency = 0x3c; // float
		constexpr auto ChromaKeyColor = 0x40; // FColor
		constexpr auto ChromaKeySimilarity = 0x44; // float
		constexpr auto ChromaKeySmoothRange = 0x48; // float
		constexpr auto ChromaKeySpillRange = 0x4c; // float
		constexpr auto ExternalCompositionPostProcessEffects = 0x50; // EOculusMR_PostProcessEffects
		constexpr auto bIsCasting = 0x51; // bool
		constexpr auto CompositionMethod = 0x52; // EOculusMR_CompositionMethod
		constexpr auto CapturingCamera = 0x53; // EOculusMR_CameraDeviceEnum
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_ACrowItemWeaponParts {
		constexpr auto UseDefaultSettings = 0x308; // bool
		constexpr auto PartsType = 0x309; // ECrowItemType
		constexpr auto PartsIndex = 0x30c; // uint32_t
		constexpr auto ItemTable = 0x318; // FCrowWeaponPartsTableRow
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UCrowScoreInfoDeathMatchWidget {
		constexpr auto ScoreInfoListItem = 0x368; // UCrowScoreInfoDeathMatchListItem*
		constexpr auto CrowGameStateBase = 0x370; // ACrowGameStateBase*
		constexpr auto LocalPlayerState = 0x378; // ACrowPlayerStateBase*
		constexpr auto VB_RedTeamList = 0x380; // UVerticalBox*
		constexpr auto IMG_RedTeamIcon = 0x388; // UImage*
		constexpr auto TB_RedTeamName = 0x390; // UTextBlock*
		constexpr auto TB_RedTeamScore = 0x398; // UTextBlock*
		constexpr auto VB_BlueTeamList = 0x3a0; // UVerticalBox*
		constexpr auto IMG_BlueTeamIcon = 0x3a8; // UImage*
		constexpr auto TB_BlueTeamScore = 0x3b0; // UTextBlock*
		constexpr auto TB_BlueTeamName = 0x3b8; // UTextBlock*
		constexpr auto TimeWidget = 0x3c0; // UCrowObjectiveTimeWidget*
		constexpr auto RedTeamPlayerList = 0x3c8; // TArray<FCrowScoreListItemData>
		constexpr auto BlueTeamPlayerList = 0x3d8; // TArray<FCrowScoreListItemData>
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_UBrushRemeshProperties {
		constexpr auto bEnableRemeshing = 0x70; // bool
		constexpr auto TriangleSize = 0x74; // int32_t
		constexpr auto PreserveDetail = 0x78; // int32_t
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x468; // int32_t
		constexpr auto MapHeight = 0x46c; // int32_t
		constexpr auto TileWidth = 0x470; // int32_t
		constexpr auto TileHeight = 0x474; // int32_t
		constexpr auto DefaultLayerTileSet = 0x478; // UPaperTileSet*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto TileLayers = 0x488; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x498; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4a8; // int32_t
		constexpr auto bUseSingleLayer = 0x4ac; // bool
		constexpr auto TileMap = 0x4b0; // UPaperTileMap*
	}

	namespace n_UBasicReplicationGraph {
		constexpr auto GridNode = 0x498; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4a0; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x4a8; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x4b8; // TArray<AActor*>
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UCrowClanNoticeWidget {
		constexpr auto ETB_NoticeInput = 0x348; // UEditableText*
		constexpr auto BT_Confirm = 0x350; // UCrowButton*
		constexpr auto BT_Cancel = 0x358; // UCrowButton*
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_UCrowHUDWidgetFullScreenBottom {
		constexpr auto WB_ScopeZoomWidget = 0x348; // UCrowWeaponZoomWidget*
		constexpr auto WB_DamageEffect = 0x350; // UCrowDamageEffectWidget*
		constexpr auto WB_DamageIndicator = 0x358; // UCrowDamageIndicatorWidget*
		constexpr auto CP_ZetaHUD = 0x360; // UCanvasPanel*
		constexpr auto CP_ZombieHUD = 0x368; // UCanvasPanel*
		constexpr auto WB_ZombieHeal = 0x370; // UCrowZombieHealWidget*
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_UCrowUAVSupportTargetIcon {
		constexpr auto IMG_Effect = 0x3d8; // UImage*
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UCrowWheeledStateBase {
		constexpr auto WheeledFSM = 0x48; // UCrowWheeledFSM*
	}

	namespace n_UPolyEditSetUVProperties {
		constexpr auto bShowMaterial = 0x60; // bool
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UCrowVoiceChatTableManager {
		constexpr auto VoiceChatChannelList = 0x28; // TMap<ECrowVoiceChannel, FCrowVoiceChatChannelTableRow>
	}

	namespace n_ACrowSpectatorPawnBase {
		constexpr auto AttachedPlayerState = 0x2a8; // ACrowPlayerStateBase*
		constexpr auto GameHUDBase = 0x2b0; // ACrowGameHUDBase*
		constexpr auto LastViewTarget = 0x2b8; // APawn*
		constexpr auto LocalBodyIconActor = 0x2c0; // ACrowSpectatorIconActor*
		constexpr auto KillerIconActor = 0x2c8; // ACrowSpectatorIconActor*
		constexpr auto bIsFreeView = 0x2d0; // bool
		constexpr auto bIsBoardVehicle = 0x2d1; // bool
		constexpr auto VehicleSeatIndex = 0x2d2; // int8_t
		constexpr auto bIsSkydiving = 0x2d3; // bool
		constexpr auto CameraMode = 0x2d4; // char
		constexpr auto bIsLockToggleView = 0x2d5; // bool
		constexpr auto ViewPitchMinMax = 0x2d8; // FVector2D
		constexpr auto WaitAttachedServerKey = 0x2e0; // uint64_t
		constexpr auto bIsWaitAttachedPawnToReplicated = 0x2e8; // bool
		constexpr auto WaitAttachedPawnRate = 0x2ec; // float
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UCrowCustomInvitePopupWidget {
		constexpr auto BT_Close = 0x348; // UCrowButton*
		constexpr auto SB_FriendsList = 0x350; // UScrollBox*
		constexpr auto FriendSlotWidgetClass = 0x358; // UCrowFriendSlotWidget*
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UProceduralCylinderToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_UCrowKillFeedIconTableManager {
		constexpr auto KillFeedIconTable = 0x28; // TMap<ECrowDamageCauser, UPaperSprite*>
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UCrowKitBomberIconWidget {
		constexpr auto IMG_Icon = 0x348; // UImage*
		constexpr auto BomberActor = 0x350; // ACrowKitBomber*
	}

	namespace n_UCrowParachuteStatusWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto TB_Count = 0x350; // UTextBlock*
		constexpr auto RTB_BindedKey = 0x358; // URichTextBlock*
		constexpr auto PrevCount = 0x360; // uint32_t
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCrowHUDWidgetDefault {
		constexpr auto WB_StatusWidget = 0x348; // UCrowStatusWidget*
		constexpr auto WB_ToastMessage = 0x350; // UCrowToastMessageWidget*
		constexpr auto WB_CompassInfo = 0x358; // UCrowCompassInfoWIdget*
		constexpr auto WB_KillfeedWidget = 0x360; // UCrowKillFeedWidget*
		constexpr auto WB_InteractionProgress = 0x368; // UCrowProgressBarWidget*
		constexpr auto WB_TutorialInfo_01 = 0x370; // UCrowTutorialInfoWidget*
		constexpr auto WB_TutorialInfo = 0x378; // UCrowTutorialInfoWidget*
		constexpr auto WB_TutorialInfo_02 = 0x380; // UCrowTutorialInfoWidget*
		constexpr auto WB_TutorialDoor = 0x388; // UCrowTutorialInfoWidget*
		constexpr auto WB_MedalInfo = 0x390; // UCrowMedalInfoWidget*
		constexpr auto WB_Minimap = 0x398; // UCrowMinimapInfoWidget*
		constexpr auto WB_HealWidget = 0x3a0; // UCrowHealWidget*
		constexpr auto WB_HitMarker = 0x3a8; // UCrowHitMarkerWidget*
		constexpr auto WB_Weapon_List_Player = 0x3b0; // UCrowPlayerWeaponListWidget*
		constexpr auto WB_ToolTip_Ping = 0x3b8; // UCrowToolTipPingWidget*
		constexpr auto WB_InteractionProgress_Circle = 0x3c0; // UCrowInteractionProgressCircleWidget*
		constexpr auto WB_zeroing = 0x3c8; // UCrowZeroingWidget*
		constexpr auto WB_InGameMissionAlarm = 0x3d0; // UCrowInGameMissionAlarmWidget*
		constexpr auto WB_CrowHUD_FPS = 0x3d8; // UCrowFPSWidget*
		constexpr auto WB_Tutorial_Heal_Bottom = 0x3e0; // UCrowGuideMessageWidget*
		constexpr auto WB_HUD_WeaponUnlock = 0x3e8; // UCrowHUDWeaponUnlockWidget*
		constexpr auto WB_StatusGasMask = 0x3f0; // UCrowGasMaskStatusWidget*
		constexpr auto WB_StatusParachute = 0x3f8; // UCrowParachuteStatusWidget*
		constexpr auto WB_DeathMatch_Obtain = 0x400; // UCrowSupplyGainMessage*
		constexpr auto HideAnimation = 0x408; // UWidgetAnimation*
		constexpr auto WB_Objective_Mod = 0x410; // UCrowObjectiveWidget*
		constexpr auto WB_Objective_BombMission = 0x418; // UCrowObjectiveBombMissionWidget*
		constexpr auto CrowCharacterPawn = 0x420; // ACrowCharacterPawn*
		constexpr auto Indicators = 0x428; // TMap<AActor*, UCrowIndicatorInfo*>
		constexpr auto WeaponUIEventInfoQueue = 0x478; // TArray<FCrowWeaponEventInfo>
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x110; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UCrowWorldLODSetting {
		constexpr auto ActorLODMeshSetting = 0x28; // FMeshProxySettings
		constexpr auto MeshLODGroupName = 0xd0; // FName
		constexpr auto MeshLODScreenSizeArray = 0xd8; // TArray<float>
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UCrowWorldSplineHavestComponent {
		constexpr auto HavestDistance = 0xc0; // float
		constexpr auto VariationMeshes = 0xc8; // TArray<UStaticMesh*>
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UCrowColorTableManager {
		constexpr auto ColorData = 0x28; // TMap<FString, FCrowColorTableRow>
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x440; // int32_t
		constexpr auto SectionBaseY = 0x444; // int32_t
		constexpr auto ComponentSizeQuads = 0x448; // int32_t
		constexpr auto SubsectionSizeQuads = 0x44c; // int32_t
		constexpr auto NumSubsections = 0x450; // int32_t
		constexpr auto OverrideMaterial = 0x458; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x460; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x468; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x478; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x488; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x498; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4a8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4b8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4c0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4d0; // float
		constexpr auto HeightmapScaleBias = 0x4e0; // FVector4
		constexpr auto CachedLocalBox = 0x4f0; // FBox
		constexpr auto CollisionComponent = 0x50c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x528; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x530; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x540; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x550; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x558; // FGuid
		constexpr auto IrrelevantLights = 0x568; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x578; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x57c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x580; // float
		constexpr auto PositiveZBoundsExtension = 0x584; // float
		constexpr auto StaticLightingResolution = 0x588; // float
		constexpr auto ForcedLOD = 0x58c; // int32_t
		constexpr auto LODBias = 0x590; // int32_t
		constexpr auto StateId = 0x594; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5a4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5b8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5c0; // char
		constexpr auto MobileMaterialInterface = 0x5c8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5d0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5e0; // TArray<UTexture2D*>
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UCrowCharacterSubAnimBase {
		constexpr auto bIsPeekLeft = 0x2f8; // bool
		constexpr auto bIsPeekRight = 0x2f9; // bool
		constexpr auto bUseMotionlessOnAim = 0x2fa; // bool
		constexpr auto bIsHandlingWeapon = 0x2fb; // bool
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_ACrowMapZoneMarker {
		constexpr auto MapZoneMarkerIcon = 0x220; // FCrowGameIconDisplayInfo
		constexpr auto ZoneName = 0x2a8; // FText
	}

	namespace n_UCrowWorldDestroyer {
		constexpr auto MeteorRTMask = 0xb0; // AActor*
		constexpr auto RenderTargetTexture = 0xb8; // UTextureRenderTarget2D*
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x440; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto CollisionSizeQuads = 0x458; // int32_t
		constexpr auto CollisionScale = 0x45c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x460; // int32_t
		constexpr auto CollisionQuadFlags = 0x468; // TArray<char>
		constexpr auto HeightfieldGuid = 0x478; // FGuid
		constexpr auto CachedLocalBox = 0x488; // FBox
		constexpr auto RenderComponent = 0x4a4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4d0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UCrowCharacterSkydivingComponent {
		constexpr auto State = 0xb0; // ECrowSkydivingState
		constexpr auto AnimState = 0xb1; // ECrowSkydivingAnimState
		constexpr auto SkydivingPawnClass = 0xb8; // ACrowSkydivingPawn*
		constexpr auto ParachuteSkillClass = 0xc0; // ACrowSkydivingPawn*
		constexpr auto SkydivingPawn = 0xc8; // ACrowSkydivingPawn*
		constexpr auto bIsReadyToSkydiving = 0xd0; // bool
		constexpr auto ParachuteSkillCount = 0xd1; // char
		constexpr auto AltitudeTimerHandle = 0xd8; // FTimerHandle
		constexpr auto ParachuteSpreadHeight = 0xe0; // float
		constexpr auto ParachuteSpreadCheckOffsetX = 0xe4; // float
		constexpr auto ParachuteSpreadCheckOffsetZ = 0xe8; // float
		constexpr auto ParachuteSpreadCheckDist = 0xec; // float
		constexpr auto ParachuteSpreadCheckBoxHalfSize = 0xf0; // FVector
		constexpr auto ParachuteSkillKeyName = 0xfc; // FName
		constexpr auto bReadyToUseParachuteSkill = 0x104; // bool
		constexpr auto bUseDebugAltitude = 0x105; // bool
		constexpr auto CharacterPawn = 0x108; // ACrowCharacterPawn*
	}

	namespace n_UCrowCharacterSubAnimOnGround {
		constexpr auto AimOffsetDepends = 0x300; // FCrowCharacterAimOffsetDepends
		constexpr auto MontagesDepends = 0x350; // FCrowCharacterMontageDepends
		constexpr auto LerpedGaitValue = 0x3a0; // float
		constexpr auto SprintBlendSpeed = 0x3a4; // float
	}

	namespace n_UCrowGameModDetailWidget {
		constexpr auto SelectModButtonWidgetClass = 0x348; // UCrowSelectModButtonWidget*
		constexpr auto MapSelectButtonWidgetClass = 0x350; // UCrowMapSelectButtonWidget*
		constexpr auto CP_Gamemod_QuickplaySetting = 0x358; // UCanvasPanel*
		constexpr auto VB_QuickModList = 0x360; // UVerticalBox*
		constexpr auto SCB_QuickMapList = 0x368; // UScrollBox*
		constexpr auto TB_QuickMODName = 0x370; // UTextBlock*
		constexpr auto TB_QuickMapName = 0x378; // UTextBlock*
		constexpr auto TB_QuickMapDescription = 0x380; // UTextBlock*
		constexpr auto BT_QuickDefault = 0x388; // UCrowButton*
		constexpr auto BT_QuickApply = 0x390; // UCrowButton*
		constexpr auto CP_Gamemod_Setting = 0x398; // UCanvasPanel*
		constexpr auto IMG_GameMod = 0x3a0; // UImage*
		constexpr auto TB_LeftModName = 0x3a8; // UTextBlock*
		constexpr auto TB_LeftModDescription = 0x3b0; // UTextBlock*
		constexpr auto SCB_MapList = 0x3b8; // UScrollBox*
		constexpr auto TB_MODName = 0x3c0; // UTextBlock*
		constexpr auto TB_MapName = 0x3c8; // UTextBlock*
		constexpr auto TB_MapDescription = 0x3d0; // UTextBlock*
		constexpr auto BT_Apply = 0x3d8; // UCrowButton*
		constexpr auto CP_Gamemod_Select = 0x3e0; // UCanvasPanel*
		constexpr auto WB_ModQuickMatch_button = 0x3e8; // UCrowSelectModButtonBigWidget*
		constexpr auto WB_ModSquadMatch_button = 0x3f0; // UCrowSelectModButtonBigWidget*
		constexpr auto WB_ModConquestMatch_button = 0x3f8; // UCrowSelectModButtonBigWidget*
		constexpr auto WB_ModCustomMatch_button = 0x400; // UCrowSelectModButtonBigWidget*
		constexpr auto WB_ModTraining_button = 0x408; // UCrowSelectModButtonBigWidget*
		constexpr auto WB_CustomWaitingRoom = 0x410; // UCrowCustomWaitingRoomWidget*
		constexpr auto SelectedGameMode = 0x418; // ECrowGameMode
		constexpr auto SelectedMapIndex = 0x41c; // uint32_t
		constexpr auto SelectedQuickGameMode = 0x420; // ECrowGameMode
		constexpr auto SelectedQuickMatchInfos = 0x428; // TArray<FCrowMatchInfo>
		constexpr auto ModButtonBigWidgetArray = 0x438; // TArray<UCrowSelectModButtonBigWidget*>
	}

	namespace n_USmoothMeshTool {
		constexpr auto SmoothProperties = 0x400; // USmoothMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeSmoothProperties*
		constexpr auto DiffusionProperties = 0x410; // UDiffusionSmoothProperties*
		constexpr auto ImplicitProperties = 0x418; // UImplicitSmoothProperties*
		constexpr auto WeightMapProperties = 0x420; // USmoothWeightMapSetProperties*
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_UCrowInvenItemSlot {
		constexpr auto IsShowMouseDesc = 0x348; // bool
		constexpr auto ItemData = 0x350; // ACrowItemBase*
		constexpr auto WeaponPartsTableRow = 0x358; // FCrowWeaponPartsTableRow
		constexpr auto ItemInfoWidget = 0x650; // UCrowItemInfoWidget*
		constexpr auto ItemToolTipWidget = 0x658; // UUserWidget*
	}

	namespace n_UCrowMiningPointIcon {
		constexpr auto TB_Time = 0x3c8; // UTextBlock*
		constexpr auto DisplayTimeMinDistance = 0x3d0; // float
		constexpr auto DisplayTimeMaxDistance = 0x3d4; // float
	}

	namespace n_ULuminRuntimeSettings {
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_ACrowConquestHeavyBomberActor {
		constexpr auto StartDelayMin = 0x220; // float
		constexpr auto StartDelayMax = 0x224; // float
		constexpr auto AttackRadius = 0x228; // float
		constexpr auto AttackCount = 0x22c; // char
		constexpr auto Damage = 0x230; // FWeaponDamageSettings
		constexpr auto DamegeType = 0x258; // UDamageType*
		constexpr auto AttackDelayMin = 0x260; // float
		constexpr auto AttackDelayMax = 0x264; // float
		constexpr auto ExplosionEffect = 0x268; // UParticleSystem*
		constexpr auto FlyBySound = 0x270; // UAkAudioEvent*
		constexpr auto ExplosionSound = 0x278; // UAkAudioEvent*
		constexpr auto WarningFriendlySound = 0x280; // UAkAudioEvent*
		constexpr auto WarningEnemySound = 0x288; // UAkAudioEvent*
		constexpr auto AttackStartSound = 0x290; // UAkAudioEvent*
		constexpr auto AttackEndSound = 0x298; // UAkAudioEvent*
		constexpr auto CameraShake = 0x2a0; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x2a8; // float
		constexpr auto CameraShakeMaxDistance = 0x2ac; // float
		constexpr auto IconDisplayInfo = 0x2b0; // FCrowGameIconDisplayInfo
		constexpr auto CurrentState = 0x338; // ECrowConquestHeavyBomberState
		constexpr auto OwnerTeamID = 0x339; // char
		constexpr auto OwnerServerKey = 0x340; // uint64_t
		constexpr auto OwnerController = 0x348; // ACrowPlayerControllerBase*
		constexpr auto FireInfoArray = 0x350; // TArray<FCrowHeavyBomberInfo>
		constexpr auto FlyByInfoArray = 0x360; // TArray<FCrowHeavyBomberInfo>
	}

	namespace n_UCrowHealWidget {
		constexpr auto WB_HealGauge = 0x348; // UCrowHealGauge*
		constexpr auto CP_Message = 0x350; // UCanvasPanel*
		constexpr auto IMG_Box1 = 0x358; // UImage*
		constexpr auto IMG_Box2 = 0x360; // UImage*
		constexpr auto TB_Message = 0x368; // UTextBlock*
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UCrowCustomizeEmotionDescWidget {
		constexpr auto WB_Customize_TopMenu = 0x348; // UCrowTabOutfitWidget*
		constexpr auto HB_CustomizeEmotion_Shop_Button = 0x350; // UHorizontalBox*
		constexpr auto BT_AddShoppingBag = 0x358; // UCrowButton*
		constexpr auto BT_Buy = 0x360; // UCrowButton*
		constexpr auto WB_Shop_Popup_ExclusivePurchase_Quick = 0x368; // UCrowShoppingBagWidget*
		constexpr auto State = 0x370; // ECrowCustomizeEmotionDescState
		constexpr auto CategoryEmotionWidget = 0x378; // UCrowWidgetToggleButton*
		constexpr auto CategoryResultMVPWidget = 0x380; // UCrowWidgetToggleButton*
		constexpr auto EmotionListWidget = 0x388; // UCrowCustomizeEmotionListWidget*
		constexpr auto EmotionRadialWidget = 0x390; // UCrowCustomizeEmotionRadialWidget*
		constexpr auto ResultMVPListWidget = 0x398; // UCrowCustomizeEmotionListWidget*
		constexpr auto SelectedSlotWidget = 0x3a0; // UCrowCustomizeEmotionSlotWidget*
		constexpr auto SceneLobby = 0x3a8; // ACrowSceneLobby*
		constexpr auto LobbyCharacterPawn = 0x3b0; // ACrowLobbyCharacterPawn*
		constexpr auto SkeletalMeshActors = 0x3b8; // TArray<ASkeletalMeshActor*>
		constexpr auto EndPlayMontageTimerHandle = 0x3c8; // FTimerHandle
		constexpr auto EmotionListInfo = 0x3d8; // FCrowCustomizeEmotionListInfo
		constexpr auto ResultMVPListInfo = 0x400; // FCrowCustomizeEmotionListInfo
		constexpr auto CurrentAnimMontage = 0x428; // UAnimMontage*
		constexpr auto IsOwnList = 0x430; // bool
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_ACrowEscapePointActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto SmokeMesh = 0x230; // UStaticMeshComponent*
		constexpr auto SmokeEffectLocation = 0x238; // USceneComponent*
		constexpr auto SmokeEffect = 0x240; // UParticleSystem*
		constexpr auto DustEffect = 0x248; // UParticleSystem*
		constexpr auto SmokeSoundLoop = 0x250; // UAkAudioEvent*
		constexpr auto SmokeSoundEnd = 0x258; // UAkAudioEvent*
		constexpr auto bEmergency = 0x260; // bool
		constexpr auto EscapeVehicleClass = 0x268; // ACrowEscapeHeliPawn*
		constexpr auto SpawnVehicleTime = 0x270; // float
		constexpr auto VehicleWaitTime = 0x274; // float
		constexpr auto MoveVehicleTime = 0x278; // float
		constexpr auto IconCalled = 0x280; // FCrowGameIconDisplayInfo
		constexpr auto IconComplete = 0x308; // FCrowGameIconDisplayInfo
		constexpr auto CurrentState = 0x390; // ECrowEscapePointState
		constexpr auto PointID = 0x392; // uint16_t
		constexpr auto EscapeHeliPawn = 0x398; // ACrowEscapeHeliPawn*
		constexpr auto CallTeam = 0x3a0; // char
		constexpr auto SplineBeginComp = 0x3a8; // USplineComponent*
		constexpr auto SplineEndComp = 0x3b0; // USplineComponent*
		constexpr auto SmokeEffectComponent = 0x3b8; // UParticleSystemComponent*
		constexpr auto DustEffectComponent = 0x3c0; // UParticleSystemComponent*
	}

	namespace n_UCrowLobbyLoadoutListWidget {
		constexpr auto BT_NameChange = 0x380; // UCrowButton*
	}

	namespace n_UCrowWorldOcclusion {
		constexpr auto IsGridOcclusionEnabled = 0x28; // char : 1
		constexpr auto IsVisibleGridInitialized = 0x28; // char : 1
		constexpr auto IsPersistentLevelInitialized = 0x28; // char : 1
		constexpr auto World = 0x30; // UWorld*
		constexpr auto MapConfig = 0x38; // UCrowWorldMapConfig*
		constexpr auto PlayerController = 0x40; // APlayerController*
		constexpr auto UpdateDelay = 0x48; // float
		constexpr auto ControllerLocation = 0x4c; // FVector
		constexpr auto ActiveStreamingLevels = 0x58; // TMap<ULevelStreaming*, FCrowWorldLevelStreamData>
		constexpr auto GridOcclusion = 0xa8; // FCrowWorldGrid
		constexpr auto CurrentGridIndex = 0xc0; // uint32_t
		constexpr auto CurrentGridBox = 0xc4; // FBox
		constexpr auto VisibleGridIndexes = 0xe0; // TSet<uint32_t>
		constexpr auto LoadedLevelsCached = 0x130; // TArray<ULevelStreaming*>
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UCrowPlayerIndicatorOutside {
		constexpr auto IndicatorItemClass = 0x348; // UCrowPlayerIndicatorOutSideItem*
		constexpr auto ArrayOutsidePlayerPawns = 0x350; // TArray<ACrowCharacterPawn*>
		constexpr auto ArrayOutSideIndicators = 0x360; // TArray<UCrowPlayerIndicatorOutSideItem*>
	}

	namespace n_ACrowItemCurrencyBase {
		constexpr auto ItemTable = 0x318; // FCrowCurrencyTableRow
		constexpr auto UseDefaultSettings = 0x4c8; // bool
		constexpr auto CurrencyType = 0x4c9; // ECrowItemType
		constexpr auto ItemIndex = 0x4cc; // uint32_t
		constexpr auto ItemCount = 0x4d0; // uint32_t
	}

	namespace n_UCrowLedgeComponent {
		constexpr auto VaultType = 0x468; // ECrowLedgeVaultType
		constexpr auto TraceType = 0x469; // ECrowLedgeTraceType
	}

	namespace n_UCrowLobbySlotNameChangeWidget {
		constexpr auto TB_CurrentSlotname = 0x368; // UTextBlock*
		constexpr auto TB_Slotname_Text = 0x370; // UEditableTextBox*
		constexpr auto BT_Ok = 0x378; // UCrowButton*
		constexpr auto BT_Cancel = 0x380; // UCrowButton*
		constexpr auto LobbySlotType = 0x388; // ECrowLobbySlotType
		constexpr auto TargetSlotIndex = 0x38c; // int32_t
	}

	namespace n_UCrowRadialMenuButtonWidget {
		constexpr auto CP_Contents = 0x348; // UCanvasPanel*
		constexpr auto Radial_BTN = 0x350; // UCrowButton*
		constexpr auto IMG_SelectRadial_BTN = 0x358; // UImage*
		constexpr auto IMG_ItemBG = 0x360; // UImage*
		constexpr auto IMG_ItemIcon = 0x368; // UImage*
		constexpr auto TB_Item_Name = 0x370; // UTextBlock*
		constexpr auto TB_Item_Amount = 0x378; // UTextBlock*
		constexpr auto IconAngle = 0x3b0; // float
		constexpr auto ActivateAngleMin = 0x3b4; // float
		constexpr auto ActivateAngleMax = 0x3b8; // float
		constexpr auto HideAmount = 0x3bc; // bool
		constexpr auto SprayIndex = 0x3c0; // int32_t
	}

	namespace n_UCrowRankingScheduleTableManager {
		constexpr auto RankingScheduleTable = 0x28; // TMap<uint32_t, FCrowRankingScheduleTableRow>
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UCrowCustomAppearanceListWidget {
		constexpr auto GD_ItemList = 0x348; // UGridPanel*
		constexpr auto BD_SubTitle_Color = 0x350; // UBorder*
		constexpr auto GD_ColorItemList = 0x358; // UGridPanel*
		constexpr auto SCB_Itemlist = 0x360; // UScrollBox*
		constexpr auto IMG_Line = 0x368; // UImage*
		constexpr auto TB_Title = 0x370; // UTextBlock*
		constexpr auto HB_Appearance_SaveBT = 0x378; // UHorizontalBox*
		constexpr auto WB_BT_APPLY = 0x380; // UCrowButton*
		constexpr auto WB_BT_RESET = 0x388; // UCrowButton*
		constexpr auto CustomizeOutfitSlotWidgetClass = 0x390; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto CrowItemSlotMiniWidgetClass = 0x398; // UCrowItemSlotMiniWidget*
		constexpr auto SceneLobby = 0x3a0; // ACrowSceneLobby*
		constexpr auto CurrentCategorySlotWidget = 0x3a8; // UCrowCategorySlotBigWidget*
		constexpr auto IsOwnList = 0x3b0; // bool
		constexpr auto CurrTattooType = 0x3b1; // ECrowTattooType
	}

	namespace n_UCrowItemSlotWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto IMG_Equiped = 0x350; // UImage*
		constexpr auto BT_Customize_List_Slot = 0x358; // UCrowButton*
		constexpr auto TB_ItemName = 0x360; // UTextBlock*
		constexpr auto TB_Status = 0x368; // UTextBlock*
		constexpr auto IMG_Armory_Bg = 0x370; // UImage*
		constexpr auto CP_Lock_Armory = 0x378; // UCanvasPanel*
		constexpr auto CP_Cost = 0x380; // UCanvasPanel*
		constexpr auto TB_Label_Money = 0x388; // UTextBlock*
		constexpr auto WS_IconIMG = 0x390; // UWidgetSwitcher*
		constexpr auto IMG_IconIMG_Weapon = 0x398; // UImage*
		constexpr auto IMG_IcomIMG_Parts = 0x3a0; // UImage*
		constexpr auto CP_Lock = 0x3a8; // UCanvasPanel*
		constexpr auto IMG_Lock = 0x3b0; // UImage*
		constexpr auto TB_LockLv = 0x3b8; // UTextBlock*
		constexpr auto IMG_New = 0x3c0; // UImage*
		constexpr auto HB_WeaponInfo = 0x3c8; // UHorizontalBox*
		constexpr auto TB_WeaponLV = 0x3d0; // UTextBlock*
		constexpr auto PB_WeaponLV = 0x3d8; // UCrowProgressBar*
		constexpr auto TBItemName_Sel = 0x420; // UTextBlock*
		constexpr auto Selected = 0x428; // bool
		constexpr auto Equiped = 0x429; // bool
		constexpr auto UnEquipBtn = 0x42a; // bool
		constexpr auto useDeselect = 0x42b; // bool
		constexpr auto Locked = 0x42c; // bool
		constexpr auto SlotValue = 0x430; // int32_t
		constexpr auto IntValue = 0x434; // int32_t
		constexpr auto CurrentWeaponPartsTable = 0x438; // FCrowWeaponPartsTableRow
		constexpr auto CurrentWeaponTable = 0x730; // FCrowWeaponTableRow
		constexpr auto CurrentWeaponData = 0x1950; // FCrowWeaponData
		constexpr auto CurrentWeaponAccData = 0x1ab8; // FCrowWeaponAccData
		constexpr auto CurrentItemSlotWSType = 0x1b68; // ECrowItemSlotWSType
	}

	namespace n_UCrowScoreRankSlotData {
		constexpr auto Index = 0x28; // int32_t
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UCrowWidgetCircleGauge {
		constexpr auto BackBrush = 0x378; // FSlateBrush
		constexpr auto GaugeBrush = 0x400; // FSlateBrush
		constexpr auto GaugeMaterial = 0x488; // UMaterialInterface*
		constexpr auto Value = 0x490; // float
		constexpr auto DynamicMaterial = 0x498; // UMaterialInstanceDynamic*
		constexpr auto IMG_Gauge = 0x4a0; // UImage*
	}

	namespace n_UCrowSettingsSlotKeyBindingWidget {
		constexpr auto WS_KeyBinding_First = 0x348; // UWidgetSwitcher*
		constexpr auto IMG_SavedKeyBindingIcon_First = 0x350; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_First = 0x358; // UImage*
		constexpr auto BT_KeyBinding_First = 0x360; // UCrowButton*
		constexpr auto WS_KeyBinding_Second = 0x368; // UWidgetSwitcher*
		constexpr auto BT_KeyBinding_Second = 0x370; // UCrowButton*
		constexpr auto IMG_SavedKeyBindingIcon_Second = 0x378; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_Second = 0x380; // UImage*
		constexpr auto IMG_SavedKeyBindingIcon_First_C1 = 0x388; // UImage*
		constexpr auto IMG_SavedKeyBindingIcon_First_C2 = 0x390; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_First_C1 = 0x398; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_First_C2 = 0x3a0; // UImage*
		constexpr auto IMG_SavedKeyBindingIcon_Second_C1 = 0x3a8; // UImage*
		constexpr auto IMG_SavedKeyBindingIcon_Second_C2 = 0x3b0; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_Second_C1 = 0x3b8; // UImage*
		constexpr auto IMG_ChangeKeyBindingIcon_Second_C2 = 0x3c0; // UImage*
		constexpr auto IMG_Combination_Mark = 0x3c8; // UImage*
		constexpr auto SavedKeyBindingIcons = 0x3d0; // TArray<UImage*>
		constexpr auto ChangeKeyBindingIcons = 0x3e0; // TArray<UImage*>
		constexpr auto CombinationSavedKeyBindingIcons = 0x3f0; // TArray<UImage*>
		constexpr auto CombinationChangKeyBindingIcons = 0x400; // TArray<UImage*>
		constexpr auto ActionSlots = 0x410; // TArray<FActionKeySlot>
		constexpr auto AxisSlots = 0x420; // TArray<FAxisKeySlot>
		constexpr auto bIsEditingMode = 0x430; // bool
		constexpr auto bIsAxisSlot = 0x431; // bool
		constexpr auto OwnerSlot = 0x438; // UCrowSettingsSlotWidget*
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Smoke_TP_C {
		constexpr auto IMG_ZoomIn_2 = 0x460; // UImage*
		constexpr auto IMG_ZoomIn_4 = 0x468; // UImage*
	}

	namespace n_UCrowWeaponPartsUnlockTableManager {
		constexpr auto UnlockWeaponPartsData = 0x28; // TMap<int32_t, FCrowWeaponPartsUnlockTableRow>
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Tusk_Third_C {
		constexpr auto b_Crosshair = 0x438; // UBorder*
		constexpr auto ImageCenter = 0x440; // UImage*
		constexpr auto ImageCenterBorder = 0x448; // UImage*
		constexpr auto ImageDown = 0x450; // UImage*
		constexpr auto ImageDownBorder = 0x458; // UImage*
		constexpr auto ImageLeft = 0x460; // UImage*
		constexpr auto ImageLeftBorder = 0x468; // UImage*
		constexpr auto ImageRight = 0x470; // UImage*
		constexpr auto ImageRightBorder = 0x478; // UImage*
		constexpr auto ImageUp = 0x480; // UImage*
		constexpr auto ImageUpBorder = 0x488; // UImage*
		constexpr auto IMG_Box_CrossHair = 0x490; // UImage*
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UCrowDebugLogger {
		constexpr auto CharArray = 0x30; // TArray<ACrowCharacterPawn*>
		constexpr auto VehicleArray = 0x40; // TArray<ACrowVehiclePawn*>
		constexpr auto WeaponArray = 0x50; // TArray<ACrowWeaponBase*>
		constexpr auto ItemArray = 0x60; // TSet<ACrowItemBase*>
		constexpr auto InventoryArray = 0xb0; // TSet<ACrowPickupInventory*>
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UCrowBoatsSimEngine {
		constexpr auto EngineIndex = 0x1f8; // int32_t
		constexpr auto BodyMesh = 0x200; // USkeletalMeshComponent*
		constexpr auto EngineConfig = 0x208; // UCrowBoatsConfigEngine*
		constexpr auto BodyConfig = 0x210; // UCrowBoatsConfigBody*
		constexpr auto OceanTracker = 0x218; // UCrowVehicleOceanTracker*
		constexpr auto InitialTransform = 0x220; // FTransform
		constexpr auto SubstepLocation = 0x250; // FVector
		constexpr auto SubstepLinearForce = 0x25c; // FVector
		constexpr auto SubstepAngularForce = 0x268; // FVector
		constexpr auto AccelerationInput = 0x274; // FCrowVehicleInputValue
		constexpr auto TargetAccelerationInput = 0x27c; // float
		constexpr auto SteeringInput = 0x280; // FCrowVehicleInputValue
		constexpr auto TargetSteeringInput = 0x288; // float
		constexpr auto DebugEngineDepthRatio = 0x28c; // float
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UBTTask_CrowFindRandomPatrol {
		constexpr auto PatrolRadius = 0x98; // float
	}

	namespace n_UOceanCollisionComponent {
		constexpr auto CachedBodySetup = 0x440; // UBodySetup*
	}

	namespace n_UCrowWebEventManager {
		constexpr auto HttpDownloader = 0x28; // UCrowHttpDownloader*
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UCrowCustomWaitingRoomWidget {
		constexpr auto CustomWaitingRoomSlotClass = 0x348; // UCrowCustomWaitingRoomSlotWidget*
		constexpr auto CustomUserSlotWidgetClass = 0x350; // UCrowCustomUserSlotWidget*
		constexpr auto RoomListRefreshTime = 0x358; // float
		constexpr auto MinUser = 0x35c; // uint32_t
		constexpr auto TeamMinUser = 0x360; // uint32_t
		constexpr auto WS_CustomMod = 0x368; // UWidgetSwitcher*
		constexpr auto EDB_SearchCustomName = 0x370; // UMultiLineEditableText*
		constexpr auto BT_Refresh = 0x378; // UCrowButton*
		constexpr auto WB_Button_Sorting_Room = 0x380; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_Mode = 0x388; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_Map = 0x390; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_UserCount = 0x398; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_State = 0x3a0; // UCrowSortButtonWidget*
		constexpr auto VB_FilterState = 0x3a8; // UVerticalBox*
		constexpr auto VB_FilterMode = 0x3b0; // UVerticalBox*
		constexpr auto VB_FilterMaxUser = 0x3b8; // UVerticalBox*
		constexpr auto VB_FilterRemainSlot = 0x3c0; // UVerticalBox*
		constexpr auto SB_SessionList = 0x3c8; // UScrollBox*
		constexpr auto BT_Join = 0x3d0; // UCrowButton*
		constexpr auto BT_Create = 0x3d8; // UCrowButton*
		constexpr auto BT_WaitingRoomExit = 0x3e0; // UCrowButton*
		constexpr auto BT_Customfilter = 0x3e8; // UCrowToggleButton*
		constexpr auto CP_FilterPopup = 0x3f0; // UCanvasPanel*
		constexpr auto BT_FilterCancel = 0x3f8; // UCrowButton*
		constexpr auto BT_FilterOK = 0x400; // UCrowButton*
		constexpr auto WS_SwitchMod = 0x408; // UWidgetSwitcher*
		constexpr auto VB_Ateam = 0x410; // UVerticalBox*
		constexpr auto VB_Bteam = 0x418; // UVerticalBox*
		constexpr auto SB_SquadList = 0x420; // UScrollBox*
		constexpr auto VB_SquadList = 0x428; // UVerticalBox*
		constexpr auto CP_Spctating = 0x430; // UCanvasPanel*
		constexpr auto GP_SpectatingList = 0x438; // UGridPanel*
		constexpr auto CP_unassigned = 0x440; // UCanvasPanel*
		constexpr auto GP_unassignedList = 0x448; // UGridPanel*
		constexpr auto BT_Setting = 0x450; // UCrowButton*
		constexpr auto BT_Invite = 0x458; // UCrowButton*
		constexpr auto BT_Exit = 0x460; // UCrowButton*
		constexpr auto CP_CustomListDesc = 0x468; // UCanvasPanel*
		constexpr auto IMG_Map = 0x470; // UCrowWidgetImage*
		constexpr auto TB_RoomName = 0x478; // UTextBlock*
		constexpr auto TB_ModeName = 0x480; // UTextBlock*
		constexpr auto TB_MapName = 0x488; // UTextBlock*
		constexpr auto TB_RoomOnwer = 0x490; // UTextBlock*
		constexpr auto TB_UserCount = 0x498; // UTextBlock*
		constexpr auto TB_PlayTime = 0x4a0; // UTextBlock*
		constexpr auto HB_WinPoint = 0x4a8; // UHorizontalBox*
		constexpr auto TB_WinPoint = 0x4b0; // UTextBlock*
		constexpr auto WB_Custom_CreateSession_Popup = 0x4b8; // UCrowCustomCreateRoomPopupWidget*
		constexpr auto WB_CustomInvitePopup = 0x4c0; // UCrowCustomInvitePopupWidget*
		constexpr auto WB_CustomPasswordPopup = 0x4c8; // UCrowCustomPasswordPopupWidget*
		constexpr auto BT_Play = 0x4d0; // UCrowButton*
		constexpr auto CurrentCustomMode = 0x4d8; // ECrowCustomMode
		constexpr auto SelectedRoomInfo = 0x4e0; // FCrowCustomDisplayRoomInfo
		constexpr auto SelectedCustomUserSlot = 0x528; // UCrowCustomUserSlotWidget*
		constexpr auto RoomListTimerHandle = 0x530; // FTimerHandle
		constexpr auto KickUserID = 0x538; // uint64_t
		constexpr auto SortButtonList = 0x540; // TArray<UCrowSortButtonWidget*>
		constexpr auto FilterInfo = 0x550; // FCrowCustomFilterInfo
		constexpr auto FilterInfoTemp = 0x55c; // FCrowCustomFilterInfo
		constexpr auto CustomATeamSquadMap = 0x568; // TMap<char, UCrowCustomSquadSlotWidget*>
		constexpr auto CustomBTeamSquadMap = 0x5b8; // TMap<char, UCrowCustomSquadSlotWidget*>
		constexpr auto CustomSquadMap = 0x608; // TMap<char, UCrowCustomSquadSlotWidget*>
		constexpr auto CustomWatcherMap = 0x658; // TMap<char, UCrowCustomUserSlotWidget*>
		constexpr auto CustomMisassignMap = 0x6a8; // TMap<char, UCrowCustomUserSlotWidget*>
		constexpr auto FilterSlotStateArray = 0x6f8; // TArray<UCrowCustomFilterSlotWidge*>
		constexpr auto FilterSlotGameModeArray = 0x708; // TArray<UCrowCustomFilterSlotWidge*>
		constexpr auto FilterSlotMaxUserArray = 0x718; // TArray<UCrowCustomFilterSlotWidge*>
		constexpr auto FilterSlotReaminSlotArray = 0x728; // TArray<UCrowCustomFilterSlotWidge*>
		constexpr auto SearchName = 0x738; // FString
	}

	namespace n_UCrowRotorFSM {
		constexpr auto SpinSetup = 0x170; // FCrowRotorSpinSetup
		constexpr auto GroundFxDataTable = 0x1a0; // UDataTable*
		constexpr auto EjectWarningAudioTamplate = 0x1a8; // USoundCue*
		constexpr auto EjectCaution_W = 0x1b0; // UAkAudioEvent*
		constexpr auto CameraPivotTP = 0x1b8; // UCrowCameraPivotHeliComponent*
		constexpr auto RotorSpinFactor = 0x1c0; // float
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UCrowTCCompositionCDefuseHUD {
		constexpr auto TriggerCommandGaugeBar = 0xc0; // UCrowTriggerCommandGaugeBar*
		constexpr auto TargetTriggerControlComponent = 0xc8; // UCrowTriggerControlComponent*
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UCrowDeathZoneManager {
		constexpr auto DeathZoneLifeTime = 0xb0; // float
		constexpr auto DeathZoneOverlapRefMap = 0xb8; // TMap<uint32_t, FCrowDeathZoneOverlapRef>
		constexpr auto PostProcessComp = 0x108; // UCrowLocalPostProcessComponent*
		constexpr auto DeathZoneWidget = 0x110; // UCrowDeathZoneWidget*
		constexpr auto DeathZoneArray = 0x118; // TArray<ACrowDeathZoneMesh*>
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UMeshSelectionTool {
		constexpr auto SelectionProps = 0x200; // UMeshSelectionToolProperties*
		constexpr auto SelectionActions = 0x208; // UMeshSelectionEditActions*
		constexpr auto EditActions = 0x210; // UMeshSelectionToolActionPropertySet*
		constexpr auto Selection = 0x218; // UMeshSelectionSet*
		constexpr auto SpawnedActors = 0x220; // TArray<AActor*>
	}

	namespace n_UPolyEditOffsetProperties {
		constexpr auto bUseFaceNormals = 0x60; // bool
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UIterativeOffsetProperties {
		constexpr auto Steps = 0x60; // int32_t
		constexpr auto bOffsetBoundaries = 0x64; // bool
		constexpr auto SmoothingPerStep = 0x68; // float
		constexpr auto bReprojectSmooth = 0x6c; // bool
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_ACrowFxRandomActivator {
		constexpr auto ParticleFX = 0x220; // UParticleSystem*
		constexpr auto StartPlay = 0x228; // bool
		constexpr auto StartPlayDelayTime = 0x22c; // float
		constexpr auto TimeMin = 0x230; // float
		constexpr auto TimeMax = 0x234; // float
		constexpr auto LobbyAudioEvents = 0x238; // TArray<UAkAudioEvent*>
		constexpr auto LobbyAudioStopEvents = 0x248; // TArray<UAkAudioEvent*>
		constexpr auto AudioTarget = 0x258; // AActor*
		constexpr auto SphereComponent = 0x270; // USphereComponent*
		constexpr auto FxParticlesComp = 0x278; // UParticleSystemComponent*
	}

	namespace n_UCrowPlayerIndicatorOutSideItem {
		constexpr auto SB_Indicator = 0x348; // USizeBox*
		constexpr auto TargetPawn = 0x350; // ACrowCharacterPawn*
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_ACrowSpectatorPawnCustomMode {
		constexpr auto bIsVisiblePlayerList = 0x348; // bool
	}

	namespace n_UCrowWorldMapLocationWidget {
		constexpr auto GridSize = 0x348; // float
		constexpr auto ArrayHorizonText = 0x350; // TArray<FText>
		constexpr auto ArrayVerticalText = 0x360; // TArray<FText>
		constexpr auto GridPanelX = 0x378; // UHorizontalBox*
		constexpr auto GridPanelY = 0x380; // UVerticalBox*
		constexpr auto HorizontalSlotList = 0x388; // TArray<UCrowWorldMapLocationSlot*>
		constexpr auto VerticalSlotList = 0x398; // TArray<UCrowWorldMapLocationSlot*>
		constexpr auto GridSlot = 0x3a8; // UUserWidget*
		constexpr auto PanelSlotX = 0x3b0; // UCanvasPanelSlot*
		constexpr auto PanelSlotY = 0x3b8; // UCanvasPanelSlot*
		constexpr auto DefaultSlotPosX = 0x3c0; // FVector2D
		constexpr auto DefaultSlotPosY = 0x3c8; // FVector2D
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x470; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x478; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x480; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x490; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x598; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5a0; // int32_t
		constexpr auto MinLodModel = 0x5a4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5b0; // float
		constexpr auto LODInfo = 0x5c0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x5f4; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x5f6; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x5f6; // char : 1
		constexpr auto bForceWireframe = 0x5f6; // char : 1
		constexpr auto bDisplayBones = 0x5f6; // char : 1
		constexpr auto bDisableMorphTarget = 0x5f6; // char : 1
		constexpr auto bHideSkin = 0x5f7; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x5f7; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x5f7; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x5f7; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x5f7; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x5f7; // char : 1
		constexpr auto bRecentlyRendered = 0x5f7; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x5f7; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x5f8; // char : 1
		constexpr auto bCPUSkinning = 0x5f8; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x5f8; // char : 1
		constexpr auto bRenderStatic = 0x5f8; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x5f8; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x5f9; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x5f9; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x5fc; // float
		constexpr auto CachedWorldSpaceBounds = 0x610; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x630; // FMatrix
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_AMagicLeapARPinInfoActorBase {
		constexpr auto PinId = 0x220; // FGuid
		constexpr auto bVisibilityOverride = 0x230; // bool
	}

	namespace n_ACrowRespawnPickupInventory {
		constexpr auto EffectActive = 0x2b8; // UParticleSystemComponent*
		constexpr auto AniClose = 0x2c0; // UAnimationAsset*
		constexpr auto AniAjar = 0x2c8; // UAnimationAsset*
		constexpr auto AniOpen = 0x2d0; // UAnimationAsset*
		constexpr auto AniCloseToAjar = 0x2d8; // UAnimationAsset*
		constexpr auto AniAjarToClose = 0x2e0; // UAnimationAsset*
		constexpr auto AniAjarToOpen = 0x2e8; // UAnimationAsset*
		constexpr auto AniOpenToClose = 0x2f0; // UAnimationAsset*
		constexpr auto SoundLoop = 0x2f8; // UAkAudioEvent*
		constexpr auto SoundLoopEnd = 0x300; // UAkAudioEvent*
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_ABP_CrowPickupInventory_C {
		constexpr auto CorpseBag1 = 0x2b8; // USkeletalMeshComponent*
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UWB_A10Bombard_Worldmap_C {
		constexpr auto Ani_Striking = 0x358; // UWidgetAnimation*
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseWindowsInstallationPath = 0x28; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x38; // FFilePath
		constexpr auto EnableAutomaticAssetSynchronization = 0x48; // bool
		constexpr auto WaapiIPAddress = 0x50; // FString
		constexpr auto WaapiPort = 0x60; // uint32_t
		constexpr auto bAutoConnectToWAAPI = 0x64; // bool
		constexpr auto AutoSyncSelection = 0x65; // bool
		constexpr auto SuppressWwiseProjectPathWarnings = 0x66; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x67; // bool
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UWB_BombMission_CompositionCArea_WorldMapIcon_C {
		constexpr auto IMG_bombC4_2 = 0x348; // UCrowWidgetImage*
	}

	namespace n_ABP_C4_Ammo_C {
		constexpr auto SkeletalMesh = 0x1960; // USkeletalMeshComponent*
	}

	namespace n_USetCollisionGeometryToolProperties {
		constexpr auto GeometryType = 0x60; // ECollisionGeometryType
		constexpr auto InputMode = 0x64; // ESetCollisionGeometryInputMode
		constexpr auto bUseWorldSpace = 0x68; // bool
		constexpr auto bRemoveContained = 0x69; // bool
		constexpr auto bEnableMaxCount = 0x6a; // bool
		constexpr auto MaxCount = 0x6c; // int32_t
		constexpr auto MinThickness = 0x70; // float
		constexpr auto bDetectBoxes = 0x74; // bool
		constexpr auto bDetectSpheres = 0x75; // bool
		constexpr auto bDetectCapsules = 0x76; // bool
		constexpr auto bSimplifyHulls = 0x77; // bool
		constexpr auto HullTargetFaceCount = 0x78; // int32_t
		constexpr auto bSimplifyPolygons = 0x7c; // bool
		constexpr auto HullTolerance = 0x80; // float
		constexpr auto SweepAxis = 0x84; // EProjectedHullAxis
		constexpr auto bAppendToExisting = 0x88; // bool
		constexpr auto SetCollisionType = 0x8c; // ECollisionGeometryMode
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_UCrowBuildingHISMCDetailCache {
		constexpr auto CachedDetails = 0x28; // TMap<UStaticMesh*, FCrowBuildingHISMCDetail>
	}

	namespace n_UCrowLoadingManager {
		constexpr auto WeaponLoadOutLevel = 0x30; // ULevelStreamingDynamic*
		constexpr auto SceneData = 0x38; // FCrowSceneTableRow
	}

	namespace n_UCrowWeaponSpreadComponent {
		constexpr auto LastMovementFlags = 0xb0; // ECrowMovementFlags
		constexpr auto NormalSpreadInfo = 0xb8; // FWeaponSpreadInfo
		constexpr auto NormalLinearCurve = 0x168; // FCrowLinearCurve
		constexpr auto AimSpreadInfo = 0x198; // FWeaponSpreadInfo
		constexpr auto AimLinearCurve = 0x248; // FCrowLinearCurve
		constexpr auto WeaponState = 0x278; // ECrowWeaponState
		constexpr auto PartsOptions = 0x27c; // FCrowWeaponPartsOptions
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UCrowLaserBeamComponent {
		constexpr auto LineMesh01 = 0x1f8; // UStaticMeshComponent*
		constexpr auto LineMesh02 = 0x200; // UStaticMeshComponent*
		constexpr auto LaserBeamMaterial = 0x208; // UMaterialInterface*
		constexpr auto LaserBeamSmallDecal = 0x210; // UMaterialInterface*
		constexpr auto LaserBeamBigDecal = 0x218; // UMaterialInterface*
		constexpr auto LaserBeamMaxDistance = 0x220; // float
		constexpr auto LaserBeamWidth = 0x224; // float
		constexpr auto BigDecalMaxDistance = 0x228; // float
		constexpr auto LaserBeamColor = 0x22c; // FLinearColor
		constexpr auto LaserBeamThickness = 0x23c; // float
		constexpr auto LaserBeamBright = 0x240; // float
		constexpr auto LaserBeamVisible = 0x244; // bool
		constexpr auto MaterialDynamic = 0x248; // UMaterialInstanceDynamic*
		constexpr auto SmallDecal = 0x250; // UDecalComponent*
		constexpr auto BigDecal = 0x258; // UDecalComponent*
		constexpr auto IgnoreActorArray = 0x260; // TArray<AActor*>
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x440; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x458; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_ACrowSupplyEventPlaneActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto StartLocation = 0x230; // FVector
		constexpr auto EndLocation = 0x23c; // FVector
		constexpr auto Speed = 0x248; // float
		constexpr auto SoundFlight = 0x250; // UAkAudioEvent*
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_HG002_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto HG_Lasersight_DOWN = 0x270; // USkeletalMeshComponent*
	}

	namespace n_ABP_ClaymoreMine_Ammo_C {
		constexpr auto CrowLaserBeam_R = 0x19e0; // UCrowLaserBeamComponent*
		constexpr auto CrowLaserBeam_L = 0x19e8; // UCrowLaserBeamComponent*
		constexpr auto Look = 0x19f0; // USphereComponent*
		constexpr auto Enter = 0x19f8; // USphereComponent*
		constexpr auto CrowTrigger = 0x1a00; // UCrowTriggerComponent*
		constexpr auto SkeletalMesh = 0x1a08; // USkeletalMeshComponent*
	}

	namespace n_ACrowItemTableOverviewSKC {
		constexpr auto Mesh = 0x228; // USkeletalMeshComponent*
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UCrowProgressBar {
		constexpr auto bIsVolatilityEffect = 0x330; // bool
		constexpr auto bIsOnlyVisibleWhileProcessing = 0x331; // bool
		constexpr auto bUseBackgroundColorWhenReachTheZero = 0x332; // bool
		constexpr auto IncreasePercentageEffectTimeSeconds = 0x334; // float
		constexpr auto DecreasePercentageEffectTimeSeconds = 0x338; // float
		constexpr auto NormalColor = 0x33c; // FLinearColor
		constexpr auto IncreaseVolatilityColor = 0x34c; // FLinearColor
		constexpr auto DecreaseVolatilityColor = 0x35c; // FLinearColor
		constexpr auto BackgroundColorWhenReachTheZero = 0x36c; // FLinearColor
		constexpr auto bIsProcess = 0x37c; // bool
		constexpr auto bIsIncrease = 0x37d; // bool
		constexpr auto VolatilityStartPercentage = 0x380; // float
		constexpr auto VolatilityTargetPercentage = 0x384; // float
		constexpr auto VolatilityStartTimeSeconds = 0x388; // float
		constexpr auto BackgroundColor = 0x38c; // FLinearColor
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_URevolveToolProperties {
		constexpr auto bConnectOpenProfileToAxis = 0xb0; // bool
		constexpr auto bSnapToWorldGrid = 0xb1; // bool
		constexpr auto DrawPlaneOrigin = 0xb4; // FVector
		constexpr auto DrawPlaneOrientation = 0xc0; // FRotator
		constexpr auto bEnableSnapping = 0xcc; // bool
		constexpr auto bAllowedToEditDrawPlane = 0xcd; // bool
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UCrowPrepareMatchSquadMatchWidget {
		constexpr auto TB_Player = 0x348; // UTextBlock*
		constexpr auto TB_PlayerCount = 0x350; // UTextBlock*
		constexpr auto WidgetType = 0x364; // ECrowMatchWidgetType
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UCrowWheeledFSM {
		constexpr auto EngineStartTime = 0x170; // float
		constexpr auto ShutDownTime = 0x174; // float
		constexpr auto FxSetup = 0x178; // FCrowWheeledFxSetup
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UCombineMeshesToolProperties {
		constexpr auto bIsDuplicateMode = 0x60; // bool
		constexpr auto WriteOutputTo = 0x64; // ECombineTargetType
		constexpr auto OutputName = 0x68; // FString
		constexpr auto OutputAsset = 0x78; // FString
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_UCrowCharacterSKC {
		constexpr auto ComponentTransformUpdateDelayMin = 0xed0; // float
		constexpr auto ComponentTransformUpdateDelayMax = 0xed4; // float
		constexpr auto ComponentTransformUpdateDistanceMin = 0xed8; // float
		constexpr auto CachedWorldTransform = 0xee0; // FTransform
		constexpr auto RootBoneRelativeTransform = 0xf10; // FTransform
		constexpr auto TransformUpdateDelay = 0xf40; // float
	}

	namespace n_ACrowPlayerStateBase {
		constexpr auto PlayerNickName = 0x328; // FString
		constexpr auto TeamInfo = 0x338; // FCrowTeamInfo
		constexpr auto CurrentState = 0x368; // ECrowPlayerState
		constexpr auto RevivalCount = 0x36c; // uint32_t
		constexpr auto EnemyDyingCount = 0x370; // uint32_t
		constexpr auto KillCount = 0x374; // uint32_t
		constexpr auto DeathCount = 0x378; // uint32_t
		constexpr auto ComboKillCount = 0x37c; // uint32_t
		constexpr auto Level = 0x380; // uint32_t
		constexpr auto UserExp = 0x388; // uint64_t
		constexpr auto PreLevel = 0x390; // uint32_t
		constexpr auto PreUserExp = 0x398; // uint64_t
		constexpr auto SquadScore = 0x3a0; // uint32_t
		constexpr auto BleedingType = 0x3a4; // ECrowBleedingType
		constexpr auto AddedDyingSecond = 0x3a8; // float
		constexpr auto IsReviving = 0x3ac; // bool
		constexpr auto bIsFirstRespawnSelected = 0x3ad; // bool
		constexpr auto SaveGameServerExpInfo = 0x3b0; // FCrowSaveGameServerExpInfo
		constexpr auto TakeExpInfo = 0x408; // FCrowTakeExpInfo
		constexpr auto TakeTotalExp = 0x498; // uint32_t
		constexpr auto TotalScore = 0x49c; // uint32_t
		constexpr auto ServerKey = 0x4a0; // uint64_t
		constexpr auto VehicleSeatIndex = 0x4a8; // int8_t
		constexpr auto BattleMoneyCount = 0x4ac; // int32_t
		constexpr auto bIsDisconnected = 0x4b0; // bool
		constexpr auto SkydivingState = 0x4b1; // ECrowSkydivingState
		constexpr auto CurrentFilterDurability = 0x4b4; // float
		constexpr auto bGasMaskOn = 0x4b8; // bool
		constexpr auto FilterContaminateTimerHandle = 0x4c0; // FTimerHandle
		constexpr auto LastHitInfo = 0x4c8; // FCharacterHitInfo
		constexpr auto GameInventory = 0x5f8; // UCrowGameInvenComponent*
		constexpr auto DefaultWeaponArray = 0x600; // TArray<FCrowWeaponData>
		constexpr auto DefaultEquipItemArray = 0x610; // TArray<FCrowItemData>
		constexpr auto DefaultInvenItemArray = 0x620; // TArray<FCrowItemData>
		constexpr auto PickupInventoryClass = 0x630; // UObject*
		constexpr auto LastCharacterPawn = 0x638; // ACrowCharacterPawn*
		constexpr auto LastReplicatedPawn = 0x640; // APawn*
		constexpr auto SquadInfo = 0x648; // UCrowSquadInfo*
		constexpr auto DyingWidget = 0x650; // UCrowWidgetDying*
		constexpr auto DyingLastHitInfo = 0x658; // FCharacterHitInfo
		constexpr auto ChatHandler = 0x788; // UCrowIngameChatHandler*
		constexpr auto PassengerInventory = 0x790; // UCrowPassengerInventory*
		constexpr auto SpectatingWaitTimerHandle = 0x798; // FTimerHandle
		constexpr auto LastCharacterPawnTransform = 0x7a0; // FTransform
		constexpr auto BackupPlayerInfo = 0x7d0; // FCrowResultTopPlayerInfo
		constexpr auto IngameRecordManager = 0x978; // UCrowIngameRecordManager*
		constexpr auto SquadNumber = 0x980; // int32_t
		constexpr auto FilterContaminationPerSecond = 0x984; // float
		constexpr auto MaxFilterDurablility = 0x988; // float
		constexpr auto SupplyTableIndex = 0x998; // uint32_t
		constexpr auto DestroyVehicleInfoMap = 0x9a0; // TMap<EVehicleIdentity, int32_t>
		constexpr auto KillVehicleWeaponCount = 0x9f0; // uint32_t
		constexpr auto GodModeTimerHandle = 0xa28; // FTimerHandle
		constexpr auto OwnerPlayerController = 0xa30; // ACrowPlayerControllerBase*
		constexpr auto ArrayKillPlayerState = 0xa60; // TArray<ACrowPlayerStateBase*>
		constexpr auto LastKillMePlayerState = 0xa70; // ACrowPlayerStateBase*
		constexpr auto KitBomberTargetActor = 0xa78; // AActor*
		constexpr auto KitBomberUsePos = 0xa80; // FVector
		constexpr auto KitBomberTargetPos = 0xa8c; // FVector
		constexpr auto BombingTableIndex = 0xa98; // int32_t
		constexpr auto WorldMapIcon = 0xaa0; // UCrowWorldMapIcon*
		constexpr auto RemainSquadRespawnCount = 0xaa8; // int32_t
		constexpr auto MissionSystem = 0xb18; // UCrowMissionSystemManager*
		constexpr auto SupplyBoxPublicLastUsingTimes = 0xb20; // TMap<ECrowSupplyBoxType, float>
		constexpr auto BattleStatus = 0xb70; // UCrowBattleStatus*
	}

	namespace n_UCrowTriggerCommandDrawOutline {
		constexpr auto TargetPrimitive = 0xc0; // UPrimitiveComponent*
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UCrowCustomFilterSlotWidge {
		constexpr auto BT_Toggle = 0x348; // UCrowToggleButton*
		constexpr auto TB_SlotName = 0x350; // UTextBlock*
		constexpr auto TB_SelectedSlotName = 0x358; // UTextBlock*
		constexpr auto SlotValue = 0x370; // uint32_t
		constexpr auto LabelName = 0x378; // FText
	}

	namespace n_UFixedPlaneBrushProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UCrowHUDBombMissionWidget {
		constexpr auto IMGLoadout = 0x348; // UImage*
		constexpr auto IMGBombPossession = 0x350; // UImage*
		constexpr auto TBTeamPosition = 0x358; // UTextBlock*
		constexpr auto IMGTeamPositionBG = 0x360; // UImage*
		constexpr auto CPLoadoutMessage = 0x368; // UCanvasPanel*
		constexpr auto ResultRoundWidget = 0x370; // UCrowBombMissionResultRoundWidget*
		constexpr auto PlayerStateBombMission = 0x378; // ACrowPlayerStateBombMission*
		constexpr auto RedTeamColor = 0x380; // FLinearColor
		constexpr auto BlueTeamColor = 0x390; // FLinearColor
		constexpr auto TBStartMessage = 0x3a0; // UTextBlock*
		constexpr auto AniStartMessage = 0x3a8; // UWidgetAnimation*
		constexpr auto WB_StatusPlayerInfo_BoomMission = 0x3b0; // UCrowStatusPlayerInfo*
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x250; // FSoftObjectPath
		constexpr auto CameraSettings = 0x268; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x270; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x278; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x280; // char : 1
		constexpr auto bOverrideInstanceData = 0x280; // char : 1
		constexpr auto bReplicatePlayback = 0x280; // char : 1
		constexpr auto DefaultInstanceData = 0x288; // UObject*
		constexpr auto BurnInInstance = 0x290; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x298; // bool
	}

	namespace n_UCrowStatusPlayerInfo {
		constexpr auto IsHidePlayerNum = 0x348; // bool
		constexpr auto IsHidePlayerName = 0x349; // bool
		constexpr auto BaseSeriousWoundHPPercentage = 0x34c; // float
		constexpr auto NormalHPColor = 0x350; // FLinearColor
		constexpr auto SeriousWoundHPColor = 0x360; // FLinearColor
		constexpr auto CP_PlayerName = 0x370; // UCanvasPanel*
		constexpr auto CP_PlayerNum = 0x378; // UCanvasPanel*
		constexpr auto CP_Dive = 0x380; // UCanvasPanel*
		constexpr auto TB_NickName = 0x388; // UTextBlock*
		constexpr auto TB_SquadNum = 0x390; // UTextBlock*
		constexpr auto IMG_SquadBack = 0x398; // UImage*
		constexpr auto IMG_SquadLeader = 0x3a0; // UImage*
		constexpr auto IMG_RankIcon = 0x3a8; // UImage*
		constexpr auto PB_NomalHPBar = 0x3b0; // UProgressBar*
		constexpr auto PB_DamagedHPBar = 0x3b8; // UCrowProgressBar*
		constexpr auto TB_Health = 0x3c0; // UTextBlock*
		constexpr auto VoiceSwitcher = 0x3c8; // UWidgetSwitcher*
		constexpr auto HB_UnderBar = 0x3d0; // UHorizontalBox*
		constexpr auto VivoxManager = 0x3e8; // UCrowVivoxManager*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UVoxelProperties {
		constexpr auto VoxelCount = 0x60; // int32_t
		constexpr auto bAutoSimplify = 0x64; // bool
		constexpr auto bRemoveInternalSurfaces = 0x65; // bool
		constexpr auto SimplifyMaxErrorFactor = 0x68; // double
		constexpr auto CubeRootMinComponentVolume = 0x70; // double
	}

	namespace n_UBTDecorator_CrowCooldown {
		constexpr auto ResetCooldownTimeOnInitialize = 0x70; // bool
	}

	namespace n_UDisplaceMeshSineWaveProperties {
		constexpr auto SineWaveFrequency = 0x60; // float
		constexpr auto SineWavePhaseShift = 0x64; // float
		constexpr auto SineWaveDirection = 0x68; // FVector
	}

	namespace n_UNiagaraDataInterfaceHairStrands {
		constexpr auto DefaultSource = 0x38; // UGroomAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_AAkSpotReflector {
		constexpr auto EarlyReflectionAuxBus = 0x220; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x228; // FString
		constexpr auto AcousticTexture = 0x238; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x240; // float
		constexpr auto Level = 0x244; // float
	}

	namespace n_ACLSPlayerCameraManager {
		constexpr auto CameraBehavior = 0x27b0; // USkeletalMeshComponent*
		constexpr auto SmoothedPivotTarget = 0x27c0; // FTransform
		constexpr auto PivotLocation = 0x27f0; // FVector
		constexpr auto TargetCameraLocation = 0x27fc; // FVector
		constexpr auto TargetCameraRotation = 0x2808; // FRotator
		constexpr auto SmoothedAddFOV = 0x2814; // float
		constexpr auto PeekOffset = 0x2818; // float
		constexpr auto PeekToNoneBlendTime = 0x281c; // float
		constexpr auto NoneToPeekBlendTime = 0x2820; // float
		constexpr auto CameraPeekWeight = 0x2824; // float
		constexpr auto PrePeekState = 0x2828; // ECLSPeekState
		constexpr auto PeekCameraInterpoationSpeed = 0x282c; // float
	}

	namespace n_UCrowStatusSquadMatchWidget {
		constexpr auto CP_Spectating = 0x348; // UCanvasPanel*
		constexpr auto TB_SpectatorCount = 0x350; // UTextBlock*
		constexpr auto TB_KillCount = 0x358; // UTextBlock*
		constexpr auto TB_PlayerCount = 0x360; // UTextBlock*
	}

	namespace n_UCrowKeyGuideWidget {
		constexpr auto BasicCategoryColor = 0x368; // FLinearColor
		constexpr auto CombatCategoryColor = 0x378; // FLinearColor
		constexpr auto ComunicationCategoryColor = 0x388; // FLinearColor
		constexpr auto VehicleCategoryColor = 0x398; // FLinearColor
	}

	namespace n_UCrowObjectiveBombMissionWidget {
		constexpr auto RedTeamBg = 0x348; // UTexture2D*
		constexpr auto BlueTeamBg = 0x350; // UTexture2D*
		constexpr auto TBRoundCount = 0x358; // UTextBlock*
		constexpr auto TBEnemyTeamRoundCount = 0x360; // UTextBlock*
		constexpr auto TBEnemyTeamPlayerCount = 0x368; // UTextBlock*
		constexpr auto TBMyTeamRoundCount = 0x370; // UTextBlock*
		constexpr auto TBMyTeamPlayerCount = 0x378; // UTextBlock*
		constexpr auto IMGEnemyTeamIconAttacker = 0x380; // UImage*
		constexpr auto IMGEnemyTeamIconDefencer = 0x388; // UImage*
		constexpr auto IMGMyTeamIconAttacker = 0x390; // UImage*
		constexpr auto IMGMyTeamIconDefencer = 0x398; // UImage*
		constexpr auto IMGEnemyTeams = 0x3a0; // TArray<UImage*>
		constexpr auto IMGEnemyTeamDeads = 0x3b0; // TArray<UImage*>
		constexpr auto IMGMyTeams = 0x3c0; // TArray<UImage*>
		constexpr auto IMGMyTeamDeads = 0x3d0; // TArray<UImage*>
		constexpr auto IMGEnemyTeamBg = 0x3e0; // UImage*
		constexpr auto IMGMyTeamBG = 0x3e8; // UImage*
		constexpr auto IMGBombInstall = 0x3f0; // UImage*
		constexpr auto IMGBombInstallBG = 0x3f8; // UImage*
		constexpr auto AniBombInstallAlarm = 0x400; // UWidgetAnimation*
		constexpr auto TimerWidget = 0x408; // UCrowObjectiveTimeWidget*
		constexpr auto GameStateBombMission = 0x410; // ACrowGameStateBombMission*
		constexpr auto PrevGameRoundState = 0x418; // ECrowGameRoundState
		constexpr auto MAX_PLAYER_COUNT = 0x419; // char
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent {
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UCrowCustomizeWeaponAccSlotWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto IMG_Equiped = 0x350; // UImage*
		constexpr auto IMG_Lock = 0x358; // UImage*
		constexpr auto IMG_Icon = 0x360; // UImage*
		constexpr auto WS_Grade = 0x368; // UWidgetSwitcher*
		constexpr auto BT_WeaponAccSlot = 0x370; // UCrowButton*
		constexpr auto TB_Name = 0x378; // UTextBlock*
		constexpr auto CP_Cost = 0x380; // UCanvasPanel*
		constexpr auto TB_Label_Money = 0x388; // UTextBlock*
		constexpr auto Selected = 0x3d0; // bool
		constexpr auto Equiped = 0x3d1; // bool
		constexpr auto useDeselect = 0x3d2; // bool
		constexpr auto Locked = 0x3d3; // bool
		constexpr auto AccIndex = 0x3d4; // uint32_t
		constexpr auto AccType = 0x3d8; // ECrowWeaponAccType
		constexpr auto StickerInfo = 0x3dc; // FCrowWeaponStickerInfo
		constexpr auto ShopTableData = 0x3e8; // FCrowShopTableRow
	}

	namespace n_UCrowMissionTabWidget {
		constexpr auto WB_MisstionTab_Daily = 0x380; // UCrowWidgetToggleButton*
	}

	namespace n_UCrowGameModeSettingsTableManager {
		constexpr auto TableMap = 0x28; // TMap<ECrowGameMode, FCrowGameModeSettingsTableRow>
	}

	namespace n_UCrowTriggerUIBase {
		constexpr auto CharacterOwner = 0x28; // ACrowCharacterPawn*
	}

	namespace n_UCrowWeaponPartsPrimarySight {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsPrimarySightTableRow
		constexpr auto DefaultPartsData = 0xe50; // FCrowWeaponPartsPrimarySightTableRow
		constexpr auto AimMesh = 0x1980; // UObject*
		constexpr auto AimLensMesh = 0x1988; // UObject*
		constexpr auto DefaultMesh = 0x1990; // UObject*
		constexpr auto DefaultMeshComponent = 0x1998; // UMeshComponent*
		constexpr auto ZeroingInfo = 0x19a0; // UCrowZeroingInfo*
	}

	namespace n_ACrowWorldGridActor {
		constexpr auto GridRoot = 0x220; // USceneComponent*
		constexpr auto SphereMesh = 0x228; // UStaticMeshComponent*
		constexpr auto WorldGrid = 0x230; // FCrowWorldGridZ
		constexpr auto WorldOrigin = 0x248; // FVector
		constexpr auto CellSizeBits = 0x254; // int32_t
		constexpr auto ResultIndexes = 0x258; // TSet<uint32_t>
		constexpr auto RegistedQueryComps = 0x2a8; // TMap<int32_t, TWeakObjectPtr<UCrowWorldGridQueryComponent>>
	}

	namespace n_UWB_CrossHair_Landrover_Mount_C {
		constexpr auto b_Crosshair = 0x450; // UBorder*
		constexpr auto ImageCenter = 0x458; // UImage*
		constexpr auto ImageCenterBorder = 0x460; // UImage*
		constexpr auto ImageDown = 0x468; // UImage*
		constexpr auto ImageDownBorder = 0x470; // UImage*
		constexpr auto ImageLeft = 0x478; // UImage*
		constexpr auto ImageLeftBorder = 0x480; // UImage*
		constexpr auto ImageRight = 0x488; // UImage*
		constexpr auto ImageRightBorder = 0x490; // UImage*
		constexpr auto ImageUp = 0x498; // UImage*
		constexpr auto ImageUpBorder = 0x4a0; // UImage*
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x690; // UObject*
		constexpr auto AnimClass = 0x698; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6a0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6a8; // UAnimInstance*
		constexpr auto AnimationData = 0x6b0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6d8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6e4; // FVector
		constexpr auto LinkedInstances = 0x720; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x730; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8a0; // float
		constexpr auto KinematicBonesUpdateType = 0x8a4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8a5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8a7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8a9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8a9; // char : 1
		constexpr auto bHasValidBodies = 0x8a9; // char : 1
		constexpr auto bBlendPhysics = 0x8a9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8a9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8a9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8aa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8b0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8b0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8b0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8b0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8b1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8b1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8b1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8b1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8b1; // char : 1
		constexpr auto bPauseAnims = 0x8b1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8b1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8b2; // char : 1
		constexpr auto bForceRefpose = 0x8b2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8b2; // char : 1
		constexpr auto bOldForceRefPose = 0x8b2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8b2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8b2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8b2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8b3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8b3; // char : 1
		constexpr auto bUseBendingElements = 0x8b3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8b3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8b3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8b3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8b3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8b3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8b4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8b4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8b6; // uint16_t
		constexpr auto MassMode = 0x8b8; // EClothMassMode
		constexpr auto UniformMass = 0x8bc; // float
		constexpr auto TotalMass = 0x8c0; // float
		constexpr auto Density = 0x8c4; // float
		constexpr auto MinPerParticleMass = 0x8c8; // float
		constexpr auto ClothBlendWeight = 0x8cc; // float
		constexpr auto EdgeStiffness = 0x8d0; // float
		constexpr auto BendingStiffness = 0x8d4; // float
		constexpr auto AreaStiffness = 0x8d8; // float
		constexpr auto VolumeStiffness = 0x8dc; // float
		constexpr auto StrainLimitingStiffness = 0x8e0; // float
		constexpr auto ShapeTargetStiffness = 0x8e4; // float
		constexpr auto bWaitForParallelClothTask = 0x8e8; // bool
		constexpr auto DisallowedAnimCurves = 0x8f0; // TArray<FName>
		constexpr auto BodySetup = 0x900; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x910; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x920; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x9f8; // float
		constexpr auto TeleportRotationThreshold = 0x9fc; // float
		constexpr auto LastPoseTickFrame = 0xa08; // uint32_t
		constexpr auto ClothingInteractor = 0xa60; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb30; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x88; // char : 1
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UCrowDamageIndicatorItemWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
	}

	namespace n_UCrowDragItem {
		constexpr auto IMG_ItemIcon = 0x348; // UImage*
	}

	namespace n_UCrowWorldRemainSMC {
		constexpr auto RemainMeshIndex = 0x4d0; // int16_t
		constexpr auto LayoutItemIndex = 0x4d2; // int16_t
	}

	namespace n_UAkGeometryComponent {
		constexpr auto MeshType = 0x1f8; // AkMeshType
		constexpr auto LOD = 0x1fc; // int32_t
		constexpr auto WeldingThreshold = 0x200; // float
		constexpr auto StaticMeshSurfaceOverride = 0x208; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x258; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x268; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x268; // char : 1
		constexpr auto AssociatedRoom = 0x270; // AActor*
		constexpr auto GeometryData = 0x288; // FAkGeometryData
		constexpr auto PreviousStaticMeshSurfaceOverride = 0x2d8; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
	}

	namespace n_UCrowMissionQuickListItem {
		constexpr auto TB_MissionTitle = 0x348; // UTextBlock*
		constexpr auto TB_MissionCount = 0x350; // UTextBlock*
		constexpr auto WS_IMG = 0x358; // UWidgetSwitcher*
		constexpr auto IMG_Reward00 = 0x360; // UImage*
		constexpr auto IMG_Reward01 = 0x368; // UImage*
		constexpr auto IMG_Reward02 = 0x370; // UImage*
		constexpr auto IMG_Reward03 = 0x378; // UImage*
		constexpr auto IMG_Reward04 = 0x380; // UImage*
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_UCrowCloudScapeComponent {
		constexpr auto bEnvCloud = 0x1f8; // bool
		constexpr auto bNoCollision = 0x1f9; // bool
		constexpr auto bMove = 0x1fa; // bool
		constexpr auto bScale = 0x1fb; // bool
		constexpr auto MaxScaleZ = 0x1fc; // float
		constexpr auto Density = 0x200; // float
		constexpr auto CloudMoveTime = 0x204; // float
		constexpr auto RotationRate = 0x208; // float
		constexpr auto ScaleAnimCurve = 0x210; // UCurveFloat*
		constexpr auto MoveRateCurve = 0x218; // UCurveFloat*
		constexpr auto DensityCurve = 0x220; // UCurveFloat*
		constexpr auto HeightCurve = 0x228; // UCurveFloat*
		constexpr auto CloudDamageSetting = 0x230; // UCrowCloudDamage*
	}

	namespace n_UCrowMiningScanEffectWidget {
		constexpr auto IMG_Scan_effect = 0x3d8; // UImage*
		constexpr auto AniMiningScan = 0x3e0; // UWidgetAnimation*
	}

	namespace n_UCrowCustomCursorUAV {
		constexpr auto CP_Area = 0x350; // UCanvasPanel*
	}

	namespace n_UCrowLockonIndicator {
		constexpr auto OwnerPawn = 0x348; // ACrowCharacterPawn*
		constexpr auto IsVehicle = 0x350; // bool
		constexpr auto IsInDistance = 0x351; // bool
		constexpr auto CP_Main = 0x358; // UCanvasPanel*
		constexpr auto CP_LockOn = 0x360; // UCanvasPanel*
		constexpr auto CP_TargetBase = 0x368; // UCanvasPanel*
		constexpr auto CP_NonTarget = 0x370; // UCanvasPanel*
		constexpr auto IMG_TargetingBase = 0x378; // UImage*
		constexpr auto IMG_TargetingCross = 0x380; // UImage*
		constexpr auto IMG_Base = 0x388; // UImage*
		constexpr auto IMG_Base_LockOn = 0x390; // UImage*
		constexpr auto TargetActor = 0x398; // AActor*
		constexpr auto TargetingAni = 0x3a0; // UUMGSequencePlayer*
		constexpr auto LockOnAni = 0x3a8; // UUMGSequencePlayer*
		constexpr auto ParentGeometry = 0x3b0; // FGeometry
		constexpr auto DefaultSize = 0x3e8; // FVector2D
		constexpr auto PanelSlot = 0x3f0; // UCanvasPanelSlot*
		constexpr auto MinScale = 0x3f8; // float
		constexpr auto MaxScale = 0x3fc; // float
		constexpr auto DefaultColor = 0x400; // FLinearColor
	}

	namespace n_UCrowCustomOutfitItemListWidget {
		constexpr auto GD_ItemList = 0x348; // UGridPanel*
		constexpr auto SCB_Itemlist = 0x350; // UScrollBox*
		constexpr auto TB_Title = 0x358; // UTextBlock*
		constexpr auto WB_Function_Tooltip = 0x360; // UCrowClothItemDescWidget*
		constexpr auto CustomizeOutfitSlotWidgetClass = 0x368; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto SceneLobby = 0x370; // ACrowSceneLobby*
		constexpr auto CurrentCategorySlotSmallWidget = 0x378; // UCrowCategorySlotSmallWidget*
		constexpr auto IsOwnMode = 0x380; // bool
		constexpr auto ShopModeSelectItem = 0x388; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto ItemSize = 0x390; // float
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_ACrowConsoleInitializer {
		constexpr auto ConsoleCommands = 0x220; // TArray<FString>
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UCrowWeaponSubStateFireGatling {
		constexpr auto WeaponVehicle = 0x48; // ACrowWeaponVehicle*
		constexpr auto WeaponAnimGatlingComponent = 0x50; // UCrowWeaponAnimGatling*
		constexpr auto FireDelay = 0x58; // float
		constexpr auto PreHeating = 0x5c; // float
		constexpr auto CurrentPreHeating = 0x60; // float
		constexpr auto OverHeating = 0x64; // float
		constexpr auto CurrentOverHeating = 0x68; // float
		constexpr auto Cooling = 0x6c; // float
		constexpr auto CurrentCooling = 0x70; // float
		constexpr auto ApproachOverHeating = 0x74; // float
		constexpr auto bIsApproachOverHeating = 0x78; // bool
		constexpr auto bIsCooling = 0x79; // bool
		constexpr auto crosshairWidget = 0x80; // UCrowVehicleCrosshairBase*
		constexpr auto PrevTimeSeconds = 0x88; // float
		constexpr auto bIsFiring = 0x8c; // bool
		constexpr auto bPlayFireAnimation = 0x8d; // bool
		constexpr auto AkComponent = 0x90; // UAkComponent*
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UCrowRadialMenuWidgetBase {
		constexpr auto CP_RadialMenu = 0x368; // UCanvasPanel*
		constexpr auto IMG_Circle = 0x370; // UImage*
		constexpr auto IMG_CircleArrow = 0x378; // UImage*
		constexpr auto HoverIcon = 0x380; // UImage*
		constexpr auto HoverText = 0x388; // UTextBlock*
		constexpr auto ItemTextIndexes = 0x390; // TArray<FString>
		constexpr auto AniWidgetShow = 0x3a0; // UWidgetAnimation*
		constexpr auto InitializeRadialMenu = 0x3a8; // bool
		constexpr auto SelectedIndex = 0x3ac; // int32_t
		constexpr auto Hiding = 0x3b0; // bool
		constexpr auto WidgetTweenAlpha = 0x3b8; // UCrowWidgetTweenAlpha*
		constexpr auto Radial_MenuBTN_Array = 0x3c0; // TArray<UCrowRadialMenuButtonWidget*>
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UCrowWorldMapIconPS {
		constexpr auto TargetPlayerState = 0x1b0; // ACrowPlayerStateBase*
	}

	namespace n_ABp_CrowProjectileTank_C {
		constexpr auto SM_G67 = 0x1840; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UEditUVIslandsTool {
		constexpr auto MaterialSettings = 0xc8; // UExistingMeshMaterialProperties*
		constexpr auto CheckerMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto DynamicMeshComponent = 0xd8; // USimpleDynamicMeshComponent*
		constexpr auto SelectionMechanic = 0xe0; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0xf0; // UMultiTransformer*
	}

	namespace n_UCrowBomBardRouteWidget {
		constexpr auto CP_route = 0x348; // UCanvasPanel*
		constexpr auto BD_Zone = 0x350; // UBorder*
		constexpr auto IMG_Effect = 0x358; // UImage*
	}

	namespace n_UCrowCustomizeItemDescWidget {
		constexpr auto CP_Lobby_MOD = 0x348; // UCanvasPanel*
		constexpr auto TB_Item_Category = 0x350; // UTextBlock*
		constexpr auto TB_AmmoType = 0x358; // UTextBlock*
		constexpr auto TB_ItemName = 0x360; // UTextBlock*
		constexpr auto TB_ItemCompare = 0x368; // URichTextBlock*
		constexpr auto MLETB_ItemDesc = 0x370; // UMultiLineEditableText*
		constexpr auto VB_ItemName = 0x378; // UVerticalBox*
		constexpr auto HB_WeaponParts = 0x380; // UHorizontalBox*
		constexpr auto HB_AmmoType = 0x388; // UHorizontalBox*
		constexpr auto CP_WeaponStatus = 0x390; // UCanvasPanel*
		constexpr auto CP_WeaponStat = 0x398; // UCanvasPanel*
		constexpr auto VB_WeaponInfo = 0x3a0; // UVerticalBox*
		constexpr auto VB_WeaponProgress = 0x3a8; // UVerticalBox*
		constexpr auto TB_FireMode = 0x3b0; // UTextBlock*
		constexpr auto HB_FireModeIcon = 0x3b8; // UHorizontalBox*
		constexpr auto IMG_FireMode_Semiauto = 0x3c0; // UCrowWidgetImage*
		constexpr auto IMG_FireMode_Burst = 0x3c8; // UCrowWidgetImage*
		constexpr auto IMG_FireMode_auto = 0x3d0; // UCrowWidgetImage*
		constexpr auto TB_Ammo = 0x3d8; // UTextBlock*
		constexpr auto TB_AmmoCount = 0x3e0; // UTextBlock*
		constexpr auto TB_Damage = 0x3e8; // UTextBlock*
		constexpr auto PB_Damage = 0x3f0; // UProgressBar*
		constexpr auto PB_Damage_Compare = 0x3f8; // UProgressBar*
		constexpr auto TB_Accuracy = 0x400; // UTextBlock*
		constexpr auto PB_Accuracy = 0x408; // UProgressBar*
		constexpr auto PB_Accuracy_Compare = 0x410; // UProgressBar*
		constexpr auto TB_Control = 0x418; // UTextBlock*
		constexpr auto PB_Control = 0x420; // UProgressBar*
		constexpr auto PB_Control_Compare = 0x428; // UProgressBar*
		constexpr auto TB_FireSpeed = 0x430; // UTextBlock*
		constexpr auto PB_FireSpeed = 0x438; // UProgressBar*
		constexpr auto PB_FireSpeed_Compare = 0x440; // UProgressBar*
		constexpr auto TB_Distance = 0x448; // UTextBlock*
		constexpr auto PB_Distance = 0x450; // UProgressBar*
		constexpr auto PB_Distance_Compare = 0x458; // UProgressBar*
		constexpr auto TB_Reload = 0x460; // UTextBlock*
		constexpr auto PB_Reload = 0x468; // UProgressBar*
		constexpr auto PB_Reload_Compare = 0x470; // UProgressBar*
		constexpr auto WB_BT_MOD = 0x478; // UCrowButton*
		constexpr auto WB_BT_ARMORY = 0x480; // UCrowButton*
		constexpr auto WB_BT_Back = 0x488; // UCrowButton*
		constexpr auto WB_BT_Home = 0x490; // UCrowButton*
		constexpr auto WB_BT_RESET = 0x498; // UCrowButton*
		constexpr auto WB_BT_LevelJump = 0x4a0; // UCrowButton*
		constexpr auto HB_Tutorial_Customize = 0x4a8; // UHorizontalBox*
		constexpr auto WB_Lobby_LoadoutList = 0x4b0; // UCrowLobbyLoadoutListWidget*
		constexpr auto WB_Lobby_Loadout = 0x4b8; // UCrowLobbyLoadoutWidget*
		constexpr auto WB_WeaponPartsList = 0x4c0; // UCrowWeaponPartsListWidget*
		constexpr auto CP_PartAdditionalEffect = 0x4c8; // UCanvasPanel*
		constexpr auto VB_Advantage = 0x4d0; // UVerticalBox*
		constexpr auto WB_TabMenuWeaponCategory = 0x4d8; // UCrowTabMenuWeaponCategoryWidget*
		constexpr auto WB_TabMenu_WeaponSetting = 0x4e0; // UCrowTabMenuWeaponSettingWidget*
		constexpr auto WB_TabMenuWeaponPartsCategory = 0x4e8; // UCrowCustomizeCategryBigWidget*
		constexpr auto WB_CustomizeItemlist = 0x4f0; // UCrowCustomizeItemListWidget*
		constexpr auto WB_Customize_WeaponAcc = 0x4f8; // UCrowCustomizeWeaponAccWidget*
		constexpr auto WB_Customize_WeaponAccNumberSlot = 0x500; // UCrowCustomizeWeaponNumSlotList*
		constexpr auto WB_TabMenu_WeaponCategory = 0x508; // UCrowLobbyShopMenuTabWidget*
		constexpr auto HB_CustomizeWeapon_Shop_Button = 0x510; // UHorizontalBox*
		constexpr auto WB_Shop_Popup_ExclusivePurchase_Quick = 0x518; // UCrowShoppingBagWidget*
		constexpr auto BT_AddShoppingBag = 0x520; // UCrowButton*
		constexpr auto BT_Buy = 0x528; // UCrowButton*
		constexpr auto WB_WeaponLevelJumpPopup = 0x530; // UCrowWeaponLevelJumpPopupWidget*
		constexpr auto WB_LobbySlotPurchasePopup = 0x538; // UCrowLobbySlotPurchasePopupWidget*
		constexpr auto NormalColor = 0x540; // FLinearColor
		constexpr auto IncreaseColor = 0x550; // FLinearColor
		constexpr auto DecreaseColor = 0x560; // FLinearColor
		constexpr auto CurrentWeaponData = 0x570; // FCrowWeaponData
		constexpr auto WeaponItemTable = 0x6e0; // FCrowWeaponTableRow
		constexpr auto SceneLobby = 0x1900; // ACrowSceneLobby*
		constexpr auto SceneGame = 0x1908; // ACrowSceneGame*
		constexpr auto SelectDragWidget = 0x1910; // UCrowInventoryInputEventHandler*
		constexpr auto ProgressMaxValue = 0x1918; // float
		constexpr auto StatusMoved = 0x191c; // bool
		constexpr auto IsCustomizeSticker = 0x191d; // bool
		constexpr auto PartsOptionArray = 0x1920; // TArray<UTextBlock*>
		constexpr auto IsWeaponCustomizeMode = 0x1930; // bool
		constexpr auto CurrentWeaponAccSlotWidget = 0x1938; // UCrowCustomizeWeaponAccSlotWidget*
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UCrowSimpleBuoyancyComponent {
		constexpr auto TargetComponent = 0xc0; // UPrimitiveComponent*
		constexpr auto WaterMaterial = 0xc8; // UPhysicalMaterial*
		constexpr auto MinWaveMoveValue = 0xd0; // float
		constexpr auto WaveMoveDecreaseRate = 0xd4; // float
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UCrowActorComponentBreakableMesh {
		constexpr auto SM_Default = 0x1f8; // UStaticMeshComponent*
		constexpr auto SM_Broken = 0x200; // UStaticMeshComponent*
		constexpr auto SM_CustomDepth = 0x208; // UStaticMeshComponent*
	}

	namespace n_UAlignObjectsTool {
		constexpr auto AlignProps = 0x98; // UAlignObjectsToolProperties*
	}

	namespace n_ACrowCollisionPreviewActor {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto BoxComponent = 0x228; // UBoxComponent*
		constexpr auto BuildText = 0x230; // FText
		constexpr auto CancelText = 0x248; // FText
		constexpr auto PlayerController = 0x260; // ACrowPlayerControllerBase*
		constexpr auto PlayerState = 0x268; // ACrowPlayerStateBase*
		constexpr auto CharacterPawn = 0x270; // ACrowCharacterPawn*
		constexpr auto MeshCompArray = 0x278; // TArray<UMeshComponent*>
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UCrowTriggerCommandNearFar {
		constexpr auto Near = 0xc0; // UStaticMeshComponent*
		constexpr auto Far = 0xc8; // UStaticMeshComponent*
	}

	namespace n_UCrowBattleShape {
		constexpr auto OwnerActor = 0x28; // AActor*
		constexpr auto CenterComponent = 0x30; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_USeamSculptTool {
		constexpr auto Settings = 0x200; // USeamSculptToolProperties*
		constexpr auto PreviewGeom = 0x208; // UPreviewGeometry*
	}

	namespace n_UCrowCloudVisualizerComponent {
		constexpr auto CloudDrawComponent = 0x150; // UCrowCloudDrawComponent*
		constexpr auto CloudScapeMID = 0x158; // UMaterialInstanceDynamic*
		constexpr auto ReservedCloudScapeMID = 0x160; // UMaterialInstanceDynamic*
		constexpr auto VisualizeMeshes = 0x168; // TArray<FCrowCloudVisualizeMesh>
		constexpr auto VisualizeParticles = 0x178; // TArray<FCrowCloudVisualizeParticle>
		constexpr auto bChangeMaterial = 0x188; // bool
		constexpr auto bPlayerIsInside = 0x189; // bool
		constexpr auto TransitionWeight = 0x18c; // float
		constexpr auto FirstLocation = 0x190; // FVector
		constexpr auto MaterialParamNameInfo = 0x1a0; // TMap<int32_t, FCrowCloudScapeMaterialParamName>
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UCrowMultiSystemMessageWidget {
		constexpr auto RTB_Message = 0x348; // URichTextBlock*
		constexpr auto CP_MessageBox = 0x350; // UCanvasPanel*
		constexpr auto Animation_Move_1 = 0x358; // UWidgetAnimation*
		constexpr auto Animation_Move_2 = 0x360; // UWidgetAnimation*
		constexpr auto Animation_Move_3 = 0x368; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_1 = 0x370; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_2 = 0x378; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_3 = 0x380; // UWidgetAnimation*
	}

	namespace n_UCrowMissionAreaComponent {
		constexpr auto ParentArea = 0x1f8; // ACrowMissionArea*
	}

	namespace n_UCrowVehicleBoatEffectSetting {
		constexpr auto AttachSocketName = 0x28; // FName
		constexpr auto SurfaceOffsetZ = 0x30; // float
		constexpr auto FxDriving = 0x38; // UParticleSystem*
		constexpr auto FxIdle = 0x40; // UParticleSystem*
		constexpr auto SpeedForwardMax = 0x48; // float
		constexpr auto SpeedRightMax = 0x4c; // float
		constexpr auto ParamNameSpeedForward = 0x50; // FName
		constexpr auto ParamNameSpeedRight = 0x58; // FName
		constexpr auto UseVirtualTexture = 0x60; // bool
		constexpr auto RuntimeVirtualTextures = 0x68; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x78; // int8_t
		constexpr auto VirtualTextureCullMips = 0x79; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x7a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x7b; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UUPSMovementGroupsSettings {
		constexpr auto LineBetweenGroupLeaderAndGroupActorColor = 0x38; // FColor
		constexpr auto LineBetweenGroupMemberAndLeaderColor = 0x3c; // FColor
		constexpr auto LineBetweenGroupLeaderAndGroupActorThickness = 0x40; // float
		constexpr auto LineBetweenGroupMemberAndLeaderThickness = 0x44; // float
		constexpr auto GroupMovementPointBBName = 0x48; // FName
	}

	namespace n_UCrowSettingsSlotDropdownWidget {
		constexpr auto SelectionDatas = 0x348; // TArray<FString>
		constexpr auto SelectedIndex = 0x358; // int32_t
		constexpr auto OwnerSlot = 0x360; // UCrowSettingsSlotWidget*
		constexpr auto DropdownSlotClass = 0x368; // UCrowSettingsSlotDropdownSlot*
		constexpr auto DropdownSlotHeight = 0x370; // float
		constexpr auto DropdownSlotMaxHeight = 0x374; // float
		constexpr auto BT_Dropdown = 0x378; // UCrowToggleButton*
		constexpr auto TB_SelectedItem = 0x380; // UTextBlock*
		constexpr auto CP_Dropdown = 0x388; // UCanvasPanel*
		constexpr auto SB_Dropdown = 0x390; // UScrollBox*
		constexpr auto bNeedResize = 0x398; // bool
	}

	namespace n_UCrowToolTipPingWidget {
		constexpr auto TB_OwnerName = 0x348; // UTextBlock*
		constexpr auto SB_Cancel = 0x350; // UScaleBox*
		constexpr auto SB_OK = 0x358; // UScaleBox*
		constexpr auto SB_Icon = 0x360; // UScaleBox*
	}

	namespace n_UCrowShopPackagePopupWidget {
		constexpr auto IsSendPacket = 0x348; // bool
		constexpr auto GP_ItemListPanel = 0x350; // UGridPanel*
		constexpr auto WB_Shop_Itemslot_Wide = 0x358; // UCrowShopItemSlotWidget*
		constexpr auto WB_BT_Change = 0x360; // UCrowButton*
		constexpr auto WB_BT_EscBack = 0x368; // UCrowButton*
		constexpr auto TB_ItemName = 0x370; // UTextBlock*
		constexpr auto TB_ItemDesc = 0x378; // UTextBlock*
		constexpr auto IMG_SelectItemIcon = 0x380; // UImage*
		constexpr auto GridSlotItem = 0x388; // UUserWidget*
		constexpr auto ShopData = 0x390; // FCrowShopTableRow
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_ACrowAICharacterSpawner {
		constexpr auto DisableSpawner = 0x268; // bool
		constexpr auto SpawnData = 0x270; // FCrowAICharacterSpawnData
		constexpr auto SpawnerState = 0x2b8; // ECrowAISpawnerState
		constexpr auto ProcessSpawnerTimerHandle = 0x2c0; // FTimerHandle
		constexpr auto AIZone = 0x2c8; // ACrowAIZoneBase*
		constexpr auto WaitTimeForSpawn = 0x2d0; // float
		constexpr auto SpawnedAICharacterNum = 0x2d4; // uint32_t
		constexpr auto DeadAICharacterNum = 0x2d8; // uint32_t
		constexpr auto SpawnedAICharacterPawnList = 0x2e0; // TArray<ACrowAICharacterPawn*>
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_UCrowSpringArmComponent {
		constexpr auto SpringArmId = 0x280; // char
		constexpr auto InheritYawBoneName = 0x284; // FName
		constexpr auto UseLocalInheritYaw = 0x28c; // bool
		constexpr auto UseDriverRotation = 0x28d; // bool
		constexpr auto UseStabilizationPitch = 0x28e; // bool
		constexpr auto AmountStabilizationPitch = 0x290; // float
		constexpr auto DriverRotationMaxPitch = 0x294; // float
		constexpr auto DriverRotationMaxYaw = 0x298; // float
		constexpr auto DriverRotationMaxRoll = 0x29c; // float
		constexpr auto UseTickGroupOverride = 0x2a0; // bool
		constexpr auto TickGroupOverride = 0x2a1; // ETickingGroup
		constexpr auto IgnoreAddedInput = 0x2a2; // bool
		constexpr auto UseCameraRotationLagWeight = 0x2a3; // bool
		constexpr auto CameraRotationLagWeight = 0x2a4; // float
		constexpr auto YawMinMax = 0x2a8; // FVector2D
		constexpr auto PitchMinMax = 0x2b0; // FVector2D
		constexpr auto ChildCamera = 0x2b8; // UCameraComponent*
		constexpr auto SkipCollisionActorList = 0x2c0; // TArray<AActor*>
		constexpr auto DefaultParent = 0x2d0; // USceneComponent*
		constexpr auto DefaultParentSocketName = 0x2d8; // FName
		constexpr auto DefaultLocalTransform = 0x2e0; // FTransform
		constexpr auto DefaultCameraLocalTransform = 0x310; // FTransform
		constexpr auto DefaultRootWorldTransform = 0x340; // FTransform
		constexpr auto AddedInputRotation = 0x370; // FRotator
		constexpr auto RootMovedRotation = 0x37c; // FRotator
		constexpr auto DriverRotation = 0x388; // FRotator
		constexpr auto StabilizationRotation = 0x394; // FRotator
	}

	namespace n_UCrowTriggerComponent {
		constexpr auto TriggerCheckDistance = 0x1f8; // FTriggerCheckDistance
		constexpr auto DefaultCommandDistance = 0x220; // UCrowTriggerCommandBase*
		constexpr auto CommandDistance = 0x228; // UCrowTriggerCommandBase*
		constexpr auto TriggerCheckMouseOver = 0x230; // FTriggerCheckMouseOver
		constexpr auto DefaultCommandMouseOver = 0x240; // UCrowTriggerCommandBase*
		constexpr auto CommandMouseOver = 0x248; // UCrowTriggerCommandBase*
		constexpr auto TriggerInput = 0x250; // FTriggerInput
		constexpr auto DefaultCommandInput = 0x268; // UCrowTriggerCommandBase*
		constexpr auto WidgetMessage = 0x270; // FString
		constexpr auto WidgetMessageText = 0x280; // FText
		constexpr auto ParamTypes = 0x298; // TArray<ETriggerMessageParamType>
		constexpr auto MessageDisplayTime = 0x2a8; // float
		constexpr auto CommandInput = 0x2b0; // UCrowTriggerCommandBase*
		constexpr auto ProgressDistanceEvent = 0x2b8; // bool
		constexpr auto ProgressMouseOverEvent = 0x2b9; // bool
		constexpr auto PressInputTimerHandle = 0x2c0; // FTimerHandle
		constexpr auto CurrentOverlapID = 0x2c8; // FName
		constexpr auto CurrentMouseOverID = 0x2d0; // FName
		constexpr auto TotalPressInputTime = 0x2d8; // float
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UWB_SettingsExplanation_C {
		constexpr auto IMG_InfomationBg = 0x400; // UImage*
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UM240B_AnimBlueprint_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x318; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x338; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x380; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_VehicleWeapon_2 = 0x3c0; // FAnimNode_VehicleWeaponHandler
		constexpr auto AnimGraphNode_MeshRefPose = 0x4c0; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_VehicleWeapon = 0x4d0; // FAnimNode_VehicleWeaponHandler
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UCrowCustomizeItemListWidget {
		constexpr auto SCB_Itemlist = 0x348; // UScrollBox*
		constexpr auto TB_Title = 0x350; // UTextBlock*
		constexpr auto ItemSlotWidgetClass = 0x358; // UCrowItemSlotWidget*
		constexpr auto SceneLobby = 0x360; // ACrowSceneLobby*
		constexpr auto SceneGame = 0x368; // ACrowSceneGame*
		constexpr auto CurrentCategorySlotBigWidget = 0x370; // UCrowCategorySlotBigWidget*
		constexpr auto CurrentWeaponUIType = 0x378; // ECrowWeaponUIType
		constexpr auto SelectedWidgetItem = 0x380; // UCrowItemSlotWidget*
		constexpr auto NotSave = 0x389; // bool
		constexpr auto IsShopMode = 0x38a; // bool
		constexpr auto ItemSize = 0x38c; // float
	}

	namespace n_UWB_CuonExtractor_WorldMapIndicator_C {
		constexpr auto Ani_PingTargetLoop = 0x378; // UWidgetAnimation*
		constexpr auto IMG_Effect = 0x380; // UImage*
		constexpr auto IMG_Effect_3 = 0x388; // UImage*
		constexpr auto IMG_Effect_Glow = 0x390; // UImage*
		constexpr auto IMG_Icon = 0x398; // UImage*
		constexpr auto IMG_IconBg = 0x3a0; // UImage*
		constexpr auto IMG_LocateArrow = 0x3a8; // UImage*
		constexpr auto IMG_Ping = 0x3b0; // UImage*
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_ACrowPlayerControllerBase {
		constexpr auto bIsStartSpectating = 0x571; // bool
		constexpr auto PawnBeforeSpectatingState = 0x578; // APawn*
		constexpr auto bIsCharacterDesytroyWhenEndSpectating = 0x580; // bool
		constexpr auto ServerUserInfo = 0x588; // FCrowUserInfoBase
		constexpr auto bEnablePickingItem = 0xdc1; // bool
		constexpr auto TriggerDisplay = 0xde0; // UCrowTriggerDisplay*
		constexpr auto bAllowGameActions = 0xdec; // char : 1
		constexpr auto WeaponFOVCollection = 0xdf0; // UMaterialParameterCollection*
		constexpr auto EmotionIndexsInSlot = 0xdf8; // TArray<uint32_t>
		constexpr auto Passenger = 0xe08; // UCrowPassenger*
		constexpr auto BaseControlActor = 0xe10; // AActor*
		constexpr auto BaseControlRotation = 0xe18; // FRotator
		constexpr auto BaseControlPitchMinMax = 0xe24; // FVector2D
		constexpr auto BaseControlYawMinMax = 0xe2c; // FVector2D
		constexpr auto BaseControlAddedRotation = 0xe34; // FRotator
		constexpr auto CharacterLookingRotation = 0xe40; // FRotator
		constexpr auto PrevCharacterCamera = 0xe4c; // FName
		constexpr auto RespawnTargetPawn = 0xe58; // APawn*
		constexpr auto ProjectileChecker = 0xe60; // UCrowProjectileChecker*
		constexpr auto CameraLimitMode = 0xe68; // ECrowCameraLimitMode
		constexpr auto LastDeathLocation = 0xe84; // FVector
		constexpr auto LastInputAxis = 0xe90; // FRotator
		constexpr auto DoorTriggerMessage = 0xea0; // FString
		constexpr auto bIsObserver = 0xef2; // bool
	}

	namespace n_UCrowVehicleFloodingEffectSetting {
		constexpr auto FxImmerge = 0x28; // UParticleSystem*
		constexpr auto AttachSocketName_Bubble = 0x30; // FName
		constexpr auto FxBubble = 0x38; // UParticleSystem*
		constexpr auto AttachSocketName_DrivingForward = 0x40; // FName
		constexpr auto AttachSocketName_DrivingBackward = 0x48; // FName
		constexpr auto FxDriving = 0x50; // UParticleSystem*
		constexpr auto FxGroundDust = 0x58; // UParticleSystem*
		constexpr auto SpeedForwardMax = 0x60; // float
		constexpr auto SpeedRightMax = 0x64; // float
		constexpr auto ParamNameSpeedForward = 0x68; // FName
		constexpr auto ParamNameSpeedRight = 0x70; // FName
	}

	namespace n_ACrowConquestMeteorPieceActor {
		constexpr auto EndLocation = 0x220; // FVector
		constexpr auto SmallMeteorSpeed = 0x22c; // float
		constexpr auto MeteorState = 0x230; // ECrowMMeteorPieceState
		constexpr auto Root = 0x240; // UBoxComponent*
		constexpr auto MeteorSettingsActor = 0x248; // ACrowConquestMeteorSettings*
		constexpr auto SmallMeteorComp = 0x250; // ACrowTargetTraceEffect*
		constexpr auto GasComp = 0x258; // UParticleSystemComponent*
		constexpr auto MeteorDistance = 0x260; // float
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UCrowWeaponPartsMagazine {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsMagazineTableRow
		constexpr auto DefaultPartsData = 0x770; // FCrowWeaponPartsMagazineTableRow
	}

	namespace n_UGroomBindingAsset {
		constexpr auto Groom = 0x28; // UGroomAsset*
		constexpr auto SourceSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x38; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x40; // int32_t
		constexpr auto MatchingSection = 0x44; // int32_t
		constexpr auto GroupInfos = 0x48; // TArray<FGoomBindingGroupInfo>
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UUPSAITask_ExecuteEnemyAction {
		constexpr auto OnEnemyActionFinishedDelegate = 0x68; // FMulticastInlineDelegate
		constexpr auto EnemyAction = 0x78; // UUPSEnemyAction*
		constexpr auto Character = 0x80; // ACharacter*
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UTetherGuideSplineComponent {
		constexpr auto MetaData = 0x568; // UTetherGuideSplineMetadata*
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_USimpleDynamicMeshComponent {
		constexpr auto TangentsType = 0x4b0; // EDynamicMeshTangentCalcType
		constexpr auto bInvalidateProxyOnChange = 0x4b1; // bool
		constexpr auto bExplicitShowWireframe = 0x4e8; // bool
		constexpr auto bDrawOnTop = 0x530; // bool
	}

	namespace n_UMagicLeapLightingTrackingComponent {
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_ACrowDamageCauserActor {
		constexpr auto DamageCauser = 0x220; // ECrowDamageCauser
		constexpr auto ItemType = 0x221; // ECrowItemType
		constexpr auto ItemIndex = 0x222; // uint16_t
		constexpr auto EffectKey = 0x228; // FString
		constexpr auto OwnerActor = 0x238; // AActor*
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x4b8; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4bc; // FDelegate
		constexpr auto WidgetStyle = 0x4d0; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xa50; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xa51; // bool
		constexpr auto ThePropertyToControl = 0xa58; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xa68; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xaa8; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xab8; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xac8; // FMulticastInlineDelegate
	}

	namespace n_ACrowWorldPropActor {
		constexpr auto PropRoot = 0x228; // USceneComponent*
		constexpr auto MainMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto bUtilityPole = 0x238; // bool
		constexpr auto PropSettings = 0x240; // TArray<FCrowWorldPropSetting>
		constexpr auto DestructionAUD = 0x250; // UCrowWorldDestructionAUD*
	}

	namespace n_UPolyEditInsetProperties {
		constexpr auto bReproject = 0x60; // bool
		constexpr auto Softness = 0x64; // float
		constexpr auto bBoundaryOnly = 0x68; // bool
		constexpr auto AreaScale = 0x6c; // float
	}

	namespace n_ABP_Rocket_70mm_C {
		constexpr auto M4_Projectile_Root = 0x1840; // USkeletalMeshComponent*
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_UCrowWorldSplineFenceComponent {
		constexpr auto bStairMode = 0xc0; // bool
		constexpr auto bMeshSnap = 0xc1; // bool
		constexpr auto VariationMeshes = 0xc8; // TArray<UStaticMesh*>
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_ACrowWorldEventSafeBox {
		constexpr auto SafeBoxList = 0x370; // TArray<ACrowSafeBoxEventActor*>
		constexpr auto ActivationSafeBoxCount = 0x380; // int32_t
		constexpr auto SafeBoxAreaList = 0x388; // TArray<FCrowSafeBoxAreaInfo>
		constexpr auto AreaDisplayInfo = 0x398; // FCrowGameIconDisplayInfo
		constexpr auto AreaIconArray = 0x420; // TArray<UCrowWorldMapIcon*>
	}

	namespace n_UEdgeLoopInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UEdgeLoopInsertionTool*
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_UCrowPingWidgetBase {
		constexpr auto PingTargetActor = 0x348; // AActor*
		constexpr auto CP_Ping = 0x350; // UCanvasPanel*
		constexpr auto AniPingTargetStart = 0x358; // UWidgetAnimation*
		constexpr auto AniPingTargetLoop = 0x360; // UWidgetAnimation*
		constexpr auto AniPingHoverLoop = 0x368; // UWidgetAnimation*
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UCrowChatWidget {
		constexpr auto WB_CrowChatTyping = 0x348; // UCrowChatTyping*
		constexpr auto SCB_ChatList = 0x350; // UScrollBox*
		constexpr auto VB_ChatList = 0x358; // UVerticalBox*
		constexpr auto WS_ChatSatus = 0x360; // UWidgetSwitcher*
		constexpr auto CP_ToolTip = 0x368; // UCanvasPanel*
		constexpr auto CP_ChatBG = 0x370; // UCanvasPanel*
		constexpr auto BT_StartTyping = 0x378; // UCrowButton*
		constexpr auto WB_CrowChatMessageItem = 0x380; // UCrowChatMessageItem*
		constexpr auto ItemChatMsgItemWidgetClass = 0x388; // UCrowChatMessageItem*
		constexpr auto LastChatCheckSec = 0x390; // float
		constexpr auto ChatListFadeOutSecond = 0x394; // float
		constexpr auto ChatListMAX = 0x398; // int32_t
		constexpr auto HoverAnim = 0x39c; // FName
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x228; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_ACrowPlayerStateBombMission {
		constexpr auto PlantCompositionCCount = 0xb78; // char
		constexpr auto DefuseCompositionCCount = 0xb79; // char
		constexpr auto bIsCompositionCHolder = 0xb7a; // bool
		constexpr auto CrowGameRoundState = 0xb7b; // ECrowGameRoundState
		constexpr auto bIsPossibleConstructCompositionC = 0xb7c; // bool
		constexpr auto CompositionCVolume = 0xb80; // ACrowCompositionCVolume*
	}

	namespace n_ACrowAICharacterController {
		constexpr auto Setup_AICharacterData = 0x350; // FCrowAICharacterData
		constexpr auto Setup_AICharacterParameter = 0x3b0; // FCrowAICharacterParameter
		constexpr auto Setup_AIFireTargetData = 0x3d0; // FCrowAIFireTargetData
		constexpr auto AIPawn = 0x3e8; // ACrowAICharacterPawn*
		constexpr auto AISpawner = 0x3f0; // ACrowAICharacterSpawner*
		constexpr auto UpdateAIPerceptionTimerHandle = 0x3f8; // FTimerHandle
		constexpr auto bStartFire = 0x400; // bool
	}

	namespace n_ACrowBuildingActor {
		constexpr auto LockPropTransforms = 0x228; // bool
		constexpr auto EditorPreview = 0x229; // FCrowBuildingEditorPreview
		constexpr auto BuildingLOD = 0x230; // FCrowBuildingCustomLOD
		constexpr auto IsMergingLODBody = 0x2a8; // bool
		constexpr auto DemolitionSetting = 0x2b0; // FCrowBuildingDemolitionSetting
		constexpr auto BuildingLayout = 0x320; // FCrowBuildingEditorLayout
		constexpr auto DecalDatas = 0x370; // TArray<FCrowBuildingDecalData>
		constexpr auto ReflectionDatas = 0x380; // TArray<FCrowBuildingReflectionData>
		constexpr auto bIsIndestructible = 0x390; // bool
		constexpr auto MaxHealth = 0x394; // float
		constexpr auto LightProbeRatioMultiplier = 0x398; // float
		constexpr auto bForceMoveToBldLevel = 0x39c; // bool
		constexpr auto ClusterSyncActor = 0x39d; // bool
		constexpr auto DamageChecker = 0x3a0; // UCrowWorldDamageCheckerBase*
		constexpr auto DestructionAUD = 0x3a8; // UCrowWorldDestructionAUD*
		constexpr auto Visualizer = 0x3b0; // FCrowBuildingVisualizer
		constexpr auto BuildingBounds = 0x408; // FBoxSphereBounds
		constexpr auto BuildingBoundingBox = 0x424; // FBox
		constexpr auto IsUsingSyncHub = 0x440; // bool
		constexpr auto SyncHubActor = 0x448; // ACrowWorldSyncHubActor*
		constexpr auto PartsCount = 0x450; // int32_t
		constexpr auto RawPartsStates = 0x458; // TArray<FCrowBuildingPartsState>
		constexpr auto HISMCInfoArray = 0x468; // TArray<FCrowBuildingHISMCInfo>
		constexpr auto HasCleanedUpForDestroy = 0x478; // bool
		constexpr auto AdditionalDecals = 0x480; // TArray<UDecalComponent*>
		constexpr auto BuildRoot = 0x490; // USceneComponent*
		constexpr auto PositionRoot = 0x498; // USceneComponent*
		constexpr auto ModularBuilder = 0x4a0; // UCrowBuildingModularBuilder*
		constexpr auto SoundStateVolumeComponent = 0x4a8; // UCrowSoundStateVolumeComponent*
	}

	namespace n_UCrowSquadSummaryWidget {
		constexpr auto SquadSlotList = 0x368; // TArray<UCrowSquadSummarySlotWidget*>
		constexpr auto WB_SquadSummarySlot1 = 0x378; // UCrowSquadSummarySlotWidget*
		constexpr auto WB_SquadSummarySlot2 = 0x380; // UCrowSquadSummarySlotWidget*
		constexpr auto WB_SquadSummarySlot3 = 0x388; // UCrowSquadSummarySlotWidget*
		constexpr auto WB_SquadSummarySlot4 = 0x390; // UCrowSquadSummarySlotWidget*
		constexpr auto PB_ResourceCount = 0x398; // UProgressBar*
		constexpr auto BT_Spectating = 0x3a0; // UCrowButton*
		constexpr auto BT_Nexttolobby = 0x3a8; // UCrowButton*
		constexpr auto TB_CurrencyCount = 0x3b0; // UTextBlock*
		constexpr auto TB_TagetCurrency = 0x3b8; // UTextBlock*
	}

	namespace n_UCrowWorldIconWidgetBase {
		constexpr auto CP_Root = 0x378; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x380; // UCanvasPanel*
		constexpr auto CP_AnchorRoot = 0x388; // UCanvasPanel*
		constexpr auto CP_Icon = 0x390; // UCanvasPanel*
		constexpr auto TB_Name = 0x398; // UTextBlock*
		constexpr auto TB_Distance = 0x3a0; // UTextBlock*
		constexpr auto IconLOD = 0x3a8; // TArray<UWidget*>
		constexpr auto TargetActor = 0x3b8; // AActor*
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x450; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x458; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x460; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x461; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x462; // bool
		constexpr auto CachedBodySetup = 0x468; // UBodySetup*
		constexpr auto BodySetups = 0x470; // TArray<UBodySetup*>
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UAkMediaAssetData {
		constexpr auto IsStreamed = 0x28; // bool
		constexpr auto UseDeviceMemory = 0x29; // bool
	}

	namespace n_UCrowLocalBodyIconWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CP_AnchorRoot = 0x358; // UCanvasPanel*
		constexpr auto CP_Icon = 0x360; // UCanvasPanel*
		constexpr auto TB_Distance = 0x368; // UTextBlock*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCrowSelectWorldButtonWidget {
		constexpr auto IMG_World = 0x348; // UImage*
		constexpr auto TB_WorldName = 0x350; // UTextBlock*
		constexpr auto CTB_WorldSelect = 0x358; // UCrowToggleButton*
		constexpr auto CP_Info = 0x360; // UCanvasPanel*
		constexpr auto CP_Lock = 0x368; // UCanvasPanel*
		constexpr auto SceneTableRow = 0x380; // FCrowSceneTableRow
	}

	namespace n_UCrowSquadMatchRespawnWidget {
		constexpr auto SB_BT_RedeployMember00 = 0x368; // USizeBox*
		constexpr auto TB_SquadNum = 0x370; // UTextBlock*
		constexpr auto IMG_SquadBack = 0x378; // UImage*
		constexpr auto TB_MenuTitle_12 = 0x380; // UTextBlock*
		constexpr auto TB_CoolTime_2 = 0x388; // UTextBlock*
		constexpr auto WB_BT_RedeployMember00 = 0x390; // UCrowButton*
		constexpr auto SB_BT_RedeployMember01 = 0x398; // USizeBox*
		constexpr auto TB_SquadNum_2 = 0x3a0; // UTextBlock*
		constexpr auto IMG_SquadBack_2 = 0x3a8; // UImage*
		constexpr auto TB_MenuTitle = 0x3b0; // UTextBlock*
		constexpr auto TB_CoolTime_3 = 0x3b8; // UTextBlock*
		constexpr auto WB_BT_RedeployMember01 = 0x3c0; // UCrowButton*
		constexpr auto SB_BT_RedeployMember02 = 0x3c8; // USizeBox*
		constexpr auto TB_SquadNum_3 = 0x3d0; // UTextBlock*
		constexpr auto IMG_SquadBack_3 = 0x3d8; // UImage*
		constexpr auto TB_MenuTitle_2 = 0x3e0; // UTextBlock*
		constexpr auto TB_CoolTime_4 = 0x3e8; // UTextBlock*
		constexpr auto WB_BT_RedeployMember02 = 0x3f0; // UCrowButton*
		constexpr auto CP_MemberEmpty = 0x3f8; // UCanvasPanel*
		constexpr auto InfoArray = 0x400; // TArray<FCrowSquadMatchRespawnInfo>
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UCrowVehicleMovementLandWheels {
		constexpr auto EngineConfigClass = 0x190; // UCrowLandWheelsConfigEngine*
		constexpr auto BodyConfigClass = 0x198; // UCrowLandWheelsConfigBody*
		constexpr auto EngineSetting = 0x1a0; // FCrowLandWheelsEngineSetting
		constexpr auto WheelStates = 0x280; // TArray<FCrowLandWheelsSingleWheelState>
		constexpr auto UpdateCacheIndex = 0x290; // int32_t
		constexpr auto DamagesByWheel = 0x298; // TMap<AActor*, FCrowLandWheelsSqueezeDamage>
		constexpr auto LastDamageTime = 0x2e8; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UCrowGameOpeningWidget {
		constexpr auto Text_Title = 0x348; // UTextBlock*
		constexpr auto Text_SubTitle = 0x350; // UTextBlock*
		constexpr auto Text_Gamemode = 0x358; // UTextBlock*
	}

	namespace n_UDrawPolyPathTool {
		constexpr auto TransformProps = 0xa0; // UDrawPolyPathProperties*
		constexpr auto ExtrudeProperties = 0xa8; // UDrawPolyPathExtrudeProperties*
		constexpr auto MaterialProperties = 0xb0; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x140; // UConstructionPlaneMechanic*
		constexpr auto EditPreview = 0x1e8; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x1f0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x1f8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x200; // UCollectSurfacePathMechanic*
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UPolyEditCommonProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bSelectEdgeLoops = 0x61; // bool
		constexpr auto LocalFrameMode = 0x64; // ELocalFrameMode
		constexpr auto bLockRotation = 0x68; // bool
		constexpr auto bSnapToWorldGrid = 0x69; // bool
	}

	namespace n_UHoleFillTool {
		constexpr auto SmoothHoleFillProperties = 0x98; // USmoothHoleFillProperties*
		constexpr auto Properties = 0xa0; // UHoleFillToolProperties*
		constexpr auto Actions = 0xa8; // UHoleFillToolActions*
		constexpr auto Statistics = 0xb0; // UHoleFillStatisticsProperties*
		constexpr auto Preview = 0xb8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto SelectionMechanic = 0xc0; // UPolygonSelectionMechanic*
	}

	namespace n_UCrowLobbySlotToggleButton {
		constexpr auto VB_PurchaseStatus = 0x5a8; // UVerticalBox*
		constexpr auto IMG_PurchaseIcon = 0x5b0; // UImage*
		constexpr auto WS_LockStatus = 0x5b8; // UWidgetSwitcher*
		constexpr auto TB_Timer = 0x5c0; // UTextBlock*
		constexpr auto LobbySlotType = 0x5c8; // ECrowLobbySlotType
		constexpr auto bLocked = 0x5c9; // bool
		constexpr auto DeltaTime = 0x5cc; // float
	}

	namespace n_UCrowNoticeWebBrowser {
		constexpr auto WB_Notice = 0x348; // UWidget*
		constexpr auto BT_Exit = 0x350; // UCrowButton*
		constexpr auto TB_Title = 0x358; // UTextBlock*
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_AUPSGroupMovementFormation {
		constexpr auto RootArrowComponent = 0x220; // UArrowComponent*
		constexpr auto CharactersInFormation = 0x228; // TSet<ACharacter*>
		constexpr auto LeaderCharacter = 0x278; // ACharacter*
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UDisplaceMeshTextureMapProperties {
		constexpr auto DisplacementMap = 0x60; // UTexture2D*
	}

	namespace n_UDynamicMeshSculptTool {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto SculptProperties = 0xc8; // UBrushSculptProperties*
		constexpr auto SculptMaxBrushProperties = 0xd0; // USculptMaxBrushProperties*
		constexpr auto KelvinBrushProperties = 0xd8; // UKelvinBrushProperties*
		constexpr auto RemeshProperties = 0xe0; // UBrushRemeshProperties*
		constexpr auto GizmoProperties = 0xe8; // UFixedPlaneBrushProperties*
		constexpr auto ViewProperties = 0xf0; // UMeshEditingViewProperties*
		constexpr auto BrushIndicator = 0x130; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x138; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x140; // UPreviewMesh*
		constexpr auto DynamicMeshComponent = 0x148; // UOctreeDynamicMeshComponent*
		constexpr auto ActiveOverrideMaterial = 0x150; // UMaterialInstanceDynamic*
		constexpr auto PlaneTransformGizmo = 0xc50; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xc58; // UTransformProxy*
	}

	namespace n_UVertexBrushSculptProperties {
		constexpr auto PrimaryBrushType = 0x60; // EMeshVertexSculptBrushType
		constexpr auto PrimaryFalloffType = 0x61; // EMeshSculptFalloffType
		constexpr auto bFreezeTarget = 0x62; // bool
		constexpr auto bSmoothErases = 0x63; // bool
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UCrowDOFComponent {
		constexpr auto IsActiveDOF = 0xb0; // bool
		constexpr auto DOFSetting = 0xc0; // FCrowDOFSetting
		constexpr auto UnaffectedDOFMeshComp = 0x640; // UStaticMeshComponent*
		constexpr auto bInitialized = 0x648; // bool
	}

	namespace n_UCrowObjectiveConquestWidget {
		constexpr auto RedMyTeam = 0x4b8; // UPaperSprite*
		constexpr auto RedEnemy = 0x4c0; // UPaperSprite*
		constexpr auto BlueMyTeam = 0x4c8; // UPaperSprite*
		constexpr auto BlueEnemy = 0x4d0; // UPaperSprite*
		constexpr auto ConquestGaugeNumberClass = 0x4d8; // UCrowConquestGaugeNumber*
		constexpr auto TB_SubMessage = 0x4e0; // UTextBlock*
		constexpr auto BD_SubMessage = 0x4e8; // UBorder*
		constexpr auto CP_ConquestIconRoot = 0x4f0; // UCanvasPanel*
		constexpr auto CP_OverLoadAlarm = 0x4f8; // UCanvasPanel*
		constexpr auto TB_OverloadTimer = 0x500; // UTextBlock*
		constexpr auto CP_OverLoadStart = 0x508; // UCanvasPanel*
		constexpr auto CP_AllyTicket_Decrease = 0x510; // UCanvasPanel*
		constexpr auto CP_EnemyTicket_Decrease = 0x518; // UCanvasPanel*
		constexpr auto CP_AllyNumber = 0x520; // UCanvasPanel*
		constexpr auto CP_EnemyNumber = 0x528; // UCanvasPanel*
		constexpr auto CP_FastWidget_Ally = 0x530; // UCanvasPanel*
		constexpr auto CP_FastWidget_Enemy = 0x538; // UCanvasPanel*
		constexpr auto IMG_AllyFast = 0x540; // UImage*
		constexpr auto IMG_EnemyFast = 0x548; // UImage*
		constexpr auto WB_DiveActive_Ally_HUD = 0x550; // UCrowWidgetBase*
		constexpr auto WB_DiveActive_Enemy_HUD = 0x558; // UCrowWidgetBase*
		constexpr auto AniMessageShow = 0x560; // UWidgetAnimation*
		constexpr auto AniMessageHide = 0x568; // UWidgetAnimation*
		constexpr auto AniAllyTicket_Decrease = 0x570; // UWidgetAnimation*
		constexpr auto AniEnemyTicket_Decrease = 0x578; // UWidgetAnimation*
		constexpr auto AniOverloadTimerShow = 0x580; // UWidgetAnimation*
		constexpr auto AniOverloadTimerHide = 0x588; // UWidgetAnimation*
		constexpr auto SubMessageDisplayTime = 0x590; // float
		constexpr auto SubMessageArray = 0x598; // TArray<FText>
	}

	namespace n_UCrowRewardTableManager {
		constexpr auto RewardTable = 0x70; // TMap<uint32_t, FCrowRewardTableRow>
		constexpr auto RewardLog = 0xc0; // FString
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UCrowScoreInfoConquestUserSummary {
		constexpr auto IsEnemy = 0x348; // bool
		constexpr auto UserSummaryItem = 0x350; // UCrowScoreInfoConquestUSItem*
		constexpr auto SB_TeamSummary = 0x358; // UScrollBox*
		constexpr auto IMG_TeamColor = 0x360; // UImage*
		constexpr auto UserUIArray = 0x368; // TArray<UCrowScoreInfoConquestUSItem*>
	}

	namespace n_AWaterBodyIsland {
		constexpr auto SplineComp = 0x228; // UWaterSplineComponent*
	}

	namespace n_ACrowPlayerStartTDM {
		constexpr auto SpawnTeam = 0x250; // ECrowTeam_RedBlue
	}

	namespace n_UCrowSpectatorCustomModeWidget {
		constexpr auto TB_Squad = 0x348; // UTextBlock*
		constexpr auto IMG_Squad_Color = 0x350; // UImage*
		constexpr auto TB_KillCount = 0x358; // UTextBlock*
		constexpr auto TB_PlayerName = 0x360; // UTextBlock*
		constexpr auto IMG_PrevIcon = 0x368; // UImage*
		constexpr auto IMG_NextIcon = 0x370; // UImage*
		constexpr auto IMG_ClosePlayerList = 0x378; // UImage*
		constexpr auto WB_SpectatorTargetList = 0x380; // UCrowSpectatorTargetListWidget*
		constexpr auto CP_Watching = 0x388; // UCanvasPanel*
		constexpr auto AttachedPlayerState = 0x390; // ACrowPlayerStateBase*
	}

	namespace n_UCrowLibraryTime {
		constexpr auto TimeInfoArray = 0x30; // TArray<FCrowTimeInfo>
	}

	namespace n_UCrowBombMissionResultRoundWidget {
		constexpr auto IMGWinAttackerIcon = 0x348; // UImage*
		constexpr auto IMGWinDefencerIcon = 0x350; // UImage*
		constexpr auto IMGLoseAttackerIcon = 0x358; // UImage*
		constexpr auto IMGLoseDefencerIcon = 0x360; // UImage*
		constexpr auto AniShow = 0x368; // UWidgetAnimation*
		constexpr auto AniWin = 0x370; // UWidgetAnimation*
		constexpr auto AniLose = 0x378; // UWidgetAnimation*
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UCrowWorldMapLocationSlot {
		constexpr auto bIsHorizontal = 0x348; // bool
		constexpr auto WS = 0x350; // UWidgetSwitcher*
		constexpr auto H_LeftSpacer = 0x358; // UImage*
		constexpr auto H_RightSpacer = 0x360; // UImage*
		constexpr auto V_LeftSpacer = 0x368; // UImage*
		constexpr auto V_RightSpacer = 0x370; // UImage*
		constexpr auto TB_HLocation = 0x378; // UTextBlock*
		constexpr auto TB_VLocation = 0x380; // UTextBlock*
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UCrowWorldSyncHubConfig {
		constexpr auto SyncDataSetting = 0x28; // FCrowWorldSyncDataSetting
		constexpr auto EditorSubLevelSetting = 0x40; // FCrowWorldGenerateSubLevelSetting
		constexpr auto EditorHLODSetting = 0xa8; // FCrowWorldGenerateHLODSetting
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x440; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x450; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x460; // TArray<UMeshComponent*>
	}

	namespace n_ACrowRocketLauncherTrail {
		constexpr auto TrailParticle = 0x220; // UParticleSystem*
		constexpr auto TrailParticleSystemComp = 0x228; // UParticleSystemComponent*
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UProceduralShapeToolProperties {
		constexpr auto bInstanceIfPossible = 0x60; // bool
		constexpr auto PolygroupMode = 0x61; // EMakeMeshPolygroupMode
		constexpr auto PlaceMode = 0x62; // EMakeMeshPlacementType
		constexpr auto bSnapToGrid = 0x63; // bool
		constexpr auto PivotLocation = 0x64; // EMakeMeshPivotLocation
		constexpr auto Rotation = 0x68; // float
		constexpr auto bAlignShapeToPlacementSurface = 0x6c; // bool
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCrowItemInfoWidget {
		constexpr auto CP_Main = 0x350; // UCanvasPanel*
		constexpr auto CP_Desc = 0x358; // UCanvasPanel*
		constexpr auto CP_EquipArmorInfo = 0x360; // UCanvasPanel*
		constexpr auto WS_Title = 0x368; // UWidgetSwitcher*
		constexpr auto IMG_FirstKeyX = 0x370; // UImage*
		constexpr auto IMG_SecondKeyX = 0x378; // UImage*
		constexpr auto TB_ItemCategory = 0x380; // UTextBlock*
		constexpr auto TB_ItemName = 0x388; // UTextBlock*
		constexpr auto TB_TitleText = 0x390; // UTextBlock*
		constexpr auto TB_Amount = 0x398; // UTextBlock*
		constexpr auto TB_FirstKey = 0x3a0; // UTextBlock*
		constexpr auto TB_SecondKey = 0x3a8; // UTextBlock*
		constexpr auto TB_ThirdKey = 0x3b0; // UTextBlock*
		constexpr auto TB_PartsName = 0x3b8; // UTextBlock*
		constexpr auto TB_HelpText = 0x3c0; // UTextBlock*
		constexpr auto TB_Desc = 0x3c8; // UTextBlock*
		constexpr auto RTB_ItemGrade = 0x3d0; // URichTextBlock*
		constexpr auto IMG_Bg_ItemGrade = 0x3d8; // UImage*
		constexpr auto IMG_EquipPartsSlot_ItemGrade = 0x3e0; // UImage*
		constexpr auto CPB_EquipProgressBar = 0x3e8; // UCrowProgressBar*
		constexpr auto HB_Equip = 0x3f0; // UHorizontalBox*
		constexpr auto HB_Get = 0x3f8; // UHorizontalBox*
		constexpr auto CP_MyWeapon = 0x400; // UCanvasPanel*
		constexpr auto SB_WeaponPartsInfo = 0x408; // USizeBox*
		constexpr auto WB_WeaponPartsList = 0x410; // UCrowWeaponPartsListWidget*
		constexpr auto WB_WeaponPartsList_Equip = 0x418; // UCrowWeaponPartsListWidget*
		constexpr auto IMG_Item = 0x420; // UCrowWidgetImage*
		constexpr auto IMG_weapon00 = 0x428; // UCrowWidgetImage*
		constexpr auto IMG_weapon01 = 0x430; // UCrowWidgetImage*
		constexpr auto IMG_weapon02 = 0x438; // UCrowWidgetImage*
		constexpr auto CP_Helmet = 0x440; // UCanvasPanel*
		constexpr auto CP_Armor = 0x448; // UCanvasPanel*
		constexpr auto CP_ArmorInfo = 0x450; // UCanvasPanel*
		constexpr auto CP_UseWeapon = 0x458; // UCanvasPanel*
		constexpr auto PB_ArmorBar = 0x460; // UProgressBar*
		constexpr auto PB_HelmetBar = 0x468; // UProgressBar*
		constexpr auto TB_Armor = 0x470; // UTextBlock*
		constexpr auto TB_Helmet = 0x478; // UTextBlock*
		constexpr auto TB_CannotEquip = 0x480; // UTextBlock*
		constexpr auto TB_ItemName_Equipped = 0x488; // UTextBlock*
		constexpr auto TB_EquipWeaponCategory = 0x490; // UTextBlock*
		constexpr auto CP_EquipParts = 0x498; // UCanvasPanel*
		constexpr auto CP_EquipPartsSlot = 0x4a0; // UCanvasPanel*
		constexpr auto IMG_PartsEquipWeapon = 0x4a8; // UCrowWidgetImage*
		constexpr auto IMG_Parts_Equipped = 0x4b0; // UCrowWidgetImage*
		constexpr auto IMG_Parts = 0x4b8; // UCrowWidgetImage*
		constexpr auto IMG_Arrow = 0x4c0; // UImage*
		constexpr auto WS_ItemGrade_Equip = 0x4c8; // UWidgetSwitcher*
		constexpr auto SB_WeaponPartsInfo_Equip = 0x4d0; // USizeBox*
		constexpr auto WS_ThirdKey = 0x4d8; // UWidgetSwitcher*
		constexpr auto TB_EquipArmorPercent = 0x4e0; // UTextBlock*
		constexpr auto PB_EquipArmorBar = 0x4e8; // UProgressBar*
		constexpr auto WS_ItemGrade = 0x4f0; // UWidgetSwitcher*
		constexpr auto WS_ItemGrade_Parts = 0x4f8; // UWidgetSwitcher*
		constexpr auto WS_Status = 0x500; // UWidgetSwitcher*
		constexpr auto WS_ItemDetail_Equipped = 0x508; // UWidgetSwitcher*
		constexpr auto WS_DescKey = 0x510; // UWidgetSwitcher*
		constexpr auto WS_FirstKey = 0x518; // UWidgetSwitcher*
		constexpr auto WS_SecondKey = 0x520; // UWidgetSwitcher*
		constexpr auto WS_ItemDetail = 0x528; // UWidgetSwitcher*
		constexpr auto WS_ArmorGauge = 0x530; // UWidgetSwitcher*
		constexpr auto RTB_FirstKey = 0x538; // UCrowInputMappingWidget*
		constexpr auto RTB_SecondKey = 0x540; // UCrowInputMappingWidget*
		constexpr auto RTB_DeskKey_Brief = 0x548; // UCrowInputMappingWidget*
		constexpr auto RTB_DeskKey_Detail = 0x550; // UCrowInputMappingWidget*
		constexpr auto EquipTime = 0x558; // float
		constexpr auto IMG_FirstKey = 0x560; // UImage*
		constexpr auto IMG_SecondKey = 0x568; // UImage*
		constexpr auto MouseLeftButton = 0x570; // UPaperSprite*
		constexpr auto MouseWheelButton = 0x578; // UPaperSprite*
		constexpr auto FKeySprite = 0x580; // UPaperSprite*
		constexpr auto XKeySprite = 0x588; // UPaperSprite*
		constexpr auto CrowCharacterPawn = 0x590; // ACrowCharacterPawn*
		constexpr auto InvenComp = 0x598; // UCrowGameInvenComponent*
		constexpr auto TargetItem = 0x5a0; // ACrowItemBase*
		constexpr auto EquipText = 0x5a8; // FText
		constexpr auto SecondText = 0x5c0; // FText
		constexpr auto IsEquip = 0x5d8; // bool
		constexpr auto IsGet = 0x5d9; // bool
		constexpr auto IsEquipTimeComplete = 0x5da; // bool
		constexpr auto CurrentInvenItemSlot = 0x5e0; // UCrowInvenItemSlot*
		constexpr auto PartsEquipSlot = 0x5f3; // char
		constexpr auto CurrPickupInventory = 0x5f8; // ACrowPickupInventory*
		constexpr auto PickupInvenSlot = 0x600; // int32_t
		constexpr auto CanEquipWeaponImages = 0x608; // TArray<UCrowWidgetImage*>
	}

	namespace n_UCrowTopBarDescWidget {
		constexpr auto WS_TopBar_Desc = 0x348; // UWidgetSwitcher*
	}

	namespace n_UDrawPolygonToolSnapProperties {
		constexpr auto bEnableSnapping = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
		constexpr auto bSnapToVertices = 0x62; // bool
		constexpr auto bSnapToEdges = 0x63; // bool
		constexpr auto bSnapToAngles = 0x64; // bool
		constexpr auto bSnapToLengths = 0x65; // bool
		constexpr auto SegmentLength = 0x68; // float
		constexpr auto bHitSceneObjects = 0x6c; // bool
		constexpr auto HitNormalOffset = 0x70; // float
	}

	namespace n_UCrowWeaponPartItemWidget {
		constexpr auto IMG_Frame = 0x670; // UImage*
		constexpr auto IMG_PartsIcon = 0x678; // UCrowWidgetImage*
		constexpr auto WB_CrowDragDropPanel = 0x680; // UCrowDragDropWidgetBase*
		constexpr auto WeaponInfoWidget = 0x688; // UCrowInvenWeaponInfoWidget*
		constexpr auto PartsType = 0x690; // ECrowWeaponPartsType
		constexpr auto IsDefaultParts = 0x691; // bool
		constexpr auto InvenData = 0x698; // FCrowItemData
	}

	namespace n_UCrowWeaponStateBase {
		constexpr auto WeaponBase = 0x28; // ACrowWeaponBase*
		constexpr auto CharacterOwner = 0x30; // ACrowCharacterPawn*
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UAkAssetPlatformData {
		constexpr auto CurrentAssetData = 0x28; // UAkAssetData*
	}

	namespace n_UCrowRadialButtonConquestSkill {
		constexpr auto EnableTextColor = 0x3c8; // FLinearColor
		constexpr auto DisableTextColor = 0x3d8; // FLinearColor
		constexpr auto IMG_DisableBG = 0x3e8; // UImage*
		constexpr auto CP_CoolTimeContents = 0x3f0; // UCanvasPanel*
		constexpr auto TB_CoolTime = 0x3f8; // UTextBlock*
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UCrowWidgetIconToggleButton {
		constexpr auto IMG_Icon = 0x5a8; // UImage*
		constexpr auto IMG_SelectIcon = 0x5b0; // UImage*
		constexpr auto ButtonIcon = 0x5b8; // FSlateBrush
		constexpr auto ButtonSelectIcon = 0x640; // FSlateBrush
	}

	namespace n_ACrowWorldPropLocator {
		constexpr auto Radius = 0x220; // float
		constexpr auto RandomSeed = 0x224; // int32_t
		constexpr auto DuplicateCount = 0x228; // int32_t
		constexpr auto Setting = 0x22c; // FCrowWorldPropLocatorSetting
		constexpr auto PropAssets = 0x248; // TArray<UObject*>
		constexpr auto SkipRearrange = 0x258; // bool
		constexpr auto Sphere = 0x260; // USphereComponent*
		constexpr auto PropItems = 0x268; // TArray<FCrowWorldPropLocatorItem>
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_UCrowWorldTrigger {
		constexpr auto WorldActor = 0x440; // ACrowWorldActor*
		constexpr auto WorldAnimator = 0x448; // UCrowWorldAnimator*
		constexpr auto LayoutItemIndex = 0x450; // int16_t
		constexpr auto GeometryType = 0x452; // ECrowWorldGeomType
		constexpr auto TriggerType = 0x453; // ECrowWorldTriggerType
		constexpr auto TriggerState = 0x454; // int8_t
		constexpr auto TriggerBodySetup = 0x458; // UBodySetup*
		constexpr auto LocalTextKey_Open = 0x460; // FString
		constexpr auto LocalTextKey_Close = 0x470; // FString
	}

	namespace n_ABP_CrowCharacterPawn_C {
		constexpr auto UberGraphFrame = 0x1b10; // FPointerToUberGraphFrame
		constexpr auto CrowFoliageAffector = 0x1b18; // UCrowFoliageAffectorComponent*
		constexpr auto Box_Trigger = 0x1b20; // UBoxComponent*
		constexpr auto Box_Interaction = 0x1b28; // UBoxComponent*
		constexpr auto CrowTrigger_Revive = 0x1b30; // UCrowTriggerComponent*
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_ACrowMissionArea {
		constexpr auto Root = 0x228; // UBoxComponent*
		constexpr auto IconLocation = 0x230; // USceneComponent*
		constexpr auto AreaRotation = 0x238; // UStaticMeshComponent*
		constexpr auto EnableGameModes = 0x240; // TArray<ECrowGameMode>
		constexpr auto bIsEnableIndicatorPing = 0x250; // bool
		constexpr auto IndicatorPingLifeTime = 0x254; // float
		constexpr auto ActorOverlapRefMap = 0x258; // TMap<uint32_t, FCrowActorOverlapRef>
		constexpr auto CollisionShapeArray = 0x2a8; // TArray<UShapeComponent*>
		constexpr auto ComponentArray = 0x2b8; // TArray<UCrowMissionAreaComponent*>
		constexpr auto RespawnComponent = 0x2c8; // UCrowMissionAreaRespawn*
		constexpr auto AreaID = 0x2d0; // uint32_t
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UUPSEnemyPointActionComponent {
		constexpr auto CharacterOnPoint = 0x1f8; // ACharacter*
		constexpr auto PointTag = 0x218; // FGameplayTag
		constexpr auto PreviewAnim = 0x220; // UAnimSequenceBase*
		constexpr auto PreviewAnimStartTime = 0x228; // float
		constexpr auto ArrowSize = 0x22c; // float
		constexpr auto ArrowOffset = 0x230; // float
		constexpr auto BillboardSize = 0x234; // float
		constexpr auto MeshRotationOffset = 0x238; // FRotator
		constexpr auto bOverrideProjectSettingsMesh = 0x244; // bool
		constexpr auto bOverrideProjectSettingsMaterial = 0x245; // bool
		constexpr auto bOverrideProjectSettingsSprite = 0x246; // bool
		constexpr auto OverrideEnemyActionPointComponentMesh = 0x248; // USkeletalMesh*
		constexpr auto OverrideEnemyActionPointComponentMeshMaterial = 0x250; // UMaterialInterface*
		constexpr auto OverrideEnemyActionPointComponentBillboardSprite = 0x258; // UTexture2D*
	}

	namespace n_UCrowClanUserSlotWidget {
		constexpr auto BT_Slot_ClanUserList = 0x348; // UCrowButton*
		constexpr auto WS_Slot_UserList = 0x350; // UWidgetSwitcher*
		constexpr auto IMG_Selected = 0x358; // UImage*
		constexpr auto WS_UserMark = 0x360; // UWidgetSwitcher*
		constexpr auto IMG_UserMark = 0x368; // UImage*
		constexpr auto IMG_UserList_ClassMark = 0x370; // UImage*
		constexpr auto TB_UserList_Level = 0x378; // UTextBlock*
		constexpr auto TB_UserList_Name = 0x380; // UTextBlock*
		constexpr auto WS_OddSwitcher = 0x388; // UWidgetSwitcher*
		constexpr auto WS_Online_Offline = 0x390; // UWidgetSwitcher*
		constexpr auto TB_UserList_ClanPoint = 0x398; // UTextBlock*
		constexpr auto TB_UserList_LastPlayTime = 0x3a0; // UTextBlock*
		constexpr auto CP_Offline = 0x3a8; // UCanvasPanel*
		constexpr auto WB_BT_Invited = 0x3b0; // UCrowButton*
		constexpr auto IMG_UserInvite_ClassMark = 0x3b8; // UImage*
		constexpr auto TB_UserInvite_Level = 0x3c0; // UTextBlock*
		constexpr auto TB_UserInvite_Name = 0x3c8; // UTextBlock*
		constexpr auto WB_BT_Cancel = 0x3d0; // UCrowButton*
		constexpr auto IMG_UserCancel_ClassMark = 0x3d8; // UImage*
		constexpr auto TB_UserCancel_Level = 0x3e0; // UTextBlock*
		constexpr auto TB_UserCancel_Name = 0x3e8; // UTextBlock*
		constexpr auto WB_BT_JoinSetOK = 0x3f0; // UCrowButton*
		constexpr auto WB_BT_JoinSetCancel = 0x3f8; // UCrowButton*
		constexpr auto IMG_UserJoinSet_ClassMark = 0x400; // UImage*
		constexpr auto TB_UserJoinSet_Level = 0x408; // UTextBlock*
		constexpr auto TB_UserJoinSet_Name = 0x410; // UTextBlock*
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UCrowCompassInfoWIdget {
		constexpr auto CompassMaterialIns = 0x348; // UMaterialInstance*
		constexpr auto CompassMaterialInsDynamic = 0x350; // UMaterialInstanceDynamic*
		constexpr auto TB_CurrentAngle = 0x358; // UTextBlock*
		constexpr auto IMG_Compass = 0x360; // UImage*
		constexpr auto IMG_EnemyFire_Left = 0x368; // UImage*
		constexpr auto IMG_EnemyFire_Right = 0x370; // UImage*
		constexpr auto RetainerBox_EnemyFire = 0x378; // URetainerBox*
		constexpr auto Overlay_EnemyFire = 0x380; // UOverlay*
		constexpr auto EnemyFireMarker = 0x388; // UUserWidget*
		constexpr auto EnemyFireMarkerArray = 0x390; // TArray<UCrowCompassEnemyFireMarker*>
	}

	namespace n_UCrowChatMessageItem {
		constexpr auto TB_ChatType = 0x348; // UTextBlock*
		constexpr auto TB_ChatMessage = 0x350; // URichTextBlock*
		constexpr auto TB_ChatSystemMessage = 0x358; // URichTextBlock*
		constexpr auto BT_WisperChat = 0x360; // UCrowButton*
		constexpr auto WS_ChatMessage = 0x368; // UWidgetSwitcher*
		constexpr auto ChatData = 0x370; // FCrowChatData
	}

	namespace n_UCrowImpactDamageControl {
		constexpr auto HideObjectSecond = 0xc0; // float
		constexpr auto MultiplyImpulse = 0xc4; // float
		constexpr auto TireDestroyDistanceDriven = 0xc8; // float
		constexpr auto bIsTakeDamageImpulse = 0xcc; // bool
		constexpr auto TakeMultiplyImpactDamage = 0xd0; // float
		constexpr auto MultiplyImpactDivideDamge = 0xd4; // float
		constexpr auto bIsTakeDamageUnderCharacter = 0xd8; // bool
		constexpr auto IgnoreOtherActorTakeDamage = 0xdc; // float
		constexpr auto ArrayCanBrokenBones = 0xe0; // TMap<FName, FST_BrokenBone>
		constexpr auto ArrayDamageMaterials = 0x130; // TMap<FName, FST_DamageMaterial>
		constexpr auto ArrayCanBrokenWheel = 0x180; // TMap<FName, FST_DamageWheel>
		constexpr auto IgnorePrimitiveNames = 0x1d0; // TArray<FName>
		constexpr auto DamageType = 0x1e0; // UDamageType*
		constexpr auto BodySKC = 0x1e8; // USkeletalMeshComponent*
		constexpr auto BodyMass = 0x1f0; // float
		constexpr auto TickTimerHandle = 0x1f8; // FTimerHandle
		constexpr auto ImpactActorInfos = 0x200; // TMap<int32_t, FST_PreImpactInfo>
		constexpr auto ImpactBoneInfos = 0x250; // TMap<FName, float>
		constexpr auto BonesToHide = 0x2a0; // TMap<FName, float>
		constexpr auto fImpactDivideDamage = 0x2f0; // float
		constexpr auto LastSpawnImpactFxTime = 0x2f4; // float
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_UCrowRecordWeaponInfoWidget {
		constexpr auto WSWeaponInfo = 0x348; // UWidgetSwitcher*
		constexpr auto TBKill = 0x350; // UTextBlock*
		constexpr auto TBHeadShot = 0x358; // UTextBlock*
		constexpr auto TBFaint = 0x360; // UTextBlock*
		constexpr auto TBLv = 0x368; // UTextBlock*
		constexpr auto PBExp = 0x370; // UProgressBar*
		constexpr auto TBExp = 0x378; // UTextBlock*
		constexpr auto TBMaxExp = 0x380; // UTextBlock*
		constexpr auto TBKill_2 = 0x388; // UTextBlock*
		constexpr auto TBFaint_2 = 0x390; // UTextBlock*
		constexpr auto TBUse_2 = 0x398; // UTextBlock*
		constexpr auto TBLv_2 = 0x3a0; // UTextBlock*
		constexpr auto PBExp_2 = 0x3a8; // UProgressBar*
		constexpr auto TBExp_2 = 0x3b0; // UTextBlock*
		constexpr auto TBMaxExp_2 = 0x3b8; // UTextBlock*
		constexpr auto TBUse_3 = 0x3c0; // UTextBlock*
		constexpr auto TBLv_3 = 0x3c8; // UTextBlock*
		constexpr auto PBExp_3 = 0x3d0; // UProgressBar*
		constexpr auto TBExp_3 = 0x3d8; // UTextBlock*
		constexpr auto TBMaxExp_3 = 0x3e0; // UTextBlock*
		constexpr auto TBFaint_4 = 0x3e8; // UTextBlock*
		constexpr auto TBAssi_4 = 0x3f0; // UTextBlock*
		constexpr auto TBLv_4 = 0x3f8; // UTextBlock*
		constexpr auto PBExp_4 = 0x400; // UProgressBar*
		constexpr auto TBExp_4 = 0x408; // UTextBlock*
		constexpr auto TBMaxExp_4 = 0x410; // UTextBlock*
	}

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UCrowESCMenuWidget {
		constexpr auto BT_Continue = 0x368; // UCrowButton*
		constexpr auto BT_Settings = 0x370; // UCrowButton*
		constexpr auto BT_ReturnToLobby = 0x378; // UCrowButton*
		constexpr auto BT_Quit = 0x380; // UCrowButton*
		constexpr auto TB_Continue = 0x388; // UTextBlock*
		constexpr auto TB_Settings = 0x390; // UTextBlock*
		constexpr auto TB_ReturnToLobby = 0x398; // UTextBlock*
		constexpr auto TB_Quit = 0x3a0; // UTextBlock*
	}

	namespace n_UCrowRespawnButton {
		constexpr auto ButtonSize = 0x348; // float
		constexpr auto BT_ConquestRespawn = 0x350; // UCrowToggleButton*
		constexpr auto CP_Root = 0x358; // UCanvasPanel*
		constexpr auto ParentWidget = 0x360; // UCrowWidgetBase*
		constexpr auto WorldMapIcon = 0x368; // UCrowWorldMapIcon*
		constexpr auto RespawnMapWidget = 0x370; // UCrowRespawnMapWidget*
		constexpr auto TargetActor = 0x378; // AActor*
	}

	namespace n_UCrowWidgetPIEEntry {
		constexpr auto ET_IP = 0x348; // UEditableText*
		constexpr auto ET_Port = 0x350; // UEditableText*
		constexpr auto BTN_Connect = 0x358; // UButton*
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UCrowLobbyLoadoutWidget {
		constexpr auto WB_Loadout_WeaponInfo_Primary_2 = 0x348; // UCrowLoadoutWeaponInfoWidget*
		constexpr auto WB_Loadout_WeaponInfo_Primary_3 = 0x350; // UCrowLoadoutWeaponInfoWidget*
		constexpr auto WB_Loadout_SubWeapon_Slot1 = 0x358; // UCrowLoadoutWeaponSubInfoWidget*
		constexpr auto WB_Loadout_SubWeapon_Slot2 = 0x360; // UCrowLoadoutWeaponSubInfoWidget*
		constexpr auto WeaponWidgetList = 0x368; // TArray<UCrowWeaponListItemBase*>
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto enumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UCrowClanListSlotWidget {
		constexpr auto WB_Info_ClanEmblem = 0x358; // UCrowClanEmblemWidget*
		constexpr auto WS_Slot_ClanList = 0x360; // UWidgetSwitcher*
		constexpr auto WS_JoinState = 0x368; // UWidgetSwitcher*
		constexpr auto WS_ClanListSubType = 0x370; // UWidgetSwitcher*
		constexpr auto WB_BT_JoinAccept = 0x378; // UCrowButton*
		constexpr auto WB_BT_JoinAdmiss = 0x380; // UCrowButton*
		constexpr auto TB_Join_ClanLevel = 0x388; // UTextBlock*
		constexpr auto TB_Join_ClanName = 0x390; // UTextBlock*
		constexpr auto TB_ContributionPoint = 0x398; // UTextBlock*
		constexpr auto TB_Join_ClanMemberCurrent = 0x3a0; // UTextBlock*
		constexpr auto TB_Join_ClanMemberMax = 0x3a8; // UTextBlock*
		constexpr auto WB_BT_ReceptionAccept = 0x3b0; // UCrowButton*
		constexpr auto WB_BT_ReceptionAdmiss = 0x3b8; // UCrowButton*
		constexpr auto WB_BT_Cancel = 0x3c0; // UCrowButton*
		constexpr auto TB_Reception_ClanLevel = 0x3c8; // UTextBlock*
		constexpr auto TB_Reception_ClanName = 0x3d0; // UTextBlock*
		constexpr auto TB_Sent_ClanLevel = 0x3d8; // UTextBlock*
		constexpr auto TB_Sent_ClanName = 0x3e0; // UTextBlock*
		constexpr auto TB_RankNum = 0x3e8; // UTextBlock*
		constexpr auto TB_Rank_ClanLevel = 0x3f0; // UTextBlock*
		constexpr auto TB_Ranking_ClanName = 0x3f8; // UTextBlock*
		constexpr auto TB_Rank_ContributionPoint = 0x400; // UTextBlock*
		constexpr auto WB_Rank_ClanEmblem = 0x408; // UCrowClanEmblemWidget*
		constexpr auto WS_OddSwitcher = 0x410; // UWidgetSwitcher*
	}

	namespace n_UCrowCustomSprayItemListWidget {
		constexpr auto SpraySlotWidgetClass = 0x350; // UCrowCustomizeSpraySlotWidget*
		constexpr auto GD_ItemList = 0x358; // UGridPanel*
		constexpr auto ParentWidget = 0x360; // UCrowCustomizeEtcDescWidget*
		constexpr auto CurrSelectSlot = 0x368; // UCrowCustomizeSpraySlotWidget*
	}

	namespace n_ACrowProjectileMeshBase {
		constexpr auto MeshRoot = 0x17c8; // UStaticMeshComponent*
	}

	namespace n_UCrowLobbySlotPurchasePopupWidget {
		constexpr auto PurchaseItemClass = 0x348; // UCrowLobbySlotPurchaseItemWidget*
		constexpr auto TB_Title = 0x350; // UTextBlock*
		constexpr auto TB_SlotName = 0x358; // UTextBlock*
		constexpr auto VB_ItemList = 0x360; // UVerticalBox*
		constexpr auto BT_Close = 0x368; // UCrowButton*
		constexpr auto LobbySlotType = 0x370; // ECrowLobbySlotType
		constexpr auto TargetSlotIndex = 0x374; // int32_t
		constexpr auto TargetName = 0x378; // FText
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_ACrowWorldSimulationActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto ImpactPoint = 0x228; // USceneComponent*
		constexpr auto UseMassMultiply = 0x230; // char : 1
		constexpr auto MassMultiply = 0x234; // float
		constexpr auto FxHitGroundSetting = 0x238; // FCrowWorldDestructionFxHitGround
		constexpr auto FxComponents = 0x268; // TArray<UFXSystemComponent*>
		constexpr auto CollisionProfileName = 0x278; // FName
		constexpr auto ImpactLocation = 0x280; // FVector
		constexpr auto ImpactNormal = 0x28c; // FVector
		constexpr auto ImpulseMagnitude = 0x298; // float
		constexpr auto PendingTime = 0x29c; // float
		constexpr auto DestroyTime = 0x2a0; // float
		constexpr auto ElapsedTime = 0x2a4; // float
		constexpr auto CountHiddenSMC = 0x2a8; // int32_t
		constexpr auto SMCList = 0x2b0; // TArray<UStaticMeshComponent*>
		constexpr auto DestroyTimerHandle = 0x2c0; // FTimerHandle
	}

	namespace n_ACrowSkydivingPawn {
		constexpr auto SkydivingState = 0x4b8; // ECrowSkydivingState
		constexpr auto LocalSkydivingState = 0x4b9; // ECrowSkydivingState
		constexpr auto SkydivingAnimState = 0x4ba; // ECrowSkydivingAnimState
		constexpr auto ParachuteSpreadKeyName = 0x4bc; // FName
		constexpr auto LeftHandSocketName = 0x4c4; // FName
		constexpr auto RightHandSocketName = 0x4cc; // FName
		constexpr auto SpineSocketName = 0x4d4; // FName
		constexpr auto RecoverLookAroundSpeed = 0x4dc; // float
		constexpr auto GodModeTime = 0x4e0; // float
		constexpr auto BlurMaterialInst = 0x4e8; // UMaterialInstance*
		constexpr auto BlurMaterialInstDynamic = 0x4f0; // UMaterialInstanceDynamic*
		constexpr auto BlurMaxVelocityZ = 0x4f8; // float
		constexpr auto BlurDistParam = 0x4fc; // float
		constexpr auto DisapearTimeSecond = 0x500; // float
		constexpr auto ParachuteState = 0x504; // ECrowSkydivingParachuteState
		constexpr auto ParachuteSkinIndex = 0x508; // uint32_t
		constexpr auto ParachuteSocketName = 0x50c; // FName
		constexpr auto bUseParachuteBoneTransform = 0x514; // bool
		constexpr auto ParachuteAnimSpread = 0x518; // UAnimSequence*
		constexpr auto ParachuteAnimFall = 0x520; // UAnimSequence*
		constexpr auto ParachuteAnimLand = 0x528; // UAnimSequence*
		constexpr auto DefaultClothBackpackIndex = 0x530; // uint32_t
		constexpr auto FreeFallSound = 0x538; // UAkAudioEvent*
		constexpr auto FreeFallSound_End = 0x540; // UAkAudioEvent*
		constexpr auto ParachuteSound = 0x548; // UAkAudioEvent*
		constexpr auto ParachuteSound_End = 0x550; // UAkAudioEvent*
		constexpr auto AkComponent = 0x558; // UAkComponent*
		constexpr auto bForceThirdCamera = 0x560; // bool
		constexpr auto FreeFallCameraShakeClass = 0x568; // UMatineeCameraShake*
		constexpr auto ViewPitchDirectionValue = 0x570; // float
		constexpr auto FreeFallAnimRollChangeValue = 0x574; // float
		constexpr auto FreeFallAnimRollInSpeed = 0x578; // float
		constexpr auto FreeFallAnimRollOutSpeed = 0x57c; // float
		constexpr auto ReadyToSpreadParachuteHeight = 0x580; // float
		constexpr auto ParachuteSpreadLimitZ = 0x584; // float
		constexpr auto ReadyToLandLimitZ = 0x588; // float
		constexpr auto ReadyToLandLimitZWood = 0x58c; // float
		constexpr auto ParachuteApproachTime = 0x590; // float
		constexpr auto MinViewPitchDirectionRate = 0x594; // float
		constexpr auto ReadyToLandVelocityScale = 0x598; // float
		constexpr auto FreeFallDialogRowName = 0x5a0; // FString
		constexpr auto ParachuteDialogRowName = 0x5b0; // FString
		constexpr auto AddedFarViewSocketOffset = 0x5c0; // FVector
		constexpr auto NoneSettings = 0x5d0; // FCrowSkydivingSettingss
		constexpr auto FreeFallSettings = 0x668; // FCrowSkydivingSettingss
		constexpr auto ParachuteSpreadSettings = 0x700; // FCrowSkydivingSettingss
		constexpr auto ParachuteSettings = 0x798; // FCrowSkydivingSettingss
		constexpr auto ReadyToLandSettings = 0x830; // FCrowSkydivingSettingss
		constexpr auto LandSettings = 0x8c8; // FCrowSkydivingSettingss
		constexpr auto WalkLandSpeed = 0x960; // float
		constexpr auto RollingLandSpeed = 0x964; // float
		constexpr auto WalkLandAnim = 0x968; // UAnimMontage*
		constexpr auto RollingLandAnim = 0x970; // UAnimMontage*
		constexpr auto ForwardRate = 0x978; // float
		constexpr auto RightRate = 0x97c; // float
		constexpr auto DownRate = 0x980; // float
		constexpr auto DefaultMinScaleValue = 0x984; // float
		constexpr auto DefaultIdleScaleValue = 0x988; // float
		constexpr auto ForwardMaxScaleValue = 0x98c; // float
		constexpr auto InputYawScale = 0x990; // float
		constexpr auto InputPitchScale = 0x994; // float
		constexpr auto InputRollScale = 0x998; // float
		constexpr auto AnimationAxisForwardValueScale = 0x99c; // float
		constexpr auto AnimationAxisRightValueScale = 0x9a0; // float
		constexpr auto TargetCameraSocketOffset = 0x9a4; // FVector
		constexpr auto CameraRotation = 0x9b0; // FRotator
		constexpr auto FreeFallCameraShake = 0x9c0; // UCameraShakeBase*
		constexpr auto ViewPitchDirectionRate = 0x9c8; // float
		constexpr auto ControlRotYawInterpValue = 0x9cc; // float
		constexpr auto AnimationAxisForwardValue = 0x9d0; // float
		constexpr auto AnimationAxisRightValue = 0x9d4; // float
		constexpr auto AnimationAxisRollValue = 0x9d8; // float
		constexpr auto CharacterPawn = 0x9e0; // ACrowCharacterPawn*
		constexpr auto TPSpringArm = 0x9e8; // UCrowSpringArmComponent*
		constexpr auto LandHeight = 0x9f0; // float
		constexpr auto DistanceLandToMe = 0x9f4; // float
		constexpr auto StateTimeSecond = 0x9f8; // float
		constexpr auto CameraDirectingTimeSecond = 0x9fc; // float
		constexpr auto GlobalTimeSecond = 0xa00; // float
		constexpr auto bLookAround = 0xa04; // bool
		constexpr auto bRecoverLookAround = 0xa05; // bool
		constexpr auto RecoverLookingRotation = 0xa08; // FRotator
		constexpr auto bFarView = 0xa14; // bool
		constexpr auto bUpdateCameraTransform = 0xa15; // bool
		constexpr auto bIsReadyToParachuteSpread = 0xa16; // bool
		constexpr auto bIsInitCharacterPawn = 0xa17; // bool
		constexpr auto bIsReadyLocalCharacterSetting = 0xa18; // bool
		constexpr auto bEquipDefaultClothBackpack = 0xa19; // bool
		constexpr auto bRevertFirstCamera = 0xa1a; // bool
		constexpr auto bOnWater = 0xa1b; // bool
		constexpr auto ApproachAlpha = 0xa1c; // float
		constexpr auto PrevAxisForwardValue = 0xa20; // float
		constexpr auto AxisForwardState = 0xa24; // char
		constexpr auto AxisRightState = 0xa25; // char
		constexpr auto PC = 0xa28; // ACrowPlayerControllerBase*
		constexpr auto PS = 0xa30; // ACrowPlayerStateBase*
		constexpr auto bIsCameraBlendComplete = 0xa40; // bool
		constexpr auto bIsChangeFreeFallSection = 0xa41; // bool
		constexpr auto bIsChangeParachuteSection = 0xa42; // bool
		constexpr auto bIsChangeLandSection = 0xa43; // bool
		constexpr auto ReadyToLandPos = 0xa44; // FVector
		constexpr auto ReadyToLandSpeed = 0xa50; // float
		constexpr auto bIsSpectating = 0xa54; // bool
		constexpr auto bUseLagSubstepping = 0xa55; // bool
		constexpr auto RotationLagSpeed = 0xa58; // float
		constexpr auto PrevControlRotation = 0xa5c; // FRotator
		constexpr auto LagMaxTimeStep = 0xa68; // float
		constexpr auto bIsCameraDirecting = 0xa6c; // bool
		constexpr auto SkydivingTargetArmLength = 0xa70; // float
		constexpr auto SkydivingCameraForward = 0xa74; // FRotator
		constexpr auto SkydivingActorRotation = 0xa80; // FRotator
		constexpr auto bCheckGSTSpreadParachute = 0xa8f; // bool
		constexpr auto bCheckGSTReadToLand = 0xa90; // bool
		constexpr auto bCheckGSTLand = 0xa91; // bool
		constexpr auto bCheckGSTNone = 0xa92; // bool
		constexpr auto bCheckHit = 0xa93; // bool
		constexpr auto bUseSceneTableValue = 0xa94; // bool
		constexpr auto PlayLandAnimState = 0xa95; // ECrowSkydivingAnimState
		constexpr auto PlayCameraDirectionState = 0xa96; // ECrowSkydivingState
		constexpr auto bIsPlayCameraDirection = 0xa97; // bool
		constexpr auto VelArrow = 0xa98; // UArrowComponent*
		constexpr auto VelArrowX = 0xaa0; // UArrowComponent*
		constexpr auto VelArrowY = 0xaa8; // UArrowComponent*
		constexpr auto VelArrowZ = 0xab0; // UArrowComponent*
		constexpr auto bShowDebugSkydivingPawn = 0xab8; // bool
		constexpr auto bDebugFreeFallCameraShake = 0xab9; // bool
	}

	namespace n_UCrowWorldSyncClientWorker {
		constexpr auto bInitControllerRequested = 0x28; // char : 1
		constexpr auto bEnabledVisualConfig = 0x28; // char : 1
		constexpr auto ClientFrameKey = 0x2c; // int32_t
		constexpr auto World = 0x30; // UWorld*
		constexpr auto PlayerController = 0x38; // APlayerController*
		constexpr auto MapConfig = 0x40; // UCrowWorldMapConfig*
		constexpr auto WorldDataAsset = 0x48; // UCrowWorldDataCollectionAsset*
		constexpr auto ReplicationActor = 0x50; // ACrowWorldReplicationActor*
		constexpr auto ReplicationController = 0x58; // ACrowWorldReplicationController*
		constexpr auto SectorGrid = 0x60; // FCrowWorldGrid
		constexpr auto LODUpdater = 0x78; // UCrowWorldLODUpdater*
		constexpr auto WorldOcclusion = 0x80; // UCrowWorldOcclusion*
		constexpr auto WorldFoliage = 0x88; // UCrowWorldFoliage*
		constexpr auto WorldTerrainSetup = 0x90; // UCrowWorldTerrainSetup*
		constexpr auto FollowingFxComponents = 0x98; // TArray<UFXSystemComponent*>
		constexpr auto MPCBackups = 0xa8; // TArray<FCrowWorldMaterialParameterOverride>
		constexpr auto MPCRestores = 0xb8; // TArray<FCrowWorldMaterialParameterOverride>
		constexpr auto SectorDataAssets = 0xc8; // TMap<uint32_t, FCrowWorldSectorData>
		constexpr auto ClusterDataAssets = 0x118; // TMap<uint32_t, FCrowWorldClusterData>
		constexpr auto LandmarkDataAsset = 0x168; // FCrowWorldLandmarkData
		constexpr auto AssetReferenceCounts = 0x178; // TMap<UObject*, int32_t>
		constexpr auto ActiveLandmarkData = 0x1c8; // FCrowWorldReplicationLandmark
		constexpr auto ActiveClusters = 0x1e0; // TMap<uint32_t, FCrowWorldClientCluster>
		constexpr auto ActiveSectors = 0x230; // TMap<uint32_t, FCrowWorldClientSector>
		constexpr auto ActiveActors = 0x280; // TMap<uint32_t, ACrowWorldActor*>
		constexpr auto DebugFrameCount = 0x2d0; // int32_t
		constexpr auto ReceivedClusters = 0x2d8; // TArray<FCrowWorldReplicationCluster>
		constexpr auto ReceivedSectors = 0x2e8; // TArray<FCrowWorldReplicationSector>
		constexpr auto ReceivedDropClusters = 0x2f8; // TArray<FCrowWorldClientDropClusterIndex>
		constexpr auto ReceivedDropSectors = 0x308; // TArray<FCrowWorldClientDropSectorIndex>
		constexpr auto DropClusterActorQueue = 0x318; // TArray<ACrowWorldActor*>
		constexpr auto DropSectorActorQueue = 0x328; // TArray<ACrowWorldActor*>
		constexpr auto GeneratingSectorIndex = 0x338; // uint32_t
		constexpr auto ClusterActorKeyArray = 0x340; // TArray<FCrowWorldClientClusterActorKey>
		constexpr auto GeneratingClusterActorKeyCursor = 0x350; // int16_t
		constexpr auto GeneratingSectorActorCursor = 0x352; // int16_t
		constexpr auto CollectAssetLayoutCursor = 0x354; // int16_t
		constexpr auto DestructionLink = 0x358; // FCrowWorldDestructionLink
	}

	namespace n_UWB_SettingsSlotOnOff_C {
		constexpr auto IMG_BG = 0x380; // UImage*
		constexpr auto IMG_Blue00 = 0x388; // UImage*
		constexpr auto IMG_Frame = 0x390; // UImage*
		constexpr auto IMG_OffBG = 0x398; // UImage*
		constexpr auto IMG_OnBG = 0x3a0; // UImage*
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_UWB_SettingsSlotDropdown_C {
		constexpr auto Image_20 = 0x3a0; // UImage*
		constexpr auto IMG_Frame = 0x3a8; // UImage*
		constexpr auto IMG_Icon_Arrow = 0x3b0; // UImage*
		constexpr auto IMG_ListBg = 0x3b8; // UImage*
	}

	namespace n_AUPSPointActionMovementHandler {
		constexpr auto MovementCharacter = 0x238; // ACharacter*
		constexpr auto PointActionComponent = 0x240; // UUPSEnemyPointActionComponent*
	}

	namespace n_UGroomCreateBindingOptions {
		constexpr auto SourceSkeletalMesh = 0x28; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x38; // int32_t
		constexpr auto MatchingSection = 0x3c; // int32_t
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UCrowShopMainWidget {
		constexpr auto CategoryItemWidget = 0x348; // UCrowShopItemSlotWidget*
		constexpr auto CategoryItemWideWidget = 0x350; // UCrowShopItemSlotWidget*
		constexpr auto ShopPackagePopupWidgetclass = 0x358; // UCrowShopPackagePopupWidget*
		constexpr auto ChangeNicnameWidgetClass = 0x360; // UCrowChangeNicknameWidget*
		constexpr auto RandomBoxInfoWidgetClass = 0x368; // UCrowRandomBoxInfoWidget*
		constexpr auto DesconstructEffectTime = 0x370; // float
		constexpr auto CurrSelectSlotWidget = 0x378; // UCrowShopItemSlotWidget*
		constexpr auto WB_LobbyButton_HOTNEW = 0x380; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_Basic = 0x388; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_Package = 0x390; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_Battlepass = 0x398; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_Deconstrct = 0x3a0; // UCrowWidgetToggleButton*
		constexpr auto CP_HotandNew = 0x3a8; // UCanvasPanel*
		constexpr auto CP_Normal_Package_Shop = 0x3b0; // UCanvasPanel*
		constexpr auto WB_ShopCategory = 0x3b8; // UCrowShopCategoryWidget*
		constexpr auto WB_Shop_SlotDropDown = 0x3c0; // UCrowShopSlotDropDownWidget*
		constexpr auto WB_Shop_Deconstruct = 0x3c8; // UCrowDeconstructWidget*
		constexpr auto WB_BattlePass = 0x3d0; // UCrowBattlePassWidget*
		constexpr auto WB_BT_OwnList = 0x3d8; // UCrowButton*
		constexpr auto WB_BT_EscBack = 0x3e0; // UCrowButton*
		constexpr auto WB_LobbyButton_OwnList = 0x3e8; // UCrowWidgetToggleButton*
		constexpr auto CP_Normal_Package_ShopInfo = 0x3f0; // UCanvasPanel*
		constexpr auto CP_Normal_OwnList = 0x3f8; // UCanvasPanel*
		constexpr auto GP_NormalShopList = 0x400; // UGridPanel*
		constexpr auto GP_NormalOwnShopList = 0x408; // UGridPanel*
		constexpr auto WB_Shop_Popup_ExclusivePurchase_wide = 0x410; // UCrowShopPackagePopupWidget*
		constexpr auto ButtonList = 0x418; // TArray<UCrowWidgetToggleButton*>
		constexpr auto WB_ChangeNicknameWidget = 0x428; // UCrowChangeNicknameWidget*
		constexpr auto RandomBoxInfoWidget = 0x430; // UCrowRandomBoxInfoWidget*
		constexpr auto CurrentProductType = 0x438; // ECrowShopProductType
		constexpr auto PrevProductType = 0x439; // ECrowShopProductType
		constexpr auto CurrentProductSubType = 0x43a; // ECrowShopProductSubType
		constexpr auto CurrentSortType = 0x43b; // ECrowShopSortType
		constexpr auto Banner1 = 0x440; // UCrowBannerWidget*
		constexpr auto Banner2 = 0x448; // UCrowBannerWidget*
		constexpr auto Banner3 = 0x450; // UCrowBannerWidget*
		constexpr auto Banner4 = 0x458; // UCrowBannerWidget*
		constexpr auto Banner5 = 0x460; // UCrowBannerWidget*
		constexpr auto Banner6 = 0x468; // UCrowBannerWidget*
		constexpr auto BannerList = 0x470; // TArray<UCrowBannerWidget*>
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UPhysicsObjectToolPropertySet {
		constexpr auto ObjectName = 0x60; // FString
		constexpr auto CollisionType = 0x70; // ECollisionGeometryMode
		constexpr auto Spheres = 0x78; // TArray<FPhysicsSphereData>
		constexpr auto Boxes = 0x88; // TArray<FPhysicsBoxData>
		constexpr auto Capsules = 0x98; // TArray<FPhysicsCapsuleData>
		constexpr auto Convexes = 0xa8; // TArray<FPhysicsConvexData>
	}

	namespace n_ACrowBuildingEditorChecker {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto TextRender = 0x228; // UTextRenderComponent*
		constexpr auto CubeMesh = 0x230; // UStaticMeshComponent*
		constexpr auto HideInformation = 0x238; // bool
		constexpr auto CollectedActors = 0x240; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto AddedActors = 0x250; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto MovedActors = 0x260; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EditorRootActors = 0x270; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EditorCheckerActors = 0x280; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto IsActivateChecker = 0x290; // bool
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UCrowDeathZoneWidget {
		constexpr auto TB_WarningTimer = 0x348; // UTextBlock*
		constexpr auto TB_WarningAlarm = 0x350; // UTextBlock*
		constexpr auto TB_WarningDesc = 0x358; // UTextBlock*
	}

	namespace n_UWB_SettingsSlotSlider_C {
		constexpr auto Image_52 = 0x368; // UImage*
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UDrawPolygonTool {
		constexpr auto PolygonProperties = 0x88; // UDrawPolygonToolStandardProperties*
		constexpr auto SnapProperties = 0x90; // UDrawPolygonToolSnapProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0x150; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
		constexpr auto HeightMechanic = 0x540; // UPlaneDistanceFromHitMechanic*
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UOnAcceptHandleSourcesProperties {
		constexpr auto OnToolAccept = 0x60; // EHandleSourcesMethod
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ACrowEquipmentBase {
		constexpr auto bIsSelected = 0x308; // bool
		constexpr auto bIsVisible = 0x309; // bool
		constexpr auto SlotIndex = 0x30a; // char
	}

	namespace n_UCrowWorldLevelOfDetailAUD {
		constexpr auto CrowWorldLOD = 0x28; // ECrowWorldLODGroup
		constexpr auto OverrideCameraDistanceMax = 0x2c; // float
		constexpr auto IgnoreCrowLightProbe = 0x30; // char : 1
		constexpr auto ClientDecorationOnly = 0x30; // char : 1
		constexpr auto AlwaysDisableCollision = 0x30; // char : 1
		constexpr auto StaticWorldMesh = 0x30; // char : 1
		constexpr auto WorldHLOD = 0x30; // char : 1
	}

	namespace n_UParticleSystemWidget {
		constexpr auto ParticleSystemTemplate = 0x108; // UParticleSystem*
		constexpr auto bAutoActivate = 0x110; // bool
		constexpr auto bReactivate = 0x111; // bool
		constexpr auto WorldParticleComponent = 0x118; // UUIParticleComponent*
		constexpr auto WorldParticleActor = 0x120; // AActor*
	}

	namespace n_UCrowDistanceBasedFXManager {
		constexpr auto WeaponSubTypeNames = 0x30; // TMap<int64_t, FName>
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UEraseBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_ACrowGameStateTG {
		constexpr auto ArrayBomberSpawner = 0x410; // TArray<ACrowTGStealthSpawner*>
		constexpr auto StealthSpawnerTimer = 0x420; // FTimerHandle
		constexpr auto BomberRespawnTime = 0x428; // float
	}

	namespace n_ACrowLoadoutVolume {
		constexpr auto TeamID = 0x258; // ECrowTeam_RedBlue
	}

	namespace n_UCrowDamageEffect {
		constexpr auto CameraShake = 0x28; // TArray<FCrowDamageCameraShake>
		constexpr auto SmallBloodPercent = 0x38; // float
		constexpr auto LargeBloodPercent = 0x3c; // float
		constexpr auto VignetteCurve = 0x40; // UCurveFloat*
		constexpr auto ContaminationAreaCameraShake = 0x48; // UMatineeCameraShake*
	}

	namespace n_UCrowSettingsUserConfig {
		constexpr auto ActionKeySlots = 0x28; // TArray<FActionKeySlot>
		constexpr auto AxisKeySlots = 0x38; // TArray<FAxisKeySlot>
		constexpr auto Options = 0x48; // TArray<FSettingUserConfigItem>
	}

	namespace n_UCrowSpectatorSquadSlotWidget {
		constexpr auto VB_List = 0x348; // UVerticalBox*
		constexpr auto TB_SquadNumber = 0x350; // UTextBlock*
		constexpr auto IMG_SquadColor = 0x358; // UImage*
		constexpr auto PlayerSlotWidgetClass = 0x360; // UCrowSpectatorPlayerSlotWidget*
		constexpr auto PlayerSlotMap = 0x368; // TMap<uint64_t, UCrowSpectatorPlayerSlotWidget*>
		constexpr auto SquadKey = 0x3b8; // FString
		constexpr auto SquadNumber = 0x3c8; // int32_t
		constexpr auto SquadColor = 0x3cc; // FLinearColor
	}

	namespace n_UPlaneCutTool {
		constexpr auto BasicProperties = 0x98; // UPlaneCutToolProperties*
		constexpr auto AcceptProperties = 0xa0; // UAcceptOutputProperties*
		constexpr auto CutPlaneOrigin = 0xa8; // FVector
		constexpr auto CutPlaneOrientation = 0xc0; // FQuat
		constexpr auto Previews = 0xd0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto MeshesToCut = 0xe0; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
	}

	namespace n_ACrowSwitchingActor {
		constexpr auto bSwitchOn = 0x220; // bool
		constexpr auto SwitcingOnActors = 0x228; // TArray<TSoftObjectPtr<AActor>>
		constexpr auto SwitcingOffActors = 0x238; // TArray<TSoftObjectPtr<AActor>>
		constexpr auto SphereMesh = 0x248; // UStaticMeshComponent*
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UBTService_CrowUpdateTargetState {
		constexpr auto TargetInSight = 0x98; // FBlackboardKeySelector
	}

	namespace n_UCrowBuildingDynamicPartsTableRef {
		constexpr auto PartsMap = 0x28; // TMap<FName, FCrowBuildingDynamicParts>
	}

	namespace n_UCrowObserverIndicatorWidget {
		constexpr auto IMG_SquadColor = 0x3c8; // UImage*
		constexpr auto TB_SquadNumber = 0x3d0; // UTextBlock*
		constexpr auto PB_HealthPoint = 0x3d8; // UProgressBar*
		constexpr auto LocalPlayerState = 0x3e0; // ACrowPlayerStateBase*
		constexpr auto TargetPlayerState = 0x3e8; // ACrowPlayerStateBase*
		constexpr auto CharacterPawn = 0x3f0; // ACrowCharacterPawn*
	}

	namespace n_UCrowUserPopupWidget {
		constexpr auto IMG_UserThumenail = 0x348; // UCrowWidgetImage*
		constexpr auto IMG_Rank = 0x350; // UCrowWidgetImage*
		constexpr auto TB_UserLevel = 0x358; // UTextBlock*
		constexpr auto TB_Username = 0x360; // UTextBlock*
		constexpr auto BT_Profile = 0x368; // UCrowButton*
		constexpr auto BT_Invite = 0x370; // UCrowButton*
		constexpr auto BT_Kick = 0x378; // UCrowButton*
		constexpr auto BT_Promote = 0x380; // UCrowButton*
		constexpr auto BT_RequestFriend = 0x388; // UCrowButton*
		constexpr auto BT_DeleteFriend = 0x390; // UCrowButton*
		constexpr auto BT_Wisper = 0x398; // UCrowButton*
		constexpr auto BT_Join = 0x3a0; // UCrowButton*
		constexpr auto BT_Report = 0x3a8; // UCrowButton*
		constexpr auto BT_Close = 0x3b0; // UCrowButton*
		constexpr auto CurrentPlayUserPopupInfo = 0x3b8; // FCrowGamePlayUserPopupInfo
		constexpr auto CurrentSlotType = 0x3f0; // EFriendSlotType
		constexpr auto SceneLobby = 0x3f8; // ACrowSceneLobby*
	}

	namespace n_ACrowWeaponTablet {
		constexpr auto BackupCameraMode = 0x1ec0; // ECrowCameraMode
	}

	namespace n_ACrowWeaponTimeBombForBombMission {
		constexpr auto CompositionCClass = 0x1ec0; // AActor*
		constexpr auto ProgressWidget = 0x1ec8; // UCrowHealWidget*
		constexpr auto CancelTrigger = 0x1ed0; // UCrowTriggerUIBase*
		constexpr auto bIsPlantCompositionC = 0x1ed8; // bool
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_ACrowLadderActor {
		constexpr auto LadderStair = 0x228; // UStaticMesh*
		constexpr auto TriggerBox = 0x230; // UBoxComponent*
		constexpr auto Top = 0x238; // USceneComponent*
		constexpr auto Bottom = 0x240; // USceneComponent*
		constexpr auto TopEnter = 0x248; // USceneComponent*
		constexpr auto BottomEnter = 0x250; // USceneComponent*
		constexpr auto BottomExit = 0x258; // USceneComponent*
		constexpr auto LadderBodyMeshComponent = 0x260; // UStaticMeshComponent*
		constexpr auto TopEnterTrigger = 0x268; // UCrowTriggerComponent*
		constexpr auto bUseTopEnterTrigger = 0x270; // bool
		constexpr auto StepCount = 0x274; // int32_t
		constexpr auto StepHeight = 0x278; // float
		constexpr auto TopExitStepNumberFromTop = 0x27c; // int32_t
		constexpr auto BottomAllowableEntryAngle = 0x280; // float
		constexpr auto BottomAllowableEntryXYSize = 0x284; // float
		constexpr auto BottomAllowableEntryHeight = 0x288; // float
	}

	namespace n_AOculusMR_CastingCameraActor {
		constexpr auto VRNotificationComponent = 0x238; // UVRNotificationsComponent*
		constexpr auto CameraColorTexture = 0x240; // UTexture2D*
		constexpr auto CameraDepthTexture = 0x248; // UTexture2D*
		constexpr auto PlaneMeshComponent = 0x250; // UOculusMR_PlaneMeshComponent*
		constexpr auto ChromaKeyMaterial = 0x258; // UMaterial*
		constexpr auto OpaqueColoredMaterial = 0x260; // UMaterial*
		constexpr auto ChromaKeyMaterialInstance = 0x268; // UMaterialInstanceDynamic*
		constexpr auto CameraFrameMaterialInstance = 0x270; // UMaterialInstanceDynamic*
		constexpr auto BackdropMaterialInstance = 0x278; // UMaterialInstanceDynamic*
		constexpr auto DefaultTexture_White = 0x280; // UTexture2D*
		constexpr auto BackgroundRenderTargets = 0x2d8; // TArray<UTextureRenderTarget2D*>
		constexpr auto ForegroundCaptureActor = 0x2e8; // ASceneCapture2D*
		constexpr auto ForegroundRenderTargets = 0x2f0; // TArray<UTextureRenderTarget2D*>
		constexpr auto PoseTimes = 0x300; // TArray<double>
		constexpr auto MRSettings = 0x310; // UOculusMR_Settings*
		constexpr auto MRState = 0x318; // UOculusMR_State*
	}

	namespace n_UCrowTutorialInfoWidget {
		constexpr auto RTB_Message = 0x348; // URichTextBlock*
		constexpr auto IMG_BackGround = 0x350; // UImage*
		constexpr auto VisibleTimer = 0x358; // FTimerHandle
		constexpr auto BackgroundBlockColor = 0x360; // FLinearColor
		constexpr auto BackgroundRedColor = 0x370; // FLinearColor
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_ACrowLoadoutBoxActor {
		constexpr auto RewardIconActor = 0x230; // ACrowWorldIconActor*
		constexpr auto RewardSmokeEffect = 0x238; // UParticleSystemComponent*
		constexpr auto BoxComponent = 0x240; // UBoxComponent*
		constexpr auto IconLocation = 0x248; // USceneComponent*
		constexpr auto BuoyancyComponent = 0x250; // UCrowSimpleBuoyancyComponent*
		constexpr auto ParachuteClass = 0x258; // ACrowSupplyEventParachuteActor*
		constexpr auto ParachuteDownAni = 0x260; // UAnimationAsset*
		constexpr auto ParachuteUpAni = 0x268; // UAnimationAsset*
		constexpr auto DropHeight = 0x270; // float
		constexpr auto MaxSpeed = 0x274; // float
		constexpr auto MaxSupplyCount = 0x278; // uint32_t
		constexpr auto UseSound = 0x280; // UAkAudioEvent*
		constexpr auto LifeTime = 0x288; // float
		constexpr auto HP = 0x28c; // float
		constexpr auto DestroyEffect = 0x290; // UParticleSystem*
		constexpr auto DestroySound = 0x298; // UAkAudioEvent*
		constexpr auto IconDisplayInfo = 0x2a0; // FCrowGameIconDisplayInfo
		constexpr auto BoxTeam = 0x328; // char
		constexpr auto SquadRewardIndex = 0x329; // char
		constexpr auto RemainSupplyCount = 0x32c; // uint32_t
		constexpr auto RemainLifeTime = 0x330; // float
		constexpr auto UsedPlayerArray = 0x338; // TArray<uint64_t>
		constexpr auto LoadoutBoxState = 0x348; // ECrowLoadoutBoxState
		constexpr auto ParachuteActor = 0x350; // ACrowSupplyEventParachuteActor*
		constexpr auto CurrentHP = 0x358; // float
		constexpr auto bUpdateIcon = 0x35c; // bool
		constexpr auto CheckLifeTimer = 0x360; // FTimerHandle
		constexpr auto bIsSpawned = 0x368; // bool
		constexpr auto LandLocation = 0x36c; // FVector
		constexpr auto bIsAttachedParachute = 0x378; // bool
	}

	namespace n_UCrowVehicleManager {
		constexpr auto VehicleArray = 0x28; // TArray<AActor*>
		constexpr auto VehicleImpedimentsArray = 0x38; // TArray<AActor*>
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_ACrowGameModeSquadMatch {
		constexpr auto StealthBomberClass = 0x518; // ACrowBomberActor*
		constexpr auto MorphineBoxClass = 0x520; // ACrowSupplyAmmoActor*
		constexpr auto LoadoutBoxClass = 0x528; // ACrowLoadoutBoxActor*
		constexpr auto ResultArray = 0x530; // TArray<UCrowSquadInfo*>
		constexpr auto SquadTeamMap = 0x540; // TMap<FString, char>
	}

	namespace n_UCrowWeaponSubStateBase {
		constexpr auto WeaponBase = 0x28; // ACrowWeaponBase*
		constexpr auto CharacterOwner = 0x30; // ACrowCharacterPawn*
	}

	namespace n_ALuminAROrigin {
		constexpr auto MRMeshComponent = 0x220; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x228; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x230; // UMaterialInterface*
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UCrowPassenger {
		constexpr auto PlayerController = 0xc0; // ACrowPlayerControllerBase*
		constexpr auto VehiclePawn = 0xc8; // ACrowVehiclePawn*
		constexpr auto PassengerPawn = 0xd0; // APawn*
		constexpr auto ClientSeatIndex = 0xd8; // int32_t
		constexpr auto ClientPassengerManager = 0xe0; // UCrowPassengerManager*
		constexpr auto VehicleName = 0xe8; // FName
		constexpr auto VehicleIdentity = 0xf0; // EVehicleIdentity
		constexpr auto PassengerInput = 0xf8; // UCrowPassengerInput*
		constexpr auto DefaultCameraMode = 0x100; // ECrowCameraMode
		constexpr auto CurrentCameraMode = 0x101; // ECrowCameraMode
		constexpr auto bIsChangedCameraModeAtAimView = 0x102; // bool
		constexpr auto WaitTimeWhenChangingSeatHandler = 0x108; // FTimerHandle
		constexpr auto LastVehiclePawn = 0x110; // ACrowVehiclePawn*
		constexpr auto GameState = 0x118; // ACrowGameStateBase*
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UCrowInputCharacterOnVehicle {
		constexpr auto PlayerController = 0x140; // ACrowPlayerControllerBase*
	}

	namespace n_UWB_ExplosiveIndicator_C {
		constexpr auto Ani_Active_In6m = 0x388; // UWidgetAnimation*
		constexpr auto Ani_Active_Out6m = 0x390; // UWidgetAnimation*
		constexpr auto IMG_Base = 0x398; // UImage*
		constexpr auto IMG_Base_2 = 0x3a0; // UImage*
		constexpr auto IMG_LocateArrow = 0x3a8; // UImage*
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_SubMachinegun_Third_C {
		constexpr auto IMG_Crosshair_Gauge = 0x438; // UImage*
		constexpr auto IMG_Crosshair_Gauge_Base = 0x440; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x448; // UImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x450; // UImage*
		constexpr auto IMG_TPS_Down = 0x458; // UImage*
		constexpr auto IMG_TPS_Down_2 = 0x460; // UImage*
		constexpr auto IMG_TPS_Left = 0x468; // UImage*
		constexpr auto IMG_TPS_Left_2 = 0x470; // UImage*
		constexpr auto IMG_TPS_Right = 0x478; // UImage*
		constexpr auto IMG_TPS_Right_2 = 0x480; // UImage*
		constexpr auto IMG_TPS_Up = 0x488; // UImage*
		constexpr auto IMG_TPS_Up_2 = 0x490; // UImage*
	}

	namespace n_UCrowGetSquadPointWidget {
		constexpr auto TB_PointEvent = 0x348; // UTextBlock*
		constexpr auto CP_PointEvent = 0x350; // UCanvasPanel*
		constexpr auto Animation_Move_1 = 0x358; // UWidgetAnimation*
		constexpr auto Animation_Move_2 = 0x360; // UWidgetAnimation*
		constexpr auto Animation_Move_3 = 0x368; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_1 = 0x370; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_2 = 0x378; // UWidgetAnimation*
		constexpr auto Animation_Fade_Out_3 = 0x380; // UWidgetAnimation*
	}

	namespace n_UCrowCharacterMainAnimFPArm {
		constexpr auto WeaponFollowValue = 0x3ac; // FVector2D
		constexpr auto CurrentWeapon = 0x3b8; // ACrowWeaponBase*
		constexpr auto WeaponAnimType = 0x3c0; // ECrowPrivateWeaponAnimType
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UMagicLeapMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x200; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x210; // bool
		constexpr auto MeshType = 0x211; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x218; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x220; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x224; // float
		constexpr auto Planarize = 0x228; // bool
		constexpr auto DisconnectedSectionArea = 0x22c; // float
		constexpr auto RequestNormals = 0x230; // bool
		constexpr auto RequestVertexConfidence = 0x231; // bool
		constexpr auto VertexColorMode = 0x232; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x268; // bool
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x278; // int32_t
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x440; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x448; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x458; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x469; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x469; // char : 1
		constexpr auto bAllowRecycling = 0x469; // char : 1
		constexpr auto bAutoManageAttachment = 0x469; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x469; // char : 1
		constexpr auto bWarmingUp = 0x46a; // char : 1
		constexpr auto bOverrideLODMethod = 0x46a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x46a; // char : 1
		constexpr auto LODMethod = 0x475; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x476; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x478; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4b8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4c8; // bool
		constexpr auto OldPosition = 0x4cc; // FVector
		constexpr auto PartSysVelocity = 0x4d8; // FVector
		constexpr auto WarmupTime = 0x4e4; // float
		constexpr auto WarmupTickRate = 0x4e8; // float
		constexpr auto SecondsBeforeInactive = 0x4f0; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4f8; // float
		constexpr auto ReplayClips = 0x518; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x530; // float
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5c8; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_UCrowRequirePointWidget {
		constexpr auto TB_Point = 0x348; // UTextBlock*
		constexpr auto DisplayTime = 0x350; // float
		constexpr auto AddPlusText = 0x354; // bool
		constexpr auto ShowAnim = 0x358; // UWidgetAnimation*
		constexpr auto HideAnim = 0x360; // UWidgetAnimation*
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UCrowBombMissionBattleMenuInput {
		constexpr auto PC = 0x140; // APlayerController*
		constexpr auto bRepeatThrow = 0x148; // bool
	}

	namespace n_ULakeGenerator {
		constexpr auto LakeMeshComp = 0x28; // UStaticMeshComponent*
		constexpr auto LakeCollisionComp = 0x30; // UBoxComponent*
		constexpr auto LakeCollision = 0x38; // ULakeCollisionComponent*
	}

	namespace n_UCrowCameraPivotHeliComponent {
		constexpr auto MinPitch = 0x1f8; // float
		constexpr auto MaxPitch = 0x1fc; // float
		constexpr auto RollCurve = 0x200; // UCurveFloat*
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_ACrowItemInvenBag {
		constexpr auto ItemTable = 0x318; // FCrowInvenBagRow
		constexpr auto UseDefaultSettings = 0x4b0; // bool
		constexpr auto ItemIndex = 0x4b4; // uint32_t
	}

	namespace n_UTwistKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UCrowClanEmblemWidget {
		constexpr auto EmblemIndex = 0x358; // int32_t
		constexpr auto BGIndex = 0x35c; // int32_t
		constexpr auto IMG_ClanEmblem_Bg = 0x360; // UImage*
		constexpr auto IMG_ClanEmblem_Mark = 0x368; // UImage*
		constexpr auto IMG_Select = 0x370; // UImage*
		constexpr auto BT_Select = 0x378; // UCrowButton*
		constexpr auto CP_Cost = 0x380; // UCanvasPanel*
		constexpr auto TB_Label_Money = 0x388; // UTextBlock*
	}

	namespace n_UConstructionPlaneMechanic {
		constexpr auto PlaneTransformGizmo = 0xc8; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xd0; // UTransformProxy*
		constexpr auto ClickToSetPlaneBehavior = 0xe8; // USingleClickInputBehavior*
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UCrowLobbyBoardWidget {
		constexpr auto TB_ContentsTitle = 0x348; // UTextBlock*
		constexpr auto CP_Indicator = 0x350; // UCanvasPanel*
		constexpr auto ContentsTitle = 0x358; // FText
		constexpr auto ShowDotIndicator = 0x370; // bool
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UPreviewMesh {
		constexpr auto bBuildSpatialDataStructure = 0x40; // bool
		constexpr auto bDrawOnTop = 0x41; // bool
		constexpr auto DynamicMeshComponent = 0x50; // USimpleDynamicMeshComponent*
	}

	namespace n_UCrowBannerIndicatorBtnWidget {
		constexpr auto IndicatorBtn = 0x350; // UCrowButton*
		constexpr auto BannerWidget = 0x358; // TWeakObjectPtr<UCrowWidgetBase>
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_ACrowCharacterMesh {
		constexpr auto FaceIndex = 0x220; // int32_t
		constexpr auto TopIndex = 0x224; // int32_t
		constexpr auto BottomIndex = 0x228; // int32_t
		constexpr auto GlovesIndex = 0x22c; // int32_t
		constexpr auto ShoesIndex = 0x230; // int32_t
		constexpr auto OuterIndex = 0x234; // int32_t
		constexpr auto BackPackIndex = 0x238; // int32_t
		constexpr auto GlassesIndex = 0x23c; // int32_t
		constexpr auto MaskIndex = 0x240; // int32_t
		constexpr auto HeadIndex = 0x244; // int32_t
		constexpr auto HairIndex = 0x248; // int32_t
		constexpr auto FaceMeshComp = 0x250; // USkeletalMeshComponent*
		constexpr auto HairMeshComp = 0x258; // USkeletalMeshComponent*
		constexpr auto TopMeshComp = 0x260; // USkeletalMeshComponent*
		constexpr auto BottomMeshComp = 0x268; // USkeletalMeshComponent*
		constexpr auto GlovesMeshComp = 0x270; // USkeletalMeshComponent*
		constexpr auto ShoesMeshComp = 0x278; // USkeletalMeshComponent*
		constexpr auto OuterMeshComp = 0x280; // USkeletalMeshComponent*
		constexpr auto BackPackMeshComp = 0x288; // USkeletalMeshComponent*
		constexpr auto GlassesMeshComp = 0x290; // USkeletalMeshComponent*
		constexpr auto MaskMeshComp = 0x298; // USkeletalMeshComponent*
		constexpr auto HeadMeshComp = 0x2a0; // USkeletalMeshComponent*
		constexpr auto MergeMeshTask = 0x2a8; // UCrowLibraryMergeSKCTask*
	}

	namespace n_UCrowCloudDamage {
		constexpr auto DamageTime = 0x30; // float
		constexpr auto MinDamage = 0x34; // float
		constexpr auto MaxDamage = 0x38; // float
		constexpr auto DamageType = 0x40; // UDamageType*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x58; // UAkAudioBank*
	}

	namespace n_UCrowMissionQuickListWidget {
		constexpr auto MissionListItemClass = 0x348; // UCrowMissionQuickListItem*
		constexpr auto TB_Title = 0x350; // UTextBlock*
		constexpr auto BT_ListButtonSelect = 0x358; // UCrowButton*
		constexpr auto BT_Weekly = 0x360; // UCrowWidgetToggleButton*
		constexpr auto BT_Daily = 0x368; // UCrowWidgetToggleButton*
		constexpr auto WB_MissionResetTime = 0x370; // UCrowMissionTimerWidget*
		constexpr auto CP_QuickList = 0x378; // UCanvasPanel*
		constexpr auto IMG_BackGround_F = 0x380; // UImage*
		constexpr auto SCB_MissionList = 0x388; // UScrollBox*
		constexpr auto ItemList = 0x390; // TArray<UCrowMissionQuickListItem*>
		constexpr auto CurrUserLevel = 0x3a0; // int32_t
		constexpr auto IsDailyMission = 0x3a4; // bool
	}

	namespace n_UCrowCloudCollisionEventHandler {
		constexpr auto CloudDamageHandler = 0xb0; // UCrowCloudDamageHandler*
		constexpr auto OverlapEvents = 0xb8; // TMap<int32_t, FCrowCloudCollisionEvent>
		constexpr auto OwnerActor = 0x108; // AActor*
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UCrowPassengerInput {
		constexpr auto VehiclePawn = 0x138; // ACrowVehiclePawn*
		constexpr auto PlayerController = 0x140; // ACrowPlayerControllerBase*
		constexpr auto SeatIndex = 0x148; // int32_t
	}

	namespace n_UCrowRankWidget {
		constexpr auto TB_RankLevel = 0x348; // UTextBlock*
		constexpr auto TB_Username = 0x350; // UTextBlock*
		constexpr auto IMG_RankIcon = 0x358; // UCrowWidgetImage*
		constexpr auto PB_Rank = 0x360; // UProgressBar*
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UCrowWidgetToggleButton {
		constexpr auto IMG_SelectBackGround = 0x430; // UImage*
		constexpr auto IMG_SelectFrame = 0x438; // UImage*
		constexpr auto TB_SelectLabel = 0x440; // UTextBlock*
		constexpr auto WS_SelectSwitcher = 0x448; // UWidgetSwitcher*
		constexpr auto bIsSelect = 0x450; // bool
		constexpr auto SeletedButtonLabel = 0x468; // FText
		constexpr auto SeletedButtonBackGround = 0x480; // FSlateBrush
		constexpr auto SeletedButtonFrame = 0x508; // FSlateBrush
		constexpr auto ButtonIndex = 0x590; // char
		constexpr auto bIsToggle = 0x591; // bool
		constexpr auto bIsDisable = 0x592; // bool
		constexpr auto bNotUse = 0x593; // bool
		constexpr auto IMGNew = 0x598; // UImage*
		constexpr auto IMGNew_Deselect = 0x5a0; // UImage*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_ACrowWeaponHealKit {
		constexpr auto HealWidget = 0x1ec0; // UCrowHealWidget*
		constexpr auto CancelTrigger = 0x1ec8; // UCrowTriggerUIBase*
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UNetReplicationGraphConnection {
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x170; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x188; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x1a0; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x1b0; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto RTPC = 0xe8; // UAkRtpc*
		constexpr auto Name = 0xf0; // FString
		constexpr auto FloatCurve = 0x100; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x180; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1b0; // FMovieSceneFloatChannel
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UCrowPassengerManager {
		constexpr auto OwnerTeamID = 0xc0; // char
		constexpr auto WaitTimeBeforeAction = 0xc4; // float
		constexpr auto DefaultExitSocketName = 0xc8; // FName
		constexpr auto EmergencyExitSocketName = 0xd0; // TArray<FName>
		constexpr auto DefaultCameraSpeed = 0xe0; // float
		constexpr auto SeatDatas = 0xe8; // TArray<FPassengerSeatData>
		constexpr auto PassengerSeats = 0xf8; // TArray<FPassengerSeat>
		constexpr auto VehicleBody = 0x108; // USkeletalMeshComponent*
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UCrowCustomSettingSlotWidget {
		constexpr auto TB_SlotName = 0x348; // UTextBlock*
		constexpr auto TB_SelectedItem = 0x350; // UTextBlock*
		constexpr auto BT_Prev = 0x358; // UCrowButton*
		constexpr auto BT_Next = 0x360; // UCrowButton*
		constexpr auto SlotName = 0x368; // FText
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UCrowShopDropDownItemSlot {
		constexpr auto TB_DeselectedText = 0x348; // UTextBlock*
		constexpr auto TB_SelectedText = 0x350; // UTextBlock*
		constexpr auto IMG_SelectIcon = 0x358; // UImage*
		constexpr auto BT_Dropdown = 0x360; // UCrowButton*
		constexpr auto ButtonTextKey = 0x368; // FString
		constexpr auto ButtonIndex = 0x378; // int32_t
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UEditMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xd0; // USimpleDynamicMeshComponent*
		constexpr auto CommonProps = 0xd8; // UPolyEditCommonProperties*
		constexpr auto EditActions = 0xe0; // UEditMeshPolygonsToolActions*
		constexpr auto EditActions_Triangles = 0xe8; // UEditMeshPolygonsToolActions_Triangles*
		constexpr auto EditEdgeActions = 0xf0; // UEditMeshPolygonsToolEdgeActions*
		constexpr auto EditEdgeActions_Triangles = 0xf8; // UEditMeshPolygonsToolEdgeActions_Triangles*
		constexpr auto EditUVActions = 0x100; // UEditMeshPolygonsToolUVActions*
		constexpr auto ExtrudeProperties = 0x108; // UPolyEditExtrudeProperties*
		constexpr auto OffsetProperties = 0x110; // UPolyEditOffsetProperties*
		constexpr auto InsetProperties = 0x118; // UPolyEditInsetProperties*
		constexpr auto OutsetProperties = 0x120; // UPolyEditOutsetProperties*
		constexpr auto CutProperties = 0x128; // UPolyEditCutProperties*
		constexpr auto SetUVProperties = 0x130; // UPolyEditSetUVProperties*
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0x148; // UMultiTransformer*
		constexpr auto EditPreview = 0x4a0; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x4b0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x4b8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x4c0; // UCollectSurfacePathMechanic*
	}

	namespace n_UEditPivotToolActionPropertySet {
		constexpr auto bUseWorldBox = 0x68; // bool
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UAkAudioEvent {
		constexpr auto LocalizedPlatformAssetDataMap = 0x58; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xa8; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb8; // UAkAssetPlatformData*
		constexpr auto MaxAttenuationRadius = 0xc0; // float
		constexpr auto IsInfinite = 0xc4; // bool
		constexpr auto MinimumDuration = 0xc8; // float
		constexpr auto MaximumDuration = 0xcc; // float
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UCrowCustomCreateRoomPopupWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto ET_RoomName = 0x350; // UEditableText*
		constexpr auto ET_RoomPass = 0x358; // UEditableText*
		constexpr auto BT_Ok = 0x360; // UCrowButton*
		constexpr auto BT_ChangeOK = 0x368; // UCrowButton*
		constexpr auto BT_Cancel = 0x370; // UCrowButton*
		constexpr auto WB_CustomSettingSlot_Mode = 0x378; // UCrowCustomSettingSlotWidget*
		constexpr auto WB_CustomSettingSlot_Map = 0x380; // UCrowCustomSettingSlotWidget*
		constexpr auto WB_CustomSettingSlot_MaxPlayer = 0x388; // UCrowCustomSettingSlotWidget*
		constexpr auto WB_CustomSettingSlot_PlayTime = 0x390; // UCrowCustomSettingSlotWidget*
		constexpr auto WB_CustomSettingSlot_WinPoint = 0x398; // UCrowCustomSettingSlotWidget*
		constexpr auto SquadMatchMaxUsers = 0x3a0; // TArray<int32_t>
		constexpr auto SquadMatchMaxUser = 0x3b0; // int32_t
		constexpr auto TeamMatchMaxUsers = 0x3b8; // TArray<int32_t>
		constexpr auto TeamMatchMaxUser = 0x3c8; // int32_t
		constexpr auto WinPoints = 0x3d0; // TArray<int32_t>
		constexpr auto WinPoint = 0x3e0; // int32_t
		constexpr auto PlayTimes = 0x3e8; // TArray<int32_t>
		constexpr auto PlayTime = 0x3f8; // int32_t
		constexpr auto CreateMode = 0x3fc; // bool
		constexpr auto CurrentRoomSettingInfo = 0x400; // FCrowCustomRoomSettingInfo
		constexpr auto GameModeInfoArray = 0x440; // TArray<FCrowMatchInfo>
	}

	namespace n_UCrowMovieWidget {
		constexpr auto BD_Subtitle_01 = 0x368; // UBorder*
		constexpr auto IMG_ProgressCircle = 0x370; // UImage*
		constexpr auto TB_Description = 0x378; // UTextBlock*
		constexpr auto HB_Skip = 0x380; // UHorizontalBox*
		constexpr auto MediaPlayer = 0x388; // UMediaPlayer*
		constexpr auto MediaSourceSynopsis = 0x390; // UMediaSource*
		constexpr auto MediaSourceLogo = 0x398; // UMediaSource*
		constexpr auto MediaSoundComp = 0x3a0; // UMediaSoundComponent*
		constexpr auto SubtitleIndex = 0x3a8; // int32_t
		constexpr auto CurInfo = 0x3b0; // TArray<FCrowSubTitleInfo>
	}

	namespace n_USculptMaxBrushProperties {
		constexpr auto MaxHeight = 0x60; // float
		constexpr auto bFreezeCurrentHeight = 0x64; // bool
	}

	namespace n_UCrowSettingsSubsystem {
		constexpr auto ModifiedActionKeySlots = 0x60; // TArray<FActionKeySlot>
		constexpr auto ModifiedAxisKeySlots = 0x70; // TArray<FAxisKeySlot>
		constexpr auto ModifiedSettingItems = 0x80; // TArray<FSettingItem>
		constexpr auto UserSettingItems = 0x90; // TArray<FSettingItem>
		constexpr auto DisplayAllowedResolutions = 0xa0; // TArray<FIntPoint>
		constexpr auto bIsModified = 0xb0; // bool
		constexpr auto bIsLoadedServerOption = 0xb1; // bool
		constexpr auto CrowSettingsDefaultConfig = 0xb8; // UCrowSettingsDefaultConfig*
		constexpr auto CrowSettingsUserConfig = 0xc0; // UCrowSettingsUserConfig*
		constexpr auto CrowSettingUIInfomation = 0xc8; // UCrowSettingUIInfomation*
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UCrowSceneManager {
		constexpr auto SceneTable = 0x28; // TMap<uint32_t, FCrowSceneTableRow>
		constexpr auto CurrentScene = 0x78; // ACrowSceneBase*
		constexpr auto CurrentSceneData = 0xa0; // FCrowSceneTableRow
		constexpr auto PrevSceneData = 0x770; // FCrowSceneTableRow
	}

	namespace n_UCrowSquadSummarySlotWidget {
		constexpr auto TB_PlayerName = 0x348; // UTextBlock*
		constexpr auto TB_Kill_Count = 0x350; // UTextBlock*
		constexpr auto TB_SurvivalTime_Count = 0x358; // UTextBlock*
		constexpr auto TB_Damagel_Count = 0x360; // UTextBlock*
		constexpr auto IMG_SquadBack = 0x368; // UImage*
		constexpr auto TB_SquadNum = 0x370; // UTextBlock*
		constexpr auto TB_Assist_Count = 0x378; // UTextBlock*
		constexpr auto IMG_IsLocalPlayer = 0x380; // UImage*
		constexpr auto IMG_Icon_unconnected = 0x388; // UImage*
		constexpr auto IMG_Class = 0x390; // UImage*
		constexpr auto IMG_SquadLeader = 0x398; // UImage*
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UCrowSoundStateComponent {
		constexpr auto CheckInterval = 0xb0; // float
		constexpr auto SoundStateInfos = 0xb8; // TArray<FSoundStateInfo>
		constexpr auto CurrentSoundState = 0xc8; // ECrowSoundStateType
	}

	namespace n_UWB_LoadingModeDescSlot_C {
		constexpr auto Image_34 = 0x268; // UImage*
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_ACrowWeaponTestActor {
		constexpr auto DoNotFire = 0x220; // bool
		constexpr auto UseRandomDelay = 0x221; // bool
		constexpr auto FireRepeatDelay = 0x224; // float
		constexpr auto SpreadDegree = 0x228; // float
		constexpr auto ShootCount = 0x22c; // int32_t
		constexpr auto ReloadDelay = 0x230; // float
		constexpr auto WeaponIndex = 0x234; // uint32_t
		constexpr auto PartsBarrel = 0x238; // uint32_t
		constexpr auto PartsMagazine = 0x23c; // uint32_t
		constexpr auto PartsMuzzle = 0x240; // uint32_t
		constexpr auto PartsPistolGrip = 0x244; // uint32_t
		constexpr auto PartsPrimarySight = 0x248; // uint32_t
		constexpr auto PartsSecondarySight = 0x24c; // uint32_t
		constexpr auto PartsSideBarrel = 0x250; // uint32_t
		constexpr auto PartsStock = 0x254; // uint32_t
		constexpr auto PartsUnderBarrel = 0x258; // uint32_t
		constexpr auto SphereMesh = 0x260; // UStaticMeshComponent*
		constexpr auto WeaponActor = 0x268; // ACrowWeaponBase*
		constexpr auto bIsReloading = 0x270; // char : 1
		constexpr auto FireRepeatRemainTime = 0x274; // float
		constexpr auto ReloadRemainTime = 0x278; // float
		constexpr auto RemainShootCount = 0x27c; // int32_t
	}

	namespace n_ABP_MeleeThrow_WoodenKnife_C {
		constexpr auto Dagger001 = 0x1940; // USkeletalMeshComponent*
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2dc; // float
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UCrowConquestLineWidget {
		constexpr auto IMG_BothArrow = 0x348; // UImage*
		constexpr auto IMG_Arrow = 0x350; // UImage*
		constexpr auto IMG_Dotline = 0x358; // UImage*
		constexpr auto IMG_Line = 0x360; // UImage*
		constexpr auto AniArrowClash = 0x368; // UWidgetAnimation*
	}

	namespace n_UCrowGasMaskStatusWidget {
		constexpr auto position = 0x348; // FVector2D
		constexpr auto Size = 0x350; // FVector2D
		constexpr auto PB_FilterGauge = 0x358; // UCrowProgressBar*
		constexpr auto TB_FilterCount = 0x360; // UTextBlock*
		constexpr auto IMG_AlertEffect = 0x368; // UImage*
		constexpr auto IMG_Icon_Usable = 0x370; // UImage*
		constexpr auto RTB_BindedKey = 0x378; // URichTextBlock*
		constexpr auto AniNoFilter = 0x380; // UWidgetAnimation*
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_ASkyCreator {
		constexpr auto Root = 0x220; // USceneComponent*
		constexpr auto Billboard = 0x228; // UBillboardComponent*
		constexpr auto Compass = 0x230; // UStaticMeshComponent*
		constexpr auto SkyAtmosphere = 0x238; // USkyAtmosphereComponent*
		constexpr auto VolumetricCloud = 0x240; // UVolumetricCloudComponent*
		constexpr auto SkyLight = 0x248; // USkyLightComponent*
		constexpr auto SunLight = 0x250; // UDirectionalLightComponent*
		constexpr auto MoonLight = 0x258; // UDirectionalLightComponent*
		constexpr auto ExponentialHeightFog = 0x260; // UExponentialHeightFogComponent*
		constexpr auto Exposure = 0x268; // UPostProcessComponent*
		constexpr auto StarMap = 0x270; // UStaticMeshComponent*
		constexpr auto SunSphere = 0x278; // UStaticMeshComponent*
		constexpr auto MoonSphere = 0x280; // UStaticMeshComponent*
		constexpr auto WeatherFX = 0x288; // UNiagaraComponent*
		constexpr auto SkySphere = 0x290; // UStaticMeshComponent*
		constexpr auto SkySphereMaterial = 0x298; // UMaterialInterface*
		constexpr auto SkySphereMID = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto EditorTimeOfDay = 0x2a8; // float
		constexpr auto EditorWeatherType = 0x2ac; // ESkyCreatorEditorWeatherType
		constexpr auto EditorWeatherPreset = 0x2b0; // USkyCreatorWeatherPreset*
		constexpr auto EditorWeatherSettings = 0x2b8; // FSkyCreatorWeatherSettings
		constexpr auto bIsEditorTickEnabled = 0x500; // bool
		constexpr auto SkySphereRadius = 0x504; // float
		constexpr auto bLightOptimization = 0x508; // bool
		constexpr auto SkyAtmosphereMobility = 0x509; // EComponentMobility
		constexpr auto TransformMode = 0x50a; // ESkyAtmosphereTransformMode
		constexpr auto PlanetRadius = 0x50c; // float
		constexpr auto AtmosphereHeight = 0x510; // float
		constexpr auto TraceSampleCountScale = 0x514; // float
		constexpr auto LayerBottomAttitude = 0x518; // float
		constexpr auto LayerHeight = 0x51c; // float
		constexpr auto TracingStartMaxDistance = 0x520; // float
		constexpr auto TracingMaxDistance = 0x524; // float
		constexpr auto bPerSampleAtmosphericLightTransmittance = 0x528; // bool
		constexpr auto bGroundContribution = 0x529; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0x52c; // int32_t
		constexpr auto ViewSampleCountScale = 0x530; // float
		constexpr auto ReflectionSampleCountScale = 0x534; // float
		constexpr auto ShadowViewSampleCountScale = 0x538; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x53c; // float
		constexpr auto ShadowTracingDistance = 0x540; // float
		constexpr auto LowCloudMapScale = 0x544; // float
		constexpr auto LowCloudMapOffset = 0x548; // FVector2D
		constexpr auto HighCloudMapScale = 0x550; // float
		constexpr auto HighCloudMapOffset = 0x554; // FVector2D
		constexpr auto HighCloudHorizonFadeHardness = 0x55c; // float
		constexpr auto bAutoScale = 0x560; // bool
		constexpr auto ShapeNoiseScale = 0x564; // float
		constexpr auto DetailNoiseScale = 0x568; // float
		constexpr auto SkyLightMobility = 0x56c; // EComponentMobility
		constexpr auto bRealTimeCapture = 0x56d; // bool
		constexpr auto SunLightMobility = 0x56e; // EComponentMobility
		constexpr auto bControlSunDirection = 0x56f; // bool
		constexpr auto bSunUseTemperature = 0x570; // bool
		constexpr auto SunAngularDiameter = 0x574; // float
		constexpr auto bSunConstantAtmosphereDiskColorScale = 0x578; // bool
		constexpr auto SunAtmosphereDiskColorScale = 0x57c; // FLinearColor
		constexpr auto SunOrbitType = 0x58c; // ESkyCreatorSunOrbitType
		constexpr auto SunriseTime = 0x590; // float
		constexpr auto SunsetTime = 0x594; // float
		constexpr auto SunDawnOffsetTime = 0x598; // float
		constexpr auto SunDuskOffsetTime = 0x59c; // float
		constexpr auto SunDawnTime = 0x5a0; // float
		constexpr auto SunDuskTime = 0x5a4; // float
		constexpr auto SunElevation = 0x5a8; // float
		constexpr auto SunAzimuth = 0x5ac; // float
		constexpr auto SunMinAngleAtDawnDusk = 0x5b0; // float
		constexpr auto SunFadeInOutTime = 0x5b4; // float
		constexpr auto MoonLightMobility = 0x5b8; // EComponentMobility
		constexpr auto bControlMoonDirection = 0x5b9; // bool
		constexpr auto bMoonUseTemperature = 0x5ba; // bool
		constexpr auto MoonAngularDiameter = 0x5bc; // float
		constexpr auto bMoonConstantAtmosphereDiskColorScale = 0x5c0; // bool
		constexpr auto MoonAtmosphereDiskColorScale = 0x5c4; // FLinearColor
		constexpr auto MoonPhase = 0x5d4; // float
		constexpr auto MoonRotation = 0x5d8; // float
		constexpr auto MoonOrbitType = 0x5dc; // ESkyCreatorMoonOrbitType
		constexpr auto MoonriseTime = 0x5e0; // float
		constexpr auto MoonsetTime = 0x5e4; // float
		constexpr auto MoonElevation = 0x5e8; // float
		constexpr auto MoonAzimuth = 0x5ec; // float
		constexpr auto MoonFadeInOutTime = 0x5f0; // float
		constexpr auto ExponentialHeightFogMobility = 0x5f4; // EComponentMobility
		constexpr auto bEnableExponentialHeightFog = 0x5f5; // bool
		constexpr auto bVolumetricFog = 0x5f6; // bool
		constexpr auto FogHeightOffset = 0x5f8; // float
		constexpr auto SecondFogHeightOffset = 0x5fc; // float
		constexpr auto StarMapTexture = 0x600; // UTexture2D*
		constexpr auto StarMapRotationType = 0x608; // ESkyCreatorStarMapRotationType
		constexpr auto StarMapAdditionalRotation = 0x60c; // FRotator
		constexpr auto bSpawnOnlyUnderClouds = 0x618; // bool
		constexpr auto PrecipitationSpawnRadius = 0x61c; // float
		constexpr auto MaxRainParticles = 0x620; // float
		constexpr auto MaxSnowParticles = 0x624; // float
		constexpr auto bEnableWind = 0x628; // bool
		constexpr auto bIndependentWindControl = 0x629; // bool
		constexpr auto EditorIndependentWindSettings = 0x62c; // FSkyCreatorWindSettings
		constexpr auto CloudWindSkewAmount = 0x650; // float
		constexpr auto bUseBuiltInExposureSettings = 0x654; // bool
		constexpr auto ExposureSettings = 0x658; // FCameraExposureSettings
		constexpr auto PostProcessSettings = 0x6a0; // FPostProcessSettings
		constexpr auto TimeOfDay = 0xbf0; // float
		constexpr auto WeatherSettings = 0xbf4; // FSkyCreatorWeatherSettings
		constexpr auto VolumetricCloudMaterials = 0xe40; // FSkyCreatorVolumetricCloudMaterials
		constexpr auto CurrentVolumetricCloudMaterial = 0xe70; // UMaterialInterface*
		constexpr auto VolumetricCloudMID = 0xe78; // UMaterialInstanceDynamic*
		constexpr auto CurrentShapeNoiseScale = 0xe80; // float
		constexpr auto CurrentDetailNoiseScale = 0xe84; // float
		constexpr auto LowCloudWindOffset = 0xe88; // FVector
		constexpr auto LowCloudWindSkewDirection = 0xe94; // FVector
		constexpr auto LowCloudWindSkewForce = 0xea0; // float
		constexpr auto HighCloudWindOffset = 0xea4; // FVector
		constexpr auto CloudNoiseWindOffset = 0xeb0; // FVector
	}

	namespace n_UReplicationGraphNode_GridCell {
		constexpr auto DynamicNode = 0x140; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x148; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UBaseCreateFromSelectedHandleSourceProperties {
		constexpr auto WriteOutputTo = 0x68; // EBaseCreateFromSelectedTargetType
		constexpr auto OutputName = 0x70; // FString
		constexpr auto OutputAsset = 0x80; // FString
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UCrowWorldMapVisualConfig {
		constexpr auto CameraAttachedFxAssets = 0x30; // TArray<FCrowWorldCameraAttachedFX>
		constexpr auto MapLightSettings = 0x40; // FCrowWorldMapLightSetting
		constexpr auto MPCOverrides = 0x58; // TArray<FCrowWorldMaterialParameterOverride>
	}

	namespace n_URespawnParachute_Default_skin_Skeleton_Anim_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x418; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x520; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x540; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByEnum = 0x648; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x6f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x778; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x7f8; // FAnimNode_ModifyBone
		constexpr auto LeftHandSocketTransform = 0x900; // FTransform
		constexpr auto RightHandSocketTransform = 0x930; // FTransform
		constexpr auto ParachuteState = 0x960; // ECrowSkydivingParachuteState
		constexpr auto SpreadAnimation = 0x968; // UAnimSequenceBase*
		constexpr auto FallAnimation = 0x970; // UAnimSequenceBase*
		constexpr auto LandAnimation = 0x978; // UAnimSequenceBase*
		constexpr auto BoneTransformAlpha = 0x980; // float
		constexpr auto SpineSocketTransform = 0x990; // FTransform
	}

	namespace n_UBTTask_CrowSetBlackboardBool {
		constexpr auto IsSet = 0x98; // bool
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UDisplaceMeshTool {
		constexpr auto CommonProperties = 0x88; // UDisplaceMeshCommonProperties*
		constexpr auto DirectionalFilterProperties = 0x90; // UDisplaceMeshDirectionalFilterProperties*
		constexpr auto TextureMapProperties = 0x98; // UDisplaceMeshTextureMapProperties*
		constexpr auto NoiseProperties = 0xa0; // UDisplaceMeshPerlinNoiseProperties*
		constexpr auto SineWaveProperties = 0xa8; // UDisplaceMeshSineWaveProperties*
	}

	namespace n_UCrowAnimNotify_AkEvent {
		constexpr auto AttoachPointName = 0x38; // FName
		constexpr auto FPEvent = 0x40; // UAkAudioEvent*
		constexpr auto TPEvent = 0x48; // UAkAudioEvent*
	}

	namespace n_ACrowBombingKit {
		constexpr auto TargetClass = 0x1ec8; // AActor*
		constexpr auto BinocularsLenzWidget = 0x1ed0; // UCrowWidgetBase*
		constexpr auto FOVValue = 0x1ed8; // float
		constexpr auto Time = 0x1edc; // float
		constexpr auto RespondSoundTime = 0x1ee0; // float
		constexpr auto PointSetEvent = 0x1ee8; // UAkAudioEvent*
		constexpr auto RequestEvent = 0x1ef0; // UAkAudioEvent*
		constexpr auto RespondEvent = 0x1ef8; // UAkAudioEvent*
		constexpr auto ScopeWidget = 0x1f00; // UCrowWidgetBase*
		constexpr auto CameraFOV = 0x1f08; // float
		constexpr auto CurrFOV = 0x1f0c; // float
		constexpr auto TargetFOV = 0x1f10; // float
		constexpr auto CurrTime = 0x1f14; // float
		constexpr auto TimeHandle = 0x1f18; // FTimerHandle
		constexpr auto AimKey = 0x1f20; // FKey
		constexpr auto AimKeyName = 0x1f38; // FName
		constexpr auto BomberActor = 0x1f40; // UObject*
		constexpr auto KitTargetClass = 0x1f48; // UObject*
		constexpr auto KitTargetActor = 0x1f50; // ACrowKitBomberTarget*
		constexpr auto TargetTran = 0x1f60; // FTransform
		constexpr auto FireCharacterPos = 0x1f90; // FVector
	}

	namespace n_UCrowPingItemInfoWidget {
		constexpr auto WS_LowMax = 0x348; // UWidgetSwitcher*
		constexpr auto WS_PickupInven = 0x350; // UWidgetSwitcher*
		constexpr auto VB_PingItemInfo = 0x358; // UVerticalBox*
		constexpr auto WB_Inventory_ItemInfo = 0x360; // UCrowItemInfoWidget*
		constexpr auto IMG_Icon = 0x368; // UCrowWidgetImage*
		constexpr auto BD_Item_Grade = 0x370; // UBorder*
		constexpr auto BD_Ping_Item_BG = 0x378; // UBorder*
		constexpr auto PickupInvenIcon = 0x380; // UPaperSprite*
		constexpr auto IMG_Key_X = 0x388; // UImage*
		constexpr auto IMG_Key_X_2 = 0x390; // UImage*
		constexpr auto ItemActor = 0x398; // AActor*
		constexpr auto WidgetType = 0x3a0; // EPingWidgetType
		constexpr auto IsPressUSEKey = 0x3a1; // bool
	}

	namespace n_UCrowRemainTimeSync {
		constexpr auto TotalTime = 0xc0; // float
	}

	namespace n_UCrowStatusCurrencyWidget {
		constexpr auto IconSprite = 0x348; // UPaperSprite*
		constexpr auto CurrencyType = 0x350; // ECrowItemType
		constexpr auto IMG_Icon = 0x358; // UImage*
		constexpr auto TB_CurrencyCount = 0x360; // UTextBlock*
		constexpr auto AniGetMoney = 0x368; // UWidgetAnimation*
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UCrowVehicleHUDAbramCannon {
		constexpr auto CP_Speed = 0x398; // UCanvasPanel*
		constexpr auto SpeedCanvasPanel = 0x3a0; // UCanvasPanel*
		constexpr auto SpeedTextBlock = 0x3a8; // UTextBlock*
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UCrowWeaponSkinTableManager {
		constexpr auto WeaponSkinData = 0x28; // TMap<char, FCrowWeaponSkinTableData>
	}

	namespace n_UCrowWorldMapPlayerMarker {
		constexpr auto bUseColorLocalSquadRole = 0x3c8; // bool
		constexpr auto DirectionOverlay = 0x3d0; // UOverlay*
		constexpr auto LeaderOverlay = 0x3d8; // UOverlay*
		constexpr auto MemberOverlay = 0x3e0; // UOverlay*
		constexpr auto WS_DeathAlive = 0x3e8; // UWidgetSwitcher*
		constexpr auto IMG_BG_SL = 0x3f0; // UImage*
		constexpr auto IMG_Icon_SquadLeader = 0x3f8; // UImage*
		constexpr auto IMG_Indoor_SquadLeader = 0x400; // UImage*
		constexpr auto IMG_BG_S = 0x408; // UImage*
		constexpr auto IMG_Squad_Color = 0x410; // UImage*
		constexpr auto IMG_Squad_Indoor = 0x418; // UImage*
		constexpr auto IMG_Death = 0x420; // UImage*
		constexpr auto IMG_Death_Indoor = 0x428; // UImage*
		constexpr auto CharacterOwner = 0x430; // ACrowCharacterPawn*
		constexpr auto PlayerStateOwner = 0x438; // ACrowPlayerStateBase*
		constexpr auto AniHit = 0x440; // UWidgetAnimation*
		constexpr auto AniCallHelp = 0x448; // UWidgetAnimation*
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UCrowCharacterMainAnimTP {
		constexpr auto AimOffsetDepends = 0x3a0; // FCrowCharacterAimOffsetDepends
		constexpr auto AimOffsetVehicle = 0x3f0; // FCrowCharacterAimOffsetVehicle
		constexpr auto MontageLandAdditive = 0x448; // UAnimMontage*
		constexpr auto HitAnims = 0x450; // TMap<ECrowCharacterHitParts, UAnimMontage*>
		constexpr auto GroundDeathAnims = 0x4a0; // TMap<ECrowCharacterAnimStance, FCrowCharacterDeathAnimByDirection>
		constexpr auto LeanOnVehicle = 0x4f0; // FVector2D
		constexpr auto PeekState = 0x4f8; // ECrowCharacterPeekState
	}

	namespace n_ABP_CrowProjectileTankSmoke_C {
		constexpr auto Abrams_SmokeGrenade = 0x1900; // UStaticMeshComponent*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x668; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x688; // FGuid
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x220; // float
		constexpr auto playerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_UCrowCompositionCIconWidget {
		constexpr auto CPRoot = 0x348; // UCanvasPanel*
		constexpr auto CPLocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CPIcon = 0x358; // UCanvasPanel*
		constexpr auto TBName = 0x360; // UTextBlock*
		constexpr auto TBDistance = 0x368; // UTextBlock*
		constexpr auto IMGBase = 0x370; // UImage*
		constexpr auto DistanceDisplayCompositinCColorWhenPlant = 0x378; // int32_t
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x460; // FVector
		constexpr auto Rotation = 0x470; // FQuat
		constexpr auto Dimensions = 0x480; // FVector
		constexpr auto LineThickness = 0x48c; // float
		constexpr auto bRemoveHiddenLines = 0x490; // bool
		constexpr auto bEnableAxisFlip = 0x491; // bool
	}

	namespace n_UCrowDropBoxWidget {
		constexpr auto WB_CrowDragDropPanel = 0x668; // UCrowInventoryInputEventHandler*
		constexpr auto CP_ImagePanel = 0x670; // UCanvasPanel*
	}

	namespace n_UCrowWorldDataCollectionAsset {
		constexpr auto BodySetupArray = 0x30; // TArray<UBodySetup*>
		constexpr auto LayoutArray = 0x40; // TArray<FCrowWorldActorLayout>
		constexpr auto SectorArray = 0x50; // TArray<FCrowWorldSectorData>
		constexpr auto ClusterArray = 0x60; // TArray<FCrowWorldClusterData>
		constexpr auto LandmarkData = 0x70; // FCrowWorldLandmarkData
		constexpr auto LinkedActorsArray = 0x80; // TArray<FCrowWorldLinkedActorData>
	}

	namespace n_ACrowSceneBase {
		constexpr auto SceneManager = 0x228; // UCrowSceneManager*
		constexpr auto WidgetManager = 0x230; // UCrowWidgetManager*
		constexpr auto ClientManager = 0x238; // UCrowClientManager*
		constexpr auto ItemTableManager = 0x240; // UCrowItemTableManager*
		constexpr auto VivoxManager = 0x248; // UCrowVivoxManager*
		constexpr auto TableData = 0x260; // FCrowSceneTableRow
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UCrowInputSynopsis {
		constexpr auto OwnerWidget = 0x140; // UCrowMovieWidget*
	}

	namespace n_ACrowWeaponVehicleDualWiedling {
		constexpr auto SignalDistributor = 0x31e8; // bool
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_UUPSMoveToEnemyPointAction {
		constexpr auto OnMoveToEnemyPointActionFinishedDelegate = 0x70; // FMulticastInlineDelegate
		constexpr auto MoveChracter = 0x80; // ACharacter*
		constexpr auto MoveParams = 0xa0; // FUPSMoveParams
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_ACrowSceneLobby {
		constexpr auto LobbyObjectBider = 0x938; // ACrowLobbyObjectBider*
		constexpr auto LobbyMainObjectBider = 0x940; // ACrowLobbyMainObjectBider*
		constexpr auto WeaponLoadoutObjectBider = 0x948; // ACrowWeaponLoadoutObjectBider*
		constexpr auto LobbyCharacterPawnMap = 0x950; // TMap<ELobbyMainSpawnSlot, ACrowLobbyCharacterPawn*>
		constexpr auto LobbyCharacterWeaponMap = 0x9a0; // TMap<ELobbyMainSpawnSlot, ACrowWeaponLobby*>
		constexpr auto LobbyLoadoutWeaponArray = 0x9f0; // TArray<ACrowWeaponLobby*>
		constexpr auto LobbyCharacterCustomPawn = 0xa00; // ACrowLobbyCharacterPawn*
		constexpr auto LobbyCharacterCustomWeapon = 0xa08; // ACrowWeaponLobby*
		constexpr auto LobbyCustomWeapon = 0xa10; // ACrowWeaponLobby*
		constexpr auto LobbySprayActor = 0xa18; // ACrowSprayActor*
		constexpr auto CurrentLobbySceneMode = 0xa20; // ELobbySceneMode
		constexpr auto TimeToNextCameraChange = 0xa24; // float
		constexpr auto DefaultCharacterCustomPawnRotion = 0xa28; // FRotator
		constexpr auto DragStartCharacterCustomPawnRotion = 0xa34; // FRotator
		constexpr auto DefaultCustomWeaponRotion = 0xa40; // FRotator
		constexpr auto DragStartCustomWeaponRotion = 0xa4c; // FRotator
		constexpr auto CurrentCustomWeaponRotion = 0xa58; // FRotator
		constexpr auto DragStartScreenPosition = 0xa64; // FVector2D
		constexpr auto StartGameType = 0xa6c; // EStartGameType
		constexpr auto WeaponRotationMode = 0xa6d; // ERotationMode
		constexpr auto IsRotatingCharacterCustomPawn = 0xa6e; // bool
		constexpr auto CharacterRotationFrom = 0xa70; // FRotator
		constexpr auto CharacterRotationTo = 0xa7c; // FRotator
		constexpr auto bUpdateCharacterRotation = 0xa88; // bool
		constexpr auto CharacterRotationTime = 0xa8c; // float
		constexpr auto CurrentCharacterRotationTime = 0xa90; // float
		constexpr auto bPlayingCameraMode = 0xa94; // bool
		constexpr auto SaveValueMapIndex = 0xa98; // int32_t
		constexpr auto SaveValueWeaponIndex = 0xaa0; // int64_t
		constexpr auto SaveValueWeaponSlot = 0xaa8; // int8_t
		constexpr auto SaveValueUserServerKey = 0xab0; // int64_t
		constexpr auto SaveValuePartyJoin = 0xab8; // bool
		constexpr auto SaveValueAppearanceIndex = 0xabc; // int32_t [0x8]
		constexpr auto SaveNickName = 0xae0; // FString
		constexpr auto CurrentCharacterCustomCameraType = 0xaf0; // ECharacterCustomCameraType
		constexpr auto CurrentMainCameraType = 0xaf1; // EMainCameraType
		constexpr auto bClothTestMode = 0xb80; // bool
	}

	namespace n_UCrowVehicleSeatInfoWidget {
		constexpr auto TXT_Squad_ID = 0x348; // UTextBlock*
	}

	namespace n_ACrowVehicleParachuteActor {
		constexpr auto SkeletalMeshComp = 0x220; // USkeletalMeshComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto MaxSpeed = 0x230; // float
		constexpr auto LifeTime = 0x234; // float
		constexpr auto VehicleIndex = 0x238; // int32_t
		constexpr auto VehiclePawn = 0x240; // ACrowVehiclePawn*
		constexpr auto AnimMontage = 0x248; // UAnimMontage*
		constexpr auto CurrentLocation = 0x250; // FVector
		constexpr auto ParachuteState = 0x25c; // ECrowVehicleParachuteState
	}

	namespace n_ACrowItemTableOverview {
		constexpr auto CountInRow = 0x220; // int32_t
		constexpr auto SizeRow = 0x224; // float
		constexpr auto SizeColumn = 0x228; // float
		constexpr auto SphereMesh = 0x230; // UStaticMeshComponent*
		constexpr auto RowIndicatorMesh = 0x238; // UStaticMesh*
		constexpr auto RowIndicatorScale = 0x240; // FVector
		constexpr auto DefaultRotation = 0x24c; // FRotator
		constexpr auto IndicatorActors = 0x258; // TArray<AActor*>
		constexpr auto SpawnedActors = 0x268; // TArray<AActor*>
		constexpr auto LODIndex = 0x278; // int32_t
		constexpr auto ItemRows = 0x280; // TArray<FCrowItemAssetRow>
		constexpr auto ActorRowNumbers = 0x290; // TMap<AActor*, int32_t>
		constexpr auto ItemRowViewers = 0x2e0; // TArray<FCrowItemAssetRowViewer>
	}

	namespace n_UCrowLootingSlotItem {
		constexpr auto PickUpInven = 0x668; // ACrowPickupInventory*
		constexpr auto PickupInvenSlotIndex = 0x670; // int32_t
		constexpr auto ItemIconImageSize = 0x674; // float
		constexpr auto CP_Item = 0x678; // UCanvasPanel*
		constexpr auto TB_ItemName = 0x680; // UTextBlock*
		constexpr auto IMG_ItemIcon = 0x688; // UCrowWidgetImage*
		constexpr auto TB_ItemAmount = 0x690; // UTextBlock*
		constexpr auto IMG_BGFrame = 0x698; // UImage*
		constexpr auto IMG_X = 0x6a0; // UImage*
		constexpr auto IMG_Frame = 0x6a8; // UImage*
		constexpr auto IMG_Grade = 0x6b0; // UImage*
		constexpr auto HB_Tablet = 0x6b8; // UHorizontalBox*
		constexpr auto TB_Count = 0x6c0; // UTextBlock*
		constexpr auto VerticalBox_92 = 0x6c8; // UVerticalBox*
		constexpr auto WS_Grade = 0x6d0; // UWidgetSwitcher*
		constexpr auto InputHandler = 0x6d8; // UCrowLootingSlotEventHandler*
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UUVLayoutPreview {
		constexpr auto Settings = 0x28; // UUVLayoutPreviewProperties*
		constexpr auto PreviewMesh = 0x30; // UPreviewMesh*
		constexpr auto TriangleComponent = 0x38; // UTriangleSetComponent*
		constexpr auto bShowBackingRectangle = 0x40; // bool
		constexpr auto BackingRectangleMaterial = 0x48; // UMaterialInterface*
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UCrowBattlePassTableManager {
		constexpr auto BattlePassCostTableRows = 0x28; // TMap<char, FCrowBattlePassCostTableRow>
		constexpr auto SeasonTableRows = 0x78; // TMap<FName, FCrowBattlePassSeasonTableRow>
		constexpr auto PackageDatas = 0xc8; // TMap<char, FCrowBattlePassPackageData>
		constexpr auto FreePassCostTableRows = 0x118; // TMap<int32_t, FCrowBattlePassFreePassCostTableRow>
		constexpr auto LevelInfoTableRows = 0x168; // TMap<int32_t, FCrowBattlePassLevelInfoTableRow>
	}

	namespace n_UWB_Crosshair_Mh6_RocketFord_Thrid_C {
		constexpr auto IMG_Cross = 0x428; // UImage*
		constexpr auto IMG_Cross_2 = 0x430; // UImage*
		constexpr auto IMG_Crosshair_Gauge = 0x438; // UImage*
		constexpr auto IMG_Crosshair_Gauge_2 = 0x440; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x448; // UImage*
		constexpr auto WB_Vehicle_Damage = 0x450; // UWB_Vehicle_Warning_Heli_C*
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UCrowComponentContainer {
		constexpr auto Binders = 0xb0; // TMap<UObject*, UCrowBinderActorComponent*>
		constexpr auto CrowComponents = 0x100; // TMap<UObject*, UCrowActorComponentBase*>
		constexpr auto CrowObjects = 0x150; // TMap<uint32_t, UCrowObjectBase*>
		constexpr auto OwnerActor = 0x1a0; // AActor*
	}

	namespace n_ACrowConquestMeteorSettings {
		constexpr auto Chance = 0x220; // float
		constexpr auto LargeMeteorSpeed = 0x224; // float
		constexpr auto LargeMeteorLifeTime = 0x228; // float
		constexpr auto LargeMeteorFlyByLoopSound = 0x230; // UAkAudioEvent*
		constexpr auto LargeMeteorFlyByLoopEndSound = 0x238; // UAkAudioEvent*
		constexpr auto LargeMeteorExplosionSound = 0x240; // UAkAudioEvent*
		constexpr auto LargeMeteor = 0x248; // UParticleSystem*
		constexpr auto LargeMeteorExplosion01 = 0x250; // UParticleSystem*
		constexpr auto LargeMeteorExplosion02 = 0x258; // UParticleSystem*
		constexpr auto SmallMeteorSpeedMin = 0x260; // float
		constexpr auto SmallMeteorSpeedMax = 0x264; // float
		constexpr auto SmallMeteorCountMin = 0x268; // int32_t
		constexpr auto SmallMeteorCountMax = 0x26c; // int32_t
		constexpr auto SmallMeteorFireDelayMin = 0x270; // float
		constexpr auto SmallMeteorFireDelayMax = 0x274; // float
		constexpr auto SmallMeteorDamage = 0x278; // FWeaponDamageSettings
		constexpr auto SmallMeteorDamegeType = 0x2a0; // UDamageType*
		constexpr auto CameraShake = 0x2a8; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x2b0; // float
		constexpr auto CameraShakeMaxDistance = 0x2b4; // float
		constexpr auto IconDisplayInfo = 0x2b8; // FCrowGameIconDisplayInfo
		constexpr auto SmallMeteorFlyByLoopSound = 0x340; // UAkAudioEvent*
		constexpr auto SmallMeteorFlyByLoopEndSound = 0x348; // UAkAudioEvent*
		constexpr auto SmallMeteorExplosionSound = 0x350; // UAkAudioEvent*
		constexpr auto SmallMeteor = 0x358; // UParticleSystem*
		constexpr auto SmallMeteorExplosion = 0x360; // UParticleSystem*
		constexpr auto GasAreaRadiuse = 0x368; // float
		constexpr auto GasLifeTime = 0x36c; // float
		constexpr auto Gas = 0x370; // UParticleSystem*
		constexpr auto GasActor = 0x378; // AActor*
		constexpr auto Root = 0x3b8; // UBoxComponent*
		constexpr auto SmallMeteorArray = 0x3c0; // TArray<ACrowConquestMeteorPieceActor*>
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UCrowGameResultSquadRankWidget {
		constexpr auto SquadSlotList = 0x368; // TArray<UCrowResultSquadSlotWidget*>
		constexpr auto WB_Result_SquadSlot_2 = 0x378; // UCrowResultSquadSlotWidget*
		constexpr auto WB_Result_SquadSlot_3 = 0x380; // UCrowResultSquadSlotWidget*
		constexpr auto WB_Result_SquadSlot_4 = 0x388; // UCrowResultSquadSlotWidget*
		constexpr auto WB_Result_SquadSlot_5 = 0x390; // UCrowResultSquadSlotWidget*
		constexpr auto WB_BT_Skip = 0x398; // UCrowButton*
		constexpr auto GameOverAniStart = 0x3a0; // UWidgetAnimation*
		constexpr auto GameOverAniEnd = 0x3a8; // UWidgetAnimation*
		constexpr auto VictoryAniStart = 0x3b0; // UWidgetAnimation*
		constexpr auto VictoryAniEnd = 0x3b8; // UWidgetAnimation*
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x440; // UVectorField*
		constexpr auto Intensity = 0x448; // float
		constexpr auto Tightness = 0x44c; // float
		constexpr auto bPreviewVectorField = 0x450; // char : 1
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UWB_Crosshair_Mh6_Minigun_First_C {
		constexpr auto CrowWidgetImage = 0x450; // UCrowWidgetImage*
		constexpr auto CrowWidgetImage_143 = 0x458; // UCrowWidgetImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x460; // UImage*
		constexpr auto IMG_Down_3 = 0x468; // UCrowWidgetImage*
		constexpr auto IMG_Down_4 = 0x470; // UCrowWidgetImage*
		constexpr auto IMG_Left_3 = 0x478; // UCrowWidgetImage*
		constexpr auto IMG_Left_4 = 0x480; // UCrowWidgetImage*
		constexpr auto IMG_Overheating_Gauge_2 = 0x488; // UImage*
		constexpr auto IMG_Point = 0x490; // UImage*
		constexpr auto IMG_Right_3 = 0x498; // UCrowWidgetImage*
		constexpr auto IMG_Right_4 = 0x4a0; // UCrowWidgetImage*
		constexpr auto IMG_Up_3 = 0x4a8; // UCrowWidgetImage*
		constexpr auto IMG_Up_4 = 0x4b0; // UCrowWidgetImage*
		constexpr auto WB_Vehicle_Damage = 0x4b8; // UWB_Vehicle_Warning_Heli_C*
		constexpr auto WidgetSwitcher_38 = 0x4c0; // UWidgetSwitcher*
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UCrowRotorStateBase {
		constexpr auto RotorFSM = 0x48; // UCrowRotorFSM*
	}

	namespace n_UMagicLeapTouchpadGesturesComponent {
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UProceduralConeToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UCrowLobbyRecordWeaponWidget {
		constexpr auto WB_Record_WeaponInfo = 0x348; // UCrowRecordWeaponInfoWidget*
		constexpr auto SB_WeaponList = 0x350; // UScrollBox*
		constexpr auto RecordWeaponInfoSlotWidgetClass = 0x358; // UCrowRecordWeaponInfoSlotWidget*
		constexpr auto SceneLobby = 0x360; // ACrowSceneLobby*
		constexpr auto SpawnWeaponData = 0x368; // FCrowWeaponData
		constexpr auto SpawnWeaponAccData = 0x4d0; // FCrowWeaponAccData
		constexpr auto CurrentWeaponUIType = 0x580; // ECrowWeaponUIType
	}

	namespace n_UCrowPartDamageBox {
		constexpr auto DamageMultiply = 0x468; // float
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_UCrowPostProcessBloodComponent {
		constexpr auto ParamInstance = 0xb0; // UMaterialParameterCollectionInstance*
		constexpr auto BloodParam = 0xb8; // FName
		constexpr auto BloodScreenParam = 0xc0; // FName
		constexpr auto CurveAppearBlood = 0xc8; // UCurveFloat*
		constexpr auto CurveDisappearBlood = 0xd0; // UCurveFloat*
		constexpr auto CurveAppearBloodScreen = 0xd8; // UCurveFloat*
		constexpr auto CurveDisappearBloodScreen = 0xe0; // UCurveFloat*
		constexpr auto ZombieCurveParamX = 0xe8; // FName
		constexpr auto ZombieCurveParamY = 0xf0; // FName
		constexpr auto ZombieCurveParamZ = 0xf8; // FName
		constexpr auto DefaultZombieParamValue = 0x100; // FVector
		constexpr auto CurveZombieBloodBlur = 0x110; // UCurveVector*
		constexpr auto BloodMaterials = 0x118; // FCrowBloodPostProcessEffect
		constexpr auto BloodValue = 0x170; // float
		constexpr auto BloodScreenValue = 0x174; // float
		constexpr auto ZombieCurveValue = 0x178; // FVector
		constexpr auto LastHPRate = 0x184; // float
		constexpr auto bDirtyAnyValue = 0x188; // bool
		constexpr auto bHuman = 0x189; // bool
		constexpr auto MapBloodAnim = 0x190; // TMap<ECrowBloodAnimType, FCrowBloodAnim>
		constexpr auto CachedPostProcessComp = 0x1e0; // TWeakObjectPtr<UCrowLocalPostProcessComponent>
	}

	namespace n_ACrowLobbyHUD {
		constexpr auto LobbyMainWidget = 0x310; // UUserWidget*
		constexpr auto CountdownWidgetClass = 0x318; // UUserWidget*
		constexpr auto RejoinMsgWidgetClass = 0x320; // UCrowRejoinMsgWidget*
		constexpr auto MainWidget = 0x328; // UCrowLobbyMainWidget*
		constexpr auto CountdownWidget = 0x330; // UCrowCountdownWidget*
		constexpr auto RejoinMsgWidget = 0x338; // UCrowRejoinMsgWidget*
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_ACrowWorldEditorHelper {
		constexpr auto DistanceLOD1 = 0x220; // float
		constexpr auto DistanceLOD2 = 0x224; // float
		constexpr auto DistanceLOD3 = 0x228; // float
		constexpr auto SphereMesh = 0x230; // UStaticMeshComponent*
		constexpr auto LastPropActorStaticMeshMode = 0x238; // int32_t
		constexpr auto UpdateStaticMeshActor = 0x23c; // bool
		constexpr auto UpdateBuildingActor = 0x23d; // bool
		constexpr auto UpdatePropActor = 0x23e; // bool
		constexpr auto SearchMaterial = 0x240; // UMaterialInterface*
		constexpr auto FoundActorsUsingMaterial = 0x248; // TArray<AActor*>
		constexpr auto IsEditorHelperInitialized = 0x258; // bool
	}

	namespace n_UWaterWavesAssetReference {
		constexpr auto WaterWavesAsset = 0x28; // UWaterWavesAsset*
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UCrowMissionComplatePopup {
		constexpr auto TB_MissionName = 0x348; // UTextBlock*
		constexpr auto IMG_TitleBg_2 = 0x350; // UImage*
		constexpr auto IMG_TitleBg_LIne = 0x358; // UImage*
		constexpr auto IMG_Deco_01 = 0x360; // UImage*
		constexpr auto IMG_Deco_02 = 0x368; // UImage*
		constexpr auto OpenTime = 0x370; // float
		constexpr auto MissionIDs = 0x378; // TArray<int32_t>
		constexpr auto MissionPopupCloseTime = 0x388; // float
		constexpr auto IsAddNewMission = 0x38c; // bool
	}

	namespace n_UCrowCharacterMovement {
		constexpr auto RotationRateMultiplier = 0xb7c; // float
		constexpr auto MovementSetting = 0xb80; // FCrowMovementSetting
		constexpr auto DiveImpactDelayElapsed = 0xbe0; // float
		constexpr auto bWantsToWeaponFiring = 0xbe4; // char : 1
		constexpr auto bSaveAimState = 0xbe5; // bool
		constexpr auto FallType = 0xbe6; // ECrowCharacterFallType
		constexpr auto TargetTimeLandDelay = 0xbe8; // float
		constexpr auto ElapsedTimeLandDelay = 0xbec; // float
		constexpr auto PenetrationOverlapCheckInflation = 0xbf4; // float
		constexpr auto CachedCrowCharacter = 0xbf8; // ACrowCharacterPawn*
		constexpr auto ProneUpdatedComponent = 0xc00; // UCrowProneCapsuleComponent*
		constexpr auto LastBlockedComponent = 0xc08; // UPrimitiveComponent*
		constexpr auto WaterInfo = 0xc10; // FCrowCharacterMovementWaterInfo
		constexpr auto ReceivedWorldActorIndex = 0xc70; // uint32_t
		constexpr auto ReceivedLayoutItemIndex = 0xc74; // int16_t
		constexpr auto UseReceivedIndex = 0xc76; // bool
	}

	namespace n_UCrowProjectileChecker {
		constexpr auto CheckInfoMap = 0x68; // TMap<uint32_t, FCrowProjectileCheckInfo>
		constexpr auto WeaponInfoMap = 0xb8; // TMap<uint32_t, FCrowWeaponCheckInfo>
		constexpr auto WeaponTimeChecker = 0x108; // FCrowWeaponTimeChecker
		constexpr auto WeaponSpreadChecker = 0x190; // FCrowWeaponSpreadChecker
		constexpr auto YellowFlagCount = 0x198; // int32_t
		constexpr auto RedFlagCount = 0x19c; // int32_t
		constexpr auto PlayerController = 0x1a0; // ACrowPlayerControllerBase*
	}

	namespace n_ACrowGameStateConquest {
		constexpr auto RedIconSequence = 0x4d8; // TArray<FString>
		constexpr auto BlueIconSequence = 0x4e8; // TArray<FString>
		constexpr auto StartSound = 0x4f8; // UAkAudioEvent*
		constexpr auto BGM_EndSound_Loop = 0x500; // UAkAudioEvent*
		constexpr auto BGM_EndSound_End = 0x508; // UAkAudioEvent*
		constexpr auto BGM_ResultSound_Loop = 0x510; // UAkAudioEvent*
		constexpr auto BGM_ResultSound_End = 0x518; // UAkAudioEvent*
		constexpr auto VictorySound = 0x520; // UAkAudioEvent*
		constexpr auto DefeatSound = 0x528; // UAkAudioEvent*
		constexpr auto SkydivingRespawnTime = 0x530; // float
		constexpr auto SkillTextIndexArray = 0x538; // TArray<FString>
		constexpr auto SkyRespawnCondition = 0x548; // FCrowSkyRespawnCondition
		constexpr auto FreeConquestCondition = 0x564; // FCrowFreeConquestCondition
		constexpr auto PointAcceleration = 0x578; // TArray<FCrowConquestPointRate>
		constexpr auto MeteorInfo = 0x588; // FCrowConquestMeteorInfo
		constexpr auto RedTeamConquestPoint = 0x5d8; // int32_t
		constexpr auto BlueTeamConquestPoint = 0x5dc; // int32_t
		constexpr auto ObjectivePoint = 0x5e0; // int32_t
		constexpr auto ConquestSequenceRedTeam = 0x5e8; // TArray<FString>
		constexpr auto FreeConquestDestTime = 0x5f8; // float
		constexpr auto RedSkyRespawn = 0x5fc; // bool
		constexpr auto BlueSkyRespawn = 0x5fd; // bool
		constexpr auto ConquestSequenceBlueTeam = 0x600; // TArray<FString>
		constexpr auto ConquestAreaArray = 0x610; // TArray<ACrowConquestArea*>
		constexpr auto RedSpawnPointArray = 0x620; // TArray<ACrowConquestSpawnPoint*>
		constexpr auto BlueSpawnPointArray = 0x630; // TArray<ACrowConquestSpawnPoint*>
		constexpr auto SkyRespawnPointArray = 0x640; // TArray<ACrowConquestSkyRespawnPoint*>
		constexpr auto MeteorArray = 0x650; // TArray<ACrowConquestMeteorSettings*>
	}

	namespace n_UCrowBattleHUDCrosshair {
		constexpr auto OV_Crosshair = 0x280; // UOverlay*
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_ACrowWeaponLoadoutObjectBider {
		constexpr auto WeaponCustomActors = 0x220; // TArray<AActor*>
		constexpr auto WeaponCustom_Camera = 0x230; // AActor*
		constexpr auto WeaponCustom_Camera_Sticker = 0x238; // AActor*
		constexpr auto WeaponCustom_Camera_Sub = 0x240; // AActor*
		constexpr auto WeaponCustom_Camera_Throw = 0x248; // AActor*
		constexpr auto WeaponCustom_Camera_Melee = 0x250; // AActor*
		constexpr auto WeaponCustom_Camera_Kit = 0x258; // AActor*
		constexpr auto WeaponCustom_Camera_HealKit = 0x260; // AActor*
		constexpr auto WeaponCustom_Camera_Primary_RL = 0x268; // AActor*
		constexpr auto WeaponCustom_SpawnPoint = 0x270; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_Sub = 0x278; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_Throw = 0x280; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_Melee = 0x288; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_Kit = 0x290; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_HealKit = 0x298; // AActor*
		constexpr auto WeaponCustom_SpawnPoint_Primary_RL = 0x2a0; // AActor*
		constexpr auto UseCustomWeaponRotation = 0x2a8; // bool
		constexpr auto CustomWeaponRotationSpeed = 0x2ac; // float
		constexpr auto FxActivators = 0x2b0; // TArray<ACrowFxActivator*>
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_UWaterWavesAsset {
		constexpr auto WaterWaves = 0x28; // UWaterWaves*
	}

	namespace n_UCrowLobbyRecordWidget {
		constexpr auto WB_RecordTab = 0x348; // UCrowButtonContainerBase*
		constexpr auto WB_RecordTab_Weapon = 0x350; // UCrowButtonContainerBase*
		constexpr auto WB_RecordScore = 0x358; // UCrowLobbyRecordScoreWidget*
		constexpr auto WB_RecordWeapon = 0x360; // UCrowLobbyRecordWeaponWidget*
		constexpr auto WB_Replay = 0x368; // UCrowReplayWidget*
		constexpr auto WB_Medal = 0x370; // UCrowLobbyMainMedalWidget*
		constexpr auto CurrentRecordTab = 0x378; // ECrowLobbyRecordTab
		constexpr auto CurrentWeaponUIType = 0x379; // ECrowWeaponUIType
	}

	namespace n_UCrowLandWheelsConfigBody {
		constexpr auto Setting = 0x28; // FCrowLandWheelsBodySetting
	}

	namespace n_UCrowShellShockComponent {
		constexpr auto ParamCollection = 0xb0; // UMaterialParameterCollection*
		constexpr auto CurveParamX = 0xb8; // FName
		constexpr auto CurveParamY = 0xc0; // FName
		constexpr auto CurveParamZ = 0xc8; // FName
		constexpr auto CurveShellSockParam = 0xd0; // UCurveVector*
		constexpr auto ShellShockMaterial = 0xd8; // UMaterialInterface*
		constexpr auto CachedPostProcessComp = 0xe0; // TWeakObjectPtr<UCrowLocalPostProcessComponent>
		constexpr auto ParamInstance = 0xe8; // UMaterialParameterCollectionInstance*
		constexpr auto bPlay = 0xf0; // bool
		constexpr auto ElapsedTime = 0xf4; // float
		constexpr auto fPower = 0xf8; // float
		constexpr auto ShellShockMaterialIndex = 0xfc; // int32_t
		constexpr auto CurveParamMaxTime = 0x100; // float
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x258; // char : 1
		constexpr auto AuxBus = 0x260; // UAkAuxBus*
		constexpr auto AuxBusName = 0x268; // FString
		constexpr auto SendLevel = 0x278; // float
		constexpr auto FadeRate = 0x27c; // float
		constexpr auto Priority = 0x280; // float
		constexpr auto LateReverbComponent = 0x288; // UAkLateReverbComponent*
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UCrowLobbySlotPurchaseItemWidget {
		constexpr auto TB_SlotName = 0x348; // UTextBlock*
		constexpr auto TB_Price = 0x350; // UTextBlock*
		constexpr auto BT_Buy = 0x358; // UCrowButton*
		constexpr auto LobbySlotType = 0x360; // ECrowLobbySlotType
		constexpr auto ShopIndex = 0x364; // uint32_t
		constexpr auto SlotIndex = 0x368; // uint32_t
		constexpr auto Price = 0x36c; // uint32_t
		constexpr auto ItemName = 0x370; // FText
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UCrowHazardGasGuideWidget {
		constexpr auto IMG_Icon_User_Crowcolor = 0x348; // UImage*
		constexpr auto PB_GasFromDist = 0x350; // UProgressBar*
		constexpr auto WS_GasStateSwitcher = 0x358; // UWidgetSwitcher*
		constexpr auto CP_DistArrow = 0x360; // UCanvasPanel*
		constexpr auto TB_Status = 0x368; // UTextBlock*
		constexpr auto NearHazardSound = 0x370; // UAkAudioEvent*
		constexpr auto InHazardSound = 0x378; // UAkAudioEvent*
		constexpr auto StartHazardZoneSound = 0x380; // UAkAudioEvent*
		constexpr auto EndHazardZoneSound = 0x388; // UAkAudioEvent*
		constexpr auto GasNearUIDist = 0x390; // int32_t
		constexpr auto GasNearSoundDist = 0x394; // int32_t
		constexpr auto CurrentComponent = 0x398; // UAkComponent*
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ACrowGameModeConquest {
		constexpr auto MinUserCountConquest = 0x518; // char
		constexpr auto ObjectivePoint = 0x51c; // uint32_t
		constexpr auto RespawnDecreasePoint = 0x520; // char
		constexpr auto ConquestSequence = 0x528; // TArray<FString>
		constexpr auto MorphineBoxClass = 0x538; // ACrowSupplyAmmoActor*
		constexpr auto MorphineBoxCountLimit = 0x540; // uint32_t
	}

	namespace n_UCrowHealGauge {
		constexpr auto IMG_Gauge = 0x348; // UImage*
		constexpr auto WS_Center = 0x350; // UWidgetSwitcher*
		constexpr auto TB_HealCount = 0x358; // UTextBlock*
		constexpr auto GaugeMaterial = 0x360; // UMaterialInstanceDynamic*
		constexpr auto Color_Bleeding = 0x368; // FLinearColor
		constexpr auto InjuredLoopAnimName = 0x378; // FName
	}

	namespace n_UCrowCloudDrawComponent {
		constexpr auto RenderTarget = 0xb0; // UTextureRenderTarget2D*
		constexpr auto RenderTargetSize = 0xb8; // FVector2D
		constexpr auto PixelSize = 0xc0; // float
		constexpr auto WorldSizeKM = 0xc4; // float
		constexpr auto Canvas = 0xc8; // UCanvas*
		constexpr auto DrawToRTContext = 0xd0; // FDrawToRenderTargetContext
	}

	namespace n_ACrowLobbyMainObjectBider {
		constexpr auto MainMenuActors = 0x220; // TArray<AActor*>
		constexpr auto MainMenu_Camera = 0x230; // AActor*
		constexpr auto MainMenu_Camera_L = 0x238; // AActor*
		constexpr auto MainMenu_Camera_R = 0x240; // AActor*
		constexpr auto CameraChangingTime = 0x248; // float
		constexpr auto MainMenu_SpawnPoint = 0x250; // TArray<AActor*>
		constexpr auto CrowLobbyCharacterPawnClass = 0x260; // ACrowLobbyCharacterPawn*
		constexpr auto LobbyTestMode = 0x268; // bool
		constexpr auto LobbyNoiseAnimInfos = 0x270; // TArray<FCrowLobbyNoiseAnimInfo>
		constexpr auto RandomBoxSequences = 0x280; // TMap<ECrowItemGrade, FSoftObjectPath>
		constexpr auto FxRandomActivators = 0x2d0; // TArray<ACrowFxRandomActivator*>
		constexpr auto MainMenu_SpawnPointFxActivators = 0x2e0; // TArray<ACrowFxActivator*>
		constexpr auto LobbyAudioEvents = 0x2f0; // TArray<UAkAudioEvent*>
		constexpr auto LobbyAudioStopEvents = 0x300; // TArray<UAkAudioEvent*>
		constexpr auto AudioTarget = 0x310; // AActor*
	}

	namespace n_UCrowSelectModButtonWidget {
		constexpr auto TB_Select_ModeName = 0x348; // UTextBlock*
		constexpr auto TB_Deselect_ModeName = 0x350; // UTextBlock*
		constexpr auto CTB_ModSelect_Button = 0x358; // UCrowToggleButton*
		constexpr auto CP_Lock = 0x360; // UCanvasPanel*
		constexpr auto CTB_CheckBox = 0x368; // UCrowToggleButton*
		constexpr auto GameMod = 0x390; // ECrowGameMode
		constexpr auto GameModName = 0x398; // FText
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_ACrowWorldProperty {
		constexpr auto SphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto PropertyVehicle = 0x228; // FCrowWorldPropertyVehicle
		constexpr auto PropertyScopeDOF = 0x230; // FCrowDOFPropertyScope
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UCrowPingManager {
		constexpr auto PingDataMap = 0x28; // TMap<uint16_t, FCrowPingData>
		constexpr auto PingActorMap = 0x78; // TMap<uint16_t, ACrowPingBase*>
		constexpr auto SaveListPingData = 0xc8; // FCrowPingData
		constexpr auto PingCountTimerHandle = 0x138; // FTimerHandle
		constexpr auto PingLockTimerHandle = 0x140; // FTimerHandle
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UWB_MessageBox_C {
		constexpr auto IMG_BackGround = 0x3e0; // UImage*
		constexpr auto IMG_MessageButton_2 = 0x3e8; // UImage*
		constexpr auto IMG_MessageButton_3 = 0x3f0; // UImage*
		constexpr auto IMG_MessageButton_1_Hover = 0x3f8; // UImage*
		constexpr auto IMG_MessageButton_2_Hover = 0x400; // UImage*
	}

	namespace n_UCrowWorldFoliage {
		constexpr auto IsWorldFoliageEnabled = 0x28; // char : 1
		constexpr auto World = 0x30; // UWorld*
		constexpr auto MapConfig = 0x38; // UCrowWorldMapConfig*
		constexpr auto PlayerController = 0x40; // APlayerController*
		constexpr auto ActiveStreamingLevels = 0x48; // TSet<ULevelStreaming*>
		constexpr auto LoadedLevelsCached = 0x98; // TArray<ULevelStreaming*>
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UMeshAnalysisProperties {
		constexpr auto SurfaceArea = 0x60; // FString
		constexpr auto Volume = 0x70; // FString
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UCrowPlayerReportWidget {
		constexpr auto TBPlayerName = 0x348; // UTextBlock*
		constexpr auto WBPlayerReportDropDown = 0x350; // UCrowDropDownWidget*
		constexpr auto CPReport = 0x358; // UCanvasPanel*
		constexpr auto BTReport = 0x360; // UCrowButton*
		constexpr auto TBReport = 0x368; // UTextBlock*
		constexpr auto BTClose = 0x370; // UCrowButton*
		constexpr auto ServerKey = 0x378; // uint64_t
		constexpr auto SelectedDropDownSlotIndex = 0x380; // int32_t
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UConvertToPolygonsToolProperties {
		constexpr auto ConversionMode = 0x60; // EConvertToPolygonsMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bCalculateNormals = 0x68; // bool
		constexpr auto bShowGroupColors = 0x69; // bool
	}

	namespace n_UMoveBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
	}

	namespace n_UCrowAudioCheckComponent {
		constexpr auto Collision = 0x1f8; // TArray<UShapeComponent*>
		constexpr auto ActorType = 0x208; // EActorType
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UCrowVehicleMovementBoats {
		constexpr auto EngineConfigClass = 0x190; // UCrowBoatsConfigEngine*
		constexpr auto BodyConfigClass = 0x198; // UCrowBoatsConfigBody*
		constexpr auto EngineConfig = 0x1a0; // UCrowBoatsConfigEngine*
		constexpr auto BodyConfig = 0x1a8; // UCrowBoatsConfigBody*
		constexpr auto EngineComponent = 0x1b0; // UCrowBoatsSimEngine*
		constexpr auto FloatingVolumeInstances = 0x1b8; // TArray<UCrowBoatsSimFloatingVolume*>
		constexpr auto ChasisDragArea = 0x1c8; // FVector
		constexpr auto CachedDeltaTime = 0x1d4; // float
		constexpr auto PrevBodyVelocity = 0x1d8; // FVector
		constexpr auto SubstepLinearForce = 0x1e4; // FVector
		constexpr auto SubstepAngularTorque = 0x1f0; // FVector
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto Radius = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto NumSides = 0x474; // int32_t
		constexpr auto bViewAligned = 0x478; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x479; // bool
	}

	namespace n_ACrowRecoilPainter {
		constexpr auto GuideConfig = 0x280; // FGuideConfig
		constexpr auto MaxRecoilNum = 0x284; // float
		constexpr auto Distance = 0x288; // int32_t
		constexpr auto ImportTable = 0x290; // UDataTable*
		constexpr auto ExportTable = 0x298; // UDataTable*
		constexpr auto RecoilUI = 0x2a0; // UCrowRecoilUI*
		constexpr auto RecoilBoard = 0x2a8; // ACrowRecoilEditorBoard*
		constexpr auto bEditOnePoint = 0x2b0; // bool
		constexpr auto DataTablePrefix = 0x2b8; // FString
		constexpr auto DataTablePath = 0x2c8; // FString
		constexpr auto TempleteBoardClass = 0x2d8; // ACrowRecoilEditorBoard*
		constexpr auto MyPC = 0x2e0; // APlayerController*
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x218; // bool
		constexpr auto OcclusionCollisionChannel = 0x220; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x224; // char : 1
		constexpr auto EarlyReflectionAuxBus = 0x228; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x230; // FString
		constexpr auto EarlyReflectionOrder = 0x240; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x244; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x248; // float
		constexpr auto roomReverbAuxBusGain = 0x24c; // float
		constexpr auto diffractionMaxEdges = 0x250; // int32_t
		constexpr auto diffractionMaxPaths = 0x254; // int32_t
		constexpr auto diffractionMaxPathLength = 0x258; // float
		constexpr auto DrawFirstOrderReflections = 0x25c; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x25c; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x25c; // char : 1
		constexpr auto DrawDiffraction = 0x25c; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x260; // bool
		constexpr auto AttenuationScalingFactor = 0x264; // float
		constexpr auto OcclusionRefreshInterval = 0x268; // float
		constexpr auto bUseReverbVolumes = 0x26c; // bool
	}

	namespace n_UCrowSaveGame {
		constexpr auto UserId = 0x28; // FString
		constexpr auto SaveSlotName = 0x38; // FString
		constexpr auto UserIndex = 0x48; // uint32_t
		constexpr auto NewItemsIndex = 0x50; // TArray<uint32_t>
		constexpr auto NewItemsType = 0x60; // TArray<char>
	}

	namespace n_ACrowWorldFoliageActor {
		constexpr auto FoliageType = 0x230; // UFoliageType*
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UCrowMissionRewardInfoWidget {
		constexpr auto WB_MissionRewardSlot_2 = 0x348; // UCrowMissionRewardSlotWidget*
		constexpr auto WB_MissionRewardSlot_3 = 0x350; // UCrowMissionRewardSlotWidget*
		constexpr auto WB_MissionRewardSlot_4 = 0x358; // UCrowMissionRewardSlotWidget*
		constexpr auto WB_MissionRewardSlot_5 = 0x360; // UCrowMissionRewardSlotWidget*
		constexpr auto WB_MissionRewardSlot_6 = 0x368; // UCrowMissionRewardSlotWidget*
		constexpr auto WB_MissionRewardSlot_7 = 0x370; // UCrowMissionRewardSlotWidget*
		constexpr auto RewardSlotArray = 0x378; // TArray<UCrowMissionRewardSlotWidget*>
	}

	namespace n_ACrowEnvEmitterActor {
		constexpr auto MinValue = 0x270; // float
		constexpr auto MaxValue = 0x274; // float
		constexpr auto DefaultValue = 0x278; // float
		constexpr auto ParameterName = 0x27c; // FName
		constexpr auto bOverlapEvent = 0x284; // bool
	}

	namespace n_ACrowWorldReplicationActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto MapConfig = 0x228; // UCrowWorldMapConfig*
		constexpr auto WorldGridArray = 0x230; // TArray<FCrowWorldGrid>
		constexpr auto ServerWorker = 0x240; // UCrowWorldSyncServerWorker*
		constexpr auto FirstClientWorker = 0x248; // UCrowWorldSyncClientWorker*
		constexpr auto ClientObjects = 0x250; // FCrowWorldClientObjects
		constexpr auto ControllerInfos = 0x270; // TMap<APlayerController*, FCrowWorldPlayerControllerInfo>
		constexpr auto IsWaitingACK = 0x2c0; // bool
		constexpr auto ReceivedUpdateLocationACK = 0x2c1; // bool
	}

	namespace n_ACrowRespawnCamera {
		constexpr auto EndSensor = 0x7a0; // USphereComponent*
		constexpr auto RailSplineComponent = 0x7a8; // USplineComponent*
		constexpr auto CurrentCameraPositionOnRail = 0x7b0; // float
		constexpr auto AttachedActor = 0x7b8; // AActor*
		constexpr auto MoveSecond = 0x7c0; // float
		constexpr auto DelaySecond = 0x7c4; // float
		constexpr auto OffsetLocation = 0x7c8; // FVector
		constexpr auto EasingType = 0x7d4; // EEasingFunc
		constexpr auto PlayerController = 0x7d8; // ACrowPlayerControllerBase*
		constexpr auto ConquestArea = 0x7e0; // ACrowConquestArea*
		constexpr auto CurrentTime = 0x7e8; // float
		constexpr auto IsReachedEnd = 0x7ec; // bool
	}

	namespace n_UMh6_MachineGun_03_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto RotorRoll = 0x318; // float
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UCrowCustomSquadSlotWidget {
		constexpr auto TB_SquadName = 0x348; // UTextBlock*
		constexpr auto WB_CustomUserSlot_2 = 0x350; // UCrowCustomUserSlotWidget*
		constexpr auto WB_CustomUserSlot_3 = 0x358; // UCrowCustomUserSlotWidget*
		constexpr auto WB_CustomUserSlot_4 = 0x360; // UCrowCustomUserSlotWidget*
		constexpr auto WB_CustomUserSlot_5 = 0x368; // UCrowCustomUserSlotWidget*
		constexpr auto TeamType = 0x370; // ECrowCustomTeamType
		constexpr auto SquadIndex = 0x371; // char
		constexpr auto CustomUserSlotArray = 0x378; // TArray<UCrowCustomUserSlotWidget*>
	}

	namespace n_ACrowFoliageAffectorActor {
		constexpr auto bNeedDestroy = 0x220; // bool
		constexpr auto ScaleMultiplier = 0x224; // float
		constexpr auto FoliageAffectors = 0x228; // TArray<UCrowFoliageAffectorComponent*>
	}

	namespace n_UCrowFlashBangFxWidget {
		constexpr auto IMG_White = 0x348; // UImage*
		constexpr auto IMG_ScreenShot = 0x350; // UImage*
		constexpr auto CaptureClass = 0x358; // ACrowFlashBangCaptureActor*
		constexpr auto CaptureActor = 0x360; // ACrowFlashBangCaptureActor*
		constexpr auto LoopSound = 0x368; // UAkAudioEvent*
		constexpr auto EndSound = 0x370; // UAkAudioEvent*
	}

	namespace n_ACrowProjectileBullet {
		constexpr auto UseProjectileISM = 0x17c8; // bool
		constexpr auto ProjectileSizeMultiply = 0x17cc; // float
		constexpr auto TracerFX_1P = 0x17d0; // UParticleSystem*
		constexpr auto TracerFX_1P_N = 0x17d8; // UNiagaraSystem*
		constexpr auto TracerFX_3P = 0x17e0; // UParticleSystem*
		constexpr auto TracerFX_3P_N = 0x17e8; // UNiagaraSystem*
		constexpr auto TracerFX_3P_Trail = 0x17f0; // UParticleSystem*
		constexpr auto TracerFX_3P_Trail_N = 0x17f8; // UNiagaraSystem*
		constexpr auto TrailFX_LifeTime = 0x1800; // float
		constexpr auto FlyBySound_W = 0x1808; // UAkAudioEvent*
		constexpr auto FlyBySoundRadius = 0x1810; // float
		constexpr auto SoundTargetActor = 0x1818; // AActor*
		constexpr auto TracerFXComp_1P = 0x1820; // UParticleSystemComponent*
		constexpr auto TracerFXComp_3P = 0x1828; // UParticleSystemComponent*
		constexpr auto TrailFXComp = 0x1830; // UParticleSystemComponent*
	}

	namespace n_ACrowRuntimeVirtualTextureVolume {
		constexpr auto RVTComponent = 0x220; // URuntimeVirtualTextureComponent*
		constexpr auto RVTBounds = 0x228; // UBoxComponent*
		constexpr auto CookWith = 0x230; // TArray<AActor*>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UCrowResultScoreBombMissionWidget {
		constexpr auto AniShow = 0x368; // UWidgetAnimation*
		constexpr auto AniWin = 0x370; // UWidgetAnimation*
		constexpr auto AniLose = 0x378; // UWidgetAnimation*
		constexpr auto TBRoundResult = 0x380; // UTextBlock*
	}

	namespace n_ACrowShootingTargetActor {
		constexpr auto RootComp = 0x220; // USceneComponent*
		constexpr auto MeshComponent = 0x228; // USkeletalMeshComponent*
		constexpr auto PointCompList = 0x230; // TArray<USceneComponent*>
		constexpr auto Montage = 0x240; // UAnimMontage*
		constexpr auto MaxHealth = 0x248; // float
		constexpr auto RespawnTime = 0x24c; // float
		constexpr auto CurrentHealth = 0x250; // float
		constexpr auto IsReady = 0x254; // bool
		constexpr auto RestartTime = 0x258; // float
	}

	namespace n_UCrowWorldEventGroup {
		constexpr auto DisableEventList = 0xb8; // TArray<ACrowWorldEventBase*>
		constexpr auto GroupInfo = 0xc8; // FCrowWorldEventGroupInfo
	}

	namespace n_UCrowIndicatorSpaceWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_TopLeft = 0x350; // UCanvasPanel*
		constexpr auto CP_BottomRight = 0x358; // UCanvasPanel*
		constexpr auto PlayerController = 0x360; // ACrowPlayerControllerBase*
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UDiffusionSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bPreserveUVs = 0x68; // bool
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UCrowVehicleWidgetSeatRoadRover {
		constexpr auto SB_Seat_FrontMG = 0x3b8; // USizeBox*
		constexpr auto SB_Seat_MG = 0x3c0; // USizeBox*
		constexpr auto SB_Seat_UserWeapon_1 = 0x3c8; // USizeBox*
	}

	namespace n_UCrowWidgetTweenBase {
		constexpr auto TargetWidget = 0x28; // UWidget*
	}

	namespace n_UCrowWorldSplinePoleComponent {
		constexpr auto WorldPropTemplete = 0xc0; // ACrowWorldPropActor*
		constexpr auto CableGravityScale = 0xc8; // float
		constexpr auto bUpdateCable = 0xcc; // bool
		constexpr auto PoleConnectionInfo = 0xd0; // TMap<FString, FCrowWorldSplinePoleConnectionInfo>
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UCrowLocalPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto bIsEnablePostProcess = 0x750; // bool
		constexpr auto Priority = 0x754; // float
	}

	namespace n_ABP_Grenade_EscapeM18Ammo_C {
		constexpr auto SK_G67_02 = 0x18d0; // USkeletalMeshComponent*
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_UPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UAkAssetDataWithMedia {
		constexpr auto MediaList = 0x70; // TArray<TSoftObjectPtr<UAkMediaAsset>>
	}

	namespace n_UCrowMinimapInfoWidget {
		constexpr auto UAVSpottedSound_Loop = 0x348; // UAkAudioEvent*
		constexpr auto UAVSpottedSound_End = 0x350; // UAkAudioEvent*
		constexpr auto WB_Map = 0x358; // UCrowWorldMap*
		constexpr auto CompassOverlay = 0x360; // UCanvasPanel*
		constexpr auto MapOverlay = 0x368; // UCanvasPanel*
		constexpr auto TB_ZoomRange = 0x370; // UTextBlock*
		constexpr auto ArrayZoomMeter = 0x378; // TArray<float>
		constexpr auto CurrIndex = 0x388; // int32_t
		constexpr auto IsRotation = 0x38c; // bool
		constexpr auto PrevAngle = 0x390; // float
		constexpr auto CompassBaseSize = 0x394; // FVector2D
		constexpr auto WorldMapImage = 0x3a0; // UTexture2D*
		constexpr auto AniEnemyPatrolZoneStart = 0x3a8; // UWidgetAnimation*
		constexpr auto AniEnemyPatrolZoneLoop = 0x3b0; // UWidgetAnimation*
		constexpr auto AniEnemyPatrolZoneEnd = 0x3b8; // UWidgetAnimation*
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x258; // float
		constexpr auto Contrast = 0x25c; // float
		constexpr auto OcclusionExponent = 0x260; // float
		constexpr auto MinOcclusion = 0x264; // float
		constexpr auto OcclusionTint = 0x268; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x26c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x270; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x274; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x278; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x27c; // float
		constexpr auto OcclusionCombineMode = 0x280; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x338; // UTextureCube*
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_ULuminApplicationLifecycleComponent {
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_InsideWaterBody {
		constexpr auto bIncludeWaves = 0x1f8; // bool
		constexpr auto bSimpleWaves = 0x1f9; // bool
		constexpr auto bIgnoreExclusionVolumes = 0x1fa; // bool
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UCrowBannerItem {
		constexpr auto BannerImage = 0x348; // UImage*
	}

	namespace n_ACrowProjectileLockOnLauncher {
		constexpr auto MinSpeed = 0x1840; // float
		constexpr auto MaxSpeed = 0x1844; // float
		constexpr auto ForwardMeter = 0x1848; // float
		constexpr auto DisableLockOnMeter = 0x184c; // float
		constexpr auto MoveLineCurve = 0x1850; // UCurveFloat*
		constexpr auto InterpSpeedCurve = 0x1858; // UCurveFloat*
		constexpr auto PrevPosition = 0x1860; // FVector
		constexpr auto CurrPosition = 0x186c; // FVector
		constexpr auto CurrDirection = 0x1878; // FVector
		constexpr auto MaxDistancePrevPos = 0x1884; // float
		constexpr auto CurrSpeed = 0x1888; // float
		constexpr auto AddValue = 0x188c; // float
		constexpr auto DisableLockon = 0x1890; // bool
		constexpr auto FireDist = 0x1894; // float
		constexpr auto IsLockOn = 0x1898; // bool
		constexpr auto FireStartPosition = 0x189c; // FVector
		constexpr auto EndPosition = 0x18a8; // FVector
		constexpr auto TargetActorPosition = 0x18b4; // FVector
		constexpr auto LockOnActor = 0x18c0; // AActor*
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UBakeMeshAttributeMapsTool {
		constexpr auto Settings = 0x90; // UBakeMeshAttributeMapsToolProperties*
		constexpr auto NormalMapProps = 0x98; // UBakedNormalMapToolProperties*
		constexpr auto OcclusionMapProps = 0xa0; // UBakedOcclusionMapToolProperties*
		constexpr auto CurvatureMapProps = 0xa8; // UBakedCurvatureMapToolProperties*
		constexpr auto Texture2DProps = 0xb0; // UBakedTexture2DImageProperties*
		constexpr auto VisualizationProps = 0xb8; // UBakedOcclusionMapVisualizationProperties*
		constexpr auto PreviewMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto CachedNormalMap = 0x430; // UTexture2D*
		constexpr auto CachedOcclusionMap = 0x450; // UTexture2D*
		constexpr auto CachedCurvatureMap = 0x480; // UTexture2D*
		constexpr auto CachedMeshPropertyMap = 0x498; // UTexture2D*
		constexpr auto CachedTexture2DImageMap = 0x4b0; // UTexture2D*
		constexpr auto EmptyNormalMap = 0x4b8; // UTexture2D*
		constexpr auto EmptyColorMapBlack = 0x4c0; // UTexture2D*
		constexpr auto EmptyColorMapWhite = 0x4c8; // UTexture2D*
	}

	namespace n_UCrowBoatsConfigBody {
		constexpr auto DrawDebugInfo = 0x28; // bool
		constexpr auto SimulationGenerateHitEvents = 0x29; // bool
		constexpr auto LocalSpaceKinematics = 0x2a; // bool
		constexpr auto BeginWithReadyForDriving = 0x2b; // bool
		constexpr auto AccelerationTilt = 0x2c; // float
		constexpr auto AccelerationRollForce = 0x30; // float
		constexpr auto AccelerationPitchForce = 0x34; // float
		constexpr auto AccelerationCameraYaw = 0x38; // float
		constexpr auto AccelerationCameraSpeed = 0x3c; // float
		constexpr auto InAirAngularResistance = 0x40; // float
		constexpr auto InAirAngularRecoverRoll = 0x44; // float
		constexpr auto InAirAngularRecoverPitch = 0x48; // float
		constexpr auto ChasisMass = 0x4c; // float
		constexpr auto ChasisSize = 0x50; // FVector
		constexpr auto DirectionalDragRatio = 0x5c; // FVector
		constexpr auto LinearDampingRatio = 0x68; // FVector
		constexpr auto PitchDampingRatio = 0x74; // float
		constexpr auto RollDampingRatio = 0x78; // float
		constexpr auto YawDampingRatio = 0x7c; // float
		constexpr auto DepthOffset = 0x80; // float
		constexpr auto SpeedDragThreshold = 0x84; // float
		constexpr auto MaxTiltSpeed = 0x88; // float
		constexpr auto SteeringRollDegree = 0x8c; // float
		constexpr auto ThrottlePitchDegree = 0x90; // float
		constexpr auto InterpolationSpeedRoll = 0x94; // float
		constexpr auto InterpolationSpeedPitch = 0x98; // float
		constexpr auto InterpolationSpeed = 0x9c; // float
		constexpr auto RecoverAxisSpringConstant = 0xa0; // float
		constexpr auto RecoverMaxPitchTorque = 0xa4; // float
		constexpr auto RecoverMaxRollTorque = 0xa8; // float
		constexpr auto OceanTraceChannel = 0xac; // ECollisionChannel
		constexpr auto FloatingVolumes = 0xb0; // TArray<FCrowBoatsFloatingVolumeSetup>
	}

	namespace n_ACrowPingBase {
		constexpr auto CollisionComp = 0x220; // UCapsuleComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto PingData = 0x230; // FCrowPingData
		constexpr auto MapIcon = 0x290; // UCrowWorldMapIconPing*
		constexpr auto IndicatorViewInfo = 0x298; // UCrowIndicatorViewInfoPing*
		constexpr auto IconIndicator = 0x2a0; // UCrowPingIndicatorWidget*
		constexpr auto Aimed = 0x2a8; // bool
		constexpr auto Replyed = 0x2a9; // bool
		constexpr auto IconDisplayInfo = 0x2b0; // FCrowGameIconDisplayInfo
		constexpr auto FxParticlesComp = 0x338; // UParticleSystemComponent*
		constexpr auto PingTable = 0x340; // FCrowPingTableRow
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x440; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x460; // char : 1
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UBTTask_CrowMoveTo {
		constexpr auto Stance = 0xb0; // ECrowAICharacterStance
		constexpr auto MoveMode = 0xb1; // ECrowAICharacterMoveMode
	}

	namespace n_UCrowCustomizeSpraySlotWidget {
		constexpr auto IMG_Icon = 0x348; // UImage*
		constexpr auto IMG_Lock = 0x350; // UImage*
		constexpr auto IMG_Equiped = 0x358; // UImage*
		constexpr auto IMG_Selected = 0x360; // UImage*
		constexpr auto IMG_NewIcon = 0x368; // UImage*
		constexpr auto WS_Grade = 0x370; // UWidgetSwitcher*
		constexpr auto BT_Customize_Spray_Slot = 0x378; // UCrowButton*
		constexpr auto CP_Cost = 0x380; // UCanvasPanel*
		constexpr auto TB_Label_Money = 0x388; // UTextBlock*
		constexpr auto IsShopMode = 0x613; // bool
		constexpr auto CurrentShopTable = 0x618; // FCrowShopTableRow
	}

	namespace n_ACrowGameHUDBase {
		constexpr auto MainWidgetClassDefault = 0x310; // UCrowHUDWidgetDefault*
		constexpr auto MainWidgetClassFullScreenBottom = 0x318; // UCrowHUDWidgetFullScreenBottom*
		constexpr auto MainWidgetClassFullScreenTop = 0x320; // UCrowHUDWidgetFullScreenTop*
		constexpr auto InGameSquadWidgetClass = 0x328; // UCrowSquadWidget*
		constexpr auto InvetoryWidget = 0x330; // UUserWidget*
		constexpr auto WorldMapWidgetClass = 0x338; // UUserWidget*
		constexpr auto RespawnMapWidgetClass = 0x340; // UUserWidget*
		constexpr auto ObjectiveWidgetClass = 0x348; // UUserWidget*
		constexpr auto IndicatorSpaceClass = 0x350; // UUserWidget*
		constexpr auto RadialMenuThrowWidgetClass = 0x358; // UUserWidget*
		constexpr auto RadialMenuHealKitWidgetClass = 0x360; // UUserWidget*
		constexpr auto RadialMenuPingWidgetClass = 0x368; // UUserWidget*
		constexpr auto RadialMenuSprayWidgetClass = 0x370; // UUserWidget*
		constexpr auto RadialMenuEmotionWidgetClass = 0x378; // UUserWidget*
		constexpr auto PingWorldMapWidgetClass = 0x380; // UUserWidget*
		constexpr auto PingIndicatorWidgetClass = 0x388; // UUserWidget*
		constexpr auto GetItemIndicatorClass = 0x390; // UUserWidget*
		constexpr auto CountdownWidgetClass = 0x398; // UUserWidget*
		constexpr auto FadeScreenWidgetClass = 0x3a0; // UUserWidget*
		constexpr auto LootInventoryWidget = 0x3a8; // UUserWidget*
		constexpr auto RequireMineralWidgetClass = 0x3b0; // UUserWidget*
		constexpr auto RequireBattleMoneyWidgetClass = 0x3b8; // UUserWidget*
		constexpr auto ResultSceneWidgetClass = 0x3c0; // UUserWidget*
		constexpr auto ResultSceneIconWidgetClass = 0x3c8; // UUserWidget*
		constexpr auto ESCMenuWidgetClass = 0x3d0; // UUserWidget*
		constexpr auto InputGuideWidgeteClass = 0x3d8; // UUserWidget*
		constexpr auto DialogTooltipWidgetClass = 0x3e0; // UUserWidget*
		constexpr auto ScoreBoardWidgetClass = 0x3e8; // UUserWidget*
		constexpr auto GameResultWidgetClass = 0x3f0; // UUserWidget*
		constexpr auto ChatWidgetClass = 0x3f8; // UUserWidget*
		constexpr auto SpectatorModeWidgetClass = 0x400; // UUserWidget*
		constexpr auto SpectatorCustomModeWidgetClass = 0x408; // UUserWidget*
		constexpr auto TooltipWidgetClass = 0x410; // UUserWidget*
		constexpr auto CustomCursorSpaceClass = 0x418; // UUserWidget*
		constexpr auto InGameModeGuideWidgetClass = 0x420; // UUserWidget*
		constexpr auto GasMaskFilterWidgetClass = 0x428; // UUserWidget*
		constexpr auto FlashBangFxWidgetClass = 0x430; // UCrowFlashBangFxWidget*
		constexpr auto ExplosionFxWidgetClass = 0x438; // UCrowFlashBangFxWidget*
		constexpr auto MissionComplatePopupClass = 0x440; // UCrowMissionComplatePopup*
		constexpr auto BurningFX = 0x448; // UParticleSystem*
		constexpr auto ShowPingWidgetDistanceLow = 0x450; // float
		constexpr auto ShowPingWidgetDistanceFar = 0x454; // float
		constexpr auto AttachedBurningFX = 0x458; // UParticleSystemComponent*
		constexpr auto SkipHUD = 0x460; // bool
		constexpr auto MainWidgetDefault = 0x468; // UCrowHUDWidgetDefault*
		constexpr auto MainWidgetFullScreenBottom = 0x470; // UCrowHUDWidgetFullScreenBottom*
		constexpr auto MainWidgetFullScreenTop = 0x478; // UCrowHUDWidgetFullScreenTop*
		constexpr auto MainWidgetArray = 0x480; // TArray<UCrowHUDWidgetBase*>
		constexpr auto SubWidgetArray = 0x490; // TArray<UCrowWidgetBase*>
		constexpr auto CurrentWeaponBase = 0x4a0; // ACrowWeaponBase*
		constexpr auto CrowInventory = 0x4a8; // UCrowBattleInventoryWidget*
		constexpr auto CrowGetItemDescWidget = 0x4b0; // UCrowPingItemInfoWidget*
		constexpr auto WorldMapWidget = 0x4b8; // UCrowWorldMapWidget*
		constexpr auto RespawnMapWidget = 0x4c0; // UCrowRespawnMapWidget*
		constexpr auto ObjectiveWidget = 0x4c8; // UCrowObjectiveWidget*
		constexpr auto IndicatorSpaceWidget = 0x4d0; // UCrowIndicatorSpaceWidget*
		constexpr auto RadialMenuThrowWidget = 0x4d8; // UCrowRadialMenuThrowWidget*
		constexpr auto RadialMenuHealKitWidget = 0x4e0; // UCrowRadialMenuHealKitWidget*
		constexpr auto RadialMenuSprayWidget = 0x4e8; // UCrowRadialMenuSprayWidget*
		constexpr auto RadialMenuPingWidget = 0x4f0; // UCrowRadialMenuPingWidget*
		constexpr auto RadialMenuEmotionWidget = 0x4f8; // UCrowRadialMenuEmotionWidget*
		constexpr auto ScoreBoardWidget = 0x500; // UCrowWidgetBase*
		constexpr auto CountdownWidget = 0x508; // UCrowCountdownWidget*
		constexpr auto FadeScreenWidget = 0x510; // UCrowFadeScreenWidget*
		constexpr auto CrowLootInventory = 0x518; // UCrowBattleInventoryLoot*
		constexpr auto RequireMineralWidget = 0x520; // UCrowRequirePointWidget*
		constexpr auto RequireBattleMoneyWidget = 0x528; // UCrowRequirePointWidget*
		constexpr auto ResultSceneWidget = 0x530; // UCrowResultSceneWidget*
		constexpr auto ESCMenuWidget = 0x538; // UCrowESCMenuWidget*
		constexpr auto InputGuideWidget = 0x540; // UCrowWidgetBase*
		constexpr auto DialogTooltipWidget = 0x548; // UCrowDialogTooltip*
		constexpr auto GameResultWidget = 0x550; // UCrowWidgetBase*
		constexpr auto ChatWidget = 0x558; // UCrowChatWidget*
		constexpr auto ToolTipWidget = 0x560; // UCrowWidgetTooltip*
		constexpr auto CustomCursorSpace = 0x568; // UCrowCustomCursorSpaceWidget*
		constexpr auto SquadWidget = 0x570; // UCrowSquadWidget*
		constexpr auto InGameModeGuideWidget = 0x578; // UCrowInGameModeGuideWidget*
		constexpr auto GasMaskFilterWidget = 0x580; // UCrowGasMaskFilterWidget*
		constexpr auto FlashBangFxWidget = 0x588; // UCrowFlashBangFxWidget*
		constexpr auto ExplosionFxWidget = 0x590; // UCrowFlashBangFxWidget*
		constexpr auto IsVehicleMode = 0x598; // bool
		constexpr auto SceneGame = 0x5a0; // ACrowSceneGame*
		constexpr auto PreCameraTarget = 0x5a8; // AActor*
		constexpr auto PrevSpectatorCameraMode = 0x5b0; // char
		constexpr auto CurrentAttachedWeapon = 0x5b8; // ACrowWeaponBase*
		constexpr auto AttachedWeaponCrosshairWidget = 0x5c0; // UCrowWeaponCrosshairBase*
		constexpr auto SpectatorModeWidget = 0x5c8; // UCrowSpectatorWidget*
		constexpr auto SpectatorCustomModeWidget = 0x5d0; // UCrowSpectatorCustomModeWidget*
		constexpr auto bIsSpectatorMode = 0x5d8; // bool
		constexpr auto MissionComplatePopup = 0x5e0; // UCrowMissionComplatePopup*
	}

	namespace n_ACrowGameHUD_SquadMatch {
		constexpr auto MainWidgetClassSquadMatch = 0x5f0; // UCrowHUDWidgetSquadMatch*
		constexpr auto SquadLoadoutWidgetClass = 0x5f8; // UCrowSquadLoadoutWidget*
		constexpr auto LoadoutBoxWidgetClass = 0x600; // UCrowSelectLoadoutBoxWidget*
		constexpr auto SquadSummaryWidgetClass = 0x608; // UCrowSquadSummaryWidget*
		constexpr auto GameOverWidgetClass = 0x610; // UCrowGameResultSquadRankWidget*
		constexpr auto SquadMatchRespawnWidgetClass = 0x618; // UCrowSquadMatchRespawnWidget*
		constexpr auto SquadMatchRespawnMsgWidgetClass = 0x620; // UCrowSquadMatchRespawnMsgWidget*
		constexpr auto EscapeTimerClass = 0x628; // UCrowSquadNotiWidget*
		constexpr auto ReturnTimerClass = 0x630; // UCrowSquadNotiWidget*
		constexpr auto EscapeArrivalClass = 0x638; // UCrowSquadNotiWidget*
		constexpr auto EscapeEmergencyClass = 0x640; // UCrowSquadNotiWidget*
		constexpr auto RadialMenuSquadMatchClass = 0x648; // UCrowRadialMenuSquadMatch*
		constexpr auto PlayCountdownSound = 0x650; // UAkAudioEvent*
		constexpr auto MainWidgetSquadMatch = 0x658; // UCrowHUDWidgetSquadMatch*
		constexpr auto SquadLoadoutWidget = 0x660; // UCrowSquadLoadoutWidget*
		constexpr auto LoadoutBoxWidget = 0x668; // UCrowSelectLoadoutBoxWidget*
		constexpr auto SquadSummaryWidget = 0x670; // UCrowSquadSummaryWidget*
		constexpr auto GameOverWidget = 0x678; // UCrowGameResultSquadRankWidget*
		constexpr auto SquadMatchRespawnWidget = 0x680; // UCrowSquadMatchRespawnWidget*
		constexpr auto SquadMatchRespawnMsgWidget = 0x688; // UCrowSquadMatchRespawnMsgWidget*
		constexpr auto EscapeTimerWidget = 0x690; // UCrowSquadNotiTimerWidget*
		constexpr auto ReturnTimerWidget = 0x698; // UCrowSquadNotiTimerWidget*
		constexpr auto EscapeArrivalWidget = 0x6a0; // UCrowSquadNotiWidget*
		constexpr auto EscapeEmergencyWidget = 0x6a8; // UCrowSquadNotiWidget*
		constexpr auto HUDState = 0x6b0; // ESquadHUDState
		constexpr auto RadialMenuSquadMatch = 0x6b8; // UCrowRadialMenuSquadMatch*
	}

	namespace n_ACrowGameStateBase {
		constexpr auto CrowPlayerArray = 0x298; // TArray<ACrowPlayerStateBase*>
		constexpr auto CrowObserverPlayerArray = 0x2a8; // TArray<ACrowPlayerStateBase*>
		constexpr auto StartCameraWorkTime = 0x2b8; // float
		constexpr auto TimeSync = 0x2c0; // UCrowRemainTimeSync*
		constexpr auto SquadArray = 0x2c8; // TArray<UCrowSquadInfo*>
		constexpr auto TotalBattleTime = 0x2d8; // float
		constexpr auto bIsDeleteWorldItem = 0x2dc; // bool
		constexpr auto RespawnTimeInfo = 0x2e0; // FCrowRespawnTimeInfo
		constexpr auto bIsShareAmmo = 0x2f4; // bool
		constexpr auto MissionAreaArray = 0x2f8; // TArray<ACrowMissionArea*>
		constexpr auto WaitRespawnAreaArray = 0x308; // TArray<ACrowMissionArea*>
		constexpr auto ResultSceneActor = 0x318; // ACrowResultSceneInfo*
		constexpr auto RespawnFixInvenArray = 0x320; // TArray<ACrowRespawnPickupInventory*>
		constexpr auto ItemSpawnerGridActor = 0x330; // ACrowItemSpawnerGridActor*
		constexpr auto DeathZoneManager = 0x338; // UCrowDeathZoneManager*
		constexpr auto VehicleSpawnerGroup = 0x340; // ACrowVehicleSpawnerGroup*
		constexpr auto LevelSequencePlayer = 0x348; // UCrowLevelSequencePlayer*
		constexpr auto HandleEndSequence = 0x350; // FTimerHandle
		constexpr auto AssetReferenceCounts = 0x358; // TMap<UObject*, int32_t>
		constexpr auto WaitUserSpawnerCount = 0x3b0; // FCrowActiveSpawnerCount
		constexpr auto MatchSpawnerCount = 0x3d4; // FCrowActiveSpawnerCount
	}

	namespace n_UCrowObjectiveSquadMatchWidget {
		constexpr auto PB_ResourceCount = 0x348; // UProgressBar*
		constexpr auto TB_CurrencyCount = 0x350; // UTextBlock*
		constexpr auto TB_TagetCurrency = 0x358; // UTextBlock*
		constexpr auto CP_CuonRewardBox = 0x360; // UCanvasPanel*
		constexpr auto RewardItemClass = 0x368; // UCrowSquadPointRewardItemWidget*
		constexpr auto AniFull = 0x370; // UWidgetAnimation*
		constexpr auto AniChange = 0x378; // UWidgetAnimation*
		constexpr auto RewardItemArray = 0x380; // TArray<UCrowSquadPointRewardItemWidget*>
	}

	namespace n_ACrowProjectileIncendiaryGrenade {
		constexpr auto FireCollisionComp = 0x18d0; // UCapsuleComponent*
		constexpr auto SparkCollisionComp = 0x18d8; // UCapsuleComponent*
		constexpr auto IncendiaryParticle = 0x18e0; // UParticleSystem*
		constexpr auto TimeToActivation = 0x18e8; // float
		constexpr auto RunningTime = 0x18ec; // float
		constexpr auto ActivateDamageTimeSecond = 0x18f0; // float
		constexpr auto VehicleDamageRate = 0x18f4; // float
		constexpr auto FireRadius = 0x18f8; // float
		constexpr auto FireHalfHeight = 0x18fc; // float
		constexpr auto FireDamage = 0x1900; // float
		constexpr auto SparkRadius = 0x1904; // float
		constexpr auto SparkHalfHeight = 0x1908; // float
		constexpr auto SparkDamageMin = 0x190c; // float
		constexpr auto SparkDamageMax = 0x1910; // float
		constexpr auto EllipseTime = 0x1914; // float
		constexpr auto ActivatedDamage = 0x1918; // bool
		constexpr auto EffectStartSound_W = 0x1920; // UAkAudioEvent*
		constexpr auto EffectLoopSound_W = 0x1928; // UAkAudioEvent*
		constexpr auto EffectEndSound_W = 0x1930; // UAkAudioEvent*
		constexpr auto OverlapFireMap = 0x1938; // TMap<FString, AActor*>
		constexpr auto OverlapSparkMap = 0x1988; // TMap<FString, AActor*>
		constexpr auto IncendiaryParticleComp = 0x19d8; // UParticleSystemComponent*
		constexpr auto bExplosion = 0x19e0; // bool
		constexpr auto bDestroy = 0x19e1; // bool
		constexpr auto AkComponent = 0x19e8; // UAkComponent*
	}

	namespace n_UCrowVehicleCrosshairM1Machinegun {
		constexpr auto OverheatingCurve = 0x428; // UCurveLinearColor*
		constexpr auto WeaponInfoWidget = 0x430; // UCrowWeaponInfoWidget*
	}

	namespace n_ACrowWorldSyncHubActor {
		constexpr auto HubRoot = 0x220; // USceneComponent*
		constexpr auto FoliageParamSetting = 0x228; // UCrowFoliageParamSetting*
		constexpr auto CrowSyncEnabled = 0x230; // bool
		constexpr auto SyncHubConfig = 0x238; // UCrowWorldSyncHubConfig*
		constexpr auto LoadAllLevelsBeforeCollect = 0x240; // bool
		constexpr auto ShowStatisticsPersistentLevel = 0x241; // bool
		constexpr auto WorldDestroyer = 0x248; // UCrowWorldDestroyer*
		constexpr auto CrowGlobalParamCollection = 0x250; // UMaterialParameterCollection*
		constexpr auto BoundingBoxExtents = 0x258; // FVector
		constexpr auto WorldOrigin2D = 0x264; // FVector2D
		constexpr auto SyncAreaSize = 0x26c; // float
		constexpr auto SyncAreaDistance = 0x270; // int32_t
		constexpr auto SyncNodeSize = 0x274; // float
		constexpr auto SyncNodeDistance = 0x278; // int32_t
		constexpr auto ClientNodeDistance = 0x27c; // int32_t
		constexpr auto OverrideBuildingBP = 0x280; // TArray<UBlueprint*>
		constexpr auto SkipBuilding = 0x290; // bool
		constexpr auto SkipBuildingProps = 0x291; // bool
		constexpr auto SkipWorldProps = 0x292; // bool
		constexpr auto ShowIndestructible = 0x293; // bool
		constexpr auto InstancedFoliageRequiredCount = 0x294; // int32_t
		constexpr auto ClientCameraInfo = 0x2a0; // FCrowWorldSyncCameraInfo
		constexpr auto IsWorldReadyToInitHub = 0x310; // bool
		constexpr auto HubInitialized = 0x311; // bool
		constexpr auto SphereMesh = 0x318; // UStaticMeshComponent*
		constexpr auto BoundingBox = 0x320; // UBoxComponent*
		constexpr auto CachedCameraLocation2D = 0x328; // FVector2D
		constexpr auto CachedTileCount = 0x330; // int32_t
		constexpr auto CachedTileInitCount = 0x334; // int32_t
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UCrowZombieComponent {
		constexpr auto CharacterPawn = 0xb0; // ACrowCharacterPawn*
		constexpr auto EnergyGaugeWidget = 0xb8; // UCrowZombieEnergyGaugeWidget*
		constexpr auto PostProcessComp = 0xc0; // UCrowLocalPostProcessComponent*
		constexpr auto ZombieInfo = 0xd0; // FCrowZombieInfo
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UWB_Scope_Type_02_C {
		constexpr auto Ani_Aim_3 = 0x370; // UWidgetAnimation*
		constexpr auto Ani_Shot3 = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Shot4 = 0x380; // UWidgetAnimation*
		constexpr auto Ani_Shot = 0x388; // UWidgetAnimation*
		constexpr auto Ani_Shot1 = 0x390; // UWidgetAnimation*
		constexpr auto Ani_Aim = 0x398; // UWidgetAnimation*
		constexpr auto Image_98 = 0x3a0; // UImage*
	}

	namespace n_ABP_Grenade_M26Ammo_C {
		constexpr auto SK_G67_02 = 0x18d0; // USkeletalMeshComponent*
		constexpr auto DynamicRicochet_Trail_Generic_thin = 0x18d8; // UParticleSystemComponent*
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UAkAssetBase {
		constexpr auto PlatformAssetData = 0x40; // UAkAssetPlatformData*
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UCrowDeathInfoWidget {
		constexpr auto TB_Killer = 0x348; // UTextBlock*
		constexpr auto IMG_RankIcon = 0x350; // UCrowWidgetImage*
		constexpr auto IMG_Weapon = 0x358; // UCrowWidgetImage*
		constexpr auto TB_WeaponName = 0x360; // UTextBlock*
		constexpr auto CP_Squad = 0x368; // UCanvasPanel*
		constexpr auto IMG_SquadColor = 0x370; // UImage*
		constexpr auto TB_SquadNum = 0x378; // UTextBlock*
		constexpr auto UnknownID = 0x380; // FText
	}

	namespace n_UCrowDeconstructSlotWidget {
		constexpr auto IMG_Icon = 0x348; // UImage*
		constexpr auto IMG_Selected = 0x350; // UImage*
		constexpr auto BT_Slot = 0x358; // UCrowButton*
		constexpr auto WS_Grade = 0x360; // UWidgetSwitcher*
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UCrowReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x298; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UCrowMissionSlotWidget {
		constexpr auto WS_MissionProgress = 0x348; // UWidgetSwitcher*
		constexpr auto TB_SlotName = 0x350; // UTextBlock*
		constexpr auto TB_Count = 0x358; // UTextBlock*
		constexpr auto TB_GoalCount = 0x360; // UTextBlock*
		constexpr auto IMG_Reward00 = 0x368; // UImage*
		constexpr auto IMG_Reward01 = 0x370; // UImage*
		constexpr auto IMG_Reward02 = 0x378; // UImage*
		constexpr auto IMG_Reward03 = 0x380; // UImage*
		constexpr auto IMG_Reward04 = 0x388; // UImage*
		constexpr auto BT_SlotHover = 0x390; // UCrowButton*
		constexpr auto IMG_Blue = 0x398; // UImage*
		constexpr auto IMG_BG = 0x3a0; // UImage*
		constexpr auto IMG_Select = 0x3a8; // UImage*
		constexpr auto RewardImageArray = 0x3b0; // TArray<UImage*>
		constexpr auto MissionInfo = 0x3c0; // FCrowMissionInfo
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_UCrowCustomCursorBase {
		constexpr auto ClickSound = 0x348; // UAkAudioEvent*
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UAkGameObject {
		constexpr auto AkAudioEvent = 0x1f8; // UAkAudioEvent*
		constexpr auto EventName = 0x200; // FString
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UCrowCustomizeItemListMiniWidget {
		constexpr auto GD_ItemList = 0x348; // UGridPanel*
		constexpr auto SceneLobby = 0x350; // ACrowSceneLobby*
		constexpr auto CurrentCategorySlotBigWidget = 0x358; // UCrowCategorySlotBigWidget*
		constexpr auto NotSave = 0x360; // bool
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UCrowMercenaryLevelTableManager {
		constexpr auto MercenaryLevelData = 0x28; // TMap<int32_t, FCrowMercenaryLevelTableRow>
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UCrowTankFreeSightComponent {
		constexpr auto IsReversePitchAxis = 0x1f8; // bool
		constexpr auto YawMultiplier = 0x1fc; // float
		constexpr auto PitchMultiplier = 0x200; // float
		constexpr auto MinPitch = 0x204; // float
		constexpr auto MaxPitch = 0x208; // float
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_ACrowConqeustChinookSpawner {
		constexpr auto SpawnDelay = 0x250; // float
	}

	namespace n_UCrowLoadoutInfoWidget {
		constexpr auto WB_WeaponInfo_Primary_2 = 0x348; // UCrowInvenWeaponInfoWidget*
		constexpr auto WB_WeaponInfo_Primary_3 = 0x350; // UCrowInvenWeaponInfoWidget*
		constexpr auto WB_WeaponInfo_Sub = 0x358; // UCrowInvenWeaponInfoWidget*
		constexpr auto WB_SubWeapon_Slot1 = 0x360; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_SubWeapon_Slot2 = 0x368; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_SubWeapon_Slot3 = 0x370; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_SubWeapon_Slot4 = 0x378; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WeaponWidgetList = 0x380; // TArray<UCrowWeaponListItemBase*>
	}

	namespace n_UCrowZeroingWidget {
		constexpr auto TB_Zeroing_Distance = 0x348; // UTextBlock*
		constexpr auto CP_HoldBreath = 0x350; // UCanvasPanel*
		constexpr auto CP_ZoomDistance = 0x358; // UCanvasPanel*
	}

	namespace n_UCrowFriendsWidget {
		constexpr auto BT_FriendSetting = 0x348; // UCrowButton*
		constexpr auto BT_FriendExit = 0x350; // UCrowButton*
		constexpr auto BT_FriendSearch = 0x358; // UCrowButton*
		constexpr auto WB_FriendTabMenu = 0x360; // UCrowFriendTabMenuWidget*
		constexpr auto WS_FriendTabList = 0x368; // UWidgetSwitcher*
		constexpr auto SCB_Friend_List = 0x370; // UScrollBox*
		constexpr auto SCB_Recent_List = 0x378; // UScrollBox*
		constexpr auto SCB_Party_List = 0x380; // UScrollBox*
		constexpr auto ETB_Search = 0x388; // UEditableTextBox*
		constexpr auto TB_FriendOnLine = 0x390; // UTextBlock*
		constexpr auto TB_FriendOnLine_Count = 0x398; // UTextBlock*
		constexpr auto BT_ToggleList_OnLine = 0x3a0; // UCrowToggleButton*
		constexpr auto SB_FriendSlotList_OnLine = 0x3a8; // UScrollBox*
		constexpr auto TB_FriendOffLine = 0x3b0; // UTextBlock*
		constexpr auto TB_FriendOffLine_Count = 0x3b8; // UTextBlock*
		constexpr auto BT_ToggleList_OffLine = 0x3c0; // UCrowToggleButton*
		constexpr auto SB_FriendSlotList_OffLine = 0x3c8; // UScrollBox*
		constexpr auto WS_PromoteMode = 0x3d0; // UWidgetSwitcher*
		constexpr auto BT_PartyExit = 0x3d8; // UCrowButton*
		constexpr auto BT_PromoteCancel = 0x3e0; // UCrowButton*
		constexpr auto FriendSlotWidgetClass = 0x3e8; // UCrowFriendSlotWidget*
		constexpr auto CurrentTabType = 0x3f0; // EFriendTabType
		constexpr auto SceneLobby = 0x3f8; // ACrowSceneLobby*
		constexpr auto PromoteMode = 0x400; // bool
	}

	namespace n_UWB_ClaymoreMine_Indicator_C {
		constexpr auto Ani_Active_In6m = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Active_Out6m = 0x380; // UWidgetAnimation*
		constexpr auto IMG_LocateArrow = 0x388; // UImage*
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UCrowReplicationGraph {
		constexpr auto SpatializedClasses = 0x498; // TArray<UObject*>
		constexpr auto NonSpatializedChildClasses = 0x4a8; // TArray<UObject*>
		constexpr auto AlwaysRelevantClasses = 0x4b8; // TArray<UObject*>
		constexpr auto GridNode = 0x4c8; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto PawnNode = 0x4d0; // UReplicationGraphNode*
		constexpr auto AlwaysRelevantNode = 0x4d8; // UReplicationGraphNode*
		constexpr auto PlayerStateNode = 0x4e0; // UCrowReplicationGraphNode_PlayerStateFrequencyLimiter*
	}

	namespace n_ACrowWorldSplinePainterVolume {
		constexpr auto Volume = 0x220; // UBoxComponent*
		constexpr auto BoxExtent = 0x228; // FVector
		constexpr auto RandomMin = 0x234; // float
		constexpr auto RandomMax = 0x238; // float
		constexpr auto PaintParameter = 0x23c; // FCrowMeshPaintParameters
		constexpr auto DebugTotalPoints = 0x25c; // int32_t
		constexpr auto PaintedPosition = 0x260; // TArray<FVector>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UWB_Scope_Telescope_C {
		constexpr auto Ani_Aim_3 = 0x370; // UWidgetAnimation*
		constexpr auto Ani_Shot3 = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Shot4 = 0x380; // UWidgetAnimation*
		constexpr auto Ani_Shot = 0x388; // UWidgetAnimation*
		constexpr auto Ani_Shot1 = 0x390; // UWidgetAnimation*
		constexpr auto Ani_Aim = 0x398; // UWidgetAnimation*
		constexpr auto Image_98 = 0x3a0; // UImage*
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceVelocityGrid {
		constexpr auto GridSize = 0xd8; // FIntVector
	}

	namespace n_ACrowProjectileThrow {
		constexpr auto ExplosionTime = 0x17d0; // float
		constexpr auto vAngularImpulse = 0x17d4; // FVector
		constexpr auto WeightInKg = 0x17e0; // float
		constexpr auto LinearDamping = 0x17e4; // float
		constexpr auto AngularDamping = 0x17e8; // float
		constexpr auto PhysicalMaterialOverride = 0x17f0; // UPhysicalMaterial*
		constexpr auto ThrowVelocityFactorCurve = 0x17f8; // UCurveFloat*
		constexpr auto bIgnoreDestroyedExplosion = 0x1800; // bool
		constexpr auto WaterDampingFactor = 0x1804; // float
		constexpr auto CameraShake = 0x1808; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x1810; // float
		constexpr auto CameraShakeMaxDistance = 0x1814; // float
		constexpr auto IsShowExplosionWidget = 0x1818; // bool
		constexpr auto LoopSound = 0x1820; // UAkAudioEvent*
		constexpr auto EndSound = 0x1828; // UAkAudioEvent*
		constexpr auto IconDisplayInfoProjectileThrow = 0x1830; // FCrowGameIconDisplayInfo
		constexpr auto IconLocation = 0x18b8; // USceneComponent*
		constexpr auto bIsRightClickAction = 0x18c0; // bool
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_ACrowSupplyWeaponActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto SupplyBoxType = 0x230; // ECrowSupplyBoxType
		constexpr auto WeaponSetting = 0x238; // FCrowTestWeapon
		constexpr auto UseSound = 0x278; // UAkAudioEvent*
		constexpr auto IconDisplayInfo = 0x280; // FCrowGameIconDisplayInfo
		constexpr auto WeaponBoxStaticMeshComponent = 0x308; // UStaticMeshComponent*
		constexpr auto SupplyWeapon = 0x310; // ACrowWeaponBase*
	}

	namespace n_UCrowCharacterAnimator {
		constexpr auto CharacterAnimationTable = 0xb0; // UDataTable*
		constexpr auto AI_Mesh3P = 0xb8; // UAnimInstance*
		constexpr auto AI_Mesh1PLowBody = 0xc0; // UAnimInstance*
		constexpr auto AI_Mesh1PArm = 0xc8; // UAnimInstance*
		constexpr auto bIsAnimInstanceInitialized = 0xd0; // char : 1
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UCrowListItemVehicleSkin {
		constexpr auto HB_ShopInfo = 0x4e8; // UHorizontalBox*
		constexpr auto TB_Label_Back = 0x4f0; // UTextBlock*
		constexpr auto VehicleSkinTable = 0x4f8; // FCrowVehicleSkinTableRow
		constexpr auto ShopTableData = 0x6b0; // FCrowShopTableRow
		constexpr auto IsShopList = 0x728; // bool
	}

	namespace n_UCrowWorldMap {
		constexpr auto WorldSize = 0x384; // FVector2D
		constexpr auto IconArray = 0x390; // TArray<UCrowWorldMapIcon*>
		constexpr auto IconWidgetMap = 0x3a0; // TMap<uint32_t, UCrowWidgetBase*>
		constexpr auto CP_MapImage = 0x3f0; // UCanvasPanel*
		constexpr auto CP_Location = 0x3f8; // UCanvasPanel*
		constexpr auto CP_Grid = 0x400; // UCanvasPanel*
		constexpr auto LinePanel = 0x408; // UCanvasPanel*
		constexpr auto IconPanel = 0x410; // UCanvasPanel*
		constexpr auto IMG_Map = 0x418; // UImage*
		constexpr auto IMG_Ping = 0x420; // UImage*
		constexpr auto IMG_SupplyPing = 0x428; // UImage*
		constexpr auto CP_MapGridLangh = 0x430; // UCanvasPanel*
		constexpr auto CP_MapGridLanghMeter = 0x438; // UCanvasPanel*
		constexpr auto TB_GridSize = 0x440; // UTextBlock*
		constexpr auto TB_GridSizeMeter = 0x448; // UTextBlock*
		constexpr auto GasAreaPanel = 0x450; // UCanvasPanel*
		constexpr auto GridKm = 0x458; // UCrowWorldMapGridWidget*
		constexpr auto GridM = 0x460; // UCrowWorldMapGridWidget*
		constexpr auto GridLocation = 0x468; // UCrowWorldMapLocationWidget*
		constexpr auto WB_BombardRoute = 0x470; // UCrowBomBardRouteWidget*
		constexpr auto PanelSize = 0x478; // UImage*
		constexpr auto ConquestLineClass = 0x480; // UCrowConquestLineWidget*
		constexpr auto LimitSize = 0x488; // FVector2D
		constexpr auto MapStartPos = 0x490; // FVector2D
		constexpr auto MapType = 0x498; // EMapType
		constexpr auto KMGridColor = 0x49c; // FLinearColor
		constexpr auto MGridColor = 0x4ac; // FLinearColor
		constexpr auto MaxZoomMultiply = 0x4bc; // float
		constexpr auto LerpsTime = 0x4c0; // float
		constexpr auto ZoomSpeed = 0x4c4; // float
		constexpr auto MapSizeDefault = 0x4c8; // FVector2D
		constexpr auto MapSizeCurrent = 0x4d0; // FVector2D
		constexpr auto MapSizeMax = 0x4d8; // FVector2D
		constexpr auto ArrayZoomMultiply = 0x4e0; // TArray<float>
		constexpr auto ArrayWorldMapZoomMultiply = 0x4f0; // TArray<float>
		constexpr auto ArrayMinimapZoomMultiply = 0x500; // TArray<float>
		constexpr auto ScreenSize = 0x510; // FVector2D
		constexpr auto ZoomPosition = 0x518; // FVector2D
		constexpr auto SelectMouseMapPos = 0x520; // FVector2D
		constexpr auto CurrentMouseMapPos = 0x528; // FVector2D
		constexpr auto StartBombingPos = 0x530; // FVector2D
		constexpr auto SelectMouseWorldPos = 0x538; // FVector
		constexpr auto bIsCheckMapReady = 0x544; // bool
		constexpr auto bIsObjectReady = 0x545; // bool
		constexpr auto ClipingPanelSlot = 0x548; // UCanvasPanelSlot*
		constexpr auto LocationPanelSlot = 0x550; // UCanvasPanelSlot*
		constexpr auto GridLenthPanelSlot = 0x558; // UCanvasPanelSlot*
		constexpr auto GridLenthPanelSlotMeter = 0x560; // UCanvasPanelSlot*
		constexpr auto ConquestLineLink = 0x568; // UCrowConquestLineLink*
		constexpr auto PrevMagnification = 0x570; // float
		constexpr auto Magnification = 0x574; // float
		constexpr auto MaxMagnification = 0x578; // float
		constexpr auto CurrentTime = 0x57c; // float
		constexpr auto PivotTime = 0x580; // float
		constexpr auto CurrentZoomIndex = 0x584; // int32_t
		constexpr auto IsEnableIconScale = 0x588; // bool
		constexpr auto TopLeftPos = 0x58c; // FVector
		constexpr auto BottomRightPos = 0x598; // FVector
		constexpr auto CharacterPosAddValue = 0x5a4; // FVector
		constexpr auto BombingAreaSize = 0x5b0; // FVector2D
		constexpr auto bIsEnableZoom = 0x5b8; // bool
		constexpr auto GridScale = 0x5bc; // float
		constexpr auto SelectPivot = 0x5c0; // FVector2D
		constexpr auto bIsMoving = 0x5cb; // bool
		constexpr auto OriginMousePos = 0x5cc; // FVector2D
		constexpr auto OriginMapPos = 0x5d4; // FVector2D
		constexpr auto PrevMapPos = 0x5dc; // FVector2D
		constexpr auto BombingTopLeft = 0x5e4; // FVector
		constexpr auto BombingBottomRight = 0x5f0; // FVector
		constexpr auto SupplyPingPivot = 0x5fc; // FVector2D
		constexpr auto BombingPivot = 0x604; // FVector2D
		constexpr auto SupplySpawnDistance = 0x60c; // float
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UCrowSquadPointRewardItemWidget {
		constexpr auto TB_GoalCount = 0x348; // UTextBlock*
		constexpr auto IMG_Bar = 0x350; // UImage*
		constexpr auto IMG_BG = 0x358; // UImage*
		constexpr auto IMG_Icon_Item = 0x360; // UImage*
		constexpr auto IMG_Icon_Loadout = 0x368; // UImage*
		constexpr auto IMG_Icon_Vehicle = 0x370; // UImage*
		constexpr auto WS_RewardType = 0x378; // UWidgetSwitcher*
	}

	namespace n_ACrowLobbyObjectBider {
		constexpr auto CharacterCustomActors = 0x220; // TArray<AActor*>
		constexpr auto VehicleCustomActors = 0x230; // TArray<AActor*>
		constexpr auto SprayCustomActors = 0x240; // TArray<AActor*>
		constexpr auto CharacterCustom_Camera = 0x250; // AActor*
		constexpr auto CharacterEmotion_Camera = 0x258; // AActor*
		constexpr auto CharacterAppearance_Camera = 0x260; // AActor*
		constexpr auto CharacterrTattooArm_Camera = 0x268; // AActor*
		constexpr auto CharacterCustom_SpawnPoint = 0x270; // AActor*
		constexpr auto CharacterPreview_Camera = 0x278; // AActor*
		constexpr auto Loadout_Camera = 0x280; // AActor*
		constexpr auto WeaponLocation_Primary = 0x288; // AActor*
		constexpr auto WeaponLocation_Secondary = 0x290; // AActor*
		constexpr auto WeaponLocation_Melee = 0x298; // AActor*
		constexpr auto WeaponLocation_Throw1 = 0x2a0; // AActor*
		constexpr auto WeaponLocation_Throw2 = 0x2a8; // AActor*
		constexpr auto VehicleSkin_RootActor = 0x2b0; // AActor*
		constexpr auto VehicleSkin_Spawner = 0x2b8; // ACrowVehicleSpawner*
		constexpr auto VehicleSkin_Camera_Near = 0x2c0; // ACameraActor*
		constexpr auto VehicleSkin_Camera_Far = 0x2c8; // ACameraActor*
		constexpr auto VehicleSkinPreview_Camera_Near = 0x2d0; // ACameraActor*
		constexpr auto VehicleSkinPreview_Camera_Far = 0x2d8; // ACameraActor*
		constexpr auto ParachuteSkin_RootActor = 0x2e0; // AActor*
		constexpr auto ParachuteSkin_Spawner = 0x2e8; // ACrowSkydivingSpawner*
		constexpr auto SprayCustom_Camera = 0x2f0; // AActor*
		constexpr auto SprayCustom_SpawnPoint = 0x2f8; // AActor*
		constexpr auto CameraCharacter_Eye = 0x300; // AActor*
		constexpr auto CameraCharacter_Upper = 0x308; // AActor*
		constexpr auto CameraCharacter_Lower = 0x310; // AActor*
		constexpr auto CameraChangingTime = 0x318; // float
		constexpr auto UseCustomCharacterRotation = 0x31c; // bool
		constexpr auto CustomCharacterRotationSpeed = 0x320; // float
		constexpr auto Rotation_LeftAnimations = 0x328; // UAnimMontage*
		constexpr auto Rotation_RightAnimations = 0x330; // UAnimMontage*
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UCombineMeshesTool {
		constexpr auto BasicProperties = 0x90; // UCombineMeshesToolProperties*
		constexpr auto HandleSourceProperties = 0x98; // UOnAcceptHandleSourcesProperties*
	}

	namespace n_UFixedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UCrowRotorConfigHeli {
		constexpr auto Setting = 0x28; // FCrowRotorBodySetting
		constexpr auto Setting_Accel = 0xc8; // FCrowRotorBodySetting
	}

	namespace n_UCrowCharacterAimComponent {
		constexpr auto PrimarySightPart = 0x108; // UCrowWeaponPartsPrimarySight*
		constexpr auto SecondarySightPart = 0x110; // UCrowWeaponPartsPrimarySight*
		constexpr auto CurrentSightPart = 0x118; // UCrowWeaponPartsPrimarySight*
		constexpr auto ZoomWidget = 0x120; // UCrowWeaponZoomWidget*
		constexpr auto PostProcessComp = 0x128; // UCrowLocalPostProcessComponent*
		constexpr auto WeaponRootTransform = 0x130; // FTransform
		constexpr auto CharacterPawn = 0x160; // ACrowCharacterPawn*
		constexpr auto AimCurveX = 0x168; // UCurveFloat*
		constexpr auto AimCurveY = 0x170; // UCurveFloat*
		constexpr auto DOFComponent = 0x178; // UCrowDOFComponent*
		constexpr auto AimEventArray = 0x180; // TArray<FCrowAimEvent>
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UCrowSettingsSlotSelectionWidget {
		constexpr auto SelectionDatas = 0x348; // TArray<FString>
		constexpr auto SelectedIndex = 0x358; // int32_t
		constexpr auto BT_Prev = 0x360; // UCrowButton*
		constexpr auto BT_Next = 0x368; // UCrowButton*
		constexpr auto TB_SelectedItem = 0x370; // UTextBlock*
		constexpr auto OwnerSlot = 0x378; // UCrowSettingsSlotWidget*
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UCrowMapSelectButtonWidget {
		constexpr auto IMG_Map = 0x348; // UImage*
		constexpr auto TB_MapName = 0x350; // UTextBlock*
		constexpr auto TB_MapName_Select = 0x358; // UTextBlock*
		constexpr auto CTB_Mod_MapSelect = 0x360; // UCrowToggleButton*
		constexpr auto CP_Lock = 0x368; // UCanvasPanel*
		constexpr auto CTB_CheckBox = 0x370; // UCrowToggleButton*
		constexpr auto SceneTableRow = 0x398; // FCrowSceneTableRow
	}

	namespace n_UCrowWeaponCrosshairBase {
		constexpr auto CrosshairColor = 0x350; // FLinearColor
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_ACrowDoorActor {
		constexpr auto Mesh = 0x220; // UStaticMeshComponent*
		constexpr auto Play = 0x228; // bool
		constexpr auto Closed = 0x229; // bool
		constexpr auto ElapsedTime = 0x22c; // float
		constexpr auto TotalAnimationTime = 0x230; // float
		constexpr auto StartRotator = 0x234; // FRotator
		constexpr auto EndRotator = 0x240; // FRotator
	}

	namespace n_UWB_Scope_LockOn_C {
		constexpr auto Ani_Aim_3 = 0x3f8; // UWidgetAnimation*
		constexpr auto Ani_Shot3 = 0x400; // UWidgetAnimation*
		constexpr auto Ani_Shot4 = 0x408; // UWidgetAnimation*
		constexpr auto Ani_Shot = 0x410; // UWidgetAnimation*
		constexpr auto Ani_Shot1 = 0x418; // UWidgetAnimation*
		constexpr auto Ani_Aim = 0x420; // UWidgetAnimation*
		constexpr auto IMG_Area_2 = 0x428; // UImage*
		constexpr auto IMG_Bottom = 0x430; // UImage*
		constexpr auto IMG_Bottom_2 = 0x438; // UImage*
		constexpr auto IMG_CornerBL = 0x440; // UImage*
		constexpr auto IMG_CornerBL_2 = 0x448; // UImage*
		constexpr auto IMG_CornerBR = 0x450; // UImage*
		constexpr auto IMG_CornerBR_2 = 0x458; // UImage*
		constexpr auto IMG_CornerTL = 0x460; // UImage*
		constexpr auto IMG_CornerTL_2 = 0x468; // UImage*
		constexpr auto IMG_CornerTR = 0x470; // UImage*
		constexpr auto IMG_CornerTR_2 = 0x478; // UImage*
		constexpr auto IMG_FilterColor = 0x480; // UImage*
		constexpr auto IMG_FilterEffect = 0x488; // UImage*
		constexpr auto IMG_Left = 0x490; // UImage*
		constexpr auto IMG_Left_2 = 0x498; // UImage*
		constexpr auto IMG_Right = 0x4a0; // UImage*
		constexpr auto IMG_Right_2 = 0x4a8; // UImage*
		constexpr auto IMG_Top = 0x4b0; // UImage*
		constexpr auto IMG_Top_2 = 0x4b8; // UImage*
	}

	namespace n_UAkLinuxInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UCrowGradeInfoPopupWidget {
		constexpr auto IMG_Rank_Now = 0x348; // UCrowWidgetImage*
		constexpr auto TB_Rank_Now = 0x350; // UTextBlock*
		constexpr auto IMG_Rank_After = 0x358; // UCrowWidgetImage*
		constexpr auto TB_Rank_After = 0x360; // UTextBlock*
		constexpr auto PB_Level = 0x368; // UCrowProgressBar*
		constexpr auto TB_Level = 0x370; // UTextBlock*
		constexpr auto SB_Record_GradeListSlot_List = 0x378; // UScrollBox*
		constexpr auto BT_Close = 0x380; // UCrowButton*
		constexpr auto SlotWidgetClass = 0x388; // UCrowGradeInfoPopupSlotWidget*
	}

	namespace n_UCrowSquadLoadoutSlotGadgetWidget {
		constexpr auto BT_LoadoutSlot = 0x358; // UCrowButton*
		constexpr auto TB_ItemName = 0x360; // UTextBlock*
		constexpr auto TB_ItemCount = 0x368; // UTextBlock*
		constexpr auto IMG_ItemIcon = 0x370; // UImage*
		constexpr auto IMG_Selected = 0x378; // UImage*
		constexpr auto IMG_Equiped = 0x380; // UImage*
		constexpr auto TBItemName_Sel = 0x388; // UTextBlock*
		constexpr auto Selected = 0x390; // bool
		constexpr auto Equiped = 0x391; // bool
		constexpr auto SquadWeapon = 0x394; // FCrowSquadWeapon
		constexpr auto WeaponData = 0x3a0; // FCrowWeaponData
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_UCrowVehicleFacadeHeli {
		constexpr auto RotorType = 0xe0; // int32_t
		constexpr auto VehicleMovement = 0xe8; // UCrowVehicleMovementRotor*
		constexpr auto LastActorRotation = 0xf0; // FRotator
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_ABP_LockOnRocket_C {
		constexpr auto M4_Projectile_Root = 0x18d0; // USkeletalMeshComponent*
	}

	namespace n_UWB_SystemMessageBox_C {
		constexpr auto Image = 0x368; // UImage*
		constexpr auto Image_1 = 0x370; // UImage*
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UCrowWeaponPartsUnderBarrel {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsUnderBarrelTableRow
		constexpr auto DefaultPartsData = 0x628; // FCrowWeaponPartsUnderBarrelTableRow
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UCurveControlPointsMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto PreviewGeometryActor = 0x4e8; // APreviewGeometryActor*
		constexpr auto DrawnControlPoints = 0x4f0; // UPointSetComponent*
		constexpr auto DrawnControlSegments = 0x4f8; // ULineSetComponent*
		constexpr auto PreviewPoint = 0x500; // UPointSetComponent*
		constexpr auto PreviewSegment = 0x508; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x588; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x590; // UTransformGizmo*
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UMeshSculptToolBase {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto GizmoProperties = 0xc8; // UWorkPlaneProperties*
		constexpr auto BrushOpPropSets = 0x1b0; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto SecondaryBrushOpPropSets = 0x250; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto ViewProperties = 0x870; // UMeshEditingViewProperties*
		constexpr auto ActiveOverrideMaterial = 0x878; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicator = 0x880; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x888; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x890; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x898; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x8a0; // UTransformProxy*
	}

	namespace n_ACrowPickupInventory {
		constexpr auto PickupInvenItemList = 0x220; // TArray<ACrowItemBase*>
		constexpr auto PlayerNickName = 0x230; // FString
		constexpr auto InvenState = 0x240; // ECrowPickupInventoryState
		constexpr auto RemainTime = 0x244; // float
		constexpr auto BaseLimitTime = 0x248; // float
		constexpr auto bIsWorldSpawned = 0x24c; // bool
		constexpr auto BoxComponent = 0x250; // UBoxComponent*
		constexpr auto MeshComponent = 0x258; // TArray<UMeshComponent*>
		constexpr auto DynamicMaterialArray = 0x268; // TArray<UMaterialInstanceDynamic*>
		constexpr auto OwnerSpawner = 0x278; // ACrowItemSpawner*
		constexpr auto CorpseLootBoxLimitTime = 0x280; // float
		constexpr auto CorpseLootBoxDelayTime = 0x284; // float
		constexpr auto CorpseLootBoxFadeTime = 0x288; // float
		constexpr auto InvenUser = 0x290; // ACrowCharacterPawn*
	}

	namespace n_AUPSPatrolPoint {
		constexpr auto BillboardComponent = 0x228; // UBillboardComponent*
		constexpr auto PatrolPointSettings = 0x230; // FPatrolPointSettings
		constexpr auto ArrowComponent = 0x270; // UArrowComponent*
		constexpr auto PatrolPointLinks = 0x278; // TArray<FPatrolPointLink>
		constexpr auto BackwardPatrolPointLinks = 0x288; // TArray<FPatrolPointLink>
		constexpr auto CachedPatrolPointLinks = 0x298; // TArray<FPatrolPointLink>
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UCrowLobbyShopPopupWidget {
		constexpr auto WB_Shop_Popup_ExclusivePurchase_Quick = 0x348; // UCrowShoppingBagWidget*
		constexpr auto WB_Shop_Popup_ExclusivePurchase = 0x350; // UCrowShopPurchasePopup*
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UCrowZombieHealWidget {
		constexpr auto AniHeal = 0x348; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ACrowGameplayStarter {
		constexpr auto Radius = 0x220; // float
		constexpr auto SkipSubLevels = 0x228; // TArray<FString>
		constexpr auto ExceptLayers = 0x238; // TSet<FString>
		constexpr auto Sphere = 0x288; // USphereComponent*
		constexpr auto SphereMesh = 0x290; // UStaticMeshComponent*
		constexpr auto bPlayAllLevels = 0x298; // bool
		constexpr auto CollectedLevelNames = 0x2a0; // TSet<FString>
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2b4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2b8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2bc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c0; // int32_t
		constexpr auto CollisionRadius = 0x2c4; // float
		constexpr auto ShadeRadius = 0x2c8; // float
		constexpr auto NumSteps = 0x2cc; // int32_t
		constexpr auto InitialSeedDensity = 0x2d0; // float
		constexpr auto AverageSpreadDistance = 0x2d4; // float
		constexpr auto SpreadVariance = 0x2d8; // float
		constexpr auto SeedsPerStep = 0x2dc; // int32_t
		constexpr auto DistributionSeed = 0x2e0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2e4; // float
		constexpr auto bCanGrowInShade = 0x2e8; // bool
		constexpr auto bSpawnsInShade = 0x2e9; // bool
		constexpr auto MaxInitialAge = 0x2ec; // float
		constexpr auto MaxAge = 0x2f0; // float
		constexpr auto OverlapPriority = 0x2f4; // float
		constexpr auto ProceduralScale = 0x2f8; // FFloatInterval
		constexpr auto ScaleCurve = 0x300; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x388; // int32_t
		constexpr auto ReapplyDensity = 0x38c; // char : 1
		constexpr auto ReapplyRadius = 0x38c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x38c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x38c; // char : 1
		constexpr auto ReapplyScaling = 0x38c; // char : 1
		constexpr auto ReapplyScaleX = 0x38c; // char : 1
		constexpr auto ReapplyScaleY = 0x38c; // char : 1
		constexpr auto ReapplyScaleZ = 0x38c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x38d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x38d; // char : 1
		constexpr auto ReapplyHeight = 0x38d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x38d; // char : 1
		constexpr auto ReapplyZOffset = 0x38d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x38d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x38d; // char : 1
		constexpr auto bEnableDensityScaling = 0x38d; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x38e; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x390; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3a4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UCrowResultWeaponPartsSlotWidget {
		constexpr auto IMG_WeaponParts = 0x348; // UImage*
		constexpr auto TB_WeaponPartsName = 0x350; // UTextBlock*
		constexpr auto AniShow = 0x358; // UWidgetAnimation*
	}

	namespace n_UCrowTriggerCommandEnterVehicle {
		constexpr auto WaitAnimHandle = 0xc0; // FTimerHandle
		constexpr auto VehiclePawn = 0xc8; // ACrowVehiclePawn*
		constexpr auto CharacterPawn = 0xd0; // ACrowCharacterPawn*
	}

	namespace n_URemoveOccludedTrianglesOperatorFactory {
		constexpr auto Tool = 0x30; // URemoveOccludedTrianglesTool*
	}

	namespace n_UCrowVehicleWidgetSeatVisual {
		constexpr auto IMG_Vehicle_Base = 0x398; // UImage*
		constexpr auto TireList = 0x3a0; // TArray<UImage*>
		constexpr auto LowHPAnim = 0x3b0; // UWidgetAnimation*
	}

	namespace n_ACrowWeaponVehicle {
		constexpr auto bInitializeVehicleInfo = 0x1e10; // bool
		constexpr auto WeaponAnimGatlingComponent = 0x1e18; // UCrowWeaponAnimGatling*
		constexpr auto VehicleOwner = 0x1e20; // ACrowVehiclePawn*
		constexpr auto VehicleParam = 0x1e28; // UCrowVehicleParam*
		constexpr auto CharacterOwner = 0x1e30; // ACrowCharacterPawn*
		constexpr auto WeaponVehicleTable = 0x1e40; // FCrowWeaponVehicleTableRow
		constexpr auto SpringArmId = 0x3150; // char
		constexpr auto TurnAlpha = 0x3154; // float
		constexpr auto BarrelMoveAC = 0x3158; // UAudioComponent*
		constexpr auto BarrelMoveVolume = 0x3160; // float
		constexpr auto AkComponent = 0x3168; // UAkComponent*
		constexpr auto BarrelViewPoint = 0x3170; // FRotator
		constexpr auto IntervalBetweenViewToBarrel = 0x317c; // FRotator
		constexpr auto BarrelForward = 0x3188; // FRotator
		constexpr auto BarrelLerpSpeed = 0x3194; // float
		constexpr auto IgnoredActorList = 0x3198; // TArray<AActor*>
		constexpr auto StartBarrelViewPoint = 0x31a8; // FRotator
		constexpr auto EndBarrelViewPoint = 0x31b4; // FRotator
		constexpr auto BarrelViewPointAlpha = 0x31c0; // float
		constexpr auto StartAddedInputRotation = 0x31c4; // FRotator
		constexpr auto EndAddedInputRotation = 0x31d0; // FRotator
		constexpr auto AddedInputAlpha = 0x31dc; // float
		constexpr auto IncAddedInputAlpha = 0x31e0; // float
	}

	namespace n_UCrowWorldMapWidget {
		constexpr auto WB_Map = 0x368; // UCrowWorldMap*
		constexpr auto CP_HotKey = 0x370; // UCanvasPanel*
		constexpr auto CP_Legend_Training = 0x378; // UCanvasPanel*
		constexpr auto CP_Legend_SquadMatch = 0x380; // UCanvasPanel*
		constexpr auto CP_Legend_Conquest = 0x388; // UCanvasPanel*
		constexpr auto CP_SkillTitle_UAVPatrol = 0x390; // UCanvasPanel*
		constexpr auto CP_SkillTitle_HeavyStrike = 0x398; // UCanvasPanel*
		constexpr auto CP_SkillControl = 0x3a0; // UCanvasPanel*
		constexpr auto CP_SkillControl_UAVPatrol = 0x3a8; // UCanvasPanel*
		constexpr auto CP_SkillControl_HeavyStrike = 0x3b0; // UCanvasPanel*
		constexpr auto IMG_Key_CancelStrike = 0x3b8; // UImage*
		constexpr auto IMG_Key_CancelPatrol = 0x3c0; // UImage*
		constexpr auto BTN_PIE_Exit = 0x3c8; // UButton*
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UCrowKillFeedItemWidget {
		constexpr auto LocalPlayerState = 0x348; // ACrowPlayerStateBase*
		constexpr auto TB_Killer = 0x350; // UTextBlock*
		constexpr auto TB_Victim = 0x358; // UTextBlock*
		constexpr auto IMG_KillFeedIcon = 0x360; // UCrowWidgetImage*
		constexpr auto HB_KillFeedItem = 0x368; // UHorizontalBox*
		constexpr auto HB_HeadShot = 0x370; // UHorizontalBox*
		constexpr auto CP_Killer_Squad = 0x378; // UCanvasPanel*
		constexpr auto IMG_Killer_SquadColor = 0x380; // UImage*
		constexpr auto TB_Killer_SquadNum = 0x388; // UTextBlock*
		constexpr auto CP_Victim_Squad = 0x390; // UCanvasPanel*
		constexpr auto IMG_Victim_SquadColor = 0x398; // UImage*
		constexpr auto TB_Victim_SquadNum = 0x3a0; // UTextBlock*
		constexpr auto CP_Killer_Zombie = 0x3a8; // UCanvasPanel*
		constexpr auto CP_Victim_Zombie = 0x3b0; // UCanvasPanel*
		constexpr auto HideTimerHandle = 0x3b8; // FTimerHandle
		constexpr auto hideTimeDelaySecond = 0x3c0; // float
		constexpr auto hideSmoothSecond = 0x3c4; // float
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UCrowWorldMapIcon {
		constexpr auto IconType = 0x28; // ECrowWorldMapIconType
		constexpr auto TargetActor = 0x30; // AActor*
		constexpr auto ParentActor = 0x38; // AActor*
		constexpr auto IconWidgetArray = 0x40; // TArray<UCrowWidgetBase*>
		constexpr auto DisplayInfo = 0x50; // FCrowGameIconDisplayInfo
		constexpr auto IconOffset = 0xd8; // FVector2D
		constexpr auto bIsVisible = 0xe0; // bool
		constexpr auto EventParam = 0xe8; // FCrowEventParam
		constexpr auto bIsEnableScale = 0x118; // bool
		constexpr auto bIsUseMapScale = 0x119; // bool
		constexpr auto PingData = 0x120; // FCrowPingData
	}

	namespace n_UCrowHUDWidgetConquest {
		constexpr auto CP_ConquestIcon = 0x348; // UCanvasPanel*
		constexpr auto WB_MainMissionResult = 0x350; // UCrowMissionResultWidget*
		constexpr auto WB_ConquestPrepareMatch = 0x358; // UCrowPrepareMatchWidget*
		constexpr auto PB_PointRatio = 0x360; // UProgressBar*
		constexpr auto WB_ConquestOpeningEffect = 0x368; // UCrowConquestOpeningEffectWidget*
		constexpr auto WB_StatusSkill = 0x370; // UCrowWidgetBase*
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UEditPivotToolProperties {
		constexpr auto bEnableSnapDragging = 0x60; // bool
		constexpr auto RotationMode = 0x61; // EEditPivotSnapDragRotationMode
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UCrowBMPositionChangeWidget {
		constexpr auto TBMapName = 0x348; // UTextBlock*
		constexpr auto TBRound = 0x350; // UTextBlock*
		constexpr auto TBTeamPosition = 0x358; // UTextBlock*
		constexpr auto TBMyTeamName = 0x360; // UTextBlock*
		constexpr auto IMGMyTeamIcon = 0x368; // UImage*
		constexpr auto IMGMyTeamIconChange = 0x370; // UImage*
		constexpr auto IMGMyTeamBg00 = 0x378; // UImage*
		constexpr auto IMGMyTeamBg01 = 0x380; // UImage*
		constexpr auto IMGMyTeamBg02 = 0x388; // UImage*
		constexpr auto IMGMyTeamEffect00 = 0x390; // UImage*
		constexpr auto IMGMyTeamEffect01 = 0x398; // UImage*
		constexpr auto TBEnemyTeamName = 0x3a0; // UTextBlock*
		constexpr auto IMGEnemyTeamIcon = 0x3a8; // UImage*
		constexpr auto IMGEnemyTeamIconChange = 0x3b0; // UImage*
		constexpr auto IMGEnemyTeamBg = 0x3b8; // UImage*
		constexpr auto AniStart = 0x3c0; // UWidgetAnimation*
		constexpr auto AniStartMatchPoint = 0x3c8; // UWidgetAnimation*
		constexpr auto AttackerTeamIcon = 0x3d0; // UTexture2D*
		constexpr auto DefencerTeamIcon = 0x3d8; // UTexture2D*
		constexpr auto RedTeamBg00Color = 0x3e0; // FLinearColor
		constexpr auto RedTeamBg01Color = 0x3f0; // FLinearColor
		constexpr auto RedTeamBg02Color = 0x400; // FLinearColor
		constexpr auto RedTeamEffect00Color = 0x410; // FLinearColor
		constexpr auto RedTeamEffect01Color = 0x420; // FLinearColor
		constexpr auto BlueTeamBg00Color = 0x430; // FLinearColor
		constexpr auto BlueTeamBg01Color = 0x440; // FLinearColor
		constexpr auto BlueTeamBg02Color = 0x450; // FLinearColor
		constexpr auto BlueTeamEffect00Color = 0x460; // FLinearColor
		constexpr auto BlueTeamEffect01Color = 0x470; // FLinearColor
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_ACrowItemArmor {
		constexpr auto HP = 0x314; // float
		constexpr auto MaxHP = 0x318; // float
		constexpr auto ItemTable = 0x320; // FCrowArmorTableRow
		constexpr auto UseDefaultSettings = 0x4d8; // bool
		constexpr auto ArmorIndex = 0x4dc; // uint32_t
	}

	namespace n_USmoothHoleFillProperties {
		constexpr auto bConstrainToHoleInterior = 0x60; // bool
		constexpr auto RemeshingExteriorRegionWidth = 0x64; // int32_t
		constexpr auto SmoothingExteriorRegionWidth = 0x68; // int32_t
		constexpr auto SmoothingInteriorRegionWidth = 0x6c; // int32_t
		constexpr auto InteriorSmoothness = 0x70; // float
		constexpr auto FillDensityScalar = 0x78; // double
		constexpr auto bProjectDuringRemesh = 0x80; // bool
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_ACrowWeaponHeliFlare {
		constexpr auto FireDelayTime = 0x31e8; // float
		constexpr auto FlareFireCount = 0x31ec; // float
		constexpr auto SmokeFireArray = 0x31f0; // TArray<FTransform>
		constexpr auto FireTimeHandle = 0x3200; // FTimerHandle
		constexpr auto CurrFireCount = 0x3208; // int32_t
		constexpr auto FireMeshComponent = 0x3210; // USkeletalMeshComponent*
		constexpr auto TracerFX_Fire = 0x3218; // UParticleSystem*
	}

	namespace n_USpaceDeformerOperatorFactory {
		constexpr auto SpaceDeformerTool = 0x30; // UMeshSpaceDeformerTool*
	}

	namespace n_UCrowSpectatorPlayerSlotWidget {
		constexpr auto BT_Spectating = 0x358; // UCrowToggleButton*
		constexpr auto WS_PlayerName = 0x360; // UWidgetSwitcher*
		constexpr auto TB_DeselectPlayerName = 0x368; // UTextBlock*
		constexpr auto TB_SelectPlayerName = 0x370; // UTextBlock*
		constexpr auto IMG_Dying = 0x378; // UImage*
		constexpr auto IMG_Death = 0x380; // UImage*
		constexpr auto TargetPlayerState = 0x388; // ACrowPlayerStateBase*
		constexpr auto CurrentTimeSecond = 0x390; // float
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UGroomAsset {
		constexpr auto HairGroupsInfo = 0x30; // TArray<FHairGroupInfoWithVisibility>
		constexpr auto HairGroupsRendering = 0x40; // TArray<FHairGroupsRendering>
		constexpr auto HairGroupsPhysics = 0x50; // TArray<FHairGroupsPhysics>
		constexpr auto HairGroupsInterpolation = 0x60; // TArray<FHairGroupsInterpolation>
		constexpr auto HairGroupsLOD = 0x70; // TArray<FHairGroupsLOD>
		constexpr auto HairGroupsCards = 0x80; // TArray<FHairGroupsCardsSourceDescription>
		constexpr auto HairGroupsMeshes = 0x90; // TArray<FHairGroupsMeshesSourceDescription>
		constexpr auto HairGroupsMaterials = 0xa0; // TArray<FHairGroupsMaterial>
		constexpr auto EnableGlobalInterpolation = 0xc0; // bool
		constexpr auto HairInterpolationType = 0xc1; // EGroomInterpolationType
		constexpr auto LODSelectionType = 0xc2; // EHairLODSelectionType
		constexpr auto MinLOD = 0xc4; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0xc8; // FPerPlatformBool
		constexpr auto EffectiveLODBias = 0xd0; // TArray<float>
		constexpr auto AssetUserData = 0xe0; // TArray<UAssetUserData*>
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_ACrowItemMeshActor {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto MeshArray = 0x228; // TArray<UMeshComponent*>
		constexpr auto Particle = 0x238; // UParticleSystemComponent*
	}

	namespace n_UCrowMedalInfoWidget {
		constexpr auto MedalListPanel = 0x348; // UCanvasPanel*
		constexpr auto TB_MedalTitle = 0x350; // UTextBlock*
		constexpr auto TB_TotalEXP = 0x358; // UTextBlock*
		constexpr auto CP_TextList = 0x360; // UCanvasPanel*
		constexpr auto MedalIconList = 0x390; // TArray<UCrowMedalAniWidgetBase*>
		constexpr auto MedalTextArray = 0x3a0; // TArray<FCrowMedalCountInfo>
		constexpr auto MedalIconClass = 0x3b0; // UUserWidget*
		constexpr auto IconSpawnDelayTime = 0x3b8; // float
		constexpr auto RemainIconSpawnDelayTime = 0x3bc; // float
		constexpr auto MedalTextClass = 0x3c0; // UUserWidget*
		constexpr auto TextItemArray = 0x3c8; // TArray<UCrowGetEXPPointItemWidget*>
		constexpr auto TextSpawnDelayTime = 0x3d8; // float
		constexpr auto TextDisplayTime = 0x3dc; // float
		constexpr auto TextEventSound = 0x3e0; // UAkAudioEvent*
		constexpr auto HeadShotEventSound = 0x3e8; // UAkAudioEvent*
		constexpr auto RemainTextSpawnDelayTime = 0x3f0; // float
	}

	namespace n_UCrowLandWheelsConfigTank {
		constexpr auto Setting = 0x28; // FCrowLandWheelsTankSetting
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_UPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UMeshBoundaryToolBase {
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto LoopSelectClickBehavior = 0x140; // USingleClickInputBehavior*
	}

	namespace n_UCrowClanExpTableManager {
		constexpr auto ClanExpData = 0x28; // TMap<int32_t, FCrowClanExpTableRow>
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_AWaterBodyCustom {
		constexpr auto CustomGenerator = 0xdd0; // UCustomMeshGenerator*
	}

	namespace n_UCrowAimComponentVehicle {
		constexpr auto VehicleSight = 0x108; // UCrowVehicleSightComponent*
		constexpr auto BeginTimerHandle = 0x110; // FTimerHandle
		constexpr auto EndTimerHandle = 0x118; // FTimerHandle
		constexpr auto AimSocketOffsetCurve = 0x120; // UCurveVector*
		constexpr auto AimSocketOffsetCurveTime = 0x128; // float
		constexpr auto AimElapsedTimeSecond = 0x12c; // float
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UCrowConquestLineLink {
		constexpr auto ConquestLineClass = 0x28; // UCrowConquestLineWidget*
		constexpr auto LinePanel = 0x30; // UCanvasPanel*
		constexpr auto IconAreaArray = 0x38; // TArray<FCrowConquestIconAreaPair>
		constexpr auto LineArray = 0x48; // TArray<FCrowConquestLineInfo>
		constexpr auto ConquestSequenceRedTeam = 0x58; // TArray<FString>
	}

	namespace n_ACrowPostProcessVolume {
		constexpr auto ParamCollection = 0x220; // UMaterialParameterCollection*
		constexpr auto QualitySettings = 0x228; // TMap<int32_t, FCrowPostProcessQualitySetting>
		constexpr auto OtherPostProcessMaterials = 0x278; // TMap<ECrowPostProcess, UMaterialInterface*>
		constexpr auto CrowLocalPostProcessComp = 0x2c8; // UCrowLocalPostProcessComponent*
		constexpr auto UnderWaterComponent = 0x2d0; // UCrowUnderWaterComponent*
		constexpr auto BloodComponent = 0x2d8; // UCrowPostProcessBloodComponent*
		constexpr auto ShellShockComponent = 0x2e0; // UCrowShellShockComponent*
		constexpr auto LastHumanState = 0x2e8; // int32_t
		constexpr auto ParamInstance = 0x2f0; // UMaterialParameterCollectionInstance*
		constexpr auto CachedPostProcessVolumes = 0x2f8; // TArray<TWeakObjectPtr<APostProcessVolume>>
		constexpr auto OtherPPMaterialRef = 0x308; // TMap<FString, int32_t>
		constexpr auto bInitialized = 0x358; // bool
	}

	namespace n_UCrowCharacterAnimInst {
		constexpr auto MovementMode = 0x2b8; // ECrowMovementMode
		constexpr auto TargetStance = 0x2b9; // ECrowCharacterAnimStance
		constexpr auto InAir = 0x2ba; // ECrowCharacterAnimInAir
		constexpr auto PeekState = 0x2bb; // ECrowCharacterPeekState
		constexpr auto bIsOnCombat = 0x2bc; // bool
		constexpr auto bIsOnAim = 0x2bd; // bool
		constexpr auto bIsMoving = 0x2be; // bool
		constexpr auto MoveDirection = 0x2c0; // float
		constexpr auto GaitValue = 0x2c4; // float
		constexpr auto WeaponType = 0x2c8; // ECrowWeaponSubType
		constexpr auto WeaponAction = 0x2c9; // ECrowCharacterAnimWeapon
		constexpr auto bIsWeaponStartFire = 0x2ca; // bool
		constexpr auto bIsWeaponLoopFire = 0x2cb; // bool
		constexpr auto bIsAimSecondarySight = 0x2cc; // bool
		constexpr auto LeftArmAdjustedOnSlopeRotation = 0x2d0; // FRotator
		constexpr auto AimingRotation = 0x2dc; // FRotator
		constexpr auto CurrentStance = 0x2e8; // ECrowCharacterAnimStance
		constexpr auto BattleStance = 0x2e9; // ECrowCharacterBattleStance
		constexpr auto ActionType = 0x2ea; // ECrowCharacterAnimActionType
		constexpr auto MovementPlayRateStand = 0x2ec; // float
		constexpr auto MovementPlayRateCrouch = 0x2f0; // float
		constexpr auto MovementPlayRateProne = 0x2f4; // float
		constexpr auto bIsOnAimLocal = 0x2f8; // bool
		constexpr auto bIsShootAction = 0x2f9; // bool
		constexpr auto AimOffsetAlpha = 0x2fc; // float
		constexpr auto HandIKAlpha = 0x300; // float
		constexpr auto OverlayLeftHand = 0x304; // float
		constexpr auto OverlayRightHand = 0x308; // float
		constexpr auto bIsFallFlail = 0x30c; // bool
		constexpr auto PrivateWeaponIKTarget = 0x310; // FTransform
		constexpr auto VehicleLeftHandIK = 0x340; // FTransform
		constexpr auto VehicleRightHandIK = 0x370; // FTransform
		constexpr auto VehicleSeatType = 0x3a0; // EVehicleSeatType
		constexpr auto VehicleSeatIndex = 0x3a1; // char
		constexpr auto bIsInjured = 0x3a2; // bool
		constexpr auto bIsSkydiving = 0x3a3; // bool
		constexpr auto SkydivingState = 0x3a4; // char
		constexpr auto AnimatedWalkSpeed = 0x3a8; // float
		constexpr auto AnimatedRunSpeed = 0x3ac; // float
		constexpr auto AnimatedSprintSpeed = 0x3b0; // float
		constexpr auto AnimatedCrouchWalkSpeed = 0x3b4; // float
		constexpr auto AnimatedCrouchRunSpeed = 0x3b8; // float
		constexpr auto AnimatedCrouchSprintSpeed = 0x3bc; // float
		constexpr auto AnimatedProneSpeed = 0x3c0; // float
		constexpr auto AnimatedProneWalkSpeed = 0x3c4; // float
		constexpr auto SkydivingForwardValue = 0x3c8; // float
		constexpr auto SkydivingRightValue = 0x3cc; // float
		constexpr auto ParachuteGripLeftTransform = 0x3d0; // FTransform
		constexpr auto ParachuteGripRightTransform = 0x400; // FTransform
		constexpr auto CharacterOwner = 0x430; // ACrowCharacterPawn*
		constexpr auto CharacterMovement = 0x438; // UCrowCharacterMovement*
		constexpr auto WeaponActor = 0x440; // ACrowWeaponBase*
		constexpr auto VehiclePawn = 0x448; // ACrowVehiclePawn*
		constexpr auto NamePrivateBase = 0x450; // FName
		constexpr auto NamePrivateShoot = 0x458; // FName
		constexpr auto NamePrivateReload = 0x460; // FName
		constexpr auto NameItemAction = 0x468; // FName
		constexpr auto NameOnVehicle = 0x470; // FName
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_ACrowProjectileBase {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto ProjectileCollisionProfileName = 0x230; // FName
		constexpr auto TrajectoryMovement = 0x238; // UCrowTrajectoryMovement*
		constexpr auto WeaponIndex = 0x240; // uint16_t
		constexpr auto AmmoIndex = 0x242; // uint16_t
		constexpr auto ItemType = 0x244; // char
		constexpr auto FireData = 0x250; // FCrowProjectileFireData
		constexpr auto LastProjectileLocation = 0x1720; // FVector
		constexpr auto HitResultsOnMove = 0x1730; // TArray<FHitResult>
		constexpr auto CachedOceanActor = 0x1750; // AWaterBody*
		constexpr auto CachedLOD = 0x1758; // int32_t
		constexpr auto PartsOptions = 0x175c; // FCrowWeaponPartsOptions
	}

	namespace n_UCrowWeaponPartsBarrel {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsBarrelTableRow
		constexpr auto DefaultPartsData = 0x628; // FCrowWeaponPartsBarrelTableRow
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UCrowTeleportationActorComponent {
		constexpr auto CrowTeleportationArea = 0xb0; // ACrowTeleportationArea*
		constexpr auto DeathZoneWidget = 0xb8; // UCrowDeathZoneWidget*
		constexpr auto CountDownHandle = 0xc0; // FTimerHandle
		constexpr auto Countdown = 0xc8; // float
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_URevolveOperatorFactory {
		constexpr auto RevolveTool = 0x30; // UDrawAndRevolveTool*
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UBakeTransformToolProperties {
		constexpr auto bBakeRotation = 0x60; // bool
		constexpr auto BakeScale = 0x61; // EBakeScaleMethod
		constexpr auto bRecenterPivot = 0x62; // bool
	}

	namespace n_UMeshAttributePaintTool {
		constexpr auto AttribProps = 0x200; // UMeshAttributePaintToolProperties*
	}

	namespace n_UCrowCharacterSubAnimOnVehicle {
		constexpr auto AimOffsetVehicle = 0x300; // TMap<int32_t, FCrowCharacterAimOffsetVehicle>
		constexpr auto SeatType = 0x350; // EVehicleSeatType
		constexpr auto SeatIndex = 0x354; // int32_t
		constexpr auto PrevSeatIndex = 0x358; // int32_t
	}

	namespace n_UCrowResultSquadSlotWidget {
		constexpr auto TB_PlayerName = 0x348; // UTextBlock*
		constexpr auto TB_Kill_Count = 0x350; // UTextBlock*
		constexpr auto TB_SurvivalTime_Count = 0x358; // UTextBlock*
		constexpr auto TB_Damagel_Count = 0x360; // UTextBlock*
		constexpr auto IMG_SquadBack = 0x368; // UImage*
		constexpr auto TB_SquadNum = 0x370; // UTextBlock*
		constexpr auto TB_Assist_Count = 0x378; // UTextBlock*
		constexpr auto IMG_BG = 0x380; // UImage*
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x460; // FVector
		constexpr auto Gap = 0x46c; // float
		constexpr auto Length = 0x470; // float
		constexpr auto Thickness = 0x474; // float
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UCrowVehicleMovementTank {
		constexpr auto TankConfigClass = 0x2f0; // UCrowLandWheelsConfigTank*
		constexpr auto VirtualWheelConfigClass = 0x2f8; // UCrowLandWheelsConfigTireAndWheel*
		constexpr auto IsFirstUpdate = 0x308; // bool
		constexpr auto DistanceAlwaysVisible = 0x30c; // float
		constexpr auto DistanceFar = 0x310; // float
	}

	namespace n_UCrowVehicleCrosshairRoadRoverMG {
		constexpr auto IMG_Overheating_Gauge = 0x428; // UImage*
		constexpr auto ImgOverheatingGuageMaterial = 0x430; // UMaterialInstanceDynamic*
		constexpr auto OverheatingCurve = 0x438; // UCurveLinearColor*
		constexpr auto IsCooling = 0x440; // bool
		constexpr auto WeaponInfoWidget = 0x448; // UCrowWeaponInfoWidget*
	}

	namespace n_ACrowWeaponClaymoreMine {
		constexpr auto OperationWaitingTime = 0x1ed0; // float
		constexpr auto ActivityTimeLimit = 0x1ed4; // float
		constexpr auto RangeAngle = 0x1ed8; // float
	}

	namespace n_UMirrorTool {
		constexpr auto Settings = 0x98; // UMirrorToolProperties*
		constexpr auto ToolActions = 0xa0; // UMirrorToolActionPropertySet*
		constexpr auto MeshesToMirror = 0xa8; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto Previews = 0xb8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PlaneMechanic = 0x110; // UConstructionPlaneMechanic*
	}

	namespace n_UProceduralRectangleToolProperties {
		constexpr auto Width = 0x70; // float
		constexpr auto Depth = 0x74; // float
		constexpr auto WidthSubdivisions = 0x78; // int32_t
		constexpr auto DepthSubdivisions = 0x7c; // int32_t
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UWeldMeshEdgesTool {
		constexpr auto Tolerance = 0x88; // float
		constexpr auto bOnlyUnique = 0x8c; // bool
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x470; // AChaosSolverActor*
		constexpr auto RestCollection = 0x558; // UGeometryCollection*
		constexpr auto InitializationFields = 0x560; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x570; // bool
		constexpr auto ObjectType = 0x578; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x579; // bool
		constexpr auto ClusterGroupIndex = 0x57c; // int32_t
		constexpr auto MaxClusterLevel = 0x580; // int32_t
		constexpr auto DamageThreshold = 0x588; // TArray<float>
		constexpr auto ClusterConnectionType = 0x598; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x59c; // int32_t
		constexpr auto CollisionSampleFraction = 0x5a0; // float
		constexpr auto LinearEtherDrag = 0x5a4; // float
		constexpr auto AngularEtherDrag = 0x5a8; // float
		constexpr auto PhysicalMaterial = 0x5b0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5b8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5bc; // FVector
		constexpr auto InitialAngularVelocity = 0x5c8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5d8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5e0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x630; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x668; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x678; // float
		constexpr auto CachePlayback = 0x67c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x680; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x690; // bool
		constexpr auto bNotifyCollisions = 0x691; // bool
		constexpr auto bEnableReplication = 0x692; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x693; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x694; // int32_t
		constexpr auto RepData = 0x698; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8c8; // UBodySetup*
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_ACrowProjectileShell {
		constexpr auto MaxWeaponLOD = 0x17d0; // int32_t
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UOculusHMDRuntimeSettings {
		constexpr auto bAutoEnabled = 0x28; // bool
		constexpr auto SplashDescs = 0x30; // TArray<FOculusSplashDesc>
		constexpr auto bEnableSpecificColorGamut = 0x40; // bool
		constexpr auto ColorSpace = 0x41; // EColorSpace
		constexpr auto bSupportsDash = 0x42; // bool
		constexpr auto bCompositesDepth = 0x43; // bool
		constexpr auto bHQDistortion = 0x44; // bool
		constexpr auto PixelDensityMin = 0x48; // float
		constexpr auto PixelDensityMax = 0x4c; // float
		constexpr auto CPULevel = 0x50; // int32_t
		constexpr auto GPULevel = 0x54; // int32_t
		constexpr auto FFRLevel = 0x58; // EFixedFoveatedRenderingLevel
		constexpr auto FFRDynamic = 0x59; // bool
		constexpr auto bChromaCorrection = 0x5a; // bool
		constexpr auto bRecenterHMDWithController = 0x5b; // bool
		constexpr auto bFocusAware = 0x5c; // bool
		constexpr auto bRequiresSystemKeyboard = 0x5d; // bool
		constexpr auto HandTrackingSupport = 0x5e; // EHandTrackingSupport
	}

	namespace n_AWaterBodyRiver {
		constexpr auto RiverGenerator = 0xdd0; // URiverGenerator*
		constexpr auto LakeTransitionMaterial = 0xdd8; // UMaterialInterface*
		constexpr auto LakeTransitionMID = 0xde0; // UMaterialInstanceDynamic*
		constexpr auto OceanTransitionMaterial = 0xde8; // UMaterialInterface*
		constexpr auto OceanTransitionMID = 0xdf0; // UMaterialInstanceDynamic*
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UCrowCharacterDeathIconWidget {
		constexpr auto CP_DisconnectIcon = 0x3c8; // UCanvasPanel*
		constexpr auto TargetPlayerState = 0x3d0; // ACrowPlayerStateBase*
	}

	namespace n_UCrowInGameMissionTutorialAlarm {
		constexpr auto TB_MissionTitle = 0x348; // UTextBlock*
		constexpr auto ShowAnimation = 0x350; // UWidgetAnimation*
		constexpr auto RemoveAni = 0x358; // UWidgetAnimation*
	}

	namespace n_UCrowInputMappingWidget {
		constexpr auto bIsActionKey = 0x678; // bool
		constexpr auto BehaviourName = 0x67c; // FName
	}

	namespace n_UCrowMailManager {
		constexpr auto AccountMailInfos = 0x28; // TMap<int64_t, FCrowAccountMailInfo>
		constexpr auto PersonalMailInfos = 0x78; // TMap<int64_t, FCrowPersonalMailInfo>
		constexpr auto ReqNewMailWidget = 0xc8; // UCrowWidgetBase*
		constexpr auto ReqMailListWidget = 0xd0; // UCrowWidgetBase*
		constexpr auto ReqReceiveMailItemWidget = 0xd8; // UCrowWidgetBase*
		constexpr auto ReqDeleteMailWidget = 0xe0; // UCrowWidgetBase*
		constexpr auto ReqAllReceiveMailItemWidget = 0xe8; // UCrowWidgetBase*
		constexpr auto bIsAllReceiveMailItem = 0xf0; // bool
		constexpr auto RewardItemDatas = 0xf8; // TArray<FCrowRewardItem>
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UWB_Loading_C {
		constexpr auto ANI_LoadingStart = 0x398; // UWidgetAnimation*
		constexpr auto ANI_Loading = 0x3a0; // UWidgetAnimation*
		constexpr auto Image_31 = 0x3a8; // UImage*
		constexpr auto IMG_ContentBG = 0x3b0; // UImage*
		constexpr auto IMG_Loading_In_2 = 0x3b8; // UCrowWidgetImage*
		constexpr auto WB_LoadingModeDescSlot_1 = 0x3c0; // UWB_LoadingModeDescSlot_C*
		constexpr auto WB_LoadingModeDescSlot_2 = 0x3c8; // UWB_LoadingModeDescSlot_C*
		constexpr auto WB_LoadingModeDescSlot_3 = 0x3d0; // UWB_LoadingModeDescSlot_C*
	}

	namespace n_UWB_Crosshair_Mh6_RocketFord_First_C {
		constexpr auto IMG_Crosshair_Gauge = 0x428; // UImage*
		constexpr auto IMG_Crosshair_Gauge_2 = 0x430; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x438; // UImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x440; // UImage*
		constexpr auto WB_Vehicle_Damage = 0x448; // UWB_Vehicle_Warning_Heli_C*
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UMeshInspectorProperties {
		constexpr auto bWireframe = 0x60; // bool
		constexpr auto bBoundaryEdges = 0x61; // bool
		constexpr auto bBowtieVertices = 0x62; // bool
		constexpr auto bPolygonBorders = 0x63; // bool
		constexpr auto bUVSeams = 0x64; // bool
		constexpr auto bUVBowties = 0x65; // bool
		constexpr auto bNormalSeams = 0x66; // bool
		constexpr auto bNormalVectors = 0x67; // bool
		constexpr auto bTangentVectors = 0x68; // bool
		constexpr auto NormalLength = 0x6c; // float
		constexpr auto TangentLength = 0x70; // float
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_UOculusResourceHolder {
		constexpr auto PokeAHoleMaterial = 0x28; // UMaterial*
	}

	namespace n_UGroomCreateFollicleMaskOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto RootRadius = 0x2c; // int32_t
		constexpr auto Grooms = 0x30; // TArray<FFollicleMaskOptions>
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UCrowFullScreenWidgetBase {
		constexpr auto HideWidgetArray = 0x350; // TArray<FCrowHideWidgetInfo>
	}

	namespace n_UCrowLootingSlotWidget {
		constexpr auto SlotItem = 0x348; // UCrowLootingSlotItem*
		constexpr auto TXT_ItemSlot = 0x350; // UTextBlock*
		constexpr auto VB_ItemList = 0x358; // UVerticalBox*
	}

	namespace n_UCrowLobbyShopMenuTabWidget {
		constexpr auto WeaponModList = 0x348; // UCrowWidgetToggleButton*
		constexpr auto WeaponModShopList = 0x350; // UCrowWidgetToggleButton*
	}

	namespace n_UVoxelBlendMeshesTool {
		constexpr auto BlendProperties = 0x108; // UVoxelBlendMeshesToolProperties*
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_UWB_A10Bombard_Indicator_C {
		constexpr auto UberGraphFrame = 0x3c0; // FPointerToUberGraphFrame
		constexpr auto IMG_Icon_A10 = 0x3c8; // UImage*
		constexpr auto IMG_Icon_Laser = 0x3d0; // UImage*
		constexpr auto IMG_Icon_Strike = 0x3d8; // UImage*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_Side_M4A1_UNIQ_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto M4A1_UNIQ_Lasersight_round = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UEditNormalsTool {
		constexpr auto BasicProperties = 0x90; // UEditNormalsToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UEditNormalsAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_ACrowMergedSkeletalMeshCacheActor {
		constexpr auto MapMergedMeshShareData = 0x220; // TMap<int32_t, FCrowMergedMeshShareData>
		constexpr auto QueuedAsyncTaskArray = 0x270; // TArray<UCrowLibraryMergeSKCTask*>
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UAnimNotify_CLSCameraShake {
		constexpr auto ShakeClass = 0x38; // UMatineeCameraShake*
		constexpr auto Scale = 0x40; // float
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UCrowCloudUIHandler {
		constexpr auto GameIconDisplayInfo = 0xb0; // FCrowGameIconDisplayInfo
		constexpr auto ContaminationAreaIcons = 0x138; // TMap<int32_t, UCrowWorldMapIcon*>
	}

	namespace n_UCrowRecordScoreRankWidget {
		constexpr auto LV_Rank = 0x378; // UListView*
		constexpr auto WB_Record_DropDown = 0x380; // UCrowDropDownWidget*
		constexpr auto WB_RecordScoreRankSlot_My = 0x388; // UCrowScoreRankSlotWidget*
		constexpr auto GradeInfoButton = 0x390; // UCrowButton*
		constexpr auto CurrentDateTime = 0x398; // FDateTime
		constexpr auto SelectedRankingScheduleIndex = 0x3a0; // int32_t
		constexpr auto SelectedRankingDateInfoIndex = 0x3a4; // int32_t
		constexpr auto RankingRecordType = 0x3a8; // ECrowRankingRecordType
		constexpr auto RankingPeriodType = 0x3a9; // ECrowRankingPeriodType
	}

	namespace n_UCrowItemTableManager {
		constexpr auto AssetReferenceCache = 0x28; // TMap<UObject*, int32_t>
		constexpr auto AssetReferenceArray = 0x78; // TArray<FCrowItemAssetElement>
		constexpr auto WeaponTable_I = 0x88; // TMap<uint32_t, FCrowWeaponTableRow>
		constexpr auto WeaponTable_S = 0xd8; // TMap<FString, FCrowWeaponTableRow>
		constexpr auto WeaponVehicleTable_I = 0x128; // TMap<uint32_t, FCrowWeaponVehicleTableRow>
		constexpr auto WeaponVehicleTable_S = 0x178; // TMap<FString, FCrowWeaponVehicleTableRow>
		constexpr auto WeaponPartsBarrelTable_I = 0x1c8; // TMap<uint32_t, FCrowWeaponPartsBarrelTableRow>
		constexpr auto WeaponPartsBarrelTable_S = 0x218; // TMap<FString, FCrowWeaponPartsBarrelTableRow>
		constexpr auto WeaponPartsMagazineTable_I = 0x268; // TMap<uint32_t, FCrowWeaponPartsMagazineTableRow>
		constexpr auto WeaponPartsMagazineTable_S = 0x2b8; // TMap<FString, FCrowWeaponPartsMagazineTableRow>
		constexpr auto WeaponPartsMuzzleTable_I = 0x308; // TMap<uint32_t, FCrowWeaponPartsMuzzleTableRow>
		constexpr auto WeaponPartsMuzzleTable_S = 0x358; // TMap<FString, FCrowWeaponPartsMuzzleTableRow>
		constexpr auto WeaponPartsPistolGripTable_I = 0x3a8; // TMap<uint32_t, FCrowWeaponPartsPistolGripTableRow>
		constexpr auto WeaponPartsPistolGripTable_S = 0x3f8; // TMap<FString, FCrowWeaponPartsPistolGripTableRow>
		constexpr auto WeaponPartsPrimarySightTable_I = 0x448; // TMap<uint32_t, FCrowWeaponPartsPrimarySightTableRow>
		constexpr auto WeaponPartsPrimarySightTable_S = 0x498; // TMap<FString, FCrowWeaponPartsPrimarySightTableRow>
		constexpr auto WeaponPartsSecondarySightTable_I = 0x4e8; // TMap<uint32_t, FCrowWeaponPartsSecondarySightTableRow>
		constexpr auto WeaponPartsSecondarySightTable_S = 0x538; // TMap<FString, FCrowWeaponPartsSecondarySightTableRow>
		constexpr auto WeaponPartsSideBarrelTable_I = 0x588; // TMap<uint32_t, FCrowWeaponPartsSideBarrelTableRow>
		constexpr auto WeaponPartsSideBarrelTable_S = 0x5d8; // TMap<FString, FCrowWeaponPartsSideBarrelTableRow>
		constexpr auto WeaponPartsStockTable_I = 0x628; // TMap<uint32_t, FCrowWeaponPartsStockTableRow>
		constexpr auto WeaponPartsStockTable_S = 0x678; // TMap<FString, FCrowWeaponPartsStockTableRow>
		constexpr auto WeaponPartsUnderBarrelTable_I = 0x6c8; // TMap<uint32_t, FCrowWeaponPartsUnderBarrelTableRow>
		constexpr auto WeaponPartsUnderBarrelTable_S = 0x718; // TMap<FString, FCrowWeaponPartsUnderBarrelTableRow>
		constexpr auto WeaponAmmoTable_I = 0x768; // TMap<uint32_t, FCrowAmmoTableRow>
		constexpr auto WeaponAmmoTable_S = 0x7b8; // TMap<FString, FCrowAmmoTableRow>
		constexpr auto CharacterTable_I = 0x808; // TMap<uint32_t, FCrowCharacterTableRow>
		constexpr auto CharacterTable_S = 0x858; // TMap<FString, FCrowCharacterTableRow>
		constexpr auto ClothItemTableHair_I = 0x8a8; // TMap<uint32_t, FCrowClothHairTableRow>
		constexpr auto ClothItemTableHead_I = 0x8f8; // TMap<uint32_t, FCrowClothHeadTableRow>
		constexpr auto ClothItemTableGlasses_I = 0x948; // TMap<uint32_t, FCrowClothGlassesTableRow>
		constexpr auto ClothItemTableMask_I = 0x998; // TMap<uint32_t, FCrowClothMaskTableRow>
		constexpr auto ClothItemTableTop_I = 0x9e8; // TMap<uint32_t, FCrowClothTopTableRow>
		constexpr auto ClothItemTableGloves_I = 0xa38; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBottom_I = 0xa88; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableShoes_I = 0xad8; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableOuter_I = 0xb28; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBackPack_I = 0xb78; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableCostume_I = 0xbc8; // TMap<uint32_t, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBeard_I = 0xc18; // TMap<uint32_t, FCrowClothBeardTableRow>
		constexpr auto ClothItemTablePatch_I = 0xc68; // TMap<uint32_t, FCrowClothPatchTableRow>
		constexpr auto ClothItemTableHair_S = 0xcb8; // TMap<FString, FCrowClothHairTableRow>
		constexpr auto ClothItemTableHead_S = 0xd08; // TMap<FString, FCrowClothHeadTableRow>
		constexpr auto ClothItemTableGlasses_S = 0xd58; // TMap<FString, FCrowClothGlassesTableRow>
		constexpr auto ClothItemTableMask_S = 0xda8; // TMap<FString, FCrowClothMaskTableRow>
		constexpr auto ClothItemTableTop_S = 0xdf8; // TMap<FString, FCrowClothTopTableRow>
		constexpr auto ClothItemTableGloves_S = 0xe48; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBottom_S = 0xe98; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableShoes_S = 0xee8; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableOuter_S = 0xf38; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBackPack_S = 0xf88; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableCostume_S = 0xfd8; // TMap<FString, FCrowClothTableBaseRow>
		constexpr auto ClothItemTableBeard_S = 0x1028; // TMap<FString, FCrowClothBeardTableRow>
		constexpr auto ClothItemTablePatch_S = 0x1078; // TMap<FString, FCrowClothPatchTableRow>
		constexpr auto ArmorTable_I = 0x10c8; // TMap<uint32_t, FCrowArmorTableRow>
		constexpr auto ArmorTable_S = 0x1118; // TMap<FString, FCrowArmorTableRow>
		constexpr auto InvenBagTable_I = 0x1168; // TMap<uint32_t, FCrowInvenBagRow>
		constexpr auto InvenBagTable_S = 0x11b8; // TMap<FString, FCrowInvenBagRow>
		constexpr auto CurrencyTable_I = 0x1208; // TMap<uint32_t, FCrowCurrencyTableRow>
		constexpr auto CurrencyTable_S = 0x1258; // TMap<FString, FCrowCurrencyTableRow>
		constexpr auto ItemColorTableHair_I = 0x12a8; // TMap<uint32_t, FCrowItemColorTableRowBase>
		constexpr auto ItemColorTableBeard_I = 0x12f8; // TMap<uint32_t, FCrowItemColorTableRowBase>
		constexpr auto VictoryPoseTable_I = 0x1348; // TMap<uint32_t, FCrowVictoryPoseTableRow>
		constexpr auto VehicleTable_I = 0x1398; // TMap<uint32_t, FCrowVehicleTableRow>
		constexpr auto VehicleTable_S = 0x13e8; // TMap<FString, FCrowVehicleTableRow>
		constexpr auto WeaponPartsCharm_I = 0x1438; // TMap<uint32_t, FCrowWeaponCharmTableRow>
		constexpr auto WeaponPartsCharm_S = 0x1488; // TMap<FString, FCrowWeaponCharmTableRow>
		constexpr auto WeaponStickerTable_I = 0x14d8; // TMap<uint32_t, FCrowWeaponStickerTableRow>
		constexpr auto WeaponStickerTable_S = 0x1528; // TMap<FString, FCrowWeaponStickerTableRow>
		constexpr auto EtcTable_I = 0x1578; // TMap<uint32_t, FCrowEtcTableRow>
		constexpr auto EtcTable_S = 0x15c8; // TMap<FString, FCrowEtcTableRow>
		constexpr auto VehicleSkinTable_I = 0x1618; // TMap<uint32_t, FCrowVehicleSkinTableRow>
		constexpr auto VehicleSkinTable_S = 0x1668; // TMap<FString, FCrowVehicleSkinTableRow>
		constexpr auto BuffTable_I = 0x16b8; // TMap<uint32_t, FCrowBuffTableRow>
		constexpr auto ItemTableEyeColor_I = 0x1708; // TMap<uint32_t, FCrowEyeColorTableBaseRow>
		constexpr auto TattooTable_I = 0x1758; // TMap<uint32_t, FCrowTattooTableRow>
		constexpr auto EmotionTable_I = 0x17a8; // TMap<uint32_t, FCrowEmotionTableRow>
		constexpr auto SprayTable_I = 0x17f8; // TMap<uint32_t, FCrowSprayTableRow>
		constexpr auto ClanMark_I = 0x1848; // TMap<uint32_t, FCrowClanMarkTableRow>
		constexpr auto ResultMVPTable_I = 0x1898; // TMap<uint32_t, FCrowResultMVPTableRow>
		constexpr auto ItemRankPointTable_I = 0x18e8; // TArray<FCrowItemRankPointTableRow>
		constexpr auto WeaponCanEquipPartsArray = 0x18f8; // TArray<FCrowCanEquipParts>
		constexpr auto RandomBoxTable_I = 0x1908; // TMap<uint32_t, FCrowRandomBoxTableRow>
		constexpr auto ParachuteSkinTable_I = 0x1958; // TMap<uint32_t, FCrowParachuteSkinTableRow>
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UCrowSettingsSlotWidget {
		constexpr auto ActionSlots = 0x360; // TArray<FActionKeySlot>
		constexpr auto AxisSlots = 0x370; // TArray<FAxisKeySlot>
		constexpr auto SettingItem = 0x380; // FSettingItem
		constexpr auto PrevSettedItem = 0x420; // FSettingItem
		constexpr auto RequestedKeySlotType = 0x4c0; // ESettingKeySlotType
		constexpr auto SubItemWidgets = 0x4c8; // TArray<UCrowSettingsSlotWidget*>
		constexpr auto bIsAxisKey = 0x4d8; // bool
		constexpr auto TB_SlotName = 0x4e0; // UTextBlock*
		constexpr auto BT_SlotHover = 0x4e8; // UCrowButton*
		constexpr auto WS_SlotTypes = 0x4f0; // UWidgetSwitcher*
		constexpr auto WB_SettingsSlotKeyBinding = 0x4f8; // UCrowSettingsSlotKeyBindingWidget*
		constexpr auto WB_SettingsSlotOnOff = 0x500; // UCrowSettingsSlotOnOffWidget*
		constexpr auto WB_SettingsSlotSlider = 0x508; // UCrowSettingsSlotSliderWidget*
		constexpr auto WB_SettingsSlotSelection = 0x510; // UCrowSettingsSlotSelectionWidget*
		constexpr auto WB_SettingsSlotDropdown = 0x518; // UCrowSettingsSlotDropdownWidget*
		constexpr auto WB_SettingSlotButton = 0x520; // UCrowSettingsSlotButtonWidget*
		constexpr auto ParentSlotWidget = 0x528; // UCrowSettingsSlotWidget*
	}

	namespace n_UCrowShopRewardPopupWidget {
		constexpr auto RewardItemWidget = 0x348; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto ItemCreateDelayTime = 0x350; // float
		constexpr auto PopupRemoveTime = 0x354; // float
		constexpr auto BuyComplateStringKey = 0x358; // FString
		constexpr auto DesComplateStringKey = 0x368; // FString
		constexpr auto HB_RewardSlot = 0x378; // UHorizontalBox*
		constexpr auto WB_BT_Confirm = 0x380; // UCrowButton*
		constexpr auto TB_Package = 0x388; // UTextBlock*
		constexpr auto ItemList = 0x390; // TArray<FCrowRewardItem>
		constexpr auto CurrentListIndex = 0x3a0; // int32_t
		constexpr auto CreateTimerHandle = 0x3a8; // FTimerHandle
		constexpr auto AnimPlayer = 0x3b0; // UUMGSequencePlayer*
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_ACrowBuildingSelectableActorBase {
		constexpr auto bIsSelectable = 0x220; // char : 1
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UCrowWorldInteractionAUD {
		constexpr auto IsAnimationStateHolder = 0x28; // bool
		constexpr auto TriggerDataMesh = 0x30; // UStaticMesh*
		constexpr auto LocalTextKey_Open = 0x38; // FString
		constexpr auto LocalTextKey_Close = 0x48; // FString
		constexpr auto AnimOpen = 0x58; // FCrowWorldLayoutItemAnim
		constexpr auto AnimClose = 0x88; // FCrowWorldLayoutItemAnim
		constexpr auto AnimBlocked = 0xb8; // FCrowWorldLayoutItemAnim
	}

	namespace n_UCrowCloudUpdaterComponent {
		constexpr auto bInitialized = 0xb0; // bool
		constexpr auto ReservedRegisterData = 0xb8; // TArray<FCrowCloudScapeUpdateData>
		constexpr auto DataAsset = 0xc8; // UCrowCloudScapeDataAsset*
		constexpr auto CloudScapeDatas = 0xd0; // TArray<FCrowCloudScapeUpdateData>
		constexpr auto HasCollisionCloudDatas = 0xe0; // TArray<FCrowCloudScapeUpdateData>
		constexpr auto CloudScapeDataIndexMap = 0xf0; // TMap<int32_t, int32_t>
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_USmoothWeightMapSetProperties {
		constexpr auto MinSmoothMultiplier = 0x80; // float
	}

	namespace n_UCrowDialogTooltip {
		constexpr auto TB_DialogSubTitle = 0x348; // URichTextBlock*
		constexpr auto IMG_SoundEffect = 0x350; // UImage*
		constexpr auto IMG_SoundBG = 0x358; // UImage*
		constexpr auto WB_DialogInfo = 0x360; // UCrowDialogImageGuide*
		constexpr auto CP_Icon = 0x368; // UCanvasPanel*
		constexpr auto IMG_Icon = 0x370; // UImage*
		constexpr auto IMG_Effect = 0x378; // UImage*
		constexpr auto AniToolTipStart = 0x380; // UWidgetAnimation*
		constexpr auto AniToolTipLoop = 0x388; // UWidgetAnimation*
		constexpr auto AniToolTipEnd = 0x390; // UWidgetAnimation*
		constexpr auto TableArray = 0x398; // TArray<FCrowDialogTableRow>
		constexpr auto CurrentRowName = 0x3a8; // FName
		constexpr auto CaptureClass = 0x3b0; // ACrowWidgetParticle*
		constexpr auto EffectMaterial = 0x3b8; // UMaterialInterface*
		constexpr auto CaptureActor = 0x3c0; // ACrowWidgetParticle*
		constexpr auto DynamicMaterial = 0x3c8; // UMaterialInstanceDynamic*
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UVoxelMorphologyMeshesToolProperties {
		constexpr auto Operation = 0x60; // EMorphologyOperation
		constexpr auto Distance = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_UCrowConstructProgress {
		constexpr auto PB_Progress = 0x348; // UProgressBar*
		constexpr auto TXT_Progress = 0x350; // UTextBlock*
		constexpr auto ProgressTimerHandle = 0x368; // FTimerHandle
		constexpr auto BuildTime = 0x370; // float
		constexpr auto StartBuildTime = 0x374; // float
	}

	namespace n_UCrowListViewWidget {
		constexpr auto ItemClass = 0x348; // UCrowListItemWidget*
		constexpr auto ColumnCount = 0x350; // int32_t
		constexpr auto bIsMultiSelect = 0x354; // bool
		constexpr auto GD_ItemList = 0x358; // UGridPanel*
		constexpr auto ItemArray = 0x360; // TArray<UCrowListItemWidget*>
	}

	namespace n_UCrowDragDropWidgetBase {
		constexpr auto IMG_BackGround = 0x360; // UImage*
		constexpr auto ParentsWidgetClass = 0x368; // UCrowWidgetBase*
		constexpr auto DragItemImage = 0x370; // UPaperSprite*
		constexpr auto LockDrag = 0x378; // bool
		constexpr auto NotUseMouseButtonR = 0x379; // bool
		constexpr auto UseLobby = 0x37a; // bool
		constexpr auto DragItem = 0x380; // UCrowDragItem*
		constexpr auto ActiveImageList = 0x388; // TArray<UWidget*>
		constexpr auto CreateDragItem = 0x398; // UCrowWidgetBase*
		constexpr auto DragAndDropOperation = 0x3a0; // UDragDropOperation*
		constexpr auto DragItemSubClass = 0x3a8; // UUserWidget*
	}

	namespace n_UCrowObjectiveTimeWidget {
		constexpr auto TB_Minute = 0x348; // UTextBlock*
		constexpr auto UseUpdate = 0x350; // bool
		constexpr auto UpdateFontInfo = 0x358; // FSlateFontInfo
	}

	namespace n_UCrowSettingsExplanationWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto IMG_Explanation = 0x350; // UImage*
		constexpr auto TB_Explanation = 0x358; // UTextBlock*
		constexpr auto ExplanationSettingItem = 0x360; // FSettingItem
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_ACrowWeaponRespawnKit {
		constexpr auto SquadRespawnRedClass = 0x1ec8; // UObject*
		constexpr auto SquadRespawnBlueClass = 0x1ed0; // UObject*
	}

	namespace n_UCrowNetworkClient {
		constexpr auto ServerIP = 0x30; // FString
		constexpr auto ServerPort = 0x40; // FString
		constexpr auto CurrentScene = 0x50; // ACrowSceneBase*
		constexpr auto UserId = 0x58; // FString
		constexpr auto UserPassword = 0x68; // FString
	}

	namespace n_ACrowContaminationAreaEventActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto OutsideMesh = 0x228; // UStaticMeshComponent*
		constexpr auto InsideMesh = 0x230; // UStaticMeshComponent*
		constexpr auto IsActiveStart = 0x238; // bool
		constexpr auto AreaType = 0x239; // ECrowContaminationAreaType
		constexpr auto AreaShape = 0x240; // UStaticMesh*
		constexpr auto OutSideMaterial = 0x248; // UMaterialInterface*
		constexpr auto InSideMaterial = 0x250; // UMaterialInterface*
		constexpr auto DefaultAreaScale = 0x258; // FVector
		constexpr auto ShowNextExpansionAreaUI = 0x264; // bool
		constexpr auto AreaExpansion = 0x268; // TArray<FContaminationAreaExpansionInfo>
		constexpr auto DamageTime = 0x278; // float
		constexpr auto MinDamage = 0x27c; // int32_t
		constexpr auto MaxDamage = 0x280; // int32_t
		constexpr auto DamageType = 0x288; // UDamageType*
		constexpr auto IconDisplayInfoActive = 0x290; // FCrowGameIconDisplayInfo
		constexpr auto ShowDebugShape = 0x318; // bool
		constexpr auto ScaleSyncTime = 0x31c; // float
		constexpr auto ScaleSyncDistinction = 0x320; // float
		constexpr auto OverlapUserArray = 0x328; // TArray<AActor*>
		constexpr auto DmageTimerHandle = 0x338; // FTimerHandle
		constexpr auto bIsCheckStart = 0x340; // bool
		constexpr auto CurrentExpansionStep = 0x344; // int32_t
		constexpr auto CrowContaminationAreaState = 0x348; // ECrowContaminationAreaEventState
		constexpr auto ContaminationAreaIcon = 0x350; // UCrowWorldMapIcon*
		constexpr auto GameState = 0x358; // ACrowGameStateBase*
		constexpr auto PostProcessComp = 0x360; // UCrowLocalPostProcessComponent*
		constexpr auto ScaleSyncDeletaTime = 0x368; // float
	}

	namespace n_URiverGenerator {
		constexpr auto SplineMeshComponents = 0x28; // TArray<USplineMeshComponent*>
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBakeTransformTool {
		constexpr auto BasicProperties = 0x90; // UBakeTransformToolProperties*
	}

	namespace n_UCrowBattleIdentity {
		constexpr auto OwnerActor = 0xb0; // AActor*
		constexpr auto UIName = 0xb8; // FText
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Cannon_Third_C {
		constexpr auto IMG_Crosshair_Moving = 0x450; // UImage*
		constexpr auto IMG_Crosshair_Moving_2 = 0x458; // UImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x460; // UImage*
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x440; // UBodySetup*
		constexpr auto AreaClass = 0x448; // UNavAreaBase*
		constexpr auto ShapeColor = 0x450; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x454; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x454; // char : 1
		constexpr auto bDynamicObstacle = 0x454; // char : 1
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x440; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x448; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x450; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x518; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x518; // char : 1
		constexpr auto bAutoDestroy = 0x544; // char : 1
		constexpr auto bRenderingEnabled = 0x544; // char : 1
		constexpr auto bAutoManageAttachment = 0x544; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x544; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x548; // float
		constexpr auto EmitterMaterials = 0x550; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x568; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x578; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x580; // FName
		constexpr auto AutoAttachLocationRule = 0x588; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x589; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x58a; // EAttachmentRule
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UCrowWorldHLODSettingAUD {
		constexpr auto LODLevel = 0x28; // int32_t
	}

	namespace n_UCrowButtonContainerBase {
		constexpr auto ButtonList = 0x348; // TArray<UCrowWidgetToggleButton*>
		constexpr auto CP_Main = 0x358; // UCanvasPanel*
		constexpr auto MainTabPanel = 0x360; // UWidget*
		constexpr auto DefaultIndex = 0x368; // char
		constexpr auto IsStartSelectDefaultIndex = 0x369; // bool
		constexpr auto IsStartSelectAction = 0x36a; // bool
		constexpr auto UseAutoButtonIndex = 0x36b; // bool
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4d8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x530; // FVector
		constexpr auto SplineBoundaryMin = 0x53c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x540; // FGuid
		constexpr auto BodySetup = 0x550; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x558; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x55c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x55c; // char : 1
		constexpr auto bMeshDirty = 0x55c; // char : 1
		constexpr auto ForwardAxis = 0x55d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x560; // float
	}

	namespace n_UTetherPointSegmentDefinition {
		constexpr auto Slack = 0x28; // float
		constexpr auto SimulationOptions = 0x2c; // FTetherSegmentSimulationOptions
	}

	namespace n_UCrowHitMarkerWidget {
		constexpr auto WS_HitMarker = 0x348; // UWidgetSwitcher*
		constexpr auto WS_HitMarker_Icon = 0x350; // UWidgetSwitcher*
		constexpr auto AniHit = 0x358; // UWidgetAnimation*
		constexpr auto AniHitIcon = 0x360; // UWidgetAnimation*
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UImplicitSmoothProperties {
		constexpr auto SmoothSpeed = 0x60; // float
		constexpr auto Smoothness = 0x64; // float
		constexpr auto bPreserveUVs = 0x68; // bool
		constexpr auto VolumeCorrection = 0x6c; // float
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_USmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_USharpPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_ACrowGameModeDM {
		constexpr auto PlayerKillLimit = 0x4a8; // uint32_t
		constexpr auto GodModeTime = 0x4ac; // uint32_t
		constexpr auto IsEnableFastRespawn = 0x4b0; // bool
		constexpr auto FastRespawnPrice = 0x4b4; // int32_t
		constexpr auto TimerHandle_ReturnToEntry = 0x4b8; // FTimerHandle
		constexpr auto WinnerPlayerArray = 0x4c0; // TArray<uint32_t>
	}

	namespace n_UCrowMessageBoxWidget {
		constexpr auto CurrentMBInfo = 0x350; // FCrowMessageBoxInfo
		constexpr auto CP_Contents = 0x380; // UCanvasPanel*
		constexpr auto RTB_MessageContents = 0x388; // URichTextBlock*
		constexpr auto HB_CrowWidgetButtons = 0x390; // UHorizontalBox*
		constexpr auto SP_CrowWidgetSpacer = 0x398; // USpacer*
		constexpr auto BT_MessageButton_2 = 0x3a0; // UCrowButton*
		constexpr auto TB_MessageButton_2 = 0x3a8; // UTextBlock*
		constexpr auto BT_MessageButton_3 = 0x3b0; // UCrowButton*
		constexpr auto TB_MessageButton_3 = 0x3b8; // UTextBlock*
		constexpr auto BackgroundBlur = 0x3c0; // UBackgroundBlur*
		constexpr auto WS_MessageSwitcher = 0x3c8; // UWidgetSwitcher*
		constexpr auto IMG_MessageContents = 0x3d0; // UImage*
		constexpr auto RTB_IconBoxMessage = 0x3d8; // URichTextBlock*
	}

	namespace n_ACrowSkydivingSpawner {
		constexpr auto SkydivingPawnClass = 0x220; // ACrowSkydivingPawn*
	}

	namespace n_UCrowWorldMapGridWidget {
		constexpr auto CurrMagnification = 0x348; // float
		constexpr auto GridSlot = 0x350; // UUserWidget*
		constexpr auto GridLineSize = 0x358; // FVector2D
		constexpr auto GridSize = 0x360; // float
		constexpr auto HorizentalImage = 0x368; // UPaperSprite*
		constexpr auto VerticalImage = 0x370; // UPaperSprite*
		constexpr auto TileImage = 0x378; // bool
		constexpr auto GridPanelX = 0x380; // UHorizontalBox*
		constexpr auto GridPanelY = 0x388; // UVerticalBox*
		constexpr auto HorizontalSlotList = 0x390; // TArray<UCrowWorldMapGridSlot*>
		constexpr auto VerticalSlotList = 0x3a0; // TArray<UCrowWorldMapGridSlot*>
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UPlaneCutOperatorFactory {
		constexpr auto CutTool = 0x30; // UPlaneCutTool*
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_ACrowConquestUAVSupportActor {
		constexpr auto StartDelay = 0x220; // float
		constexpr auto ReconTime = 0x224; // float
		constexpr auto ReconRadius = 0x228; // float
		constexpr auto MoveStartSound = 0x230; // UAkAudioEvent*
		constexpr auto StartSound = 0x238; // UAkAudioEvent*
		constexpr auto EndSound = 0x240; // UAkAudioEvent*
		constexpr auto IconDisplayInfo = 0x248; // FCrowGameIconDisplayInfo
		constexpr auto OwnerTeamID = 0x2d0; // char
		constexpr auto OwnerServerKey = 0x2d8; // uint64_t
		constexpr auto CurrentState = 0x2e0; // ECrowConquestUAVSupportState
		constexpr auto GameState = 0x2e8; // ACrowGameStateConquest*
	}

	namespace n_UCrowHUDWidgetFullScreenTop {
		constexpr auto WB_DeathInfo = 0x348; // UCrowDeathInfoWidget*
		constexpr auto WB_2ndWindWidget = 0x350; // UCrowWidgetDying*
		constexpr auto WB_StartModTitle = 0x358; // UCrowStartModeTitleWidget*
	}

	namespace n_ACrowRespawnAirPlaneCamera {
		constexpr auto BoxCollision = 0x220; // UBoxComponent*
		constexpr auto SpringArmComp = 0x228; // UCrowSpringArmComponent*
		constexpr auto CameraComp = 0x230; // UCameraComponent*
		constexpr auto CameraShake = 0x238; // UMatineeCameraShake*
		constexpr auto SelectedSplineActor = 0x240; // ACrowAirPlaneRespawnSplineActor*
		constexpr auto TargetActor = 0x248; // ACrowRespawnAirPlaneActor*
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_UBTTask_CrowFireTarget {
		constexpr auto FireTime = 0x98; // float
		constexpr auto CoolDownTime = 0x9c; // float
		constexpr auto CooldownRandomDeviation = 0xa0; // float
	}

	namespace n_UCrowModSelectButtonWidget {
		constexpr auto IMG_ModIcon = 0x348; // UImage*
		constexpr auto TB_MOD_Name = 0x350; // UTextBlock*
		constexpr auto TB_Mod_Name_Select = 0x358; // UTextBlock*
		constexpr auto TB_Mod_Desc = 0x360; // UTextBlock*
		constexpr auto CTB_Select_Mod = 0x368; // UCrowToggleButton*
		constexpr auto SB_ModIcon = 0x370; // USizeBox*
		constexpr auto GameMod = 0x388; // ECrowGameMode
		constexpr auto ModIcon = 0x390; // FSlateBrush
		constexpr auto GameModName = 0x418; // FText
		constexpr auto GameModDescription = 0x430; // FText
		constexpr auto DefaultButtonBottom = 0x448; // float
		constexpr auto SelectedButtonBottom = 0x44c; // float
	}

	namespace n_UAkAudioEventData {
		constexpr auto MaxAttenuationRadius = 0xb8; // float
		constexpr auto IsInfinite = 0xbc; // bool
		constexpr auto MinimumDuration = 0xc0; // float
		constexpr auto MaximumDuration = 0xc4; // float
		constexpr auto LocalizedMedia = 0xc8; // TMap<FString, UAkAssetDataSwitchContainer*>
		constexpr auto PostedEvents = 0x118; // TSet<UAkAudioEvent*>
		constexpr auto UserDefinedSends = 0x168; // TSet<UAkAuxBus*>
		constexpr auto PostedTriggers = 0x1b8; // TSet<UAkTrigger*>
		constexpr auto GroupValues = 0x208; // TSet<UAkGroupValue*>
	}

	namespace n_UAcceptOutputProperties {
		constexpr auto bExportSeparatedPiecesAsNewMeshAssets = 0x60; // bool
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UCrowLobbyOutfitSlotListWidget {
		constexpr auto BT_NameChange = 0x380; // UCrowButton*
	}

	namespace n_UCrowWeaponRecoilComponent {
		constexpr auto Controller = 0xb0; // AController*
		constexpr auto PlayerController = 0xb8; // ACrowPlayerControllerBase*
		constexpr auto NormalRecoilInfo = 0xc0; // FWeaponRecoilInfo
		constexpr auto NormalRotationArray = 0xe0; // TArray<FRotator>
		constexpr auto AimRecoilInfo = 0xf0; // FWeaponRecoilInfo
		constexpr auto AimRotationArray = 0x110; // TArray<FRotator>
		constexpr auto IncreaseCurve = 0x148; // UCurveFloat*
		constexpr auto WeaponTable = 0x180; // FCrowWeaponTableRow
		constexpr auto PartsOptions = 0x13a0; // FCrowWeaponPartsOptions
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_ACrowWorldEventMeteor {
		constexpr auto MeteorInfoArray = 0x370; // TArray<FCrowMeteorInfo>
		constexpr auto EscapePointArray = 0x380; // TArray<ACrowEscapePointActor*>
		constexpr auto EscapePointSpawnCount = 0x390; // int32_t
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UTriangleSetComponent {
		constexpr auto Bounds = 0x468; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x484; // bool
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UCrowConquestAreaGauge {
		constexpr auto AnimIdle = 0x4a8; // UWidgetAnimation*
		constexpr auto AnimHover = 0x4b0; // UWidgetAnimation*
		constexpr auto AnimClick = 0x4b8; // UWidgetAnimation*
		constexpr auto AnimDisableActive = 0x4c0; // UWidgetAnimation*
		constexpr auto CP_Root = 0x4c8; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x4d0; // UCanvasPanel*
		constexpr auto CP_AnchorRoot = 0x4d8; // UCanvasPanel*
		constexpr auto CP_Icon = 0x4e0; // UCanvasPanel*
		constexpr auto CP_Vehicle = 0x4e8; // UCanvasPanel*
		constexpr auto TB_Name = 0x4f0; // UTextBlock*
		constexpr auto TB_Distance = 0x4f8; // UTextBlock*
		constexpr auto TB_BaseAlphabet = 0x500; // UTextBlock*
		constexpr auto TargetActor = 0x508; // ACrowConquestArea*
		constexpr auto SpawnerButtonArray = 0x510; // TArray<UCrowWidgetConquestVehicleButton*>
		constexpr auto RespawnMapWidget = 0x520; // UCrowRespawnMapWidget*
	}

	namespace n_UCrowFadeScreenWidget {
		constexpr auto IMG_FadeCutton = 0x348; // UImage*
		constexpr auto AniFadeScreen = 0x350; // UWidgetAnimation*
	}

	namespace n_UCrowLobbyProfileWidget {
		constexpr auto IMG_UserInfoBg = 0x348; // UCrowWidgetImage*
		constexpr auto TB_UserID = 0x350; // UTextBlock*
		constexpr auto IMG_LvIcon = 0x358; // UCrowWidgetImage*
		constexpr auto TB_UserLevel = 0x360; // UTextBlock*
		constexpr auto WB_ClanEmblem = 0x368; // UCrowClanEmblemWidget*
		constexpr auto TB_ClanName = 0x370; // UTextBlock*
		constexpr auto WB_Profile_Tab = 0x378; // UCrowButtonContainerBase*
		constexpr auto WS_ProfileInfo = 0x380; // UWidgetSwitcher*
		constexpr auto WB_ProfileMercenary = 0x388; // UCrowLobbyProfileMercenaryWidget*
		constexpr auto WB_ProfileSeason = 0x390; // UCrowLobbyProfileSeasonWidget*
		constexpr auto BT_Close = 0x398; // UCrowButton*
		constexpr auto SceneLobby = 0x3a0; // ACrowSceneLobby*
		constexpr auto CurrentDateTime = 0x3a8; // FDateTime
		constexpr auto UserNickName = 0x3b0; // FString
		constexpr auto SelectedTabType = 0x3c0; // ECrowRankingRecordType
		constexpr auto SelectedMercemaryRecordType = 0x3c1; // ECrowLobbyProfileRecordType
		constexpr auto SelectedMercemaryRankingDateInfoIndex = 0x3c4; // int32_t
		constexpr auto SelectedSeasonRecordType = 0x3c8; // ECrowLobbyProfileRecordType
		constexpr auto SelectedSeasonRankingDateInfoIndex = 0x3cc; // int32_t
	}

	namespace n_UCrowRotorTaskGroundFx {
		constexpr auto GroundFxDataTable = 0x40; // UDataTable*
		constexpr auto GroundFx = 0x48; // UParticleSystemComponent*
		constexpr auto CurrentSurfaceType = 0x50; // EPhysicalSurface
	}

	namespace n_UCrowShopPurchasePopup {
		constexpr auto WB_Shop_Itemslot = 0x348; // UCrowShopItemSlotWidget*
		constexpr auto TB_ItemName = 0x350; // UTextBlock*
		constexpr auto TB_ItemDesc = 0x358; // UTextBlock*
		constexpr auto TB_Money = 0x360; // UTextBlock*
		constexpr auto SCB_US = 0x368; // UScaleBox*
		constexpr auto IMG_GoldIcon = 0x370; // UImage*
		constexpr auto BT_Buy = 0x378; // UCrowButton*
		constexpr auto BT_Cancel = 0x380; // UCrowButton*
		constexpr auto PurchaseType = 0x388; // ECrowSpecificPurchaseType
		constexpr auto FreePassTargetLevel = 0x38c; // int32_t
		constexpr auto FreePassRCPCost = 0x390; // uint64_t
		constexpr auto ShopData = 0x398; // FCrowShopTableRow
	}

	namespace n_UOctreeDynamicMeshComponent {
		constexpr auto bExplicitShowWireframe = 0x4c8; // bool
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x1f8; // char : 1
		constexpr auto AuxBus = 0x200; // UAkAuxBus*
		constexpr auto AuxBusName = 0x208; // FString
		constexpr auto SendLevel = 0x218; // float
		constexpr auto FadeRate = 0x21c; // float
		constexpr auto Priority = 0x220; // float
		constexpr auto NextLowerPriorityComponent = 0x228; // UAkLateReverbComponent*
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UCrowRadialMenuSquadMatch {
		constexpr auto WB_RadialMenu_5Button_1 = 0x3d0; // UCrowRadialButtonSquadMatch*
		constexpr auto WB_RadialMenu_5Button_2 = 0x3d8; // UCrowRadialButtonSquadMatch*
		constexpr auto WB_RadialMenu_5Button_3 = 0x3e0; // UCrowRadialButtonSquadMatch*
		constexpr auto WB_RadialMenu_5Button_4 = 0x3e8; // UCrowRadialButtonSquadMatch*
		constexpr auto WB_RadialMenu_5Button_5 = 0x3f0; // UCrowRadialButtonSquadMatch*
		constexpr auto TB_Money = 0x3f8; // UTextBlock*
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_UPcMNew_FP_Test_C {
		constexpr auto UberGraphFrame = 0x6f0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x6f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik_3 = 0x720; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_2 = 0x8b0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0xa40; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xbd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator = 0xc90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0xce0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xe38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xe60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0xe88; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xfe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x1008; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x10c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_2 = 0x10f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x1120; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x1148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x1170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x1198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x11c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_16 = 0x11e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x1218; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x1298; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x12c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x1348; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x1378; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x1418; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x1518; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x15b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x16d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1758; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x17d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x1908; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x1938; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x19e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x1a10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x1a38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x1a60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x1a88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x1ab0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x1ad8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x1b00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x1b28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x1b50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x1b78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x1ba0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x1bc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x1bf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x1c18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x1c40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x1c68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x1c90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1cb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1ce0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x1da0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1dc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x1e48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1ea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x1ec8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x1f48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x1f78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x1ff8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2028; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x20a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x20d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2100; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x21e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2268; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2308; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x23a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2428; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0x2510; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x25c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x26a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x26d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_7 = 0x2700; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2730; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x27e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x2938; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x2a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x2be8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x2d40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x2d60; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x2f40; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x3120; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x3148; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x3170; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x3198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_6 = 0x31c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x31f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_5 = 0x3218; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x3248; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x32f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x3450; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x3478; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x35d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x35f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x3620; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x3648; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x3670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x3698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x36c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_4 = 0x36e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x3718; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_3 = 0x3740; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x3770; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_2 = 0x3798; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x37c8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x3878; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x39d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x39f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x3a40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x3b28; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_Slot_2 = 0x3bf8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x3c40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x3d28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3da8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x3e48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3e78; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose = 0x3f28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LinkedInputPose = 0x4080; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x4198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x41c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x4208; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_UseCachedPose = 0x43e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x4408; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x44c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x4590; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x4698; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x46b8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x46d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_CharacterAimLocationGather = 0x47e0; // FAnimNode_AimLocationGather
		constexpr auto AnimGraphNode_Root = 0x4810; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x4840; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x4948; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LinkedAnimLayer = 0x4968; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_ModifyBone = 0x4a18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4b20; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto TargetMesh = 0x4b40; // USkeletalMeshComponent*
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_ACrowIronShieldActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto MeshComponent = 0x228; // USkeletalMeshComponent*
		constexpr auto HP = 0x230; // float
		constexpr auto LifeTime = 0x234; // float
		constexpr auto BuildDistance = 0x238; // float
		constexpr auto BuildAni = 0x240; // UAnimationAsset*
		constexpr auto DestroyEffect = 0x248; // UParticleSystem*
		constexpr auto DestroySound = 0x250; // UAkAudioEvent*
		constexpr auto BuildHeight = 0x258; // float
		constexpr auto PlayerController = 0x260; // ACrowPlayerControllerBase*
		constexpr auto CharacterPawn = 0x268; // ACrowCharacterPawn*
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_ACrowGameStartCameraWork {
		constexpr auto CameraSpot = 0x7a0; // UStaticMeshComponent*
		constexpr auto MapIndex = 0x7a8; // int32_t
		constexpr auto PlayTime = 0x7ac; // float
		constexpr auto BGMSound_Loop = 0x7b0; // UAkAudioEvent*
		constexpr auto BGMSound_End = 0x7b8; // UAkAudioEvent*
		constexpr auto WidgetClass = 0x7c0; // UCrowGameOpeningWidget*
		constexpr auto InfoArray = 0x7c8; // TArray<FCrowStartCameraWorkInfo>
		constexpr auto OpeningWidget = 0x7d8; // UCrowGameOpeningWidget*
		constexpr auto CurrentInfo = 0x7e8; // FCrowStartCameraWorkInfo
	}

	namespace n_ACrowItemTableOverviewElement {
		constexpr auto OverviewActor = 0x220; // ACrowItemTableOverview*
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UEditNormalsToolProperties {
		constexpr auto bRecomputeNormals = 0x60; // bool
		constexpr auto NormalCalculationMethod = 0x61; // ENormalCalculationMethod
		constexpr auto bFixInconsistentNormals = 0x62; // bool
		constexpr auto bInvertNormals = 0x63; // bool
		constexpr auto SplitNormalMethod = 0x64; // ESplitNormalMethod
		constexpr auto SharpEdgeAngleThreshold = 0x68; // float
		constexpr auto bAllowSharpVertices = 0x6c; // bool
	}

	namespace n_UHoleFillOperatorFactory {
		constexpr auto FillTool = 0x30; // UHoleFillTool*
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UDisplaceMeshDirectionalFilterProperties {
		constexpr auto bEnableFilter = 0x60; // bool
		constexpr auto FilterDirection = 0x64; // FVector
		constexpr auto FilterWidth = 0x70; // float
	}

	namespace n_UTetherGuideSplineMetadata {
		constexpr auto PointSegmentDefinitions = 0x28; // TArray<UTetherPointSegmentDefinition*>
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x620; // APlayerController*
		constexpr auto OriginalPlayer = 0x628; // UPlayer*
		constexpr auto SpeedScale = 0x630; // float
		constexpr auto InitialMaxSpeed = 0x634; // float
		constexpr auto InitialAccel = 0x638; // float
		constexpr auto InitialDecel = 0x63c; // float
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto AkComponent = 0x228; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x230; // bool
		constexpr auto AutoPost = 0x231; // bool
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ACrowAttachedWorldIcon {
		constexpr auto IconLocation = 0x220; // USceneComponent*
		constexpr auto IconType = 0x228; // ECrowIconType
		constexpr auto IconDisplayInfo = 0x230; // FCrowGameIconDisplayInfo
		constexpr auto ParentActor = 0x2b8; // AActor*
		constexpr auto Indicator = 0x2c0; // UCrowWorldIconWidgetBase*
	}

	namespace n_UCrowConquestGroupWidget {
		constexpr auto AniConquest = 0x348; // UWidgetAnimation*
	}

	namespace n_UCrowDialogImageGuide {
		constexpr auto TB_GuideTitle = 0x348; // UTextBlock*
		constexpr auto IMG_Guide = 0x350; // UImage*
		constexpr auto TB_GuideDesc = 0x358; // UTextBlock*
		constexpr auto AniShow = 0x360; // UWidgetAnimation*
		constexpr auto AniHide = 0x368; // UWidgetAnimation*
	}

	namespace n_AAkAcousticPortal {
		constexpr auto InitialState = 0x258; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x25c; // float
		constexpr auto ObstructionCollisionChannel = 0x260; // ECollisionChannel
	}

	namespace n_UCrowLobbyRecordScoreWidget {
		constexpr auto WB_RecordTab_Vertical = 0x348; // UCrowButtonContainerBase*
		constexpr auto WS_Total = 0x350; // UWidgetSwitcher*
		constexpr auto WB_RecordScoreTotalRank = 0x358; // UCrowRecordScoreTotalRankWidget*
		constexpr auto WB_RecordScoreRank_Grade = 0x360; // UCrowRecordScoreRankWidget*
		constexpr auto WB_RecordScoreRank_Season = 0x368; // UCrowRecordScoreRankWidget*
		constexpr auto WB_RecordScoreRank_Conquest = 0x370; // UCrowRecordScoreRankWidget*
		constexpr auto WB_RecordScoreRank_Squad = 0x378; // UCrowRecordScoreRankWidget*
		constexpr auto WB_GradeInfoPopup = 0x380; // UCrowGradeInfoPopupWidget*
		constexpr auto MyGradeData = 0x388; // UCrowScoreRankSlotGradeData*
		constexpr auto MySeasonData = 0x390; // UCrowScoreRankSlotGradeData*
		constexpr auto MyConquestData = 0x398; // UCrowScoreRankSlotModeData*
		constexpr auto MySquadData = 0x3a0; // UCrowScoreRankSlotModeData*
		constexpr auto CurrentRecordScoreTab = 0x3a8; // ECrowLobbyRecordScoreTab
		constexpr auto CurrentRecordScoreRankWidget = 0x3b0; // UCrowRecordScoreRankWidget*
		constexpr auto CurrentMyData = 0x3b8; // UCrowScoreRankSlotData*
		constexpr auto bDoEntryInitialized = 0x3d4; // bool
		constexpr auto EntryInitializedTimer = 0x3d8; // float
		constexpr auto LastEntryInitializedIndex = 0x3dc; // int32_t
	}

	namespace n_ACrowPlayerControllerBombMission {
		constexpr auto bIsInLoadoutVolume = 0xef8; // bool
	}

	namespace n_UCrowSquadMatchMineralWidget {
		constexpr auto PB_ResourceCount = 0x348; // UProgressBar*
		constexpr auto TB_CurrencyCount = 0x350; // UTextBlock*
		constexpr auto TB_TagetCurrency = 0x358; // UTextBlock*
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UCrowBombMissionTeamScoreWidget {
		constexpr auto IMGTeamIconAttack = 0x348; // UImage*
		constexpr auto IMGTeamIconDefence = 0x350; // UImage*
		constexpr auto TBRound = 0x358; // UTextBlock*
		constexpr auto TBTeamName = 0x360; // UTextBlock*
		constexpr auto TBScore = 0x368; // UTextBlock*
		constexpr auto RedTeamColor = 0x370; // FLinearColor
		constexpr auto BlueTeamColor = 0x380; // FLinearColor
	}

	namespace n_ACrowSprayActor {
		constexpr auto DecalComponent = 0x228; // UCrowDecalComponent*
	}

	namespace n_UAkAssetData {
		constexpr auto CachedHash = 0x28; // uint32_t
	}

	namespace n_UCrowSeatSquadIconWidget {
		constexpr auto IMG_Icon_Driver = 0x348; // UImage*
		constexpr auto IMG_Icon_AssistDriver = 0x350; // UImage*
		constexpr auto IMG_Icon_Shooter = 0x358; // UImage*
		constexpr auto IMG_Icon_ArmedPassenger = 0x360; // UImage*
		constexpr auto IMG_Icon_Passenger = 0x368; // UImage*
		constexpr auto TB_Index = 0x370; // UTextBlock*
		constexpr auto PrevSquadRole = 0x378; // ECrowSquadRole
	}

	namespace n_UCrowWorldTerrainSetup {
		constexpr auto TAG_HIDE_SPLINE = 0x28; // FName
		constexpr auto TAG_HIDE_FOLIAGE = 0x30; // FName
		constexpr auto World = 0x38; // UWorld*
		constexpr auto ActiveStreamingLevels = 0x40; // TSet<ULevelStreaming*>
		constexpr auto LoadedLevelsCached = 0x90; // TArray<ULevelStreaming*>
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_ACrowEscapeVehicleLadder {
		constexpr auto LadderMesh = 0x290; // USkeletalMeshComponent*
		constexpr auto CharacterBlocker = 0x298; // UBoxComponent*
		constexpr auto bIsLadderDown = 0x2a0; // bool
		constexpr auto AniLadder_Idle = 0x2a8; // UAnimMontage*
		constexpr auto AniLadder_Down = 0x2b0; // UAnimMontage*
		constexpr auto AniLadder_Up = 0x2b8; // UAnimMontage*
	}

	namespace n_UCrowButton {
		constexpr auto OnDoubleClicked = 0x430; // FMulticastInlineDelegate
		constexpr auto TweenerArray = 0x440; // TArray<UCrowWidgetTweenBase*>
		constexpr auto DisableOpacity = 0x450; // float
		constexpr auto DoubleClickTime = 0x454; // float
		constexpr auto ImageTweenColorArray = 0x458; // TArray<UImage*>
		constexpr auto TextBlockTweenColorArray = 0x468; // TArray<UTextBlock*>
		constexpr auto IconTweenColorArray = 0x478; // TArray<UImage*>
		constexpr auto OnPressColorFrom = 0x488; // FLinearColor
		constexpr auto OnPressColorEnd = 0x498; // FLinearColor
		constexpr auto OnPressTweenTime = 0x4a8; // float
		constexpr auto OnPressTextColorFrom = 0x4ac; // FLinearColor
		constexpr auto OnPressTextColorEnd = 0x4bc; // FLinearColor
		constexpr auto OnPressTextTweenTime = 0x4cc; // float
		constexpr auto OnPressIconColorFrom = 0x4d0; // FLinearColor
		constexpr auto OnPressIconColorEnd = 0x4e0; // FLinearColor
		constexpr auto OnPressIconTweenTime = 0x4f0; // float
		constexpr auto OnReleaseColorFrom = 0x4f4; // FLinearColor
		constexpr auto OnReleaseColorEnd = 0x504; // FLinearColor
		constexpr auto OnReleaseTweenTime = 0x514; // float
		constexpr auto OnReleaseTextColorFrom = 0x518; // FLinearColor
		constexpr auto OnReleaseTextColorEnd = 0x528; // FLinearColor
		constexpr auto OnReleaseTextTweenTime = 0x538; // float
		constexpr auto OnReleaseIconColorFrom = 0x53c; // FLinearColor
		constexpr auto OnReleaseIconColorEnd = 0x54c; // FLinearColor
		constexpr auto OnReleaseIconTweenTime = 0x55c; // float
		constexpr auto OnHoverColorFrom = 0x560; // FLinearColor
		constexpr auto OnHoverColorEnd = 0x570; // FLinearColor
		constexpr auto OnHoverTweenTime = 0x580; // float
		constexpr auto OnHoverTextColorFrom = 0x584; // FLinearColor
		constexpr auto OnHoverTextColorEnd = 0x594; // FLinearColor
		constexpr auto OnHoverTextTweenTime = 0x5a4; // float
		constexpr auto OnHoverIconColorFrom = 0x5a8; // FLinearColor
		constexpr auto OnHoverIconColorEnd = 0x5b8; // FLinearColor
		constexpr auto OnHoverIconTweenTime = 0x5c8; // float
		constexpr auto UseLegacy = 0x5cc; // bool
		constexpr auto OnUnHoverColorFrom = 0x5d0; // FLinearColor
		constexpr auto OnUnHoverColorEnd = 0x5e0; // FLinearColor
		constexpr auto OnUnHoverTweenTime = 0x5f0; // float
		constexpr auto OnUnHoverTextColorFrom = 0x5f4; // FLinearColor
		constexpr auto OnUnHoverTextColorEnd = 0x604; // FLinearColor
		constexpr auto OnUnHoverTextTweenTime = 0x614; // float
		constexpr auto OnUnHoverIconColorFrom = 0x618; // FLinearColor
		constexpr auto OnUnHoverIconColorEnd = 0x628; // FLinearColor
		constexpr auto OnUnHoverIconTweenTime = 0x638; // float
		constexpr auto AudioEvent_Clicked = 0x640; // UAkAudioEvent*
		constexpr auto UseHoveredSound = 0x648; // bool
		constexpr auto AudioEvent_Hovered = 0x650; // UAkAudioEvent*
		constexpr auto PreOpacity = 0x664; // float
		constexpr auto EventHandler = 0x668; // UCrowWidgetBase*
		constexpr auto HandlerClass = 0x670; // UCrowWidgetBase*
		constexpr auto HandlerName = 0x678; // FString
		constexpr auto Event = 0x688; // ECrowEvent
		constexpr auto ClickCaptured = 0x68c; // bool
		constexpr auto CapturedDelta = 0x690; // float
		constexpr auto EnableHoverdTween = 0x694; // bool
	}

	namespace n_UCrowLobbyMainMedalSlotWidget {
		constexpr auto WS_MedalStatus = 0x358; // UWidgetSwitcher*
		constexpr auto BT_MedalToggle_Continue = 0x360; // UCrowToggleButton*
		constexpr auto BT_MedalToggle_Complete = 0x368; // UCrowToggleButton*
		constexpr auto IMG_Medal_Continue = 0x370; // UCrowWidgetImage*
		constexpr auto IMG_Medal_Complete = 0x378; // UCrowWidgetImage*
		constexpr auto TB_DeselectMedalName_Continue = 0x380; // UTextBlock*
		constexpr auto TB_SelectMedalName_Continue = 0x388; // UTextBlock*
		constexpr auto TB_DeselectMedalName_Complete = 0x390; // UTextBlock*
		constexpr auto TB_SelectMedalName_Complete = 0x398; // UTextBlock*
		constexpr auto TB_DeselectMedalCount_Continue = 0x3a0; // UTextBlock*
		constexpr auto TB_SelectMedalCount_Continue = 0x3a8; // UTextBlock*
		constexpr auto TB_DeselectMedalCount_Complete = 0x3b0; // UTextBlock*
		constexpr auto TB_SelectMedalCount_Complete = 0x3b8; // UTextBlock*
		constexpr auto WS_Complete_Icon = 0x3c0; // UWidgetSwitcher*
		constexpr auto MedalIndex = 0x3c8; // uint32_t
		constexpr auto MedalGroupIndex = 0x3cc; // uint32_t
	}

	namespace n_UCrowMedalIconWidget {
		constexpr auto IMG_Medal_Spawn = 0x378; // UImage*
	}

	namespace n_UCrowSupplyBoxTableManager {
		constexpr auto SupplyBoxRows = 0x28; // TMap<ECrowSupplyBoxType, FCrowSupplyBoxRow>
	}

	namespace n_UCrowMailPopupWidget {
		constexpr auto WB_TabMenu_Post = 0x348; // UCrowButtonContainerBase*
		constexpr auto BT_Close = 0x350; // UCrowButton*
		constexpr auto BT_AllReward = 0x358; // UCrowButton*
		constexpr auto WS_RewardList = 0x360; // UWidgetSwitcher*
		constexpr auto SB_PersonalRewardList = 0x368; // UScrollBox*
		constexpr auto SB_AccountRewardList = 0x370; // UScrollBox*
		constexpr auto CP_Empty = 0x378; // UCanvasPanel*
		constexpr auto SlotWidgetClass = 0x380; // UCrowMailPopupSlotWidget*
		constexpr auto MailPopupState = 0x388; // ECrowMailPopupState
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UCrowTriggerDisplay {
		constexpr auto TutorialHUDInfo = 0x28; // FCrowTriggerTutorialHUD
		constexpr auto CrowPlayerController = 0x40; // ACrowPlayerControllerBase*
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UCrowCustomWaitingRoomSlotWidget {
		constexpr auto BT_RoomSlot = 0x348; // UCrowToggleButton*
		constexpr auto IMG_Deselec_01 = 0x350; // UImage*
		constexpr auto IMG_Deselect_02 = 0x358; // UImage*
		constexpr auto IMG_DeselecLock = 0x360; // UImage*
		constexpr auto IMG_SelectLock = 0x368; // UImage*
		constexpr auto TB_RoomName = 0x370; // UTextBlock*
		constexpr auto TB_ModeName = 0x378; // UTextBlock*
		constexpr auto TB_MapName = 0x380; // UTextBlock*
		constexpr auto TB_UserCount = 0x388; // UTextBlock*
		constexpr auto TB_State = 0x390; // UTextBlock*
		constexpr auto TB_RoomName_Select = 0x398; // UTextBlock*
		constexpr auto TB_ModeName_Select = 0x3a0; // UTextBlock*
		constexpr auto TB_MapName_Select = 0x3a8; // UTextBlock*
		constexpr auto TB_UserCount_Select = 0x3b0; // UTextBlock*
		constexpr auto TB_State_Select = 0x3b8; // UTextBlock*
		constexpr auto SelectedRoomInfo = 0x3d0; // FCrowCustomDisplayRoomInfo
	}

	namespace n_UCrowSoundBranchActor {
		constexpr auto ActorType = 0x48; // EActorType
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UHoleFillToolProperties {
		constexpr auto FillType = 0x60; // EHoleFillOpFillType
		constexpr auto bRemoveIsolatedTriangles = 0x61; // bool
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UCrowWeaponAnimGatling {
		constexpr auto State = 0xb0; // ECrowWeaponAnimGatlingState
		constexpr auto Speed = 0xb4; // float
		constexpr auto RotorRotator = 0xb8; // FRotator
		constexpr auto Accelerator = 0xc4; // float
		constexpr auto RotatorPerSecond = 0xc8; // float
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4d0; // float
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4d0; // FGuid
		constexpr auto ProxyComponentBases = 0x4e0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x4f0; // int8_t
	}

	namespace n_UCrowGradeInfoPopupSlotWidget {
		constexpr auto IMG_RankIcon = 0x348; // UCrowWidgetImage*
		constexpr auto TB_Rank = 0x350; // UTextBlock*
		constexpr auto TB_Exp = 0x358; // UTextBlock*
	}

	namespace n_ACrowRecoilEditorItem {
		constexpr auto DefaultDecal = 0x220; // FDecalData
		constexpr auto DecalComp = 0x260; // UDecalComponent*
	}

	namespace n_UCrowAISettings {
		constexpr auto ArrowSize = 0x38; // float
		constexpr auto ArrowOffset = 0x3c; // float
		constexpr auto BillboardSprite = 0x40; // TSoftObjectPtr<UTexture2D>
		constexpr auto BillboardSize = 0x68; // float
		constexpr auto CharacterMesh = 0x70; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto CharacterMeshMaterial = 0x98; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto CharacterPreviewAnim = 0xc0; // TSoftObjectPtr<UAnimSequenceBase>
		constexpr auto CharacterMeshRotationOffset = 0xe8; // FRotator
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x440; // FSplineCurves
		constexpr auto SplineInfo = 0x4b0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4c8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4e0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4f8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x510; // bool
		constexpr auto ReparamStepsPerSegment = 0x514; // int32_t
		constexpr auto Duration = 0x518; // float
		constexpr auto bStationaryEndpoints = 0x51c; // bool
		constexpr auto bSplineHasBeenEdited = 0x51d; // bool
		constexpr auto bModifiedByConstructionScript = 0x51e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x51f; // bool
		constexpr auto bDrawDebug = 0x520; // bool
		constexpr auto bClosedLoop = 0x521; // bool
		constexpr auto bLoopPositionOverride = 0x522; // bool
		constexpr auto LoopPosition = 0x524; // float
		constexpr auto DefaultUpVector = 0x528; // FVector
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UCrowVehicleWheelEffect {
		constexpr auto VehiclePawn = 0xc0; // ACrowVehiclePawn*
		constexpr auto VehicleParam = 0xc8; // UCrowVehicleParam*
		constexpr auto ImpactDamageControl = 0xd0; // UCrowImpactDamageControl*
		constexpr auto ParticleSystemParameterNames = 0xd8; // TArray<FName>
		constexpr auto EffectCurveRotation = 0xe8; // UCurveFloat*
		constexpr auto MaxWheelRotationSpeed = 0xf0; // float
		constexpr auto EffectCurveSlip = 0xf8; // UCurveFloat*
		constexpr auto MaxWheelSlip = 0x100; // float
		constexpr auto WheelLatSlipMultiplier = 0x104; // float
		constexpr auto UseWheelRotationBlur = 0x108; // bool
		constexpr auto WheelBlurRotationSpeed = 0x10c; // float
		constexpr auto FxDefaultWheelBlur = 0x110; // UParticleSystem*
		constexpr auto WheelBlurOverrides = 0x118; // TArray<FCrowWheelEffectBlur>
		constexpr auto WheelRotationSoundStart = 0x128; // UAkAudioEvent*
		constexpr auto WheelRotationSoundEnd = 0x130; // UAkAudioEvent*
		constexpr auto WheelCount = 0x138; // int32_t
		constexpr auto WheelParticles = 0x140; // TArray<UParticleSystemComponent*>
		constexpr auto WheelBlurParticles = 0x150; // TArray<UParticleSystemComponent*>
		constexpr auto DissolvingParticles = 0x160; // TArray<FCrowWheelEffectDissolve>
		constexpr auto WheelSlipParticles = 0x170; // TArray<UParticleSystemComponent*>
		constexpr auto DissolvingSlipParticles = 0x180; // TArray<FCrowWheelEffectDissolve>
		constexpr auto WheelRotationSounds = 0x190; // TArray<UAkComponent*>
		constexpr auto IsSkiddings = 0x1a0; // TArray<bool>
		constexpr auto TireStates = 0x1b0; // TArray<ETireState>
		constexpr auto SkiddingValue = 0x1c0; // float
		constexpr auto SkiddingFlatValue = 0x1c4; // float
		constexpr auto SkiddingDestroyValue = 0x1c8; // float
		constexpr auto ContactPhysicalMatName = 0x1d0; // FString
		constexpr auto WheelSpin = 0x1e0; // float
		constexpr auto IsInAirNow = 0x1e4; // bool
		constexpr auto InAirZ = 0x1e8; // float
	}

	namespace n_ACrowWeaponCharacter {
		constexpr auto bIsAutoSelect = 0x1e10; // bool
		constexpr auto WeaponModelThirdAttached = 0x1e18; // UMeshComponent*
		constexpr auto CharacterOwner = 0x1e20; // ACrowCharacterPawn*
		constexpr auto CharacterMovement = 0x1e28; // UCrowCharacterMovement*
		constexpr auto CharacterSubStateFire = 0x1e30; // UCrowWeaponSubStateFire*
		constexpr auto CharacterAimComponent = 0x1e38; // UCrowCharacterAimComponent*
		constexpr auto LongPressedAimTimerHandler = 0x1e68; // FTimerHandle
		constexpr auto ZeroingInfo = 0x1e70; // UCrowZeroingInfo*
		constexpr auto DummyMagazine1P = 0x1e78; // ACrowWeaponDummyParts*
		constexpr auto DummyMagazine3P = 0x1e80; // ACrowWeaponDummyParts*
	}

	namespace n_UCrowInvenArmorInfoWidget {
		constexpr auto WB_HelmetSlot = 0x348; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_ArmorSlot = 0x350; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_BackPackSlot = 0x358; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto SlotList = 0x360; // TArray<UCrowInvenWeaponListSubItemWidget*>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UCrowSpectatorWidget {
		constexpr auto StartedCountdownEffect = 0x348; // float
		constexpr auto AttachedPlayerState = 0x350; // ACrowPlayerStateBase*
		constexpr auto CP_Common = 0x360; // UCanvasPanel*
		constexpr auto CP_Conquest = 0x368; // UCanvasPanel*
		constexpr auto CP_SquadOperation = 0x370; // UCanvasPanel*
		constexpr auto CP_Squad = 0x378; // UCanvasPanel*
		constexpr auto HB_Timer_2 = 0x380; // UHorizontalBox*
		constexpr auto HB_Changeview_2 = 0x388; // UHorizontalBox*
		constexpr auto HB_Skip_3 = 0x390; // UHorizontalBox*
		constexpr auto WB_BT_ResturnToLobby_2 = 0x398; // UCrowButton*
		constexpr auto WB_BT_Report_2 = 0x3a0; // UCrowButton*
		constexpr auto TB_Username_2 = 0x3a8; // UTextBlock*
		constexpr auto TB_Timer_Effect_2 = 0x3b0; // UTextBlock*
		constexpr auto TB_Timer_2 = 0x3b8; // UTextBlock*
		constexpr auto TB_TimerText = 0x3c0; // UTextBlock*
		constexpr auto TB_SquadNum = 0x3c8; // UTextBlock*
		constexpr auto IMG_SkipKeyImage_3 = 0x3d0; // UImage*
		constexpr auto IMG_RankIcon = 0x3d8; // UImage*
		constexpr auto IMG_SquadColor = 0x3e0; // UImage*
		constexpr auto AniConquestCountdown = 0x3e8; // UWidgetAnimation*
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UCrowCompassInfoMarker {
		constexpr auto WB_Objective_Icon_Blu = 0x348; // UUserWidget*
		constexpr auto WB_Objective_Icon_Gen = 0x350; // UUserWidget*
		constexpr auto WB_Objective_Icon_Red = 0x358; // UUserWidget*
		constexpr auto WB_SquadIcon = 0x360; // UUserWidget*
		constexpr auto WB_VehicleIcon = 0x368; // UUserWidget*
		constexpr auto WB_AllyIcon = 0x370; // UUserWidget*
		constexpr auto WB_CompassInfo_Range_Direction = 0x378; // UUserWidget*
		constexpr auto indicatorType = 0x380; // EIndicatorType
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UCrowInventoryCategoryWidget {
		constexpr auto IMG_Loadout_Panel = 0x348; // UImage*
		constexpr auto ING_BackPack_Panel = 0x350; // UImage*
		constexpr auto NotSelectColor = 0x358; // FLinearColor
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_ABP_MeleeThrow_CombatKnife_C {
		constexpr auto Dagger001 = 0x1940; // USkeletalMeshComponent*
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UWB_SettingsSlotKeyBinding_C {
		constexpr auto IMG_BackGround = 0x440; // UImage*
		constexpr auto IMG_BackGround_2 = 0x448; // UImage*
		constexpr auto IMG_BackGround_3 = 0x450; // UImage*
		constexpr auto IMG_BackGround_Second_2 = 0x458; // UImage*
		constexpr auto IMG_Blue00 = 0x460; // UImage*
		constexpr auto IMG_Blue00_2 = 0x468; // UImage*
		constexpr auto IMG_Blue00_3 = 0x470; // UImage*
		constexpr auto IMG_ChangeKeyBackGround = 0x478; // UImage*
		constexpr auto IMG_ChangeKeyBackGround_2 = 0x480; // UImage*
		constexpr auto IMG_ChangeKeyBackGround_Second = 0x488; // UImage*
		constexpr auto IMG_ChangeKeyBackGround_Second_2 = 0x490; // UImage*
	}

	namespace n_UCrowINDCCharacterBMWidget {
		constexpr auto CPIndicator = 0x348; // UCanvasPanel*
		constexpr auto IMGTeamIcon = 0x350; // UImage*
		constexpr auto TBUserNickName = 0x358; // UTextBlock*
		constexpr auto CPCompositionC = 0x360; // UCanvasPanel*
		constexpr auto WSStatusIcon = 0x368; // UWidgetSwitcher*
		constexpr auto PlayerStateBombMission = 0x370; // ACrowPlayerStateBombMission*
		constexpr auto TargetPlayerStateBombMission = 0x378; // ACrowPlayerStateBombMission*
		constexpr auto PrevPlayerState = 0x380; // ECrowPlayerState
		constexpr auto bIsCompositionCHolder = 0x381; // bool
		constexpr auto bIsInit = 0x382; // bool
	}

	namespace n_UCrowClothItemDescWidget {
		constexpr auto TB_ItemName = 0x348; // UTextBlock*
		constexpr auto TB_ItemDesc_01 = 0x350; // UTextBlock*
		constexpr auto TB_ItemDesc_02 = 0x358; // UTextBlock*
	}

	namespace n_UDLSSOverrideSettings {
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_UCrowSkydivingWidget {
		constexpr auto CP_PlayerInfo = 0x348; // UCanvasPanel*
		constexpr auto TB_Altitude = 0x350; // UTextBlock*
		constexpr auto TB_Speed = 0x358; // UTextBlock*
		constexpr auto IMG_Altitude = 0x360; // UImage*
		constexpr auto OV_Altitude = 0x368; // UOverlay*
		constexpr auto IMG_Land = 0x370; // UImage*
		constexpr auto IMG_parachutePoint = 0x378; // UImage*
		constexpr auto WB_TutorialInfo = 0x380; // UCrowTutorialInfoWidget*
		constexpr auto SeaLevel = 0x388; // float
		constexpr auto SkydivingRespawnZ = 0x38c; // float
		constexpr auto DefaultPlayerInfoTranslation = 0x390; // FVector2D
		constexpr auto DefaultParachutePointTranslation = 0x398; // FVector2D
		constexpr auto ParachutePointZ = 0x3a0; // float
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UCrowBoatStateBase {
		constexpr auto BoatFSM = 0x48; // UCrowVehicleBoatFSM*
	}

	namespace n_UCrowBuildingModularBuilder {
		constexpr auto GeneratedPartsArray = 0xb0; // TArray<FCrowBuildingGeneratedParts>
		constexpr auto IsFirstShowHideProps = 0xc0; // bool
		constexpr auto IsHidingProps = 0xc1; // bool
		constexpr auto ChildProps = 0xc8; // TArray<TWeakObjectPtr<ACrowWorldPropActor>>
		constexpr auto ChildItemSpawners = 0xd8; // TArray<TWeakObjectPtr<ACrowItemSpawner>>
	}

	namespace n_ACrowFirstRespawnArea {
		constexpr auto SpawnerType = 0x2f0; // ECrowSpawnerType
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_ACrowCompositionCAreaIcon {
		constexpr auto GameIconDisplayInfo = 0x220; // FCrowGameIconDisplayInfo
		constexpr auto WorldMapIcon = 0x2a8; // UCrowWorldMapIcon*
		constexpr auto IndicatorIconWidget = 0x2b0; // UCrowCompositionCAreaIconWidget*
		constexpr auto bIsPlantCompositionC = 0x2b8; // bool
	}

	namespace n_AMagicLeapARPinInfoActor_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Right = 0x240; // UStaticMeshComponent*
		constexpr auto Forward = 0x248; // UStaticMeshComponent*
		constexpr auto Up = 0x250; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x258; // USphereComponent*
		constexpr auto AxisRoot = 0x260; // USceneComponent*
		constexpr auto VisualizerRoot = 0x268; // USceneComponent*
		constexpr auto TypeValue = 0x270; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x278; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x280; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x288; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x290; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2a8; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b0; // USceneComponent*
		constexpr auto Root = 0x2b8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c0; // float
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_ACrowVehiclesPropertyActor {
		constexpr auto SphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto OceanTracker = 0x228; // UCrowVehicleOceanTracker*
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UCrowResultSceneWidget {
		constexpr auto AutoNextTime = 0x368; // float
		constexpr auto AutoNextTimeHandle = 0x370; // FTimerHandle
		constexpr auto WB_BT_Skip = 0x378; // UCrowButton*
	}

	namespace n_UMeshEditingViewProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto MaterialMode = 0x64; // EMeshEditingMaterialModes
		constexpr auto bFlatShading = 0x68; // bool
		constexpr auto Color = 0x6c; // FLinearColor
		constexpr auto Image = 0x80; // UTexture2D*
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UInflateBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UCrowTabMenuWeaponSettingWidget {
		constexpr auto WB_LobbyButton_Tab_Acc = 0x380; // UCrowWidgetToggleButton*
		constexpr auto CustomizeItemDescWidget = 0x388; // UCrowCustomizeItemDescWidget*
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAnimNotify_AkEvent_C {
		constexpr auto Attach Name = 0x38; // FString
		constexpr auto Event = 0x48; // UAkAudioEvent*
		constexpr auto Follow = 0x50; // bool
		constexpr auto EventName = 0x58; // FString
	}

	namespace n_UWB_SettingsSlotTitle_C {
		constexpr auto IMG_BG = 0x358; // UImage*
	}

	namespace n_ACrowLoginHUD {
		constexpr auto LoginMainWidget = 0x310; // UUserWidget*
		constexpr auto MainWidget = 0x318; // UCrowLoginWidget*
	}

	namespace n_ACrowVolumetricCloudEditorActor {
		constexpr auto PreviewIndex = 0x2c8; // int32_t
		constexpr auto MeshForFixArtifacts = 0x2d0; // UStaticMesh*
		constexpr auto SpawnedActors = 0x2d8; // TArray<ACrowCloudScapeActor*>
		constexpr auto bLivePreview = 0x2e8; // bool
		constexpr auto bEnablePreview = 0x2e9; // bool
		constexpr auto bHuman = 0x2ea; // bool
		constexpr auto bDisplayResultScene = 0x2eb; // bool
		constexpr auto TestSetting = 0x2f0; // FCrowVoluemetricCloudSetting
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UCrowActorInitializerBase {
		constexpr auto TargetActor = 0xb0; // AActor*
		constexpr auto ComponentContainer = 0xb8; // UCrowComponentContainer*
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_SubMachinegun_First_C {
		constexpr auto Image_372 = 0x438; // UImage*
		constexpr auto IMG_Box_CrossHair = 0x440; // UImage*
		constexpr auto IMG_Crosshair_Gauge = 0x448; // UImage*
		constexpr auto IMG_Crosshair_Gauge_Base = 0x450; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x458; // UImage*
		constexpr auto IMG_CrosshairFrame = 0x460; // UImage*
		constexpr auto IMG_Range_BG = 0x468; // UImage*
		constexpr auto IMG_Range_Frame = 0x470; // UImage*
		constexpr auto IMG_Range_Shadow = 0x478; // UImage*
		constexpr auto IMG_TPS_Down = 0x480; // UImage*
		constexpr auto IMG_TPS_Down_2 = 0x488; // UImage*
		constexpr auto IMG_TPS_Left = 0x490; // UImage*
		constexpr auto IMG_TPS_Left_2 = 0x498; // UImage*
		constexpr auto IMG_TPS_Right = 0x4a0; // UImage*
		constexpr auto IMG_TPS_Right_2 = 0x4a8; // UImage*
		constexpr auto IMG_TPS_Up = 0x4b0; // UImage*
		constexpr auto IMG_TPS_Up_2 = 0x4b8; // UImage*
		constexpr auto IMG_ZoomIn_BG = 0x4c0; // UImage*
		constexpr auto IMG_ZoomIn_Frame = 0x4c8; // UImage*
		constexpr auto IMG_ZoomIn_Shadow = 0x4d0; // UImage*
	}

	namespace n_UCrowFoliageISMC {
		constexpr auto InstanceDamageTotal = 0x698; // TMap<int32_t, float>
		constexpr auto ShakingStates = 0x6e8; // TMap<int32_t, FCrowWorldSMCShakingState>
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_UCrowActorRotatorWidget {
		constexpr auto bIsRotateHorizontal = 0x348; // bool
		constexpr auto bIsRotateVertical = 0x349; // bool
		constexpr auto bInverseHorizontal = 0x34a; // bool
		constexpr auto bInversVertical = 0x34b; // bool
		constexpr auto TargetActor = 0x350; // AActor*
	}

	namespace n_UCrowWeaponInfoWidget {
		constexpr auto WS_WeaponMode = 0x348; // UWidgetSwitcher*
		constexpr auto WS_VehicleAmmoCount = 0x350; // UWidgetSwitcher*
		constexpr auto WS_NomalAmmoCount = 0x358; // UWidgetSwitcher*
		constexpr auto IMG_Weapon = 0x360; // UCrowWidgetImage*
		constexpr auto TB_WeaponName = 0x368; // UTextBlock*
		constexpr auto TB_VehicleAmmo = 0x370; // UTextBlock*
		constexpr auto TB_AmmoCount = 0x378; // UTextBlock*
		constexpr auto TB_ReaminAmmo = 0x380; // UTextBlock*
		constexpr auto HB_BurstType = 0x388; // UHorizontalBox*
		constexpr auto VB_AmmoInfo = 0x390; // UVerticalBox*
		constexpr auto CP_VehicleReload = 0x398; // UCanvasPanel*
		constexpr auto IMG_Gauge_Reload = 0x3a0; // UImage*
		constexpr auto CP_VehicleHeat = 0x3a8; // UCanvasPanel*
		constexpr auto IMG_Gauge_Heat = 0x3b0; // UImage*
		constexpr auto BD_SemiAuto = 0x3b8; // UBorder*
		constexpr auto IMG_SemiAuto = 0x3c0; // UImage*
		constexpr auto BD_Burst = 0x3c8; // UBorder*
		constexpr auto IMG_Burst = 0x3d0; // UImage*
		constexpr auto BD_Auto = 0x3d8; // UBorder*
		constexpr auto IMG_Auto = 0x3e0; // UImage*
		constexpr auto RTB_Key_ChangeType = 0x3e8; // UCrowInputMappingWidget*
		constexpr auto GaugeReloadMaterial = 0x3f0; // UMaterialInstanceDynamic*
		constexpr auto GaugeHeatMaterial = 0x3f8; // UMaterialInstanceDynamic*
		constexpr auto BurstImageList = 0x400; // TArray<UImage*>
		constexpr auto TB_AmmoType = 0x410; // UTextBlock*
		constexpr auto PrevFireMode = 0x418; // ECrowWeaponFireMode
		constexpr auto IsGun = 0x419; // bool
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_ACrowFoliageReplicationActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto BitFlagArray = 0x228; // FBitFlagArray
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_Side_BAR_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto BAR_LasersightSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UCrowCharacterSwimTableManager {
		constexpr auto LoadedTable = 0x28; // UDataTable*
		constexpr auto SwimTableMap = 0x30; // TMap<FName, FCrowCharacterSwimTableRow>
	}

	namespace n_UCrowVehicleCrosshairBase {
		constexpr auto IMG_Crosshair_Point = 0x360; // UImage*
		constexpr auto OverlayCrosshairPoint = 0x368; // UOverlay*
		constexpr auto OverlayCrosshairMoving = 0x370; // UOverlay*
		constexpr auto CrosshairRoot = 0x378; // UWidget*
		constexpr auto TXT_Aim_Zoom = 0x380; // UTextBlock*
		constexpr auto TXT_Aim_Range = 0x388; // UTextBlock*
		constexpr auto TXT_Crosshair_Status = 0x390; // UTextBlock*
		constexpr auto CPLeft = 0x398; // UCanvasPanel*
		constexpr auto CPRight = 0x3a0; // UCanvasPanel*
		constexpr auto CPUp = 0x3a8; // UCanvasPanel*
		constexpr auto CPDown = 0x3b0; // UCanvasPanel*
		constexpr auto LeftTranslation = 0x3b8; // FVector2D
		constexpr auto RightTranslation = 0x3c0; // FVector2D
		constexpr auto UpTranslation = 0x3c8; // FVector2D
		constexpr auto DownTranslation = 0x3d0; // FVector2D
		constexpr auto DefaultCrosshairMovingTranslation = 0x3d8; // FVector2D
		constexpr auto MaxRange = 0x3e0; // float
		constexpr auto bIsHiddenCrosshairAtAiming = 0x3e4; // bool
		constexpr auto SpringArm = 0x3e8; // UCrowSpringArmComponent*
		constexpr auto VehiclePawn = 0x3f0; // APawn*
		constexpr auto LerpCrosshairMoving = 0x3f8; // FCrowLerpTranslationInfo
	}

	namespace n_UCrowCustomizeWeaponAccWidget {
		constexpr auto GD_SlotList = 0x348; // UGridPanel*
		constexpr auto SCB_Itemlist = 0x350; // UScrollBox*
		constexpr auto WeaponAccSlotWidgetClass = 0x358; // UCrowCustomizeWeaponAccSlotWidget*
		constexpr auto SceneLobby = 0x360; // ACrowSceneLobby*
		constexpr auto SceneGame = 0x368; // ACrowSceneGame*
		constexpr auto WeaponAccSlotWidgetArray = 0x370; // TArray<UCrowCustomizeWeaponAccSlotWidget*>
		constexpr auto CurrentStickerSlotInfo = 0x380; // FCrowWeaponStickerInfo
		constexpr auto CurrentAccType = 0x388; // ECrowWeaponAccType
		constexpr auto IsShopMode = 0x389; // bool
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_ACrowConquestArea {
		constexpr auto AreaName = 0x2f0; // FText
		constexpr auto AlphabetName = 0x308; // FString
		constexpr auto GroupKey = 0x318; // FString
		constexpr auto InitialTeam = 0x328; // ECrowTeam_RedBlue
		constexpr auto bIsEnableConquest = 0x329; // bool
		constexpr auto ResourcePointAdd = 0x32a; // char
		constexpr auto ResourcePointAddTime = 0x32b; // char
		constexpr auto ConquestPoint = 0x32c; // char
		constexpr auto ConquestPointInfo = 0x32d; // FCrowConquestPointInfo
		constexpr auto NeturalRecoveryPoint = 0x33d; // char
		constexpr auto NeturalRecoveryTimeLimit = 0x33e; // char
		constexpr auto ConquestRecoveryPoint = 0x33f; // char
		constexpr auto ConquestRecoveryTimeLimit = 0x340; // char
		constexpr auto SupplyBaseTableIndex = 0x344; // int32_t
		constexpr auto CaptureCompleteSound = 0x348; // UAkAudioEvent*
		constexpr auto CapturingSound = 0x350; // UAkAudioEvent*
		constexpr auto LosingSound = 0x358; // UAkAudioEvent*
		constexpr auto LostSound = 0x360; // UAkAudioEvent*
		constexpr auto IconNeutralityNormal = 0x368; // FCrowGameIconDisplayInfo
		constexpr auto IconMyTeamNormal = 0x3f0; // FCrowGameIconDisplayInfo
		constexpr auto IconEnemyNormal = 0x478; // FCrowGameIconDisplayInfo
		constexpr auto IconNeutralityChange = 0x500; // FCrowGameIconDisplayInfo
		constexpr auto IconMyTeamChange = 0x588; // FCrowGameIconDisplayInfo
		constexpr auto IconEnemyChange = 0x610; // FCrowGameIconDisplayInfo
		constexpr auto IconNeutralityNormalDisable = 0x698; // FCrowGameIconDisplayInfo
		constexpr auto IconMyTeamNormalDisable = 0x720; // FCrowGameIconDisplayInfo
		constexpr auto IconEnemyNormalDisable = 0x7a8; // FCrowGameIconDisplayInfo
		constexpr auto IconNeutralityChangeDisable = 0x830; // FCrowGameIconDisplayInfo
		constexpr auto IconMyTeamChangeDisable = 0x8b8; // FCrowGameIconDisplayInfo
		constexpr auto IconEnemyChangeDisable = 0x940; // FCrowGameIconDisplayInfo
		constexpr auto bIsDisplayHUD = 0x9c8; // bool
		constexpr auto HUD_IconNeutrality = 0x9d0; // UCrowWidgetBase*
		constexpr auto HUD_IconMyTeam = 0x9d8; // UCrowWidgetBase*
		constexpr auto HUD_IconEnemy = 0x9e0; // UCrowWidgetBase*
		constexpr auto HUD_IconNeutralityDisable = 0x9e8; // UCrowWidgetBase*
		constexpr auto HUD_IconMyTeamDisable = 0x9f0; // UCrowWidgetBase*
		constexpr auto HUD_IconEnemyDisable = 0x9f8; // UCrowWidgetBase*
		constexpr auto AreaMinimapIcon = 0xa00; // FCrowGameIconDisplayInfo
		constexpr auto RedGaugeInterpolate = 0xa88; // UCrowGaugeInterpolate*
		constexpr auto BlueGaugeInterpolate = 0xa90; // UCrowGaugeInterpolate*
		constexpr auto IconIndicator = 0xa98; // UCrowConquestAreaGauge*
		constexpr auto IndicatorViewInfo = 0xaa0; // UCrowIndicatorViewInfo*
		constexpr auto ConquestVehicleSpawnerGroundArray = 0xaa8; // TArray<ACrowConquestVehicleSpawnerGround*>
		constexpr auto ConquestAreaInfo = 0xac8; // FCrowConquestAreaInfo
		constexpr auto VehicleSpawnerArray = 0xae8; // TArray<UCrowConquestAreaVehicleSpawner*>
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UAkInitBankAssetData {
		constexpr auto PluginInfos = 0x90; // TArray<FAkPluginInfo>
	}

	namespace n_UCrowRespawnProgress {
		constexpr auto Timer_Respawning = 0x348; // FTimerHandle
		constexpr auto fRespawnSecond = 0x350; // float
		constexpr auto fRespawnStartTimeSecond = 0x354; // float
		constexpr auto PB_RespawnProgress = 0x358; // UProgressBar*
		constexpr auto TXT_RespawnProgress = 0x360; // UTextBlock*
	}

	namespace n_UCrowVehicleWeaponManager {
		constexpr auto EmptyWeapons = 0xb0; // TArray<ACrowWeaponVehicle*>
		constexpr auto EquipmentWeaponMap = 0xc0; // TMap<int32_t, FCrowVehicleSeatWeaponData>
		constexpr auto SpecialWeaponMap = 0x110; // TMap<int32_t, ACrowWeaponVehicle*>
		constexpr auto ChildActorList = 0x160; // TArray<AActor*>
	}

	namespace n_ABP_GBU31_Missile_C {
		constexpr auto GBU31 = 0x240; // USkeletalMeshComponent*
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_CLSMovementAction {
		constexpr auto MovementAction = 0x30; // ECLSMovementAction
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UWaterSubsystem {
		constexpr auto OnCameraUnderwaterStateChanged = 0x70; // FMulticastInlineDelegate
		constexpr auto OnWaterScalabilityChanged = 0x80; // FMulticastInlineDelegate
		constexpr auto DefaultRiverMesh = 0x90; // UStaticMesh*
		constexpr auto DefaultLakeMesh = 0x98; // UStaticMesh*
		constexpr auto WaterMeshActor = 0xa0; // AWaterMeshActor*
		constexpr auto MaterialParameterCollection = 0xd0; // UMaterialParameterCollection*
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x440; // UModel*
		constexpr auto BrushBodySetup = 0x448; // UBodySetup*
	}

	namespace n_UMeshVertexSculptTool {
		constexpr auto SculptProperties = 0x9d8; // UVertexBrushSculptProperties*
		constexpr auto DynamicMeshComponent = 0x9e0; // USimpleDynamicMeshComponent*
	}

	namespace n_UCrowBookMarkWidget {
		constexpr auto BT_BookMark = 0x358; // UCrowButton*
		constexpr auto TB_BookmarkTimer = 0x360; // UTextBlock*
	}

	namespace n_UCrowIndicatorCompositionC {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CP_Icon = 0x358; // UCanvasPanel*
		constexpr auto IMG_Icon = 0x360; // UImage*
		constexpr auto InstalledPawn = 0x368; // APawn*
		constexpr auto InstalledPawnPlayerID = 0x370; // uint32_t
		constexpr auto InstalledPawnTeamID = 0x374; // char
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_USeamSculptToolProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bHitBackFaces = 0x61; // bool
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_ACrowAkAmbientSoundFade {
		constexpr auto RTPC_Name = 0x268; // FString
		constexpr auto EnterEvent = 0x278; // UAkAudioEvent*
		constexpr auto ExitEvent = 0x280; // UAkAudioEvent*
	}

	namespace n_UCrowObserverMapIconWidget {
		constexpr auto IMG_SquadColor = 0x3c8; // UImage*
		constexpr auto TB_SquadNumber = 0x3d0; // UTextBlock*
		constexpr auto BT_Button = 0x3d8; // UCrowButton*
		constexpr auto LocalPlayerState = 0x3e0; // ACrowPlayerStateBase*
		constexpr auto TargetPlayerState = 0x3e8; // ACrowPlayerStateBase*
		constexpr auto TargetCharacter = 0x3f0; // ACrowCharacterPawn*
		constexpr auto PrevPlayerState = 0x3f8; // ECrowPlayerState
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UDeformMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xc8; // USimpleDynamicMeshComponent*
		constexpr auto TransformProps = 0xd0; // UDeformMeshPolygonsTransformProperties*
	}

	namespace n_UCrowLandWheelsConfigTireAndWheel {
		constexpr auto Setting = 0x28; // FCrowTireAndWheelSetting
	}

	namespace n_UCrowPassengerInventory {
		constexpr auto EquipArray = 0xb0; // TArray<ACrowWeaponVehicle*>
		constexpr auto PrevEquipArray = 0xc0; // TArray<ACrowWeaponVehicle*>
		constexpr auto SpecialWeapon = 0xd0; // ACrowWeaponVehicle*
		constexpr auto PrevSpecialWeapon = 0xd8; // ACrowWeaponVehicle*
		constexpr auto CurrentSlotIndex = 0xe0; // int8_t
		constexpr auto CurrentWeaponKey = 0xe1; // int8_t
		constexpr auto PlayerController = 0xe8; // ACrowPlayerControllerBase*
		constexpr auto CrowInGameHUD = 0xf0; // ACrowGameHUDBase*
	}

	namespace n_UCrowRankingAlarm {
		constexpr auto WS_Rank = 0x348; // UWidgetSwitcher*
		constexpr auto TB_Rank = 0x350; // UTextBlock*
		constexpr auto TB_SubRank = 0x358; // UTextBlock*
		constexpr auto TB_RankDesc = 0x360; // UTextBlock*
		constexpr auto CurrentRank = 0x368; // uint32_t
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UCrowRecoilUI {
		constexpr auto TextCurrIndex = 0x260; // UTextBlock*
		constexpr auto TextCoord = 0x268; // UTextBlock*
		constexpr auto TextDistance = 0x270; // UTextBlock*
		constexpr auto TextImportFilename = 0x278; // UTextBlock*
		constexpr auto TextExportFilename = 0x280; // UTextBlock*
		constexpr auto TextRemainCount = 0x288; // UTextBlock*
		constexpr auto TextMaxCount = 0x290; // UTextBlock*
		constexpr auto TextTablePath = 0x298; // UTextBlock*
		constexpr auto TextEditPointMode = 0x2a0; // UTextBlock*
		constexpr auto ExportFileName = 0x2a8; // FString
		constexpr auto ImportFileName = 0x2b8; // FString
		constexpr auto recoilPainter = 0x2c8; // ACrowRecoilPainter*
	}

	namespace n_UCrowCharacterMainAnimFPBody {
		constexpr auto MeshForPoseCopy = 0x3a0; // USkeletalMeshComponent*
	}

	namespace n_UCrowScoreRankSlotGradeWidget {
		constexpr auto TB_Rank = 0x350; // UTextBlock*
		constexpr auto TB_Class = 0x358; // UTextBlock*
		constexpr auto TB_Level = 0x360; // UTextBlock*
		constexpr auto TB_ID = 0x368; // UTextBlock*
		constexpr auto TB_Score = 0x370; // UTextBlock*
		constexpr auto TB_PlayTime = 0x378; // UTextBlock*
		constexpr auto TB_PlayCount = 0x380; // UTextBlock*
	}

	namespace n_UCrowWidgetTooltip {
		constexpr auto BD_Tooltip = 0x348; // UBorder*
		constexpr auto TB_ToolTip = 0x350; // UTextBlock*
		constexpr auto LastTargetWidget = 0x358; // UWidget*
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_ACrowConquestMeteorActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto MeteorSettingsActor = 0x228; // ACrowConquestMeteorSettings*
		constexpr auto SmallMeteorArray = 0x230; // TArray<ACrowConquestMeteorPieceActor*>
		constexpr auto LargeMeteorEffect = 0x240; // ACrowTargetTraceEffect*
		constexpr auto bIsFired = 0x248; // bool
		constexpr auto MeteorDistance = 0x24c; // float
	}

	namespace n_ACrowGameModeTG {
		constexpr auto EndWidgetVisibleTime = 0x4a8; // float
		constexpr auto VehicleLifeSpanTime = 0x4ac; // float
		constexpr auto BomberRespawnTime = 0x4b0; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UMovieWidget_C {
		constexpr auto Hide = 0x3d0; // UWidgetAnimation*
		constexpr auto Show = 0x3d8; // UWidgetAnimation*
		constexpr auto IMG_BG = 0x3e0; // UImage*
		constexpr auto IMG_Keyboard_Space = 0x3e8; // UImage*
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UCrowSelectModButtonBigWidget {
		constexpr auto IMG_ModIcon = 0x348; // UImage*
		constexpr auto TB_MODName = 0x350; // UTextBlock*
		constexpr auto TB_ModDesc = 0x358; // UTextBlock*
		constexpr auto TB_DeselectModName = 0x360; // UTextBlock*
		constexpr auto TB_DeselectModDesc = 0x368; // UTextBlock*
		constexpr auto CTB_ModSelect_Button = 0x370; // UCrowToggleButton*
		constexpr auto GameMod = 0x388; // ECrowGameMode
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UCrowTriggerCommandSafeBox {
		constexpr auto SafeBoxActor = 0xc0; // ACrowSafeBoxEventActor*
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_USteamVRChaperoneComponent {
		constexpr auto OnLeaveBounds = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnReturnToBounds = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x458; // FVector
		constexpr auto LineThickness = 0x464; // float
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_UAkTVOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UCrowBuffWidget {
		constexpr auto BT_BuffSlot_1 = 0x260; // UCrowButton*
		constexpr auto IMG_Buff_1 = 0x268; // UImage*
		constexpr auto BT_BuffSlot_2 = 0x270; // UCrowButton*
		constexpr auto IMG_Buff_2 = 0x278; // UImage*
		constexpr auto BT_BuffSlot_3 = 0x280; // UCrowButton*
		constexpr auto IMG_Buff_3 = 0x288; // UImage*
		constexpr auto BT_BuffSlot_4 = 0x290; // UCrowButton*
		constexpr auto IMG_Buff_4 = 0x298; // UImage*
		constexpr auto BT_BuffSlot_5 = 0x2a0; // UCrowButton*
		constexpr auto IMG_Buff_5 = 0x2a8; // UImage*
		constexpr auto BT_BuffSlot_6 = 0x2b0; // UCrowButton*
		constexpr auto IMG_Buff_6 = 0x2b8; // UImage*
		constexpr auto BT_BuffSlot_7 = 0x2c0; // UCrowButton*
		constexpr auto IMG_Buff_7 = 0x2c8; // UImage*
		constexpr auto BT_BuffSlot_8 = 0x2d0; // UCrowButton*
		constexpr auto IMG_Buff_8 = 0x2d8; // UImage*
		constexpr auto BT_BuffSlot_9 = 0x2e0; // UCrowButton*
		constexpr auto IMG_Buff_9 = 0x2e8; // UImage*
		constexpr auto CP_Buff_ToolTip = 0x2f0; // UCanvasPanel*
		constexpr auto TB_Name = 0x2f8; // UTextBlock*
		constexpr auto TB_Desc = 0x300; // UTextBlock*
		constexpr auto TB_RemainTime = 0x308; // UTextBlock*
		constexpr auto BuffIconInfoArray = 0x310; // TArray<FCrowBuffIconInfo>
	}

	namespace n_UAddPatchTool {
		constexpr auto ShapeSettings = 0x90; // UAddPatchToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x460; // FVector
		constexpr auto HandleSize = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto Direction = 0x474; // FVector
		constexpr auto Length = 0x480; // float
		constexpr auto bImageScale = 0x484; // bool
	}

	namespace n_ATetherCableActor {
		constexpr auto CableProperties = 0x220; // FTetherCableProperties
		constexpr auto bLockCurrentState = 0x2c0; // bool
		constexpr auto StaticMeshComponent = 0x2c8; // UStaticMeshComponent*
		constexpr auto bSynchronousRealtime = 0x2d0; // bool
		constexpr auto RealtimeInEditorTimeDilation = 0x2d4; // float
		constexpr auto bDebugVisualizeSimulationParticles = 0x2d8; // bool
		constexpr auto bDebugVisualizeSimulationCollision = 0x2d9; // bool
		constexpr auto bDebugVisualizeBuiltStaticMeshPoints = 0x2da; // bool
		constexpr auto bDebugVisualizeContactPoints = 0x2db; // bool
		constexpr auto bDebugVisualizeComponentLocations = 0x2dc; // bool
		constexpr auto bDebugVisualizeTangents = 0x2dd; // bool
		constexpr auto bVisible = 0x2de; // bool
		constexpr auto SceneRoot = 0x2e0; // USceneComponent*
		constexpr auto TimeCreated = 0x2e8; // FDateTime
		constexpr auto GuideSpline = 0x2f0; // UTetherGuideSplineComponent*
		constexpr auto ActiveSimulationModel = 0x300; // FTetherSimulationModel
		constexpr auto StaticMesh = 0x350; // UStaticMesh*
		constexpr auto BuiltCurveDescriptionLocalSpaceSimplified = 0x358; // FCableMeshGenerationCurveDescription
		constexpr auto DynamicPreviewMesh = 0x380; // UTetherCableMeshComponent*
		constexpr auto MeshGenerator = 0x388; // UTetherMeshGenerator*
	}

	namespace n_UAddPatchToolProperties {
		constexpr auto Width = 0x60; // float
		constexpr auto Rotation = 0x64; // float
		constexpr auto Subdivisions = 0x68; // int32_t
		constexpr auto Shift = 0x6c; // float
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_ACrowTeleportationArea {
		constexpr auto CollisionComponent = 0x220; // UBoxComponent*
		constexpr auto bInsideEntryingType = 0x228; // bool
		constexpr auto ExecutionDelay = 0x22c; // float
		constexpr auto ExecutionCountDown = 0x230; // float
		constexpr auto TeleportationDestinationActor = 0x238; // AActor*
		constexpr auto TeleportationDestinationActorOnSeaVehicle = 0x240; // AActor*
		constexpr auto TeleportationRandomRadius = 0x248; // float
		constexpr auto TeleportationTargetInfos = 0x250; // TArray<FCrowTeleportationTargetInfo>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UCrowSquadPointWidget {
		constexpr auto TB_SquadPoint = 0x348; // UTextBlock*
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UProceduralTorusToolProperties {
		constexpr auto MajorRadius = 0x70; // float
		constexpr auto MinorRadius = 0x74; // float
		constexpr auto TubeSlices = 0x78; // int32_t
		constexpr auto CrossSectionSlices = 0x7c; // int32_t
	}

	namespace n_UCrowIndicatorSupplyAmmoWidget {
		constexpr auto TB_CoolTime = 0x3c8; // UTextBlock*
		constexpr auto DisplayCoolMinDistance = 0x3d0; // float
		constexpr auto DisplayCoolMaxDistance = 0x3d4; // float
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UCrowRadialMenuEmotionWidget {
		constexpr auto RadialMenuButtonWidget_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenuButtonWidget_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenuButtonWidget_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenuButtonWidget_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenuButtonWidget_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
	}

	namespace n_UCrowVehicleWidgetSeatTank {
		constexpr auto OV_Tank_Cannon = 0x3b8; // UOverlay*
		constexpr auto SB_Seat_RWS = 0x3c0; // USizeBox*
		constexpr auto SB_Seat_Tusk = 0x3c8; // USizeBox*
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x440; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x450; // float
		constexpr auto PixelHitDistanceThreshold = 0x454; // float
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UCrowRadialMenuSprayWidget {
		constexpr auto WB_Customize_SprayRadialMenu_8Button_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_6 = 0x3f8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_7 = 0x400; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_Customize_SprayRadialMenu_8Button_8 = 0x408; // UCrowRadialMenuButtonWidget*
		constexpr auto IMG_CircleSelect = 0x410; // UImage*
		constexpr auto CP_MouseTip = 0x418; // UCanvasPanel*
		constexpr auto HB_Registration = 0x420; // UHorizontalBox*
		constexpr auto HB_Cancel = 0x428; // UHorizontalBox*
		constexpr auto RegistAnimation = 0x430; // UWidgetAnimation*
		constexpr auto ParentWidget = 0x438; // UCrowCustomizeEtcDescWidget*
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UCrowLootingSlotEventHandler {
		constexpr auto CurrMousePos = 0x3b0; // FVector2D
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_ACrowConquestVehicleSpawnerGround {
		constexpr auto CoolTime = 0x288; // float
		constexpr auto IsNeutralityCheck = 0x28c; // bool
		constexpr auto NeutralityCheckTime = 0x290; // int32_t
		constexpr auto NeutralityCharacterRadius = 0x294; // float
		constexpr auto NeutralitySpawnerDist = 0x298; // float
		constexpr auto NeutralityDotDamage = 0x29c; // float
	}

	namespace n_UCrowTabMenuFriendWidget {
		constexpr auto SocialWidget = 0x380; // UCrowSocialWidget*
	}

	namespace n_UCrowVehicleWidgetWarningHeli {
		constexpr auto StatusWarning = 0x350; // FCrowVehicleWarning
		constexpr auto MissileWarning = 0x370; // FCrowVehicleWarning
		constexpr auto DamageWarning = 0x390; // FCrowVehicleWarning
		constexpr auto CP_StatusWarning = 0x3b0; // UCanvasPanel*
		constexpr auto TB_StatusWarning = 0x3b8; // UTextBlock*
		constexpr auto CP_MissileWarning = 0x3c0; // UCanvasPanel*
		constexpr auto TB_MissileWarning = 0x3c8; // UTextBlock*
		constexpr auto CP_DamageWarning = 0x3d0; // UCanvasPanel*
		constexpr auto IMG_Tail = 0x3d8; // UImage*
		constexpr auto IMG_Base = 0x3e0; // UImage*
		constexpr auto IMG_Main = 0x3e8; // UImage*
		constexpr auto FirstStepHP = 0x3f0; // float
		constexpr auto SecondStepHP = 0x3f4; // float
		constexpr auto ThirdStepHP = 0x3f8; // float
		constexpr auto AniDamageYellow = 0x400; // UWidgetAnimation*
		constexpr auto AniDamageOrange = 0x408; // UWidgetAnimation*
		constexpr auto AniDamageRed = 0x410; // UWidgetAnimation*
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x460; // FVector
		constexpr auto DirectionY = 0x46c; // FVector
		constexpr auto OffsetX = 0x478; // float
		constexpr auto OffsetY = 0x47c; // float
		constexpr auto LengthX = 0x480; // float
		constexpr auto LengthY = 0x484; // float
		constexpr auto Thickness = 0x488; // float
		constexpr auto SegmentFlags = 0x48c; // char
	}

	namespace n_UGroupEdgeInsertionTool {
		constexpr auto Settings = 0x98; // UGroupEdgeInsertionProperties*
		constexpr auto Preview = 0xa0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UCrowTriggerControlComponent {
		constexpr auto BuildingTriggerConfig = 0xb0; // FCrowBuildingTriggerConfig
		constexpr auto LineTraceHandle = 0xb8; // FTimerHandle
		constexpr auto DynamicTargetList = 0xc0; // TArray<UCrowTriggerComponent*>
		constexpr auto CurrentWorldTrigger = 0xd0; // TWeakObjectPtr<UCrowWorldTrigger>
		constexpr auto DynamicUIList = 0xd8; // TArray<UCrowTriggerUIBase*>
	}

	namespace n_UCrowSkeletalMeshMerge {
		constexpr auto MergeMesh = 0x28; // USkeletalMesh*
		constexpr auto SrcMeshList = 0x30; // TArray<USkeletalMesh*>
		constexpr auto MaterialsToMerge = 0x40; // TArray<FCrowSkeletalMeshMergeMaterials>
		constexpr auto MaterialIds = 0x188; // TArray<int32_t>
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UCrowCustomModeManager {
		constexpr auto CustomDisplayRoomInfoArray = 0x28; // TArray<FCrowCustomDisplayRoomInfo>
		constexpr auto CurrentCustomRoomInfo = 0x38; // FCrowCustomRoomInfo
		constexpr auto ReceivedCustomModeInvitationMap = 0xf0; // TMap<uint64_t, FCrowCustomModeInvitation>
		constexpr auto IsStart = 0x140; // bool
	}

	namespace n_ACrowProjectileFlashBang {
		constexpr auto MaxTime = 0x18d0; // float
		constexpr auto DistanceCurve = 0x18d8; // UCurveFloat*
		constexpr auto AngleCurve = 0x18e0; // UCurveFloat*
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UCrowMissionTimerWidget {
		constexpr auto TB_Timer = 0x350; // UTextBlock*
		constexpr auto IsDailyTime = 0x358; // bool
		constexpr auto DailyMissionEndSec = 0x35c; // int32_t
		constexpr auto WeeklyMissionEndSec = 0x360; // int32_t
		constexpr auto CurrDailyMissionTime = 0x364; // int32_t
		constexpr auto CurrWeeklyMissionTime = 0x368; // int32_t
		constexpr auto CurrTime = 0x36c; // int32_t
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UImplicitOffsetProperties {
		constexpr auto Smoothness = 0x60; // float
		constexpr auto bPreserveUVs = 0x64; // bool
	}

	namespace n_UCrowHUDWidgetTrainning {
		constexpr auto WB_StatusPlayerInfo_TG = 0x348; // UCrowStatusPlayerInfo*
		constexpr auto WB_MissionCount_Alarm_Tutorial = 0x350; // UCrowInGameMissionTutorialAlarm*
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_ACrowEscapeHeliPawn {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto CharacterOverlap = 0x228; // UBoxComponent*
		constexpr auto IconLocation = 0x230; // USceneComponent*
		constexpr auto HeliMesh = 0x238; // USkeletalMeshComponent*
		constexpr auto SpringArmComp = 0x240; // UCrowSpringArmComponent*
		constexpr auto CameraComp = 0x248; // UCameraComponent*
		constexpr auto VehicleSpeed = 0x250; // float
		constexpr auto VehicleSpeedCurve = 0x258; // UCurveFloat*
		constexpr auto AniHeli_CloseIdle = 0x260; // UAnimMontage*
		constexpr auto AniHeli_OpenIdle = 0x268; // UAnimMontage*
		constexpr auto AniHeli_SpeedDown = 0x270; // UAnimMontage*
		constexpr auto AniHeli_DoorOpen = 0x278; // UAnimMontage*
		constexpr auto AniHeli_DoorClose = 0x280; // UAnimMontage*
		constexpr auto AniPassenger = 0x288; // UAnimMontage*
		constexpr auto HeliSound_Loop = 0x290; // UAkAudioEvent*
		constexpr auto Icon = 0x298; // FCrowGameIconDisplayInfo
		constexpr auto LadderClass = 0x320; // ACrowEscapeVehicleLadder*
		constexpr auto EscapePointID = 0x328; // uint16_t
		constexpr auto MoveElapseTime = 0x32c; // float
		constexpr auto bIsMoveSpline = 0x330; // bool
		constexpr auto bIsMoveToPoint = 0x331; // bool
		constexpr auto LadderActor = 0x338; // ACrowEscapeVehicleLadder*
		constexpr auto SplineComp = 0x340; // USplineComponent*
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_ACrowCompositionC {
		constexpr auto BuildTime = 0x230; // float
		constexpr auto Body = 0x238; // USkeletalMeshComponent*
		constexpr auto OwnerTeamID = 0x240; // char
		constexpr auto bIsInCompositionCVolume = 0x241; // bool
		constexpr auto FXLight = 0x248; // UParticleSystem*
		constexpr auto FXScreen = 0x250; // UParticleSystem*
		constexpr auto FXExplosion = 0x258; // UParticleSystem*
		constexpr auto FXLightComponent = 0x260; // UParticleSystemComponent*
		constexpr auto FXScreenComponent = 0x268; // UParticleSystemComponent*
		constexpr auto StepInfos = 0x270; // TArray<FCrowCompositionCStepInfo>
		constexpr auto CurrentStepInfoIndex = 0x280; // int32_t
		constexpr auto GameStateBombMission = 0x288; // ACrowGameStateBombMission*
		constexpr auto TrigerComponent = 0x290; // UCrowTriggerComponent*
		constexpr auto bIsReadyToTimer = 0x298; // bool
		constexpr auto DamageRadius = 0x29c; // float
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UCrowCustomDepthDecal {
		constexpr auto MaterialDynamic = 0x4d0; // UMaterialInstanceDynamic*
		constexpr auto FadeOutCurve = 0x4d8; // UCurveFloat*
		constexpr auto AttachedBoneName = 0x4e0; // FName
		constexpr auto DecalManager = 0x4e8; // UCrowDecalManager*
	}

	namespace n_ACrowMiningPointActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto CollisionCheckBox = 0x228; // UBoxComponent*
		constexpr auto PingArea = 0x230; // UCrowPingTargetBoxComponent*
		constexpr auto MiningPointInfo = 0x238; // FCrowMiningPointInfo
		constexpr auto PointID = 0x23a; // uint16_t
		constexpr auto MineralCount = 0x23c; // uint16_t
		constexpr auto MiningMachineMeshComp = 0x240; // USkeletalMeshComponent*
		constexpr auto IconLocation = 0x248; // USceneComponent*
		constexpr auto PointEffectLocation = 0x250; // USceneComponent*
		constexpr auto CollectEffectLocation = 0x258; // USceneComponent*
		constexpr auto MiningTimeRatio = 0x260; // float
		constexpr auto MineralMin = 0x264; // uint16_t
		constexpr auto MineralMax = 0x266; // uint16_t
		constexpr auto InstallMiningMachineInteractionText = 0x268; // FText
		constexpr auto CollectMiningMachineInteractionTime = 0x280; // float
		constexpr auto CollectMiningMachineInteractionText = 0x288; // FText
		constexpr auto MiningMachinePath = 0x2a0; // FSoftObjectPath
		constexpr auto AniStart = 0x2b8; // UAnimMontage*
		constexpr auto AniLoop = 0x2c0; // UAnimMontage*
		constexpr auto AniEnd = 0x2c8; // UAnimMontage*
		constexpr auto AniDeactive = 0x2d0; // UAnimMontage*
		constexpr auto EffectDistance = 0x2d8; // float
		constexpr auto EffectPoint = 0x2e0; // UParticleSystem*
		constexpr auto EffectStartMining = 0x2e8; // UParticleSystem*
		constexpr auto EffectEndMining = 0x2f0; // UParticleSystem*
		constexpr auto EffectGlow = 0x2f8; // UParticleSystem*
		constexpr auto EffectSmoke = 0x300; // UParticleSystem*
		constexpr auto EffectFloorSmoke = 0x308; // UParticleSystem*
		constexpr auto EffectCollect = 0x310; // UParticleSystem*
		constexpr auto SoundCollect = 0x318; // UAkAudioEvent*
		constexpr auto EffectPointComponent = 0x320; // UParticleSystemComponent*
		constexpr auto EffectEndMiningComponent = 0x328; // UParticleSystemComponent*
		constexpr auto EffectGlowComponent = 0x330; // UParticleSystemComponent*
		constexpr auto EffectSmokeComponent = 0x338; // UParticleSystemComponent*
		constexpr auto EffectFloorSmokeComponent = 0x340; // UParticleSystemComponent*
		constexpr auto IconActive = 0x348; // FCrowGameIconDisplayInfo
		constexpr auto IconMining_MySquad = 0x3d0; // FCrowGameIconDisplayInfo
		constexpr auto IconComplete_MySquad = 0x458; // FCrowGameIconDisplayInfo
		constexpr auto IconMining_Enemy = 0x4e0; // FCrowGameIconDisplayInfo
		constexpr auto IconComplete_Enemy = 0x568; // FCrowGameIconDisplayInfo
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ACrowConquestSkyRespawnPoint {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto Team = 0x228; // ECrowTeam_RedBlue
		constexpr auto IconInfo = 0x230; // FCrowGameIconDisplayInfo
	}

	namespace n_UCrowMissionAreaRespawn {
		constexpr auto RespawnShapeArray = 0x210; // TArray<UShapeComponent*>
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UProceduralArrowToolProperties {
		constexpr auto ShaftRadius = 0x70; // float
		constexpr auto ShaftHeight = 0x74; // float
		constexpr auto HeadRadius = 0x78; // float
		constexpr auto HeadHeight = 0x7c; // float
		constexpr auto RadialSlices = 0x80; // int32_t
		constexpr auto TotalSubdivisions = 0x84; // int32_t
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UDrawAndRevolveTool {
		constexpr auto ControlPointsMechanic = 0xf8; // UCurveControlPointsMechanic*
		constexpr auto PlaneMechanic = 0x100; // UConstructionPlaneMechanic*
		constexpr auto Settings = 0x108; // URevolveToolProperties*
		constexpr auto MaterialProperties = 0x110; // UNewMeshMaterialProperties*
		constexpr auto Preview = 0x118; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UCrowIndicatorLoadoutBoxWidget {
		constexpr auto TB_CoolTime = 0x3c8; // UTextBlock*
		constexpr auto DisplayCoolMinDistance = 0x3d0; // float
		constexpr auto DisplayCoolMaxDistance = 0x3d4; // float
	}

	namespace n_UCrowLobbyMainWidget {
		constexpr auto WB_GameModDetail = 0x348; // UCrowGameModDetailWidget*
		constexpr auto CP_Main = 0x350; // UCanvasPanel*
		constexpr auto VB_Lobby_Play = 0x358; // UVerticalBox*
		constexpr auto WB_LobbyModInfoButton = 0x360; // UCrowModInfoButtonWidget*
		constexpr auto BT_Play = 0x368; // UCrowButton*
		constexpr auto BT_Matching = 0x370; // UCrowButton*
		constexpr auto BT_Join = 0x378; // UCrowButton*
		constexpr auto LocalSelectSlotWidgetClass = 0x380; // UCrowLocalSelectSlotWidget*
		constexpr auto CP_LocalSelect = 0x388; // UCanvasPanel*
		constexpr auto BT_Toggle_LocalSelect = 0x390; // UCrowToggleButton*
		constexpr auto TB_CurrentLocal = 0x398; // UTextBlock*
		constexpr auto VB_LocalSelect_List = 0x3a0; // UVerticalBox*
		constexpr auto WS_CameraView = 0x3a8; // UWidgetSwitcher*
		constexpr auto BT_CameraFront = 0x3b0; // UCrowButton*
		constexpr auto BT_CameraLeft = 0x3b8; // UCrowButton*
		constexpr auto BT_CameraRight = 0x3c0; // UCrowButton*
		constexpr auto HB_Tutorial_Customize = 0x3c8; // UHorizontalBox*
		constexpr auto CP_LobbyTabPanel = 0x3d0; // UCanvasPanel*
		constexpr auto WB_TopMainMenu = 0x3d8; // UCrowTopMainMenuWidget*
		constexpr auto WB_TopBar_Desc = 0x3e0; // UCrowTopBarDescWidget*
		constexpr auto WB_PlaySetting = 0x3e8; // UCrowPlaySettingWidget*
		constexpr auto CP_TopRightMenu = 0x3f0; // UCanvasPanel*
		constexpr auto BT_Social = 0x3f8; // UCrowButton*
		constexpr auto WB_RankWidget = 0x400; // UCrowRankWidget*
		constexpr auto WS_MesseageMode = 0x408; // UWidgetSwitcher*
		constexpr auto BT_AllAllow = 0x410; // UCrowButton*
		constexpr auto BT_FriendsOnly = 0x418; // UCrowButton*
		constexpr auto BT_AllRefuse = 0x420; // UCrowButton*
		constexpr auto WB_UserProfile = 0x428; // UCrowUserProfileWidget*
		constexpr auto BT_InviteMail = 0x430; // UCrowButton*
		constexpr auto IMG_Icon_Invite_New = 0x438; // UImage*
		constexpr auto BT_Setting = 0x440; // UCrowButton*
		constexpr auto BT_PostMail = 0x448; // UCrowButton*
		constexpr auto InviteMessageWidgetClass = 0x450; // UCrowInviteMessageWidget*
		constexpr auto CP_InviteList = 0x458; // UCanvasPanel*
		constexpr auto BT_InviteExit = 0x460; // UCrowButton*
		constexpr auto SB_InviteList = 0x468; // UScrollBox*
		constexpr auto BT_LocalPlayerSlot = 0x470; // UCrowButton*
		constexpr auto IMG_LocalThumbnail = 0x478; // UImage*
		constexpr auto BT_PartySlot_1 = 0x480; // UCrowButton*
		constexpr auto IMG_UserThumbnail_1 = 0x488; // UImage*
		constexpr auto IMG_Respond_1 = 0x490; // UImage*
		constexpr auto BT_PartySlot_2 = 0x498; // UCrowButton*
		constexpr auto IMG_UserThumbnail_2 = 0x4a0; // UImage*
		constexpr auto IMG_Respond_2 = 0x4a8; // UImage*
		constexpr auto BT_PartySlot_3 = 0x4b0; // UCrowButton*
		constexpr auto IMG_UserThumbnail_3 = 0x4b8; // UImage*
		constexpr auto IMG_Respond_3 = 0x4c0; // UImage*
		constexpr auto WB_CharacterCustomizeDesc = 0x4c8; // UCrowCustomizeCharacterDescWidget*
		constexpr auto WB_CustomizeEtcDesc = 0x4d0; // UCrowCustomizeEtcDescWidget*
		constexpr auto WB_CustomizeItemDesc = 0x4d8; // UCrowCustomizeItemDescWidget*
		constexpr auto WB_Shop = 0x4e0; // UCrowShopMainWidget*
		constexpr auto WB_CustomizeEmotionDesc = 0x4e8; // UCrowCustomizeEmotionDescWidget*
		constexpr auto WB_Replay = 0x4f0; // UCrowReplayWidget*
		constexpr auto WB_Record = 0x4f8; // UCrowLobbyRecordWidget*
		constexpr auto WB_BT_EscBack = 0x500; // UCrowButton*
		constexpr auto WB_BT_Home = 0x508; // UCrowButton*
		constexpr auto WB_CustomizeVehicleDesc = 0x510; // UCrowLobbyVehicleSkinWidget*
		constexpr auto CP_Indicator = 0x518; // UCanvasPanel*
		constexpr auto WB_LobbyIndicator_2 = 0x520; // UCrowLobbyIndicatorWidget*
		constexpr auto WB_LobbyIndicator_3 = 0x528; // UCrowLobbyIndicatorWidget*
		constexpr auto WB_LobbyIndicator_4 = 0x530; // UCrowLobbyIndicatorWidget*
		constexpr auto WB_LobbyIndicator_5 = 0x538; // UCrowLobbyIndicatorWidget*
		constexpr auto CP_PauseMenu = 0x540; // UCanvasPanel*
		constexpr auto WB_BT_Continue = 0x548; // UCrowButton*
		constexpr auto WB_BT_Setting = 0x550; // UCrowButton*
		constexpr auto WB_BT_Quitgame = 0x558; // UCrowButton*
		constexpr auto WB_CrowChatInfo = 0x560; // UCrowChatWidget*
		constexpr auto WB_Mission = 0x568; // UCrowMissionWidget*
		constexpr auto WB_MissionQuickList = 0x570; // UCrowMissionQuickListWidget*
		constexpr auto WB_Social = 0x578; // UCrowSocialWidget*
		constexpr auto WB_Party = 0x580; // UCrowPartyWidget*
		constexpr auto IMG_PartyBg = 0x588; // UImage*
		constexpr auto WB_UserPopup = 0x590; // UCrowUserPopupWidget*
		constexpr auto BD_ReplayError = 0x598; // UBorder*
		constexpr auto WB_CrowHUD_FPS = 0x5a0; // UCrowFPSWidget*
		constexpr auto WB_Clan = 0x5a8; // UCrowClanMainWidget*
		constexpr auto WB_Profile = 0x5b0; // UCrowLobbyProfileWidget*
		constexpr auto WB_PlayerReport = 0x5b8; // UCrowPlayerReportWidget*
		constexpr auto WB_MailPopup = 0x5c0; // UCrowMailPopupWidget*
		constexpr auto WB_RewardPopup = 0x5c8; // UCrowShopRewardPopupWidget*
		constexpr auto LobbySlotNameChangeWidgetClass = 0x5d0; // UCrowLobbySlotNameChangeWidget*
		constexpr auto NoticeWebBrowser = 0x5d8; // UCrowNoticeWebBrowser*
		constexpr auto CP_ServerNotice = 0x5e0; // UCanvasPanel*
		constexpr auto SB_NoticeScroll = 0x5e8; // UScrollBox*
		constexpr auto TB_NoticeText = 0x5f0; // UTextBlock*
		constexpr auto WB_ShopPopupWidget = 0x608; // UCrowLobbyShopPopupWidget*
		constexpr auto IsContinueOpenRandomBox = 0x610; // bool
		constexpr auto LobbyIndicatorWidgets = 0x618; // TArray<UCrowLobbyIndicatorWidget*>
		constexpr auto PartyUserThumbnails = 0x628; // TArray<UImage*>
		constexpr auto AniPartyWidgetShow = 0x638; // UWidgetAnimation*
		constexpr auto AniInvitePopup = 0x640; // UWidgetAnimation*
		constexpr auto CurrentLobbyUIMode = 0x648; // ELobbyUIMode
		constexpr auto PrevLobbyUIMode = 0x649; // ELobbyUIMode
		constexpr auto SelectDragWidget = 0x650; // UCrowInventoryInputEventHandler*
		constexpr auto CurrentSeletedWeaponData = 0x658; // FCrowWeaponData
		constexpr auto CurrentSeletedWeaponAccData = 0x7c0; // FCrowWeaponAccData
		constexpr auto CurrentSeletedSlotIndex = 0x870; // int32_t
		constexpr auto OpenedPartyWidget = 0x874; // bool
		constexpr auto OpenedInvitePopup = 0x875; // bool
		constexpr auto WB_LobbySlotNameChangeWidget = 0x878; // UCrowLobbySlotNameChangeWidget*
		constexpr auto SceneLobby = 0x880; // ACrowSceneLobby*
		constexpr auto bUseCharacterRotation = 0x888; // bool
		constexpr auto IsRotation = 0x889; // bool
		constexpr auto PartyMode = 0x88a; // bool
		constexpr auto bReverseCamera = 0x88b; // bool
		constexpr auto bShowNotice = 0x88c; // bool
		constexpr auto NoticeCount = 0x890; // int32_t
		constexpr auto IsStartMatch = 0x894; // bool
		constexpr auto LastGPoint = 0x898; // int32_t
		constexpr auto LastRCPPoint = 0x89c; // int32_t
		constexpr auto LastRandomBoxItem = 0x8a0; // FCrowRewardItem
		constexpr auto LastRandomBoxIndex = 0x8d0; // int32_t
		constexpr auto LevelSequenceActor = 0x8d8; // ALevelSequenceActor*
		constexpr auto RegionTimerHandle = 0x8e0; // FTimerHandle
		constexpr auto RegionRefreshTime = 0x8e8; // float
		constexpr auto AniLocalSelect = 0x8f0; // UWidgetAnimation*
		constexpr auto CurrentMatchingState = 0x8f8; // ECrowMatchingState
	}

	namespace n_UBaseVoxelTool {
		constexpr auto VoxProperties = 0xf0; // UVoxelProperties*
	}

	namespace n_UCrowWeaponZoomWidget {
		constexpr auto AimAnimation = 0x348; // UWidgetAnimation*
		constexpr auto ShotAnimation = 0x350; // UWidgetAnimation*
		constexpr auto IMG_CrossHair = 0x358; // UImage*
		constexpr auto PlayerController = 0x360; // ACrowPlayerControllerBase*
		constexpr auto CharacterPawn = 0x368; // ACrowCharacterPawn*
	}

	namespace n_UCrowSquadWidget {
		constexpr auto SquadItemClass = 0x348; // UCrowSquadWidgetItem*
		constexpr auto RootGridPanel = 0x350; // UGridPanel*
		constexpr auto WB_SquadPoint = 0x358; // UCrowSquadPointWidget*
		constexpr auto WB_ResourcePoint = 0x360; // UCrowSquadPointWidget*
		constexpr auto WB_StatusPlayerInfo = 0x368; // UCrowWidgetBase*
		constexpr auto SquadItemMap = 0x370; // TMap<ACrowPlayerStateBase*, UCrowSquadWidgetItem*>
	}

	namespace n_UCrowTrajectoryMovement {
		constexpr auto SceneComponent = 0xb8; // USceneComponent*
		constexpr auto HitResultsOnMove = 0xc0; // TArray<FHitResult>
		constexpr auto FireData = 0xd0; // FCrowProjectileFireData
		constexpr auto CachedOceanActor = 0x1640; // AWaterBody*
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_ACrowCompositionCVolume {
		constexpr auto CompositionCAreaIcon = 0x258; // ACrowCompositionCAreaIcon*
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x440; // FText
		constexpr auto TextMaterial = 0x458; // UMaterialInterface*
		constexpr auto Font = 0x460; // UFont*
		constexpr auto HorizontalAlignment = 0x468; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x469; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x46c; // FColor
		constexpr auto XScale = 0x470; // float
		constexpr auto YScale = 0x474; // float
		constexpr auto WorldSize = 0x478; // float
		constexpr auto InvDefaultSize = 0x47c; // float
		constexpr auto HorizSpacingAdjust = 0x480; // float
		constexpr auto VertSpacingAdjust = 0x484; // float
		constexpr auto bAlwaysRenderAsText = 0x488; // char : 1
	}

	namespace n_UCrowFriendListWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto BT_ToggleListOpen = 0x350; // UCrowToggleButton*
		constexpr auto VB_SlotList = 0x358; // UVerticalBox*
		constexpr auto TitleLabel = 0x360; // FText
	}

	namespace n_UCrowKillerIconWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_AnchorRoot = 0x350; // UCanvasPanel*
		constexpr auto CP_Icon = 0x358; // UCanvasPanel*
		constexpr auto IMG_BG = 0x360; // UImage*
		constexpr auto IMG_Arrow = 0x368; // UImage*
	}

	namespace n_ULuminARLightEstimate {
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UCrowEventPageManager {
		constexpr auto EventPageData = 0x28; // TMap<int32_t, FCrowEventPageTableRow>
	}

	namespace n_UCrowGetEXPPointItemWidget {
		constexpr auto TB_EXPType = 0x348; // UTextBlock*
		constexpr auto TB_Multiply = 0x350; // UTextBlock*
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UCrowModCategoryTableManager {
		constexpr auto ModCategoryData = 0x28; // TMap<ECrowGameMode, FCrowModCategoryTableRow>
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UMeshSelectionToolProperties {
		constexpr auto SelectionMode = 0x60; // EMeshSelectionToolPrimaryMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bHitBackFaces = 0x68; // bool
		constexpr auto bShowWireframe = 0x69; // bool
		constexpr auto FaceColorMode = 0x6c; // EMeshFacesColorMode
	}

	namespace n_UOffsetMeshTool {
		constexpr auto OffsetProperties = 0x400; // UOffsetMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeOffsetProperties*
		constexpr auto ImplicitProperties = 0x410; // UImplicitOffsetProperties*
		constexpr auto WeightMapProperties = 0x418; // UOffsetWeightMapSetProperties*
	}

	namespace n_UCrowPlayerWeaponListWidget {
		constexpr auto WB_WeaponList_Primary_2 = 0x348; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_WeaponList_Primary_3 = 0x350; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_WeaponList_Extra_2 = 0x358; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_WeaponList_Extra_3 = 0x360; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_Equipment_Melee = 0x368; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_Equipment_Throwable = 0x370; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WB_Equipment_HealKit = 0x378; // UCrowPlayerWeaponListItemWidget*
		constexpr auto WS_ExtraSlot = 0x380; // UWidgetSwitcher*
		constexpr auto WeaponList = 0x390; // TArray<UCrowPlayerWeaponListItemWidget*>
		constexpr auto VehicleWeaponList = 0x3a0; // TArray<UCrowPlayerWeaponListItemWidget*>
		constexpr auto CurrentWeapon = 0x3b0; // ACrowWeaponBase*
		constexpr auto PrevWeapon = 0x3b8; // ACrowWeaponBase*
		constexpr auto CurrentWeaponIndex = 0x3c0; // int32_t
		constexpr auto ClientWeaponList = 0x3c8; // TArray<ACrowWeaponBase*>
		constexpr auto DelayTime = 0x3d8; // float
		constexpr auto CurrTime = 0x3dc; // float
		constexpr auto IsShowing = 0x3e0; // bool
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Cannon_First_C {
		constexpr auto Image = 0x450; // UImage*
		constexpr auto Image_372 = 0x458; // UImage*
		constexpr auto IMG_Box_CrossHair = 0x460; // UImage*
		constexpr auto IMG_Crosshair_Moving = 0x468; // UImage*
		constexpr auto IMG_CrosshairFrame = 0x470; // UImage*
		constexpr auto IMG_FPS_Cannon_Left = 0x478; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_2 = 0x480; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_3 = 0x488; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_4 = 0x490; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_5 = 0x498; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_6 = 0x4a0; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_7 = 0x4a8; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_8 = 0x4b0; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_9 = 0x4b8; // UImage*
		constexpr auto IMG_FPS_Cannon_Left_10 = 0x4c0; // UImage*
		constexpr auto IMG_FPS_Cannon_Right = 0x4c8; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_2 = 0x4d0; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_3 = 0x4d8; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_4 = 0x4e0; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_5 = 0x4e8; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_6 = 0x4f0; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_7 = 0x4f8; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_8 = 0x500; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_9 = 0x508; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_10 = 0x510; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_11 = 0x518; // UImage*
		constexpr auto IMG_FPS_Cannon_Right_12 = 0x520; // UImage*
		constexpr auto IMG_Range_BG = 0x528; // UImage*
		constexpr auto IMG_Range_Frame = 0x530; // UImage*
		constexpr auto IMG_Range_Shadow = 0x538; // UImage*
		constexpr auto IMG_ZoomIn_BG = 0x540; // UImage*
		constexpr auto IMG_ZoomIn_Frame = 0x548; // UImage*
		constexpr auto IMG_ZoomIn_Shadow = 0x550; // UImage*
	}

	namespace n_ACrowRespawnAirPlaneActor {
		constexpr auto BoxCollision = 0x220; // UBoxComponent*
		constexpr auto SpringArmComp = 0x228; // UCrowSpringArmComponent*
		constexpr auto CameraComp = 0x230; // UCameraComponent*
		constexpr auto SkeletalMeshComp = 0x238; // USkeletalMeshComponent*
		constexpr auto MinPitchAngle = 0x240; // float
		constexpr auto MaxPitchAngle = 0x244; // float
		constexpr auto DestroyDelayTime = 0x248; // float
		constexpr auto IconDisplayInfo = 0x250; // FCrowGameIconDisplayInfo
		constexpr auto FlightLoopSound = 0x2d8; // UAkAudioEvent*
		constexpr auto CanDropSound = 0x2e0; // UAkAudioEvent*
		constexpr auto SelectedSplineActor = 0x2e8; // ACrowAirPlaneRespawnSplineActor*
		constexpr auto CameraActor = 0x2f0; // ACrowRespawnAirPlaneCamera*
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x398; // FDestructibleParameters
		constexpr auto FractureEffects = 0x420; // TArray<FFractureEffect>
	}

	namespace n_UCrowWorldAssetUserData {
		constexpr auto ExcludeForHLOD = 0x28; // bool
		constexpr auto LargeActorSubLevel = 0x29; // bool
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_ACrowWorldEventSetting {
		constexpr auto Root = 0x228; // UBoxComponent*
		constexpr auto bIsEnableEvent = 0x230; // bool
		constexpr auto EventInfo = 0x238; // FCrowWorldEventModeInfo
		constexpr auto bIsDisplayUI = 0x250; // bool
		constexpr auto GroupArray = 0x258; // TArray<UCrowWorldEventGroup*>
		constexpr auto ActiveEventArray = 0x268; // TArray<ACrowWorldEventBase*>
		constexpr auto EventInfoArray = 0x280; // TArray<FCrowWorldEventWidgetInfo>
		constexpr auto WB_EventAlarm = 0x290; // UCrowWorldEventAlarmWidget*
		constexpr auto WB_EventSuccess = 0x298; // UCrowWorldEventAlarmWidget*
		constexpr auto WB_EventFail = 0x2a0; // UCrowWorldEventAlarmWidget*
		constexpr auto CurrentEventInfo = 0x2a8; // FCrowWorldEventWidgetInfo
	}

	namespace n_UMh6_MachineGun_01_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x318; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x328; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x430; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x538; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto RotorRoll = 0x558; // float
	}

	namespace n_UWB_Settings_C {
		constexpr auto CrowWidgetImage_74 = 0x470; // UCrowWidgetImage*
		constexpr auto Image_64 = 0x478; // UImage*
		constexpr auto Image_Icon_ESC_2 = 0x480; // UImage*
		constexpr auto IMG_Apply_BackGround = 0x488; // UImage*
		constexpr auto IMG_Apply_BackGround_2 = 0x490; // UImage*
		constexpr auto IMG_Apply_Hover = 0x498; // UImage*
		constexpr auto IMG_Back_Effect = 0x4a0; // UImage*
		constexpr auto IMG_Blue00 = 0x4a8; // UImage*
		constexpr auto IMG_Default_BackGround = 0x4b0; // UImage*
		constexpr auto IMG_GRAC_GameInfo00 = 0x4b8; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo01 = 0x4c0; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo02 = 0x4c8; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo03 = 0x4d0; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo04 = 0x4d8; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo05 = 0x4e0; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo06 = 0x4e8; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_GameInfo07 = 0x4f0; // UCrowWidgetImage*
		constexpr auto IMG_GRAC_rating = 0x4f8; // UCrowWidgetImage*
		constexpr auto IMG_OptionBg = 0x500; // UImage*
		constexpr auto IMG_OptionContentsBg = 0x508; // UImage*
		constexpr auto IMG_ResetAll_BackGround_2 = 0x510; // UImage*
		constexpr auto IMG_ResetAll_Hover = 0x518; // UImage*
		constexpr auto TB_Label_Back_2 = 0x520; // UTextBlock*
		constexpr auto TB_MenuTitle = 0x528; // UTextBlock*
		constexpr auto TB_MenuTitle_Apply = 0x530; // UTextBlock*
		constexpr auto TB_MenuTitle_ResetAll = 0x538; // UTextBlock*
	}

	namespace n_UCrowDeathCameraComponent {
		constexpr auto KillerPS = 0x28; // ACrowPlayerStateBase*
		constexpr auto KillerIconActor = 0x30; // ACrowSpectatorIconActor*
	}

	namespace n_UUVProjectionOperatorFactory {
		constexpr auto Tool = 0x30; // UUVProjectionTool*
	}

	namespace n_UCrowRotorHitResponseComponent {
		constexpr auto bIsClockWise = 0xb0; // bool
		constexpr auto UpdateClientTerm = 0xb4; // float
		constexpr auto UpdateServerTerm = 0xb8; // float
		constexpr auto CollisionDamage = 0xbc; // float
		constexpr auto DamageType = 0xc0; // UDamageType*
		constexpr auto CollisionConcreteFX = 0xc8; // UParticleSystem*
		constexpr auto CollisionMetalFX = 0xd0; // UParticleSystem*
		constexpr auto CollisonWoodFX = 0xd8; // UParticleSystem*
		constexpr auto CollisionMudFX = 0xe0; // UParticleSystem*
		constexpr auto CollisionSoilFX = 0xe8; // UParticleSystem*
		constexpr auto CollisionWaterFX = 0xf0; // UParticleSystem*
		constexpr auto RotorBoxCollisionNames = 0x118; // FString [0x2]
		constexpr auto RotorHitCaculationInfos = 0x138; // FCrowRotorHitCaculationInfo [0x2]
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UVoxelSolidifyMeshesToolProperties {
		constexpr auto WindingThreshold = 0x60; // double
		constexpr auto ExtendBounds = 0x68; // double
		constexpr auto SurfaceSearchSteps = 0x70; // int32_t
		constexpr auto bSolidAtBoundaries = 0x74; // bool
		constexpr auto bMakeOffsetSurfaces = 0x75; // bool
		constexpr auto OffsetThickness = 0x78; // double
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UCrowWeaponPartsBase {
		constexpr auto StickerDecalComp = 0xc0; // TArray<UCrowDecalComponent*>
		constexpr auto WeaponActor = 0xd8; // ACrowWeaponBase*
		constexpr auto MeshCompArray = 0xe0; // TArray<FCrowPartsMeshInfo>
		constexpr auto PartsActor = 0xf0; // ACrowWeaponPartsActor*
		constexpr auto ParentComponent = 0xf8; // USceneComponent*
		constexpr auto ParentRootComponent = 0x100; // USceneComponent*
		constexpr auto AnimInstance = 0x108; // UAnimInstance*
		constexpr auto OwnerActor = 0x110; // AActor*
		constexpr auto SkeletalMeshAsset = 0x118; // USkeletalMesh*
		constexpr auto SkeletalMeshAnimClass = 0x120; // UAnimInstance*
		constexpr auto CreatedMeshComponent = 0x128; // UPrimitiveComponent*
		constexpr auto PartsModelInfo = 0x130; // FCrowPartModelInfo
		constexpr auto StickerSocketNames = 0x1b8; // TArray<FName>
		constexpr auto StickerIndexs = 0x1c8; // TArray<int32_t>
		constexpr auto MountModelInfo = 0x1d8; // FCrowPartModelInfo
		constexpr auto SocketTransforms = 0x290; // TMap<FName, FTransform>
	}

	namespace n_UCrowDamageType {
		constexpr auto KillImpulse = 0x40; // float
		constexpr auto DamageSourceType = 0x44; // EDamageSourceType
		constexpr auto BuildingDamageMultiply = 0x48; // float
		constexpr auto PropDamageMultiply = 0x4c; // float
		constexpr auto IsForcedDamageToArmor = 0x50; // bool
		constexpr auto ArmorMultiflyDamge = 0x54; // float
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UCrowVehicleMovementBase {
		constexpr auto UseSubstepping = 0xc0; // bool
		constexpr auto OwnerPawn = 0xc8; // APawn*
		constexpr auto BodyComponent = 0xd0; // UPrimitiveComponent*
		constexpr auto SkeletalMesh = 0xd8; // USkeletalMeshComponent*
		constexpr auto SpringArm = 0xe0; // USpringArmComponent*
		constexpr auto SpringArmInitialRotation = 0xe8; // FRotator
		constexpr auto SpringArmCurrentRotation = 0xf4; // FRotator
		constexpr auto RootBoneRelativeTransform = 0x100; // FTransform
		constexpr auto CurrentThrottleInput = 0x130; // float
		constexpr auto CurrentSteeringInput = 0x134; // float
		constexpr auto LastRequestThrottleInput = 0x138; // float
		constexpr auto LastRequestSteeringInput = 0x13c; // float
		constexpr auto BoundsRadius = 0x140; // float
		constexpr auto IsReadyForDriving = 0x144; // bool
		constexpr auto IsBlockedPhysics = 0x145; // bool
		constexpr auto LinearDamping = 0x148; // float
		constexpr auto LimitSteeringRatio = 0x14c; // float
	}

	namespace n_UWebBrowser {
		constexpr auto OnUrlChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnBeforePopup = 0x118; // FMulticastInlineDelegate
		constexpr auto InitialURL = 0x128; // FString
		constexpr auto bSupportsTransparency = 0x138; // bool
	}

	namespace n_UWB_BombMission_CompositionCIndicator_C {
		constexpr auto ChangeColor = 0x380; // UWidgetAnimation*
		constexpr auto IMG_Base = 0x388; // UImage*
		constexpr auto IMG_Border = 0x390; // UImage*
		constexpr auto IMG_Gauge = 0x398; // UImage*
		constexpr auto IMG_LocateArrow = 0x3a0; // UImage*
	}

	namespace n_UWB_SettingsSlotDropdownSlot_C {
		constexpr auto Image_149 = 0x388; // UImage*
		constexpr auto Image_Icon_Select = 0x390; // UImage*
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UGerstnerWaterWaveGeneratorSimple {
		constexpr auto NumWaves = 0x28; // int32_t
		constexpr auto Seed = 0x2c; // int32_t
		constexpr auto Randomness = 0x30; // float
		constexpr auto MinWavelength = 0x34; // float
		constexpr auto MaxWavelength = 0x38; // float
		constexpr auto WavelengthFalloff = 0x3c; // float
		constexpr auto MinAmplitude = 0x40; // float
		constexpr auto MaxAmplitude = 0x44; // float
		constexpr auto AmplitudeFalloff = 0x48; // float
		constexpr auto WindAngleDeg = 0x4c; // float
		constexpr auto DirectionAngularSpreadDeg = 0x50; // float
		constexpr auto SmallWaveSteepness = 0x54; // float
		constexpr auto LargeWaveSteepness = 0x58; // float
		constexpr auto SteepnessFalloff = 0x5c; // float
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UCrowVehicleParam {
		constexpr auto Setup = 0xc0; // FVehicleSetup
		constexpr auto DamageSetup = 0xd0; // FCrowVehicleDamageSetup
		constexpr auto DustType = 0x170; // UCrowVehicleDustType*
		constexpr auto EffectSetup = 0x178; // FVehicleEffectSetup
		constexpr auto Camera = 0x180; // UCameraComponent*
		constexpr auto VehicleShieldingType = 0x188; // EVehicleShieldingType
		constexpr auto VehicleSight = 0x190; // UCrowVehicleSightComponent*
		constexpr auto WheelEffect = 0x198; // UCrowVehicleWheelEffect*
		constexpr auto PassengerManager = 0x1a0; // UCrowPassengerManager*
		constexpr auto EventDispatcher = 0x1a8; // UCrowVehicleEventDispatcher*
		constexpr auto IndicatorWidgetComp = 0x1b0; // UWidgetComponent*
		constexpr auto PartDamageBoxList = 0x1b8; // TArray<UCrowPartDamageBox*>
		constexpr auto WeaponManager = 0x1c8; // UCrowVehicleWeaponManager*
		constexpr auto FloodingComp = 0x1d0; // UCrowVehicleFloodingComponent*
	}

	namespace n_UWB_LoadingBox_C {
		constexpr auto IMG_BG = 0x368; // UImage*
		constexpr auto IMG_Loading = 0x370; // UImage*
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UCrowClanMainWidget {
		constexpr auto ClanListItemClass = 0x348; // UUserWidget*
		constexpr auto UserListItemClass = 0x350; // UUserWidget*
		constexpr auto EmblemWidgetClass = 0x358; // UUserWidget*
		constexpr auto WS_Clan = 0x360; // UWidgetSwitcher*
		constexpr auto WB_BT_EscBack = 0x368; // UCrowButton*
		constexpr auto WB_ClanTab_Defualt = 0x398; // UCrowClanTabWidget*
		constexpr auto WB_ClanTab_Ranking = 0x3a0; // UCrowClanSubTabWidget*
		constexpr auto WS_Clan_Defualt = 0x3a8; // UWidgetSwitcher*
		constexpr auto SCB_RecommendClanList = 0x3b0; // UScrollBox*
		constexpr auto SCB_InviteClanList = 0x3b8; // UScrollBox*
		constexpr auto BT_ClanSearch = 0x3c0; // UCrowButton*
		constexpr auto EDB_SearchClanName = 0x3c8; // UMultiLineEditableText*
		constexpr auto VB_SearchResultClan = 0x3d0; // UVerticalBox*
		constexpr auto TB_NoClanInvite = 0x3d8; // UTextBlock*
		constexpr auto WB_Clan_SlotSelection = 0x3e0; // UCrowSpinSelectionWidget*
		constexpr auto EDB_CreateClanName = 0x3e8; // UMultiLineEditableText*
		constexpr auto WB_BT_CreationClan = 0x3f0; // UCrowButton*
		constexpr auto WB_BT_ResetEmblemMark = 0x3f8; // UCrowButton*
		constexpr auto WB_BT_ResetEmblemBG = 0x400; // UCrowButton*
		constexpr auto WB_ClanCreate_EmblemWidget = 0x408; // UCrowClanEmblemWidget*
		constexpr auto IMG_ClanCreateEmblem_Mark = 0x410; // UImage*
		constexpr auto IMG_ClanCreateEmblem_Bg = 0x418; // UImage*
		constexpr auto GD_EmbleItemList = 0x420; // UGridPanel*
		constexpr auto BT_ClanEmblem_Mark = 0x428; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_ClanEmblem_Bg = 0x430; // UCrowCategorySlotSmallWidget*
		constexpr auto CP_Clan_InfoSetting_L = 0x438; // UCanvasPanel*
		constexpr auto CP_Clan_InfoSetting_R = 0x440; // UCanvasPanel*
		constexpr auto CP_Clan_Info = 0x448; // UCanvasPanel*
		constexpr auto CP_ClanDismantleInfo = 0x450; // UCanvasPanel*
		constexpr auto WB_BT_ClanSetting = 0x458; // UCrowButton*
		constexpr auto WB_BT_ClanNotice = 0x460; // UCrowButton*
		constexpr auto SB_ClanMember = 0x468; // UScrollBox*
		constexpr auto WB_ClanEmblem = 0x470; // UCrowClanEmblemWidget*
		constexpr auto TB_ClanInfo_ClanName = 0x478; // UTextBlock*
		constexpr auto TB_ClanInfo_ClanLevel = 0x480; // UTextBlock*
		constexpr auto TB_ClanInfo_ClanRanking = 0x488; // UTextBlock*
		constexpr auto TB_ClanInfo_TotalPoint = 0x490; // UTextBlock*
		constexpr auto TB_ClanInfo_MonthPoint = 0x498; // UTextBlock*
		constexpr auto RT_ClanInfo_NoticeText = 0x4a0; // URichTextBlock*
		constexpr auto TB_ClanOnlineUser = 0x4a8; // UTextBlock*
		constexpr auto TB_ClanMaxUser = 0x4b0; // UTextBlock*
		constexpr auto TB_ClanInfoHappyTime = 0x4b8; // UTextBlock*
		constexpr auto TB_HappyTimeTipText = 0x4c0; // UTextBlock*
		constexpr auto TB_ClanInfo_DismantleTimer = 0x4c8; // UTextBlock*
		constexpr auto WB_Clan_PopupClanNotice = 0x4d0; // UCrowClanNoticeWidget*
		constexpr auto CP_Clan_Setting = 0x4d8; // UCanvasPanel*
		constexpr auto CP_HappyTime = 0x4e0; // UCanvasPanel*
		constexpr auto CP_ClanUserList = 0x4e8; // UCanvasPanel*
		constexpr auto CP_ClanInvitedSetting = 0x4f0; // UCanvasPanel*
		constexpr auto CP_ClanInvited = 0x4f8; // UCanvasPanel*
		constexpr auto CP_ClanDismantle = 0x500; // UCanvasPanel*
		constexpr auto WB_Clan_PopupHappyTime = 0x508; // UCrowHappyTimeTabWidget*
		constexpr auto BD_HappyTime = 0x510; // UBorder*
		constexpr auto BD_MemberSetting = 0x518; // UBorder*
		constexpr auto BD_OwnerSetting = 0x520; // UBorder*
		constexpr auto BT_HappytimeSet = 0x528; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_AddCommander = 0x530; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_CommanderSetDel = 0x538; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_ClanInvited = 0x540; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_KickClanUser = 0x548; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_ClanInvitedSet = 0x550; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_CaptainTransfer = 0x558; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_Dismantle = 0x560; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_ClanSecession = 0x568; // UCrowCategorySlotSmallWidget*
		constexpr auto ClanSettingBtnList = 0x570; // TArray<UCrowCategorySlotSmallWidget*>
		constexpr auto WB_BT_degrade = 0x580; // UCrowButton*
		constexpr auto WB_BT_Expulsion = 0x588; // UCrowButton*
		constexpr auto WB_BT_Transferring = 0x590; // UCrowButton*
		constexpr auto WB_BT_Appointment = 0x598; // UCrowButton*
		constexpr auto TB_ClanDismantleTimer = 0x5a0; // UTextBlock*
		constexpr auto WS_Dismantle = 0x5a8; // UWidgetSwitcher*
		constexpr auto WB_BT_Dismantle = 0x5b0; // UCrowButton*
		constexpr auto WB_BT_DeleteClan = 0x5b8; // UCrowButton*
		constexpr auto WB_BT_CancelDismantle = 0x5c0; // UCrowButton*
		constexpr auto WB_Clan_InviteSetting = 0x5c8; // UCrowSpinSelectionWidget*
		constexpr auto WB_BT_SaveInviteSetting = 0x5d0; // UCrowButton*
		constexpr auto SB_JoinRequestList = 0x5d8; // UScrollBox*
		constexpr auto JoinRequest_Empty = 0x5e0; // UTextBlock*
		constexpr auto EB_UserSearchEditBox = 0x5e8; // UMultiLineEditableText*
		constexpr auto BT_UserSearch = 0x5f0; // UCrowButton*
		constexpr auto SB_SearchUser = 0x5f8; // UScrollBox*
		constexpr auto SB_InviteUser = 0x600; // UScrollBox*
		constexpr auto InviteRequest_Empty = 0x608; // UTextBlock*
		constexpr auto CP_ClanRankingInfo = 0x610; // UCanvasPanel*
		constexpr auto WS_ClanRanking = 0x618; // UWidgetSwitcher*
		constexpr auto SCB_TotalScoreRankingList = 0x620; // UScrollBox*
		constexpr auto SCB_MonthScoreList = 0x628; // UScrollBox*
		constexpr auto SCB_MyClanRanking = 0x630; // UScrollBox*
		constexpr auto CP_ClanEmblemSetting = 0x638; // UCanvasPanel*
		constexpr auto CP_ClanEmblemSetPage = 0x640; // UCanvasPanel*
		constexpr auto HB_CustomizeClan_Shop_Button = 0x648; // UHorizontalBox*
		constexpr auto WB_ClanTab_Emblem = 0x650; // UCrowClanSubTabWidget*
		constexpr auto BT_ClanEmblemChange_Mark = 0x658; // UCrowCategorySlotSmallWidget*
		constexpr auto BT_ClanEmblemChange_Bg = 0x660; // UCrowCategorySlotSmallWidget*
		constexpr auto WB_BT_ChangeResetEmblemMark = 0x668; // UCrowButton*
		constexpr auto WB_BT_ChangeResetEmblemBG = 0x670; // UCrowButton*
		constexpr auto BT_Buy = 0x678; // UCrowButton*
		constexpr auto BT_AddShoppingBag = 0x680; // UCrowButton*
		constexpr auto IMG_ChangeClanEmblemMark = 0x688; // UImage*
		constexpr auto IMG_ChangeClanEmblemBG = 0x690; // UImage*
		constexpr auto WB_BT_ChangeEmblemSave = 0x698; // UCrowButton*
		constexpr auto WB_Change_EmblemWidget = 0x6a0; // UCrowClanEmblemWidget*
		constexpr auto GD_ChangeEmbleItemList = 0x6a8; // UGridPanel*
	}

	namespace n_ACrowKitBomber {
		constexpr auto MoveSpline = 0x220; // USplineComponent*
		constexpr auto ProjectileEffect = 0x228; // UParticleSystem*
		constexpr auto MuzzleEffect = 0x230; // UParticleSystem*
		constexpr auto BulletTargetEffect01 = 0x238; // UParticleSystem*
		constexpr auto BulletTargetEffect02 = 0x240; // UParticleSystem*
		constexpr auto FlareEffect = 0x248; // UParticleSystem*
		constexpr auto IsFlareAttach = 0x250; // bool
		constexpr auto FireEvent = 0x258; // UAkAudioEvent*
		constexpr auto FlyingEvent = 0x260; // TArray<UAkAudioEvent*>
		constexpr auto AttackingEvent = 0x270; // UAkAudioEvent*
		constexpr auto ReturnEvent = 0x278; // UAkAudioEvent*
		constexpr auto DisplayInfo = 0x280; // FCrowGameIconDisplayInfo
		constexpr auto MeshComponent = 0x308; // USkeletalMeshComponent*
		constexpr auto RootComp = 0x310; // USceneComponent*
		constexpr auto MeshRootComp = 0x318; // USceneComponent*
		constexpr auto IsSpawnEffect = 0x320; // bool
		constexpr auto TotalPathTime = 0x324; // float
		constexpr auto BombingPoint = 0x328; // int32_t
		constexpr auto FireStartPoint = 0x32c; // int32_t
		constexpr auto FlareFirePoint = 0x330; // int32_t
		constexpr auto EndSoundPoint = 0x334; // int32_t
		constexpr auto EffectSound = 0x338; // UAkAudioEvent*
		constexpr auto CameraShake = 0x340; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x348; // float
		constexpr auto CameraShakeMaxDistance = 0x34c; // float
		constexpr auto RealTartgetPos = 0x350; // FVector
		constexpr auto MeshRotation = 0x35c; // FRotator
		constexpr auto IconIndicator = 0x368; // UCrowKitBomberIndicatorWidget*
		constexpr auto IndicatorViewInfo = 0x370; // UCrowIndicatorViewInfo*
		constexpr auto StartTime = 0x378; // float
		constexpr auto IsFire = 0x37c; // bool
		constexpr auto IsPlayFireSound = 0x37d; // bool
		constexpr auto IsPlayReturnSound = 0x37e; // bool
		constexpr auto IsFireFlare = 0x37f; // bool
		constexpr auto BombingPosition = 0x380; // FVector
		constexpr auto WeaponBase = 0x390; // ACrowWeaponBase*
		constexpr auto TargetActor = 0x398; // AActor*
		constexpr auto ProjectileSubClass = 0x3a0; // AActor*
		constexpr auto AuthItemKeyIndex = 0x3a8; // int32_t
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UViewAlignedSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_ACrowWorldMediatorActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto WorldSetupActorTypes = 0x228; // TArray<AActor*>
		constexpr auto WorldSetupComponentTypes = 0x238; // TArray<UActorComponent*>
		constexpr auto WorldSetupComponentTypesBeginPlay = 0x248; // TArray<UActorComponent*>
		constexpr auto SphereMesh = 0x258; // UStaticMeshComponent*
		constexpr auto WorldReplicationActor = 0x260; // ACrowWorldReplicationActor*
		constexpr auto WorldSetupComponents = 0x268; // TArray<UActorComponent*>
		constexpr auto WorldSetupActorReferences = 0x278; // TArray<AActor*>
		constexpr auto WorldSetupComponentReferences = 0x288; // TArray<UActorComponent*>
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_ACrowCloudScapeActor {
		constexpr auto Index = 0x220; // int32_t
		constexpr auto CloudMesh = 0x228; // UStaticMeshComponent*
		constexpr auto BoundaryMesh_Inside = 0x230; // UStaticMeshComponent*
		constexpr auto BoundaryMesh_Outside = 0x238; // UStaticMeshComponent*
		constexpr auto MeshForFixArtifacts = 0x240; // UStaticMeshComponent*
		constexpr auto CloudMaterial = 0x248; // UMaterialInterface*
		constexpr auto CloudCollision = 0x250; // UCrowCloudScapeCollision*
		constexpr auto BillboardComp = 0x258; // UBillboardComponent*
		constexpr auto CloudScapeComp = 0x260; // UCrowCloudScapeComponent*
		constexpr auto CloudScapePath = 0x268; // USplineComponent*
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UOculusHandComponent {
		constexpr auto SkeletonType = 0x7e8; // EOculusHandType
		constexpr auto MeshType = 0x7e9; // EOculusHandType
		constexpr auto ConfidenceBehavior = 0x7ea; // EConfidenceBehavior
		constexpr auto SystemGestureBehavior = 0x7eb; // ESystemGestureBehavior
		constexpr auto SystemGestureMaterial = 0x7f0; // UMaterialInterface*
		constexpr auto bInitializePhysics = 0x7f8; // bool
		constexpr auto bUpdateHandScale = 0x7f9; // bool
		constexpr auto MaterialOverride = 0x800; // UMaterialInterface*
		constexpr auto BoneNameMappings = 0x808; // TMap<EBone, FName>
		constexpr auto CollisionCapsules = 0x858; // TArray<FOculusCapsuleCollider>
		constexpr auto bSkeletalMeshInitialized = 0x868; // bool
	}

	namespace n_UCrowDynamicHeightFogComponent {
		constexpr auto LerpStartZ = 0xb0; // float
		constexpr auto LerpStartZ_FogHeightFalloff = 0xb4; // float
		constexpr auto LerpEndZ = 0xb8; // float
		constexpr auto bClientReadyToPlay = 0xbc; // bool
		constexpr auto bValidComponent = 0xbd; // bool
		constexpr auto LerpHeight = 0xc0; // float
		constexpr auto LerpEndZ_FogHeightFalloff = 0xc4; // float
		constexpr auto CachedExponentialHeightFog = 0xc8; // TWeakObjectPtr<AExponentialHeightFog>
	}

	namespace n_UBakedOcclusionMapVisualizationProperties {
		constexpr auto BaseGrayLevel = 0x60; // float
		constexpr auto OcclusionMultiplier = 0x64; // float
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_ACrowItemMesh {
		constexpr auto MeshComponent = 0x2b8; // UMeshComponent*
		constexpr auto MeshParticleComponent = 0x2c0; // UParticleSystemComponent*
		constexpr auto MeshActor = 0x2c8; // ACrowItemMeshActor*
		constexpr auto bIsMoveMeshOrigin = 0x2d0; // bool
		constexpr auto ItemData = 0x2d8; // FCrowItemData
	}

	namespace n_UCrowToggleButton {
		constexpr auto ToggleSwitcherArray = 0x6a8; // TArray<UWidgetSwitcher*>
		constexpr auto IsStartChecked = 0x6b8; // bool
		constexpr auto NotUseDeChecked = 0x6b9; // bool
		constexpr auto bNotUse = 0x6ba; // bool
		constexpr auto bUseCheckedHover = 0x6bb; // bool
	}

	namespace n_UCrowLobbyMainMedalWidget {
		constexpr auto WB_TabMenu_Medal = 0x348; // UCrowButtonContainerBase*
		constexpr auto IMG_Reward = 0x350; // UCrowWidgetImage*
		constexpr auto TB_RewardName = 0x358; // UTextBlock*
		constexpr auto CP_Reward = 0x360; // UCanvasPanel*
		constexpr auto BT_Reward = 0x368; // UCrowButton*
		constexpr auto WS_RewardStatus = 0x370; // UWidgetSwitcher*
		constexpr auto TB_MedalProgress = 0x378; // UTextBlock*
		constexpr auto PB_MedalProgress = 0x380; // UProgressBar*
		constexpr auto TB_ProgressPercent = 0x388; // UTextBlock*
		constexpr auto WS_MedalList = 0x390; // UWidgetSwitcher*
		constexpr auto GP_AllMedalList = 0x398; // UGridPanel*
		constexpr auto GP_KillstreakMedalList = 0x3a0; // UGridPanel*
		constexpr auto GP_VehicleBoomMedalList = 0x3a8; // UGridPanel*
		constexpr auto GP_LongshotMedalList = 0x3b0; // UGridPanel*
		constexpr auto GP_CombatMedalList = 0x3b8; // UGridPanel*
		constexpr auto GP_BomberMedalList = 0x3c0; // UGridPanel*
		constexpr auto SlotWidgetClass = 0x3c8; // UCrowLobbyMainMedalSlotWidget*
		constexpr auto SelectedUIType = 0x3d0; // ECrowMainMedalUIType
		constexpr auto ProgressGroupIndex = 0x3d4; // uint32_t
		constexpr auto RewardGroupIndex = 0x3d8; // uint32_t
		constexpr auto SelectedSlotWidget = 0x3e0; // UCrowLobbyMainMedalSlotWidget*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_ACrowProjectileSphereBase {
		constexpr auto CollisionRoot = 0x17c8; // USphereComponent*
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_ACrowEnvTriggerScanner {
		constexpr auto SelectorRoot = 0x220; // USceneComponent*
		constexpr auto SphereMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto SphereCollisionComponent = 0x230; // USphereComponent*
		constexpr auto bSelectMode = 0x238; // bool
		constexpr auto bShowSettingState = 0x239; // bool
		constexpr auto SphereScale = 0x23c; // float
		constexpr auto TotalTriggerNum = 0x240; // int32_t
		constexpr auto UsedTriggerNum = 0x244; // int32_t
		constexpr auto UnusedTriggerNum = 0x248; // int32_t
		constexpr auto EnvTriggers = 0x250; // TArray<UCrowEnvTriggerComponent*>
		constexpr auto TimerHandleScanFoliage = 0x270; // FTimerHandle
		constexpr auto bRandomPlayTreeEffect = 0x278; // bool
	}

	namespace n_ACrowFlashBangCaptureActor {
		constexpr auto SceneCapture = 0x220; // UCrowSceneCaptureComponent2D*
	}

	namespace n_UCrowInvenWeaponInfoWidget {
		constexpr auto WS_SlotType = 0x1a48; // UWidgetSwitcher*
		constexpr auto TB_MaxAmmo = 0x1a50; // UTextBlock*
		constexpr auto TB_WeaponName = 0x1a58; // UTextBlock*
		constexpr auto TB_AmmoType = 0x1a60; // UTextBlock*
		constexpr auto TB_WeaponSlotType = 0x1a68; // UTextBlock*
		constexpr auto CP_Primary_weapon_Slot = 0x1a70; // UCanvasPanel*
		constexpr auto IMG_Frame = 0x1a78; // UImage*
		constexpr auto IMG_WeaponBack = 0x1a80; // UImage*
		constexpr auto IMG_Back = 0x1a88; // UImage*
		constexpr auto IMG_Ammo = 0x1a90; // UImage*
		constexpr auto IMG_Line_Vertical = 0x1a98; // UImage*
		constexpr auto IMG_HotKey_2 = 0x1aa0; // UImage*
		constexpr auto BT_Loadout_Button = 0x1aa8; // UCrowButton*
		constexpr auto HB_Weapon_LV = 0x1ab0; // UHorizontalBox*
		constexpr auto TB_WeaponLV = 0x1ab8; // UTextBlock*
		constexpr auto PB_WeaponLV = 0x1ac0; // UCrowProgressBar*
		constexpr auto SB_WeaponImg = 0x1ac8; // UScaleBox*
		constexpr auto SB_WeaponCombine = 0x1ad0; // UScaleBox*
		constexpr auto WB_FireArm_Combine = 0x1ad8; // UCrowWeaponCombinedIconWidget*
		constexpr auto WB_CrowDragDropPanel = 0x1ae0; // UCrowDragDropWidgetBase*
		constexpr auto WB_WeaponPartsList = 0x1ae8; // UCrowWeaponPartsListWidget*
		constexpr auto TextDefaultColor = 0x1af0; // FLinearColor
		constexpr auto TextSelectColor = 0x1b00; // FLinearColor
		constexpr auto DefaultSlotTypeName = 0x1b10; // FText
		constexpr auto HotKeySprite = 0x1b28; // UPaperSprite*
	}

	namespace n_UEdgeLoopInsertionProperties {
		constexpr auto PositionMode = 0x60; // EEdgeLoopPositioningMode
		constexpr auto InsertionMode = 0x64; // EEdgeLoopInsertionMode
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto ProportionOffset = 0x70; // double
		constexpr auto DistanceOffset = 0x78; // double
		constexpr auto bInteractive = 0x80; // bool
		constexpr auto bFlipOffsetDirection = 0x81; // bool
		constexpr auto bWireframe = 0x82; // bool
		constexpr auto VertexTolerance = 0x88; // double
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UCrowWorldmapZoneNameWidget {
		constexpr auto TB_Name = 0x348; // UTextBlock*
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UCrowLandWheelsConfigEngine {
		constexpr auto Debug = 0x28; // bool
		constexpr auto Setting = 0x30; // FCrowLandWheelsEngineSetting
	}

	namespace n_UNewMeshMaterialProperties {
		constexpr auto Material = 0x60; // TWeakObjectPtr<UMaterialInterface>
		constexpr auto UVScale = 0x68; // float
		constexpr auto bWorldSpaceUVScale = 0x6c; // bool
		constexpr auto bWireframe = 0x6d; // bool
		constexpr auto bShowExtendedOptions = 0x6e; // bool
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_ACrowAICharacterCoverPoint {
		constexpr auto OccupyedAICharacter = 0x268; // ACrowAICharacterPawn*
		constexpr auto IsCollectable = 0x270; // bool
		constexpr auto OccupyStance = 0x271; // ECrowAICharacterStance
		constexpr auto PreviewAnimStand = 0x278; // UAnimSequenceBase*
		constexpr auto PreviewAnimCrouch = 0x280; // UAnimSequenceBase*
		constexpr auto PreviewAnimProne = 0x288; // UAnimSequenceBase*
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSliderStyle
		constexpr auto Orientation = 0x460; // EOrientation
		constexpr auto SliderBarColor = 0x464; // FLinearColor
		constexpr auto SliderHandleColor = 0x474; // FLinearColor
		constexpr auto IndentHandle = 0x484; // bool
		constexpr auto Locked = 0x485; // bool
		constexpr auto StepSize = 0x488; // float
		constexpr auto IsFocusable = 0x48c; // bool
		constexpr auto ThePropertyToControl = 0x490; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x500; // FMulticastInlineDelegate
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UMeshConstraintProperties {
		constexpr auto bPreserveSharpEdges = 0x60; // bool
		constexpr auto MeshBoundaryConstraint = 0x61; // EMeshBoundaryConstraint
		constexpr auto GroupBoundaryConstraint = 0x62; // EGroupBoundaryConstraint
		constexpr auto MaterialBoundaryConstraint = 0x63; // EMaterialBoundaryConstraint
		constexpr auto bPreventNormalFlips = 0x64; // bool
	}

	namespace n_UCrowBattlePassWidget {
		constexpr auto BattlePassItemSlotWidget = 0x348; // UCrowBattlePassItemSlotWidget*
		constexpr auto EffectProducingTime = 0x350; // float
		constexpr auto WS_BattlePass_PurchaseImageState = 0x358; // UWidgetSwitcher*
		constexpr auto WS_BattlePass_PurchaseInfoState = 0x360; // UWidgetSwitcher*
		constexpr auto TB_BattlePass_Inactive_Season = 0x368; // UTextBlock*
		constexpr auto TB_BattlePass_Active_Season = 0x370; // UTextBlock*
		constexpr auto TB_BattlePass_Inactive_Season_Period = 0x378; // UTextBlock*
		constexpr auto TB_BattlePass_Active_Season_Period = 0x380; // UTextBlock*
		constexpr auto BT_BattlePass_Purchase = 0x388; // UButton*
		constexpr auto BT_BattlePass_FreePass = 0x390; // UButton*
		constexpr auto WS_BattlePass_FreePass = 0x398; // UWidgetSwitcher*
		constexpr auto TB_BattlePass_FreePass_SelectedLevel = 0x3a0; // UTextBlock*
		constexpr auto BT_Arrow_L = 0x3a8; // UButton*
		constexpr auto BT_Arrow_R = 0x3b0; // UButton*
		constexpr auto SB_BattlePass_ItemSlots = 0x3b8; // UScrollBox*
		constexpr auto BattlePassItemSlotWidgets = 0x3c0; // TMap<int32_t, UCrowBattlePassItemSlotWidget*>
		constexpr auto bIsActivated = 0x410; // bool
		constexpr auto SeasonIndex = 0x411; // char
		constexpr auto UserBattlePassExp = 0x418; // uint64_t
		constexpr auto UserBattlePassLevel = 0x420; // int32_t
		constexpr auto PrevRewardedFreeItemLevel = 0x424; // int32_t
		constexpr auto PrevRewardedPaidItemLevel = 0x428; // int32_t
		constexpr auto RewardedFreeItemLevel = 0x42c; // int32_t
		constexpr auto RewardedPaidItemLevel = 0x430; // int32_t
		constexpr auto FreePassTargetLevel = 0x434; // int16_t
		constexpr auto InProgressSeasonIndex = 0x436; // char
		constexpr auto InProgressSeasonStartDateTime = 0x438; // FDateTime
		constexpr auto InProgressSeasonEndDateTime = 0x440; // FDateTime
		constexpr auto bIsSetItemSlotWidth = 0x448; // bool
		constexpr auto BattlePassItemSlotWidth = 0x44c; // float
		constexpr auto bIsRewardDirecting = 0x450; // bool
		constexpr auto ProducingType = 0x451; // ECrowBattlePassRewardProducingType
		constexpr auto CurrentDirectingBattlePassLevel = 0x454; // int32_t
		constexpr auto ElapsedRewardDirectingByStep = 0x458; // float
		constexpr auto ProducingTargetScrollOffset = 0x45c; // float
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UPostEventAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UUPSFormationPointComponent {
		constexpr auto CharacterOnPoint = 0x460; // ACharacter*
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UCrowFoliageAffectorAnimData {
		constexpr auto AffectorAnimType = 0x28; // ECrowFoliageAffectorAnimType
		constexpr auto AnimTime = 0x2c; // float
		constexpr auto AlphaCurveData = 0x30; // UCurveFloat*
		constexpr auto ScaleCurveData = 0x38; // UCurveVector*
	}

	namespace n_UCrowMovementRotor {
		constexpr auto UseSubstepping = 0xb0; // bool
		constexpr auto PhysicsSetup = 0xb4; // FCrowRotorPhysicsParameter
		constexpr auto VehiclePawn = 0x118; // ACrowVehiclePawn*
		constexpr auto PhysicsBody = 0x120; // UPrimitiveComponent*
		constexpr auto PhysicsParam = 0x128; // FCrowRotorPhysicsParameter
		constexpr auto IsBlockedPhysics = 0x188; // bool
		constexpr auto IdleHoverForce = 0x18c; // float
		constexpr auto WorldOceanZ = 0x190; // float
		constexpr auto WorldAltitudeLimitZ = 0x194; // float
		constexpr auto IsDirtyClientInput = 0x198; // bool
		constexpr auto ClientRawInput = 0x19c; // FCrowMovementHeliValues
		constexpr auto ReceivedInput = 0x1ac; // FCrowMovementHeliValues
		constexpr auto CalculatedInput = 0x1bc; // FCrowMovementHeliValues
		constexpr auto ForceAndTorque = 0x1cc; // FCrowMovementHeliValues
		constexpr auto ForceAndTorqueCurrent = 0x1dc; // FCrowMovementHeliValues
		constexpr auto PhysicsBodyForward = 0x270; // FVector
		constexpr auto PhysicsBodyRight = 0x27c; // FVector
		constexpr auto PhysicsBodyUp = 0x288; // FVector
		constexpr auto PlanarForward = 0x294; // FVector
		constexpr auto PlanarRight = 0x2a0; // FVector
		constexpr auto DirectionalVelocity = 0x2ac; // FVector
		constexpr auto DragForce = 0x2b8; // FVector
		constexpr auto IdleDampingForce = 0x2c4; // FVector
		constexpr auto CurrentCollectiveForce = 0x2d0; // float
		constexpr auto IsEngineStart = 0x2d4; // bool
		constexpr auto DebugHoverForceSize = 0x2d8; // float
		constexpr auto DebugRotorForce = 0x2dc; // FVector
		constexpr auto DamagedEffectInput = 0x2f8; // FCrowMovementHeliValues
		constexpr auto DamagedEffectEnginePower = 0x308; // float
		constexpr auto DamagedInputFactor = 0x30c; // float
	}

	namespace n_UCrowPlayerConstruction {
		constexpr auto State = 0xb0; // ECrowPlayerConstructionState
		constexpr auto ClientTarget = 0xb8; // AActor*
		constexpr auto OwnerPawn = 0xc0; // ACrowCharacterPawn*
		constexpr auto AgentObject = 0xc8; // UObject*
		constexpr auto TargetClass = 0xd0; // UObject*
		constexpr auto TargetBodySize = 0xd8; // FVector
		constexpr auto Offset = 0xe4; // FVector
		constexpr auto BuildTime = 0xf0; // float
		constexpr auto CheckBuildableCollisionPreset = 0xf4; // FName
		constexpr auto bIsFindFloorWhenWall = 0xfc; // bool
		constexpr auto bLetSeeFront = 0xfd; // bool
		constexpr auto BuildKeyName = 0x100; // FName
		constexpr auto CancelKeyName = 0x108; // FName
		constexpr auto DisplayedMessage = 0x110; // FCrowPlayerConstructionMessage
		constexpr auto TargetTransformCollisionPresetName = 0x160; // FName
		constexpr auto PrevTargetLocation = 0x168; // FVector
		constexpr auto bIsBuildable = 0x174; // bool
	}

	namespace n_UCrowSelfSquadSummaryWidget {
		constexpr auto WB_MyResult = 0x368; // UCrowSquadSummarySlotWidget*
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x458; // float
		constexpr auto CapsuleRadius = 0x45c; // float
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_ULuminARCandidateImage {
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UProceduralBoxToolProperties {
		constexpr auto Height = 0x80; // float
		constexpr auto HeightSubdivisions = 0x84; // int32_t
	}

	namespace n_UPlaneCutToolProperties {
		constexpr auto bSnapToWorldGrid = 0x60; // bool
		constexpr auto bKeepBothHalves = 0x61; // bool
		constexpr auto SpacingBetweenHalves = 0x64; // float
		constexpr auto bFillCutHole = 0x68; // bool
		constexpr auto bShowPreview = 0x69; // bool
		constexpr auto bFillSpans = 0x6a; // bool
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UCrowRadialMenuConquestSkill {
		constexpr auto WB_RadialMenu_6Button_1 = 0x3d0; // UCrowRadialButtonConquestSkill*
		constexpr auto WB_RadialMenu_6Button_2 = 0x3d8; // UCrowRadialButtonConquestSkill*
		constexpr auto WB_RadialMenu_6Button_3 = 0x3e0; // UCrowRadialButtonConquestSkill*
		constexpr auto WB_RadialMenu_6Button_4 = 0x3e8; // UCrowRadialButtonConquestSkill*
		constexpr auto WB_RadialMenu_6Button_5 = 0x3f0; // UCrowRadialButtonConquestSkill*
		constexpr auto WB_RadialMenu_6Button_6 = 0x3f8; // UCrowRadialButtonConquestSkill*
		constexpr auto TB_Money = 0x400; // UTextBlock*
		constexpr auto SkillManager = 0x408; // UCrowConquestSkillManager*
	}

	namespace n_UCrowSubTitleTableManager {
		constexpr auto SubTitleDataRows = 0x28; // TMap<int32_t, FCrowSubTitleDataRow>
	}

	namespace n_UVoxelSolidifyMeshesTool {
		constexpr auto SolidifyProperties = 0x108; // UVoxelSolidifyMeshesToolProperties*
	}

	namespace n_UCrowMissionAreaSquadRespawn {
		constexpr auto IsSpawned = 0x220; // bool
		constexpr auto BuildTime = 0x224; // float
		constexpr auto SpawnEffect = 0x228; // UParticleSystem*
		constexpr auto SpawnEffectSocketName = 0x230; // FName
		constexpr auto DestroyEffect = 0x238; // UParticleSystem*
		constexpr auto DestroyEffectSocketName = 0x240; // FName
	}

	namespace n_ACrowWeaponPartsActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto MeshComponent = 0x228; // UMeshComponent*
		constexpr auto WeaponActor = 0x230; // ACrowWeaponBase*
	}

	namespace n_UCrowWWiseSoundEvents {
		constexpr auto GasHitSound = 0x28; // UAkAudioEvent*
		constexpr auto HitSound = 0x30; // UAkAudioEvent*
		constexpr auto KillSound = 0x38; // UAkAudioEvent*
		constexpr auto HitMarks = 0x40; // TMap<EHittingAreaType, UAkAudioEvent*>
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UGroupEdgeInsertionProperties {
		constexpr auto InsertionMode = 0x60; // EGroupEdgeInsertionMode
		constexpr auto bWireframe = 0x64; // bool
		constexpr auto VertexTolerance = 0x68; // double
	}

	namespace n_UKelvinBrushProperties {
		constexpr auto FalloffDistance = 0x60; // float
		constexpr auto Stiffness = 0x64; // float
		constexpr auto Incompressiblity = 0x68; // float
		constexpr auto BrushSteps = 0x6c; // int32_t
	}

	namespace n_UCrowWorldEventListWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto WorldEventItem = 0x350; // UCrowWorldEventListItemWidget*
		constexpr auto ItemArray = 0x358; // TArray<UCrowWorldEventListItemWidget*>
	}

	namespace n_ABP_ImpedimentsActor_C {
		constexpr auto Box = 0x230; // UBoxComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
	}

	namespace n_UCrowWorldLODUpdater {
		constexpr auto CoreCountAvailable = 0x28; // int32_t
		constexpr auto MinNumberOfCores = 0x2c; // int32_t
		constexpr auto MinCountPerThread = 0x30; // int32_t
		constexpr auto LODLevelCameraDistance = 0x38; // TArray<float>
		constexpr auto PlayerController = 0xe0; // APlayerController*
		constexpr auto WorldActorLODStates = 0xe8; // TArray<FCrowWorldLODState>
		constexpr auto WorldActorLODDatas = 0xf8; // TArray<FCrowWorldLODData>
		constexpr auto WorldActorLODStateIndexes = 0x108; // TMap<uint32_t, int32_t>
		constexpr auto StateIndexPool = 0x158; // TArray<int16_t>
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_ACrowSafeBoxEventActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto InteractionTime = 0x230; // float
		constexpr auto SparkEffect = 0x238; // UParticleSystem*
		constexpr auto WeldingDecal = 0x240; // FCrowDecalInfo
		constexpr auto WeldingDecalSpawnLength = 0x290; // float
		constexpr auto IconDisplayInfo = 0x298; // FCrowGameIconDisplayInfo
		constexpr auto SoundCutting = 0x320; // UAkAudioEvent*
		constexpr auto SoundEndCutting = 0x328; // UAkAudioEvent*
		constexpr auto SoundComplete = 0x330; // UAkAudioEvent*
		constexpr auto CuttingViewAngle = 0x338; // float
		constexpr auto EventState = 0x33c; // ECrowSafeBoxEventState
		constexpr auto GaugeWidget = 0x340; // UCrowInteractionProgressCircleWidget*
		constexpr auto OpenPlayerState = 0x348; // ACrowPlayerStateBase*
		constexpr auto SplineArray = 0x350; // TArray<USplineComponent*>
		constexpr auto SparkEffectComponent = 0x360; // UParticleSystemComponent*
	}

	namespace n_UCrowPrepareMatchWidget {
		constexpr auto TB_AllyNum = 0x348; // UTextBlock*
		constexpr auto TB_EnemyNum = 0x350; // UTextBlock*
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15bc; // float
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UMeshOpPreviewWithBackgroundCompute {
		constexpr auto PreviewMesh = 0x58; // UPreviewMesh*
		constexpr auto StandardMaterials = 0x60; // TArray<UMaterialInterface*>
		constexpr auto OverrideMaterial = 0x70; // UMaterialInterface*
		constexpr auto WorkingMaterial = 0x78; // UMaterialInterface*
	}

	namespace n_UDisplaceMeshCommonProperties {
		constexpr auto DisplacementType = 0x60; // EDisplaceMeshToolDisplaceType
		constexpr auto DisplaceIntensity = 0x64; // float
		constexpr auto RandomSeed = 0x68; // int32_t
		constexpr auto Subdivisions = 0x6c; // int32_t
		constexpr auto WeightMap = 0x70; // FName
		constexpr auto WeightMapsList = 0x78; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x88; // bool
		constexpr auto bDisableSizeWarning = 0x89; // bool
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UVoxelMorphologyMeshesTool {
		constexpr auto MorphologyProperties = 0x108; // UVoxelMorphologyMeshesToolProperties*
	}

	namespace n_UCrowCharacterAnimNotify_Swim {
		constexpr auto IsFP = 0x38; // bool
		constexpr auto Action = 0x39; // ECrowCharacterSwimAction
		constexpr auto Speed = 0x3a; // char
		constexpr auto BodyParts = 0x3b; // ECrowCharacterSwimBodyParts
		constexpr auto SocketName = 0x3c; // FName
		constexpr auto LocationOffset = 0x44; // FVector
		constexpr auto RotationOffset = 0x50; // FRotator
		constexpr auto bIsAttachedBone = 0x5c; // bool
		constexpr auto PreviewMaterialName = 0x60; // FName
		constexpr auto PreviewIsDiving = 0x68; // bool
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UCrowProgressBarWidget {
		constexpr auto PB_Progress = 0x348; // UProgressBar*
		constexpr auto TXT_Progress = 0x350; // UTextBlock*
		constexpr auto BD_Notice = 0x358; // UBorder*
		constexpr auto RTXT_Notice = 0x360; // URichTextBlock*
		constexpr auto ProgressTimerHandle = 0x388; // FTimerHandle
		constexpr auto RunningTimeSecond = 0x390; // float
		constexpr auto StartTimeSeconds = 0x394; // float
	}

	namespace n_ACrowProjectileRocketLauncher {
		constexpr auto ProjectileGravityScale = 0x17d0; // float
		constexpr auto TracerFX_1P = 0x17d8; // UParticleSystem*
		constexpr auto TracerFX_3P = 0x17e0; // UParticleSystem*
		constexpr auto SubTrailEffectActor = 0x17e8; // AActor*
		constexpr auto SoundMove = 0x17f0; // UAkAudioEvent*
		constexpr auto FlyBySound = 0x17f8; // UAkAudioEvent*
		constexpr auto FlyBySoundRadius = 0x1800; // float
		constexpr auto CameraShake = 0x1808; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x1810; // float
		constexpr auto CameraShakeMaxDistance = 0x1814; // float
		constexpr auto SoundTargetActor = 0x1818; // AActor*
		constexpr auto TrailEffectActor = 0x1820; // ACrowRocketLauncherTrail*
		constexpr auto bIsUpdateFlyBySound = 0x1828; // bool
		constexpr auto TracerFXComp_1P = 0x1830; // UParticleSystemComponent*
		constexpr auto TracerFXComp_3P = 0x1838; // UParticleSystemComponent*
	}

	namespace n_AWaterMeshActor {
		constexpr auto WaterVelocityTexture = 0x220; // UTexture2D*
		constexpr auto WaterMesh = 0x228; // UWaterMeshComponent*
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_UWaterRuntimeSettings {
		constexpr auto CollisionChannelForWaterTraces = 0x38; // ECollisionChannel
		constexpr auto MaterialParameterCollection = 0x40; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto WaterBodyIconWorldSize = 0x68; // float
		constexpr auto WaterBodyIconWorldZOffset = 0x6c; // float
		constexpr auto DefaultWaterCollisionProfileName = 0x70; // FName
	}

	namespace n_ACrowProjectileSmokeGrenade {
		constexpr auto SmokeOriginLocation = 0x18d0; // FVector
		constexpr auto SmokeParticle = 0x18e0; // UParticleSystem*
		constexpr auto TimeToActivation = 0x18e8; // float
		constexpr auto LifeTime = 0x18ec; // float
		constexpr auto EffectSound_W = 0x18f0; // UAkAudioEvent*
		constexpr auto SmokeParticleComp = 0x18f8; // UParticleSystemComponent*
		constexpr auto bExplosion = 0x1900; // bool
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UCrowSlangManager {
		constexpr auto SpecialSymbols = 0x28; // FString
	}

	namespace n_UCrowBuildingSMC {
		constexpr auto Preview = 0x4d0; // bool
		constexpr auto LODType = 0x4d1; // char
		constexpr auto LODLevel = 0x4d4; // int32_t
		constexpr auto PartsInfo = 0x4e0; // FCrowBuildingPartsInfo
		constexpr auto DecalReceiver = 0x520; // TWeakObjectPtr<UStaticMeshComponent>
		constexpr auto DecalReceiverMaterial = 0x528; // UMaterialInterface*
		constexpr auto RemainMesh = 0x530; // UStaticMesh*
		constexpr auto bIsDestructible = 0x538; // bool
		constexpr auto UsingTriggerMesh = 0x539; // bool
		constexpr auto bIsGlassMaterial = 0x53a; // bool
		constexpr auto DestructibleSocket = 0x53c; // FVector
		constexpr auto BoundingBoxCenter = 0x548; // FVector
		constexpr auto MeshDetail = 0x558; // FCrowBuildingHISMCDetail
		constexpr auto Geometries = 0x5c0; // TArray<FKAggregateGeom>
		constexpr auto BodySetups = 0x5d0; // TArray<UBodySetup*>
		constexpr auto MeshGeometryFlag = 0x5e0; // char
		constexpr auto TriggerMesh = 0x5e8; // UStaticMesh*
	}

	namespace n_ACrowSpectatorIconActor {
		constexpr auto IconLocation = 0x220; // USceneComponent*
		constexpr auto TargetPS = 0x228; // ACrowPlayerStateBase*
		constexpr auto TargetPawn = 0x230; // APawn*
		constexpr auto IndicatorViewInfo = 0x238; // UCrowIndicatorViewInfo*
		constexpr auto LocalBodyIconInfo = 0x240; // FCrowGameIconDisplayInfo
		constexpr auto KillerIconInfo = 0x2c8; // FCrowGameIconDisplayInfo
	}

	namespace n_UCrowStatusBreathWidget {
		constexpr auto BreathFadeInTime = 0x348; // float
		constexpr auto BreathFadeOutTime = 0x34c; // float
		constexpr auto AniBreathEmptyName = 0x350; // FName
		constexpr auto CP_Breath = 0x358; // UCanvasPanel*
		constexpr auto PB_Breath = 0x360; // UCrowProgressBar*
		constexpr auto BreathTweenAlpha = 0x368; // UCrowWidgetTweenAlpha*
		constexpr auto FadeTweenAlpha = 0x370; // UCrowWidgetTweenAlpha*
		constexpr auto AniBreathEmpty = 0x378; // UWidgetAnimation*
	}

	namespace n_UCrowWeaponPartsSideBarrel {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsSideBarrelTableRow
		constexpr auto DefaultPartsData = 0x628; // FCrowWeaponPartsSideBarrelTableRow
	}

	namespace n_UCrowRadialMenuHealKitWidget {
		constexpr auto WB_RadialMenu_4Button_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_4Button_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_4Button_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_4Button_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_4Button_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
		constexpr auto EquipedAmmoTextIndex = 0x3f8; // FString
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UWB_MatchingTimer_C {
		constexpr auto Ani_Show = 0x3a8; // UWidgetAnimation*
		constexpr auto IMG_BackGround = 0x3b0; // UImage*
		constexpr auto IMG_BackGround_2 = 0x3b8; // UImage*
		constexpr auto IMG_BG = 0x3c0; // UImage*
		constexpr auto IMG_Cancel_BackGround = 0x3c8; // UImage*
		constexpr auto IMG_Cancel_Hover = 0x3d0; // UImage*
		constexpr auto IMG_MatchingComplete_Bg = 0x3d8; // UImage*
		constexpr auto IMG_MatchingComplete_DecoT = 0x3e0; // UImage*
		constexpr auto MatchingComplete_DecoB = 0x3e8; // UImage*
		constexpr auto TB_MenuTitle_2 = 0x3f0; // UTextBlock*
	}

	namespace n_UCrowConquestSkillManager {
		constexpr auto PlayerState = 0xb0; // ACrowPlayerStateConquest*
		constexpr auto GameInventory = 0xb8; // UCrowGameInvenComponent*
		constexpr auto SkillArray = 0xc0; // TArray<FCrowConquestSkillInfo>
		constexpr auto SkillCoolMap = 0xd0; // TMap<FString, float>
		constexpr auto IronShieldArray = 0x120; // TArray<ACrowIronShieldActor*>
	}

	namespace n_ACrowItemSpawner {
		constexpr auto SpawnerType = 0x220; // ECrowSpawnerType
		constexpr auto bIsSpawnRandom = 0x221; // bool
		constexpr auto RandomIndex = 0x224; // uint32_t
		constexpr auto bIsSpawnGroup = 0x228; // bool
		constexpr auto GroupIndex = 0x22c; // uint32_t
		constexpr auto bIsSpawnMineral = 0x230; // bool
		constexpr auto MineralIndex = 0x234; // uint32_t
		constexpr auto MineralType = 0x238; // int32_t
		constexpr auto bIsSpawnFix = 0x23c; // bool
		constexpr auto FixIndex = 0x240; // uint32_t
		constexpr auto bIsSpawnRespawnFix = 0x244; // bool
		constexpr auto RespawnFixIndex = 0x248; // uint32_t
		constexpr auto SpawnedItemArray = 0x280; // TArray<ACrowItemBase*>
		constexpr auto SpawnedInvenArray = 0x290; // TArray<ACrowPickupInventory*>
	}

	namespace n_UCrowEnvTriggerComponent {
		constexpr auto RowName = 0x460; // FName
		constexpr auto SocketName = 0x468; // FString
		constexpr auto OverlapInfos = 0x478; // TMap<int32_t, FCrowEnvOverlapInfo>
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UCrowCharacterMovementCollision {
		constexpr auto bActiveHeadCollision = 0x1f8; // bool
		constexpr auto bHitHead = 0x1f9; // bool
		constexpr auto bSimulating = 0x1fa; // bool
		constexpr auto HeadCollisionRadius = 0x1fc; // float
		constexpr auto HeadRotation = 0x200; // FQuat
		constexpr auto CrowMovement = 0x210; // UCrowCharacterMovement*
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x440; // int32_t
		constexpr auto hand = 0x444; // EControllerHand
		constexpr auto MotionSource = 0x448; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x450; // char : 1
		constexpr auto CurrentTrackingStatus = 0x454; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x455; // bool
		constexpr auto DisplayModelSource = 0x458; // FName
		constexpr auto CustomDisplayMesh = 0x460; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x468; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4e0; // UPrimitiveComponent*
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UCrowClanManager {
		constexpr auto JoinClanList = 0x38; // TArray<FClanListItem>
		constexpr auto InviteClanList = 0x48; // TArray<FClanListItem>
		constexpr auto RecommandClanList = 0x58; // TArray<FClanListItem>
		constexpr auto RankingTotalClanList = 0x68; // TArray<FClanListItem>
		constexpr auto RankingMonthClanList = 0x78; // TArray<FClanListItem>
		constexpr auto SearchClanInfo = 0x88; // FClanListItem
		constexpr auto SearchUserInfo = 0xc8; // FSearchUserInfo
		constexpr auto InviteUserList = 0xf0; // TArray<FSearchUserInfo>
		constexpr auto RequestUserList = 0x100; // TArray<FSearchUserInfo>
		constexpr auto MyClanInfo = 0x110; // FClanInfo
		constexpr auto UnlockClanMark = 0x188; // TArray<uint32_t>
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_ACrowDrawVolumeTextureActor {
		constexpr auto Canvas = 0x220; // UCanvas*
		constexpr auto DrawToRTContext = 0x228; // FDrawToRenderTargetContext
		constexpr auto Mid = 0x238; // UMaterialInstanceDynamic*
		constexpr auto Resolution = 0x240; // FVector2D
		constexpr auto NumberOfCellsRendered = 0x248; // float
		constexpr auto FlipCellsCurrent = 0x24c; // float
		constexpr auto CellsPerRow = 0x250; // float
		constexpr auto CurrentRow = 0x254; // float
		constexpr auto CurrentColumn = 0x258; // float
		constexpr auto FlipCellsMax = 0x25c; // float
		constexpr auto FlipRes = 0x260; // float
		constexpr auto bDraw = 0x264; // bool
		constexpr auto Material = 0x268; // UMaterialInterface*
		constexpr auto ScanMesh = 0x270; // UStaticMeshComponent*
		constexpr auto RenderTarget = 0x278; // UTextureRenderTarget2D*
		constexpr auto CaptureTarget = 0x280; // UTextureRenderTarget2D*
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_ACrowFxSpawnTesterActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto SphereMesh = 0x228; // UStaticMeshComponent*
		constexpr auto StopSpawn = 0x230; // bool
		constexpr auto FxAsset = 0x238; // UParticleSystem*
		constexpr auto SoundAsset = 0x240; // UAkAudioEvent*
		constexpr auto CountX = 0x248; // int32_t
		constexpr auto CountY = 0x24c; // int32_t
		constexpr auto UseRandomBeginTiming = 0x250; // bool
		constexpr auto DurationMin = 0x254; // float
		constexpr auto DurationMax = 0x258; // float
		constexpr auto GridSize = 0x25c; // float
		constexpr auto JitterSize = 0x260; // float
		constexpr auto UsePool = 0x264; // bool
		constexpr auto Items = 0x268; // TArray<FCrowFxSpawnTesterItem>
		constexpr auto Pool = 0x278; // TArray<UParticleSystemComponent*>
	}

	namespace n_ACrowGameStateSquadMatch {
		constexpr auto ObjectiveMineralCount = 0x4d8; // uint32_t
		constexpr auto DefaultDropMineralCountMin = 0x4dc; // int32_t
		constexpr auto DefaultDropMineralCountMax = 0x4e0; // int32_t
		constexpr auto ActiveMiningCountMin = 0x4e4; // uint16_t
		constexpr auto ActiveMiningCountMax = 0x4e6; // uint16_t
		constexpr auto MaxMiningMachineCount = 0x4e8; // uint16_t
		constexpr auto InstallMiningMachineDialogKey = 0x4f0; // FString
		constexpr auto MiningCompleteDialogKey = 0x500; // FString
		constexpr auto PlayDialogEnemyInstallDistance = 0x510; // float
		constexpr auto BeforeReachTheGoalDialogKey = 0x518; // FString
		constexpr auto BeforeReachTheGoalEffectSound = 0x528; // UAkAudioEvent*
		constexpr auto EnableEscapeTimeMin = 0x530; // float
		constexpr auto EnableEscapeTimeMax = 0x534; // float
		constexpr auto ReCallCoolTime = 0x538; // float
		constexpr auto AutoCallTime = 0x53c; // float
		constexpr auto ReturnAutoCallTime = 0x540; // float
		constexpr auto CallTheHeliEffectSound = 0x548; // UAkAudioEvent*
		constexpr auto AnotherSquadDialogKey = 0x550; // FString
		constexpr auto AnotherSquadEffectSound = 0x560; // UAkAudioEvent*
		constexpr auto EscapeSpawnVehicleDialogKey = 0x568; // FString
		constexpr auto EscapeSpawnVehicleSound = 0x578; // UAkAudioEvent*
		constexpr auto EnableRespawnDelayAfterDead = 0x580; // float
		constexpr auto SquadRespawnCoolTime = 0x584; // float
		constexpr auto GetPointSound = 0x588; // UAkAudioEvent*
		constexpr auto ZombieInfo = 0x590; // FCrowZombieInfo
		constexpr auto WalkieTalkieUse = 0xc00; // UAkAudioEvent*
		constexpr auto WalkieTalkieUseEnd = 0xc08; // UAkAudioEvent*
		constexpr auto Voice_Skill_Respawn_Selector_WT = 0xc10; // UAkAudioEvent*
		constexpr auto Voice_Skill_Respawn_SelectOther_WT = 0xc18; // UAkAudioEvent*
		constexpr auto ProceedingCuonArray = 0xc20; // TArray<FCrowProcessMineralInfo>
		constexpr auto RespawnAirPlaneActorClass = 0xc30; // ACrowRespawnAirPlaneActor*
		constexpr auto RespawnAirPlaneCameraActorClass = 0xc38; // ACrowRespawnAirPlaneCamera*
		constexpr auto RespawnAirPlaneSpawnDelay = 0xc40; // float
		constexpr auto RespawnAirPlaneSpeed = 0xc44; // float
		constexpr auto RespawnAirPlaneCameraSpeed = 0xc48; // float
		constexpr auto RespawnAirPlaneCameraAttachDist = 0xc4c; // float
		constexpr auto SelectedSplineActor = 0xc50; // ACrowAirPlaneRespawnSplineActor*
		constexpr auto SplineRandomAngle = 0xc58; // float
		constexpr auto EnableEscapeTime = 0xc5c; // float
		constexpr auto CrowGameStateSquadMatch = 0xc60; // ECrowGameStateSquadMatch
		constexpr auto bIsReCall = 0xc61; // bool
		constexpr auto bIsEmergencyCall = 0xc62; // bool
		constexpr auto MiningPointArray = 0xc68; // TArray<ACrowMiningPointActor*>
		constexpr auto EscapePointArray = 0xc78; // TArray<ACrowEscapePointActor*>
		constexpr auto WinnerTeamInfo = 0xc88; // FCrowTeamInfo
		constexpr auto AirPlaneActor = 0xcb8; // ACrowRespawnAirPlaneActor*
		constexpr auto AirPlaneCameraActor = 0xcc0; // ACrowRespawnAirPlaneCamera*
		constexpr auto CharacterPartsInfoArray = 0xcc8; // TArray<FCrowCharacterPartsInfo>
		constexpr auto CloudReplicationActor = 0xcd8; // ACrowCloudScapeReplicationActor*
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_USetCollisionGeometryTool {
		constexpr auto Settings = 0x90; // USetCollisionGeometryToolProperties*
		constexpr auto VizSettings = 0x98; // UCollisionGeometryVisualizationProperties*
		constexpr auto CollisionProps = 0xa0; // UPhysicsObjectToolPropertySet*
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewGeom = 0xb0; // UPreviewGeometry*
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_ACrowLobbyCharacterPawn {
		constexpr auto LobbyCharacterMovement = 0x11b0; // UCharacterMovementComponent*
		constexpr auto CurrrentWeapon = 0x11f0; // ACrowWeaponLobby*
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_UCrowFPSEditorSettings {
		constexpr auto IntrusionTest = 0x28; // bool
		constexpr auto ReplicationGraphTest = 0x29; // bool
	}

	namespace n_UCrowNetworkDediServer {
		constexpr auto ServerIP = 0x30; // FString
		constexpr auto ServerPort = 0x40; // FString
		constexpr auto ProcessName = 0x50; // FString
		constexpr auto ManagerAddr = 0x60; // FString
		constexpr auto CurrentScene = 0x70; // ACrowSceneBase*
	}

	namespace n_UCrowSelectMapWidget {
		constexpr auto TB_StageName = 0x348; // UTextBlock*
		constexpr auto IMG_Map = 0x350; // UImage*
		constexpr auto CB_DotIndicator = 0x358; // UCheckBox*
		constexpr auto HB_SelectMap = 0x360; // UHorizontalBox*
	}

	namespace n_UCrowSupplyGainMessage {
		constexpr auto IMG_Weapon = 0x348; // UImage*
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_UBTTask_CrowSetStance {
		constexpr auto Stance = 0x98; // ECrowAICharacterStance
		constexpr auto MoveMode = 0x99; // ECrowAICharacterMoveMode
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UMh6_MachineGun_02_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x318; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x420; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x528; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_MeshRefPose = 0x548; // FAnimNode_MeshSpaceRefPose
		constexpr auto RotorRoll = 0x558; // float
	}

	namespace n_UCrowMissionSystemManager {
		constexpr auto ArrayDailyMission = 0x28; // TArray<FCrowMissionInfo>
		constexpr auto ArrayWeeklyMission = 0x38; // TArray<FCrowMissionInfo>
		constexpr auto ArrayCurrentPlayingMission = 0x48; // TArray<FCrowMissionInfo>
		constexpr auto TutorialMissionList = 0x58; // TArray<FCrowMissionInfo>
		constexpr auto MapMissionTable = 0x68; // TMap<int32_t, FCrowMissionTableRow>
		constexpr auto PlayerState = 0xb8; // ACrowPlayerStateBase*
	}

	namespace n_AWaterBodyLake {
		constexpr auto LakeGenerator = 0xdd0; // ULakeGenerator*
	}

	namespace n_UCrowStartModeTitleWidget {
		constexpr auto TB_ModTitle = 0x348; // UTextBlock*
		constexpr auto visibleSecond = 0x350; // float
		constexpr auto Anim_Show = 0x358; // UWidgetAnimation*
		constexpr auto Anim_Fade = 0x360; // UWidgetAnimation*
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_ACrowBomberProjectileActor {
		constexpr auto CollisionComp = 0x220; // UCapsuleComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto TargetPosition = 0x230; // FVector
	}

	namespace n_UCrowIndicatorViewInfo {
		constexpr auto TargetActor = 0x28; // AActor*
		constexpr auto TargetComponent = 0x30; // USceneComponent*
		constexpr auto TargetSkeletalMesh = 0x38; // USkeletalMeshComponent*
		constexpr auto PingData = 0x40; // FCrowPingData
		constexpr auto DisplayInfo = 0xa8; // FCrowGameIconDisplayInfo
		constexpr auto MainWidget = 0x130; // UCrowWidgetBase*
		constexpr auto RootWidget = 0x138; // UWidget*
		constexpr auto ArrowPanel = 0x140; // UWidget*
		constexpr auto IconArray = 0x148; // TArray<UWidget*>
		constexpr auto NameArray = 0x158; // TArray<UWidget*>
		constexpr auto DistanceArray = 0x168; // TArray<UTextBlock*>
		constexpr auto PrevScale = 0x178; // float
		constexpr auto PrevPixelPos = 0x17c; // FVector2D
		constexpr auto PrevArrowAngle = 0x184; // float
	}

	namespace n_UCrowBombMissionScoreBoardWidget {
		constexpr auto ScoreInfoListItem = 0x350; // UCrowBombMissionScoreSlotWidget*
		constexpr auto TBRound = 0x358; // UTextBlock*
		constexpr auto VBMyTeamList = 0x360; // UVerticalBox*
		constexpr auto VBEnemyTeamList = 0x368; // UVerticalBox*
		constexpr auto MyTeamScoreWidget = 0x370; // UCrowBombMissionTeamScoreWidget*
		constexpr auto EnemyTeamScoreWidget = 0x378; // UCrowBombMissionTeamScoreWidget*
		constexpr auto RedTeamPlayerList = 0x380; // TArray<FCrowBombMissionScoreListItemData>
		constexpr auto BlueTeamPlayerList = 0x390; // TArray<FCrowBombMissionScoreListItemData>
		constexpr auto LocalPlayerState = 0x3a0; // ACrowPlayerStateBombMission*
		constexpr auto GameStateBombMission = 0x3a8; // ACrowGameStateBombMission*
		constexpr auto RedTeamScoreData = 0x3b0; // FCrowBombMissionTeamScoreData
		constexpr auto BlueTeamScoreData = 0x3c0; // FCrowBombMissionTeamScoreData
		constexpr auto BDMyTeam = 0x3d0; // UBorder*
		constexpr auto BDEnemyTeam = 0x3d8; // UBorder*
		constexpr auto RedTeamColor = 0x3e0; // FLinearColor
		constexpr auto BlueTeamColor = 0x3f0; // FLinearColor
	}

	namespace n_ACrowItemMeshLODViewer {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto ItemMeshAssets = 0x228; // TArray<USkeletalMesh*>
		constexpr auto SKCActors = 0x238; // TArray<ACrowItemTableOverviewSKC*>
		constexpr auto LODIndex = 0x248; // int32_t
	}

	namespace n_UCrowPhysicalMaterial {
		constexpr auto IsEnablePenetration = 0xa0; // bool
		constexpr auto PenetrationResistance = 0xa4; // float
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UCrowRadialMenuInput {
		constexpr auto PC = 0x140; // APlayerController*
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UCrowCompassEnemyFireMarker {
		constexpr auto IMG_EnemyCompass = 0x348; // UImage*
		constexpr auto CompassMaterialIns = 0x350; // UMaterialInstance*
		constexpr auto CompassMaterialInsDynamic = 0x358; // UMaterialInstanceDynamic*
		constexpr auto TargetActorLocation = 0x360; // FVector
		constexpr auto Offset = 0x36c; // float
		constexpr auto ParentWidget = 0x370; // UCrowCompassInfoWIdget*
		constexpr auto TargetActorName = 0x378; // FName
	}

	namespace n_UCrowModExpTableManager {
		constexpr auto ModExpData = 0x28; // TMap<ECrowGameMode, FCrowModExpTableRow>
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UCrowIndicatorControll {
		constexpr auto PanelIcon = 0x108; // TArray<UCanvasPanel*>
		constexpr auto TextName = 0x118; // TArray<UTextBlock*>
		constexpr auto TextDistance = 0x128; // TArray<UTextBlock*>
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UCrowRandomBoxInfoWidget {
		constexpr auto ItemSlotWidgetClass = 0x348; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto WB_Shop_Itemslot = 0x350; // UCrowShopItemSlotWidget*
		constexpr auto GP_ItemList = 0x358; // UGridPanel*
		constexpr auto CP_Gacha_Percent = 0x360; // UCanvasPanel*
		constexpr auto BT_Open = 0x368; // UCrowButton*
		constexpr auto BT_Buy = 0x370; // UCrowButton*
		constexpr auto BT_BuyGPoint = 0x378; // UCrowButton*
		constexpr auto BT_BuyRCP = 0x380; // UCrowButton*
		constexpr auto BT_Cancel = 0x388; // UCrowButton*
		constexpr auto BT_GachaPercent = 0x390; // UCrowButton*
		constexpr auto BT_Close = 0x398; // UCrowButton*
		constexpr auto TB_ItemName = 0x3a0; // UTextBlock*
		constexpr auto TXT_Legendary_Percent = 0x3a8; // UTextBlock*
		constexpr auto TXT_Epic_Percent = 0x3b0; // UTextBlock*
		constexpr auto TXT_Rare_Percent = 0x3b8; // UTextBlock*
		constexpr auto TXT_Uncommon_Percent = 0x3c0; // UTextBlock*
		constexpr auto TXT_Common_Percent = 0x3c8; // UTextBlock*
		constexpr auto HB_Legendary = 0x3d0; // UHorizontalBox*
		constexpr auto HB_Epic = 0x3d8; // UHorizontalBox*
		constexpr auto HB_Rare = 0x3e0; // UHorizontalBox*
		constexpr auto HB_Uncommon = 0x3e8; // UHorizontalBox*
		constexpr auto HB_Common = 0x3f0; // UHorizontalBox*
		constexpr auto CP_GachaInfo_Rare = 0x3f8; // UCanvasPanel*
		constexpr auto CP_GachaInfo_Uncommon = 0x400; // UCanvasPanel*
		constexpr auto CP_GachaInfo_Common = 0x408; // UCanvasPanel*
		constexpr auto CP_GachaInfo_Epic = 0x410; // UCanvasPanel*
		constexpr auto CP_GachaInfo_Legendary = 0x418; // UCanvasPanel*
		constexpr auto RandomBoxTable = 0x420; // FCrowRandomBoxTableRow
		constexpr auto ShopTableData = 0x5d8; // FCrowShopTableRow
	}

	namespace n_UUPSActionCondition {
		constexpr auto bInverseCondition = 0x28; // bool
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UCrowLocalSelectSlotWidget {
		constexpr auto BT_Toggle = 0x348; // UCrowToggleButton*
		constexpr auto TB_SlotName = 0x350; // UTextBlock*
		constexpr auto TB_SlotState = 0x358; // UTextBlock*
		constexpr auto SmoothlyColor = 0x360; // FLinearColor
		constexpr auto FewColor = 0x370; // FLinearColor
		constexpr auto ServerRegionInfo = 0x390; // FCrowServerRegion
		constexpr auto bIsAuto = 0x3c0; // bool
	}

	namespace n_UCrowSettingsCategoryContentsWidget {
		constexpr auto MyCategory = 0x348; // ESettingCategoryType
		constexpr auto CrowSettingsSlotTitleWidgetClass = 0x350; // UCrowSettingsSlotTitleWidget*
		constexpr auto CrowSettingsSlotWidgetClass = 0x358; // UCrowSettingsSlotWidget*
		constexpr auto TB_CategoryName = 0x360; // UTextBlock*
		constexpr auto VB_CategoryContents = 0x368; // UVerticalBox*
		constexpr auto CrowSettingsSlotTitles = 0x370; // TArray<UCrowSettingsSlotTitleWidget*>
		constexpr auto CrowSettingSlots = 0x380; // TArray<UCrowSettingsSlotWidget*>
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UCrowCharacterPostAnimTP {
		constexpr auto FootIKSetup = 0x2b8; // FCrowCharacterFootIKSetup
		constexpr auto ProneIKSetup = 0x308; // FCrowCharacterProneIKSetup
		constexpr auto CharacterPawn = 0x360; // ACrowCharacterPawn*
		constexpr auto Movement = 0x368; // UCrowCharacterMovement*
		constexpr auto CharacterMesh = 0x370; // USkeletalMeshComponent*
		constexpr auto FootIKOffset = 0x378; // FFootIKOffsets
		constexpr auto ProneIKOffset = 0x394; // FProneIKOffsets
		constexpr auto RagdollIKOffset = 0x400; // FRagdollIKOffsets
		constexpr auto Stance = 0x460; // EStance
		constexpr auto MovementMode = 0x461; // ECrowMovementMode
		constexpr auto bEnableProneIK = 0x462; // bool
		constexpr auto bEnableFootIK = 0x463; // bool
		constexpr auto bDontUsePostAnims = 0x464; // bool
	}

	namespace n_UCrowCustomFxLODManager {
		constexpr auto TableMap = 0x28; // TMap<FString, FCrowCustomFxLODRow>
	}

	namespace n_ACrowUserEscapePointActor {
		constexpr auto Box_Heli = 0x3d8; // UBoxComponent*
		constexpr auto Box_Ladder = 0x3e0; // UBoxComponent*
		constexpr auto CollisionArray = 0x3e8; // TArray<UBoxComponent*>
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_ACrowAIZoneBase {
		constexpr auto SapwnAICharacterNum = 0x220; // int32_t
		constexpr auto ZoneState = 0x224; // ECrowAIZoneState
		constexpr auto AIZoneRewardList = 0x228; // TArray<ACrowAIZoneRewardBase*>
		constexpr auto AICharacterSpawnerList = 0x238; // TArray<ACrowAICharacterSpawner*>
		constexpr auto AICharacterCoverPointList = 0x248; // TArray<ACrowAICharacterCoverPoint*>
		constexpr auto TeamCharacterArray = 0x258; // TArray<FCrowTeamPawnPair>
		constexpr auto UpdateAIZoneTimerHandle = 0x268; // FTimerHandle
	}

	namespace n_UCrowCameraModifierFlashBang {
		constexpr auto FlashBangBlindMaterialInstance = 0x48; // UMaterialInstance*
		constexpr auto FlashBangAfterImageMaterialInstance = 0x50; // UMaterialInstance*
		constexpr auto FlashBangBlindMaterialInsDynamic = 0x58; // UMaterialInstanceDynamic*
		constexpr auto FlashBangAfterImageMaterialInsDynamic = 0x60; // UMaterialInstanceDynamic*
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x440; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x448; // char : 1
		constexpr auto ScreenSize = 0x44c; // float
		constexpr auto U = 0x450; // float
		constexpr auto UL = 0x454; // float
		constexpr auto V = 0x458; // float
		constexpr auto VL = 0x45c; // float
	}

	namespace n_UCrowReplayManager {
		constexpr auto ReplayList = 0x68; // TArray<UCrowReplayInfo*>
		constexpr auto bFindReplay = 0x78; // bool
		constexpr auto bIsRecording = 0x79; // bool
		constexpr auto bIsLoading = 0x7a; // bool
		constexpr auto CacheReplayName = 0x80; // FString
		constexpr auto CacheFriendlyName = 0x90; // FString
		constexpr auto CachePlayedReplay = 0xa0; // UCrowReplayInfo*
		constexpr auto CrowLoadingWidget = 0xa8; // UCrowLoadingWidget*
	}

	namespace n_UCrowSpectatorTargetListWidget {
		constexpr auto SCB_SquadList = 0x348; // UScrollBox*
		constexpr auto SquadSlotWidgetClass = 0x350; // UCrowSpectatorSquadSlotWidget*
		constexpr auto SquadSlotMap = 0x358; // TMap<FString, UCrowSpectatorSquadSlotWidget*>
		constexpr auto SelectedPlayerSlotWidget = 0x3a8; // UCrowSpectatorPlayerSlotWidget*
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_UCrowClanSubTabWidget {
		constexpr auto WB_RankingTotal = 0x348; // UCrowWidgetToggleButton*
		constexpr auto WB_RankingMonth = 0x350; // UCrowWidgetToggleButton*
		constexpr auto WB_EmblemSet = 0x358; // UCrowWidgetToggleButton*
		constexpr auto WB_ClanShop = 0x360; // UCrowWidgetToggleButton*
	}

	namespace n_UGroomImportOptions {
		constexpr auto ConversionSettings = 0x28; // FGroomConversionSettings
		constexpr auto InterpolationSettings = 0x40; // TArray<FHairGroupsInterpolation>
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UCrowBackPackInfoWidget {
		constexpr auto GP_BackPackSlot = 0x348; // UGridPanel*
		constexpr auto WB_CrowDragDropPanel = 0x350; // UCrowInventoryInputEventHandler*
		constexpr auto BD_BackGround_ItemSlot = 0x358; // UBorder*
		constexpr auto BackPackListItem = 0x360; // UUserWidget*
		constexpr auto RowCount = 0x368; // int32_t
		constexpr auto ColumnCount = 0x36c; // int32_t
		constexpr auto BackPackItemList = 0x370; // TArray<UCrowBackPackListItemWidget*>
		constexpr auto CrowGameInvenComponent = 0x380; // UCrowGameInvenComponent*
	}

	namespace n_UCrowSubWeaponListItemWidget {
		constexpr auto SelectWeaponSubType = 0x1ae0; // ECrowWeaponSubType
		constexpr auto IMG_Weapon_Slot3 = 0x1ae8; // UCrowWidgetImage*
		constexpr auto IMG_Weapon_Slot2 = 0x1af0; // UCrowWidgetImage*
		constexpr auto IMG_Weapon_Slot1 = 0x1af8; // UCrowWidgetImage*
		constexpr auto IMG_Slot3_Empty = 0x1b00; // UImage*
		constexpr auto IMG_Slot2_Empty = 0x1b08; // UImage*
		constexpr auto IMG_Slot1_Empty = 0x1b10; // UImage*
		constexpr auto TB_RemainAmmo_Slot3 = 0x1b18; // UTextBlock*
		constexpr auto TB_RemainAmmo_Slot2 = 0x1b20; // UTextBlock*
		constexpr auto TB_RemainAmmo_Slot1 = 0x1b28; // UTextBlock*
		constexpr auto CP_ItemList_4 = 0x1b30; // UCanvasPanel*
		constexpr auto CP_ItemList_3 = 0x1b38; // UCanvasPanel*
		constexpr auto CP_ItemList_2 = 0x1b40; // UCanvasPanel*
		constexpr auto ImageList = 0x1b48; // TArray<UCrowWidgetImage*>
		constexpr auto EmptyImageList = 0x1b58; // TArray<UImage*>
		constexpr auto AmmoCountTextList = 0x1b68; // TArray<UTextBlock*>
		constexpr auto CanvasPanelList = 0x1b78; // TArray<UCanvasPanel*>
		constexpr auto ItemList = 0x1b88; // TMap<int32_t, int32_t>
		constexpr auto ChangeEquipAnimation = 0x1bd8; // UWidgetAnimation*
		constexpr auto PrevItem = 0x1be0; // ACrowItemBase*
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_UGerstnerWaterWaveGeneratorSpectrum {
		constexpr auto SpectrumType = 0x28; // EWaveSpectrumType
		constexpr auto Octaves = 0x30; // TArray<FGerstnerWaveOctave>
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_UUPSEditorDrawer {
		constexpr auto TextToDraw = 0x28; // TArray<FDrawerItemInfo>
	}

	namespace n_UProceduralRoundedRectangleToolProperties {
		constexpr auto CornerRadius = 0x80; // float
		constexpr auto CornerSlices = 0x84; // int32_t
	}

	namespace n_UCrowRejoinMsgWidget {
		constexpr auto TB_ModeName = 0x368; // UTextBlock*
		constexpr auto TB_WorldName = 0x370; // UTextBlock*
		constexpr auto IMG_World = 0x378; // UImage*
		constexpr auto BT_MessageOk = 0x380; // UCrowButton*
		constexpr auto BT_MessageCancel = 0x388; // UCrowButton*
		constexpr auto SceneLobby = 0x390; // ACrowSceneLobby*
	}

	namespace n_UCrowInvenWeaponListSubItemWidget {
		constexpr auto TB_Name = 0x1a48; // UTextBlock*
		constexpr auto IMG_BackIcon = 0x1a50; // UCrowWidgetImage*
		constexpr auto IMG_Frame = 0x1a58; // UImage*
		constexpr auto IMG_HotKey_2 = 0x1a60; // UImage*
		constexpr auto IMG_BackGround_Melee = 0x1a68; // UImage*
		constexpr auto IMG_BackGround = 0x1a70; // UImage*
		constexpr auto WB_CrowDragDropPanel = 0x1a78; // UCrowDragDropWidgetBase*
		constexpr auto BT_Loadout_Button = 0x1a80; // UCrowButton*
		constexpr auto HB_Hotkey = 0x1a88; // UHorizontalBox*
		constexpr auto MainPanel = 0x1a90; // UCanvasPanel*
		constexpr auto HB_WeaponLv = 0x1a98; // UHorizontalBox*
		constexpr auto TB_WeaponLV = 0x1aa0; // UTextBlock*
		constexpr auto PB_WeaponLV = 0x1aa8; // UCrowProgressBar*
		constexpr auto DefaultSlotText = 0x1ab0; // FText
		constexpr auto BackIconSprite = 0x1ac8; // UPaperSprite*
		constexpr auto IsArmorSlot = 0x1ad0; // bool
		constexpr auto HiddeIcon = 0x1ad1; // bool
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UCrowVehicleSettings {
		constexpr auto CrowVehicleUpdaterSetting = 0x38; // FCrowVehicleUpdaterSetting
	}

	namespace n_ACrowTargetTraceEffect {
		constexpr auto TargetComponent = 0x228; // USceneComponent*
		constexpr auto TargetSkeletalMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto Effect = 0x238; // UParticleSystemComponent*
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UCrowStatusConquestSkillWidget {
		constexpr auto IMG_Skill_Usable = 0x348; // UImage*
		constexpr auto PlayerState = 0x350; // ACrowPlayerStateBase*
	}

	namespace n_UCrowDecalManager {
		constexpr auto DecalTypeArray = 0x28; // TArray<FCrowDecalTypeArray>
		constexpr auto FadingDecalTypeArray = 0x38; // TArray<FCrowDecalTypeArray>
		constexpr auto CustomDepthDecalArray = 0x48; // TArray<TWeakObjectPtr<UCrowCustomDepthDecal>>
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UCrowWorldMapConfig {
		constexpr auto DoNotUseCrowWorld = 0x30; // bool
		constexpr auto MapVisualConfig = 0x38; // UCrowWorldMapVisualConfig*
		constexpr auto UseLightProbe = 0x40; // bool
		constexpr auto LightProbeSetting = 0x44; // FCrowWorldLightProbeSetting
		constexpr auto UseWorldOriginRebase = 0x90; // bool
		constexpr auto RebaseOriginDistance = 0x94; // float
		constexpr auto ClusterSize = 0x98; // float
		constexpr auto ClusterSyncDistance = 0x9c; // int32_t
		constexpr auto ClusterHeightMax = 0xa0; // float
		constexpr auto SectorSize = 0xa4; // float
		constexpr auto SectorSyncDistance = 0xa8; // int32_t
		constexpr auto SectorHeightMax = 0xac; // float
		constexpr auto ClientUpdateVehicleDistance = 0xb0; // float
		constexpr auto ClientUpdateVehicleMargin = 0xb4; // float
		constexpr auto UseOcclusionGrid = 0xb8; // bool
		constexpr auto OcclusionSize = 0xbc; // float
		constexpr auto OcclusionDistance = 0xc0; // int32_t
		constexpr auto OcclusionHeightMax = 0xc4; // float
		constexpr auto SyncUpdateDelayMin = 0xc8; // float
		constexpr auto SyncUpdateDelayMax = 0xcc; // float
		constexpr auto WorldOrigin2D = 0xd0; // FVector2D
		constexpr auto AutoDetectParentMeshDistance = 0xd8; // float
		constexpr auto SoundSetting = 0xdc; // FCrowWorldSoundSetting
		constexpr auto LODSetting = 0xe0; // FCrowWorldActorLODSetting
		constexpr auto WorldDataAsset = 0x100; // UCrowWorldDataCollectionAsset*
		constexpr auto TriggerCollisionSetting = 0x108; // FCrowWorldTriggerCollisionSetting
		constexpr auto ActorItems = 0x128; // TArray<FCrowWorldDataHandlerActorItem>
		constexpr auto ComponentItems = 0x138; // TArray<FCrowWorldDataHandlerComponentItem>
	}

	namespace n_UCrowDamageEffectWidget {
		constexpr auto IMG_Shock = 0x348; // UImage*
		constexpr auto IMG_SmallBleed = 0x350; // UImage*
		constexpr auto IMG_LargeBleed = 0x358; // UImage*
		constexpr auto IMG_Hit = 0x360; // UImage*
		constexpr auto IMG_Hit_2 = 0x368; // UImage*
		constexpr auto IMG_Hit_3 = 0x370; // UImage*
		constexpr auto BackgroundBlur_20 = 0x378; // UBackgroundBlur*
		constexpr auto AniDamageHit = 0x380; // UWidgetAnimation*
		constexpr auto DamageEffect = 0x388; // UCrowDamageEffect*
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe70; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1470; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1aa0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2090; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2680; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2690; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26a0; // float
		constexpr auto FreeCamOffset = 0x26a4; // FVector
		constexpr auto ViewTargetOffset = 0x26b0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26c0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26e0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x26f0; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x26f8; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2738; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2758; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2778; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2780; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2780; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2780; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2780; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2781; // char : 1
		constexpr auto ViewPitchMin = 0x2784; // float
		constexpr auto ViewPitchMax = 0x2788; // float
		constexpr auto ViewYawMin = 0x278c; // float
		constexpr auto ViewYawMax = 0x2790; // float
		constexpr auto ViewRollMin = 0x2794; // float
		constexpr auto ViewRollMax = 0x2798; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27a0; // float
	}

	namespace n_URemeshProperties {
		constexpr auto SmoothingStrength = 0x68; // float
		constexpr auto bFlips = 0x6c; // bool
		constexpr auto bSplits = 0x6d; // bool
		constexpr auto bCollapses = 0x6e; // bool
	}

	namespace n_AUPSEnemyPointAction {
		constexpr auto DefaultEnemyPointActionComponent = 0x228; // UUPSEnemyPointActionComponent*
		constexpr auto RootSceneComponent = 0x230; // USceneComponent*
		constexpr auto EnemyActionPointComponents = 0x238; // TArray<UUPSEnemyPointActionComponent*>
		constexpr auto CharactersReachedPoint = 0x248; // TSet<ACharacter*>
		constexpr auto CharacterMovementHandlers = 0x298; // TMap<ACharacter*, AUPSPointActionMovementHandler*>
		constexpr auto ActionFinishedCallbacks = 0x2e8; // TMap<TWeakObjectPtr<ACharacter>, FDelegate>
		constexpr auto CharactersStartedPointAction = 0x338; // TSet<ACharacter*>
		constexpr auto MovementHandlerClass = 0x388; // AUPSPointActionMovementHandler*
		constexpr auto PointTag = 0x390; // FGameplayTag
		constexpr auto bFinishActionAfterCharacterAbort = 0x398; // bool
	}

	namespace n_ACrowAIObjectCharacterBase {
		constexpr auto bOverrideCrowAIObjectBillboardSprite = 0x220; // bool
		constexpr auto bOverrideCrowAIObjectCharacterMesh = 0x221; // bool
		constexpr auto bOverrideCrowAIObjectCharacterMeshMaterial = 0x222; // bool
		constexpr auto bOverrideCrowAIObjectCharacterPreviewAnim = 0x223; // bool
		constexpr auto OverrideCrowAIObjectBillboardSprite = 0x228; // UTexture2D*
		constexpr auto OverrideCrowAIObjectCharacterMesh = 0x230; // USkeletalMesh*
		constexpr auto OverrideCrowAIObjectCharacterMeshMaterial = 0x238; // UMaterialInterface*
		constexpr auto OverrideCrowAIObjectCharacterPreviewAnim = 0x240; // UAnimSequenceBase*
		constexpr auto RootSceneComponent = 0x248; // USceneComponent*
	}

	namespace n_ACrowBomberActor {
		constexpr auto TopLeftPoint = 0x220; // FVector
		constexpr auto BottomRightPoint = 0x22c; // FVector
		constexpr auto ProjectileSubClass = 0x248; // AActor*
		constexpr auto ProjectileCount = 0x250; // int32_t
		constexpr auto IconDisplayInfo = 0x258; // FCrowGameIconDisplayInfo
		constexpr auto RootComp = 0x2e0; // USceneComponent*
		constexpr auto TargetLoc = 0x2e8; // FVector
		constexpr auto IsFire = 0x2f4; // bool
		constexpr auto FirePosDir = 0x2f8; // float
		constexpr auto SpawnTargetAreaActor = 0x300; // AActor*
		constexpr auto Icon = 0x308; // UCrowWorldMapIcon*
		constexpr auto PrevBombingTargetPos = 0x310; // FVector
		constexpr auto IntervalTime = 0x31c; // float
		constexpr auto CurrentCounting = 0x320; // int32_t
		constexpr auto PrevBombingPos = 0x328; // FVector
		constexpr auto Dir = 0x334; // float
	}

	namespace n_UCrowWeaponModel {
		constexpr auto PartsArray = 0x200; // TArray<UCrowWeaponPartsBase*>
		constexpr auto PartsMainBody = 0x210; // UCrowWeaponPartsBase*
		constexpr auto WeaponCharm = 0x218; // UCrowWeaponPartsAccCharm*
		constexpr auto DefaultParent = 0x220; // USceneComponent*
		constexpr auto DynamicLight = 0x228; // UPointLightComponent*
		constexpr auto WeaponActor = 0x230; // ACrowWeaponBase*
		constexpr auto WeaponModelStickerSlots = 0x288; // TArray<FCrowWeaponStickerInfo>
		constexpr auto StickerSlotDecalList = 0x298; // TArray<UCrowDecalComponent*>
		constexpr auto FoliageAffector = 0x2a8; // ACrowFoliageAffectorActor*
		constexpr auto WeaponTable = 0x2b0; // FCrowWeaponTableRow
		constexpr auto AmmoTable = 0x14d0; // FCrowAmmoTableRow
		constexpr auto WeaponData = 0x16f8; // FCrowWeaponData
		constexpr auto WeaponAccData = 0x1860; // FCrowWeaponAccData
		constexpr auto MuzzleSmokeEffect = 0x1910; // UParticleSystemComponent*
		constexpr auto bIsFirstPerson = 0x19a0; // bool
		constexpr auto CachedSimpleMainBodyIndex = 0x19a8; // int32_t
		constexpr auto CachedPrimarySightIndex = 0x19ac; // int32_t
		constexpr auto SimplePartsMainBody = 0x19b0; // USkeletalMeshComponent*
		constexpr auto SimplePartsPrimarySight = 0x19b8; // USkeletalMeshComponent*
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UWB_SettingSlotButton_C {
		constexpr auto IMG_BackGround = 0x358; // UImage*
		constexpr auto IMG_Hover = 0x360; // UImage*
	}

	namespace n_ACrowGameModeBombMission {
		constexpr auto bIsTeamBalance = 0x4a8; // bool
		constexpr auto bIsFriendlyFire = 0x4a9; // char : 1
		constexpr auto FirstRoundWaitTimeSec = 0x4ac; // float
		constexpr auto RoundWaitTimeSec = 0x4b0; // float
		constexpr auto RoundMatchTimeSec = 0x4b4; // float
		constexpr auto RoundFinishTimeSec = 0x4b8; // float
		constexpr auto TotalRoundCount = 0x4bc; // int8_t
		constexpr auto RoundTransitionCount = 0x4bd; // int8_t
		constexpr auto LoadoutTimeSec = 0x4c0; // float
		constexpr auto CompositionCTimeSec = 0x4c4; // float
		constexpr auto FirstAttackerTeamID = 0x4c8; // ECrowTeam_RedBlue
		constexpr auto CompositionCTextIndex = 0x4d0; // FString
		constexpr auto bIsTeamUnbalance = 0x4e0; // bool
		constexpr auto CrowGameStateBombMission = 0x4e8; // ACrowGameStateBombMission*
		constexpr auto CrowGameRoundState = 0x4f0; // ECrowGameRoundState
		constexpr auto GameRoundStateTimer = 0x4f8; // FTimerHandle
		constexpr auto LoadoutTimer = 0x500; // FTimerHandle
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UMeshSpaceDeformerTool {
		constexpr auto SelectedOperationType = 0xc0; // ENonlinearOperationType
		constexpr auto UpperBoundsInterval = 0xc4; // float
		constexpr auto LowerBoundsInterval = 0xc8; // float
		constexpr auto ModifierPercent = 0xcc; // float
		constexpr auto bSnapToWorldGrid = 0xd0; // bool
		constexpr auto StateTarget = 0xd8; // UGizmoTransformChangeStateTarget*
		constexpr auto Preview = 0xe8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto GizmoCenter = 0x110; // FVector
		constexpr auto GizmoOrientation = 0x120; // FQuat
		constexpr auto IntervalGizmo = 0x130; // UIntervalGizmo*
		constexpr auto TransformGizmo = 0x138; // UTransformGizmo*
		constexpr auto TransformProxy = 0x140; // UTransformProxy*
		constexpr auto UpIntervalSource = 0x148; // UGizmoLocalFloatParameterSource*
		constexpr auto DownIntervalSource = 0x150; // UGizmoLocalFloatParameterSource*
		constexpr auto ForwardIntervalSource = 0x158; // UGizmoLocalFloatParameterSource*
	}

	namespace n_ACrowSceneLogin {
		constexpr auto LoginHUD = 0x938; // ACrowLoginHUD*
		constexpr auto SaveNickName = 0x940; // FString
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UCrowClanTabWidget {
		constexpr auto WS_ClanTabMenu = 0x350; // UWidgetSwitcher*
		constexpr auto WB_LobbyButton_Recommend = 0x358; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_Creation = 0x360; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_ClanRanking = 0x368; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_ClanInfo = 0x370; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_ClanEmblem = 0x378; // UCrowWidgetToggleButton*
		constexpr auto WB_LobbyButton_ClanRanking_2 = 0x380; // UCrowWidgetToggleButton*
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCrowInviteMessageWidget {
		constexpr auto WS_InviteStatus = 0x348; // UWidgetSwitcher*
		constexpr auto TB_InviteStatus = 0x350; // UTextBlock*
		constexpr auto TB_InviteUserName = 0x358; // UTextBlock*
		constexpr auto TB_Message = 0x360; // URichTextBlock*
		constexpr auto BT_Accept = 0x368; // UCrowButton*
		constexpr auto BT_Reject = 0x370; // UCrowButton*
		constexpr auto PartyInvitationData = 0x3a8; // FCrowPartyInvitation
		constexpr auto CustomModeInvitationData = 0x3c0; // FCrowCustomModeInvitation
		constexpr auto RequestFriendInfoData = 0x3e0; // FCrowGameFriendInfo
		constexpr auto NoticeType = 0x410; // ECrowLobbyNoticeType
	}

	namespace n_UCrowWorldSplineRoadComponent {
		constexpr auto bOldWay = 0xc0; // bool
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UCrowShoppingBagWidget {
		constexpr auto ItemSlotWidgetClass = 0x348; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto GP_ShoppingList = 0x350; // UGridPanel*
		constexpr auto WB_Customize_Outfit_SmallSlot = 0x358; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto TB_LastItemName = 0x360; // UTextBlock*
		constexpr auto TB_LastItemDesc = 0x368; // UTextBlock*
		constexpr auto TB_TotalMoney = 0x370; // UTextBlock*
		constexpr auto BT_Buy = 0x378; // UCrowButton*
		constexpr auto BT_Cancel = 0x380; // UCrowButton*
		constexpr auto IMG_GoldIcon = 0x388; // UImage*
		constexpr auto IsSendPacket = 0x390; // bool
		constexpr auto LastItemData = 0x398; // FCrowItemData
		constexpr auto ItemsInShopppingBag = 0x3c8; // TArray<FCrowShopTableRow>
		constexpr auto ItemsDataInShopppingBag = 0x3d8; // TArray<FCrowItemData>
	}

	namespace n_UCrowRadialMenuThrowWidget {
		constexpr auto RadialMenu_6Button_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenu_6Button_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenu_6Button_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenu_6Button_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenu_6Button_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
		constexpr auto RadialMenu_6Button_6 = 0x3f8; // UCrowRadialMenuButtonWidget*
		constexpr auto EquipedAmmoTextIndex = 0x400; // FString
	}

	namespace n_UCrowSettingsSlotButtonWidget {
		constexpr auto BT_ClickButton = 0x348; // UCrowButton*
		constexpr auto OwnerSlot = 0x350; // UCrowSettingsSlotWidget*
	}

	namespace n_UCrowCharacterAnimNotify_CameraShake {
		constexpr auto ShakeClass = 0x38; // UMatineeCameraShake*
		constexpr auto Scale = 0x40; // float
	}

	namespace n_UBakedCurvatureMapToolProperties {
		constexpr auto CurvatureType = 0x60; // EBakedCurvatureTypeMode
		constexpr auto ColorMode = 0x64; // EBakedCurvatureColorMode
		constexpr auto RangeMultiplier = 0x68; // float
		constexpr auto MinRangeMultiplier = 0x6c; // float
		constexpr auto Clamping = 0x70; // EBakedCurvatureClampMode
		constexpr auto bGaussianBlur = 0x74; // bool
		constexpr auto BlurRadius = 0x78; // float
	}

	namespace n_UCrowCustomizeCategorySmallWidget {
		constexpr auto VB_Custmize_Outfitlist = 0x348; // UVerticalBox*
		constexpr auto CustomOutfitItemListWidget = 0x350; // UCrowCustomOutfitItemListWidget*
		constexpr auto CustomAppearanceListWidget = 0x358; // UCrowCustomAppearanceListWidget*
		constexpr auto OutFitSlotWidgetArray = 0x360; // TArray<UCrowCategorySlotSmallWidget*>
		constexpr auto SceneLobby = 0x370; // ACrowSceneLobby*
		constexpr auto CurrentCategorySlot = 0x378; // UCrowCategorySlotSmallWidget*
		constexpr auto IsOwnItemList = 0x380; // bool
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3a8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_URevolveBoundaryToolProperties {
		constexpr auto bDisplayOriginalMesh = 0xb0; // bool
		constexpr auto AxisOrigin = 0xb4; // FVector
		constexpr auto AxisYaw = 0xc0; // float
		constexpr auto AxisPitch = 0xc4; // float
		constexpr auto bSnapToWorldGrid = 0xc8; // bool
	}

	namespace n_ACrowAICharacterPawn {
		constexpr auto AIController = 0x1b08; // ACrowAICharacterController*
		constexpr auto OccupyedCoverPoint = 0x1b10; // ACrowAICharacterCoverPoint*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_Side_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto AR_LASERSIGHTSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UCSGMeshesToolProperties {
		constexpr auto Operation = 0x60; // ECSGOperation
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bAttemptFixHoles = 0x62; // bool
		constexpr auto bOnlyUseFirstMeshMaterials = 0x63; // bool
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UCrowDialogTableManager {
		constexpr auto TableMap = 0x28; // TMap<FName, FCrowDialogTableRow>
	}

	namespace n_ACrowGameHUD_Conquest {
		constexpr auto MainWidgetClassConquest = 0x5f0; // UCrowHUDWidgetConquest*
		constexpr auto SubSpactatorWidget = 0x5f8; // UUserWidget*
		constexpr auto ResultScoreConquestWidgetClass = 0x600; // UUserWidget*
		constexpr auto RadialMenuConquestSkillClass = 0x608; // UCrowRadialMenuConquestSkill*
		constexpr auto InGameLoadoutWidgetClass = 0x610; // UCrowInGameLoadoutWidget*
		constexpr auto PlayCountdownSound = 0x618; // UAkAudioEvent*
		constexpr auto MainWidgetConquest = 0x620; // UCrowHUDWidgetConquest*
		constexpr auto RadialMenuConquestSkill = 0x628; // UCrowRadialMenuConquestSkill*
		constexpr auto InGameLoadoutWidget = 0x630; // UCrowInGameLoadoutWidget*
		constexpr auto ModeResultWidget = 0x638; // UCrowGameResultConquestWidget*
		constexpr auto ConquestLineLinkArray = 0x640; // TArray<UCrowConquestLineLink*>
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_USmoothMeshToolProperties {
		constexpr auto SmoothingType = 0x60; // ESmoothMeshToolSmoothType
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UCrowIndexTableManager {
		constexpr auto RandomSetTable = 0x28; // TMap<uint32_t, FCrowRandomSetTableRow>
		constexpr auto RandomItemTable = 0x78; // TMap<uint32_t, FCrowRandomItemTableRow>
		constexpr auto FixSetTable = 0xc8; // TMap<uint32_t, FCrowFixSetTableRow>
		constexpr auto FixItemTable = 0x118; // TMap<uint32_t, FCrowFixItemTableRow>
		constexpr auto GroupSetTable = 0x168; // TMap<uint32_t, FCrowGroupSetTableRow>
		constexpr auto GroupItemTable = 0x1b8; // TMap<uint32_t, FCrowGroupItemTableRow>
		constexpr auto RespawnFixSetTable = 0x208; // TMap<uint32_t, FCrowFixSetTableRow>
		constexpr auto RespawnFixItemTable = 0x258; // TMap<uint32_t, FCrowFixItemTableRow>
		constexpr auto MineralItemTable = 0x2a8; // TMap<uint32_t, FCrowMineralItemTableRow>
	}

	namespace n_ACrowMeteorEventActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto StartingPoint = 0x230; // UStaticMeshComponent*
		constexpr auto LandingPoint = 0x238; // UStaticMeshComponent*
		constexpr auto EffectEnterAtmosphere = 0x240; // UParticleSystem*
		constexpr auto EffectMeteor = 0x248; // UParticleSystem*
		constexpr auto EffectExplosion = 0x250; // UParticleSystem*
		constexpr auto Speed = 0x258; // float
		constexpr auto DamageSettings = 0x260; // FWeaponDamageSettings
		constexpr auto DamegeType = 0x288; // UDamageType*
		constexpr auto CameraShake = 0x290; // UMatineeCameraShake*
		constexpr auto CameraShakeMinDistance = 0x298; // float
		constexpr auto CameraShakeMaxDistance = 0x29c; // float
		constexpr auto IconDisplayInfoWait = 0x2a0; // FCrowGameIconDisplayInfo
		constexpr auto IconDisplayInfoActive = 0x328; // FCrowGameIconDisplayInfo
		constexpr auto SoundMove = 0x3b0; // UAkAudioEvent*
		constexpr auto SoundExplosion = 0x3b8; // UAkAudioEvent*
		constexpr auto SoundEnterAtmosphere = 0x3c0; // UAkAudioEvent*
		constexpr auto ObjectsCreatedAfterLanding = 0x3c8; // TArray<FWorldMeteorObjectInfo>
		constexpr auto EffectsCreatedAfterLanding = 0x3d8; // TArray<FWorldMeteorObjectInfo>
		constexpr auto ContaminationAreaAfterExplosion = 0x3e8; // TArray<ACrowContaminationAreaEventActor*>
		constexpr auto ContaminationIndex = 0x3f8; // int32_t
		constexpr auto ContaminationAreaActiveDelay = 0x3fc; // float
		constexpr auto MeteorActor = 0x400; // AActor*
		constexpr auto MeteorComponent = 0x408; // UParticleSystemComponent*
		constexpr auto EventInfo = 0x410; // FWorldMeteorEventInfo
	}

	namespace n_UCrowMainMedalTableManager {
		constexpr auto MainMedalTable = 0x28; // TMap<uint32_t, FCrowMainMedalTableRow>
		constexpr auto MainMedalGroupTable = 0x78; // TMap<uint32_t, FCrowMainMedalGroupTableRow>
	}

	namespace n_ACrowWorldEventContaminationArea {
		constexpr auto ContaminationAreaArray = 0x370; // TArray<ACrowContaminationAreaEventActor*>
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UCrowConquestMeteorStart {
		constexpr auto Billboard = 0x1f8; // UBillboardComponent*
		constexpr auto IconScale = 0x200; // float
	}

	namespace n_UCrowRadialMenuPingWidget {
		constexpr auto WB_RadialMenu_8Button_1 = 0x3d0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_2 = 0x3d8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_3 = 0x3e0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_4 = 0x3e8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_5 = 0x3f0; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_6 = 0x3f8; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_7 = 0x400; // UCrowRadialMenuButtonWidget*
		constexpr auto WB_RadialMenu_8Button_8 = 0x408; // UCrowRadialMenuButtonWidget*
		constexpr auto ItemPingTypes = 0x410; // TArray<ECrowPingType>
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UWaterMeshComponent {
		constexpr auto ForceCollapseDensityLevel = 0x468; // int32_t
		constexpr auto TileSize = 0x46c; // float
		constexpr auto ExtentInTiles = 0x470; // FIntPoint
		constexpr auto FarDistanceMaterial = 0x478; // UMaterialInterface*
		constexpr auto FarDistanceMeshExtent = 0x480; // float
		constexpr auto RTWorldLocation = 0x484; // FVector
		constexpr auto RTWorldSizeVector = 0x490; // FVector
		constexpr auto TessellationFactor = 0x580; // int32_t
		constexpr auto LODScale = 0x584; // float
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UAkAssetDataSwitchContainer {
		constexpr auto SwitchContainers = 0x90; // TArray<UAkAssetDataSwitchContainerData*>
		constexpr auto DefaultGroupValue = 0xa0; // UAkGroupValue*
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ACrowWorldObjectDestroyerForTest {
		constexpr auto FogArray = 0x220; // TArray<AActor*>
		constexpr auto IFAArray = 0x230; // TArray<AActor*>
		constexpr auto RoadArray = 0x240; // TArray<AActor*>
		constexpr auto SMArray = 0x250; // TArray<AActor*>
		constexpr auto WaterArray = 0x260; // TArray<AActor*>
		constexpr auto SkySphereArray = 0x270; // TArray<AActor*>
		constexpr auto LandscapeArray = 0x280; // TArray<AActor*>
		constexpr auto BuildingArray = 0x290; // TArray<AActor*>
		constexpr auto WorldPropArray = 0x2a0; // TArray<AActor*>
		constexpr auto EtcArray = 0x2b0; // TArray<AActor*>
		constexpr auto LastShowFog = 0x2c0; // bool
		constexpr auto LastShowIFA = 0x2c1; // bool
		constexpr auto LastShowRoad = 0x2c2; // bool
		constexpr auto LastShowWater = 0x2c3; // bool
		constexpr auto LastShowStaticMesh = 0x2c4; // bool
		constexpr auto LastShowSkySphere = 0x2c5; // bool
		constexpr auto LastShowLandscape = 0x2c6; // bool
		constexpr auto LastShowBuilding = 0x2c7; // bool
		constexpr auto LastShowWorldProp = 0x2c8; // bool
		constexpr auto LastShowEtc = 0x2c9; // bool
		constexpr auto bCollected = 0x2ca; // bool
	}

	namespace n_UUVLayoutPreviewProperties {
		constexpr auto bVisible = 0x60; // bool
		constexpr auto ScaleFactor = 0x64; // float
		constexpr auto WhichSide = 0x68; // EUVLayoutPreviewSide
		constexpr auto bShowWireframe = 0x6c; // bool
		constexpr auto Shift = 0x70; // FVector2D
	}

	namespace n_UCrowWidgetImage {
		constexpr auto LimitType = 0x210; // ECrowImageLimitType
		constexpr auto LimitValue = 0x214; // float
	}

	namespace n_UBrowning_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x318; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x348; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x390; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_VehicleWeapon_2 = 0x3d0; // FAnimNode_VehicleWeaponHandler
		constexpr auto AnimGraphNode_VehicleWeapon = 0x4d0; // FAnimNode_VehicleWeaponHandler
		constexpr auto AimYaw = 0x5d0; // float
		constexpr auto AimPitch = 0x5d4; // float
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_UCrowLandWheelsAnimInstance {
		constexpr auto LandWheelsMovement = 0x2b8; // UCrowVehicleMovementLandWheels*
		constexpr auto BoatsMovement = 0x2c0; // UCrowVehicleMovementBoats*
	}

	namespace n_UCrowInGameModeGuideWidget {
		constexpr auto WS_IngameGuide = 0x368; // UWidgetSwitcher*
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UCrowWorldEventListItemWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto TB_Desc = 0x350; // UTextBlock*
		constexpr auto TB_Timer = 0x358; // UTextBlock*
		constexpr auto TargetActor = 0x360; // ACrowWorldEventBase*
		constexpr auto AniShow = 0x368; // UWidgetAnimation*
		constexpr auto AniHide = 0x370; // UWidgetAnimation*
		constexpr auto AniChangeTitle = 0x378; // UWidgetAnimation*
		constexpr auto AniChangeDesc = 0x380; // UWidgetAnimation*
		constexpr auto ParentWidget = 0x388; // UCrowWidgetBase*
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_ACrowWeaponBase {
		constexpr auto bVisibleInVehicle = 0x320; // bool
		constexpr auto WeaponData = 0x328; // FCrowWeaponData
		constexpr auto WeaponKeyFlags = 0x490; // ECrowWeaponKeyFlags
		constexpr auto WeaponAccData = 0x498; // FCrowWeaponAccData
		constexpr auto ClientWeaponData = 0x550; // FCrowWeaponData
		constexpr auto ClientWeaponAccData = 0x6b8; // FCrowWeaponAccData
		constexpr auto LimitHoldBreath = 0x770; // FTimerHandle
		constexpr auto HoldBreathCoolTimeHandle = 0x778; // FTimerHandle
		constexpr auto WeaponModelFirst = 0x780; // UCrowWeaponModel*
		constexpr auto WeaponModelThird = 0x788; // UCrowWeaponModel*
		constexpr auto SpreadComponent = 0x790; // UCrowWeaponSpreadComponent*
		constexpr auto RecoilComponent = 0x798; // UCrowWeaponRecoilComponent*
		constexpr auto PlayerController = 0x7a0; // ACrowPlayerControllerBase*
		constexpr auto Controller = 0x7a8; // AController*
		constexpr auto WeaponOwner = 0x7b0; // APawn*
		constexpr auto AimComponent = 0x7b8; // UCrowAimComponentBase*
		constexpr auto crosshairWidget = 0x7c0; // UCrowWeaponCrosshairBase*
		constexpr auto GameInventory = 0x7c8; // UCrowGameInvenComponent*
		constexpr auto MPCWeaponFOVInstance = 0x7d0; // UMaterialParameterCollectionInstance*
		constexpr auto ProjectileClass = 0x7d8; // ACrowProjectileBase*
		constexpr auto WeaponStateArray = 0x7e0; // TArray<UCrowWeaponStateBase*>
		constexpr auto WeaponStateCurrent = 0x7f0; // UCrowWeaponStateBase*
		constexpr auto WeaponStateReload = 0x7f8; // UCrowWeaponStateReload*
		constexpr auto WeaponSubStateFire = 0x800; // UCrowWeaponSubStateBase*
		constexpr auto WeaponSubStateAim = 0x808; // UCrowWeaponSubStateAim*
		constexpr auto bIsFirstPerson = 0x810; // bool
		constexpr auto WeaponState = 0x811; // ECrowWeaponState
		constexpr auto bIsAI = 0x812; // bool
		constexpr auto SpawnType = 0x813; // ECrowItemSpawnType
		constexpr auto DefaultFOV = 0x814; // float
		constexpr auto bIsAimming = 0x818; // bool
		constexpr auto WeaponTable = 0x820; // FCrowWeaponTableRow
		constexpr auto AmmoTable = 0x1a40; // FCrowAmmoTableRow
		constexpr auto WeaponAniStateInfo = 0x1c6a; // FCrowWeaponAniStateInfo
		constexpr auto AnimWeaponFirst = 0x1c70; // FCrowCharacterAnimWeapon
		constexpr auto AnimWeaponThird = 0x1cb0; // FCrowCharacterAnimWeapon
		constexpr auto PartsOptions = 0x1cf0; // FCrowWeaponPartsOptions
		constexpr auto UseDefaultSettings = 0x1d78; // bool
		constexpr auto WeaponIndex = 0x1d7c; // uint32_t
		constexpr auto PartsBarrel = 0x1d80; // uint32_t
		constexpr auto PartsMagazine = 0x1d84; // uint32_t
		constexpr auto PartsMuzzle = 0x1d88; // uint32_t
		constexpr auto PartsPistolGrip = 0x1d8c; // uint32_t
		constexpr auto PartsPrimarySight = 0x1d90; // uint32_t
		constexpr auto PartsSecondarySight = 0x1d94; // uint32_t
		constexpr auto PartsSideBarrel = 0x1d98; // uint32_t
		constexpr auto PartsStock = 0x1d9c; // uint32_t
		constexpr auto PartsUnderBarrel = 0x1da0; // uint32_t
		constexpr auto BackupNoOptimizationWeaponMesh = 0x1da8; // USkeletalMesh*
		constexpr auto BackupNoOptimizationWeaponMaterial = 0x1db0; // UMaterialInterface*
		constexpr auto bSkipOptimizationMeshTick = 0x1db8; // bool
		constexpr auto OptimizationMeshList = 0x1dc0; // TMap<ECrowWeaponPartsType, FCrowOptimizationPartsInfo>
	}

	namespace n_UPolyEditCutProperties {
		constexpr auto Orientation = 0x60; // EPolyEditCutPlaneOrientation
		constexpr auto bSnapToVertices = 0x64; // bool
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UCrowInGameLoadoutPopupWidget {
		constexpr auto WB_Lobby_LoadoutList = 0x348; // UCrowLobbyLoadoutListWidget*
		constexpr auto WB_Lobby_Loadout = 0x350; // UCrowLobbyLoadoutWidget*
		constexpr auto WB_BT_EscBack = 0x358; // UCrowButton*
		constexpr auto SelectDragWidget = 0x360; // UCrowInventoryInputEventHandler*
		constexpr auto AniShow = 0x368; // UWidgetAnimation*
	}

	namespace n_UBakedOcclusionMapToolProperties {
		constexpr auto OcclusionRays = 0x60; // int32_t
		constexpr auto MaxDistance = 0x64; // float
		constexpr auto bGaussianBlur = 0x68; // bool
		constexpr auto BlurRadius = 0x6c; // float
		constexpr auto BiasAngle = 0x70; // float
	}

	namespace n_ACrowWeaponLockonLauncher {
		constexpr auto LockOnActor = 0x1ec0; // AActor*
		constexpr auto TargetingActor = 0x1ec8; // AActor*
		constexpr auto CurrImpedimentsActor = 0x1ed0; // ACrowImpedimentsActor*
		constexpr auto ArrayActorInLockonArea = 0x1ed8; // TArray<AActor*>
		constexpr auto LockonWidget = 0x1ee8; // UCrowScopeLockOnWidget*
		constexpr auto LockOnEndTime = 0x1ef0; // float
		constexpr auto IsVehicleMode = 0x1ef4; // bool
		constexpr auto LockOnTime = 0x1ef8; // float
		constexpr auto LockOnMinDistance = 0x1efc; // float
		constexpr auto LockOnMaxDistance = 0x1f00; // float
		constexpr auto LockOnAreaSize = 0x1f04; // FVector2D
		constexpr auto LockOnStartEvent = 0x1f10; // UAkAudioEvent*
		constexpr auto LockOnCompleteEvent = 0x1f18; // UAkAudioEvent*
	}

	namespace n_UCrowCarAnimInstance {
		constexpr auto WheelMaxAngleToSteeringMaxAngle = 0x2c8; // float
		constexpr auto EventDispatcher = 0x2d0; // UCrowVehicleEventDispatcher*
		constexpr auto Sight = 0x2d8; // UCrowVehicleSightComponent*
		constexpr auto WeaponAnimDatas = 0x2e0; // TArray<FCrowCarWeaponAnimData>
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UUVProjectionToolProperties {
		constexpr auto UVProjectionMethod = 0x60; // EUVProjectionMethod
		constexpr auto ProjectionPrimitiveScale = 0x64; // FVector
		constexpr auto CylinderProjectToTopOrBottomAngleThreshold = 0x70; // float
		constexpr auto UVScale = 0x74; // FVector2D
		constexpr auto UVOffset = 0x7c; // FVector2D
		constexpr auto bWorldSpaceUVScale = 0x84; // bool
	}

	namespace n_UCrowBuildingEditorDefaultLODTableRef {
		constexpr auto StaticMeshMap = 0x28; // TMap<FString, FCrowBuildingLODTableRowInfo>
		constexpr auto PartsActorMap = 0x78; // TMap<FString, FCrowBuildingLODTableRowInfo>
	}

	namespace n_UCrowConquestSupply {
		constexpr auto ArrSupplySpawnedInfo = 0x218; // TArray<FCrowSupplySpawnInfo>
	}

	namespace n_UBTTask_CrowOccupyCoverPoint {
		constexpr auto FindMode = 0xb8; // ECrowAIFindCoverPointMode
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UWB_CuonExtractor_Indicator_C {
		constexpr auto Ani_PingTargetLoop = 0x3c8; // UWidgetAnimation*
		constexpr auto IMG_Effect = 0x3d0; // UImage*
		constexpr auto IMG_Effect_3 = 0x3d8; // UImage*
		constexpr auto IMG_Effect_Glow = 0x3e0; // UImage*
		constexpr auto IMG_Icon = 0x3e8; // UImage*
		constexpr auto IMG_IconBg = 0x3f0; // UImage*
		constexpr auto IMG_LocateArrow = 0x3f8; // UImage*
		constexpr auto IMG_Ping = 0x400; // UImage*
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_UCrowConquestAreaVehicleSpawner {
		constexpr auto VehicleTextIndexArray = 0x218; // TArray<FString>
		constexpr auto CoolTime = 0x228; // float
		constexpr auto SpawnHeight = 0x22c; // float
		constexpr auto ActiveTime = 0x230; // float
		constexpr auto ActiveGaugePercent = 0x234; // float
		constexpr auto IsNeutralityCheck = 0x238; // bool
		constexpr auto NeutralityCheckTime = 0x23c; // int32_t
		constexpr auto NeutralityCharacterRadius = 0x240; // float
		constexpr auto NeutralitySpawnerDist = 0x244; // float
		constexpr auto NeutralityDotDamage = 0x248; // float
		constexpr auto SpecialVehicleCondition = 0x250; // FCrowSpecialVehicleCondition
		constexpr auto SpawnerID = 0x270; // char
		constexpr auto State = 0x271; // ECrowConquestAreaVehicleSpawnerState
		constexpr auto VehicleArrayIndex = 0x272; // char
		constexpr auto Red_SpecialVehicle = 0x273; // bool
		constexpr auto Blue_SpecialVehicle = 0x274; // bool
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMeshAttributePaintToolProperties {
		constexpr auto Attributes = 0x60; // TArray<FName>
		constexpr auto SelectedAttribute = 0x70; // int32_t
		constexpr auto AttributeName = 0x78; // FString
	}

	namespace n_UCrowWorldDestructionCache {
		constexpr auto DestructionActors = 0xb0; // TMap<uint32_t, FCrowWorldDestructionCacheItem>
		constexpr auto ClientOnlyDestructionActors = 0x100; // TMap<uint32_t, FCrowWorldDestructionCacheItem>
	}

	namespace n_UCrowWeaponLevelJumpPopupWidget {
		constexpr auto TB_maximumlevel = 0x348; // UTextBlock*
		constexpr auto TB_Mylevel = 0x350; // UTextBlock*
		constexpr auto TB_TotalMoney = 0x358; // UTextBlock*
		constexpr auto IMG_GoldIcon = 0x360; // UImage*
		constexpr auto SCB_US = 0x368; // UScaleBox*
		constexpr auto SL_Value = 0x370; // USlider*
		constexpr auto BT_Minus = 0x378; // UCrowButton*
		constexpr auto BT_Plus = 0x380; // UCrowButton*
		constexpr auto BT_Max = 0x388; // UCrowButton*
		constexpr auto BT_Buy = 0x390; // UCrowButton*
		constexpr auto BT_Cancel = 0x398; // UCrowButton*
		constexpr auto CurrWeaponData = 0x3a0; // FCrowWeaponData
		constexpr auto StartLevel = 0x508; // int32_t
		constexpr auto CurrentValue = 0x50c; // float
		constexpr auto MinValue = 0x510; // float
		constexpr auto MaxValue = 0x514; // float
		constexpr auto UseRCPPointValue = 0x518; // int32_t
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UCrowCustomizeCharacterDescWidget {
		constexpr auto WB_Lobby_OutfitSlotList = 0x348; // UCrowLobbyOutfitSlotListWidget*
		constexpr auto WB_CustomizeCategoryOutfit = 0x350; // UCrowCustomizeCategorySmallWidget*
		constexpr auto WB_CustomizeOutfitItemlist = 0x358; // UCrowCustomOutfitItemListWidget*
		constexpr auto WB_CustomizeCategoryAppearance = 0x360; // UCrowCategoryAppearanceWidget*
		constexpr auto WB_CustomizeAppearanceItemlist = 0x368; // UCrowCustomAppearanceListWidget*
		constexpr auto WB_Shop_Popup_ExclusivePurchase_Quick = 0x370; // UCrowShoppingBagWidget*
		constexpr auto WB_LobbySlotPurchasePopup = 0x378; // UCrowLobbySlotPurchasePopupWidget*
		constexpr auto WB_BT_Change = 0x380; // UCrowButton*
		constexpr auto WB_BT_Back = 0x388; // UCrowButton*
		constexpr auto WB_BT_Home = 0x390; // UCrowButton*
		constexpr auto WB_BT_RESET = 0x398; // UCrowButton*
		constexpr auto BT_Buy = 0x3a0; // UCrowButton*
		constexpr auto BT_AddShoppingBag = 0x3a8; // UCrowButton*
		constexpr auto WB_TabGender = 0x3b0; // UCrowTabGenderWidget*
		constexpr auto WB_TabMenuOutfit = 0x3b8; // UCrowTabOutfitWidget*
		constexpr auto WB_TabMenu_AppearanceCategory = 0x3c0; // UCrowTabOutfitWidget*
		constexpr auto VB_TattooSlotList = 0x3c8; // UVerticalBox*
		constexpr auto HB_CustomizeOutfit_Shop_Button = 0x3d0; // UHorizontalBox*
		constexpr auto HB_Tutorial_Customize = 0x3d8; // UHorizontalBox*
		constexpr auto IMG_New = 0x3e0; // UImage*
		constexpr auto BtCustomizeTattooFace = 0x3e8; // UCrowButton*
		constexpr auto ImgTattooFaceSelect = 0x3f0; // UImage*
		constexpr auto ImgSelectedTattooFace = 0x3f8; // UImage*
		constexpr auto TbTattooFace = 0x400; // UTextBlock*
		constexpr auto BtCustomizeTattooArm = 0x408; // UCrowButton*
		constexpr auto ImgTattooArmSelect = 0x410; // UImage*
		constexpr auto ImgTattooArmHover = 0x418; // UImage*
		constexpr auto ImgSelectedTattooArm = 0x420; // UImage*
		constexpr auto ImgHoveredTattooArm = 0x428; // UImage*
		constexpr auto TbTattooArm = 0x430; // UTextBlock*
		constexpr auto NormalTattooTextColor = 0x438; // FLinearColor
		constexpr auto HoverTattooTextColor = 0x448; // FLinearColor
		constexpr auto SelectTattooTextColor = 0x458; // FLinearColor
		constexpr auto CurrentTatooType = 0x468; // ECrowTattooType
		constexpr auto CurrentOutfitSlot = 0x470; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto SceneLobby = 0x478; // ACrowSceneLobby*
	}

	namespace n_UCrowFPSWidget {
		constexpr auto CP_FPS = 0x348; // UCanvasPanel*
		constexpr auto CP_Ping = 0x350; // UCanvasPanel*
		constexpr auto FPSText = 0x358; // UTextBlock*
		constexpr auto PingText = 0x360; // UTextBlock*
	}

	namespace n_UCrowInvenWeaponListItemWidget {
		constexpr auto WS_SlotType = 0x1a48; // UWidgetSwitcher*
		constexpr auto TB_MaxAmmo = 0x1a50; // UTextBlock*
		constexpr auto TB_WeaponName = 0x1a58; // UTextBlock*
		constexpr auto CP_Primary_weapon_Slot = 0x1a60; // UCanvasPanel*
	}

	namespace n_UCrowIngameRecordManager {
		constexpr auto bIsShowLog = 0x28; // bool
		constexpr auto ReplicatedRecord = 0x2c; // FCrowIngameReplicatedRecord
		constexpr auto WinLose = 0x38; // ECrowWinLose
		constexpr auto BattleRecord = 0x40; // FCrowIngameBattleRecord
		constexpr auto VehicleRecord = 0x98; // FCrowIngameVehicleRecord
		constexpr auto TimeRecord = 0xf0; // FCrowIngameTimeRecord
		constexpr auto CharacterWeaponRecords = 0x160; // TMap<uint32_t, FCrowIngameWeaponCharacterRecord>
		constexpr auto VehicleWeaponRecords = 0x1b0; // TMap<uint32_t, FCrowIngameWeaponVehicleRecord>
		constexpr auto SkillRecords = 0x200; // TMap<ECrowConquestSkill, FCrowIngameSkillRecord>
		constexpr auto MedalRecords = 0x250; // TMap<ECrowMedalType, FCrowIngameMedalRecord>
		constexpr auto UserNickName = 0x2a0; // FString
		constexpr auto OwnerPlayerState = 0x2b0; // ACrowPlayerStateBase*
		constexpr auto Logs = 0x2b8; // TArray<FString>
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_UCrowCheatManager {
		constexpr auto ActorCountingLog = 0x78; // FCrowCountingLog
		constexpr auto ComponentCountingLog = 0xc8; // FCrowCountingLog
		constexpr auto OwnerActorCountingLog = 0x118; // FCrowCountingLog
	}

	namespace n_ACrowWorldIconActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto TargetActor = 0x230; // AActor*
	}

	namespace n_UCrowWidgetBase {
		constexpr auto EventHandler = 0x268; // UCrowWidgetBase*
		constexpr auto EventHandlerWidgetType = 0x270; // UCrowWidgetBase*
		constexpr auto HandlerWidgetName = 0x278; // FString
		constexpr auto Event = 0x288; // ECrowEvent
		constexpr auto VisibleSound = 0x290; // UAkAudioEvent*
		constexpr auto InvisibleSound = 0x298; // UAkAudioEvent*
		constexpr auto AnimationsMap = 0x2a0; // TMap<FName, UWidgetAnimation*>
		constexpr auto TweenerArray = 0x300; // TArray<UCrowWidgetTweenBase*>
		constexpr auto WidgetManager = 0x310; // UCrowWidgetManager*
		constexpr auto MasterWidget = 0x318; // UCrowWidgetBase*
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UWB_LockOnIndicator_C {
		constexpr auto Ani_LockOnComplete = 0x410; // UWidgetAnimation*
		constexpr auto Ani_LockOnTargeting = 0x418; // UWidgetAnimation*
		constexpr auto IMG_NonTarget = 0x420; // UImage*
		constexpr auto IMG_NonTarget_2 = 0x428; // UImage*
		constexpr auto IMG_NonTarget_3 = 0x430; // UImage*
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventId = 0x34; // int32_t
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCrowZeroingInfo {
		constexpr auto ZeroingInfoArray = 0x38; // TArray<FZeroingInfo>
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_ABP_CrowProjectileHeliFlare_C {
		constexpr auto Sphere = 0x1940; // UStaticMeshComponent*
		constexpr auto ParticleSystem = 0x1948; // UParticleSystemComponent*
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UScaleKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UCrowCharacterAnimNoitfy_TurnInPlace {
		constexpr auto RotationCurveAsset = 0x30; // UCurveFloat*
	}

	namespace n_UCrowCustomPasswordPopupWidget {
		constexpr auto TB_SessionName_Value = 0x348; // UTextBlock*
		constexpr auto ETB_Password = 0x350; // UEditableTextBox*
		constexpr auto BT_Ok = 0x358; // UCrowButton*
		constexpr auto BT_Cancel = 0x360; // UCrowButton*
		constexpr auto SelectedRoomInfo = 0x368; // FCrowCustomDisplayRoomInfo
	}

	namespace n_UCrowPersonalResultWidget {
		constexpr auto AudioEvent_ExpCounting = 0x368; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpCountingEnd = 0x370; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpProgress = 0x378; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpProgressEnd = 0x380; // UAkAudioEvent*
		constexpr auto ExpEventPlayTime = 0x388; // float
		constexpr auto WeaponPartsEventDelayTime = 0x38c; // float
		constexpr auto WeaponPartsEventPlayTime = 0x390; // float
		constexpr auto PlayerState = 0x398; // ACrowPlayerStateBase*
		constexpr auto CrowGameStateConquest = 0x3a0; // ACrowGameStateConquest*
		constexpr auto ResultItemArray = 0x3a8; // TArray<FCrowPersonalResultItem>
		constexpr auto AniResult = 0x3b8; // UWidgetAnimation*
		constexpr auto AniResultLevelUP = 0x3c0; // UWidgetAnimation*
		constexpr auto AniResultWeaponLevelUP = 0x3c8; // UWidgetAnimation*
		constexpr auto AniResultRank = 0x3d0; // UWidgetAnimation*
		constexpr auto AniResultRankUp = 0x3d8; // UWidgetAnimation*
		constexpr auto WB_BT_Exit = 0x3e0; // UCrowButton*
		constexpr auto BT_Arrow_L = 0x3e8; // UCrowButton*
		constexpr auto BT_Arrow_R = 0x3f0; // UCrowButton*
		constexpr auto IMG_Icon_Rank = 0x3f8; // UImage*
		constexpr auto IMG_Icon_Rank_levelup = 0x400; // UImage*
		constexpr auto IMG_Icon_Rank_levelup_Effect = 0x408; // UImage*
		constexpr auto TB_LevelExp = 0x410; // UTextBlock*
		constexpr auto TB_TotalEXP_Value = 0x418; // UTextBlock*
		constexpr auto PB_ExpProgressbar = 0x420; // UCrowProgressBar*
		constexpr auto TB_CurrentLV = 0x428; // UTextBlock*
		constexpr auto TB_NextLV = 0x430; // UTextBlock*
		constexpr auto TB_RankExp_Value = 0x438; // UTextBlock*
		constexpr auto PB_ExpRankProgressbar = 0x440; // UCrowProgressBar*
		constexpr auto TB_CurrentRank = 0x448; // UTextBlock*
		constexpr auto TB_NextRank = 0x450; // UTextBlock*
		constexpr auto TB_ClassName = 0x458; // UTextBlock*
		constexpr auto TB_ClassRankName = 0x460; // UTextBlock*
		constexpr auto TB_NextClassName = 0x468; // UTextBlock*
		constexpr auto TB_NextClassRankName = 0x470; // UTextBlock*
		constexpr auto WB_Result_RewardSlot_Kill = 0x478; // UCrowResultRewardSlotWidget*
		constexpr auto WB_Result_RewardSlot_Battle = 0x480; // UCrowResultRewardSlotWidget*
		constexpr auto WB_Result_RewardSlot_Medal = 0x488; // UCrowResultRewardSlotWidget*
		constexpr auto WB_Result_RewardSlot_Mission = 0x490; // UCrowResultRewardSlotWidget*
		constexpr auto WB_Result_RewardSlot_Conquest = 0x498; // UCrowResultRewardSlotWidget*
		constexpr auto WB_Result_RewardSlot_Squad = 0x4a0; // UCrowResultRewardSlotWidget*
		constexpr auto VB_WeaponLevelUp = 0x4a8; // UVerticalBox*
		constexpr auto TB_WeaponEventTitle = 0x4b0; // UTextBlock*
		constexpr auto TB_WeaponLevel = 0x4b8; // UTextBlock*
		constexpr auto TB_WeaponName = 0x4c0; // UTextBlock*
		constexpr auto TB_WeaponType = 0x4c8; // UTextBlock*
		constexpr auto IMG_WeaponIcon = 0x4d0; // UImage*
		constexpr auto WB_Result_WeaponPartsSlot_1 = 0x4d8; // UCrowResultWeaponPartsSlotWidget*
		constexpr auto WB_Result_WeaponPartsSlot_2 = 0x4e0; // UCrowResultWeaponPartsSlotWidget*
		constexpr auto WB_Result_WeaponPartsSlot_3 = 0x4e8; // UCrowResultWeaponPartsSlotWidget*
		constexpr auto WB_Result_WeaponPartsSlot_4 = 0x4f0; // UCrowResultWeaponPartsSlotWidget*
		constexpr auto ResultWidgetState = 0x4f8; // ECrowResultWidgetState
		constexpr auto ResultEventState = 0x4fc; // ECrowResultEventState
		constexpr auto ExpCountingTime = 0x500; // float
		constexpr auto StartEventExpProgressbar = 0x504; // bool
		constexpr auto StartEventRankExpProgressbar = 0x505; // bool
		constexpr auto NormalizeTimeProgressbar = 0x508; // float
		constexpr auto PreSaveLevel = 0x50c; // uint32_t
		constexpr auto bIsLevelUp = 0x510; // bool
		constexpr auto AniEllipseTime = 0x514; // float
		constexpr auto bIsEndAllEvent = 0x518; // bool
		constexpr auto RewardSlotArray = 0x520; // TArray<UCrowResultRewardSlotWidget*>
		constexpr auto WeaponPartsSlotArray = 0x530; // TArray<UCrowResultWeaponPartsSlotWidget*>
		constexpr auto ResultWeaponEventArray = 0x540; // TArray<FCrowPersonalResultWeaponEvent>
		constexpr auto ExpEventTimerHandle = 0x550; // FTimerHandle
		constexpr auto DelayTimerHandle = 0x558; // FTimerHandle
		constexpr auto WeaponPartsEventTimerHandle = 0x560; // FTimerHandle
	}

	namespace n_UCrowSystemMessageBoxWidget {
		constexpr auto RTB_Message = 0x348; // URichTextBlock*
		constexpr auto CP_Contents = 0x350; // UCanvasPanel*
		constexpr auto TimerHandle = 0x358; // FTimerHandle
		constexpr auto HideTime = 0x360; // float
	}

	namespace n_UCrowBoatsSimFloatingVolume {
		constexpr auto VolumeIndex = 0x1f8; // int32_t
		constexpr auto BodyMesh = 0x200; // USkeletalMeshComponent*
		constexpr auto VolumeSetup = 0x208; // FCrowBoatsFloatingVolumeSetup
		constexpr auto BodyConfig = 0x240; // UCrowBoatsConfigBody*
		constexpr auto OceanTracker = 0x248; // UCrowVehicleOceanTracker*
		constexpr auto InitialTransform = 0x250; // FTransform
		constexpr auto SubstepDepthRatio = 0x280; // float
		constexpr auto SubstepBuoyancy = 0x284; // FVector
		constexpr auto SubstepLinearDamping = 0x290; // FVector
		constexpr auto SubstepAngularDamping = 0x29c; // FVector
		constexpr auto DebugBuoyanceDepth = 0x2a8; // float
	}

	namespace n_ACrowConquestMeteorGasActor {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto FadeOutTime = 0x230; // float
		constexpr auto TimerHandler = 0x238; // FTimerHandle
		constexpr auto Mid = 0x240; // UMaterialInstanceDynamic*
		constexpr auto ElapsedTime = 0x248; // float
	}

	namespace n_UCrowVehicleDustType {
		constexpr auto DustTypes = 0x30; // TMap<EPhysicalSurface, FVehicleDustInfo>
		constexpr auto DefaultDustInfo = 0x80; // FVehicleDustInfo
	}

	namespace n_UCrowWorldMapGridSlot {
		constexpr auto bIsHorizontal = 0x348; // bool
		constexpr auto GridSize = 0x34c; // float
		constexpr auto LineSizeH = 0x350; // float
		constexpr auto LineSizeV = 0x354; // float
		constexpr auto LineLength = 0x358; // float
		constexpr auto WS = 0x360; // UWidgetSwitcher*
		constexpr auto H_Spacer = 0x368; // UImage*
		constexpr auto H_Line = 0x370; // UImage*
		constexpr auto V_Spacer = 0x378; // UImage*
		constexpr auto V_Line = 0x380; // UImage*
	}

	namespace n_USelfUnionMeshesTool {
		constexpr auto Properties = 0xf0; // USelfUnionMeshesToolProperties*
		constexpr auto DrawnLineSet = 0xf8; // ULineSetComponent*
	}

	namespace n_ACrowVehicleRandomSpawner {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto VehicleArray = 0x228; // TArray<FCrowVehicleSpawnWeight>
		constexpr auto OwnerGroup = 0x238; // ACrowVehicleSpawnerGroup*
		constexpr auto GroupName = 0x240; // FString
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UCrowMissionWidget {
		constexpr auto IsSetMissionList = 0x348; // bool
		constexpr auto MissionCategoryWidget = 0x350; // UCrowMissionCategoryWidget*
		constexpr auto WB_TabMenu_Mission = 0x358; // UCrowMissionTabWidget*
		constexpr auto VB_MissionDatas = 0x360; // UVerticalBox*
		constexpr auto WB_MissionRewardInfo = 0x368; // UCrowMissionRewardInfoWidget*
		constexpr auto WB_MissionResetTime = 0x370; // UCrowMissionTimerWidget*
		constexpr auto ServerMissionInfoArray = 0x378; // TArray<FCrowMissionInfo>
		constexpr auto CategoryWidgetMap = 0x388; // TMap<char, UCrowMissionCategoryWidget*>
		constexpr auto CurrentMissionType = 0x3d8; // ECrowMissionType
	}

	namespace n_UCrowSprayManager {
		constexpr auto SprayDistance = 0x28; // float
		constexpr auto CoolTime = 0x2c; // float
		constexpr auto SpraySound = 0x30; // UAkAudioEvent*
		constexpr auto SprayMaxCount = 0x38; // int32_t
		constexpr auto SpraySlotMap = 0x40; // TMap<int32_t, int32_t>
		constexpr auto SpawndSprayArray = 0x98; // TArray<ACrowSprayActor*>
	}

	namespace n_UCrowStatusPlayerInfoSquad {
		constexpr auto CP_Zombie = 0x400; // UCanvasPanel*
		constexpr auto WB_HeadArmorBar = 0x408; // UCrowWidgetBase*
		constexpr auto WB_BodyArmorBar = 0x410; // UCrowWidgetBase*
		constexpr auto WS_HPStatus = 0x418; // UWidgetSwitcher*
		constexpr auto PB_ZombieHPBar = 0x420; // UProgressBar*
		constexpr auto PB_ZetaHPBar = 0x428; // UProgressBar*
		constexpr auto PrevPercentage = 0x430; // float
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UTMG_Basic {
		constexpr auto Properties = 0x28; // FBasicMeshProperties
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UCrowListItemWidget {
		constexpr auto BT_ItemSlot = 0x348; // UCrowButton*
		constexpr auto IMG_ItemIcon = 0x350; // UImage*
		constexpr auto IMG_Selected = 0x358; // UImage*
		constexpr auto IMG_Equiped = 0x360; // UImage*
		constexpr auto WS_Grade = 0x368; // UWidgetSwitcher*
		constexpr auto IMG_NewIcon = 0x370; // UImage*
		constexpr auto TableBase = 0x378; // FCrowItemTableBaseRow
	}

	namespace n_UCrowSpectatorSpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto ID = 0x21c; // FName
		constexpr auto ChildCamera = 0x228; // UCameraComponent*
		constexpr auto IgnoreActorArray = 0x230; // TArray<AActor*>
	}

	namespace n_ACrowVehicleSpawnerGroup {
		constexpr auto DefaultGroupMaxSpawnCount = 0x220; // uint32_t
		constexpr auto DefaultGroupSpawnDelay = 0x224; // float
		constexpr auto DefaultGroupSpawnLimit = 0x228; // uint32_t
		constexpr auto VehicleGroup = 0x230; // TMap<FString, FCrowVehicleGroup>
	}

	namespace n_UWB_Scope_RocketLauncher_C {
		constexpr auto Ani_Aim_3 = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Shot3 = 0x380; // UWidgetAnimation*
		constexpr auto Ani_Shot4 = 0x388; // UWidgetAnimation*
		constexpr auto Ani_Shot = 0x390; // UWidgetAnimation*
		constexpr auto Ani_Shot1 = 0x398; // UWidgetAnimation*
		constexpr auto Ani_Aim = 0x3a0; // UWidgetAnimation*
		constexpr auto Image_98 = 0x3a8; // UImage*
		constexpr auto IMG_CrossHair_2 = 0x3b0; // UImage*
		constexpr auto IMG_CrossHair_3 = 0x3b8; // UImage*
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UCrowLoadoutWeaponInfoWidget {
		constexpr auto WS_SlotType = 0x1a48; // UWidgetSwitcher*
		constexpr auto TB_WeaponName = 0x1a50; // UTextBlock*
		constexpr auto TB_WeaponSlotType = 0x1a58; // UTextBlock*
		constexpr auto CP_Primary_weapon_Slot = 0x1a60; // UCanvasPanel*
		constexpr auto IMG_Frame = 0x1a68; // UImage*
		constexpr auto IMG_WeaponBack = 0x1a70; // UImage*
		constexpr auto IMG_Back = 0x1a78; // UImage*
		constexpr auto IMG_HotKey_2 = 0x1a80; // UImage*
		constexpr auto IMG_Setting = 0x1a88; // UImage*
		constexpr auto BT_Loadout_Button = 0x1a90; // UCrowButton*
		constexpr auto HB_Weapon_LV = 0x1a98; // UHorizontalBox*
		constexpr auto TB_WeaponLV = 0x1aa0; // UTextBlock*
		constexpr auto PB_WeaponLV = 0x1aa8; // UCrowProgressBar*
		constexpr auto SB_WeaponImg = 0x1ab0; // UScaleBox*
		constexpr auto SB_WeaponCombine = 0x1ab8; // UScaleBox*
		constexpr auto WB_FireArm_Combine = 0x1ac0; // UCrowWeaponCombinedIconWidget*
		constexpr auto WB_CrowDragDropPanel = 0x1ac8; // UCrowDragDropWidgetBase*
		constexpr auto TextDefaultColor = 0x1ad0; // FLinearColor
		constexpr auto TextSelectColor = 0x1ae0; // FLinearColor
		constexpr auto DefaultSlotTypeName = 0x1af0; // FText
		constexpr auto HotKeySprite = 0x1b08; // UPaperSprite*
		constexpr auto IMGNew = 0x1b10; // UImage*
	}

	namespace n_UCrowChatTyping {
		constexpr auto TB_InputTyping = 0x348; // UEditableText*
		constexpr auto TB_TypingType = 0x350; // UTextBlock*
		constexpr auto WS_LanguageSwap = 0x358; // UWidgetSwitcher*
		constexpr auto ChatTypeTexts = 0x360; // TArray<FCrowChatTypeText>
		constexpr auto CurrentChatType = 0x370; // ECrowChatType
		constexpr auto EnableChatTypeArray = 0x378; // TArray<ECrowChatType>
		constexpr auto TargetWhisperData = 0x388; // FCrowChatData
	}

	namespace n_ACrowFxActivator {
		constexpr auto ParticleFX = 0x220; // UParticleSystem*
		constexpr auto StartPlay = 0x228; // bool
		constexpr auto UseLoadout = 0x229; // bool
		constexpr auto LobbyAudioEvents = 0x230; // TArray<UAkAudioEvent*>
		constexpr auto LobbyAudioStopEvents = 0x240; // TArray<UAkAudioEvent*>
		constexpr auto AudioTarget = 0x250; // AActor*
		constexpr auto SphereComponent = 0x258; // USphereComponent*
		constexpr auto FxParticlesComp = 0x260; // UParticleSystemComponent*
	}

	namespace n_UPointSetComponent {
		constexpr auto PointMaterial = 0x468; // UMaterialInterface*
		constexpr auto Bounds = 0x470; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x48c; // bool
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UAkAndroidInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_UCrowPCM_AnimBP_C {
		constexpr auto UberGraphFrame = 0xbf0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0xbf8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_31 = 0xc18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_30 = 0xd20; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0xe30; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x1010; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_29 = 0x1030; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_28 = 0x1138; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_27 = 0x1240; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0x1350; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_26 = 0x1530; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_25 = 0x1638; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Root_14 = 0x1740; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_368 = 0x1770; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_367 = 0x1798; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_185 = 0x17c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_43 = 0x1888; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_366 = 0x1970; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_365 = 0x1998; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_364 = 0x19c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_363 = 0x19e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_362 = 0x1a10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_361 = 0x1a38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_198 = 0x1a60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_184 = 0x1a88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_197 = 0x1ab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_183 = 0x1ae0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_196 = 0x1b10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_182 = 0x1b38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_40 = 0x1b68; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_UseCachedPose_195 = 0x1c18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_184 = 0x1c40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_183 = 0x1d08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_42 = 0x1dd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_181 = 0x1eb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_360 = 0x1ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_359 = 0x1f10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_320 = 0x1f38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_180 = 0x1f88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_319 = 0x1fb8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_179 = 0x2008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_39 = 0x2038; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_178 = 0x20e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_38 = 0x2118; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_358 = 0x21c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_357 = 0x21f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_356 = 0x2218; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_355 = 0x2240; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_354 = 0x2268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_353 = 0x2290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_352 = 0x22b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_351 = 0x22e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_350 = 0x2308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_349 = 0x2330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_348 = 0x2358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_347 = 0x2380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_346 = 0x23a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_345 = 0x23d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_344 = 0x23f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_343 = 0x2420; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_342 = 0x2448; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_341 = 0x2470; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_340 = 0x2498; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_339 = 0x24c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_194 = 0x24e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_177 = 0x2510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0x2540; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_41 = 0x25e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_40 = 0x26c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_176 = 0x27b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_39 = 0x27e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_38 = 0x28c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0x29b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_338 = 0x2a50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_337 = 0x2a78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_336 = 0x2aa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_335 = 0x2ac8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_334 = 0x2af0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_333 = 0x2b18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_332 = 0x2b40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_331 = 0x2b68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_330 = 0x2b90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_33 = 0x2bb8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_175 = 0x2ca8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_32 = 0x2cd8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_174 = 0x2dc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_31 = 0x2df8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_173 = 0x2ee8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_30 = 0x2f18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_172 = 0x3008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_37 = 0x3038; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_182 = 0x30e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_171 = 0x31b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_37 = 0x31e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0x32c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_36 = 0x3368; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_329 = 0x3450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_328 = 0x3478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_327 = 0x34a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_326 = 0x34c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_325 = 0x34f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_324 = 0x3518; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_323 = 0x3540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_322 = 0x3568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_321 = 0x3590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_29 = 0x35b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_170 = 0x36a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_28 = 0x36d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_169 = 0x37c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_27 = 0x37f8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_168 = 0x38e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_26 = 0x3918; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_167 = 0x3a08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_36 = 0x3a38; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_181 = 0x3ae8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_166 = 0x3bb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_35 = 0x3be0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0x3cc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_34 = 0x3d68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_320 = 0x3e50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_319 = 0x3e78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_318 = 0x3ea0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_317 = 0x3ec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_316 = 0x3ef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_315 = 0x3f18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_314 = 0x3f40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_313 = 0x3f68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_312 = 0x3f90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_25 = 0x3fb8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_165 = 0x40a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_24 = 0x40d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_164 = 0x41c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_23 = 0x41f8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_163 = 0x42e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_22 = 0x4318; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_162 = 0x4408; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_35 = 0x4438; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_180 = 0x44e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_161 = 0x45b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_33 = 0x45e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0x46c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_32 = 0x4768; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_311 = 0x4850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_310 = 0x4878; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_309 = 0x48a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_308 = 0x48c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_307 = 0x48f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_306 = 0x4918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_305 = 0x4940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_304 = 0x4968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_303 = 0x4990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_21 = 0x49b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_160 = 0x4aa8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_20 = 0x4ad8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_159 = 0x4bc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_19 = 0x4bf8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_158 = 0x4ce8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_18 = 0x4d18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_157 = 0x4e08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_34 = 0x4e38; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_179 = 0x4ee8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_156 = 0x4fb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_31 = 0x4fe0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0x50c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_30 = 0x5168; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_302 = 0x5250; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_301 = 0x5278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_300 = 0x52a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_299 = 0x52c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_298 = 0x52f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_297 = 0x5318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_296 = 0x5340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_295 = 0x5368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_294 = 0x5390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_17 = 0x53b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_155 = 0x54a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_16 = 0x54d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_154 = 0x55c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_15 = 0x55f8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_153 = 0x56e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_14 = 0x5718; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_152 = 0x5808; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_33 = 0x5838; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_178 = 0x58e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_151 = 0x59b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_29 = 0x59e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x5ac8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_28 = 0x5b68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_293 = 0x5c50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_292 = 0x5c78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_291 = 0x5ca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_290 = 0x5cc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_289 = 0x5cf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_288 = 0x5d18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_287 = 0x5d40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_286 = 0x5d68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_285 = 0x5d90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_13 = 0x5db8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_150 = 0x5ea8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_12 = 0x5ed8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_149 = 0x5fc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_11 = 0x5ff8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_148 = 0x60e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_10 = 0x6118; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_147 = 0x6208; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_32 = 0x6238; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_177 = 0x62e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_146 = 0x63b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0x63e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x64c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x65b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_284 = 0x6650; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_283 = 0x6678; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_282 = 0x66a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_281 = 0x66c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_280 = 0x66f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_279 = 0x6718; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_278 = 0x6740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_277 = 0x6768; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_276 = 0x6790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_9 = 0x67b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_145 = 0x68a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_8 = 0x68d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_144 = 0x69c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_7 = 0x69f8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_143 = 0x6ae8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_6 = 0x6b18; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_142 = 0x6c08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_31 = 0x6c38; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_176 = 0x6ce8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_141 = 0x6db0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_275 = 0x6de0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_193 = 0x6e08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x6e30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_175 = 0x6f18; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_140 = 0x6fe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_30 = 0x7010; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_64 = 0x70c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_274 = 0x7218; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_273 = 0x7240; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_272 = 0x7268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_271 = 0x7290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_270 = 0x72b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_269 = 0x72e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_268 = 0x7308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_267 = 0x7330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_5 = 0x7358; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_139 = 0x7448; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_4 = 0x7478; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_138 = 0x7568; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_3 = 0x7598; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_137 = 0x7688; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_2 = 0x76b8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_136 = 0x77a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpaceEvaluator = 0x77d8; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_StateResult_135 = 0x78c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_29 = 0x78f8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_63 = 0x79a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root_13 = 0x7b00; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_31 = 0x7b30; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_30 = 0x7c48; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_29 = 0x7d60; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_28 = 0x7e78; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_27 = 0x7f90; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_26 = 0x80a8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_TransitionResult_266 = 0x81c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_265 = 0x81e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_264 = 0x8210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_263 = 0x8238; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_262 = 0x8260; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_261 = 0x8288; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_260 = 0x82b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_259 = 0x82d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve_71 = 0x8300; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_52 = 0x8358; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_192 = 0x83a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_191 = 0x83d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_190 = 0x83f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_189 = 0x8420; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_134 = 0x8448; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_70 = 0x8478; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_51 = 0x84d0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_188 = 0x8520; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_187 = 0x8548; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_186 = 0x8570; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_185 = 0x8598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_133 = 0x85c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_69 = 0x85f0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_50 = 0x8648; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_184 = 0x8698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_183 = 0x86c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_182 = 0x86e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_181 = 0x8710; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_132 = 0x8738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_68 = 0x8768; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_49 = 0x87c0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_180 = 0x8810; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_179 = 0x8838; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_178 = 0x8860; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_177 = 0x8888; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_131 = 0x88b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_67 = 0x88e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_176 = 0x8938; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_130 = 0x8960; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_66 = 0x8990; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_175 = 0x89e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_129 = 0x8a10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_28 = 0x8a40; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_62 = 0x8af0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_61 = 0x8c48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_60 = 0x8da0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_59 = 0x8ef8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_58 = 0x9050; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_57 = 0x91a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root_12 = 0x9300; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_25 = 0x9330; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_24 = 0x9448; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_23 = 0x9560; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_22 = 0x9678; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_21 = 0x9790; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_20 = 0x98a8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_TransitionResult_258 = 0x99c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_257 = 0x99e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_256 = 0x9a10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_255 = 0x9a38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_254 = 0x9a60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_253 = 0x9a88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_252 = 0x9ab0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_251 = 0x9ad8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve_65 = 0x9b00; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_48 = 0x9b58; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_174 = 0x9ba8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_173 = 0x9bd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_172 = 0x9bf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_171 = 0x9c20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_128 = 0x9c48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_64 = 0x9c78; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_47 = 0x9cd0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_170 = 0x9d20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_169 = 0x9d48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_168 = 0x9d70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_167 = 0x9d98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_127 = 0x9dc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_63 = 0x9df0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_46 = 0x9e48; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_166 = 0x9e98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_165 = 0x9ec0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_164 = 0x9ee8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_163 = 0x9f10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_126 = 0x9f38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_62 = 0x9f68; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_45 = 0x9fc0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_162 = 0xa010; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_161 = 0xa038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_160 = 0xa060; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_159 = 0xa088; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_125 = 0xa0b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_61 = 0xa0e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_158 = 0xa138; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_124 = 0xa160; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_157 = 0xa190; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_156 = 0xa1b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_155 = 0xa1e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_154 = 0xa208; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_60 = 0xa230; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_44 = 0xa288; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_123 = 0xa2d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_27 = 0xa308; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_56 = 0xa3b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_55 = 0xa510; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_54 = 0xa668; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_53 = 0xa7c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_52 = 0xa918; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_51 = 0xaa70; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root_11 = 0xabc8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_19 = 0xabf8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_18 = 0xad10; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_17 = 0xae28; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_16 = 0xaf40; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_15 = 0xb058; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_14 = 0xb170; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_TransitionResult_250 = 0xb288; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_249 = 0xb2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_248 = 0xb2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_247 = 0xb300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_246 = 0xb328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_245 = 0xb350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_244 = 0xb378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_243 = 0xb3a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_153 = 0xb3c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_59 = 0xb3f0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_43 = 0xb448; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_152 = 0xb498; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_151 = 0xb4c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_150 = 0xb4e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_122 = 0xb510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_149 = 0xb540; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_58 = 0xb568; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_42 = 0xb5c0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_148 = 0xb610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_147 = 0xb638; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_146 = 0xb660; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_121 = 0xb688; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_145 = 0xb6b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_57 = 0xb6e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_41 = 0xb738; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_144 = 0xb788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_143 = 0xb7b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_142 = 0xb7d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_120 = 0xb800; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_141 = 0xb830; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_56 = 0xb858; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_40 = 0xb8b0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_140 = 0xb900; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_139 = 0xb928; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_138 = 0xb950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_119 = 0xb978; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_137 = 0xb9a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_136 = 0xb9d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_135 = 0xb9f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_134 = 0xba20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_55 = 0xba48; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_39 = 0xbaa0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_118 = 0xbaf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_133 = 0xbb20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_132 = 0xbb48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_131 = 0xbb70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_130 = 0xbb98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_54 = 0xbbc0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_38 = 0xbc18; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_117 = 0xbc68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_26 = 0xbc98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_50 = 0xbd48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_49 = 0xbea0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_48 = 0xbff8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_47 = 0xc150; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_46 = 0xc2a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_45 = 0xc400; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_129 = 0xc558; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_128 = 0xc580; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedInputPose_13 = 0xc5a8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SaveCachedPose_44 = 0xc6c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_127 = 0xc818; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_43 = 0xc840; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_174 = 0xc998; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByEnum_25 = 0xca60; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Root_10 = 0xcb10; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_12 = 0xcb40; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_11 = 0xcc58; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_10 = 0xcd70; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_9 = 0xce88; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_8 = 0xcfa0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_7 = 0xd0b8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_6 = 0xd1d0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_TransitionResult_242 = 0xd2e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_241 = 0xd310; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_240 = 0xd338; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_239 = 0xd360; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_238 = 0xd388; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_237 = 0xd3b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_236 = 0xd3d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_235 = 0xd400; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyCurve_53 = 0xd428; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_126 = 0xd480; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_125 = 0xd4a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_124 = 0xd4d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_123 = 0xd4f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MultiWayBlend_37 = 0xd520; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_116 = 0xd570; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_52 = 0xd5a0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_122 = 0xd5f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_121 = 0xd620; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MultiWayBlend_36 = 0xd648; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_120 = 0xd698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_119 = 0xd6c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_115 = 0xd6e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_51 = 0xd718; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_118 = 0xd770; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_117 = 0xd798; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MultiWayBlend_35 = 0xd7c0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_116 = 0xd810; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_115 = 0xd838; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_114 = 0xd860; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_50 = 0xd890; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_114 = 0xd8e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_113 = 0xd910; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_112 = 0xd938; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_111 = 0xd960; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MultiWayBlend_34 = 0xd988; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_113 = 0xd9d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_110 = 0xda08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_109 = 0xda30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_108 = 0xda58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_107 = 0xda80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_49 = 0xdaa8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_33 = 0xdb00; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_112 = 0xdb50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_106 = 0xdb80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_105 = 0xdba8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_104 = 0xdbd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_103 = 0xdbf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_48 = 0xdc20; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_MultiWayBlend_32 = 0xdc78; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_111 = 0xdcc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_25 = 0xdcf8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_42 = 0xdda8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_41 = 0xdf00; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_40 = 0xe058; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_39 = 0xe1b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_38 = 0xe308; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_37 = 0xe460; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_36 = 0xe5b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_35 = 0xe710; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_173 = 0xe868; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_102 = 0xe930; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_101 = 0xe958; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_100 = 0xe980; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_24 = 0xe9a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Root_9 = 0xea58; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_5 = 0xea88; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_4 = 0xeba0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_LinkedInputPose_3 = 0xecb8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_6 = 0xedd0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_172 = 0xeea0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_15 = 0xef68; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0xefb0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_171 = 0xf080; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_14 = 0xf148; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0xf190; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_170 = 0xf260; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LinkedInputPose_2 = 0xf328; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0xf440; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_169 = 0xf510; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_13 = 0xf5d8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoWayBlend_168 = 0xf620; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_12 = 0xf6e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoWayBlend_167 = 0xf730; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Slot_11 = 0xf7f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_10 = 0xf840; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_99 = 0xf888; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_166 = 0xf8b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_98 = 0xf978; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_22 = 0xf9a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_21 = 0xfa60; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_20 = 0xfb20; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_97 = 0xfbe0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_19 = 0xfc08; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_18 = 0xfcc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_96 = 0xfd88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0xfdb0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_95 = 0xfe70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0xfe98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0xff58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_9 = 0x10018; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_34 = 0x10060; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_41 = 0x101b8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_40 = 0x10280; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x10348; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_94 = 0x10408; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_93 = 0x10430; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_165 = 0x10458; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_164 = 0x10520; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_163 = 0x105e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_31 = 0x106b0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_92 = 0x10700; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_33 = 0x10728; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_91 = 0x10880; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_8 = 0x108a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x108f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_90 = 0x109b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_89 = 0x109d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_88 = 0x10a00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_87 = 0x10a28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_86 = 0x10a50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_85 = 0x10a78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_84 = 0x10aa0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_83 = 0x10ac8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_82 = 0x10af0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_81 = 0x10b18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MakeDynamicAdditive_5 = 0x10b40; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_4 = 0x10b78; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_UseCachedPose_80 = 0x10bb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_79 = 0x10bd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_78 = 0x10c00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_77 = 0x10c28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_32 = 0x10c50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_31 = 0x10da8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_30 = 0x10f00; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_29 = 0x11058; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_28 = 0x111b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_76 = 0x11308; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_75 = 0x11330; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_27 = 0x11358; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_26 = 0x114b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0x11608; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_74 = 0x11760; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_73 = 0x11788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_72 = 0x117b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_71 = 0x117d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x11800; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x11958; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_70 = 0x11ab0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x11ad8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_69 = 0x11c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_68 = 0x11c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_67 = 0x11c80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_66 = 0x11ca8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_65 = 0x11cd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_64 = 0x11cf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_8 = 0x11d20; // FAnimNode_Root
		constexpr auto AnimGraphNode_UseCachedPose_63 = 0x11d50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_62 = 0x11d78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_61 = 0x11da0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_60 = 0x11dc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_59 = 0x11df0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x11e18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_7 = 0x11e40; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequenceEvaluator_318 = 0x11e70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MultiWayBlend_30 = 0x11ec0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_317 = 0x11f10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_316 = 0x11f60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x11fb0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_24 = 0x11fd0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_23 = 0x120d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_22 = 0x121e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x122e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x123f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x124f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root_6 = 0x12518; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_234 = 0x12548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_233 = 0x12570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_232 = 0x12598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_231 = 0x125c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_230 = 0x125e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_229 = 0x12610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_228 = 0x12638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_227 = 0x12660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_226 = 0x12688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_225 = 0x126b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_224 = 0x126d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_223 = 0x12700; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_222 = 0x12728; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_221 = 0x12750; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_220 = 0x12778; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_219 = 0x127a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_218 = 0x127c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_217 = 0x127f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_23 = 0x12818; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x128c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_315 = 0x12968; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_314 = 0x129b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_22 = 0x12a08; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_313 = 0x12ab8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_312 = 0x12b08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_216 = 0x12b58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_215 = 0x12b80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_214 = 0x12ba8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_213 = 0x12bd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_212 = 0x12bf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_211 = 0x12c20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_210 = 0x12c48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_162 = 0x12c70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_311 = 0x12d38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_310 = 0x12d88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_161 = 0x12dd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_309 = 0x12ea0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_308 = 0x12ef0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_160 = 0x12f40; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_47 = 0x13008; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_159 = 0x13060; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_307 = 0x13128; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_306 = 0x13178; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_305 = 0x131c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_304 = 0x13218; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x13268; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_39 = 0x132e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_29 = 0x133b0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_158 = 0x13400; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_110 = 0x134c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_157 = 0x134f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x135c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_303 = 0x13660; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_302 = 0x136b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_156 = 0x13700; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_301 = 0x137c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_300 = 0x13818; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x13868; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_299 = 0x13908; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_298 = 0x13958; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_155 = 0x139a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_297 = 0x13a70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_154 = 0x13ac0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_296 = 0x13b88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_295 = 0x13bd8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_153 = 0x13c28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_294 = 0x13cf0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_293 = 0x13d40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_152 = 0x13d90; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_292 = 0x13e58; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x13ea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_38 = 0x13f28; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_28 = 0x13ff0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_151 = 0x14040; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_109 = 0x14108; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_150 = 0x14138; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x14200; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_291 = 0x142a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_290 = 0x142f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_149 = 0x14340; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_289 = 0x14408; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_288 = 0x14458; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0x144a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_287 = 0x14548; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_286 = 0x14598; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_148 = 0x145e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_285 = 0x146b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_147 = 0x14700; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_284 = 0x147c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_283 = 0x14818; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_146 = 0x14868; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_46 = 0x14930; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_145 = 0x14988; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_282 = 0x14a50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_281 = 0x14aa0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_280 = 0x14af0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_279 = 0x14b40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x14b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_37 = 0x14c10; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_144 = 0x14cd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_143 = 0x14da0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_27 = 0x14e68; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_108 = 0x14eb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_24 = 0x14ee8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_107 = 0x14f98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_21 = 0x14fc8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_20 = 0x15078; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x15128; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_278 = 0x151c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_277 = 0x15218; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_276 = 0x15268; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_275 = 0x152b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_209 = 0x15308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_208 = 0x15330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_207 = 0x15358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_206 = 0x15380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_205 = 0x153a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_204 = 0x153d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_203 = 0x153f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_142 = 0x15420; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_274 = 0x154e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_273 = 0x15538; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_141 = 0x15588; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_272 = 0x15650; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_271 = 0x156a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_140 = 0x156f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_45 = 0x157b8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_139 = 0x15810; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_270 = 0x158d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_269 = 0x15928; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_268 = 0x15978; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_267 = 0x159c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x15a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_36 = 0x15a98; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_26 = 0x15b60; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_138 = 0x15bb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_106 = 0x15c78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_137 = 0x15ca8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x15d70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_266 = 0x15e10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_265 = 0x15e60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_136 = 0x15eb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_264 = 0x15f78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_263 = 0x15fc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x16018; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_262 = 0x160b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_261 = 0x16108; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_135 = 0x16158; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_260 = 0x16220; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_134 = 0x16270; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_259 = 0x16338; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_258 = 0x16388; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_133 = 0x163d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_257 = 0x164a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_256 = 0x164f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_132 = 0x16540; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_255 = 0x16608; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x16658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_35 = 0x166d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_25 = 0x167a0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_131 = 0x167f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_105 = 0x168b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_130 = 0x168e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x169b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_254 = 0x16a50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_253 = 0x16aa0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_129 = 0x16af0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_252 = 0x16bb8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_251 = 0x16c08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x16c58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_250 = 0x16cf8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_249 = 0x16d48; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_128 = 0x16d98; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_248 = 0x16e60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_127 = 0x16eb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_247 = 0x16f78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_246 = 0x16fc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_126 = 0x17018; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_44 = 0x170e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_125 = 0x17138; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_245 = 0x17200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_244 = 0x17250; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_243 = 0x172a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_242 = 0x172f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x17340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_34 = 0x173c0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_124 = 0x17488; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_123 = 0x17550; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_24 = 0x17618; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_104 = 0x17668; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_23 = 0x17698; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_103 = 0x17748; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x17778; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x17828; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x178d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_241 = 0x17978; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_240 = 0x179c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_239 = 0x17a18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_238 = 0x17a68; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_202 = 0x17ab8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_201 = 0x17ae0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_200 = 0x17b08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_199 = 0x17b30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_198 = 0x17b58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_197 = 0x17b80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_196 = 0x17ba8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_122 = 0x17bd0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_237 = 0x17c98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_236 = 0x17ce8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_121 = 0x17d38; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_235 = 0x17e00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_234 = 0x17e50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_120 = 0x17ea0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_43 = 0x17f68; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_119 = 0x17fc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_233 = 0x18088; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_232 = 0x180d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_231 = 0x18128; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_230 = 0x18178; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x181c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_33 = 0x18248; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_23 = 0x18310; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_118 = 0x18360; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_102 = 0x18428; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_117 = 0x18458; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x18520; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_229 = 0x185c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_228 = 0x18610; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_116 = 0x18660; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_227 = 0x18728; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_226 = 0x18778; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x187c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_225 = 0x18868; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_224 = 0x188b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_115 = 0x18908; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_223 = 0x189d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_114 = 0x18a20; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_222 = 0x18ae8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_221 = 0x18b38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_113 = 0x18b88; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_220 = 0x18c50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_219 = 0x18ca0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_112 = 0x18cf0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_218 = 0x18db8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x18e08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_32 = 0x18e88; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_22 = 0x18f50; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_111 = 0x18fa0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_101 = 0x19068; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_110 = 0x19098; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x19160; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_217 = 0x19200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_216 = 0x19250; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_109 = 0x192a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_215 = 0x19368; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_214 = 0x193b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x19408; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_213 = 0x194a8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_212 = 0x194f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_108 = 0x19548; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_211 = 0x19610; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_107 = 0x19660; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_210 = 0x19728; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_209 = 0x19778; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_106 = 0x197c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_42 = 0x19890; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_105 = 0x198e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_208 = 0x199b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_207 = 0x19a00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_206 = 0x19a50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_205 = 0x19aa0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x19af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_31 = 0x19b70; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_104 = 0x19c38; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_103 = 0x19d00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_21 = 0x19dc8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_100 = 0x19e18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_22 = 0x19e48; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_99 = 0x19ef8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x19f28; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x19fd8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x1a088; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_204 = 0x1a128; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_203 = 0x1a178; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_202 = 0x1a1c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_201 = 0x1a218; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_195 = 0x1a268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_194 = 0x1a290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_193 = 0x1a2b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_192 = 0x1a2e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_191 = 0x1a308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_190 = 0x1a330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_189 = 0x1a358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_102 = 0x1a380; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_200 = 0x1a448; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_199 = 0x1a498; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_101 = 0x1a4e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_198 = 0x1a5b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_197 = 0x1a600; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_100 = 0x1a650; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_41 = 0x1a718; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_99 = 0x1a770; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_196 = 0x1a838; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_195 = 0x1a888; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_194 = 0x1a8d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_193 = 0x1a928; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x1a978; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_30 = 0x1a9f8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_20 = 0x1aac0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_98 = 0x1ab10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_98 = 0x1abd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_97 = 0x1ac08; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x1acd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_192 = 0x1ad70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_191 = 0x1adc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_96 = 0x1ae10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_190 = 0x1aed8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_189 = 0x1af28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x1af78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_188 = 0x1b018; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_187 = 0x1b068; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_95 = 0x1b0b8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_186 = 0x1b180; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_94 = 0x1b1d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_185 = 0x1b298; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_184 = 0x1b2e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_93 = 0x1b338; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_183 = 0x1b400; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_182 = 0x1b450; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_92 = 0x1b4a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_181 = 0x1b568; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x1b5b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_29 = 0x1b638; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_19 = 0x1b700; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_91 = 0x1b750; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_97 = 0x1b818; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_90 = 0x1b848; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x1b910; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_180 = 0x1b9b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_179 = 0x1ba00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_89 = 0x1ba50; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_178 = 0x1bb18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_177 = 0x1bb68; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x1bbb8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_176 = 0x1bc58; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_175 = 0x1bca8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_88 = 0x1bcf8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_174 = 0x1bdc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_87 = 0x1be10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_173 = 0x1bed8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_172 = 0x1bf28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_86 = 0x1bf78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_40 = 0x1c040; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_85 = 0x1c098; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_171 = 0x1c160; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_170 = 0x1c1b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_169 = 0x1c200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_168 = 0x1c250; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x1c2a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_28 = 0x1c320; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_84 = 0x1c3e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_83 = 0x1c4b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_18 = 0x1c578; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_96 = 0x1c5c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_21 = 0x1c5f8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_95 = 0x1c6a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_27 = 0x1c6d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x1c7a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_167 = 0x1c820; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_94 = 0x1c870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x1c8a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x1c950; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_166 = 0x1c9f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_165 = 0x1ca40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x1ca90; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_164 = 0x1cb40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_163 = 0x1cb90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_188 = 0x1cbe0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_187 = 0x1cc08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_186 = 0x1cc30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_185 = 0x1cc58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_184 = 0x1cc80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_183 = 0x1cca8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_182 = 0x1ccd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_181 = 0x1ccf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_180 = 0x1cd20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_82 = 0x1cd48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_162 = 0x1ce10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_161 = 0x1ce60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_81 = 0x1ceb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_160 = 0x1cf78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_159 = 0x1cfc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_80 = 0x1d018; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_39 = 0x1d0e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_79 = 0x1d138; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_158 = 0x1d200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_157 = 0x1d250; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_156 = 0x1d2a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_155 = 0x1d2f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x1d340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_26 = 0x1d3c0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_17 = 0x1d488; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_78 = 0x1d4d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_93 = 0x1d5a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_77 = 0x1d5d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x1d698; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_154 = 0x1d738; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_153 = 0x1d788; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_76 = 0x1d7d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_152 = 0x1d8a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_151 = 0x1d8f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x1d940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_150 = 0x1d9e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_149 = 0x1da30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_75 = 0x1da80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_148 = 0x1db48; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_74 = 0x1db98; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_147 = 0x1dc60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_146 = 0x1dcb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_73 = 0x1dd00; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_145 = 0x1ddc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_144 = 0x1de18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_72 = 0x1de68; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_143 = 0x1df30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x1df80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_25 = 0x1e000; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_16 = 0x1e0c8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_71 = 0x1e118; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_92 = 0x1e1e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_70 = 0x1e210; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x1e2d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_142 = 0x1e378; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_141 = 0x1e3c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_69 = 0x1e418; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_140 = 0x1e4e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_139 = 0x1e530; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x1e580; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_138 = 0x1e620; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_137 = 0x1e670; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_68 = 0x1e6c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_136 = 0x1e788; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_67 = 0x1e7d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_135 = 0x1e8a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_134 = 0x1e8f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_66 = 0x1e940; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_38 = 0x1ea08; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_65 = 0x1ea60; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_133 = 0x1eb28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_132 = 0x1eb78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_131 = 0x1ebc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_130 = 0x1ec18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x1ec68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_24 = 0x1ece8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_64 = 0x1edb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_63 = 0x1ee78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_15 = 0x1ef40; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_91 = 0x1ef90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_20 = 0x1efc0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_90 = 0x1f070; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x1f0a0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x1f150; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_129 = 0x1f1f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_128 = 0x1f240; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_127 = 0x1f290; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_126 = 0x1f2e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x1f330; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_TransitionResult_179 = 0x1f3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_178 = 0x1f408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_177 = 0x1f430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_176 = 0x1f458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_175 = 0x1f480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_174 = 0x1f4a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_173 = 0x1f4d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_172 = 0x1f4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_171 = 0x1f520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_62 = 0x1f548; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_125 = 0x1f610; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_124 = 0x1f660; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_61 = 0x1f6b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_123 = 0x1f778; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_122 = 0x1f7c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_60 = 0x1f818; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_37 = 0x1f8e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_59 = 0x1f938; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_121 = 0x1fa00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_120 = 0x1fa50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_119 = 0x1faa0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_118 = 0x1faf0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x1fb40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_23 = 0x1fbc0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_14 = 0x1fc88; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_58 = 0x1fcd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_89 = 0x1fda0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_57 = 0x1fdd0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x1fe98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_117 = 0x1ff38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_116 = 0x1ff88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_56 = 0x1ffd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_115 = 0x200a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_114 = 0x200f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x20140; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_113 = 0x201e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_112 = 0x20230; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_55 = 0x20280; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_111 = 0x20348; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_54 = 0x20398; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_110 = 0x20460; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_109 = 0x204b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_53 = 0x20500; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_108 = 0x205c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_107 = 0x20618; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_52 = 0x20668; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_106 = 0x20730; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x20780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_22 = 0x20800; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_13 = 0x208c8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_51 = 0x20918; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_88 = 0x209e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_50 = 0x20a10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x20ad8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_105 = 0x20b78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_104 = 0x20bc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_49 = 0x20c18; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_103 = 0x20ce0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_102 = 0x20d30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x20d80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_101 = 0x20e20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_100 = 0x20e70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_48 = 0x20ec0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_99 = 0x20f88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_47 = 0x20fd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_98 = 0x210a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_97 = 0x210f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_46 = 0x21140; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_36 = 0x21208; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_45 = 0x21260; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_96 = 0x21328; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_95 = 0x21378; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_94 = 0x213c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_93 = 0x21418; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x21468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_21 = 0x214e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_44 = 0x215b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_43 = 0x21678; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_12 = 0x21740; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_87 = 0x21790; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_19 = 0x217c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_86 = 0x21870; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x218a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_92 = 0x21940; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_91 = 0x21990; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x219e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_90 = 0x21a90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x21ae0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_89 = 0x21b90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TransitionResult_170 = 0x21be0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_169 = 0x21c08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_168 = 0x21c30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_167 = 0x21c58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_166 = 0x21c80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_165 = 0x21ca8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_164 = 0x21cd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_163 = 0x21cf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_162 = 0x21d20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_42 = 0x21d48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_88 = 0x21e10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_87 = 0x21e60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_41 = 0x21eb0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_86 = 0x21f78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_85 = 0x21fc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_40 = 0x22018; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_35 = 0x220e0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequenceEvaluator_84 = 0x22138; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_83 = 0x22188; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_82 = 0x221d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_81 = 0x22228; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_80 = 0x22278; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x222c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x22388; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_39 = 0x22408; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_20 = 0x224d0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_11 = 0x22598; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_38 = 0x225e8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_85 = 0x226b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_37 = 0x226e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x227a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_79 = 0x22848; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_78 = 0x22898; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x228e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_77 = 0x22988; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_76 = 0x229d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_36 = 0x22a28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_35 = 0x22af0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_75 = 0x22bb8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_74 = 0x22c08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_34 = 0x22c58; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_73 = 0x22d20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_72 = 0x22d70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_33 = 0x22dc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_71 = 0x22e88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_70 = 0x22ed8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_69 = 0x22f28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_68 = 0x22f78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_67 = 0x22fc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x23018; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x230d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_32 = 0x23158; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_19 = 0x23220; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_10 = 0x232e8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_31 = 0x23338; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_84 = 0x23400; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_66 = 0x23430; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_65 = 0x23480; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_30 = 0x234d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_64 = 0x23598; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ModifyCurve_34 = 0x235e8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequenceEvaluator_63 = 0x23640; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_62 = 0x23690; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_61 = 0x236e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_60 = 0x23730; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_59 = 0x23780; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x237d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_29 = 0x23870; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_28 = 0x23938; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_58 = 0x23a00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x23a50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_27 = 0x23b10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_26 = 0x23bd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_25 = 0x23ca0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x23d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_18 = 0x23de8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MultiWayBlend_9 = 0x23eb0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_57 = 0x23f00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_24 = 0x23f50; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_56 = 0x24018; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_55 = 0x24068; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x240b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_23 = 0x24158; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_54 = 0x24220; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_53 = 0x24270; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_83 = 0x242c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_18 = 0x242f0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_82 = 0x243a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_161 = 0x243d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_52 = 0x243f8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_51 = 0x24448; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_50 = 0x24498; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_49 = 0x244e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_48 = 0x24538; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_22 = 0x24588; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_21 = 0x24650; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_20 = 0x24718; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_8 = 0x247e0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_47 = 0x24830; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_81 = 0x24880; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_17 = 0x248b0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Inertialization_3 = 0x24960; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_TransitionResult_160 = 0x249d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_159 = 0x249f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x24a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x24aa0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_46 = 0x24b68; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_80 = 0x24bb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x24be8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x24cb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_45 = 0x24d30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_44 = 0x24d80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_43 = 0x24dd0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_42 = 0x24e20; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_41 = 0x24e70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_40 = 0x24ec0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_19 = 0x24f10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_18 = 0x24fd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_17 = 0x250a0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_MultiWayBlend_7 = 0x25168; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_StateResult_79 = 0x251b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_16 = 0x251e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x25298; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_Root_5 = 0x25348; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_158 = 0x25378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_157 = 0x253a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_156 = 0x253c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_155 = 0x253f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_154 = 0x25418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_153 = 0x25440; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_152 = 0x25468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_151 = 0x25490; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_150 = 0x254b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_149 = 0x254e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_148 = 0x25508; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_147 = 0x25530; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x25558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_78 = 0x255d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_33 = 0x25608; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x25660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_77 = 0x256e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_32 = 0x25710; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x25768; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_76 = 0x257e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_75 = 0x25818; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_31 = 0x25848; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x258a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_74 = 0x25920; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LinkedAnimLayer_13 = 0x25950; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x25a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyCurve_30 = 0x25a80; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x25ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x25b58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x25bd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x25c58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x25cd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_73 = 0x25d58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_29 = 0x25d88; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x25de0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_72 = 0x25e60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_15 = 0x25e90; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root_4 = 0x25f40; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x25f70; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x25f90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequenceEvaluator_39 = 0x25fb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_38 = 0x26000; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MakeDynamicAdditive_3 = 0x26050; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x26088; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x26150; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x26258; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x26278; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x26298; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x263a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x26440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_16 = 0x264c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x26588; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x26670; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_Root_3 = 0x26758; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_146 = 0x26788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_145 = 0x267b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_144 = 0x267d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_143 = 0x26800; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_142 = 0x26828; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_141 = 0x26850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_140 = 0x26878; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_139 = 0x268a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_138 = 0x268c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_137 = 0x268f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_136 = 0x26918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_135 = 0x26940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_134 = 0x26968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_133 = 0x26990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_132 = 0x269b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_131 = 0x269e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_130 = 0x26a08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_129 = 0x26a30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_128 = 0x26a58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_127 = 0x26a80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_126 = 0x26aa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_125 = 0x26ad0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_124 = 0x26af8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_123 = 0x26b20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_122 = 0x26b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_121 = 0x26b70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x26b98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_28 = 0x26bc0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_71 = 0x26c18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x26c48; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x26cf8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x26de0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x26ec8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x26f90; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_37 = 0x27058; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x270a8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x27238; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_36 = 0x272d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_35 = 0x27328; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_70 = 0x27378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Inertialization_2 = 0x273a8; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_TransitionResult_120 = 0x27418; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_119 = 0x27440; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_118 = 0x27468; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0x27490; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0x274b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0x274e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0x27508; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0x27530; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0x27558; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x27580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_69 = 0x27600; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x27630; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_68 = 0x27658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x27688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_67 = 0x27708; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x27738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_66 = 0x277b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x277e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_65 = 0x278d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Slot_7 = 0x27900; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x27948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_64 = 0x279c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0x279f8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x27ac0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x27ba8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_63 = 0x27c90; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_14 = 0x27cc0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_62 = 0x27d70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_27 = 0x27da0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_LinkedAnimLayer_12 = 0x27df8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_61 = 0x27ea8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0x27ed8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x27f00; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ModifyCurve_26 = 0x27fd0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x28028; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x28050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_60 = 0x280d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0x28100; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0x28128; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x28150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyCurve_25 = 0x281d0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_15 = 0x28228; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_24 = 0x282f0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_14 = 0x28348; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x28410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x28490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_59 = 0x28510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_23 = 0x28540; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0x28598; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x28660; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TransitionResult_108 = 0x28748; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0x28770; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0x28798; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0x287c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0x287e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x28810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_58 = 0x28890; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x288c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_57 = 0x28940; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_13 = 0x28970; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x28a38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x28ab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_56 = 0x28b38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_12 = 0x28b68; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x28c30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x28cb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_55 = 0x28d30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_54 = 0x28d60; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_13 = 0x28d90; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_53 = 0x28e40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0x28e70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_34 = 0x28f38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_33 = 0x28f88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0x28fd8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyCurve_22 = 0x290a0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0x290f8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x291c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x29240; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x292c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x293a8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_52 = 0x29470; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x294a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_21 = 0x294c8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_51 = 0x29520; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_12 = 0x29550; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_103 = 0x29600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0x29628; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0x29650; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0x29678; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0x296a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0x296c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0x296f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0x29718; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0x29740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0x29768; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0x29790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0x297b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0x297e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0x29808; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0x29830; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0x29858; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0x29880; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0x298a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0x298d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x298f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x29920; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x29948; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x29970; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x29998; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x299c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x299e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x29a10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x29a38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x29a60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x29a88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x29ab0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x29ad8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x29b00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_50 = 0x29b28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x29b58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_49 = 0x29bd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x29c08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_48 = 0x29c88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x29cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_47 = 0x29d38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x29d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_46 = 0x29de8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x29e18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_20 = 0x29e40; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_45 = 0x29e98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x29ec8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x29ef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x29f18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_44 = 0x29f98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x29fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_43 = 0x2a048; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x2a078; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_19 = 0x2a0a0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_42 = 0x2a0f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x2a128; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyCurve_18 = 0x2a150; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_41 = 0x2a1a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x2a1d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_40 = 0x2a200; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_11 = 0x2a230; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x2a2e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x2a380; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x2a448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x2a4c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x2a548; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2a630; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimLayer_11 = 0x2a6d0; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x2a780; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x2a7a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x2a7c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x2a8c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x2a9b0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x2aa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x2aaf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x2ab78; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0x2ac60; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x2ad28; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x2ae10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x2aef8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x2afe0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x2b0c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_39 = 0x2b1b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_10 = 0x2b1e0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x2b290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x2b2b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x2b2e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x2b308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x2b330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x2b358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x2b380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x2b3a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x2b3d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x2b3f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x2b420; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x2b448; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x2b470; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x2b498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x2b518; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x2b598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x2b618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_MultiWayBlend_6 = 0x2b698; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0x2b6e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_38 = 0x2b7b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x2b7e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x2b808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x2b830; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x2b8b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x2b930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x2b9b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_MultiWayBlend_5 = 0x2ba30; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0x2ba80; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_37 = 0x2bb48; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x2bb78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x2bba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x2bc20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x2bca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2bd20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_MultiWayBlend_4 = 0x2bda0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0x2bdf0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_36 = 0x2beb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x2bee8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_35 = 0x2bf10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x2bf40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_34 = 0x2bf68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x2bf98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2bfc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2c040; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x2c0c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2c140; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_MultiWayBlend_3 = 0x2c1c0; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0x2c210; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_33 = 0x2c2d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0x2c308; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2c3b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_10 = 0x2c438; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x2c4e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x2c508; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x2c528; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x2c630; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequenceEvaluator_32 = 0x2c718; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x2c768; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2c830; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2c918; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2ca00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2cae8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2cbd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2ccb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x2cda0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_32 = 0x2ce68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0x2ce98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_6 = 0x2cf48; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x2cf90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0x2d0e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Inertialization = 0x2d240; // FAnimNode_Inertialization
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0x2d2b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x2d408; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x2d560; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x2d6b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x2d810; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x2d838; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x2d860; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x2d888; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x2d8b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x2d8d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x2d900; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x2d928; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x2d950; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x2d978; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x2d9a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x2d9c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x2d9f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x2da18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LinkedAnimLayer_9 = 0x2da40; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_31 = 0x2daf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_CLSDistanceMatch_4 = 0x2db20; // FAnimNode_CLSDistanceMatch
		constexpr auto AnimGraphNode_StateResult_30 = 0x2dbb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_CLSDistanceMatch_3 = 0x2dbe0; // FAnimNode_CLSDistanceMatch
		constexpr auto AnimGraphNode_StateResult_29 = 0x2dc70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x2dca0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_31 = 0x2dcc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_30 = 0x2dd18; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x2dd68; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyCurve_17 = 0x2de28; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_28 = 0x2de80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x2deb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_27 = 0x2ded8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_29 = 0x2df08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_28 = 0x2df58; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x2dfa8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ModifyCurve_16 = 0x2e058; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_Slot_5 = 0x2e0b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyCurve_15 = 0x2e0f8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequenceEvaluator_27 = 0x2e150; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_26 = 0x2e1a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0x2e1d0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x2e280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x2e2a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x2e2d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x2e2f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x2e320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x2e348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x2e370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x2e398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x2e3c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x2e3e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_25 = 0x2e410; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_14 = 0x2e440; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_CLSDistanceMatch_2 = 0x2e498; // FAnimNode_CLSDistanceMatch
		constexpr auto AnimGraphNode_StateResult_24 = 0x2e528; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_13 = 0x2e558; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_CLSDistanceMatch = 0x2e5b0; // FAnimNode_CLSDistanceMatch
		constexpr auto AnimGraphNode_StateResult_23 = 0x2e640; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x2e670; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x2e698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x2e6c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x2e6e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x2e710; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x2e7c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x2e870; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_26 = 0x2e898; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_25 = 0x2e8e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_24 = 0x2e938; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_23 = 0x2e988; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MultiWayBlend_2 = 0x2e9d8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_22 = 0x2ea28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_21 = 0x2ea78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x2eac8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyCurve_12 = 0x2eb88; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_22 = 0x2ebe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x2ec10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x2ecc0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x2ed70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_20 = 0x2ed98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_19 = 0x2ede8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_18 = 0x2ee38; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_17 = 0x2ee88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MultiWayBlend = 0x2eed8; // FAnimNode_MultiWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_16 = 0x2ef28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_15 = 0x2ef78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x2efc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyCurve_11 = 0x2f088; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_21 = 0x2f0e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_10 = 0x2f110; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x2f168; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_20 = 0x2f190; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_9 = 0x2f1c0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x2f218; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_19 = 0x2f240; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x2f270; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x2f298; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x2f2c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_18 = 0x2f2e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x2f318; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_17 = 0x2f3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x2f3f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_16 = 0x2f420; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_14 = 0x2f450; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_13 = 0x2f4a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x2f4f0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequenceEvaluator_12 = 0x2f5a0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ModifyCurve_8 = 0x2f5f0; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_Slot_4 = 0x2f648; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyCurve_7 = 0x2f690; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_15 = 0x2f6e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x2f718; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x2f7c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x2f920; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x2fa78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2faa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2fac8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2faf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x2fb18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2fb40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_11 = 0x2fb68; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_14 = 0x2fbb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x2fbe8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_10 = 0x2fc10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x2fc60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x2fcb0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyCurve_6 = 0x2fd70; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_StateResult_13 = 0x2fdc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_5 = 0x2fdf8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x2fe50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_12 = 0x2fe78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyCurve_4 = 0x2fea8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ModifyCurve_3 = 0x2ff00; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ModifyCurve_2 = 0x2ff58; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x2ffb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_11 = 0x30000; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x30030; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x300e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x30130; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x301f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x30278; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x302f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x30378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x303f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x30478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_8 = 0x304f8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x305a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x305d8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_3 = 0x30688; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Root_2 = 0x306d0; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x30700; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x30720; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x30900; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x30ae0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x30c38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x30c60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_PoseSnapshot = 0x30c88; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_StateResult_9 = 0x30d18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x30d48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x30dc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x30df8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LinkedAnimLayer_7 = 0x30ea8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_6 = 0x30f58; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_5 = 0x31008; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_4 = 0x310b8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x31168; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x31238; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_3 = 0x31260; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x31310; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_CopyBone = 0x31468; // FAnimNode_CopyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x31558; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x31578; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x31598; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x315c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LinkedInputPose = 0x315e0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_Root = 0x316f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x31728; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_2 = 0x31880; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_Slot_2 = 0x31930; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x31978; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x319a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x319c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x31b20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x31b48; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x31b90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MakeDynamicAdditive_2 = 0x31bb8; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x31bf0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x31d48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x31d70; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x31e38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x31e60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x31e88; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x31f48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x31f70; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x32030; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x320f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x32120; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x32148; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x32208; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x322c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x322f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x32318; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x32470; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x32498; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x325f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendBoneByChannel_2 = 0x32618; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x32680; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x32788; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x327a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x327c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x32920; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x32948; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_MakeDynamicAdditive = 0x32970; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x329a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x32b00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x32b28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x32b50; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x32c18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendBoneByChannel = 0x32c40; // FAnimNode_BlendBoneByChannel
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x32ca8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum = 0x32cf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x32da8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer = 0x32dd0; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x32e80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x32f48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x33050; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Fabrik_5 = 0x33160; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_4 = 0x332f0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_3 = 0x33480; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik_2 = 0x33610; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0x337a0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x33930; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x33a38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x33b40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x33b60; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x33b80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x33c88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x33d90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x33ee8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x33f38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x33f60; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x34028; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x34180; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x341a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x341d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x342d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x343e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x344e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x345f0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x34610; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x34630; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x34788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x347b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x347d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x348a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x349a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x34ab0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x34bb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x34cc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose = 0x34d10; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x34e68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x34e90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x34eb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x34f38; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x35000; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool = 0x350c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x35160; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x35188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x351b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x351d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x35200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x35228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x35250; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x35278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x352a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x352c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x352f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x35318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x35340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x35368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x35390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x353b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x353e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x35408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x35430; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_7 = 0x35458; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x35488; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_6 = 0x354b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose = 0x354e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_5 = 0x35508; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x35538; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_4 = 0x35588; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x355b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_3 = 0x35608; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x35638; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_2 = 0x35688; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x356b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x35738; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x35768; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyCurve = 0x35818; // FAnimNode_ModifyCurve
		constexpr auto MeshReference = 0x35870; // USkeletalMeshComponent*
	}

	namespace n_ACrowSelectItemSpawner {
		constexpr auto ItemType = 0x228; // ECrowItemType
		constexpr auto ItemIndex = 0x22c; // int32_t
		constexpr auto ItemCount = 0x230; // int32_t
		constexpr auto SpawnerType = 0x234; // ECrowSpawnerType
		constexpr auto SpawnDelay = 0x238; // float
		constexpr auto CreateItem = 0x240; // ACrowItemBase*
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UPolyEditExtrudeProperties {
		constexpr auto Direction = 0x60; // EPolyEditExtrudeDirection
		constexpr auto bShellsToSolids = 0x64; // bool
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x258; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x260; // UAkLateReverbComponent*
		constexpr auto Room = 0x268; // UAkRoomComponent*
	}

	namespace n_UCrowAimComponentBase {
		constexpr auto AimMainCamera = 0xc0; // UCameraComponent*
		constexpr auto CrowWeaponBase = 0xc8; // ACrowWeaponBase*
		constexpr auto PlayerController = 0xd0; // ACrowPlayerControllerBase*
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UCustomMeshGenerator {
		constexpr auto MeshComp = 0x28; // UStaticMeshComponent*
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_ACrowCloudScapeReplicationActor {
		constexpr auto VolumetricCloudSetting = 0x220; // FCrowVoluemetricCloudSetting
		constexpr auto VolumetricCloudActorTemplate = 0x228; // ACrowVolumetricCloudActor*
		constexpr auto CloudUIHandler = 0x230; // UCrowCloudUIHandler*
		constexpr auto CollisionEventHandler = 0x238; // UCrowCloudCollisionEventHandler*
		constexpr auto CloudDamageHandler = 0x240; // UCrowCloudDamageHandler*
		constexpr auto CloudUpdaterComp = 0x248; // UCrowCloudUpdaterComponent*
		constexpr auto bActivate = 0x250; // bool
		constexpr auto RemainReplicationTime = 0x254; // float
		constexpr auto VolumetricCloudActor = 0x258; // ACrowVolumetricCloudActor*
		constexpr auto ReplicationDatas = 0x260; // TArray<FCrowCloudScapeReplication>
	}

	namespace n_UCrowRandomBoxWidget {
		constexpr auto CP_Open_Before = 0x348; // UCanvasPanel*
		constexpr auto CP_Card = 0x350; // UCanvasPanel*
		constexpr auto CP_Result = 0x358; // UCanvasPanel*
		constexpr auto TB_Message = 0x360; // UTextBlock*
		constexpr auto WB_Customize_Outfit_SmallSlot = 0x368; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto RTB_ItemGrade = 0x370; // URichTextBlock*
		constexpr auto TB_ItemCategory = 0x378; // UTextBlock*
		constexpr auto TB_ItemName = 0x380; // URichTextBlock*
		constexpr auto RTB_Grade = 0x388; // URichTextBlock*
		constexpr auto Text_GuageCount = 0x390; // UTextBlock*
		constexpr auto Text_TotalCount = 0x398; // UTextBlock*
		constexpr auto TB_RCPtext = 0x3a0; // UTextBlock*
		constexpr auto TB_GPoint = 0x3a8; // UTextBlock*
		constexpr auto TB_Bar = 0x3b0; // UTextBlock*
		constexpr auto BT_Confirm = 0x3b8; // UCrowButton*
		constexpr auto BT_RCPBuy = 0x3c0; // UCrowButton*
		constexpr auto BT_GCoinBuy = 0x3c8; // UCrowButton*
		constexpr auto BT_NoncashBuy = 0x3d0; // UCrowButton*
		constexpr auto HB_BTBuy = 0x3d8; // UHorizontalBox*
		constexpr auto ProgressBar_Ing = 0x3e0; // UProgressBar*
		constexpr auto ProgressBar_Complete = 0x3e8; // UProgressBar*
		constexpr auto CurrentBoxTable = 0x400; // FCrowRandomBoxTableRow
	}

	namespace n_UCrowChatTableManager {
		constexpr auto SlangArray = 0x28; // TArray<FString>
		constexpr auto ModeChatTypeList = 0x38; // TMap<ECrowGameMode, FCrowModeEnableChatTableRow>
	}

	namespace n_UMagicLeapARPinContentBindings {
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UCrowTabMenuSocialWidget {
		constexpr auto SocialWidget = 0x380; // UCrowSocialWidget*
	}

	namespace n_ABP_CrowWeaponPartsLaserSight_Side_ADE_C {
		constexpr auto CrowLaserBeam = 0x260; // UCrowLaserBeamComponent*
		constexpr auto FX_Wp_LaserLight_M001 = 0x268; // UParticleSystemComponent*
		constexpr auto ADE_LasersightSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UWaterSplineMetadata {
		constexpr auto Depth = 0x28; // FInterpCurveFloat
		constexpr auto WaterVelocityScalar = 0x40; // FInterpCurveFloat
		constexpr auto RiverWidth = 0x58; // FInterpCurveFloat
		constexpr auto AudioIntensity = 0x70; // FInterpCurveFloat
		constexpr auto WaterVelocity = 0x88; // FInterpCurveVector
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UCrowSquadMatchRespawnMsgWidget {
		constexpr auto TB_Timer_2 = 0x368; // UTextBlock*
		constexpr auto TB_Timer_Effect_2 = 0x370; // UTextBlock*
		constexpr auto Ani_Show = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Countdown = 0x380; // UWidgetAnimation*
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_ABP_FoliageAffector_RocketLauncher_C {
		constexpr auto CrowFoliageAffector_Trail = 0x238; // UCrowFoliageAffectorComponent*
		constexpr auto CrowFoliageAffector_AroundCharacter = 0x240; // UCrowFoliageAffectorComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_ACrowWorldLightProbeVolumeActor {
		constexpr auto RootVolume = 0x220; // UCrowWorldLightProbeVolume*
		constexpr auto ShowDebug = 0x228; // bool
		constexpr auto LightProbeSetting = 0x22c; // FCrowWorldLightProbeSetting
		constexpr auto LightProbeVolumeSetting = 0x278; // FCrowWorldLightProbeVolumeSetting
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UWB_AreaWarning_C {
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto Ani_Loop = 0x368; // UWidgetAnimation*
		constexpr auto Ani_Show = 0x370; // UWidgetAnimation*
		constexpr auto Image_64 = 0x378; // UImage*
		constexpr auto Image_119 = 0x380; // UImage*
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Tusk_First_C {
		constexpr auto b_Crosshair = 0x438; // UBorder*
		constexpr auto ImageCenter = 0x440; // UImage*
		constexpr auto ImageCenterBorder = 0x448; // UImage*
		constexpr auto ImageDown = 0x450; // UImage*
		constexpr auto ImageDownBorder = 0x458; // UImage*
		constexpr auto ImageLeft = 0x460; // UImage*
		constexpr auto ImageLeftBorder = 0x468; // UImage*
		constexpr auto ImageRight = 0x470; // UImage*
		constexpr auto ImageRightBorder = 0x478; // UImage*
		constexpr auto ImageUp = 0x480; // UImage*
		constexpr auto ImageUpBorder = 0x488; // UImage*
		constexpr auto IMG_Box_CrossHair = 0x490; // UImage*
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UCrowCountdownWidget {
		constexpr auto CP_Blocker = 0x348; // UCanvasPanel*
		constexpr auto CP_Countdown_Normal = 0x350; // UCanvasPanel*
		constexpr auto TB_Countdown_Normal = 0x358; // UTextBlock*
		constexpr auto TB_Countdown_Normal_Effect = 0x360; // UTextBlock*
		constexpr auto AniCountNormal = 0x368; // UWidgetAnimation*
		constexpr auto CP_Countdown_Focus = 0x370; // UCanvasPanel*
		constexpr auto TB_Countdown_Focus = 0x378; // UTextBlock*
		constexpr auto TB_Countdown_Focus_Effect = 0x380; // UTextBlock*
		constexpr auto AniCountFocus = 0x388; // UWidgetAnimation*
		constexpr auto RemainTimeSync = 0x398; // UCrowRemainTimeSync*
		constexpr auto TotalCountSound = 0x3a8; // UAkAudioEvent*
		constexpr auto FocusCountSound = 0x3b8; // UAkAudioEvent*
	}

	namespace n_USpaceCurveDeformationMechanicPropertySet {
		constexpr auto TransformMode = 0x60; // ESpaceCurveControlPointTransformMode
		constexpr auto TransformOrigin = 0x64; // ESpaceCurveControlPointOriginMode
		constexpr auto Softness = 0x68; // float
		constexpr auto SoftFalloff = 0x6c; // ESpaceCurveControlPointFalloffType
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UCrowWeaponAnimInstance {
		constexpr auto Sight = 0x2b8; // UCrowVehicleSightComponent*
		constexpr auto WeaponAnimDatas = 0x2c0; // TArray<FCrowWeaponAnimData>
		constexpr auto WeaponActor = 0x2d0; // ACrowWeaponBase*
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UPositionPlaneGizmo {
		constexpr auto CenterBallShape = 0x88; // UPreviewMesh*
		constexpr auto CenterBallMaterial = 0x90; // UMaterialInstance*
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_ACrowWeaponCompositionC {
		constexpr auto TimeToExplosion = 0x1ed0; // float
		constexpr auto CurrentTimeToExplosion = 0x1ed4; // float
	}

	namespace n_UTransformMeshesToolProperties {
		constexpr auto TransformMode = 0x60; // ETransformMeshesTransformMode
		constexpr auto bSetPivot = 0x61; // bool
		constexpr auto bEnableSnapDragging = 0x62; // bool
		constexpr auto SnapDragSource = 0x63; // ETransformMeshesSnapDragSource
		constexpr auto RotationMode = 0x64; // ETransformMeshesSnapDragRotationMode
	}

	namespace n_UCrowCustomUserSlotWidget {
		constexpr auto BT_Toggle = 0x348; // UCrowToggleButton*
		constexpr auto BT_Change = 0x350; // UCrowButton*
		constexpr auto BT_Profile = 0x358; // UCrowButton*
		constexpr auto BT_Kick = 0x360; // UCrowButton*
		constexpr auto IMG_SessionLeader = 0x368; // UCrowWidgetImage*
		constexpr auto TB_Username = 0x370; // UTextBlock*
		constexpr auto WS_Status = 0x378; // UWidgetSwitcher*
		constexpr auto TeamType = 0x3d0; // ECrowCustomTeamType
		constexpr auto SquadIndex = 0x3d1; // char
		constexpr auto SlotIndex = 0x3d2; // char
		constexpr auto CustomUserInfo = 0x3d8; // FCrowCustomUserInfo
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UWB_Crosshair_Mh6_HMG_First_C {
		constexpr auto IMG_Crosshair_Gauge_3 = 0x428; // UImage*
		constexpr auto IMG_Crosshair_Gauge_4 = 0x430; // UImage*
		constexpr auto IMG_Crosshair_Point_2 = 0x438; // UImage*
		constexpr auto IMG_Down_3 = 0x440; // UCrowWidgetImage*
		constexpr auto IMG_Down_4 = 0x448; // UCrowWidgetImage*
		constexpr auto IMG_Left_3 = 0x450; // UCrowWidgetImage*
		constexpr auto IMG_Left_4 = 0x458; // UCrowWidgetImage*
		constexpr auto IMG_Point = 0x460; // UImage*
		constexpr auto IMG_Right_3 = 0x468; // UCrowWidgetImage*
		constexpr auto IMG_Right_4 = 0x470; // UCrowWidgetImage*
		constexpr auto IMG_Up_3 = 0x478; // UCrowWidgetImage*
		constexpr auto IMG_Up_4 = 0x480; // UCrowWidgetImage*
		constexpr auto WB_Vehicle_Damage = 0x488; // UWB_Vehicle_Warning_Heli_C*
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UPcMNew_FPBody_Test_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2f8; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x4d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x5d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x6e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x700; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto TargetMesh = 0x720; // USkeletalMeshComponent*
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_UCrowVehicleBoatEffect {
		constexpr auto BoatEffectSettingClass = 0xc0; // UCrowVehicleBoatEffectSetting*
		constexpr auto BoatEffectSetting = 0xc8; // UCrowVehicleBoatEffectSetting*
		constexpr auto VehiclePawn = 0xd0; // ACrowVehiclePawn*
		constexpr auto VehicleParam = 0xd8; // UCrowVehicleParam*
		constexpr auto VehicleFacade = 0xe0; // UCrowVehicleFacadeBoat*
		constexpr auto ParticleComponentDriving = 0xe8; // UParticleSystemComponent*
		constexpr auto ParticleComponentIdle = 0xf0; // UParticleSystemComponent*
		constexpr auto ParticleComponentTransform = 0x100; // FTransform
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UCrowWorldDamageCheckerByAmmoType {
		constexpr auto IgnoreAllPointDamage = 0x28; // char : 1
		constexpr auto IgnoreAllRadialDamage = 0x28; // char : 1
		constexpr auto IgnoreAllVehicleImpactDamage = 0x28; // char : 1
		constexpr auto UseDamageMultiplyPhysicalMaterial = 0x28; // char : 1
		constexpr auto AmmoTypeSetting = 0x30; // TMap<FString, FCrowWorldAmmoTypeDamageSetting>
		constexpr auto VehicleImpactDamageByType = 0x80; // TMap<EVehicleIdentity, FCrowWorldAmmoTypeDamageSetting>
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_UCLSCharacterMovement {
		constexpr auto bUseSlopeSpeedAtteunation = 0xb00; // bool
		constexpr auto bUseSprintInhibitionSlope = 0xb01; // bool
		constexpr auto SpeedAtteunationOnSlopeInfo = 0xb04; // FCLSSpeedAtteunationOnSlope
		constexpr auto StandedHalfHeight = 0xb14; // float
		constexpr auto PronedHalfHeight = 0xb18; // float
		constexpr auto bWantsToProne = 0xb1c; // char : 1
		constexpr auto bWantsToSprint = 0xb1c; // char : 1
		constexpr auto bWantsToWalk = 0xb1c; // char : 1
		constexpr auto bWantsToLookFocus = 0xb1c; // char : 1
		constexpr auto SwimImmersionDepth = 0xb20; // float
		constexpr auto WaterPlaneLocation = 0xb24; // FVector
		constexpr auto WaterWaveLocation = 0xb30; // FVector
		constexpr auto WaterSurfaceNormal = 0xb3c; // FVector
		constexpr auto WaterVolumePtr = 0xb48; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto WaterBodyPtr = 0xb50; // TWeakObjectPtr<AWaterBody>
		constexpr auto WaterPlanePtr = 0xb58; // TWeakObjectPtr<AActor>
		constexpr auto WaterBodyImmersionDepth = 0xb60; // float
		constexpr auto CachedCharacter = 0xb68; // ACLSCharacter*
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x58; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x60; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto LinkedAkEvents = 0xb0; // TSet<TSoftObjectPtr<UAkAudioEvent>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0x100; // UAkAssetPlatformData*
	}

	namespace n_UCrowConquestGaugeNumber {
		constexpr auto TB_Tick = 0x348; // UTextBlock*
	}

	namespace n_ACrowServerOnlyCharSpawner {
		constexpr auto SpawnDelay = 0x220; // float
		constexpr auto SpawnCount = 0x224; // uint32_t
	}

	namespace n_UWB_CrowWeaponCrosshairShotgun_C {
		constexpr auto b_Crosshair = 0x3a0; // UBorder*
		constexpr auto ImageCenter = 0x3a8; // UImage*
		constexpr auto ImageCenterBorder = 0x3b0; // UImage*
		constexpr auto ImageDown = 0x3b8; // UImage*
		constexpr auto ImageDownBorder = 0x3c0; // UImage*
		constexpr auto ImageLeft = 0x3c8; // UImage*
		constexpr auto ImageLeftBorder = 0x3d0; // UImage*
		constexpr auto ImageRight = 0x3d8; // UImage*
		constexpr auto ImageRightBorder = 0x3e0; // UImage*
		constexpr auto ImageUp = 0x3e8; // UImage*
		constexpr auto ImageUpBorder = 0x3f0; // UImage*
	}

	namespace n_UTusk_Anim_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2e8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x318; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x328; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x348; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x390; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_VehicleWeapon_2 = 0x3d0; // FAnimNode_VehicleWeaponHandler
		constexpr auto AnimGraphNode_VehicleWeapon = 0x4d0; // FAnimNode_VehicleWeaponHandler
	}

	namespace n_UCrowCharacterDamageHandler {
		constexpr auto Character = 0xb0; // ACrowCharacterPawn*
		constexpr auto BattleStatus = 0xb8; // UCrowBattleStatus*
		constexpr auto LastTakeHitInfo = 0xc0; // FCharacterHitInfo
	}

	namespace n_UCrowVehicleWidgetHP {
		constexpr auto PB_Hp = 0x350; // UProgressBar*
		constexpr auto PB_HP_Damage = 0x358; // UProgressBar*
		constexpr auto TXT_Hp = 0x360; // UTextBlock*
		constexpr auto AniHP_Low = 0x368; // UWidgetAnimation*
	}

	namespace n_UBrushSculptProperties {
		constexpr auto bIsRemeshingEnabled = 0x60; // bool
		constexpr auto PrimaryBrushType = 0x61; // EDynamicMeshSculptBrushType
		constexpr auto PrimaryBrushSpeed = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
		constexpr auto bFreezeTarget = 0x69; // bool
		constexpr auto SmoothBrushSpeed = 0x6c; // float
		constexpr auto bDetailPreservingSmooth = 0x70; // bool
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UAkInitBank {
		constexpr auto AvailableAudioCultures = 0x58; // TArray<FString>
		constexpr auto DefaultLanguage = 0x68; // FString
	}

	namespace n_UCLSPlayerCameraAnimInstance {
		constexpr auto ControlledPawn = 0x2b8; // APawn*
		constexpr auto MovementMode = 0x2c0; // ECLSMovementMode
		constexpr auto MovementAction = 0x2c1; // ECLSMovementAction
		constexpr auto RotationMode = 0x2c2; // ECLSRotationMode
		constexpr auto Gait = 0x2c3; // ECLSGait
		constexpr auto Stance = 0x2c4; // ECLSStance
		constexpr auto BattleStance = 0x2c5; // ECLSBattleStance
		constexpr auto ViewMode = 0x2c6; // ECLSViewMode
		constexpr auto PeekState = 0x2c7; // ECLSPeekState
		constexpr auto bIsMoving = 0x2c8; // bool
		constexpr auto bRightShoulder = 0x2c9; // bool
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x388; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_URemoveOccludedTrianglesTool {
		constexpr auto BasicProperties = 0x90; // URemoveOccludedTrianglesToolProperties*
		constexpr auto AdvancedProperties = 0x98; // URemoveOccludedTrianglesAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PreviewCopies = 0xb0; // TArray<UPreviewMesh*>
	}

	namespace n_UCrowBombardTargetWidget {
		constexpr auto CP_Timer = 0x348; // UCanvasPanel*
		constexpr auto TB_Time = 0x350; // UTextBlock*
		constexpr auto BD_Zone = 0x358; // UBorder*
	}

	namespace n_UCrowShopItemSlotWidget {
		constexpr auto IMG_GoldIcon = 0x348; // UImage*
		constexpr auto IMG_Icon = 0x350; // UCrowWidgetImage*
		constexpr auto IMG_KeyOn = 0x358; // UImage*
		constexpr auto IMG_KeyOff = 0x360; // UImage*
		constexpr auto IMG_NewIcon = 0x368; // UImage*
		constexpr auto WS_ItemStatus = 0x370; // UWidgetSwitcher*
		constexpr auto BT_Buy = 0x378; // UCrowButton*
		constexpr auto WB_BT_Preview = 0x380; // UCrowButton*
		constexpr auto TB_ItemName = 0x388; // UTextBlock*
		constexpr auto TB_LimitTime = 0x390; // UTextBlock*
		constexpr auto TB_ItemCount = 0x398; // UTextBlock*
		constexpr auto TB_MoneyValue = 0x3a0; // UTextBlock*
		constexpr auto TB_Bar = 0x3a8; // UTextBlock*
		constexpr auto TB_GuageCount = 0x3b0; // UTextBlock*
		constexpr auto TB_TotalCount = 0x3b8; // UTextBlock*
		constexpr auto SCB_US = 0x3c0; // UScaleBox*
		constexpr auto WS_Grade = 0x3c8; // UWidgetSwitcher*
		constexpr auto WS_PayProgressBar = 0x3d0; // UWidgetSwitcher*
		constexpr auto ProgressBar_Ing = 0x3d8; // UProgressBar*
		constexpr auto CP_SlotButton = 0x3e0; // UCanvasPanel*
		constexpr auto VB_ItemNamePanel = 0x3e8; // UVerticalBox*
		constexpr auto RTB_ComplateText = 0x3f0; // URichTextBlock*
		constexpr auto HB_ProgressText = 0x3f8; // UHorizontalBox*
		constexpr auto CP_SoldOut = 0x400; // UCanvasPanel*
		constexpr auto SlotType = 0x408; // ShopItemSlotType
		constexpr auto ShopTableData = 0x410; // FCrowShopTableRow
		constexpr auto ItemData = 0x488; // FCrowItemData
		constexpr auto IMG_Icon_Package = 0x4b8; // UImage*
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_ABP_Grenade_LoadoutBoxM18Ammo_C {
		constexpr auto Sphere = 0x1910; // USphereComponent*
		constexpr auto SK_G67_02 = 0x1918; // USkeletalMeshComponent*
		constexpr auto DynamicRicochet_Trail_Generic_thin = 0x1920; // UParticleSystemComponent*
	}

	namespace n_UCrowStartPlaneRouteWidget {
		constexpr auto TargetAirSplineActor = 0x348; // ACrowAirPlaneRespawnSplineActor*
		constexpr auto SB_PlaneLine = 0x350; // USizeBox*
		constexpr auto PB_Route_2 = 0x358; // UProgressBar*
		constexpr auto CP_StartPlane = 0x360; // UCanvasPanel*
	}

	namespace n_UCrowSettingsTabWidget {
		constexpr auto BT_All = 0x390; // UCrowWidgetToggleButton*
		constexpr auto BT_Display = 0x398; // UCrowWidgetToggleButton*
		constexpr auto BT_Audio = 0x3a0; // UCrowWidgetToggleButton*
		constexpr auto BT_CharacterInput = 0x3a8; // UCrowWidgetToggleButton*
		constexpr auto BT_Gameplay = 0x3b0; // UCrowWidgetToggleButton*
		constexpr auto BT_Control = 0x3b8; // UCrowWidgetToggleButton*
		constexpr auto BT_Etc = 0x3c0; // UCrowWidgetToggleButton*
		constexpr auto Categories = 0x3c8; // TArray<UCrowSettingsCategoryContentsWidget*>
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UCrowWorldSplineMeshContainer {
		constexpr auto ActorTemplate = 0x1f8; // AActor*
		constexpr auto SegmentPropInfos = 0x200; // TArray<FCrowWorldSplineSegmentPropInfo>
		constexpr auto SegmentMeshInfos = 0x210; // TArray<FCrowWorldSplineSegmentMeshInfo>
		constexpr auto StartEndMeshInfos = 0x220; // FCrowWorldSplineSegmentMeshInfo
	}

	namespace n_UCrowCharacterAnimNotify_FootStep {
		constexpr auto FootStepType = 0x38; // ECrowCharacterFootStepType
		constexpr auto Loudness = 0x3c; // float
		constexpr auto BoneName = 0x40; // FName
		constexpr auto ToeName = 0x48; // FName
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_ABP_CrowSpectatorIconActor_C {
		constexpr auto DefaultSceneRoot = 0x350; // USceneComponent*
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_ACrowWeaponKitShield {
		constexpr auto PreviewShieldActor = 0x1ec0; // ACrowIronShieldActor*
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_ACrowDeathZoneMesh {
		constexpr auto Root = 0x220; // USceneComponent*
		constexpr auto Team = 0x228; // ECrowTeam_RedBlue
	}

	namespace n_UCrowPlaySettingWidget {
		constexpr auto BT_WeaponSetting = 0x348; // UCrowButton*
		constexpr auto BT_OutfitManagement = 0x350; // UCrowButton*
		constexpr auto BT_ChangeCharaterAppearance = 0x358; // UCrowButton*
		constexpr auto BT_Emotion = 0x360; // UCrowButton*
		constexpr auto BT_Spray = 0x368; // UCrowButton*
		constexpr auto BT_VehicleSkin = 0x370; // UCrowButton*
		constexpr auto IMG_OutfilNew = 0x378; // UImage*
		constexpr auto IMG_AppearanceNew = 0x380; // UImage*
		constexpr auto IMG_EmotionNew = 0x388; // UImage*
		constexpr auto IMG_SprayNew = 0x390; // UImage*
		constexpr auto IMG_VehicleNew = 0x398; // UImage*
		constexpr auto IMG_WeaponNew = 0x3a0; // UImage*
	}

	namespace n_UCrowVehicleBoatFSM {
		constexpr auto EngineStartTime = 0x170; // float
		constexpr auto ShutDownTime = 0x174; // float
		constexpr auto FxSetup = 0x178; // FCrowVehicleBoatFxSetup
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_ACrowItemSpawnerGridActor {
		constexpr auto PlayerControllerMap = 0x220; // TMap<ACrowPlayerControllerBase*, int32_t>
		constexpr auto PlayerControllerArray = 0x270; // TArray<FCrowControllerGridInfo>
		constexpr auto SpanwnerGridMap = 0x280; // TMap<uint32_t, FCrowSpawnerGridInfo>
		constexpr auto CountArray = 0x2d0; // TArray<int32_t>
	}

	namespace n_ABP_FoliageAffector_AssultRifle_C {
		constexpr auto CrowFoliageAffector_Trail = 0x238; // UCrowFoliageAffectorComponent*
		constexpr auto CrowFoliageAffector = 0x240; // UCrowFoliageAffectorComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UPolygonSelectionMechanicProperties {
		constexpr auto bSelectFaces = 0x60; // bool
		constexpr auto bSelectEdges = 0x61; // bool
		constexpr auto bSelectVertices = 0x62; // bool
		constexpr auto bPreferProjectedElement = 0x63; // bool
		constexpr auto bSelectDownRay = 0x64; // bool
		constexpr auto bIgnoreOcclusion = 0x65; // bool
	}

	namespace n_UCrowBattlePassItemSlotWidget {
		constexpr auto BattlePassWidget = 0x348; // UCrowBattlePassWidget*
		constexpr auto NeededLevel = 0x350; // uint16_t
		constexpr auto NeededExp = 0x358; // int64_t
		constexpr auto RequiredTotalExp = 0x360; // int64_t
		constexpr auto FreeRewardItem = 0x368; // FCrowRewardItem
		constexpr auto PaidRewardItem = 0x398; // FCrowRewardItem
		constexpr auto bIsHoverdFreeItem = 0x3c8; // bool
		constexpr auto bIsHoverdPaidItem = 0x3c9; // bool
		constexpr auto bEnoughLevel = 0x3ca; // bool
		constexpr auto bWasRewardedFreeItem = 0x3cb; // bool
		constexpr auto bWasRewardedPaidItem = 0x3cc; // bool
		constexpr auto BT_FreeItem = 0x3d0; // UButton*
		constexpr auto CP_FreeItem = 0x3d8; // UCanvasPanel*
		constexpr auto IMG_FreeItem_Inactive_BG = 0x3e0; // UImage*
		constexpr auto IMG_FreeItem_Inactive_BG2 = 0x3e8; // UImage*
		constexpr auto IMG_FreeItem_Active_BG = 0x3f0; // UImage*
		constexpr auto IMG_FreeItem_Active_BG2 = 0x3f8; // UImage*
		constexpr auto IMG_FreeItem = 0x400; // UImage*
		constexpr auto IMG_FreeItem_Check = 0x408; // UImage*
		constexpr auto TB_Level = 0x410; // UTextBlock*
		constexpr auto IMG_Lock = 0x418; // UImage*
		constexpr auto PB_BattlePassExp = 0x420; // UProgressBar*
		constexpr auto BT_PaidItem = 0x428; // UButton*
		constexpr auto CP_PaidItem = 0x430; // UCanvasPanel*
		constexpr auto IMG_PaidItem_Inactive_BG = 0x438; // UImage*
		constexpr auto IMG_PaidItem_Inactive_BG2 = 0x440; // UImage*
		constexpr auto IMG_PaidItem_Active_BG = 0x448; // UImage*
		constexpr auto IMG_PaidItem_Active_BG2 = 0x450; // UImage*
		constexpr auto IMG_PaidItem = 0x458; // UImage*
		constexpr auto IMG_PaidItem_Check = 0x460; // UImage*
	}

	namespace n_UCrowPingTableManager {
		constexpr auto PingData = 0x28; // TMap<ECrowPingType, FCrowPingTableRow>
	}

	namespace n_UAkSwitchInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UCrowBinderActorComponent {
		constexpr auto OwnerContainer = 0xb0; // UCrowComponentContainer*
		constexpr auto CrowComponentOwnerActor = 0xb8; // AActor*
	}

	namespace n_UCrowWeaponPartsMuzzle {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsMuzzleTableRow
		constexpr auto DefaultPartsData = 0x690; // FCrowWeaponPartsMuzzleTableRow
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_ACrowWorldPingAliveActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
	}

	namespace n_UIterativeSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bSmoothBoundary = 0x68; // bool
	}

	namespace n_UAkPS4InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UCrowIndicatorInfo {
		constexpr auto CP_IndicatorInSide = 0x378; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x380; // UCanvasPanel*
		constexpr auto CP_VehicleIcon = 0x388; // UCanvasPanel*
		constexpr auto CP_MyTeamIcon = 0x390; // UCanvasPanel*
		constexpr auto VB_DriverNickName = 0x398; // UVerticalBox*
		constexpr auto VB_UserNickName = 0x3a0; // UVerticalBox*
		constexpr auto VB_Name = 0x3a8; // UVerticalBox*
		constexpr auto TB_UserDistance = 0x3b0; // UTextBlock*
		constexpr auto TB_VehicleName = 0x3b8; // UTextBlock*
		constexpr auto TB_VehicleDistance = 0x3c0; // UTextBlock*
		constexpr auto LocalPlayerController = 0x3c8; // ACrowPlayerControllerBase*
		constexpr auto LocalPlayerState = 0x3d0; // ACrowPlayerStateBase*
		constexpr auto TargetPlayerState = 0x3d8; // ACrowPlayerStateBase*
		constexpr auto SB_MyTeam = 0x3e0; // USizeBox*
		constexpr auto SB_Vehicle = 0x3e8; // USizeBox*
		constexpr auto TB_UserNickName = 0x3f0; // UTextBlock*
		constexpr auto IMG_VehicleIcon = 0x3f8; // UImage*
		constexpr auto WS_AllyIcon = 0x400; // UWidgetSwitcher*
		constexpr auto IMG_Icon_SquadLeader = 0x408; // UImage*
		constexpr auto IMG_Squad_Color = 0x410; // UImage*
		constexpr auto WS_StatusIcon = 0x418; // UWidgetSwitcher*
		constexpr auto TB_SquadNum = 0x420; // UTextBlock*
		constexpr auto IMG_2ndWindGauge = 0x428; // UImage*
		constexpr auto GaugeMaterial = 0x430; // UMaterialInstanceDynamic*
		constexpr auto IMG_Icon_Tank = 0x440; // FSlateBrush
		constexpr auto IMG_Icon_Helicopter = 0x4c8; // FSlateBrush
		constexpr auto IMG_Icon_Car = 0x550; // FSlateBrush
		constexpr auto IMG_Icon_Boat = 0x5d8; // FSlateBrush
		constexpr auto colorVehicleEmpty = 0x660; // FLinearColor
		constexpr auto colorVehicleMyTeam = 0x670; // FLinearColor
		constexpr auto colorVehicleMySquad = 0x680; // FLinearColor
		constexpr auto TargetActor = 0x690; // AActor*
		constexpr auto indicatorType = 0x698; // EIndicatorType
		constexpr auto DisplayInfo = 0x6a0; // FCrowGameIconDisplayInfo
		constexpr auto StopBleedingAnimName = 0x728; // FName
		constexpr auto FastBleedingAnimName = 0x730; // FName
		constexpr auto CallHelpAnimName = 0x738; // FName
	}

	namespace n_UCrowWorldAssetLightProbe {
		constexpr auto LightPathTransform = 0x30; // FTransform
		constexpr auto SeperationNormalFromSurface = 0x60; // FVector
		constexpr auto OpenRatio = 0x6c; // float
	}

	namespace n_UCrowRespawnSelectInfoWidget {
		constexpr auto IMG_BackGround = 0x348; // UImage*
		constexpr auto BTN_Respawn = 0x350; // UButton*
		constexpr auto WS_Status = 0x358; // UWidgetSwitcher*
		constexpr auto TB_Respawn = 0x360; // UTextBlock*
		constexpr auto TB_Disable = 0x368; // UTextBlock*
		constexpr auto BD_RespawnDisable = 0x370; // UBorder*
		constexpr auto RespawnWaitColor = 0x378; // FLinearColor
		constexpr auto RespawnPossibleColor = 0x388; // FLinearColor
		constexpr auto RespawnImpossibleColor = 0x398; // FLinearColor
		constexpr auto IconPanel = 0x3a8; // UCanvasPanel*
		constexpr auto RespawnButtonMap = 0x3b0; // TMap<uint32_t, UCrowRespawnButton*>
		constexpr auto State = 0x400; // ECrowRespawnSelecteInfoWidgetState
		constexpr auto RespawnMapWidget = 0x408; // UCrowRespawnMapWidget*
		constexpr auto VehicleSpawnerButton = 0x410; // UCrowWidgetConquestVehicleButton*
		constexpr auto WaitSeconds = 0x418; // float
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UBaseCreateFromSelectedTool {
		constexpr auto TransformProperties = 0x98; // UTransformInputsToolProperties*
		constexpr auto HandleSourcesProperties = 0xa0; // UBaseCreateFromSelectedHandleSourceProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto TransformProxies = 0xb0; // TArray<UTransformProxy*>
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformInitialScales = 0xd0; // TArray<FVector>
	}

	namespace n_UCrowWorldDestructionAUD {
		constexpr auto RemainMesh = 0x28; // UStaticMesh*
		constexpr auto RemainMeshMaterialOverrides = 0x30; // TArray<UMaterialInterface*>
		constexpr auto AdditionalRemainMesh = 0x40; // TArray<FCrowWorldDestructionMeshData>
		constexpr auto RemainMeshCollisionProfileName = 0x50; // FName
		constexpr auto TemporalMesh = 0x58; // UStaticMesh*
		constexpr auto TemporalMeshMaterialOverrides = 0x60; // TArray<UMaterialInterface*>
		constexpr auto TemporalMeshCollisionProfileName = 0x70; // FName
		constexpr auto UseCollapseByImpact = 0x78; // bool
		constexpr auto UseExplosionByDamage = 0x79; // bool
		constexpr auto CollapseSetting = 0x80; // FCrowWorldDestructionSetting
		constexpr auto ExplosionSetting = 0x1c0; // FCrowWorldDestructionSetting
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_UUPSPatrolVisualizer {
		constexpr auto PatrolPointsPathData = 0x68; // TArray<FUPSPatrolPointPathData>
		constexpr auto PatrolComponentsPathData = 0x78; // TArray<FUPSPatrolComponentPathData>
		constexpr auto VisitedPoints = 0x88; // TArray<FVisitedPoint>
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto DepthPriorityGroup = 0x20c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x20d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x20e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x20f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x210; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x210; // char : 1
		constexpr auto bNeverDistanceCull = 0x210; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x210; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x211; // char : 1
		constexpr auto bMultiBodyOverlap = 0x211; // char : 1
		constexpr auto bTraceComplexOnMove = 0x211; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x211; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x211; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x211; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x211; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x211; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x212; // char : 1
		constexpr auto bVisibleInRayTracing = 0x212; // char : 1
		constexpr auto bRenderInMainPass = 0x212; // char : 1
		constexpr auto bRenderInDepthPass = 0x212; // char : 1
		constexpr auto bReceivesDecals = 0x212; // char : 1
		constexpr auto bOwnerNoSee = 0x212; // char : 1
		constexpr auto bOnlyOwnerSee = 0x212; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x212; // char : 1
		constexpr auto bUseAsOccluder = 0x213; // char : 1
		constexpr auto bSelectable = 0x213; // char : 1
		constexpr auto bForceMipStreaming = 0x213; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x213; // char : 1
		constexpr auto CastShadow = 0x213; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x213; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x213; // char : 1
		constexpr auto bCastDynamicShadow = 0x213; // char : 1
		constexpr auto bCastStaticShadow = 0x214; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x214; // char : 1
		constexpr auto bCastContactShadow = 0x214; // char : 1
		constexpr auto bSelfShadowOnly = 0x214; // char : 1
		constexpr auto bCastFarShadow = 0x214; // char : 1
		constexpr auto bCastInsetShadow = 0x214; // char : 1
		constexpr auto bCastCinematicShadow = 0x214; // char : 1
		constexpr auto bCastHiddenShadow = 0x214; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x215; // char : 1
		constexpr auto bLightAsIfStatic = 0x215; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x215; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x215; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x215; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x215; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x215; // char : 1
		constexpr auto bIgnoreRadialForce = 0x215; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x216; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x216; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x216; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x216; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x216; // char : 1
		constexpr auto bUseEditorCompositing = 0x216; // char : 1
		constexpr auto bRenderCustomDepth = 0x216; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x217; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x219; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x21c; // int32_t
		constexpr auto CustomPrimitiveData = 0x220; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x230; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x248; // int32_t
		constexpr auto VisibilityId = 0x24c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x250; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x260; // int8_t
		constexpr auto VirtualTextureCullMips = 0x261; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x262; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x263; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x268; // float
		constexpr auto BoundsScale = 0x274; // float
		constexpr auto MoveIgnoreActors = 0x288; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x298; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2b8; // FBodyInstance
		constexpr auto OnComponentHit = 0x410; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x411; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x412; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x413; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x414; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x416; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x417; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x418; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x419; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x41a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x41b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x41c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x41d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x438; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ACrowKitBomberTarget {
		constexpr auto IndicatorTime = 0x230; // int32_t
		constexpr auto IsCoolTiming = 0x234; // bool
		constexpr auto DecalSize = 0x238; // float
		constexpr auto IconDisplayInfo = 0x240; // FCrowGameIconDisplayInfo
		constexpr auto IndicatorWidget = 0x2c8; // UCrowKitBomberTargetIcon*
		constexpr auto RootComp = 0x2d0; // USceneComponent*
		constexpr auto DecalComponent = 0x2d8; // UDecalComponent*
		constexpr auto DestroyTime = 0x2e0; // float
		constexpr auto CurrentTime = 0x2e4; // float
	}

	namespace n_UCrowMedalAniWidgetBase {
		constexpr auto DelayTime = 0x348; // float
		constexpr auto CurrTime = 0x34c; // float
		constexpr auto AnimationList = 0x360; // TArray<UWidgetAnimation*>
		constexpr auto CurrentAniIndex = 0x370; // int32_t
		constexpr auto IsPlayingFinishAni = 0x374; // bool
	}

	namespace n_UCrowCategoryAppearanceWidget {
		constexpr auto VB_Custmize_Appearance = 0x348; // UVerticalBox*
		constexpr auto HB_Appearance = 0x350; // UHorizontalBox*
		constexpr auto CustomAppearanceListWidget = 0x358; // UCrowCustomAppearanceListWidget*
		constexpr auto AppearanceSlotWidgetArray = 0x360; // TArray<UCrowCategorySlotBigWidget*>
		constexpr auto SceneLobby = 0x370; // ACrowSceneLobby*
	}

	namespace n_UCrowMissionAreaFirstRespawn {
		constexpr auto PlayerArray = 0x220; // TArray<FCrowFirstRespawnInfo>
	}

	namespace n_ULakeCollisionComponent {
		constexpr auto CachedBodySetup = 0x440; // UBodySetup*
		constexpr auto BoxExtent = 0x448; // FVector
	}

	namespace n_ACrowSquadIconActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto IconLocation = 0x228; // USceneComponent*
		constexpr auto PlayerState = 0x230; // ACrowPlayerStateBase*
		constexpr auto WorldMapIcon = 0x238; // UCrowWorldMapIcon*
		constexpr auto Indicator = 0x240; // UCrowIndicatorViewInfo*
	}

	namespace n_USpaceCurveDeformationMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto TransformProperties = 0x68; // USpaceCurveDeformationMechanicPropertySet*
		constexpr auto PreviewGeometryActor = 0x168; // APreviewGeometryActor*
		constexpr auto RenderPoints = 0x170; // UPointSetComponent*
		constexpr auto RenderSegments = 0x178; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x1b8; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x1c0; // UTransformGizmo*
	}

	namespace n_UCrowRecordWeaponInfoSlotWidget {
		constexpr auto BT_Customize_List_Slot = 0x358; // UCrowButton*
		constexpr auto IMG_Selected = 0x360; // UImage*
		constexpr auto IMGHover = 0x368; // UImage*
		constexpr auto IMGSelected = 0x370; // UImage*
		constexpr auto IMGIcon = 0x378; // UImage*
		constexpr auto TBName = 0x380; // UTextBlock*
		constexpr auto TBLv = 0x388; // UTextBlock*
		constexpr auto PBLv = 0x390; // UProgressBar*
		constexpr auto Index = 0x398; // uint32_t
	}

	namespace n_UCrowScoreRankSlotGradeData {
		constexpr auto Rank = 0x30; // uint32_t
		constexpr auto Class = 0x38; // FText
		constexpr auto Level = 0x50; // uint32_t
		constexpr auto ID = 0x58; // FString
		constexpr auto Score = 0x68; // uint32_t
		constexpr auto PlayTime = 0x70; // FString
		constexpr auto PlayCount = 0x80; // uint32_t
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UCrowStatusEquipItemBar {
		constexpr auto EquipImage = 0x348; // UPaperSprite*
		constexpr auto EquipColor = 0x350; // FLinearColor
		constexpr auto UnEquipColor = 0x360; // FLinearColor
		constexpr auto EquipSlotType = 0x370; // ECrowEquipmentSlotType
		constexpr auto WS_EquipStatus = 0x378; // UWidgetSwitcher*
		constexpr auto WS_Item_Tier = 0x380; // UWidgetSwitcher*
		constexpr auto IMG_Equip = 0x388; // UImage*
		constexpr auto IMG_UnEquip = 0x390; // UImage*
		constexpr auto PB_Bar = 0x398; // UCrowProgressBar*
		constexpr auto TB_Percent = 0x3a0; // UTextBlock*
	}

	namespace n_URevolveBoundaryTool {
		constexpr auto Settings = 0x160; // URevolveBoundaryToolProperties*
		constexpr auto MaterialProperties = 0x168; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x170; // UConstructionPlaneMechanic*
		constexpr auto Preview = 0x178; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UWB_KitBomberIndicator_C {
		constexpr auto IMG_Icon = 0x3c8; // UImage*
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UCrowCategorySlotSmallWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto IMG_New = 0x350; // UImage*
		constexpr auto BT_Customize_SmallSlot = 0x358; // UCrowButton*
		constexpr auto TB_CategoryName = 0x360; // UTextBlock*
		constexpr auto WS_ItemIMG = 0x368; // UWidgetSwitcher*
		constexpr auto IMG_IconIMG_Category = 0x370; // UImage*
		constexpr auto IMG_IconIMG_Item = 0x378; // UImage*
		constexpr auto CategoryContentsName = 0x390; // FText
		constexpr auto CategoryDefaultImage = 0x3a8; // FSlateBrush
		constexpr auto CategoryItemImage = 0x430; // FSlateBrush
		constexpr auto ItemCategoryType = 0x4b8; // ECrowItemType
		constexpr auto AppearanceCategoryType = 0x4b9; // ECrowCharacterAppearanceType
		constexpr auto Equiped = 0x4ba; // bool
		constexpr auto Disabled = 0x4bb; // bool
		constexpr auto TBCategoryName_Sel = 0x4c0; // UTextBlock*
		constexpr auto Selected = 0x4c8; // bool
		constexpr auto ButtonIndex = 0x4cc; // int32_t
	}

	namespace n_ACrowVehicleDestroyedBase {
		constexpr auto Body = 0x220; // USkeletalMeshComponent*
		constexpr auto LifeTime = 0x228; // float
		constexpr auto DamageSetup = 0x230; // FCrowVehicleDamageSetup
		constexpr auto IsExplosion = 0x2d0; // bool
		constexpr auto ExplosionSound = 0x2d8; // UAkAudioEvent*
		constexpr auto ExplosionSoundAttachedSocketName = 0x2e0; // FName
		constexpr auto FireSound = 0x2e8; // UAkAudioEvent*
		constexpr auto FireStopSound = 0x2f0; // UAkAudioEvent*
		constexpr auto FireSoundAttachedSocketName = 0x2f8; // FName
		constexpr auto FXExplosion = 0x300; // UParticleSystem*
		constexpr auto FxExplosion_N = 0x308; // UNiagaraSystem*
		constexpr auto FxExplosionAttachedSocketName = 0x310; // FName
		constexpr auto FxFire = 0x318; // UParticleSystem*
		constexpr auto FxFire_N = 0x320; // UNiagaraSystem*
		constexpr auto FxFireAttachedSocketName = 0x328; // FName
		constexpr auto FxSmoke = 0x330; // UParticleSystem*
		constexpr auto FxSmoke_N = 0x338; // UNiagaraSystem*
		constexpr auto FxSmokeAttachedSocketName = 0x340; // FName
		constexpr auto DestroyEffect = 0x348; // UParticleSystem*
		constexpr auto DestroySound = 0x350; // UAkAudioEvent*
		constexpr auto CameraShake = 0x358; // UMatineeCameraShake*
		constexpr auto OuterRadius = 0x360; // float
		constexpr auto OrientShakeTowardsEpicenter = 0x364; // bool
		constexpr auto AddForce = 0x368; // FVector
		constexpr auto AddForceBoneName = 0x374; // FName
		constexpr auto ExplosionBurningArea = 0x380; // UBoxComponent*
		constexpr auto BurningAreaDamageTerm = 0x388; // float
		constexpr auto BurningAreaDamage = 0x38c; // float
		constexpr auto HP = 0x390; // float
		constexpr auto DestroyFireFxComp = 0x398; // UParticleSystemComponent*
		constexpr auto DestroySmokeFxComp = 0x3a0; // UParticleSystemComponent*
	}

	namespace n_ACrowConquestFlagActor {
		constexpr auto Root = 0x220; // UBoxComponent*
		constexpr auto Top = 0x228; // float
		constexpr auto Bottom = 0x22c; // float
		constexpr auto RedTeamMaterial = 0x230; // UMaterialInterface*
		constexpr auto BlueTeamMaterial = 0x238; // UMaterialInterface*
		constexpr auto NoTeamMaterial = 0x240; // UMaterialInterface*
		constexpr auto AniIdle = 0x248; // UAnimMontage*
		constexpr auto AniStart = 0x250; // UAnimMontage*
		constexpr auto AniLoop = 0x258; // UAnimMontage*
		constexpr auto AniEnd = 0x260; // UAnimMontage*
		constexpr auto EffectGlow = 0x268; // UParticleSystem*
		constexpr auto EffectSmoke = 0x270; // UParticleSystem*
		constexpr auto EffectFloorSmoke = 0x278; // UParticleSystem*
		constexpr auto EffectLCD_On = 0x280; // UParticleSystem*
		constexpr auto EffectLCD_Off = 0x288; // UParticleSystem*
		constexpr auto EffectGlowComponent = 0x290; // UParticleSystemComponent*
		constexpr auto EffectSmokeComponent = 0x298; // UParticleSystemComponent*
		constexpr auto EffectFloorSmokeComponent = 0x2a0; // UParticleSystemComponent*
		constexpr auto EffectLCD_OnComponent = 0x2a8; // UParticleSystemComponent*
		constexpr auto EffectLCD_OffComponent = 0x2b0; // UParticleSystemComponent*
		constexpr auto TargetActor = 0x2b8; // ACrowConquestArea*
		constexpr auto FlagMeshComponent = 0x2c0; // UMeshComponent*
		constexpr auto BodyMeshComponent = 0x2c8; // USkeletalMeshComponent*
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UCrowCompositionCAreaIconWidget {
		constexpr auto CPRoot = 0x348; // UCanvasPanel*
		constexpr auto CPLocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CPIcon = 0x358; // UCanvasPanel*
		constexpr auto TBName = 0x360; // UTextBlock*
		constexpr auto TBDistance = 0x368; // UTextBlock*
		constexpr auto IMGBase = 0x370; // UImage*
		constexpr auto bIsPlantCompositionC = 0x378; // bool
		constexpr auto bIsNearPlantCompositionC = 0x379; // bool
		constexpr auto DistanceDisplayCompositinCColorWhenPlant = 0x37c; // int32_t
		constexpr auto NormalColor = 0x380; // FLinearColor
		constexpr auto PlantCompositionCColor = 0x390; // FLinearColor
	}

	namespace n_ACrowGameModeTDM {
		constexpr auto bIsFriendlyFire = 0x4d0; // char : 1
		constexpr auto bIsTeamBalance = 0x4d1; // bool
		constexpr auto TeamKillLimit = 0x4d4; // uint32_t
		constexpr auto WinnerTeam = 0x4d8; // FCrowTeamInfo
	}

	namespace n_UCrowTabOutfitWidget {
		constexpr auto CurrentSelectIndex = 0x390; // char
	}

	namespace n_UCrowToastMessageWidget {
		constexpr auto RTB_Message = 0x348; // URichTextBlock*
		constexpr auto AlphaTweener = 0x350; // UCrowWidgetTweenAlpha*
	}

	namespace n_UCrowVehicleWidgetSeatList {
		constexpr auto SeatCellWidgets = 0x398; // TArray<UCrowVehicleWidgetSeatCell*>
	}

	namespace n_ACrowPlayerCameraManager {
		constexpr auto DeathCameraComponent = 0x2868; // UCrowDeathCameraComponent*
	}

	namespace n_UCrowIconZOrderTableManager {
		constexpr auto TableArray = 0x28; // TArray<FCrowIconZOrderTableRow>
	}

	namespace n_UCrowWeaponPartsListWidget {
		constexpr auto StockSprite = 0x348; // UPaperSprite*
		constexpr auto PistolGripSprite = 0x350; // UPaperSprite*
		constexpr auto MagazineSprite = 0x358; // UPaperSprite*
		constexpr auto UnderBarrelSprite = 0x360; // UPaperSprite*
		constexpr auto BarrelSprite = 0x368; // UPaperSprite*
		constexpr auto MuzzleSprite = 0x370; // UPaperSprite*
		constexpr auto SecondarySightSprite = 0x378; // UPaperSprite*
		constexpr auto PrimarySightSprite = 0x380; // UPaperSprite*
		constexpr auto SideBarrelSprite = 0x388; // UPaperSprite*
		constexpr auto Stock = 0x390; // UCrowWeaponPartItemWidget*
		constexpr auto PistolGrip = 0x398; // UCrowWeaponPartItemWidget*
		constexpr auto Magazine = 0x3a0; // UCrowWeaponPartItemWidget*
		constexpr auto SideBarrel = 0x3a8; // UCrowWeaponPartItemWidget*
		constexpr auto PrimarySight = 0x3b0; // UCrowWeaponPartItemWidget*
		constexpr auto UnderBarrel = 0x3b8; // UCrowWeaponPartItemWidget*
		constexpr auto SecondarySight = 0x3c0; // UCrowWeaponPartItemWidget*
		constexpr auto Barrel = 0x3c8; // UCrowWeaponPartItemWidget*
		constexpr auto Muzzle = 0x3d0; // UCrowWeaponPartItemWidget*
		constexpr auto SB_Slot_Stock = 0x3d8; // USizeBox*
		constexpr auto SB_Slot_PistolGrip = 0x3e0; // USizeBox*
		constexpr auto SB_Slot_Magazine = 0x3e8; // USizeBox*
		constexpr auto SB_Slot_SecondarySight = 0x3f0; // USizeBox*
		constexpr auto SB_Slot_PrimarySight = 0x3f8; // USizeBox*
		constexpr auto SB_Slot_UnderBarrel = 0x400; // USizeBox*
		constexpr auto SB_Slot_SideBarrel = 0x408; // USizeBox*
		constexpr auto SB_Slot_Barrel = 0x410; // USizeBox*
		constexpr auto SB_Slot_Muzzle = 0x418; // USizeBox*
		constexpr auto SizeBoxArray = 0x420; // TArray<USizeBox*>
		constexpr auto PartsArray = 0x430; // TArray<UCrowWeaponPartItemWidget*>
		constexpr auto DefaultTextureArray = 0x440; // TArray<UPaperSprite*>
		constexpr auto WeaponInfoWidget = 0x450; // UCrowInvenWeaponInfoWidget*
		constexpr auto IsPictogramIcon = 0x458; // bool
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x468; // bool
		constexpr auto bAttachEnd = 0x469; // bool
		constexpr auto AttachEndTo = 0x470; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x498; // FName
		constexpr auto EndLocation = 0x4a0; // FVector
		constexpr auto CableLength = 0x4ac; // float
		constexpr auto NumSegments = 0x4b0; // int32_t
		constexpr auto SubstepTime = 0x4b4; // float
		constexpr auto SolverIterations = 0x4b8; // int32_t
		constexpr auto bEnableStiffness = 0x4bc; // bool
		constexpr auto bUseSubstepping = 0x4bd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4be; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4bf; // bool
		constexpr auto bEnableCollision = 0x4c0; // bool
		constexpr auto CollisionFriction = 0x4c4; // float
		constexpr auto CableForce = 0x4c8; // FVector
		constexpr auto CableGravityScale = 0x4d4; // float
		constexpr auto CableWidth = 0x4d8; // float
		constexpr auto NumSides = 0x4dc; // int32_t
		constexpr auto TileMaterial = 0x4e0; // float
	}

	namespace n_ACrowWeaponDummyParts {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto MeshComponent = 0x228; // UMeshComponent*
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_ABP_RocketLauncher_Hydra70_C {
		constexpr auto SM_G67 = 0x1840; // UStaticMeshComponent*
	}

	namespace n_UVoxelBlendMeshesToolProperties {
		constexpr auto BlendPower = 0x60; // double
		constexpr auto BlendFalloff = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UCrowVehicleImpactDamageTableManager {
		constexpr auto DamageTable = 0x28; // TArray<FCrowVehicleImpactDamageTableRow>
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_UCrowDynamicFoliageConfig {
		constexpr auto WindDirection = 0x28; // FVector2D
		constexpr auto WindSettingMin = 0x30; // FCrowDynamicFoliageWindSetting
		constexpr auto WindSettingMax = 0x4c; // FCrowDynamicFoliageWindSetting
	}

	namespace n_AUPSFormation_FromGeneratedPoints {
		constexpr auto PointsGenerationSettings = 0x280; // FFormationPointsGenerationSettings
	}

	namespace n_UCrowDeconstructWidget {
		constexpr auto DconstructGage = 0x348; // UMaterialInstanceDynamic*
		constexpr auto DconstructGageBase = 0x350; // UMaterialInstanceDynamic*
		constexpr auto SlotWidgetClass = 0x358; // UCrowDeconstructSlotWidget*
		constexpr auto OwnListSlotClass = 0x360; // UCrowCustomizeOutfitSlotWidget*
		constexpr auto GP_ItemList = 0x368; // UGridPanel*
		constexpr auto GP_SelectItemList = 0x370; // UGridPanel*
		constexpr auto CP_DeconstructPreview = 0x378; // UCanvasPanel*
		constexpr auto WS_InvenState = 0x380; // UWidgetSwitcher*
		constexpr auto TB_GPointValue = 0x388; // UTextBlock*
		constexpr auto BT_RegisterAll = 0x390; // UCrowButton*
		constexpr auto BT_UnregisterAll = 0x398; // UCrowButton*
		constexpr auto BT_Deconstruct = 0x3a0; // UCrowButton*
		constexpr auto CP_Gauge = 0x3a8; // UCanvasPanel*
		constexpr auto IMG_Gauge = 0x3b0; // UImage*
		constexpr auto IMG_Gauge_Base = 0x3b8; // UImage*
		constexpr auto CP_GaugeEffect = 0x3c0; // UCanvasPanel*
		constexpr auto DeconstructTime = 0x3c8; // float
		constexpr auto LimitTime = 0x3cc; // float
		constexpr auto IsSendPacket = 0x3d0; // bool
		constexpr auto SlotWidgetList = 0x3e8; // TArray<UCrowDeconstructSlotWidget*>
	}

	namespace n_UCrowLoginWidget {
		constexpr auto CP_CreateNickname = 0x348; // UCanvasPanel*
		constexpr auto TB_TypingPassword_2 = 0x350; // UEditableTextBox*
		constexpr auto BT_Login_2 = 0x358; // UCrowButton*
		constexpr auto CP_LoginMain = 0x360; // UCanvasPanel*
		constexpr auto CP_LoginMessage = 0x368; // UCanvasPanel*
		constexpr auto TB_LoginMessage = 0x370; // UTextBlock*
		constexpr auto TB_TypingUserName = 0x378; // UEditableTextBox*
		constexpr auto TB_TypingPassword = 0x380; // UEditableTextBox*
		constexpr auto BT_Login = 0x388; // UCrowButton*
		constexpr auto WS_Platform = 0x390; // UWidgetSwitcher*
		constexpr auto IMG_Loading_In = 0x398; // UImage*
		constexpr auto NoticeWebViewer = 0x3a0; // UCrowNoticeWebBrowser*
		constexpr auto WB_CrowGRAC = 0x3a8; // UCrowGRACWidget*
		constexpr auto NickNameCreateAnim = 0x3b4; // FName
		constexpr auto LoginErrorMessageAnim = 0x3bc; // FName
		constexpr auto LoopEffectAnim = 0x3c4; // FName
		constexpr auto LoginAnimName = 0x3cc; // FName
		constexpr auto NickNameLegnthMin = 0x3d4; // char
		constexpr auto NickNameLegnthMax = 0x3d5; // char
	}

	namespace n_UCrowVehicleWidgetSeatDagor {
		constexpr auto SB_Seat_MG = 0x3b8; // USizeBox*
	}

	namespace n_ACrowWidgetParticle {
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto ParticleLocation = 0x228; // USceneComponent*
		constexpr auto SceneCapture = 0x230; // USceneCaptureComponent2D*
		constexpr auto Particle = 0x238; // UParticleSystem*
		constexpr auto IsLoop = 0x240; // bool
		constexpr auto ParticleComponent = 0x248; // UParticleSystemComponent*
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_URemoveOccludedTrianglesToolProperties {
		constexpr auto OcclusionTestMethod = 0x60; // EOcclusionCalculationUIMode
		constexpr auto TriangleSampling = 0x61; // EOcclusionTriangleSamplingUIMode
		constexpr auto WindingIsoValue = 0x68; // double
		constexpr auto AddRandomRays = 0x70; // int32_t
		constexpr auto AddTriangleSamples = 0x74; // int32_t
		constexpr auto bOnlySelfOcclude = 0x78; // bool
	}

	namespace n_ACrowThrowProjectileTrajectory {
		constexpr auto SplineComp = 0x220; // USplineComponent*
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UCLSCharacterAnimInstance {
		constexpr auto Character = 0x2c0; // ACharacter*
		constexpr auto CurrentDeltaSeconds = 0x2c8; // float
		constexpr auto ConstFloatOne = 0x2cc; // float
		constexpr auto ConstFloatZero = 0x2d0; // float
		constexpr auto SecondaryMotionAlpha = 0x2d4; // float
		constexpr auto CurrentMovementMode = 0x2d8; // ECLSMovementMode
		constexpr auto PrevMovementMode = 0x2d9; // ECLSMovementMode
		constexpr auto MovementAction = 0x2da; // ECLSMovementAction
		constexpr auto WeaponAction = 0x2db; // ECLSWeaponAction
		constexpr auto RotationMode = 0x2dc; // ECLSRotationMode
		constexpr auto Gait = 0x2dd; // ECLSGait
		constexpr auto Stance = 0x2de; // ECLSStance
		constexpr auto BattleStance = 0x2df; // ECLSBattleStance
		constexpr auto ViewMode = 0x2e0; // ECLSViewMode
		constexpr auto OverlayState = 0x2e1; // ECLSOverlayState
		constexpr auto PeekState = 0x2e2; // ECLSPeekState
		constexpr auto bUsingFPCam = 0x2e3; // bool
		constexpr auto AimingRotation = 0x2e4; // FRotator
		constexpr auto CDBoneAimingRotation = 0x2f0; // FRotator
		constexpr auto Velocity = 0x2fc; // FVector
		constexpr auto RelativeVelocityDirection = 0x308; // FVector
		constexpr auto Acceleration = 0x314; // FVector
		constexpr auto MovementInput = 0x320; // FVector
		constexpr auto bIsMoving = 0x32c; // bool
		constexpr auto bHasMovementInput = 0x32d; // bool
		constexpr auto Speed = 0x330; // float
		constexpr auto MovementInputAmount = 0x334; // float
		constexpr auto AimYawRate = 0x338; // float
		constexpr auto ZoomAmount = 0x33c; // float
		constexpr auto bIsUsingProneOffset = 0x340; // bool
		constexpr auto StandToCrouchAnimRate = 0x344; // float
		constexpr auto StandToProneAnimRate = 0x348; // float
		constexpr auto CrouchToStandAnimRate = 0x34c; // float
		constexpr auto CrouchToProneAnimRate = 0x350; // float
		constexpr auto ProneToStandAnimRate = 0x354; // float
		constexpr auto ProneToCrouchAnimRate = 0x358; // float
		constexpr auto AdditionalMainState = 0x35c; // ECLSAdditionalState
		constexpr auto AdditionalSubState = 0x35d; // char
		constexpr auto MovementDirection = 0x35e; // ECLSMovementDirection
		constexpr auto TrackedHipDirection = 0x35f; // ECLSHipsDirection
		constexpr auto RelativeAccelerationAmount = 0x360; // FVector
		constexpr auto bShouldMove = 0x36c; // bool
		constexpr auto bRotate_L = 0x36d; // bool
		constexpr auto bRotate_R = 0x36e; // bool
		constexpr auto bPivot = 0x36f; // bool
		constexpr auto bSkipFootIK = 0x370; // bool
		constexpr auto bSkipHandIK = 0x371; // bool
		constexpr auto bStopLookAndIK = 0x372; // bool
		constexpr auto bStopFootLock = 0x373; // bool
		constexpr auto RotateOffset = 0x374; // float
		constexpr auto RotateDistance = 0x378; // float
		constexpr auto RotateRate = 0x37c; // float
		constexpr auto RotationScale = 0x380; // float
		constexpr auto DiagonalScaleAmount = 0x384; // float
		constexpr auto WalkRunBlend = 0x388; // float
		constexpr auto StandingPlayRate = 0x38c; // float
		constexpr auto CrouchingPlayRate = 0x390; // float
		constexpr auto PronePlayRate = 0x394; // float
		constexpr auto SwimPlayRate = 0x398; // float
		constexpr auto StrideBlend = 0x39c; // float
		constexpr auto CrouchingStrideBlend = 0x3a0; // float
		constexpr auto VelocityBlend = 0x3a4; // FCLSVelocityBlend
		constexpr auto LeanAmount = 0x3b4; // FCLSLeanAmount
		constexpr auto FYaw = 0x3bc; // float
		constexpr auto BYaw = 0x3c0; // float
		constexpr auto LYaw = 0x3c4; // float
		constexpr auto RYaw = 0x3c8; // float
		constexpr auto VehicleType = 0x3cc; // ECLSVehicleType
		constexpr auto VehicleSeatType = 0x3cd; // ECLSVehicleSeatType
		constexpr auto VehicleMovingDirectionForwardRatio = 0x3d0; // float
		constexpr auto VehicleMovingDirectionRightRatio = 0x3d4; // float
		constexpr auto bVehicleInvalidData = 0x3d8; // bool
		constexpr auto PeekLeftRotation = 0x3dc; // FRotator
		constexpr auto PeekRightRotation = 0x3e8; // FRotator
		constexpr auto PeekLeftWeight = 0x3f4; // float
		constexpr auto PeekRightWeight = 0x3f8; // float
		constexpr auto bJumped = 0x3fc; // bool
		constexpr auto JumpPlayRate = 0x400; // float
		constexpr auto FallSpeed = 0x404; // float
		constexpr auto LandPrediction = 0x408; // float
		constexpr auto SwimImmersionDepth = 0x40c; // float
		constexpr auto SwimPelvisAdjust = 0x410; // float
		constexpr auto SwimPelvisPitch = 0x414; // float
		constexpr auto SkyDivingInput = 0x418; // FVector2D
		constexpr auto SkyDivingRoll = 0x420; // float
		constexpr auto SmoothedAimingRotation = 0x424; // FRotator
		constexpr auto SpineRotation = 0x430; // FRotator
		constexpr auto AimingAngle = 0x43c; // FVector2D
		constexpr auto SmoothedAimingAngle = 0x444; // FVector2D
		constexpr auto AimOffsetAngle = 0x44c; // FVector2D
		constexpr auto AimSweepTime = 0x454; // float
		constexpr auto InputYawOffsetTime = 0x458; // float
		constexpr auto ForwardYawTime = 0x45c; // float
		constexpr auto LeftYawTime = 0x460; // float
		constexpr auto RightYawTime = 0x464; // float
		constexpr auto Enable_SecondarySight = 0x468; // float
		constexpr auto CDBoneModificationBySituation = 0x46c; // FVector
		constexpr auto LadderStepHeight = 0x478; // float
		constexpr auto LadderStepPosition = 0x47c; // float
		constexpr auto LadderState = 0x480; // ECLSLadderState
		constexpr auto bIsAliving = 0x481; // bool
		constexpr auto AlivingStance = 0x482; // ECLSStance
		constexpr auto bIsUpSlope = 0x483; // bool
		constexpr auto SlopePoseBlendingAlpha = 0x484; // float
		constexpr auto FlailRate = 0x488; // float
		constexpr auto OverlayOverrideState = 0x48c; // int32_t
		constexpr auto Enable_AimOffset = 0x490; // float
		constexpr auto Enable_AfterAimOffsetL = 0x494; // float
		constexpr auto Enable_AfterAimOffsetR = 0x498; // float
		constexpr auto BasePose_Stand = 0x49c; // float
		constexpr auto BasePose_Crouch = 0x4a0; // float
		constexpr auto BasePose_Prone = 0x4a4; // float
		constexpr auto Arm_L = 0x4a8; // float
		constexpr auto Arm_L_Add = 0x4ac; // float
		constexpr auto Arm_L_LS = 0x4b0; // float
		constexpr auto Arm_L_MS = 0x4b4; // float
		constexpr auto Arm_R = 0x4b8; // float
		constexpr auto Arm_R_Add = 0x4bc; // float
		constexpr auto Arm_R_LS = 0x4c0; // float
		constexpr auto Arm_R_MS = 0x4c4; // float
		constexpr auto hand_l = 0x4c8; // float
		constexpr auto hand_r = 0x4cc; // float
		constexpr auto Legs = 0x4d0; // float
		constexpr auto Legs_Add = 0x4d4; // float
		constexpr auto Pelvis = 0x4d8; // float
		constexpr auto Pelvis_Add = 0x4dc; // float
		constexpr auto Spine = 0x4e0; // float
		constexpr auto Spine_Add = 0x4e4; // float
		constexpr auto Head = 0x4e8; // float
		constexpr auto Head_Add = 0x4ec; // float
		constexpr auto Enable_GripIK_L = 0x4f0; // float
		constexpr auto Enable_GripIK_R = 0x4f4; // float
		constexpr auto GripIKLFindPriorityIndex = 0x4f8; // int32_t
		constexpr auto Enable_HandIK_L = 0x4fc; // float
		constexpr auto Enable_HandIK_R = 0x500; // float
		constexpr auto Enable_TargetIK_L = 0x504; // float
		constexpr auto Enable_TargetIK_R = 0x508; // float
		constexpr auto Enable_HandsFollowToHead = 0x50c; // float
		constexpr auto Enable_HandLFollowToHead = 0x510; // float
		constexpr auto Arm_L_Overwrite = 0x514; // float
		constexpr auto LeftHandIK = 0x520; // FTransform
		constexpr auto RightHandIK = 0x550; // FTransform
		constexpr auto bLeftValidHandIKTransform = 0x580; // bool
		constexpr auto bRightValidHandIKTransform = 0x581; // bool
		constexpr auto Enable_GripPose_L = 0x584; // float
		constexpr auto Enable_GripPose_R = 0x588; // float
		constexpr auto LastUpdatedRotation = 0x58c; // FRotator
		constexpr auto FootLock_L_Alpha = 0x598; // float
		constexpr auto FootLock_R_Alpha = 0x59c; // float
		constexpr auto FootLock_L_Location = 0x5a0; // FVector
		constexpr auto FootLock_R_Location = 0x5ac; // FVector
		constexpr auto FootLock_L_Rotation = 0x5b8; // FRotator
		constexpr auto FootLock_R_Rotation = 0x5c4; // FRotator
		constexpr auto FootOffset_L_Location = 0x5d0; // FVector
		constexpr auto FootOffset_R_Location = 0x5dc; // FVector
		constexpr auto FootOffset_L_Rotation = 0x5e8; // FRotator
		constexpr auto FootOffset_R_Rotation = 0x5f4; // FRotator
		constexpr auto PelvisOffset = 0x600; // FVector
		constexpr auto PelvisTranslation = 0x60c; // FVector
		constexpr auto PelvisAlpha = 0x618; // float
		constexpr auto ProneNormal_Pelvis = 0x61c; // FVector
		constexpr auto ProneOffset_Pelvis = 0x628; // FVector
		constexpr auto ProneOffset_Spine = 0x634; // FVector
		constexpr auto ProneOffset_Calf_L = 0x640; // FVector
		constexpr auto ProneOffset_Calf_R = 0x64c; // FVector
		constexpr auto AimBobInfo = 0x658; // FCLSCharacterAimBobInfo
		constexpr auto AimBobAlpha = 0x688; // float
		constexpr auto AimBobStartRatio = 0x68c; // float
		constexpr auto AimBobPlayRate = 0x690; // float
		constexpr auto AimBobElapsed = 0x694; // float
		constexpr auto TurnCheckMinAngle = 0x698; // float
		constexpr auto Turn180Threshold = 0x69c; // float
		constexpr auto AimYawRateLimit = 0x6a0; // float
		constexpr auto ElapsedDelayTime = 0x6a4; // float
		constexpr auto MinAngleDelay = 0x6a8; // float
		constexpr auto MaxAngleDelay = 0x6ac; // float
		constexpr auto bIsBlendingNoOffset = 0x6b0; // bool
		constexpr auto Stand_TurnIP_L90 = 0x6b8; // FCLSTurnInPlaceAsset
		constexpr auto Stand_TurnIP_R90 = 0x6d8; // FCLSTurnInPlaceAsset
		constexpr auto Stand_TurnIP_L180 = 0x6f8; // FCLSTurnInPlaceAsset
		constexpr auto Stand_TurnIP_R180 = 0x718; // FCLSTurnInPlaceAsset
		constexpr auto Crouch_TurnIP_L90 = 0x738; // FCLSTurnInPlaceAsset
		constexpr auto Crouch_TurnIP_R90 = 0x758; // FCLSTurnInPlaceAsset
		constexpr auto Crouch_TurnIP_L180 = 0x778; // FCLSTurnInPlaceAsset
		constexpr auto Crouch_TurnIP_R180 = 0x798; // FCLSTurnInPlaceAsset
		constexpr auto RotateMinThreshold = 0x7b8; // float
		constexpr auto RotateMaxThreshold = 0x7bc; // float
		constexpr auto AimYawRateMinRange = 0x7c0; // float
		constexpr auto AimYawRateMaxRange = 0x7c4; // float
		constexpr auto MinPlayRate = 0x7c8; // float
		constexpr auto MaxPlayRate = 0x7cc; // float
		constexpr auto DiagonalScaleAmountCurve = 0x7d0; // UCurveFloat*
		constexpr auto StrideBlend_Stand_Walk = 0x7d8; // UCurveFloat*
		constexpr auto StrideBlend_Stand_Run = 0x7e0; // UCurveFloat*
		constexpr auto StrideBlend_Crouch_Walk = 0x7e8; // UCurveFloat*
		constexpr auto StrideBlend_Crouch_Run = 0x7f0; // UCurveFloat*
		constexpr auto StrideBlend_Prone_Walk = 0x7f8; // UCurveFloat*
		constexpr auto LandPredictionCurve = 0x800; // UCurveFloat*
		constexpr auto LeanInAirCurve = 0x808; // UCurveFloat*
		constexpr auto YawOffset_FB = 0x810; // UCurveVector*
		constexpr auto YawOffset_LR = 0x818; // UCurveVector*
		constexpr auto AnimatedWalkSpeed = 0x820; // float
		constexpr auto AnimatedRunSpeed = 0x824; // float
		constexpr auto AnimatedSprintSpeed = 0x828; // float
		constexpr auto AnimatedCrouchWalkSpeed = 0x82c; // float
		constexpr auto AnimatedCrouchRunSpeed = 0x830; // float
		constexpr auto AnimatedCrouchSprintSpeed = 0x834; // float
		constexpr auto AnimatedProneSpeed = 0x838; // float
		constexpr auto AnimatedProneWalkSpeed = 0x83c; // float
		constexpr auto AnimatedSwimSpeed = 0x840; // float
		constexpr auto AnimatedSwimSprintSpeed = 0x844; // float
		constexpr auto VelocityBlendInterpSpeed = 0x848; // float
		constexpr auto GroundedLeanInterpSpeed = 0x84c; // float
		constexpr auto InAirLeanInterpSpeed = 0x850; // float
		constexpr auto VehicleLeanInterpSpeed = 0x854; // float
		constexpr auto SmoothedAimingRotationInterpSpeed = 0x858; // float
		constexpr auto InputYawOffsetInterpSpeed = 0x85c; // float
		constexpr auto TriggerPivotSpeedLimit = 0x860; // float
		constexpr auto FootHeight = 0x864; // float
		constexpr auto IK_TraceDistanceAboveFoot = 0x868; // float
		constexpr auto IK_TraceDistanceBelowFoot = 0x86c; // float
		constexpr auto IK_TraceDistanceBelowFootOnProne = 0x870; // float
		constexpr auto PelvisDownwardTraceDistance = 0x874; // float
		constexpr auto PelvisOffsetLerpSpeed = 0x878; // float
		constexpr auto bCanPlayDynamicTransition = 0x87c; // bool
		constexpr auto GroundPose = 0x880; // FCLSGroundPose
		constexpr auto VehiclePose = 0x8d8; // FCLSVehiclePose
		constexpr auto GripPose = 0x900; // FCLSGripPose
		constexpr auto AnimOnStandStopR = 0x910; // UAnimSequenceBase*
		constexpr auto AnimOnStandStopL = 0x918; // UAnimSequenceBase*
		constexpr auto AnimOnCrouchStop = 0x920; // UAnimSequenceBase*
		constexpr auto AnimOnStandQuickStop = 0x928; // UAnimSequenceBase*
		constexpr auto AnimOnRollToIdle = 0x930; // UAnimSequenceBase*
		constexpr auto AnimOnLandToIdle = 0x938; // UAnimSequenceBase*
		constexpr auto AnimOnRelaxedToReady = 0x940; // UAnimSequenceBase*
		constexpr auto AnimOnReadyToRelaxed = 0x948; // UAnimSequenceBase*
		constexpr auto AnimOnBowRelaxedToReady = 0x950; // UAnimSequenceBase*
		constexpr auto AnimOnBowReadyToRelaxed = 0x958; // UAnimSequenceBase*
		constexpr auto AnimOnM4A1RelaxedToReady = 0x960; // UAnimSequenceBase*
		constexpr auto AnimOnM4A1ReadyToRelaxed = 0x968; // UAnimSequenceBase*
		constexpr auto AnimOnPistol1HRelaxedToReady = 0x970; // UAnimSequenceBase*
		constexpr auto AnimOnPistol1HReadyToRelaxed = 0x978; // UAnimSequenceBase*
		constexpr auto AnimOnPistol2HRelaxedToReady = 0x980; // UAnimSequenceBase*
		constexpr auto AnimOnPistol2HReadyToRelaxed = 0x988; // UAnimSequenceBase*
		constexpr auto AnimOnTransitionR = 0x990; // UAnimSequenceBase*
		constexpr auto AnimOnTransitionL = 0x998; // UAnimSequenceBase*
		constexpr auto StandRelaxedPauseTime = 0x9a0; // float
		constexpr auto StandRelaxedUpSlopePauseTime = 0x9a4; // float
		constexpr auto StandRelaxedDownSlopePauseTime = 0x9a8; // float
		constexpr auto StandRelaxedMovingPauseTime = 0x9ac; // float
		constexpr auto StandReadyPauseTime = 0x9b0; // float
		constexpr auto StandReadyMovingPauseTime = 0x9b4; // float
		constexpr auto StandBattlePauseTime = 0x9b8; // float
		constexpr auto StandBattleUpSlopePauseTime = 0x9bc; // float
		constexpr auto StandBattleDownSlopePauseTime = 0x9c0; // float
		constexpr auto StandBattleMovingPauseTime = 0x9c4; // float
		constexpr auto StandAimPauseTime = 0x9c8; // float
		constexpr auto StandAimMovingPauseTime = 0x9cc; // float
		constexpr auto StandSprintPauseTime = 0x9d0; // float
		constexpr auto CrouchRelaxedPauseTime = 0x9d4; // float
		constexpr auto CrouchRelaxedUpSlopePauseTime = 0x9d8; // float
		constexpr auto CrouchRelaxedDownSlopePauseTime = 0x9dc; // float
		constexpr auto CrouchRelaxedMovingPauseTime = 0x9e0; // float
		constexpr auto CrouchReadyPauseTime = 0x9e4; // float
		constexpr auto CrouchReadyMovingPauseTime = 0x9e8; // float
		constexpr auto CrouchBattlePauseTime = 0x9ec; // float
		constexpr auto CrouchBattleUpSlopePauseTime = 0x9f0; // float
		constexpr auto CrouchBattleDownSlopePauseTime = 0x9f4; // float
		constexpr auto CrouchBattleMovingPauseTime = 0x9f8; // float
		constexpr auto CrouchAimPauseTime = 0x9fc; // float
		constexpr auto CrouchAimMovingPauseTime = 0xa00; // float
		constexpr auto ProneRelaxedPauseTime = 0xa04; // float
		constexpr auto ProneRelaxedMovingPauseTime = 0xa08; // float
		constexpr auto ProneReadyPauseTime = 0xa0c; // float
		constexpr auto ProneReadyMovingPauseTime = 0xa10; // float
		constexpr auto ProneBattlePauseTime = 0xa14; // float
		constexpr auto ProneBattleMovingPauseTime = 0xa18; // float
		constexpr auto ProneAimPauseTime = 0xa1c; // float
		constexpr auto ProneAimMovingPauseTime = 0xa20; // float
		constexpr auto FallingPauseTime = 0xa24; // float
		constexpr auto LandPredictionPauseTime = 0xa28; // float
		constexpr auto FallingBattlePauseTime = 0xa2c; // float
		constexpr auto LandPredictionBattlePauseTime = 0xa30; // float
		constexpr auto VaultLowPauseTime = 0xa34; // float
		constexpr auto VaultHighPauseTime = 0xa38; // float
		constexpr auto GetUpDefaultPauseTime = 0xa3c; // float
		constexpr auto GetUpInjuredPauseTime = 0xa40; // float
		constexpr auto VehicleBoardingPauseTime = 0xa44; // float
		constexpr auto OnVehiclePauseTime = 0xa48; // float
		constexpr auto OnVehicleBattlePauseTime = 0xa4c; // float
		constexpr auto OnHellicopterBattlePauseTime = 0xa50; // float
		constexpr auto VehicleRelaxedPauseTime = 0xa54; // float
		constexpr auto VehicleBattlePauseTime = 0xa58; // float
		constexpr auto EqualBattleStance_Relaxed = 0xa5c; // char : 1
		constexpr auto EqualBattleStance_Ready = 0xa5c; // char : 1
		constexpr auto EqualBattleStance_Directed = 0xa5c; // char : 1
		constexpr auto EqualBattleStance_Aiming = 0xa5c; // char : 1
		constexpr auto EqualOrMoreBattleStance_Relaxed = 0xa5c; // char : 1
		constexpr auto EqualOrMoreBattleStance_Ready = 0xa5c; // char : 1
		constexpr auto EqualOrMoreBattleStance_Directed = 0xa5c; // char : 1
		constexpr auto EqualOrMoreBattleStance_Aiming = 0xa5c; // char : 1
		constexpr auto EqualOrLessBattleStance_Relaxed = 0xa5d; // char : 1
		constexpr auto EqualOrLessBattleStance_Ready = 0xa5d; // char : 1
		constexpr auto EqualOrLessBattleStance_Directed = 0xa5d; // char : 1
		constexpr auto EqualOrLessBattleStance_Aiming = 0xa5d; // char : 1
		constexpr auto EqualOrMoreBattleStance_Drected_OnVehicle = 0xa5d; // char : 1
		constexpr auto EqualOverlayState_Default = 0xa5d; // char : 1
		constexpr auto EqualOverlayState_Rifle = 0xa5d; // char : 1
		constexpr auto EqualOverlayState_HandGun1H = 0xa5d; // char : 1
		constexpr auto EqualOverlayState_HandGun2H = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_Melee1H = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_Melee2H = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_Item1H = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_Item2H = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_VehicleWeapon = 0xa5e; // char : 1
		constexpr auto EqualOverlayState_NotLayering = 0xa5e; // char : 1
		constexpr auto NotOverlayState_Default = 0xa5e; // char : 1
		constexpr auto NotOverlayState_Rifle = 0xa5f; // char : 1
		constexpr auto NotOverlayState_HandGun1H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_HandGun2H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_Melee1H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_Melee2H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_Item1H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_Item2H = 0xa5f; // char : 1
		constexpr auto NotOverlayState_VehicleWeapon = 0xa5f; // char : 1
		constexpr auto NotOverlayState_NotLayering = 0xa60; // char : 1
		constexpr auto UseOverlayState = 0xa60; // char : 1
		constexpr auto LaddAnimSet = 0xa68; // FCLSLadderAnimSet
		constexpr auto CLSTest_UseMovingAnimationOnSlope = 0xb58; // char : 1
		constexpr auto HoldBreathUpTime = 0xb5c; // float
		constexpr auto HoldBreathDownTime = 0xb60; // float
		constexpr auto PrevVehicleLeanAmmount = 0xb64; // FCLSLeanAmount
	}

	namespace n_UCrowCharacterAnimNotify_GasMask {
		constexpr auto NotifyType = 0x38; // ECrowCharacterGasMaskNotifyType
	}

	namespace n_UCrowBattleInventoryLoot {
		constexpr auto SlotWidget = 0x368; // UUserWidget*
		constexpr auto ItemToolTipWidget = 0x370; // UUserWidget*
		constexpr auto CloseDistance = 0x378; // float
		constexpr auto WB_BackPackInfo = 0x380; // UCrowBackPackInfoWidget*
		constexpr auto SCB_LootingSlotWidget = 0x388; // UScrollBox*
		constexpr auto ItemPanel = 0x390; // UCanvasPanel*
		constexpr auto WB_HelmetSlot = 0x398; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_ArmorSlot = 0x3a0; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_BackPackSlot = 0x3a8; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto WB_KitSlot = 0x3b0; // UCrowInvenWeaponListSubItemWidget*
		constexpr auto TB_InvenType = 0x3b8; // UTextBlock*
		constexpr auto InvenComponent = 0x3c0; // UCrowGameInvenComponent*
		constexpr auto ItemInfoWidget = 0x3c8; // UCrowLootInvenItemInfo*
		constexpr auto CurrArmorItem = 0x3d0; // ACrowItemBase*
		constexpr auto CurrHelmetItem = 0x3d8; // ACrowItemBase*
		constexpr auto CurrBackPackItem = 0x3e0; // ACrowItemBase*
		constexpr auto CurrKitItem = 0x3e8; // ACrowItemBase*
		constexpr auto CurrentItem = 0x3f0; // ACrowItemBase*
		constexpr auto CurrentPickupInven = 0x3f8; // ACrowPickupInventory*
		constexpr auto CurrentCount = 0x400; // int32_t
		constexpr auto PickupInvenIndex = 0x404; // int32_t
		constexpr auto CurrentMousePosition = 0x408; // FVector2D
	}

	namespace n_ULineSetComponent {
		constexpr auto LineMaterial = 0x468; // UMaterialInterface*
		constexpr auto Bounds = 0x470; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x48c; // bool
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UCrowWeaponPartsPistolGrip {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsPistolGripTableRow
		constexpr auto DefaultPartsData = 0x628; // FCrowWeaponPartsPistolGripTableRow
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UCrowActorComponentBase {
		constexpr auto OwnerContainer = 0xb0; // UCrowComponentContainer*
		constexpr auto CrowComponentOwnerActor = 0xb8; // AActor*
	}

	namespace n_ACrowBuildingEditorNode {
		constexpr auto LinkRoot = 0x228; // USceneComponent*
		constexpr auto NodeIndex = 0x230; // char
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ACrowDynamicFoliageSetup {
		constexpr auto FoliageManager = 0x220; // UCrowDynamicFoliageManager*
		constexpr auto bDebug = 0x228; // bool
	}

	namespace n_URemeshMeshToolProperties {
		constexpr auto TargetTriangleCount = 0x70; // int32_t
		constexpr auto SmoothingType = 0x74; // ERemeshSmoothingType
		constexpr auto bDiscardAttributes = 0x75; // bool
		constexpr auto bShowWireframe = 0x76; // bool
		constexpr auto bShowGroupColors = 0x77; // bool
		constexpr auto RemeshType = 0x78; // ERemeshType
		constexpr auto RemeshIterations = 0x7c; // int32_t
		constexpr auto bUseTargetEdgeLength = 0x80; // bool
		constexpr auto TargetEdgeLength = 0x84; // float
		constexpr auto bReproject = 0x88; // bool
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UCrowBattleHUDWeaponState {
		constexpr auto TextVehicleSpeed = 0x260; // UTextBlock*
	}

	namespace n_URemeshMeshTool {
		constexpr auto BasicProperties = 0x98; // URemeshMeshToolProperties*
		constexpr auto MeshStatisticsProperties = 0xa0; // UMeshStatisticsProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UCrowTutorialInventoryWidget {
		constexpr auto IMG_Key_2 = 0x348; // UImage*
		constexpr auto IMG_Key_3 = 0x350; // UImage*
		constexpr auto CP_PlusPanel = 0x358; // UCanvasPanel*
		constexpr auto TB_Tutorial_Desc = 0x360; // UTextBlock*
		constexpr auto KeyImageList = 0x368; // TArray<UTexture2D*>
		constexpr auto MouseKeyImageList = 0x378; // TArray<UTexture2D*>
	}

	namespace n_UCrowModInfoButtonWidget {
		constexpr auto IMG_World = 0x348; // UImage*
		constexpr auto TB_ModeName = 0x350; // UTextBlock*
		constexpr auto TB_WorldName = 0x358; // UTextBlock*
		constexpr auto BT_ModInfoButton = 0x360; // UCrowButton*
		constexpr auto IMG_Icon = 0x368; // UImage*
		constexpr auto CP_Lock = 0x370; // UCanvasPanel*
		constexpr auto IsLocked = 0x378; // bool
	}

	namespace n_UCrowMissionAlarmWidget {
		constexpr auto TXT_MissionAlarm = 0x348; // UTextBlock*
		constexpr auto WidgetAnimation = 0x350; // UWidgetAnimation*
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_ACrowGameHUD_TG {
		constexpr auto MainWidgetClassTrainning = 0x5f0; // UCrowHUDWidgetTrainning*
		constexpr auto MainWidgetTrainning = 0x5f8; // UCrowHUDWidgetTrainning*
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UCrowWorldSMC {
		constexpr auto LayoutItemIndex = 0x4e8; // int16_t
		constexpr auto bDestroyByShockwave = 0x4ea; // char : 1
		constexpr auto bDestroyOnThrowWeaponHit = 0x4ea; // char : 1
		constexpr auto bDestroyOnCharacterAnimation = 0x4ea; // char : 1
		constexpr auto bSlideOnBeginVaultAction = 0x4ea; // char : 1
		constexpr auto bIgnoreCharacterInteraction = 0x4ea; // char : 1
		constexpr auto bBlockCharacterMoveThrough = 0x4ea; // char : 1
		constexpr auto bPreventAttachChild = 0x4ea; // char : 1
		constexpr auto bDestroyAttachChildOnExplosion = 0x4ea; // char : 1
		constexpr auto bDestroyAttachChildOnImpactCollapse = 0x4eb; // char : 1
		constexpr auto DecalScaleMultiply = 0x4ec; // float
		constexpr auto ShakingState = 0x4f0; // FCrowWorldSMCShakingState
		constexpr auto VirtualChildren = 0x580; // TMap<USceneComponent*, FTransform>
	}

	namespace n_UCrowCategorySlotBigWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto BT_Slot = 0x350; // UCrowButton*
		constexpr auto TB_Name = 0x358; // UTextBlock*
		constexpr auto IMG_Used = 0x360; // UImage*
		constexpr auto IMG_New = 0x368; // UImage*
		constexpr auto SlotName = 0x380; // FText
		constexpr auto ItemCategoryType = 0x398; // ECrowItemType
		constexpr auto WeaponCategoryType = 0x399; // ECrowWeaponUIType
		constexpr auto WeaponAccCategoryType = 0x39a; // ECrowWeaponAccType
		constexpr auto AppearanceCategoryType = 0x39b; // ECrowCharacterAppearanceType
		constexpr auto TBName_Seleted = 0x3a0; // UTextBlock*
		constexpr auto Selected = 0x3a8; // bool
		constexpr auto Used = 0x3a9; // bool
	}

	namespace n_ACrowInDoorTriggerVolume {
		constexpr auto Group = 0x258; // int32_t
		constexpr auto Order = 0x25c; // int32_t
		constexpr auto MinimapImage = 0x260; // UTexture2D*
	}

	namespace n_UCrowCustomizeWeaponNumSlotList {
		constexpr auto HB_Buttons = 0x348; // UHorizontalBox*
		constexpr auto ButtonList = 0x350; // TArray<UCrowCustomizeWeaponNumSlotWidget*>
		constexpr auto SceneLobby = 0x360; // ACrowSceneLobby*
		constexpr auto SceneGame = 0x368; // ACrowSceneGame*
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UCrowLobbyCharacterAnimInstance {
		constexpr auto AnimLobbyIdle = 0x2b8; // EAnimLobbyIdle
		constexpr auto LeftHandIK = 0x2c0; // FTransform
		constexpr auto RightHandIK = 0x2f0; // FTransform
		constexpr auto Enable_GripIK_L = 0x320; // float
		constexpr auto Enable_GripIK_R = 0x324; // float
		constexpr auto GripIKLFindPriorityIndex = 0x328; // int32_t
		constexpr auto Enable_HandIK_L = 0x32c; // float
		constexpr auto Enable_HandIK_R = 0x330; // float
		constexpr auto Enable_TargetIK_L = 0x334; // float
		constexpr auto Enable_TargetIK_R = 0x338; // float
		constexpr auto Enable_GripPose_L = 0x33c; // float
		constexpr auto Enable_GripPose_R = 0x340; // float
		constexpr auto GripPose = 0x348; // FCLSGripPose
		constexpr auto CharacterOwner = 0x358; // ACrowLobbyCharacterPawn*
		constexpr auto CurrentAnimeSequence = 0x360; // UAnimSequenceBase*
	}

	namespace n_UCrowResultRewardSlotWidget {
		constexpr auto IMG_BattleRewardIcon = 0x348; // UImage*
		constexpr auto TB_Name = 0x350; // UTextBlock*
		constexpr auto TB_Exp = 0x358; // UTextBlock*
		constexpr auto CP_BattleRewardBonus = 0x360; // UCanvasPanel*
		constexpr auto TB_BuffRate = 0x368; // UTextBlock*
		constexpr auto SlotName = 0x370; // FText
		constexpr auto RewardIconSprite = 0x388; // UPaperSprite*
		constexpr auto AniShow = 0x390; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_USecondarySmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_ABP_GBU31_Explosion_C {
		constexpr auto ParticleSystem = 0x220; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x228; // USceneComponent*
	}

	namespace n_UWB_CrowWeaponCrosshairMelee_C {
		constexpr auto b_Crosshair = 0x3a0; // UBorder*
		constexpr auto ImageCenter = 0x3a8; // UImage*
		constexpr auto ImageCenterBorder = 0x3b0; // UImage*
		constexpr auto ImageDown = 0x3b8; // UImage*
		constexpr auto ImageDownBorder = 0x3c0; // UImage*
		constexpr auto ImageLeft = 0x3c8; // UImage*
		constexpr auto ImageLeftBorder = 0x3d0; // UImage*
		constexpr auto ImageRight = 0x3d8; // UImage*
		constexpr auto ImageRightBorder = 0x3e0; // UImage*
		constexpr auto ImageUp = 0x3e8; // UImage*
		constexpr auto ImageUpBorder = 0x3f0; // UImage*
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UAkWindowsInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UCrowFaceTableManager {
		constexpr auto FaceData_I = 0x28; // TMap<uint32_t, FCrowFaceTableBaseRow>
		constexpr auto FaceData_S = 0x78; // TMap<FString, FCrowFaceTableBaseRow>
	}

	namespace n_UCrowLobbyIndicatorWidget {
		constexpr auto TB_NickName = 0x348; // UTextBlock*
		constexpr auto HB_Leader = 0x350; // UHorizontalBox*
		constexpr auto WS_Status = 0x358; // UWidgetSwitcher*
		constexpr auto IMG_LeaderIcon = 0x360; // UImage*
		constexpr auto IMG_NotReadyIcon = 0x368; // UImage*
		constexpr auto IMG_Offline = 0x370; // UImage*
		constexpr auto IMG_ReadyIcon = 0x378; // UImage*
		constexpr auto IMG_PlayingIcon = 0x380; // UImage*
		constexpr auto WS_Voice = 0x388; // UWidgetSwitcher*
		constexpr auto IMG_RankIcon = 0x390; // UImage*
		constexpr auto MemberServerKey = 0x398; // uint64_t
		constexpr auto VivoxManager = 0x3a8; // UCrowVivoxManager*
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_UOculusMR_State {
		constexpr auto TrackedCamera = 0x28; // FTrackedCamera
		constexpr auto TrackingReferenceComponent = 0xa0; // USceneComponent*
		constexpr auto ScalingFactor = 0xa8; // double
		constexpr auto ChangeCameraStateRequested = 0xb4; // bool
		constexpr auto BindToTrackedCameraIndexRequested = 0xb5; // bool
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UCrowSquadWidgetItem {
		constexpr auto ColorHPGaugeNormal = 0x348; // FLinearColor
		constexpr auto ColorHPGaugeInjured = 0x358; // FLinearColor
		constexpr auto ColorHPGaugeDead = 0x368; // FLinearColor
		constexpr auto DeadPlayerAlpha = 0x378; // float
		constexpr auto RootCanvas = 0x380; // UCanvasPanel*
		constexpr auto CP_MemberIndexIcon = 0x388; // UCanvasPanel*
		constexpr auto RoleSwitcher = 0x390; // UWidgetSwitcher*
		constexpr auto LeaderCanvas = 0x398; // UCanvasPanel*
		constexpr auto MemberCanvas = 0x3a0; // UCanvasPanel*
		constexpr auto DyingCanvas = 0x3a8; // UCanvasPanel*
		constexpr auto DeadCanvas = 0x3b0; // UCanvasPanel*
		constexpr auto NickNameText = 0x3b8; // UTextBlock*
		constexpr auto VoiceSwitcher = 0x3c0; // UWidgetSwitcher*
		constexpr auto WS_HPStatus = 0x3c8; // UWidgetSwitcher*
		constexpr auto HPProgressBar = 0x3d0; // UProgressBar*
		constexpr auto PB_ZombieHPBar = 0x3d8; // UProgressBar*
		constexpr auto PB_ZetaHPBar = 0x3e0; // UProgressBar*
		constexpr auto StateSwitcher = 0x3e8; // UWidgetSwitcher*
		constexpr auto IMG_Icon_SquadLeader = 0x3f0; // UImage*
		constexpr auto IMG_Squad_Color = 0x3f8; // UImage*
		constexpr auto IMG_SquadLeader = 0x400; // UImage*
		constexpr auto IMG_RankIcon = 0x408; // UImage*
		constexpr auto TB_Index = 0x410; // UTextBlock*
		constexpr auto PB_HelmetBar = 0x418; // UProgressBar*
		constexpr auto PB_ArmorBar = 0x420; // UProgressBar*
		constexpr auto VivoxManager = 0x440; // UCrowVivoxManager*
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UWB_CrowWeaponCrosshairRifle_C {
		constexpr auto b_Crosshair = 0x3a0; // UBorder*
		constexpr auto ImageCenter = 0x3a8; // UImage*
		constexpr auto ImageCenterBorder = 0x3b0; // UImage*
		constexpr auto ImageDown = 0x3b8; // UImage*
		constexpr auto ImageDownBorder = 0x3c0; // UImage*
		constexpr auto ImageLeft = 0x3c8; // UImage*
		constexpr auto ImageLeftBorder = 0x3d0; // UImage*
		constexpr auto ImageRight = 0x3d8; // UImage*
		constexpr auto ImageRightBorder = 0x3e0; // UImage*
		constexpr auto ImageUp = 0x3e8; // UImage*
		constexpr auto ImageUpBorder = 0x3f0; // UImage*
	}

	namespace n_UExtractCollisionGeometryTool {
		constexpr auto VizSettings = 0x88; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectProps = 0x90; // UPhysicsObjectToolPropertySet*
		constexpr auto PreviewElements = 0x98; // UPreviewGeometry*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x468; // UGeometryCache*
		constexpr auto bRunning = 0x470; // bool
		constexpr auto bLooping = 0x471; // bool
		constexpr auto StartTimeOffset = 0x474; // float
		constexpr auto PlaybackSpeed = 0x478; // float
		constexpr auto NumTracks = 0x47c; // int32_t
		constexpr auto ElapsedTime = 0x480; // float
		constexpr auto Duration = 0x4b4; // float
		constexpr auto bManualTick = 0x4b8; // bool
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_USteamVRTrackingReferences {
		constexpr auto OnTrackedDeviceActivated = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnTrackedDeviceDeactivated = 0xc0; // FMulticastInlineDelegate
		constexpr auto ActiveDevicePollFrequency = 0xd0; // float
		constexpr auto TrackingReferenceScale = 0xd4; // FVector
		constexpr auto TrackingReferences = 0xe0; // TArray<UStaticMeshComponent*>
	}

	namespace n_UCrowZombieEnergyGaugeWidget {
		constexpr auto PB_Gauge = 0x348; // UProgressBar*
		constexpr auto CP_Tutorial_Heal = 0x350; // UCanvasPanel*
		constexpr auto AniHeartBeat = 0x358; // UWidgetAnimation*
		constexpr auto HeartBeatInfoArray = 0x360; // TArray<FCrowZombieHeartBeatInfo>
	}

	namespace n_UCrowWorldAssetStaticMesh {
		constexpr auto StaticMesh = 0x28; // TSoftObjectPtr<UStaticMesh>
		constexpr auto MaterialOverrides = 0x50; // TArray<TSoftObjectPtr<UMaterialInterface>>
		constexpr auto LoadedMesh = 0x60; // UStaticMesh*
		constexpr auto LoadedMaterials = 0x68; // TArray<UMaterialInterface*>
	}

	namespace n_ACrowBuildingEditorRoot {
		constexpr auto bHideInGame = 0x238; // char : 1
		constexpr auto bHideAfterCreating = 0x238; // char : 1
		constexpr auto bHideInformation = 0x238; // char : 1
		constexpr auto CachedLayout = 0x240; // FCrowBuildingEditorLayout
		constexpr auto CachedParts = 0x290; // TMap<int16_t, TWeakObjectPtr<ACrowBuildingEditorPartsActor>>
		constexpr auto EditorHelper = 0x2e0; // UCrowBuildingEditorHelper*
		constexpr auto TextRender = 0x2e8; // UTextRenderComponent*
		constexpr auto SphereMesh = 0x2f0; // UStaticMeshComponent*
		constexpr auto DemolitionSetting = 0x2f8; // FCrowBuildingDemolitionSetting
		constexpr auto LODBodyAsset = 0x368; // UStaticMesh*
		constexpr auto LODExtraAsset = 0x370; // UStaticMesh*
		constexpr auto SkipLODExtraMesh = 0x378; // bool
		constexpr auto bIsIndestructible = 0x379; // bool
		constexpr auto MaxHealth = 0x37c; // float
		constexpr auto LightProbeRatioMultiplier = 0x380; // float
		constexpr auto bForceMoveToBldLevel = 0x384; // bool
		constexpr auto ClusterSyncActor = 0x385; // bool
		constexpr auto DamageChecker = 0x388; // UCrowWorldDamageCheckerBase*
		constexpr auto DestructionAUD = 0x390; // UCrowWorldDestructionAUD*
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_ACrowSupplyTablet {
		constexpr auto SkeletalMesh = 0x1eb8; // USkeletalMeshComponent*
		constexpr auto WidgetComp = 0x1ec0; // UWidgetComponent*
		constexpr auto Mat_1P = 0x1ec8; // UMaterialInstance*
		constexpr auto Mat_3P = 0x1ed0; // UMaterialInstance*
		constexpr auto WidgetMat_1P = 0x1ed8; // UMaterialInstance*
		constexpr auto WidgetMat_3P = 0x1ee0; // UMaterialInstance*
	}

	namespace n_UGroomCreateStrandsTexturesOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto TraceType = 0x2c; // EStrandsTexturesTraceType
		constexpr auto TraceDistance = 0x30; // float
		constexpr auto MeshType = 0x34; // EStrandsTexturesMeshType
		constexpr auto StaticMesh = 0x38; // UStaticMesh*
		constexpr auto SkeletalMesh = 0x40; // USkeletalMesh*
		constexpr auto LODIndex = 0x48; // int32_t
		constexpr auto SectionIndex = 0x4c; // int32_t
		constexpr auto UVChannelIndex = 0x50; // int32_t
		constexpr auto GroupIndex = 0x58; // TArray<int32_t>
	}

	namespace n_UCrowInputBase {
		constexpr auto BindObject = 0x138; // UObject*
	}

	namespace n_UCrowLevelSequencePlayer {
		constexpr auto LevelSequenceActor = 0x38; // ALevelSequenceActor*
	}

	namespace n_UOculusSceneCaptureCubemap {
		constexpr auto CaptureComponents = 0x38; // TArray<USceneCaptureComponent2D*>
	}

	namespace n_ABP_Grenade_M18Ammo_C {
		constexpr auto Sphere = 0x1910; // USphereComponent*
		constexpr auto SK_G67_02 = 0x1918; // USkeletalMeshComponent*
		constexpr auto DynamicRicochet_Trail_Generic_thin = 0x1920; // UParticleSystemComponent*
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9ec; // float
		constexpr auto MulticastRecordOptions = 0xa10; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa20; // bool
		constexpr auto SpectatorControllers = 0xa28; // TArray<APlayerController*>
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto errorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_AWaterBodyExclusionVolume {
		constexpr auto bIgnoreAllOverlappingWaterBodies = 0x268; // bool
		constexpr auto WaterBodiesToIgnore = 0x270; // TArray<AWaterBody*>
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UCrowWorldAnimator {
		constexpr auto IsInitialized = 0x28; // char : 1
		constexpr auto TriggersEnabled = 0x28; // char : 1
		constexpr auto MapConfig = 0x30; // UCrowWorldMapConfig*
		constexpr auto WorldActor = 0x38; // ACrowWorldActor*
		constexpr auto IsAnimationBlocked = 0x40; // bool
		constexpr auto AnimationDatas = 0x48; // TArray<FCrowWorldLayoutItemAnimation>
		constexpr auto AnimationInstances = 0x58; // TArray<FCrowWorldAnimationInstance>
		constexpr auto ActiveAnimationStates = 0x68; // TArray<FCrowWorldAnimationState>
		constexpr auto ShakingSMCArray = 0x78; // TArray<UCrowWorldSMC*>
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UCrowLobbyRecordManager {
		constexpr auto UserProfileList = 0x28; // TMap<FString, FCrowLobbyProfileRecord>
		constexpr auto MyRankRecords = 0x78; // TMap<int32_t, FCrowLobbyRankRecord>
		constexpr auto MyFavoriteWeaponRecord = 0xc8; // FCrowLobbyWeaponRecord
		constexpr auto MyWeaponRecords = 0x118; // TArray<FCrowLobbyWeaponRecord>
		constexpr auto RankRecordList = 0x128; // TMap<int32_t, FCrowLobbyRankRecords>
		constexpr auto ProfileRecordWidget = 0x178; // UCrowWidgetBase*
		constexpr auto MyFavoriteWeaponRecordWidget = 0x180; // UCrowWidgetBase*
		constexpr auto MyWeaponRecordsWidget = 0x188; // UCrowWidgetBase*
		constexpr auto MyRankRecordsWidget = 0x190; // UCrowWidgetBase*
		constexpr auto RankRecordsWidget = 0x198; // UCrowWidgetBase*
		constexpr auto DefaultLobbyProfileRecord = 0x1a0; // FCrowLobbyProfileRecord
		constexpr auto DefaultLobbyRankRecord = 0x238; // FCrowLobbyRankRecord
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UWB_Crosshair_Mh6_Flare_TP_C {
		constexpr auto IMG_ZoomIn_2 = 0x460; // UImage*
		constexpr auto IMG_ZoomIn_4 = 0x468; // UImage*
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x51; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x58; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto SplitSwitchContainerMedia = 0xa8; // bool
		constexpr auto SplitMediaPerFolder = 0xa9; // bool
		constexpr auto UseEventBasedPackaging = 0xaa; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0xab; // bool
		constexpr auto CommandletCommitMessage = 0xb0; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0xc0; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x110; // bool
		constexpr auto bEnableMultiCoreRendering = 0x111; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x112; // bool
		constexpr auto FixupRedirectorsDuringMigration = 0x113; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x118; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x128; // FFilePath
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UDeformMeshPolygonsTransformProperties {
		constexpr auto DeformationStrategy = 0x60; // EGroupTopologyDeformationStrategy
		constexpr auto TransformMode = 0x61; // EQuickTransformerMode
		constexpr auto bSelectFaces = 0x62; // bool
		constexpr auto bSelectEdges = 0x63; // bool
		constexpr auto bSelectVertices = 0x64; // bool
		constexpr auto bSnapToWorldGrid = 0x65; // bool
		constexpr auto bShowWireframe = 0x66; // bool
		constexpr auto SelectedWeightScheme = 0x68; // EWeightScheme
		constexpr auto HandleWeight = 0x70; // double
		constexpr auto bPostFixHandles = 0x78; // bool
	}

	namespace n_UCrowLootInvenItemInfo {
		constexpr auto LootItemInfo = 0x348; // UCrowItemInfoWidget*
		constexpr auto MyItemInfo = 0x350; // UCrowItemInfoWidget*
	}

	namespace n_UCrowMissionRewardSlotWidget {
		constexpr auto TB_Exp = 0x348; // UTextBlock*
	}

	namespace n_UCrowReplayWidget {
		constexpr auto ItemWidgetClass = 0x348; // UUserWidget*
		constexpr auto BT_Play = 0x350; // UCrowButton*
		constexpr auto BT_Lock = 0x358; // UCrowButton*
		constexpr auto BT_Delete = 0x360; // UCrowButton*
		constexpr auto BT_Refresh = 0x368; // UCrowButton*
		constexpr auto CP_ReplayDesc = 0x370; // UCanvasPanel*
		constexpr auto TB_CurrentNumReplay = 0x378; // UTextBlock*
		constexpr auto TB_MaxNumReplay = 0x380; // UTextBlock*
		constexpr auto TB_TotalTime = 0x388; // UTextBlock*
		constexpr auto TB_Lock = 0x390; // UTextBlock*
		constexpr auto IMG_Map = 0x398; // UImage*
		constexpr auto TB_MapName = 0x3a0; // UTextBlock*
		constexpr auto TB_MapMode = 0x3a8; // UTextBlock*
		constexpr auto TB_TotalCapacity = 0x3b0; // UTextBlock*
		constexpr auto SB_ReplayList = 0x3b8; // UScrollBox*
		constexpr auto SquadFirst = 0x3c0; // UHorizontalBox*
		constexpr auto SquadSecond = 0x3c8; // UHorizontalBox*
		constexpr auto SquadThird = 0x3d0; // UHorizontalBox*
		constexpr auto SquadFourth = 0x3d8; // UHorizontalBox*
		constexpr auto WB_Button_Sorting_Date = 0x3e0; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_Mode = 0x3e8; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_PlayTime = 0x3f0; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_Capacity = 0x3f8; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_GamerVer = 0x400; // UCrowSortButtonWidget*
		constexpr auto WB_Button_Sorting_Playable = 0x408; // UCrowSortButtonWidget*
		constexpr auto TB_SquadName_First = 0x410; // UTextBlock*
		constexpr auto TB_SquadName_Second = 0x418; // UTextBlock*
		constexpr auto TB_SquadName_Third = 0x420; // UTextBlock*
		constexpr auto TB_SquadName_Fourth = 0x428; // UTextBlock*
		constexpr auto SquadBoxList = 0x430; // TArray<UHorizontalBox*>
		constexpr auto SquadNameList = 0x440; // TArray<UTextBlock*>
		constexpr auto ReplayInfoList = 0x450; // TArray<UCrowReplayInfo*>
		constexpr auto SortButtonList = 0x460; // TArray<UCrowSortButtonWidget*>
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UCrowSoundRandomLoopingPlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bRandomizeStartTime = 0x78; // char : 1
		constexpr auto StartTimeMin = 0x7c; // float
		constexpr auto StartTimeMax = 0x80; // float
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UFlattenBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UCrowIndicatorClaymoreMine {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CP_Icon = 0x358; // UCanvasPanel*
		constexpr auto IMG_Icon = 0x360; // UImage*
		constexpr auto InstalledPawn = 0x368; // APawn*
		constexpr auto InstalledPawnPlayerID = 0x370; // uint32_t
		constexpr auto InstalledPawnTeamID = 0x374; // char
	}

	namespace n_UCrowVehiclePreHUDCameraCover {
		constexpr auto CameraCoverImage = 0x348; // UImage*
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x690; // char : 1
		constexpr auto FractureEffects = 0x698; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6a8; // bool
		constexpr auto LargeChunkThreshold = 0x6ac; // float
		constexpr auto OnComponentFracture = 0x6c0; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UCrowMissionCategoryWidget {
		constexpr auto MissionSlotWidget = 0x348; // UCrowMissionSlotWidget*
		constexpr auto TB_CategoryName = 0x350; // UTextBlock*
		constexpr auto VB_CategoryContents = 0x358; // UVerticalBox*
		constexpr auto CurrMissionModeType = 0x360; // char
		constexpr auto IsBG = 0x361; // bool
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UMeshStatisticsProperties {
		constexpr auto Mesh = 0x60; // FString
		constexpr auto UV = 0x70; // FString
		constexpr auto Attributes = 0x80; // FString
	}

	namespace n_UCrowSettingsWidget {
		constexpr auto CategoryContentsWidgetClass = 0x388; // UCrowSettingsCategoryContentsWidget*
		constexpr auto WB_SettingsTab = 0x390; // UCrowSettingsTabWidget*
		constexpr auto SB_SettingsDatas = 0x398; // UScrollBox*
		constexpr auto VB_SettingsDatas = 0x3a0; // UVerticalBox*
		constexpr auto BT_Default = 0x3a8; // UCrowButton*
		constexpr auto BT_ResetAll = 0x3b0; // UCrowButton*
		constexpr auto BT_Apply = 0x3b8; // UCrowButton*
		constexpr auto BT_ESC = 0x3c0; // UCrowButton*
		constexpr auto BT_EditingMode = 0x3c8; // UButton*
		constexpr auto WB_SettingsPopup = 0x3d0; // UCrowSettingsPopupWidget*
		constexpr auto WB_SettingsExplanation = 0x3d8; // UCrowSettingsExplanationWidget*
		constexpr auto HB_Icon_GRAC = 0x3e0; // UHorizontalBox*
		constexpr auto Categories = 0x3e8; // TArray<UCrowSettingsCategoryContentsWidget*>
		constexpr auto EditingActionSlot = 0x3f8; // FActionKeySlot
		constexpr auto EditingAxisSlot = 0x428; // FAxisKeySlot
		constexpr auto EditingDropdownSlotItemUniqueName = 0x460; // FString
	}

	namespace n_ACrowProjectileHeliFlare {
		constexpr auto ProjectileDir = 0x18d0; // FVector
		constexpr auto TracerFX_1P = 0x18e0; // UParticleSystem*
		constexpr auto TracerFX_3P = 0x18e8; // UParticleSystem*
		constexpr auto TracerFXComp_1P = 0x18f0; // UParticleSystemComponent*
		constexpr auto TracerFXComp_3P = 0x18f8; // UParticleSystemComponent*
		constexpr auto SmokeEffect = 0x1900; // UParticleSystem*
		constexpr auto ExplosionSound = 0x1908; // UAkAudioEvent*
		constexpr auto RandRangeSpeedMin = 0x1910; // float
		constexpr auto RandRangeSpeedMax = 0x1914; // float
		constexpr auto ImpedimentsActorClass = 0x1918; // AActor*
		constexpr auto ImpedimentsActor = 0x1920; // AActor*
		constexpr auto AddValue = 0x1928; // float
		constexpr auto PrevVelocity = 0x192c; // FVector
		constexpr auto ReduceValue = 0x1938; // float
	}

	namespace n_ABP_CrowWeaponPartsLasersight_uzi001_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto UZI001_LasersightSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCrowTimeSync {
		constexpr auto ElapsedTime = 0xb0; // float
		constexpr auto bIsActiveTimer = 0xb4; // bool
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UNiagaraDataInterfaceWater {
		constexpr auto SourceBody = 0x38; // AWaterBody*
	}

	namespace n_UCrowWorldAssetSpotLight {
		constexpr auto SpotLightData = 0x28; // USpotLightComponent*
	}

	namespace n_UUPSGroupMovementManager {
		constexpr auto MovementGroups = 0x28; // TSet<TWeakObjectPtr<AUPSMovementGroup>>
	}

	namespace n_UCrowSettingsPopupWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto TB_Message = 0x350; // UTextBlock*
		constexpr auto BT_Close = 0x358; // UCrowButton*
		constexpr auto BT_Confirm = 0x360; // UCrowButton*
		constexpr auto BT_Cancel = 0x368; // UCrowButton*
	}

	namespace n_ABP_Grenade_M84Ammo_C {
		constexpr auto SK_G67_02 = 0x18f0; // USkeletalMeshComponent*
		constexpr auto DynamicRicochet_Trail_Generic_thin = 0x18f8; // UParticleSystemComponent*
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x1f8; // char : 1
		constexpr auto AcousticPolys = 0x200; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x210; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x210; // char : 1
		constexpr auto AssociatedRoom = 0x218; // AActor*
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_ACrowCloudRenderActor {
		constexpr auto CurveScale = 0x220; // UCurveVector*
		constexpr auto CurveLocation = 0x228; // UCurveVector*
		constexpr auto MaterialInstance = 0x230; // UMaterialInterface*
		constexpr auto SceneComp = 0x238; // USceneComponent*
		constexpr auto PreviewMesh = 0x240; // UStaticMeshComponent*
		constexpr auto PlaneMesh = 0x248; // UStaticMeshComponent*
		constexpr auto RenderTarget = 0x250; // UTextureRenderTarget2D*
		constexpr auto LocationAnimInfo = 0x258; // FCrowCloudAnimInfo
		constexpr auto ScaleAnimInfo = 0x26c; // FCrowCloudAnimInfo
		constexpr auto TM = 0x280; // FTransform
		constexpr auto Mid = 0x2b0; // UMaterialInstanceDynamic*
		constexpr auto bRendering = 0x2b8; // bool
	}

	namespace n_UCrowCustomizeWeaponNumSlotWidget {
		constexpr auto TB_Number = 0x348; // UTextBlock*
		constexpr auto IMG_Acc = 0x350; // UImage*
		constexpr auto IMG_Hover = 0x358; // UImage*
		constexpr auto IMG_Select = 0x360; // UImage*
		constexpr auto BT_Customize_WeaponAccNumberSlot = 0x368; // UCrowButton*
		constexpr auto WS_NumberEquip = 0x370; // UWidgetSwitcher*
		constexpr auto NormalTextColor = 0x3a8; // FLinearColor
		constexpr auto HoverTextColor = 0x3b8; // FLinearColor
		constexpr auto SlotInfo = 0x3c8; // FCrowWeaponStickerInfo
		constexpr auto bIsSelect = 0x3d0; // bool
	}

	namespace n_UCrowConquestAreaComponent {
		constexpr auto ParentConquestArea = 0x210; // ACrowConquestArea*
	}

	namespace n_UPolygonSelectionMechanic {
		constexpr auto Properties = 0x50; // UPolygonSelectionMechanicProperties*
		constexpr auto PreviewGeometryActor = 0x360; // APreviewGeometryActor*
		constexpr auto DrawnTriangleSetComponent = 0x368; // UTriangleSetComponent*
		constexpr auto HighlightedFaceMaterial = 0x3c0; // UMaterialInterface*
	}

	namespace n_UEdgeLoopInsertionTool {
		constexpr auto Settings = 0x98; // UEdgeLoopInsertionProperties*
		constexpr auto Preview = 0x300; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_AMagicLeapARPinRenderer {
		constexpr auto bInfoActorsVisibilityOverride = 0x220; // bool
		constexpr auto AllInfoActors = 0x228; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x280; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_ACrowSupplyEventParachuteActor {
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto Mesh = 0x230; // USkeletalMeshComponent*
	}

	namespace n_UCrowInGameMissionAlarmItem {
		constexpr auto IsComplateWidget = 0x348; // bool
		constexpr auto TB_MissionTitle = 0x350; // UTextBlock*
		constexpr auto TB_Count = 0x358; // UTextBlock*
		constexpr auto TB_WidgetTitle = 0x360; // UTextBlock*
		constexpr auto RemoveTime = 0x368; // float
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UProceduralPuncturedDiscToolProperties {
		constexpr auto HoleRadius = 0x80; // float
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UCrowCloudDamageHandler {
		constexpr auto LastDamagedTimeData = 0xb0; // TMap<int32_t, float>
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UCrowSettingsSlotTitleWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UCrowItemStatusDescWidget {
		constexpr auto TB_Item_Status = 0x348; // UTextBlock*
		constexpr auto TB_Status_Num = 0x350; // UTextBlock*
		constexpr auto WS_UpdownIcon = 0x358; // UWidgetSwitcher*
	}

	namespace n_UCrowVehicleEventDispatcher {
		constexpr auto EventSetup = 0xb0; // FVehicleEventSetup
		constexpr auto VehiclePawn = 0xe0; // ACrowVehiclePawn*
		constexpr auto EventList = 0xe8; // TArray<FVehicleEvent>
		constexpr auto SubEventList = 0xf8; // TArray<FVehicleEvent>
		constexpr auto EventListReplicated = 0x108; // TArray<FVehicleEventSync>
		constexpr auto SubEventListReplicated = 0x118; // TArray<FVehicleEventSync>
		constexpr auto bIsFirstPlayerOnBoardingFP = 0x128; // bool
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UCrowSettingsSlotDropdownSlot {
		constexpr auto OwnerSlotWidget = 0x348; // UCrowSettingsSlotDropdownWidget*
		constexpr auto BT_Dropdown = 0x350; // UCrowButton*
		constexpr auto WS_Select = 0x358; // UWidgetSwitcher*
		constexpr auto TB_SelectedText = 0x360; // UTextBlock*
		constexpr auto TB_DeselectedText = 0x368; // UTextBlock*
		constexpr auto Key = 0x370; // FString
		constexpr auto Index = 0x380; // uint32_t
	}

	namespace n_UCrowConquestMeteorExplosionPoint {
		constexpr auto Billboard = 0x1f8; // UBillboardComponent*
		constexpr auto IconScale = 0x200; // float
	}

	namespace n_UCrowWeaponPartsSlotDetailWidget {
		constexpr auto IMG_Default = 0x348; // UImage*
		constexpr auto IMG_Parts = 0x350; // UImage*
		constexpr auto WS_Parts = 0x358; // UWidgetSwitcher*
		constexpr auto BT_PartsSlotDetail = 0x360; // UCrowButton*
		constexpr auto DefaultSprite = 0x368; // UPaperSprite*
		constexpr auto OffsetType = 0x370; // ECrowOffSetType
	}

	namespace n_UWB_CrossHair_Landrover_Mount_Third_C {
		constexpr auto b_Crosshair = 0x450; // UBorder*
		constexpr auto ImageCenter = 0x458; // UImage*
		constexpr auto ImageCenterBorder = 0x460; // UImage*
		constexpr auto ImageDown = 0x468; // UImage*
		constexpr auto ImageDownBorder = 0x470; // UImage*
		constexpr auto ImageLeft = 0x478; // UImage*
		constexpr auto ImageLeftBorder = 0x480; // UImage*
		constexpr auto ImageRight = 0x488; // UImage*
		constexpr auto ImageRightBorder = 0x490; // UImage*
		constexpr auto ImageUp = 0x498; // UImage*
		constexpr auto ImageUpBorder = 0x4a0; // UImage*
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_USculptBrushProperties {
		constexpr auto Depth = 0x78; // float
		constexpr auto bHitBackFaces = 0x7c; // bool
		constexpr auto Lazyness = 0x80; // float
		constexpr auto bShowPerBrushProps = 0x84; // bool
	}

	namespace n_ACrowWorldEditorActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto SmallActor = 0x228; // bool
		constexpr auto StaticLargeActor = 0x229; // bool
		constexpr auto LandmarkActor = 0x22a; // bool
		constexpr auto LightProbeRatioMultiplier = 0x22c; // float
		constexpr auto ActorDestruction = 0x230; // FCrowWorldActorDestruction
		constexpr auto LODSettingOverride = 0x248; // UCrowWorldLODSetting*
		constexpr auto MeshLODArray = 0x250; // TArray<FCrowWorldActorMeshLOD>
		constexpr auto PreviewLOD = 0x260; // ECrowWorldEditorActorLOD
		constexpr auto CachedMapConfig = 0x268; // UCrowWorldMapConfig*
		constexpr auto DebugMeshLODArray = 0x270; // TArray<UStaticMeshComponent*>
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_UCrowSortButtonWidget {
		constexpr auto ButtonName = 0x358; // FText
		constexpr auto WS_Sorting = 0x370; // UWidgetSwitcher*
		constexpr auto TB_Base = 0x378; // UTextBlock*
		constexpr auto TB_Ascending = 0x380; // UTextBlock*
		constexpr auto TB_Descending = 0x388; // UTextBlock*
		constexpr auto BT_Base = 0x390; // UCrowButton*
		constexpr auto BT_Ascending = 0x398; // UCrowButton*
		constexpr auto BT_Descending = 0x3a0; // UCrowButton*
		constexpr auto ButtonList = 0x3a8; // TArray<UCrowButton*>
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UStandardSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_USmoothFillBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UWB_SettingsSlotSelection_C {
		constexpr auto IMG_BG = 0x388; // UImage*
		constexpr auto IMG_Next_Bg = 0x390; // UImage*
		constexpr auto IMG_Next_Icon = 0x398; // UImage*
		constexpr auto IMG_Prev_Bg = 0x3a0; // UImage*
		constexpr auto IMG_Prev_Icon = 0x3a8; // UImage*
	}

	namespace n_UCrowMatchingTimerWidget {
		constexpr auto TB_MOD_Name = 0x348; // UTextBlock*
		constexpr auto TB_Map_Name = 0x350; // UTextBlock*
		constexpr auto TB_Timer = 0x358; // UTextBlock*
		constexpr auto SP_Player = 0x360; // USpacer*
		constexpr auto TB_MatchingPlayer = 0x368; // UTextBlock*
		constexpr auto TB_Player = 0x370; // UTextBlock*
		constexpr auto BT_Cancel = 0x378; // UCrowButton*
		constexpr auto CP_MatchingMessage = 0x380; // UCanvasPanel*
		constexpr auto TB_Message = 0x388; // UTextBlock*
		constexpr auto AniMatchingTimerShow = 0x390; // UWidgetAnimation*
		constexpr auto SceneLobby = 0x398; // ACrowSceneLobby*
		constexpr auto OpenedWidget = 0x3a0; // bool
		constexpr auto SoloMatch = 0x3a1; // bool
		constexpr auto DurationTime = 0x3a4; // float
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UCrowWorldEventAlarmWidget {
		constexpr auto TB_Title = 0x348; // UTextBlock*
		constexpr auto TB_Desc = 0x350; // UTextBlock*
		constexpr auto IMG_Icon = 0x358; // UImage*
		constexpr auto AniShow = 0x360; // UWidgetAnimation*
		constexpr auto AniHide = 0x368; // UWidgetAnimation*
		constexpr auto WorldEventSetting = 0x370; // ACrowWorldEventSetting*
	}

	namespace n_UCrowScoreRankSlotModeData {
		constexpr auto Rank = 0x30; // uint32_t
		constexpr auto Class = 0x38; // FText
		constexpr auto ID = 0x50; // FString
		constexpr auto Score = 0x60; // uint32_t
		constexpr auto PlayTime = 0x68; // FString
		constexpr auto PlayCount = 0x78; // uint32_t
		constexpr auto AverageScore = 0x7c; // uint32_t
	}

	namespace n_UTransformMeshesTool {
		constexpr auto TransformProps = 0x98; // UTransformMeshesToolProperties*
		constexpr auto ActiveGizmos = 0xb0; // TArray<FTransformMeshesTarget>
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UCrowProjectileThrowIndicator {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_LocateArrow = 0x350; // UCanvasPanel*
		constexpr auto CP_Icon = 0x358; // UCanvasPanel*
		constexpr auto IMG_Icon = 0x360; // UImage*
		constexpr auto NearAnim = 0x368; // FName
		constexpr auto FarAnim = 0x370; // FName
		constexpr auto NearDist = 0x378; // float
		constexpr auto FarDist = 0x37c; // float
		constexpr auto OwnerActor = 0x380; // AActor*
	}

	namespace n_UWB_SystemMessageBox_Bottom_C {
		constexpr auto Image_75 = 0x368; // UImage*
	}

	namespace n_UCrowWorldSplineMetaComponent {
		constexpr auto PointMeta = 0xb0; // TMap<int32_t, FCrowWorldSplineLinkedPoint>
		constexpr auto SplineUID = 0x100; // FCrowWorldSplineUID
		constexpr auto LinkedSplineUIDs = 0x110; // TMap<int32_t, FCrowWorldSplineUID>
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UCrowCharacterDyingIconWidget {
		constexpr auto CP_DisconnectIcon = 0x3c8; // UCanvasPanel*
		constexpr auto IMG_2ndWindGauge = 0x3d0; // UImage*
		constexpr auto TargetPlayerState = 0x3d8; // ACrowPlayerStateBase*
		constexpr auto CharacterPawn = 0x3e0; // ACrowCharacterPawn*
		constexpr auto GaugeMaterial = 0x3e8; // UMaterialInstanceDynamic*
		constexpr auto AniFastBleeding = 0x3f0; // UWidgetAnimation*
		constexpr auto AniStopBleeding = 0x3f8; // UWidgetAnimation*
		constexpr auto AniCallHelp = 0x400; // UWidgetAnimation*
	}

	namespace n_UCrowCustomizeEmotionSlotWidget {
		constexpr auto IMG_Icon = 0x348; // UImage*
		constexpr auto WS_Grade = 0x350; // UWidgetSwitcher*
		constexpr auto IMG_Lock = 0x358; // UImage*
		constexpr auto IMG_Equiped = 0x360; // UImage*
		constexpr auto IMG_Selected = 0x368; // UImage*
		constexpr auto IMG_NewIcon = 0x370; // UImage*
		constexpr auto BT_Customize_Slot = 0x378; // UCrowButton*
		constexpr auto CP_Cost = 0x380; // UCanvasPanel*
		constexpr auto TB_Label_Money = 0x388; // UTextBlock*
		constexpr auto ItemIndex = 0x390; // uint32_t
		constexpr auto bIsSelect = 0x394; // bool
		constexpr auto bIsEquip = 0x395; // bool
		constexpr auto bIsEmotion = 0x396; // bool
		constexpr auto DelayTimeHover = 0x398; // float
		constexpr auto DelayTimeHoverTimerHandle = 0x3a0; // FTimerHandle
		constexpr auto ShopTableRow = 0x3a8; // FCrowShopTableRow
		constexpr auto ItemData = 0x420; // FCrowItemData
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UPhysicsInspectorTool {
		constexpr auto VizSettings = 0x90; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectData = 0x98; // TArray<UPhysicsObjectToolPropertySet*>
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewElements = 0xb0; // TArray<UPreviewGeometry*>
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto enumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UEditNormalsOperatorFactory {
		constexpr auto Tool = 0x30; // UEditNormalsTool*
	}

	namespace n_UCrowChangeNicknameWidget {
		constexpr auto BT_Ok = 0x368; // UCrowButton*
		constexpr auto BT_Cancel = 0x370; // UCrowButton*
		constexpr auto TB_Nickname_Text = 0x378; // UEditableTextBox*
		constexpr auto TB_CurrentNickname = 0x380; // UTextBlock*
		constexpr auto ChangeNicknameItemIndex = 0x388; // int32_t
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_ACrowConquestSpawnPoint {
		constexpr auto Team = 0x220; // ECrowTeam_RedBlue
	}

	namespace n_UCrowFriendSlotWidget {
		constexpr auto IMG_UserThumenail = 0x348; // UCrowWidgetImage*
		constexpr auto IMG_Rank = 0x350; // UCrowWidgetImage*
		constexpr auto TB_UserLevel = 0x358; // UTextBlock*
		constexpr auto TB_Username = 0x360; // UTextBlock*
		constexpr auto TB_UserStatus = 0x368; // UTextBlock*
		constexpr auto TB_RecentTimer = 0x370; // UTextBlock*
		constexpr auto SB_Rank = 0x378; // UScaleBox*
		constexpr auto IMG_ParyOwner = 0x380; // UImage*
		constexpr auto IMG_OnlineBG = 0x388; // UImage*
		constexpr auto CP_ExSquad = 0x390; // UCanvasPanel*
		constexpr auto BT_Slot = 0x398; // UCrowButton*
		constexpr auto BT_UserInfo = 0x3a0; // UCrowButton*
		constexpr auto WS_ButtonStauts = 0x3a8; // UWidgetSwitcher*
		constexpr auto BT_InviteParty = 0x3b0; // UCrowButton*
		constexpr auto BT_CancelInvite = 0x3b8; // UCrowButton*
		constexpr auto BT_JoinParty = 0x3c0; // UCrowButton*
		constexpr auto BT_PlayWith = 0x3c8; // UCrowButton*
		constexpr auto BT_InviteSession = 0x3d0; // UCrowButton*
		constexpr auto BT_RecentInviteParty = 0x3d8; // UCrowButton*
		constexpr auto BT_RecentCancelInvite = 0x3e0; // UCrowButton*
		constexpr auto BT_RecentRequsetFriend = 0x3e8; // UCrowButton*
		constexpr auto BT_KIckUser = 0x3f0; // UCrowButton*
		constexpr auto BT_PromotedUser = 0x3f8; // UCrowButton*
		constexpr auto BT_SearchInviteParty = 0x400; // UCrowButton*
		constexpr auto BT_SearchCancelInvite = 0x408; // UCrowButton*
		constexpr auto BT_SearchRequsetFriend = 0x410; // UCrowButton*
		constexpr auto BT_Accept = 0x418; // UCrowButton*
		constexpr auto BT_Reject = 0x420; // UCrowButton*
		constexpr auto BT_CancelRequest = 0x428; // UCrowButton*
		constexpr auto CP_ButtonToolTip = 0x430; // UCanvasPanel*
		constexpr auto TB_ToolTip = 0x438; // UTextBlock*
		constexpr auto StateColor_OnLine = 0x450; // FLinearColor
		constexpr auto StateColor_OffLine = 0x460; // FLinearColor
		constexpr auto StateColor_Party = 0x470; // FLinearColor
		constexpr auto StateColor_PartyFull = 0x480; // FLinearColor
		constexpr auto StateColor_GamePlay = 0x490; // FLinearColor
		constexpr auto FriendInfo = 0x4a0; // FCrowGameFriendInfo
		constexpr auto RecentGamePlayUserInfo = 0x4d0; // FCrowRecentGamePlayUserInfo
		constexpr auto PartyMemberInfo = 0x510; // FCrowPartyMember
		constexpr auto CurrentSlotType = 0x638; // EFriendSlotType
	}

	namespace n_UCrowItemSlotMiniWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto IMG_Equiped = 0x350; // UImage*
		constexpr auto BT_Customize_List_Slot = 0x358; // UCrowButton*
		constexpr auto TB_ItemName = 0x360; // UTextBlock*
		constexpr auto TB_Status = 0x368; // UTextBlock*
		constexpr auto WS_IconIMG = 0x370; // UWidgetSwitcher*
		constexpr auto IMG_IconIMG_Color = 0x378; // UImage*
		constexpr auto Selected = 0x3c0; // bool
		constexpr auto Equiped = 0x3c1; // bool
		constexpr auto UnEquipBtn = 0x3c2; // bool
		constexpr auto useDeselect = 0x3c3; // bool
		constexpr auto SlotValue = 0x3c4; // int32_t
		constexpr auto IntValue = 0x3c8; // int32_t
		constexpr auto CurrentColorTable = 0x3d0; // FCrowItemColorTableRowBase
		constexpr auto CurrentItemSlotMiniWSType = 0x400; // ECrowItemSlotMiniWSType
		constexpr auto CurrentCategoryType = 0x401; // ECrowCharacterAppearanceType
		constexpr auto SceneLobby = 0x408; // ACrowSceneLobby*
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_UCrowLoadingBoxWidget {
		constexpr auto CurrentState = 0x348; // ELoadingState
		constexpr auto ReadyTime = 0x34c; // float
		constexpr auto StartTime = 0x350; // float
		constexpr auto IdleTime = 0x354; // float
		constexpr auto EndTime = 0x358; // float
		constexpr auto DeltaTime = 0x35c; // float
		constexpr auto Progress = 0x360; // float
	}

	namespace n_UCrowVehicleTaskBase {
		constexpr auto TaskID = 0x28; // ECrowVehicleTask
		constexpr auto FSM = 0x30; // UCrowVehicleFSM*
	}

	namespace n_UCrowSquadMemberKillWidget {
		constexpr auto TB_NickName = 0x348; // UTextBlock*
		constexpr auto TB_Count = 0x350; // UTextBlock*
		constexpr auto IMG_Level = 0x358; // UImage*
		constexpr auto IMG_SquadColor = 0x360; // UImage*
		constexpr auto TB_Squad_Number = 0x368; // UTextBlock*
		constexpr auto AniStartEnd = 0x370; // UWidgetAnimation*
		constexpr auto InfoArray = 0x378; // TArray<FCrowSquadMemberKillInfo>
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UCrowWeaponPartsStock {
		constexpr auto PartsTable = 0x320; // FCrowWeaponPartsStockTableRow
		constexpr auto DefaultPartsData = 0x628; // FCrowWeaponPartsStockTableRow
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_ACrowWorldClusterActor {
		constexpr auto SceneRoot = 0x220; // USceneComponent*
		constexpr auto Value = 0x228; // int32_t
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_ACrowGameStateTDM {
		constexpr auto ScoreArray = 0x420; // TArray<FCrowScoreInfoTDM>
		constexpr auto TeamKillLimit = 0x430; // uint32_t
		constexpr auto TeamInfoMap = 0x438; // TMap<char, FCrowTeamInfoTDM>
		constexpr auto PlayerCountMap = 0x488; // TMap<char, FCrowPlayerCountInfoTDM>
	}

	namespace n_UCrowLobbyMenuListWidget {
		constexpr auto HB_Title = 0x348; // UHorizontalBox*
		constexpr auto IMG_WaitingRoomBack = 0x350; // UImage*
		constexpr auto WB_LobbyModInfoButton = 0x358; // UCrowModInfoButtonWidget*
		constexpr auto WB_ReadyBT_Toggle = 0x360; // UCrowWidgetToggleButton*
		constexpr auto WB_MatchingBT_Toggle = 0x368; // UCrowWidgetToggleButton*
		constexpr auto BT_QuickPlay = 0x370; // UCrowButton*
		constexpr auto BT_Join = 0x378; // UCrowButton*
		constexpr auto BT_ChangeMod = 0x380; // UCrowButton*
		constexpr auto BT_Tutorial = 0x388; // UCrowButton*
		constexpr auto BT_Customize = 0x390; // UCrowButton*
		constexpr auto BT_Store = 0x398; // UCrowButton*
		constexpr auto BT_Setting = 0x3a0; // UCrowButton*
		constexpr auto BT_Profile = 0x3a8; // UCrowButton*
		constexpr auto BT_Quit = 0x3b0; // UCrowButton*
		constexpr auto PartyMode = 0x3b8; // bool
		constexpr auto SceneLobby = 0x3c0; // ACrowSceneLobby*
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UCrowShopCashWidget {
		constexpr auto TB_CashValue = 0x348; // UTextBlock*
		constexpr auto TB_GPointValue = 0x350; // UTextBlock*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_ACrowVehicleSpawner {
		constexpr auto SpawnerType = 0x220; // ECrowSpawnerType
		constexpr auto VehicleClass = 0x228; // ACrowVehiclePawn*
		constexpr auto SpawnDelay = 0x230; // float
		constexpr auto SpawnLimit = 0x234; // uint32_t
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UCrowVehicleWidgetLevel {
		constexpr auto SB_Level = 0x350; // USizeBox*
	}

	namespace n_UWB_C4_Indicator_C {
		constexpr auto Ani_Active_In6m = 0x378; // UWidgetAnimation*
		constexpr auto Ani_Active_Out6m = 0x380; // UWidgetAnimation*
		constexpr auto IMG_LocateArrow = 0x388; // UImage*
	}

	namespace n_UCrowWeaponCombinedIconWidget {
		constexpr auto IMG_Magazine = 0x348; // UImage*
		constexpr auto IMG_Stock = 0x350; // UImage*
		constexpr auto IMG_Barrel = 0x358; // UImage*
		constexpr auto IMG_Reciever = 0x360; // UImage*
		constexpr auto IMG_Muzzle = 0x368; // UImage*
		constexpr auto IMG_UnderBarrel = 0x370; // UImage*
		constexpr auto IMG_SideBarrel = 0x378; // UImage*
		constexpr auto IMG_MainSight = 0x380; // UImage*
		constexpr auto IMG_CantedSight = 0x388; // UImage*
		constexpr auto IMG_Grip = 0x390; // UImage*
		constexpr auto WeaponPartsArray = 0x398; // TArray<UImage*>
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x668; // FWorldPSCPool
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UCrowWorldDataCollector {
		constexpr auto MapConfig = 0xb0; // UCrowWorldMapConfig*
		constexpr auto SingleTargetActor = 0xb8; // AActor*
		constexpr auto ActorNameFilter = 0xc0; // FString
		constexpr auto TemporalLightProbes = 0xd0; // TArray<UCrowWorldLightProbe*>
		constexpr auto EditorActorBuildCache = 0xe0; // FCrowWorldEditorActorBuildCache
	}

	namespace n_UWB_Crosshair_Mh6_Minigun_Thrid_C {
		constexpr auto CrowWidgetImage = 0x450; // UCrowWidgetImage*
		constexpr auto CrowWidgetImage_143 = 0x458; // UCrowWidgetImage*
		constexpr auto IMG_Cross = 0x460; // UImage*
		constexpr auto IMG_Cross_2 = 0x468; // UImage*
		constexpr auto IMG_Down = 0x470; // UCrowWidgetImage*
		constexpr auto IMG_Down_2 = 0x478; // UCrowWidgetImage*
		constexpr auto IMG_Left = 0x480; // UCrowWidgetImage*
		constexpr auto IMG_Left_2 = 0x488; // UCrowWidgetImage*
		constexpr auto IMG_Overheating_Gauge_2 = 0x490; // UImage*
		constexpr auto IMG_Right = 0x498; // UCrowWidgetImage*
		constexpr auto IMG_Right_2 = 0x4a0; // UCrowWidgetImage*
		constexpr auto IMG_Up = 0x4a8; // UCrowWidgetImage*
		constexpr auto IMG_Up_2 = 0x4b0; // UCrowWidgetImage*
		constexpr auto WB_Vehicle_Damage = 0x4b8; // UWB_Vehicle_Warning_Heli_C*
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UPreviewGeometry {
		constexpr auto ParentActor = 0x28; // APreviewGeometryActor*
		constexpr auto LineSets = 0x30; // TMap<FString, ULineSetComponent*>
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UAkGroupValue {
		constexpr auto GroupShortID = 0x40; // uint32_t
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UHoleFillStatisticsProperties {
		constexpr auto InitialHoles = 0x60; // FString
		constexpr auto SelectedHoles = 0x70; // FString
		constexpr auto SuccessfulFills = 0x80; // FString
		constexpr auto FailedFills = 0x90; // FString
		constexpr auto RemainingHoles = 0xa0; // FString
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UCrowResultSceneIconWidget {
		constexpr auto CP_Root = 0x348; // UCanvasPanel*
		constexpr auto CP_MVP_Mark = 0x350; // UCanvasPanel*
		constexpr auto TB_Name = 0x358; // UTextBlock*
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_UReplicationGraphNode {
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UCrowEventPageTable {
		constexpr auto DataTableRow = 0xb0; // TArray<FCrowEventPageTableRow>
	}

	namespace n_UCrowSettingsSlotOnOffWidget {
		constexpr auto WS_OnOff = 0x348; // UWidgetSwitcher*
		constexpr auto TB_Off = 0x350; // UTextBlock*
		constexpr auto IMG_OffIcon = 0x358; // UCrowWidgetImage*
		constexpr auto TB_On = 0x360; // UTextBlock*
		constexpr auto IMG_OnIcon = 0x368; // UCrowWidgetImage*
		constexpr auto BT_OnOff = 0x370; // UCrowToggleButton*
		constexpr auto OwnerSlot = 0x378; // UCrowSettingsSlotWidget*
	}

	namespace n_UBaseMeshProcessingTool {
		constexpr auto Preview = 0xb0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UCrowSoundStateVolumeComponent {
		constexpr auto SoundStateType = 0x1f8; // ECrowSoundStateType
		constexpr auto SoundVolumes = 0x200; // TArray<UStaticMeshComponent*>
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UCrowIndicatorSupplyWeaponWidget {
		constexpr auto IMG_Icon = 0x3c8; // UImage*
		constexpr auto TB_CoolTime = 0x3d0; // UTextBlock*
		constexpr auto DisplayCoolMinDistance = 0x3d8; // float
		constexpr auto DisplayCoolMaxDistance = 0x3dc; // float
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x470; // bool
		constexpr auto bUseAsyncCooking = 0x471; // bool
		constexpr auto ProcMeshBodySetup = 0x478; // UBodySetup*
		constexpr auto ProcMeshSections = 0x480; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x490; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4a0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4c0; // TArray<UBodySetup*>
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UCrowInteractionProgressCircleWidget {
		constexpr auto IMG_Gauge = 0x348; // UImage*
		constexpr auto WS_Type = 0x350; // UWidgetSwitcher*
		constexpr auto IMG_Key = 0x358; // UImage*
		constexpr auto TB_Progress = 0x360; // UTextBlock*
		constexpr auto TB_Countdown_Timer = 0x368; // UTextBlock*
		constexpr auto GaugeMaterial = 0x370; // UMaterialInstanceDynamic*
	}

	namespace n_UCrowMinimapVehicleMarker {
		constexpr auto MarkerOwnerPawn = 0x348; // ACrowVehiclePawn*
		constexpr auto MarkerSizeBox = 0x358; // USizeBox*
		constexpr auto IconOverlay = 0x360; // UOverlay*
		constexpr auto TankIcon = 0x368; // UImage*
		constexpr auto HeliIcon = 0x370; // UImage*
		constexpr auto CarIcon = 0x378; // UImage*
		constexpr auto BoatIcon = 0x380; // UImage*
		constexpr auto ColorNoTeam = 0x388; // FLinearColor
		constexpr auto ColorAllies = 0x398; // FLinearColor
		constexpr auto ColorEnemies = 0x3a8; // FLinearColor
		constexpr auto ColorSquadLeader = 0x3b8; // FLinearColor
		constexpr auto ColorSquadAssistant = 0x3c8; // FLinearColor
		constexpr auto ColorSquadMember01 = 0x3d8; // FLinearColor
		constexpr auto ColorSquadMember02 = 0x3e8; // FLinearColor
	}

	namespace n_ACrowProjectileMeleeThrow {
		constexpr auto TracerFX_1P = 0x18d0; // UParticleSystem*
		constexpr auto TracerFX_3P = 0x18d8; // UParticleSystem*
		constexpr auto TracerFX_InWater = 0x18e0; // UParticleSystem*
		constexpr auto TracerFX_3P_Trail = 0x18e8; // UParticleSystem*
		constexpr auto TrailFX_LifeTime = 0x18f0; // float
		constexpr auto WaterDestroyTime = 0x18f4; // float
		constexpr auto FlyBySound_W = 0x18f8; // UAkAudioEvent*
		constexpr auto FlyBySoundRadius = 0x1900; // float
		constexpr auto WaterDestroyTimerHandle = 0x1908; // FTimerHandle
		constexpr auto SoundTargetActor = 0x1910; // AActor*
		constexpr auto TracerFXComp_1P = 0x1918; // UParticleSystemComponent*
		constexpr auto TracerFXComp_3P = 0x1920; // UParticleSystemComponent*
		constexpr auto TrailFXComp = 0x1928; // UParticleSystemComponent*
	}

	namespace n_ACrowTGStealthBomberActor {
		constexpr auto MeshComponent = 0x220; // USkeletalMeshComponent*
		constexpr auto RootComp = 0x228; // USceneComponent*
	}

	namespace n_ABP_MeleeThrowDagger_C {
		constexpr auto Dagger001 = 0x1940; // USkeletalMeshComponent*
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UCrowSupplyBaseTableManager {
		constexpr auto SupplyItemDataRows = 0x28; // TMap<FString, FCrowSupplyBaseDataRow>
	}

	namespace n_AWaterBody {
		constexpr auto PhysicalMaterial = 0x230; // UPhysicalMaterial*
		constexpr auto TargetWaveMaskDepth = 0x238; // float
		constexpr auto MaxWaveHeightOffset = 0x23c; // float
		constexpr auto WaterBodyIndex = 0x240; // int32_t
		constexpr auto bFillCollisionUnderWaterBodiesForNavmesh = 0x244; // bool
		constexpr auto UnderwaterPostProcessSettings = 0x250; // FUnderwaterPostProcessSettings
		constexpr auto WaterBodyType = 0x7c0; // EWaterBodyType
		constexpr auto CurveSettings = 0x7c8; // FWaterCurveSettings
		constexpr auto WaterMaterial = 0x7e8; // UMaterialInterface*
		constexpr auto UnderwaterPostProcessMaterial = 0x7f0; // UMaterialInterface*
		constexpr auto bAffectsLandscape = 0x7f8; // bool
		constexpr auto bGenerateCollisions = 0x7f9; // bool
		constexpr auto bOverrideWaterMesh = 0x7fa; // bool
		constexpr auto WaterMeshOverride = 0x800; // UStaticMesh*
		constexpr auto OverlapMaterialPriority = 0x808; // int32_t
		constexpr auto CollisionProfileName = 0x80c; // FName
		constexpr auto SplineComp = 0x818; // UWaterSplineComponent*
		constexpr auto WaterSplineMetadata = 0x820; // UWaterSplineMetadata*
		constexpr auto WaterMID = 0x828; // UMaterialInstanceDynamic*
		constexpr auto UnderwaterPostProcessMID = 0x830; // UMaterialInstanceDynamic*
		constexpr auto Islands = 0x838; // TArray<LazyObjectProperty>
		constexpr auto ExclusionVolumes = 0x848; // TArray<LazyObjectProperty>
		constexpr auto Landscape = 0x858; // TWeakObjectPtr<ALandscapeProxy>
		constexpr auto CurrentPostProcessSettings = 0x860; // FPostProcessSettings
		constexpr auto bCanAffectNavigation = 0xdb0; // bool
		constexpr auto WaterNavAreaClass = 0xdb8; // UNavAreaBase*
		constexpr auto WaterWaves = 0xdc0; // UWaterWavesBase*
		constexpr auto bHasWaveSpectrumSettings = 0xdc8; // bool
		constexpr auto bHasTerrainCarvingSettingsSettings = 0xdc9; // bool
	}

	namespace n_UOffsetMeshToolProperties {
		constexpr auto OffsetType = 0x60; // EOffsetMeshToolOffsetType
		constexpr auto Distance = 0x64; // float
		constexpr auto bCreateShell = 0x68; // bool
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_ACrowAkAmbientSound {
		constexpr auto bUseReplay = 0x260; // bool
		constexpr auto bIgnoreCurrentPlaying = 0x261; // bool
		constexpr auto ReplayTerm = 0x264; // float
		constexpr auto bUsingEndEvent = 0x268; // bool
		constexpr auto EndEvent = 0x270; // UAkAudioEvent*
		constexpr auto EndEventTerm = 0x278; // float
		constexpr auto EndEventCoolTime = 0x27c; // float
		constexpr auto bDrawDebugInfo = 0x280; // bool
		constexpr auto bUseSoundStateTest = 0x281; // bool
		constexpr auto SoundStateRadius = 0x284; // float
		constexpr auto SoundStateType = 0x288; // ECrowSoundStateType
		constexpr auto TRA = 0x2a8; // ATextRenderActor*
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_ACrowGameStateDM {
		constexpr auto IsEnableFastRespawn = 0x410; // bool
		constexpr auto FastRespawnPrice = 0x414; // int32_t
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UCrowFxManager {
		constexpr auto PhysicalMatSound = 0x28; // UCrowPhysicalMatSound*
		constexpr auto CrowFxTypeArrayList = 0x48; // TArray<FCrowFxTypeArrayy>
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x468; // UPaperFlipbook*
		constexpr auto Material = 0x470; // UMaterialInterface*
		constexpr auto PlayRate = 0x478; // float
		constexpr auto bLooping = 0x47c; // char : 1
		constexpr auto bReversePlayback = 0x47c; // char : 1
		constexpr auto bPlaying = 0x47c; // char : 1
		constexpr auto AccumulatedTime = 0x480; // float
		constexpr auto CachedFrameIndex = 0x484; // int32_t
		constexpr auto SpriteColor = 0x488; // FLinearColor
		constexpr auto CachedBodySetup = 0x498; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4a0; // FMulticastInlineDelegate
	}

	namespace n_UCrowLobbyIdleAnimTableManager {
		constexpr auto UserLobbyIdleAnimInfoData = 0x28; // TMap<EAnimLobbyIdle, FCrowLobbyIdleAnimTableRow>
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant {
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UCrowClothActorComponent {
		constexpr auto ClothMeshesList = 0x28; // TMap<ECrowClothPartsMesh, FCrowClothItem>
		constexpr auto DefaultClothMeshesList = 0x78; // TMap<ECrowClothPartsMesh, USkeletalMesh*>
		constexpr auto OwnerActor = 0xc8; // AActor*
		constexpr auto MasterMesh = 0xd0; // USkeletalMeshComponent*
		constexpr auto bUseTestHide = 0xd8; // bool
		constexpr auto bUseMeshMerge = 0xd9; // bool
		constexpr auto ComponentType = 0xda; // ECrowClothComponentType
	}

	namespace n_UCrowShopCategoryWidget {
		constexpr auto VB_Category = 0x348; // UVerticalBox*
		constexpr auto CategoryItemWidget = 0x360; // UCrowCategorySlotSmallWidget*
	}

	namespace n_ACrowWeaponGasCutter {
		constexpr auto EffectTemplet = 0x1ec0; // UParticleSystem*
		constexpr auto EffectComponent = 0x1ec8; // UParticleSystemComponent*
	}

	namespace n_UCrowVehicleFloodingComponent {
		constexpr auto TimeSecondToFlooding = 0x4b8; // float
		constexpr auto FloodingDamageTime = 0x4bc; // float
		constexpr auto FloodingDamage = 0x4c0; // float
		constexpr auto WaterCrashImpulseCurve = 0x4c8; // UCurveFloat*
		constexpr auto Immerge_LinearDampingCurve = 0x4d0; // UCurveFloat*
		constexpr auto WaterLinearDampingCurve = 0x4d8; // UCurveFloat*
		constexpr auto bCheckValidHeight = 0x4e0; // bool
		constexpr auto ValidHeight_DrivingFX = 0x4e4; // float
		constexpr auto FloodingEffectSettingClass = 0x4e8; // UCrowVehicleFloodingEffectSetting*
		constexpr auto WaterInfo = 0x4f0; // FCrowVehicleMovementWaterInfo
		constexpr auto UpdatedComponent = 0x550; // UPrimitiveComponent*
		constexpr auto LastFloodingWaterType = 0x558; // ECrowVehicleFloodingWaterType
		constexpr auto FloodingEffectSetting = 0x560; // UCrowVehicleFloodingEffectSetting*
		constexpr auto FloodingState = 0x568; // ECrowVehicleFloodingState
		constexpr auto bFlooding = 0x569; // bool
		constexpr auto ElapsedOverlapTime = 0x56c; // float
		constexpr auto ElapsedFloodingTime = 0x570; // float
		constexpr auto DamageTimer = 0x574; // float
		constexpr auto CurrentFloodingDepth = 0x578; // float
		constexpr auto CurrentFloodingDepthClamped = 0x57c; // float
		constexpr auto WaterLinearDamping = 0x580; // float
		constexpr auto PrevOwnerVelocityZ = 0x584; // float
		constexpr auto WaterCrashImpulse = 0x588; // float
		constexpr auto ParticleComponentImmerge = 0x590; // UParticleSystemComponent*
		constexpr auto ParticleComponentBubble = 0x598; // UParticleSystemComponent*
		constexpr auto ParticleComponentDrivingForward = 0x5a0; // UParticleSystemComponent*
		constexpr auto ParticleComponentDrivingBackward = 0x5a8; // UParticleSystemComponent*
		constexpr auto ParticleComponentGroundDust = 0x5b0; // UParticleSystemComponent*
		constexpr auto RelativeTM_Bubble = 0x5c0; // FTransform
		constexpr auto RelativeTM_Driving = 0x5f0; // FTransform
		constexpr auto RelativeTM = 0x620; // FTransform
		constexpr auto BodyComponent = 0x650; // UPrimitiveComponent*
		constexpr auto bFadeOutDrivingParticle = 0x658; // bool
	}

	namespace n_UCrowFallsDamageTableManager {
		constexpr auto DamageTable = 0x28; // TArray<FCrowFallsDamageTableRow>
		constexpr auto VehicleDamageTable = 0x38; // TArray<FCrowVehicleFallsDamageTableRow>
	}

	namespace n_UCrowBombMissionScoreSlotWidget {
		constexpr auto TBPlayerName = 0x348; // UTextBlock*
		constexpr auto TBScore = 0x350; // UTextBlock*
		constexpr auto TBKillCount = 0x358; // UTextBlock*
		constexpr auto TBDeathCount = 0x360; // UTextBlock*
		constexpr auto TBPlantCompositoinCCount = 0x368; // UTextBlock*
		constexpr auto TBDefuseCompositionCCount = 0x370; // UTextBlock*
		constexpr auto IMGCompositionC = 0x378; // UImage*
		constexpr auto IMGBackgroundPlayer = 0x380; // UImage*
		constexpr auto IMGBackgroundBlue0 = 0x388; // UImage*
		constexpr auto IMGBackgroundBlue1 = 0x390; // UImage*
		constexpr auto IMGBackgroundOrange0 = 0x398; // UImage*
		constexpr auto IMGBackgroundOrange1 = 0x3a0; // UImage*
		constexpr auto IMGBackgroundDeath = 0x3a8; // UImage*
	}

	namespace n_UCrowBombingTableManager {
		constexpr auto ArrayBombingTableRow = 0x28; // TArray<FCrowBombingTableRow>
		constexpr auto BombingAngle = 0x38; // float
		constexpr auto TargetPos = 0x3c; // FVector
		constexpr auto MapSizeRatio = 0x48; // FVector2D
	}

	namespace n_UDLSSSettings {
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_UCrowSettingsSlotSliderWidget {
		constexpr auto TB_Value = 0x348; // UTextBlock*
		constexpr auto SL_Value = 0x350; // USlider*
		constexpr auto OwnerSlot = 0x358; // UCrowSettingsSlotWidget*
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_UUPSPatrolComponent {
		constexpr auto InitialMovementPatrolPoint = 0xb0; // AUPSPatrolPoint*
		constexpr auto PatrolMovementDirection = 0xb8; // EPatrolMovementType
		constexpr auto bDisableVisualization = 0xb9; // bool
		constexpr auto CurrentPatrolPoint = 0xc0; // AUPSPatrolPoint*
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UCrowLoadoutWeaponSubInfoWidget {
		constexpr auto WS_SlotType = 0x1a48; // UWidgetSwitcher*
		constexpr auto TB_WeaponName = 0x1a50; // UTextBlock*
		constexpr auto TB_WeaponSlotType = 0x1a58; // UTextBlock*
		constexpr auto IMG_Frame = 0x1a60; // UImage*
		constexpr auto IMG_HotKey_2 = 0x1a68; // UImage*
		constexpr auto IMG_Setting = 0x1a70; // UImage*
		constexpr auto IMG_BackGround_Melee = 0x1a78; // UImage*
		constexpr auto IMG_BackGround = 0x1a80; // UImage*
		constexpr auto WB_CrowDragDropPanel = 0x1a88; // UCrowDragDropWidgetBase*
		constexpr auto BT_Loadout_Button = 0x1a90; // UCrowButton*
		constexpr auto HB_Hotkey = 0x1a98; // UHorizontalBox*
		constexpr auto MainPanel = 0x1aa0; // UCanvasPanel*
		constexpr auto HB_WeaponLv = 0x1aa8; // UHorizontalBox*
		constexpr auto TB_WeaponLV = 0x1ab0; // UTextBlock*
		constexpr auto PB_WeaponLV = 0x1ab8; // UCrowProgressBar*
		constexpr auto DefaultSlotTypeName = 0x1ac0; // FText
		constexpr auto HotKeySprite = 0x1ad8; // UPaperSprite*
		constexpr auto IsArmorSlot = 0x1ae0; // bool
		constexpr auto HiddeIcon = 0x1ae1; // bool
	}

	namespace n_UCrowWeaponPartsAccCharm {
		constexpr auto ParentComponent = 0x30; // USceneComponent*
		constexpr auto MeshComponent = 0x38; // UMeshComponent*
		constexpr auto BoxComponent = 0x40; // UBoxComponent*
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto position = 0xb4; // FVector
	}

	namespace n_ABP_CrowProjectileRocketLauncher_C {
		constexpr auto M4_Projectile_Root = 0x1840; // USkeletalMeshComponent*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x588; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x598; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5a0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5bc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5d8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5e8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x5f0; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x5f4; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x610; // bool
		constexpr auto InstanceCountToRender = 0x614; // int32_t
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UCrowFloodingCheckComponent {
		constexpr auto FloodingCheckRate = 0xb0; // float
		constexpr auto TimeSecondToFlooding = 0xb4; // float
		constexpr auto FloodingDamage = 0xb8; // float
		constexpr auto FloodingDepth = 0xbc; // float
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x220; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x221; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UGroomAssetImportData {
		constexpr auto ImportOptions = 0x28; // UGroomImportOptions*
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UCrowInputManager {
		constexpr auto PlayerController = 0x28; // APlayerController*
		constexpr auto CrowCharacterPawn = 0x30; // ACrowCharacterPawn*
		constexpr auto CurrentInputMode = 0x38; // ECrowCharacterInputMode
		constexpr auto InputStack = 0x40; // TArray<FCrowInputStackInfo>
		constexpr auto InputBaseArray = 0x50; // TArray<UCrowInputBase*>
		constexpr auto InputWeaponManager = 0x60; // UCrowInputBase*
		constexpr auto InputDefault = 0x68; // UCrowInputBase*
		constexpr auto InputCharacterOnVehicle = 0x70; // UCrowInputBase*
		constexpr auto InputCharacterOnlyRot = 0x78; // UCrowInputBase*
		constexpr auto InputFindConstructionSite = 0x80; // UCrowInputBase*
		constexpr auto InputFindBombKitTarget = 0x88; // UCrowInputBase*
		constexpr auto InputCharacterSkydiving = 0x90; // UCrowInputBase*
		constexpr auto InputConstruction = 0x98; // UCrowInputBase*
		constexpr auto InputUI = 0xa0; // UCrowInputBase*
		constexpr auto InputWorldMapUI = 0xa8; // UCrowInputBase*
		constexpr auto InputRadialMenu = 0xb0; // UCrowInputBase*
		constexpr auto InputDyingCharacter = 0xb8; // UCrowInputBase*
		constexpr auto InputRespawnAirPlane = 0xc0; // UCrowInputBase*
		constexpr auto InputOnlyTrigger = 0xc8; // UCrowInputBase*
		constexpr auto InputSpectator = 0xd0; // UCrowInputBase*
		constexpr auto InputBombMissionPlayCountdown = 0xd8; // UCrowInputBase*
		constexpr auto InputSquadMatchRespawn = 0xe0; // UCrowInputBase*
		constexpr auto InputEmotion = 0xe8; // UCrowInputBase*
		constexpr auto InputReplay = 0xf0; // UCrowInputBase*
		constexpr auto InputSynopsis = 0xf8; // UCrowInputBase*
		constexpr auto InputAnyKey = 0x100; // UCrowInputBase*
	}

	namespace n_UCrowUserProfileWidget {
		constexpr auto TB_Username = 0x348; // UTextBlock*
		constexpr auto TB_PlayTime = 0x350; // UTextBlock*
		constexpr auto WS_Follow = 0x358; // UWidgetSwitcher*
		constexpr auto BT_Exit = 0x360; // UCrowButton*
		constexpr auto BT_Follow = 0x368; // UCrowButton*
		constexpr auto BT_UnFollow = 0x370; // UCrowButton*
		constexpr auto BT_Profile = 0x378; // UCrowButton*
		constexpr auto TargetUesrServerKey = 0x380; // uint64_t
		constexpr auto SceneLobby = 0x388; // ACrowSceneLobby*
	}

	namespace n_UBakeMeshAttributeMapsToolProperties {
		constexpr auto MapType = 0x60; // EBakeMapType
		constexpr auto Resolution = 0x64; // EBakeTextureResolution
		constexpr auto UVLayer = 0x68; // FString
		constexpr auto UVLayerNamesList = 0x78; // TArray<FString>
		constexpr auto bUseWorldSpace = 0x88; // bool
		constexpr auto Result = 0x90; // UTexture2D*
	}

	namespace n_UCrowWorldGridQueryComponent {
		constexpr auto CachedWorldGrid = 0xb0; // ACrowWorldGridActor*
		constexpr auto LastQueryResult = 0xb8; // TArray<int32_t>
		constexpr auto bEnableQuery = 0xc8; // bool
		constexpr auto QueryCellRange = 0xcc; // int32_t
	}

	namespace n_UCrowInGameLoadoutWidget {
		constexpr auto WB_TopBar_Desc = 0x368; // UCrowTopBarDescWidget*
		constexpr auto WB_CustomizeItemDesc = 0x370; // UCrowCustomizeItemDescWidget*
		constexpr auto CurrentSeletedWeaponData = 0x378; // FCrowWeaponData
		constexpr auto CurrentSelectedWeaponAccData = 0x4e0; // FCrowWeaponAccData
		constexpr auto CurrentSeletedSlotIndex = 0x590; // int32_t
		constexpr auto IsRotation = 0x594; // bool
		constexpr auto CurrentLoadOutUIMode = 0x595; // ELoadOutUIMode
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UCrowCustomizeEmotionListWidget {
		constexpr auto SlotWidgetClass = 0x348; // UCrowCustomizeEmotionSlotWidget*
		constexpr auto GD_ItemList = 0x350; // UGridPanel*
		constexpr auto SelectedSlotWidget = 0x358; // UCrowCustomizeEmotionSlotWidget*
	}

	namespace n_UCrowPhysicalMatTableManager {
		constexpr auto DefaultTableRow = 0x28; // FCrowPhysicalMatTableRow
		constexpr auto PhysMatTable = 0x910; // TMap<FName, FCrowPhysicalMatTableRow>
		constexpr auto LoadedRows = 0x960; // TSet<FName>
		constexpr auto LoadedAssets = 0x9b0; // TSet<UObject*>
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UCrowVehicleIconWidget {
		constexpr auto LocalPlayerState = 0x3c8; // ACrowPlayerStateBase*
		constexpr auto IMG_VehicleIcon = 0x3d0; // UImage*
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x468; // int32_t
		constexpr auto PreviousLODLevel = 0x46c; // int32_t
		constexpr auto MinLOD = 0x470; // int32_t
		constexpr auto SubDivisionStepSize = 0x474; // int32_t
		constexpr auto StaticMesh = 0x478; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x480; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x484; // char : 1
		constexpr auto bOverrideWireframeColor = 0x484; // char : 1
		constexpr auto bOverrideMinLod = 0x484; // char : 1
		constexpr auto bOverrideNavigationExport = 0x484; // char : 1
		constexpr auto bForceNavigationObstacle = 0x484; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x484; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x484; // char : 1
		constexpr auto bOverrideLightMapRes = 0x484; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x485; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x485; // char : 1
		constexpr auto bUseSubDivisions = 0x485; // char : 1
		constexpr auto bUseDefaultCollision = 0x485; // char : 1
		constexpr auto bReverseCulling = 0x485; // char : 1
		constexpr auto OverriddenLightMapRes = 0x488; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x48c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x490; // float
		constexpr auto StreamingDistanceMultiplier = 0x494; // float
		constexpr auto LODData = 0x498; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4a8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4b8; // FLightmassPrimitiveSettings
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UPolyEditOutsetProperties {
		constexpr auto Softness = 0x60; // float
		constexpr auto bBoundaryOnly = 0x64; // bool
		constexpr auto AreaScale = 0x68; // float
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UCrowDynamicFoliageDrawComponent {
		constexpr auto PixelSizePerMeter = 0xb0; // float
		constexpr auto Canvas = 0xb8; // UCanvas*
		constexpr auto RenderTargetSize = 0xc0; // FVector2D
		constexpr auto DrawToRTContext = 0xc8; // FDrawToRenderTargetContext
		constexpr auto RenderTarget = 0xd8; // FCrowDynamicFoliageRenderTarget
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_AUPSMovementHandlerDefault {
		constexpr auto MoveParams = 0x248; // FUPSMoveParams
		constexpr auto bRotateOnPoint = 0x260; // bool
		constexpr auto ActiveGameplayTask = 0x268; // UGameplayTask*
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UCrowBattleHUDMain {
		constexpr auto crosshairWidget = 0x260; // UCrowBattleHUDCrosshair*
		constexpr auto weaponStateWidget = 0x268; // UCrowBattleHUDWeaponState*
	}

	namespace n_UCrowProceedingMineralWidget {
		constexpr auto PB_Gauge = 0x348; // UCrowProgressBar*
		constexpr auto TB_Point_Current = 0x350; // UTextBlock*
		constexpr auto TB_Point_Total = 0x358; // UTextBlock*
		constexpr auto AniStart = 0x360; // UWidgetAnimation*
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_ACrowGameHUD_TDM {
		constexpr auto MainWidgetClassTDM = 0x5f0; // UCrowHUDWidgetTDM*
		constexpr auto SubSpactatorWidget = 0x5f8; // UUserWidget*
		constexpr auto MainWidgetTDM = 0x600; // UCrowHUDWidgetTDM*
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_ACrowPIEEntryHUD {
		constexpr auto WidgetEntry = 0x310; // UUserWidget*
	}

	namespace n_UCrowBattleStatus {
		constexpr auto OwnerActor = 0xb0; // AActor*
		constexpr auto Health = 0xb8; // float
		constexpr auto MaxHealth = 0xbc; // float
		constexpr auto DyingHealth = 0xc0; // float
		constexpr auto HeadArmorCurrent = 0xc4; // float
		constexpr auto HeadArmorMax = 0xc8; // float
		constexpr auto BodyArmorCurrent = 0xcc; // float
		constexpr auto BodyArmorMax = 0xd0; // float
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UCrowInventoryInputEventHandler {
		constexpr auto CrowInvenComponent = 0x3b0; // UCrowGameInvenComponent*
		constexpr auto BackPackInfoWIdget = 0x3b8; // UCrowBackPackInfoWidget*
		constexpr auto CrowPlayerController = 0x3c0; // ACrowPlayerControllerBase*
		constexpr auto ActiveFrameList = 0x3c8; // TArray<UCrowInventoryInputEventHandler*>
		constexpr auto DropBoxWidgetList = 0x3d8; // TArray<UCrowDropBoxWidget*>
		constexpr auto WeaponItemWidget = 0x3e8; // UUserWidget*
		constexpr auto IsSelect = 0x3f0; // bool
	}

	namespace n_UBP_LSAT_MagazineAnimInst_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x2f8; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x328; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x370; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_MachineGun = 0x390; // FAnimNode_MachineGunHandler
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x480; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UCrowClientManager {
		constexpr auto GameState = 0x40; // ACrowGameStateBase*
		constexpr auto PlayerState = 0x48; // ACrowPlayerStateBase*
		constexpr auto PlayerController = 0x50; // ACrowPlayerControllerBase*
		constexpr auto Character = 0x58; // ACrowCharacterPawn*
		constexpr auto PostProcessVolume = 0x60; // ACrowPostProcessVolume*
		constexpr auto MergedSkeletalMeshCacheActor = 0x68; // ACrowMergedSkeletalMeshCacheActor*
		constexpr auto UserInfo = 0x70; // FCrowUserInfoBase
		constexpr auto WorldMapIconArray = 0x8a0; // TArray<UCrowWorldMapIcon*>
		constexpr auto IndicatorArray = 0x8b0; // TArray<UCrowIndicatorViewInfo*>
		constexpr auto MainWidgetDefault = 0x8c0; // UCrowHUDWidgetDefault*
		constexpr auto MainWidgetFullScreenBottom = 0x8c8; // UCrowHUDWidgetFullScreenBottom*
		constexpr auto MainWidgetFullScreenTop = 0x8d0; // UCrowHUDWidgetFullScreenTop*
		constexpr auto TeamPlayerStateMap = 0x8d8; // TMap<uint64_t, ACrowPlayerStateBase*>
		constexpr auto ScopeEffect = 0x928; // FCrowScopeEffect
		constexpr auto AddPlayerArray = 0x998; // TArray<ACrowPlayerStateBase*>
		constexpr auto RemovePlayerArray = 0x9a8; // TArray<ACrowPlayerStateBase*>
		constexpr auto GemeModeInfo = 0x9b8; // FCrowGameModeInfo
		constexpr auto GetExpInfo = 0x9f0; // int32_t
		constexpr auto ViewMatrices_ViewOrigin = 0x9f4; // FVector
		constexpr auto ViewMatrices_ProjectionMatrix = 0xa00; // FMatrix
		constexpr auto ModPointInfoArray = 0xa80; // TArray<FCrowModPointInfo>
		constexpr auto MedalTypeArray = 0xa90; // TArray<ECrowMedalType>
		constexpr auto LobbyNoticeInfoArray = 0xaa0; // TArray<FCrowLobbyNoticeInfo>
		constexpr auto AdjustMapInfoArray = 0xab0; // TArray<FCrowAdjustMapInfo>
		constexpr auto InvalidTeam = 0xba8; // FCrowTeamInfo
	}

	namespace n_UWeightMapSetProperties {
		constexpr auto WeightMap = 0x60; // FName
		constexpr auto WeightMapsList = 0x68; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x78; // bool
	}

	namespace n_UCrowShopSlotDropDownWidget {
		constexpr auto ButtonTitleList = 0x348; // TArray<FString>
		constexpr auto TB_SelectedItem = 0x358; // UTextBlock*
		constexpr auto BT_Dropdown = 0x360; // UCrowButton*
		constexpr auto CP_Dropdown = 0x368; // UCanvasPanel*
		constexpr auto WB_Shop_SlotListDropDown = 0x370; // UCrowShopDropDownItemSlot*
		constexpr auto WB_Shop_SlotListDropDown_2 = 0x378; // UCrowShopDropDownItemSlot*
		constexpr auto WB_Shop_SlotListDropDown_3 = 0x380; // UCrowShopDropDownItemSlot*
		constexpr auto WB_Shop_SlotListDropDown_4 = 0x388; // UCrowShopDropDownItemSlot*
		constexpr auto WB_Shop_SlotListDropDown_5 = 0x390; // UCrowShopDropDownItemSlot*
		constexpr auto ButtonList = 0x398; // TArray<UCrowShopDropDownItemSlot*>
		constexpr auto CurrentShopListItem = 0x3a8; // UCrowShopDropDownItemSlot*
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UCrowVehicleSKC {
		constexpr auto ComponentTransformUpdateDelayMin = 0xed4; // float
		constexpr auto ComponentTransformUpdateDelayMax = 0xed8; // float
		constexpr auto ComponentTransformUpdateDistanceMin = 0xedc; // float
		constexpr auto CachedWorldTransform = 0xee0; // FTransform
		constexpr auto RootBoneRelativeTransform = 0xf10; // FTransform
		constexpr auto ReplicatedLocation = 0xf40; // FVector
		constexpr auto ElapsedTimeAfterReplication = 0xf4c; // float
		constexpr auto TransformUpdateDelay = 0xf50; // float
		constexpr auto TickUpdateCount = 0xf54; // int32_t
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_AUPSMovementGroup {
		constexpr auto GroupLeader = 0x228; // ACharacter*
		constexpr auto MovementGroupMembers = 0x230; // TMap<ACharacter*, FMovementGroupMemberInfo>
		constexpr auto bRotateMovementPointsAroundLeader = 0x280; // bool
		constexpr auto Formation = 0x288; // AUPSGroupMovementFormation*
		constexpr auto MembersMovementReactionTime = 0x290; // float
		constexpr auto MembersMovementReactionTimeRandomDiviation = 0x294; // float
		constexpr auto GroupMovementLeaderAIC = 0x298; // AUPSGroupMovementAIController*
		constexpr auto BillboardComponent = 0x2a0; // UBillboardComponent*
		constexpr auto SpawnedFormation = 0x2a8; // AUPSGroupMovementFormation*
		constexpr auto DelayedMovement = 0x2e0; // TMap<ACharacter*, FDelayedGroupMovement>
	}

	namespace n_UCrowGasMaskComponent {
		constexpr auto MaskOn_FP = 0xb0; // UAnimMontage*
		constexpr auto MaskOn_TP = 0xb8; // UAnimMontage*
		constexpr auto MaskOff_FP = 0xc0; // UAnimMontage*
		constexpr auto MaskOff_TP = 0xc8; // UAnimMontage*
		constexpr auto GasMaskIndex = 0xd0; // uint32_t
		constexpr auto MaskOn_Sound = 0xd8; // UAkAudioEvent*
		constexpr auto MaskOff_Sound = 0xe0; // UAkAudioEvent*
		constexpr auto FilterDurabilityZero_Sound = 0xe8; // UAkAudioEvent*
		constexpr auto Idle_Sound = 0xf0; // UAkAudioEvent*
		constexpr auto Moving_Sound = 0xf8; // UAkAudioEvent*
		constexpr auto Sprinting_Sound = 0x100; // UAkAudioEvent*
		constexpr auto Moving_End_Sound = 0x108; // UAkAudioEvent*
		constexpr auto GasMaskDummyComponent1P = 0x110; // USkeletalMeshComponent*
		constexpr auto GasMaskDummyComponent3P = 0x118; // USkeletalMeshComponent*
		constexpr auto bZeroFilterSoundFlag = 0x120; // bool
		constexpr auto bMovingEndSoundPlaying = 0x121; // bool
		constexpr auto bInside = 0x122; // bool
		constexpr auto GasMaskSoundState = 0x123; // ECrowGasMaskSoundState
	}

	namespace n_UCrowMissionTableManager {
		constexpr auto MapMissionTable = 0x28; // TMap<int32_t, FCrowMissionTableRow>
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UCrowSquadMatchRewardTableManager {
		constexpr auto TableMap = 0x28; // TMap<FString, FCrowSquadMatchRewardTableRow>
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UProceduralSphereToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto LatitudeSlices = 0x74; // int32_t
		constexpr auto LongitudeSlices = 0x78; // int32_t
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UCrowSpinSelectionWidget {
		constexpr auto BT_Prev = 0x348; // UCrowButton*
		constexpr auto BT_Next = 0x350; // UCrowButton*
		constexpr auto TB_SelectedItem = 0x358; // UTextBlock*
		constexpr auto ItemList = 0x360; // TArray<FText>
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4d0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4e0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4e8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x4f8; // int32_t
		constexpr auto InstanceStartCullDistance = 0x4fc; // int32_t
		constexpr auto InstanceEndCullDistance = 0x500; // int32_t
		constexpr auto InstanceReorderTable = 0x508; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x560; // int32_t
		constexpr auto CachedMappings = 0x568; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_UAnimNotify_CLSEarlyBlendOut {
		constexpr auto BlendOutTime = 0x30; // float
		constexpr auto MovementModes = 0x38; // TArray<ECLSMovementMode>
		constexpr auto Stances = 0x48; // TArray<ECLSStance>
		constexpr auto bCheckMovementInput = 0x58; // bool
		constexpr auto bCheckRotationInput = 0x59; // bool
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UCrowStatusWidget {
		constexpr auto WS_CharacterState = 0x348; // UWidgetSwitcher*
		constexpr auto CrowWeaponInfoWidget = 0x350; // UCrowWeaponInfoWidget*
		constexpr auto WS_EquipGadget = 0x358; // UWidgetSwitcher*
		constexpr auto WS_EquipHeal = 0x360; // UWidgetSwitcher*
		constexpr auto WS_EquipGrenade = 0x368; // UWidgetSwitcher*
		constexpr auto IMG_Item_G = 0x370; // UImage*
		constexpr auto IMG_Item_H = 0x378; // UImage*
		constexpr auto IMG_Item_T = 0x380; // UImage*
		constexpr auto TB_RemainCount_G = 0x388; // UTextBlock*
		constexpr auto TB_RemainCount_H = 0x390; // UTextBlock*
		constexpr auto TB_RemainCount_T = 0x398; // UTextBlock*
		constexpr auto RTB_Key_Gadget = 0x3a0; // UCrowInputMappingWidget*
		constexpr auto RTB_Key_Gadget_BombMission = 0x3a8; // UCrowInputMappingWidget*
		constexpr auto RTB_Key_Heal = 0x3b0; // UCrowInputMappingWidget*
		constexpr auto RTB_Key_Grenade = 0x3b8; // UCrowInputMappingWidget*
		constexpr auto IMG_Gauge_G = 0x3c0; // UImage*
		constexpr auto CP_Gadget = 0x3c8; // UCanvasPanel*
		constexpr auto CP_Grenade = 0x3d0; // UCanvasPanel*
		constexpr auto CP_Heal = 0x3d8; // UCanvasPanel*
		constexpr auto GrenadeCoolTimeGauge = 0x3e0; // UMaterialInstanceDynamic*
		constexpr auto FadeTweenAlpha = 0x3e8; // UCrowWidgetTweenAlpha*
		constexpr auto VivoxManager = 0x3f8; // UCrowVivoxManager*
		constexpr auto GrenadeBehaviorName = 0x424; // FName
		constexpr auto SpecialWeaponBehaviorName = 0x42c; // FName
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UPinchBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto bPerpDamping = 0x6c; // bool
	}

	namespace n_UCrowCharacterFallsComponent {
		constexpr auto bIsFalling = 0xc0; // bool
		constexpr auto CharacterPawn = 0xc8; // ACrowCharacterPawn*
		constexpr auto CrowMovementComp = 0xd0; // UCrowCharacterMovement*
		constexpr auto CurrentVehicleType = 0xd8; // EVehicleIdentity
		constexpr auto DamageType = 0xd9; // ECrowFallsDamageType
		constexpr auto Damage = 0xdc; // float
		constexpr auto StartPosition = 0xe0; // FVector
		constexpr auto SurfaceType = 0xec; // EPhysicalSurface
	}

	namespace n_AReplicationGraphDebugActor {
		constexpr auto ReplicationGraph = 0x220; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x228; // UNetReplicationGraphConnection*
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UCrowSoundSwitchFadeByDistance {
		constexpr auto DistanceArrayOfMeter = 0x48; // TArray<float>
		constexpr auto InputVolumes = 0x58; // TArray<float>
		constexpr auto TestDistance = 0x68; // float
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_USkyCreatorWeatherPreset {
		constexpr auto Description = 0x30; // FText
		constexpr auto SkyAtmosphereSettings = 0x48; // FSkyCreatorSkyAtmosphereSettings
		constexpr auto VolumetricCloudSettings = 0xb4; // FSkyCreatorVolumetricCloudSettings
		constexpr auto SkyLightSettings = 0x140; // FSkyCreatorSkyLightSettings
		constexpr auto SunLightSettings = 0x154; // FSkyCreatorSunLightSettings
		constexpr auto MoonLightSettings = 0x180; // FSkyCreatorMoonLightSettings
		constexpr auto ExponentialHeightFogSettings = 0x1ac; // FSkyCreatorExponentialHeightFogSettings
		constexpr auto StarMapSettings = 0x210; // FSkyCreatorStarMapSettings
		constexpr auto WeatherFXSettings = 0x244; // FSkyCreatorWeatherFXSettings
		constexpr auto WindSettings = 0x268; // FSkyCreatorWindSettings
		constexpr auto ExposureSettings = 0x28c; // FSkyCreatorExposureSettings
	}

	namespace n_UBP_PKM_MagazineAnimInst_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x2f8; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x328; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x370; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_MachineGun = 0x390; // FAnimNode_MachineGunHandler
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x480; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UCrowWorldSettings {
		constexpr auto CrowWorldLODSetting = 0x38; // UCrowWorldLODSetting*
	}

	namespace n_UCrowCustomizeOutfitSlotWidget {
		constexpr auto IMG_Selected = 0x348; // UImage*
		constexpr auto IMG_Equiped = 0x350; // UImage*
		constexpr auto IMG_NewIcon = 0x358; // UImage*
		constexpr auto BT_Customize_List_Slot = 0x360; // UCrowButton*
		constexpr auto TB_ItemName = 0x368; // UTextBlock*
		constexpr auto WS_IconIMG = 0x370; // UWidgetSwitcher*
		constexpr auto IMG_IconIMG_OutFit = 0x378; // UImage*
		constexpr auto IMG_IconIMG_Appearance = 0x380; // UImage*
		constexpr auto IMG_MoneyIcon = 0x388; // UImage*
		constexpr auto IMG_MoneyBack = 0x390; // UImage*
		constexpr auto TB_Label_Money = 0x398; // UTextBlock*
		constexpr auto HB_Cost = 0x3a0; // UHorizontalBox*
		constexpr auto WS_Grade = 0x3a8; // UWidgetSwitcher*
		constexpr auto CP_RewardPanel = 0x3b0; // UCanvasPanel*
		constexpr auto CP_Count = 0x3b8; // UCanvasPanel*
		constexpr auto TB_ItemCount = 0x3c0; // UTextBlock*
		constexpr auto GPointIcon = 0x3c8; // UPaperSprite*
		constexpr auto RCPIcon = 0x3d0; // UPaperSprite*
		constexpr auto TBItemName_Sel = 0x418; // UTextBlock*
		constexpr auto Selected = 0x420; // bool
		constexpr auto Equiped = 0x421; // bool
		constexpr auto useDeselect = 0x422; // bool
		constexpr auto IsShopItem = 0x423; // bool
		constexpr auto SlotValue = 0x424; // int32_t
		constexpr auto IntValue = 0x428; // int32_t
		constexpr auto CurrentItemTable = 0x430; // FCrowItemTableBaseRow
		constexpr auto CurrentItemData = 0x598; // FCrowItemData
		constexpr auto CurrentItemSlotType = 0x5c8; // ECrowCustomizeCategoryType
		constexpr auto AppearanceCategoryType = 0x5c9; // ECrowCharacterAppearanceType
		constexpr auto SceneLobby = 0x5d0; // ACrowSceneLobby*
		constexpr auto ShopTableData = 0x5d8; // FCrowShopTableRow
		constexpr auto GridRow = 0x650; // int32_t
	}

	namespace n_ACrowDistanceBasedFXTestActor {
		constexpr auto SphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto WeaponSubType = 0x228; // ECrowWeaponSubType
		constexpr auto TestFX = 0x230; // FCrowWeaponGroundDustEffect
		constexpr auto bDrawForDebug = 0x2e0; // bool
		constexpr auto ImpactPointSize = 0x2e4; // float
		constexpr auto CurrParam = 0x2e8; // float
		constexpr auto currDist = 0x2ec; // float
		constexpr auto bInitialized = 0x2f0; // bool
		constexpr auto WeaponSubTypeName = 0x2f4; // FName
		constexpr auto WeaponSubTypeNames = 0x300; // TMap<int64_t, FName>
		constexpr auto FXManager = 0x350; // UCrowDistanceBasedFXManager*
		constexpr auto ArrowComp = 0x358; // UArrowComponent*
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UCrowMailTableManager {
		constexpr auto AccountRewardTable = 0x28; // TMap<uint32_t, FCrowMailAccountReward>
		constexpr auto RewardSentenseTable = 0x78; // TMap<uint32_t, FCrowMailRewardSentence>
		constexpr auto RewardTimeTable = 0xc8; // TMap<uint32_t, FCrowMailRewardTime>
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_ACrowSupplyAmmoActor {
		constexpr auto ArraySupplyAmmoInfo = 0x220; // TArray<FCrowSupplyAmmoInfo>
		constexpr auto BoxComponent = 0x230; // UBoxComponent*
		constexpr auto IconLocation = 0x238; // USceneComponent*
		constexpr auto SupplyBoxTableKey = 0x240; // FName
		constexpr auto SupplyBoxType = 0x248; // ECrowSupplyBoxType
		constexpr auto MaxSupplyCount = 0x24c; // uint32_t
		constexpr auto UseSound = 0x250; // UAkAudioEvent*
		constexpr auto LifeTime = 0x258; // float
		constexpr auto CoolTime = 0x25c; // float
		constexpr auto HP = 0x260; // float
		constexpr auto DestroyEffect = 0x268; // UParticleSystem*
		constexpr auto DestroySound = 0x270; // UAkAudioEvent*
		constexpr auto IconDisplayInfo = 0x278; // FCrowGameIconDisplayInfo
		constexpr auto BoxTeam = 0x300; // char
		constexpr auto RemainSupplyCount = 0x304; // uint32_t
		constexpr auto InstallPlayerState = 0x308; // ACrowPlayerStateBase*
	}

	namespace n_UWebBrowserAssetManager {
		constexpr auto DefaultMaterial = 0x28; // TSoftObjectPtr<UMaterial>
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UCrowVirtualISMC {
		constexpr auto VirtualInstances = 0x668; // TArray<FCrowVirtualISMCInstance>
		constexpr auto LookupVirtualInstanceIndex = 0x678; // TArray<int32_t>
		constexpr auto RecycleVirtualIndexes = 0x688; // TArray<int32_t>
		constexpr auto ShowVirtualInstanceCount = 0x698; // int32_t
	}

	namespace n_UCrowGameInvenComponent {
		constexpr auto EquipArray = 0xb0; // TArray<ACrowItemBase*>
		constexpr auto InvenArray = 0xc0; // TArray<ACrowItemBase*>
		constexpr auto CurrentWeaponKey = 0xd0; // uint32_t
		constexpr auto CurrentWeaponSlotIndex = 0xd4; // char
		constexpr auto EquipCount = 0xd5; // char
		constexpr auto ServerOnlyItemArray = 0xd8; // TArray<ACrowItemBase*>
		constexpr auto CachedCurrentWeapon = 0xf0; // ACrowWeaponBase*
		constexpr auto LearLootItemList = 0xf8; // TArray<ACrowItemBase*>
		constexpr auto CharacterOwner = 0x108; // ACrowCharacterPawn*
		constexpr auto InvenSlotCount = 0x110; // int32_t
		constexpr auto CurrentPickupInventory = 0x118; // ACrowPickupInventory*
		constexpr auto CurrentRot = 0x120; // float
		constexpr auto CurrentDist = 0x124; // float
		constexpr auto DropAddDist = 0x128; // float
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UWorkPlaneProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_ACrowSceneDediServer {
		constexpr auto WaitUserMap = 0x940; // TMap<uint64_t, FCrowWaitUserInfo>
		constexpr auto PingAliveActor = 0x990; // ACrowWorldPingAliveActor*
	}

	namespace n_UCrowSelectModWidget {
		constexpr auto TB_MODName = 0x348; // UTextBlock*
		constexpr auto TB_GameModDesc = 0x350; // UTextBlock*
		constexpr auto WB_SelectMap = 0x358; // UCrowSelectMapWidget*
		constexpr auto BT_MatchButton = 0x360; // UCrowButton*
		constexpr auto TB_MatchLabel = 0x368; // UTextBlock*
		constexpr auto IMG_DisableCover = 0x370; // UImage*
		constexpr auto MapIndex = 0x378; // uint32_t
		constexpr auto GameMode = 0x37c; // uint32_t
	}

	namespace n_UCrowDecalComponent {
		constexpr auto MaterialDynamic = 0x238; // UMaterialInstanceDynamic*
		constexpr auto FadeInCurve = 0x240; // UCurveFloat*
		constexpr auto FadeOutCurve = 0x248; // UCurveFloat*
		constexpr auto EmissiveInCurve = 0x250; // UCurveFloat*
		constexpr auto EmissiveOutCurve = 0x258; // UCurveFloat*
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_ACrowVehiclePawn {
		constexpr auto RewardIconActor = 0x2a8; // ACrowWorldIconActor*
		constexpr auto RewardSmokeEffect = 0x2b0; // UParticleSystemComponent*
		constexpr auto VehicleIndex = 0x2b8; // uint32_t
		constexpr auto VehicleTextIndex = 0x2c0; // FString
		constexpr auto SkidMarkIndex = 0x2d0; // FName
		constexpr auto ComponentContainer = 0x2d8; // UCrowComponentContainer*
		constexpr auto VehicleFacadeClass = 0x2e0; // UCrowVehicleFacadeBase*
		constexpr auto ReplicatedMovementTolerance = 0x2e8; // FRepMovementTolerance
		constexpr auto VehicleParam = 0x2f8; // UCrowVehicleParam*
		constexpr auto SceneComp = 0x300; // USceneComponent*
		constexpr auto MapVehicleFoliageAffector = 0x308; // TMap<ECrowVehicleState, UCrowFoliageAffectorComponent*>
		constexpr auto FoliageAffectors = 0x358; // TArray<UCrowFoliageAffectorComponent*>
		constexpr auto VehicleFacade = 0x368; // UCrowVehicleFacadeBase*
		constexpr auto CachedRigidBodyState = 0x370; // FRigidBodyState
		constexpr auto FSM = 0x3b0; // UCrowVehicleFSM*
		constexpr auto RotorFSM = 0x3b8; // UCrowRotorFSM*
		constexpr auto EventDispatcher = 0x3c0; // UCrowVehicleEventDispatcher*
		constexpr auto VehicleFloodingComponent = 0x3c8; // UCrowVehicleFloodingComponent*
		constexpr auto VehicleImpactDamageControl = 0x3d0; // UCrowImpactDamageControl*
		constexpr auto BattleContainer = 0x3d8; // FCrowBattleContainer
		constexpr auto bPostEditMoveInit = 0x3f8; // bool
		constexpr auto DefaultCamera3PRotate = 0x3fc; // FRotator
		constexpr auto IconType = 0x408; // ECrowIconType
		constexpr auto EmptySeatCount = 0x40c; // uint32_t
		constexpr auto MapIcon = 0x410; // UCrowWorldMapIcon*
		constexpr auto IndiViewInfo = 0x418; // UCrowIndicatorViewInfo*
		constexpr auto bVehicleAir = 0x420; // bool
		constexpr auto LastVehicleState = 0x424; // ECrowVehicleState
		constexpr auto DamageExpMap = 0x428; // TMap<uint64_t, FCrowDamageExpInfo>
		constexpr auto PrevVelocity = 0x47c; // FVector
		constexpr auto DebugSpawnerLocation = 0x488; // FVector
		constexpr auto DebugSpawnerLocationTeleport = 0x494; // FVector
		constexpr auto VehicleType = 0x4a0; // EVehicleIdentity
		constexpr auto ImpactSound = 0x4a8; // UAkAudioEvent*
		constexpr auto IconDisplayInfoLocal = 0x4b0; // FCrowGameIconDisplayInfo
		constexpr auto IconDisplayInfoMySquad = 0x538; // FCrowGameIconDisplayInfo
		constexpr auto IconDisplayInfoMyTeam = 0x5c0; // FCrowGameIconDisplayInfo
		constexpr auto IconDisplayInfoEnemy = 0x648; // FCrowGameIconDisplayInfo
		constexpr auto IconDisplayInfoEmpty = 0x6d0; // FCrowGameIconDisplayInfo
		constexpr auto ModeIconSet = 0x758; // TMap<ECrowGameMode, FCrowVehicleIconInfo>
		constexpr auto MaxLeanAccelerationForward = 0x7a8; // float
		constexpr auto MaxLeanAccelerationRight = 0x7ac; // float
		constexpr auto CachedDeltaVelocities = 0x7b0; // TArray<FCrowVehicleDeltaVelocity>
		constexpr auto CachedBodyVelocity = 0x7c0; // FVector
		constexpr auto PassengerLeanValue = 0x7cc; // FVector2D
		constexpr auto ReadyFrameCount = 0x7d4; // int32_t
		constexpr auto SyncPhysicsIgnoreTime = 0x7d8; // float
		constexpr auto PrevWorldOrigin = 0x7dc; // FVector
		constexpr auto FloodingCheckBox = 0x7e8; // UBoxComponent*
		constexpr auto OverrideSkinIndex = 0x7f0; // uint32_t
		constexpr auto bIsFlooding = 0x7f4; // bool
		constexpr auto SquadRewardIndex = 0x7f5; // char
		constexpr auto FloodingCheckTimerHandle = 0x7f8; // FTimerHandle
		constexpr auto CurrentFloodingSecond = 0x800; // float
		constexpr auto IsCrowVehicleComponentUpdated = 0x804; // bool
		constexpr auto OwnerTeamID = 0x805; // char
		constexpr auto LockOnState = 0x806; // EVehicleLockOnState
		constexpr auto RadialDamagePhysicsMaterial = 0x808; // UPhysicalMaterial*
		constexpr auto LockOnCharacterList = 0x818; // TArray<ACrowCharacterPawn*>
		constexpr auto TargetingCharacterList = 0x828; // TArray<ACrowCharacterPawn*>
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UCrowBoardWidget {
		constexpr auto BT_Banner_2 = 0x348; // UCrowButton*
		constexpr auto BT_Banner_3 = 0x350; // UCrowButton*
		constexpr auto BT_Banner_4 = 0x358; // UCrowButton*
		constexpr auto BT_Banner_5 = 0x360; // UCrowButton*
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UCrowShootingTargetPointComponent {
		constexpr auto Point = 0x468; // int32_t
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UCrowWidgetButtonBase {
		constexpr auto BTN_Main = 0x2b0; // UButton*
		constexpr auto IMG_BackGround = 0x2b8; // UImage*
		constexpr auto IMG_Frame = 0x2c0; // UImage*
		constexpr auto TB_Label = 0x2c8; // UTextBlock*
		constexpr auto ButtonLabel = 0x2d0; // FText
		constexpr auto ButtonBackGround = 0x2e8; // FSlateBrush
		constexpr auto ButtonFrame = 0x370; // FSlateBrush
		constexpr auto AudioEvent_Clicked = 0x3f8; // UAkAudioEvent*
		constexpr auto UseHoveredSound = 0x400; // bool
		constexpr auto AudioEvent_Hovered = 0x408; // UAkAudioEvent*
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x128; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x130; // bool
		constexpr auto ScrubTailLengthMs = 0x134; // int32_t
		constexpr auto StopAtSectionEnd = 0x138; // bool
		constexpr auto EventName = 0x140; // FString
		constexpr auto MaxSourceDuration = 0x170; // float
		constexpr auto MaxDurationSourceID = 0x178; // FString
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UEditPivotTool {
		constexpr auto TransformProps = 0x98; // UEditPivotToolProperties*
		constexpr auto EditPivotActions = 0xa0; // UEditPivotToolActionPropertySet*
		constexpr auto ActiveGizmos = 0x178; // TArray<FEditPivotTarget>
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_ACrowRecoilEditorBoard {
		constexpr auto vOrigin = 0x220; // FVector
		constexpr auto TempleteItemClass = 0x230; // ACrowRecoilEditorItem*
		constexpr auto ArrItem = 0x238; // TArray<ACrowRecoilEditorItem*>
		constexpr auto ArrDeleteIndex = 0x258; // TArray<int32_t>
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UDrawPolyPathExtrudeProperties {
		constexpr auto Direction = 0x60; // EDrawPolyPathExtrudeDirection
	}

	namespace n_URevolveProperties {
		constexpr auto RevolutionDegrees = 0x60; // double
		constexpr auto RevolutionDegreesOffset = 0x68; // double
		constexpr auto Steps = 0x70; // int32_t
		constexpr auto bReverseRevolutionDirection = 0x74; // bool
		constexpr auto bFlipMesh = 0x75; // bool
		constexpr auto bProfileIsCrossSectionOfSide = 0x76; // bool
		constexpr auto PolygroupMode = 0x77; // ERevolvePropertiesPolygroupMode
		constexpr auto QuadSplitMode = 0x78; // ERevolvePropertiesQuadSplit
		constexpr auto DiagonalProportionTolerance = 0x80; // double
		constexpr auto CapFillMode = 0x88; // ERevolvePropertiesCapFillMode
		constexpr auto bWeldFullRevolution = 0x89; // bool
		constexpr auto bWeldVertsOnAxis = 0x8a; // bool
		constexpr auto AxisWeldTolerance = 0x90; // double
		constexpr auto bSharpNormals = 0x98; // bool
		constexpr auto SharpNormalAngleTolerance = 0xa0; // double
		constexpr auto bFlipVs = 0xa8; // bool
		constexpr auto bUVsSkipFullyWeldedEdges = 0xa9; // bool
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ACrowSceneIndexOverride {
		constexpr auto SceneIndex = 0x220; // uint32_t
	}

	namespace n_UCrowSquadLoadoutSlotWeaponWidget {
		constexpr auto BT_LoadoutSlot = 0x358; // UCrowButton*
		constexpr auto TB_ItemName = 0x360; // UTextBlock*
		constexpr auto IMG_Selected = 0x368; // UImage*
		constexpr auto IMG_Equiped = 0x370; // UImage*
		constexpr auto WS_IconIMG = 0x378; // UWidgetSwitcher*
		constexpr auto IMG_ItemIcon = 0x380; // UImage*
		constexpr auto WB_FireArm_Combine = 0x388; // UCrowWeaponCombinedIconWidget*
		constexpr auto CP_LoadOutBox = 0x390; // UCanvasPanel*
		constexpr auto TB_LoadoutName = 0x398; // UTextBlock*
		constexpr auto IMG_Loadout_Lock = 0x3a0; // UImage*
		constexpr auto TBItemName_Sel = 0x3a8; // UTextBlock*
		constexpr auto Selected = 0x3b0; // bool
		constexpr auto Equiped = 0x3b1; // bool
		constexpr auto SquadWeapon = 0x3b4; // FCrowSquadWeapon
		constexpr auto LoadoutWeapon = 0x3c0; // FCrowWeaponSlot
		constexpr auto WeaponData = 0x3f0; // FCrowWeaponData
		constexpr auto WeaponTable = 0x560; // FCrowWeaponTableRow
		constexpr auto PresetIndex = 0x1780; // int32_t
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UCrowFxReplicatorComponent {
		constexpr auto InitializeData = 0xb0; // FInitializeFxReplicator
		constexpr auto CreatedFxList = 0x100; // TArray<UParticleSystemComponent*>
		constexpr auto CreatedAudioList = 0x110; // TArray<UAudioComponent*>
		constexpr auto WwiseEventPlayingInfos = 0x120; // TArray<FWwiseEventPlayingInfo>
		constexpr auto IsVehicleFx = 0x130; // bool
		constexpr auto VehiclePawn = 0x134; // TWeakObjectPtr<ACrowVehiclePawn>
		constexpr auto BodySKC = 0x13c; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto SpeedMax = 0x144; // float
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UCrowTriggerCommandGaugeCircle {
		constexpr auto GaugeWidget = 0x128; // UCrowInteractionProgressCircleWidget*
	}

	namespace n_UCrowVehicleWidgetStatus {
		constexpr auto TXT_Name = 0x350; // UTextBlock*
		constexpr auto TXT_Speed = 0x358; // UTextBlock*
		constexpr auto TXT_Altitude = 0x360; // UTextBlock*
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_ACrowItemAmmo {
		constexpr auto ItemTable = 0x310; // FCrowAmmoTableRow
		constexpr auto UseDefaultSettings = 0x538; // bool
		constexpr auto AmmoIndex = 0x53c; // uint32_t
		constexpr auto AmmoCount = 0x540; // uint32_t
	}

	namespace n_UCrowWidgetManager {
		constexpr auto WidgetClassList = 0x28; // TArray<UCrowWidgetBase*>
		constexpr auto CrosshairMap = 0x38; // TMap<FClassMapKey, UCrowWeaponCrosshairBase*>
		constexpr auto CurrentFocusWidget = 0x88; // UUserWidget*
		constexpr auto ZoomWidgetMap = 0x90; // TMap<FClassMapKey, UCrowWeaponZoomWidget*>
		constexpr auto MessageBoxInfoQueue = 0xe0; // TArray<FCrowMessageBoxInfo>
		constexpr auto MessageBoxWidget = 0xf0; // UCrowMessageBoxWidget*
		constexpr auto LoadingBoxWidget = 0xf8; // UCrowLoadingBoxWidget*
		constexpr auto SystemMessageBoxWidget = 0x100; // UCrowSystemMessageBoxWidget*
		constexpr auto SystemMessageBoxBottomWidget = 0x108; // UCrowSystemMessageBoxWidget*
		constexpr auto MultiSystemMessageBoxWidget = 0x110; // UCrowMultiSystemMessageBoxWidget*
		constexpr auto MatchingTimerWidget = 0x118; // UCrowMatchingTimerWidget*
		constexpr auto CurrentFullScreenWidget = 0x120; // UCrowFullScreenWidgetBase*
		constexpr auto CrowSettingsWidget = 0x128; // UCrowSettingsWidget*
		constexpr auto CrowMovieWidget = 0x130; // UCrowMovieWidget*
		constexpr auto WidgetInteractionTimer = 0x148; // FTimerHandle
		constexpr auto CrowMessageBoxWidgetClass = 0x150; // UCrowMessageBoxWidget*
		constexpr auto CrowLoadingBoxWidgetClass = 0x158; // UCrowLoadingBoxWidget*
		constexpr auto CrowSysteMessageBoxWidgetClass = 0x160; // UCrowSystemMessageBoxWidget*
		constexpr auto CrowSysteMessageBoxBottomWidgetClass = 0x168; // UCrowSystemMessageBoxWidget*
		constexpr auto CrowMultiSystemMessageBoxWidgetClass = 0x170; // UCrowMultiSystemMessageBoxWidget*
		constexpr auto CrowMatchingTimerWidgetClass = 0x178; // UCrowMatchingTimerWidget*
		constexpr auto CrowSettingsWidgetClass = 0x180; // UCrowSettingsWidget*
		constexpr auto CrowMovieWidgetClass = 0x188; // UCrowMovieWidget*
		constexpr auto Default_AudioEvent_Clicked = 0x190; // UAkAudioEvent*
		constexpr auto Default_AudioEvent_Hovered = 0x198; // UAkAudioEvent*
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UCrowWorldSplineMeshComponent {
		constexpr auto Axis = 0x568; // ECrowWorldSplineMeshAxis
		constexpr auto PointIndex = 0x56c; // int32_t
		constexpr auto MeshIndex = 0x570; // int32_t
		constexpr auto IsStartMesh = 0x574; // bool
		constexpr auto IsEndMesh = 0x575; // bool
		constexpr auto DistanceAlongSpline = 0x578; // float
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UCrowWorldSyncServerWorker {
		constexpr auto World = 0x28; // UWorld*
		constexpr auto MapConfig = 0x30; // UCrowWorldMapConfig*
		constexpr auto WorldDataAsset = 0x38; // UCrowWorldDataCollectionAsset*
		constexpr auto ReplicationActor = 0x40; // ACrowWorldReplicationActor*
		constexpr auto WorldFoliage = 0x48; // UCrowWorldFoliage*
		constexpr auto WorldGridArray = 0x50; // TArray<FCrowWorldGrid>
		constexpr auto LandmarkData = 0x60; // FCrowWorldReplicationLandmark
		constexpr auto Clusters = 0x78; // TMap<uint32_t, FCrowWorldReplicationCluster>
		constexpr auto Sectors = 0xc8; // TMap<uint32_t, FCrowWorldReplicationSector>
		constexpr auto ActorInstances = 0x118; // TMap<uint32_t, ACrowWorldActor*>
		constexpr auto SyncPlayerStates = 0x168; // TMap<ACrowWorldReplicationController*, FCrowWorldSyncServerPlayerState>
		constexpr auto SectorStates = 0x1b8; // TMap<uint32_t, FCrowWorldSyncServerControllerContainer>
		constexpr auto ClusterStates = 0x208; // TMap<uint32_t, FCrowWorldSyncServerControllerContainer>
		constexpr auto TempGridIndexes = 0x258; // TArray<uint32_t>
		constexpr auto TempArrayControllers = 0x268; // TArray<ACrowWorldReplicationController*>
		constexpr auto DestructionSyncCache = 0x278; // FCrowWorldDestructionSyncCache
		constexpr auto DestructionLink = 0x2e0; // FCrowWorldDestructionLink
	}

	namespace n_UCrowDamageIndicatorWidget {
		constexpr auto CP_IndicatorList = 0x348; // UCanvasPanel*
		constexpr auto IndicatorItem = 0x350; // UCrowDamageIndicatorItemWidget*
		constexpr auto DisplayTime = 0x358; // float
		constexpr auto FadeOutTime = 0x35c; // float
	}

	namespace n_UCrowGetItemDescWidget {
		constexpr auto TB_GetDesc = 0x348; // UTextBlock*
		constexpr auto TB_Item_Name = 0x350; // UTextBlock*
		constexpr auto ItemActor = 0x358; // AActor*
	}

	namespace n_UCrowPlayerWeaponListItemWidget {
		constexpr auto TB_SlotNumber = 0x1a48; // UTextBlock*
		constexpr auto TB_WeaponName = 0x1a50; // UTextBlock*
		constexpr auto CP_WeaponPanel = 0x1a58; // UCanvasPanel*
		constexpr auto CP_Unequipped = 0x1a60; // UCanvasPanel*
		constexpr auto CP_Equip = 0x1a68; // UCanvasPanel*
		constexpr auto IMG_NumBack = 0x1a70; // UImage*
		constexpr auto IMG_BackGround = 0x1a78; // UImage*
		constexpr auto IMG_Infinite = 0x1a80; // UImage*
		constexpr auto IMG_Cover_Empty = 0x1a88; // UImage*
		constexpr auto RTB_Key = 0x1a90; // UCrowInputMappingWidget*
		constexpr auto PB_WeaponGauge = 0x1a98; // UProgressBar*
		constexpr auto HotKeySprite = 0x1aa0; // UPaperSprite*
		constexpr auto ChoseAnimation = 0x1aa8; // UWidgetAnimation*
		constexpr auto BlackColor = 0x1ab0; // FLinearColor
		constexpr auto WhiteColor = 0x1ac0; // FLinearColor
		constexpr auto CurrentWeapon = 0x1ad0; // ACrowWeaponBase*
		constexpr auto IsSelectWeapon = 0x1ad8; // bool
		constexpr auto IsInfinteAmmo = 0x1ad9; // bool
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x520; // FGuid
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UCrowSelectLoadoutBoxWidget {
		constexpr auto BT_EscBack = 0x368; // UCrowButton*
		constexpr auto BT_SelectComplete = 0x370; // UCrowButton*
		constexpr auto GP_WeaponList = 0x378; // UGridPanel*
		constexpr auto TB_RemainTime_Value = 0x380; // UTextBlock*
		constexpr auto TB_UseCount_Value = 0x388; // UTextBlock*
		constexpr auto WeaponMainWidgetArray = 0x390; // TArray<UCrowSquadLoadoutSlotWeaponWidget*>
		constexpr auto TargetActor = 0x3a0; // ACrowLoadoutBoxActor*
	}

	namespace n_ACrowWaterInitializeActor {
		constexpr auto WaterPhysicalMaterial = 0x220; // UPhysicalMaterial*
		constexpr auto WaterPlaneTag = 0x228; // FName
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UCrowGameInstance {
		constexpr auto DeathZoneLifeTime = 0x1a8; // float
		constexpr auto DeathZoneWidgetClass = 0x1b0; // UUserWidget*
		constexpr auto DeathZonePostProcess = 0x1c0; // FPostProcessSettings
		constexpr auto EquipmentWeaponsIndex = 0x710; // TArray<FString>
		constexpr auto NickName = 0x720; // FText
		constexpr auto DedicateAddress = 0x738; // FName
		constexpr auto CrowWidgetManagerClass = 0x740; // UCrowWidgetManager*
		constexpr auto PackagingAssetsList = 0x748; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto StringTableClass = 0x758; // UCrowPackagingAssets*
		constexpr auto LoadingWidget = 0x760; // UUserWidget*
		constexpr auto PhysicalMatSoundClass = 0x768; // UCrowPhysicalMatSound*
		constexpr auto WWiseSoundEventsClass = 0x770; // UCrowWWiseSoundEvents*
		constexpr auto DamageEffectClass = 0x778; // UCrowDamageEffect*
		constexpr auto SpectatorIconActorClass = 0x780; // ACrowSpectatorIconActor*
		constexpr auto CrowVehicleManagerClass = 0x788; // UCrowVehicleManager*
		constexpr auto CrowSprayManagerClass = 0x790; // UCrowSprayManager*
		constexpr auto CrowSteamManagerClass = 0x798; // UCrowPlatformSteam*
		constexpr auto MPCWeaponFOV = 0x7a0; // UMaterialParameterCollection*
		constexpr auto InputManager = 0x7a8; // UCrowInputManager*
		constexpr auto WidgetManager = 0x7b0; // UCrowWidgetManager*
		constexpr auto ClientManager = 0x7b8; // UCrowClientManager*
		constexpr auto FXManager = 0x7c0; // UCrowFxManager*
		constexpr auto DistanceBasedFXManager = 0x7c8; // UCrowDistanceBasedFXManager*
		constexpr auto DecalManager = 0x7d0; // UCrowDecalManager*
		constexpr auto NetworkClient = 0x7d8; // UCrowNetworkClient*
		constexpr auto NetworkDediServer = 0x7e0; // UCrowNetworkDediServer*
		constexpr auto SceneManager = 0x7e8; // UCrowSceneManager*
		constexpr auto PingManager = 0x7f0; // UCrowPingManager*
		constexpr auto PhysicalMatSound = 0x7f8; // UCrowPhysicalMatSound*
		constexpr auto WWiseSoundEvents = 0x800; // UCrowWWiseSoundEvents*
		constexpr auto ChatManager = 0x808; // UCrowChatManager*
		constexpr auto SlangManager = 0x810; // UCrowSlangManager*
		constexpr auto VivoxManager = 0x818; // UCrowVivoxManager*
		constexpr auto SteamManager = 0x820; // UCrowPlatformSteam*
		constexpr auto DamageEffect = 0x828; // UCrowDamageEffect*
		constexpr auto DediLogIPC = 0x830; // UCrowDediLogIPC*
		constexpr auto LoadingManager = 0x838; // UCrowLoadingManager*
		constexpr auto LibraryTime = 0x840; // UCrowLibraryTime*
		constexpr auto VehicleManager = 0x848; // UCrowVehicleManager*
		constexpr auto SprayManager = 0x850; // UCrowSprayManager*
		constexpr auto ReplayManager = 0x858; // UCrowReplayManager*
		constexpr auto ClanManager = 0x860; // UCrowClanManager*
		constexpr auto LobbyRecordManager = 0x868; // UCrowLobbyRecordManager*
		constexpr auto MailManager = 0x870; // UCrowMailManager*
		constexpr auto MainMedalManager = 0x878; // UCrowMainMedalManager*
		constexpr auto CustomModeManager = 0x880; // UCrowCustomModeManager*
		constexpr auto NoticeManager = 0x888; // UCrowWebEventManager*
		constexpr auto ModCategoryTableManager = 0x890; // UCrowModCategoryTableManager*
		constexpr auto DebugLogger = 0x898; // UCrowDebugLogger*
		constexpr auto SwitchingActor = 0x8a0; // TWeakObjectPtr<ACrowSwitchingActor>
		constexpr auto WorldProperty = 0x8a8; // TWeakObjectPtr<ACrowWorldProperty>
		constexpr auto SceneCaptureOwner = 0x8b0; // TWeakObjectPtr<ACrowSceneCaptureOwner>
		constexpr auto AntiHackModule = 0x8b8; // UAntiHackModule*
		constexpr auto SingleClasses = 0x8c0; // TMap<FClassMapKey, UObject*>
		constexpr auto PIE_LocalPlayer = 0x910; // ULocalPlayer*
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
	}

	namespace n_UCrowPlayerLevelRewardTableManager {
		constexpr auto UnlockItemData = 0x28; // TMap<int32_t, FCrowPlayerLevelRewardTableRow>
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_ABP_Grenade_AN-M14Ammo_C {
		constexpr auto Sphere = 0x1a00; // USphereComponent*
		constexpr auto SK_G67_02 = 0x1a08; // USkeletalMeshComponent*
		constexpr auto DynamicRicochet_Trail_Generic_thin = 0x1a10; // UParticleSystemComponent*
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UCrowVehicleFreeSightControl {
		constexpr auto VehicleParam = 0xc0; // UCrowVehicleParam*
	}

	namespace n_UCrowVehicleWidgetSeatCell {
		constexpr auto TXT_Squad_ID = 0x350; // UTextBlock*
		constexpr auto WB_SeatSquadIcon = 0x358; // UCrowSeatSquadIconWidget*
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UCrowCustomizeEtcDescWidget {
		constexpr auto WB_Cutomize_SprayList = 0x348; // UCrowCustomSprayItemListWidget*
		constexpr auto WB_Customize_SprayRadialMenu = 0x350; // UCrowRadialMenuSprayWidget*
		constexpr auto WB_Customize_TopMenu = 0x358; // UCrowTabOutfitWidget*
		constexpr auto BT_AddShoppingBag = 0x360; // UCrowButton*
		constexpr auto BT_Buy = 0x368; // UCrowButton*
		constexpr auto WB_Shop_Popup_ExclusivePurchase_Quick = 0x370; // UCrowShoppingBagWidget*
		constexpr auto HB_CustomizeSpray_Shop_Button = 0x378; // UHorizontalBox*
		constexpr auto IsOwnList = 0x384; // bool
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_ACrowBuildingEditorPartsActor {
		constexpr auto SubMeshList = 0x228; // TArray<FCrowBuildingEditorSubMesh>
		constexpr auto MainMeshComponent = 0x238; // UStaticMeshComponent*
	}

	namespace n_UCrowRecordScoreTotalRankWidget {
		constexpr auto WB_Record_DropDown = 0x348; // UCrowDropDownWidget*
		constexpr auto IMG_Class = 0x350; // UCrowWidgetImage*
		constexpr auto TB_Class = 0x358; // UTextBlock*
		constexpr auto TB_SeasonLv = 0x360; // UTextBlock*
		constexpr auto TB_RankLv = 0x368; // UTextBlock*
		constexpr auto TB_PlayTime = 0x370; // UTextBlock*
		constexpr auto TB_TotalPlayCount = 0x378; // UTextBlock*
		constexpr auto TB_ConquestWinCount = 0x380; // UTextBlock*
		constexpr auto TB_ConquestLoseCount = 0x388; // UTextBlock*
		constexpr auto TB_SquadBestRank = 0x390; // UTextBlock*
		constexpr auto TB_TotalKillCount = 0x398; // UTextBlock*
		constexpr auto TB_TotalDeathCount = 0x3a0; // UTextBlock*
		constexpr auto TB_Rate = 0x3a8; // UTextBlock*
		constexpr auto TB_ExpPerMinute = 0x3b0; // UTextBlock*
		constexpr auto TB_FavoriteWeaponKillCount = 0x3b8; // UTextBlock*
		constexpr auto IMG_Favoriteweapon_Icon = 0x3c0; // UCrowWidgetImage*
		constexpr auto CurrentDateTime = 0x3c8; // FDateTime
		constexpr auto UserNickName = 0x3d0; // FString
		constexpr auto SelectedRankingDateInfoIndex = 0x3e0; // int32_t
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBuoyancyComponent {
		constexpr auto Pontoons = 0xb0; // TArray<FSphericalPontoon>
		constexpr auto OnEnteredWaterDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnExitedWaterDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto BuoyancyData = 0xe0; // FBuoyancyData
		constexpr auto CurrentWaterBodies = 0x130; // TArray<AWaterBody*>
		constexpr auto SimulatingComponent = 0x140; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_UCrowWorldIconWidgetArea {
		constexpr auto IMG_Area = 0x3c8; // UImage*
	}

	namespace n_UCrowShopTableManager {
		constexpr auto ShopTableMap = 0x28; // TMap<int32_t, FCrowShopTableRow>
	}

	namespace n_UCrowDropDownSlotWidget {
		constexpr auto TBTitle = 0x358; // UTextBlock*
		constexpr auto BTDropdown = 0x360; // UCrowButton*
		constexpr auto Index = 0x368; // int32_t
	}

	namespace n_ACrowProjectileCompositionC {
		constexpr auto bIsInstalled = 0x18d0; // bool
		constexpr auto InstalledRotation = 0x18d4; // FRotator
		constexpr auto bPlayBeepSound = 0x18e0; // bool
		constexpr auto TimeToExplosion = 0x18e4; // float
		constexpr auto TimeToPlayBeepSound = 0x18e8; // float
		constexpr auto BeepSound = 0x18f0; // UAkAudioEvent*
		constexpr auto DistanceToAttachSurface = 0x18f8; // float
		constexpr auto DetachImpulse = 0x18fc; // float
		constexpr auto DetachAngularImpulseInRadian = 0x1900; // float
		constexpr auto AttachedBuildingActor = 0x1908; // ACrowBuildingActor*
		constexpr auto AttachedPartsIndexInLayout = 0x1910; // int16_t
		constexpr auto InstalledPawn = 0x1918; // APawn*
		constexpr auto InstalledController = 0x1920; // APlayerController*
		constexpr auto CachedVelocity = 0x1928; // FVector
		constexpr auto IndiWidget = 0x1938; // UCrowIndicatorCompositionC*
		constexpr auto AkComponent = 0x1940; // UAkComponent*
		constexpr auto AttachParentWorldSMC = 0x1948; // UCrowWorldSMC*
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_UCrowSquadNotiWidget {
		constexpr auto AniShow = 0x348; // UWidgetAnimation*
		constexpr auto AniLoop = 0x350; // UWidgetAnimation*
		constexpr auto AniHide = 0x358; // UWidgetAnimation*
		constexpr auto NextNotiWidget = 0x360; // UCrowSquadNotiWidget*
	}

	namespace n_UCrowWorldDamageType {
		constexpr auto DamageSourceType = 0x40; // ECrowWorldDamageType
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UWB_SettingsPopup_C {
		constexpr auto Image_50 = 0x380; // UImage*
		constexpr auto IMG_BG = 0x388; // UImage*
		constexpr auto IMG_Cancel_BackGround = 0x390; // UImage*
		constexpr auto IMG_Confirm_BackGround = 0x398; // UImage*
		constexpr auto IMG_Exit = 0x3a0; // UImage*
		constexpr auto TB_Cancel = 0x3a8; // UTextBlock*
		constexpr auto TB_Confirm = 0x3b0; // UTextBlock*
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto playerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UTransformInputsToolProperties {
		constexpr auto bShowTransformUI = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
	}

	namespace n_UCrowBannerWidget {
		constexpr auto ChildClass = 0x348; // UUserWidget*
		constexpr auto IndicatorClass = 0x350; // UUserWidget*
		constexpr auto ScrollBoxWidget = 0x358; // UScrollBox*
		constexpr auto Indicator = 0x360; // UHorizontalBox*
	}

	namespace n_ACrowAirPlaneRespawnSplineActor {
		constexpr auto CameraAttachDist = 0x220; // float
		constexpr auto CameraAttachHeight = 0x224; // float
		constexpr auto DroppingPossibleDist = 0x228; // float
		constexpr auto ForcedDroppingDist = 0x22c; // float
		constexpr auto SplineComponent = 0x230; // USplineComponent*
		constexpr auto RandomAngle = 0x238; // float
		constexpr auto IconDisplayInfoRoute = 0x240; // FCrowGameIconDisplayInfo
		constexpr auto IconRoute = 0x2c8; // UCrowWorldMapIcon*
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UCrowResultBombMissionWidget {
		constexpr auto AudioEvent_ExpCounting = 0x368; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpCountingEnd = 0x370; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpProgress = 0x378; // UAkAudioEvent*
		constexpr auto AudioEvent_ExpProgressEnd = 0x380; // UAkAudioEvent*
		constexpr auto BTExitWidget = 0x388; // UCrowButton*
		constexpr auto ExpCountingTime = 0x390; // float
		constexpr auto AniEXP = 0x398; // UWidgetAnimation*
		constexpr auto CPExpList = 0x3a0; // UCanvasPanel*
		constexpr auto TBMoneyEXPValue = 0x3a8; // UTextBlock*
		constexpr auto TBResourceEXPValue = 0x3b0; // UTextBlock*
		constexpr auto TBMissionEXPValue = 0x3b8; // UTextBlock*
		constexpr auto TBBattleEXPValue = 0x3c0; // UTextBlock*
		constexpr auto TBRankEXPValue = 0x3c8; // UTextBlock*
		constexpr auto StartEventMoneyEXP = 0x3d0; // bool
		constexpr auto StartEventResourceEXP = 0x3d1; // bool
		constexpr auto StartEventMissionEXP = 0x3d2; // bool
		constexpr auto StartEventBattleEXP = 0x3d3; // bool
		constexpr auto StartEventRankEXP = 0x3d4; // bool
		constexpr auto AniAllEXP = 0x3d8; // UWidgetAnimation*
		constexpr auto AniAllEXPLevelUP = 0x3e0; // UWidgetAnimation*
		constexpr auto VBLevelUp = 0x3e8; // UVerticalBox*
		constexpr auto IMGIconRank = 0x3f0; // UImage*
		constexpr auto IMGIconRanklevelup = 0x3f8; // UImage*
		constexpr auto TBLevelExp = 0x400; // UTextBlock*
		constexpr auto TBClassName = 0x408; // UTextBlock*
		constexpr auto TBClassRankName = 0x410; // UTextBlock*
		constexpr auto TBTotalEXPValue = 0x418; // UTextBlock*
		constexpr auto PBExpProgressbar = 0x420; // UCrowProgressBar*
		constexpr auto StartEventTotalEXP = 0x428; // bool
		constexpr auto StartEventExpProgressbar = 0x429; // bool
		constexpr auto NormalizeTime = 0x42c; // float
		constexpr auto NormalizeTimeProgressbar = 0x430; // float
		constexpr auto PreSaveLevel = 0x434; // uint32_t
		constexpr auto bIsLevelUp = 0x438; // bool
		constexpr auto CPResult = 0x440; // UCanvasPanel*
		constexpr auto ResultScoreBoardWidget = 0x448; // UCrowBombMissionScoreBoardWidget*
		constexpr auto PlayerStateBombMission = 0x450; // ACrowPlayerStateBombMission*
		constexpr auto StartProgressbarSound = 0x458; // bool
		constexpr auto AniEllipseTime = 0x45c; // float
	}

	namespace n_ULastActorInfo {
		constexpr auto Actor = 0x38; // AActor*
		constexpr auto StaticMesh = 0x40; // UStaticMesh*
		constexpr auto ShapeSettings = 0x48; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x50; // UNewMeshMaterialProperties*
	}

	namespace n_UCrowBMStartMatchWidget {
		constexpr auto TBMapName = 0x348; // UTextBlock*
		constexpr auto TBRound = 0x350; // UTextBlock*
		constexpr auto TBTeamPosition = 0x358; // UTextBlock*
		constexpr auto TBMyTeamName = 0x360; // UTextBlock*
		constexpr auto IMGMyTeamIcon = 0x368; // UImage*
		constexpr auto IMGMyTeamBg00 = 0x370; // UImage*
		constexpr auto IMGMyTeamBg01 = 0x378; // UImage*
		constexpr auto IMGMyTeamBg02 = 0x380; // UImage*
		constexpr auto IMGMyTeamEffect00 = 0x388; // UImage*
		constexpr auto IMGMyTeamEffect01 = 0x390; // UImage*
		constexpr auto TBEnemyTeamName = 0x398; // UTextBlock*
		constexpr auto IMGEnemyTeamIcon = 0x3a0; // UImage*
		constexpr auto IMGEnemyTeamBg = 0x3a8; // UImage*
		constexpr auto AniStart = 0x3b0; // UWidgetAnimation*
		constexpr auto AniStartMatchPoint = 0x3b8; // UWidgetAnimation*
		constexpr auto AttackerTeamIcon = 0x3c0; // UTexture2D*
		constexpr auto DefencerTeamIcon = 0x3c8; // UTexture2D*
		constexpr auto RedTeamBg00Color = 0x3d0; // FLinearColor
		constexpr auto RedTeamBg01Color = 0x3e0; // FLinearColor
		constexpr auto RedTeamBg02Color = 0x3f0; // FLinearColor
		constexpr auto RedTeamEffect00Color = 0x400; // FLinearColor
		constexpr auto RedTeamEffect01Color = 0x410; // FLinearColor
		constexpr auto BlueTeamBg00Color = 0x420; // FLinearColor
		constexpr auto BlueTeamBg01Color = 0x430; // FLinearColor
		constexpr auto BlueTeamBg02Color = 0x440; // FLinearColor
		constexpr auto BlueTeamEffect00Color = 0x450; // FLinearColor
		constexpr auto BlueTeamEffect01Color = 0x460; // FLinearColor
		constexpr auto WaitRPCTeamInfoTimerHandle = 0x470; // FTimerHandle
	}

	namespace n_ACrowProjectileClaymoreMine {
		constexpr auto DetectionRangeComponent = 0x18d0; // USphereComponent*
		constexpr auto ClaymoreMineTrans = 0x18e0; // FTransform
		constexpr auto State = 0x1910; // ECrowClaymoreMineState
		constexpr auto LocalState = 0x1911; // ECrowClaymoreMineState
		constexpr auto InstalledPawn = 0x1918; // APawn*
		constexpr auto InstalledPawnController = 0x1920; // AController*
		constexpr auto SelfDestructEffectKey = 0x1928; // FString
		constexpr auto SelfDestructDamageSetting = 0x1938; // FWeaponDamageSettings
		constexpr auto DetectSound = 0x1960; // UAkAudioEvent*
		constexpr auto ActiveSound = 0x1968; // UAkAudioEvent*
		constexpr auto OperationWaitingTime = 0x1970; // float
		constexpr auto ActivityTimeLimit = 0x1974; // float
		constexpr auto RangeAngle = 0x1978; // float
		constexpr auto RangeDistance = 0x197c; // float
		constexpr auto TimeFromDetectionToExplosion = 0x1980; // float
		constexpr auto DetectionRate = 0x1984; // float
		constexpr auto CurrentTime = 0x1988; // float
		constexpr auto CurrentTimeFromDetectionToExplosion = 0x198c; // float
		constexpr auto PawnInDetectionRangeList = 0x1990; // TArray<APawn*>
		constexpr auto ServerDestroyTimerHandle = 0x19a0; // FTimerHandle
		constexpr auto IndiWidget = 0x19a8; // UCrowIndicatorClaymoreMine*
		constexpr auto LaserBeamLeft = 0x19b0; // UCrowLaserBeamComponent*
		constexpr auto LaserBeamRight = 0x19b8; // UCrowLaserBeamComponent*
		constexpr auto bNeedPlayInstallSound = 0x19c0; // bool
		constexpr auto AttachParentWorldSMC = 0x19c8; // UCrowWorldSMC*
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UCrowObjectBase {
		constexpr auto OwnerContainer = 0x28; // UCrowComponentContainer*
		constexpr auto CrowComponentOwnerActor = 0x30; // AActor*
	}

	namespace n_UAkSoundAUD {
		constexpr auto IsSoundOccluder = 0x28; // bool
		constexpr auto OcclusionPercent = 0x2c; // int32_t
	}

	namespace n_UUPSEnemyActionsPreset {
		constexpr auto EnemyActions = 0x30; // TArray<FEnemyActionSelector>
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_ACrowGameModeBase {
		constexpr auto BattleTimeSec = 0x318; // uint32_t
		constexpr auto IsUseGameStartSystem = 0x31c; // bool
		constexpr auto CountdownStartUserCount = 0x31d; // char
		constexpr auto CountdownWaitTime = 0x320; // float
		constexpr auto PlayCountdownTime = 0x324; // float
		constexpr auto RespawnTimeInfo = 0x328; // FCrowRespawnTimeInfo
		constexpr auto RespawnWaitTime_WaitUser = 0x33c; // float
		constexpr auto BodyLifeTime = 0x340; // float
		constexpr auto WaitUserSpawnerCount = 0x344; // FCrowActiveSpawnerCount
		constexpr auto MatchSpawnerCount = 0x368; // FCrowActiveSpawnerCount
		constexpr auto SkydivingRespawnZ = 0x38c; // float
		constexpr auto IsCanDying = 0x390; // bool
		constexpr auto IsDeleteWorldItem = 0x391; // bool
		constexpr auto SquadRespawnCountLimit = 0x394; // int32_t
		constexpr auto SceneIndex = 0x398; // uint32_t
		constexpr auto WeaponArray = 0x3a0; // TArray<FCrowTestWeapon>
		constexpr auto ItemArray = 0x3b0; // TArray<FCrowItemData>
		constexpr auto ClothesArray = 0x3c0; // TArray<FCrowItemData>
		constexpr auto MaxSquadPlayers = 0x3d0; // int32_t
		constexpr auto UseLoadOutTest = 0x3d4; // bool
		constexpr auto UseSquadLoadOutTest = 0x3d5; // bool
		constexpr auto UseTestFemale = 0x3d6; // bool
		constexpr auto FaceIndex = 0x3d7; // char
		constexpr auto HairColorIndex = 0x3d8; // char
		constexpr auto BeardColorIndex = 0x3d9; // char
		constexpr auto FaceTattooIndex = 0x3dc; // uint32_t
		constexpr auto ArmTattooIndex = 0x3e0; // uint32_t
		constexpr auto DefaultBattleMoneyCount = 0x3e4; // uint32_t
		constexpr auto IsShareAmmo = 0x3e8; // bool
		constexpr auto CameraLimitMode = 0x3e9; // ECrowCameraLimitMode
		constexpr auto PlayerControllerMap = 0x3f0; // TMap<uint64_t, ACrowPlayerControllerBase*>
		constexpr auto ObserverArray = 0x440; // TArray<uint64_t>
		constexpr auto bUseObserverMode = 0x450; // bool
		constexpr auto bFirstPlayerObserver = 0x451; // bool
		constexpr auto TimerHandle_BattleTimer = 0x458; // FTimerHandle
		constexpr auto CrowGameStateBase = 0x460; // ACrowGameStateBase*
		constexpr auto DediLogIPC = 0x468; // UCrowDediLogIPC*
	}

	namespace n_UCrowHappyTimeTabWidget {
		constexpr auto BT_Arrow_HourL = 0x348; // UCrowButton*
		constexpr auto BT_Arrow_HourR = 0x350; // UCrowButton*
		constexpr auto BT_Arrow_MinuteL = 0x358; // UCrowButton*
		constexpr auto BT_Arrow_MinuteR = 0x360; // UCrowButton*
		constexpr auto TB_HourText = 0x368; // UTextBlock*
		constexpr auto TB_MinuteText = 0x370; // UTextBlock*
		constexpr auto WB_BT_OK = 0x378; // UCrowButton*
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UCrowPackagingAssets {
		constexpr auto Assets = 0x28; // TArray<TSoftObjectPtr<UObject>>
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UCrowWorldBreakableAUD {
		constexpr auto DamageChecker = 0x28; // UCrowWorldDamageCheckerBase*
		constexpr auto Unbreakable = 0x30; // char : 1
		constexpr auto TreatAsTerrain = 0x30; // char : 1
		constexpr auto DestroyParent = 0x30; // char : 1
		constexpr auto AutoDetectParent = 0x30; // char : 1
		constexpr auto DestroyOnVehicleOverlap = 0x30; // char : 1
		constexpr auto DestroyOnThrowWeaponHit = 0x30; // char : 1
		constexpr auto DestroyOnCharacterAnimation = 0x30; // char : 1
		constexpr auto SlideOnBeginVaultAction = 0x30; // char : 1
		constexpr auto DestroyByShockwave = 0x31; // char : 1
		constexpr auto NeedDecalReceiver = 0x31; // char : 1
		constexpr auto NetworkSyncToLargeArea = 0x31; // char : 1
		constexpr auto VehicleWheelCrushDamage = 0x31; // char : 1
		constexpr auto ShakeOnDamage = 0x31; // char : 1
		constexpr auto PreventAttachChild = 0x31; // char : 1
		constexpr auto AttachChildDistance = 0x34; // float
		constexpr auto DestroyAttachChildOnImpactCollapse = 0x38; // char : 1
		constexpr auto DestroyAttachChildOnExplosion = 0x38; // char : 1
		constexpr auto ShakeDuration = 0x3c; // float
		constexpr auto ShakeOffset = 0x40; // float
		constexpr auto ClientOnlyDestroy = 0x44; // char : 1
		constexpr auto RelayDamageRatioToParent = 0x48; // float
		constexpr auto MaxHP = 0x4c; // float
		constexpr auto OverlapImpactResistRatio = 0x50; // float
		constexpr auto OverlapImpactResistMax = 0x54; // float
		constexpr auto DecalScaleMultiply = 0x58; // float
	}

	namespace n_UCrowKillFeedWidget {
		constexpr auto VB_KillfeedList = 0x348; // UVerticalBox*
		constexpr auto KillFeedItem = 0x350; // UCrowKillFeedItemWidget*
		constexpr auto KillFeedListMAX = 0x358; // int32_t
		constexpr auto Arr_KillFeedItems = 0x360; // TArray<UVerticalBoxSlot*>
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_UCrowVehicleStateBase {
		constexpr auto StateId = 0x28; // ECrowVehicleState
		constexpr auto FSM = 0x30; // UCrowVehicleFSM*
		constexpr auto InputBlockMask = 0x38; // uint32_t
		constexpr auto StateParameter = 0x40; // FCrowVehicleStateParameter
	}

	namespace n_UCrowWeaponCrosshairRifle {
		constexpr auto CP_Left = 0x360; // UCanvasPanel*
		constexpr auto CP_Right = 0x368; // UCanvasPanel*
		constexpr auto CP_Up = 0x370; // UCanvasPanel*
		constexpr auto CP_Down = 0x378; // UCanvasPanel*
	}

	namespace n_ABP_CrowWeaponPartsLasersight_uzi002_C {
		constexpr auto FX_Wp_LaserLight_M001 = 0x260; // UParticleSystemComponent*
		constexpr auto CrowLaserBeam = 0x268; // UCrowLaserBeamComponent*
		constexpr auto UZI002_LasersightSIDE = 0x270; // USkeletalMeshComponent*
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_ACrowVehicleUpdater {
		constexpr auto SceneRoot = 0x230; // USphereComponent*
		constexpr auto UseClientUpdateAlways = 0x238; // bool
		constexpr auto SphereMesh = 0x240; // UStaticMeshComponent*
		constexpr auto UpdateItems = 0x248; // TArray<FCrowVehicleUpdaterItem>
		constexpr auto IndexToRemoveList = 0x258; // TArray<int32_t>
		constexpr auto CameraInfo = 0x268; // FCrowVehiclesCameraInfo
		constexpr auto ForceAndDamageCache = 0x2a0; // FCrowVehicleForceAndDamage
		constexpr auto LastDamageTime = 0x360; // float
		constexpr auto CameraDistanceMin = 0x364; // float
		constexpr auto CameraDistanceMax = 0x368; // float
		constexpr auto InitializedUpdater = 0x36c; // bool
		constexpr auto AvailableCoreCount = 0x370; // int32_t
		constexpr auto PoolLandWheels = 0x378; // FCrowVehicleEntityPoolLandWheels
		constexpr auto PoolTankEntity = 0x3a0; // FCrowVehicleEntityPoolTank
		constexpr auto PoolTankVirtualSuspensions = 0x3c8; // FCrowVehiclePoolVirtualSuspension
		constexpr auto PoolSuspensionLandWheelsArray = 0x3f0; // TArray<FCrowVehiclePoolSuspension>
		constexpr auto LookupWheelCountToPoolIndex = 0x400; // TMap<int32_t, int32_t>
		constexpr auto SweepItems = 0x450; // TArray<FCrowVehicleUpdaterSweepItem>
	}

	namespace n_ACrowCharacterPawn {
		constexpr auto bStopAdditionalCollision = 0x11c0; // bool
		constexpr auto bUseViewDependsOnManager = 0x11c1; // bool
		constexpr auto SavedPlayerState = 0x1210; // ACrowPlayerStateBase*
		constexpr auto ServerHeadLocation = 0x121c; // FVector
		constexpr auto bEnableDrownedMoving = 0x1228; // bool
		constexpr auto HeadCollisionSocketName = 0x122c; // FName
		constexpr auto NeckBoneName = 0x1234; // FName
		constexpr auto SprintingAngleLimit = 0x123c; // float
		constexpr auto CamSocketName = 0x1240; // FName
		constexpr auto TurnOffsetTest = 0x1248; // float
		constexpr auto LimitControlRotation = 0x124c; // FCrowCharacterLookLimitStance
		constexpr auto LimitAimOffset = 0x12f8; // FCrowCharacterLookLimitStance
		constexpr auto ProneLimitCheckDistance = 0x13a4; // float
		constexpr auto ProneLimitCheckRadius = 0x13a8; // float
		constexpr auto ProneLimitFrontBackVelocityFactor = 0x13ac; // float
		constexpr auto ProneLimitSideVelocityFactor = 0x13b0; // float
		constexpr auto ProneLimitNotMovingBaseLength = 0x13b4; // float
		constexpr auto ProneLimitNotMovingCheckDistance = 0x13b8; // float
		constexpr auto ReservedVehicle = 0x13c0; // ACrowVehiclePawn*
		constexpr auto bIsReservedVehicle = 0x13c8; // bool
		constexpr auto BoardingVehicle = 0x13d0; // ACrowVehiclePawn*
		constexpr auto VehicleName = 0x13d8; // FName
		constexpr auto SeatIndex = 0x13e0; // char
		constexpr auto SeatType = 0x13e1; // EVehicleSeatType
		constexpr auto SeatLeanForward = 0x13e4; // float
		constexpr auto SeatLeanBackward = 0x13e8; // float
		constexpr auto SeatLeanSide = 0x13ec; // float
		constexpr auto ProneAddedPitchValue = 0x13f0; // float
		constexpr auto DefaultVehicleControlInput = 0x13f4; // FRotator
		constexpr auto VehicleControlPitchMinMax = 0x1400; // FVector2D
		constexpr auto VehicleControlYawMinMax = 0x1408; // FVector2D
		constexpr auto VehicleControlFirePitchMinMax = 0x1410; // FVector2D
		constexpr auto VehicleControlFireYawMinMax = 0x1418; // FVector2D
		constexpr auto PickupItemChecker = 0x1420; // UCapsuleComponent*
		constexpr auto PickupItemCheckerSize = 0x1428; // float
		constexpr auto IsPressUSEKey = 0x142d; // bool
		constexpr auto IsPressSubUSEKey = 0x142e; // bool
		constexpr auto InputDefault = 0x1438; // UCrowInputBase*
		constexpr auto InputFindConstructionSite = 0x1440; // UCrowInputBase*
		constexpr auto InputConstruction = 0x1448; // UCrowInputBase*
		constexpr auto InputUI = 0x1450; // UCrowInputBase*
		constexpr auto InputOnTablet = 0x1458; // UCrowInputBase*
		constexpr auto NearItemList = 0x1460; // TArray<ACrowItemBase*>
		constexpr auto CrowTeleportationActorComponent = 0x1470; // UCrowTeleportationActorComponent*
		constexpr auto CrowGasMaskComponent = 0x1478; // UCrowGasMaskComponent*
		constexpr auto PeekSetup = 0x1480; // FCrowCharacterPeekSetup
		constexpr auto bIsLeftFoot = 0x1488; // bool
		constexpr auto bIsShootablePose = 0x1489; // bool
		constexpr auto UpdatedAnimationPelvisOffset = 0x1490; // FVector
		constexpr auto AimDelayDefault = 0x14ac; // float
		constexpr auto AimDelaySlow = 0x14b0; // float
		constexpr auto MergeMeshTask_FPArm = 0x14b8; // UCrowLibraryMergeSKCTask*
		constexpr auto MergeMeshTask_FPBody = 0x14c0; // UCrowLibraryMergeSKCTask*
		constexpr auto bSkipOptimizationByScreensize = 0x14c8; // bool
		constexpr auto CrowConditionFlags = 0x14cc; // ECrowConditionFlags
		constexpr auto bIsSkydivingMode = 0x14d0; // bool
		constexpr auto SkydivingComponent = 0x14d8; // UCrowCharacterSkydivingComponent*
		constexpr auto bResetRelativeMeshTransform = 0x14e0; // bool
		constexpr auto WorldMapIcon = 0x14e8; // UCrowWorldMapIcon*
		constexpr auto IndicatorInfo = 0x14f0; // UCrowIndicatorViewInfo*
		constexpr auto bIsSpectatorMode = 0x14f8; // bool
		constexpr auto bIsAimAtSpectatorMode = 0x14f9; // bool
		constexpr auto SpectatorCameraMode = 0x14fa; // char
		constexpr auto PrevSpectatorCameraMode = 0x14fb; // char
		constexpr auto EndPlayEmotionTimerHandle = 0x1500; // FTimerHandle
		constexpr auto PrevEmotionCameraMode = 0x1508; // char
		constexpr auto bIsPlayEmotion = 0x1509; // bool
		constexpr auto CurrentEmotionIndex = 0x150c; // uint32_t
		constexpr auto SwimingOxygen = 0x1510; // float
		constexpr auto ZombieComponent = 0x1518; // UCrowZombieComponent*
		constexpr auto MaxSwimingOxygen = 0x1520; // float
		constexpr auto ConsumeOxygen = 0x1524; // float
		constexpr auto ConsumeOxygenPerSecond = 0x1528; // float
		constexpr auto RecoveryOxygen = 0x152c; // float
		constexpr auto RecoveryOxygenPerSecond = 0x1530; // float
		constexpr auto LackOfOxygenDamage = 0x1534; // float
		constexpr auto SwimGroundDustDelay = 0x1538; // float
		constexpr auto ConsumeOxygenTimerHandle = 0x1540; // FTimerHandle
		constexpr auto RecoveryOxygenTimerHandler = 0x1548; // FTimerHandle
		constexpr auto PrevSwimImmersionDepth = 0x1550; // float
		constexpr auto SwimGroundDustTime = 0x1554; // float
		constexpr auto RandSwimGroundDustDelay = 0x1558; // float
		constexpr auto PrevPhysicsVolumeName = 0x155c; // FName
		constexpr auto ElapsedNotMovementTime = 0x1564; // float
		constexpr auto ElapsedHeadLocationUpdateTime = 0x1568; // float
		constexpr auto StatusWidget = 0x1570; // UCrowStatusBreathWidget*
		constexpr auto OceanTracker = 0x1578; // UCrowVehicleOceanTracker*
		constexpr auto BattleSetup = 0x1584; // FCrowBattleSetup
		constexpr auto SoundSetup = 0x15a8; // FCrowCharacterSoundSetup
		constexpr auto ZombieSoundSetup = 0x1638; // FCrowCharacterSoundSetup
		constexpr auto CurrentSoundSetup = 0x16c8; // FCrowCharacterSoundSetup
		constexpr auto BattleContainer = 0x1758; // FCrowBattleContainer
		constexpr auto SpringArmTP = 0x1778; // UCrowSpringArmComponent*
		constexpr auto CameraTP = 0x1780; // UCameraComponent*
		constexpr auto CameraFP = 0x1788; // UCameraComponent*
		constexpr auto FPMeshPeekAxis = 0x1790; // USceneComponent*
		constexpr auto FPMeshSightAxis = 0x1798; // USceneComponent*
		constexpr auto MeshFPBody = 0x17a0; // USkeletalMeshComponent*
		constexpr auto MeshFPArm = 0x17a8; // USkeletalMeshComponent*
		constexpr auto LightFP = 0x17b0; // UPointLightComponent*
		constexpr auto LightFPType = 0x17b8; // UPointLightComponent*
		constexpr auto LightFPOffset = 0x17c0; // FVector
		constexpr auto FPBody_ClothComponent = 0x17d0; // UCrowClothActorComponent*
		constexpr auto FPArm_ClothComponent = 0x17d8; // UCrowClothActorComponent*
		constexpr auto CharacterMovementCollision = 0x17e0; // UCrowCharacterMovementCollision*
		constexpr auto TriggerControl = 0x17e8; // UCrowCharacterTriggerControl*
		constexpr auto GameInventory = 0x17f0; // UCrowGameInvenComponent*
		constexpr auto PlayerConstruction = 0x17f8; // UCrowPlayerConstruction*
		constexpr auto WeaponManagerComponent = 0x1800; // UCrowWeaponManagerComponent*
		constexpr auto TargetActor = 0x1808; // AActor*
		constexpr auto FallsComp = 0x1810; // UCrowCharacterFallsComponent*
		constexpr auto ThrowProjectileFireDirection = 0x1818; // UArrowComponent*
		constexpr auto hudWidgetClass = 0x1820; // UUserWidget*
		constexpr auto IconDisplayInfoEnemy = 0x1830; // FCrowGameIconDisplayInfo
		constexpr auto IconLocation = 0x18b8; // USceneComponent*
		constexpr auto SoundSprinTime = 0x18c0; // float
		constexpr auto IdleBreathSoundComponent = 0x18c8; // UAkComponent*
		constexpr auto GasMaskSoundComponent = 0x18d0; // UAkComponent*
		constexpr auto SoundBreathTime = 0x18d8; // float
		constexpr auto InDoorTriggerList = 0x18e8; // TArray<ACrowInDoorTriggerVolume*>
		constexpr auto SaveHealKitMeshComp = 0x1908; // USkeletalMeshComponent*
		constexpr auto SaveHealKitSkelMesh_1P = 0x1910; // USkeletalMesh*
		constexpr auto SaveHealKitSkelMesh_3P = 0x1918; // USkeletalMesh*
		constexpr auto InjuredBloodOnGroundDecal = 0x1920; // FCrowDecalInfo
		constexpr auto InjuredBloodDecalDist = 0x1970; // float
		constexpr auto CurrentReviveCnt = 0x1974; // int32_t
		constexpr auto AddedMoveDist = 0x1978; // float
		constexpr auto SoundStateComponent = 0x1980; // UCrowSoundStateComponent*
		constexpr auto DotDamageArray = 0x1988; // TArray<FCrowDotDamageInfo>
		constexpr auto DamageExpMap = 0x19a8; // TMap<uint64_t, FCrowDamageExpInfo>
		constexpr auto AniFlashBangBegin = 0x19f8; // FCLSAnimation
		constexpr auto AniFlashBangLoop = 0x1a18; // FCLSAnimation
		constexpr auto AniFlashBangEnd = 0x1a38; // FCLSAnimation
		constexpr auto SequencePawnID = 0x1a58; // int32_t
		constexpr auto UAVReconMap = 0x1a60; // TMap<uint64_t, AActor*>
		constexpr auto FoliageAffectors = 0x1ab8; // TArray<UCrowFoliageAffectorComponent*>
		constexpr auto LookingWeaponMontage = 0x1ad0; // UAnimMontage*
		constexpr auto IsLookingWeapon = 0x1ad8; // bool
		constexpr auto SoundScriptDatas = 0x1af0; // TArray<FCrowSoundScriptData>
		constexpr auto SoundScriptExecutableTime = 0x1b00; // float
		constexpr auto ServerCurrentScopeSightRate = 0x1b04; // ECrowScopeSightRate
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UCrowConquestSkillTableManager {
		constexpr auto TableMap = 0x28; // TMap<FString, FCrowConquestSkillTableRow>
	}

	namespace n_UCrowGuideMessageWidget {
		constexpr auto AniHealAlarm = 0x348; // UWidgetAnimation*
	}

	namespace n_UCrowMiningStateWidget {
		constexpr auto TB_Status = 0x348; // UTextBlock*
		constexpr auto WS_Status = 0x350; // UWidgetSwitcher*
		constexpr auto CP_GaugeProgressEffect = 0x358; // UCanvasPanel*
		constexpr auto TargetActor = 0x360; // ACrowMiningPointActor*
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UAkAssetDataSwitchContainerData {
		constexpr auto GroupValue = 0x28; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto DefaultGroupValue = 0x50; // UAkGroupValue*
		constexpr auto MediaList = 0x58; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto Children = 0x68; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UAddPrimitiveTool {
		constexpr auto ShapeSettings = 0x90; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto LastGenerated = 0xa8; // ULastActorInfo*
		constexpr auto AssetName = 0xb0; // FString
	}

	namespace n_UCrowCharacterAnimInstFP {
		constexpr auto PrivateBaseAnim = 0x478; // FCrowCharacterAnimPrivateWeaponFPRow
		constexpr auto LastLookRotation = 0x518; // FRotator
		constexpr auto WeaponSway = 0x524; // FVector2D
		constexpr auto LastWeaponSway = 0x52c; // FVector2D
		constexpr auto EndWeaponSway = 0x534; // float
		constexpr auto WeaponRootTransform = 0x540; // FTransform
		constexpr auto CurrentAnimWeapon = 0x570; // ACrowWeaponBase*
		constexpr auto LeftHandIK = 0x580; // FTransform
		constexpr auto RightHandIK = 0x5b0; // FTransform
		constexpr auto Enable_GripIK_L = 0x5e0; // float
		constexpr auto Enable_GripIK_R = 0x5e4; // float
		constexpr auto GripIKLFindPriorityIndex = 0x5e8; // int32_t
		constexpr auto Enable_HandIK_L = 0x5ec; // float
		constexpr auto Enable_HandIK_R = 0x5f0; // float
		constexpr auto Enable_TargetIK_L = 0x5f4; // float
		constexpr auto Enable_TargetIK_R = 0x5f8; // float
		constexpr auto Enable_GripPose_L = 0x5fc; // float
		constexpr auto Enable_GripPose_R = 0x600; // float
		constexpr auto CameraAnimRelative = 0x604; // float
		constexpr auto CopyToFPArmCurveValue = 0x608; // float
		constexpr auto Clavicle_L_TR = 0x610; // FTransform
		constexpr auto Clavicle_R_TR = 0x640; // FTransform
		constexpr auto CDInverseM = 0x670; // FMatrix
		constexpr auto bIsWeaponFiring = 0x6b0; // bool
		constexpr auto LookingDirection = 0x6b4; // FRotator
		constexpr auto SubRootOffset = 0x6c0; // FVector
		constexpr auto EnableAdjustLeftArmOnSlope = 0x6cc; // bool
		constexpr auto TPMeshComponent = 0x6d0; // USkeletalMeshComponent*
		constexpr auto GripPose = 0x6d8; // FCLSGripPose
	}

	namespace n_UCrowBackPackListItemWidget {
		constexpr auto SlotIndex = 0x668; // int32_t
		constexpr auto PickUpInven = 0x670; // ACrowPickupInventory*
		constexpr auto IMG_Frame = 0x678; // UImage*
		constexpr auto IMG_ItemIcon = 0x680; // UImage*
		constexpr auto IMG_Lock = 0x688; // UImage*
		constexpr auto TB_ItemAmount = 0x690; // UTextBlock*
		constexpr auto TB_ItemName = 0x698; // UTextBlock*
		constexpr auto WB_CrowDragDropPanel = 0x6a0; // UCrowDragDropWidgetBase*
		constexpr auto IMG_WeaponBack = 0x6a8; // UImage*
		constexpr auto IMG_Back = 0x6b0; // UImage*
		constexpr auto DragItem = 0x6b8; // UCrowDragItem*
		constexpr auto bIsLock = 0x6c0; // bool
	}

	namespace n_ACrowEditorTickActor {
		constexpr auto ActorRoot = 0x220; // USceneComponent*
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UCrowVehicleSightComponent {
		constexpr auto SightInfos = 0xb0; // TMap<char, FCrowVehicleSightInfo>
		constexpr auto BarrelInfos = 0x100; // TMap<char, FCrowBarrelInfo>
		constexpr auto CurrentSpringArm = 0x150; // UCrowSpringArmComponent*
		constexpr auto IsBarrelMode = 0x158; // bool
		constexpr auto YawInputLerp = 0x15c; // FCrowInputLerp
		constexpr auto PitchInputLerp = 0x16c; // FCrowInputLerp
		constexpr auto YawBarrelModeInputLerp = 0x17c; // FCrowInputLerp
		constexpr auto PitchBarrelModeInputLerp = 0x18c; // FCrowInputLerp
		constexpr auto PlayerController = 0x1a0; // ACrowPlayerControllerBase*
	}

	namespace n_UWB_MultiSystemMessage_C {
		constexpr auto Ani_Fade_Out_3 = 0x398; // UWidgetAnimation*
		constexpr auto Ani_Fade_Out_1 = 0x3a0; // UWidgetAnimation*
		constexpr auto Ani_Fade_Out_2 = 0x3a8; // UWidgetAnimation*
		constexpr auto Ani_Move_3 = 0x3b0; // UWidgetAnimation*
		constexpr auto Ani_Move_2 = 0x3b8; // UWidgetAnimation*
		constexpr auto Ani_Move_1 = 0x3c0; // UWidgetAnimation*
		constexpr auto Image = 0x3c8; // UImage*
		constexpr auto Image_75 = 0x3d0; // UImage*
	}

	namespace n_UWB_CrossHairPreset_C {
		constexpr auto BT_Blue = 0x260; // UCrowButton*
		constexpr auto BT_Green = 0x268; // UCrowButton*
		constexpr auto BT_Navy = 0x270; // UCrowButton*
		constexpr auto BT_Orange = 0x278; // UCrowButton*
		constexpr auto BT_Red = 0x280; // UCrowButton*
		constexpr auto BT_Violet = 0x288; // UCrowButton*
		constexpr auto BT_Yellow = 0x290; // UCrowButton*
		constexpr auto IMG_Blue_BackGround = 0x298; // UImage*
		constexpr auto IMG_Green_BackGround = 0x2a0; // UImage*
		constexpr auto IMG_Navy_BackGround = 0x2a8; // UImage*
		constexpr auto IMG_Navy_BackGround_2 = 0x2b0; // UImage*
		constexpr auto IMG_Orange_BackGround = 0x2b8; // UImage*
		constexpr auto IMG_Red_BackGround = 0x2c0; // UImage*
		constexpr auto IMG_Yellow_BackGround = 0x2c8; // UImage*
	}

	namespace n_UAkMediaAsset {
		constexpr auto ID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x40; // UAkMediaAssetData*
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_ACrowWeaponTankSmoke {
		constexpr auto SmokeFireArray = 0x31e8; // TArray<FTransform>
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UWB_WorldMapPlayerMarker_C {
		constexpr auto Ani_CallHelp = 0x460; // UWidgetAnimation*
		constexpr auto Ani_StopBleeding = 0x468; // UWidgetAnimation*
		constexpr auto IMG_2ndWind = 0x470; // UCrowWidgetImage*
		constexpr auto IMG_2ndWind_Indoor = 0x478; // UCrowWidgetImage*
		constexpr auto IMG_bombC4_2 = 0x480; // UCrowWidgetImage*
		constexpr auto IMG_CallHelp = 0x488; // UImage*
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UCrowRadialButtonSquadMatch {
		constexpr auto WS_SlotStatus = 0x408; // UWidgetSwitcher*
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UCrowGameResultConquestWidget {
		constexpr auto TXT_MyScore = 0x368; // UTextBlock*
		constexpr auto TXT_EnemyScore = 0x370; // UTextBlock*
		constexpr auto TB_Ranking = 0x378; // UTextBlock*
		constexpr auto TB_RankingMax = 0x380; // UTextBlock*
		constexpr auto TB_Kill = 0x388; // UTextBlock*
		constexpr auto TB_Death = 0x390; // UTextBlock*
		constexpr auto TB_Score = 0x398; // UTextBlock*
		constexpr auto WB_BT_Exit = 0x3a0; // UCrowButton*
		constexpr auto WB_ConquestScoreAlly = 0x3a8; // UCrowScoreInfoConquestUserSummary*
		constexpr auto WB_ConqestScoreEnemy = 0x3b0; // UCrowScoreInfoConquestUserSummary*
		constexpr auto AniWin = 0x3b8; // UWidgetAnimation*
		constexpr auto AniLose = 0x3c0; // UWidgetAnimation*
		constexpr auto AniDraw = 0x3c8; // UWidgetAnimation*
		constexpr auto GameStateConquest = 0x3d0; // ACrowGameStateConquest*
		constexpr auto LocalPlayerState = 0x3d8; // ACrowPlayerStateBase*
	}

	namespace n_ACrowWeaponPartsLightActor {
		constexpr auto LightRoot = 0x240; // USceneComponent*
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UCrowVehicleFacadeBoat {
		constexpr auto VehicleMovement = 0xe0; // UCrowVehicleMovementBoats*
		constexpr auto BoatEffect = 0xe8; // UCrowVehicleBoatEffect*
	}

	namespace n_UCrowCharacterPartDamageTableManager {
		constexpr auto TableMap = 0x28; // TMap<FName, FCrowCharacterPartDamageData>
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UCrowMassOverridingComponent {
		constexpr auto Mass = 0xb0; // float
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UExistingMeshMaterialProperties {
		constexpr auto MaterialMode = 0x60; // ESetMeshMaterialMode
		constexpr auto CheckerDensity = 0x64; // float
		constexpr auto OverrideMaterial = 0x68; // UMaterialInterface*
		constexpr auto CheckerMaterial = 0x70; // UMaterialInstanceDynamic*
	}

	namespace n_UAkIOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_ACrowItemBase {
		constexpr auto MeshBoundsScale = 0x220; // float
		constexpr auto BoxComponent = 0x228; // UBoxComponent*
		constexpr auto TableManager = 0x230; // UCrowItemTableManager*
		constexpr auto ParentItemSpawner = 0x238; // ACrowItemSpawner*
		constexpr auto DynamicMaterialArray = 0x240; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ItemDropIndicatorViewInfo = 0x2a8; // UCrowIndicatorViewInfo*
		constexpr auto ItemDropWorldMapIcon = 0x2b0; // UCrowWorldMapIcon*
	}

	namespace n_ACrowResultSceneInfo {
		constexpr auto CameraBegin = 0x220; // ACameraActor*
		constexpr auto CameraEnd = 0x228; // ACameraActor*
		constexpr auto CameraMoveTime = 0x230; // float
		constexpr auto CameraMoveCurve = 0x238; // UCurveFloat*
		constexpr auto Player01 = 0x240; // FCrowResultScenePlayer
		constexpr auto Player02 = 0x250; // FCrowResultScenePlayer
		constexpr auto Player03 = 0x260; // FCrowResultScenePlayer
		constexpr auto Player04 = 0x270; // FCrowResultScenePlayer
		constexpr auto PlayerArray = 0x280; // TArray<FCrowResultTopPlayerInfo>
		constexpr auto TransformArray = 0x290; // TArray<FCrowResultScenePlayer>
		constexpr auto ResultPawnArray = 0x2a0; // TArray<ACrowCharacterPawn*>
		constexpr auto ResultSceneWidget = 0x2b0; // UCrowResultSceneWidget*
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_USculptMaxBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto MaxHeight = 0x68; // float
		constexpr auto bUseFixedHeight = 0x6c; // bool
		constexpr auto FixedHeight = 0x70; // float
	}

	namespace n_UCrowVehicleOceanTracker {
		constexpr auto TargetCollection = 0xb0; // UMaterialParameterCollection*
		constexpr auto DrawDebugInfo = 0xb8; // bool
		constexpr auto OceanDefaultZ = 0xbc; // float
		constexpr auto Intensity1 = 0xc0; // float
		constexpr auto Intensity2 = 0xc4; // float
		constexpr auto Intensity3 = 0xc8; // float
		constexpr auto Speed1 = 0xcc; // float
		constexpr auto Speed2 = 0xd0; // float
		constexpr auto Speed3 = 0xd4; // float
		constexpr auto WaveScale1 = 0xd8; // float
		constexpr auto WaveScale2 = 0xdc; // float
		constexpr auto WaveScale3 = 0xe0; // float
		constexpr auto MasterSpeed = 0xe4; // float
		constexpr auto MasterIntensity = 0xe8; // float
		constexpr auto Offset = 0xec; // float
		constexpr auto ServerWorldTime = 0xf0; // float
		constexpr auto OceanFollowCamera = 0xf4; // bool
		constexpr auto OceanActor = 0xf8; // AActor*
		constexpr auto OceanActorLocation = 0x100; // FVector
		constexpr auto WaterBodyOceanActor = 0x110; // AWaterBody*
	}

	namespace n_UBTService_CrowFindTarget {
		constexpr auto TargetInSight = 0x98; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UCrowSettingUIInfomation {
		constexpr auto KeyToTextures = 0x28; // TArray<FKeyToTexture>
		constexpr auto CtrlTexture = 0x38; // UTexture2D*
		constexpr auto CtrlSprite = 0x40; // UPaperSprite*
		constexpr auto AltTexture = 0x48; // UTexture2D*
		constexpr auto AltSprite = 0x50; // UPaperSprite*
	}

	namespace n_UCrowVehicleFacadeCar {
		constexpr auto VehicleMovement = 0xe0; // UCrowVehicleMovementLandWheels*
	}

	namespace n_UReplicationGraph {
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0x98; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xa8; // TArray<UReplicationGraphNode*>
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UCrowMinimapPlayerMarker {
		constexpr auto bUseColorLocalSquadRole = 0x348; // bool
		constexpr auto ColorLocalPlayer = 0x34c; // FLinearColor
		constexpr auto ColorSquadLeader = 0x35c; // FLinearColor
		constexpr auto ColorSquadAssistant = 0x36c; // FLinearColor
		constexpr auto ColorSquadMember01 = 0x37c; // FLinearColor
		constexpr auto ColorSquadMember02 = 0x38c; // FLinearColor
		constexpr auto ColorOtherAllies = 0x39c; // FLinearColor
		constexpr auto ColorEnemy = 0x3ac; // FLinearColor
		constexpr auto DirectionOverlay = 0x3c0; // UOverlay*
		constexpr auto MarkerSizeBox = 0x3c8; // USizeBox*
		constexpr auto LeaderOverlay = 0x3d0; // UOverlay*
		constexpr auto MemberOverlay = 0x3d8; // UOverlay*
		constexpr auto MarkerOwnerState = 0x3e0; // ACrowPlayerStateBase*
	}

	namespace n_UCrowProgressBarInterp {
		constexpr auto Percent = 0x260; // float
		constexpr auto InterpolationTime = 0x264; // float
		constexpr auto BarFillType = 0x268; // ECrowProgressBarFillType
		constexpr auto BackgroundBrush = 0x270; // FSlateBrush
		constexpr auto MiddleBrush = 0x2f8; // FSlateBrush
		constexpr auto ForegroundBrush = 0x380; // FSlateBrush
		constexpr auto CP_Root = 0x408; // UCanvasPanel*
		constexpr auto IMG_BackGround = 0x410; // UImage*
		constexpr auto IMG_Middle = 0x418; // UImage*
		constexpr auto IMG_Foreground = 0x420; // UImage*
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UProceduralDiscToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto RadialSlices = 0x74; // int32_t
		constexpr auto RadialSubdivisions = 0x78; // int32_t
	}

	namespace n_UAlignObjectsToolProperties {
		constexpr auto AlignType = 0x60; // EAlignObjectsAlignTypes
		constexpr auto AlignTo = 0x64; // EAlignObjectsAlignToOptions
		constexpr auto BoxPosition = 0x68; // EAlignObjectsBoxPoint
		constexpr auto bAlignX = 0x6c; // bool
		constexpr auto bAlignY = 0x6d; // bool
		constexpr auto bAlignZ = 0x6e; // bool
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UCrowKitBomberTargetIcon {
		constexpr auto TimerTick = 0x348; // float
		constexpr auto TB_Distance = 0x350; // UTextBlock*
		constexpr auto TB_OverDistance = 0x358; // UTextBlock*
		constexpr auto TB_Timer = 0x360; // UTextBlock*
		constexpr auto CP_AnchorRoot = 0x368; // UCanvasPanel*
		constexpr auto SB_IconStrike = 0x370; // UScaleBox*
		constexpr auto SB_IconLaser = 0x378; // UScaleBox*
		constexpr auto CP_Root = 0x380; // UCanvasPanel*
		constexpr auto CP_Icon = 0x388; // UCanvasPanel*
		constexpr auto TargetActor = 0x390; // AActor*
		constexpr auto MaxDistance = 0x398; // int32_t
		constexpr auto IconPanelSlot = 0x3a0; // UCanvasPanelSlot*
		constexpr auto IsFinishBuild = 0x3a8; // bool
		constexpr auto FireDelayTime = 0x3ac; // float
		constexpr auto CurrentTime = 0x3b0; // float
		constexpr auto TimeHandle = 0x3b8; // FTimerHandle
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_ACrowSceneCaptureActor {
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
		constexpr auto RenderTextureDefaultColor = 0x238; // UStaticMeshComponent*
		constexpr auto SceneCaptureType = 0x240; // ECrowSceneCaptureType
		constexpr auto CaptureParamCollection = 0x248; // UMaterialParameterCollection*
		constexpr auto HeightOffset = 0x250; // float
		constexpr auto CaptureParamInstance = 0x258; // UMaterialParameterCollectionInstance*
	}

	namespace n_UCrowUnderWaterComponent {
		constexpr auto ParamInstance = 0xc0; // UMaterialParameterCollectionInstance*
		constexpr auto WaterPlaneZParam = 0xc8; // FName
		constexpr auto UnderWaterMaterialByTag = 0xd0; // TMap<FName, UMaterialInterface*>
		constexpr auto UnderWaterRef = 0x120; // TMap<FString, int32_t>
		constexpr auto bUnderWaterEnable = 0x170; // bool
		constexpr auto CachedPostProcessComp = 0x174; // TWeakObjectPtr<UCrowLocalPostProcessComponent>
	}

	namespace n_UCrowVehicleSkinLeftWidget {
		constexpr auto ContainerPanel = 0x380; // UHorizontalBox*
		constexpr auto ButtonClass = 0x388; // UCrowWidgetToggleButton*
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_ACrowWeaponPartsLaserSightActor {
		constexpr auto LaserSightRoot = 0x240; // USceneComponent*
		constexpr auto ChildArray = 0x248; // TArray<USceneComponent*>
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UMeshInspectorTool {
		constexpr auto Settings = 0x88; // UMeshInspectorProperties*
		constexpr auto MaterialSettings = 0x90; // UExistingMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto DrawnLineSet = 0xa8; // ULineSetComponent*
		constexpr auto DefaultMaterial = 0xb0; // UMaterialInterface*
	}

	namespace n_UCrowLobbyVehicleSkinWidget {
		constexpr auto WB_VehicleSkinActorRotator = 0x348; // UCrowActorRotatorWidget*
		constexpr auto WB_TabMenu_Vehicle = 0x350; // UCrowVehicleSkinTopWidget*
		constexpr auto WB_Cusomize_Category_Vehicle = 0x358; // UCrowVehicleSkinLeftWidget*
		constexpr auto WB_Customize_Vehicle_Itemlist = 0x360; // UCrowListViewVehicleSkin*
		constexpr auto WB_TabMenu_ShopCategory = 0x368; // UCrowTabOutfitWidget*
		constexpr auto HB_Shop_Buttons = 0x370; // UHorizontalBox*
		constexpr auto BT_AddShoppingBag = 0x378; // UCrowButton*
		constexpr auto BT_Buy = 0x380; // UCrowButton*
		constexpr auto SceneLobby = 0x388; // ACrowSceneLobby*
		constexpr auto VehiclePawn = 0x390; // ACrowVehiclePawn*
		constexpr auto VehicleCameraFar = 0x398; // ACameraActor*
		constexpr auto VehicleCameraNear = 0x3a0; // ACameraActor*
		constexpr auto VehiclePreviewCameraFar = 0x3a8; // ACameraActor*
		constexpr auto VehiclePreviewCameraNear = 0x3b0; // ACameraActor*
		constexpr auto VehicleRootActor = 0x3b8; // AActor*
		constexpr auto VehicleSpawner = 0x3c0; // ACrowVehicleSpawner*
		constexpr auto SelectVehicleSkin = 0x3c8; // UCrowListItemVehicleSkin*
		constexpr auto SelectedEtcType = 0x3d0; // ECrowLobbyVehicleEtcType
		constexpr auto ParachuteRootActor = 0x3d8; // AActor*
		constexpr auto ParachutePawn = 0x3e0; // ACrowSkydivingPawn*
		constexpr auto ParachuteSpawner = 0x3e8; // ACrowSkydivingSpawner*
	}

	namespace n_UUVProjectionTool {
		constexpr auto BasicProperties = 0x90; // UUVProjectionToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UUVProjectionAdvancedProperties*
		constexpr auto MaterialSettings = 0xa0; // UExistingMeshMaterialProperties*
		constexpr auto Previews = 0xa8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto CheckerMaterial = 0xb8; // UMaterialInstanceDynamic*
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformProxies = 0xd0; // TArray<UTransformProxy*>
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UPostEventAtLocationAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UCrowWorldMapVehicleMarker {
		constexpr auto MarkerOwnerPawn = 0x348; // ACrowVehiclePawn*
		constexpr auto IconOverlay = 0x350; // UCanvasPanel*
		constexpr auto TankIcon = 0x358; // UImage*
		constexpr auto HeliIcon = 0x360; // UImage*
		constexpr auto CarIcon = 0x368; // UImage*
		constexpr auto BoatIcon = 0x370; // UImage*
	}

	namespace n_UAnimNotify_CLSOverlayOverride {
		constexpr auto OverlayOverrideState = 0x30; // int32_t
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UWB_LobbyButton_Tab_C {
		constexpr auto UberGraphFrame = 0x5a8; // FPointerToUberGraphFrame
		constexpr auto Ani_Hover_End = 0x5b0; // UWidgetAnimation*
		constexpr auto Ani_Hover_Select = 0x5b8; // UWidgetAnimation*
		constexpr auto Ani_Hover_DeSelect = 0x5c0; // UWidgetAnimation*
		constexpr auto IMG_New = 0x5c8; // UImage*
	}

	namespace n_UWB_Crosshair_Mh6_HMG_Thrid_C {
		constexpr auto IMG_Cross = 0x428; // UImage*
		constexpr auto IMG_Cross_2 = 0x430; // UImage*
		constexpr auto IMG_Crosshair_Gauge_3 = 0x438; // UImage*
		constexpr auto IMG_Crosshair_Gauge_4 = 0x440; // UImage*
		constexpr auto IMG_Down_3 = 0x448; // UCrowWidgetImage*
		constexpr auto IMG_Down_4 = 0x450; // UCrowWidgetImage*
		constexpr auto IMG_Left_3 = 0x458; // UCrowWidgetImage*
		constexpr auto IMG_Left_4 = 0x460; // UCrowWidgetImage*
		constexpr auto IMG_Right_3 = 0x468; // UCrowWidgetImage*
		constexpr auto IMG_Right_4 = 0x470; // UCrowWidgetImage*
		constexpr auto IMG_Up_3 = 0x478; // UCrowWidgetImage*
		constexpr auto IMG_Up_4 = 0x480; // UCrowWidgetImage*
		constexpr auto WB_Vehicle_Damage = 0x488; // UWB_Vehicle_Warning_Heli_C*
	}

	namespace n_ABP_KitBomber_C {
		constexpr auto ParticleSystem1 = 0x3b0; // UParticleSystemComponent*
		constexpr auto ParticleSystem = 0x3b8; // UParticleSystemComponent*
	}

	namespace n_ABP_Grenade_40mmShell_C {
		constexpr auto Tail_Effect = 0x17e0; // UParticleSystemComponent*
		constexpr auto SM_Shell_Empty = 0x17e8; // UStaticMeshComponent*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_UAkAudioType {
		constexpr auto ShortID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
	}

	namespace n_UCrowObjectiveWidget {
		constexpr auto TimerWidget = 0x348; // UCrowObjectiveTimeWidget*
		constexpr auto IMG_MyTeamIcon = 0x350; // UImage*
		constexpr auto TB_MyTeamCount = 0x358; // UTextBlock*
		constexpr auto PB_MyTeam = 0x360; // UCrowProgressBarInterp*
		constexpr auto IMG_EnemyIcon = 0x368; // UImage*
		constexpr auto TB_EnemyCount = 0x370; // UTextBlock*
		constexpr auto PB_Enemy = 0x378; // UCrowProgressBarInterp*
		constexpr auto TB_ObjectiveCount = 0x380; // UTextBlock*
		constexpr auto RedTeamIcon = 0x388; // FSlateBrush
		constexpr auto BlueTeamIcon = 0x410; // FSlateBrush
	}

	namespace n_UCrowSquadIconWidget {
		constexpr auto WS_Back = 0x348; // UWidgetSwitcher*
		constexpr auto CP_Leader = 0x350; // UCanvasPanel*
		constexpr auto CP_Member = 0x358; // UCanvasPanel*
		constexpr auto IMG_Icon_SquadLeader = 0x360; // UImage*
		constexpr auto IMG_Squad_Color = 0x368; // UImage*
		constexpr auto TB_Index = 0x370; // UTextBlock*
	}

	namespace n_UMagicLeapImageTrackerComponent {
		constexpr auto TargetImageTexture = 0x1f8; // UTexture2D*
		constexpr auto Name = 0x200; // FString
		constexpr auto LongerDimension = 0x210; // float
		constexpr auto bIsStationary = 0x214; // bool
		constexpr auto bUseUnreliablePose = 0x215; // bool
		constexpr auto AxisOrientation = 0x216; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x218; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x228; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UCrowHUDWidgetSquadMatch {
		constexpr auto CP_SquadMatch = 0x348; // UCanvasPanel*
		constexpr auto WB_Respawn_DiveInfo = 0x350; // UCrowSkydivingWidget*
		constexpr auto WB_EventAlram = 0x358; // UCrowWorldEventAlarmWidget*
		constexpr auto WB_Event_Success = 0x360; // UCrowWorldEventAlarmWidget*
		constexpr auto WB_Event_Failed = 0x368; // UCrowWorldEventAlarmWidget*
		constexpr auto WB_EventBox = 0x370; // UCrowWorldEventListWidget*
		constexpr auto WB_PrepareMatch_SquadMatch = 0x378; // UCrowPrepareMatchSquadMatchWidget*
		constexpr auto WB_SelectLoadoutTutorial = 0x380; // UCrowWidgetBase*
		constexpr auto WB_SquadOperation_WaitingSpectating = 0x388; // UCrowWidgetBase*
		constexpr auto WB_SquadOperation_SquadAnnihilation = 0x390; // UCrowWidgetBase*
		constexpr auto WB_SquadOperation_MiningStatus = 0x398; // UCrowMiningStateWidget*
		constexpr auto WB_Zombie_TimerGauge = 0x3a0; // UCrowZombieEnergyGaugeWidget*
		constexpr auto WB_SquadMember_Kill_Alarm = 0x3a8; // UCrowSquadMemberKillWidget*
		constexpr auto WB_Proceeding_Cuon = 0x3b0; // UCrowProceedingMineralWidget*
		constexpr auto WB_ZombieWaiting = 0x3b8; // UCrowZombieWaitingWidget*
		constexpr auto WB_Conquest_GasStatus = 0x3c0; // UCrowHazardGasGuideWidget*
	}

	namespace n_UCrowDropDownWidget {
		constexpr auto bUseAutoSlotIndex = 0x358; // bool
		constexpr auto DropDownSlotWidgetClass = 0x360; // UCrowDropDownSlotWidget*
		constexpr auto RootPanelWidgetName = 0x368; // FName
		constexpr auto PanelWidgetName = 0x370; // FName
		constexpr auto TB_SelectedItem = 0x378; // UTextBlock*
		constexpr auto BT_Dropdown = 0x380; // UCrowButton*
		constexpr auto RootPanelWidget = 0x388; // UPanelWidget*
		constexpr auto PanelWidget = 0x390; // UPanelWidget*
		constexpr auto SlotList = 0x398; // TArray<UCrowDropDownSlotWidget*>
		constexpr auto SelectSlotIndex = 0x3a8; // int32_t
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UCrowWorldLightProbe {
		constexpr auto OpenRatio = 0x358; // float
		constexpr auto LightHitTransform = 0x360; // FTransform
		constexpr auto LightPathTransform = 0x390; // FTransform
		constexpr auto OpenLocations = 0x3c0; // TArray<FVector>
	}

	namespace n_UMirrorOperatorFactory {
		constexpr auto MirrorTool = 0x30; // UMirrorTool*
	}

	namespace n_UCrowConquestAreaMinimapWidget {
		constexpr auto IMG_Area = 0x348; // UImage*
	}

	namespace n_UCrowVehicleFacadeBase {
		constexpr auto VehiclePawn = 0xc0; // ACrowVehiclePawn*
		constexpr auto DamageParameterList = 0xc8; // TArray<FVehicleDamageParameter>
		constexpr auto PrevSpeed = 0xd8; // float
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UProceduralSphericalBoxToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Subdivisions = 0x74; // int32_t
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x440; // TArray<FMaterialSpriteElement>
	}

	namespace n_UCrowWorldSplineComponent {
		constexpr auto SelectedPointEdit = 0x538; // FCrowWorldSplinePointSettingEdit
		constexpr auto DefaultSetting = 0x560; // FCrowWorldSplinePointSetting
		constexpr auto UpdateMeshRange = 0x580; // int32_t
		constexpr auto UpdateDeformRange = 0x584; // int32_t
		constexpr auto SnapToGroundMode = 0x588; // ESnapToGroundMode
		constexpr auto PointSettings = 0x590; // TArray<FCrowWorldSplinePointSetting>
		constexpr auto AddMeshSetting = 0x5a0; // FCrowWorldSplineAddMeshSetting
		constexpr auto StartEndPropSetting = 0x5c8; // FCrowWorldSplinePropSetting
		constexpr auto MeshContainer = 0x5e8; // UCrowWorldSplineMeshContainer*
		constexpr auto CurrSelectedKeys = 0x5f0; // TSet<int32_t>
		constexpr auto bIgnorePostEditChangeProperty = 0x640; // bool
		constexpr auto LastDefaultMesh = 0x648; // UStaticMesh*
		constexpr auto IsDeformMode = 0x650; // bool
		constexpr auto DeformComp = 0x658; // UCrowWorldSplineDeformComponent*
		constexpr auto SplineActorComponent = 0x660; // UCrowWorldSplineActorComponent*
		constexpr auto SplineMode = 0x668; // ECrowWorldSplineMode
		constexpr auto bCheckIgnoreAlwayFit = 0x669; // bool
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_ACrowSafeBoxEventCar {
		constexpr auto EffectNormal = 0x388; // USceneComponent*
		constexpr auto CompleteAnimation = 0x390; // UAnimationAsset*
		constexpr auto CarMesh = 0x398; // USkeletalMeshComponent*
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_ACrowConquestAreaSquadRespawn {
		constexpr auto MaxConstructDistance = 0xb40; // float
		constexpr auto MaxHealth = 0xb44; // float
		constexpr auto CurrentHealth = 0xb48; // float
		constexpr auto Body = 0xb50; // USkeletalMeshComponent*
		constexpr auto RespawnCount = 0xb58; // char
		constexpr auto RemainRespawnCount = 0xb59; // char
		constexpr auto SquadKey = 0xb60; // FString
		constexpr auto OwnerPlayerState = 0xb70; // ACrowPlayerStateBase*
	}

	namespace n_UAkHololensInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UCrowRandomBoxListTableManager {
		constexpr auto TableList = 0x28; // TArray<FCrowRandomBoxItemListTableRow>
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ACrowItemCommon {
		constexpr auto ItemTable = 0x2b8; // FCrowItemTableBaseRow
		constexpr auto ItemData = 0x420; // FCrowItemData
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UCrowWeaponCharacterAnimInst {
		constexpr auto WeaponCharacter = 0x2b8; // ACrowWeaponCharacter*
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UCrowCustomizeCategryBigWidget {
		constexpr auto HB_WeaponParts = 0x348; // UHorizontalBox*
		constexpr auto WB_Customize_Category_Barrel = 0x350; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_Magazine = 0x358; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_Muzzle = 0x360; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_PistolGrip = 0x368; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_PrimarySight = 0x370; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_SecondarySight = 0x378; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_SideBarrel = 0x380; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_Stock = 0x388; // UCrowCategorySlotBigWidget*
		constexpr auto WB_Customize_Category_UnderBarrel = 0x390; // UCrowCategorySlotBigWidget*
		constexpr auto WeaponPartsSlotWidgetArray = 0x398; // TArray<UCrowCategorySlotBigWidget*>
		constexpr auto CustomizeItemDescWidget = 0x3a8; // UCrowCustomizeItemDescWidget*
	}

	namespace n_UCrowTriggerCommandBase {
		constexpr auto TriggerComp = 0xb0; // UCrowTriggerComponent*
		constexpr auto OnEventOnce = 0xb8; // bool
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UUPSSettings {
		constexpr auto PathLinesColor = 0x38; // FColor
		constexpr auto LinesBetweenPointsColor = 0x3c; // FColor
		constexpr auto LineFromPatrolComponentOwnerColor = 0x40; // FColor
		constexpr auto ErrorLineColor = 0x44; // FColor
		constexpr auto DefaultLinesThickness = 0x48; // float
		constexpr auto ErrorLinesThickness = 0x4c; // float
		constexpr auto PatrolPointArrowOffset = 0x50; // float
		constexpr auto PatrolPointArrowSize = 0x54; // float
		constexpr auto PatrolPointSmallArrowSize = 0x58; // float
		constexpr auto ArrowMovementSpeed = 0x5c; // float
		constexpr auto DistanceBetweenArrows = 0x60; // float
		constexpr auto ReachRadiusColor = 0x64; // FColor
		constexpr auto ReachRadiusThickness = 0x68; // float
		constexpr auto KeyToAddNewPoint = 0x70; // FKey
		constexpr auto PatrolBuilderTraceChannel = 0x88; // ECollisionChannel
		constexpr auto CheckDistanceBetweenPoints = 0x8c; // float
		constexpr auto EnemyActionPointComponentMesh = 0x90; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto EnemyActionPointComponentMeshMaterial = 0xb8; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto EnemyActionPointComponentBillboardSprite = 0xe0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DebugPointActionOffset = 0x108; // FVector
		constexpr auto DebugPointActionColor = 0x114; // FColor
		constexpr auto DebugPointActionArrowSize = 0x118; // float
		constexpr auto DebugPointActionLineThickness = 0x11c; // float
		constexpr auto CurrentPatrolPointBBName = 0x120; // FName
	}

	namespace n_UMagicLeapPlanesComponent {
		constexpr auto QueryFlags = 0x1f8; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x208; // UBoxComponent*
		constexpr auto MaxResults = 0x210; // int32_t
		constexpr auto MinHolePerimeter = 0x214; // float
		constexpr auto MinPlaneArea = 0x218; // float
		constexpr auto QueryType = 0x21c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x220; // float
		constexpr auto OnPlanesQueryResult = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x238; // FMulticastInlineDelegate
	}

	namespace n_UCrowWorldAssetItemSpawner {
		constexpr auto ItemSpawnerAsset = 0x28; // ACrowItemSpawner*
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_ACrowWorldSpline {
		constexpr auto CrowSplineMode = 0x220; // ECrowWorldSplineMode
		constexpr auto SplineComp = 0x228; // UCrowWorldSplineComponent*
		constexpr auto SplineMeshContainer = 0x230; // UCrowWorldSplineMeshContainer*
		constexpr auto DeformComp = 0x238; // UCrowWorldSplineDeformComponent*
		constexpr auto RoadComp = 0x240; // UCrowWorldSplineRoadComponent*
		constexpr auto FenceComp = 0x248; // UCrowWorldSplineFenceComponent*
		constexpr auto PoleComp = 0x250; // UCrowWorldSplinePoleComponent*
		constexpr auto HavestComp = 0x258; // UCrowWorldSplineHavestComponent*
		constexpr auto MetaComp = 0x260; // UCrowWorldSplineMetaComponent*
		constexpr auto MergeMeshIndex = 0x268; // int32_t
		constexpr auto RootComp = 0x270; // USceneComponent*
		constexpr auto bFirstConstruction = 0x278; // bool
		constexpr auto SplineUID = 0x27c; // FCrowWorldSplineUID
	}

	namespace n_UCrowPhysicalMatSound {
		constexpr auto CharacterWalk = 0x28; // UAkAudioEvent*
		constexpr auto CharacterRun = 0x30; // UAkAudioEvent*
		constexpr auto CharacterSprint = 0x38; // UAkAudioEvent*
		constexpr auto CharacterProne = 0x40; // UAkAudioEvent*
		constexpr auto CharacterWalk_3P = 0x48; // UAkAudioEvent*
		constexpr auto CharacterRun_3P = 0x50; // UAkAudioEvent*
		constexpr auto CharacterSprint_3P = 0x58; // UAkAudioEvent*
		constexpr auto CharacterProne_3P = 0x60; // UAkAudioEvent*
		constexpr auto CharacterRotateStand_91 = 0x68; // UAkAudioEvent*
		constexpr auto CharacterRotateStand_181 = 0x70; // UAkAudioEvent*
		constexpr auto CharacterRotateCrouch_91 = 0x78; // UAkAudioEvent*
		constexpr auto CharacterRotateCrouch_181 = 0x80; // UAkAudioEvent*
		constexpr auto CharacterRotateProne_91 = 0x88; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_5_56mm = 0x90; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_7_62mm = 0x98; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_9mm = 0xa0; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_338_LMag = 0xa8; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_12_7mm = 0xb0; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_12_7mm_Ground = 0xb8; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_0_44Mag = 0xc0; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_00BuckShot = 0xc8; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_14_5mm = 0xd0; // UAkAudioEvent*
		constexpr auto Ammo_Bullet_25mm = 0xd8; // UAkAudioEvent*
		constexpr auto Ammo_Grenade_M26 = 0xe0; // UAkAudioEvent*
		constexpr auto Ammo_Grenade_M18 = 0xe8; // UAkAudioEvent*
		constexpr auto Ammo_Grenade_AN_M14 = 0xf0; // UAkAudioEvent*
		constexpr auto Ammo_Grenade_M84 = 0xf8; // UAkAudioEvent*
		constexpr auto Ammo_Grenade_40mm = 0x100; // UAkAudioEvent*
		constexpr auto Ammo_Cannon_120mmAP = 0x108; // UAkAudioEvent*
		constexpr auto Ammo_Cannon_120mmHE = 0x110; // UAkAudioEvent*
		constexpr auto Ammo_Smoke_66mm = 0x118; // UAkAudioEvent*
		constexpr auto Ammo_Rocket_66mm = 0x120; // UAkAudioEvent*
		constexpr auto Ammo_Rocket_70mm = 0x128; // UAkAudioEvent*
		constexpr auto Ammo_Rocket_85mm = 0x130; // UAkAudioEvent*
		constexpr auto Ammo_Missile_70mm = 0x138; // UAkAudioEvent*
		constexpr auto Ammo_Missile_127mm = 0x140; // UAkAudioEvent*
		constexpr auto Ammo_Melee_Knife = 0x148; // UAkAudioEvent*
		constexpr auto Ammo_C4 = 0x150; // UAkAudioEvent*
		constexpr auto Ammo_ClaymoreMine = 0x158; // UAkAudioEvent*
		constexpr auto Ammo_ZombiePunch = 0x160; // UAkAudioEvent*
		constexpr auto Explosion_Grenade_M26 = 0x168; // UAkAudioEvent*
		constexpr auto Explosion_Grenade_M18 = 0x170; // UAkAudioEvent*
		constexpr auto Explosion_Grenade_AN_M14 = 0x178; // UAkAudioEvent*
		constexpr auto Explosion_Grenade_M84 = 0x180; // UAkAudioEvent*
		constexpr auto Explosion_Grenade_40mm = 0x188; // UAkAudioEvent*
		constexpr auto Explosion_Cannon_120mmAP = 0x190; // UAkAudioEvent*
		constexpr auto Explosion_Cannon_120mmHE = 0x198; // UAkAudioEvent*
		constexpr auto Explosion_Smoke_66mm = 0x1a0; // UAkAudioEvent*
		constexpr auto Explosion_Rocket_66mm = 0x1a8; // UAkAudioEvent*
		constexpr auto Explosion_Rocket_70mm = 0x1b0; // UAkAudioEvent*
		constexpr auto Explosion_Rocket_85mm = 0x1b8; // UAkAudioEvent*
		constexpr auto Explosion_Missile_70mm = 0x1c0; // UAkAudioEvent*
		constexpr auto Explosion_Missile_127mm = 0x1c8; // UAkAudioEvent*
		constexpr auto Explosion_C4 = 0x1d0; // UAkAudioEvent*
		constexpr auto Explosion_ClaymoreMine = 0x1d8; // UAkAudioEvent*
		constexpr auto Shell_Bullet_5_56mm = 0x1e0; // UAkAudioEvent*
		constexpr auto Shell_Bullet_7_62mm = 0x1e8; // UAkAudioEvent*
		constexpr auto Shell_Bullet_9mm = 0x1f0; // UAkAudioEvent*
		constexpr auto Shell_Bullet_338_LMag = 0x1f8; // UAkAudioEvent*
		constexpr auto Shell_Bullet_12_7mm = 0x200; // UAkAudioEvent*
		constexpr auto Shell_Bullet_12_7mm_Ground = 0x208; // UAkAudioEvent*
		constexpr auto Shell_Bullet_0_44Mag = 0x210; // UAkAudioEvent*
		constexpr auto Shell_Bullet_00BuckShot = 0x218; // UAkAudioEvent*
		constexpr auto Shell_Bullet_14_5mm = 0x220; // UAkAudioEvent*
		constexpr auto Shell_Bullet_25mm = 0x228; // UAkAudioEvent*
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_ACrowTGStealthSpawner {
		constexpr auto BomberMoveSpline = 0x220; // USplineComponent*
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto Bomber = 0x230; // ACrowTGStealthBomberActor*
		constexpr auto BomberClass = 0x238; // ACrowTGStealthBomberActor*
		constexpr auto TotalPathTimeController = 0x240; // float
	}

	namespace n_UWB_HUD_M1Abrams_Crosshair_Smoke_C {
		constexpr auto IMG_ZoomIn = 0x460; // UImage*
		constexpr auto IMG_ZoomIn_5 = 0x468; // UImage*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UGroomComponent {
		constexpr auto GroomAsset = 0x470; // UGroomAsset*
		constexpr auto NiagaraComponents = 0x478; // TArray<UNiagaraComponent*>
		constexpr auto SourceSkeletalMesh = 0x488; // USkeletalMesh*
		constexpr auto BindingAsset = 0x490; // UGroomBindingAsset*
		constexpr auto PhysicsAsset = 0x498; // UPhysicsAsset*
		constexpr auto Strands_DebugMaterial = 0x4a0; // UMaterialInterface*
		constexpr auto Strands_DefaultMaterial = 0x4a8; // UMaterialInterface*
		constexpr auto Cards_DefaultMaterial = 0x4b0; // UMaterialInterface*
		constexpr auto Meshes_DefaultMaterial = 0x4b8; // UMaterialInterface*
		constexpr auto AngularSpringsSystem = 0x4c0; // UNiagaraSystem*
		constexpr auto CosseratRodsSystem = 0x4c8; // UNiagaraSystem*
		constexpr auto AttachmentName = 0x4d0; // FString
		constexpr auto GroomGroupsDesc = 0x530; // TArray<FHairGroupDesc>
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UCrowScopeLockOnWidget {
		constexpr auto CP_LockonCrossHair = 0x370; // UCanvasPanel*
		constexpr auto CP_LockOnArea = 0x378; // UCanvasPanel*
		constexpr auto TB_Targeting = 0x380; // UTextBlock*
		constexpr auto TargettingColor = 0x388; // FLinearColor
		constexpr auto LockOnColor = 0x398; // FLinearColor
		constexpr auto OutOfRangeColor = 0x3a8; // FLinearColor
		constexpr auto NomalColor = 0x3b8; // FLinearColor
		constexpr auto LockOnIndicator = 0x3c8; // UUserWidget*
		constexpr auto LockOnCrossHairPanel = 0x3d0; // UCanvasPanelSlot*
		constexpr auto LockOnIndicatorArray = 0x3d8; // TArray<UCrowLockonIndicator*>
		constexpr auto ActorList = 0x3e8; // TArray<AActor*>
	}

	namespace n_ACrowVolumetricCloudActor {
		constexpr auto PostProcessComp = 0x220; // UPostProcessComponent*
		constexpr auto VolumetricCloudComp = 0x228; // UVolumetricCloudComponent*
		constexpr auto CloudVisualizerComp = 0x230; // UCrowCloudVisualizerComponent*
		constexpr auto CloudDrawComponent = 0x238; // UCrowCloudDrawComponent*
		constexpr auto NiagaraTemplate = 0x240; // UNiagaraSystem*
		constexpr auto ParticleTemplate = 0x248; // UParticleSystem*
		constexpr auto bInitialized = 0x250; // bool
		constexpr auto DataAsset = 0x258; // UCrowCloudScapeDataAsset*
		constexpr auto CurrMIDMaxCount = 0x260; // int32_t
		constexpr auto ActivatedIndexList = 0x268; // TSet<int32_t>
		constexpr auto MIDs = 0x2b8; // TArray<FCrowVloumetricCloudMaterialDynamic>
	}

	namespace n_UBTTask_CrowFindCoverPoint {
		constexpr auto FindMode = 0x98; // ECrowAIFindCoverPointMode
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UCrowWorldSplineActorComponent {
		constexpr auto SplineComp = 0xb0; // UCrowWorldSplineComponent*
		constexpr auto MetaComp = 0xb8; // UCrowWorldSplineMetaComponent*
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

}