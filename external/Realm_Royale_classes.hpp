namespace off {
	constexpr auto GNames = 0x2cec03c;
	constexpr auto GObjects = 0x2cec0ac;

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x60; // ObjectProperty
		constexpr auto InterpGroupInst = 0x68; // ObjectProperty
		constexpr auto CurTime = 0x70; // float
		constexpr auto bLooping = 0x74; // char : 1
		constexpr auto bFinished = 0x74; // char : 1
		constexpr auto bAutoReleaseWhenFinished = 0x74; // char : 1
		constexpr auto bBlendingIn = 0x74; // char : 1
		constexpr auto bBlendingOut = 0x74; // char : 1
		constexpr auto BlendInTime = 0x78; // float
		constexpr auto BlendOutTime = 0x7c; // float
		constexpr auto CurBlendInTime = 0x80; // float
		constexpr auto CurBlendOutTime = 0x84; // float
		constexpr auto PlayRate = 0x88; // float
		constexpr auto BasePlayScale = 0x8c; // float
		constexpr auto TransientScaleModifier = 0x90; // float
		constexpr auto CurrentBlendWeight = 0x94; // float
		constexpr auto RemainingTime = 0x98; // float
		constexpr auto MoveTrack = 0x9c; // ObjectProperty
		constexpr auto MoveInst = 0xa4; // ObjectProperty
		constexpr auto SourceAnimNode = 0xac; // ObjectProperty
		constexpr auto PlaySpace = 0xb4; // ECameraAnimPlaySpace
		constexpr auto UserPlaySpaceMatrix = 0xc0; // FMatrix
		constexpr auto LastPPSettings = 0x100; // FPostProcessSettings
		constexpr auto LastPPSettingsAlpha = 0x280; // float
		constexpr auto LastCameraLoc = 0x284; // FVector
	}

	namespace n_UUIData_Quest {
		constexpr auto m_nQuestId = 0x60; // int32_t
		constexpr auto m_dwActivityId = 0x64; // Fdword
		constexpr auto m_dwPrevActivityId = 0x68; // Fdword
		constexpr auto m_dwGroupingNumber = 0x6c; // Fdword
		constexpr auto m_eStatus = 0x70; // Fdword
		constexpr auto m_dtReceivedDatetime = 0x74; // FQWord
		constexpr auto m_bIsDirty = 0x7c; // char : 1
		constexpr auto m_bHasSeen = 0x7c; // char : 1
		constexpr auto m_bIsNew = 0x7c; // char : 1
		constexpr auto m_bCanAbandon = 0x7c; // char : 1
		constexpr auto m_bCompletionAck = 0x7c; // char : 1
		constexpr auto m_bGoalsInitialized = 0x7c; // char : 1
		constexpr auto m_eQuestType = 0x80; // QuestType
		constexpr auto m_Goals = 0x84; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_AcquisitionCarousel {
		constexpr auto m_mcLeftArrow = 0x140; // ObjectProperty
		constexpr auto m_mcRightArrow = 0x148; // ObjectProperty
		constexpr auto m_mcLeftButtonPrompt = 0x150; // ObjectProperty
		constexpr auto m_mcRightButtonPrompt = 0x158; // ObjectProperty
		constexpr auto m_CarouselItems = 0x160; // TArray<FUIAcquiredItem>
		constexpr auto m_mcNavDots = 0x170; // TArray<ObjectProperty>
		constexpr auto m_nIndex = 0x180; // int32_t
		constexpr auto m_fNavDotCenter = 0x184; // float
		constexpr auto m_ItemIdList = 0x188; // TArray<int32_t>
		constexpr auto m_ItemQuantityList = 0x198; // TArray<int32_t>
		constexpr auto m_fDotPlacementX = 0x1a8; // float
		constexpr auto m_fDotWidth = 0x1ac; // float
		constexpr auto m_fDotPadding = 0x1b0; // float
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileDeployableInactive {
		constexpr auto m_nActiveDeployableCount = 0xcc; // int32_t
	}

	namespace n_UUIDataProvider_OnlineFriendMessages {
		constexpr auto Messages = 0x74; // TArray<FOnlineFriendMessage>
		constexpr auto SendingPlayerNameCol = 0x84; // FString
		constexpr auto bIsFriendInviteCol = 0x94; // FString
		constexpr auto bWasAcceptedCol = 0xa4; // FString
		constexpr auto bWasDeniedCol = 0xb4; // FString
		constexpr auto MessageCol = 0xc4; // FString
		constexpr auto LastInviteFrom = 0xd4; // FString
	}

	namespace n_AGameCrowdAgent {
		constexpr auto VfTable_IInterface_RVO = 0x288; // FPointer
		constexpr auto MyGroup = 0x290; // ObjectProperty
		constexpr auto PreferredVelocity = 0x298; // FVector
		constexpr auto PendingVelocity = 0x2a4; // FVector
		constexpr auto CurrentDestination = 0x2b0; // ObjectProperty
		constexpr auto BehaviorDestination = 0x2b8; // ObjectProperty
		constexpr auto PreviousDestination = 0x2c0; // ObjectProperty
		constexpr auto InterpZTranslation = 0x2c8; // float
		constexpr auto Health = 0x2cc; // int32_t
		constexpr auto DeadBodyDuration = 0x2d0; // float
		constexpr auto LightEnvironment = 0x2d4; // ComponentProperty
		constexpr auto ConformTraceFrameCount = 0x2dc; // int32_t
		constexpr auto NearbyDynamics = 0x2e0; // TArray<FNearbyDynamicItem>
		constexpr auto bUniformScale = 0x2f0; // char : 1
		constexpr auto bCheckForObstacles = 0x2f0; // char : 1
		constexpr auto bUseNavMeshPathing = 0x2f0; // char : 1
		constexpr auto bWantsSeePlayerNotification = 0x2f0; // char : 1
		constexpr auto bAllowPitching = 0x2f0; // char : 1
		constexpr auto bHitObstacle = 0x2f0; // char : 1
		constexpr auto bBadHitNormal = 0x2f0; // char : 1
		constexpr auto bSimulateThisTick = 0x2f0; // char : 1
		constexpr auto bPotentialEncounter = 0x2f0; // char : 0
		constexpr auto bIsPanicked = 0x2f0; // char : 0
		constexpr auto bWantsGroupIdle = 0x2f0; // char : 0
		constexpr auto bPreferVisibleDestination = 0x2f0; // char : 0
		constexpr auto bPreferVisibleDestinationOnSpawn = 0x2f0; // char : 0
		constexpr auto bHasNotifiedSpawner = 0x2f0; // char : 0
		constexpr auto bIsInSpawnPool = 0x2f0; // char : 0
		constexpr auto bPaused = 0x2f0; // char : 0
		constexpr auto ConformType = 0x2f4; // EConformType
		constexpr auto ConformTraceDist = 0x2f8; // float
		constexpr auto ConformTraceInterval = 0x2fc; // int32_t
		constexpr auto CurrentConformTraceInterval = 0x300; // int32_t
		constexpr auto LastGroundZ = 0x304; // float
		constexpr auto AwareRadius = 0x308; // float
		constexpr auto AvoidOtherRadius = 0x30c; // float
		constexpr auto AvoidOtherSampleList = 0x310; // TArray<FAvoidOtherSampleItem>
		constexpr auto PENALTY_COEFF_ANGLETOGOAL = 0x320; // float
		constexpr auto PENALTY_COEFF_ANGLETOVEL = 0x324; // float
		constexpr auto PENALTY_COEFF_MAG = 0x328; // float
		constexpr auto MIN_PENALTY_THRESHOLD = 0x32c; // float
		constexpr auto LastProgressTime = 0x330; // float
		constexpr auto LastFallbackActiveTime = 0x334; // float
		constexpr auto MaxPathLaneValue = 0x338; // float
		constexpr auto CurrentPathLaneValue = 0x33c; // float
		constexpr auto ExtraPathCost = 0x340; // int32_t
		constexpr auto RotateToTargetSpeed = 0x344; // float
		constexpr auto MaxYawRate = 0x348; // float
		constexpr auto MeshMinScale3D = 0x34c; // FVector
		constexpr auto MeshMaxScale3D = 0x358; // FVector
		constexpr auto EyeZOffset = 0x364; // float
		constexpr auto ProximityLODDist = 0x368; // float
		constexpr auto VisibleProximityLODDist = 0x36c; // float
		constexpr auto LastKnownGoodPosition = 0x370; // FVector
		constexpr auto GroundOffset = 0x37c; // float
		constexpr auto IntermediatePoint = 0x380; // FVector
		constexpr auto SearchExtent = 0x38c; // FVector
		constexpr auto NavigationHandleClass = 0x398; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x3a0; // ObjectProperty
		constexpr auto ObstacleCheckCount = 0x3a8; // int32_t
		constexpr auto WalkableFloorZ = 0x3ac; // float
		constexpr auto LastPathingAttempt = 0x3b0; // float
		constexpr auto LastUpdateTime = 0x3b4; // float
		constexpr auto NotVisibleLifeSpan = 0x3b8; // float
		constexpr auto MyArchetype = 0x3bc; // ObjectProperty
		constexpr auto MaxWalkingSpeed = 0x3c4; // float
		constexpr auto MaxRunningSpeed = 0x3c8; // float
		constexpr auto MaxSpeed = 0x3cc; // float
		constexpr auto RecentInteractions = 0x3d0; // TArray<FRecentInteraction>
		constexpr auto BeaconMaxDist = 0x3e0; // float
		constexpr auto BeaconOffset = 0x3e4; // FVector
		constexpr auto BeaconTexture = 0x3f0; // ObjectProperty
		constexpr auto BeaconColor = 0x3f8; // FLinearColor
		constexpr auto AmbientSoundCue = 0x408; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x410; // ComponentProperty
		constexpr auto CurrentBehavior = 0x418; // ObjectProperty
		constexpr auto CurrentBehaviorActivationTime = 0x420; // float
		constexpr auto EncounterAgentBehaviors = 0x424; // TArray<FBehaviorEntry>
		constexpr auto SeePlayerBehaviors = 0x434; // TArray<FBehaviorEntry>
		constexpr auto MaxSeePlayerDistSq = 0x444; // float
		constexpr auto SeePlayerInterval = 0x448; // float
		constexpr auto SpawnBehaviors = 0x44c; // TArray<FBehaviorEntry>
		constexpr auto UneasyBehaviors = 0x45c; // TArray<FBehaviorEntry>
		constexpr auto AlertBehaviors = 0x46c; // TArray<FBehaviorEntry>
		constexpr auto PanicBehaviors = 0x47c; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviors = 0x48c; // TArray<FBehaviorEntry>
		constexpr auto TakeDamageBehaviors = 0x49c; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviorInterval = 0x4ac; // float
		constexpr auto ForceUpdateTime = 0x4b0; // float
		constexpr auto ReachThreshold = 0x4b4; // float
		constexpr auto GroupWaitingBehaviors = 0x4b8; // TArray<FBehaviorEntry>
		constexpr auto DesiredGroupRadius = 0x4c8; // float
		constexpr auto DesiredGroupRadiusSq = 0x4cc; // float
		constexpr auto MaxLOSLifeDistanceSq = 0x4d0; // float
		constexpr auto MySpawner = 0x4d4; // TScriptInterface<Class>
		constexpr auto SpawnOffset = 0x4e4; // FVector
		constexpr auto InitialLastRenderTime = 0x4f0; // float
		constexpr auto DebugAgentColor = 0x4f4; // FColor
		constexpr auto DebugSpawnDest = 0x4f8; // ObjectProperty
	}

	namespace n_UUIData_Queue {
		constexpr auto dwQueues = 0x60; // TArray<Fdword>
		constexpr auto nForcedBotId = 0x70; // int32_t
		constexpr auto eCTA = 0x74; // EUIDQCallToAction
		constexpr auto bSelected = 0x78; // char : 1
	}

	namespace n_UPComPositionHistoryServerComponent {
		constexpr auto CurrentIndex = 0x88; // int32_t
		constexpr auto ServerTimeStamps = 0x8c; // float [0x1e]
		constexpr auto ClientTimeStamps = 0x104; // float [0x1e]
		constexpr auto Positions = 0x17c; // FVector [0x1e]
		constexpr auto Velocities = 0x2e4; // FVector [0x1e]
		constexpr auto Rotations = 0x44c; // FRotator [0x1e]
		constexpr auto bJustTeleported = 0x5b4; // char [0x1e]
		constexpr auto bCollideActors = 0x5d2; // char [0x1e]
		constexpr auto bBlockActors = 0x5f0; // char [0x1e]
		constexpr auto Physics = 0x60e; // EPhysics [0x1e]
	}

	namespace n_UTgAnimNodeEmoteSequence {
		constexpr auto ActiveEmote = 0x1bc; // EEmote
		constexpr auto BlendSpeed = 0x1c0; // float
		constexpr auto InterpWeights = 0x1c4; // char : 1
	}

	namespace n_ATgStartPoint {
		constexpr auto m_nMapObjectId = 0x388; // int32_t
		constexpr auto m_nStartGroup = 0x38c; // int32_t
		constexpr auto m_nReturnMapType = 0x390; // int32_t
		constexpr auto m_fStartRating = 0x394; // float
		constexpr auto m_fCurrentRating = 0x398; // float
		constexpr auto m_fResetRating = 0x39c; // float
		constexpr auto m_fDecreaseRate = 0x3a0; // float
		constexpr auto m_ArrayOfFloats = 0x3a4; // TArray<ATgTeleporter*>
		constexpr auto m_TgTeleporter = 0x3b4; // ObjectProperty
	}

	namespace n_UNavMeshGoal_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x7c; // float
		constexpr auto MinDistance = 0x80; // float
		constexpr auto MinTraversalDist = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_UMorphNodeMultiPose {
		constexpr auto Targets = 0x74; // TArray<ObjectProperty>
		constexpr auto MorphNames = 0x84; // TArray<FName>
		constexpr auto Weights = 0x94; // TArray<float>
	}

	namespace n_UTgAIBehaviorAction_UseAltFire {
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
		constexpr auto Start = 0x98; // char : 1
	}

	namespace n_USVehicleSimCar {
		constexpr auto ChassisTorqueScale = 0xc0; // float
		constexpr auto MaxSteerAngleCurve = 0xc4; // FInterpCurveFloat
		constexpr auto SteerSpeed = 0xd8; // float
		constexpr auto ReverseThrottle = 0xdc; // float
		constexpr auto EngineBrakeFactor = 0xe0; // float
		constexpr auto MaxBrakeTorque = 0xe4; // float
		constexpr auto StopThreshold = 0xe8; // float
		constexpr auto bIsDriving = 0xec; // char : 1
		constexpr auto ActualSteering = 0xf0; // float
		constexpr auto TimeSinceThrottle = 0xf4; // float
	}

	namespace n_UAnalyticEventsBase {
		constexpr auto bSessionInProgress = 0x80; // char : 1
		constexpr auto bAutoStartSession = 0x80; // char : 1
		constexpr auto SessionPauseThresholdSec = 0x84; // int32_t
		constexpr auto UserId = 0x88; // FString
	}

	namespace n_ATgLobbyHUD {
		constexpr auto m_bCurrentlyQueuedForInitialTutorial = 0x62c; // char : 1
		constexpr auto m_bJoiningTraining = 0x62c; // char : 1
		constexpr auto m_bShouldResetCamera = 0x62c; // char : 1
		constexpr auto m_nQueue = 0x630; // int32_t
		constexpr auto m_nQueueState = 0x634; // int32_t
		constexpr auto m_nLobbyState = 0x638; // int32_t
		constexpr auto m_nPlayerState = 0x63c; // int32_t
		constexpr auto m_nModelPose = 0x640; // int32_t
		constexpr auto m_nModelSkin = 0x644; // int32_t
		constexpr auto m_nModelHead = 0x648; // int32_t
		constexpr auto m_nModelClass = 0x64c; // int32_t
		constexpr auto m_nModelDevice = 0x650; // int32_t
		constexpr auto m_nModelDeviceSkin = 0x654; // int32_t
		constexpr auto m_nModelContrailSkin = 0x658; // int32_t
		constexpr auto c_CurrentCamera = 0x65c; // ObjectProperty
		constexpr auto m_sAdditionalNeededScenes = 0x664; // TArray<FString>
		constexpr auto m_CTAItemIds = 0x674; // TArray<int32_t>
		constexpr auto m_PlayerCTAName = 0x684; // FString
		constexpr auto m_SavedLoginVersion = 0x694; // FString
		constexpr auto m_LastLoginVersion = 0x6a4; // FString
		constexpr auto m_FrontLinePedestalMeshActor = 0x6b4; // ObjectProperty
		constexpr auto m_FlankPedestalMeshActor = 0x6bc; // ObjectProperty
		constexpr auto m_SupportPedestalMeshActor = 0x6c4; // ObjectProperty
		constexpr auto m_DamagerPedestalMeshActor = 0x6cc; // ObjectProperty
		constexpr auto m_fOriginalCollisionHeight = 0x6d4; // float
		constexpr auto m_fOriginalCollisionRadius = 0x6d8; // float
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromSelectedTarget {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIgnoreTaskforce = 0x9c; // char : 1
		constexpr auto TargetSelector = 0xa0; // ETargetSelector
		constexpr auto TargetType = 0xa1; // ECombatTargetType
		constexpr auto DeployableId = 0xa4; // int32_t
	}

	namespace n_UUIComponent_CustomPlayer {
		constexpr auto m_pCrossplayIcon = 0x120; // ObjectProperty
		constexpr auto m_pPlayerAvatar = 0x128; // ObjectProperty
		constexpr auto m_mcName = 0x130; // ObjectProperty
		constexpr auto m_mcTitle = 0x138; // ObjectProperty
		constexpr auto m_mcTaskforce = 0x140; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByKnockdown {
		constexpr auto m_bAdjustPlayRateByVelocity = 0x168; // char : 1
		constexpr auto m_fVelocityMultiplier = 0x16c; // float
		constexpr auto m_PreviewVelocity = 0x170; // float
		constexpr auto m_TgPawn = 0x174; // ObjectProperty
		constexpr auto m_FaceDownAnimName = 0x17c; // FName
		constexpr auto m_FaceUpAnimName = 0x184; // FName
		constexpr auto m_FaceDownRecoverAnimName = 0x18c; // FName
		constexpr auto m_FaceUpRecoverAnimName = 0x194; // FName
	}

	namespace n_UTgAimAssistKeyframe {
		constexpr auto KeyframeName = 0x60; // FName
		constexpr auto AimAssistCurve = 0x68; // FRawDistributionFloat
		constexpr auto bMirrored = 0x8c; // char : 1
	}

	namespace n_UTgGameDC_Effect {
		constexpr auto m_nGroup = 0x16c; // int32_t
		constexpr auto m_nIcon = 0x170; // int32_t
		constexpr auto m_bBuff = 0x174; // int32_t
		constexpr auto m_bActive = 0x178; // int32_t
		constexpr auto m_nStacks = 0x17c; // int32_t
		constexpr auto m_fTimer = 0x180; // float
		constexpr auto m_sIcon = 0x184; // FString
		constexpr auto m_sName = 0x194; // FString
		constexpr auto m_sDescription = 0x1a4; // FString
		constexpr auto m_lifeTimer = 0x1b4; // ObjectProperty
	}

	namespace n_URB_ConstraintSetup {
		constexpr auto JointName = 0x60; // FName
		constexpr auto ConstraintBone1 = 0x68; // FName
		constexpr auto ConstraintBone2 = 0x70; // FName
		constexpr auto Pos1 = 0x78; // FVector
		constexpr auto PriAxis1 = 0x84; // FVector
		constexpr auto SecAxis1 = 0x90; // FVector
		constexpr auto Pos2 = 0x9c; // FVector
		constexpr auto PriAxis2 = 0xa8; // FVector
		constexpr auto SecAxis2 = 0xb4; // FVector
		constexpr auto PulleyPivot1 = 0xc0; // FVector
		constexpr auto PulleyPivot2 = 0xcc; // FVector
		constexpr auto bEnableProjection = 0xd8; // char : 1
		constexpr auto m_bBreakOnOwnersDeath = 0xd8; // char : 1
		constexpr auto m_bDoBreak = 0xd8; // char : 1
		constexpr auto bLinearLimitSoft = 0xd8; // char : 1
		constexpr auto bLinearBreakable = 0xd8; // char : 1
		constexpr auto bSwingLimited = 0xd8; // char : 1
		constexpr auto bTwistLimited = 0xd8; // char : 1
		constexpr auto bSwingLimitSoft = 0xd8; // char : 1
		constexpr auto bTwistLimitSoft = 0xd8; // char : 0
		constexpr auto bAngularBreakable = 0xd8; // char : 0
		constexpr auto bIsPulley = 0xd8; // char : 0
		constexpr auto bMaintainMinDistance = 0xd8; // char : 0
		constexpr auto LinearXSetup = 0xdc; // FLinearDOFSetup
		constexpr auto LinearYSetup = 0xe4; // FLinearDOFSetup
		constexpr auto LinearZSetup = 0xec; // FLinearDOFSetup
		constexpr auto LinearLimitStiffness = 0xf4; // float
		constexpr auto LinearLimitDamping = 0xf8; // float
		constexpr auto LinearBreakThreshold = 0xfc; // float
		constexpr auto Swing1LimitAngle = 0x100; // float
		constexpr auto Swing2LimitAngle = 0x104; // float
		constexpr auto TwistLimitAngle = 0x108; // float
		constexpr auto SwingLimitStiffness = 0x10c; // float
		constexpr auto SwingLimitDamping = 0x110; // float
		constexpr auto TwistLimitStiffness = 0x114; // float
		constexpr auto TwistLimitDamping = 0x118; // float
		constexpr auto AngularBreakThreshold = 0x11c; // float
		constexpr auto PulleyRatio = 0x120; // float
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x74; // float
		constexpr auto LoopEnd = 0x78; // float
		constexpr auto DurationAfterLoop = 0x7c; // float
		constexpr auto LoopCount = 0x80; // int32_t
		constexpr auto bLoopIndefinitely = 0x84; // char : 1
		constexpr auto bLoop = 0x84; // char : 1
		constexpr auto VolumeInterpCurve = 0x88; // ComponentProperty
		constexpr auto PitchInterpCurve = 0x90; // ComponentProperty
	}

	namespace n_UUIScene_UIPopupPartyManager {
		constexpr auto m_pCloseButton = 0x154; // ObjectProperty
		constexpr auto m_pBlocker = 0x15c; // ObjectProperty
		constexpr auto m_pList = 0x164; // ObjectProperty
		constexpr auto m_mcTitle = 0x16c; // TArray<ObjectProperty>
		constexpr auto m_pSelectAllAction = 0x17c; // ObjectProperty
		constexpr auto m_pPromptInviteByNameKeyboardAction = 0x184; // ObjectProperty
		constexpr auto m_pPromptInviteByNameGamePadAction = 0x18c; // ObjectProperty
		constexpr auto m_pPromptAddByNameKeyboardAction = 0x194; // ObjectProperty
		constexpr auto m_pPromptAddByNameGamePadAction = 0x19c; // ObjectProperty
	}

	namespace n_UTgSeqAct_ForceClientTutorialAction {
		constexpr auto ForcedAction = 0x108; // eForcedClientTutorialAction
		constexpr auto GameUIElement = 0x109; // eTutorialForceableElements
	}

	namespace n_UUIComponent_Item_Card {
		constexpr auto m_mcCooldown = 0x18c; // ObjectProperty
		constexpr auto m_mcChampion = 0x194; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x19c; // ObjectProperty
		constexpr auto m_mcRank = 0x1a4; // ObjectProperty
		constexpr auto m_mcRarity = 0x1ac; // ObjectProperty
		constexpr auto m_mcProgressBack = 0x1b4; // ObjectProperty
		constexpr auto m_pProgress = 0x1bc; // ObjectProperty
		constexpr auto m_bShowChampion = 0x1c4; // char : 1
		constexpr auto m_nQuantityOverride = 0x1c8; // int32_t
		constexpr auto m_fAnimationProgress = 0x1cc; // float
		constexpr auto m_nLastCachedLevel = 0x1d0; // int32_t
	}

	namespace n_ATgProj_DemonTeleport {
		constexpr auto m_bStopped = 0x51c; // char : 1
		constexpr auto m_bTriggerExplosion = 0x51c; // char : 1
	}

	namespace n_UUIComponent_DailyRewardDay {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_mcDayTF = 0x128; // ObjectProperty
		constexpr auto m_mcCheckmark = 0x130; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_UseWhileCCed {
		constexpr auto m_bIsActive = 0xd0; // char : 1
	}

	namespace n_UTgAnimBlendByTeleportBeacon {
		constexpr auto m_bDeployed = 0x168; // char : 1
	}

	namespace n_UTgAIBehaviorNode {
		constexpr auto Parent = 0x64; // ObjectProperty
		constexpr auto InvTickFrequency = 0x6c; // float
		constexpr auto TitleName = 0x70; // FString
		constexpr auto FriendlyName = 0x80; // FString
		constexpr auto bShownInMenu = 0x90; // char : 1
	}

	namespace n_ATgGame {
		constexpr auto m_ContentPackageReference = 0x4dc; // UObject*
		constexpr auto m_GameWinState = 0x4e4; // GAME_WIN_STATE
		constexpr auto m_GameType = 0x4e5; // TG_GAME_TYPE
		constexpr auto m_fSpawnProtectionTime = 0x4e8; // float
		constexpr auto m_fMaxRepawnTime = 0x4ec; // float
		constexpr auto m_fUnpauseCountdownRemaining = 0x4f0; // float
		constexpr auto s_nBotPlayerCount = 0x4f4; // int32_t
		constexpr auto s_bSpawnOfflinePawns = 0x4f8; // char : 1
		constexpr auto s_bGameInitialized = 0x4f8; // char : 1
		constexpr auto s_bGameEndMissionProcessed = 0x4f8; // char : 1
		constexpr auto s_bMissionSealed = 0x4f8; // char : 1
		constexpr auto m_bForceUsePRISpawnPoint = 0x4f8; // char : 1
		constexpr auto m_bRewardCalculated = 0x4f8; // char : 1
		constexpr auto m_bStatsCanTie = 0x4f8; // char : 1
		constexpr auto m_bStatsIsSymmetric = 0x4f8; // char : 1
		constexpr auto m_bIsTutorialGametype = 0x4f8; // char : 0
		constexpr auto m_bIsPracticeGametype = 0x4f8; // char : 0
		constexpr auto m_bEnableHeadShots = 0x4f8; // char : 0
		constexpr auto m_bAlliances = 0x4f8; // char : 0
		constexpr auto m_bPlayOfTheGameLocked = 0x4f8; // char : 0
		constexpr auto m_bSpawnDisconnectedPlayersStunned = 0x4f8; // char : 0
		constexpr auto m_bPlayersCanOnlyDieOnce = 0x4f8; // char : 0
		constexpr auto m_bUseKillEmotes = 0x4f8; // char : 0
		constexpr auto m_bNotifyKillCombos = 0x4f8; // char : 0
		constexpr auto m_bFirstBloodAwarded = 0x4f8; // char : 0
		constexpr auto s_nNextActorInstanceId = 0x4fc; // int32_t
		constexpr auto s_nNextProjectileInstanceId = 0x500; // int32_t
		constexpr auto s_AIVolumes = 0x504; // TArray<ObjectProperty>
		constexpr auto s_Taskforce1AIVolumesIndices = 0x514; // TArray<int32_t>
		constexpr auto s_Taskforce2AIVolumesIndices = 0x524; // TArray<int32_t>
		constexpr auto s_FortressVolumes = 0x534; // TArray<ObjectProperty>
		constexpr auto s_AIAnnotations = 0x544; // TMap<None, None>
		constexpr auto s_DeviceVolumes = 0x58c; // TArray<ObjectProperty>
		constexpr auto s_ActorFactories = 0x59c; // TArray<ObjectProperty>
		constexpr auto s_fXPModifier = 0x5ac; // float
		constexpr auto m_fGlobalCooldownTime = 0x5b0; // float
		constexpr auto m_ClientLogins = 0x5b4; // TArray<int32_t>
		constexpr auto m_fOcclusionCalcPeriod = 0x5c4; // float
		constexpr auto m_fOcclusionMaxDeviation = 0x5c8; // float
		constexpr auto m_fReadyPercent = 0x5cc; // float
		constexpr auto m_PlayOfTheGame = 0x5d0; // FPlayOfTheGameInfo
		constexpr auto m_fPlayOfTheGameLength = 0x5dc; // float
		constexpr auto m_fPlayOfTheGameIntroBufferLength = 0x5e0; // float
		constexpr auto m_fPlayOfTheGameOuttroBufferLength = 0x5e4; // float
		constexpr auto m_PlayOfTheGameEventConfigs = 0x5e8; // TArray<FPlayOfTheGameEventConfig>
		constexpr auto m_PlayerSpawnExits = 0x5f8; // TArray<ObjectProperty>
		constexpr auto m_ReadyPlayers = 0x608; // TArray<ObjectProperty>
		constexpr auto s_TalentTrees = 0x618; // TArray<FCachedTalentTree>
	}

	namespace n_UPhysicsAsset {
		constexpr auto BodySetup = 0x60; // TArray<ObjectProperty>
		constexpr auto BodySetupIndexMap = 0x70; // FMap_Mirror
		constexpr auto BoundsBodies = 0xb8; // TArray<int32_t>
		constexpr auto ConstraintSetup = 0xc8; // TArray<ObjectProperty>
		constexpr auto DefaultInstance = 0xd8; // ObjectProperty
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x60; // char : 1
		constexpr auto m_bUsesHandIK = 0x60; // char : 1
		constexpr auto m_bCompressOutFacialBones = 0x60; // char : 1
		constexpr auto m_bHasStrippedBones = 0x60; // char : 1
		constexpr auto TrackBoneNames = 0x64; // TArray<FName>
		constexpr auto Sequences = 0x74; // TArray<ObjectProperty>
		constexpr auto SequenceCache = 0x84; // TMap<None, None>
		constexpr auto LinkupCache = 0xcc; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0xdc; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0xec; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0xfc; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x10c; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x11c; // FName
		constexpr auto BestRatioSkelMeshName = 0x124; // FName
		constexpr auto m_FacialFilteredBones = 0x12c; // TArray<FName>
	}

	namespace n_UTgAnimMetaData_MICScalarParameterExtended {
		constexpr auto bSearchSelf = 0x8c; // char : 1
		constexpr auto bSearchSiblings = 0x8c; // char : 1
		constexpr auto bSearchChildren = 0x8c; // char : 1
		constexpr auto bIncludeSearchParticles = 0x8c; // char : 1
		constexpr auto bIncludeSearchMeshes = 0x8c; // char : 1
		constexpr auto bForceAllMaterials = 0x8c; // char : 1
		constexpr auto bFindAllMatchingMaterials = 0x8c; // char : 1
		constexpr auto bHasSetMICs = 0x8c; // char : 1
		constexpr auto MaterialToFind = 0x90; // ObjectProperty
		constexpr auto MaterialToReplace = 0x98; // ObjectProperty
		constexpr auto AlternateMaterialList = 0xa0; // TArray<FAlternateMaterialOverride>
		constexpr auto TexturesToHarvest = 0xb0; // TArray<FName>
		constexpr auto MaterialsToReset = 0xc0; // TArray<FSwappedMeshResetInfo>
		constexpr auto CurrentModifiedMICs = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimBlendBy1P3P {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_ATgSkeletalMeshActor_Posture {
		constexpr auto r_CurrentPosture = 0x2e8; // TG_POSTURE
		constexpr auto m_PostureBlendNodes = 0x2ec; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_HexaFire {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaf4; // FPointer
		constexpr auto m_vProjectileSpawnOffset2 = 0xafc; // FVector
		constexpr auto m_bFireLeftWeapon = 0xb08; // char : 1
	}

	namespace n_UFracturedBaseComponent {
		constexpr auto ComponentBaseResources = 0x310; // FPointer
		constexpr auto ReleaseResourcesFence = 0x318; // FRenderCommandFence_Mirror
		constexpr auto VisibleFragments = 0x31c; // TArray<char>
		constexpr auto bVisibilityHasChanged = 0x32c; // char : 1
		constexpr auto bVisibilityReset = 0x32c; // char : 1
		constexpr auto bInitialVisibilityValue = 0x32c; // char : 1
		constexpr auto bUseDynamicIndexBuffer = 0x32c; // char : 1
		constexpr auto bUseDynamicIBWithHiddenFragments = 0x32c; // char : 1
		constexpr auto NumResourceIndices = 0x330; // int32_t
		constexpr auto bResetStaticMesh = 0x334; // int32_t
	}

	namespace n_UTgControlModule {
		constexpr auto Controller = 0x60; // ObjectProperty
		constexpr auto m_bIsActive = 0x68; // char : 1
	}

	namespace n_UUIData_PopupInput {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto sTitle = 0x68; // FString [0x2]
		constexpr auto sButtonName = 0x88; // FString [0x2]
		constexpr auto pButtonValidate = 0xa8; // FPointer [0x2]
		constexpr auto m_CallbackContainer = 0xb8; // ObjectProperty
	}

	namespace n_UUIScene {
		constexpr auto m_AnimObjects = 0x120; // TArray<FUIAnimData>
		constexpr auto m_Interactables = 0x130; // TArray<ObjectProperty>
		constexpr auto m_FocusedGroupStack = 0x140; // TArray<ObjectProperty>
		constexpr auto m_bAllowDuplicateData = 0x150; // char : 1
		constexpr auto m_bUninitializing = 0x150; // char : 1
	}

	namespace n_UTgDeviceForm_Vine {
		constexpr auto m_bBeamActive = 0x2bc; // char : 1
		constexpr auto m_bVineInterrupted = 0x2bc; // char : 1
		constexpr auto m_BeamTarget = 0x2c0; // ObjectProperty
		constexpr auto m_vBeamTargetLocation = 0x2c8; // FVector
		constexpr auto m_VineBlendList1P = 0x2d4; // TArray<ObjectProperty>
		constexpr auto m_VineBlendList3P = 0x2e4; // TArray<ObjectProperty>
	}

	namespace n_UMorphNodeWeightByBoneAngle {
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BaseBoneName = 0x8c; // FName
		constexpr auto BaseBoneAxis = 0x94; // EAxis
		constexpr auto AngleBoneAxis = 0x95; // EAxis
		constexpr auto bInvertBaseBoneAxis = 0x98; // char : 1
		constexpr auto bInvertAngleBoneAxis = 0x98; // char : 1
		constexpr auto bControlMaterialParameter = 0x98; // char : 1
		constexpr auto AngleBoneName = 0x9c; // FName
		constexpr auto MaterialSlotId = 0xa4; // int32_t
		constexpr auto ScalarParameterName = 0xa8; // FName
		constexpr auto MaterialInstanceConstant = 0xb0; // ObjectProperty
		constexpr auto WeightArray = 0xb8; // TArray<FBoneAngleMorph>
	}

	namespace n_UPBRuleNodeWindowWall {
		constexpr auto CellMaxSizeX = 0x70; // float
		constexpr auto CellMaxSizeZ = 0x74; // float
		constexpr auto WindowSizeX = 0x78; // float
		constexpr auto WindowSizeZ = 0x7c; // float
		constexpr auto WindowPosX = 0x80; // float
		constexpr auto WindowPosZ = 0x84; // float
		constexpr auto bScaleWindowWithCell = 0x88; // char : 1
		constexpr auto YOffset = 0x8c; // float
		constexpr auto Material = 0x90; // ObjectProperty
	}

	namespace n_UUIComponent_PlayerContextMenu {
		constexpr auto m_mcFrame = 0x120; // ObjectProperty
		constexpr auto m_pOptionsList = 0x128; // ObjectProperty
		constexpr auto m_pBlocker = 0x130; // ObjectProperty
	}

	namespace n_UUIComponent_PlayPanel {
		constexpr auto m_mcFade = 0x120; // ObjectProperty
		constexpr auto m_mcIcon = 0x128; // ObjectProperty
		constexpr auto m_mcTitle = 0x130; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x138; // ObjectProperty
		constexpr auto m_mcDelayText = 0x140; // ObjectProperty
		constexpr auto m_mcModeCTA = 0x148; // ObjectProperty
		constexpr auto m_mcFWOTDIcon = 0x150; // ObjectProperty
		constexpr auto m_mcQuestCTA = 0x158; // ObjectProperty
		constexpr auto m_mcCheckbox = 0x160; // ObjectProperty
		constexpr auto m_mcModeTypeTF = 0x168; // ObjectProperty
		constexpr auto m_mcFWOTDText = 0x170; // ObjectProperty
		constexpr auto m_mcAchievements = 0x178; // ObjectProperty
		constexpr auto m_mcLock = 0x180; // ObjectProperty
		constexpr auto m_mcLockNew = 0x188; // ObjectProperty
		constexpr auto m_mcLockInfo = 0x190; // ObjectProperty
		constexpr auto m_mcLockInfoTF = 0x198; // ObjectProperty
		constexpr auto m_mcProgressMask = 0x1a0; // ObjectProperty
		constexpr auto m_mcInfoButtonIcon = 0x1a8; // ObjectProperty
		constexpr auto m_mcRankedProgress = 0x1b0; // ObjectProperty
		constexpr auto m_mcRankedProgressRankTF = 0x1b8; // ObjectProperty
		constexpr auto m_mcRankedProgressRankIcon = 0x1c0; // ObjectProperty
		constexpr auto m_mcRankedProgressProgressTF = 0x1c8; // ObjectProperty
		constexpr auto m_pPanelButton = 0x1d0; // ObjectProperty
		constexpr auto m_pInfoButton = 0x1d8; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x1e0; // ObjectProperty
		constexpr auto m_pQueueOpensCountdown = 0x1e8; // ObjectProperty
		constexpr auto m_pRating = 0x1f0; // ObjectProperty
		constexpr auto m_pRatingTooltip = 0x1f8; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_GiftGiver {
		constexpr auto m_bHasActivated = 0xd0; // char : 1
	}

	namespace n_UTgAudioConversations {
		constexpr auto m_Conversations = 0x60; // TArray<FVoxConversation>
		constexpr auto m_bInitialized = 0x70; // char : 1
		constexpr auto m_bTF1Conversed = 0x70; // char : 1
		constexpr auto m_bTF2Conversed = 0x70; // char : 1
		constexpr auto m_GRI = 0x74; // ObjectProperty
		constexpr auto m_nConversationAttemptsRemaining = 0x7c; // int32_t
	}

	namespace n_ATgDevice_DreadSerpent {
		constexpr auto s_bQueueVoodooDeploy = 0xaec; // char : 1
	}

	namespace n_UTgDeviceFire {
		constexpr auto m_Owner = 0x60; // ObjectProperty
		constexpr auto m_nFireType = 0x68; // EWeaponFireType
		constexpr auto m_eTargetingMode = 0x69; // DeviceTargetMode
		constexpr auto m_eTargeterType = 0x6a; // DeviceTargeterType
		constexpr auto m_eTargetSelectionTypeOverride = 0x6b; // TargetSelectionType
		constexpr auto m_bIsAOE = 0x6c; // char : 1
		constexpr auto m_bIsCone = 0x6c; // char : 1
		constexpr auto m_bIsLinear = 0x6c; // char : 1
		constexpr auto m_bContinuousFire = 0x6c; // char : 1
		constexpr auto m_bRequireLOS = 0x6c; // char : 1
		constexpr auto m_bVerifyTargetPlacement = 0x6c; // char : 1
		constexpr auto m_bAllowMultiplePets = 0x6c; // char : 1
		constexpr auto m_bUseAccurateEncroachment = 0x6c; // char : 1
		constexpr auto m_bUseTargetingEncroachmentActor = 0x6c; // char : 0
		constexpr auto m_bScaleEncroachmentWithRangeMod = 0x6c; // char : 0
		constexpr auto m_bPassThroughShield = 0x6c; // char : 0
		constexpr auto m_bPassThroughDeployWalls = 0x6c; // char : 0
		constexpr auto m_bIgnoreDeployablesForBlocking = 0x6c; // char : 0
		constexpr auto m_bAdjustDeployHeightToExtent = 0x6c; // char : 0
		constexpr auto m_bDeployOnOwnerLocation = 0x6c; // char : 0
		constexpr auto m_bAdjustToGround = 0x6c; // char : 0
		constexpr auto m_bSpawnPetOnOwnerLocation = 0x6c; // char : 0
		constexpr auto m_bCanTriggerCounter = 0x6c; // char : 0
		constexpr auto m_bEnchroachmentFireLOSCheck = 0x6c; // char : 0
		constexpr auto m_bEnchroachmentIgnorePitch = 0x6c; // char : 0
		constexpr auto m_bEncroachmentDebug = 0x6c; // char : 0
		constexpr auto m_bTreatAmmoAsCharges = 0x6c; // char : 0
		constexpr auto m_bMaintainBurstTarget = 0x6c; // char : 0
		constexpr auto m_bCanTargetStealthedTargets = 0x6c; // char : 0
		constexpr auto m_EffectGroupList = 0x70; // TArray<ObjectProperty>
		constexpr auto m_Properties = 0x80; // TArray<FTgPropertyInstance>
		constexpr auto m_pAmSetup = 0x90; // FPointer
		constexpr auto m_pFireModeSetup = 0x98; // FPointer
		constexpr auto m_nId = 0xa0; // int32_t
		constexpr auto m_nAttackType = 0xa4; // int32_t
		constexpr auto m_nMovementType = 0xa8; // int32_t
		constexpr auto m_nmOffhandAnimationType = 0xac; // FName
		constexpr auto m_nTargetAffectsType = 0xb4; // int32_t
		constexpr auto m_nAllowUseWhileFlags = 0xb8; // int32_t
		constexpr auto m_nDamageType = 0xbc; // int32_t
		constexpr auto m_nArcingJumps = 0xc0; // int32_t
		constexpr auto m_PropertyIndexMap = 0xc4; // FMap_Mirror
		constexpr auto m_fHealthCost = 0x10c; // float
		constexpr auto m_fManaCost = 0x110; // float
		constexpr auto m_fEnergyCost = 0x114; // float
		constexpr auto m_fFireTime = 0x118; // float
		constexpr auto m_fBuildupTime = 0x11c; // float
		constexpr auto m_fFirePreHitDelay = 0x120; // float
		constexpr auto m_fFirePostHitDelay = 0x124; // float
		constexpr auto m_nShotsPerFire = 0x128; // int32_t
		constexpr auto m_nmDamageTypeClass = 0x12c; // FName
		constexpr auto m_DamageTypeClass = 0x134; // UTgDamageType*
		constexpr auto m_nMaxTargetCount = 0x13c; // int32_t
		constexpr auto m_fFireLockTime = 0x140; // float
		constexpr auto m_fZoomTime = 0x144; // float
		constexpr auto m_fZoomFOV = 0x148; // float
		constexpr auto m_nAmmoCarriedSize = 0x14c; // int32_t
		constexpr auto m_nAmmoClipSize = 0x150; // int32_t
		constexpr auto m_fAmmoClipPreReloadTime = 0x154; // float
		constexpr auto m_fAmmoClipPostReloadTime = 0x158; // float
		constexpr auto m_nAmmoCostPerShot = 0x15c; // int32_t
		constexpr auto m_nAmmoEfficiency = 0x160; // int32_t
		constexpr auto m_fEncroachmentRayCastVerticalOffset = 0x164; // float
		constexpr auto m_nTargetingEncroachmentActorOverride = 0x168; // int32_t
		constexpr auto m_TargetingEncroachmentActor = 0x16c; // ObjectProperty
		constexpr auto m_vActorEncroachmentBaseScale = 0x174; // FVector
		constexpr auto m_nmWhileFiringCameraAnim = 0x180; // FName
		constexpr auto m_AdjustToGroundRotationOffset = 0x188; // FRotator
		constexpr auto m_CachedRechargeBonusFlatAdditive = 0x194; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusFlatSubtractive = 0x1a4; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusPercentAdditive = 0x1b4; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusPercentSubtractive = 0x1c4; // TArray<ObjectProperty>
		constexpr auto m_ModifiedEffects = 0x1d4; // TArray<ObjectProperty>
		constexpr auto m_BaseValues = 0x1e4; // TArray<float>
		constexpr auto m_ModifiedEGLifetimes = 0x1f4; // TArray<ObjectProperty>
		constexpr auto m_BaseLifetimes = 0x204; // TArray<float>
		constexpr auto m_ModifiedEGAppValues = 0x214; // TArray<ObjectProperty>
		constexpr auto m_BaseAppValues = 0x224; // TArray<float>
		constexpr auto m_ModifiedEGMaxStacks = 0x234; // TArray<ObjectProperty>
		constexpr auto m_BaseMaxStacks = 0x244; // TArray<float>
		constexpr auto m_CachedTargetList = 0x254; // TArray<ObjectProperty>
		constexpr auto m_fSelectTargetsExtent = 0x264; // float
		constexpr auto m_GameplayCurves = 0x268; // ObjectProperty
	}

	namespace n_UUIData_Actor {
		constexpr auto m_pActor = 0x60; // ObjectProperty
	}

	namespace n_UTgGameDC_DeviceList {
		constexpr auto m_DeviceList = 0x16c; // ObjectProperty [0x19]
	}

	namespace n_AStaticMeshCollectionActor {
		constexpr auto StaticMeshComponents = 0x280; // TArray<ComponentProperty>
		constexpr auto MaxStaticMeshComponents = 0x290; // int32_t
		constexpr auto GCExternalReferences = 0x294; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_CountdownText {
		constexpr auto m_nTickHandle = 0x120; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_CooldownDelayer {
		constexpr auto m_fDelayTime = 0xd0; // float
		constexpr auto m_FireFxDummyOn = 0xd4; // TG_FIRE_FX_DUMMY_ON
	}

	namespace n_AKeypoint {
		constexpr auto SpriteComp = 0x280; // ComponentProperty
	}

	namespace n_UUIDataStore_StringAliasMap {
		constexpr auto MenuInputMapArray = 0x98; // TArray<FUIMenuInputMap>
		constexpr auto MenuInputSets = 0xa8; // FMap_Mirror
		constexpr auto PlayerIndex = 0xf0; // int32_t
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x7c; // float
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto Input = 0xd0; // FExpressionInput
		constexpr auto DefaultR = 0x104; // char : 1
		constexpr auto DefaultG = 0x104; // char : 1
		constexpr auto DefaultB = 0x104; // char : 1
		constexpr auto DefaultA = 0x104; // char : 1
		constexpr auto InstanceOverride = 0x108; // FPointer
	}

	namespace n_UParticleModuleTypeDataMeshPhysX {
		constexpr auto PhysXParSys = 0x84; // ObjectProperty
		constexpr auto PhysXRotationMethod = 0x8c; // EPhysXMeshRotationMethod
		constexpr auto FluidRotationCoefficient = 0x90; // float
		constexpr auto VerticalLod = 0x94; // FPhysXEmitterVerticalLodProperties
		constexpr auto ZOffset = 0xa4; // float
	}

	namespace n_UWindowsClient {
		constexpr auto AudioDeviceClass = 0x224; // UAudioDevice*
		constexpr auto AllowJoystickInput = 0x264; // int32_t
	}

	namespace n_ATgDevice_ToggleModeWithLockout {
		constexpr auto m_CachedInhand = 0xaf4; // ObjectProperty
	}

	namespace n_UActorFactoryStaticMesh {
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_UTgDeviceForm_SpinnerWhileFiring {
		constexpr auto m_SpinnerName = 0x2bc; // FName
		constexpr auto m_bShouldSpinOnFire = 0x2c4; // char : 1
		constexpr auto m_SpinnerSkelControls1p = 0x2c8; // TArray<ObjectProperty>
		constexpr auto m_SpinnerSkelControls3p = 0x2d8; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceForm_Smash {
		constexpr auto m_SmashBlendList1P = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_SmashBlendList3P = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_ATgBotFactory_Minions {
		constexpr auto m_eFactoryType = 0x384; // MinionFactoryType
		constexpr auto m_OverrideShouldSpawnSuperMinions = 0x388; // char : 1
		constexpr auto m_nWaveNumber = 0x38c; // int32_t
		constexpr auto m_nLastBonusWave = 0x390; // int32_t
		constexpr auto m_nLanePushersInQueue = 0x394; // int32_t
		constexpr auto m_fLastBonusActivationTime = 0x398; // float
		constexpr auto m_fSuperMinionEndTime = 0x39c; // float
	}

	namespace n_UTgAIBehaviorCondition_NumberDevicesFiring {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIsFiring = 0x9c; // char : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
		constexpr auto DistanceThreshold = 0xa4; // float
	}

	namespace n_UTgSeqAct_GiveCredits {
		constexpr auto CreditsToGive = 0x108; // int32_t
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto bRenderElementsViaProxy = 0x288; // char : 1
		constexpr auto bDisableAutoBaseOnProcBuilding = 0x288; // char : 1
		constexpr auto bProxy = 0x288; // char : 1
		constexpr auto bHiddenByProxy = 0x288; // char : 1
		constexpr auto OldCastShadow = 0x288; // char : 1
		constexpr auto OldAcceptsLights = 0x288; // char : 1
		constexpr auto bCuttingMesh = 0x288; // char : 1
		constexpr auto Silhouette = 0x28c; // ComponentProperty
		constexpr auto VertexColorPhysicalMaterialMappings = 0x294; // TArray<FVertexColorPhysicalMaterialMapping>
	}

	namespace n_UPhysicsAssetInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto RootBodyIndex = 0x68; // int32_t
		constexpr auto Bodies = 0x6c; // TArray<ObjectProperty>
		constexpr auto Constraints = 0x7c; // TArray<ObjectProperty>
		constexpr auto CollisionDisableTable = 0x8c; // FMap_Mirror
		constexpr auto LinearSpringScale = 0xd4; // float
		constexpr auto LinearDampingScale = 0xd8; // float
		constexpr auto LinearForceLimitScale = 0xdc; // float
		constexpr auto AngularSpringScale = 0xe0; // float
		constexpr auto AngularDampingScale = 0xe4; // float
		constexpr auto AngularForceLimitScale = 0xe8; // float
		constexpr auto bInitBodies = 0xec; // char : 1
		constexpr auto m_bPreviewBreakingConstraintsOnDeath = 0xec; // char : 1
	}

	namespace n_UFogVolumeSphericalDensityComponent {
		constexpr auto MaxDensity = 0xe0; // float
		constexpr auto SphereCenter = 0xe4; // FVector
		constexpr auto SphereRadius = 0xf0; // float
		constexpr auto PreviewSphereRadius = 0xf4; // ComponentProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Ruckus {
		constexpr auto m_nDamageReductionStacks = 0xd0; // int32_t
		constexpr auto m_nBonusDamageStacks = 0xd4; // int32_t
		constexpr auto m_fDamageReductionStackTime = 0xd8; // float
		constexpr auto m_fBonusDamageStackTime = 0xdc; // float
		constexpr auto m_bEmitterActive = 0xe0; // char : 1
		constexpr auto m_bComboEffectsOn = 0xe0; // char : 1
		constexpr auto m_fComboBonusTime = 0xe4; // float
	}

	namespace n_UMaterialExpression {
		constexpr auto EditorX = 0x60; // int32_t
		constexpr auto EditorY = 0x64; // int32_t
		constexpr auto bRealtimePreview = 0x68; // char : 1
		constexpr auto bNeedToUpdatePreview = 0x68; // char : 1
		constexpr auto bIsParameterExpression = 0x68; // char : 1
		constexpr auto bShowOutputNameOnPin = 0x68; // char : 1
		constexpr auto bHidePreviewWindow = 0x68; // char : 1
		constexpr auto bShowInputs = 0x68; // char : 1
		constexpr auto bShowOutputs = 0x68; // char : 1
		constexpr auto bUsedByStaticParameterSet = 0x68; // char : 1
		constexpr auto Material = 0x6c; // ObjectProperty
		constexpr auto Function = 0x74; // ObjectProperty
		constexpr auto Desc = 0x7c; // FString
		constexpr auto BorderColor = 0x8c; // FColor
		constexpr auto MenuCategories = 0x90; // TArray<FName>
		constexpr auto Outputs = 0xa0; // TArray<FExpressionOutput>
	}

	namespace n_ATgPointOfInterest {
		constexpr auto m_nNameMsgId = 0x380; // int32_t
		constexpr auto m_sDebugName = 0x384; // FString
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_ALiftExit {
		constexpr auto MyLiftCenter = 0x378; // ObjectProperty
		constexpr auto bExitOnly = 0x380; // char : 1
	}

	namespace n_ALiftCenter {
		constexpr auto MyLift = 0x378; // ObjectProperty
		constexpr auto MaxDist2D = 0x380; // float
		constexpr auto LiftOffset = 0x384; // FVector
		constexpr auto bJumpLift = 0x390; // char : 1
		constexpr auto CollisionHeight = 0x394; // float
		constexpr auto LiftTrigger = 0x398; // ObjectProperty
	}

	namespace n_UTgAnimBlendByDirection {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_SpeedType = 0x170; // EBlendByDirectionSpeedType
		constexpr auto LastDirection = 0x171; // EBlendDirTypes
		constexpr auto bAdjustRateByVelocity = 0x174; // char : 1
		constexpr auto bNoDirectionIsEnabled = 0x174; // char : 1
		constexpr auto bResetLooping = 0x174; // char : 1
		constexpr auto m_bDelayBlendOutToPlayAnim = 0x174; // char : 1
		constexpr auto m_bIsAllowedToBlendOut = 0x174; // char : 1
		constexpr auto m_bMirrorDirectionsWhenPawnMirrored = 0x174; // char : 1
		constexpr auto m_bStopChildrenOnCeaseRelevant = 0x174; // char : 1
	}

	namespace n_UTgAnimBlendByPosture {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_TgPostureMesh = 0x170; // ObjectProperty
		constexpr auto m_LastPosture = 0x178; // TG_POSTURE
		constexpr auto m_CurrentPosture = 0x179; // TG_POSTURE
		constexpr auto m_TransitionFromPosture = 0x17a; // TG_POSTURE
		constexpr auto m_bEnableTransitionAnims = 0x17c; // char : 1
		constexpr auto m_bCheckLowerPriorityPostures = 0x17c; // char : 1
		constexpr auto m_CurrentPostureChildIndex = 0x180; // int32_t
		constexpr auto m_PostureProfiles = 0x184; // TArray<Fm_PostureProfile>
		constexpr auto m_TransitionAnimNodeSeq = 0x194; // ObjectProperty
	}

	namespace n_ATgDevice_Blink {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
		constexpr auto m_vTeleportLocation = 0xaf4; // FVector
	}

	namespace n_ATgWeaponMeshActor_TyraInhand {
		constexpr auto m_fWeaponZoomFOV = 0x504; // float
		constexpr auto m_fWeaponFOVDefault = 0x508; // float
		constexpr auto m_fDoFMultiplier = 0x50c; // float
	}

	namespace n_UTgMiniMap {
		constexpr auto m_nMiniMapMode = 0x60; // int32_t
		constexpr auto m_bShouldDisplayMiniMap = 0x64; // char : 1
		constexpr auto m_bHasMiniMapTexture = 0x64; // char : 1
		constexpr auto m_bRequiresLOS = 0x64; // char : 1
		constexpr auto m_bUseFlashSizing = 0x64; // char : 1
		constexpr auto m_bSpectating = 0x64; // char : 1
		constexpr auto m_fLastUpdateTime = 0x68; // float
		constexpr auto m_MiniMapBaseMIC = 0x6c; // ObjectProperty
		constexpr auto m_MiniMapMIC = 0x74; // ObjectProperty
		constexpr auto m_DynamicMask = 0x7c; // ObjectProperty
		constexpr auto m_nMaskSize = 0x84; // int32_t
		constexpr auto m_fIconScale = 0x88; // float
		constexpr auto m_vMapLocation = 0x8c; // FVector2D
		constexpr auto m_nMapSize = 0x94; // int32_t
		constexpr auto m_MiniMapRender = 0x98; // FPointer
		constexpr auto m_OwnerPC = 0xa0; // ObjectProperty
		constexpr auto m_nWorldMapSize = 0xa8; // int32_t
		constexpr auto m_MICPinging = 0xac; // ObjectProperty
		constexpr auto m_MICPingingEnemy = 0xb4; // ObjectProperty
		constexpr auto m_MICRetreat = 0xbc; // ObjectProperty
		constexpr auto m_MICRetreatEnemy = 0xc4; // ObjectProperty
		constexpr auto m_MICAlert = 0xcc; // ObjectProperty
		constexpr auto m_MICAlertEnemy = 0xd4; // ObjectProperty
		constexpr auto m_MICAlertSilent = 0xdc; // ObjectProperty
		constexpr auto m_MICLocalPlayer = 0xe4; // ObjectProperty
		constexpr auto m_MICLocalSpectator = 0xec; // ObjectProperty
		constexpr auto m_TextureRefs = 0xf4; // TArray<ObjectProperty>
		constexpr auto m_MICPlayer = 0x104; // ObjectProperty [0x6]
		constexpr auto m_MICMinion = 0x134; // ObjectProperty [0x6]
		constexpr auto m_MICTower = 0x164; // ObjectProperty [0x6]
		constexpr auto m_MICTitan = 0x194; // ObjectProperty [0x6]
		constexpr auto m_MICPhoenix = 0x1c4; // ObjectProperty [0x6]
		constexpr auto m_MICCapturePoint = 0x1f4; // ObjectProperty [0x6]
		constexpr auto m_MICLanePusher = 0x224; // ObjectProperty [0x6]
		constexpr auto m_MICTowerOlympus = 0x254; // ObjectProperty [0x3]
		constexpr auto m_MICTitanOlympus = 0x26c; // ObjectProperty [0x6]
		constexpr auto m_MICPhoenixOlympus = 0x29c; // ObjectProperty [0x3]
		constexpr auto m_MICMonster = 0x2b4; // ObjectProperty
		constexpr auto m_PortalLinkColor = 0x2bc; // FLinearColor [0x6]
		constexpr auto m_MICBuffMonster = 0x31c; // FBuffMonsterMIC [0xe]
		constexpr auto m_MICTowerDestroyed = 0x46c; // ObjectProperty
		constexpr auto m_PlayerBackground = 0x474; // ObjectProperty [0x6]
		constexpr auto m_TowerAttackBackground = 0x4a4; // ObjectProperty [0x6]
		constexpr auto m_IconMap = 0x4d4; // TMap<None, None>
		constexpr auto m_MaskPoints = 0x51c; // FBitArray_Mirror
		constexpr auto m_Orientation = 0x53c; // TgMapOrientation
		constexpr auto m_LocalTeam = 0x53d; // TgMapTeam
		constexpr auto bUpdateCapturePoint = 0x53e; // char [0x5]
		constexpr auto m_EntityMap = 0x544; // TMap<None, None>
		constexpr auto m_PortalLayeringIdx = 0x58c; // TArray<FLayerIndex>
		constexpr auto m_LayeringIdx = 0x59c; // TArray<FLayerIndex>
		constexpr auto m_IndependentPings = 0x5ac; // TArray<FMiniMapPingInfo>
	}

	namespace n_UUIScene_UIBattlePass {
		constexpr auto m_pBack = 0x154; // ObjectProperty
		constexpr auto m_pTabs = 0x15c; // ObjectProperty
		constexpr auto m_pHome = 0x164; // ObjectProperty
		constexpr auto m_pChallenges = 0x16c; // ObjectProperty
		constexpr auto m_pPicks = 0x174; // ObjectProperty
	}

	namespace n_ATgCollisionProxy_Vortex {
		constexpr auto m_fGroundSpeedStrafePct = 0x2b4; // float
		constexpr auto m_fGroundSpeedToVortex = 0x2b8; // float
		constexpr auto m_fGroundSpeedPctRetained = 0x2bc; // float
		constexpr auto m_fInnerRadius = 0x2c0; // float
		constexpr auto m_bEnabled = 0x2c4; // char : 1
		constexpr auto m_bOnlyAffectCurrentTarget = 0x2c4; // char : 1
		constexpr auto m_LastInstigator = 0x2c8; // ObjectProperty
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x74; // float
		constexpr auto DelayMax = 0x78; // float
		constexpr auto DelayDuration = 0x7c; // FRawDistributionFloat
	}

	namespace n_UTranslatorTag {
		constexpr auto Tag = 0x60; // FName
	}

	namespace n_ASkeletalMeshActorMAT {
		constexpr auto SlotNodes = 0x2e8; // TArray<ObjectProperty>
	}

	namespace n_UInteractiveFoliageComponent {
		constexpr auto FoliageSceneProxy = 0x310; // FPointer
	}

	namespace n_UTgDevMenuMoviePlayer {
		constexpr auto m_DevMenu = 0x2a0; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0xb0; // char : 1
		constexpr auto ExtendedCaptionDisplay = 0xb0; // char : 1
		constexpr auto A = 0xb4; // FExpressionInput
		constexpr auto B = 0xe8; // FExpressionInput
		constexpr auto Value = 0x11c; // FExpressionInput
	}

	namespace n_UPBRuleNodeSplit {
		constexpr auto SplitAxis = 0x70; // EProcBuildingAxis
		constexpr auto SplitSetup = 0x74; // TArray<FRBSplitInfo>
	}

	namespace n_UTgAnimNodeFitToDuration {
		constexpr auto Duration = 0x114; // float
		constexpr auto OverrideDuration = 0x118; // float
		constexpr auto bAllowIncreasedPlayRate = 0x11c; // char : 1
		constexpr auto bAllowDecreasedPlayRate = 0x11c; // char : 1
		constexpr auto bClampDuration = 0x11c; // char : 1
		constexpr auto m_bScaleByReload = 0x11c; // char : 1
		constexpr auto ClampedMinDuration = 0x120; // float
		constexpr auto ClampedMaxDuration = 0x124; // float
		constexpr auto m_EquipPoint = 0x128; // TG_EQUIP_POINT
		constexpr auto m_fDurationMultiplier = 0x12c; // float
	}

	namespace n_AMutator {
		constexpr auto NextMutator = 0x280; // ObjectProperty
		constexpr auto GroupNames = 0x288; // TArray<FString>
		constexpr auto bUserAdded = 0x298; // char : 1
	}

	namespace n_UMobileMenuObjectProxy {
		constexpr auto __OnTouchEvent__Delegate = 0xdc; // DelegateProperty
		constexpr auto __OnRenderObject__Delegate = 0xec; // DelegateProperty
	}

	namespace n_UTgAnimNodePlayTgCameraAnim {
		constexpr auto m_CameraShake = 0x114; // ObjectProperty
		constexpr auto m_TgPawn = 0x11c; // ObjectProperty
	}

	namespace n_UUIData_CustomQueue {
		constexpr auto m_dwQueueId = 0x60; // Fdword
		constexpr auto m_sDesc = 0x64; // FString
		constexpr auto m_sShortDesc = 0x74; // FString
		constexpr auto m_nTaskforceSize = 0x84; // int32_t
		constexpr auto m_nSortOrder = 0x88; // int32_t
	}

	namespace n_UUIScene_UIPartyLobby {
		constexpr auto m_nOnTickCallbackHandle = 0x154; // int32_t
		constexpr auto m_mcSearching = 0x158; // ObjectProperty
		constexpr auto m_mcSearchingTitle = 0x160; // ObjectProperty
		constexpr auto m_mcSearchingSubtitle = 0x168; // ObjectProperty
		constexpr auto m_pPlayerList = 0x170; // ObjectProperty
		constexpr auto m_pInfoPanel = 0x178; // ObjectProperty
		constexpr auto m_pPlayerMenu = 0x180; // ObjectProperty
		constexpr auto m_pHoveredPlayer = 0x188; // ObjectProperty
		constexpr auto m_pHoveredCustomPlayer = 0x190; // ObjectProperty
		constexpr auto m_grInput = 0x198; // ObjectProperty
		constexpr auto m_akPlayerReady = 0x1a0; // ObjectProperty
		constexpr auto m_akPlayerUnready = 0x1a8; // ObjectProperty
		constexpr auto m_akLeave = 0x1b0; // ObjectProperty
		constexpr auto m_akMatch = 0x1b8; // ObjectProperty
	}

	namespace n_UTgInvListener_CrackShot {
		constexpr auto m_Targets = 0xc8; // TArray<FCrackShotBonusDamageTarget>
	}

	namespace n_UTgSkelCon_Recoil {
		constexpr auto m_Profiles = 0x168; // TArray<FRecoilProfile>
		constexpr auto m_nActiveProfileIndex = 0x178; // int32_t
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x294; // int32_t
		constexpr auto PreviousLODLevel = 0x298; // int32_t
		constexpr auto StaticMesh = 0x29c; // ObjectProperty
		constexpr auto WireframeColor = 0x2a4; // FColor
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x2a8; // char : 1
		constexpr auto bOverrideLightMapResolution = 0x2a8; // char : 1
		constexpr auto bOverrideLightMapRes = 0x2a8; // char : 1
		constexpr auto OverriddenLightMapResolution = 0x2ac; // int32_t
		constexpr auto OverriddenLightMapRes = 0x2b0; // int32_t
		constexpr auto OverriddenLODMaxRange = 0x2b4; // float
		constexpr auto StreamingDistanceMultiplier = 0x2b8; // float
		constexpr auto SubDivisionStepSize = 0x2bc; // int32_t
		constexpr auto bUseSubDivisions = 0x2c0; // char : 1
		constexpr auto bForceStaticDecals = 0x2c0; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x2c0; // char : 1
		constexpr auto bUseSimpleLightmapModifications = 0x2c0; // char : 1
		constexpr auto SimpleLightmapModificationFunction = 0x2c4; // ELightmapModificationFunction
		constexpr auto bNeverBecomeDynamic = 0x2c8; // char : 1
		constexpr auto bForceRenderAsDynamic = 0x2c8; // char : 1
		constexpr auto IrrelevantLights = 0x2cc; // TArray<FGuid>
		constexpr auto LODData = 0x2dc; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto VertexPositionVersionNumber = 0x2ec; // int32_t
		constexpr auto ForcedElementIndex = 0x2f0; // int32_t
		constexpr auto LightmassSettings = 0x2f4; // FLightmassPrimitiveSettings
	}

	namespace n_UTgSkelCon_OscillateRotation {
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationAxis = 0x108; // FVector
		constexpr auto OscillationAxisSpace = 0x114; // EBoneControlSpace
		constexpr auto OscillationAxisSpaceBoneName = 0x118; // FName
		constexpr auto Theta = 0x120; // float
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x68; // char : 1
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FLinearColor
	}

	namespace n_USequenceOp {
		constexpr auto bIsActivated = 0x98; // char : 1
		constexpr auto bIsCurrentDebuggerOp = 0x98; // char : 1
		constexpr auto bActive = 0x98; // char : 1
		constexpr auto bLatentExecution = 0x98; // char : 1
		constexpr auto bAutoActivateOutputLinks = 0x98; // char : 1
		constexpr auto bHaveMovingVarConnector = 0x98; // char : 1
		constexpr auto bHaveMovingInputConnector = 0x98; // char : 1
		constexpr auto bHaveMovingOutputConnector = 0x98; // char : 1
		constexpr auto bPendingVarConnectorRecalc = 0x98; // char : 0
		constexpr auto bPendingInputConnectorRecalc = 0x98; // char : 0
		constexpr auto bPendingOutputConnectorRecalc = 0x98; // char : 0
		constexpr auto bIsBreakpointSet = 0x98; // char : 0
		constexpr auto bIsHiddenBreakpointSet = 0x98; // char : 0
		constexpr auto InputLinks = 0x9c; // TArray<FSeqOpInputLink>
		constexpr auto OutputLinks = 0xac; // TArray<FSeqOpOutputLink>
		constexpr auto VariableLinks = 0xbc; // TArray<FSeqVarLink>
		constexpr auto EventLinks = 0xcc; // TArray<FSeqEventLink>
		constexpr auto PlayerIndex = 0xdc; // int32_t
		constexpr auto GamepadID = 0xe0; // char
		constexpr auto ActivateCount = 0xe4; // int32_t
		constexpr auto SearchTag = 0xe8; // int32_t
	}

	namespace n_UTgAchievement_SurgeonGeneral {
		constexpr auto m_nHealing = 0x90; // int32_t
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x7c; // FVector
		constexpr auto Min = 0x88; // FVector
		constexpr auto bLockAxes = 0x94; // char : 1
		constexpr auto bUseExtremes = 0x94; // char : 1
		constexpr auto LockedAxes = 0x98; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x99; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_ATgProj_Loogie {
		constexpr auto m_bWasExplodedByRocket = 0x51c; // char : 1
		constexpr auto m_bIgnoreRocketOwner = 0x51c; // char : 1
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto FontParameterValues = 0x2f4; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x304; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0x314; // TArray<FTextureParameterValue>
		constexpr auto VectorParameterValues = 0x324; // TArray<FVectorParameterValue>
		constexpr auto StateParameters = 0x334; // TArray<FMICStateParams>
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x60; // float
	}

	namespace n_UGameViewportClient {
		constexpr auto VfTable_FExec = 0x68; // FPointer
		constexpr auto Viewport = 0x70; // FPointer
		constexpr auto ViewportFrame = 0x78; // FPointer
		constexpr auto GlobalInteractions = 0x80; // TArray<ObjectProperty>
		constexpr auto UIControllerClass = 0x90; // UUIInteraction*
		constexpr auto UIController = 0x98; // ObjectProperty
		constexpr auto ViewportConsole = 0xa0; // ObjectProperty
		constexpr auto ShowFlags = 0xa8; // FExportShowFlags_Mirror
		constexpr auto LoadingMessage = 0xb8; // FString
		constexpr auto SavingMessage = 0xc8; // FString
		constexpr auto ConnectingMessage = 0xd8; // FString
		constexpr auto PausedMessage = 0xe8; // FString
		constexpr auto PrecachingMessage = 0xf8; // FString
		constexpr auto bShowTitleSafeZone = 0x108; // char : 1
		constexpr auto bDisplayHardwareMouseCursor = 0x108; // char : 1
		constexpr auto bOverrideDiffuseAndSpecular = 0x108; // char : 1
		constexpr auto bIsPlayInEditorViewport = 0x108; // char : 1
		constexpr auto bShowSystemMouseCursor = 0x108; // char : 1
		constexpr auto bDisableWorldRendering = 0x108; // char : 1
		constexpr auto bCapturedWorldRendering = 0x108; // char : 1
		constexpr auto bDebugNoGFxUI = 0x108; // char : 1
		constexpr auto TitleSafeZone = 0x10c; // FTitleSafeZoneArea
		constexpr auto SplitscreenInfo = 0x11c; // TArray<FSplitscreenData>
		constexpr auto DesiredSplitscreenType = 0x12c; // ESplitScreenType
		constexpr auto ActiveSplitscreenType = 0x12d; // ESplitScreenType
		constexpr auto Default2PSplitType = 0x12e; // ESplitScreenType
		constexpr auto Default3PSplitType = 0x12f; // ESplitScreenType
		constexpr auto ProgressMessage = 0x130; // FString [0x2]
		constexpr auto ProgressTimeOut = 0x150; // float
		constexpr auto ProgressFadeTime = 0x154; // float
		constexpr auto DebugProperties = 0x158; // TArray<FDebugDisplayProperty>
		constexpr auto ScaleformInteraction = 0x168; // FPointer
		constexpr auto PreviousFrameViewFamily = 0x170; // FPointer
		constexpr auto __HandleInputKey__Delegate = 0x178; // DelegateProperty
		constexpr auto __HandleInputAxis__Delegate = 0x188; // DelegateProperty
		constexpr auto __HandleInputChar__Delegate = 0x198; // DelegateProperty
	}

	namespace n_UTgAIBehaviorCondition_IsInMinotaurRadius {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
	}

	namespace n_UUIHudMinimap {
		constexpr auto m_nDepth = 0x244; // int32_t
		constexpr auto m_nTeamsRemain = 0x248; // int32_t
		constexpr auto m_nDeathFogTime = 0x24c; // int32_t
		constexpr auto m_nPreConvergeTime = 0x250; // int32_t
		constexpr auto m_nAlertTimePrevious = 0x254; // int32_t
		constexpr auto m_nRemain = 0x258; // int32_t [0x2]
		constexpr auto m_nLeaderboard = 0x260; // int32_t [0x3]
		constexpr auto m_bInit = 0x26c; // char : 1
		constexpr auto m_bSnap = 0x26c; // char : 1
		constexpr auto m_bDirection = 0x26c; // char : 1
		constexpr auto m_bShowAlert = 0x26c; // char : 1
		constexpr auto m_bShowHealth = 0x26c; // char : 1
		constexpr auto m_bAnimateAlert = 0x26c; // char : 1
		constexpr auto m_bFirstConverge = 0x26c; // char : 1
		constexpr auto m_bDeathFogSpawned = 0x26c; // char : 1
		constexpr auto m_bFirstPreConverge = 0x26c; // char : 0
		constexpr auto m_bMinimapShouldShow = 0x26c; // char : 0
		constexpr auto m_bDisableTextScaling = 0x26c; // char : 0
		constexpr auto m_bResurrecting = 0x26c; // char : 0
		constexpr auto m_fSize = 0x270; // float
		constexpr auto m_fRadius = 0x274; // float
		constexpr auto m_fOffsetX = 0x278; // float
		constexpr auto m_fOffsetY = 0x27c; // float
		constexpr auto m_fGameTime = 0x280; // float
		constexpr auto m_fAlertTimer = 0x284; // float
		constexpr auto m_fDirectionTimer = 0x288; // float
		constexpr auto m_fChestPulseIn = 0x28c; // float
		constexpr auto m_fChestPulseIOut = 0x290; // float
		constexpr auto m_fConvergeRadius = 0x294; // float
		constexpr auto m_fConvergeTarget = 0x298; // float
		constexpr auto m_fConvergeTargetX = 0x29c; // float
		constexpr auto m_fConvergeTargetY = 0x2a0; // float
		constexpr auto m_fConvergeStartSize = 0x2a4; // float
		constexpr auto m_fResurrectionTimer = 0x2a8; // float
		constexpr auto m_fTotalResurrectionTime = 0x2ac; // float
		constexpr auto m_fLootGoblinSpawnedTimer = 0x2b0; // float
		constexpr auto m_fTotalLootGoblinSpawnedTime = 0x2b4; // float
		constexpr auto m_fHealth = 0x2b8; // float [0x2]
		constexpr auto m_sForgeName = 0x2c0; // FString
		constexpr auto m_sNamedAreaName = 0x2d0; // FString
		constexpr auto m_sAlertTitle = 0x2e0; // FString
		constexpr auto m_vBoundsCenter = 0x2f0; // FVector
		constexpr auto m_vBoundsExtents = 0x2fc; // FVector
		constexpr auto m_Chests = 0x308; // TArray<FUIPING_DATA>
		constexpr auto m_Forges = 0x318; // TArray<FUIPING_DATA>
		constexpr auto m_Catapults = 0x328; // TArray<FUIPING_DATA>
		constexpr auto m_NamedAreas = 0x338; // TArray<FUIPING_DATA>
		constexpr auto m_mcMap = 0x348; // ObjectProperty
		constexpr auto m_mcMapBackground = 0x350; // ObjectProperty
		constexpr auto m_mcMapFog = 0x358; // ObjectProperty
		constexpr auto m_mcMapMask = 0x360; // ObjectProperty
		constexpr auto m_mcMapRect = 0x368; // ObjectProperty
		constexpr auto m_mcMapMaskRect = 0x370; // ObjectProperty
		constexpr auto m_mcMapFrame = 0x378; // ObjectProperty
		constexpr auto m_mcMapInner = 0x380; // ObjectProperty
		constexpr auto m_mcMapOuter = 0x388; // ObjectProperty
		constexpr auto m_mcMapChests = 0x390; // ObjectProperty
		constexpr auto m_mcMapDirection = 0x398; // ObjectProperty
		constexpr auto m_mcMapDirectionWaypoint = 0x3a0; // ObjectProperty
		constexpr auto m_mcMapDirectionDistance = 0x3a8; // ObjectProperty
		constexpr auto m_mcMapDirectionDistanceTF = 0x3b0; // ObjectProperty [0x2]
		constexpr auto m_mcMapDirectionAnim = 0x3c0; // ObjectProperty
		constexpr auto m_mcMapDirectionLine = 0x3c8; // ObjectProperty
		constexpr auto m_mcMapZeppelinA = 0x3d0; // ObjectProperty
		constexpr auto m_mcMapNamedAreas = 0x3d8; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirection = 0x3e0; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirectionAnim = 0x3e8; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirectionLine = 0x3f0; // ObjectProperty
		constexpr auto m_mcMapImage = 0x3f8; // ObjectProperty [0x3]
		constexpr auto m_mcLocalPlayer = 0x410; // ObjectProperty
		constexpr auto m_mcTeam = 0x418; // ObjectProperty [0x6]
		constexpr auto m_mcAlliance = 0x448; // ObjectProperty [0x28]
		constexpr auto m_mcWaypoint = 0x588; // ObjectProperty [0x6]
		constexpr auto m_mcLeaderboard = 0x5b8; // ObjectProperty [0x3]
		constexpr auto m_mcTime = 0x5d0; // ObjectProperty
		constexpr auto m_mcTeamsRemain = 0x5d8; // ObjectProperty
		constexpr auto m_mcRemain = 0x5e0; // ObjectProperty [0x2]
		constexpr auto m_mcHealth = 0x5f0; // ObjectProperty [0x2]
		constexpr auto m_mcHealthBar = 0x600; // ObjectProperty [0x2]
		constexpr auto m_mcAlert = 0x610; // ObjectProperty
		constexpr auto m_mcAlertIcon = 0x618; // ObjectProperty
		constexpr auto m_mcAlertMini = 0x620; // ObjectProperty
		constexpr auto m_mcAlertMiniBar = 0x628; // ObjectProperty
		constexpr auto m_mcAlertMiniBarTip = 0x630; // ObjectProperty
		constexpr auto m_mcAlertMiniFlash = 0x638; // ObjectProperty
		constexpr auto m_mcAlertMiniFog = 0x640; // ObjectProperty
		constexpr auto m_mcAlertMiniIcon = 0x648; // ObjectProperty
		constexpr auto m_mcDailyQuests = 0x650; // ObjectProperty
		constexpr auto m_mcQuestEntry = 0x658; // ObjectProperty [0x3]
		constexpr auto m_mcQuestMask = 0x670; // ObjectProperty [0x3]
		constexpr auto m_mcQuestTip = 0x688; // ObjectProperty [0x3]
		constexpr auto m_mcQuestComplete = 0x6a0; // ObjectProperty [0x3]
		constexpr auto m_mcQuestFillBar = 0x6b8; // ObjectProperty [0x3]
		constexpr auto m_mcQuestEntryBG = 0x6d0; // ObjectProperty [0x3]
		constexpr auto m_mcQuestRewardText = 0x6e8; // ObjectProperty
		constexpr auto m_mcQuestReward1 = 0x6f0; // ObjectProperty
		constexpr auto m_mcQuestCompleteNotify = 0x6f8; // ObjectProperty
		constexpr auto m_mcResurrectionNotify = 0x700; // ObjectProperty
		constexpr auto m_mcResurrectionMini = 0x708; // ObjectProperty
		constexpr auto m_mcResurrectionMiniBar = 0x710; // ObjectProperty
		constexpr auto m_mcPOIMessage = 0x718; // ObjectProperty
		constexpr auto m_mcPOIText0 = 0x720; // ObjectProperty
		constexpr auto m_mcPOIText1 = 0x728; // ObjectProperty
		constexpr auto m_sCurrentPOIName = 0x730; // FString
		constexpr auto m_sNextPOIName = 0x740; // FString
		constexpr auto m_fPOITimer = 0x750; // float
		constexpr auto m_fPOIPreTime = 0x754; // float
		constexpr auto m_fPOIShowTime = 0x758; // float
		constexpr auto m_fPOIPostTime = 0x75c; // float
		constexpr auto m_ePOIMessageState = 0x760; // POIMessageState
		constexpr auto m_eObjectiveClearState = 0x761; // ObjectiveClearState
		constexpr auto m_mcCurrentObjective = 0x764; // ObjectProperty
		constexpr auto m_mcObjectives = 0x76c; // ObjectProperty [0x5]
		constexpr auto m_mcObjectiveCheck = 0x794; // ObjectProperty [0x5]
		constexpr auto m_mcObjectiveText = 0x7bc; // ObjectProperty [0x5]
		constexpr auto m_nCurrentObjMessageId = 0x7e4; // int32_t
		constexpr auto m_nCurrentObjIndex = 0x7e8; // int32_t
		constexpr auto m_fClearObjectivesTimer = 0x7ec; // float
		constexpr auto m_akEnterPOI = 0x7f0; // ObjectProperty
	}

	namespace n_AMobileTouchInputVolume {
		constexpr auto bEnabled = 0x2bc; // char : 1
	}

	namespace n_UGameExplosionContent {
		constexpr auto bAutoControllerVibration = 0x60; // char : 1
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // char : 1
		constexpr auto ExplosionSound = 0x64; // ObjectProperty
		constexpr auto CamShake = 0x6c; // ObjectProperty
		constexpr auto CamShake_Left = 0x74; // ObjectProperty
		constexpr auto CamShake_Right = 0x7c; // ObjectProperty
		constexpr auto CamShake_Rear = 0x84; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x8c; // float
		constexpr auto CamShakeOuterRadius = 0x90; // float
		constexpr auto CamShakeFalloff = 0x94; // float
		constexpr auto CameraLensEffect = 0x98; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0xa0; // float
		constexpr auto ExploLight = 0xa4; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xac; // float
		constexpr auto ExploRadialBlur = 0xb0; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0xb8; // float
		constexpr auto ExploRadialBlurMaxBlur = 0xbc; // float
		constexpr auto ParticleEmitterTemplate = 0xc0; // ObjectProperty
		constexpr auto FogVolumeArchetype = 0xc8; // ObjectProperty
	}

	namespace n_USpeedTreeComponent {
		constexpr auto SpeedTree = 0x24c; // ObjectProperty
		constexpr auto bUseLeafCards = 0x254; // char : 1
		constexpr auto bUseLeafMeshes = 0x254; // char : 1
		constexpr auto bUseBranches = 0x254; // char : 1
		constexpr auto bUseFronds = 0x254; // char : 1
		constexpr auto bUseBillboards = 0x254; // char : 1
		constexpr auto Lod3DStart = 0x258; // float
		constexpr auto Lod3DEnd = 0x25c; // float
		constexpr auto LodBillboardStart = 0x260; // float
		constexpr auto LodBillboardEnd = 0x264; // float
		constexpr auto LodLevelOverride = 0x268; // float
		constexpr auto Branch1Material = 0x26c; // ObjectProperty
		constexpr auto Branch2Material = 0x274; // ObjectProperty
		constexpr auto FrondMaterial = 0x27c; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x284; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x28c; // ObjectProperty
		constexpr auto BillboardMaterial = 0x294; // ObjectProperty
		constexpr auto Branch1MaterialNoScreenDoor = 0x29c; // ObjectProperty
		constexpr auto Branch2MaterialNoScreenDoor = 0x2a4; // ObjectProperty
		constexpr auto FrondMaterialNoScreenDoor = 0x2ac; // ObjectProperty
		constexpr auto LeafCardMaterialNoScreenDoor = 0x2b4; // ObjectProperty
		constexpr auto LeafMeshMaterialNoScreenDoor = 0x2bc; // ObjectProperty
		constexpr auto BillboardMaterialNoScreenDoor = 0x2c4; // ObjectProperty
		constexpr auto StaticLights = 0x2cc; // TArray<FSpeedTreeStaticLight>
		constexpr auto BranchLightMap = 0x2dc; // FLightMapRef
		constexpr auto FrondLightMap = 0x2e4; // FLightMapRef
		constexpr auto LeafMeshLightMap = 0x2ec; // FLightMapRef
		constexpr auto LeafCardLightMap = 0x2f4; // FLightMapRef
		constexpr auto BillboardLightMap = 0x2fc; // FLightMapRef
		constexpr auto RotationOnlyMatrix = 0x310; // FMatrix
		constexpr auto LightmassSettings = 0x350; // FLightmassPrimitiveSettings
	}

	namespace n_UUIComponent_CenteredHeaderTab {
		constexpr auto m_mcSelectedTF = 0x120; // ObjectProperty
		constexpr auto m_mcSelectedFrame = 0x128; // ObjectProperty
		constexpr auto m_mcHighlightTF = 0x130; // ObjectProperty
		constexpr auto m_mcShadowTF = 0x138; // ObjectProperty
		constexpr auto m_mcFrame = 0x140; // ObjectProperty
		constexpr auto m_pCTA = 0x148; // ObjectProperty
	}

	namespace n_USeqCond_CompareBool {
		constexpr auto bResult = 0xec; // char : 1
	}

	namespace n_UUIDataProvider_OnlinePlayerDataBase {
		constexpr auto PlayerControllerId = 0x70; // int32_t
	}

	namespace n_UTgGameplayCurvesSet_AimAssistBounds {
		constexpr auto BoundsScaleHorizByDistance = 0x64; // FRawDistributionFloat
		constexpr auto BoundsScaleVertByDistance = 0x88; // FRawDistributionFloat
		constexpr auto bUseHorizCurveForVert = 0xac; // char : 1
		constexpr auto fBaseHorizMultiplier = 0xb0; // float
		constexpr auto fBaseVertMultiplier = 0xb4; // float
	}

	namespace n_UTgInventoryObject_Listen_HealthByPercent {
		constexpr auto m_iAppliedStacks = 0xc8; // int32_t
	}

	namespace n_UTgCameraModule_SpectatorOverview {
		constexpr auto WorldViewRotation = 0x9c; // FRotator
		constexpr auto FOV = 0xa8; // float
		constexpr auto TargetZoomedFOV = 0xac; // float
		constexpr auto ZoomIncrement = 0xb0; // float
		constexpr auto MinZoom = 0xb4; // float
		constexpr auto MaxZoom = 0xb8; // float
		constexpr auto ZoomInterpTime = 0xbc; // float
		constexpr auto CurrentSpringLocation = 0xc0; // FVector
		constexpr auto PawnTargetSpringDamping = 0xcc; // float
		constexpr auto FreeCamSpringDamping = 0xd0; // float
		constexpr auto IgnoreSpringDistance = 0xd4; // float
		constexpr auto CameraPitchData = 0xd8; // TArray<FCameraPitchInfo>
		constexpr auto bFlippedSides = 0xe8; // char : 1
		constexpr auto bJustBecameActive = 0xe8; // char : 1
		constexpr auto bAutoZoomEnabled = 0xe8; // char : 1
		constexpr auto OverviewCameraInfluenceDist = 0xec; // float
		constexpr auto OverviewCameras = 0xf0; // TArray<ObjectProperty>
		constexpr auto ObstacleTransparentExtent = 0x100; // FVector
		constexpr auto fMinAutoZoomFOVAngle = 0x10c; // float
		constexpr auto fMaxAutoZoomFOVAngle = 0x110; // float
		constexpr auto fMinAutoZoomDistance = 0x114; // float
		constexpr auto fMaxAutoZoomDistance = 0x118; // float
		constexpr auto fAutoZoomDetectionRadius = 0x11c; // float
		constexpr auto fAutoZoomInSpeed = 0x120; // float
		constexpr auto fAutoZoomOutSpeed = 0x124; // float
		constexpr auto fAutoZoomInLockOutTime = 0x128; // float
		constexpr auto fAutoZoomOutLockOutTime = 0x12c; // float
		constexpr auto m_RemainingAutoZoomInLockOutTime = 0x130; // float
		constexpr auto m_RemainingAutoZoomOutLockOutTime = 0x134; // float
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto ControlEdgeName = 0x68; // FName
		constexpr auto SheetsPerTrail = 0x70; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x74; // char : 1
		constexpr auto bClipSourceSegement = 0x74; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x74; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x74; // char : 1
		constexpr auto bRenderGeometry = 0x74; // char : 1
		constexpr auto bRenderSpawnPoints = 0x74; // char : 1
		constexpr auto bRenderTangents = 0x74; // char : 1
		constexpr auto bRenderTessellation = 0x74; // char : 1
		constexpr auto TilingDistance = 0x78; // float
		constexpr auto DistanceTessellationStepSize = 0x7c; // float
		constexpr auto TangentTessellationScalar = 0x80; // float
	}

	namespace n_UMorphNodeWeightByBoneRotation {
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BoneName = 0x8c; // FName
		constexpr auto BoneAxis = 0x94; // EAxis
		constexpr auto bInvertBoneAxis = 0x98; // char : 1
		constexpr auto bControlMaterialParameter = 0x98; // char : 1
		constexpr auto WeightArray = 0x9c; // TArray<FBoneAngleMorph>
		constexpr auto MaterialSlotId = 0xac; // int32_t
		constexpr auto ScalarParameterName = 0xb0; // FName
		constexpr auto MaterialInstanceConstant = 0xb8; // ObjectProperty
	}

	namespace n_UTgControlModule_TopDown {
		constexpr auto DefaultStartHeight = 0x78; // float
	}

	namespace n_UUIComponent_BattlePassRewardLevel {
		constexpr auto m_pItemIcon = 0x120; // ObjectProperty
		constexpr auto m_pButton = 0x128; // ObjectProperty
		constexpr auto m_mcLock = 0x130; // ObjectProperty
		constexpr auto m_mcCheck = 0x138; // ObjectProperty
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto MinInput = 0x98; // FVector
		constexpr auto MaxInput = 0xa4; // FVector
		constexpr auto MinOutput = 0xb0; // FVector
		constexpr auto MaxOutput = 0xbc; // FVector
		constexpr auto ParamModes = 0xc8; // DistributionParamMode [0x3]
	}

	namespace n_UUIComponent_ChampionSimple {
		constexpr auto m_mcText = 0x120; // ObjectProperty
		constexpr auto m_mcChampionIconWrapper = 0x128; // ObjectProperty
		constexpr auto m_mcIconImage = 0x130; // ObjectProperty
	}

	namespace n_UOnlineSubsystem {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto AccountInterface = 0x68; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x78; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x88; // TScriptInterface<Class>
		constexpr auto MarketplaceInterface = 0x98; // TScriptInterface<Class>
		constexpr auto SystemInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameInterface = 0xb8; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0xc8; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0xd8; // TScriptInterface<Class>
		constexpr auto StatsInterface = 0xe8; // TScriptInterface<Class>
		constexpr auto NewsInterface = 0xf8; // TScriptInterface<Class>
		constexpr auto PartyChatInterface = 0x108; // TScriptInterface<Class>
		constexpr auto TitleFileInterface = 0x118; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x128; // TScriptInterface<Class>
		constexpr auto UserCloudInterface = 0x138; // TScriptInterface<Class>
		constexpr auto SharedCloudInterface = 0x148; // TScriptInterface<Class>
		constexpr auto SocialInterface = 0x158; // TScriptInterface<Class>
		constexpr auto ChatInterface = 0x168; // TScriptInterface<Class>
		constexpr auto AuthInterface = 0x178; // TScriptInterface<Class>
		constexpr auto GameDVRInterface = 0x188; // TScriptInterface<Class>
		constexpr auto CommunityContentInterface = 0x198; // TScriptInterface<Class>
		constexpr auto OnLeaveStorefrontDelegates = 0x1a8; // TArray<DelegateProperty>
		constexpr auto LoggedInPlayerNetId = 0x1b8; // FUniqueNetId
		constexpr auto NamedInterfaces = 0x1c0; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x1d0; // TArray<FNamedInterfaceDef>
		constexpr auto Sessions = 0x1e0; // TArray<FNamedSession>
		constexpr auto PartyMemberList = 0x1f0; // TArray<FSessionMemberInfo>
		constexpr auto GameMemberList = 0x200; // TArray<FSessionMemberInfo>
		constexpr auto bCameFromAutoLogin = 0x210; // char : 1
		constexpr auto bUseBuildIdOverride = 0x210; // char : 1
		constexpr auto BuildIdOverride = 0x214; // int32_t
		constexpr auto IniLocPatcherClassName = 0x218; // FString
		constexpr auto Patcher = 0x228; // ObjectProperty
		constexpr auto AsyncMinCompletionTime = 0x230; // float
		constexpr auto DefaultSessionTemplateName = 0x234; // FString
		constexpr auto PartySessionTemplateName = 0x244; // FString
		constexpr auto __OnLeaveStorefront__Delegate = 0x254; // DelegateProperty
	}

	namespace n_UTgAnimNotify_PlayPetAnim {
		constexpr auto m_ChildSeqName = 0x68; // FName
	}

	namespace n_UMorphTargetSet {
		constexpr auto Targets = 0x60; // TArray<ObjectProperty>
		constexpr auto BaseSkelMesh = 0x70; // ObjectProperty
		constexpr auto RawWedgePointIndices = 0x78; // FArray_Mirror
	}

	namespace n_UPBRuleNodeQuad {
		constexpr auto Material = 0x70; // ObjectProperty
		constexpr auto RepeatMaxSizeX = 0x78; // float
		constexpr auto RepeatMaxSizeZ = 0x7c; // float
		constexpr auto QuadLightmapRes = 0x80; // int32_t
		constexpr auto YOffset = 0x84; // float
		constexpr auto bDisableMaterialRepeat = 0x88; // char : 1
	}

	namespace n_UUIComponent_Interactable {
		constexpr auto m_mcInteractable = 0x118; // ObjectProperty
		constexpr auto m_mcRolloverObjects = 0x120; // TArray<ObjectProperty>
		constexpr auto m_mcSelected = 0x130; // ObjectProperty
		constexpr auto m_bSelected = 0x138; // char : 1
		constexpr auto m_eInteractionType = 0x13c; // UIDISPLAYTYPE
	}

	namespace n_UTgAchievement_Unstoppable {
		constexpr auto m_bReachedKillstreak = 0x90; // char : 1
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Texture = 0xb0; // ObjectProperty
		constexpr auto Coordinates = 0xb8; // FExpressionInput
		constexpr auto TextureObject = 0xec; // FExpressionInput
	}

	namespace n_ATgSpectatorTempCam {
		constexpr auto bIsViewTarget = 0x420; // char : 1
		constexpr auto bIsBookmark = 0x420; // char : 1
	}

	namespace n_UFracturedStaticMesh {
		constexpr auto CoreMeshScale = 0x1e4; // float
		constexpr auto bSliceUsingCoreCollision = 0x218; // char : 1
		constexpr auto FragmentDestroyEffect = 0x21c; // ObjectProperty
		constexpr auto FragmentDestroyEffects = 0x224; // TArray<ObjectProperty>
		constexpr auto FragmentDestroyEffectScale = 0x234; // float
		constexpr auto FragmentHealthScale = 0x238; // float
		constexpr auto FragmentMinHealth = 0x23c; // float
		constexpr auto FragmentMaxHealth = 0x240; // float
		constexpr auto bUniformFragmentHealth = 0x244; // char : 1
		constexpr auto ChunkLinVel = 0x248; // float
		constexpr auto ChunkAngVel = 0x24c; // float
		constexpr auto ChunkLinHorizontalScale = 0x250; // float
		constexpr auto ExplosionVelScale = 0x254; // float
		constexpr auto bCompositeChunksExplodeOnImpact = 0x258; // char : 1
		constexpr auto bFixIsolatedChunks = 0x25c; // char : 1
		constexpr auto bAlwaysBreakOffIsolatedIslands = 0x260; // char : 1
		constexpr auto bSpawnPhysicsChunks = 0x264; // char : 1
		constexpr auto ChanceOfPhysicsChunk = 0x268; // float
		constexpr auto ExplosionChanceOfPhysicsChunk = 0x26c; // float
		constexpr auto NormalPhysicsChunkScaleMin = 0x270; // float
		constexpr auto NormalPhysicsChunkScaleMax = 0x274; // float
		constexpr auto ExplosionPhysicsChunkScaleMin = 0x278; // float
		constexpr auto ExplosionPhysicsChunkScaleMax = 0x27c; // float
		constexpr auto MinConnectionSupportArea = 0x280; // float
		constexpr auto DynamicOutsideMaterial = 0x284; // ObjectProperty
		constexpr auto LoseChunkOutsideMaterial = 0x28c; // ObjectProperty
		constexpr auto OutsideMaterialIndex = 0x294; // int32_t
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x208; // int32_t
	}

	namespace n_UFogVolumeConeDensityComponent {
		constexpr auto MaxDensity = 0xe0; // float
		constexpr auto ConeVertex = 0xe4; // FVector
		constexpr auto ConeRadius = 0xf0; // float
		constexpr auto ConeAxis = 0xf4; // FVector
		constexpr auto ConeMaxAngle = 0x100; // float
		constexpr auto PreviewCone = 0x104; // ComponentProperty
	}

	namespace n_UUIDataLeaguePlayer {
		constexpr auto pPlayer = 0x60; // ObjectProperty
		constexpr auto pLeague = 0x68; // ObjectProperty
		constexpr auto pTier = 0x70; // ObjectProperty
		constexpr auto pHighestTier = 0x78; // ObjectProperty
		constexpr auto nPointsEarned = 0x80; // int32_t
		constexpr auto nPointsTrend = 0x84; // int32_t
		constexpr auto dwRank = 0x88; // Fdword
		constexpr auto dwRankPrev = 0x8c; // Fdword
		constexpr auto dwWins = 0x90; // Fdword
		constexpr auto dwLosses = 0x94; // Fdword
		constexpr auto dwDodges = 0x98; // Fdword
		constexpr auto dwMatchesPlayedInTier = 0x9c; // Fdword
		constexpr auto dwRegion = 0xa0; // Fdword
		constexpr auto dwRecommendedTierId = 0xa4; // Fdword
		constexpr auto dwTitleId = 0xa8; // Fdword
		constexpr auto dtLastPlayed = 0xac; // FDateTimeWrapper
	}

	namespace n_UFont {
		constexpr auto Characters = 0x60; // TArray<FFontCharacter>
		constexpr auto Textures = 0x70; // TArray<ObjectProperty>
		constexpr auto CharRemap = 0x80; // TMap<None, None>
		constexpr auto IsRemapped = 0xc8; // int32_t
		constexpr auto EmScale = 0xcc; // float
		constexpr auto Ascent = 0xd0; // float
		constexpr auto Descent = 0xd4; // float
		constexpr auto Leading = 0xd8; // float
		constexpr auto Kerning = 0xdc; // int32_t
		constexpr auto ImportOptions = 0xe0; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x188; // int32_t
		constexpr auto MaxCharHeight = 0x18c; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x19c; // float
	}

	namespace n_UUIComponent_BattlePassPurchasePanel {
		constexpr auto m_mcLevel = 0x120; // ObjectProperty
		constexpr auto m_mcDiamond = 0x128; // ObjectProperty
		constexpr auto m_mcName = 0x130; // ObjectProperty
		constexpr auto m_mcRarity = 0x138; // ObjectProperty
		constexpr auto m_mcDesc = 0x140; // ObjectProperty
		constexpr auto m_mcOwned = 0x148; // ObjectProperty
		constexpr auto m_mcOwnedTF = 0x150; // ObjectProperty
		constexpr auto m_mcUnlockCheck = 0x158; // ObjectProperty
		constexpr auto m_mcTeaser = 0x160; // ObjectProperty
		constexpr auto m_pButton = 0x168; // ObjectProperty
		constexpr auto m_mcButtonDiamond = 0x170; // ObjectProperty
		constexpr auto m_pPrompt = 0x178; // ObjectProperty
		constexpr auto m_dwRequiredLevel = 0x180; // Fdword
		constexpr auto m_bPremium = 0x184; // char : 1
		constexpr auto m_InputPurchase = 0x188; // ObjectProperty
	}

	namespace n_UUIPopupPurchase {
		constexpr auto m_nOffset = 0x244; // int32_t
		constexpr auto m_nLootId = 0x248; // int32_t
		constexpr auto m_nVendor = 0x24c; // int32_t
		constexpr auto m_nHoverItem = 0x250; // int32_t
		constexpr auto m_fWaitTimeout = 0x254; // float
		constexpr auto m_fPurchaseFlash = 0x258; // float
		constexpr auto m_fConfirmationTime = 0x25c; // float
		constexpr auto m_fConfirmationTimer = 0x260; // float
		constexpr auto m_bControllerButtonHeld = 0x264; // char : 1
		constexpr auto m_nItems = 0x268; // TArray<int32_t>
		constexpr auto m_mcBlocker = 0x278; // ObjectProperty
		constexpr auto m_mcPanel = 0x280; // ObjectProperty
		constexpr auto m_mcPanelBack = 0x288; // ObjectProperty
		constexpr auto m_mcPanelName = 0x290; // ObjectProperty
		constexpr auto m_mcPanelDesc = 0x298; // ObjectProperty
		constexpr auto m_mcPanelType = 0x2a0; // ObjectProperty
		constexpr auto m_mcPanelIcon = 0x2a8; // ObjectProperty
		constexpr auto m_mcPanelWait = 0x2b0; // ObjectProperty
		constexpr auto m_mcPanelTotal = 0x2b8; // ObjectProperty
		constexpr auto m_mcPanelTotalCrowns = 0x2c0; // ObjectProperty
		constexpr auto m_mcPanelTotalTrophies = 0x2c8; // ObjectProperty
		constexpr auto m_mcPanelHoverName = 0x2d0; // ObjectProperty
		constexpr auto m_mcPanelHoverDesc = 0x2d8; // ObjectProperty
		constexpr auto m_mcPanelCrowns = 0x2e0; // ObjectProperty
		constexpr auto m_mcPanelCrownsPurchase = 0x2e8; // ObjectProperty
		constexpr auto m_mcPanelCrownsPurchaseFlash = 0x2f0; // ObjectProperty
		constexpr auto m_mcPanelCrownsPurchasePrice = 0x2f8; // ObjectProperty
		constexpr auto m_mcPanelCrownsPurchasePriceDiscount = 0x300; // ObjectProperty
		constexpr auto m_mcPanelPurchaseHold = 0x308; // ObjectProperty
		constexpr auto m_mcPanelPurchaseMask = 0x310; // ObjectProperty
		constexpr auto m_mcPanelPurchaseKey = 0x318; // ObjectProperty
		constexpr auto m_mcPanelPurchaseKeyHoldBack = 0x320; // ObjectProperty
		constexpr auto m_mcPanelTrophies = 0x328; // ObjectProperty
		constexpr auto m_mcPanelTrophiesPurchase = 0x330; // ObjectProperty
		constexpr auto m_mcPanelTrophiesPurchaseFlash = 0x338; // ObjectProperty
		constexpr auto m_mcPanelTrophiesPurchasePrice = 0x340; // ObjectProperty
		constexpr auto m_mcPanelTrophiesPurchasePriceDiscount = 0x348; // ObjectProperty
		constexpr auto m_mcPanelArrow = 0x350; // ObjectProperty [0x2]
		constexpr auto m_mcItem = 0x360; // ObjectProperty [0x5]
		constexpr auto m_mcItemIcon = 0x388; // ObjectProperty [0x5]
		constexpr auto m_mcItemFrame = 0x3b0; // ObjectProperty [0x5]
		constexpr auto m_mcItemActive = 0x3d8; // ObjectProperty [0x5]
		constexpr auto m_mcItemRarity = 0x400; // ObjectProperty [0x5]
		constexpr auto m_mcItemTexture = 0x428; // ObjectProperty [0x5]
		constexpr auto m_mcItemIconFrame = 0x450; // ObjectProperty [0x5]
		constexpr auto m_pInputGroup = 0x478; // ObjectProperty
		constexpr auto m_pPurchaseGroup = 0x480; // ObjectProperty
		constexpr auto m_akPurchase = 0x488; // ObjectProperty
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UPBRuleNodeRandom {
		constexpr auto NumOutputs = 0x70; // int32_t
		constexpr auto MinNumExecuted = 0x74; // int32_t
		constexpr auto MaxNumExecuted = 0x78; // int32_t
	}

	namespace n_ATgAITaskforceBlockingVolume {
		constexpr auto BlockTaskforce = 0x2bc; // int32_t
		constexpr auto m_bHasRegisteredObstacle = 0x2c0; // char : 1
	}

	namespace n_AFogVolumeDensityInfo {
		constexpr auto DensityComponent = 0x280; // ComponentProperty
		constexpr auto AutomaticMeshComponent = 0x288; // ComponentProperty
		constexpr auto bEnabled = 0x290; // char : 1
	}

	namespace n_UTgAIUtilityFilter_LoSToTargetLastKnownLocation {
		constexpr auto bInverse = 0xc0; // char : 1
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgEffectDamage_AstroDOT {
		constexpr auto m_EffectTimeStamps = 0xc8; // TArray<float>
		constexpr auto m_EffectDamageValues = 0xd8; // TArray<float>
		constexpr auto m_EffectInfo = 0xe8; // FPointer
	}

	namespace n_UDrawQuadComponent {
		constexpr auto Texture = 0x24c; // ObjectProperty
		constexpr auto Width = 0x254; // float
		constexpr auto Height = 0x258; // float
	}

	namespace n_UUIData_StringWithCount {
		constexpr auto m_nValue = 0x70; // int32_t
	}

	namespace n_UUIScene_UICustomGameList {
		constexpr auto m_pList = 0x154; // ObjectProperty
		constexpr auto m_pSelectedComp = 0x15c; // ObjectProperty
		constexpr auto m_pSelectedGame = 0x164; // ObjectProperty
		constexpr auto m_pCreateButton = 0x16c; // ObjectProperty
		constexpr auto m_pJoinButton = 0x174; // ObjectProperty
		constexpr auto m_mcRegionTF = 0x17c; // ObjectProperty
		constexpr auto m_pCreateAction = 0x184; // ObjectProperty
		constexpr auto m_pJoinAction = 0x18c; // ObjectProperty
		constexpr auto m_pRefreshKeyboardAction = 0x194; // ObjectProperty
		constexpr auto m_pRefreshGamePadAction = 0x19c; // ObjectProperty
		constexpr auto m_fRefreshDisableTimer = 0x1a4; // float
	}

	namespace n_APlayerCollectorGame {
		constexpr auto NumberOfClientsToWaitFor = 0x4cc; // int32_t
		constexpr auto URLToLoad = 0x4d0; // FString
	}

	namespace n_ATgSilhouetteManager {
		constexpr auto m_Owner = 0x280; // ObjectProperty
		constexpr auto m_bSilhouettesEnabled = 0x288; // char : 1
		constexpr auto m_bForceSilhouetteVisible = 0x288; // char : 1
		constexpr auto m_SilhouetteInfos = 0x28c; // TArray<FTgSilhouetteInfo>
		constexpr auto m_SilhouetteClass = 0x29c; // UTgSilhouetteComponent*
	}

	namespace n_UUIData_Deck {
		constexpr auto m_pDeckItems = 0x60; // ObjectProperty [0x5]
		constexpr auto m_nId = 0x88; // int32_t
		constexpr auto m_bIsTemplate = 0x8c; // char : 1
		constexpr auto m_sName = 0x90; // FString
		constexpr auto m_sDisplayName = 0xa0; // FString
		constexpr auto m_sDescription = 0xb0; // FString
	}

	namespace n_ATgPawn_Character {
		constexpr auto c_bUpdatePlayerStatUI = 0x2fb4; // char : 1
		constexpr auto m_bInHandFiring = 0x2fb4; // char : 1
		constexpr auto r_bNearCapturePoint = 0x2fb4; // char : 1
		constexpr auto r_bNearPayload = 0x2fb4; // char : 1
		constexpr auto r_bNearSiegeMonster = 0x2fb4; // char : 1
		constexpr auto r_bVisibleToEnemies = 0x2fb4; // char : 1
		constexpr auto s_bAmmoReloadCheat = 0x2fb4; // char : 1
		constexpr auto s_bAutomountProtection = 0x2fb4; // char : 1
		constexpr auto m_bAttemptingAirJump = 0x2fb4; // char : 0
		constexpr auto m_bDelayingStopSpecialJumpFx = 0x2fb4; // char : 0
		constexpr auto m_bPendingBounce = 0x2fb4; // char : 0
		constexpr auto s_bInitiatingJoin = 0x2fb4; // char : 0
		constexpr auto s_bReplicateInhandAmmo = 0x2fb4; // char : 0
		constexpr auto c_bShouldTickThisFrame = 0x2fb4; // char : 0
		constexpr auto c_bShadowsVisible = 0x2fb4; // char : 0
		constexpr auto c_bNeedsShadowLOSCheck = 0x2fb4; // char : 0
		constexpr auto m_fLastCapturePointReclaimedTime = 0x2fb8; // float
		constexpr auto m_fMinReclaimPointTime = 0x2fbc; // float
		constexpr auto c_fUpdateAltitudeRTPCDelay = 0x2fc0; // float
		constexpr auto m_fInHandStartFireTime = 0x2fc4; // float
		constexpr auto m_fInHandStopFireTime = 0x2fc8; // float
		constexpr auto m_fWallDamagePercent = 0x2fcc; // float
		constexpr auto m_fSiegeDamagePercent = 0x2fd0; // float
		constexpr auto r_fZoomAmt = 0x2fd4; // float
		constexpr auto r_nCriticalHit = 0x2fd8; // char
		constexpr auto m_fMountZoomOverride = 0x2fdc; // float
		constexpr auto r_StuckBombs = 0x2fe0; // ObjectProperty [0x6]
		constexpr auto m_nCharacterRole = 0x3010; // int32_t
		constexpr auto m_CustomCharacterComponent = 0x3014; // ComponentProperty
		constexpr auto m_MountedCollisionComponent = 0x301c; // ComponentProperty
		constexpr auto m_MeshEncompassingCollisionComponent = 0x3024; // ComponentProperty
		constexpr auto m_CachedMoveSpeedModDevices = 0x302c; // TArray<TScriptInterface<Class>>
		constexpr auto m_CachedAccelModDevices = 0x303c; // TArray<TScriptInterface<Class>>
		constexpr auto m_CachedDeployModDevices = 0x304c; // TArray<TScriptInterface<Class>>
		constexpr auto m_fCachedGroundProximity = 0x305c; // float
		constexpr auto m_fCachedGroundProximityTimestamp = 0x3060; // float
		constexpr auto m_nAirJumps = 0x3064; // int32_t
		constexpr auto m_fAirJumpZSpeed = 0x3068; // float
		constexpr auto m_vBounceVelocity = 0x306c; // FVector
		constexpr auto m_JoinTargetLocal = 0x3078; // ObjectProperty
		constexpr auto m_JoinSourceLocal = 0x3080; // ObjectProperty
		constexpr auto r_JoinTarget = 0x3088; // ObjectProperty
		constexpr auto r_vJoinSourceLocation = 0x3090; // FVector
		constexpr auto r_vJoinTargetLocation = 0x309c; // FVector
		constexpr auto r_fJoinTweenDuration = 0x30a8; // float
		constexpr auto r_JoinSource = 0x30ac; // ObjectProperty
		constexpr auto m_ForceFaceActors = 0x30b4; // TArray<FForceFaceTargetActor>
		constexpr auto r_nInHandCurrentAmmo = 0x30c4; // int32_t
		constexpr auto r_nInHandMaxAmmo = 0x30c8; // int32_t
		constexpr auto s_nOppressorMineStackCount = 0x30cc; // int32_t
		constexpr auto c_fTickCatchup = 0x30d0; // float
		constexpr auto m_CurrentDOFSettings = 0x30d4; // FWeaponDOF
		constexpr auto s_pCaptureProxy = 0x30fc; // ObjectProperty
		constexpr auto c_fShadowsVisibleChangeTimer = 0x3104; // float
		constexpr auto c_fShadowsVisibleChangeDelay = 0x3108; // float
	}

	namespace n_ATgTournamentObjective {
		constexpr auto m_pDropPointA = 0x280; // ObjectProperty
		constexpr auto m_pDropPointB = 0x288; // ObjectProperty
		constexpr auto m_fFogRadius = 0x290; // float
		constexpr auto m_fZeppelinDropHeight = 0x294; // float
		constexpr auto m_ObjectiveSize = 0x298; // EObjectiveSize
		constexpr auto m_pBotFactory = 0x29c; // ObjectProperty
		constexpr auto BadSprite = 0x2a4; // ComponentProperty
	}

	namespace n_USimpleSplineNonLoopAudioComponent {
		constexpr auto DelayMin = 0x31c; // float
		constexpr auto DelayMax = 0x320; // float
		constexpr auto PitchMin = 0x324; // float
		constexpr auto PitchMax = 0x328; // float
		constexpr auto VolumeMin = 0x32c; // float
		constexpr auto VolumeMax = 0x330; // float
		constexpr auto CurrentSlotIndex = 0x334; // int32_t
		constexpr auto UsedVolumeModulation = 0x338; // float
		constexpr auto UsedPitchModulation = 0x33c; // float
		constexpr auto NextSoundTime = 0x340; // float
	}

	namespace n_UInterpTrack {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto CurveEdVTable = 0x68; // FPointer
		constexpr auto SubTracks = 0x70; // TArray<ObjectProperty>
		constexpr auto TrackInstClass = 0x80; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x88; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x8c; // FString
		constexpr auto bOnePerGroup = 0x9c; // char : 1
		constexpr auto bDirGroupOnly = 0x9c; // char : 1
		constexpr auto bDisableTrack = 0x9c; // char : 1
		constexpr auto bIsAnimControlTrack = 0x9c; // char : 1
		constexpr auto bSubTrackOnly = 0x9c; // char : 1
		constexpr auto bVisible = 0x9c; // char : 1
		constexpr auto bIsSelected = 0x9c; // char : 1
		constexpr auto bIsRecording = 0x9c; // char : 1
		constexpr auto bIsCollapsed = 0x9c; // char : 0
	}

	namespace n_USeqEvent_Input {
		constexpr auto bTrapInput = 0x128; // char : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget {
		constexpr auto bMustBeEnemy = 0x94; // char : 1
		constexpr auto bMustBeSameLane = 0x94; // char : 1
		constexpr auto bMustHaveLineOfSight = 0x94; // char : 1
		constexpr auto bMustHaveDamagedGod = 0x94; // char : 1
		constexpr auto bMustNotBeImmune = 0x94; // char : 1
		constexpr auto bMustBeInForwardCone = 0x94; // char : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // char : 1
		constexpr auto bMustBeHittable = 0x94; // char : 1
		constexpr auto bMustNotBeNearShield = 0x94; // char : 0
		constexpr auto TargetSelector = 0x98; // ETargetSelector
		constexpr auto TargetType = 0x99; // ECombatTargetType
		constexpr auto IgnoreTargetType = 0x9a; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
		constexpr auto DistanceThreshold = 0xa0; // float
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UNavigationHandle {
		constexpr auto AnchorPylon = 0x60; // ObjectProperty
		constexpr auto AnchorPoly = 0x68; // FPointer
		constexpr auto PathCache = 0x70; // FPathStore
		constexpr auto BestUnfinishedPathPoint = 0x80; // FPointer
		constexpr auto CurrentEdge = 0x88; // FPointer
		constexpr auto SubGoal_DestPoly = 0x90; // FPointer
		constexpr auto FinalDestination = 0x98; // FBasedPosition
		constexpr auto FinalDestinationActor = 0xd0; // ObjectProperty
		constexpr auto bSkipRouteCacheUpdates = 0xd8; // char : 1
		constexpr auto bUseORforEvaluateGoal = 0xd8; // char : 1
		constexpr auto bDebugConstraintsAndGoalEvals = 0xd8; // char : 1
		constexpr auto bUltraVerbosePathDebugging = 0xd8; // char : 1
		constexpr auto bVisualPathDebugging = 0xd8; // char : 1
		constexpr auto bDebug_Breadcrumbs = 0xd8; // char : 1
		constexpr auto PathConstraintList = 0xdc; // ObjectProperty
		constexpr auto PathGoalList = 0xe4; // ObjectProperty
		constexpr auto CachedPathParams = 0xec; // FNavMeshPathParams
		constexpr auto LastPathError = 0x124; // EPathFindingError
		constexpr auto LastPathFailTime = 0x128; // float
		constexpr auto Breadcrumbs = 0x12c; // FVector [0xa]
		constexpr auto BreadCrumbMostRecentIdx = 0x1a4; // int32_t
		constexpr auto BreadCrumbDistanceInterval = 0x1a8; // float
		constexpr auto m_fLastPathLength = 0x1ac; // float
	}

	namespace n_ATgRepInfo_Player {
		constexpr auto r_nPlayerId = 0x480; // int32_t
		constexpr auto r_nPawnId = 0x484; // int32_t
		constexpr auto r_nPlayerGameID = 0x488; // int32_t
		constexpr auto m_nUIDisplayIndex = 0x48c; // int32_t
		constexpr auto c_fLastUpdateTime = 0x490; // float
		constexpr auto r_nSupportWins = 0x494; // int32_t
		constexpr auto r_nDamageWins = 0x498; // int32_t
		constexpr auto r_nFlankWins = 0x49c; // int32_t
		constexpr auto r_nFrontlineWins = 0x4a0; // int32_t
		constexpr auto r_nEquippedTitleId = 0x4a4; // int32_t
		constexpr auto r_nHealthCurrent = 0x4a8; // int32_t
		constexpr auto r_nHealthMaximum = 0x4ac; // int32_t
		constexpr auto r_nPowerCurrent = 0x4b0; // int32_t
		constexpr auto r_nPowerMaximum = 0x4b4; // int32_t
		constexpr auto r_nPacingType = 0x4b8; // int32_t
		constexpr auto r_nShieldCurrent = 0x4bc; // int32_t
		constexpr auto r_nShieldMaximum = 0x4c0; // int32_t
		constexpr auto r_MasterPrep = 0x4c4; // ObjectProperty
		constexpr auto r_TaskForce = 0x4cc; // ObjectProperty
		constexpr auto r_nPartyId = 0x4d4; // int32_t
		constexpr auto r_SpawnPoint = 0x4d8; // ObjectProperty
		constexpr auto r_fReviveSecs = 0x4e0; // float
		constexpr auto r_fReviveSecsTotal = 0x4e4; // float
		constexpr auto r_bMapHasLoaded = 0x4e8; // char : 1
		constexpr auto r_bHasBeenSeenByEnemyTeam = 0x4e8; // char : 1
		constexpr auto r_bSilhouettesBlocked = 0x4e8; // char : 1
		constexpr auto r_bExtendedSilhouetteRange = 0x4e8; // char : 1
		constexpr auto r_bSpeakingEmote = 0x4e8; // char : 1
		constexpr auto r_bPlayingAnnouncer = 0x4e8; // char : 1
		constexpr auto c_bSpeaking = 0x4e8; // char : 1
		constexpr auto r_bDropped = 0x4e8; // char : 1
		constexpr auto s_bFirstDrop = 0x4e8; // char : 0
		constexpr auto r_bForceNotBot = 0x4e8; // char : 0
		constexpr auto r_bDisconnected = 0x4e8; // char : 0
		constexpr auto c_bIsDying = 0x4e8; // char : 0
		constexpr auto r_IsRevealed = 0x4e8; // char : 0
		constexpr auto r_bIsStealthed = 0x4e8; // char : 0
		constexpr auto r_bIsVolumeStealthed = 0x4e8; // char : 0
		constexpr auto r_bUltimateIsReady = 0x4e8; // char : 0
		constexpr auto r_bCanUpgradeLegendary = 0x4e8; // char : 0
		constexpr auto s_bAutoSelectCards = 0x4e8; // char : 0
		constexpr auto c_bTrackedProjectileIdsJustChanged = 0x4e8; // char : 0
		constexpr auto r_bBigHeadModeActive = 0x4e8; // char : 0
		constexpr auto r_nSurrenderVote = 0x4ec; // char
		constexpr auto r_bVisibleOnMap = 0x4ed; // char [0x3]
		constexpr auto r_nVisibilityMask = 0x4f0; // char
		constexpr auto r_nFlashUpdateAmmo = 0x4f1; // char
		constexpr auto r_eDeployableOverlayIcon = 0x4f2; // DeployableOverlayIcon
		constexpr auto r_eDeployableOverlayState = 0x4f3; // DeployableOverlayState
		constexpr auto c_eDeployableOverlayIconOverride = 0x4f4; // DeployableOverlayIcon
		constexpr auto c_eDeployableOverlayStateOverride = 0x4f5; // DeployableOverlayState
		constexpr auto r_eCurrentGameModeInstruction = 0x4f6; // GAME_MODE_INSTRUCTION
		constexpr auto r_PlayerDeployState = 0x4f7; // EPlayerDeployState
		constexpr auto m_PRIArray = 0x4f8; // TArray<ObjectProperty>
		constexpr auto m_DRIArray = 0x508; // TArray<ObjectProperty>
		constexpr auto c_PriorMasterPrep = 0x518; // ObjectProperty
		constexpr auto c_PriorTaskForce = 0x520; // ObjectProperty
		constexpr auto c_fLastHealth = 0x528; // int32_t
		constexpr auto c_fLastDamageTime = 0x52c; // float
		constexpr auto r_fVisionRange = 0x530; // float
		constexpr auto r_ClanTag = 0x534; // FString
		constexpr auto c_PlayerNameWithTag = 0x544; // FString
		constexpr auto c_fBarragePercent = 0x554; // float
		constexpr auto m_fSyncAnnouncerFailsafe = 0x558; // float
		constexpr auto r_nRemainingLives = 0x55c; // int32_t
		constexpr auto m_DeployPostureId = 0x560; // int32_t
		constexpr auto m_fMaxPingTime = 0x564; // float
		constexpr auto r_SimProjOverrides = 0x568; // FSimulatedProjectileOverrides [0x8]
		constexpr auto r_PlayerItems = 0x628; // int32_t [0x9]
		constexpr auto r_Scores = 0x64c; // int32_t [0x16]
		constexpr auto r_PlayerDevices = 0x6a4; // FDeviceTeamInfo [0x14]
		constexpr auto r_PlayerDeviceAmmo = 0x9c4; // FAmmoCount [0x14]
		constexpr auto r_AppliedStatEffects = 0xa14; // FAppliedStatEffect [0x6]
		constexpr auto r_fStatEffectsDisableTimeStamp = 0xa5c; // float [0x6]
		constexpr auto r_fStatEffectsDisableDuration = 0xa74; // float [0x6]
		constexpr auto r_nNextOpenStatEffect = 0xa8c; // int32_t
		constexpr auto r_nLastEquippedStatEffect = 0xa90; // int32_t
		constexpr auto r_MarkedTargets = 0xa94; // FMarkedTargetInfo [0x5]
		constexpr auto c_fLastSpeakingTime = 0xabc; // float
		constexpr auto r_nCredits = 0xac0; // int32_t
		constexpr auto r_nEarnedCredits = 0xac4; // int32_t
		constexpr auto r_nXp = 0xac8; // int32_t
		constexpr auto r_nLevel = 0xacc; // int32_t
		constexpr auto r_nPlayerScore = 0xad0; // int32_t
		constexpr auto r_nCardHealth = 0xad4; // int32_t
		constexpr auto r_nCardDamage = 0xad8; // int32_t
		constexpr auto r_nPowerLevel = 0xadc; // int32_t
		constexpr auto r_nPowerLevelCount = 0xae0; // int32_t
		constexpr auto r_nProfileId = 0xae4; // int32_t
		constexpr auto r_nSkinId = 0xae8; // int32_t
		constexpr auto r_nVoicePackId = 0xaec; // int32_t
		constexpr auto r_nKillstreak = 0xaf0; // int32_t
		constexpr auto r_nHeadSkinId = 0xaf4; // int32_t
		constexpr auto r_nWeaponSkinId = 0xaf8; // int32_t
		constexpr auto r_nMountSkinId = 0xafc; // int32_t
		constexpr auto r_nMarkerSkinId = 0xb00; // int32_t
		constexpr auto r_nAssistScore = 0xb04; // int32_t
		constexpr auto r_PawnOwner = 0xb08; // ObjectProperty
		constexpr auto r_nLaneId = 0xb10; // int32_t
		constexpr auto s_KillOrDeathStreakModifier = 0xb14; // int32_t
		constexpr auto r_PingInfo = 0xb18; // FsPingInfo [0x4]
		constexpr auto c_DeathLocation = 0xb98; // FVector
		constexpr auto s_vDeathLocation = 0xba4; // FVector
		constexpr auto c_HudInfo = 0xbb0; // FTG_HUD_INFO
		constexpr auto r_fUltReadyInSecs = 0xbb4; // float
		constexpr auto r_nUltimateCharge = 0xbb8; // int32_t
		constexpr auto r_nRequiredUltimateCharge = 0xbbc; // int32_t
		constexpr auto r_nPassiveMode = 0xbc0; // int32_t
		constexpr auto r_nShards = 0xbc4; // int32_t
		constexpr auto r_nNuggets = 0xbc8; // int32_t
		constexpr auto r_nPendingShards = 0xbcc; // int32_t
		constexpr auto r_nColorIndex = 0xbd0; // int32_t
		constexpr auto r_nPerkCountKit = 0xbd4; // int32_t
		constexpr auto r_nPerkCountArmor = 0xbd8; // int32_t
		constexpr auto r_nPerkCountWeapon = 0xbdc; // int32_t
		constexpr auto r_nPerkCountGeneral = 0xbe0; // int32_t
		constexpr auto r_nCardsToDraw = 0xbe4; // int32_t
		constexpr auto r_nDrawnCards = 0xbe8; // int32_t [0x5]
		constexpr auto r_nDrawnPlayer = 0xbfc; // int32_t [0x5]
		constexpr auto s_fScoreTakenPool = 0xc10; // float
		constexpr auto s_fScoreDamagePool = 0xc14; // float
		constexpr auto s_fScoreCapturePool = 0xc18; // float
		constexpr auto s_fScoreHealingPool = 0xc1c; // float
		constexpr auto s_fScoreMitigatedPool = 0xc20; // float
		constexpr auto s_fScoreTakenThreshold = 0xc24; // float
		constexpr auto s_fScoreDamageThreshold = 0xc28; // float
		constexpr auto s_fScoreCaptureThreshold = 0xc2c; // float
		constexpr auto s_fScoreHealingThreshold = 0xc30; // float
		constexpr auto s_fScoreMitigatedThreshold = 0xc34; // float
		constexpr auto s_CardDeckTier1 = 0xc38; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier2 = 0xc48; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier3 = 0xc58; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier4 = 0xc68; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier5 = 0xc78; // TArray<FDeckCardData>
		constexpr auto r_GeneralAbilityInfo = 0xc88; // FTgAbilityInfo
		constexpr auto r_ArmorAbilityInfo = 0xccc; // FTgAbilityInfo
		constexpr auto s_LastKillerPRI = 0xd10; // ObjectProperty
		constexpr auto s_PlayOfTheGameEventList = 0xd18; // TArray<FPlayOfTheGameEventData>
		constexpr auto s_PlayOfTheGameEventCounters = 0xd28; // TArray<FPlayOfTheGameEventCounter>
		constexpr auto r_nDeployableOverlayDisplayMask = 0xd38; // int32_t
		constexpr auto r_fDeployableOverlayEnemyViewDist = 0xd3c; // float
		constexpr auto c_nDeployableOverlayDisplayMaskOverride = 0xd40; // int32_t
		constexpr auto c_fDeployableOverlayEnemyViewDistOverride = 0xd44; // float
		constexpr auto r_TrackedProjectileIds = 0xd48; // int32_t [0xf]
		constexpr auto r_TrackedProjectilesInitData = 0xd84; // FTrackedProjectileInitData [0xf]
		constexpr auto r_TrackedProjectilesUpdateData = 0x1054; // FTrackedProjectileUpdateData [0xf]
		constexpr auto r_nRank = 0x11f8; // int32_t
		constexpr auto r_vDeploy = 0x11fc; // FVector
		constexpr auto r_vWaypoint = 0x1208; // FVector
		constexpr auto r_vPingLocation = 0x1214; // FVector
		constexpr auto r_rPingRotation = 0x1220; // FRotator
		constexpr auto m_WaypointEmitter = 0x122c; // ObjectProperty
		constexpr auto m_PingEmitter = 0x1234; // ObjectProperty
		constexpr auto r_vLocation = 0x123c; // FVector
		constexpr auto r_rRotation = 0x1248; // FRotator
		constexpr auto r_nNumViewingPlayers = 0x1254; // int32_t
	}

	namespace n_UInteraction {
		constexpr auto __OnReceivedNativeInputKey__Delegate = 0x70; // DelegateProperty
		constexpr auto __OnReceivedNativeInputAxis__Delegate = 0x80; // DelegateProperty
		constexpr auto __OnReceivedNativeInputChar__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnInitialize__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_UUIComponent_DisplayDevice {
		constexpr auto m_dwDeviceId = 0x120; // Fdword
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcDesc = 0x12c; // ObjectProperty
		constexpr auto m_mcType = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcFrame = 0x144; // ObjectProperty
		constexpr auto m_mcHighlight = 0x14c; // ObjectProperty
		constexpr auto m_mcHighlightIcon = 0x154; // ObjectProperty
	}

	namespace n_UTgSkelControlSingleBone {
		constexpr auto SnapStrengthFromAnimNodes = 0x100; // char : 1
		constexpr auto m_bIsWidescreen = 0x100; // char : 1
		constexpr auto SnapStrengthThreshold = 0x104; // float
		constexpr auto StrengthEmoteList = 0x108; // TArray<EEmote>
		constexpr auto CachedEmoteSequences = 0x118; // TArray<ObjectProperty>
		constexpr auto m_WidescreenBoneTranslationOffset = 0x128; // FVector
		constexpr auto m_WidescreenBoneRotationOffset = 0x134; // FRotator
		constexpr auto m_WidescreenBoneScaleOffset = 0x140; // float
	}

	namespace n_UTgAIBehaviorAction_Wiggle {
		constexpr auto WiggleIntensity = 0x94; // float
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0xb0; // int32_t
		constexpr auto UTiling = 0xb4; // float
		constexpr auto VTiling = 0xb8; // float
		constexpr auto UnMirrorU = 0xbc; // char : 1
		constexpr auto UnMirrorV = 0xbc; // char : 1
	}

	namespace n_UVivoxClosure {
		constexpr auto m_Connector = 0x60; // ObjectProperty
		constexpr auto m_OnlineSub = 0x68; // ObjectProperty
	}

	namespace n_UTgAnimNotify_AkEventMusic {
		constexpr auto AkEventStop = 0x7c; // ObjectProperty
	}

	namespace n_UTgAnimNodeChannelFire {
		constexpr auto m_EquipPoint = 0x168; // TG_EQUIP_POINT
		constexpr auto m_bResetOnRelevant = 0x16c; // char : 1
		constexpr auto m_bCheckAnimSeqForAnim = 0x16c; // char : 1
		constexpr auto m_bUseCooldownForEndChannel = 0x16c; // char : 1
		constexpr auto m_bOnlyCallAnimEndWhenRelevant = 0x16c; // char : 1
		constexpr auto m_bDoneChanneling = 0x16c; // char : 1
		constexpr auto m_fMaxLoopTime = 0x170; // float
		constexpr auto m_fPreCooldownEndTimeTrigger = 0x174; // float
		constexpr auto m_fCooldownEndTime = 0x178; // float
		constexpr auto m_fEndLoopTime = 0x17c; // float
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0xd0; // float
	}

	namespace n_ATgSurvivalFogVolumeDensityInfo {
		constexpr auto m_bFogOn = 0x294; // char : 1
		constexpr auto m_fTargetStartDistance = 0x298; // float
		constexpr auto m_fPreviousStartDistance = 0x29c; // float
		constexpr auto m_fFogUpdateTimestamp = 0x2a0; // float
		constexpr auto m_fFogUpdateInterval = 0x2a4; // float
		constexpr auto m_fConvergenceRate = 0x2a8; // float
		constexpr auto m_fFadeInRate = 0x2ac; // float
		constexpr auto m_fFadeOutRate = 0x2b0; // float
		constexpr auto SphericalDensityComponent = 0x2b4; // ComponentProperty
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0xb0; // TArray<FString>
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
		constexpr auto A = 0xbc; // float
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0xa0; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // char : 1
	}

	namespace n_UApexStaticDestructibleComponent {
		constexpr auto SleepEnergyThreshold = 0x2b0; // float
		constexpr auto SleepDamping = 0x2b4; // float
		constexpr auto ApexDestructibleActor = 0x2b8; // FPointer
		constexpr auto ApexDestructiblePreview = 0x2c0; // FPointer
		constexpr auto bIsThumbnailComponent = 0x2c8; // char : 1
	}

	namespace n_UUIComponent_CustomGame {
		constexpr auto m_mcHighlight = 0x120; // ObjectProperty
		constexpr auto m_mcFrame = 0x128; // ObjectProperty
		constexpr auto m_mcLock = 0x130; // ObjectProperty
		constexpr auto m_mcName = 0x138; // ObjectProperty
		constexpr auto m_mcOwner = 0x140; // ObjectProperty
		constexpr auto m_mcOwnerTF = 0x148; // ObjectProperty
		constexpr auto m_mcQueueType = 0x150; // ObjectProperty
		constexpr auto m_mcQueueTypeTF = 0x158; // ObjectProperty
		constexpr auto m_mcPlayerCount = 0x160; // ObjectProperty
		constexpr auto m_mcPlayerCountTF = 0x168; // ObjectProperty
		constexpr auto m_mcErrorTF = 0x170; // ObjectProperty
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto TargetTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto TargetName = 0x6c; // FName
		constexpr auto TargetSocketName = 0x74; // FName
		constexpr auto Target = 0x7c; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0xa0; // char : 1
		constexpr auto bLockTarget = 0xa0; // char : 1
		constexpr auto bLockTargetTangent = 0xa0; // char : 1
		constexpr auto bLockTargetStength = 0xa0; // char : 1
		constexpr auto TargetTangent = 0xa4; // FRawDistributionVector
		constexpr auto TargetStrength = 0xc8; // FRawDistributionFloat
		constexpr auto LockRadius = 0xec; // float
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x68; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x78; // int32_t
		constexpr auto bUsesVelocity = 0x7c; // char : 1
	}

	namespace n_UWebRequest {
		constexpr auto RemoteAddr = 0x60; // FString
		constexpr auto URI = 0x70; // FString
		constexpr auto UserName = 0x80; // FString
		constexpr auto Password = 0x90; // FString
		constexpr auto ContentLength = 0xa0; // int32_t
		constexpr auto ContentType = 0xa4; // FString
		constexpr auto RequestType = 0xb4; // ERequestType
		constexpr auto HeaderMap = 0xb8; // FMap_Mirror
		constexpr auto VariableMap = 0x100; // FMap_Mirror
	}

	namespace n_UTgAnimBlendByPercent {
		constexpr auto m_fCurrentPercent = 0x168; // float
		constexpr auto m_ChildParams = 0x16c; // TArray<FBlendByPercentValues>
	}

	namespace n_USeqEvent_AnalogInput {
		constexpr auto bTrapInput = 0x128; // char : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_UTgEffectModifyProperty {
		constexpr auto m_TargetDeviceFire = 0xa0; // ObjectProperty
		constexpr auto m_eEquipPointTarget = 0xa8; // int32_t
		constexpr auto m_fStaticValueOffsets = 0xac; // TArray<float>
	}

	namespace n_UTgAIBehaviorCondition_TeamDeathCount {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
		constexpr auto DeathThreshold = 0x9c; // int32_t
	}

	namespace n_UUIData_Index {
		constexpr auto m_dwValue = 0x60; // Fdword
	}

	namespace n_UUIComponent_CollectToUnlock {
		constexpr auto m_mcContainter = 0x120; // ObjectProperty
		constexpr auto m_mcTF0 = 0x128; // ObjectProperty
		constexpr auto m_mcIcon = 0x130; // ObjectProperty
		constexpr auto m_mcTF1 = 0x138; // ObjectProperty
	}

	namespace n_UTgAchievement {
		constexpr auto Controller = 0x60; // ObjectProperty
		constexpr auto m_bCustomValue3IsBotId = 0x68; // char : 1
		constexpr auto m_bAwardsAllowTriggering = 0x68; // char : 1
		constexpr auto m_nBotId = 0x6c; // int32_t
		constexpr auto m_nActivityId = 0x70; // int32_t
		constexpr auto m_nCustomValue1 = 0x74; // int32_t
		constexpr auto m_nCustomValue2 = 0x78; // int32_t
		constexpr auto m_nCustomValue3 = 0x7c; // int32_t
		constexpr auto m_nCustomValue4 = 0x80; // int32_t
		constexpr auto m_nCustomValue5 = 0x84; // int32_t
		constexpr auto m_nCurrentProgress = 0x88; // int32_t
		constexpr auto m_nCurrentTarget = 0x8c; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetPhysicsState {
		constexpr auto PhysicsState = 0x98; // EPhysics
	}

	namespace n_ANxGenericForceFieldBrush {
		constexpr auto ExcludeChannel = 0x2bc; // int32_t
		constexpr auto CollideWithChannels = 0x2c0; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x2c4; // ERBCollisionChannel
		constexpr auto Coordinates = 0x2c5; // FFB_ForceFieldCoordinates
		constexpr auto Constant = 0x2c8; // FVector
		constexpr auto PositionMultiplierX = 0x2d4; // FVector
		constexpr auto PositionMultiplierY = 0x2e0; // FVector
		constexpr auto PositionMultiplierZ = 0x2ec; // FVector
		constexpr auto PositionTarget = 0x2f8; // FVector
		constexpr auto VelocityMultiplierX = 0x304; // FVector
		constexpr auto VelocityMultiplierY = 0x310; // FVector
		constexpr auto VelocityMultiplierZ = 0x31c; // FVector
		constexpr auto VelocityTarget = 0x328; // FVector
		constexpr auto Noise = 0x334; // FVector
		constexpr auto FalloffLinear = 0x340; // FVector
		constexpr auto FalloffQuadratic = 0x34c; // FVector
		constexpr auto TorusRadius = 0x358; // float
		constexpr auto ForceField = 0x35c; // FPointer
		constexpr auto ConvexMeshes = 0x364; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x374; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x384; // TArray<FPointer>
		constexpr auto LinearKernel = 0x394; // FPointer
	}

	namespace n_USeqAct_CameraShake {
		constexpr auto Shake = 0x108; // ObjectProperty
		constexpr auto ShakeScale = 0x110; // float
		constexpr auto bDoControllerVibration = 0x114; // char : 1
		constexpr auto bRadialShake = 0x114; // char : 1
		constexpr auto bOrientTowardRadialEpicenter = 0x114; // char : 1
		constexpr auto RadialShake_InnerRadius = 0x118; // float
		constexpr auto RadialShake_OuterRadius = 0x11c; // float
		constexpr auto RadialShake_Falloff = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto LocationActor = 0x128; // ObjectProperty
	}

	namespace n_ATgProj_DrogozRocket {
		constexpr auto m_bWasFromSalvo = 0x51c; // char : 1
	}

	namespace n_USeqAct_ModifyHealth {
		constexpr auto DamageType = 0x108; // UDamageType*
		constexpr auto Momentum = 0x110; // float
		constexpr auto Amount = 0x114; // float
		constexpr auto Radius = 0x118; // float
		constexpr auto bHeal = 0x11c; // char : 1
		constexpr auto bRadial = 0x11c; // char : 1
		constexpr auto bFalloff = 0x11c; // char : 1
		constexpr auto Instigator = 0x120; // ObjectProperty
	}

	namespace n_ATgPawn_Structure {
		constexpr auto s_fLastDamageTime = 0x2e78; // float
		constexpr auto s_fDamageNotificationDelay = 0x2e7c; // float
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UUIData_String_Localized {
		constexpr auto m_sSection = 0x60; // FString
		constexpr auto m_sKey = 0x70; // FString
		constexpr auto m_bCaps = 0x80; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_PetPhase {
		constexpr auto Phase = 0x98; // EPetPhase
	}

	namespace n_UGameplayEvents {
		constexpr auto Archive = 0x60; // FPointer
		constexpr auto StatsFileName = 0x68; // FString
		constexpr auto Header = 0x78; // FGameplayEventsHeader
		constexpr auto CurrentSessionInfo = 0xa8; // FGameSessionInformation
		constexpr auto PlayerList = 0x130; // TArray<FPlayerInformation>
		constexpr auto TeamList = 0x140; // TArray<FTeamInformation>
		constexpr auto SupportedEvents = 0x150; // TArray<FGameplayEventMetaData>
		constexpr auto WeaponClassArray = 0x160; // TArray<FWeaponClassEventData>
		constexpr auto DamageClassArray = 0x170; // TArray<FDamageClassEventData>
		constexpr auto ProjectileClassArray = 0x180; // TArray<FProjectileClassEventData>
		constexpr auto PawnClassArray = 0x190; // TArray<FPawnClassEventData>
		constexpr auto ActorArray = 0x1a0; // TArray<FString>
		constexpr auto SoundCueArray = 0x1b0; // TArray<FString>
	}

	namespace n_USeqAct_MITV_Activate {
		constexpr auto DurationOfMITV = 0x108; // float
	}

	namespace n_UMcpServiceConfig {
		constexpr auto Protocol = 0x60; // FString
		constexpr auto Domain = 0x70; // FString
		constexpr auto TitleId = 0x80; // FString
		constexpr auto AppKey = 0x90; // FString
		constexpr auto AppSecret = 0xa0; // FString
	}

	namespace n_UMcpIdMappingBase {
		constexpr auto McpIdMappingClassName = 0x78; // FString
		constexpr auto __OnAddMappingComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryMappingsComplete__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x68; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x8c; // char : 1
		constexpr auto UpdateMethod = 0x90; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UMobileInputZone {
		constexpr auto Type = 0x60; // EZoneType
		constexpr auto TouchpadIndex = 0x61; // char
		constexpr auto State = 0x62; // EZoneState
		constexpr auto SlideType = 0x63; // EZoneSlideType
		constexpr auto Caption = 0x64; // FString
		constexpr auto InputKey = 0x74; // FName
		constexpr auto HorizontalInputKey = 0x7c; // FName
		constexpr auto TapInputKey = 0x84; // FName
		constexpr auto DoubleTapInputKey = 0x8c; // FName
		constexpr auto VertMultiplier = 0x94; // float
		constexpr auto HorizMultiplier = 0x98; // float
		constexpr auto Acceleration = 0x9c; // float
		constexpr auto Smoothing = 0xa0; // float
		constexpr auto EscapeVelocityStrength = 0xa4; // float
		constexpr auto bScalePawnMovement = 0xa8; // char : 1
		constexpr auto bRelativeX = 0xa8; // char : 1
		constexpr auto bRelativeY = 0xa8; // char : 1
		constexpr auto bRelativeSizeX = 0xa8; // char : 1
		constexpr auto bRelativeSizeY = 0xa8; // char : 1
		constexpr auto bActiveSizeYFromX = 0xa8; // char : 1
		constexpr auto bSizeYFromSizeX = 0xa8; // char : 1
		constexpr auto bApplyGlobalScaleToActiveSizes = 0xa8; // char : 1
		constexpr auto bCenterX = 0xa8; // char : 0
		constexpr auto bCenterY = 0xa8; // char : 0
		constexpr auto bIsInvisible = 0xa8; // char : 0
		constexpr auto bQuickDoubleTap = 0xa8; // char : 0
		constexpr auto bCenterOnEvent = 0xa8; // char : 0
		constexpr auto bSliderHasTrack = 0xa8; // char : 0
		constexpr auto bFloatingTiltZone = 0xa8; // char : 0
		constexpr auto bUseGentleTransitions = 0xa8; // char : 0
		constexpr auto bAllowFirstDeltaForTrackballZone = 0xa8; // char : 0
		constexpr auto bRenderGuides = 0xa8; // char : 0
		constexpr auto bIsDoubleTapAndHold = 0xa8; // char : 0
		constexpr auto X = 0xac; // float
		constexpr auto Y = 0xb0; // float
		constexpr auto SizeX = 0xb4; // float
		constexpr auto SizeY = 0xb8; // float
		constexpr auto ActiveSizeX = 0xbc; // float
		constexpr auto ActiveSizeY = 0xc0; // float
		constexpr auto InitialX = 0xc4; // float
		constexpr auto InitialY = 0xc8; // float
		constexpr auto InitialSizeX = 0xcc; // float
		constexpr auto InitialSizeY = 0xd0; // float
		constexpr auto InitialActiveSizeX = 0xd4; // float
		constexpr auto InitialActiveSizeY = 0xd8; // float
		constexpr auto AuthoredGlobalScale = 0xdc; // float
		constexpr auto Border = 0xe0; // float
		constexpr auto ResetCenterAfterInactivityTime = 0xe4; // float
		constexpr auto TapDistanceConstraint = 0xe8; // float
		constexpr auto ActivateTime = 0xec; // float
		constexpr auto DeactivateTime = 0xf0; // float
		constexpr auto RenderColor = 0xf4; // FColor
		constexpr auto InactiveAlpha = 0xf8; // float
		constexpr auto CaptionXAdjustment = 0xfc; // float
		constexpr auto CaptionYAdjustment = 0x100; // float
		constexpr auto OverrideTexture1 = 0x104; // ObjectProperty
		constexpr auto OverrideTexture1Name = 0x10c; // FString
		constexpr auto OverrideUVs1 = 0x11c; // FTextureUVs
		constexpr auto OverrideTexture2 = 0x12c; // ObjectProperty
		constexpr auto OverrideTexture2Name = 0x134; // FString
		constexpr auto OverrideUVs2 = 0x144; // FTextureUVs
		constexpr auto InitialLocation = 0x154; // FVector2D
		constexpr auto CurrentLocation = 0x15c; // FVector2D
		constexpr auto CurrentCenter = 0x164; // FVector2D
		constexpr auto InitialCenter = 0x16c; // FVector2D
		constexpr auto PreviousLocations = 0x174; // FVector2D [0x6]
		constexpr auto PreviousMoveDeltaTimes = 0x1a4; // float [0x6]
		constexpr auto PreviousLocationCount = 0x1bc; // int32_t
		constexpr auto LastTouchTime = 0x1c0; // float
		constexpr auto TimeSinceLastTapRepeat = 0x1c4; // float
		constexpr auto AnimatingFadeOpacity = 0x1c8; // float
		constexpr auto InputOwner = 0x1cc; // ObjectProperty
		constexpr auto TransitionTime = 0x1d4; // float
		constexpr auto EscapeVelocity = 0x1d8; // FVector2D
		constexpr auto MobileSeqEventHandlers = 0x1e0; // TArray<ObjectProperty>
		constexpr auto LastAxisValues = 0x1f0; // FVector2D
		constexpr auto TotalActiveTime = 0x1f8; // float
		constexpr auto LastWentActiveTime = 0x1fc; // float
		constexpr auto __OnProcessInputDelegate__Delegate = 0x200; // DelegateProperty
		constexpr auto __OnTapDelegate__Delegate = 0x210; // DelegateProperty
		constexpr auto __OnDoubleTapDelegate__Delegate = 0x220; // DelegateProperty
		constexpr auto __OnProcessSlide__Delegate = 0x230; // DelegateProperty
		constexpr auto __OnPreDrawZone__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnPostDrawZone__Delegate = 0x250; // DelegateProperty
	}

	namespace n_ANxForceFieldSpawnable {
		constexpr auto ForceFieldComponent = 0x280; // ComponentProperty
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0xb0; // ObjectProperty
		constexpr auto FunctionInputs = 0xb8; // TArray<FFunctionExpressionInput>
		constexpr auto FunctionOutputs = 0xc8; // TArray<FFunctionExpressionOutput>
	}

	namespace n_ATgDevice_Longbow {
		constexpr auto s_fLastFireHoldPct = 0xaec; // float
		constexpr auto m_fFireReleasePercent = 0xaf0; // float
		constexpr auto m_fReticleReleaseAnimationDuration = 0xaf4; // float
	}

	namespace n_AMobileHUD {
		constexpr auto bShowGameHud = 0x5a0; // char : 1
		constexpr auto bShowMobileHud = 0x5a0; // char : 1
		constexpr auto bForceMobileHUD = 0x5a0; // char : 1
		constexpr auto bShowMobileTilt = 0x5a0; // char : 1
		constexpr auto bDebugTouches = 0x5a0; // char : 1
		constexpr auto bDebugZones = 0x5a0; // char : 1
		constexpr auto bDebugZonePresses = 0x5a0; // char : 1
		constexpr auto bShowMotionDebug = 0x5a0; // char : 1
		constexpr auto JoystickBackground = 0x5a4; // ObjectProperty
		constexpr auto JoystickBackgroundUVs = 0x5ac; // FTextureUVs
		constexpr auto JoystickHat = 0x5bc; // ObjectProperty
		constexpr auto JoystickHatUVs = 0x5c4; // FTextureUVs
		constexpr auto ButtonImages = 0x5d4; // ObjectProperty [0x2]
		constexpr auto ButtonUVs = 0x5e4; // FTextureUVs [0x2]
		constexpr auto ButtonFont = 0x604; // ObjectProperty
		constexpr auto ButtonCaptionColor = 0x60c; // FColor
		constexpr auto TrackballBackground = 0x610; // ObjectProperty
		constexpr auto TrackballBackgroundUVs = 0x618; // FTextureUVs
		constexpr auto TrackballTouchIndicator = 0x628; // ObjectProperty
		constexpr auto TrackballTouchIndicatorUVs = 0x630; // FTextureUVs
		constexpr auto SliderImages = 0x640; // ObjectProperty [0x4]
		constexpr auto SliderUVs = 0x660; // FTextureUVs [0x4]
		constexpr auto MobileTiltX = 0x6a0; // float
		constexpr auto MobileTiltY = 0x6a4; // float
		constexpr auto MobileTiltSize = 0x6a8; // float
		constexpr auto KismetRenderEvents = 0x6ac; // TArray<ObjectProperty>
	}

	namespace n_AKAsset {
		constexpr auto SkeletalMeshComponent = 0x280; // ComponentProperty
		constexpr auto bDamageAppliesImpulse = 0x288; // char : 1
		constexpr auto bWakeOnLevelStart = 0x288; // char : 1
		constexpr auto bBlockPawns = 0x288; // char : 1
		constexpr auto ReplicatedMesh = 0x28c; // ObjectProperty
		constexpr auto ReplicatedPhysAsset = 0x294; // ObjectProperty
	}

	namespace n_ATgDevice_AuraPerTarget {
		constexpr auto m_nAppliedStacks = 0xb34; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Combo_Barik {
		constexpr auto m_ComboInfoList = 0xd0; // TArray<FComboInfo>
		constexpr auto m_UIMarkInfoList = 0xe0; // TArray<FUIMarkInfo>
		constexpr auto m_BurningMarks = 0xf0; // TArray<FBurningMarkInfo>
	}

	namespace n_UTgTutorialAnnouncer {
		constexpr auto TutorialSounds = 0x60; // TArray<ObjectProperty>
		constexpr auto QueuedSounds = 0x70; // TArray<ObjectProperty>
		constexpr auto CurrentSoundAC = 0x80; // ComponentProperty
		constexpr auto OwnerPC = 0x88; // ObjectProperty
	}

	namespace n_USkelControl_Multiply {
		constexpr auto Multiplier = 0xd0; // float
	}

	namespace n_UNavMeshGoal_Filter {
		constexpr auto bShowDebug = 0x60; // char : 1
		constexpr auto NumNodesThrownOut = 0x64; // int32_t
		constexpr auto NumNodesProcessed = 0x68; // int32_t
	}

	namespace n_UKMeshProps {
		constexpr auto COMNudge = 0x60; // FVector
		constexpr auto AggGeom = 0x6c; // FKAggregateGeom
	}

	namespace n_ATgProjectile {
		constexpr auto VfTable_ITgSkinnableInterface = 0x2dc; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x2e4; // FPointer
		constexpr auto s_LastDefaultMode = 0x2ec; // ObjectProperty
		constexpr auto r_nProjectileId = 0x2f4; // int32_t
		constexpr auto m_nFiringInstance = 0x2f8; // int32_t
		constexpr auto r_fDuration = 0x2fc; // float
		constexpr auto m_fPostLandDuration = 0x300; // float
		constexpr auto m_fLandZThreshold = 0x304; // float
		constexpr auto m_fPersistTime = 0x308; // float
		constexpr auto m_fPersistHitPulse = 0x30c; // float
		constexpr auto m_nTargetPhysicalType = 0x310; // int32_t
		constexpr auto c_Mesh = 0x314; // ComponentProperty
		constexpr auto c_ExplosionFx = 0x31c; // ObjectProperty
		constexpr auto c_ImpactFx = 0x324; // ObjectProperty
		constexpr auto c_bRotationFollowsVelocity = 0x32c; // char : 1
		constexpr auto m_bExplodeAtMaxRange = 0x32c; // char : 1
		constexpr auto m_bDeployOnCharacter = 0x32c; // char : 1
		constexpr auto m_bDeployOnTarget = 0x32c; // char : 1
		constexpr auto m_bDeployOnGround = 0x32c; // char : 1
		constexpr auto m_bAlwaysDeployUpwards = 0x32c; // char : 1
		constexpr auto m_bStickToWalls = 0x32c; // char : 1
		constexpr auto c_bIsAOE = 0x32c; // char : 1
		constexpr auto m_bCountDirectHitForAOE = 0x32c; // char : 0
		constexpr auto m_bUseAOEDirectHit = 0x32c; // char : 0
		constexpr auto m_bHasExploded = 0x32c; // char : 0
		constexpr auto m_bHitValidTarget = 0x32c; // char : 0
		constexpr auto m_bIngoreBehindProjCollisions = 0x32c; // char : 0
		constexpr auto m_bIsInitialized = 0x32c; // char : 0
		constexpr auto m_bIsShutDown = 0x32c; // char : 0
		constexpr auto m_bPIEInitialized = 0x32c; // char : 0
		constexpr auto m_bHasPlayedFizzleFX = 0x32c; // char : 0
		constexpr auto m_bHasPlayedHitWallFX = 0x32c; // char : 0
		constexpr auto m_bHasPlayedHitTargetFX = 0x32c; // char : 0
		constexpr auto m_bSuppressDeployableSpawn = 0x32c; // char : 0
		constexpr auto m_bAltFireHit = 0x32c; // char : 0
		constexpr auto m_bInvertTeam = 0x32c; // char : 0
		constexpr auto m_bFirstShotAfterMovementAbility = 0x32c; // char : 0
		constexpr auto m_bCanSpawnOnClientFirst = 0x32c; // char : 0
		constexpr auto s_bIsClientTouch = 0x32c; // char : 0
		constexpr auto m_bTrackToWorldLocation = 0x32c; // char : 0
		constexpr auto r_fAccelRate = 0x330; // float
		constexpr auto m_fTossZ = 0x334; // float
		constexpr auto m_fFireAngle = 0x338; // float
		constexpr auto r_Owner = 0x33c; // ObjectProperty
		constexpr auto r_nOwnerFireModeId = 0x344; // int32_t
		constexpr auto m_OwnerFireMode = 0x348; // ObjectProperty
		constexpr auto m_ExtraFireModes = 0x350; // TArray<ObjectProperty>
		constexpr auto r_fRange = 0x360; // float
		constexpr auto m_fProximityDistance = 0x364; // float
		constexpr auto m_CollisionProxy = 0x368; // ObjectProperty
		constexpr auto s_nSpawnBotId = 0x370; // int32_t
		constexpr auto s_nSpawnDeployableId = 0x374; // int32_t
		constexpr auto m_DeployableSpawnOrientation = 0x378; // SpawnDeployableOrientation
		constexpr auto r_eEquippedAt = 0x379; // TG_EQUIP_POINT
		constexpr auto m_fDamageRadius = 0x37c; // float
		constexpr auto r_vSpawnLocation = 0x380; // FVector
		constexpr auto m_vSpawnRotation = 0x38c; // FVector
		constexpr auto m_vLocationLastTick = 0x398; // FVector
		constexpr auto m_fMinTravelRange = 0x3a4; // float
		constexpr auto s_fSpawnTime = 0x3a8; // float
		constexpr auto m_nPostRenderIcon = 0x3ac; // int32_t
		constexpr auto m_nUniqueId = 0x3b0; // int32_t
		constexpr auto m_fBaseDamageMultiplier = 0x3b4; // float
		constexpr auto c_vHitWallVelocity = 0x3b8; // FVector
		constexpr auto LightEnvironment = 0x3c4; // ComponentProperty
		constexpr auto m_vSpawnPosition = 0x3cc; // FVector
		constexpr auto m_DebugProximityDistancePSC = 0x3d8; // ComponentProperty
		constexpr auto m_fStandingStillPercent = 0x3e0; // float
		constexpr auto m_nTargetsHitCount = 0x3e4; // int32_t
		constexpr auto m_CollisionSettings = 0x3e8; // FCollisionSettingsProjectile
		constexpr auto m_PassThroughTargets = 0x3ec; // TArray<ObjectProperty>
		constexpr auto m_TrackingSettings = 0x3fc; // FTrackingSettings
		constexpr auto m_fDelayTrackSeconds = 0x414; // float
		constexpr auto m_fExplosionOffsetDistance = 0x418; // float
		constexpr auto m_BodyTraceResult = 0x41c; // FTraceHitInfo
		constexpr auto s_fAoeRewindTime = 0x444; // float
		constexpr auto m_AkActorUnoccluded = 0x448; // ObjectProperty
	}

	namespace n_UTgGameDC_Player {
		constexpr auto m_nStatCount = 0x170; // int32_t
		constexpr auto m_ReviveTimer = 0x174; // ObjectProperty
		constexpr auto m_UltimateTimer = 0x17c; // ObjectProperty
		constexpr auto m_PrevUltTimer = 0x184; // float
		constexpr auto m_StatsArray = 0x188; // ObjectProperty
		constexpr auto m_ItemStoreArray = 0x190; // ObjectProperty
		constexpr auto m_ActiveItemArray = 0x198; // ObjectProperty
		constexpr auto m_ConsumableArray = 0x1a0; // ObjectProperty
		constexpr auto __USC_ForceStatsUpdate_Delegate__Delegate = 0x1a8; // DelegateProperty
	}

	namespace n_UUIData_EsportsDisplayGroup {
		constexpr auto m_sName = 0x60; // FString
		constexpr auto m_nGroupIds = 0x70; // TArray<int32_t>
	}

	namespace n_UTgAIBehaviorAction_SelectThreatCombatTarget {
		constexpr auto bMustBeHighestThreat = 0x94; // char : 1
		constexpr auto bMustBeInLeash = 0x94; // char : 1
		constexpr auto bMustBeInSightRadius = 0x94; // char : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // char : 1
		constexpr auto bMustBeHittable = 0x94; // char : 1
		constexpr auto TargetType = 0x98; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
	}

	namespace n_UUIData_String {
		constexpr auto m_sValue = 0x60; // FString
	}

	namespace n_UUIInteractable_Button_Purchase {
		constexpr auto m_bHolding = 0x140; // char : 1
		constexpr auto m_bPrimed = 0x140; // char : 1
		constexpr auto m_fHoldTimer = 0x144; // float
		constexpr auto m_fHoldDuration = 0x148; // float
		constexpr auto m_mcTF = 0x14c; // ObjectProperty
		constexpr auto m_mcRadialMask = 0x154; // ObjectProperty
		constexpr auto m_mcKeyContainer = 0x15c; // ObjectProperty
		constexpr auto m_pKey = 0x164; // ObjectProperty
		constexpr auto m_pCurrency = 0x16c; // ObjectProperty
		constexpr auto m_pRealMoneyPrice = 0x174; // ObjectProperty
		constexpr auto m_PressAction = 0x17c; // ObjectProperty
		constexpr auto m_ReleaseAction = 0x184; // ObjectProperty
	}

	namespace n_ANxGenericForceField {
		constexpr auto Coordinates = 0x2d4; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2d8; // FVector
		constexpr auto PositionMultiplierX = 0x2e4; // FVector
		constexpr auto PositionMultiplierY = 0x2f0; // FVector
		constexpr auto PositionMultiplierZ = 0x2fc; // FVector
		constexpr auto PositionTarget = 0x308; // FVector
		constexpr auto VelocityMultiplierX = 0x314; // FVector
		constexpr auto VelocityMultiplierY = 0x320; // FVector
		constexpr auto VelocityMultiplierZ = 0x32c; // FVector
		constexpr auto VelocityTarget = 0x338; // FVector
		constexpr auto Noise = 0x344; // FVector
		constexpr auto FalloffLinear = 0x350; // FVector
		constexpr auto FalloffQuadratic = 0x35c; // FVector
		constexpr auto TorusRadius = 0x368; // float
		constexpr auto LinearKernel = 0x36c; // FPointer
	}

	namespace n_UTgExplosionLight {
		constexpr auto bCheckFrameRate = 0x240; // char : 1
		constexpr auto bInitialized = 0x240; // char : 1
		constexpr auto bIsEnemy = 0x240; // char : 1
		constexpr auto bIsLocal = 0x240; // char : 1
		constexpr auto bIsLooping = 0x240; // char : 1
		constexpr auto HighDetailFrameTime = 0x244; // float
		constexpr auto Lifetime = 0x248; // float
		constexpr auto TimeShiftIndex = 0x24c; // int32_t
		constexpr auto TimeShift = 0x250; // TArray<FLightValues>
		constexpr auto LoopIndex = 0x260; // int32_t
		constexpr auto __OnLightFinished__Delegate = 0x264; // DelegateProperty
	}

	namespace n_ATgPawn_Pet {
		constexpr auto m_fOwnerPhysPowerItemPercent = 0x2e78; // float
		constexpr auto m_fOwnerMagicalPowerItemPercent = 0x2e7c; // float
		constexpr auto m_fOwnerUltilityPowerItemPercent = 0x2e80; // float
		constexpr auto s_PetPhase = 0x2e84; // EPetPhase
		constexpr auto s_PetPosition = 0x2e85; // EPetPosition
		constexpr auto s_LastPositionAdjustmentRotation = 0x2e88; // FRotator
		constexpr auto s_InterpolatedPetPosition = 0x2e94; // FVector
		constexpr auto s_InterpolatedPetOwnerPosition = 0x2ea0; // FVector
		constexpr auto s_fPetPositionDistanceMultiplier = 0x2eac; // float
		constexpr auto s_fOwnerVelocityTime = 0x2eb0; // float
		constexpr auto s_fSmoothedMaxSpeed = 0x2eb4; // float
		constexpr auto c_BeamFX = 0x2eb8; // ObjectProperty
		constexpr auto r_InitialOrientation = 0x2ec0; // FRotator
		constexpr auto c_AimVisibilityMesh = 0x2ecc; // ComponentProperty
	}

	namespace n_UMCPBase {
		constexpr auto VfTable_FTickableObject = 0x78; // FPointer
	}

	namespace n_UDOFAndBloomEffect {
		constexpr auto BloomScale = 0xb4; // float
		constexpr auto BloomThreshold = 0xb8; // float
		constexpr auto BloomTint = 0xbc; // FColor
		constexpr auto BloomScreenBlendThreshold = 0xc0; // float
		constexpr auto SceneMultiplier = 0xc4; // float
		constexpr auto BlurBloomKernelSize = 0xc8; // float
		constexpr auto bEnableReferenceDOF = 0xcc; // char : 1
		constexpr auto DepthOfFieldType = 0xd0; // EDOFType
		constexpr auto DepthOfFieldQuality = 0xd1; // EDOFQuality
		constexpr auto BokehTexture = 0xd4; // ObjectProperty
	}

	namespace n_AGameExplosionActor {
		constexpr auto bHasExploded = 0x280; // char : 1
		constexpr auto bExplodeMoreThanOnce = 0x280; // char : 1
		constexpr auto bTrackExplosionParticleSystemLifespan = 0x280; // char : 1
		constexpr auto bDrawDebug = 0x280; // char : 1
		constexpr auto ExplosionLight = 0x284; // ComponentProperty
		constexpr auto ExplosionRadialBlur = 0x28c; // ComponentProperty
		constexpr auto LightFadeTime = 0x294; // float
		constexpr auto LightFadeTimeRemaining = 0x298; // float
		constexpr auto LightInitialBrightness = 0x29c; // float
		constexpr auto RadialBlurFadeTime = 0x2a0; // float
		constexpr auto RadialBlurFadeTimeRemaining = 0x2a4; // float
		constexpr auto RadialBlurMaxBlurAmount = 0x2a8; // float
		constexpr auto ExplosionTemplate = 0x2ac; // ObjectProperty
		constexpr auto RadialImpulseComponent = 0x2b4; // ComponentProperty
		constexpr auto InstigatorController = 0x2bc; // ObjectProperty
		constexpr auto HitActorFromPhysMaterialTrace = 0x2c4; // ObjectProperty
		constexpr auto HitLocationFromPhysMaterialTrace = 0x2cc; // FVector
		constexpr auto Attachee = 0x2d8; // ObjectProperty
		constexpr auto AttacheeController = 0x2e0; // ObjectProperty
		constexpr auto DirectionalExplosionMinDot = 0x2e8; // float
		constexpr auto ExplosionDirection = 0x2ec; // FVector
	}

	namespace n_UTgAnimMetaData_SkelControl_BoneScale {
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto BoneScale = 0x70; // float
		constexpr auto bFullControlOverController = 0x74; // char : 1
		constexpr auto SkelControlName = 0x78; // FName
	}

	namespace n_ATgRepInfo_Factory {
		constexpr auto s_FactoryState = 0x280; // ReplicatedFactoryState
		constexpr auto r_FactoryState = 0x281; // ReplicatedFactoryState [0x3]
		constexpr auto r_bVisibleOnMap = 0x284; // char [0x3]
		constexpr auto r_bRespawnVisible = 0x287; // char [0x3]
		constexpr auto r_MinimapType = 0x28a; // MinimapFactoryType
		constexpr auto r_FactoryOwner = 0x28c; // ObjectProperty
		constexpr auto r_TaskforceInfo = 0x294; // ObjectProperty
		constexpr auto r_nFactoryId = 0x29c; // int32_t
		constexpr auto r_LastSpawnedRepInfo = 0x2a0; // ObjectProperty
		constexpr auto r_fRespawnDelay = 0x2a8; // float
		constexpr auto r_fRespawnTimer = 0x2ac; // float
	}

	namespace n_ATgDevice_DragonSlam {
		constexpr auto m_bHasHitTarget = 0xaec; // char : 1
		constexpr auto m_CollisionProxy = 0xaf0; // ObjectProperty
		constexpr auto m_DrogozLeg1 = 0xaf8; // ObjectProperty
	}

	namespace n_UTgSeqOp_MathCalc {
		constexpr auto m_fResult = 0xec; // float
	}

	namespace n_UTgAnimBlendByFire {
		constexpr auto m_bSetToIdleOnCeaseRelevant = 0x168; // char : 1
		constexpr auto m_bShouldReplayIfAlreadyActive = 0x168; // char : 1
		constexpr auto m_InHandDeviceParameters = 0x16c; // FDeviceParameters
		constexpr auto m_OffHand1DeviceParameters = 0x180; // FDeviceParameters
		constexpr auto m_OffHand2DeviceParameters = 0x194; // FDeviceParameters
		constexpr auto m_OffHand3DeviceParameters = 0x1a8; // FDeviceParameters
		constexpr auto m_OffHand4DeviceParameters = 0x1bc; // FDeviceParameters
		constexpr auto m_RecallDeviceParameters = 0x1d0; // FDeviceParameters
		constexpr auto m_OwningPawn = 0x1e4; // ObjectProperty
	}

	namespace n_UTgAnimNodeSequence_SyncToCooldown {
		constexpr auto m_EqpPoint = 0x1bc; // TG_EQUIP_POINT
		constexpr auto m_fMaxPlayRate = 0x1c0; // float
		constexpr auto m_fPlayRateWaitForCooldown = 0x1c4; // float
		constexpr auto m_fPctStartWaitForCooldown = 0x1c8; // float
		constexpr auto fCooldownEndTime = 0x1cc; // float
		constexpr auto bWaitForCooldown = 0x1d0; // char : 1
	}

	namespace n_UTgAIUtilityFunction {
		constexpr auto MinInput = 0xbc; // float
		constexpr auto MaxInput = 0xc0; // float
		constexpr auto FunctionType = 0xc4; // EGraphType
		constexpr auto DesiredValue = 0xc8; // float
		constexpr auto UtilityScale = 0xcc; // float
		constexpr auto bInvert = 0xd0; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_Weaken {
		constexpr auto m_nAppliedCategoryCodeToCheck = 0xd4; // int32_t
	}

	namespace n_ATgInterpolatingCameraActor {
		constexpr auto m_CameraArray = 0x420; // TArray<FInterpolatingCameraInfo>
		constexpr auto m_nCurrentCameraIndex = 0x430; // int32_t
		constexpr auto m_fCurrentInterpValue = 0x434; // float
		constexpr auto m_fTargetInterpValue = 0x438; // float
	}

	namespace n_UTgSeqAct_RespawnAllPlayers {
		constexpr auto bResetLivingPlayers = 0x108; // char : 1
		constexpr auto bResetDeadPlayers = 0x108; // char : 1
		constexpr auto bResetHealth = 0x108; // char : 1
	}

	namespace n_ATgPlayerStartRoyale {
		constexpr auto m_Region = 0x388; // ERoyaleRegion
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_ATgDevice_Turret {
		constexpr auto m_FlameTurretID = 0xaec; // int32_t
		constexpr auto m_MegaTurretID = 0xaf0; // int32_t
		constexpr auto m_LockdownTurretID = 0xaf4; // int32_t
		constexpr auto m_SpawnLocationOverride = 0xaf8; // FVector
		constexpr auto m_bLockdownIsOn = 0xb04; // char : 1
		constexpr auto m_bHasFlamethrowerTurret = 0xb04; // char : 1
		constexpr auto m_bHasMegaTurret = 0xb04; // char : 1
	}

	namespace n_UTgSynchronizedTimer {
		constexpr auto m_bPausedByGame = 0x118; // char : 1
		constexpr auto m_bSuppressCallback = 0x118; // char : 1
		constexpr auto m_bRunning = 0x118; // char : 1
		constexpr auto m_bPaused = 0x118; // char : 1
		constexpr auto m_MP = 0x11c; // ObjectProperty
		constexpr auto m_TimerManager = 0x124; // ObjectProperty
	}

	namespace n_UAnimNodeSlot {
		constexpr auto bIsPlayingCustomAnim = 0x114; // char : 1
		constexpr auto bEarlyAnimEndNotify = 0x114; // char : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x114; // char : 1
		constexpr auto bAdditiveAnimationsOverrideSource = 0x114; // char : 1
		constexpr auto bIsBeingUsedByInterpGroup = 0x114; // char : 1
		constexpr auto bDontAddToAlwaysTickArray = 0x114; // char : 1
		constexpr auto PendingBlendOutTime = 0x118; // float
		constexpr auto CustomChildIndex = 0x11c; // int32_t
		constexpr auto TargetChildIndex = 0x120; // int32_t
		constexpr auto TargetWeight = 0x124; // TArray<float>
		constexpr auto BlendTimeToGo = 0x134; // float
	}

	namespace n_AReverbVolume {
		constexpr auto Priority = 0x2bc; // float
		constexpr auto bEnabled = 0x2c0; // char : 1
		constexpr auto m_bUseAudioAltitude = 0x2c0; // char : 1
		constexpr auto Settings = 0x2c4; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x2d4; // FInteriorSettings
		constexpr auto NextLowerPriorityVolume = 0x304; // ObjectProperty
		constexpr auto AuxBusName = 0x30c; // FName
		constexpr auto SendLevel = 0x314; // float
		constexpr auto m_fAudioAltitudeCeiling = 0x318; // float
		constexpr auto m_fAudioAltitudeFloor = 0x31c; // float
	}

	namespace n_UUIDataStore_GameResource {
		constexpr auto ElementProviderTypes = 0x98; // TArray<FGameResourceDataProvider>
		constexpr auto ListElementProviders = 0xa8; // FMultiMap_Mirror
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x68; // FRawDistributionVector
		constexpr auto EnableX = 0x8c; // char : 1
		constexpr auto EnableY = 0x8c; // char : 1
		constexpr auto EnableZ = 0x8c; // char : 1
	}

	namespace n_ULevelStreamingDistance {
		constexpr auto Origin = 0x100; // FVector
		constexpr auto MaxDistance = 0x10c; // float
	}

	namespace n_USeqAct_GetVelocity {
		constexpr auto VelocityMag = 0x108; // float
		constexpr auto VelocityVect = 0x10c; // FVector
	}

	namespace n_UTgBattleCheatManager {
		constexpr auto m_DebugCameraController = 0xa0; // ObjectProperty
		constexpr auto m_DebugPlayerStarts = 0xa8; // TArray<ObjectProperty>
		constexpr auto m_LastGotoPRI = 0xb8; // ObjectProperty
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0xb0; // FName
		constexpr auto ExpressionGUID = 0xb8; // FGuid
		constexpr auto Group = 0xc8; // FName
	}

	namespace n_UMcpClashMobManager {
		constexpr auto ChallengeListUrl = 0xe8; // FString
		constexpr auto ChallengeStatusUrl = 0xf8; // FString
		constexpr auto ChallengeMultiStatusUrl = 0x108; // FString
		constexpr auto AcceptChallengeUrl = 0x118; // FString
		constexpr auto UpdateChallengeProgressUrl = 0x128; // FString
		constexpr auto UpdateRewardProgressUrl = 0x138; // FString
		constexpr auto HTTPRequestChallengeList = 0x148; // ObjectProperty
		constexpr auto ChallengeUserRequests = 0x150; // TArray<FMcpChallengeUserRequest>
		constexpr auto ChallengeEvents = 0x160; // TArray<FMcpClashMobChallengeEvent>
		constexpr auto ChallengeUserStatus = 0x170; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto TempChallengeUserStatus = 0x180; // FMcpClashMobChallengeUserStatus
		constexpr auto TempChallengeUserStatusArray = 0x200; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto FileCache = 0x210; // TScriptInterface<Class>
		constexpr auto FileDownloader = 0x220; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHealthPercentAfterAttack {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto HealthPct = 0x9c; // float
	}

	namespace n_UUIData_ItemQuest {
		constexpr auto m_dwPurchasePortion = 0xb8; // Fdword
	}

	namespace n_UTgInventoryObject_Listen_ForgeDevice {
		constexpr auto bFirstItem = 0xc8; // char : 1
	}

	namespace n_ATgRepInfo_Game {
		constexpr auto m_GraphData = 0x2e8; // TArray<FGraphData>
		constexpr auto r_LastDataPoint = 0x2f8; // FGraphData
		constexpr auto m_GraphUpdateWaitTime = 0x304; // float
		constexpr auto r_GameType = 0x308; // TG_GAME_TYPE
		constexpr auto r_eHUDType = 0x309; // EHUDType
		constexpr auto r_eTalentsEnabled = 0x30a; // INITIALIZEABLE_BOOL
		constexpr auto r_nMissionTimerState = 0x30b; // MissionTimerState
		constexpr auto r_eGameTimerState = 0x30c; // GameTimerState
		constexpr auto r_nRoundLimitTimerState = 0x30d; // MissionTimerState
		constexpr auto r_nSecondaryTimerState = 0x30e; // MissionTimerState
		constexpr auto r_nLastRoundAttacker = 0x30f; // char
		constexpr auto r_nLastRoundWinner = 0x310; // char
		constexpr auto r_FlagState = 0x311; // EFlagState [0x2]
		constexpr auto r_GameEnvironmentRule = 0x313; // EGameEnvironmentRule
		constexpr auto r_GameRespawnRule = 0x314; // EGameRespawnRule
		constexpr auto r_GameMode = 0x315; // EGameMode
		constexpr auto r_bIsMission = 0x318; // char : 1
		constexpr auto r_bGameHasSetup = 0x318; // char : 1
		constexpr auto r_bGameAllowsAchievements = 0x318; // char : 1
		constexpr auto r_bAllowSpawnGuardDuringDeviceFire = 0x318; // char : 1
		constexpr auto r_bBlockCreditGain = 0x318; // char : 1
		constexpr auto r_bBlockEnergyGain = 0x318; // char : 1
		constexpr auto r_bDisablePlayerMovement = 0x318; // char : 1
		constexpr auto r_bOvertime = 0x318; // char : 1
		constexpr auto r_bCapturePointOvertime = 0x318; // char : 0
		constexpr auto r_bLimitBurnCardsToOnePerCategory = 0x318; // char : 0
		constexpr auto r_bRoundEnding = 0x318; // char : 0
		constexpr auto r_bFadeOutAtRoundEnd = 0x318; // char : 0
		constexpr auto r_bIntroPlayed = 0x318; // char : 0
		constexpr auto r_bUsePointsMode = 0x318; // char : 0
		constexpr auto r_bUltimatesLocked = 0x318; // char : 0
		constexpr auto r_bSuddenDeath = 0x318; // char : 0
		constexpr auto r_bEnableDistanceFOW = 0x318; // char : 0
		constexpr auto r_bSpawnGatesOpen = 0x318; // char : 0
		constexpr auto r_bAttackersSpawnGatesOpen = 0x318; // char : 0
		constexpr auto r_bDefendersSpawnGatesOpen = 0x318; // char : 0
		constexpr auto r_bForwardProgress = 0x318; // char : 0
		constexpr auto r_bServerFlagSprint = 0x318; // char : 0
		constexpr auto r_bServerFlagMinimapTeamVisibility = 0x318; // char : 0
		constexpr auto r_bForce3P = 0x318; // char : 0
		constexpr auto r_bForce1P = 0x318; // char : 0
		constexpr auto r_bForceOutOfCombatSprint = 0x318; // char : 0
		constexpr auto r_bAutoMelee = 0x318; // char : 0
		constexpr auto r_bShowProjectileProximityDistance = 0x318; // char : 0
		constexpr auto r_bDisableProjectileProximityDistance = 0x318; // char : 0
		constexpr auto r_bShowHeadMesh = 0x318; // char : 0
		constexpr auto r_bUseInstantFireMeshTrace = 0x318; // char : 0
		constexpr auto r_bAllowWeaponLagPrediction = 0x318; // char : 0
		constexpr auto r_bSiegeEngineRequiresAlliesToMove = 0x31c; // char : 1
		constexpr auto r_bSiegeEngineMovementPaused = 0x31c; // char : 1
		constexpr auto r_bSiegeEngineMovementPausedAfterDamagingGate = 0x31c; // char : 1
		constexpr auto r_bFogConverging = 0x31c; // char : 1
		constexpr auto r_bFogEnded = 0x31c; // char : 1
		constexpr auto r_bCheckpoint1Reached = 0x31c; // char : 1
		constexpr auto r_bCheckpoint2Reached = 0x31c; // char : 1
		constexpr auto r_bEnableHeadshots = 0x31c; // char : 1
		constexpr auto r_bAllowPlayerMounting = 0x31c; // char : 0
		constexpr auto r_bKillCamEnabled = 0x31c; // char : 0
		constexpr auto r_bAttackersKillCamEnabled = 0x31c; // char : 0
		constexpr auto r_bDefendersKillCamEnabled = 0x31c; // char : 0
		constexpr auto r_bBlockKillCam = 0x31c; // char : 0
		constexpr auto r_bIsFirstRound = 0x31c; // char : 0
		constexpr auto r_bSpawnGatesOpenedAtLeastOnce = 0x31c; // char : 0
		constexpr auto r_bDeploying = 0x31c; // char : 0
		constexpr auto r_bUseRespawns = 0x31c; // char : 0
		constexpr auto m_bNameplatesRequireLOS = 0x31c; // char : 0
		constexpr auto m_bTeamVGS = 0x31c; // char : 0
		constexpr auto r_bAlliances = 0x31c; // char : 0
		constexpr auto r_fMissionRemainingTime = 0x320; // float
		constexpr auto r_nMissionTimerStateChange = 0x324; // int32_t
		constexpr auto r_fMissionTime = 0x328; // float
		constexpr auto c_fMissionTime = 0x32c; // float
		constexpr auto c_fMissionTimeSeconds = 0x330; // float
		constexpr auto c_fAIBotDelaySeconds = 0x334; // float
		constexpr auto r_fRoundLimitElapsed = 0x338; // float
		constexpr auto r_fRoundLimitDuration = 0x33c; // float
		constexpr auto r_fSecondaryRemainingTime = 0x340; // float
		constexpr auto r_nSecondaryTimerStateChange = 0x344; // int32_t
		constexpr auto r_fSecondaryTime = 0x348; // float
		constexpr auto c_fSecondaryMissionTime = 0x34c; // float
		constexpr auto c_fSecondaryMissionTimeSeconds = 0x350; // float
		constexpr auto r_fCapturePointOvertimeStartDuration = 0x354; // float
		constexpr auto r_nCapturePointOvertimeStateChange = 0x358; // int32_t
		constexpr auto r_fPayloadOvertimeStartDuration = 0x35c; // float
		constexpr auto r_nPayloadOvertimeStateChange = 0x360; // int32_t
		constexpr auto r_fTF1PayloadPushDistance = 0x364; // float
		constexpr auto r_nPurchaseTime = 0x368; // int32_t
		constexpr auto m_fPurchaseTimer = 0x36c; // float
		constexpr auto r_nGlobalItemPurchaseOverride = 0x370; // int32_t
		constexpr auto r_nGlobalLoadoutChangeOverride = 0x374; // int32_t
		constexpr auto r_AttackingTaskForce = 0x378; // ObjectProperty
		constexpr auto r_CapturingTaskForce = 0x380; // ObjectProperty
		constexpr auto r_nChaosRemainingAttackDefendTime = 0x388; // int32_t
		constexpr auto r_Winner = 0x38c; // ObjectProperty
		constexpr auto r_fPhysicsThreshold = 0x394; // float
		constexpr auto r_sQueueName = 0x398; // FString
		constexpr auto r_nPlayOfTheGamePawnId = 0x3a8; // int32_t
		constexpr auto r_nPlayOfTheGameMapLane = 0x3ac; // int32_t
		constexpr auto r_fPlayOfTheGameTimeStamp = 0x3b0; // float
		constexpr auto c_PlayOfTheGameCamera = 0x3b4; // ObjectProperty
		constexpr auto m_Deployables = 0x3bc; // TArray<ObjectProperty>
		constexpr auto m_Projectiles = 0x3cc; // TArray<ObjectProperty>
		constexpr auto m_Destructibles = 0x3dc; // TArray<ObjectProperty>
		constexpr auto m_DRIArray = 0x3ec; // TArray<ObjectProperty>
		constexpr auto m_CPRIArray = 0x3fc; // TArray<ObjectProperty>
		constexpr auto m_CapturePoints = 0x40c; // TArray<ObjectProperty>
		constexpr auto m_MovableProjBlockers = 0x41c; // TArray<ObjectProperty>
		constexpr auto r_nCurrentCheckpoint = 0x42c; // int32_t [0x2]
		constexpr auto c_nNextClientOnlyProjectileInstanceId = 0x434; // int32_t
		constexpr auto r_SquadTarget1 = 0x438; // ObjectProperty
		constexpr auto r_SquadTarget2 = 0x440; // ObjectProperty
		constexpr auto r_fLastSquadTargetUpdate1 = 0x448; // float
		constexpr auto r_fLastSquadTargetUpdate2 = 0x44c; // float
		constexpr auto r_fSpeedScale = 0x450; // float
		constexpr auto r_fPayloadProgressPercent = 0x454; // float
		constexpr auto r_fCheckpoint1Percent = 0x458; // float
		constexpr auto r_fCheckpoint2Percent = 0x45c; // float
		constexpr auto r_fServerFlagDamageMultiplier = 0x460; // float
		constexpr auto r_fServerFlagGroundSpeedModifier = 0x464; // float
		constexpr auto r_fServerFlagAutoHealingMultiplier = 0x468; // float
		constexpr auto r_fFogDensity = 0x46c; // float
		constexpr auto r_fFogStartDistance = 0x470; // float
		constexpr auto r_fFogObscureDistance = 0x474; // float
		constexpr auto c_Fog = 0x478; // ObjectProperty
		constexpr auto r_nPersistentTextID = 0x480; // int32_t
		constexpr auto r_nRemainingObjectiveTime = 0x484; // int32_t
		constexpr auto r_nTotalObjectiveTime = 0x488; // int32_t
		constexpr auto r_fPlayerViewDistance = 0x48c; // float
		constexpr auto r_fVisibilityVolumeViewDistance = 0x490; // float
		constexpr auto r_fPushTimer = 0x494; // float
		constexpr auto r_fWeaponMaxLagCompensation = 0x498; // float
		constexpr auto m_fVaultImmuneToSiegeEngineHealth = 0x49c; // float
		constexpr auto r_fConvergeDistance = 0x4a0; // float
		constexpr auto r_fConvergeStartDistance = 0x4a4; // float
		constexpr auto r_fFogConvergeInterval = 0x4a8; // float
		constexpr auto r_fFinalFogDirection = 0x4ac; // float
		constexpr auto r_nTaskForcePushSuccessful = 0x4b0; // int32_t
		constexpr auto r_nTaskForceDefenseSuccessful = 0x4b4; // int32_t
		constexpr auto r_nMapLane = 0x4b8; // int32_t
		constexpr auto r_fGlobalFrictionFalling = 0x4bc; // float
		constexpr auto r_fGlobalFrictionFlying = 0x4c0; // float
		constexpr auto c_pForges = 0x4c4; // TArray<ObjectProperty>
		constexpr auto c_pCatapults = 0x4d4; // TArray<ObjectProperty>
		constexpr auto r_DifficultyDebugData = 0x4e4; // FBotDifficultyDebugData
		constexpr auto r_nStartTime = 0x548; // int32_t
		constexpr auto r_nDeployTime = 0x54c; // int32_t
		constexpr auto r_nPrepareTime = 0x550; // int32_t
		constexpr auto r_nDeathFogTime = 0x554; // int32_t
		constexpr auto r_nRemainingTime = 0x558; // int32_t
		constexpr auto r_nPreConvergeTime = 0x55c; // int32_t
		constexpr auto r_nConvergeTime = 0x560; // int32_t
		constexpr auto r_nTeamsTotal = 0x564; // int32_t
		constexpr auto r_nTeamsAlive = 0x568; // int32_t
		constexpr auto r_nPlayersAlive = 0x56c; // int32_t
		constexpr auto r_nPlayersTotal = 0x570; // int32_t
		constexpr auto r_fReviveTotalTime = 0x574; // float
		constexpr auto r_pFog = 0x578; // ObjectProperty
		constexpr auto r_ScrimmageX = 0x580; // float
		constexpr auto r_ScrimmageY = 0x584; // float
		constexpr auto m_fMaxSilhouetteRange = 0x588; // float
		constexpr auto r_InitialFogInfo = 0x58c; // FInitialFogInfo
		constexpr auto m_LeaderboardTeams = 0x59c; // FLeaderboardTeam [0x3]
		constexpr auto r_nDisenchantValues = 0x674; // int32_t [0x4]
		constexpr auto r_nPlayers = 0x684; // int32_t [0x2]
		constexpr auto r_pTeamZeppelins = 0x68c; // ObjectProperty [0x2]
		constexpr auto r_vTeamZeppelinSpawnLoc = 0x69c; // FVector
		constexpr auto r_rTeamZeppelinSpawnRot = 0x6a8; // FRotator
		constexpr auto m_TeamWaypoints = 0x6b4; // TMap<None, None>
		constexpr auto m_TeamPings = 0x6fc; // TMap<None, None>
	}

	namespace n_AMobileDebugCameraHUD {
		constexpr auto bDrawDebugText = 0x6bc; // char : 1
	}

	namespace n_USequenceFrame {
		constexpr auto SizeX = 0x98; // int32_t
		constexpr auto SizeY = 0x9c; // int32_t
		constexpr auto BorderWidth = 0xa0; // int32_t
		constexpr auto bDrawBox = 0xa4; // char : 1
		constexpr auto bFilled = 0xa4; // char : 1
		constexpr auto bTileFill = 0xa4; // char : 1
		constexpr auto BorderColor = 0xa8; // FColor
		constexpr auto FillColor = 0xac; // FColor
	}

	namespace n_UUIComponent {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_ComponentType = 0x68; // UICOMPONENTTYPE
		constexpr auto m_Owner = 0x6c; // ObjectProperty
		constexpr auto m_mcRoot = 0x74; // ObjectProperty
		constexpr auto m_sLoadName = 0x7c; // FString
		constexpr auto m_nLoadIndex = 0x8c; // int32_t
		constexpr auto m_sConstructName = 0x90; // FString
		constexpr auto m_bConstructed = 0xa0; // char : 1
		constexpr auto m_bCenteredHorizontally = 0xa0; // char : 1
		constexpr auto m_bCenteredVertically = 0xa0; // char : 1
		constexpr auto m_bShouldCreateInput = 0xa0; // char : 1
		constexpr auto m_bBlockInputFallThrough = 0xa0; // char : 1
		constexpr auto m_bPushInputOnVisible = 0xa0; // char : 1
		constexpr auto m_nDeferredUpdateCallbackHandle = 0xa4; // int32_t
		constexpr auto m_Components = 0xa8; // TArray<ObjectProperty>
		constexpr auto m_ComponentMap = 0xb8; // FMultiMap_Mirror
		constexpr auto m_CallbackContainer = 0x100; // ObjectProperty
		constexpr auto m_nXBeforeCenter = 0x108; // int32_t
		constexpr auto m_nYBeforeCenter = 0x10c; // int32_t
		constexpr auto m_InputContext = 0x110; // ObjectProperty
	}

	namespace n_UForceFieldShapeSphere {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UAnimNodeMirror {
		constexpr auto bEnableMirroring = 0x114; // char : 1
	}

	namespace n_USeqVar_Named {
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto FindVarName = 0xa8; // FName
		constexpr auto bStatusIsOk = 0xb0; // char : 1
	}

	namespace n_UTgAnimNodeBlendByAbilitySimple {
		constexpr auto m_bBlendToActiveOnStartFire = 0x168; // char : 1
		constexpr auto m_bBlendToActiveOnFire = 0x168; // char : 1
		constexpr auto m_bDelayBlendToActiveUntilAnimEnd = 0x168; // char : 1
		constexpr auto m_bDelayBlendToActiveUntilReplay = 0x168; // char : 1
		constexpr auto m_bDelayBlendToIdleUntilAnimEnd = 0x168; // char : 1
		constexpr auto m_bDelayBlendToIdleUntilReplay = 0x168; // char : 1
		constexpr auto m_bBlendToIdleImmediatelyOnInterrupt = 0x168; // char : 1
		constexpr auto m_bIsAbilityFiring = 0x168; // char : 1
		constexpr auto m_EqpPoint = 0x16c; // TG_EQUIP_POINT
	}

	namespace n_AHeightFog {
		constexpr auto Component = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // char : 1
	}

	namespace n_UTgGfxTeamInvite {
		constexpr auto m_nQueue = 0x244; // int32_t
		constexpr auto m_fTimerWidth = 0x248; // float
		constexpr auto m_fTimeoutTime = 0x24c; // float
		constexpr auto m_fTimeoutTimer = 0x250; // float
		constexpr auto m_mcTimer = 0x254; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x25c; // ObjectProperty
		constexpr auto m_mcButton = 0x264; // ObjectProperty [0x2]
		constexpr auto m_fInviteTimestamps = 0x274; // TMap<None, None>
		constexpr auto m_AkTeamInvite = 0x2bc; // ObjectProperty
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x80; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x90; // char : 1
	}

	namespace n_UMcpUserInventoryBase {
		constexpr auto McpUserInventoryClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDeleteSaveSlotComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnQuerySaveSlotListComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryInventoryItemsComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnPurchaseItemComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnSellItemComplete__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnEarnItemComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnConsumeItemComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnDeleteItemComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnRecordIapComplete__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UTgAIBehaviorCondition_InteractTargetOfType {
		constexpr auto ByteAlignment = 0x98; // int32_t
		constexpr auto InteractTargetType = 0x9c; // EInteractTargetType
	}

	namespace n_UParticleModuleUberLTISIVCL {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
	}

	namespace n_UNavMeshPath_SameCoverLink {
		constexpr auto TestLink = 0x78; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByIntroduction {
		constexpr auto m_bIsRelevant = 0x168; // char : 1
	}

	namespace n_UTgAIInfluenceMap {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Influences = 0x68; // TArray<int32_t>
		constexpr auto FalloffTable = 0x78; // FPointer
		constexpr auto InfluenceGrid = 0x80; // ObjectProperty
		constexpr auto TickFrequency = 0x88; // float
		constexpr auto InvTickFrequency = 0x8c; // float
		constexpr auto Decay = 0x90; // float
		constexpr auto Momentum = 0x94; // float
	}

	namespace n_UMaterialInstanceTimeVarying {
		constexpr auto bAutoActivateAll = 0x2f4; // char : 1
		constexpr auto Duration = 0x2f8; // float
		constexpr auto FontParameterValues = 0x2fc; // TArray<FFontParameterValueOverTime>
		constexpr auto ScalarParameterValues = 0x30c; // TArray<FScalarParameterValueOverTime>
		constexpr auto TextureParameterValues = 0x31c; // TArray<FTextureParameterValueOverTime>
		constexpr auto VectorParameterValues = 0x32c; // TArray<FVectorParameterValueOverTime>
		constexpr auto LinearColorParameterValues = 0x33c; // TArray<FLinearColorParameterValueOverTime>
	}

	namespace n_ATargetPoint {
		constexpr auto SpawnRefCount = 0x288; // int32_t
	}

	namespace n_UTgSeqAct_SetDisenchantEnabled {
		constexpr auto bEnabled = 0x108; // char : 1
	}

	namespace n_ATcpLink {
		constexpr auto LinkState = 0x2a4; // ELinkState
		constexpr auto RemoteAddr = 0x2a8; // FIpAddr
		constexpr auto AcceptClass = 0x2bc; // ATcpLink*
		constexpr auto SendFIFO = 0x2c4; // TArray<char>
		constexpr auto RecvBuf = 0x2d4; // FString
	}

	namespace n_UTgDataHandler {
		constexpr auto m_MP = 0x118; // ObjectProperty
		constexpr auto m_DataChunkList = 0x120; // TArray<ObjectProperty>
	}

	namespace n_UWaveFormBase {
		constexpr auto TheWaveForm = 0x60; // ObjectProperty
	}

	namespace n_USeqVar_RandomInt {
		constexpr auto Min = 0xa4; // int32_t
		constexpr auto Max = 0xa8; // int32_t
	}

	namespace n_UTgAIBehaviorAction_PlayVGS {
		constexpr auto VoicePackId = 0x94; // int32_t
		constexpr auto VgsId = 0x98; // int32_t
	}

	namespace n_UForceFeedbackManager {
		constexpr auto bAllowsForceFeedback = 0x60; // char : 1
		constexpr auto bIsPaused = 0x60; // char : 1
		constexpr auto ScaleAllWaveformsBy = 0x64; // float
		constexpr auto PlayingWaveforms = 0x68; // TArray<FForceFeedbackPlayingInfo>
	}

	namespace n_UTgAnimNotify_ToggleInvisibleWall {
		constexpr auto TurnWallOn = 0x68; // char : 1
		constexpr auto TurnOffOnCeaseRelevant = 0x68; // char : 1
		constexpr auto WallIndex = 0x6c; // int32_t
		constexpr auto WallPosition = 0x70; // FVector
		constexpr auto WallNormal = 0x7c; // FVector
		constexpr auto WallEnableBaseName = 0x88; // FName
		constexpr auto WallPositionBaseName = 0x90; // FName
		constexpr auto WallNormalBaseName = 0x98; // FName
	}

	namespace n_ATgDevice_DivineWrath {
		constexpr auto m_vLocalAimOffset = 0xaec; // FVector
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto bEnabled = 0x88; // char : 1
		constexpr auto bUseActorDirectionForLightDirection = 0x88; // char : 1
		constexpr auto FogHeight = 0x8c; // float
		constexpr auto FogDensity = 0x90; // float
		constexpr auto FogHeightFalloff = 0x94; // float
		constexpr auto FogMaxOpacity = 0x98; // float
		constexpr auto StartDistance = 0x9c; // float
		constexpr auto LightTerminatorAngle = 0xa0; // float
		constexpr auto OppositeLightBrightness = 0xa4; // float
		constexpr auto OppositeLightColor = 0xa8; // FColor
		constexpr auto LightInscatteringBrightness = 0xac; // float
		constexpr auto LightInscatteringColor = 0xb0; // FColor
		constexpr auto DominantDirectionalLightDirection = 0xb4; // FVector
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInCapturePointRadius {
		constexpr auto bGodsMustBeEnemy = 0x9c; // char : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
	}

	namespace n_UWindPointSourceComponent {
		constexpr auto PreviewRadiusComponent = 0xa0; // ComponentProperty
		constexpr auto Radius = 0xa8; // float
	}

	namespace n_ATgRepInfo_TaskForce {
		constexpr auto r_nTeamId = 0x2a0; // int32_t
		constexpr auto r_nAlliance = 0x2a4; // int32_t
		constexpr auto r_bSpectator = 0x2a8; // char : 1
		constexpr auto r_ResurrectionInfo = 0x2ac; // FResurrectionInfo
		constexpr auto r_TeamZeppelin = 0x2b4; // ObjectProperty
		constexpr auto s_nColorIndex = 0x2bc; // int32_t
		constexpr auto s_nGodVisionMask = 0x2c0; // int32_t
		constexpr auto s_NavTeamDeploy = 0x2c4; // ObjectProperty
		constexpr auto r_nScore = 0x2cc; // int32_t
		constexpr auto r_nScorePercent = 0x2d0; // int32_t
		constexpr auto r_nTaskForce = 0x2d4; // char
		constexpr auto r_fSecondaryScore = 0x2d8; // float
		constexpr auto r_FoundLootGoblinInfo = 0x2dc; // FFoundLootGoblinInfo
		constexpr auto m_Factories = 0x2e8; // TArray<ObjectProperty>
		constexpr auto m_TeamBots = 0x2f8; // TArray<ObjectProperty>
		constexpr auto m_TeamPlayers = 0x308; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto bNormalize = 0xe4; // char : 1
	}

	namespace n_ATgDeploy_ShieldBarik {
		constexpr auto r_bHasCapsule = 0x44c; // char : 1
		constexpr auto r_bHasAcceleratorField = 0x44c; // char : 1
		constexpr auto r_bHasImpede = 0x44c; // char : 1
		constexpr auto r_bHasBunker = 0x44c; // char : 1
		constexpr auto r_bHasFortify = 0x44c; // char : 1
		constexpr auto m_AcceleratedActors = 0x450; // TArray<ObjectProperty>
		constexpr auto m_CachedPawnOwner = 0x460; // ObjectProperty
	}

	namespace n_UMobilePlayerInput {
		constexpr auto Touches = 0x2d4; // FTouchData [0x5]
		constexpr auto InteractiveObject = 0x464; // ObjectProperty
		constexpr auto InteractiveObjectLastTime = 0x46c; // FDouble
		constexpr auto MobileInputGroups = 0x474; // TArray<FMobileInputGroup>
		constexpr auto CurrentMobileGroup = 0x484; // int32_t
		constexpr auto MobileInputZones = 0x488; // TArray<ObjectProperty>
		constexpr auto MobileInputZoneClasses = 0x498; // TArray<FMobileInputZoneClassMap>
		constexpr auto MobilePitch = 0x4a8; // float
		constexpr auto MobilePitchCenter = 0x4ac; // float
		constexpr auto MobilePitchMultiplier = 0x4b0; // float
		constexpr auto MobileYaw = 0x4b4; // float
		constexpr auto MobileYawCenter = 0x4b8; // float
		constexpr auto MobileYawMultiplier = 0x4bc; // float
		constexpr auto MobilePitchDeadzoneSize = 0x4c0; // float
		constexpr auto MobileYawDeadzoneSize = 0x4c4; // float
		constexpr auto MobileDoubleTapTime = 0x4c8; // float
		constexpr auto MobileMinHoldForTap = 0x4cc; // float
		constexpr auto MobileTapRepeatTime = 0x4d0; // float
		constexpr auto bAllowTouchesInCinematic = 0x4d4; // char : 1
		constexpr auto bDisableTouchInput = 0x4d4; // char : 1
		constexpr auto bAbsoluteTouchLocations = 0x4d4; // char : 1
		constexpr auto bCollapseTouchInput = 0x4d4; // char : 1
		constexpr auto bFakeMobileTouches = 0x4d4; // char : 1
		constexpr auto bDisableSceneRender = 0x4d4; // char : 1
		constexpr auto ZoneTimeout = 0x4d8; // float
		constexpr auto MobileMenuStack = 0x4dc; // TArray<ObjectProperty>
		constexpr auto NativeDebugString = 0x4ec; // FString
		constexpr auto MobileInactiveTime = 0x4fc; // float
		constexpr auto MobileSeqEventHandlers = 0x500; // TArray<ObjectProperty>
		constexpr auto MobileRawInputSeqEventHandlers = 0x510; // TArray<ObjectProperty>
		constexpr auto MobileViewportOffset = 0x520; // FVector2D
		constexpr auto MobileViewportSize = 0x528; // FVector2D
		constexpr auto __OnTouchNotHandledInMenu__Delegate = 0x530; // DelegateProperty
		constexpr auto __OnPreviewTouch__Delegate = 0x540; // DelegateProperty
		constexpr auto __OnInputTouch__Delegate = 0x550; // DelegateProperty
	}

	namespace n_ASceneCaptureCubeMapActor {
		constexpr auto StaticMesh = 0x288; // ComponentProperty
		constexpr auto CubeMaterialInst = 0x290; // ObjectProperty
	}

	namespace n_UPath_AvoidInEscapableNodes {
		constexpr auto Radius = 0x6c; // int32_t
		constexpr auto Height = 0x70; // int32_t
		constexpr auto MaxFallSpeed = 0x74; // int32_t
		constexpr auto MoveFlags = 0x78; // int32_t
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
	}

	namespace n_UPComOpenBroadcaster {
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto FacebookAppId = 0x68; // FString
		constexpr auto FacebookApprovedDomain = 0x78; // FString
		constexpr auto FacebookLiveUrl = 0x88; // FString
		constexpr auto CurrentState = 0x98; // EPComOpenBroadcasterState
		constexpr auto CurrentSettings = 0x9c; // FPComOpenBroadcasterSettings
		constexpr auto StreamerProcessHandle = 0xa0; // FPointer
		constexpr auto __PreloadWebBrowser__Delegate = 0xa8; // DelegateProperty
		constexpr auto __IsWebBrowserLoaded__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OpenWebBrowser__Delegate = 0xc8; // DelegateProperty
		constexpr auto __CloseWebBrowser__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UTgAIBehaviorAction_LookAtFortress {
		constexpr auto bMustBeEnemy = 0x94; // char : 1
	}

	namespace n_USeqCond_SwitchClass {
		constexpr auto ClassArray = 0xec; // TArray<FSwitchClassInfo>
	}

	namespace n_UTgSavedMove {
		constexpr auto m_byMoveSpeed = 0x118; // char
		constexpr auto m_bJumpHeld = 0x11c; // char : 1
		constexpr auto m_bUltHeld = 0x11c; // char : 1
		constexpr auto m_bMounted = 0x11c; // char : 1
		constexpr auto m_bInADS = 0x11c; // char : 1
		constexpr auto m_fSimulatedModifiedMovementSpeed = 0x120; // float
		constexpr auto m_nBigTeleportCount = 0x124; // int32_t
	}

	namespace n_ATgAssaultPoint {
		constexpr auto AssaultPointType = 0x394; // EAssaultType
		constexpr auto LocationType = 0x395; // ELocationType
	}

	namespace n_UUIComponent_Item {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcType = 0x128; // ObjectProperty
		constexpr auto m_mcDescription = 0x130; // ObjectProperty
		constexpr auto m_mcArtIcon = 0x138; // ObjectProperty
		constexpr auto m_mcFrame = 0x140; // ObjectProperty
		constexpr auto m_Item = 0x148; // ObjectProperty
		constexpr auto m_bCacheDirty = 0x150; // char : 1
		constexpr auto m_bDataDirty = 0x150; // char : 1
		constexpr auto m_bUseBaseName = 0x150; // char : 1
		constexpr auto m_sDescription = 0x154; // FString
		constexpr auto m_sType = 0x164; // FString
		constexpr auto m_sName = 0x174; // FString
		constexpr auto m_fDescriptionCenterOffset = 0x184; // float
		constexpr auto m_nTickCallback = 0x188; // int32_t
	}

	namespace n_USkelControlBase {
		constexpr auto ControlName = 0x68; // FName
		constexpr auto ControlStrength = 0x70; // float
		constexpr auto BlendInTime = 0x74; // float
		constexpr auto BlendOutTime = 0x78; // float
		constexpr auto BlendType = 0x7c; // AlphaBlendType
		constexpr auto bPostPhysicsController = 0x80; // char : 1
		constexpr auto bSetStrengthFromAnimNode = 0x80; // char : 1
		constexpr auto bInvertStrengthFromAnimNode = 0x80; // char : 1
		constexpr auto bInitializedCachedNodeList = 0x80; // char : 1
		constexpr auto bControlledByAnimMetada = 0x80; // char : 1
		constexpr auto bInvertMetadataWeight = 0x80; // char : 1
		constexpr auto bPropagateSetActive = 0x80; // char : 1
		constexpr auto bIgnoreWhenNotRendered = 0x80; // char : 1
		constexpr auto bShouldTickInScript = 0x80; // char : 0
		constexpr auto bShouldTickOwner = 0x80; // char : 0
		constexpr auto bEnableEaseInOut = 0x80; // char : 0
		constexpr auto StrengthTarget = 0x84; // float
		constexpr auto BlendTimeToGo = 0x88; // float
		constexpr auto StrengthAnimNodeNameList = 0x8c; // TArray<FName>
		constexpr auto CachedNodeList = 0x9c; // TArray<ObjectProperty>
		constexpr auto AnimMetadataWeight = 0xac; // float
		constexpr auto AnimMetaDataUpdateTag = 0xb0; // int32_t
		constexpr auto BoneScale = 0xb4; // float
		constexpr auto ControlTickTag = 0xb8; // int32_t
		constexpr auto IgnoreAtOrAboveLOD = 0xbc; // int32_t
		constexpr auto NextControl = 0xc0; // ObjectProperty
		constexpr auto ControlPosX = 0xc8; // int32_t
		constexpr auto ControlPosY = 0xcc; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHealthPercent {
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UTgSeqEvent_BurnCardPurchased {
		constexpr auto nFilledSlots = 0x128; // int32_t
		constexpr auto bAllBurnSlotsFull = 0x12c; // char : 1
	}

	namespace n_ATgPickupFactory {
		constexpr auto bRotatingPickup = 0x3a4; // char : 1
		constexpr auto YawRotationRate = 0x3a8; // float
		constexpr auto TeamOwner = 0x3ac; // ObjectProperty [0x4]
		constexpr auto BaseMesh = 0x3cc; // ComponentProperty
	}

	namespace n_ATgDevice_QuadWield {
		constexpr auto m_vProjectileSpawnOffset3 = 0xafc; // FVector
		constexpr auto m_vProjectileSpawnOffset4 = 0xb08; // FVector
		constexpr auto m_nWeaponFireNumber = 0xb14; // int32_t
	}

	namespace n_ACrowdAgentBase {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
	}

	namespace n_UUIDataPlayer {
		constexpr auto sName = 0x60; // FString
		constexpr auto sLFPMessage = 0x70; // FString
		constexpr auto nLevel = 0x80; // int32_t
		constexpr auto nMasteryLevel = 0x84; // int32_t
		constexpr auto dwVIPTier = 0x88; // Fdword
		constexpr auto dwPlayerId = 0x8c; // Fdword
		constexpr auto qwUserId = 0x90; // FQWord
		constexpr auto dwPortalId = 0x98; // Fdword
		constexpr auto dwAvatarId = 0x9c; // Fdword
		constexpr auto dwTitleId = 0xa0; // Fdword
		constexpr auto bIsSelf = 0xa4; // char : 1
		constexpr auto bIsPortalReservedPartySlot = 0xa4; // char : 1
		constexpr auto bIsVIP = 0xa4; // char : 1
		constexpr auto dwReferralPlayMinutes = 0xa8; // Fdword
		constexpr auto dwReferralId = 0xac; // Fdword
		constexpr auto pLeaguePlayers = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_Timer {
		constexpr auto ActivationTime = 0x108; // float
		constexpr auto Time = 0x10c; // float
	}

	namespace n_ATgDevice_HealthPack {
		constexpr auto m_nQueuedShots = 0xaec; // int32_t
		constexpr auto m_fQueueGracePeriod = 0xaf0; // float
		constexpr auto m_fLastFire = 0xaf4; // float
	}

	namespace n_UDownloadableContentManager {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto DLCConfigCacheChanges = 0x68; // TArray<FPointer>
		constexpr auto InstalledDLC = 0x78; // TArray<FString>
		constexpr auto NonPackageFilePathMap = 0x88; // FMap_Mirror
		constexpr auto ClassesToReload = 0xd0; // TArray<UObject*>
		constexpr auto ObjectsToReload = 0xe0; // TArray<ObjectProperty>
		constexpr auto QueuedFullyLoadPackageInis = 0xf0; // TArray<FString>
		constexpr auto GameEngine = 0x100; // ObjectProperty
		constexpr auto bWantsToRefreshDLC = 0x108; // char : 1
		constexpr auto bGameDidAuthorizedDLCRefresh = 0x108; // char : 1
		constexpr auto __OnRefreshComplete__Delegate = 0x10c; // DelegateProperty
	}

	namespace n_AWindPointSource {
		constexpr auto Component = 0x280; // ComponentProperty
	}

	namespace n_UParticleModuleTrailTaper {
		constexpr auto TaperMethod = 0x68; // ETrailTaperMethod
		constexpr auto TaperFactor = 0x6c; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_USeqAct_LevelStreaming {
		constexpr auto Level = 0x124; // ObjectProperty
		constexpr auto LevelName = 0x12c; // FName
		constexpr auto bStatusIsOk = 0x134; // char : 1
	}

	namespace n_UTgDeviceForm_GrapplingHook {
		constexpr auto m_bBeamActive = 0x2bc; // char : 1
		constexpr auto m_bHookInterrupted = 0x2bc; // char : 1
		constexpr auto m_BeamTarget = 0x2c0; // ObjectProperty
		constexpr auto m_vBeamTargetLocation = 0x2c8; // FVector
		constexpr auto m_HookBlendList1P = 0x2d4; // TArray<ObjectProperty>
		constexpr auto m_HookBlendList3P = 0x2e4; // TArray<ObjectProperty>
	}

	namespace n_ATgAIController_BehaviorMapNpc {
		constexpr auto ThreatList = 0x90c; // TArray<FThreatEntry>
		constexpr auto bThreatListDecays = 0x91c; // char : 1
		constexpr auto bOutsideLeash = 0x91c; // char : 1
		constexpr auto bHadCombatTarget = 0x91c; // char : 1
		constexpr auto LeashDistance = 0x920; // float
		constexpr auto LeashVolume = 0x924; // ObjectProperty
		constexpr auto LeashActors = 0x92c; // TArray<ObjectProperty>
	}

	namespace n_UTgGameplayCurvesSet_Simple {
		constexpr auto PrimaryCurve = 0x64; // FRawDistributionFloat
		constexpr auto PrimaryCurveTabName = 0x88; // FName
		constexpr auto PrimaryCurveName = 0x90; // FName
	}

	namespace n_UUIData_LTIAggregate {
		constexpr auto m_Items = 0x60; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_WaitForLevelsVisible {
		constexpr auto LevelNames = 0x120; // TArray<FName>
		constexpr auto bShouldBlockOnLoad = 0x130; // char : 1
	}

	namespace n_UTgGameplayCurvesSet {
		constexpr auto CurveSetType = 0x60; // ECurveSetTypes
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetPolymorphState {
		constexpr auto PolymorphState = 0x98; // EPolymorphType
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0xa0; // FInterpCurveVector
		constexpr auto EulerTrack = 0xb4; // FInterpCurveVector
		constexpr auto LookupTrack = 0xc8; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xd8; // FName
		constexpr auto LinCurveTension = 0xe0; // float
		constexpr auto AngCurveTension = 0xe4; // float
		constexpr auto bUseQuatInterpolation = 0xe8; // char : 1
		constexpr auto bShowArrowAtKeys = 0xe8; // char : 1
		constexpr auto bDisableMovement = 0xe8; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xe8; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xe8; // char : 1
		constexpr auto bHide3DTrack = 0xe8; // char : 1
		constexpr auto bUseRawActorTMforRelativeToInitial = 0xe8; // char : 1
		constexpr auto MoveFrame = 0xec; // EInterpTrackMoveFrame
		constexpr auto RotMode = 0xed; // EInterpTrackMoveRotMode
	}

	namespace n_UTgAkAudioManagement {
		constexpr auto m_MeterCallbackSlots = 0x60; // FAkMeterCallbackState [0x10]
		constexpr auto dwAllBusses = 0x160; // TArray<Fdword>
		constexpr auto m_bInitialized = 0x170; // char : 1
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeGuid = 0x60; // FGuid
		constexpr auto LayerInfoMap = 0x70; // TMap<None, None>
		constexpr auto DataInterface = 0xb8; // FPointer
		constexpr auto XYtoComponentMap = 0xc0; // TMap<None, None>
		constexpr auto XYtoCollisionComponentMap = 0x108; // TMap<None, None>
		constexpr auto LandscapeProxy = 0x150; // ObjectProperty
		constexpr auto XYtoAddCollisionMap = 0x158; // TMap<None, None>
		constexpr auto Proxies = 0x1a0; // FSet_Mirror
		constexpr auto SelectedComponents = 0x1e8; // FSet_Mirror
		constexpr auto SelectedCollisionComponents = 0x230; // FSet_Mirror
		constexpr auto SelectedRegionComponents = 0x278; // FSet_Mirror
		constexpr auto SelectedRegion = 0x2c0; // TMap<None, None>
		constexpr auto bIsValid = 0x308; // char : 1
	}

	namespace n_USeqAct_SetFloat {
		constexpr auto Target = 0x108; // float
		constexpr auto Value = 0x10c; // TArray<float>
	}

	namespace n_USeqEvent_MobileButton {
		constexpr auto bWasActiveLastFrame = 0x138; // char : 1
		constexpr auto bSendPressedOnlyOnTouchDown = 0x138; // char : 1
		constexpr auto bSendPressedOnlyOnTouchUp = 0x138; // char : 1
	}

	namespace n_UActorFactoryAkAmbientSound {
		constexpr auto AmbientEvent = 0x9c; // ObjectProperty
	}

	namespace n_UTgAnimNodeSimpleTransitioner {
		constexpr auto m_nDeviceId = 0x144; // int32_t
		constexpr auto m_bConfigureBasedOnDevice = 0x148; // char : 1
		constexpr auto m_bIgnoreFireMode = 0x148; // char : 1
		constexpr auto m_nNumberOfStances = 0x14c; // int32_t
		constexpr auto m_StanceBaseName = 0x150; // FName
		constexpr auto m_TransitionBaseName = 0x158; // FName
		constexpr auto m_BlendTransitionDuration = 0x160; // float
	}

	namespace n_ATgDeploy_EffectAura {
		constexpr auto r_fRadiusScale = 0x448; // float
		constexpr auto m_TouchingActors = 0x44c; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0x45c; // TArray<ObjectProperty>
		constexpr auto m_fLastBlockedByBlockersTime = 0x46c; // float
		constexpr auto m_fMinBlockedByBlockersTime = 0x470; // float
		constexpr auto m_BlockedActors = 0x474; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0x484; // ObjectProperty
	}

	namespace n_ATgBotFactory {
		constexpr auto LocationSelection = 0x2c0; // eBotSelection
		constexpr auto LocationList = 0x2c4; // TArray<ObjectProperty>
		constexpr auto s_nCurLocationIndex = 0x2d4; // int32_t
		constexpr auto SafetyLocation = 0x2d8; // ObjectProperty
		constexpr auto ShouldTraceSpawnLocationToFloor = 0x2e0; // char : 1
		constexpr auto bUseSmiteStaggerSpawning = 0x2e0; // char : 1
		constexpr auto bSpawnAsSquad = 0x2e0; // char : 1
		constexpr auto bAutoSpawn = 0x2e0; // char : 1
		constexpr auto m_bFirstSpawn = 0x2e0; // char : 1
		constexpr auto bBulkSpawn = 0x2e0; // char : 1
		constexpr auto bRespawn = 0x2e0; // char : 1
		constexpr auto bStartBotsInIntroState = 0x2e0; // char : 1
		constexpr auto bHasDifferentInitialIntro = 0x2e0; // char : 0
		constexpr auto m_bFirstSpawnWave = 0x2e0; // char : 0
		constexpr auto m_bIgnoreCollisionOnSpawn = 0x2e0; // char : 0
		constexpr auto m_bUseCollisionHeightForSpawnPlacement = 0x2e0; // char : 0
		constexpr auto nBotCount = 0x2e4; // int32_t
		constexpr auto nCurrentCount = 0x2e8; // int32_t
		constexpr auto nActiveCount = 0x2ec; // int32_t
		constexpr auto nTotalSpawns = 0x2f0; // int32_t
		constexpr auto CurrentBotSpawnCount = 0x2f4; // TArray<FBotSpawnCounter>
		constexpr auto nLane = 0x304; // int32_t
		constexpr auto nNavPointsToSkipForPathing = 0x308; // int32_t
		constexpr auto fStaggerSpawnDelay = 0x30c; // float
		constexpr auto s_CurrentSquad = 0x310; // ObjectProperty
		constexpr auto m_SquadClass = 0x318; // UTgAISquad*
		constexpr auto m_nLocationId = 0x320; // int32_t
		constexpr auto nSpawnTableId = 0x324; // int32_t
		constexpr auto nDefaultSpawnTableId = 0x328; // int32_t
		constexpr auto fSpawnDelay = 0x32c; // float
		constexpr auto m_SpawnQueue = 0x330; // TArray<FSpawnQueueEntry>
		constexpr auto m_SpawnVolume = 0x340; // ObjectProperty
		constexpr auto m_nLastGroup = 0x348; // int32_t
		constexpr auto fSpawnHealthPercent = 0x34c; // float
		constexpr auto m_fEncounterDespawnTime = 0x350; // float
		constexpr auto fIntroductionDuration = 0x354; // float
		constexpr auto fInitialIntroductionDuration = 0x358; // float
		constexpr auto m_StartingSpline = 0x35c; // ObjectProperty
		constexpr auto m_RespawnIndicator = 0x364; // ComponentProperty
		constexpr auto m_RespawnIndicatorMIC = 0x36c; // ObjectProperty
		constexpr auto m_TextureNormal = 0x374; // ObjectProperty
		constexpr auto fLastKillTime = 0x37c; // float
		constexpr auto fRespawnDelay = 0x380; // float
	}

	namespace n_ATgAIController_BehaviorLaneNpc {
		constexpr auto GoalTarget = 0x90c; // ObjectProperty
		constexpr auto bDespawnOnLoseCombatTarget = 0x914; // char : 1
		constexpr auto bIsBehindSquad = 0x914; // char : 1
		constexpr auto bTooFarFromLane = 0x914; // char : 1
	}

	namespace n_ATgPlayOfTheGameCamera {
		constexpr auto m_ViewTarget = 0x420; // ObjectProperty
		constexpr auto m_bActive = 0x428; // char : 1
		constexpr auto m_fRemainingTweenTime = 0x42c; // float
		constexpr auto m_fTotalTweenTime = 0x430; // float
		constexpr auto m_TweenSourcePOV = 0x434; // FTPOV
		constexpr auto m_vRelativeLocation = 0x458; // FVector
		constexpr auto m_vRelativeRotation = 0x464; // FVector
		constexpr auto m_vRelativeLocationOffset = 0x470; // FVector
		constexpr auto m_vRelativeRotationOffset = 0x47c; // FVector
	}

	namespace n_UUIScene_UIJoinCustomPopup {
		constexpr auto m_bHaveInput = 0x154; // char : 1
		constexpr auto m_mcInputMatchName = 0x158; // ObjectProperty
		constexpr auto m_mcInputPass = 0x160; // ObjectProperty
		constexpr auto m_mcInputJoin = 0x168; // ObjectProperty
		constexpr auto m_mcError = 0x170; // ObjectProperty
	}

	namespace n_UTgAnimNodeTargeting {
		constexpr auto m_EquipPoint = 0x168; // TG_EQUIP_POINT
		constexpr auto m_bResetOnRelevant = 0x16c; // char : 1
		constexpr auto m_bDoneTargeting = 0x16c; // char : 1
	}

	namespace n_ATgDeploy_TurretLinked {
		constexpr auto m_ParentTurret = 0x448; // ObjectProperty
	}

	namespace n_UUIComponent_Avatar {
		constexpr auto m_mcTexture = 0x120; // ObjectProperty
		constexpr auto m_mcLoadingSpinner = 0x128; // ObjectProperty
	}

	namespace n_USeqAct_AkLoadBank {
		constexpr auto Async = 0x120; // char : 1
		constexpr auto bWaitingCallback = 0x120; // char : 1
		constexpr auto Bank = 0x124; // ObjectProperty
		constexpr auto Signal = 0x12c; // int32_t
	}

	namespace n_UTgAnimNodeBlendByPhysics {
		constexpr auto m_TgPawn = 0x144; // ObjectProperty
		constexpr auto m_LastPhysics = 0x14c; // EPhysics
		constexpr auto m_CurrentPhysics = 0x14d; // EPhysics
		constexpr auto m_CurrentPhysicsChildIndex = 0x150; // int32_t
		constexpr auto m_PhysicsChildren = 0x154; // TArray<EPhysics>
		constexpr auto m_bDirectUnspecifiedPhysicsThroughChild0 = 0x164; // char : 1
		constexpr auto DefaultBlendTime = 0x168; // float
		constexpr auto m_ChildrenBlendInfo = 0x16c; // TArray<FChildrenBlendInfo>
	}

	namespace n_ATgDeploy_ChurchillTurret {
		constexpr auto m_vDroneSocketOffset = 0x448; // FVector
		constexpr auto r_bLeftDrone = 0x454; // char : 1
		constexpr auto m_vCurrentAccumulatedVelocity = 0x458; // FVector
	}

	namespace n_UTgRealmArmor {
		constexpr auto ArmorArmArch = 0x60; // ObjectProperty
		constexpr auto ArmorChestArch = 0x68; // ObjectProperty
		constexpr auto ArmorHeadArch = 0x70; // ObjectProperty
		constexpr auto ArmorLegArch = 0x78; // ObjectProperty
		constexpr auto fHeadTransitionTime = 0x80; // float
		constexpr auto fChestTransitionTime = 0x84; // float
		constexpr auto fArmTransitionTime = 0x88; // float
		constexpr auto fLegTransitionTime = 0x8c; // float
		constexpr auto m_TransitionInfo = 0x90; // TArray<FArmorTransitionInfo>
		constexpr auto m_pBaseMIC = 0xa0; // ObjectProperty
		constexpr auto m_pArmorMIC = 0xa8; // ObjectProperty
	}

	namespace n_ATgDevice_DualFire {
		constexpr auto __InterruptFiringDelegate__Delegate = 0xaf4; // DelegateProperty
	}

	namespace n_ATgVisibilityVolume {
		constexpr auto m_PlayerCameraParticleSystem = 0x2bc; // ObjectProperty
		constexpr auto m_PlayerCameraInvisibleParticleSystem = 0x2c4; // ObjectProperty
	}

	namespace n_UMaterialExpressionParticleMacroUV {
		constexpr auto bUseViewSpace = 0xb0; // char : 1
	}

	namespace n_UActorFactoryDynamicSM {
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
		constexpr auto bNoEncroachCheck = 0xb0; // char : 1
		constexpr auto bNotifyRigidBodyCollision = 0xb0; // char : 1
		constexpr auto bBlockRigidBody = 0xb0; // char : 1
		constexpr auto bUseCompartment = 0xb0; // char : 1
		constexpr auto bCastDynamicShadow = 0xb0; // char : 1
		constexpr auto CollisionType = 0xb4; // ECollisionType
	}

	namespace n_UUIComponent_BoosterItemInfo {
		constexpr auto m_nDisplayedItemId = 0x120; // int32_t
		constexpr auto m_bUseRentalOffset = 0x124; // char : 1
		constexpr auto m_mcTitle = 0x128; // ObjectProperty
		constexpr auto m_mcTitleIcon = 0x130; // ObjectProperty
		constexpr auto m_mcDesc = 0x138; // ObjectProperty
		constexpr auto m_mcRentalText = 0x140; // ObjectProperty
		constexpr auto m_mcRentalDuration = 0x148; // ObjectProperty
		constexpr auto m_pBenefits = 0x150; // ObjectProperty
	}

	namespace n_UUIComponent_ItemGeneric {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcOwned = 0x128; // ObjectProperty
		constexpr auto m_mcSale = 0x130; // ObjectProperty
		constexpr auto m_mcTexture = 0x138; // ObjectProperty
		constexpr auto m_mcRarity = 0x140; // ObjectProperty
		constexpr auto m_mcFrame = 0x148; // ObjectProperty
		constexpr auto m_mcValueBanner = 0x150; // ObjectProperty
		constexpr auto m_pPrices = 0x158; // ObjectProperty
		constexpr auto m_pRealMoneyPrice = 0x160; // ObjectProperty
	}

	namespace n_UUIComponent_ReferralReward {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcIcon = 0x128; // ObjectProperty
		constexpr auto m_mcAddition = 0x130; // ObjectProperty
		constexpr auto m_mcCurrency = 0x138; // ObjectProperty
		constexpr auto m_mcAmount = 0x140; // ObjectProperty
		constexpr auto m_mcFrame = 0x148; // ObjectProperty
	}

	namespace n_UTgAIObstacleAvoidance {
		constexpr auto ObstacleGrid = 0x60; // FPointer
		constexpr auto CachedAvoidance = 0x68; // FObstacleQueryCache
		constexpr auto CachedBlockers = 0x94; // TArray<ObjectProperty>
		constexpr auto CachedLandscapes = 0xa4; // TArray<ObjectProperty>
		constexpr auto OuterController = 0xb4; // ObjectProperty
		constexpr auto bRenderingIsDirty = 0xbc; // char : 1
	}

	namespace n_USeqEvent_ParticleEvent {
		constexpr auto EventType = 0x128; // EParticleEventOutputType
		constexpr auto EventPosition = 0x12c; // FVector
		constexpr auto EventEmitterTime = 0x138; // float
		constexpr auto EventVelocity = 0x13c; // FVector
		constexpr auto EventParticleTime = 0x148; // float
		constexpr auto EventNormal = 0x14c; // FVector
		constexpr auto UseRelfectedImpactVector = 0x158; // char : 1
	}

	namespace n_ATgDevice_LongbowInhand {
		constexpr auto s_fLastFireHoldPct = 0xaec; // float
		constexpr auto m_fFireReleasePercent = 0xaf0; // float
		constexpr auto m_fImpalerReticleAnimationTimer = 0xaf4; // float
		constexpr auto m_fReticleReleaseAnimationDuration = 0xaf8; // float
		constexpr auto m_fImpalerReticleFadeInDuration = 0xafc; // float
		constexpr auto m_fImpalerReticleFadeOutDuration = 0xb00; // float
		constexpr auto m_fImpalerReticleGrowth = 0xb04; // float
		constexpr auto m_vProjectileSpawnOffsetPlanted = 0xb08; // FVector
	}

	namespace n_UNavMeshPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x78; // float
		constexpr auto MinDistance = 0x7c; // float
		constexpr auto bSoft = 0x80; // char : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x80; // char : 1
		constexpr auto SoftStartPenalty = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_UPBRuleNodeExtractTopBottom {
		constexpr auto ExtractTopZ = 0x70; // float
		constexpr auto ExtractNotTopZ = 0x74; // float
		constexpr auto ExtractBottomZ = 0x78; // float
		constexpr auto ExtractNotBottomZ = 0x7c; // float
	}

	namespace n_UUIComponent_EsportsMatchupEntry {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcTeam = 0x128; // ObjectProperty [0x2]
		constexpr auto m_mcTeamName = 0x138; // ObjectProperty [0x2]
		constexpr auto m_mcTeamCheck = 0x148; // ObjectProperty [0x2]
		constexpr auto m_mcTeamScore = 0x158; // ObjectProperty [0x2]
		constexpr auto m_mcAvailable = 0x168; // ObjectProperty
		constexpr auto m_pWinnings = 0x170; // ObjectProperty
		constexpr auto m_bShowSpoilers = 0x178; // char : 1
	}

	namespace n_UTgAIBehaviorAction_UseConsumable {
		constexpr auto ConsumableType = 0x94; // EConsumableType
	}

	namespace n_UUIDataAcquisitionQueue {
		constexpr auto m_Acquisitions = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_ActiveDuringAbility_WhileOutOfCombat {
		constexpr auto m_bPawnInCombat = 0xd8; // char : 1
	}

	namespace n_UTgAnimTurnInPlace_Rotator {
		constexpr auto c_TurnInPlaceNodes = 0x114; // TArray<ObjectProperty>
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
	}

	namespace n_ASplineLoftActor {
		constexpr auto ScaleX = 0x2e8; // float
		constexpr auto ScaleY = 0x2ec; // float
		constexpr auto SplineMeshComps = 0x2f0; // TArray<ComponentProperty>
		constexpr auto DeformMesh = 0x300; // ObjectProperty
		constexpr auto DeformMeshMaterials = 0x308; // TArray<ObjectProperty>
		constexpr auto Roll = 0x318; // float
		constexpr auto WorldXDir = 0x31c; // FVector
		constexpr auto Offset = 0x328; // FVector2D
		constexpr auto bSmoothInterpRollAndScale = 0x330; // char : 1
		constexpr auto bAcceptsLights = 0x330; // char : 1
		constexpr auto MeshLightEnvironment = 0x334; // ComponentProperty
		constexpr auto MeshMaxDrawDistance = 0x33c; // float
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x6c; // FRawDistributionVector
	}

	namespace n_ATgPlayerCountVolume {
		constexpr auto PlayerCountTarget = 0x2bc; // int32_t
		constexpr auto TaskForceNumber = 0x2c0; // int32_t
		constexpr auto MessageId = 0x2c4; // int32_t
		constexpr auto Players = 0x2c8; // TArray<ObjectProperty>
		constexpr auto Enabled = 0x2d8; // char : 1
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x24c; // ObjectProperty
		constexpr auto Width = 0x254; // float
		constexpr auto Height = 0x258; // float
		constexpr auto TileX = 0x25c; // float
		constexpr auto TileY = 0x260; // float
		constexpr auto OffsetX = 0x264; // float
		constexpr auto OffsetY = 0x268; // float
		constexpr auto DecalRotation = 0x26c; // float
		constexpr auto FieldOfView = 0x270; // float
		constexpr auto NearPlane = 0x274; // float
		constexpr auto FarPlane = 0x278; // float
		constexpr auto Location = 0x27c; // FVector
		constexpr auto Orientation = 0x288; // FRotator
		constexpr auto HitLocation = 0x294; // FVector
		constexpr auto HitNormal = 0x2a0; // FVector
		constexpr auto HitTangent = 0x2ac; // FVector
		constexpr auto HitBinormal = 0x2b8; // FVector
		constexpr auto bNoClip = 0x2c4; // char : 1
		constexpr auto bFadeOutAtFarPlane = 0x2c4; // char : 1
		constexpr auto bStaticDecal = 0x2c4; // char : 1
		constexpr auto m_bIsGameplayDecal = 0x2c4; // char : 1
		constexpr auto bProjectOnBackfaces = 0x2c4; // char : 1
		constexpr auto bProjectOnHidden = 0x2c4; // char : 1
		constexpr auto bProjectOnBSP = 0x2c4; // char : 1
		constexpr auto bProjectOnStaticMeshes = 0x2c4; // char : 1
		constexpr auto bProjectOnSkeletalMeshes = 0x2c4; // char : 0
		constexpr auto bProjectOnTerrain = 0x2c4; // char : 0
		constexpr auto bFlipBackfaceDirection = 0x2c4; // char : 0
		constexpr auto bMovableDecal = 0x2c4; // char : 0
		constexpr auto bHasBeenAttached = 0x2c4; // char : 0
		constexpr auto bDecalMaterialSetAtRunTime = 0x2c4; // char : 0
		constexpr auto HitComponent = 0x2c8; // ComponentProperty
		constexpr auto HitBone = 0x2d0; // FName
		constexpr auto HitNodeIndex = 0x2d8; // int32_t
		constexpr auto HitLevelIndex = 0x2dc; // int32_t
		constexpr auto FracturedStaticMeshComponentIndex = 0x2e0; // int32_t
		constexpr auto HitNodeIndices = 0x2e4; // TArray<int32_t>
		constexpr auto DecalReceivers = 0x2f4; // TArray<FDecalReceiver>
		constexpr auto StaticReceivers = 0x304; // TArray<FPointer>
		constexpr auto ReleaseResourcesFence = 0x314; // FPointer
		constexpr auto Planes = 0x31c; // TArray<FPlane>
		constexpr auto DepthBias = 0x32c; // float
		constexpr auto SlopeScaleDepthBias = 0x330; // float
		constexpr auto OrbisDepthBias = 0x334; // float
		constexpr auto OrbisSlopeScaleDepthBias = 0x338; // float
		constexpr auto SortOrder = 0x33c; // int32_t
		constexpr auto BackfaceAngle = 0x340; // float
		constexpr auto BlendRange = 0x344; // FVector2D
		constexpr auto StreamingDistanceMultiplier = 0x34c; // float
		constexpr auto DecalTransform = 0x350; // EDecalTransform
		constexpr auto FilterMode = 0x351; // EFilterMode
		constexpr auto Filter = 0x354; // TArray<ObjectProperty>
		constexpr auto ReceiverImages = 0x364; // TArray<ComponentProperty>
		constexpr auto ParentRelativeLocation = 0x374; // FVector
		constexpr auto ParentRelativeOrientation = 0x380; // FRotator
		constexpr auto ParentRelLocRotMatrix = 0x390; // FMatrix
	}

	namespace n_UTexture2DComposite {
		constexpr auto SourceRegions = 0x100; // TArray<FSourceTexture2DRegion>
		constexpr auto MaxTextureSize = 0x110; // int32_t
		constexpr auto DestSizeX = 0x114; // int32_t
		constexpr auto DestSizeY = 0x118; // int32_t
	}

	namespace n_APComPerformanceCaptureGame {
		constexpr auto BasePerformanceCapture = 0x4cc; // ObjectProperty
		constexpr auto CurrentCaptureState = 0x4d4; // EPComPerformanceCaptureState
		constexpr auto NodesToCapture = 0x4d8; // TArray<ObjectProperty>
		constexpr auto StatsPerNode = 0x4e8; // TArray<FPComPerformanceCaptureStatsPerNode>
	}

	namespace n_UUIComponent_Quest {
		constexpr auto m_pQuestPanelButton = 0x120; // ObjectProperty
		constexpr auto m_pQuestDiscardButton = 0x128; // ObjectProperty
		constexpr auto m_mcProgressFrame = 0x130; // ObjectProperty
		constexpr auto m_mcQuestReward = 0x138; // ObjectProperty
		constexpr auto m_mcQuestProgressBar = 0x140; // ObjectProperty
		constexpr auto m_mcQuestProgressMask = 0x148; // ObjectProperty
		constexpr auto m_mcQuestTitle = 0x150; // ObjectProperty
		constexpr auto m_mcQuestType = 0x158; // ObjectProperty
		constexpr auto m_mcQuestIconRendered = 0x160; // ObjectProperty
		constexpr auto m_mcQuestIcon = 0x168; // ObjectProperty
		constexpr auto m_mcFWOTDIcon = 0x170; // ObjectProperty
		constexpr auto m_mcGlow = 0x178; // ObjectProperty
		constexpr auto m_mcNew = 0x180; // ObjectProperty
		constexpr auto m_mcGoalSequences = 0x188; // ObjectProperty [0x7]
		constexpr auto m_GoalSequenceBar = 0x1c0; // ObjectProperty
		constexpr auto m_mcQuestChestIcon = 0x1c8; // ObjectProperty
		constexpr auto m_mcRewardItem = 0x1d0; // ObjectProperty
		constexpr auto m_mcRewardItemRarity = 0x1d8; // ObjectProperty
		constexpr auto m_mcRewardItemIcon = 0x1e0; // ObjectProperty
		constexpr auto m_mcRewardItemImageStack = 0x1e8; // ObjectProperty
		constexpr auto m_mcRewardItemTexture = 0x1f0; // ObjectProperty
		constexpr auto m_mcRewardItemName = 0x1f8; // ObjectProperty
		constexpr auto m_mcRewardSubtitle = 0x200; // ObjectProperty
		constexpr auto m_mcQuestProgressText = 0x208; // ObjectProperty
		constexpr auto m_mcQuestDescription = 0x210; // ObjectProperty
		constexpr auto m_mcQuestRewardAmount = 0x218; // ObjectProperty
		constexpr auto m_mcQuestRewardCurrency1 = 0x220; // ObjectProperty
		constexpr auto m_mcQuestRewardAmount1 = 0x228; // ObjectProperty
		constexpr auto m_fSequenceOrigX = 0x230; // float
		constexpr auto m_fSequenceOrigY = 0x234; // float
		constexpr auto m_fSequenceOrigWidth = 0x238; // float
	}

	namespace n_UTgAIBehaviorAction_FollowCombatTarget {
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_UTgSeqAct_SetSkelPosture {
		constexpr auto m_Posture = 0x108; // TG_POSTURE
	}

	namespace n_UUIComponent_ShopListSectionHeader {
		constexpr auto m_sTimeLeft = 0x120; // FString
		constexpr auto m_mcTF = 0x130; // ObjectProperty
		constexpr auto m_mcTimeLeft = 0x138; // ObjectProperty
		constexpr auto m_mcFrame = 0x140; // ObjectProperty
		constexpr auto m_pCTA = 0x148; // ObjectProperty
	}

	namespace n_ASceneCaptureReflectActor {
		constexpr auto StaticMesh = 0x288; // ComponentProperty
		constexpr auto ReflectMaterialInst = 0x290; // ObjectProperty
	}

	namespace n_USeqAct_CastToFloat {
		constexpr auto Value = 0x108; // int32_t
		constexpr auto FloatResult = 0x10c; // float
	}

	namespace n_UParticleModuleTypeDataBeam {
		constexpr auto BeamMethod = 0x68; // EBeamMethod
		constexpr auto EndPointMethod = 0x69; // EBeamEndPointMethod
		constexpr auto Distance = 0x6c; // FRawDistributionFloat
		constexpr auto EndPoint = 0x90; // FRawDistributionVector
		constexpr auto TessellationFactor = 0xb4; // int32_t
		constexpr auto EmitterStrength = 0xb8; // FRawDistributionFloat
		constexpr auto TargetStrength = 0xdc; // FRawDistributionFloat
		constexpr auto EndPointDirection = 0x100; // FRawDistributionVector
		constexpr auto TextureTile = 0x124; // int32_t
		constexpr auto RenderGeometry = 0x128; // char : 1
		constexpr auto RenderDirectLine = 0x128; // char : 1
		constexpr auto RenderLines = 0x128; // char : 1
		constexpr auto RenderTessellation = 0x128; // char : 1
	}

	namespace n_ATgDevice_WYRMJets {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
		constexpr auto m_CachedBoosterDevice = 0xaf4; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_StopDevice {
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_ATgGameLaunch {
		constexpr auto LoginName = 0x4cc; // FString
		constexpr auto LoginPwd = 0x4dc; // FString
		constexpr auto SaveLoginName = 0x4ec; // char : 1
	}

	namespace n_UTgAIBehaviorAction_LookAtCombatTarget {
		constexpr auto bAllowAimNose = 0x94; // char : 1
		constexpr auto bHeadShot = 0x94; // char : 1
	}

	namespace n_ATgProj_GrumpyBomb {
		constexpr auto m_Silhouette = 0x56c; // ComponentProperty
		constexpr auto m_bSilhouetteInitialized = 0x574; // char : 1
		constexpr auto m_bSilhouetteAllowed = 0x574; // char : 1
		constexpr auto m_fPostLandDurationAccelerant = 0x578; // float
	}

	namespace n_USeqAct_MobileRemoveInputZone {
		constexpr auto ZoneName = 0x108; // FString
	}

	namespace n_UGFxEngine {
		constexpr auto GCReferences = 0x60; // TArray<FGCReference>
		constexpr auto RefCount = 0x70; // int32_t
		constexpr auto ForceGarbageCollectUponReleaseTextures = 0x74; // TArray<FName>
	}

	namespace n_USeqAct_SetSkelControlTarget {
		constexpr auto SkelControlName = 0x108; // FName
		constexpr auto TargetActors = 0x110; // TArray<ObjectProperty>
	}

	namespace n_UTgImpactFx {
		constexpr auto c_fMaxFxDistance = 0x60; // float
		constexpr auto c_bAlignToSurfaceNormal = 0x64; // char : 1
		constexpr auto c_EmptyImpact = 0x68; // FIMPACT_FX
		constexpr auto c_Impacts = 0x9c; // TArray<FIMPACT_FX>
	}

	namespace n_ATgDevice_ChainLightning {
		constexpr auto m_CachedInhand = 0xb04; // ObjectProperty
	}

	namespace n_UTgEffectGroup {
		constexpr auto m_nType = 0x60; // int32_t
		constexpr auto m_Target = 0x64; // ObjectProperty
		constexpr auto m_Instigator = 0x6c; // ObjectProperty
		constexpr auto m_nEffectGroupId = 0x74; // int32_t
		constexpr auto m_fLifeTime = 0x78; // float
		constexpr auto m_fModLifeTime = 0x7c; // float
		constexpr auto m_fLifeTimeIncreaseFromInstigator = 0x80; // float
		constexpr auto m_fApplyInterval = 0x84; // float
		constexpr auto m_Effects = 0x88; // TArray<ObjectProperty>
		constexpr auto m_nDamageType = 0x98; // int32_t
		constexpr auto m_eAttackType = 0x9c; // AttackType
		constexpr auto m_StunType = 0x9d; // EStunType
		constexpr auto m_bIsManaged = 0xa0; // char : 1
		constexpr auto m_bHasStealthEffect = 0xa0; // char : 1
		constexpr auto m_bDoesDamage = 0xa0; // char : 1
		constexpr auto m_bDoesDamageOverTime = 0xa0; // char : 1
		constexpr auto m_bContagious = 0xa0; // char : 1
		constexpr auto s_bActiveFlag = 0xa0; // char : 1
		constexpr auto s_bCriticalHitFlag = 0xa0; // char : 1
		constexpr auto m_bDeviceSpecificFlag = 0xa0; // char : 1
		constexpr auto m_bHasVisual = 0xa0; // char : 0
		constexpr auto m_bSupportsEffectSimulation = 0xa0; // char : 0
		constexpr auto m_fPercAbsorbedDamage = 0xa4; // float
		constexpr auto m_nApplicationType = 0xa8; // int32_t
		constexpr auto m_fApplicationValue = 0xac; // float
		constexpr auto m_fApplicationChance = 0xb0; // float
		constexpr auto m_nApplicationCategoryCode = 0xb4; // int32_t
		constexpr auto m_nBehaviorCategoryCode = 0xb8; // int32_t
		constexpr auto m_nReqDeviceInstanceId = 0xbc; // int32_t
		constexpr auto m_fBuffValue = 0xc0; // float
		constexpr auto m_fPhysicalPowerScaling = 0xc4; // float
		constexpr auto m_fMagicalPowerScaling = 0xc8; // float
		constexpr auto m_fLifetimeScaling = 0xcc; // float
		constexpr auto m_fLifetimeMax = 0xd0; // float
		constexpr auto m_nScalingType = 0xd4; // int32_t
		constexpr auto m_nTargetType = 0xd8; // int32_t
		constexpr auto m_nTargetAffectsType = 0xdc; // int32_t
		constexpr auto m_nHitSpecialSituationalType = 0xe0; // int32_t
		constexpr auto m_nNumStacks = 0xe4; // int32_t
		constexpr auto m_nNumMaxStacks = 0xe8; // int32_t
		constexpr auto s_NonContagiousEffectGroup = 0xec; // ObjectProperty
		constexpr auto m_Impact = 0xf4; // FImpactInfo
		constexpr auto m_nPosture = 0x174; // int32_t
		constexpr auto m_nFxAppliedId = 0x178; // int32_t
		constexpr auto m_nmDisplayGroup = 0x17c; // FName
		constexpr auto s_ManagedEffectListIndex = 0x184; // int32_t
		constexpr auto s_OwnerEffectManager = 0x188; // ObjectProperty
		constexpr auto m_nmDamageTypeClass = 0x190; // FName
		constexpr auto m_nSourceDeviceInstId = 0x198; // int32_t
		constexpr auto m_nSourceItemId = 0x19c; // int32_t
		constexpr auto s_fEGArmorHealth = 0x1a0; // float
		constexpr auto s_fEGArmorHealthMax = 0x1a4; // float
		constexpr auto s_fEGShieldHealth = 0x1a8; // float
		constexpr auto s_fEGShieldHealthMax = 0x1ac; // float
		constexpr auto m_Waveform = 0x1b0; // ObjectProperty
		constexpr auto m_pEffectGroupSetup = 0x1b8; // FPointer
		constexpr auto m_LastLifeTimeCalcInfo = 0x1c0; // FLifeTimeCalcInfo
	}

	namespace n_UTgSeqAct_SetUITextBox {
		constexpr auto TextBox_MessageID = 0x108; // int32_t
		constexpr auto TextBox_TargetSecondary = 0x10c; // char : 1
		constexpr auto TextBox_UseDuration = 0x10c; // char : 1
		constexpr auto TextBox_AllowEscape = 0x10c; // char : 1
		constexpr auto TextBox_MessageType = 0x110; // AlertType
	}

	namespace n_ATgDeploy_WardersField {
		constexpr auto r_fRadiusForFX = 0x47c; // float
		constexpr auto r_fRadiusScaleForDecal = 0x480; // float
		constexpr auto r_bEarthenGuardActive = 0x484; // char : 1
	}

	namespace n_AGameCrowdInteractionPoint {
		constexpr auto bIsEnabled = 0x280; // char : 1
		constexpr auto CylinderComponent = 0x284; // ComponentProperty
	}

	namespace n_UTgSeqAct_HackBot {
		constexpr auto m_ControlPawn = 0x108; // ObjectProperty
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_USoundCue {
		constexpr auto SoundClass = 0x60; // FName
		constexpr auto SoundClassName = 0x68; // ESoundClassName
		constexpr auto bDebug = 0x6c; // char : 1
		constexpr auto m_bFadeOutWhenStopped = 0x6c; // char : 1
		constexpr auto FirstNode = 0x70; // ObjectProperty
		constexpr auto EditorData = 0x78; // TMap<None, None>
		constexpr auto MaxAudibleDistance = 0xc0; // float
		constexpr auto VolumeMultiplier = 0xc4; // float
		constexpr auto PitchMultiplier = 0xc8; // float
		constexpr auto Duration = 0xcc; // float
		constexpr auto FaceFXAnimSetRef = 0xd0; // ObjectProperty
		constexpr auto FaceFXGroupName = 0xd8; // FString
		constexpr auto FaceFXAnimName = 0xe8; // FString
		constexpr auto MaxConcurrentPlayCount = 0xf8; // int32_t
		constexpr auto CurrentPlayCount = 0xfc; // int32_t
		constexpr auto SoundGroup = 0x100; // FName
		constexpr auto m_fFadeOutTime = 0x108; // float
		constexpr auto m_fFadeToPct = 0x10c; // float
		constexpr auto m_fFadePitchToPct = 0x110; // float
		constexpr auto m_StereoSoundCue = 0x114; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_NearObjective {
		constexpr auto m_bIsActive = 0xc8; // char : 1
		constexpr auto m_CachedCharacterPawn = 0xcc; // ObjectProperty
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x68; // int32_t
		constexpr auto SheetsPerTrail = 0x6c; // int32_t
		constexpr auto MaxTrailCount = 0x70; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x74; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x78; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x78; // char : 1
		constexpr auto bClipSourceSegement = 0x78; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x78; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x78; // char : 1
		constexpr auto bSpawnInitialParticle = 0x78; // char : 1
		constexpr auto bRenderGeometry = 0x78; // char : 1
		constexpr auto bRenderSpawnPoints = 0x78; // char : 1
		constexpr auto bRenderTangents = 0x78; // char : 0
		constexpr auto bRenderTessellation = 0x78; // char : 0
		constexpr auto bEnableTangentDiffInterpScale = 0x78; // char : 0
		constexpr auto RenderAxis = 0x7c; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x80; // float
		constexpr auto TilingDistance = 0x84; // float
		constexpr auto DistanceTessellationStepSize = 0x88; // float
		constexpr auto TangentTessellationScalar = 0x8c; // float
	}

	namespace n_UTgAnimNotify_ToggleSocketSpecialFX {
		constexpr auto m_DisplayGroupName = 0x68; // FName
		constexpr auto m_EquipSlot = 0x70; // int32_t
		constexpr auto m_bActivateFxGroup = 0x74; // char : 1
	}

	namespace n_UDistributionVectorUniformRange {
		constexpr auto MaxHigh = 0x7c; // FVector
		constexpr auto MaxLow = 0x88; // FVector
		constexpr auto MinHigh = 0x94; // FVector
		constexpr auto MinLow = 0xa0; // FVector
	}

	namespace n_UMaterialInterface {
		constexpr auto ParentRefFence = 0x60; // FRenderCommandFence_Mirror
		constexpr auto LightmassSettings = 0x64; // FLightmassMaterialInterfaceSettings
		constexpr auto bHasQualitySwitch = 0x80; // char : 1
		constexpr auto bRunTrimmingTool = 0x80; // char : 1
		constexpr auto bUseCachedCircleVerts = 0x80; // char : 1
		constexpr auto bScanRedChannel = 0x80; // char : 1
		constexpr auto bScanGreenChannel = 0x80; // char : 1
		constexpr auto bScanBlueChannel = 0x80; // char : 1
		constexpr auto bScanAlphaChannel = 0x80; // char : 1
		constexpr auto bClearData = 0x80; // char : 1
		constexpr auto bAutoFlattenMobile = 0x80; // char : 0
		constexpr auto bAutoFlattenMobileNormalTexture = 0x80; // char : 0
		constexpr auto bMobileAllowFog = 0x80; // char : 0
		constexpr auto bGenerateSubUV = 0x80; // char : 0
		constexpr auto bUseMobileSpecular = 0x80; // char : 0
		constexpr auto bUseMobileVertexSpecular = 0x80; // char : 0
		constexpr auto bUseMobilePixelSpecular = 0x80; // char : 0
		constexpr auto bUseMobileBumpOffset = 0x80; // char : 0
		constexpr auto bLockColorBlending = 0x80; // char : 0
		constexpr auto bUseMobileUniformColorMultiply = 0x80; // char : 0
		constexpr auto bUseMobileVertexColorMultiply = 0x80; // char : 0
		constexpr auto bUseMobileDetailNormal = 0x80; // char : 0
		constexpr auto bBaseTextureTransformed = 0x80; // char : 0
		constexpr auto bEmissiveTextureTransformed = 0x80; // char : 0
		constexpr auto bNormalTextureTransformed = 0x80; // char : 0
		constexpr auto bMaskTextureTransformed = 0x80; // char : 0
		constexpr auto bDetailTextureTransformed = 0x80; // char : 0
		constexpr auto bUseMobileWaveVertexMovement = 0x80; // char : 0
		constexpr auto bMobileEnableBounceLight = 0x80; // char : 0
		constexpr auto bUseMobileLandscapeMonochromeLayerBlending = 0x80; // char : 0
		constexpr auto TrimmedVertices = 0x84; // TArray<FVector2D>
		constexpr auto FlattenBackgroundColor = 0x94; // FColor
		constexpr auto MobileBaseTexture = 0x98; // ObjectProperty
		constexpr auto FlattenedTexture = 0xa0; // ObjectProperty
		constexpr auto MobileBaseTextureTexCoordsSource = 0xa8; // EMobileTexCoordsSource
		constexpr auto MobileAmbientOcclusionSource = 0xa9; // EMobileAmbientOcclusionSource
		constexpr auto MobileSpecularMask = 0xaa; // EMobileSpecularMask
		constexpr auto MobileEmissiveColorSource = 0xab; // EMobileEmissiveColorSource
		constexpr auto MobileEmissiveMaskSource = 0xac; // EMobileValueSource
		constexpr auto MobileEnvironmentMaskSource = 0xad; // EMobileValueSource
		constexpr auto MobileEnvironmentBlendMode = 0xae; // EMobileEnvironmentBlendMode
		constexpr auto MobileRimLightingMaskSource = 0xaf; // EMobileValueSource
		constexpr auto MobileMaskTextureTexCoordsSource = 0xb0; // EMobileTexCoordsSource
		constexpr auto MobileAlphaValueSource = 0xb1; // EMobileAlphaValueSource
		constexpr auto MobileDetailTextureTexCoordsSource = 0xb2; // EMobileTexCoordsSource
		constexpr auto MobileTextureBlendFactorSource = 0xb3; // EMobileTextureBlendFactorSource
		constexpr auto MobileColorMultiplySource = 0xb4; // EMobileColorMultiplySource
		constexpr auto MobileNormalTexture = 0xb8; // ObjectProperty
		constexpr auto SubUVFrameRate = 0xc0; // float
		constexpr auto SubUVFrameCountAlongAxes = 0xc4; // int32_t
		constexpr auto SubUVFrameSize = 0xc8; // float
		constexpr auto MobileSpecularColor = 0xcc; // FLinearColor
		constexpr auto MobileSpecularPower = 0xdc; // float
		constexpr auto MobileEmissiveTexture = 0xe0; // ObjectProperty
		constexpr auto MobileEmissiveColor = 0xe8; // FLinearColor
		constexpr auto MobileEnvironmentTexture = 0xf8; // ObjectProperty
		constexpr auto MobileEnvironmentAmount = 0x100; // float
		constexpr auto MobileEnvironmentColor = 0x104; // FLinearColor
		constexpr auto MobileEnvironmentFresnelAmount = 0x114; // float
		constexpr auto MobileEnvironmentFresnelExponent = 0x118; // float
		constexpr auto MobileRimLightingStrength = 0x11c; // float
		constexpr auto MobileRimLightingExponent = 0x120; // float
		constexpr auto MobileRimLightingColor = 0x124; // FLinearColor
		constexpr auto MobileBumpOffsetReferencePlane = 0x134; // float
		constexpr auto MobileBumpOffsetHeightRatio = 0x138; // float
		constexpr auto MobileMaskTexture = 0x13c; // ObjectProperty
		constexpr auto MobileOpacityMultiplier = 0x144; // float
		constexpr auto MobileDetailTexture = 0x148; // ObjectProperty
		constexpr auto MobileDetailTexture2 = 0x150; // ObjectProperty
		constexpr auto MobileDetailTexture3 = 0x158; // ObjectProperty
		constexpr auto DefaultUniformColor = 0x160; // FLinearColor
		constexpr auto MobileDefaultUniformColor = 0x170; // FLinearColor
		constexpr auto TransformCenterX = 0x180; // float
		constexpr auto MobileTransformCenterX = 0x184; // float
		constexpr auto TransformCenterY = 0x188; // float
		constexpr auto MobileTransformCenterY = 0x18c; // float
		constexpr auto PannerSpeedX = 0x190; // float
		constexpr auto MobilePannerSpeedX = 0x194; // float
		constexpr auto PannerSpeedY = 0x198; // float
		constexpr auto MobilePannerSpeedY = 0x19c; // float
		constexpr auto RotateSpeed = 0x1a0; // float
		constexpr auto MobileRotateSpeed = 0x1a4; // float
		constexpr auto FixedScaleX = 0x1a8; // float
		constexpr auto MobileFixedScaleX = 0x1ac; // float
		constexpr auto FixedScaleY = 0x1b0; // float
		constexpr auto MobileFixedScaleY = 0x1b4; // float
		constexpr auto SineScaleX = 0x1b8; // float
		constexpr auto MobileSineScaleX = 0x1bc; // float
		constexpr auto SineScaleY = 0x1c0; // float
		constexpr auto MobileSineScaleY = 0x1c4; // float
		constexpr auto SineScaleFrequencyMultipler = 0x1c8; // float
		constexpr auto MobileSineScaleFrequencyMultipler = 0x1cc; // float
		constexpr auto FixedOffsetX = 0x1d0; // float
		constexpr auto MobileFixedOffsetX = 0x1d4; // float
		constexpr auto FixedOffsetY = 0x1d8; // float
		constexpr auto MobileFixedOffsetY = 0x1dc; // float
		constexpr auto MobileTangentVertexFrequencyMultiplier = 0x1e0; // float
		constexpr auto MobileVerticalFrequencyMultiplier = 0x1e4; // float
		constexpr auto MobileMaxVertexMovementAmplitude = 0x1e8; // float
		constexpr auto MobileSwayFrequencyMultiplier = 0x1ec; // float
		constexpr auto MobileSwayMaxAngle = 0x1f0; // float
		constexpr auto MobileDirectionalLightDirection = 0x1f4; // FVector
		constexpr auto MobileDirectionalLightBrightness = 0x200; // float
		constexpr auto MobileDirectionalLightColor = 0x204; // FColor
		constexpr auto MobileBounceLightDirection = 0x208; // FVector
		constexpr auto MobileBounceLightBrightness = 0x214; // float
		constexpr auto MobileBounceLightColor = 0x218; // FColor
		constexpr auto MobileSkyLightBrightness = 0x21c; // float
		constexpr auto MobileSkyLightColor = 0x220; // FColor
		constexpr auto MobileLandscapeLayerNames = 0x224; // FName [0x4]
		constexpr auto MobileLandscapeMonochomeLayerColors = 0x244; // FColor [0x4]
	}

	namespace n_USeqAct_ModifyCover {
		constexpr auto Slots = 0x108; // TArray<int32_t>
		constexpr auto ManualCoverType = 0x118; // ECoverType
		constexpr auto bManualAdjustPlayersOnly = 0x11c; // char : 1
	}

	namespace n_ATgRepInfo_Deployable {
		constexpr auto r_nHealthCurrent = 0x280; // int32_t
		constexpr auto r_nHealthMaximum = 0x284; // int32_t
		constexpr auto r_fDeployMaxHealthPCT = 0x288; // float
		constexpr auto r_nDeployableId = 0x28c; // int32_t
		constexpr auto r_nUniqueDeployableId = 0x290; // int32_t
		constexpr auto r_fLifespanInitial = 0x294; // float
		constexpr auto r_fLifespanSync = 0x298; // float
		constexpr auto r_DeployableOwner = 0x29c; // ObjectProperty
		constexpr auto r_InstigatorInfo = 0x2a4; // ObjectProperty
		constexpr auto r_TaskforceInfo = 0x2ac; // ObjectProperty
		constexpr auto r_bOwnedByTaskforce = 0x2b4; // char : 1
		constexpr auto c_bReceivedOwner = 0x2b4; // char : 1
		constexpr auto r_bMinimapOnlyOwnerSee = 0x2b4; // char : 1
		constexpr auto r_bInDestroyedState = 0x2b4; // char : 1
		constexpr auto c_bShowHUDLifespanTimer = 0x2b4; // char : 1
		constexpr auto r_ApproxLocation = 0x2b8; // FVector
		constexpr auto c_HudInfo = 0x2c4; // FTG_HUD_INFO
		constexpr auto r_bVisibleOnMap = 0x2c8; // char [0x3]
		constexpr auto r_eDeployableOverlayIcon = 0x2cb; // DeployableOverlayIcon
		constexpr auto r_eDeployableOverlayState = 0x2cc; // DeployableOverlayState
		constexpr auto r_fVisionRange = 0x2d0; // float
		constexpr auto r_nDeployableOverlayDisplayMask = 0x2d4; // int32_t
		constexpr auto r_fDeployableOverlayEnemyViewDist = 0x2d8; // float
		constexpr auto c_fBarragePercent = 0x2dc; // float
	}

	namespace n_ATgDevice_Failsafe {
		constexpr auto m_RocketBootsDevice = 0xaec; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Stasis {
		constexpr auto m_bNeedsLoopActivation = 0x2bc; // char : 1
		constexpr auto m_fFireStartTime = 0x2c0; // float
		constexpr auto m_fLoopDelay = 0x2c4; // float
	}

	namespace n_ATgDeploy_OppressorMine {
		constexpr auto m_CachedPawnOwner = 0x448; // ObjectProperty
		constexpr auto m_CachedEnemyTaskForce = 0x450; // ObjectProperty
		constexpr auto r_CurrentTargets = 0x458; // ObjectProperty [0x5]
		constexpr auto m_nBeamFXID = 0x480; // int32_t
		constexpr auto m_BeamFXs = 0x484; // ObjectProperty [0x5]
		constexpr auto m_bNeedsNetDirtyUpdate = 0x4ac; // char : 1
		constexpr auto r_StuckRotation = 0x4b0; // FRotator
		constexpr auto r_CartOffset = 0x4bc; // FVector
		constexpr auto m_fAmplitudeRadiusScale = 0x4c8; // float
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromDamagingDeployable {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_UUIData_List {
		constexpr auto pData = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UFracturedStaticMeshComponent {
		constexpr auto FragmentNeighborsVisible = 0x338; // TArray<char>
		constexpr auto VisibleBox = 0x348; // FBox
		constexpr auto bUseSkinnedRendering = 0x364; // char : 1
		constexpr auto bUseVisibleVertsForBounds = 0x364; // char : 1
		constexpr auto bTopFragmentsRootNonDestroyable = 0x364; // char : 1
		constexpr auto bBottomFragmentsRootNonDestroyable = 0x364; // char : 1
		constexpr auto TopBottomFragmentDistThreshold = 0x368; // float
		constexpr auto LoseChunkOutsideMaterialOverride = 0x36c; // ObjectProperty
		constexpr auto FragmentBoundsMaxZ = 0x374; // float
		constexpr auto FragmentBoundsMinZ = 0x378; // float
		constexpr auto SkinnedComponent = 0x37c; // ComponentProperty
	}

	namespace n_USeqAct_Trace {
		constexpr auto bTraceActors = 0x108; // char : 1
		constexpr auto bTraceWorld = 0x108; // char : 1
		constexpr auto TraceExtent = 0x10c; // FVector
		constexpr auto StartOffset = 0x118; // FVector
		constexpr auto EndOffset = 0x124; // FVector
		constexpr auto HitObject = 0x130; // ObjectProperty
		constexpr auto Distance = 0x138; // float
		constexpr auto HitLocation = 0x13c; // FVector
	}

	namespace n_UTgAIBehaviorSensor_Fog {
		constexpr auto UnsafeRatio = 0x94; // float
		constexpr auto SafePercent = 0x98; // float
	}

	namespace n_UUIBattlePassLevelUp {
		constexpr auto m_nOffset = 0x244; // int32_t
		constexpr auto m_nHoverItem = 0x248; // int32_t
		constexpr auto m_nBundleLevels = 0x24c; // int32_t
		constexpr auto m_nPurchaseLevels = 0x250; // int32_t
		constexpr auto m_fWaitTime = 0x254; // float
		constexpr auto m_fWaitTimer = 0x258; // float
		constexpr auto m_fPurchaseFlash = 0x25c; // float
		constexpr auto m_fConfirmationTime = 0x260; // float
		constexpr auto m_fConfirmationTimer = 0x264; // float
		constexpr auto m_bControllerButtonHeld = 0x268; // char : 1
		constexpr auto m_bIsShopLevelsBundle = 0x268; // char : 1
		constexpr auto m_nItems = 0x26c; // TArray<int32_t>
		constexpr auto m_mcBlocker = 0x27c; // ObjectProperty
		constexpr auto m_mcPanel = 0x284; // ObjectProperty
		constexpr auto m_mcPanelBack = 0x28c; // ObjectProperty
		constexpr auto m_mcPanelName = 0x294; // ObjectProperty
		constexpr auto m_mcPanelDesc = 0x29c; // ObjectProperty
		constexpr auto m_mcPanelType = 0x2a4; // ObjectProperty
		constexpr auto m_mcPanelIcon = 0x2ac; // ObjectProperty
		constexpr auto m_mcPanelFrame = 0x2b4; // ObjectProperty
		constexpr auto m_mcPanelImage = 0x2bc; // ObjectProperty
		constexpr auto m_mcPanelLevel = 0x2c4; // ObjectProperty
		constexpr auto m_mcPanelTotal = 0x2cc; // ObjectProperty
		constexpr auto m_mcPanelTotalCrowns = 0x2d4; // ObjectProperty
		constexpr auto m_mcPanelHoverName = 0x2dc; // ObjectProperty
		constexpr auto m_mcPanelHoverDesc = 0x2e4; // ObjectProperty
		constexpr auto m_mcPanelIconLevelA = 0x2ec; // ObjectProperty
		constexpr auto m_mcPanelIconLevelB = 0x2f4; // ObjectProperty
		constexpr auto m_mcPanelIconLevelC = 0x2fc; // ObjectProperty
		constexpr auto m_mcPanelPurchase = 0x304; // ObjectProperty
		constexpr auto m_mcPanelPurchaseFlash = 0x30c; // ObjectProperty
		constexpr auto m_mcPanelPurchasePrice = 0x314; // ObjectProperty
		constexpr auto m_mcPanelPurchasePriceDiscount = 0x31c; // ObjectProperty
		constexpr auto m_mcPanelPurchaseHold = 0x324; // ObjectProperty
		constexpr auto m_mcPanelPurchaseMask = 0x32c; // ObjectProperty
		constexpr auto m_mcPanelPurchaseKey = 0x334; // ObjectProperty
		constexpr auto m_mcPanelPurchaseKeyHoldBack = 0x33c; // ObjectProperty
		constexpr auto m_mcPanelArrow = 0x344; // ObjectProperty [0x2]
		constexpr auto m_mcItem = 0x354; // ObjectProperty [0x5]
		constexpr auto m_mcItemIcon = 0x37c; // ObjectProperty [0x5]
		constexpr auto m_mcItemFrame = 0x3a4; // ObjectProperty [0x5]
		constexpr auto m_mcItemActive = 0x3cc; // ObjectProperty [0x5]
		constexpr auto m_mcItemRarity = 0x3f4; // ObjectProperty [0x5]
		constexpr auto m_mcItemTexture = 0x41c; // ObjectProperty [0x5]
		constexpr auto m_mcItemIconFrame = 0x444; // ObjectProperty [0x5]
		constexpr auto m_pInputGroup = 0x46c; // ObjectProperty
		constexpr auto m_pPurchaseGroup = 0x474; // ObjectProperty
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x68; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget {
		constexpr auto bMustBeEnemy = 0x94; // char : 1
		constexpr auto bMustBePhoenix = 0x94; // char : 1
		constexpr auto bMustBeSameLane = 0x94; // char : 1
	}

	namespace n_UPComMusicTheme {
		constexpr auto DefaultTrack = 0x60; // FMusicTrackStruct
		constexpr auto MusicEvents = 0x8c; // TArray<FMusicEvent>
	}

	namespace n_UUIComponent_ItemStatsEntry {
		constexpr auto m_sItemStatsLabels = 0x120; // FString [0x7]
		constexpr auto m_mcIcon = 0x190; // ObjectProperty
		constexpr auto m_mcTF = 0x198; // ObjectProperty
	}

	namespace n_ALandscapeProxy {
		constexpr auto LandscapeGuid = 0x280; // FGuid
		constexpr auto MaxLODLevel = 0x290; // int32_t
		constexpr auto DefaultPhysMaterial = 0x294; // ObjectProperty
		constexpr auto StreamingDistanceMultiplier = 0x29c; // float
		constexpr auto LandscapeMaterial = 0x2a0; // ObjectProperty
		constexpr auto LODDistanceFactor = 0x2a8; // float
		constexpr auto LandscapeComponents = 0x2ac; // TArray<ComponentProperty>
		constexpr auto CollisionComponents = 0x2bc; // TArray<ComponentProperty>
		constexpr auto MaterialInstanceConstantMap = 0x2cc; // TMap<None, None>
		constexpr auto WeightmapUsageMap = 0x314; // TMap<None, None>
		constexpr auto StaticLightingResolution = 0x35c; // float
		constexpr auto LandscapeActor = 0x360; // ObjectProperty
		constexpr auto bIncludeInManualZPrepass = 0x368; // char : 1
		constexpr auto bIsProxy = 0x368; // char : 1
		constexpr auto bIsSetup = 0x368; // char : 1
		constexpr auto bResetup = 0x368; // char : 1
		constexpr auto bIsMovingToLevel = 0x368; // char : 1
		constexpr auto ActorLayerNames = 0x36c; // TArray<FName>
		constexpr auto LightmassSettings = 0x37c; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x398; // int32_t
		constexpr auto MobileLODBias = 0x39c; // int32_t
		constexpr auto LayerInfoObjs = 0x3a0; // TArray<FLandscapeLayerStruct>
		constexpr auto ComponentSizeQuads = 0x3b0; // int32_t
		constexpr auto SubsectionSizeQuads = 0x3b4; // int32_t
		constexpr auto NumSubsections = 0x3b8; // int32_t
	}

	namespace n_UTgSkelCon_CCD_IK_FootPlacement {
		constexpr auto NumBones = 0xd0; // int32_t
		constexpr auto MaxPerBoneIterations = 0xd4; // int32_t
		constexpr auto IterationsCount = 0xd8; // int32_t
		constexpr auto Precision = 0xdc; // float
		constexpr auto bStartFromTail = 0xe0; // char : 1
		constexpr auto bNoTurnOptimization = 0xe0; // char : 1
		constexpr auto bAllowStretching = 0xe0; // char : 1
		constexpr auto bInvertFootUpAxis = 0xe0; // char : 1
		constexpr auto bOrientFootToGround = 0xe0; // char : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0xe0; // char : 1
		constexpr auto m_bUseCachedFootOffset = 0xe0; // char : 1
		constexpr auto JointConstraints = 0xe4; // TArray<FJointConstraintInformation>
		constexpr auto MaxAngleSteps = 0xf4; // float
		constexpr auto MaxStretchSteps = 0xf8; // float
		constexpr auto FootOffset = 0xfc; // float
		constexpr auto FootUpAxis = 0x100; // EAxis
		constexpr auto FootRotOffset = 0x104; // FRotator
		constexpr auto MaxUpAdjustment = 0x110; // float
		constexpr auto MaxDownAdjustment = 0x114; // float
		constexpr auto MaxFootOrientAdjust = 0x118; // float
		constexpr auto EffectorLocation = 0x11c; // FVector
		constexpr auto m_vCachedFootOffset = 0x128; // FVector
	}

	namespace n_UTgAchievement_FromTheGrave {
		constexpr auto KillerPawnId = 0x90; // int32_t
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x60; // float
		constexpr auto PlayAudioComp = 0x64; // ComponentProperty
	}

	namespace n_UGFxAction_GetVariable {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_UTgDeviceForm_CombatSlide {
		constexpr auto m_fTransitionTime = 0x2bc; // float
	}

	namespace n_UGFxObject {
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto Value = 0x68; // int32_t [0xc]
		constexpr auto m_nIndex = 0x98; // int32_t
		constexpr auto m_nFunction = 0x9c; // int32_t
		constexpr auto m_bMuteSound = 0xa0; // char : 1
		constexpr auto m_bOrigVisible = 0xa0; // char : 1
		constexpr auto m_bUseCachedDisplayInfo = 0xa0; // char : 1
		constexpr auto m_bHasCallbacksBound = 0xa0; // char : 1
		constexpr auto m_fAnimSize = 0xa4; // float
		constexpr auto m_fOrigX = 0xa8; // float
		constexpr auto m_fOrigY = 0xac; // float
		constexpr auto m_fOrigWidth = 0xb0; // float
		constexpr auto m_fOrigHeight = 0xb4; // float
		constexpr auto m_fOrigScaleX = 0xb8; // float
		constexpr auto m_fOrigScaleY = 0xbc; // float
		constexpr auto m_fOrigAlpha = 0xc0; // float
		constexpr auto m_DebugName = 0xc4; // FName
		constexpr auto m_CachedDisplayInfo = 0xcc; // FASDisplayInfo
		constexpr auto SubWidgetBindings = 0xf8; // TArray<FGFxWidgetBinding>
		constexpr auto m_GFxObjectPool = 0x108; // TArray<FGFxObjectPoolEntry>
	}

	namespace n_UCloudStorageBaseCloudSaveSystemKVS {
		constexpr auto CloudStorage = 0x60; // ObjectProperty
	}

	namespace n_UApexDestructibleDamageParameters {
		constexpr auto DamageMap = 0x60; // TArray<FDamagePair>
	}

	namespace n_ATgWeaponMeshActor {
		constexpr auto m_OwningPawn = 0x280; // ObjectProperty
		constexpr auto m_WeaponMesh1PClass = 0x288; // UTgSkeletalMeshComponent_Weapon*
		constexpr auto m_WeaponMesh1P = 0x290; // ComponentProperty
		constexpr auto m_WeaponMesh3PClass = 0x298; // UTgSkeletalMeshComponent_Weapon*
		constexpr auto m_WeaponMesh3P = 0x2a0; // ComponentProperty
		constexpr auto m_SimpleTransitionerNodes1P = 0x2a8; // TArray<ObjectProperty>
		constexpr auto m_DeviceModeBlendNodes = 0x2b8; // TArray<ObjectProperty>
		constexpr auto m_FitToDurationNodes = 0x2c8; // TArray<ObjectProperty>
		constexpr auto m_RealmCharacterNodes = 0x2d8; // TArray<ObjectProperty>
		constexpr auto m_TriggerCameraAnimNodes = 0x2e8; // TArray<ObjectProperty>
		constexpr auto PoseTransitioner = 0x2f8; // ObjectProperty
		constexpr auto m_PrimaryWeaponBlendNode = 0x300; // ObjectProperty
		constexpr auto m_PawnMeshRecoilBlendNode = 0x308; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshSimpleTransitionerNodes = 0x318; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshFitToDurationNodes = 0x328; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshRealmCharacterNodes = 0x338; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshTriggerCameraAnimNodes = 0x348; // TArray<ObjectProperty>
		constexpr auto m_PawnDeviceModeBlendNodes = 0x358; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshBlendByFireTypeNodes = 0x368; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshAimOffsets = 0x378; // TArray<ObjectProperty>
		constexpr auto m_PawnMovementAbilityNodes = 0x388; // TArray<ObjectProperty>
		constexpr auto m_PawnWeaponSwapNodes = 0x398; // TArray<ObjectProperty>
		constexpr auto m_WeaponRealmCharacterNodes = 0x3a8; // TArray<ObjectProperty>
		constexpr auto m_nEquipSlot = 0x3b8; // int32_t
		constexpr auto m_nDeviceId = 0x3bc; // int32_t
		constexpr auto m_MeshAsmId1P = 0x3c0; // int32_t
		constexpr auto m_MeshAsmId3P = 0x3c4; // int32_t
		constexpr auto m_WeaponClass = 0x3c8; // ATgDevice*
		constexpr auto m_PlayFireEffectsOn = 0x3d0; // TG_PLAY_FIRE_EFFECT_ON [0x14]
		constexpr auto m_ActiveEquipPoint = 0x3e4; // TG_EQUIP_POINT
		constexpr auto Current1pAttachState = 0x3e5; // EFirstPersonWeaponAttachState
		constexpr auto m_bShouldLoopingMuzzleTrace = 0x3e8; // char : 1
		constexpr auto m_bUseSocketForCameraAttach = 0x3e8; // char : 1
		constexpr auto m_bProceduralBob = 0x3e8; // char : 1
		constexpr auto m_bIsFOVZoomed = 0x3e8; // char : 1
		constexpr auto m_bFlourishBlocked = 0x3e8; // char : 1
		constexpr auto m_bIsHoldingBeacon = 0x3e8; // char : 1
		constexpr auto m_bWasViewTargetLastTick = 0x3e8; // char : 1
		constexpr auto m_bUseCameraAnims = 0x3e8; // char : 1
		constexpr auto c_bEnemyMatLoaded = 0x3e8; // char : 0
		constexpr auto m_bFullScreenScope = 0x3e8; // char : 0
		constexpr auto m_fBobMult1 = 0x3ec; // float
		constexpr auto m_fBobMult2 = 0x3f0; // float
		constexpr auto m_HandsMesh = 0x3f4; // ComponentProperty
		constexpr auto m_HeadMesh1P = 0x3fc; // ComponentProperty
		constexpr auto m_v2WeaponLagAimOffset = 0x404; // FVector2D
		constexpr auto m_nMaxWeaponLag = 0x40c; // FVector2D
		constexpr auto m_v2WeaponLagInterpSpeed = 0x414; // FVector2D
		constexpr auto m_v2WeaponLagSmoothingFactor = 0x41c; // FVector2D
		constexpr auto m_rLastRotation = 0x424; // FRotator
		constexpr auto m_fSmoothedAimOffset = 0x430; // FVector2D
		constexpr auto m_fSmoothAimFactor = 0x438; // float
		constexpr auto m_FireCameraShake = 0x43c; // ObjectProperty
		constexpr auto m_nTracerCounter = 0x444; // int32_t
		constexpr auto m_nTracerFrequency = 0x448; // int32_t
		constexpr auto m_TracerName = 0x44c; // FName
		constexpr auto m_fTracerLifetime = 0x454; // float
		constexpr auto m_HitTargetName = 0x458; // FName
		constexpr auto m_HitWallName = 0x460; // FName
		constexpr auto m_WhizbyName = 0x468; // FName
		constexpr auto m_BeamEmitterEndPointOffset = 0x470; // float
		constexpr auto m_nBeaconMeshId = 0x474; // int32_t
		constexpr auto m_HitReactionSkelControls = 0x478; // TArray<ObjectProperty>
		constexpr auto m_QueuedImpactEffects = 0x488; // TArray<FQueuedImpactEffect>
		constexpr auto m_LandSkelControl = 0x498; // ObjectProperty
		constexpr auto m_GameplayCurves = 0x4a0; // ObjectProperty
		constexpr auto m_FlyingSkelControl = 0x4a8; // ObjectProperty
		constexpr auto m_WeaponDownSkelControl = 0x4b0; // ObjectProperty
		constexpr auto m_JumpSkelControl = 0x4b8; // ObjectProperty
		constexpr auto m_DoubleJumpSkelControl = 0x4c0; // ObjectProperty
		constexpr auto m_fDesiredZoomMeshFOV = 0x4c8; // float
		constexpr auto m_fDesiredZoomViewFOV = 0x4cc; // float
		constexpr auto m_fADSZoomInTime = 0x4d0; // float
		constexpr auto m_fADSZoomOutTime = 0x4d4; // float
		constexpr auto m_vZoomMeshOffset = 0x4d8; // FVector
		constexpr auto m_MuzzleFlashLight = 0x4e4; // ComponentProperty
		constexpr auto m_RecoilSkelControls = 0x4ec; // TArray<ObjectProperty>
		constexpr auto m_nAnimSetPackageName = 0x4fc; // FName
	}

	namespace n_ATgDevice_MarkAndRecall {
		constexpr auto m_markedLocation = 0xaec; // FVector
		constexpr auto m_markedRotation = 0xaf8; // FRotator
		constexpr auto m_bMarked = 0xb04; // char : 1
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x8c; // float
		constexpr auto DistributeThreshold = 0x90; // float
	}

	namespace n_ATgPhysAnimTestActor {
		constexpr auto LowerBoneNames = 0x280; // TArray<FName>
		constexpr auto LinearBoneSpringNames = 0x290; // TArray<FName>
		constexpr auto AngularBoneSpringNames = 0x2a0; // TArray<FName>
		constexpr auto SkeletalMeshComponent = 0x2b0; // ComponentProperty
		constexpr auto CurrentState = 0x2b8; // EPATAState
		constexpr auto bBlendToGetUp = 0x2bc; // char : 1
		constexpr auto bBlendingBack = 0x2bc; // char : 1
		constexpr auto bRampingDownMotors = 0x2bc; // char : 1
		constexpr auto bNextPokeKnocksDown = 0x2bc; // char : 1
		constexpr auto GetUpBlendStartTime = 0x2c0; // float
		constexpr auto GetUpBlendTime = 0x2c4; // float
		constexpr auto GetUpToIdleTime = 0x2c8; // float
		constexpr auto ActorOriginHeight = 0x2cc; // float
		constexpr auto PokePauseTime = 0x2d0; // float
		constexpr auto PokeBlendTime = 0x2d4; // float
		constexpr auto BlendBackStartTime = 0x2d8; // float
		constexpr auto MotorDownStartTime = 0x2dc; // float
		constexpr auto MotorDownTime = 0x2e0; // float
		constexpr auto MotorDownAnimTime = 0x2e4; // float
		constexpr auto BlendStaggerAnimTime = 0x2e8; // float
		constexpr auto StaggerSpeedAdj = 0x2ec; // float
		constexpr auto StaggerVel = 0x2f0; // float
		constexpr auto MoveDir = 0x2f4; // FVector
		constexpr auto AngularHipDriveScale = 0x300; // float
		constexpr auto StaggerMuscleScale = 0x304; // float
		constexpr auto blendNode = 0x308; // ObjectProperty
		constexpr auto GetUpNode = 0x310; // ObjectProperty
		constexpr auto RunNode = 0x318; // ObjectProperty
		constexpr auto HipBody = 0x320; // ObjectProperty
	}

	namespace n_UTexture {
		constexpr auto SRGB = 0x60; // char : 1
		constexpr auto RGBE = 0x60; // char : 1
		constexpr auto bIsSourceArtUncompressed = 0x60; // char : 1
		constexpr auto CompressionNoAlpha = 0x60; // char : 1
		constexpr auto CompressionNone = 0x60; // char : 1
		constexpr auto CompressionNoMipmaps = 0x60; // char : 1
		constexpr auto CompressionFullDynamicRange = 0x60; // char : 1
		constexpr auto DeferCompression = 0x60; // char : 1
		constexpr auto NeverStream = 0x60; // char : 0
		constexpr auto bDitherMipMapAlpha = 0x60; // char : 0
		constexpr auto bPreserveBorderR = 0x60; // char : 0
		constexpr auto bPreserveBorderG = 0x60; // char : 0
		constexpr auto bPreserveBorderB = 0x60; // char : 0
		constexpr auto bPreserveBorderA = 0x60; // char : 0
		constexpr auto bNoTiling = 0x60; // char : 0
		constexpr auto bForcePVRTC4 = 0x60; // char : 0
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // char : 0
		constexpr auto bUseCinematicMipLevels = 0x60; // char : 0
		constexpr auto UnpackMin = 0x64; // float [0x4]
		constexpr auto UnpackMax = 0x74; // float [0x4]
		constexpr auto SourceArt = 0x84; // FUntypedBulkData_Mirror
		constexpr auto CompressionSettings = 0xc4; // TextureCompressionSettings
		constexpr auto Filter = 0xc5; // TextureFilter
		constexpr auto LODGroup = 0xc6; // TextureGroup
		constexpr auto CachedLODGroup = 0xc7; // TextureGroup
		constexpr auto MipGenSettings = 0xc8; // TextureMipGenSettings
		constexpr auto LODBias = 0xcc; // int32_t
		constexpr auto CachedCombinedLODBias = 0xd0; // int32_t
		constexpr auto NumCinematicMipLevels = 0xd4; // int32_t
		constexpr auto Resource = 0xd8; // FPointer
		constexpr auto AdjustBrightness = 0xe0; // float
		constexpr auto AdjustBrightnessCurve = 0xe4; // float
		constexpr auto AdjustVibrance = 0xe8; // float
		constexpr auto AdjustSaturation = 0xec; // float
		constexpr auto AdjustRGBCurve = 0xf0; // float
		constexpr auto AdjustHue = 0xf4; // float
		constexpr auto InternalFormatLODBias = 0xf8; // int32_t
		constexpr auto RequiredCreationFlags = 0xfc; // int32_t
	}

	namespace n_UTgDropShadowDecalComponent {
		constexpr auto LastCachedZ = 0x310; // float
		constexpr auto LastOwnerPos = 0x314; // FVector
	}

	namespace n_UTgInventoryObject_Listen_Conduit {
		constexpr auto m_nDeviceIdShockPulseMain = 0xc8; // int32_t
		constexpr auto m_nDeviceIdShockPulseSupport = 0xcc; // int32_t
		constexpr auto m_EnemiesHitThisPulse = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UUIData_CustomGame {
		constexpr auto m_dwOriginalQueueId = 0x60; // Fdword
		constexpr auto m_dwMatchId = 0x64; // Fdword
		constexpr auto m_sQueueName = 0x68; // FString
		constexpr auto m_dwOwnerPlayerId = 0x78; // Fdword
		constexpr auto m_sOwnerName = 0x7c; // FString
		constexpr auto m_bHasPassword = 0x8c; // char : 1
		constexpr auto m_dwSiteId = 0x90; // Fdword
		constexpr auto m_nMinPlayers = 0x94; // int32_t
		constexpr auto m_nMaxPlayers = 0x98; // int32_t
		constexpr auto m_nNumPlayers = 0x9c; // int32_t
	}

	namespace n_UPBRuleNodeMesh {
		constexpr auto BuildingMeshes = 0x70; // TArray<FBuildingMeshInfo>
		constexpr auto PartialOccludedBuildingMesh = 0x80; // FBuildingMeshInfo
		constexpr auto bDoOcclusionTest = 0xcc; // char : 1
		constexpr auto bBlockAll = 0xcc; // char : 1
	}

	namespace n_UUIComponent_ProgressBarHorizontal {
		constexpr auto m_bHideFillWhenEmpty = 0x120; // char : 1
		constexpr auto m_bHideTipWhenEmpty = 0x120; // char : 1
		constexpr auto m_mcBackground = 0x124; // ObjectProperty
		constexpr auto m_mcFill = 0x12c; // ObjectProperty
		constexpr auto m_mcTip = 0x134; // ObjectProperty
	}

	namespace n_ATgPawn_LootGoblin {
		constexpr auto r_eCurrentState = 0x310c; // EGoblinState
		constexpr auto m_fGoblinStateTimer = 0x3110; // float
		constexpr auto m_fEscapeTimer = 0x3114; // float
		constexpr auto m_fTotalDamage = 0x3118; // float
		constexpr auto m_RoyaleObjectivesVisited = 0x311c; // TArray<ObjectProperty>
		constexpr auto m_fSpawnTime = 0x312c; // float
		constexpr auto m_fMovementTime = 0x3130; // float
		constexpr auto m_fStopTime = 0x3134; // float
		constexpr auto m_fStartEscapeTime = 0x3138; // float
		constexpr auto m_fEscapeTime = 0x313c; // float
		constexpr auto m_fDamageTime = 0x3140; // float
		constexpr auto m_fMaxDamage = 0x3144; // float
		constexpr auto m_GoblinLootInfo = 0x3148; // TArray<FGoblinLootInfo>
		constexpr auto m_GoblinFlinchLootInfo = 0x3158; // TArray<FGoblinLootInfo>
		constexpr auto m_pNormalizerEffectGroup = 0x3168; // ObjectProperty
		constexpr auto m_pMIC = 0x3170; // ObjectProperty
		constexpr auto m_nWallEnableName = 0x3178; // FName
		constexpr auto m_nWallPositionName = 0x3180; // FName
		constexpr auto m_bTickMaskingPlane = 0x3188; // char : 1
		constexpr auto m_bHasDespawned = 0x3188; // char : 1
	}

	namespace n_ATgDevice_RocketLauncher {
		constexpr auto m_vProjectileSpawnOffset2 = 0xaec; // FVector
		constexpr auto m_nFireCount = 0xaf8; // int32_t
	}

	namespace n_UTcpNetDriver {
		constexpr auto AllowPlayerPortUnreach = 0x208; // char : 1
		constexpr auto LogPortUnreach = 0x20c; // char : 1
	}

	namespace n_UHeightFogComponent {
		constexpr auto bEnabled = 0x88; // char : 1
		constexpr auto Height = 0x8c; // float
		constexpr auto Density = 0x90; // float
		constexpr auto LightBrightness = 0x94; // float
		constexpr auto LightColor = 0x98; // FColor
		constexpr auto ExtinctionDistance = 0x9c; // float
		constexpr auto StartDistance = 0xa0; // float
	}

	namespace n_UActorFactoryApexClothing {
		constexpr auto ClothingAssets = 0xb4; // TArray<ObjectProperty>
		constexpr auto ClothingRBChannel = 0xc4; // ERBCollisionChannel
		constexpr auto ClothingRBCollideWithChannels = 0xc8; // FRBCollisionChannelContainer
	}

	namespace n_UPath_TowardPoint {
		constexpr auto GoalPoint = 0x6c; // FVector
	}

	namespace n_UUIComponent_IconTF {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
	}

	namespace n_UActorFactoryArchetype {
		constexpr auto ArchetypeActor = 0x9c; // ObjectProperty
	}

	namespace n_UCodecMovieFallback {
		constexpr auto CurrentTime = 0x64; // float
	}

	namespace n_UAnimNodeScaleRateBySpeed {
		constexpr auto BaseSpeed = 0x118; // float
		constexpr auto MinScaleValue = 0x11c; // float
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // char : 1
	}

	namespace n_USeqAct_PlaySound {
		constexpr auto PlaySound = 0x120; // ObjectProperty
		constexpr auto ExtraDelay = 0x128; // float
		constexpr auto bDelayReached = 0x12c; // char : 1
		constexpr auto bSuppressSubtitles = 0x12c; // char : 1
		constexpr auto bStopped = 0x12c; // char : 1
		constexpr auto SoundDuration = 0x130; // float
		constexpr auto FadeInTime = 0x134; // float
		constexpr auto FadeOutTime = 0x138; // float
		constexpr auto VolumeMultiplier = 0x13c; // float
		constexpr auto PitchMultiplier = 0x140; // float
		constexpr auto BeforeEndTime = 0x144; // float
	}

	namespace n_UTgSkelCon_RotateToVelocity {
		constexpr auto m_fRotationSpeed = 0x100; // float
		constexpr auto m_bUseConstantSpeed = 0x104; // char : 1
		constexpr auto m_bVelocity2DOnly = 0x104; // char : 1
		constexpr auto m_fMinVelocity = 0x108; // float
		constexpr auto m_rTargetRotation = 0x10c; // FRotator
	}

	namespace n_UUIComponent_ShopList {
		constexpr auto m_nCurrentSection = 0x120; // int32_t
		constexpr auto m_fScrollX = 0x124; // float
		constexpr auto m_fTargetScrollX = 0x128; // float
		constexpr auto m_nSymbolInstanceIndex = 0x12c; // int32_t
		constexpr auto m_sContainerSymbolName = 0x130; // FString
		constexpr auto m_sHeaderSymbolName = 0x140; // FString
		constexpr auto m_sItemFeaturedSymbolName = 0x150; // FString
		constexpr auto m_sItemMajorSymbolName = 0x160; // FString
		constexpr auto m_sItemMinorSymbolName = 0x170; // FString
		constexpr auto m_sItemDailySymbolName = 0x180; // FString
		constexpr auto m_fItemFeaturedWidth = 0x190; // float
		constexpr auto m_fItemFeaturedHeight = 0x194; // float
		constexpr auto m_fItemMajorWidth = 0x198; // float
		constexpr auto m_fItemMajorHeight = 0x19c; // float
		constexpr auto m_fItemMinorWidth = 0x1a0; // float
		constexpr auto m_fItemMinorHeight = 0x1a4; // float
		constexpr auto m_fItemDailyWidth = 0x1a8; // float
		constexpr auto m_fItemDailyHeight = 0x1ac; // float
		constexpr auto m_nSelectedSectionIndex = 0x1b0; // int32_t
		constexpr auto m_nSelectedItemIndex = 0x1b4; // int32_t
		constexpr auto m_ListSections = 0x1b8; // TArray<FUICShopListSection>
		constexpr auto m_pScrollbar = 0x1c8; // ObjectProperty
		constexpr auto m_grList = 0x1d0; // ObjectProperty
	}

	namespace n_UNavMeshGoalFilter_OutOfViewFrom {
		constexpr auto GoalPoly = 0x6c; // FPointer
		constexpr auto OutOfViewLocation = 0x74; // FVector
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x68; // FRawDistributionVector
	}

	namespace n_ALandscapeGizmoActiveActor {
		constexpr auto SelectedData = 0x280; // TMap<None, None>
	}

	namespace n_UUIProfileMini {
		constexpr auto m_nTitle = 0x244; // int32_t
		constexpr auto m_nCrowns = 0x248; // int32_t
		constexpr auto m_nTrophies = 0x24c; // int32_t
		constexpr auto m_bSearching = 0x250; // char : 1
		constexpr auto m_bShowMinimize = 0x250; // char : 1
		constexpr auto m_mcExit = 0x254; // ObjectProperty
		constexpr auto m_mcPlayer = 0x25c; // ObjectProperty
		constexpr auto m_mcPlayerTitle = 0x264; // ObjectProperty
		constexpr auto m_mcMinimize = 0x26c; // ObjectProperty
		constexpr auto m_mcCrowns = 0x274; // ObjectProperty
		constexpr auto m_mcCrownsText = 0x27c; // ObjectProperty
		constexpr auto m_mcCrownsButton = 0x284; // ObjectProperty
		constexpr auto m_mcTrophies = 0x28c; // ObjectProperty
		constexpr auto m_mcTrophiesText = 0x294; // ObjectProperty
		constexpr auto m_mcSearching = 0x29c; // ObjectProperty
		constexpr auto m_mcSearchingTitle = 0x2a4; // ObjectProperty
		constexpr auto m_mcSearchingSubtitle = 0x2ac; // ObjectProperty
		constexpr auto m_mcMember = 0x2b4; // ObjectProperty [0x4]
		constexpr auto m_mcMemberIcon = 0x2d4; // ObjectProperty [0x4]
		constexpr auto m_mcMemberLogo = 0x2f4; // ObjectProperty [0x4]
		constexpr auto m_mcMemberFrame = 0x314; // ObjectProperty [0x4]
	}

	namespace n_UMobileMenuButton {
		constexpr auto Images = 0xdc; // ObjectProperty [0x2]
		constexpr auto ImagesUVs = 0xec; // FUVCoords [0x2]
		constexpr auto ImageColor = 0x114; // FLinearColor
		constexpr auto Caption = 0x124; // FString
		constexpr auto CaptionColor = 0x134; // FLinearColor
	}

	namespace n_UUIDataEsportsManager {
		constexpr auto m_EventArray = 0x70; // TArray<ObjectProperty>
		constexpr auto m_Events = 0x80; // TMap<None, None>
		constexpr auto m_Teams = 0xc8; // TMap<None, None>
		constexpr auto m_dwRewardMultiplier = 0x110; // Fdword
	}

	namespace n_ATgAIController {
		constexpr auto m_pOwner = 0x4e0; // ObjectProperty
		constexpr auto m_vSpawnLocation = 0x4e8; // FVector
		constexpr auto m_rSpawnDirection = 0x4f4; // FRotator
		constexpr auto m_pFactory = 0x500; // ObjectProperty
		constexpr auto m_nFactorySpawnGroup = 0x508; // int32_t
		constexpr auto m_pBot = 0x50c; // FPointer
		constexpr auto m_pSettings = 0x514; // FPointer
		constexpr auto m_pSkin = 0x51c; // FPointer
		constexpr auto m_iAssignedLane = 0x524; // int32_t
		constexpr auto m_SeePawnCache = 0x528; // TMap<None, None>
		constexpr auto LastSeePawnCacheTime = 0x570; // float
		constexpr auto SeePawnClearTime = 0x574; // float
		constexpr auto m_pLastAttacker = 0x578; // ObjectProperty
		constexpr auto m_Squad = 0x580; // ObjectProperty
		constexpr auto LastDamageTakenTime = 0x588; // float
		constexpr auto LastDamageTakenPosition = 0x58c; // FVector
		constexpr auto m_LoSCache = 0x598; // TMap<None, None>
		constexpr auto LastLoSCacheTime = 0x5e0; // float
		constexpr auto m_eNavmeshType = 0x5e4; // EHavokNavigationMeshType
		constexpr auto WalkingPhysics = 0x5e5; // EPhysics
		constexpr auto m_fAILevelUpSecs = 0x5e8; // float
		constexpr auto VisionDistance = 0x5ec; // float
		constexpr auto VisionDistanceBonus = 0x5f0; // float
		constexpr auto bUsesObstacleAvoidance = 0x5f4; // char : 1
		constexpr auto bIsPaused = 0x5f4; // char : 1
		constexpr auto bIsAIFrozen = 0x5f4; // char : 1
		constexpr auto ObstacleAvoidance = 0x5f8; // ObjectProperty
		constexpr auto ObstacleAvoidanceGridPointSize = 0x600; // float
		constexpr auto ObstacleAvoidanceGridExtents = 0x604; // float
		constexpr auto SpreadLocation = 0x608; // FVector
		constexpr auto CachedPRI = 0x614; // ObjectProperty
		constexpr auto DeviceTargetingCache = 0x61c; // TMap<None, None>
		constexpr auto LastCheckStuckTime = 0x664; // float
		constexpr auto CheckStuckTime = 0x668; // float
		constexpr auto LastCachedStuckPosition = 0x66c; // FVector
		constexpr auto LastCheckFlungTime = 0x678; // float
		constexpr auto CheckFlungTime = 0x67c; // float
		constexpr auto LastCachedFlungPosition = 0x680; // FVector
	}

	namespace n_USeqEvent_LOS {
		constexpr auto ScreenCenterDistance = 0x128; // float
		constexpr auto TriggerDistance = 0x12c; // float
		constexpr auto bCheckForObstructions = 0x130; // char : 1
	}

	namespace n_ATgDevice_Soar {
		constexpr auto m_fPrevCollisionHeight = 0xaec; // float
	}

	namespace n_UOnlinePlaylistProvider {
		constexpr auto PlaylistId = 0x94; // int32_t
		constexpr auto PlaylistGameTypeNames = 0x98; // TArray<FName>
		constexpr auto DisplayName = 0xa8; // FString
		constexpr auto Priority = 0xb8; // int32_t
	}

	namespace n_UTgDataManager {
		constexpr auto m_EOMData = 0x60; // ObjectProperty
		constexpr auto m_CardData = 0x68; // ObjectProperty
		constexpr auto m_NotificationData = 0x70; // ObjectProperty
		constexpr auto m_DataSets = 0x78; // TArray<ObjectProperty>
		constexpr auto m_Callbacks = 0x88; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_PingMinimap {
		constexpr auto m_PingTarget = 0x108; // ObjectProperty
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x68; // ObjectProperty
		constexpr auto ScreenAlignment = 0x70; // EParticleScreenAlignment
		constexpr auto SortMode = 0x71; // EParticleSortMode
		constexpr auto ParticleBurstMethod = 0x72; // EParticleBurstMethod
		constexpr auto InterpolationMethod = 0x73; // EParticleSubUVInterpMethod
		constexpr auto EmitterNormalsMode = 0x74; // EEmitterNormalsMode
		constexpr auto bAllowImageFlipping = 0x78; // char : 1
		constexpr auto bSquareImageFlipping = 0x78; // char : 1
		constexpr auto bUseLocalSpace = 0x78; // char : 1
		constexpr auto bKillOnDeactivate = 0x78; // char : 1
		constexpr auto bKillOnCompleted = 0x78; // char : 1
		constexpr auto bRequiresSorting = 0x78; // char : 1
		constexpr auto bUseLegacyEmitterTime = 0x78; // char : 1
		constexpr auto bEnableNearParticleCulling = 0x78; // char : 1
		constexpr auto bEnableFarParticleCulling = 0x78; // char : 0
		constexpr auto bEnableParticleTrimming = 0x78; // char : 0
		constexpr auto bEmitterDurationUseRange = 0x78; // char : 0
		constexpr auto bDurationRecalcEachLoop = 0x78; // char : 0
		constexpr auto bEmitterDelayUseRange = 0x78; // char : 0
		constexpr auto bDelayFirstLoopOnly = 0x78; // char : 0
		constexpr auto bScaleUV = 0x78; // char : 0
		constexpr auto bDirectUV = 0x78; // char : 0
		constexpr auto bOverrideSystemMacroUV = 0x78; // char : 0
		constexpr auto bUseMaxDrawCount = 0x78; // char : 0
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x78; // char : 0
		constexpr auto NearCullDistance = 0x7c; // float
		constexpr auto NearFadeDistance = 0x80; // float
		constexpr auto FarFadeDistance = 0x84; // float
		constexpr auto FarCullDistance = 0x88; // float
		constexpr auto TrimmedVertices = 0x8c; // TArray<FVector2D>
		constexpr auto EmitterDuration = 0x9c; // float
		constexpr auto EmitterDurationLow = 0xa0; // float
		constexpr auto EmitterLoops = 0xa4; // int32_t
		constexpr auto SpawnRate = 0xa8; // FRawDistributionFloat
		constexpr auto BurstList = 0xcc; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xdc; // float
		constexpr auto EmitterDelayLow = 0xe0; // float
		constexpr auto SubImages_Horizontal = 0xe4; // int32_t
		constexpr auto SubImages_Vertical = 0xe8; // int32_t
		constexpr auto RandomImageTime = 0xec; // float
		constexpr auto RandomImageChanges = 0xf0; // int32_t
		constexpr auto MacroUVPosition = 0xf4; // FVector
		constexpr auto MacroUVRadius = 0x100; // float
		constexpr auto MaxDrawCount = 0x104; // int32_t
		constexpr auto DownsampleThresholdScreenFraction = 0x108; // float
		constexpr auto NormalsSphereCenter = 0x10c; // FVector
		constexpr auto NormalsCylinderDirection = 0x118; // FVector
	}

	namespace n_UTgSeqEvent_TaskForceScoreUpdated {
		constexpr auto DefenderTaskForce = 0x128; // int32_t
		constexpr auto CurrentScore = 0x12c; // int32_t
	}

	namespace n_UUIComponent_MatchPlayerEntry {
		constexpr auto m_mcEndCap = 0x120; // ObjectProperty
		constexpr auto m_mcIcon = 0x128; // ObjectProperty
		constexpr auto m_mcName = 0x130; // ObjectProperty
		constexpr auto m_pPlayerName = 0x138; // ObjectProperty
		constexpr auto m_mcTitle = 0x140; // ObjectProperty
		constexpr auto m_mcBuild = 0x148; // ObjectProperty
		constexpr auto m_mcBuild_Stat = 0x150; // ObjectProperty [0x2]
		constexpr auto m_mcBuild_Talent = 0x160; // ObjectProperty
		constexpr auto m_mcBuild_TalentIcon = 0x168; // ObjectProperty
		constexpr auto m_mcBooster0 = 0x170; // ObjectProperty
		constexpr auto m_mcBooster0Tex = 0x178; // ObjectProperty
		constexpr auto m_mcBooster1 = 0x180; // ObjectProperty
		constexpr auto m_mcBooster1Tex = 0x188; // ObjectProperty
		constexpr auto m_Cards = 0x190; // ObjectProperty [0x5]
		constexpr auto m_CardButtons = 0x1b8; // ObjectProperty [0x5]
		constexpr auto m_Items = 0x1e0; // ObjectProperty [0x4]
		constexpr auto m_ItemButtons = 0x200; // ObjectProperty [0x4]
		constexpr auto m_mcStatsDetails = 0x220; // ObjectProperty
		constexpr auto m_mcStatsDetails_Stat = 0x228; // ObjectProperty [0x7]
		constexpr auto m_TalentButton = 0x260; // ObjectProperty
		constexpr auto m_FrameButton = 0x268; // ObjectProperty
		constexpr auto m_ReportButton = 0x270; // ObjectProperty
		constexpr auto m_ImportButton = 0x278; // ObjectProperty
		constexpr auto m_AddButton = 0x280; // ObjectProperty
		constexpr auto m_pTooltip = 0x288; // ObjectProperty
		constexpr auto m_bCanReport = 0x290; // char : 1
	}

	namespace n_UUIComponent_Card {
		constexpr auto m_mcCTA = 0x120; // ObjectProperty
		constexpr auto m_mcChampion = 0x128; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x130; // ObjectProperty
		constexpr auto m_mcCooldown = 0x138; // ObjectProperty
		constexpr auto m_mcCost = 0x140; // ObjectProperty
		constexpr auto m_mcName = 0x148; // ObjectProperty
		constexpr auto m_mcSkill = 0x150; // ObjectProperty
		constexpr auto m_mcDesc = 0x158; // ObjectProperty
		constexpr auto m_mcRarity = 0x160; // ObjectProperty
		constexpr auto m_mcFrame = 0x168; // ObjectProperty
		constexpr auto m_mcCooldownTimer = 0x170; // ObjectProperty
		constexpr auto m_mcProgressBack = 0x178; // ObjectProperty
		constexpr auto m_mcProgressCover = 0x180; // ObjectProperty
		constexpr auto m_mcIcon = 0x188; // ObjectProperty
		constexpr auto m_mcRarityGlow = 0x190; // ObjectProperty
		constexpr auto m_pProgress = 0x198; // ObjectProperty
		constexpr auto m_fOwnedOverride = 0x1a0; // float
		constexpr auto m_bShowChampion = 0x1a4; // char : 1
		constexpr auto m_bShowRarityGlow = 0x1a4; // char : 1
	}

	namespace n_UActorFactoryLensFlare {
		constexpr auto LensFlareObject = 0x9c; // ObjectProperty
	}

	namespace n_USkeletalMesh {
		constexpr auto Bounds = 0x60; // FBoxSphereBounds
		constexpr auto LodCheckSphereOrigin = 0x7c; // FVector
		constexpr auto LodCheckSphereRadius = 0x88; // float
		constexpr auto Materials = 0x8c; // TArray<ObjectProperty>
		constexpr auto ClothingAssets = 0x9c; // TArray<ObjectProperty>
		constexpr auto ClothingLodMap = 0xac; // TArray<FApexClothingAssetInfo>
		constexpr auto Origin = 0xbc; // FVector
		constexpr auto RotOrigin = 0xc8; // FRotator
		constexpr auto RefSkeleton = 0xd4; // TArray<int32_t>
		constexpr auto SkeletalDepth = 0xe4; // int32_t
		constexpr auto NameIndexMap = 0xe8; // TMap<None, None>
		constexpr auto LODModels = 0x130; // FIndirectArray_Mirror
		constexpr auto SourceData = 0x140; // FPointer
		constexpr auto RefBasesInvMatrix = 0x148; // TArray<FBoneAtom>
		constexpr auto SkelMirrorTable = 0x158; // TArray<FBoneMirrorInfo>
		constexpr auto SkelMirrorAxis = 0x168; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x169; // EAxis
		constexpr auto Sockets = 0x16c; // TArray<ObjectProperty>
		constexpr auto BoneBreakNames = 0x17c; // TArray<FString>
		constexpr auto BoneBreakOptions = 0x18c; // TArray<BoneBreakOption>
		constexpr auto LODInfo = 0x19c; // TArray<FSkeletalMeshLODInfo>
		constexpr auto OptimizationSettings = 0x1ac; // TArray<FSkeletalMeshOptimizationSettings>
		constexpr auto PerPolyCollisionBones = 0x1bc; // TArray<FName>
		constexpr auto AddToParentPerPolyCollisionBone = 0x1cc; // TArray<FName>
		constexpr auto PerPolyBoneKDOPs = 0x1dc; // TArray<int32_t>
		constexpr auto bStripkDOP = 0x1ec; // char : 1
		constexpr auto bPerPolyUseSoftWeighting = 0x1ec; // char : 1
		constexpr auto bUseSimpleLineCollision = 0x1ec; // char : 1
		constexpr auto bUseSimpleBoxCollision = 0x1ec; // char : 1
		constexpr auto bForceCPUSkinning = 0x1ec; // char : 1
		constexpr auto bUseFullPrecisionUVs = 0x1ec; // char : 1
		constexpr auto bHasBeenSimplified = 0x1ec; // char : 1
		constexpr auto FaceFXAsset = 0x1f0; // ObjectProperty
		constexpr auto LODBiasPC = 0x1f8; // int32_t
		constexpr auto LODBiasPS3 = 0x1fc; // int32_t
		constexpr auto LODBiasXbox360 = 0x200; // int32_t
		constexpr auto LODBiasOrbis = 0x204; // int32_t
		constexpr auto ClothMesh = 0x208; // TArray<FPointer>
		constexpr auto ClothMeshScale = 0x218; // TArray<float>
		constexpr auto ClothToGraphicsVertMap = 0x228; // TArray<int32_t>
		constexpr auto ClothMovementScale = 0x238; // TArray<float>
		constexpr auto ClothMovementScaleGenMode = 0x248; // ClothMovementScaleGen
		constexpr auto ClothToAnimMeshMaxDist = 0x24c; // float
		constexpr auto bLimitClothToAnimMesh = 0x250; // char : 1
		constexpr auto ClothWeldingMap = 0x254; // TArray<int32_t>
		constexpr auto ClothWeldingDomain = 0x264; // int32_t
		constexpr auto ClothWeldedIndices = 0x268; // TArray<int32_t>
		constexpr auto bForceNoWelding = 0x278; // char : 1
		constexpr auto NumFreeClothVerts = 0x27c; // int32_t
		constexpr auto ClothIndexBuffer = 0x280; // TArray<int32_t>
		constexpr auto ClothBones = 0x290; // TArray<FName>
		constexpr auto ClothHierarchyLevels = 0x2a0; // int32_t
		constexpr auto bEnableClothBendConstraints = 0x2a4; // char : 1
		constexpr auto bEnableClothDamping = 0x2a4; // char : 1
		constexpr auto bUseClothCOMDamping = 0x2a4; // char : 1
		constexpr auto ClothStretchStiffness = 0x2a8; // float
		constexpr auto ClothBendStiffness = 0x2ac; // float
		constexpr auto ClothDensity = 0x2b0; // float
		constexpr auto ClothThickness = 0x2b4; // float
		constexpr auto ClothDamping = 0x2b8; // float
		constexpr auto ClothIterations = 0x2bc; // int32_t
		constexpr auto ClothHierarchicalIterations = 0x2c0; // int32_t
		constexpr auto ClothFriction = 0x2c4; // float
		constexpr auto ClothRelativeGridSpacing = 0x2c8; // float
		constexpr auto ClothPressure = 0x2cc; // float
		constexpr auto ClothCollisionResponseCoefficient = 0x2d0; // float
		constexpr auto ClothAttachmentResponseCoefficient = 0x2d4; // float
		constexpr auto ClothAttachmentTearFactor = 0x2d8; // float
		constexpr auto ClothSleepLinearVelocity = 0x2dc; // float
		constexpr auto HardStretchLimitFactor = 0x2e0; // float
		constexpr auto bHardStretchLimit = 0x2e4; // char : 1
		constexpr auto bEnableClothOrthoBendConstraints = 0x2e4; // char : 1
		constexpr auto bEnableClothSelfCollision = 0x2e4; // char : 1
		constexpr auto bEnableClothPressure = 0x2e4; // char : 1
		constexpr auto bEnableClothTwoWayCollision = 0x2e4; // char : 1
		constexpr auto ClothSpecialBones = 0x2e8; // TArray<FClothSpecialBoneInfo>
		constexpr auto bEnableClothLineChecks = 0x2f8; // char : 1
		constexpr auto bClothMetal = 0x2f8; // char : 1
		constexpr auto ClothMetalImpulseThreshold = 0x2fc; // float
		constexpr auto ClothMetalPenetrationDepth = 0x300; // float
		constexpr auto ClothMetalMaxDeformationDistance = 0x304; // float
		constexpr auto bEnableClothTearing = 0x308; // char : 1
		constexpr auto ClothTearFactor = 0x30c; // float
		constexpr auto ClothTearReserve = 0x310; // int32_t
		constexpr auto bEnableValidBounds = 0x314; // char : 1
		constexpr auto ValidBoundsMin = 0x318; // FVector
		constexpr auto ValidBoundsMax = 0x324; // FVector
		constexpr auto ClothTornTriMap = 0x330; // FMap_Mirror
		constexpr auto SoftBodySurfaceToGraphicsVertMap = 0x378; // TArray<int32_t>
		constexpr auto SoftBodySurfaceIndices = 0x388; // TArray<int32_t>
		constexpr auto SoftBodyTetraVertsUnscaled = 0x398; // TArray<FVector>
		constexpr auto SoftBodyTetraIndices = 0x3a8; // TArray<int32_t>
		constexpr auto SoftBodyTetraLinks = 0x3b8; // TArray<FSoftBodyTetraLink>
		constexpr auto CachedSoftBodyMeshes = 0x3c8; // TArray<FPointer>
		constexpr auto CachedSoftBodyMeshScales = 0x3d8; // TArray<float>
		constexpr auto SoftBodyBones = 0x3e8; // TArray<FName>
		constexpr auto SoftBodySpecialBones = 0x3f8; // TArray<FSoftBodySpecialBoneInfo>
		constexpr auto SoftBodyVolumeStiffness = 0x408; // float
		constexpr auto SoftBodyStretchingStiffness = 0x40c; // float
		constexpr auto SoftBodyDensity = 0x410; // float
		constexpr auto SoftBodyParticleRadius = 0x414; // float
		constexpr auto SoftBodyDamping = 0x418; // float
		constexpr auto SoftBodySolverIterations = 0x41c; // int32_t
		constexpr auto SoftBodyFriction = 0x420; // float
		constexpr auto SoftBodyRelativeGridSpacing = 0x424; // float
		constexpr auto SoftBodySleepLinearVelocity = 0x428; // float
		constexpr auto bEnableSoftBodySelfCollision = 0x42c; // char : 1
		constexpr auto SoftBodyAttachmentResponse = 0x430; // float
		constexpr auto SoftBodyCollisionResponse = 0x434; // float
		constexpr auto SoftBodyDetailLevel = 0x438; // float
		constexpr auto SoftBodySubdivisionLevel = 0x43c; // int32_t
		constexpr auto bSoftBodyIsoSurface = 0x440; // char : 1
		constexpr auto bEnableSoftBodyDamping = 0x440; // char : 1
		constexpr auto bUseSoftBodyCOMDamping = 0x440; // char : 1
		constexpr auto SoftBodyAttachmentThreshold = 0x444; // float
		constexpr auto bEnableSoftBodyTwoWayCollision = 0x448; // char : 1
		constexpr auto SoftBodyAttachmentTearFactor = 0x44c; // float
		constexpr auto bEnableSoftBodyLineChecks = 0x450; // char : 1
		constexpr auto bHasVertexColors = 0x450; // char : 1
		constexpr auto GraphicsIndexIsCloth = 0x454; // TArray<char>
		constexpr auto CachedStreamingTextureFactors = 0x464; // TArray<float>
		constexpr auto StreamingDistanceMultiplier = 0x474; // float
		constexpr auto ReleaseResourcesFence = 0x478; // int32_t
		constexpr auto SkelMeshRUID = 0x47c; // FQWord
		constexpr auto bUseClothingAssetMaterial = 0x484; // char : 1
	}

	namespace n_UTgAchievement_HardCarry {
		constexpr auto nKills = 0x90; // int32_t
	}

	namespace n_UUIChatScene {
		constexpr auto m_nContextChangedCallbackHandle = 0x244; // int32_t
		constexpr auto m_KeyCapture = 0x248; // ObjectProperty
		constexpr auto m_nChannel = 0x250; // int32_t
		constexpr auto m_nScroll = 0x254; // int32_t
		constexpr auto m_nLineNumber = 0x258; // int32_t
		constexpr auto m_nPrevIndex = 0x25c; // int32_t
		constexpr auto m_fBuffer = 0x260; // float
		constexpr auto m_fOutputWidth = 0x264; // float
		constexpr auto m_sRecipient = 0x268; // FString
		constexpr auto m_sRemaining = 0x278; // FString
		constexpr auto m_sLastInput = 0x288; // FString
		constexpr auto m_nCommand = 0x298; // int32_t
		constexpr auto m_pChatData = 0x29c; // ObjectProperty
		constexpr auto m_mcInput = 0x2a4; // ObjectProperty
		constexpr auto m_Messages = 0x2ac; // TArray<FChatMessage>
		constexpr auto m_PrevChats = 0x2bc; // TArray<FString>
	}

	namespace n_UTgSeqAct_ShowGameTip {
		constexpr auto GameTipId = 0x108; // int32_t
		constexpr auto TargetPlayer = 0x10c; // ObjectProperty
	}

	namespace n_UTgAnimNotify_SetMICParam {
		constexpr auto m_nmParamName = 0x68; // FName
		constexpr auto m_fTargetValue = 0x70; // float
	}

	namespace n_UTgSkelControlSingleBone_Ammo {
		constexpr auto m_PawnOwner = 0x144; // ObjectProperty
		constexpr auto m_bInvertStrengthFromAmmo = 0x14c; // char : 1
		constexpr auto m_fFlatInterpolationRateDecrease = 0x150; // float
		constexpr auto m_fInterpolationRateDecrease = 0x154; // float
		constexpr auto m_fFlatInterpolationRateIncrease = 0x158; // float
		constexpr auto m_fInterpolationRateIncrease = 0x15c; // float
		constexpr auto m_nMaxAmmoFallback = 0x160; // int32_t
	}

	namespace n_UGameThirdPersonCamera {
		constexpr auto WorstLocBlockedPct = 0x6c; // float
		constexpr auto WorstLocPenetrationExtentScale = 0x70; // float
		constexpr auto PenetrationBlendOutTime = 0x74; // float
		constexpr auto PenetrationBlendInTime = 0x78; // float
		constexpr auto PenetrationBlockedPct = 0x7c; // float
		constexpr auto PenetrationExtentScale = 0x80; // float
		constexpr auto LastActualOriginOffset = 0x84; // FVector
		constexpr auto LastActualCameraOrigin = 0x90; // FVector
		constexpr auto LastActualCameraOriginRot = 0x9c; // FRotator
		constexpr auto OriginOffsetInterpSpeed = 0xa8; // float
		constexpr auto LastViewOffset = 0xac; // FVector
		constexpr auto LastCamFOV = 0xb8; // float
		constexpr auto LastIdealCameraOrigin = 0xbc; // FVector
		constexpr auto LastIdealCameraOriginRot = 0xc8; // FRotator
		constexpr auto ThirdPersonCamDefault = 0xd4; // ObjectProperty
		constexpr auto ThirdPersonCamDefaultClass = 0xdc; // UGameThirdPersonCameraMode*
		constexpr auto CurrentCamMode = 0xe4; // ObjectProperty
		constexpr auto LastHeightAdjustment = 0xec; // float
		constexpr auto LastPitchAdjustment = 0xf0; // float
		constexpr auto LastYawAdjustment = 0xf4; // float
		constexpr auto LeftoverPitchAdjustment = 0xf8; // float
		constexpr auto Focus_BackOffStrength = 0xfc; // float
		constexpr auto Focus_StepHeightAdjustment = 0x100; // float
		constexpr auto Focus_MaxTries = 0x104; // int32_t
		constexpr auto Focus_FastAdjustKickInTime = 0x108; // float
		constexpr auto LastFocusChangeTime = 0x10c; // float
		constexpr auto ActualFocusPointWorldLoc = 0x110; // FVector
		constexpr auto LastFocusPointLoc = 0x11c; // FVector
		constexpr auto FocusPoint = 0x128; // FCamFocusPointParams
		constexpr auto bFocusPointSet = 0x160; // char : 1
		constexpr auto bFocusPointSuccessful = 0x160; // char : 1
		constexpr auto bDoingACameraTurn = 0x160; // char : 1
		constexpr auto bTurnAlignTargetWhenFinished = 0x160; // char : 1
		constexpr auto bDrawDebug = 0x160; // char : 1
		constexpr auto bDoingDirectLook = 0x160; // char : 1
		constexpr auto bDebugChangedCameraMode = 0x160; // char : 1
		constexpr auto bDoSeamlessPivotTransition = 0x160; // char : 1
		constexpr auto TurnCurTime = 0x164; // float
		constexpr auto TurnStartAngle = 0x168; // int32_t
		constexpr auto TurnEndAngle = 0x16c; // int32_t
		constexpr auto TurnTotalTime = 0x170; // float
		constexpr auto TurnDelay = 0x174; // float
		constexpr auto LastPostCamTurnYaw = 0x178; // int32_t
		constexpr auto DirectLookYaw = 0x17c; // int32_t
		constexpr auto DirectLookInterpSpeed = 0x180; // float
		constexpr auto WorstLocInterpSpeed = 0x184; // float
		constexpr auto LastWorstLocationLocal = 0x188; // FVector
		constexpr auto LastWorstLocation = 0x194; // FVector
		constexpr auto LastPreModifierCameraLoc = 0x1a0; // FVector
		constexpr auto LastPreModifierCameraRot = 0x1ac; // FRotator
		constexpr auto PenetrationAvoidanceFeelers = 0x1b8; // TArray<FPenetrationAvoidanceFeeler>
		constexpr auto LastOffsetAdjustment = 0x1c8; // FVector
	}

	namespace n_UUIData_TreasureRoll_Item {
		constexpr auto m_pRolledItem = 0x60; // ObjectProperty
		constexpr auto m_dwRolledItemQuantity = 0x68; // Fdword
		constexpr auto m_pReplacementItem = 0x6c; // ObjectProperty
		constexpr auto m_dwReplacementItemQuantity = 0x74; // Fdword
		constexpr auto m_bIsUnreceivedBoostedItem = 0x78; // char : 1
		constexpr auto m_pRolledSubItems = 0x7c; // TArray<ObjectProperty>
		constexpr auto m_pSubItemReplacementAggregate = 0x8c; // ObjectProperty
	}

	namespace n_UCameraShake {
		constexpr auto bSingleInstance = 0x60; // char : 1
		constexpr auto bRandomAnimSegment = 0x60; // char : 1
		constexpr auto bDoHUDShake = 0x60; // char : 1
		constexpr auto OscillationDuration = 0x64; // float
		constexpr auto OscillationBlendInTime = 0x68; // float
		constexpr auto OscillationBlendOutTime = 0x6c; // float
		constexpr auto RotOscillation = 0x70; // FROscillator
		constexpr auto LocOscillation = 0x94; // FVOscillator
		constexpr auto FOVOscillation = 0xb8; // FFOscillator
		constexpr auto Anim = 0xc4; // ObjectProperty
		constexpr auto AnimPlayRate = 0xcc; // float
		constexpr auto AnimScale = 0xd0; // float
		constexpr auto AnimBlendInTime = 0xd4; // float
		constexpr auto AnimBlendOutTime = 0xd8; // float
		constexpr auto RandomAnimSegmentDuration = 0xdc; // float
		constexpr auto HUDOscillation = 0xe0; // FV2DOscillator
	}

	namespace n_UActorFactoryAmbientSound {
		constexpr auto AmbientSoundCue = 0x9c; // ObjectProperty
	}

	namespace n_UDynamicSpriteComponent {
		constexpr auto AnimatedScale = 0x26c; // FInterpCurveFloat
		constexpr auto AnimatedColor = 0x280; // FInterpCurveLinearColor
		constexpr auto AnimatedPosition = 0x294; // FInterpCurveVector2D
		constexpr auto LocationOffset = 0x2a8; // FVector
		constexpr auto LoopCount = 0x2b4; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NearestTowerHealthPercent {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
		constexpr auto HealthPct = 0x9c; // float
	}

	namespace n_UUIData_MatchBoosterActivated {
		constexpr auto dwSourcePlayerId = 0x60; // Fdword
		constexpr auto dwTaskForce = 0x64; // Fdword
		constexpr auto eItemBoosterSubtype = 0x68; // Fdword
		constexpr auto fMultiplier = 0x6c; // float
		constexpr auto pBoosterItem = 0x70; // ObjectProperty
	}

	namespace n_ATgTrigger_Instance {
		constexpr auto m_nMapId = 0x290; // int32_t
		constexpr auto m_nPreload = 0x294; // char : 1
		constexpr auto m_nTaskForce = 0x294; // char : 1
		constexpr auto m_SpawnPointName = 0x298; // FString
	}

	namespace n_ATgLobbyCamera {
		constexpr auto m_ViewTarget = 0x420; // ObjectProperty
		constexpr auto m_FriendlyTargets = 0x428; // TArray<ObjectProperty>
		constexpr auto m_EnemyTargets = 0x438; // TArray<ObjectProperty>
		constexpr auto m_RenderCenterPointOffset = 0x448; // FVector
		constexpr auto m_bActive = 0x454; // char : 1
		constexpr auto m_bAdjustCameraToTarget = 0x454; // char : 1
		constexpr auto m_bFirstCameraEyeCheck = 0x454; // char : 1
		constexpr auto m_nPosition = 0x458; // int32_t
		constexpr auto m_fRemainingTweenTime = 0x45c; // float
		constexpr auto m_fTotalTweenTime = 0x460; // float
		constexpr auto m_TweenSourcePOV = 0x464; // FTPOV
		constexpr auto m_fLateralOffsetMultiplier = 0x488; // float
		constexpr auto m_fHorizontalOffsetMultiplier = 0x48c; // float
		constexpr auto m_fViewLateralOffsetMultiplier = 0x490; // float
		constexpr auto m_fViewHorizontalOffsetMultiplier = 0x494; // float
		constexpr auto m_fMaxAdjustSpeedTranslation = 0x498; // float
		constexpr auto m_fMaxAdjustSpeedRotation = 0x49c; // float
		constexpr auto m_vViewOffset = 0x4a0; // FVector
		constexpr auto m_fFirstCameraEyeCheckTimestamp = 0x4ac; // float
		constexpr auto m_CameraTag = 0x4b0; // ELobbyCameraTag
	}

	namespace n_UUIComponent_ItemRadialMenuBase {
		constexpr auto m_nSlot = 0x120; // int32_t
		constexpr auto m_mcSubEntry = 0x124; // ObjectProperty
		constexpr auto m_mcTF = 0x12c; // ObjectProperty
		constexpr auto m_mcItem = 0x134; // ObjectProperty
		constexpr auto m_mcItemIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcHighlight = 0x144; // ObjectProperty
		constexpr auto m_mcDisabledBG = 0x14c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x154; // ObjectProperty
		constexpr auto m_akSliceSelect = 0x15c; // ObjectProperty
	}

	namespace n_AKActor {
		constexpr auto bDamageAppliesImpulse = 0x2d0; // char : 1
		constexpr auto bWakeOnLevelStart = 0x2d0; // char : 1
		constexpr auto bCurrentSlide = 0x2d0; // char : 1
		constexpr auto bSlideActive = 0x2d0; // char : 1
		constexpr auto bEnableStayUprightSpring = 0x2d0; // char : 1
		constexpr auto bLimitMaxPhysicsVelocity = 0x2d0; // char : 1
		constexpr auto bNeedsRBStateReplication = 0x2d0; // char : 1
		constexpr auto bDisableClientSidePawnInteractions = 0x2d0; // char : 1
		constexpr auto TgApplyHitImpulse = 0x2d0; // char : 0
		constexpr auto TgApplyTouchImpulse = 0x2d0; // char : 0
		constexpr auto ImpactEffectComponent = 0x2d4; // ComponentProperty
		constexpr auto ImpactSoundComponent = 0x2dc; // ComponentProperty
		constexpr auto ImpactSoundComponent2 = 0x2e4; // ComponentProperty
		constexpr auto LastImpactTime = 0x2ec; // float
		constexpr auto ImpactEffectInfo = 0x2f0; // FPhysEffectInfo
		constexpr auto SlideEffectComponent = 0x308; // ComponentProperty
		constexpr auto SlideSoundComponent = 0x310; // ComponentProperty
		constexpr auto LastSlideTime = 0x318; // float
		constexpr auto SlideEffectInfo = 0x31c; // FPhysEffectInfo
		constexpr auto StayUprightTorqueFactor = 0x334; // float
		constexpr auto StayUprightMaxTorque = 0x338; // float
		constexpr auto MaxPhysicsVelocity = 0x33c; // float
		constexpr auto RBState = 0x340; // FRigidBodyState
		constexpr auto AngErrorAccumulator = 0x380; // float
		constexpr auto ReplicatedDrawScale3D = 0x384; // FVector
		constexpr auto InitialLocation = 0x390; // FVector
		constexpr auto InitialRotation = 0x39c; // FRotator
		constexpr auto TgTouchMagnitude = 0x3a8; // float
		constexpr auto TgTouchSound = 0x3ac; // ObjectProperty
	}

	namespace n_UPhysicalMaterial {
		constexpr auto MaterialIndex = 0x60; // int32_t
		constexpr auto Friction = 0x64; // float
		constexpr auto Restitution = 0x68; // float
		constexpr auto bForceConeFriction = 0x6c; // char : 1
		constexpr auto bEnableAnisotropicFriction = 0x6c; // char : 1
		constexpr auto AnisoFrictionDir = 0x70; // FVector
		constexpr auto FrictionV = 0x7c; // float
		constexpr auto Density = 0x80; // float
		constexpr auto AngularDamping = 0x84; // float
		constexpr auto LinearDamping = 0x88; // float
		constexpr auto MagneticResponse = 0x8c; // float
		constexpr auto WindResponse = 0x90; // float
		constexpr auto ImpactThreshold = 0x94; // float
		constexpr auto ImpactReFireDelay = 0x98; // float
		constexpr auto ImpactEffect = 0x9c; // ObjectProperty
		constexpr auto ImpactSound = 0xa4; // ObjectProperty
		constexpr auto DeviceImpactSound = 0xac; // ObjectProperty
		constexpr auto SlideThreshold = 0xb4; // float
		constexpr auto SlideReFireDelay = 0xb8; // float
		constexpr auto SlideEffect = 0xbc; // ObjectProperty
		constexpr auto SlideSound = 0xc4; // ObjectProperty
		constexpr auto FractureSoundExplosion = 0xcc; // ObjectProperty
		constexpr auto FractureSoundSingle = 0xd4; // ObjectProperty
		constexpr auto MaterialTypeName = 0xdc; // FName
		constexpr auto FootstepParticleSystem = 0xe4; // ObjectProperty
		constexpr auto Parent = 0xec; // ObjectProperty
		constexpr auto PhysicalMaterialProperty = 0xf4; // ObjectProperty
	}

	namespace n_ATgDeploy_Transporter {
		constexpr auto m_StartLocation = 0x448; // FVector
		constexpr auto m_ProjectileEndLocation = 0x454; // FVector
		constexpr auto m_fProjectileHeight = 0x460; // float
		constexpr auto m_DeploymentFX = 0x464; // ObjectProperty
		constexpr auto r_TeleportLocation = 0x46c; // FVector
	}

	namespace n_UUIInteractable_Button_Price {
		constexpr auto m_mcPrices = 0x140; // ObjectProperty [0x3]
		constexpr auto m_sPriceLoadNames = 0x158; // FString [0x3]
		constexpr auto m_nPriceIndex = 0x188; // int32_t
	}

	namespace n_ATgDeploy_HealthNugget {
		constexpr auto m_bRenderAsActive = 0x448; // char : 1
		constexpr auto m_bIsActiveRendered = 0x448; // char : 1
		constexpr auto m_bCountTowardsHealingStats = 0x448; // char : 1
		constexpr auto c_HelpTipActor = 0x44c; // ObjectProperty
		constexpr auto m_fHealOverride = 0x454; // float
		constexpr auto m_fHoTOverride = 0x458; // float
		constexpr auto m_PendingTouches = 0x45c; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x68; // FRawDistributionVector
		constexpr auto Range = 0x8c; // FRawDistributionFloat
		constexpr auto Strength = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd4; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd4; // char : 1
		constexpr auto bOverrideVelocity = 0xd4; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd4; // char : 1
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // FExpressionInput
		constexpr auto Max = 0x118; // FExpressionInput
	}

	namespace n_ULevelStreamingAlwaysLoaded {
		constexpr auto bIsProceduralBuildingLODLevel = 0x100; // char : 1
	}

	namespace n_UTgSeqAct_DisplayTooltip {
		constexpr auto m_nMessageId = 0x108; // int32_t
		constexpr auto m_bLeftPlacement = 0x10c; // char : 1
	}

	namespace n_UUIDataChatManager {
		constexpr auto m_bSentReplyHelp = 0x70; // char : 1
		constexpr auto m_bLoadedEOMLobby = 0x70; // char : 1
		constexpr auto m_AllChatData = 0x74; // TArray<FChannelChatData>
		constexpr auto m_ReplyTargets = 0x84; // TArray<FString>
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Bias = 0xe4; // float
		constexpr auto Scale = 0xe8; // float
	}

	namespace n_UUIComponent_PartyLobbyPlayer {
		constexpr auto m_nDisplaySlot = 0x120; // int32_t
		constexpr auto m_nTickCallbackHandle = 0x124; // int32_t
		constexpr auto m_fDeclinedInviteTimer = 0x128; // float
		constexpr auto m_bPlayerReady = 0x12c; // char : 1
		constexpr auto m_bPromptsShown = 0x12c; // char : 1
		constexpr auto m_bPreviewingEmoteWheel = 0x12c; // char : 1
		constexpr auto m_bOldPlayerMutedState = 0x12c; // char : 1
		constexpr auto m_bShouldRefreshPreview = 0x12c; // char : 1
		constexpr auto m_eState = 0x130; // UIPARTYLOBBY_PLAYER_STATE
		constexpr auto m_pPreviewItem = 0x134; // ObjectProperty
		constexpr auto m_pOverrideSkin = 0x13c; // ObjectProperty
		constexpr auto m_mcPlayer = 0x144; // ObjectProperty
		constexpr auto m_mcPlayerName = 0x14c; // ObjectProperty
		constexpr auto m_mcPlayerTitle = 0x154; // ObjectProperty
		constexpr auto m_mcPlayerStatus = 0x15c; // ObjectProperty
		constexpr auto m_mcPlayerPrompt = 0x164; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerPromptKey = 0x174; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerPromptButton = 0x184; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerPromptText = 0x194; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerClassIcon = 0x1a4; // ObjectProperty
		constexpr auto m_mcPlayerStateIcon = 0x1ac; // ObjectProperty
		constexpr auto m_mcPlayerBackground = 0x1b4; // ObjectProperty
		constexpr auto m_mcPlayerTooltip = 0x1bc; // ObjectProperty
		constexpr auto m_mcPlayerTooltipText = 0x1c4; // ObjectProperty
		constexpr auto m_mcPlayerTooltipPrompt = 0x1cc; // ObjectProperty
		constexpr auto m_mcPlayerSpeakIcon = 0x1d4; // ObjectProperty
		constexpr auto m_pPlayerAvatar = 0x1dc; // ObjectProperty
		constexpr auto m_pAddButton = 0x1e4; // ObjectProperty
		constexpr auto m_pFrameButton = 0x1ec; // ObjectProperty
		constexpr auto m_pCrossplayIcon = 0x1f4; // ObjectProperty
	}

	namespace n_UTgAnimBlendByPhysics {
		constexpr auto PhysicsMap = 0x168; // int32_t [0xe]
		constexpr auto LastPhysics = 0x1a0; // int32_t
	}

	namespace n_ATgDeploy_PoppyBomb {
		constexpr auto r_bDetonated = 0x448; // char : 1
		constexpr auto m_CachedPlayer = 0x44c; // ObjectProperty
		constexpr auto r_HitNormal = 0x454; // FVector
		constexpr auto m_fCachedCollisionRadius = 0x460; // float
		constexpr auto m_fCachedCollisionHeight = 0x464; // float
		constexpr auto r_StuckRotation = 0x468; // FRotator
		constexpr auto r_CartOffset = 0x474; // FVector
	}

	namespace n_ATgDevice_BurstRifle {
		constexpr auto m_fQueueFireTime = 0xaec; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xaf0; // float
	}

	namespace n_UTgAIBehaviorCondition_ManaPercent {
		constexpr auto ManaPct = 0x98; // float
	}

	namespace n_USceneCapture2DHitMaskComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto SkeletalMeshComp = 0xd8; // ComponentProperty
		constexpr auto MaterialIndex = 0xe0; // int32_t
		constexpr auto ForceLOD = 0xe4; // int32_t
		constexpr auto HitMaskCullDistance = 0xe8; // int32_t
		constexpr auto FadingStartTimeSinceHit = 0xec; // float
		constexpr auto FadingPercentage = 0xf0; // float
		constexpr auto FadingDurationTime = 0xf4; // float
		constexpr auto FadingIntervalTime = 0xf8; // float
	}

	namespace n_UTgInventoryObject_Listen_AuraMod {
		constexpr auto m_AffectedActors = 0xc8; // TArray<ObjectProperty>
		constexpr auto m_bAuraIsActive = 0xd8; // char : 1
		constexpr auto m_CachedAuraDevice = 0xdc; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_MoveToRallyPoint {
		constexpr auto ArbitratorOnMultipleValid = 0x9c; // ESelectionArbitrator
		constexpr auto bMustBeSameLane = 0xa0; // char : 1
	}

	namespace n_UUIComponent_RatingInteractable {
		constexpr auto m_mcRatingIcon = 0x140; // ObjectProperty
	}

	namespace n_USeqAct_SetVectorComponents {
		constexpr auto OutVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_ATgDeploy_Rune {
		constexpr auto r_nRunes = 0x4e0; // int32_t [0x3]
	}

	namespace n_UDynamicLightEnvironmentComponent {
		constexpr auto State = 0xa8; // FPointer
		constexpr auto InvisibleUpdateTime = 0xb0; // float
		constexpr auto MinTimeBetweenFullUpdates = 0xb4; // float
		constexpr auto VelocityUpdateTimeScale = 0xb8; // float
		constexpr auto ShadowInterpolationSpeed = 0xbc; // float
		constexpr auto NumVolumeVisibilitySamples = 0xc0; // int32_t
		constexpr auto LightingBoundsScale = 0xc4; // float
		constexpr auto AmbientShadowColor = 0xc8; // FLinearColor
		constexpr auto AmbientShadowSourceDirection = 0xd8; // FVector
		constexpr auto AmbientGlow = 0xe4; // FLinearColor
		constexpr auto LightDistance = 0xf4; // float
		constexpr auto ShadowDistance = 0xf8; // float
		constexpr auto bCastShadows = 0xfc; // char : 1
		constexpr auto bCompositeShadowsFromDynamicLights = 0xfc; // char : 1
		constexpr auto bForceCompositeAllLights = 0xfc; // char : 1
		constexpr auto bAffectedBySmallDynamicLights = 0xfc; // char : 1
		constexpr auto bUseBooleanEnvironmentShadowing = 0xfc; // char : 1
		constexpr auto bShadowFromEnvironment = 0xfc; // char : 1
		constexpr auto bDynamic = 0xfc; // char : 1
		constexpr auto bSynthesizeDirectionalLight = 0xfc; // char : 1
		constexpr auto bSynthesizeSHLight = 0xfc; // char : 0
		constexpr auto bRequiresNonLatentUpdates = 0xfc; // char : 0
		constexpr auto bTraceFromClosestBoundsPoint = 0xfc; // char : 0
		constexpr auto bIsCharacterLightEnvironment = 0xfc; // char : 0
		constexpr auto bOverrideOwnerLightingChannels = 0xfc; // char : 0
		constexpr auto bAlwaysInfluencedByDominantDirectionalLight = 0xfc; // char : 0
		constexpr auto ModShadowFadeoutTime = 0x100; // float
		constexpr auto ModShadowFadeoutExponent = 0x104; // float
		constexpr auto MaxModulatedShadowColor = 0x108; // FLinearColor
		constexpr auto DominantShadowTransitionStartDistance = 0x118; // float
		constexpr auto DominantShadowTransitionEndDistance = 0x11c; // float
		constexpr auto MinShadowAngle = 0x120; // float
		constexpr auto BoundsMethod = 0x124; // EDynamicLightEnvironmentBoundsMethod
		constexpr auto OverriddenBounds = 0x128; // FBoxSphereBounds
		constexpr auto OverriddenLightingChannels = 0x144; // FLightingChannelContainer
		constexpr auto OverriddenLightComponents = 0x148; // TArray<ComponentProperty>
	}

	namespace n_UTgInventoryObject_Listen_HitWithPetDevice {
		constexpr auto m_bSkipActiveCheck = 0xd0; // char : 1
		constexpr auto m_bSkipStartCooldown = 0xd0; // char : 1
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
	}

	namespace n_UInterpTrackFaceFX {
		constexpr auto FaceFXAnimSets = 0xa0; // TArray<ObjectProperty>
		constexpr auto FaceFXSeqs = 0xb0; // TArray<FFaceFXTrackKey>
		constexpr auto CachedActorFXAsset = 0xc0; // ObjectProperty
		constexpr auto FaceFXSoundCueKeys = 0xc8; // TArray<FFaceFXSoundCueKey>
	}

	namespace n_UUIComponent_PartyLobbyCustomPanel {
		constexpr auto m_CustomPlayersArray = 0x120; // TArray<ObjectProperty>
		constexpr auto m_CustomPlayers = 0x130; // TMap<None, None>
		constexpr auto m_pCustomGame = 0x178; // ObjectProperty
		constexpr auto m_pList = 0x180; // ObjectProperty
		constexpr auto m_mcName = 0x188; // ObjectProperty
		constexpr auto m_mcPlayerCount = 0x190; // ObjectProperty
		constexpr auto m_fSpectatorUpdateTimer = 0x198; // float
		constexpr auto m_fSpectatorUpdateRate = 0x19c; // float
	}

	namespace n_UUIComponent_RankedProgress {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcRank = 0x128; // ObjectProperty
		constexpr auto m_mcWins = 0x130; // ObjectProperty
		constexpr auto m_mcLosses = 0x138; // ObjectProperty
		constexpr auto m_mcTier = 0x140; // ObjectProperty
		constexpr auto m_mcTPLabel = 0x148; // ObjectProperty
		constexpr auto m_mcTP = 0x150; // ObjectProperty
		constexpr auto m_pProgress = 0x158; // ObjectProperty
	}

	namespace n_UTgDataGroup_Game {
		constexpr auto m_PlayerData = 0x16c; // ObjectProperty
		constexpr auto m_TargetData = 0x174; // ObjectProperty
		constexpr auto m_PlayerVitals = 0x17c; // ObjectProperty
		constexpr auto m_GameData = 0x184; // ObjectProperty
		constexpr auto m_DevicesData = 0x18c; // ObjectProperty
		constexpr auto m_EffectData = 0x194; // ObjectProperty
	}

	namespace n_UParticleModuleTypeDataPhysX {
		constexpr auto PhysXParSys = 0x68; // ObjectProperty
		constexpr auto VerticalLod = 0x70; // FPhysXEmitterVerticalLodProperties
	}

	namespace n_ATgDoorMarker {
		constexpr auto r_eStatus = 0x29c; // DoorStatus
		constexpr auto m_eInitStatus = 0x29d; // DoorStatus
		constexpr auto s_CollisionProxy = 0x2a0; // ObjectProperty
		constexpr auto m_fProximity = 0x2a8; // float
		constexpr auto m_nTeamThatControlsDoor = 0x2ac; // int32_t
		constexpr auto m_nMeshAssemblyId = 0x2b0; // int32_t
		constexpr auto m_DoorSMC = 0x2b4; // ComponentProperty
	}

	namespace n_USeqAct_SetMaterial {
		constexpr auto NewMaterial = 0x108; // ObjectProperty
		constexpr auto MaterialIndex = 0x110; // int32_t
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x470; // ObjectProperty
		constexpr auto PlayerCamera = 0x478; // ObjectProperty
		constexpr auto CameraClass = 0x480; // ACamera*
		constexpr auto bFrozen = 0x488; // char : 1
		constexpr auto bPressedJump = 0x488; // char : 1
		constexpr auto bDoubleJump = 0x488; // char : 1
		constexpr auto bUpdatePosition = 0x488; // char : 1
		constexpr auto bUpdating = 0x488; // char : 1
		constexpr auto bNeverSwitchOnPickup = 0x488; // char : 1
		constexpr auto bCheatFlying = 0x488; // char : 1
		constexpr auto bCameraPositionLocked = 0x488; // char : 1
		constexpr auto bShortConnectTimeOut = 0x488; // char : 0
		constexpr auto bPendingDestroy = 0x488; // char : 0
		constexpr auto bWasSpeedHack = 0x488; // char : 0
		constexpr auto bWasSaturated = 0x488; // char : 0
		constexpr auto bAimingHelp = 0x488; // char : 0
		constexpr auto bCameraCut = 0x488; // char : 0
		constexpr auto bClientSimulatingViewTarget = 0x488; // char : 0
		constexpr auto bHasVoiceHandshakeCompleted = 0x488; // char : 0
		constexpr auto bCanPlayOnline = 0x488; // char : 0
		constexpr auto bCanShareUserCreatedContent = 0x488; // char : 0
		constexpr auto bCanCommunicateVoice = 0x488; // char : 0
		constexpr auto bPrivilegesInitialized = 0x488; // char : 0
		constexpr auto bCinematicMode = 0x488; // char : 0
		constexpr auto bInteractiveMode = 0x488; // char : 0
		constexpr auto bCinemaDisableInputMove = 0x488; // char : 0
		constexpr auto bCinemaDisableInputLook = 0x488; // char : 0
		constexpr auto bRenderHUDFullScreen = 0x488; // char : 0
		constexpr auto bIgnoreNetworkMessages = 0x488; // char : 0
		constexpr auto bShowKismetDrawText = 0x488; // char : 0
		constexpr auto bAcceptSendCorrections = 0x488; // char : 0
		constexpr auto bReplicateAllPawns = 0x488; // char : 0
		constexpr auto bIsUsingStreamingVolumes = 0x488; // char : 0
		constexpr auto bIsExternalUIOpen = 0x488; // char : 0
		constexpr auto bIsControllerConnected = 0x488; // char : 0
		constexpr auto bCheckSoundOcclusion = 0x48c; // char : 1
		constexpr auto bDebugCameraAnims = 0x48c; // char : 1
		constexpr auto bBlockCameraAnimsFromOverridingPostProcess = 0x48c; // char : 1
		constexpr auto bLogHearSoundOverflow = 0x48c; // char : 1
		constexpr auto bShowMoveErrors = 0x48c; // char : 1
		constexpr auto bCheckRelevancyThroughPortals = 0x48c; // char : 1
		constexpr auto bDebugClientAdjustPosition = 0x48c; // char : 1
		constexpr auto bIsInTimelapse = 0x48c; // char : 1
		constexpr auto bIsTimelapsePlayOfTheGame = 0x48c; // char : 0
		constexpr auto MaxResponseTime = 0x490; // float
		constexpr auto WaitDelay = 0x494; // float
		constexpr auto AcknowledgedPawn = 0x498; // ObjectProperty
		constexpr auto DoubleClickDir = 0x4a0; // EDoubleClickDir
		constexpr auto bIgnoreMoveInput = 0x4a1; // char
		constexpr auto bIgnoreLookInput = 0x4a2; // char
		constexpr auto bRun = 0x4a3; // char
		constexpr auto bDuck = 0x4a4; // char
		constexpr auto NetPlayerIndex = 0x4a5; // char
		constexpr auto ViewTarget = 0x4a8; // ObjectProperty
		constexpr auto RealViewTarget = 0x4b0; // ObjectProperty
		constexpr auto ControllingDirTrackInst = 0x4b8; // ObjectProperty
		constexpr auto FOVAngle = 0x4c0; // float
		constexpr auto DesiredFOV = 0x4c4; // float
		constexpr auto DefaultFOV = 0x4c8; // float
		constexpr auto LODDistanceFactor = 0x4cc; // float
		constexpr auto TargetViewRotation = 0x4d0; // FRotator
		constexpr auto TargetEyeHeight = 0x4dc; // float
		constexpr auto BlendedTargetViewRotation = 0x4e0; // FRotator
		constexpr auto myHUD = 0x4ec; // ObjectProperty
		constexpr auto mySecondaryHUD = 0x4f4; // ObjectProperty
		constexpr auto SavedMoveClass = 0x4fc; // USavedMove*
		constexpr auto SavedMoves = 0x504; // ObjectProperty
		constexpr auto FreeMoves = 0x50c; // ObjectProperty
		constexpr auto PendingMove = 0x514; // ObjectProperty
		constexpr auto LastAckedAccel = 0x51c; // FVector
		constexpr auto CurrentTimeStamp = 0x528; // float
		constexpr auto LastUpdateTime = 0x52c; // float
		constexpr auto ServerTimeStamp = 0x530; // float
		constexpr auto TimeMargin = 0x534; // float
		constexpr auto ClientUpdateTime = 0x538; // float
		constexpr auto MaxTimeMargin = 0x53c; // float
		constexpr auto LastActiveTime = 0x540; // float
		constexpr auto ClientCap = 0x544; // int32_t
		constexpr auto DynamicPingThreshold = 0x548; // float
		constexpr auto LastPingUpdate = 0x54c; // float
		constexpr auto LastSpeedHackLog = 0x550; // float
		constexpr auto PendingAdjustment = 0x554; // FClientAdjustment
		constexpr auto GroundPitch = 0x58c; // int32_t
		constexpr auto CheatManager = 0x590; // ObjectProperty
		constexpr auto CheatClass = 0x598; // UCheatManager*
		constexpr auto PlayerInput = 0x5a0; // ObjectProperty
		constexpr auto InputClass = 0x5a8; // UPlayerInput*
		constexpr auto FailedPathStart = 0x5b0; // FVector
		constexpr auto CylinderComponent = 0x5bc; // ComponentProperty
		constexpr auto ForceFeedbackManagerClassName = 0x5c4; // FString
		constexpr auto ForceFeedbackManager = 0x5d4; // ObjectProperty
		constexpr auto Interactions = 0x5dc; // TArray<ObjectProperty>
		constexpr auto VoiceMuteList = 0x5ec; // TArray<FUniqueNetId>
		constexpr auto GameplayVoiceMuteList = 0x5fc; // TArray<FUniqueNetId>
		constexpr auto VoicePacketFilter = 0x60c; // TArray<FUniqueNetId>
		constexpr auto ConnectedPeers = 0x61c; // TArray<FConnectedPeerInfo>
		constexpr auto BestNextHostPeers = 0x62c; // TArray<FUniqueNetId>
		constexpr auto MigratedSearchToJoin = 0x63c; // ObjectProperty
		constexpr auto OnlineSub = 0x644; // ObjectProperty
		constexpr auto VoiceInterface = 0x64c; // TScriptInterface<Class>
		constexpr auto OnlinePlayerData = 0x65c; // ObjectProperty
		constexpr auto InteractDistance = 0x664; // float
		constexpr auto DelayedJoinSessionName = 0x668; // FName
		constexpr auto InputRequests = 0x670; // TArray<FInputMatchRequest>
		constexpr auto LastBroadcastTime = 0x680; // float
		constexpr auto LastBroadcastString = 0x684; // FString [0x4]
		constexpr auto PendingMapChangeLevelNames = 0x6c4; // TArray<FName>
		constexpr auto MyCoverReplicator = 0x6d4; // ObjectProperty
		constexpr auto DebugTextList = 0x6dc; // TArray<FDebugTextInfo>
		constexpr auto SpectatorCameraSpeed = 0x6ec; // float
		constexpr auto PendingSwapConnection = 0x6f0; // ObjectProperty
		constexpr auto MinRespawnDelay = 0x6f8; // float
		constexpr auto MaxConcurrentHearSounds = 0x6fc; // int32_t
		constexpr auto HearSoundActiveComponents = 0x700; // TArray<ComponentProperty>
		constexpr auto HearSoundPoolComponents = 0x710; // TArray<ComponentProperty>
		constexpr auto HiddenActors = 0x720; // TArray<ObjectProperty>
		constexpr auto m_RigidBodyMaxPositionErrorThreshold = 0x730; // float
		constexpr auto LastSpectatorStateSynchTime = 0x734; // float
		constexpr auto CurrentUpdateDebugColor = 0x738; // FColor
		constexpr auto __OnMissingPeersUnregistered__Delegate = 0x73c; // DelegateProperty
		constexpr auto __CanUnpause__Delegate = 0x74c; // DelegateProperty
		constexpr auto __InputMatchDelegate__Delegate = 0x75c; // DelegateProperty
	}

	namespace n_ADynamicPylon {
		constexpr auto bMoving = 0x490; // char : 1
	}

	namespace n_UPath_WithinDistanceEnvelope {
		constexpr auto MaxDistance = 0x6c; // float
		constexpr auto MinDistance = 0x70; // float
		constexpr auto bSoft = 0x74; // char : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x74; // char : 1
		constexpr auto SoftStartPenalty = 0x78; // float
		constexpr auto EnvelopeTestPoint = 0x7c; // FVector
	}

	namespace n_UAnimNotify_ForceField {
		constexpr auto ForceFieldComponent = 0x68; // ComponentProperty
		constexpr auto bAttach = 0x70; // char : 1
		constexpr auto SocketName = 0x74; // FName
		constexpr auto BoneName = 0x7c; // FName
	}

	namespace n_USkelControlSpline {
		constexpr auto SplineLength = 0xd0; // int32_t
		constexpr auto SplineBoneAxis = 0xd4; // EAxis
		constexpr auto BoneRotMode = 0xd5; // ESplineControlRotMode
		constexpr auto bInvertSplineBoneAxis = 0xd8; // char : 1
		constexpr auto EndSplineTension = 0xdc; // float
		constexpr auto StartSplineTension = 0xe0; // float
	}

	namespace n_ADynamicTriggerVolume {
		constexpr auto bEnabled = 0x2bc; // char : 1
	}

	namespace n_UMcpGroupsBase {
		constexpr auto McpGroupsManagerClassName = 0x78; // FString
		constexpr auto GroupLists = 0x88; // TArray<FMcpGroupList>
		constexpr auto __OnCreateGroupComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteGroupComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryGroupsComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnAddGroupMembersComplete__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnRemoveGroupMembersComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnDeleteAllGroupsComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnQueryGroupInvitesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteComplete__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UPComImageDownloader {
		constexpr auto DownloadImages = 0x60; // TArray<FPComImageDownload>
		constexpr auto __OnPComImageDownloaded__Delegate = 0x70; // DelegateProperty
	}

	namespace n_ATgDeployableFactory_DeviceChest {
		constexpr auto m_nDeviceIds = 0x2dc; // TArray<int32_t>
	}

	namespace n_UPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenSpecTypes = 0x6c; // float
		constexpr auto InitLocation = 0x70; // FVector
		constexpr auto ReachSpecClass = 0x7c; // UReachSpec*
	}

	namespace n_UTgAnimTurnInPlace {
		constexpr auto bInitialized = 0x124; // char : 1
		constexpr auto bRootRotInitialized = 0x124; // char : 1
		constexpr auto m_bDisableRotation = 0x124; // char : 1
		constexpr auto bDelayBlendOutToPlayAnim = 0x124; // char : 1
		constexpr auto bPlayingTurnTransition = 0x124; // char : 1
		constexpr auto m_bCanChooseNewTransition = 0x124; // char : 1
		constexpr auto m_bOverrideInterpolationTime = 0x124; // char : 1
		constexpr auto m_bMirrorOffsetWhenPawnMirrored = 0x124; // char : 1
		constexpr auto m_bAlwaysUpdateYawOffset = 0x124; // char : 0
		constexpr auto m_bIgnoreTransitionAnimations = 0x124; // char : 0
		constexpr auto m_bOnlyUpdateRotationWhenMoving = 0x124; // char : 0
		constexpr auto m_bTurnTowardsVelocity = 0x124; // char : 0
		constexpr auto m_bUsePawnRotationAtZeroVelocity = 0x124; // char : 0
		constexpr auto m_bUse180ShortestRoute = 0x124; // char : 0
		constexpr auto m_bConstrictIdleYawOffset = 0x124; // char : 0
		constexpr auto m_bDisableAllTurning = 0x124; // char : 0
		constexpr auto m_bJustBecameRelevant = 0x124; // char : 0
		constexpr auto LastPawnYaw = 0x128; // int32_t
		constexpr auto LastPawnPitch = 0x12c; // int32_t
		constexpr auto PawnRotationRate = 0x130; // float
		constexpr auto LastRootBoneYaw = 0x134; // int32_t
		constexpr auto YawOffset = 0x138; // int32_t
		constexpr auto PitchOffset = 0x13c; // int32_t
		constexpr auto RelativeOffset = 0x140; // float
		constexpr auto m_TgPawn = 0x144; // ObjectProperty
		constexpr auto OffsetNodes2 = 0x14c; // TArray<ObjectProperty>
		constexpr auto RotTransitions = 0x15c; // TArray<FRotTransitionInfo>
		constexpr auto TransitionBlendTime = 0x16c; // float
		constexpr auto CurrentTransitionIndex = 0x170; // int32_t
		constexpr auto TransitionThresholdAngle = 0x174; // float
		constexpr auto m_ForcedTransitionAngle = 0x178; // ForcedTransitionAngle
		constexpr auto m_fChooseNewTransitionPercent = 0x17c; // float
		constexpr auto m_fInterpolationTime = 0x180; // float
		constexpr auto m_RemainingInterpolationTime = 0x184; // float
		constexpr auto PlayerNodes = 0x188; // TArray<ObjectProperty>
		constexpr auto m_fIgnoredTransitionTime = 0x198; // float
		constexpr auto m_fTurnInterpTime = 0x19c; // float
		constexpr auto m_InterpRotation = 0x1a0; // FRotator
	}

	namespace n_UTgData_Notifications {
		constexpr auto m_Notifications = 0xbc; // TArray<FNotification>
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHasEffectCategory {
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x98; // char : 1
		constexpr auto EffectCategoryId = 0x9c; // int32_t
		constexpr auto EffectGroupId = 0xa0; // int32_t
	}

	namespace n_UUIComponent_PopupManager {
		constexpr auto m_PopupStack = 0x118; // TArray<FSceneData>
		constexpr auto m_nCloseCurrentPopupHandle = 0x128; // int32_t
		constexpr auto m_bAllowPopups = 0x12c; // char : 1
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FFloatMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_USequenceAction {
		constexpr auto HandlerName = 0xec; // FName
		constexpr auto bCallHandler = 0xf4; // char : 1
		constexpr auto Targets = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_UUILandingPanelManager {
		constexpr auto VfTable_ITgCallbackInterface = 0x84; // FPointer
		constexpr auto m_pMovie = 0x8c; // ObjectProperty
		constexpr auto m_JsonDiscountData = 0x94; // TMap<None, None>
		constexpr auto m_CallbackContainer = 0xdc; // ObjectProperty
	}

	namespace n_UUIComponent_LeagueTierEntry {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x128; // ObjectProperty
		constexpr auto m_mcIcon = 0x130; // ObjectProperty
		constexpr auto m_mcLegendIcons = 0x138; // TArray<ObjectProperty>
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0xb0; // ObjectProperty
		constexpr auto DefaultTexture_Black = 0xb8; // ObjectProperty
		constexpr auto DefaultTexture_White = 0xc0; // ObjectProperty
		constexpr auto ConsoleKey = 0xc8; // FName
		constexpr auto TypeKey = 0xd0; // FName
		constexpr auto MaxScrollbackSize = 0xd8; // int32_t
		constexpr auto Scrollback = 0xdc; // TArray<FString>
		constexpr auto SBHead = 0xec; // int32_t
		constexpr auto SBPos = 0xf0; // int32_t
		constexpr auto HistoryTop = 0xf4; // int32_t
		constexpr auto HistoryBot = 0xf8; // int32_t
		constexpr auto HistoryCur = 0xfc; // int32_t
		constexpr auto History = 0x100; // FString [0x10]
		constexpr auto bNavigatingHistory = 0x200; // char : 1
		constexpr auto bCaptureKeyInput = 0x200; // char : 1
		constexpr auto bCtrl = 0x200; // char : 1
		constexpr auto bEnableUI = 0x200; // char : 1
		constexpr auto bAutoCompleteLocked = 0x200; // char : 1
		constexpr auto bRequireCtrlToNavigateAutoComplete = 0x200; // char : 1
		constexpr auto bIsRuntimeAutoCompleteUpToDate = 0x200; // char : 1
		constexpr auto TypedStr = 0x204; // FString
		constexpr auto TypedStrPos = 0x214; // int32_t
		constexpr auto ManualAutoCompleteList = 0x218; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteList = 0x228; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteIndex = 0x238; // int32_t
		constexpr auto AutoCompleteTree = 0x23c; // FAutoCompleteNode
		constexpr auto AutoCompleteIndices = 0x260; // TArray<int32_t>
	}

	namespace n_UTgAIBehaviorCondition_ArmorPercent {
		constexpr auto ArmorPct = 0x98; // float
	}

	namespace n_USlotToSlotReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UTgInventoryObject_Listen_LoogieExplodedHit {
		constexpr auto m_bNeedToApplyCooldown = 0xd0; // char : 1
	}

	namespace n_UTgHeadShotComponent {
		constexpr auto m_SkelComp = 0x25c; // ComponentProperty
		constexpr auto m_HeadBone = 0x264; // FName
		constexpr auto m_vHeadOffset = 0x26c; // FVector
	}

	namespace n_UTgAIBehaviorObject {
		constexpr auto NodeToken = 0x60; // int32_t
	}

	namespace n_UUIComponent_DeviceDetailsStat {
		constexpr auto m_mcTF = 0x120; // ObjectProperty
		constexpr auto m_mcBar = 0x128; // ObjectProperty
	}

	namespace n_UNavMeshGoalFilter_NotNearOtherAI {
		constexpr auto DistanceToCheck = 0x6c; // float
	}

	namespace n_UTgAnimNodeTriggerCameraAnim {
		constexpr auto CameraAnim = 0x114; // ObjectProperty
		constexpr auto fBlendInTime = 0x11c; // float
		constexpr auto fBlendOutTime = 0x120; // float
		constexpr auto bLoopAnimation = 0x124; // char : 1
		constexpr auto bBlendInOnBecomeRelevant = 0x124; // char : 1
		constexpr auto bBlendInOnReplayAnim = 0x124; // char : 1
		constexpr auto bBlendOutOnStopFire = 0x124; // char : 1
		constexpr auto bPlayAnimInLocalSpace = 0x124; // char : 1
		constexpr auto m_StopFireEquipSlotTarget = 0x128; // TG_EQUIP_POINT
		constexpr auto CameraAnimInst = 0x12c; // ObjectProperty
	}

	namespace n_USeqVar_Player {
		constexpr auto Players = 0xc4; // TArray<ObjectProperty>
		constexpr auto bAllPlayers = 0xd4; // char : 1
		constexpr auto PlayerIdx = 0xd8; // int32_t
	}

	namespace n_ATgDeployableFactory {
		constexpr auto nCurrentCount = 0x2c0; // int32_t
		constexpr auto s_fLastSpawnTime = 0x2c4; // float
		constexpr auto s_bSpawnOnce = 0x2c8; // char : 1
		constexpr auto bForcePreventDisenchant = 0x2c8; // char : 1
		constexpr auto s_nDeployableId = 0x2cc; // int32_t
		constexpr auto s_SpawnGroupNum = 0x2d0; // int32_t
		constexpr auto nShardCost = 0x2d4; // int32_t
		constexpr auto s_fDeployableLifeSpan = 0x2d8; // float
	}

	namespace n_UUIDataLeagueManager {
		constexpr auto m_LeagueArray = 0x70; // TArray<ObjectProperty>
		constexpr auto m_Leagues = 0x80; // TMap<None, None>
		constexpr auto m_EOM = 0xc8; // ObjectProperty
		constexpr auto m_TierChange = 0xd0; // ObjectProperty
	}

	namespace n_USeqAct_PlayCameraAnim {
		constexpr auto CameraAnim = 0x108; // ObjectProperty
		constexpr auto bLoop = 0x110; // char : 1
		constexpr auto bRandomStartTime = 0x110; // char : 1
		constexpr auto BlendInTime = 0x114; // float
		constexpr auto BlendOutTime = 0x118; // float
		constexpr auto Rate = 0x11c; // float
		constexpr auto IntensityScale = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto UserDefinedSpaceActor = 0x128; // ObjectProperty
	}

	namespace n_UTgTargetAimTrackingCurves {
		constexpr auto SettingsName = 0x60; // FName
		constexpr auto StrengthByAccuracyX = 0x68; // FRawDistributionFloat
		constexpr auto StrengthByDesiredAngleX = 0x8c; // FRawDistributionFloat
		constexpr auto StrengthByAccuracyY = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDesiredAngleY = 0xd4; // FRawDistributionFloat
	}

	namespace n_ATgDevice_AndroxusInhand {
		constexpr auto m_nAndroLeg2StackCount = 0xaec; // int32_t
		constexpr auto m_fQueueFireTime = 0xaf0; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xaf4; // float
	}

	namespace n_UInterpTrackInstFaceFX {
		constexpr auto bFirstUpdate = 0x60; // char : 1
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UUIDataProvider_OnlinePlayerStorageArray {
		constexpr auto PlayerStorage = 0x70; // ObjectProperty
		constexpr auto PlayerStorageId = 0x78; // int32_t
		constexpr auto ColumnHeaderText = 0x7c; // FString
		constexpr auto Values = 0x8c; // TArray<FName>
	}

	namespace n_UTgAIBehaviorAction_MoveToAvoidableProjectile {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // char : 1
		constexpr auto bMoveAway = 0x9c; // char : 1
	}

	namespace n_UUIComponent_OwnershipProgress {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcOwnedAmt = 0x128; // ObjectProperty
		constexpr auto m_mcTotalAmt = 0x130; // ObjectProperty
		constexpr auto m_mcProgress = 0x138; // ObjectProperty
	}

	namespace n_UMcpClashMobBase {
		constexpr auto McpClashMobClassName = 0x78; // FString
		constexpr auto __OnQueryChallengeListComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDownloadChallengeFileComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnAcceptChallengeComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryChallengeUserStatusComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserProgressComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserRewardComplete__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UTgAnimNodeFidget {
		constexpr auto m_SelectedIdleTimeBeforeFidgeting = 0x144; // float
		constexpr auto m_CurrentIdleTime = 0x148; // float
		constexpr auto BlendToFidgetDuration = 0x14c; // float
		constexpr auto BlendFromFidgetDuration = 0x150; // float
		constexpr auto FidgetType = 0x154; // EFidgetType
		constexpr auto MinimumIdleTimeBeforeFidgeting = 0x158; // float
		constexpr auto MaximumIdleTimeBeforeFidgeting = 0x15c; // float
		constexpr auto AllowIdleAnimToComplete = 0x160; // char : 1
		constexpr auto ChanceToFidgetWhenIdleCompletes = 0x164; // float
	}

	namespace n_UUIData_TreasureRoll {
		constexpr auto m_pChestItem = 0x60; // ObjectProperty
		constexpr auto m_dwRollDelay = 0x68; // Fdword
		constexpr auto m_pRolledItems = 0x6c; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SetPlayerLevel {
		constexpr auto m_nLevel = 0x108; // int32_t
	}

	namespace n_UTgAnimNodeBlendByMeleeIdle {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_ATgSpawnTeleporterExit {
		constexpr auto nTaskForce = 0x280; // int32_t
		constexpr auto nLane = 0x284; // int32_t
		constexpr auto nGamePhase = 0x288; // int32_t
		constexpr auto nPriority = 0x28c; // int32_t
		constexpr auto bEnabled = 0x290; // char : 1
	}

	namespace n_UTgAIBehaviorComposite_SubTree {
		constexpr auto ChildTree = 0xb8; // ObjectProperty
	}

	namespace n_UOnlineTitleFileDownloadMcp {
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileMcp>
		constexpr auto DownloadCount = 0x114; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NearbyAllyAttacked {
		constexpr auto TimeThreshold = 0x98; // float
		constexpr auto AllyDistanceThreshold = 0x9c; // float
		constexpr auto AttackerDistanceThreshold = 0xa0; // float
	}

	namespace n_USeqAct_ConvertToString {
		constexpr auto bIncludeVarComment = 0x108; // char : 1
		constexpr auto VarSeparator = 0x10c; // FString
		constexpr auto NumberOfInputs = 0x11c; // int32_t
	}

	namespace n_UTgGameplayCurvesSet_Recoil {
		constexpr auto HorizRecoil = 0x64; // TArray<ObjectProperty>
		constexpr auto VertRecoil = 0x74; // TArray<ObjectProperty>
		constexpr auto RecoilType = 0x84; // EPaladinsRecoilType
	}

	namespace n_UTgAIUtilityFilter_DistanceFromPawn {
		constexpr auto DistanceCutoff = 0xc0; // float
		constexpr auto bInverse = 0xc4; // char : 1
	}

	namespace n_UUIDataProvider_MenuItem {
		constexpr auto OptionType = 0x94; // EMenuOptionType
		constexpr auto OptionSet = 0x98; // TArray<FName>
		constexpr auto DataStoreMarkup = 0xa8; // FString
		constexpr auto DescriptionMarkup = 0xb8; // FString
		constexpr auto RequiredGameMode = 0xc8; // FName
		constexpr auto FriendlyName = 0xd0; // FString
		constexpr auto CustomFriendlyName = 0xe0; // FString
		constexpr auto Description = 0xf0; // FString
		constexpr auto bEditableCombo = 0x100; // char : 1
		constexpr auto bNumericCombo = 0x100; // char : 1
		constexpr auto bKeyboardOrMouseOption = 0x100; // char : 1
		constexpr auto bOnlineOnly = 0x100; // char : 1
		constexpr auto bOfflineOnly = 0x100; // char : 1
		constexpr auto bSearchAllInis = 0x100; // char : 1
		constexpr auto bRemoveOn360 = 0x100; // char : 1
		constexpr auto bRemoveOnPC = 0x100; // char : 1
		constexpr auto bRemoveOnPS3 = 0x100; // char : 0
		constexpr auto bRemoveOnDingo = 0x100; // char : 0
		constexpr auto EditBoxMaxLength = 0x104; // int32_t
		constexpr auto RangeData = 0x108; // FUIRangeData
		constexpr auto SchemaCellFields = 0x11c; // TArray<FName>
		constexpr auto IniName = 0x12c; // FString
	}

	namespace n_UNavMeshGoalFilter_MinPathDistance {
		constexpr auto MinDistancePathShouldBe = 0x6c; // int32_t
	}

	namespace n_AWebServer {
		constexpr auto ServerName = 0x2e4; // FString
		constexpr auto Applications = 0x2f4; // FString [0xa]
		constexpr auto ApplicationPaths = 0x394; // FString [0xa]
		constexpr auto bEnabled = 0x434; // char : 1
		constexpr auto ListenPort = 0x438; // int32_t
		constexpr auto MaxConnections = 0x43c; // int32_t
		constexpr auto DefaultApplication = 0x440; // int32_t
		constexpr auto ExpirationSeconds = 0x444; // int32_t
		constexpr auto ServerURL = 0x448; // FString
		constexpr auto ApplicationObjects = 0x458; // ObjectProperty [0xa]
		constexpr auto ConnectionCount = 0x4a8; // int32_t
		constexpr auto ConnID = 0x4ac; // int32_t
	}

	namespace n_ATgDevice_ChurchillInhand {
		constexpr auto m_fADSRecoilMultiplier = 0xaec; // float
		constexpr auto m_fAmmoRefundChanceADS = 0xaf0; // float
		constexpr auto m_fAmmoRefundPercOnHit = 0xaf4; // float
		constexpr auto m_CachedPawnOwner = 0xaf8; // ObjectProperty
	}

	namespace n_ATgDeviceVolume {
		constexpr auto bPainCausing = 0x2bc; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x2bc; // char : 1
		constexpr auto s_bDeviceActive = 0x2bc; // char : 1
		constexpr auto PainTimer = 0x2c0; // ObjectProperty
		constexpr auto DamageInstigator = 0x2c8; // ObjectProperty
		constexpr auto m_nMapObjectId = 0x2d0; // int32_t
		constexpr auto s_nDeviceId = 0x2d4; // int32_t
		constexpr auto s_DeviceFireMode = 0x2d8; // ObjectProperty
		constexpr auto s_nTaskForce = 0x2e0; // char
	}

	namespace n_UForceFeedbackWaveform {
		constexpr auto bIsLooping = 0x60; // char : 1
		constexpr auto Samples = 0x64; // TArray<FWaveformSample>
		constexpr auto WaveformFalloffStartDistance = 0x74; // float
		constexpr auto MaxWaveformDistance = 0x78; // float
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x74; // FName
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0xbc; // FName
		constexpr auto ExpressionGUID = 0xc4; // FGuid
		constexpr auto Group = 0xd4; // FName
	}

	namespace n_UUIComponent_GoalReward {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcItemName = 0x128; // ObjectProperty
		constexpr auto m_mcGoal = 0x130; // ObjectProperty
		constexpr auto m_mcOwned = 0x138; // ObjectProperty
		constexpr auto m_mcLock = 0x140; // ObjectProperty
		constexpr auto m_mcIconRarity = 0x148; // ObjectProperty
		constexpr auto m_mcIconIcon = 0x150; // ObjectProperty
		constexpr auto m_mcIconChestIcon = 0x158; // ObjectProperty
		constexpr auto m_Progress = 0x160; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassPicks {
		constexpr auto m_grGroup = 0x120; // ObjectProperty
		constexpr auto m_mcPicksHeader = 0x128; // ObjectProperty
		constexpr auto m_mcBPActiveThrough = 0x130; // ObjectProperty
		constexpr auto m_mcBonusLabel = 0x138; // ObjectProperty
		constexpr auto m_mcBonusAmount = 0x140; // ObjectProperty
		constexpr auto m_pSpoilerToggle = 0x148; // ObjectProperty
		constexpr auto m_pPickWeeks = 0x150; // ObjectProperty
		constexpr auto m_pBecomeBP = 0x158; // ObjectProperty
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0xb0; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0xc0; // FGuid
	}

	namespace n_ATgDevice_Telepunch {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
		constexpr auto m_HitCharacter = 0xaf4; // ObjectProperty
		constexpr auto m_bLiftApplied = 0xafc; // char : 1
		constexpr auto m_bStealthApplied = 0xafc; // char : 1
		constexpr auto m_fLerpTime = 0xb00; // float
		constexpr auto m_vHitCharacterInitialLocation = 0xb04; // FVector
		constexpr auto m_fHorizontalHitMaxDist = 0xb10; // float
		constexpr auto m_fVerticalHitMaxDist = 0xb14; // float
		constexpr auto m_fTeleportPreferedDistance = 0xb18; // float
		constexpr auto m_fTargetLockTime = 0xb1c; // float
	}

	namespace n_USeqAct_SetString {
		constexpr auto Target = 0x108; // FString
		constexpr auto Value = 0x118; // FString
	}

	namespace n_UMaterialExpressionFluidNormal {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
	}

	namespace n_ATgDevice_VanguardShield {
		constexpr auto __InterruptFiringDelegate__Delegate = 0xaec; // DelegateProperty
	}

	namespace n_ATgDevice_FragGrenade {
		constexpr auto m_bThrownGrenade = 0xaec; // char : 1
	}

	namespace n_UUIInteractable_NavPanel_Play {
		constexpr auto m_fFlareScaleTime = 0x168; // float [0x4]
		constexpr auto m_fFlareAlphaTime = 0x178; // float [0x5]
		constexpr auto m_fFlareScaleTimer = 0x18c; // float [0x4]
		constexpr auto m_fFlareAlphaTimer = 0x19c; // float [0x5]
		constexpr auto m_mcFlare = 0x1b0; // ObjectProperty
		constexpr auto m_mcQueueTF0 = 0x1b8; // ObjectProperty
		constexpr auto m_mcQueueTF1 = 0x1c0; // ObjectProperty
		constexpr auto m_mcPrompt = 0x1c8; // ObjectProperty
		constexpr auto m_mcCTATF = 0x1d0; // ObjectProperty
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x80; // TArray<FCameraShakeInstance>
		constexpr auto SplitScreenShakeScale = 0x90; // float
	}

	namespace n_UTgSeqAct_ToggleStaticMeshSilhouette {
		constexpr auto SMA = 0x108; // ObjectProperty
		constexpr auto bIsEnabled = 0x110; // char : 1
	}

	namespace n_UTgSeqEvent_PlayerMoved {
		constexpr auto ResultEnergy = 0x128; // int32_t
	}

	namespace n_ATgAIController_Behavior {
		constexpr auto DeferredNodes = 0x68c; // TArray<FDeferredNode>
		constexpr auto BlackboardType = 0x69c; // int32_t
		constexpr auto BehaviorTreeAsName = 0x6a0; // FName
		constexpr auto SensorTree = 0x6a8; // FPointer
		constexpr auto SensorDynamicMemory = 0x6b0; // FPointer
		constexpr auto SensorStaticMemory = 0x6b8; // FPointer
		constexpr auto WorkerTree = 0x6c0; // FPointer
		constexpr auto WorkerTreeCachedStatus = 0x6c8; // FPointer
		constexpr auto WorkerDynamicMemory = 0x6d0; // FPointer
		constexpr auto WorkerStaticMemory = 0x6d8; // FPointer
		constexpr auto SensorNodeCount = 0x6e0; // int32_t
		constexpr auto WorkerNodeCount = 0x6e4; // int32_t
		constexpr auto LastUpdateTime = 0x6e8; // float
		constexpr auto CachedNodeData = 0x6ec; // TArray<FBehaviorStateData>
		constexpr auto m_fCooldownModifier = 0x6fc; // float
		constexpr auto m_fLeadAccuracy = 0x700; // float
		constexpr auto m_fDegreeMissedMagnitude = 0x704; // float
		constexpr auto m_fMissLikelihood = 0x708; // float
		constexpr auto LocalRepulsorSolver = 0x70c; // ObjectProperty
		constexpr auto LocalRepulsorSolverClass = 0x714; // UTgAILocalPositionSolver*
		constexpr auto m_IgnoredDeployableIds = 0x71c; // TArray<int32_t>
		constexpr auto CurrentNavigation = 0x72c; // FNavigationQueueEntry
		constexpr auto NavigationSearchModifier = 0x758; // float
		constexpr auto NavigationSearchModifier_Max = 0x75c; // float
		constexpr auto NavigationSearchModifier_Min = 0x760; // float
		constexpr auto TimeStuck = 0x764; // float
		constexpr auto FollowLaneForwardState = 0x768; // FFollowLaneState
		constexpr auto FollowLaneReverseState = 0x770; // FFollowLaneState
		constexpr auto bIsAlive = 0x778; // char : 1
		constexpr auto m_bPaused = 0x778; // char : 1
		constexpr auto bIsRotationLocked = 0x778; // char : 1
		constexpr auto bIsStunned = 0x778; // char : 1
		constexpr auto bInHostileAbility = 0x778; // char : 1
		constexpr auto bIsSafeToRecall = 0x778; // char : 1
		constexpr auto bInEnemyTowerRadius = 0x778; // char : 1
		constexpr auto bInFriendlyTowerRadius = 0x778; // char : 1
		constexpr auto bInEnemyMinotaurRadius = 0x778; // char : 0
		constexpr auto bInFriendlyMinotaurRadius = 0x778; // char : 0
		constexpr auto bIsTargetOfEnemyTowerOrMinotaur = 0x778; // char : 0
		constexpr auto bCombatTargetInEnemyTowerRadius = 0x778; // char : 0
		constexpr auto bCombatTargetInFriendlyTowerRadius = 0x778; // char : 0
		constexpr auto bCombatTargetInEnemyMinotaurRadius = 0x778; // char : 0
		constexpr auto bCombatTargetInFriendlyMinotaurRadius = 0x778; // char : 0
		constexpr auto bCombatTargetIsTargetOfFriendlyTowerOrMinotaur = 0x778; // char : 0
		constexpr auto bIsAtFortress = 0x778; // char : 0
		constexpr auto bIsAtEnemyFortress = 0x778; // char : 0
		constexpr auto bIsAtCachedRallyPoint = 0x778; // char : 0
		constexpr auto bBtDebugSpawnPaused = 0x778; // char : 0
		constexpr auto bBtDebugPaused = 0x778; // char : 0
		constexpr auto bBtDebugStep = 0x778; // char : 0
		constexpr auto bBtDebugClientOverlay = 0x778; // char : 0
		constexpr auto NextFearDirection = 0x77c; // FVector
		constexpr auto PawnCollisionHeight = 0x788; // float
		constexpr auto PawnCollisionRadius = 0x78c; // float
		constexpr auto DeviceRanges = 0x790; // float [0x14]
		constexpr auto CombatTarget = 0x7e0; // ObjectProperty
		constexpr auto CombatTargetAsPawn = 0x7e8; // ObjectProperty
		constexpr auto EnemyMinionsInEnemyTowerRadius = 0x7f0; // int32_t
		constexpr auto FriendlyMinionsInEnemyTowerRadius = 0x7f4; // int32_t
		constexpr auto EnemyMinionsInFriendlyTowerRadius = 0x7f8; // int32_t
		constexpr auto FriendlyMinionsInFriendlyTowerRadius = 0x7fc; // int32_t
		constexpr auto EnemyGodsInEnemyTowerRadius = 0x800; // int32_t
		constexpr auto FriendlyGodsInEnemyTowerRadius = 0x804; // int32_t
		constexpr auto EnemyGodsInFriendlyTowerRadius = 0x808; // int32_t
		constexpr auto FriendlyGodsInFriendlyTowerRadius = 0x80c; // int32_t
		constexpr auto HealthOfNearestEnemyTower = 0x810; // float
		constexpr auto HealthOfNearestFriendlyTower = 0x814; // float
		constexpr auto LaneMoveTarget = 0x818; // ObjectProperty
		constexpr auto VisibleActorsToAvoid = 0x820; // TArray<ObjectProperty>
		constexpr auto CachedTowers = 0x830; // TArray<ObjectProperty>
		constexpr auto CachedGods = 0x840; // TArray<ObjectProperty>
		constexpr auto EnemyControllersInSightRadius = 0x850; // TArray<ObjectProperty>
		constexpr auto FriendlyControllersInSightRadius = 0x860; // TArray<ObjectProperty>
		constexpr auto Difficulty = 0x870; // EBotDifficultyLevel
		constexpr auto LastUseDeviceAimType = 0x871; // EUseDeviceAimType
		constexpr auto TargetLastKnownLocation = 0x874; // FVector
		constexpr auto CurrentAssaultPoint = 0x880; // ObjectProperty
		constexpr auto m_fUnstuckJumpFrequency = 0x888; // float
		constexpr auto m_fLastUnstuckJumpTime = 0x88c; // float
		constexpr auto IncomingDamage = 0x890; // TArray<FIncomingDamageEntry>
		constexpr auto CachedRallyVolume = 0x8a0; // ObjectProperty
		constexpr auto RandomRallyPointIndex = 0x8a8; // int32_t
		constexpr auto AlliedFortressLookDir = 0x8ac; // FVector
		constexpr auto EnemyFortressLookDir = 0x8b8; // FVector
		constexpr auto AlliedFortress = 0x8c4; // ObjectProperty
		constexpr auto EnemyFortress = 0x8cc; // ObjectProperty
		constexpr auto StrafeDir = 0x8d4; // FVector
		constexpr auto LastStrafeDirUpdate = 0x8e0; // float
		constexpr auto StrafeDirUpdateTime = 0x8e4; // float
		constexpr auto UtilityHandleClass = 0x8e8; // UTgAIUtilityHandle*
		constexpr auto UtilityHandle = 0x8f0; // ObjectProperty
		constexpr auto EscortActor = 0x8f8; // ObjectProperty
		constexpr auto EscortMinDistance = 0x900; // float
		constexpr auto EscortMaxDistance = 0x904; // float
		constexpr auto m_nDevicesLockingInput = 0x908; // int32_t
	}

	namespace n_UCloudSaveSystem {
		constexpr auto KeyValueStore = 0x60; // TScriptInterface<Class>
		constexpr auto DataBlobStore = 0x70; // TScriptInterface<Class>
		constexpr auto OnGetSaveDataCallbacks = 0x80; // TArray<FGetSaveDataCallbackStruct>
		constexpr auto OnSetSaveDataCallbacks = 0x90; // TArray<FSetSaveDataCallbackStruct>
		constexpr auto DeleteSaveDataCallback = 0xa0; // DelegateProperty
		constexpr auto ActiveSlotForDelete = 0xb0; // int32_t
		constexpr auto ActiveSaveSlotOperations = 0xb4; // TArray<FSaveSlotOperation>
		constexpr auto __OnGetSaveDataCallback__Delegate = 0xc4; // DelegateProperty
		constexpr auto __SaveSystemCallback__Delegate = 0xd4; // DelegateProperty
	}

	namespace n_UClient {
		constexpr auto MinDesiredFrameRate = 0x68; // float
		constexpr auto DisplayGamma = 0x6c; // float
		constexpr auto InitialButtonRepeatDelay = 0x70; // float
		constexpr auto ButtonRepeatDelay = 0x74; // float
	}

	namespace n_USeqAct_GetLocationAndRotation {
		constexpr auto Location = 0x108; // FVector
		constexpr auto RotationVector = 0x114; // FVector
		constexpr auto Rotation = 0x120; // FVector
		constexpr auto SocketOrBoneName = 0x12c; // FName
	}

	namespace n_UGameCheatManager {
		constexpr auto DebugCameraControllerRef = 0x80; // ObjectProperty
		constexpr auto DebugCameraControllerClass = 0x88; // ADebugCameraController*
		constexpr auto DebugCameraControllerClassName = 0x90; // FString
	}

	namespace n_UUIComponent_ShopItems {
		constexpr auto m_bRealMoneyDataReady = 0x120; // char : 1
		constexpr auto m_mcLoadingTF = 0x124; // ObjectProperty
		constexpr auto m_pPrevArrow = 0x12c; // ObjectProperty
		constexpr auto m_pNextArrow = 0x134; // ObjectProperty
		constexpr auto m_pItemList = 0x13c; // ObjectProperty
		constexpr auto m_grInput = 0x144; // ObjectProperty
		constexpr auto m_akOwnedItemClicked = 0x14c; // ObjectProperty
	}

	namespace n_UParticleModuleUberRainSplashB {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto ColorOverLife = 0xc0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0xe4; // FRawDistributionFloat
		constexpr auto LifeMultiplier = 0x108; // FRawDistributionVector
		constexpr auto MultiplyX = 0x12c; // char : 1
		constexpr auto MultiplyY = 0x12c; // char : 1
		constexpr auto MultiplyZ = 0x12c; // char : 1
		constexpr auto StartRotationRate = 0x130; // FRawDistributionFloat
	}

	namespace n_UPBRuleNodeBase {
		constexpr auto NextRules = 0x60; // TArray<FPBRuleLink>
	}

	namespace n_UTgSkelCon_WheelSpinner {
		constexpr auto m_fWheelRadius = 0x100; // float
		constexpr auto m_vAxis = 0x104; // FVector
		constexpr auto m_fVelocity = 0x110; // float
	}

	namespace n_UTgDeviceForm_HexaFire {
		constexpr auto m_LeftRocket1p = 0x2bc; // ObjectProperty
		constexpr auto m_LeftRocket3p = 0x2c4; // ObjectProperty
		constexpr auto m_RightRocket1p = 0x2cc; // ObjectProperty
		constexpr auto m_RightRocket3p = 0x2d4; // ObjectProperty
		constexpr auto m_bFiringRightRocket = 0x2dc; // char : 1
	}

	namespace n_ATgDeploy_Molotov {
		constexpr auto m_PointInfos = 0x1a64; // TArray<FMolotovPointInfo>
		constexpr auto m_CenterInfo = 0x1a74; // FMolotovCenterInfo
		constexpr auto m_TriInfos = 0x1abc; // TArray<FMolotovTriangleInfo>
		constexpr auto m_StrandInfos = 0x1acc; // TArray<FMolotovStrandInfo>
		constexpr auto m_GrowthInfo = 0x1adc; // FMolotovGrowthInfo
		constexpr auto m_Settings = 0x1af8; // FMolotovGeneralSettings
	}

	namespace n_UUIScene_UIClassSelect {
		constexpr auto m_dwHoveredClass = 0x154; // Fdword
		constexpr auto m_pClassList = 0x158; // ObjectProperty
		constexpr auto m_pInfoPanel = 0x160; // ObjectProperty
		constexpr auto m_grInput = 0x168; // ObjectProperty
	}

	namespace n_USeqEvent_MobileLook {
		constexpr auto Yaw = 0x138; // float
		constexpr auto StickStrength = 0x13c; // float
		constexpr auto RotationVector = 0x140; // FVector
	}

	namespace n_USeqAct_CastToInt {
		constexpr auto bTruncate = 0x108; // char : 1
		constexpr auto Value = 0x10c; // float
		constexpr auto IntResult = 0x110; // int32_t
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0xa0; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UInterpGroup {
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto InterpTracks = 0x68; // TArray<ObjectProperty>
		constexpr auto GroupName = 0x78; // FName
		constexpr auto GroupColor = 0x80; // FColor
		constexpr auto GroupAnimSets = 0x84; // TArray<ObjectProperty>
		constexpr auto bCollapsed = 0x94; // char : 1
		constexpr auto bVisible = 0x94; // char : 1
		constexpr auto bIsFolder = 0x94; // char : 1
		constexpr auto bIsParented = 0x94; // char : 1
		constexpr auto bIsSelected = 0x94; // char : 1
	}

	namespace n_UParticleModulePhysicsVolumes {
		constexpr auto GlobalInfluence = 0x68; // FRawDistributionFloat
		constexpr auto LevelInfluenceType = 0x8c; // EParticleLevelInfluenceType
	}

	namespace n_USeqAct_MultiLevelStreaming {
		constexpr auto Levels = 0x124; // TArray<FLevelStreamingNameCombo>
		constexpr auto bUnloadAllOtherLevels = 0x134; // char : 1
		constexpr auto bStatusIsOk = 0x134; // char : 1
	}

	namespace n_UParticleModuleUberLTISIVCLILIRSSBLIRR {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
		constexpr auto StartRotation = 0x174; // FRawDistributionFloat
		constexpr auto SizeLifeMultiplier = 0x198; // FRawDistributionVector
		constexpr auto SizeMultiplyX = 0x1bc; // char : 1
		constexpr auto SizeMultiplyY = 0x1bc; // char : 1
		constexpr auto SizeMultiplyZ = 0x1bc; // char : 1
		constexpr auto StartRotationRate = 0x1c0; // FRawDistributionFloat
	}

	namespace n_UUISceneClient {
		constexpr auto VfTable_FExec = 0x70; // FPointer
		constexpr auto RenderViewport = 0x78; // FPointer
		constexpr auto MousePosition = 0x80; // FIntPoint
		constexpr auto DataStoreManager = 0x88; // ObjectProperty
		constexpr auto CanvasToScreen = 0x90; // FMatrix
		constexpr auto InvCanvasToScreen = 0xd0; // FMatrix
		constexpr auto UIScenePostProcess = 0x110; // ObjectProperty
		constexpr auto bEnablePostProcess = 0x118; // char : 1
	}

	namespace n_USpeedTreeComponentFactory {
		constexpr auto SpeedTreeComponent = 0x64; // ComponentProperty
	}

	namespace n_UOnlineStatsRead {
		constexpr auto LeaderboardName = 0x84; // FString
	}

	namespace n_USeqEvent_Console {
		constexpr auto ConsoleEventName = 0x128; // FName
		constexpr auto EventDesc = 0x130; // FString
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UTextureRenderTarget {
		constexpr auto bUpdateImmediate = 0x100; // char : 1
		constexpr auto bNeedsTwoCopies = 0x100; // char : 1
		constexpr auto bRenderOnce = 0x100; // char : 1
		constexpr auto TargetGamma = 0x104; // float
	}

	namespace n_UPBRuleNodeLODQuad {
		constexpr auto MassiveLODDistanceScale = 0x70; // float
	}

	namespace n_UOnlineAuthInterfaceImpl {
		constexpr auto VfTable_IOnlineAuthInterface = 0x60; // FPointer
		constexpr auto OwningSubsystem = 0x68; // ObjectProperty
		constexpr auto bAuthReady = 0x70; // char : 1
		constexpr auto ClientAuthSessions = 0x74; // FSparseArray_Mirror
		constexpr auto ServerAuthSessions = 0xac; // FSparseArray_Mirror
		constexpr auto PeerAuthSessions = 0xe4; // FSparseArray_Mirror
		constexpr auto LocalClientAuthSessions = 0x11c; // FSparseArray_Mirror
		constexpr auto LocalServerAuthSessions = 0x154; // FSparseArray_Mirror
		constexpr auto LocalPeerAuthSessions = 0x18c; // FSparseArray_Mirror
		constexpr auto AuthReadyDelegates = 0x1c4; // TArray<DelegateProperty>
		constexpr auto ClientAuthRequestDelegates = 0x1d4; // TArray<DelegateProperty>
		constexpr auto ServerAuthRequestDelegates = 0x1e4; // TArray<DelegateProperty>
		constexpr auto ClientAuthResponseDelegates = 0x1f4; // TArray<DelegateProperty>
		constexpr auto ServerAuthResponseDelegates = 0x204; // TArray<DelegateProperty>
		constexpr auto ClientAuthCompleteDelegates = 0x214; // TArray<DelegateProperty>
		constexpr auto ServerAuthCompleteDelegates = 0x224; // TArray<DelegateProperty>
		constexpr auto ClientAuthEndSessionRequestDelegates = 0x234; // TArray<DelegateProperty>
		constexpr auto ServerAuthRetryRequestDelegates = 0x244; // TArray<DelegateProperty>
		constexpr auto ClientConnectionCloseDelegates = 0x254; // TArray<DelegateProperty>
		constexpr auto ServerConnectionCloseDelegates = 0x264; // TArray<DelegateProperty>
		constexpr auto __OnAuthReady__Delegate = 0x274; // DelegateProperty
		constexpr auto __OnClientAuthRequest__Delegate = 0x284; // DelegateProperty
		constexpr auto __OnServerAuthRequest__Delegate = 0x294; // DelegateProperty
		constexpr auto __OnClientAuthResponse__Delegate = 0x2a4; // DelegateProperty
		constexpr auto __OnServerAuthResponse__Delegate = 0x2b4; // DelegateProperty
		constexpr auto __OnClientAuthComplete__Delegate = 0x2c4; // DelegateProperty
		constexpr auto __OnServerAuthComplete__Delegate = 0x2d4; // DelegateProperty
		constexpr auto __OnClientAuthEndSessionRequest__Delegate = 0x2e4; // DelegateProperty
		constexpr auto __OnServerAuthRetryRequest__Delegate = 0x2f4; // DelegateProperty
		constexpr auto __OnClientConnectionClose__Delegate = 0x304; // DelegateProperty
		constexpr auto __OnServerConnectionClose__Delegate = 0x314; // DelegateProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Viktor {
		constexpr auto m_MarkedTargets = 0xd0; // TArray<FTimedMarkedTarget>
	}

	namespace n_UTgCached_LootItem {
		constexpr auto m_nId = 0x60; // int32_t
		constexpr auto m_fDropChance = 0x64; // float
		constexpr auto m_nQuantity = 0x68; // int32_t
	}

	namespace n_ATgDeploy_LootCrateBasic {
		constexpr auto r_bIsChestOpened = 0x4b4; // char : 1
	}

	namespace n_UTgAnimNotify_AkEvent {
		constexpr auto m_SkinOverrideList = 0x7c; // TArray<FPSE_SkinAk>
	}

	namespace n_ATgDevice_ArcingBeam {
		constexpr auto m_ArcingList = 0xaec; // TArray<FArcingInfo>
		constexpr auto m_nMaxNumArcsPerTarget = 0xafc; // int32_t
		constexpr auto m_bCanTargetShields = 0xb00; // char : 1
		constexpr auto m_bIsArcing = 0xb00; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_ArcingBeam {
		constexpr auto m_nDeviceId = 0xc8; // int32_t
		constexpr auto m_MarkedTargets = 0xcc; // TArray<ObjectProperty>
	}

	namespace n_UTgIconGroup {
		constexpr auto m_Manager = 0x60; // ObjectProperty
		constexpr auto m_DataItem = 0x68; // ObjectProperty
		constexpr auto m_bLoadByItemType = 0x70; // char : 1
		constexpr auto m_ManifestGroup = 0x74; // ObjectProperty
		constexpr auto m_TextureObjects = 0x7c; // FMap_Mirror
	}

	namespace n_UFactory {
		constexpr auto SupportedClass = 0x60; // UObject*
		constexpr auto ContextClass = 0x68; // UObject*
		constexpr auto Description = 0x70; // FString
		constexpr auto Formats = 0x80; // TArray<FString>
		constexpr auto bCreateNew = 0x90; // char : 1
		constexpr auto bEditAfterNew = 0x90; // char : 1
		constexpr auto bEditorImport = 0x90; // char : 1
		constexpr auto bText = 0x90; // char : 1
		constexpr auto AutoPriority = 0x94; // int32_t
		constexpr auto ValidGameNames = 0x98; // TArray<FString>
	}

	namespace n_ATerrain {
		constexpr auto Heights = 0x280; // TArray<FTerrainHeight>
		constexpr auto InfoData = 0x290; // TArray<FTerrainInfoData>
		constexpr auto Layers = 0x2a0; // TArray<FTerrainLayer>
		constexpr auto NormalMapLayer = 0x2b0; // int32_t
		constexpr auto DecoLayers = 0x2b4; // TArray<FTerrainDecoLayer>
		constexpr auto AlphaMaps = 0x2c4; // TArray<FAlphaMap>
		constexpr auto TerrainComponents = 0x2d4; // TArray<ComponentProperty>
		constexpr auto NumSectionsX = 0x2e4; // int32_t
		constexpr auto NumSectionsY = 0x2e8; // int32_t
		constexpr auto WeightedMaterials = 0x2ec; // TArray<FTerrainWeightedMaterial>
		constexpr auto WeightedTextureMaps = 0x2fc; // TArray<ObjectProperty>
		constexpr auto MaxTesselationLevel = 0x30c; // int32_t
		constexpr auto MinTessellationLevel = 0x310; // int32_t
		constexpr auto TesselationDistanceScale = 0x314; // float
		constexpr auto TessellationCheckDistance = 0x318; // float
		constexpr auto CollisionTesselationLevel = 0x31c; // int32_t
		constexpr auto CachedTerrainMaterials = 0x320; // FCachedTerrainMaterialArray [0x2]
		constexpr auto NumVerticesX = 0x340; // int32_t
		constexpr auto NumVerticesY = 0x344; // int32_t
		constexpr auto NumPatchesX = 0x348; // int32_t
		constexpr auto NumPatchesY = 0x34c; // int32_t
		constexpr auto MaxComponentSize = 0x350; // int32_t
		constexpr auto StaticLightingResolution = 0x354; // int32_t
		constexpr auto bIsOverridingLightResolution = 0x358; // char : 1
		constexpr auto bBilinearFilterLightmapGeneration = 0x358; // char : 1
		constexpr auto bCastShadow = 0x358; // char : 1
		constexpr auto bForceDirectLightMap = 0x358; // char : 1
		constexpr auto bCastDynamicShadow = 0x358; // char : 1
		constexpr auto bEnableSpecular = 0x358; // char : 1
		constexpr auto bBlockRigidBody = 0x358; // char : 1
		constexpr auto bAllowRigidBodyUnderneath = 0x358; // char : 1
		constexpr auto bAcceptsDynamicLights = 0x358; // char : 0
		constexpr auto bMorphingEnabled = 0x358; // char : 0
		constexpr auto bMorphingGradientsEnabled = 0x358; // char : 0
		constexpr auto bLocked = 0x358; // char : 0
		constexpr auto bHeightmapLocked = 0x358; // char : 0
		constexpr auto bShowingCollision = 0x358; // char : 0
		constexpr auto bUseWorldOriginTextureUVs = 0x358; // char : 0
		constexpr auto bShowWireframe = 0x358; // char : 0
		constexpr auto TerrainPhysMaterialOverride = 0x35c; // ObjectProperty
		constexpr auto LightingChannels = 0x364; // FLightingChannelContainer
		constexpr auto LightmassSettings = 0x368; // FLightmassPrimitiveSettings
		constexpr auto ReleaseResourcesFence = 0x384; // FPointer
		constexpr auto EditorTessellationLevel = 0x38c; // int32_t
		constexpr auto SelectedVertices = 0x390; // TArray<FSelectedTerrainVertex>
		constexpr auto WireframeColor = 0x3a0; // FColor
	}

	namespace n_UTgAnimNotifySkinData {
		constexpr auto OwningNotify = 0x60; // FString
		constexpr auto SoundCueTemplate = 0x70; // ObjectProperty
		constexpr auto ParticleSystemTemplate = 0x78; // ObjectProperty
		constexpr auto nSkinId = 0x80; // int32_t
		constexpr auto nSkinLevel = 0x84; // int32_t
	}

	namespace n_UUIData_Challenge {
		constexpr auto m_dwActivityId = 0x60; // Fdword
		constexpr auto m_eStatus = 0x64; // Fdword
		constexpr auto m_bIsDirty = 0x68; // char : 1
		constexpr auto m_bCompletionAck = 0x68; // char : 1
		constexpr auto m_bGoalsInitialized = 0x68; // char : 1
		constexpr auto m_pPrimaryGoals = 0x6c; // TArray<ObjectProperty>
		constexpr auto m_pGatingGoals = 0x7c; // TArray<ObjectProperty>
		constexpr auto m_pAllDoneGoals = 0x8c; // TArray<ObjectProperty>
		constexpr auto m_pAuxiliaryGoals = 0x9c; // TArray<ObjectProperty>
	}

	namespace n_USeqVar_Object {
		constexpr auto ObjValue = 0xa0; // ObjectProperty
		constexpr auto ActorLocation = 0xa8; // FVector
		constexpr auto SupportedClasses = 0xb4; // TArray<UObject*>
	}

	namespace n_UTgSkeletalMeshComponent_Weapon {
		constexpr auto m_nmFire = 0x86c; // FName
		constexpr auto m_nmFireLoop = 0x874; // FName
		constexpr auto m_nmFireLoopTailSound = 0x87c; // FName
		constexpr auto m_bDoNotPlayFireParticlesIfHidden = 0x884; // char : 1
		constexpr auto m_bKillFiringLoopParticlesOnHidden = 0x884; // char : 1
		constexpr auto m_bCanPlayFireParticles = 0x884; // char : 1
		constexpr auto m_bCanPlayFireLoopParticles = 0x884; // char : 1
		constexpr auto m_bCanPlayFireSounds = 0x884; // char : 1
		constexpr auto m_bCanPlayFireLoopSounds = 0x884; // char : 1
		constexpr auto m_nFireLoopActiveBitMask = 0x888; // int32_t
	}

	namespace n_USoundNodeAttenuationAndGain {
		constexpr auto bAttenuate = 0x74; // char : 1
		constexpr auto bSpatialize = 0x74; // char : 1
		constexpr auto bAttenuateWithLPF = 0x74; // char : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto GainDistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto AttenuateDistanceAlgorithm = 0x81; // SoundDistanceModel
		constexpr auto DistanceType = 0x82; // ESoundDistanceCalc
		constexpr auto MinimalVolume = 0x84; // float
		constexpr auto RadiusMin = 0x88; // float
		constexpr auto RadiusPeak = 0x8c; // float
		constexpr auto RadiusMax = 0x90; // float
		constexpr auto LPFMinimal = 0x94; // float
		constexpr auto LPFRadiusMin = 0x98; // float
		constexpr auto LPFRadiusPeak = 0x9c; // float
		constexpr auto LPFRadiusMax = 0xa0; // float
	}

	namespace n_USeqAct_GameCrowdPopulationManagerToggle {
		constexpr auto WarmupPopulationPct = 0x108; // float
		constexpr auto CrowdAgentList = 0x10c; // ObjectProperty
		constexpr auto bClearOldArchetypes = 0x114; // char : 1
		constexpr auto bEnableCrowdLightEnvironment = 0x114; // char : 1
		constexpr auto bCastShadows = 0x114; // char : 1
		constexpr auto bFillPotentialSpawnPoints = 0x114; // char : 1
		constexpr auto bForceObstacleChecking = 0x114; // char : 1
		constexpr auto bForceNavMeshPathing = 0x114; // char : 1
		constexpr auto bIndividualSpawner = 0x114; // char : 1
		constexpr auto MaxAgents = 0x118; // int32_t
		constexpr auto SpawnRate = 0x11c; // float
		constexpr auto AgentLightingChannel = 0x120; // FLightingChannelContainer
		constexpr auto MaxSpawnDist = 0x124; // float
		constexpr auto MinBehindSpawnDist = 0x128; // float
		constexpr auto PotentialSpawnPoints = 0x12c; // TArray<ObjectProperty>
		constexpr auto AgentWarmupTime = 0x13c; // float
		constexpr auto NumAgentsToTickPerFrame = 0x140; // int32_t
		constexpr auto LastSpawnedList = 0x144; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_HitPulse {
		constexpr auto s_ShouldPayCostPerPulse = 0xaec; // char : 1
		constexpr auto s_bCostPaid = 0xaec; // char : 1
		constexpr auto m_bConsumeAmmoOnEachPulse = 0xaec; // char : 1
		constexpr auto m_CurrentPulseIndex = 0xaf0; // int32_t
	}

	namespace n_ATgRoyaleZeppelin {
		constexpr auto m_SkeletalMeshComponent = 0x280; // ComponentProperty
		constexpr auto m_LootCrateSkeletalMeshComponent = 0x288; // ComponentProperty
		constexpr auto m_LightEnvironment = 0x290; // ComponentProperty
		constexpr auto m_ZeppelinAnimNodeBlendList = 0x298; // ObjectProperty
		constexpr auto m_vLootSpawnOffset = 0x2a0; // FVector
		constexpr auto m_vLootSpawnLocation = 0x2ac; // FVector
		constexpr auto m_fAirSpeed = 0x2b8; // float
		constexpr auto m_fDeployTime = 0x2bc; // float
		constexpr auto r_vRouteDir = 0x2c0; // FVector
		constexpr auto r_bSpawnedEpicLootCrate = 0x2cc; // char : 1
		constexpr auto m_nZeppelinMeshAsmId = 0x2d0; // int32_t
		constexpr auto m_nLootCrateMeshAsmId = 0x2d4; // int32_t
	}

	namespace n_ATgDevice_WeaponZoom {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaf4; // FPointer
		constexpr auto m_CachedInhand = 0xafc; // ObjectProperty
		constexpr auto m_bDelayMoveSpeedPenalty = 0xb04; // char : 1
		constexpr auto m_bIsZoomed = 0xb04; // char : 1
	}

	namespace n_UTgEffectForm {
		constexpr auto c_nEffectGroupId = 0x60; // int32_t
		constexpr auto c_nInstigatorID = 0x64; // int32_t
		constexpr auto c_nType = 0x68; // int32_t
		constexpr auto c_Owner = 0x6c; // ObjectProperty
		constexpr auto c_pwzEffectName = 0x74; // FPointer
		constexpr auto c_pwzDescription = 0x7c; // FPointer
		constexpr auto c_nEffectIconId = 0x84; // int32_t
		constexpr auto c_AppliedFxArray = 0x88; // TArray<ObjectProperty>
		constexpr auto c_bHiddenDueToStealth = 0x98; // char : 1
		constexpr auto c_bHiddenDueToFirstPerson = 0x98; // char : 1
		constexpr auto c_bMICApplied = 0x98; // char : 1
		constexpr auto m_bSpawnAtHitLocation = 0x98; // char : 1
		constexpr auto c_bIsDebuff = 0x98; // char : 1
		constexpr auto c_bIsCrit = 0x98; // char : 1
		constexpr auto c_bLocal = 0x98; // char : 1
		constexpr auto c_Posture = 0x9c; // TG_POSTURE
		constexpr auto c_PostureID = 0xa0; // int32_t
		constexpr auto m_MaterialInstanceConstant = 0xa4; // ObjectProperty
		constexpr auto m_OwnerPawn = 0xac; // ObjectProperty
		constexpr auto m_HitLocation = 0xb4; // FVector
		constexpr auto m_HitNormal = 0xc0; // FVector
		constexpr auto c_nSkinId = 0xcc; // int32_t
		constexpr auto c_nWeaponSkinId = 0xd0; // int32_t
		constexpr auto c_CameraEffect = 0xd4; // ObjectProperty
		constexpr auto c_nStackCount = 0xdc; // int32_t
		constexpr auto c_nBodyMeshMaterialHandle = 0xe0; // int32_t
		constexpr auto c_nMountMeshMaterialHandle = 0xe4; // int32_t
		constexpr auto c_nHeadMeshMaterialHandle = 0xe8; // int32_t
		constexpr auto c_nWeaponMesh1PMaterialHandle = 0xec; // int32_t
		constexpr auto c_nHandsMeshMaterialHandle = 0xf0; // int32_t
		constexpr auto c_nHeadMesh1PMaterialHandle = 0xf4; // int32_t
		constexpr auto c_nWeaponMesh3PMaterialHandle = 0xf8; // int32_t
	}

	namespace n_UTgAnimMetaData_MICScalarParameter {
		constexpr auto MICParameterName = 0x80; // FName
		constexpr auto MaterialIndex = 0x88; // int32_t
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_USphericalHarmonicLightComponent {
		constexpr auto WorldSpaceIncidentLighting = 0x1b0; // FSHVectorRGB
		constexpr auto bRenderBeforeModShadows = 0x240; // char : 1
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x104; // FParticleRandomSeedInfo
	}

	namespace n_UUIComponent_RolledSubItem {
		constexpr auto m_mcDuplicate = 0x120; // ObjectProperty
		constexpr auto m_pReplacementCurrency = 0x128; // ObjectProperty
		constexpr auto m_pItem = 0x130; // ObjectProperty
	}

	namespace n_URB_Spring {
		constexpr auto Component1 = 0x88; // ComponentProperty
		constexpr auto BoneName1 = 0x90; // FName
		constexpr auto Component2 = 0x98; // ComponentProperty
		constexpr auto BoneName2 = 0xa0; // FName
		constexpr auto SceneIndex = 0xa8; // int32_t
		constexpr auto bInHardware = 0xac; // char : 1
		constexpr auto bEnableForceMassRatio = 0xac; // char : 1
		constexpr auto SpringData = 0xb0; // FPointer
		constexpr auto TimeSinceActivation = 0xb8; // float
		constexpr auto MinBodyMass = 0xbc; // float
		constexpr auto SpringSaturateDist = 0xc0; // float
		constexpr auto SpringMaxForce = 0xc4; // float
		constexpr auto MaxForceMassRatio = 0xc8; // float
		constexpr auto SpringMaxForceTimeScale = 0xcc; // FInterpCurveFloat
		constexpr auto DampSaturateVel = 0xe0; // float
		constexpr auto DampMaxForce = 0xe4; // float
	}

	namespace n_UTgSeqAct_SetPlayerMeshVisible {
		constexpr auto bIs1PMeshVisible = 0x108; // char : 1
		constexpr auto bIs3PMeshVisible = 0x108; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_HasActive {
		constexpr auto ActiveType = 0x98; // EActiveType
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x68; // ObjectProperty
		constexpr auto CastShadows = 0x70; // char : 1
		constexpr auto DoCollisions = 0x70; // char : 1
		constexpr auto bAllowMotionBlur = 0x70; // char : 1
		constexpr auto bOverrideMaterial = 0x70; // char : 1
		constexpr auto bCameraFacing = 0x70; // char : 1
		constexpr auto bApplyParticleRotationAsSpin = 0x70; // char : 1
		constexpr auto MeshAlignment = 0x74; // EMeshScreenAlignment
		constexpr auto AxisLockOption = 0x75; // EParticleAxisLock
		constexpr auto CameraFacingUpAxisOption = 0x76; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x77; // EMeshCameraFacingOptions
		constexpr auto Pitch = 0x78; // float
		constexpr auto Roll = 0x7c; // float
		constexpr auto Yaw = 0x80; // float
	}

	namespace n_UTgDeviceForm_LongbowInhand {
		constexpr auto m_bImpalerArrowFXIsActive = 0x2bc; // char : 1
		constexpr auto m_bBowDrawing = 0x2bc; // char : 1
		constexpr auto m_fBowDrawPercentage = 0x2c0; // float
		constexpr auto m_fBowDrawStartPercentage = 0x2c4; // float
		constexpr auto m_fBowDrawTime = 0x2c8; // float
		constexpr auto m_fBowDrawTotalDuration = 0x2cc; // float
		constexpr auto m_BlendByPct1P = 0x2d0; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct3P = 0x2e0; // TArray<ObjectProperty>
		constexpr auto m_ArrowSkelControl1P = 0x2f0; // ObjectProperty
		constexpr auto m_ImpalerSkelControl1P = 0x2f8; // ObjectProperty
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x68; // char : 1
		constexpr auto bProcessBurstList = 0x68; // char : 1
	}

	namespace n_UUIComponent_ScrollBar {
		constexpr auto m_nPageHeight = 0x140; // int32_t
		constexpr auto m_nPageWidth = 0x144; // int32_t
		constexpr auto m_nNumElements = 0x148; // int32_t
		constexpr auto m_fScrollPos = 0x14c; // float
		constexpr auto m_nNavScrollCBHandle1 = 0x150; // int32_t
		constexpr auto m_nNavScrollCBHandle2 = 0x154; // int32_t
		constexpr auto m_grScroll = 0x158; // ObjectProperty
		constexpr auto m_bScrollVertical = 0x160; // char : 1
	}

	namespace n_UUIHudOverlay {
		constexpr auto ShowAllTeamAsParty = 0x244; // char : 1
		constexpr auto m_bBringToFrontProcessed = 0x244; // char : 1
		constexpr auto m_bCanVault = 0x244; // char : 1
		constexpr auto m_bInteractingCatapult = 0x244; // char : 1
		constexpr auto m_bEnteredCatapult = 0x244; // char : 1
		constexpr auto m_bShowPrompt = 0x244; // char : 1
		constexpr auto m_bTooltipVisible = 0x244; // char : 1
		constexpr auto m_bSpectatorShowPlayerIcons = 0x244; // char : 1
		constexpr auto m_nDepth = 0x248; // int32_t
		constexpr auto m_nCritCount = 0x24c; // int32_t
		constexpr auto m_nLastTargetId = 0x250; // int32_t
		constexpr auto m_ePickupSlot = 0x254; // char
		constexpr auto m_eLastTargetType = 0x255; // char
		constexpr auto m_eDamageNumbersType = 0x256; // EDamageNumbersType
		constexpr auto m_fDelta = 0x258; // float
		constexpr auto m_fRange = 0x25c; // float
		constexpr auto m_fScreenLocInterp = 0x260; // float
		constexpr auto m_fWorldLocInterp = 0x264; // float
		constexpr auto m_fCritSpeed = 0x268; // float
		constexpr auto m_fCritBloom = 0x26c; // float
		constexpr auto m_fCritTimer = 0x270; // float
		constexpr auto m_fDamageSpeed = 0x274; // float
		constexpr auto m_fDamageBloom = 0x278; // float
		constexpr auto m_fDamageTimer = 0x27c; // float
		constexpr auto m_fDamageFadeOutDuration = 0x280; // float
		constexpr auto m_fStatusTimer = 0x284; // float
		constexpr auto m_fStatusSpeed = 0x288; // float
		constexpr auto m_fStatusBloom = 0x28c; // float
		constexpr auto m_fHealingSpeed = 0x290; // float
		constexpr auto m_fHealingBloom = 0x294; // float
		constexpr auto m_fHealingTimer = 0x298; // float
		constexpr auto m_fResolutionModX = 0x29c; // float
		constexpr auto m_fResolutionModY = 0x2a0; // float
		constexpr auto m_fRarityFadeTimer = 0x2a4; // float
		constexpr auto m_fSearchStartX = 0x2a8; // float
		constexpr auto m_fSearchStartY = 0x2ac; // float
		constexpr auto m_fSearchAlignOffset = 0x2b0; // float
		constexpr auto m_fPromptAlignOffset = 0x2b4; // float
		constexpr auto m_fPromptOffsetY = 0x2b8; // float
		constexpr auto m_fPointerOffsetX = 0x2bc; // float
		constexpr auto m_fPointerOffsetY = 0x2c0; // float
		constexpr auto m_fOverlayDefaultPadding = 0x2c4; // float
		constexpr auto m_fOverlayYOffset = 0x2c8; // float
		constexpr auto m_fOverlayRenderDist = 0x2cc; // float
		constexpr auto m_fOverlayXMin = 0x2d0; // float
		constexpr auto m_fOverlayXMax = 0x2d4; // float
		constexpr auto m_fOverlayYMin = 0x2d8; // float
		constexpr auto m_fOverlayYMax = 0x2dc; // float
		constexpr auto m_fReviveYOffset = 0x2e0; // float
		constexpr auto m_fReviveAlphaMin = 0x2e4; // float
		constexpr auto m_fReviveAlphaMax = 0x2e8; // float
		constexpr auto m_fReviveAlphaMinDist = 0x2ec; // float
		constexpr auto m_fReviveAlphaMaxDist = 0x2f0; // float
		constexpr auto m_nCachedMaxShards = 0x2f4; // int32_t
		constexpr auto m_nLootDevice = 0x2f8; // int32_t
		constexpr auto m_mcLoot = 0x2fc; // ObjectProperty
		constexpr auto m_mcLootName = 0x304; // ObjectProperty
		constexpr auto m_mcLootDesc = 0x30c; // ObjectProperty
		constexpr auto m_mcLootType = 0x314; // ObjectProperty
		constexpr auto m_mcLootClass = 0x31c; // ObjectProperty
		constexpr auto m_mcLootFrame = 0x324; // ObjectProperty
		constexpr auto m_mcLootIconA = 0x32c; // ObjectProperty
		constexpr auto m_mcLootIconB = 0x334; // ObjectProperty
		constexpr auto m_mcLootIconFrameA = 0x33c; // ObjectProperty
		constexpr auto m_mcLootIconFrameB = 0x344; // ObjectProperty
		constexpr auto m_mcLootIconTextureA = 0x34c; // ObjectProperty
		constexpr auto m_mcLootIconTextureB = 0x354; // ObjectProperty
		constexpr auto m_mcLootElement = 0x35c; // ObjectProperty
		constexpr auto m_mcLootPromptA = 0x364; // ObjectProperty
		constexpr auto m_mcLootPromptB = 0x36c; // ObjectProperty
		constexpr auto m_mcLootDamage = 0x374; // ObjectProperty
		constexpr auto m_mcLootDamageName = 0x37c; // ObjectProperty
		constexpr auto m_mcLootDamageDesc = 0x384; // ObjectProperty
		constexpr auto m_mcLootDamageArrow = 0x38c; // ObjectProperty
		constexpr auto m_mcPickup = 0x394; // ObjectProperty
		constexpr auto m_mcScopes = 0x39c; // ObjectProperty
		constexpr auto m_mcScopeSniper = 0x3a4; // ObjectProperty
		constexpr auto m_mcScopeSniperFrame = 0x3ac; // ObjectProperty
		constexpr auto m_mcScopeSniperCrosshair = 0x3b4; // ObjectProperty
		constexpr auto m_mcSearch = 0x3bc; // ObjectProperty
		constexpr auto m_mcSearchKey = 0x3c4; // ObjectProperty
		constexpr auto m_mcSearchName = 0x3cc; // ObjectProperty
		constexpr auto m_mcIconVault = 0x3d4; // ObjectProperty
		constexpr auto m_mcPrompt = 0x3dc; // ObjectProperty
		constexpr auto m_mcBigHeadMode = 0x3e4; // ObjectProperty
		constexpr auto m_mcBigHeadModePrompt = 0x3ec; // ObjectProperty
		constexpr auto m_CritData = 0x3f4; // TArray<FOverlayData>
		constexpr auto m_LockData = 0x404; // TArray<FOverlayData>
		constexpr auto m_ForgeData = 0x414; // TArray<FOverlayData>
		constexpr auto m_DamageData = 0x424; // TArray<FDamageOverlayData>
		constexpr auto m_StatusData = 0x434; // TArray<FOverlayData>
		constexpr auto m_HealingData = 0x444; // TArray<FOverlayData>
		constexpr auto m_RevivingData = 0x454; // TArray<FOverlayData>
		constexpr auto m_LootGoblinData = 0x464; // TArray<FOverlayData>
		constexpr auto m_nCurrentPromptMessageId = 0x474; // int32_t
		constexpr auto m_mcTutorialPrompt = 0x478; // ObjectProperty
		constexpr auto m_mcTutorialPromptFrame = 0x480; // ObjectProperty
		constexpr auto m_nCurrentTooltipMessageId = 0x488; // int32_t
		constexpr auto m_mcTooltip = 0x48c; // ObjectProperty
		constexpr auto m_mcTooltipText = 0x494; // ObjectProperty
		constexpr auto m_mcTooltipBackground = 0x49c; // ObjectProperty
		constexpr auto m_fMaxPingTime = 0x4a4; // float
		constexpr auto m_PingOverlays = 0x4a8; // TArray<FUIPingOverlay>
		constexpr auto m_TeamOverlays = 0x4b8; // TArray<FUIPlayerOverlay>
		constexpr auto m_EnemyOverlays = 0x4c8; // TArray<FUIPlayerOverlay>
		constexpr auto m_scPickup = 0x4d8; // ObjectProperty
		constexpr auto m_akForgeComplete = 0x4e0; // ObjectProperty
		constexpr auto m_fDamageNumberCombineDuration = 0x4e8; // float
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0xa0; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0xb0; // FName
	}

	namespace n_USaveGameSummary {
		constexpr auto BaseLevel = 0x60; // FName
		constexpr auto Description = 0x68; // FString
	}

	namespace n_UParticleModuleTypeDataTrail {
		constexpr auto RenderGeometry = 0x68; // char : 1
		constexpr auto RenderLines = 0x68; // char : 1
		constexpr auto RenderTessellation = 0x68; // char : 1
		constexpr auto Tapered = 0x68; // char : 1
		constexpr auto SpawnByDistance = 0x68; // char : 1
		constexpr auto TessellationFactor = 0x6c; // int32_t
		constexpr auto Tension = 0x70; // FRawDistributionFloat
		constexpr auto SpawnDistance = 0x94; // FVector
	}

	namespace n_UDOFBloomMotionBlurEffect {
		constexpr auto MaxVelocity = 0xdc; // float
		constexpr auto MotionBlurAmount = 0xe0; // float
		constexpr auto FullMotionBlur = 0xe4; // char : 1
		constexpr auto CameraRotationThreshold = 0xe8; // float
		constexpr auto CameraTranslationThreshold = 0xec; // float
	}

	namespace n_UPath_TowardGoal {
		constexpr auto GoalActor = 0x6c; // ObjectProperty
	}

	namespace n_AFluidInfluenceActor {
		constexpr auto FlowDirection = 0x280; // ComponentProperty
		constexpr auto Sprite = 0x288; // ComponentProperty
		constexpr auto InfluenceComponent = 0x290; // ComponentProperty
		constexpr auto bActive = 0x298; // char : 1
		constexpr auto bToggled = 0x298; // char : 1
	}

	namespace n_ULocalMessage {
		constexpr auto bIsSpecial = 0x60; // char : 1
		constexpr auto bIsUnique = 0x60; // char : 1
		constexpr auto bIsPartiallyUnique = 0x60; // char : 1
		constexpr auto bIsConsoleMessage = 0x60; // char : 1
		constexpr auto bBeep = 0x60; // char : 1
		constexpr auto bCountInstances = 0x60; // char : 1
		constexpr auto Lifetime = 0x64; // float
		constexpr auto DrawColor = 0x68; // FColor
		constexpr auto PosY = 0x6c; // float
		constexpr auto FontSize = 0x70; // int32_t
	}

	namespace n_UTgAIUtilityFilter_StayInTargetFOV {
		constexpr auto bInverse = 0xc0; // char : 1
	}

	namespace n_UNavMeshGoal_Null {
		constexpr auto PartialGoal = 0x7c; // FPointer
	}

	namespace n_USeqVar_Group {
		constexpr auto GroupName = 0xc4; // FName
		constexpr auto bCachedList = 0xcc; // char : 1
		constexpr auto Actors = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqEvent_SpawnLanePusher {
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_ATgSiegePushActor {
		constexpr auto s_CollisionProxy = 0x280; // ObjectProperty
		constexpr auto m_fCollisionProxyRadius = 0x288; // float
		constexpr auto m_fCollisionProxyHeight = 0x28c; // float
		constexpr auto m_SkelMesh = 0x290; // ComponentProperty
		constexpr auto m_RadiusMesh = 0x298; // ComponentProperty
		constexpr auto m_nTF1Count = 0x2a0; // int32_t
		constexpr auto m_nTF2Count = 0x2a4; // int32_t
		constexpr auto m_nDefenderTaskForce = 0x2a8; // int32_t
		constexpr auto m_CurrentPushState = 0x2ac; // EPushState
		constexpr auto m_fPendingReverseTime = 0x2b0; // float
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto FloatProp = 0x70; // FPointer
		constexpr auto ResetFloat = 0x78; // float
		constexpr auto DistributionProp = 0x7c; // FPointer
	}

	namespace n_USeqAct_ControlMovieTexture {
		constexpr auto MovieTexture = 0x108; // ObjectProperty
	}

	namespace n_UGameCrowdGroup {
		constexpr auto Members = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UNavMeshPath_BiasAgainstPolysWithinDistanceOfLocations {
		constexpr auto Location = 0x78; // FVector
		constexpr auto Rotation = 0x84; // FVector
		constexpr auto DistanceToCheck = 0x90; // float
		constexpr auto LocationsToCheck = 0x94; // TArray<FVector>
	}

	namespace n_ATgEmitter_TeamColor {
		constexpr auto nTaskForce = 0x294; // int32_t
		constexpr auto DefaultParticleChannels = 0x298; // FParticleChannelContainer
	}

	namespace n_UTgInventoryObject_Listen_HealthPCT_In_Range {
		constexpr auto m_bApplied = 0xc8; // char : 1
	}

	namespace n_UTgSeqAct_BeginWaitForLookAt {
		constexpr auto LocationToLookAt = 0x108; // FVector
		constexpr auto MinOffsetDistance = 0x114; // float
	}

	namespace n_ATgNavRouteIndicator {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x32c; // FPointer
		constexpr auto WayPoints = 0x334; // TArray<FVector>
		constexpr auto Position = 0x344; // int32_t
		constexpr auto m_fPositionStartTime = 0x348; // float
		constexpr auto m_fPositionMaxSeekTime = 0x34c; // float
		constexpr auto m_fSpinUpTime = 0x350; // float
		constexpr auto m_fSpinDownTime = 0x354; // float
		constexpr auto m_SpinUpFx = 0x358; // ObjectProperty
		constexpr auto m_PathingFx = 0x360; // ObjectProperty
		constexpr auto m_SpinDownFx = 0x368; // ObjectProperty
		constexpr auto NavigationHandle = 0x370; // ObjectProperty
	}

	namespace n_UUIData_DailyRewardDay {
		constexpr auto m_nDayIndex = 0x60; // int32_t
		constexpr auto m_nCurrentDay = 0x64; // int32_t
		constexpr auto m_bClaimed = 0x68; // char : 1
	}

	namespace n_ABlockingVolume {
		constexpr auto bBlockCamera = 0x2bc; // char : 1
	}

	namespace n_UTgSkelControlSingleBone_DisplayGroup {
		constexpr auto DisplayGroupInfos = 0x144; // TArray<FDisplayGroupInfo>
		constexpr auto m_bPawnOwner = 0x154; // char : 1
	}

	namespace n_UTgDeviceForm {
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto PawnOwner = 0x68; // ObjectProperty
		constexpr auto c_EquipDeviceInfo = 0x70; // FEquipDeviceInfo
		constexpr auto m_nDeviceType = 0x84; // int32_t
		constexpr auto m_nDeviceSubtype = 0x88; // int32_t
		constexpr auto m_eTargetingMode = 0x8c; // DeviceTargetMode
		constexpr auto c_eDeviceSubtype = 0x8d; // DeviceSubtype
		constexpr auto c_eMovementType = 0x8e; // eMovementType
		constexpr auto c_eTargetingModeStatus = 0x8f; // ETargetingModeStatus
		constexpr auto c_eScopeType = 0x90; // SCOPETYPE
		constexpr auto c_bDeployed = 0x94; // char : 1
		constexpr auto c_bHandDevice = 0x94; // char : 1
		constexpr auto c_bDisableDefaultTimelapseRecovery = 0x94; // char : 1
		constexpr auto c_bIsTransitioningToNewMode = 0x94; // char : 1
		constexpr auto c_bTargetingModeEnabled = 0x94; // char : 1
		constexpr auto c_bTargeterInitializedThisTick = 0x94; // char : 1
		constexpr auto c_bTargeterIsInWorldDPG = 0x94; // char : 1
		constexpr auto c_bUseInstigatorMesh = 0x94; // char : 1
		constexpr auto c_bIsInHand = 0x94; // char : 0
		constexpr auto m_bInitializingAssets = 0x94; // char : 0
		constexpr auto m_bLoopWhileFiringCameraAnim = 0x94; // char : 0
		constexpr auto m_bUseImpactFXOverride = 0x94; // char : 0
		constexpr auto m_bRecoilTimerActive = 0x94; // char : 0
		constexpr auto m_bForceBlendOutOnAnimEnd = 0x94; // char : 0
		constexpr auto c_PawnAnimSetOverrideList = 0x98; // TArray<ObjectProperty>
		constexpr auto ModeDatas = 0xa8; // TArray<FModeData>
		constexpr auto m_pAmSetup = 0xb8; // FPointer
		constexpr auto c_Mesh = 0xc0; // ComponentProperty
		constexpr auto c_AttachedMesh = 0xc8; // ComponentProperty
		constexpr auto c_ThirdPersonMesh = 0xd0; // ComponentProperty
		constexpr auto c_FirstPersonMesh = 0xd8; // ComponentProperty
		constexpr auto c_nmMountPoint = 0xe0; // FName
		constexpr auto FormState = 0xe8; // FName
		constexpr auto c_nFireMode = 0xf0; // int32_t
		constexpr auto c_nEquipSlot = 0xf4; // int32_t
		constexpr auto c_fLastReceivedRefireTime = 0xf8; // float
		constexpr auto c_nLastFxMode = 0xfc; // int32_t
		constexpr auto c_TargetingModeMeshIndicator = 0x100; // ObjectProperty
		constexpr auto c_TargetingModeFx = 0x108; // ObjectProperty
		constexpr auto c_TargetingAim = 0x110; // FAimData
		constexpr auto c_nTargetingModeFxId = 0x144; // int32_t
		constexpr auto c_fRemainingTransitionTime = 0x148; // float
		constexpr auto c_fTotalTransitionTime = 0x14c; // float
		constexpr auto m_LockedTarget = 0x150; // ObjectProperty
		constexpr auto m_fCachedZoomedFOV = 0x158; // float
		constexpr auto m_AssetReference = 0x15c; // ObjectProperty
		constexpr auto m_OwnerActor = 0x164; // ObjectProperty
		constexpr auto m_AbilityBlendList1P = 0x16c; // TArray<ObjectProperty>
		constexpr auto m_AbilityBlendList3P = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_ChannelFireBlendList1P = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_ChannelFireBlendList3P = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_TargetingBlendList1P = 0x1ac; // TArray<ObjectProperty>
		constexpr auto m_TargetingBlendList3P = 0x1bc; // TArray<ObjectProperty>
		constexpr auto m_ToggleTransitionNodes1P = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_ToggleTransitionNodes3P = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_AmmoBlendList1P = 0x1ec; // TArray<ObjectProperty>
		constexpr auto m_AmmoBlendList3P = 0x1fc; // TArray<ObjectProperty>
		constexpr auto m_CooldownSyncNode1P = 0x20c; // TArray<ObjectProperty>
		constexpr auto m_CooldownSyncNode3P = 0x21c; // TArray<ObjectProperty>
		constexpr auto m_DeviceEquippedNode1P = 0x22c; // TArray<ObjectProperty>
		constexpr auto m_DeviceEquippedNode3P = 0x23c; // TArray<ObjectProperty>
		constexpr auto m_BlendByRecoilTimeNodes = 0x24c; // TArray<ObjectProperty>
		constexpr auto m_WhileFiringCameraAnimInst = 0x25c; // ObjectProperty
		constexpr auto m_fWhileFiringCameraAnimBlendInTime = 0x264; // float
		constexpr auto m_fWhileFiringCameraAnimBlendOutTime = 0x268; // float
		constexpr auto m_RandomShotSpreadStream = 0x26c; // FPointer
		constexpr auto m_nLastSetShotSpreadSeed = 0x274; // int32_t
		constexpr auto m_GameplayCurves = 0x278; // ObjectProperty
		constexpr auto m_fRecoilTimer = 0x280; // float
		constexpr auto m_fTransitionAmount = 0x284; // float
		constexpr auto m_fTransitionPerSec = 0x288; // float
		constexpr auto m_fLastSetWorldFOVInterp = 0x28c; // float
		constexpr auto m_pWeaponAnimSet = 0x290; // ObjectProperty
		constexpr auto m_pPutAwayAnimSet = 0x298; // ObjectProperty
		constexpr auto m_pBucketAnimSet = 0x2a0; // ObjectProperty
		constexpr auto m_vZoomCameraOffset = 0x2a8; // FVector
		constexpr auto m_fSimulatedDeviceCooldown = 0x2b4; // float
		constexpr auto m_nLastAmmoAmount = 0x2b8; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_ApplyEffectOnDeviceBase {
		constexpr auto m_pEffectGroups = 0xc8; // TArray<ObjectProperty>
		constexpr auto m_pAffectedPawns = 0xd8; // TArray<ObjectProperty>
	}

	namespace n_ATgHoldSpot {
		constexpr auto HoldVehicle = 0x3a4; // ObjectProperty
	}

	namespace n_UUIDataLeagueTier {
		constexpr auto pLeague = 0x60; // ObjectProperty
		constexpr auto dwTierId = 0x68; // Fdword
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x254; // ObjectProperty
		constexpr auto PhysicalMaterial = 0x25c; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x264; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x26c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x270; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x278; // ObjectProperty
		constexpr auto DiffuseColor = 0x280; // FColorMaterialInput
		constexpr auto DiffusePower = 0x2bc; // FScalarMaterialInput
		constexpr auto SpecularColor = 0x2f8; // FColorMaterialInput
		constexpr auto SpecularPower = 0x334; // FScalarMaterialInput
		constexpr auto Normal = 0x370; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x3b4; // FColorMaterialInput
		constexpr auto Opacity = 0x3f0; // FScalarMaterialInput
		constexpr auto OpacityMask = 0x42c; // FScalarMaterialInput
		constexpr auto OpacityMaskClipValue = 0x468; // float
		constexpr auto ShadowDepthBias = 0x46c; // float
		constexpr auto Distortion = 0x470; // FVector2MaterialInput
		constexpr auto BlendMode = 0x4b0; // EBlendMode
		constexpr auto LightingModel = 0x4b1; // EMaterialLightingModel
		constexpr auto DepthModificationMode = 0x4b2; // EMaterialDepthModifier
		constexpr auto D3D11TessellationMode = 0x4b3; // EMaterialTessellationMode
		constexpr auto CustomLighting = 0x4b4; // FColorMaterialInput
		constexpr auto CustomSkylightDiffuse = 0x4f0; // FColorMaterialInput
		constexpr auto AnisotropicDirection = 0x52c; // FVectorMaterialInput
		constexpr auto TwoSidedLightingMask = 0x570; // FScalarMaterialInput
		constexpr auto TwoSidedLightingColor = 0x5ac; // FColorMaterialInput
		constexpr auto WorldPositionOffset = 0x5e8; // FVectorMaterialInput
		constexpr auto WorldDisplacement = 0x62c; // FVectorMaterialInput
		constexpr auto TessellationMultiplier = 0x670; // FScalarMaterialInput
		constexpr auto SubsurfaceInscatteringColor = 0x6ac; // FColorMaterialInput
		constexpr auto SubsurfaceAbsorptionColor = 0x6e8; // FColorMaterialInput
		constexpr auto SubsurfaceScatteringRadius = 0x724; // FScalarMaterialInput
		constexpr auto CustomPixelShaderVector = 0x760; // FVectorMaterialInput
		constexpr auto PixelDepthModifier = 0x7a4; // FScalarMaterialInput
		constexpr auto EnableSubsurfaceScattering = 0x7e0; // char : 1
		constexpr auto EnableSeparateTranslucency = 0x7e0; // char : 1
		constexpr auto bEnableMaskedAntialiasing = 0x7e0; // char : 1
		constexpr auto TwoSided = 0x7e0; // char : 1
		constexpr auto TwoSidedFlipsNormals = 0x7e0; // char : 1
		constexpr auto TwoSidedSeparatePass = 0x7e0; // char : 1
		constexpr auto bDisableDepthTest = 0x7e0; // char : 1
		constexpr auto bSceneTextureRenderBehindTranslucency = 0x7e0; // char : 1
		constexpr auto bAllowFog = 0x7e0; // char : 0
		constexpr auto bTranslucencyReceiveDominantShadowsFromStatic = 0x7e0; // char : 0
		constexpr auto bTranslucencyInheritDominantShadowsFromOpaque = 0x7e0; // char : 0
		constexpr auto bAllowTranslucencyDoF = 0x7e0; // char : 0
		constexpr auto bUseOneLayerDistortion = 0x7e0; // char : 0
		constexpr auto bUseLitTranslucencyDepthPass = 0x7e0; // char : 0
		constexpr auto bUseLitTranslucencyPostRenderDepthPass = 0x7e0; // char : 0
		constexpr auto bCastLitTranslucencyShadowAsMasked = 0x7e0; // char : 0
		constexpr auto bUsedAsLightFunction = 0x7e0; // char : 0
		constexpr auto bUsedWithFogVolumes = 0x7e0; // char : 0
		constexpr auto bUsedAsSpecialEngineMaterial = 0x7e0; // char : 0
		constexpr auto bUsedWithSkeletalMesh = 0x7e0; // char : 0
		constexpr auto bUsedWithTerrain = 0x7e0; // char : 0
		constexpr auto bUsedWithLandscape = 0x7e0; // char : 0
		constexpr auto bUsedWithMobileLandscape = 0x7e0; // char : 0
		constexpr auto bUsedWithFracturedMeshes = 0x7e0; // char : 0
		constexpr auto bUsedWithParticleSystem = 0x7e0; // char : 0
		constexpr auto bUsedWithParticleSprites = 0x7e0; // char : 0
		constexpr auto bUsedWithBeamTrails = 0x7e0; // char : 0
		constexpr auto bUsedWithParticleSubUV = 0x7e0; // char : 0
		constexpr auto bUsedWithSpeedTree = 0x7e0; // char : 0
		constexpr auto bUsedWithStaticLighting = 0x7e0; // char : 0
		constexpr auto bUsedWithLensFlare = 0x7e0; // char : 0
		constexpr auto bUsedWithGammaCorrection = 0x7e0; // char : 0
		constexpr auto bUsedWithInstancedMeshParticles = 0x7e4; // char : 1
		constexpr auto bUsedWithFluidSurfaces = 0x7e4; // char : 1
		constexpr auto bUsedWithDecals = 0x7e4; // char : 1
		constexpr auto bUsedWithMaterialEffect = 0x7e4; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x7e4; // char : 1
		constexpr auto bUsedWithRadialBlur = 0x7e4; // char : 1
		constexpr auto bUsedWithInstancedMeshes = 0x7e4; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x7e4; // char : 1
		constexpr auto bUsedWithAPEXMeshes = 0x7e4; // char : 0
		constexpr auto bUsedWithScreenDoorFade = 0x7e4; // char : 0
		constexpr auto bEnableCrackFreeDisplacement = 0x7e4; // char : 0
		constexpr auto bTessellationFrustumCulling = 0x7e4; // char : 0
		constexpr auto bTessellationBackfaceCulling = 0x7e4; // char : 0
		constexpr auto bUseImageBasedReflections = 0x7e4; // char : 0
		constexpr auto bForceMaskedPrepass = 0x7e4; // char : 0
		constexpr auto bPreferMaskedPrepass = 0x7e4; // char : 0
		constexpr auto Wireframe = 0x7e4; // char : 0
		constexpr auto bPerPixelCameraVector = 0x7e4; // char : 0
		constexpr auto bAllowLightmapSpecular = 0x7e4; // char : 0
		constexpr auto bOverrideLowQualitySpecular = 0x7e4; // char : 0
		constexpr auto bCleanupUnusedTextures = 0x7e4; // char : 0
		constexpr auto bIsFallbackMaterial = 0x7e4; // char : 0
		constexpr auto bUsesDistortion = 0x7e4; // char : 0
		constexpr auto bIsMasked = 0x7e4; // char : 0
		constexpr auto bIsPreviewMaterial = 0x7e4; // char : 0
		constexpr auto ImageReflectionNormalDampening = 0x7e8; // float
		constexpr auto CookedShaderCache = 0x7ec; // ObjectProperty
		constexpr auto MaterialResources = 0x7f4; // FPointer [0x3]
		constexpr auto DefaultMaterialInstances = 0x80c; // FPointer [0x3]
		constexpr auto EditorX = 0x824; // int32_t
		constexpr auto EditorY = 0x828; // int32_t
		constexpr auto EditorPitch = 0x82c; // int32_t
		constexpr auto EditorYaw = 0x830; // int32_t
		constexpr auto Expressions = 0x834; // TArray<ObjectProperty>
		constexpr auto MaterialFunctionInfos = 0x844; // TArray<FMaterialFunctionInfo>
		constexpr auto EditorParameters = 0x854; // TMap<None, None>
		constexpr auto ReferencedTextures = 0x89c; // TArray<ObjectProperty>
	}

	namespace n_UTgGameplayCurvesSet_DamageFalloff {
		constexpr auto DamageFalloff = 0x64; // FRawDistributionFloat
		constexpr auto bIsRangeNormalized = 0x88; // char : 1
		constexpr auto bExcludeEffectiveRange = 0x88; // char : 1
	}

	namespace n_ATgClientHUD {
		constexpr auto m_nMapId = 0x5a0; // int32_t
		constexpr auto m_eState = 0x5a4; // char
		constexpr auto m_ePromptType = 0x5a5; // char
		constexpr auto m_eCaptureState = 0x5a6; // char
		constexpr auto m_bCommitMap = 0x5a8; // char : 1
		constexpr auto m_bShowCursor = 0x5a8; // char : 1
		constexpr auto m_bCaptureKeys = 0x5a8; // char : 1
		constexpr auto m_fFadeTime = 0x5ac; // float
		constexpr auto m_fFadeTimer = 0x5b0; // float
		constexpr auto m_fReturnTime = 0x5b4; // float
		constexpr auto m_fReturnTimer = 0x5b8; // float
		constexpr auto m_fControllerTime = 0x5bc; // float
		constexpr auto m_fControllerTimer = 0x5c0; // float
		constexpr auto m_pMovie = 0x5c4; // ObjectProperty
		constexpr auto m_sNeededScenes = 0x5cc; // TArray<FString>
		constexpr auto m_ScenePreloads = 0x5dc; // TArray<FSceneInfo>
		constexpr auto m_SceneStack = 0x5ec; // TArray<ObjectProperty>
		constexpr auto m_PopupStack = 0x5fc; // TArray<ObjectProperty>
		constexpr auto m_MoviePlayers = 0x60c; // TArray<ObjectProperty>
		constexpr auto m_GAPeach = 0x61c; // ObjectProperty
		constexpr auto m_DevMenu = 0x624; // ObjectProperty
	}

	namespace n_UUIScene_UIPopupRealMoneyPurchase {
		constexpr auto m_fDisplayHeight = 0x154; // float
		constexpr auto m_nScrollOffset = 0x158; // int32_t
		constexpr auto m_nMaxScrollOffset = 0x15c; // int32_t
		constexpr auto m_mcTitle = 0x160; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x168; // ObjectProperty
		constexpr auto m_mcScrollingTF = 0x170; // ObjectProperty
		constexpr auto m_mcScrollUpArrow = 0x178; // ObjectProperty
		constexpr auto m_mcScrollDownArrow = 0x180; // ObjectProperty
		constexpr auto m_DLCPackDisplay = 0x188; // ObjectProperty
	}

	namespace n_USwatTurnReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x254; // ObjectProperty
		constexpr auto Parent = 0x25c; // ObjectProperty
		constexpr auto PhysMaterialMask = 0x264; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x26c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x270; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x278; // ObjectProperty
		constexpr auto bHasStaticPermutationResource = 0x280; // char : 1
		constexpr auto bStaticPermutationDirty = 0x280; // char : 1
		constexpr auto ReentrantFlag = 0x280; // char : 1
		constexpr auto bNeedsMaterialFlattening = 0x280; // char : 1
		constexpr auto bCleanupUnusedTextures = 0x280; // char : 1
		constexpr auto CookedShaderCache = 0x284; // ObjectProperty
		constexpr auto StaticParameters = 0x28c; // FPointer [0x3]
		constexpr auto StaticPermutationResources = 0x2a4; // FPointer [0x3]
		constexpr auto Resources = 0x2bc; // FPointer [0x3]
		constexpr auto ReferencedTextures = 0x2d4; // TArray<ObjectProperty>
		constexpr auto ParentLightingGuid = 0x2e4; // FGuid
	}

	namespace n_ATgDestructibleFactory {
		constexpr auto LightEnvironment = 0x2c0; // ComponentProperty
	}

	namespace n_USeqEvent_AnimNotify {
		constexpr auto NotifyName = 0x128; // FName
	}

	namespace n_UParticleModuleUberRainImpacts {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // char : 1
		constexpr auto MultiplyX = 0xe4; // char : 1
		constexpr auto MultiplyY = 0xe4; // char : 1
		constexpr auto MultiplyZ = 0xe4; // char : 1
		constexpr auto bIsUsingCylinder = 0xe4; // char : 1
		constexpr auto bPositive_X = 0xe4; // char : 1
		constexpr auto bPositive_Y = 0xe4; // char : 1
		constexpr auto bPositive_Z = 0xe4; // char : 1
		constexpr auto bNegative_X = 0xe4; // char : 0
		constexpr auto bNegative_Y = 0xe4; // char : 0
		constexpr auto bNegative_Z = 0xe4; // char : 0
		constexpr auto bSurfaceOnly = 0xe4; // char : 0
		constexpr auto bVelocity = 0xe4; // char : 0
		constexpr auto bRadialVelocity = 0xe4; // char : 0
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto PC_VelocityScale = 0x10c; // FRawDistributionFloat
		constexpr auto PC_StartLocation = 0x130; // FRawDistributionVector
		constexpr auto PC_StartRadius = 0x154; // FRawDistributionFloat
		constexpr auto PC_StartHeight = 0x178; // FRawDistributionFloat
		constexpr auto PC_HeightAxis = 0x19c; // CylinderHeightAxis
		constexpr auto ColorOverLife = 0x1a0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x1c4; // FRawDistributionFloat
	}

	namespace n_UUIArmoryTalent {
		constexpr auto m_nBotId = 0x244; // int32_t
		constexpr auto m_nTalent = 0x248; // int32_t
		constexpr auto m_nEquippedDeviceId = 0x24c; // int32_t
		constexpr auto m_pTalentGroup = 0x250; // ObjectProperty
		constexpr auto m_mcHeader = 0x258; // ObjectProperty
		constexpr auto m_mcTalent = 0x260; // ObjectProperty [0x4]
		constexpr auto m_mcTalentDesc = 0x280; // ObjectProperty [0x4]
		constexpr auto m_mcTalentName = 0x2a0; // ObjectProperty [0x4]
		constexpr auto m_mcTalentType = 0x2c0; // ObjectProperty [0x4]
		constexpr auto m_mcTalentIcon = 0x2e0; // ObjectProperty [0x4]
		constexpr auto m_mcTalentLock = 0x300; // ObjectProperty [0x4]
		constexpr auto m_mcTalentTexture = 0x320; // ObjectProperty [0x4]
	}

	namespace n_USeqAct_PlayMusicTrack {
		constexpr auto MusicTrack = 0x108; // FMusicTrackStruct
	}

	namespace n_UTgAIBehaviorCondition_AtJumpLocation {
		constexpr auto Tolerance = 0x98; // float
	}

	namespace n_ATgDevice_VanguardCharge {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xb60; // FPointer
		constexpr auto __InterruptFiringDelegate__Delegate = 0xb68; // DelegateProperty
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveFloat
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x74; // float
		constexpr auto PitchMax = 0x78; // float
		constexpr auto VolumeMin = 0x7c; // float
		constexpr auto VolumeMax = 0x80; // float
		constexpr auto PitchModulation = 0x84; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0xa8; // FRawDistributionFloat
	}

	namespace n_USpeedTreeActorFactory {
		constexpr auto SpeedTree = 0x9c; // ObjectProperty
	}

	namespace n_ATgDeploy_Geometry {
		constexpr auto m_OverlappingActors = 0x448; // TArray<ObjectProperty>
		constexpr auto m_DesiredPushDirection = 0x458; // TArray<FVector>
		constexpr auto m_bPushOverlappingActors = 0x468; // char : 1
		constexpr auto m_bAllyPassthrough = 0x468; // char : 1
		constexpr auto m_bEnemyPassthrough = 0x468; // char : 1
		constexpr auto m_fPushFactor = 0x46c; // float
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
	}

	namespace n_UTgTimerManager {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto m_TimerMap = 0x68; // TMap<None, None>
		constexpr auto m_bActive = 0xb0; // char : 1
		constexpr auto m_bGameWasPaused = 0xb0; // char : 1
	}

	namespace n_UPComJsonHandler {
		constexpr auto m_pImageDownloader = 0x60; // ObjectProperty
		constexpr auto m_pCallbackObject = 0x68; // FPointer
		constexpr auto m_strUrl = 0x70; // FString
		constexpr auto m_strDownloadDir = 0x80; // FString
		constexpr auto m_strLocalDir = 0x90; // FString
		constexpr auto m_strJson = 0xa0; // FString
		constexpr auto m_strName = 0xb0; // FString
		constexpr auto m_pHttp = 0xc0; // FPointer
	}

	namespace n_UTgAnimBlendBySpeed {
		constexpr auto m_TgPawn = 0x178; // ObjectProperty
		constexpr auto m_SpeedType = 0x180; // ESpeedType
		constexpr auto ResetSynchGroups = 0x184; // TArray<FResetSynchGroup>
		constexpr auto m_bIgnoreRootMotion = 0x194; // char : 1
		constexpr auto m_bIgnoreZVelocity = 0x194; // char : 1
		constexpr auto m_bNotifyOwnerOnChildChange = 0x194; // char : 1
		constexpr auto m_bEnableClassOverrides = 0x194; // char : 1
		constexpr auto m_WalkChildren = 0x198; // TArray<int32_t>
		constexpr auto m_SprintChildren = 0x1a8; // TArray<int32_t>
		constexpr auto m_BaseSpeed = 0x1b8; // TArray<float>
		constexpr auto m_IgnoredPhysics = 0x1c8; // TArray<EPhysics>
		constexpr auto m_nIndexToOverride = 0x1d8; // int32_t
		constexpr auto m_fBaseSpeedRecon = 0x1dc; // float
		constexpr auto m_fBaseSpeedRobotics = 0x1e0; // float
		constexpr auto m_fBaseSpeedAssault = 0x1e4; // float
		constexpr auto m_fBaseSpeedMedic = 0x1e8; // float
		constexpr auto m_fBaseSpeedReconFemale = 0x1ec; // float
		constexpr auto m_fBaseSpeedRoboticsFemale = 0x1f0; // float
		constexpr auto m_fBaseSpeedAssaultFemale = 0x1f4; // float
		constexpr auto m_fBaseSpeedMedicFemale = 0x1f8; // float
		constexpr auto m_fBaseSpeedReconCity = 0x1fc; // float
		constexpr auto m_fBaseSpeedRoboticsCity = 0x200; // float
		constexpr auto m_fBaseSpeedAssaultCity = 0x204; // float
		constexpr auto m_fBaseSpeedMedicCity = 0x208; // float
		constexpr auto m_fBaseSpeedReconFemaleCity = 0x20c; // float
		constexpr auto m_fBaseSpeedRoboticsFemaleCity = 0x210; // float
		constexpr auto m_fBaseSpeedAssaultFemaleCity = 0x214; // float
		constexpr auto m_fBaseSpeedMedicFemaleCity = 0x218; // float
	}

	namespace n_USeqVar_Character {
		constexpr auto PawnClass = 0xc4; // APawn*
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulation = 0x74; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0x98; // FRawDistributionFloat
	}

	namespace n_APortalTeleporter {
		constexpr auto SisterPortal = 0x298; // ObjectProperty
		constexpr auto TextureResolutionX = 0x2a0; // int32_t
		constexpr auto TextureResolutionY = 0x2a4; // int32_t
		constexpr auto MyMarker = 0x2a8; // ObjectProperty
		constexpr auto bMovablePortal = 0x2b0; // char : 1
		constexpr auto bAlwaysTeleportNonPawns = 0x2b0; // char : 1
		constexpr auto bCanTeleportVehicles = 0x2b0; // char : 1
	}

	namespace n_USeqAct_SetVelocity {
		constexpr auto VelocityDir = 0x108; // FVector
		constexpr auto VelocityMag = 0x114; // float
		constexpr auto bVelocityRelativeToActorRotation = 0x118; // char : 1
	}

	namespace n_UUIData_PlayerMatchRecord {
		constexpr auto nBotId = 0x60; // int32_t
		constexpr auto nPlayerId = 0x64; // int32_t
		constexpr auto dwCharacterId = 0x68; // Fdword
		constexpr auto nLevel = 0x6c; // int32_t
		constexpr auto nKills = 0x70; // int32_t
		constexpr auto nDeaths = 0x74; // int32_t
		constexpr auto nAssists = 0x78; // int32_t
		constexpr auto nEarnedCredits = 0x7c; // int32_t
		constexpr auto nHealingPlayer = 0x80; // int32_t
		constexpr auto nHealingBot = 0x84; // int32_t
		constexpr auto nHealingTotal = 0x88; // int32_t
		constexpr auto nSelfHealing = 0x8c; // int32_t
		constexpr auto nDmgTaken = 0x90; // int32_t
		constexpr auto nDmgPlayer = 0x94; // int32_t
		constexpr auto nDmgBot = 0x98; // int32_t
		constexpr auto nDmgTotal = 0x9c; // int32_t
		constexpr auto nSoloKills = 0xa0; // int32_t
		constexpr auto nFlankKills = 0xa4; // int32_t
		constexpr auto nMultikill = 0xa8; // int32_t
		constexpr auto nKillstreak = 0xac; // int32_t
		constexpr auto nDmgStructure = 0xb0; // int32_t
		constexpr auto nDmgMitigated = 0xb4; // int32_t
		constexpr auto nObjectiveTime = 0xb8; // int32_t
		constexpr auto nCards = 0xbc; // int32_t [0x5]
		constexpr auto nCardLevels = 0xd0; // int32_t [0x5]
		constexpr auto nLegendary = 0xe4; // int32_t
		constexpr auto nLegendaryLevel = 0xe8; // int32_t
		constexpr auto nPurchasedItems = 0xec; // int32_t [0x4]
		constexpr auto nPurchasedItemLevels = 0xfc; // int32_t [0x4]
		constexpr auto nMountItemId = 0x10c; // int32_t
		constexpr auto nEmoteItemId = 0x110; // int32_t
		constexpr auto nMVPPoseItemId = 0x114; // int32_t
		constexpr auto nSprayItemId = 0x118; // int32_t
		constexpr auto nTitleItemId = 0x11c; // int32_t
		constexpr auto nTaskForce = 0x120; // int32_t
		constexpr auto bAlly = 0x124; // char : 1
		constexpr auto bLocal = 0x124; // char : 1
		constexpr auto bReported = 0x124; // char : 1
		constexpr auto sPlayer = 0x128; // FString
		constexpr auto ConsoleUniqueId = 0x138; // FUniqueNetId
		constexpr auto dwPortalId = 0x140; // Fdword
	}

	namespace n_ATgTutorialVolume {
		constexpr auto m_bHasLocalPawn = 0x2bc; // char : 1
		constexpr auto m_bHasSeenLocalPawnBefore = 0x2bc; // char : 1
	}

	namespace n_ADebugCameraController {
		constexpr auto PrimaryKey = 0x77c; // FName
		constexpr auto SecondaryKey = 0x784; // FName
		constexpr auto UnselectKey = 0x78c; // FName
		constexpr auto bShowSelectedInfo = 0x794; // char : 1
		constexpr auto bDrawDebugText = 0x794; // char : 1
		constexpr auto bIsFrozenRendering = 0x794; // char : 1
		constexpr auto HUDClass = 0x798; // AHUD*
		constexpr auto OriginalControllerRef = 0x7a0; // ObjectProperty
		constexpr auto OriginalPlayer = 0x7a8; // ObjectProperty
		constexpr auto DrawFrustum = 0x7b0; // ComponentProperty
		constexpr auto SelectedActor = 0x7b8; // ObjectProperty
		constexpr auto SelectedComponent = 0x7c0; // ComponentProperty
	}

	namespace n_UTgGameDataHandler {
		constexpr auto m_Game = 0x130; // ObjectProperty
	}

	namespace n_UGFxMoviePlayer {
		constexpr auto pMovie = 0x60; // FPointer
		constexpr auto pCaptureKeys = 0x68; // FPointer
		constexpr auto pFocusIgnoreKeys = 0x70; // FPointer
		constexpr auto ASUClasses = 0x78; // TMap<None, None>
		constexpr auto ASUObjects = 0xc0; // TMap<None, None>
		constexpr auto NextASUObject = 0x108; // int32_t
		constexpr auto MovieInfo = 0x10c; // ObjectProperty
		constexpr auto bMovieIsOpen = 0x114; // char : 1
		constexpr auto bDisplayWithHudOff = 0x114; // char : 1
		constexpr auto bEnableGammaCorrection = 0x114; // char : 1
		constexpr auto bWidgetsInitializedThisFrame = 0x114; // char : 1
		constexpr auto bLogUnhandedWidgetInitializations = 0x114; // char : 1
		constexpr auto bAllowInput = 0x114; // char : 1
		constexpr auto bAllowFocus = 0x114; // char : 1
		constexpr auto bAutoPlay = 0x114; // char : 1
		constexpr auto bPauseGameWhileActive = 0x114; // char : 0
		constexpr auto bDisableWorldRendering = 0x114; // char : 0
		constexpr auto bCaptureWorldRendering = 0x114; // char : 0
		constexpr auto bCloseOnLevelChange = 0x114; // char : 0
		constexpr auto bOnlyOwnerFocusable = 0x114; // char : 0
		constexpr auto bForceFullViewport = 0x114; // char : 0
		constexpr auto bDiscardNonOwnerInput = 0x114; // char : 0
		constexpr auto bCaptureInput = 0x114; // char : 0
		constexpr auto bCaptureMouseInput = 0x114; // char : 0
		constexpr auto bIgnoreMouseInput = 0x114; // char : 0
		constexpr auto bAllowArrowKeyNav = 0x114; // char : 0
		constexpr auto bIsSplitscreenLayoutModified = 0x114; // char : 0
		constexpr auto bShowHardwareMouseCursor = 0x114; // char : 0
		constexpr auto bBlurLesserMovies = 0x114; // char : 0
		constexpr auto bHideLesserMovies = 0x114; // char : 0
		constexpr auto bIsPriorityBlurred = 0x114; // char : 0
		constexpr auto bIsPriorityHidden = 0x114; // char : 0
		constexpr auto bIgnoreVisibilityEffect = 0x114; // char : 0
		constexpr auto bIgnoreBlurEffect = 0x114; // char : 0
		constexpr auto RenderTexture = 0x118; // ObjectProperty
		constexpr auto LocalPlayerOwnerIndex = 0x120; // int32_t
		constexpr auto ExternalInterface = 0x124; // ObjectProperty
		constexpr auto CaptureKeys = 0x12c; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x13c; // TArray<FName>
		constexpr auto ExternalTextures = 0x14c; // TArray<FExternalTexture>
		constexpr auto SoundThemes = 0x15c; // TArray<FSoundThemeBinding>
		constexpr auto TimingMode = 0x16c; // GFxTimingMode
		constexpr auto RenderTextureMode = 0x16d; // GFxRenderTextureMode
		constexpr auto Priority = 0x16e; // char
		constexpr auto WidgetBindings = 0x170; // TArray<FGFxWidgetBinding>
		constexpr auto WidgetPathBindings = 0x180; // TMap<None, None>
		constexpr auto SplitscreenLayoutObject = 0x1c8; // ObjectProperty
		constexpr auto SplitscreenLayoutYAdjust = 0x1d0; // int32_t
		constexpr auto m_StoredViewportParams = 0x1d4; // FGFxStoredViewportParams
		constexpr auto __OnPostAdvance__Delegate = 0x1e8; // DelegateProperty
	}

	namespace n_UGameCrowdBehavior_RunFromPanic {
		constexpr auto PanicFocus = 0x9c; // ObjectProperty
	}

	namespace n_USkelControlLimb {
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto JointTargetLocationSpace = 0xdd; // EBoneControlSpace
		constexpr auto JointOffsetSpace = 0xde; // EBoneControlSpace
		constexpr auto BoneAxis = 0xdf; // EAxis
		constexpr auto JointAxis = 0xe0; // EAxis
		constexpr auto EffectorSpaceBoneName = 0xe4; // FName
		constexpr auto JointTargetLocation = 0xec; // FVector
		constexpr auto JointTargetSpaceBoneName = 0xf8; // FName
		constexpr auto JointOffset = 0x100; // FVector
		constexpr auto JointOffsetBoneName = 0x10c; // FName
		constexpr auto bInvertBoneAxis = 0x114; // char : 1
		constexpr auto bInvertJointAxis = 0x114; // char : 1
		constexpr auto bRotateJoint = 0x114; // char : 1
		constexpr auto bMaintainEffectorRelRot = 0x114; // char : 1
		constexpr auto bTakeRotationFromEffectorSpace = 0x114; // char : 1
		constexpr auto bAllowStretching = 0x114; // char : 1
		constexpr auto m_bSnapEffectorToBoneLocation = 0x114; // char : 1
		constexpr auto bMaxLength = 0x114; // char : 1
		constexpr auto StretchLimits = 0x118; // FVector2D
		constexpr auto StretchRollBoneName = 0x120; // FName
		constexpr auto MaxLengthPct = 0x128; // float
	}

	namespace n_UTgAnimNodeAdditiveBlending {
		constexpr auto m_bSetStrengthFromAnimNode = 0x128; // char : 1
		constexpr auto m_bInvertStrengthFromAnimNode = 0x128; // char : 1
		constexpr auto m_bInitializedCachedNodeList = 0x128; // char : 1
		constexpr auto m_StrengthAnimNodeNameList = 0x12c; // TArray<FName>
		constexpr auto m_StrengthEmoteList = 0x13c; // TArray<EEmote>
		constexpr auto m_CachedNodeList = 0x14c; // TArray<ObjectProperty>
		constexpr auto m_CachedEmoteSequences = 0x15c; // TArray<ObjectProperty>
	}

	namespace n_UTgAchievement_Headshot {
		constexpr auto m_nHeadshotsWithoutMissing = 0x90; // int32_t
	}

	namespace n_UUIDataGoals {
		constexpr auto m_GoldLimit = 0x70; // ObjectProperty
		constexpr auto m_GoldLimitBoosted = 0x78; // ObjectProperty
		constexpr auto m_VIPLimit = 0x80; // ObjectProperty
		constexpr auto m_VIPLimitBoosted = 0x88; // ObjectProperty
		constexpr auto m_Ranked = 0x90; // TArray<ObjectProperty>
		constexpr auto m_CurrencyStats = 0xa0; // TMap<None, None>
		constexpr auto m_WOTDByBotId = 0xe8; // TMap<None, None>
		constexpr auto m_PlayedRankedTracker = 0x130; // ObjectProperty
		constexpr auto m_Goals = 0x138; // TMap<None, None>
		constexpr auto m_ChallengeList = 0x180; // TArray<ObjectProperty>
		constexpr auto m_QuestList = 0x190; // TArray<ObjectProperty>
		constexpr auto m_ChampionQuest = 0x1a0; // ObjectProperty
		constexpr auto m_DailyLoginsQuest = 0x1a8; // ObjectProperty
		constexpr auto m_LoreQuest = 0x1b0; // ObjectProperty
		constexpr auto m_QuestsCompleted = 0x1b8; // TArray<ObjectProperty>
		constexpr auto m_bQuestsSeenToday = 0x1c8; // char : 1
		constexpr auto m_bPlayerLoggedIn = 0x1c8; // char : 1
		constexpr auto m_bRewardClaimedToday = 0x1c8; // char : 1
		constexpr auto m_bDayHasRolledOver = 0x1c8; // char : 1
		constexpr auto m_bHasQuestProgress = 0x1c8; // char : 1
		constexpr auto m_bHasQuestActivities = 0x1c8; // char : 1
		constexpr auto m_bHasQuestRewards = 0x1c8; // char : 1
		constexpr auto m_bFirstSpecialEventUpdate = 0x1c8; // char : 1
		constexpr auto m_bFirstItemQuestUpdate = 0x1c8; // char : 0
		constexpr auto m_nConsecutiveRewardDays = 0x1cc; // int32_t
		constexpr auto m_nLengthOfDay = 0x1d0; // int32_t
		constexpr auto m_fTimeTillNextDay = 0x1d4; // float
		constexpr auto m_fTimeTillNextMonth = 0x1d8; // float
		constexpr auto m_dtLoginBonusReceived = 0x1dc; // FDateTimeWrapper
		constexpr auto m_dwLastLoreQuestGoal = 0x1e4; // Fdword
		constexpr auto m_nPlayerLevel = 0x1e8; // int32_t
	}

	namespace n_UNavMeshPath_AlongLine {
		constexpr auto Direction = 0x78; // FVector
	}

	namespace n_UUIComponent_AbilityPointsPool {
		constexpr auto m_bDirty = 0x120; // char : 1
		constexpr auto m_nTickCallbackHandle = 0x124; // int32_t
		constexpr auto m_mcAbilityPointsPool = 0x128; // ObjectProperty
		constexpr auto m_mcAbilityIcon = 0x130; // ObjectProperty [0x4]
		constexpr auto m_mcPointsFill = 0x150; // ObjectProperty [0x4]
		constexpr auto m_mcPointsText = 0x170; // ObjectProperty [0x4]
		constexpr auto m_mcTalentFocusFrame = 0x190; // ObjectProperty [0x4]
		constexpr auto m_fFillWidth = 0x1b0; // float
		constexpr auto m_nPoints = 0x1b4; // int32_t [0x4]
		constexpr auto m_eFocusedAbility = 0x1c4; // AbilityModifiedByDevice
	}

	namespace n_UTgAIBehaviorAction_UseDevice {
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
		constexpr auto aimType = 0x95; // EUseDeviceAimType
		constexpr auto bContinuousFire = 0x98; // char : 1
		constexpr auto bPayNoEnergy = 0x98; // char : 1
	}

	namespace n_UOnlineGameSearch {
		constexpr auto MaxSearchResults = 0xa0; // int32_t
		constexpr auto Query = 0xa4; // FLocalizedStringSetting
		constexpr auto bIsLanQuery = 0xb0; // char : 1
		constexpr auto bUsesArbitration = 0xb0; // char : 1
		constexpr auto bIsSearchInProgress = 0xb0; // char : 1
		constexpr auto GameSettingsClass = 0xb4; // UOnlineGameSettings*
		constexpr auto Results = 0xbc; // TArray<FOnlineGameSearchResult>
		constexpr auto ManualSkillOverride = 0xcc; // FOverrideSkill
		constexpr auto NamedProperties = 0x100; // TArray<FNamedObjectProperty>
		constexpr auto FilterQuery = 0x110; // FOnlineGameSearchQuery
		constexpr auto AdditionalSearchCriteria = 0x130; // FString
		constexpr auto PingBucketSize = 0x140; // int32_t
		constexpr auto NumPingProbes = 0x144; // int32_t
		constexpr auto MaxPingBytes = 0x148; // int32_t
		constexpr auto SessionTemplateName = 0x14c; // FString
	}

	namespace n_UUIScene_UIShop {
		constexpr auto m_eState = 0x154; // UISHOP_STATE
		constexpr auto m_pTabs = 0x158; // ObjectProperty
		constexpr auto m_pBuyCrowns = 0x160; // ObjectProperty
		constexpr auto m_pItems = 0x168; // ObjectProperty
		constexpr auto m_pCrowns = 0x170; // ObjectProperty
		constexpr auto m_pRotator = 0x178; // ObjectProperty
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0xb8; // char : 1
	}

	namespace n_UTgAnimBlendByFlying {
		constexpr auto bAdjustRateByVelocity = 0x168; // char : 1
		constexpr auto m_bAdjustRateByAcceleration = 0x168; // char : 1
		constexpr auto m_bPreviewJetpackPerBoneBlend = 0x168; // char : 1
		constexpr auto m_bIsUsingHandsFreeJetpack = 0x168; // char : 1
		constexpr auto m_fUpLoopStartTime = 0x16c; // float
		constexpr auto LastDirection = 0x170; // EFlyDirTypes
		constexpr auto m_nmHandsFreeJetpackPerBoneBlendNodeName = 0x174; // FName
		constexpr auto m_HandsFreeJetpackPerBoneBlendNode = 0x17c; // ObjectProperty
		constexpr auto m_fHandsFreeJetpackBlendBias = 0x184; // float
		constexpr auto m_nmHandsFreeJetpackBiasBlendNodeName = 0x188; // FName
		constexpr auto m_HandsFreeJetpackBiasBlendNode = 0x190; // ObjectProperty
		constexpr auto m_TgPawn = 0x198; // ObjectProperty
	}

	namespace n_USeqAct_ForceFeedback {
		constexpr auto FFWaveform = 0x108; // ObjectProperty
		constexpr auto PredefinedWaveForm = 0x110; // UWaveFormBase*
	}

	namespace n_UTgAnimMetaData_InvisibleWallFailSafe {
		constexpr auto WallEnableBaseName = 0x60; // FName
	}

	namespace n_USeqEvent_MobileZoneBase {
		constexpr auto TargetZoneName = 0x128; // FString
	}

	namespace n_UTgAnimNodeBlendByCombat {
		constexpr auto m_TgP = 0x168; // ObjectProperty
	}

	namespace n_UTgSkelCon_Spinner {
		constexpr auto m_fDegreesPerSecond = 0x100; // float
		constexpr auto m_vAxis = 0x104; // FVector
		constexpr auto m_PreviewStartStop = 0x110; // char : 1
		constexpr auto m_bSpinDownToZero = 0x110; // char : 1
		constexpr auto m_bIsSpinning = 0x110; // char : 1
		constexpr auto m_bSpinningUp = 0x110; // char : 1
		constexpr auto m_bSpinningDown = 0x110; // char : 1
		constexpr auto m_bRotateToTargetRotation = 0x110; // char : 1
		constexpr auto m_fSpinUpTime = 0x114; // float
		constexpr auto m_fSpinDownTime = 0x118; // float
		constexpr auto m_fCurrentDegreesPerSecond = 0x11c; // float
		constexpr auto m_fLerpTime = 0x120; // float
		constexpr auto m_TargetRotation = 0x124; // FRotator
		constexpr auto m_TimeToInterpToTargetRotation = 0x130; // float
		constexpr auto m_nRotationSpeedState = 0x134; // int32_t
		constexpr auto m_fRotationSpeedStateMultipliers = 0x138; // TArray<float>
		constexpr auto m_OnSpinUpFinishedCallbacks = 0x148; // TArray<DelegateProperty>
		constexpr auto m_OnSpinDownFinishedCallbacks = 0x158; // TArray<DelegateProperty>
		constexpr auto __OnSpinUpFinishedEvent__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnSpinDownFinishedEvent__Delegate = 0x178; // DelegateProperty
	}

	namespace n_UTgAISquad {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto s_bOpen = 0x68; // char : 1
		constexpr auto s_bShouldSpread = 0x68; // char : 1
		constexpr auto s_MemberList = 0x6c; // TArray<ObjectProperty>
		constexpr auto s_Factory = 0x7c; // ObjectProperty
		constexpr auto s_CurrentTarget = 0x84; // ObjectProperty
		constexpr auto s_TargetList = 0x8c; // TArray<ObjectProperty>
		constexpr auto s_LastKiller = 0x9c; // ObjectProperty
		constexpr auto s_fNextSpreadTime = 0xa4; // float
	}

	namespace n_UDamageType {
		constexpr auto bArmorStops = 0x60; // char : 1
		constexpr auto bCausedByWorld = 0x60; // char : 1
		constexpr auto bExtraMomentumZ = 0x60; // char : 1
		constexpr auto bCausesFracture = 0x60; // char : 1
		constexpr auto bRadialDamageVelChange = 0x60; // char : 1
		constexpr auto KDamageImpulse = 0x64; // float
		constexpr auto KDeathVel = 0x68; // float
		constexpr auto KDeathUpKick = 0x6c; // float
		constexpr auto RadialDamageImpulse = 0x70; // float
		constexpr auto VehicleDamageScaling = 0x74; // float
		constexpr auto VehicleMomentumScaling = 0x78; // float
		constexpr auto DamagedFFWaveform = 0x7c; // ObjectProperty
		constexpr auto KilledFFWaveform = 0x84; // ObjectProperty
		constexpr auto FracturedMeshDamage = 0x8c; // float
	}

	namespace n_UApexDynamicComponent {
		constexpr auto ComponentDynamicResources = 0x2b0; // FPointer
	}

	namespace n_UOnlinePlaylistManager {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Playlists = 0x68; // TArray<FPlaylist>
		constexpr auto PlaylistFileNames = 0x78; // TArray<FString>
		constexpr auto DatastoresToRefresh = 0x88; // TArray<FName>
		constexpr auto DownloadCount = 0x98; // int32_t
		constexpr auto SuccessfulCount = 0x9c; // int32_t
		constexpr auto VersionNumber = 0xa0; // int32_t
		constexpr auto PopulationData = 0xa4; // TArray<FPlaylistPopulation>
		constexpr auto WorldwideTotalPlayers = 0xb4; // int32_t
		constexpr auto RegionTotalPlayers = 0xb8; // int32_t
		constexpr auto TitleFileInterface = 0xbc; // TScriptInterface<Class>
		constexpr auto PopulationFileName = 0xcc; // FString
		constexpr auto NextPlaylistPopulationUpdateTime = 0xdc; // float
		constexpr auto PlaylistPopulationUpdateInterval = 0xe0; // float
		constexpr auto MinPlaylistIdToReport = 0xe4; // int32_t
		constexpr auto CurrentPlaylistId = 0xe8; // int32_t
		constexpr auto EventsInterfaceName = 0xec; // FName
		constexpr auto DataCenterId = 0xf4; // int32_t
		constexpr auto DataCenterFileName = 0xf8; // FString
		constexpr auto LastPlaylistDownloadTime = 0x108; // float
		constexpr auto PlaylistRefreshInterval = 0x10c; // float
		constexpr auto __OnReadPlaylistComplete__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnPlaylistPopulationDataUpdated__Delegate = 0x120; // DelegateProperty
	}

	namespace n_USeqCond_CompareInt {
		constexpr auto ValueA = 0xec; // int32_t
		constexpr auto ValueB = 0xf0; // int32_t
	}

	namespace n_USeqVar_ObjectVolume {
		constexpr auto LastUpdateTime = 0xc4; // float
		constexpr auto ContainedObjects = 0xc8; // TArray<ObjectProperty>
		constexpr auto ExcludeClassList = 0xd8; // TArray<UObject*>
		constexpr auto bCollidingOnly = 0xe8; // char : 1
	}

	namespace n_UActorFactoryPhysicsAsset {
		constexpr auto PhysicsAsset = 0x9c; // ObjectProperty
		constexpr auto SkeletalMesh = 0xa4; // ObjectProperty
		constexpr auto bStartAwake = 0xac; // char : 1
		constexpr auto bDamageAppliesImpulse = 0xac; // char : 1
		constexpr auto bNotifyRigidBodyCollision = 0xac; // char : 1
		constexpr auto bUseCompartment = 0xac; // char : 1
		constexpr auto bCastDynamicShadow = 0xac; // char : 1
		constexpr auto InitialVelocity = 0xb0; // FVector
		constexpr auto DrawScale3D = 0xbc; // FVector
	}

	namespace n_UScriptedTexture {
		constexpr auto bNeedsUpdate = 0x128; // char : 1
		constexpr auto bSkipNextClear = 0x128; // char : 1
		constexpr auto __Render__Delegate = 0x12c; // DelegateProperty
	}

	namespace n_UParticleModuleTrailSpawn {
		constexpr auto SpawnDistanceMap = 0x68; // ComponentProperty
		constexpr auto MinSpawnVelocity = 0x70; // float
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto Lifetime = 0x68; // FRawDistributionFloat
	}

	namespace n_USeqAct_ApplySoundNode {
		constexpr auto PlaySound = 0x108; // ObjectProperty
		constexpr auto ApplyNode = 0x110; // ObjectProperty
	}

	namespace n_USeqAct_ChangeCollision {
		constexpr auto bCollideActors = 0x108; // char : 1
		constexpr auto bBlockActors = 0x108; // char : 1
		constexpr auto bIgnoreEncroachers = 0x108; // char : 1
		constexpr auto CollisionType = 0x10c; // ECollisionType
	}

	namespace n_UUIDataStore_OnlinePlaylists {
		constexpr auto ProviderClassName = 0x98; // FString
		constexpr auto ProviderClass = 0xa8; // UUIResourceDataProvider*
		constexpr auto RankedDataProviders = 0xb0; // TArray<ObjectProperty>
		constexpr auto UnrankedDataProviders = 0xc0; // TArray<ObjectProperty>
		constexpr auto RecModeDataProviders = 0xd0; // TArray<ObjectProperty>
		constexpr auto PrivateDataProviders = 0xe0; // TArray<ObjectProperty>
		constexpr auto PlaylistMan = 0xf0; // ObjectProperty
	}

	namespace n_UTgSpecialFxLightManager {
		constexpr auto c_FxLightsEnabled = 0x60; // char : 1
		constexpr auto c_FxLightsUnconstrained = 0x60; // char : 1
		constexpr auto c_FxLightsMaxActive = 0x64; // int32_t
		constexpr auto c_FxLightsMaxDying = 0x68; // int32_t
		constexpr auto m_ActiveEmitters = 0x6c; // TArray<FPointer>
		constexpr auto m_DyingEmitters = 0x7c; // TArray<FPointer>
		constexpr auto c_LocalPawn = 0x8c; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetUIClock {
		constexpr auto ShowAlarmTexture = 0x108; // char : 1
		constexpr auto UseProgressBar = 0x108; // char : 1
		constexpr auto IsCountingDown = 0x108; // char : 1
	}

	namespace n_UNavMeshGoal_At {
		constexpr auto Goal = 0x7c; // FVector
		constexpr auto GoalDist = 0x88; // float
		constexpr auto bKeepPartial = 0x8c; // char : 1
		constexpr auto bWeightPartialByDist = 0x8c; // char : 1
		constexpr auto bGoalInSamePolyAsAnchor = 0x8c; // char : 1
		constexpr auto PartialDistSq = 0x90; // float
		constexpr auto GoalPoly = 0x94; // FPointer
		constexpr auto PartialGoal = 0x9c; // FPointer
	}

	namespace n_ATgCapturePoint {
		constexpr auto s_CollisionProxy = 0x280; // ObjectProperty
		constexpr auto r_RepInfo = 0x288; // ObjectProperty
		constexpr auto m_fCollisionProxyRadius = 0x290; // float
		constexpr auto m_fCollisionProxyHeight = 0x294; // float
		constexpr auto m_fBaseTransitionSpeed = 0x298; // float
		constexpr auto m_fTransitionSpeedBuff = 0x29c; // float
		constexpr auto m_fCurrentTransitionSpeed = 0x2a0; // float
		constexpr auto c_OwnershipChangedKismetNode = 0x2a4; // ObjectProperty
		constexpr auto s_BotSpawners = 0x2ac; // ObjectProperty [0x2]
		constexpr auto m_CurrentBotSpawners = 0x2bc; // ObjectProperty [0x2]
		constexpr auto s_NeutralBotSpawner = 0x2cc; // ObjectProperty
		constexpr auto m_CapturePointIndex = 0x2d4; // int32_t
		constexpr auto s_fReplenishBotTime = 0x2d8; // float
		constexpr auto s_fRemainingReplenishBotTime = 0x2dc; // float
		constexpr auto s_fFriendlyReplenishBuffPct = 0x2e0; // float
		constexpr auto m_fRegenUpdateTimer = 0x2e4; // float
		constexpr auto m_fOwnedManaRegen = 0x2e8; // float
		constexpr auto m_fOwnedHealthRegen = 0x2ec; // float
		constexpr auto s_GameInfo = 0x2f0; // ObjectProperty
		constexpr auto m_nTF1Count = 0x2f8; // int32_t
		constexpr auto m_nTF2Count = 0x2fc; // int32_t
		constexpr auto m_fLastEnemyKillVoxTimestamp = 0x300; // float
		constexpr auto m_nLaneNumber = 0x304; // int32_t
		constexpr auto m_WorldIconSprite = 0x308; // ComponentProperty
	}

	namespace n_ATgDevice_OverGrowth {
		constexpr auto m_VineDevice = 0xaec; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_GameType {
		constexpr auto GameType = 0x98; // TG_GAME_TYPE
	}

	namespace n_UTgAIBehaviorCondition_NearbyTargetTypeDelta {
		constexpr auto TargetTypeThreshold = 0x9c; // int32_t
		constexpr auto TargetType = 0xa0; // ECombatTargetType
		constexpr auto bMustBeInForwardCone = 0xa4; // char : 1
		constexpr auto ForwardConeAngle = 0xa8; // float
	}

	namespace n_UTgAnimNotify_PlayParticleEffect_Skinned {
		constexpr auto m_SkinOverrideList = 0x98; // TArray<FPPE_Skin>
		constexpr auto m_bApplyTeamColor = 0xa8; // char : 1
	}

	namespace n_ATgStaticMeshActorGrass {
		constexpr auto m_fTargetScale = 0x2a4; // float
		constexpr auto m_TargetScale3D = 0x2a8; // FVector
		constexpr auto m_fScaleTransitionTime = 0x2b4; // float
	}

	namespace n_USeqAct_SubtractFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UPBRuleNodeAlternate {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto ASize = 0x74; // float
		constexpr auto BMaxSize = 0x78; // float
		constexpr auto bInvertPatternOrder = 0x7c; // char : 1
		constexpr auto bEqualSizeAB = 0x7c; // char : 1
	}

	namespace n_AAutoTestManager {
		constexpr auto bAutomatedPerfTesting = 0x280; // char : 1
		constexpr auto bAutoContinueToNextRound = 0x280; // char : 1
		constexpr auto bUsingAutomatedTestingMapList = 0x280; // char : 1
		constexpr auto bAutomatedTestingWithOpen = 0x280; // char : 1
		constexpr auto bExitOnCyclesComplete = 0x280; // char : 1
		constexpr auto bCheckingForFragmentation = 0x280; // char : 1
		constexpr auto bCheckingForMemLeaks = 0x280; // char : 1
		constexpr auto bIsDoingASimplePerfRun = 0x280; // char : 1
		constexpr auto bDoingASentinelRun = 0x280; // char : 0
		constexpr auto bSentinelRunInProgress = 0x280; // char : 0
		constexpr auto bSentinelStreamingLevelStillLoading = 0x280; // char : 0
		constexpr auto AutomatedPerfRemainingTime = 0x284; // int32_t
		constexpr auto AutomatedTestingMapIndex = 0x288; // int32_t
		constexpr auto AutomatedMapTestingList = 0x28c; // TArray<FString>
		constexpr auto NumAutomatedMapTestingCycles = 0x29c; // int32_t
		constexpr auto NumberOfMatchesPlayed = 0x2a0; // int32_t
		constexpr auto NumMapListCyclesDone = 0x2a4; // int32_t
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatch = 0x2a8; // FString
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatchOnPC = 0x2b8; // FString
		constexpr auto AutomatedMapTestingTransitionMap = 0x2c8; // FString
		constexpr auto SentinelTaskDescription = 0x2d8; // FString
		constexpr auto SentinelTaskParameter = 0x2e8; // FString
		constexpr auto SentinelTagDesc = 0x2f8; // FString
		constexpr auto SentinelPC = 0x308; // ObjectProperty
		constexpr auto SentinelTravelArray = 0x310; // TArray<FVector>
		constexpr auto SentinelNavigationIdx = 0x320; // int32_t
		constexpr auto SentinelIdx = 0x324; // int32_t
		constexpr auto NumRotationsIncrement = 0x328; // int32_t
		constexpr auto TravelPointsIncrement = 0x32c; // int32_t
		constexpr auto NumMinutesPerMap = 0x330; // int32_t
		constexpr auto TotalNumMinutesToRun = 0x334; // int32_t
		constexpr auto ProfilingInterval = 0x338; // float
		constexpr auto CommandsToRunAtEachTravelTheWorldNode = 0x33c; // TArray<FString>
		constexpr auto CommandStringToExec = 0x34c; // FString
	}

	namespace n_UTgAnimTreeComment {
		constexpr auto m_bDrawBox = 0x68; // char : 1
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x90; // FParticleRandomSeedInfo
	}

	namespace n_ULensFlareComponent {
		constexpr auto Template = 0x24c; // ObjectProperty
		constexpr auto PreviewInnerCone = 0x254; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x25c; // ComponentProperty
		constexpr auto PreviewRadius = 0x264; // ComponentProperty
		constexpr auto bAutoActivate = 0x26c; // char : 1
		constexpr auto bIsActive = 0x26c; // char : 1
		constexpr auto bHasTranslucency = 0x26c; // char : 1
		constexpr auto bHasUnlitTranslucency = 0x26c; // char : 1
		constexpr auto bHasUnlitDistortion = 0x26c; // char : 1
		constexpr auto bUsesSceneColor = 0x26c; // char : 1
		constexpr auto bHasSeparateTranslucency = 0x26c; // char : 1
		constexpr auto bUseTrueConeCalculation = 0x26c; // char : 1
		constexpr auto bVisibleForMobile = 0x26c; // char : 0
		constexpr auto OuterCone = 0x270; // float
		constexpr auto InnerCone = 0x274; // float
		constexpr auto ConeFudgeFactor = 0x278; // float
		constexpr auto Radius = 0x27c; // float
		constexpr auto MinStrength = 0x280; // float
		constexpr auto SourceColor = 0x284; // FLinearColor
		constexpr auto Materials = 0x294; // TArray<FLensFlareElementMaterials>
		constexpr auto ReleaseResourcesFence = 0x2a4; // FPointer
		constexpr auto NextTraceTime = 0x2ac; // float
	}

	namespace n_UTgSeqAct_TutorialTips {
		constexpr auto nMsgId = 0x108; // int32_t
	}

	namespace n_UUIData_LeagueEOM {
		constexpr auto m_pLeague = 0x60; // ObjectProperty
		constexpr auto m_pTier = 0x68; // ObjectProperty
		constexpr auto m_nPointChange = 0x70; // int32_t
		constexpr auto m_nCurrentPoints = 0x74; // int32_t
		constexpr auto m_nWins = 0x78; // int32_t
		constexpr auto m_nLosses = 0x7c; // int32_t
		constexpr auto m_nMatchesPlayed = 0x80; // int32_t
		constexpr auto m_TierChange = 0x84; // ObjectProperty
	}

	namespace n_AInventoryManager {
		constexpr auto InventoryChain = 0x280; // ObjectProperty
		constexpr auto PendingWeapon = 0x288; // ObjectProperty
		constexpr auto LastAttemptedSwitchToWeapon = 0x290; // ObjectProperty
		constexpr auto bMustHoldWeapon = 0x298; // char : 1
		constexpr auto PendingFire = 0x29c; // TArray<int32_t>
	}

	namespace n_UUIComponent_ChampionOverview {
		constexpr auto m_mcDetailsTitle = 0x120; // ObjectProperty
		constexpr auto m_mcDetailsSubtitle = 0x128; // ObjectProperty
		constexpr auto m_mcDetailsClassIcon = 0x130; // ObjectProperty
		constexpr auto m_mcDetailsChampionIcon = 0x138; // ObjectProperty
		constexpr auto m_mcBioLock = 0x140; // ObjectProperty
		constexpr auto m_mcBioText = 0x148; // ObjectProperty
		constexpr auto m_mcBioLockText = 0x150; // ObjectProperty
		constexpr auto m_pCollectionOverview = 0x158; // ObjectProperty
		constexpr auto m_mcRentalText = 0x160; // ObjectProperty
		constexpr auto m_mcRentalTextLabel = 0x168; // ObjectProperty
		constexpr auto m_mcRentalTextDuration = 0x170; // ObjectProperty
		constexpr auto m_mcUnlockPanel = 0x178; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchase = 0x180; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0 = 0x188; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0Currency = 0x190; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1 = 0x198; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1Currency = 0x1a0; // ObjectProperty
		constexpr auto m_mcUnlockPanelRent = 0x1a8; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0 = 0x1b0; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0Currency = 0x1b8; // ObjectProperty
		constexpr auto m_mcUnlockPanelFreeRotation = 0x1c0; // ObjectProperty
		constexpr auto m_mcUnlockPanelInputPrompt = 0x1c8; // ObjectProperty
		constexpr auto m_pUnlockChampionButton = 0x1d0; // ObjectProperty
		constexpr auto m_pLeaderboardButton = 0x1d8; // ObjectProperty
	}

	namespace n_USkelControl_CCD_IK {
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto EffectorSpaceBoneName = 0xe0; // FName
		constexpr auto EffectorTranslationFromBone = 0xe8; // FVector
		constexpr auto NumBones = 0xf4; // int32_t
		constexpr auto MaxPerBoneIterations = 0xf8; // int32_t
		constexpr auto IterationsCount = 0xfc; // int32_t
		constexpr auto Precision = 0x100; // float
		constexpr auto bStartFromTail = 0x104; // char : 1
		constexpr auto bNoTurnOptimization = 0x104; // char : 1
		constexpr auto AngleConstraint = 0x108; // TArray<float>
		constexpr auto MaxAngleSteps = 0x118; // float
	}

	namespace n_ASplineActor {
		constexpr auto Connections = 0x280; // TArray<FSplineConnection>
		constexpr auto SplineActorTangent = 0x290; // FVector
		constexpr auto SplineColor = 0x29c; // FColor
		constexpr auto bDisableDestination = 0x2a0; // char : 1
		constexpr auto bAlreadyVisited = 0x2a0; // char : 1
		constexpr auto LinksFrom = 0x2a4; // TArray<ObjectProperty>
		constexpr auto nextOrdered = 0x2b4; // ObjectProperty
		constexpr auto prevOrdered = 0x2bc; // ObjectProperty
		constexpr auto previousPath = 0x2c4; // ObjectProperty
		constexpr auto bestPathWeight = 0x2cc; // int32_t
		constexpr auto visitedWeight = 0x2d0; // int32_t
		constexpr auto SplineVelocityOverTime = 0x2d4; // FInterpCurveFloat
	}

	namespace n_UMcpMessageBase {
		constexpr auto McpMessageManagerClassName = 0x78; // FString
		constexpr auto CompressionType = 0x88; // EMcpMessageCompressionType
		constexpr auto MessageContentsList = 0x8c; // TArray<FMcpMessageContents>
		constexpr auto MessageLists = 0x9c; // TArray<FMcpMessageList>
		constexpr auto __OnCreateMessageComplete__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnDeleteMessageComplete__Delegate = 0xbc; // DelegateProperty
		constexpr auto __OnQueryMessagesComplete__Delegate = 0xcc; // DelegateProperty
		constexpr auto __OnQueryMessageContentsComplete__Delegate = 0xdc; // DelegateProperty
	}

	namespace n_UIpNetDriverSteamworks {
		constexpr auto bSteamSocketsOnly = 0x228; // char : 1
	}

	namespace n_USeqAct_GetVectorComponents {
		constexpr auto InVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_UTgCombinedPostProcessEffect {
		constexpr auto HitEffectColor = 0x88; // FColor
		constexpr auto SceneShadows = 0x8c; // FVector
		constexpr auto SceneHighLights = 0x98; // FVector
		constexpr auto SceneMidTones = 0xa4; // FVector
		constexpr auto SceneDesaturation = 0xb0; // float
		constexpr auto SceneColorize = 0xb4; // FVector
	}

	namespace n_ATgDevice_Emote {
		constexpr auto m_CachedPawnOwner = 0xaec; // ObjectProperty
		constexpr auto m_bAccelerationInterruptsDevice = 0xaf4; // char : 1
		constexpr auto m_bJumpingInterruptsDevice = 0xaf4; // char : 1
		constexpr auto m_DefaultCameraModuleClass = 0xaf8; // UTgCameraModule*
		constexpr auto m_FiringCameraModuleClass = 0xb00; // UTgCameraModule_ThirdPersonVariableHeight*
		constexpr auto m_FiringCameraModule = 0xb08; // ObjectProperty
		constexpr auto m_fCameraTweenInTime = 0xb10; // float
		constexpr auto m_fCameraTweenOutTime = 0xb14; // float
		constexpr auto m_vFiringCameraOffset = 0xb18; // FVector
	}

	namespace n_UTgInventoryObject_Listen_MultipleHitBonus {
		constexpr auto pHitActors = 0xc8; // TArray<ObjectProperty>
		constexpr auto bAdjustDamage = 0xd8; // char : 1
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto Exponent = 0xb0; // float
		constexpr auto Normal = 0xb4; // FExpressionInput
	}

	namespace n_UTgSeqEvent_Escort_Despawn_Success {
		constexpr auto DefendersTaskForce = 0x128; // int32_t
	}

	namespace n_USeqAct_PrepareMapChange {
		constexpr auto MainLevelName = 0x120; // FName
		constexpr auto InitiallyLoadedSecondaryLevelNames = 0x128; // TArray<FName>
		constexpr auto bIsHighPriority = 0x138; // char : 1
		constexpr auto bStatusIsOk = 0x138; // char : 1
	}

	namespace n_ATgAIAnnotation {
		constexpr auto VfTable_IInterface_AIAnnotation = 0x380; // FPointer
		constexpr auto AnnotationType = 0x388; // EAIAnnotationType
		constexpr auto m_pClaimedBy = 0x38c; // ObjectProperty
	}

	namespace n_UTgNavMeshPath_AlongLane {
		constexpr auto m_nLane = 0x78; // int32_t
	}

	namespace n_UTgAnimNodeLockableChannelFire {
		constexpr auto m_bPlayStartOnLock = 0x180; // char : 1
		constexpr auto m_bPlayStartOnUnlock = 0x180; // char : 1
		constexpr auto m_bPlayStartAfterLockLost = 0x180; // char : 1
		constexpr auto m_bLocked = 0x180; // char : 1
	}

	namespace n_UTgSeqAct_MarkSpawnReturn {
		constexpr auto m_Teleporter = 0x108; // ObjectProperty
	}

	namespace n_UUIDataEsportsEventMatchup {
		constexpr auto pEvent = 0x60; // ObjectProperty
		constexpr auto pTeam1 = 0x68; // ObjectProperty
		constexpr auto pTeam2 = 0x70; // ObjectProperty
		constexpr auto pSelectedTeam = 0x78; // ObjectProperty
		constexpr auto dwGroupId = 0x80; // Fdword
		constexpr auto dwTeam1Wins = 0x84; // Fdword
		constexpr auto dwTeam2Wins = 0x88; // Fdword
		constexpr auto dwMatchCount = 0x8c; // Fdword
		constexpr auto bFeatured = 0x90; // char : 1
		constexpr auto sURL = 0x94; // FString
		constexpr auto dwRoundTypeId = 0xa4; // Fdword
		constexpr auto dtStartTime = 0xa8; // FDateTimeWrapper
		constexpr auto dwRewardQuantity = 0xb0; // Fdword
		constexpr auto pReward = 0xb4; // ObjectProperty
	}

	namespace n_UUIComponent_TitleTooltip {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_mcDescription = 0x128; // ObjectProperty
		constexpr auto m_nLastSetItemID = 0x130; // int32_t
		constexpr auto m_fTooltipShowDelay = 0x134; // float
	}

	namespace n_UTgAnimNodeSelfDestruct {
		constexpr auto NumberOfLoopsBeforeDestruct = 0x1bc; // int32_t
		constexpr auto LoopsCompleted = 0x1c0; // int32_t
		constexpr auto ScaleOutSkelControlNames = 0x1c4; // TArray<FName>
		constexpr auto TimeRemaingForScaleOut = 0x1d4; // float
		constexpr auto ScaleOutSkelControls = 0x1d8; // TArray<ObjectProperty>
		constexpr auto ScaleOutStartScales = 0x1e8; // TArray<float>
		constexpr auto ScaleOutStartTime = 0x1f8; // float
	}

	namespace n_UTgInventoryObject_Listen_ReduceInhandSelfDamage {
		constexpr auto m_fCachedBaseDamage = 0xcc; // float
		constexpr auto m_fCachedBaseKnockback = 0xd0; // float
	}

	namespace n_UTgAnimNodeSequence {
		constexpr auto bAutoPlay = 0x1ac; // char : 1
		constexpr auto bResetOnActivate = 0x1ac; // char : 1
		constexpr auto HasDynamicLength = 0x1ac; // char : 1
		constexpr auto EnableFootControlsOnCease = 0x1ac; // char : 1
		constexpr auto SynchronizeGroupOnReplay = 0x1ac; // char : 1
		constexpr auto bRandomStartPosition = 0x1ac; // char : 1
		constexpr auto ChainedSequenceDuration = 0x1b0; // float
		constexpr auto m_nmDisplayGroup = 0x1b4; // FName
	}

	namespace n_UUIComponent_StringTitle {
		constexpr auto m_mcText = 0x120; // ObjectProperty
	}

	namespace n_UUIPopupMatchFound {
		constexpr auto m_bAnim = 0x244; // char : 1
		constexpr auto m_fTime = 0x248; // float
		constexpr auto m_fTimer = 0x24c; // float
		constexpr auto m_mcDesc = 0x250; // ObjectProperty
		constexpr auto m_mcName = 0x258; // ObjectProperty
		constexpr auto m_mcFrame = 0x260; // ObjectProperty
		constexpr auto m_mcTimer = 0x268; // ObjectProperty
		constexpr auto m_mcPrompt = 0x270; // ObjectProperty [0x2]
		constexpr auto m_mcButton = 0x280; // ObjectProperty [0x2]
		constexpr auto m_mcBlocker = 0x290; // ObjectProperty
		constexpr auto m_pInputGroup = 0x298; // ObjectProperty
	}

	namespace n_UParticleModuleSizeScaleByTime {
		constexpr auto SizeScaleByTime = 0x68; // FRawDistributionVector
		constexpr auto bEnableX = 0x8c; // char : 1
		constexpr auto bEnableY = 0x8c; // char : 1
		constexpr auto bEnableZ = 0x8c; // char : 1
	}

	namespace n_AProjectile {
		constexpr auto Speed = 0x280; // float
		constexpr auto MaxSpeed = 0x284; // float
		constexpr auto bSwitchToZeroCollision = 0x288; // char : 1
		constexpr auto bBlockedByInstigator = 0x288; // char : 1
		constexpr auto bBegunPlay = 0x288; // char : 1
		constexpr auto bRotationFollowsVelocity = 0x288; // char : 1
		constexpr auto bIgnoreFoliageTouch = 0x288; // char : 1
		constexpr auto ZeroCollider = 0x28c; // ObjectProperty
		constexpr auto ZeroColliderComponent = 0x294; // ComponentProperty
		constexpr auto Damage = 0x29c; // float
		constexpr auto DamageRadius = 0x2a0; // float
		constexpr auto MomentumTransfer = 0x2a4; // float
		constexpr auto MyDamageType = 0x2a8; // UDamageType*
		constexpr auto SpawnSound = 0x2b0; // ObjectProperty
		constexpr auto ImpactSound = 0x2b8; // ObjectProperty
		constexpr auto InstigatorController = 0x2c0; // ObjectProperty
		constexpr auto ImpactedActor = 0x2c8; // ObjectProperty
		constexpr auto NetCullDistanceSquared = 0x2d0; // float
		constexpr auto CylinderComponent = 0x2d4; // ComponentProperty
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0xb0; // FExpressionInput
		constexpr auto Lightmass = 0xe4; // FExpressionInput
	}

	namespace n_UTgDeviceForm_Minigun {
		constexpr auto m_bIsADS = 0x2e8; // char : 1
		constexpr auto m_nDisplayGroupState = 0x2ec; // int32_t
		constexpr auto m_WeaponMesh = 0x2f0; // ComponentProperty
	}

	namespace n_ATgGameTipManager {
		constexpr auto m_TipSavedState = 0x280; // TArray<FTipSavedState>
		constexpr auto m_GameTipQueue = 0x290; // TArray<FGameTipInfo>
		constexpr auto m_GameTipWorldQueue = 0x2a0; // TArray<FGameTipInfo>
		constexpr auto m_GameTipSpecialQueue = 0x2b0; // TArray<FGameTipInfo>
		constexpr auto m_bIsActive = 0x2c0; // char : 1
		constexpr auto m_AudioComponent = 0x2c4; // ComponentProperty
		constexpr auto m_nActiveTip = 0x2cc; // int32_t
		constexpr auto m_nPlaySoundTip = 0x2d0; // int32_t
	}

	namespace n_UUIComponent_LobbyEquipSlotItem {
		constexpr auto m_mcTypeIcon = 0x120; // ObjectProperty
		constexpr auto m_mcRarity = 0x128; // ObjectProperty
		constexpr auto m_mcAudio = 0x130; // ObjectProperty
		constexpr auto m_mcIcon = 0x138; // ObjectProperty
		constexpr auto m_bHovered = 0x140; // char : 1
		constexpr auto m_bSelected = 0x140; // char : 1
	}

	namespace n_ATgRoyaleConvergeActor_Plane {
		constexpr auto r_nConvergeSide = 0x2d4; // int32_t
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x60; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x70; // int32_t
	}

	namespace n_UTgAIBehaviorAction_SetGoblinState {
		constexpr auto GoblinState = 0x94; // EGoblinState
	}

	namespace n_UMaterialEffect {
		constexpr auto Material = 0x88; // ObjectProperty
	}

	namespace n_UPostProcessChain {
		constexpr auto Effects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_TagForLifesteal {
		constexpr auto m_TagActors = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_TagTimes = 0xe0; // TArray<float>
		constexpr auto m_CachedFiremode = 0xf0; // ObjectProperty
	}

	namespace n_ATgTeleporter {
		constexpr auto m_nMapObjectId = 0x3a4; // int32_t
		constexpr auto m_nMapId = 0x3a8; // int32_t
		constexpr auto m_nPreload = 0x3ac; // char : 1
		constexpr auto m_bSetTaskForce = 0x3ac; // char : 1
		constexpr auto m_bBalanceTaskForce = 0x3ac; // char : 1
		constexpr auto m_bIgnoreNonMembers = 0x3ac; // char : 1
		constexpr auto m_bUsePlayerStart = 0x3ac; // char : 1
		constexpr auto m_bRequestMission = 0x3ac; // char : 1
		constexpr auto m_nStartGroup = 0x3b0; // char
		constexpr auto m_nTaskForce = 0x3b1; // char
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x68; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromShield {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_UTgSeasonTicketManager {
		constexpr auto m_pMovie = 0x84; // ObjectProperty
		constexpr auto m_DisplayGroups = 0x8c; // TArray<ObjectProperty>
		constexpr auto m_MatchupDescriptions = 0x9c; // TMap<None, None>
		constexpr auto m_TeamImages = 0xe4; // TMap<None, None>
	}

	namespace n_USeqAct_SetDamageInstigator {
		constexpr auto DamageInstigator = 0x108; // ObjectProperty
	}

	namespace n_UGameEngine {
		constexpr auto GPendingLevel = 0x8a0; // ObjectProperty
		constexpr auto PendingLevelPlayerControllerClassName = 0x8a8; // FString
		constexpr auto LastURL = 0x8b8; // FURL
		constexpr auto LastRemoteURL = 0x920; // FURL
		constexpr auto ServerActors = 0x988; // TArray<FString>
		constexpr auto TravelURL = 0x998; // FString
		constexpr auto TravelType = 0x9a8; // char
		constexpr auto bWorldWasLoadedThisTick = 0x9ac; // char : 1
		constexpr auto bWorldWasLoadedLastTick = 0x9ac; // char : 1
		constexpr auto bCheckForMovieCapture = 0x9ac; // char : 1
		constexpr auto bTriggerPostLoadMap = 0x9ac; // char : 1
		constexpr auto bStartedLoadMapMovie = 0x9ac; // char : 1
		constexpr auto bShouldCommitPendingMapChange = 0x9ac; // char : 1
		constexpr auto bClearAnimSetLinkupCachesOnLoadMap = 0x9ac; // char : 1
		constexpr auto bEnableSecondaryDisplay = 0x9ac; // char : 1
		constexpr auto bEnableSecondaryViewport = 0x9ac; // char : 0
		constexpr auto OnlineSubsystem = 0x9b0; // ObjectProperty
		constexpr auto GamePadLightbarSubsystem = 0x9b8; // ObjectProperty
		constexpr auto DLCEnumerator = 0x9c0; // ObjectProperty
		constexpr auto DownloadableContentEnumeratorClassName = 0x9c8; // FString
		constexpr auto DLCManager = 0x9d8; // ObjectProperty
		constexpr auto DownloadableContentManagerClassName = 0x9e0; // FString
		constexpr auto LevelsToLoadForPendingMapChange = 0x9f0; // TArray<FName>
		constexpr auto LoadedLevelsForPendingMapChange = 0xa00; // TArray<ObjectProperty>
		constexpr auto PendingMapChangeFailureDescription = 0xa10; // FString
		constexpr auto MaxDeltaTime = 0xa20; // float
		constexpr auto SecondaryViewportClientClassName = 0xa24; // FString
		constexpr auto SecondaryViewportClients = 0xa34; // TArray<ObjectProperty>
		constexpr auto SecondaryViewportFrames = 0xa44; // TArray<FPointer>
		constexpr auto PendingLevelStreamingStatusUpdates = 0xa54; // TArray<FLevelStreamingStatus>
		constexpr auto ObjectReferencers = 0xa64; // TArray<ObjectProperty>
		constexpr auto PackagesToFullyLoad = 0xa74; // TArray<FFullyLoadedPackagesInfo>
		constexpr auto NamedNetDrivers = 0xa84; // TArray<FNamedNetDriver>
		constexpr auto AnimTags = 0xa94; // TArray<FAnimTag>
	}

	namespace n_UPath_AlongLine {
		constexpr auto Direction = 0x6c; // FVector
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x6c; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x90; // char : 1
	}

	namespace n_ATgProj_ExtraColliders {
		constexpr auto m_SecondaryCollisionProxies = 0x51c; // ObjectProperty [0x2]
		constexpr auto m_SecondaryDebugProximityDistancePSC = 0x52c; // ComponentProperty [0x2]
		constexpr auto m_TrackedCollisions = 0x53c; // TArray<FTrackedCollision>
	}

	namespace n_ATgBotFactory_Realm {
		constexpr auto m_fRefillInterval = 0x384; // float
		constexpr auto m_fSpawnMinDist = 0x388; // float
		constexpr auto m_fSpawnMaxViewAlignment = 0x38c; // float
	}

	namespace n_UTgSeqAct_DisplayObjective {
		constexpr auto m_nMessageId = 0x108; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsCombatTargetOfType {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_ATgDevice_HealingPotion {
		constexpr auto s_bQueueDetonation = 0xaec; // char : 1
		constexpr auto m_bAttemptingToDetonate = 0xaec; // char : 1
	}

	namespace n_UUIDataChampions {
		constexpr auto m_pActiveChampion = 0x70; // ObjectProperty
		constexpr auto m_Champions = 0x78; // TArray<ObjectProperty>
		constexpr auto m_PvEChampions = 0x88; // TArray<ObjectProperty>
		constexpr auto m_Collections = 0x98; // TArray<ObjectProperty>
		constexpr auto m_PerChampionCollections = 0xa8; // TMap<None, None>
		constexpr auto m_ChampionIdToData = 0xf0; // TMap<None, None>
		constexpr auto m_dwStoreVendorsRequestId = 0x138; // Fdword
		constexpr auto m_dwRotationVendorRequestId = 0x13c; // Fdword
	}

	namespace n_UTgAnimNotify_AudioGroup {
		constexpr auto c_PreviewSound = 0x68; // ObjectProperty
		constexpr auto c_SoundCueName = 0x70; // FName
		constexpr auto c_eMeshSource = 0x78; // TG_MESH_SOURCE
	}

	namespace n_ARB_RadialImpulseActor {
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto ImpulseComponent = 0x288; // ComponentProperty
		constexpr auto ImpulseCount = 0x290; // char
	}

	namespace n_AAccessControl {
		constexpr auto IPPolicies = 0x280; // TArray<FString>
		constexpr auto BannedIDs = 0x290; // TArray<FUniqueNetId>
		constexpr auto IPBanned = 0x2a0; // FString
		constexpr auto WrongPassword = 0x2b0; // FString
		constexpr auto NeedPassword = 0x2c0; // FString
		constexpr auto SessionBanned = 0x2d0; // FString
		constexpr auto KickedMsg = 0x2e0; // FString
		constexpr auto DefaultKickReason = 0x2f0; // FString
		constexpr auto IdleKickReason = 0x300; // FString
		constexpr auto AdminClass = 0x310; // AAdmin*
		constexpr auto AdminPassword = 0x318; // FString
		constexpr auto GamePassword = 0x328; // FString
		constexpr auto ACDisplayText = 0x338; // FString [0x3]
		constexpr auto ACDescText = 0x368; // FString [0x3]
		constexpr auto bDontAddDefaultAdmin = 0x398; // char : 1
		constexpr auto bAuthenticateClients = 0x398; // char : 1
		constexpr auto bAuthenticateServer = 0x398; // char : 1
		constexpr auto bAuthenticateListenHost = 0x398; // char : 1
		constexpr auto bAuthDelegatesRegistered = 0x398; // char : 1
		constexpr auto bPendingListenAuth = 0x398; // char : 1
		constexpr auto MaxAuthRetryCount = 0x39c; // int32_t
		constexpr auto AuthRetryDelay = 0x3a0; // int32_t
		constexpr auto OnlineSub = 0x3a4; // ObjectProperty
		constexpr auto CachedAuthInt = 0x3ac; // TScriptInterface<Class>
		constexpr auto ClientsPendingAuth = 0x3bc; // TArray<FPendingClientAuth>
		constexpr auto ServerAuthRetries = 0x3cc; // TArray<FServerAuthRetry>
		constexpr auto ListenAuthTicketUID = 0x3dc; // int32_t
		constexpr auto ListenAuthRetryCount = 0x3e0; // int32_t
	}

	namespace n_UTgSkelControlSingleBone_PistonBarrel {
		constexpr auto m_nDepressDistance = 0x144; // float
		constexpr auto m_nReturnSpeed = 0x148; // float
	}

	namespace n_ATgDevice {
		constexpr auto VfTable_ITgGameplayCurveOwner = 0x2fc; // FPointer
		constexpr auto r_nDeviceId = 0x304; // int32_t
		constexpr auto r_nDeviceInstanceId = 0x308; // int32_t
		constexpr auto r_nInstanceCount = 0x30c; // int32_t
		constexpr auto r_eEquippedAt = 0x310; // TG_EQUIP_POINT
		constexpr auto CurrentFireMode = 0x311; // char
		constexpr auto m_PendingFireMode = 0x312; // char
		constexpr auto c_eTargetingModeStatus = 0x313; // ETargetingModeStatus
		constexpr auto m_nDesiredFireMode = 0x314; // char
		constexpr auto m_eCachedDeviceFailType = 0x315; // EDeviceFailType
		constexpr auto m_eCastModeOverride = 0x316; // ECastMode
		constexpr auto m_ReticuleType = 0x317; // EReticuleType
		constexpr auto m_ZoomedReticuleType = 0x318; // EReticuleType
		constexpr auto m_DeviceEmoteAt = 0x319; // DeviceEmoteAt
		constexpr auto m_DeviceTimerBarType = 0x31a; // DeviceTimerBarType
		constexpr auto m_AmmoEquipPoint = 0x31b; // TG_EQUIP_POINT
		constexpr auto m_ZoomState = 0x31c; // EZoomState
		constexpr auto m_eScopeType = 0x31d; // SCOPETYPE
		constexpr auto m_eDeviceSubtype = 0x31e; // DeviceSubtype
		constexpr auto m_eMovementType = 0x31f; // eMovementType
		constexpr auto m_eAltFireType = 0x320; // EDeviceAltFireType
		constexpr auto r_nPointsAllocated = 0x324; // int32_t
		constexpr auto m_bSocketMaxCalculated = 0x328; // char : 1
		constexpr auto r_bParentDeviceOwnedByOffhand = 0x328; // char : 1
		constexpr auto bPendingFire = 0x328; // char : 1
		constexpr auto m_IsPendingSetFireMode = 0x328; // char : 1
		constexpr auto m_bEquipEffectsApplied = 0x328; // char : 1
		constexpr auto m_CachedMissedInstantFire = 0x328; // char : 1
		constexpr auto c_bUsesTargetingReticle = 0x328; // char : 1
		constexpr auto r_OverrideUsesTargetingModeAsFalse = 0x328; // char : 1
		constexpr auto s_bIgnoreReceivedAim = 0x328; // char : 0
		constexpr auto m_bHandDevice = 0x328; // char : 0
		constexpr auto m_bProcAsIfHandDevice = 0x328; // char : 0
		constexpr auto m_bLockInputDuringFire = 0x328; // char : 0
		constexpr auto m_bLockCameraDuringFire = 0x328; // char : 0
		constexpr auto m_bShouldCacheAim = 0x328; // char : 0
		constexpr auto r_bConsumedOnUse = 0x328; // char : 0
		constexpr auto r_bConsumedOnDeath = 0x328; // char : 0
		constexpr auto m_bCachedDeviceCanFire = 0x328; // char : 0
		constexpr auto m_bCarryPreFireToPostFire = 0x328; // char : 0
		constexpr auto m_bIsSecondaryFire = 0x328; // char : 0
		constexpr auto m_bIgnoreSecondaryFireLogic = 0x328; // char : 0
		constexpr auto m_bConsumePowerPoolOnStartFire = 0x328; // char : 0
		constexpr auto m_bAlwaysStartCooldown = 0x328; // char : 0
		constexpr auto m_bInTargetingMode = 0x328; // char : 0
		constexpr auto m_IsBeingInterrupted = 0x328; // char : 0
		constexpr auto c_bServerFireFailed = 0x328; // char : 0
		constexpr auto HasAlreadyFiredOnce = 0x328; // char : 0
		constexpr auto m_bAllowADSWhileFiring = 0x328; // char : 0
		constexpr auto m_bAllowADSToBeInterrupted = 0x328; // char : 0
		constexpr auto m_bAllowWeaponSwappingWhileFiring = 0x328; // char : 0
		constexpr auto m_bBuildupShouldInterruptStealth = 0x328; // char : 0
		constexpr auto m_bPreFireShouldInterruptStealth = 0x328; // char : 0
		constexpr auto m_bFireShouldInterruptStealth = 0x328; // char : 0
		constexpr auto m_bPostFireShouldInterruptStealth = 0x32c; // char : 1
		constexpr auto m_bReloadingShouldInterruptStealth = 0x32c; // char : 1
		constexpr auto m_bCancelingShouldInterruptStealth = 0x32c; // char : 1
		constexpr auto m_bStartFireShouldEnterCombat = 0x32c; // char : 1
		constexpr auto m_bFireShouldEnterCombat = 0x32c; // char : 1
		constexpr auto m_bShouldUseInstigatorsTimeDilation = 0x32c; // char : 1
		constexpr auto m_bIsADS = 0x32c; // char : 1
		constexpr auto m_bDamages = 0x32c; // char : 1
		constexpr auto m_bStuns = 0x32c; // char : 0
		constexpr auto m_bProjectileFollowOwnerYaw = 0x32c; // char : 0
		constexpr auto m_bAimThroughReticule = 0x32c; // char : 0
		constexpr auto m_bNoReticleBloom = 0x32c; // char : 0
		constexpr auto m_bUseCustomCastMode = 0x32c; // char : 0
		constexpr auto m_bIgnoredByBots = 0x32c; // char : 0
		constexpr auto m_bUsesBurstFire = 0x32c; // char : 0
		constexpr auto m_bIsFirstBurstShot = 0x32c; // char : 0
		constexpr auto m_bOnlyFirstBurstCostsAmmo = 0x32c; // char : 0
		constexpr auto m_bBurstCanBeInterrupted = 0x32c; // char : 0
		constexpr auto m_bCanEndBurstEarly = 0x32c; // char : 0
		constexpr auto c_bBurstPendingStopFire = 0x32c; // char : 0
		constexpr auto s_bInBurstRecovery = 0x32c; // char : 0
		constexpr auto s_bIsStartingBurstFire = 0x32c; // char : 0
		constexpr auto m_bCanRegenAmmoWhileFiring = 0x32c; // char : 0
		constexpr auto m_bUsesSimulatedAmmo = 0x32c; // char : 0
		constexpr auto m_bCanReloadEarly = 0x32c; // char : 0
		constexpr auto m_bForce1pViewWhileFiring = 0x32c; // char : 0
		constexpr auto m_bForce3PViewWhileFiring = 0x32c; // char : 0
		constexpr auto m_bUseDefaultOffsetWhileIn3p = 0x32c; // char : 0
		constexpr auto m_bCanCancelWithJump = 0x32c; // char : 0
		constexpr auto m_bEnterCombatOnFire = 0x32c; // char : 0
		constexpr auto m_bDeployAtFeetOnFailure = 0x32c; // char : 0
		constexpr auto m_bMustBeOnGroundToFire = 0x32c; // char : 0
		constexpr auto m_bHideTargeterWhenInvalid = 0x330; // char : 1
		constexpr auto m_bParentAnimComponentHands = 0x330; // char : 1
		constexpr auto m_bParentAnimComponent1PHead = 0x330; // char : 1
		constexpr auto m_bAmmoWasGiven = 0x330; // char : 1
		constexpr auto m_bFirstAmmoWasGiven = 0x330; // char : 1
		constexpr auto m_bCooldownWasModified = 0x330; // char : 1
		constexpr auto m_bDisableLagCompensation = 0x330; // char : 1
		constexpr auto m_bUseSeparateVerticalFrictionKeyframes = 0x330; // char : 1
		constexpr auto m_bUseRangeFalloffCurve = 0x330; // char : 0
		constexpr auto m_bUseDeviceMeshWhenTargeting = 0x330; // char : 0
		constexpr auto m_bPlayPutAway = 0x330; // char : 0
		constexpr auto m_bCanToggleTargeting = 0x330; // char : 0
		constexpr auto m_bDoNotAllowHeadShots = 0x330; // char : 0
		constexpr auto m_bConsolidateMultipleShots = 0x330; // char : 0
		constexpr auto m_bAllowFiringDuring3pTo1pTransition = 0x330; // char : 0
		constexpr auto s_bLockFiringForRoundEnd = 0x330; // char : 0
		constexpr auto m_bPreventInterrupt = 0x330; // char : 0
		constexpr auto m_bPreventCancel = 0x330; // char : 0
		constexpr auto m_bLogServerFireFailures = 0x330; // char : 0
		constexpr auto m_bUsesOutroLockout = 0x330; // char : 0
		constexpr auto m_bIsFireHoldDevice = 0x330; // char : 0
		constexpr auto m_bForceReleaseFireHoldWhenCharged = 0x330; // char : 0
		constexpr auto m_bFireHoldFull = 0x330; // char : 0
		constexpr auto m_bMustFullyHoldToFire = 0x330; // char : 0
		constexpr auto m_DeviceTimerBarCountsUp = 0x330; // char : 0
		constexpr auto m_bCooldownAfterDeployDeath = 0x330; // char : 0
		constexpr auto m_bPostSprintFire = 0x330; // char : 0
		constexpr auto m_bCanZoom = 0x330; // char : 0
		constexpr auto m_bPendingZoom = 0x330; // char : 0
		constexpr auto m_bFullScreenScope = 0x330; // char : 0
		constexpr auto m_bUsesLoopingAnim = 0x330; // char : 0
		constexpr auto m_bCanPlayFireAnim = 0x330; // char : 0
		constexpr auto m_bRightHandThrow = 0x334; // char : 1
		constexpr auto m_bDisableTgSkelConLimbs = 0x334; // char : 1
		constexpr auto m_bSkipGenerateNewSeed = 0x334; // char : 1
		constexpr auto m_bAllowCrouchDuringFire = 0x334; // char : 1
		constexpr auto m_bUncrouchBeforeFiring = 0x334; // char : 1
		constexpr auto m_bSlowWhileInADS = 0x334; // char : 1
		constexpr auto m_nSocketIndex = 0x338; // int32_t
		constexpr auto m_nSocketMax = 0x33c; // int32_t
		constexpr auto s_ParentDevice = 0x340; // ObjectProperty
		constexpr auto m_FireMode = 0x348; // TArray<ObjectProperty>
		constexpr auto r_nMeleeComboSeed = 0x358; // int32_t
		constexpr auto c_DeviceForm = 0x35c; // ObjectProperty
		constexpr auto m_CooldownTimers = 0x364; // ObjectProperty
		constexpr auto PendingImpactList = 0x36c; // TArray<FImpactInfo>
		constexpr auto c_TargetingAim = 0x37c; // FAimData
		constexpr auto m_CachedAim = 0x3b0; // FAimData
		constexpr auto m_fCachedFirePostHitDelay = 0x3e4; // float
		constexpr auto m_CachedFireRequestId = 0x3e8; // int32_t
		constexpr auto m_fCachedAttackSpeedPercChange = 0x3ec; // float
		constexpr auto s_ReceivedAim = 0x3f0; // FAimData
		constexpr auto m_pwzDeviceName = 0x424; // FPointer
		constexpr auto m_nDeviceType = 0x42c; // int32_t
		constexpr auto EquipTime = 0x430; // float
		constexpr auto s_InventoryObject = 0x434; // ObjectProperty
		constexpr auto m_nSkillId = 0x43c; // int32_t
		constexpr auto r_nInventoryId = 0x440; // int32_t
		constexpr auto m_nDeviceSubtype = 0x444; // int32_t
		constexpr auto m_fLastDeviceCanFireTimeStamp = 0x448; // float
		constexpr auto m_EndOfLastFireTimeStamp = 0x44c; // float
		constexpr auto m_fFiringTimer = 0x450; // float
		constexpr auto m_fTimeAccountedFor = 0x454; // float
		constexpr auto m_fTimeStampAccountedFor = 0x458; // float
		constexpr auto m_IndividualOffhandCooldownTime = 0x45c; // float
		constexpr auto m_fTotalReloadTime = 0x460; // float
		constexpr auto r_fCooldownDelay = 0x464; // float
		constexpr auto c_fCachedManaAtStartFire = 0x468; // float
		constexpr auto m_WhileFiringDeviceMode = 0x46c; // ObjectProperty
		constexpr auto m_fCurrentTransitionPct = 0x474; // float
		constexpr auto m_fUnequipTime = 0x478; // float
		constexpr auto m_vMeshViewOffset = 0x47c; // FVector
		constexpr auto m_fWeaponBob = 0x488; // float
		constexpr auto m_fMeshFOV = 0x48c; // float
		constexpr auto m_vProjectileSpawnOffset = 0x490; // FVector
		constexpr auto m_vADSProjectileSpawnOffset = 0x49c; // FVector
		constexpr auto m_vCrouchProjectileSpawnOffset = 0x4a8; // FVector
		constexpr auto m_vADSCrouchProjectileSpawnOffset = 0x4b4; // FVector
		constexpr auto m_nBurstTotalShots = 0x4c0; // int32_t
		constexpr auto m_nBurstShotsRemaining = 0x4c4; // int32_t
		constexpr auto m_nFireLoopInstanceId = 0x4c8; // int32_t
		constexpr auto r_nAmmoCount = 0x4cc; // FAmmoCount
		constexpr auto r_nCarriedAmmoCount = 0x4d0; // int32_t
		constexpr auto c_nSimLocalAmmoCount = 0x4d4; // FAmmoCount
		constexpr auto r_nMaxAmmoClipCount = 0x4d8; // int32_t
		constexpr auto r_nMaxAmmoCarriedCount = 0x4dc; // int32_t
		constexpr auto r_nAmmoEfficiency = 0x4e0; // int32_t
		constexpr auto m_AmmoTransactions = 0x4e4; // TArray<FAmmoTransaction>
		constexpr auto m_DelayedAmmoTransactions = 0x4f4; // TArray<FAmmoTransaction>
		constexpr auto s_RecievedUnverifiedDelayedAmmoTransactions = 0x504; // TArray<FAmmoTransaction>
		constexpr auto m_DelayedAmmoTransactionRegen = 0x514; // TArray<FAmmoTransaction>
		constexpr auto m_nPendingRegenAmmoTransactionID = 0x524; // int32_t
		constexpr auto m_nPendingReloadAmmoTransactionID = 0x528; // int32_t
		constexpr auto c_EligableRefundFiringIDs = 0x52c; // FTrackedFiringAmmoConsumption [0x1e]
		constexpr auto c_nEligableRefundFiringIDsIndexLast = 0x61c; // int32_t
		constexpr auto c_nEligableRefundFiringIDsIndexFirst = 0x620; // int32_t
		constexpr auto m_nLastFiringIDToConsumeAmmo = 0x624; // int32_t
		constexpr auto m_UniqueAmmoValidationId = 0x628; // int32_t
		constexpr auto m_fAmmoRegenPerSec = 0x62c; // float
		constexpr auto m_fAmmoRegenCounter = 0x630; // float
		constexpr auto m_FiredProjectiles = 0x634; // TArray<ObjectProperty>
		constexpr auto m_fForce3PPersistDuration = 0x644; // float
		constexpr auto m_fForce3PPersistTimer = 0x648; // float
		constexpr auto m_fEnterCombatDuration = 0x64c; // float
		constexpr auto r_Deployable = 0x650; // ObjectProperty
		constexpr auto r_nProjectiles = 0x658; // int32_t
		constexpr auto m_fDeployZForgiveness = 0x65c; // float
		constexpr auto m_fBottomlessPitCheck = 0x660; // float
		constexpr auto m_fDeployZOffset = 0x664; // float
		constexpr auto m_Abilities = 0x668; // TArray<int32_t>
		constexpr auto m_DisplayIcon = 0x678; // int32_t
		constexpr auto m_DisplayName = 0x67c; // FString
		constexpr auto m_fOnGroundAltitudeThreshold = 0x68c; // float
		constexpr auto m_PrimaryWeaponParent = 0x690; // ObjectProperty
		constexpr auto m_WeaponMeshActorClass = 0x698; // ATgWeaponMeshActor*
		constexpr auto m_LastKnownHitActor = 0x6a0; // ObjectProperty
		constexpr auto m_OnFiredDelegates = 0x6a8; // TArray<DelegateProperty>
		constexpr auto m_OnReloadDelegates = 0x6b8; // TArray<DelegateProperty>
		constexpr auto m_OnStartFireDelegates = 0x6c8; // TArray<DelegateProperty>
		constexpr auto m_OnStopFireDelegates = 0x6d8; // TArray<DelegateProperty>
		constexpr auto m_Generic1Delegates = 0x6e8; // TArray<DelegateProperty>
		constexpr auto m_Generic2Delegates = 0x6f8; // TArray<DelegateProperty>
		constexpr auto m_Generic3Delegates = 0x708; // TArray<DelegateProperty>
		constexpr auto m_nLinkedDeviceIDs = 0x718; // TArray<int32_t>
		constexpr auto m_nLinkedDeviceTypes = 0x728; // TArray<int32_t>
		constexpr auto c_QueuedSimulatedProjectileSpawns = 0x738; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileSpawnsFromServer = 0x748; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileSpawnsFromClient = 0x758; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileExplosions = 0x768; // TArray<FTgQueuedProjectileExplosion>
		constexpr auto s_nNumServerRefires = 0x778; // int32_t
		constexpr auto s_nNumClientRefires = 0x77c; // int32_t
		constexpr auto s_QueuedRefireRequests = 0x780; // TArray<FTgQueuedRefire>
		constexpr auto s_QueuedInstantFireShotsFromServer = 0x790; // TArray<FTgQueuedInstantFireShot>
		constexpr auto s_QueuedInstantFireShotsFromClient = 0x7a0; // TArray<FTgQueuedInstantFireShot>
		constexpr auto m_RandomShotSpreadStream = 0x7b0; // FPointer
		constexpr auto m_nLastSetShotSpreadSeed = 0x7b8; // int32_t
		constexpr auto m_AimAssistMagnetScale = 0x7bc; // FVector2D
		constexpr auto m_AimAssistFrictionScale = 0x7c4; // FVector2D
		constexpr auto m_AimAssistTrackingScale = 0x7cc; // FVector2D
		constexpr auto m_AimAssistLockScale = 0x7d4; // FVector2D
		constexpr auto m_fBulletMagnetismStrengthMultiplier = 0x7dc; // float
		constexpr auto m_AimAssistKeyframesMagnetVert = 0x7e0; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesMagnetHoriz = 0x7f0; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesFriction = 0x800; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAccHoriz = 0x810; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAngleHoriz = 0x820; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAccVert = 0x830; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAngleVert = 0x840; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesFrictionVert = 0x850; // TArray<FAimAssistKeyframeData>
		constexpr auto m_GameplayCurveOverrideDevices = 0x860; // TArray<ObjectProperty>
		constexpr auto m_nServerControlledShotSpreadSeed = 0x870; // int32_t
		constexpr auto m_fOutroLockoutTime = 0x874; // float
		constexpr auto m_fMinTimeBetweenAmmoCharges = 0x878; // float
		constexpr auto m_ForceFeedbackStartHold = 0x87c; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackFullHold = 0x88c; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStopHold = 0x89c; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStartFire = 0x8ac; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStartFireLoop = 0x8bc; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStopFire = 0x8cc; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStartBuildup = 0x8dc; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStopBuildup = 0x8ec; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackPostFire = 0x8fc; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStartReload = 0x90c; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStopReload = 0x91c; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackStartCooldown = 0x92c; // TArray<ObjectProperty>
		constexpr auto s_fForceReleaseFirHoldFUBARTime = 0x93c; // float
		constexpr auto s_nLastRequestedFireHoldReleaseID = 0x940; // int32_t
		constexpr auto m_AccuracySettings = 0x944; // FAccuracySettings [0x5]
		constexpr auto m_fCurrentAdvancedAccuracy = 0x9d0; // float
		constexpr auto m_fLastShotTimestamp = 0x9d4; // float
		constexpr auto m_nFreeShotsLeft = 0x9d8; // int32_t
		constexpr auto m_fLastMinAccuracy = 0x9dc; // float
		constexpr auto m_fReticleBloomScale = 0x9e0; // float
		constexpr auto m_RecoilSettings = 0x9e4; // FRecoilSettings [0x5]
		constexpr auto m_fStartFiringTimestamp = 0xa34; // float
		constexpr auto m_fAccumulatedFiringTime = 0xa38; // float
		constexpr auto m_nRandRecoilNum = 0xa3c; // int32_t
		constexpr auto r_nRecoilSeed = 0xa40; // int32_t
		constexpr auto m_nAimAssistPriorityWhileFiring = 0xa44; // int32_t
		constexpr auto r_nAllowUseWhileFlags = 0xa48; // int32_t
		constexpr auto m_fSprintRecoverTime = 0xa4c; // float
		constexpr auto r_fAttackSpeedPercChange = 0xa50; // float
		constexpr auto m_fSimulatedAttackSpeedPercChange = 0xa54; // float
		constexpr auto s_fAttackSpeedPercChangeLeniency = 0xa58; // float
		constexpr auto m_AttackSpeedModifiers = 0xa5c; // TArray<FAttackSpeedModifier>
		constexpr auto m_AmmoDevice = 0xa6c; // ObjectProperty
		constexpr auto r_nDeviceLevel = 0xa74; // int32_t
		constexpr auto m_fZoomTime = 0xa78; // float
		constexpr auto m_fZoomOutTime = 0xa7c; // float
		constexpr auto m_fDesiredZoomFOV = 0xa80; // float
		constexpr auto m_fDesiredZoomMeshFOV = 0xa84; // float
		constexpr auto m_ZoomOverlayMaterial = 0xa88; // ObjectProperty
		constexpr auto m_vZoomMeshOffset = 0xa90; // FVector
		constexpr auto m_vZoomMeshOffsetWidescreen = 0xa9c; // FVector
		constexpr auto m_fZoomWeaponBob = 0xaa8; // float
		constexpr auto m_AltFireMode = 0xaac; // int32_t
		constexpr auto m_fToggleMeshFOV = 0xab0; // float
		constexpr auto m_fToggleScopeFOV = 0xab4; // float
		constexpr auto m_sAimOffsetProfile = 0xab8; // FName
		constexpr auto m_sRecoilProfile = 0xac0; // FName
		constexpr auto m_fZCrouchProjectileOffset = 0xac8; // float
		constexpr auto m_sSocketName = 0xacc; // FName
		constexpr auto m_MuzzleFlashLightClass = 0xad4; // UTgMuzzleFlash*
		constexpr auto __DeviceEvent__Delegate = 0xadc; // DelegateProperty
	}

	namespace n_UTgSpecialFx {
		constexpr auto c_nFxId = 0x60; // int32_t
		constexpr auto c_OwnerMesh = 0x64; // ComponentProperty
		constexpr auto c_Owner = 0x6c; // ObjectProperty
		constexpr auto c_bAttached = 0x74; // char : 1
		constexpr auto c_bAppliesToAllModes = 0x74; // char : 1
		constexpr auto c_bSelfManage = 0x74; // char : 1
		constexpr auto c_bFromEffectForm = 0x74; // char : 1
		constexpr auto c_bVisualComplete = 0x74; // char : 1
		constexpr auto c_bAudioComplete = 0x74; // char : 1
		constexpr auto c_bMuteSound = 0x74; // char : 1
		constexpr auto c_bIsDebuff = 0x74; // char : 1
		constexpr auto c_bHasTeamMaterials = 0x74; // char : 0
		constexpr auto c_bActive = 0x74; // char : 0
		constexpr auto c_bIsSpawnFx = 0x74; // char : 0
		constexpr auto c_bUseBeam = 0x74; // char : 0
		constexpr auto c_bLifetimeManagedExternally = 0x74; // char : 0
		constexpr auto c_bLocalPawnIsOwner = 0x74; // char : 0
		constexpr auto m_bMatLoaded = 0x74; // char : 0
		constexpr auto m_bMatLoadedFriendly = 0x74; // char : 0
		constexpr auto m_bMatLoadedLocal = 0x74; // char : 0
		constexpr auto m_bDecalMatLoaded = 0x74; // char : 0
		constexpr auto m_bDecalMatLoadedFriendly = 0x74; // char : 0
		constexpr auto m_bDecalMatLoadedLocal = 0x74; // char : 0
		constexpr auto c_nPriorityType = 0x78; // int32_t
		constexpr auto c_nPrioritySort = 0x7c; // int32_t
		constexpr auto c_nmSocket = 0x80; // FName
		constexpr auto c_nmDisplayGroup = 0x88; // FName
		constexpr auto c_nDisplayMode = 0x90; // int32_t
		constexpr auto c_nIndex = 0x94; // int32_t
		constexpr auto c_nEquipSlot = 0x98; // int32_t
		constexpr auto c_MaterialInstance = 0x9c; // ObjectProperty
		constexpr auto c_fTransition = 0xa4; // float
		constexpr auto c_nHitEffectBase = 0xa8; // int32_t
		constexpr auto c_fMaxEffectDistance = 0xac; // float
		constexpr auto c_ParticleChannelOverride = 0xb0; // FParticleChannelContainer
		constexpr auto c_nSortPriorityOverride = 0xb4; // int32_t
		constexpr auto c_bSortPriorityOverridden = 0xb8; // int32_t
		constexpr auto c_LightComponentState = 0xbc; // ELightFxState
		constexpr auto c_LightComponent = 0xc0; // ComponentProperty
		constexpr auto c_ManagedLightEmitter = 0xc8; // FPointer
		constexpr auto c_SoundList = 0xd0; // TArray<FFx_Sound>
		constexpr auto c_PSCList = 0xe0; // TArray<FFx_PSC>
		constexpr auto c_MaterialList = 0xf0; // TArray<FFx_Material>
		constexpr auto c_DecalList = 0x100; // TArray<FFx_Decal>
		constexpr auto c_CameraShake = 0x110; // ObjectProperty
		constexpr auto c_ActiveTimer = 0x118; // ObjectProperty
		constexpr auto m_AppliedMaterials = 0x120; // TArray<FAppliedMaterialHandle>
	}

	namespace n_UOnlineImageDownloaderWeb {
		constexpr auto DownloadImages = 0x60; // TArray<FOnlineImageDownload>
		constexpr auto MaxSimultaneousDownloads = 0x70; // int32_t
		constexpr auto __OnOnlineImageDownloaded__Delegate = 0x74; // DelegateProperty
	}

	namespace n_ACoverGroup {
		constexpr auto CoverLinkRefs = 0x280; // TArray<FActorReference>
		constexpr auto AutoSelectRadius = 0x290; // float
		constexpr auto AutoSelectHeight = 0x294; // float
	}

	namespace n_UPBRuleNodeEdgeAngle {
		constexpr auto Edge = 0x70; // EProcBuildingEdge
		constexpr auto Angles = 0x74; // TArray<FRBEdgeAngleInfo>
	}

	namespace n_UTgAnimNodeMountSync {
		constexpr auto m_TgP = 0x114; // ObjectProperty
		constexpr auto m_nmSyncGroupNames = 0x11c; // TArray<FName>
	}

	namespace n_UUIData_PortalAccount {
		constexpr auto m_dwPortalId = 0x70; // Fdword
		constexpr auto m_bLinked = 0x74; // char : 1
		constexpr auto m_bLinkSilentCheck = 0x74; // char : 1
	}

	namespace n_UAnimNodeFrame {
		constexpr auto SizeX = 0x68; // int32_t
		constexpr auto SizeY = 0x6c; // int32_t
		constexpr auto BorderWidth = 0x70; // int32_t
		constexpr auto bDrawBox = 0x74; // char : 1
		constexpr auto bFilled = 0x74; // char : 1
		constexpr auto bTileFill = 0x74; // char : 1
		constexpr auto BorderColor = 0x78; // FColor
		constexpr auto FillColor = 0x7c; // FColor
	}

	namespace n_AZoneInfo {
		constexpr auto KillZ = 0x280; // float
		constexpr auto SoftKill = 0x284; // float
		constexpr auto KillZDamageType = 0x288; // UKillZDamageType*
		constexpr auto bSoftKillZ = 0x290; // char : 1
	}

	namespace n_UTgDeviceForm_ChurchillADS {
		constexpr auto m_fDesiredScopeWorld1pFOV = 0x2bc; // float
		constexpr auto m_fDesiredScopeWorld3pFOV = 0x2c0; // float
	}

	namespace n_UUIComponent_EntryToggle {
		constexpr auto m_bActive = 0x120; // char : 1
		constexpr auto m_bAllIsWell = 0x120; // char : 1
		constexpr auto m_mcText = 0x124; // ObjectProperty
		constexpr auto m_mcToggle = 0x12c; // ObjectProperty
		constexpr auto m_Button = 0x134; // ObjectProperty
	}

	namespace n_UUIData_SpecialEvent {
		constexpr auto m_dwCount = 0x94; // Fdword
		constexpr auto m_dwCompleteCount = 0x98; // Fdword
		constexpr auto m_dwLootTableItemId = 0x9c; // Fdword
		constexpr auto m_dwEndSeconds = 0xa0; // Fdword
		constexpr auto m_dwNameMsgId = 0xa4; // Fdword
		constexpr auto m_dwDescMsgId = 0xa8; // Fdword
		constexpr auto m_dwIconId = 0xac; // Fdword
		constexpr auto m_dwGoalId = 0xb0; // Fdword
		constexpr auto m_dwGoalActivityType = 0xb4; // Fdword
	}

	namespace n_UTgSeqAct_ParentAnimComponent {
		constexpr auto bDetach = 0x108; // char : 1
	}

	namespace n_UCurveEdPresetCurve {
		constexpr auto CurveName = 0x60; // FString
		constexpr auto Points = 0x70; // TArray<FPresetGeneratedPoint>
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto SkeletalMesh = 0x294; // ObjectProperty
		constexpr auto AttachedToSkelComponent = 0x29c; // ComponentProperty
		constexpr auto AnimTreeTemplate = 0x2a4; // ObjectProperty
		constexpr auto Animations = 0x2ac; // ObjectProperty
		constexpr auto AnimTickArray = 0x2b4; // TArray<ObjectProperty>
		constexpr auto AnimAlwaysTickArray = 0x2c4; // TArray<ObjectProperty>
		constexpr auto AnimTickRelevancyArray = 0x2d4; // TArray<int32_t>
		constexpr auto AnimTickWeightsArray = 0x2e4; // TArray<float>
		constexpr auto SkelControlTickArray = 0x2f4; // TArray<ObjectProperty>
		constexpr auto PhysicsAsset = 0x304; // ObjectProperty
		constexpr auto PhysicsAssetInstance = 0x30c; // ObjectProperty
		constexpr auto ApexClothing = 0x314; // FPointer
		constexpr auto PhysicsWeight = 0x31c; // float
		constexpr auto GlobalAnimRateScale = 0x320; // float
		constexpr auto StreamingDistanceMultiplier = 0x324; // float
		constexpr auto MeshObject = 0x328; // FPointer
		constexpr auto WireframeColor = 0x330; // FColor
		constexpr auto SpaceBases = 0x334; // TArray<FBoneAtom>
		constexpr auto m_AnimBases = 0x344; // TArray<FMatrix>
		constexpr auto LocalAtoms = 0x354; // TArray<FBoneAtom>
		constexpr auto CachedLocalAtoms = 0x364; // TArray<FBoneAtom>
		constexpr auto CachedSpaceBases = 0x374; // TArray<FBoneAtom>
		constexpr auto LowUpdateFrameRate = 0x384; // int32_t
		constexpr auto RequiredBones = 0x388; // TArray<char>
		constexpr auto ComposeOrderedRequiredBones = 0x398; // TArray<char>
		constexpr auto ParentAnimComponent = 0x3a8; // ComponentProperty
		constexpr auto ParentBoneMap = 0x3b0; // TArray<int32_t>
		constexpr auto AnimSets = 0x3c0; // TArray<ObjectProperty>
		constexpr auto TemporarySavedAnimSets = 0x3d0; // TArray<ObjectProperty>
		constexpr auto MorphSets = 0x3e0; // TArray<ObjectProperty>
		constexpr auto ActiveMorphs = 0x3f0; // TArray<FActiveMorph>
		constexpr auto ActiveCurveMorphs = 0x400; // TArray<FActiveMorph>
		constexpr auto MorphTargetIndexMap = 0x410; // TMap<None, None>
		constexpr auto Attachments = 0x458; // TArray<FAttachment>
		constexpr auto SkelControlIndex = 0x468; // TArray<char>
		constexpr auto PostPhysSkelControlIndex = 0x478; // TArray<char>
		constexpr auto ForcedLodModel = 0x488; // int32_t
		constexpr auto MinLodModel = 0x48c; // int32_t
		constexpr auto PredictedLODLevel = 0x490; // int32_t
		constexpr auto OldPredictedLODLevel = 0x494; // int32_t
		constexpr auto AnimationLODDistanceFactor = 0x498; // float
		constexpr auto AnimationLODFrameRate = 0x49c; // int32_t
		constexpr auto MaxDistanceFactor = 0x4a0; // float
		constexpr auto bForceWireframe = 0x4a4; // int32_t
		constexpr auto bForceRefpose = 0x4a8; // int32_t
		constexpr auto bOldForceRefPose = 0x4ac; // int32_t
		constexpr auto bNoSkeletonUpdate = 0x4b0; // char : 1
		constexpr auto bDisplayBones = 0x4b4; // int32_t
		constexpr auto bShowPrePhysBones = 0x4b8; // int32_t
		constexpr auto bHideSkin = 0x4bc; // int32_t
		constexpr auto bForceRawOffset = 0x4c0; // int32_t
		constexpr auto bIgnoreControllers = 0x4c4; // int32_t
		constexpr auto bTransformFromAnimParent = 0x4c8; // int32_t
		constexpr auto TickTag = 0x4cc; // int32_t
		constexpr auto InitTag = 0x4d0; // int32_t
		constexpr auto CachedAtomsTag = 0x4d4; // int32_t
		constexpr auto bUseSingleBodyPhysics = 0x4d8; // int32_t
		constexpr auto bRequiredBonesUpToDate = 0x4dc; // int32_t
		constexpr auto MinDistFactorForKinematicUpdate = 0x4e0; // float
		constexpr auto FramesPhysicsAsleep = 0x4e4; // int32_t
		constexpr auto SkipRateForTickAnimNodesAndGetBoneAtoms = 0x4e8; // int32_t
		constexpr auto bSkipTickAnimNodes = 0x4ec; // char : 1
		constexpr auto bSkipGetBoneAtoms = 0x4ec; // char : 1
		constexpr auto bInterpolateBoneAtoms = 0x4ec; // char : 1
		constexpr auto bHasValidBodies = 0x4ec; // char : 1
		constexpr auto bSkipAllUpdateWhenPhysicsAsleep = 0x4ec; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x4ec; // char : 1
		constexpr auto bUseBoundsFromParentAnimComponent = 0x4ec; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x4ec; // char : 1
		constexpr auto bUpdateSkelWhenNotRendered = 0x4ec; // char : 0
		constexpr auto bIgnoreControllersWhenNotRendered = 0x4ec; // char : 0
		constexpr auto bTickAnimNodesWhenNotRendered = 0x4ec; // char : 0
		constexpr auto bNotUpdatingKinematicDueToDistance = 0x4ec; // char : 0
		constexpr auto bForceDiscardRootMotion = 0x4ec; // char : 0
		constexpr auto bNotifyRootMotionProcessed = 0x4ec; // char : 0
		constexpr auto bRootMotionModeChangeNotify = 0x4ec; // char : 0
		constexpr auto bRootMotionExtractedNotify = 0x4ec; // char : 0
		constexpr auto bProcessingRootMotion = 0x4ec; // char : 0
		constexpr auto bDisableFaceFXMaterialInstanceCreation = 0x4ec; // char : 0
		constexpr auto bDisableFaceFX = 0x4ec; // char : 0
		constexpr auto bAnimTreeInitialised = 0x4ec; // char : 0
		constexpr auto bForceMeshObjectUpdate = 0x4ec; // char : 0
		constexpr auto bHasPhysicsAssetInstance = 0x4ec; // char : 0
		constexpr auto bUpdateKinematicBonesFromAnimation = 0x4ec; // char : 0
		constexpr auto bUpdateJointsFromAnimation = 0x4ec; // char : 0
		constexpr auto bSkelCompFixed = 0x4ec; // char : 0
		constexpr auto bHasHadPhysicsBlendedIn = 0x4ec; // char : 0
		constexpr auto bForceUpdateAttachmentsInTick = 0x4ec; // char : 0
		constexpr auto bEnableFullAnimWeightBodies = 0x4ec; // char : 0
		constexpr auto bPerBoneVolumeEffects = 0x4ec; // char : 0
		constexpr auto bPerBoneMotionBlur = 0x4ec; // char : 0
		constexpr auto bSyncActorLocationToRootRigidBody = 0x4ec; // char : 0
		constexpr auto bUseRawData = 0x4ec; // char : 0
		constexpr auto bDisableWarningWhenAnimNotFound = 0x4f0; // char : 1
		constexpr auto bOverrideAttachmentOwnerVisibility = 0x4f0; // char : 1
		constexpr auto bOverrideAttachmentDepthPriorityGroup = 0x4f0; // char : 1
		constexpr auto bNeedsToDeleteHitMask = 0x4f0; // char : 1
		constexpr auto bPauseAnims = 0x4f0; // char : 1
		constexpr auto bPauseSkelControls = 0x4f0; // char : 1
		constexpr auto bChartDistanceFactor = 0x4f0; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x4f0; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x4f0; // char : 0
		constexpr auto bUpdateMorphWhenParentAnimComponentExists = 0x4f0; // char : 0
		constexpr auto LineCheckBoundsScale = 0x4f4; // FVector
		constexpr auto bEnableClothSimulation = 0x500; // char : 1
		constexpr auto bDisableClothCollision = 0x500; // char : 1
		constexpr auto bClothFrozen = 0x500; // char : 1
		constexpr auto bAutoFreezeClothWhenNotRendered = 0x500; // char : 1
		constexpr auto bClothAwakeOnStartup = 0x500; // char : 1
		constexpr auto bClothBaseVelClamp = 0x500; // char : 1
		constexpr auto bClothBaseVelInterp = 0x500; // char : 1
		constexpr auto bAttachClothVertsToBaseBody = 0x500; // char : 1
		constexpr auto bIsClothOnStaticObject = 0x500; // char : 0
		constexpr auto bUpdatedFixedClothVerts = 0x500; // char : 0
		constexpr auto bClothPositionalDampening = 0x500; // char : 0
		constexpr auto bClothWindRelativeToOwner = 0x500; // char : 0
		constexpr auto bRecentlyRendered = 0x500; // char : 0
		constexpr auto bCacheAnimSequenceNodes = 0x500; // char : 0
		constexpr auto bNeedsInstanceWeightUpdate = 0x500; // char : 0
		constexpr auto bAlwaysUseInstanceWeights = 0x500; // char : 0
		constexpr auto bUpdateComposeSkeletonPasses = 0x500; // char : 0
		constexpr auto bValidTemporarySavedAnimSets = 0x500; // char : 0
		constexpr auto bHasDeferredPoseUpdate = 0x504; // int32_t
		constexpr auto c_nOverrideSkinId = 0x508; // int32_t
		constexpr auto c_nOverrideSkinLevel = 0x50c; // int32_t
		constexpr auto InstanceVertexWeightBones = 0x510; // TArray<FBonePair>
		constexpr auto LODInfo = 0x520; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto FrozenLocalToWorldPos = 0x530; // FVector
		constexpr auto FrozenLocalToWorldRot = 0x53c; // FRotator
		constexpr auto ClothExternalForce = 0x548; // FVector
		constexpr auto ClothWind = 0x554; // FVector
		constexpr auto ClothBaseVelClampRange = 0x560; // FVector
		constexpr auto ClothBlendWeight = 0x56c; // float
		constexpr auto ClothDynamicBlendWeight = 0x570; // float
		constexpr auto ClothBlendMinDistanceFactor = 0x574; // float
		constexpr auto ClothBlendMaxDistanceFactor = 0x578; // float
		constexpr auto MinPosDampRange = 0x57c; // FVector
		constexpr auto MaxPosDampRange = 0x588; // FVector
		constexpr auto MinPosDampScale = 0x594; // FVector
		constexpr auto MaxPosDampScale = 0x5a0; // FVector
		constexpr auto ClothSim = 0x5ac; // FPointer
		constexpr auto SceneIndex = 0x5b4; // int32_t
		constexpr auto ClothMeshPosData = 0x5b8; // TArray<FVector>
		constexpr auto ClothMeshNormalData = 0x5c8; // TArray<FVector>
		constexpr auto ClothMeshIndexData = 0x5d8; // TArray<int32_t>
		constexpr auto NumClothMeshVerts = 0x5e8; // int32_t
		constexpr auto NumClothMeshIndices = 0x5ec; // int32_t
		constexpr auto ClothMeshParentData = 0x5f0; // TArray<int32_t>
		constexpr auto NumClothMeshParentIndices = 0x600; // int32_t
		constexpr auto ClothMeshWeldedPosData = 0x604; // TArray<FVector>
		constexpr auto ClothMeshWeldedNormalData = 0x614; // TArray<FVector>
		constexpr auto ClothMeshWeldedIndexData = 0x624; // TArray<int32_t>
		constexpr auto ClothDirtyBufferFlag = 0x634; // int32_t
		constexpr auto ClothRBChannel = 0x638; // ERBCollisionChannel
		constexpr auto ClothRBCollideWithChannels = 0x63c; // FRBCollisionChannelContainer
		constexpr auto ClothForceScale = 0x640; // float
		constexpr auto ClothImpulseScale = 0x644; // float
		constexpr auto ClothAttachmentTearFactor = 0x648; // float
		constexpr auto bClothUseCompartment = 0x64c; // char : 1
		constexpr auto MinDistanceForClothReset = 0x650; // float
		constexpr auto LastClothLocation = 0x654; // FVector
		constexpr auto ApexClothingRBChannel = 0x660; // ERBCollisionChannel
		constexpr auto ApexClothingRBCollideWithChannels = 0x664; // FRBCollisionChannelContainer
		constexpr auto ApexClothingCollisionRBChannel = 0x668; // ERBCollisionChannel
		constexpr auto bAutoFreezeApexClothingWhenNotRendered = 0x66c; // char : 1
		constexpr auto bLocalSpaceWind = 0x66c; // char : 1
		constexpr auto WindVelocity = 0x670; // FVector
		constexpr auto WindVelocityBlendTime = 0x67c; // float
		constexpr auto bSkipInitClothing = 0x680; // char : 1
		constexpr auto SoftBodySim = 0x684; // FPointer
		constexpr auto SoftBodySceneIndex = 0x68c; // int32_t
		constexpr auto bEnableSoftBodySimulation = 0x690; // char : 1
		constexpr auto SoftBodyTetraPosData = 0x694; // TArray<FVector>
		constexpr auto SoftBodyTetraIndexData = 0x6a4; // TArray<int32_t>
		constexpr auto NumSoftBodyTetraVerts = 0x6b4; // int32_t
		constexpr auto NumSoftBodyTetraIndices = 0x6b8; // int32_t
		constexpr auto SoftBodyImpulseScale = 0x6bc; // float
		constexpr auto bSoftBodyFrozen = 0x6c0; // char : 1
		constexpr auto bAutoFreezeSoftBodyWhenNotRendered = 0x6c0; // char : 1
		constexpr auto bSoftBodyAwakeOnStartup = 0x6c0; // char : 1
		constexpr auto bSoftBodyUseCompartment = 0x6c0; // char : 1
		constexpr auto SoftBodyRBChannel = 0x6c4; // ERBCollisionChannel
		constexpr auto SoftBodyRBCollideWithChannels = 0x6c8; // FRBCollisionChannelContainer
		constexpr auto SoftBodyASVPlane = 0x6cc; // FPointer
		constexpr auto LimitMaterial = 0x6d4; // ObjectProperty
		constexpr auto RootMotionDelta = 0x6e0; // FBoneAtom
		constexpr auto RootMotionVelocity = 0x700; // FVector
		constexpr auto RootBoneTranslation = 0x70c; // FVector
		constexpr auto RootMotionAccelScale = 0x718; // FVector
		constexpr auto RootMotionMode = 0x724; // ERootMotionMode
		constexpr auto PreviousRMM = 0x725; // ERootMotionMode
		constexpr auto PendingRMM = 0x726; // ERootMotionMode
		constexpr auto OldPendingRMM = 0x727; // ERootMotionMode
		constexpr auto bRMMOneFrameDelay = 0x728; // int32_t
		constexpr auto RootMotionRotationMode = 0x72c; // ERootMotionRotationMode
		constexpr auto AnimRotationOnly = 0x72d; // EAnimRotationOnly
		constexpr auto FaceFXBlendMode = 0x72e; // EFaceFXBlendMode
		constexpr auto FaceFXActorInstance = 0x730; // FPointer
		constexpr auto CachedFaceFXAudioComp = 0x738; // ComponentProperty
		constexpr auto BoneVisibilityStates = 0x740; // TArray<char>
		constexpr auto CachedFaceFxAkEvent = 0x750; // ObjectProperty
		constexpr auto LocalToWorldBoneAtom = 0x760; // FBoneAtom
		constexpr auto ProgressiveDrawingFraction = 0x780; // float
		constexpr auto CustomSortAlternateIndexMode = 0x784; // char
		constexpr auto MorphTargetsQueried = 0x788; // TArray<FName>
		constexpr auto bUseTickOptimization = 0x798; // char : 1
		constexpr auto TickCount = 0x79c; // int32_t
		constexpr auto LastDropRate = 0x7a0; // int32_t
		constexpr auto LastDropRateChange = 0x7a4; // float
		constexpr auto AccumulatedDroppedDeltaTime = 0x7a8; // float
		constexpr auto ComponentDroppedDeltaTime = 0x7ac; // float
		constexpr auto FOV = 0x7b0; // float
	}

	namespace n_UTgAnimMetaData_Keyframed {
		constexpr auto KeyFrames = 0x60; // TArray<FMetaDataKeyFrame>
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x70; // char : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x70; // char : 1
		constexpr auto OnBecomeRelevantBehavior = 0x74; // EOnRelevanceBehavior
		constexpr auto OnCeaseRelevantBehavior = 0x75; // EOnRelevanceBehavior
		constexpr auto OnBecomeRelevantStrength = 0x78; // float
		constexpr auto OnCeaseRelevantStrength = 0x7c; // float
	}

	namespace n_UFractureMaterial {
		constexpr auto FractureEffect = 0x60; // ObjectProperty
		constexpr auto FractureSound = 0x68; // ObjectProperty
	}

	namespace n_ATgLobbyCaptureActor {
		constexpr auto m_ViewTarget = 0x290; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticSwitchParameter {
		constexpr auto A = 0xdc; // FExpressionInput
		constexpr auto B = 0x110; // FExpressionInput
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector2D
	}

	namespace n_UMeshBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MeshBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // char : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // char : 1
		constexpr auto bShouldTick = 0x74; // char : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto SocketSendBufferSize = 0x88; // int32_t
		constexpr auto SocketReceiveBufferSize = 0x8c; // int32_t
		constexpr auto MaxBandwidthTestBufferSize = 0x90; // int32_t
		constexpr auto MinBandwidthTestBufferSize = 0x94; // int32_t
		constexpr auto MaxBandwidthTestSendTime = 0x98; // float
		constexpr auto MaxBandwidthTestReceiveTime = 0x9c; // float
		constexpr auto MaxBandwidthHistoryEntries = 0xa0; // int32_t
	}

	namespace n_ATgProj_Simulated {
		constexpr auto m_bHasFlashedShutdown = 0x450; // char : 1
		constexpr auto m_bHasFlashExploded = 0x450; // char : 1
		constexpr auto m_bIgnoreClientHits = 0x450; // char : 1
		constexpr auto m_bShouldQueueServerHits = 0x450; // char : 1
		constexpr auto m_bHasQueuedServerHit = 0x450; // char : 1
		constexpr auto m_bNeedsFrictionOverride = 0x450; // char : 1
		constexpr auto m_bFlashSpecialExplosion = 0x450; // char : 1
		constexpr auto m_bTrackProjectileForTimelapse = 0x450; // char : 1
		constexpr auto s_bTrackingInitialized = 0x450; // char : 0
		constexpr auto m_bRequireAccurateTicksForPrediction = 0x450; // char : 0
		constexpr auto m_nProjectileInstanceId = 0x454; // int32_t
		constexpr auto m_nClientFireRequestId = 0x458; // int32_t
		constexpr auto m_nFireLoopInstanceId = 0x45c; // int32_t
		constexpr auto m_LerpFromClientOffset = 0x460; // FVector
		constexpr auto m_LerpTimeRemaining = 0x46c; // float
		constexpr auto m_QueuedExplodeTarget = 0x470; // ObjectProperty
		constexpr auto m_QueuedExplodeLocation = 0x478; // FVector
		constexpr auto m_QueuedExplodeNormal = 0x484; // FVector
		constexpr auto m_vSpawnVelocity = 0x490; // FVector
		constexpr auto m_vSpawnAcceleration = 0x49c; // FVector
		constexpr auto m_rSpawnRotator = 0x4a8; // FRotator
		constexpr auto m_fAllowedClientMovementTime = 0x4b4; // float
		constexpr auto m_fSpawnTimeStamp = 0x4b8; // float
		constexpr auto m_fGravityScale = 0x4bc; // float
		constexpr auto m_fFrictionOverride = 0x4c0; // float
		constexpr auto s_InterestedPlayers = 0x4c4; // TArray<ObjectProperty>
		constexpr auto m_nShadowFXID = 0x4d4; // int32_t
		constexpr auto m_ShadowFX = 0x4d8; // ObjectProperty
		constexpr auto m_ShadowDecal = 0x4e0; // ComponentProperty
		constexpr auto m_fShadowBaseWidth = 0x4e8; // float
		constexpr auto m_fMaxDecalHeight = 0x4ec; // float
		constexpr auto m_CachedRotation = 0x4f0; // FRotator
		constexpr auto m_fTrackingUpdateRate = 0x4fc; // float
		constexpr auto s_fTrackingUpdateTimer = 0x500; // float
		constexpr auto m_GameplayCurves = 0x504; // ObjectProperty
		constexpr auto m_nDeployableOverlayDisplayMask = 0x50c; // int32_t
		constexpr auto m_eDeployableOverlayIcon = 0x510; // DeployableOverlayIcon
		constexpr auto m_eDeployableOverlayState = 0x511; // DeployableOverlayState
		constexpr auto m_fDeployableOverlayEnemyViewDist = 0x514; // float
		constexpr auto m_fDeployableActiveLifeTime = 0x518; // float
	}

	namespace n_UAnimNodeBlendDirectional {
		constexpr auto DirDegreesPerSecond = 0x114; // float
		constexpr auto DirAngle = 0x118; // float
		constexpr auto SingleAnimAtOrAboveLOD = 0x11c; // int32_t
		constexpr auto RotationOffset = 0x120; // FRotator
		constexpr auto bUseAcceleration = 0x12c; // char : 1
	}

	namespace n_UParticleModuleSubUVSelect {
		constexpr auto SubImageSelect = 0x68; // FRawDistributionVector
	}

	namespace n_UTgMiniMap_Targeting {
		constexpr auto m_MICWardTarget = 0x5bc; // ObjectProperty [0x6]
	}

	namespace n_UUIGameMenu {
		constexpr auto m_bInGame = 0x244; // char : 1
		constexpr auto m_bGuides = 0x244; // char : 1
		constexpr auto m_bOption = 0x244; // char : 1
		constexpr auto m_bTutorial = 0x244; // char : 1
		constexpr auto m_fPulseTimer = 0x248; // float
		constexpr auto m_mcLogo = 0x24c; // ObjectProperty
		constexpr auto m_mcLine = 0x254; // ObjectProperty
		constexpr auto m_mcName = 0x25c; // ObjectProperty
		constexpr auto m_mcNote = 0x264; // ObjectProperty
		constexpr auto m_mcDesc = 0x26c; // ObjectProperty
		constexpr auto m_mcTitle = 0x274; // ObjectProperty
		constexpr auto m_mcBlocker = 0x27c; // ObjectProperty
		constexpr auto m_mcButton = 0x284; // ObjectProperty [0x6]
		constexpr auto m_mcOption = 0x2b4; // ObjectProperty [0x2]
		constexpr auto m_pMenuButtonsGroup = 0x2c4; // ObjectProperty
		constexpr auto m_pMenuOptionsGroup = 0x2cc; // ObjectProperty
	}

	namespace n_ATgDeploy_LootCrateMagic {
		constexpr auto r_nChestInstigatorId = 0x4b4; // int32_t
		constexpr auto r_bIsChestOpened = 0x4b8; // char : 1
		constexpr auto m_nOpenedPawnIds = 0x4bc; // TArray<int32_t>
	}

	namespace n_UGameSkelCtrl_Recoil {
		constexpr auto bBoneSpaceRecoil = 0xd0; // char : 1
		constexpr auto bPlayRecoil = 0xd0; // char : 1
		constexpr auto bOldPlayRecoil = 0xd0; // char : 1
		constexpr auto bApplyControl = 0xd0; // char : 1
		constexpr auto m_bBlendIn = 0xd0; // char : 1
		constexpr auto Recoil = 0xd4; // FRecoilDef
		constexpr auto Aim = 0x144; // FVector2D
		constexpr auto m_bBlendInRemainingTime = 0x14c; // float
		constexpr auto m_BlendLoc = 0x150; // FVector
		constexpr auto m_BlendRot = 0x15c; // FRotator
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceActiveWhile {
		constexpr auto m_bIsCardActive = 0xc8; // char : 1
	}

	namespace n_UTgGameDC_Device {
		constexpr auto m_nDeviceId = 0x16c; // int32_t
		constexpr auto m_nDeviceInstanceId = 0x170; // int32_t
		constexpr auto m_nPointsAllocated = 0x174; // int32_t
		constexpr auto m_CooldownTimer = 0x178; // ObjectProperty
		constexpr auto __usc_get_mode_tooltip_delegate__Delegate = 0x180; // DelegateProperty
		constexpr auto __usc_set_cast_mode_delegate__Delegate = 0x190; // DelegateProperty
	}

	namespace n_UTgInventoryObject_Listen_BowlingBall {
		constexpr auto m_fRocketBootsEndTime = 0xd8; // float
		constexpr auto m_fPostRocketBootsTime = 0xdc; // float
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CylinderComponent = 0x2a4; // ComponentProperty
		constexpr auto TouchingActorEntryPosition = 0x2ac; // FVector
		constexpr auto FoliageVelocity = 0x2b8; // FVector
		constexpr auto FoliageForce = 0x2c4; // FVector
		constexpr auto FoliagePosition = 0x2d0; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x2dc; // float
		constexpr auto FoliageTouchImpulseScale = 0x2e0; // float
		constexpr auto FoliageStiffness = 0x2e4; // float
		constexpr auto FoliageStiffnessQuadratic = 0x2e8; // float
		constexpr auto FoliageDamping = 0x2ec; // float
		constexpr auto MaxDamageImpulse = 0x2f0; // float
		constexpr auto MaxTouchImpulse = 0x2f4; // float
		constexpr auto MaxForce = 0x2f8; // float
		constexpr auto Mass = 0x2fc; // float
	}

	namespace n_ATgSpectatorHUD {
		constexpr auto m_WidgetReplacements = 0x68c; // TArray<FWidgetClassReplacementPair>
	}

	namespace n_UTgControlModule_StunTaunted {
		constexpr auto m_fInitialYaw = 0xcc; // float
		constexpr auto m_fInterpTime = 0xd0; // float
		constexpr auto m_fRemainingInterpTime = 0xd4; // float
	}

	namespace n_UTgSeqEvent_MICParameterEvent {
		constexpr auto MICEventType = 0x128; // eMICEventType
		constexpr auto AttachedMICs = 0x12c; // TArray<ObjectProperty>
	}

	namespace n_UFaceFXAnimSet {
		constexpr auto InternalFaceFXAnimSet = 0x60; // FPointer
		constexpr auto RawFaceFXAnimSetBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXMiniSessionBytes = 0x78; // TArray<char>
		constexpr auto NumLoadErrors = 0x88; // int32_t
	}

	namespace n_UInterpGroupInstAI {
		constexpr auto AIGroup = 0x88; // ObjectProperty
		constexpr auto SavedPhysics = 0x90; // EPhysics
		constexpr auto bSavedNoEncroachCheck = 0x94; // char : 1
		constexpr auto bSavedCollideActors = 0x94; // char : 1
		constexpr auto bSavedBlockActors = 0x94; // char : 1
		constexpr auto StageMarkActor = 0x98; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearbyGodCount {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bMustBeInForwardCone = 0x9c; // char : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UTgSeqAct_SetMountingEnabled {
		constexpr auto bEnabled = 0x108; // char : 1
	}

	namespace n_ATgVolumePathNode {
		constexpr auto m_bIsAboveGround = 0x380; // char : 1
		constexpr auto m_vGroundHitLocation = 0x384; // FVector
		constexpr auto m_fGroundTraceDistance = 0x390; // float
		constexpr auto m_GroundSprite = 0x394; // ComponentProperty
	}

	namespace n_UUIHome {
		constexpr auto m_dwVendorRequestId = 0x244; // Fdword
		constexpr auto m_bQueued = 0x248; // char : 1
		constexpr auto m_bMatchFound = 0x248; // char : 1
		constexpr auto m_bAnimateMenu = 0x248; // char : 1
		constexpr auto m_bPassEnabled = 0x248; // char : 1
		constexpr auto m_bGameBitNoStore = 0x248; // char : 1
		constexpr auto m_mcPass = 0x24c; // ObjectProperty
		constexpr auto m_mcPassIcon = 0x254; // ObjectProperty
		constexpr auto m_mcPassIconLevelA = 0x25c; // ObjectProperty
		constexpr auto m_mcPassIconLevelB = 0x264; // ObjectProperty
		constexpr auto m_mcPassIconLevelC = 0x26c; // ObjectProperty
		constexpr auto m_mcPassDetails = 0x274; // ObjectProperty
		constexpr auto m_mcPassDetailsDesc = 0x27c; // ObjectProperty
		constexpr auto m_mcPassDetailsType = 0x284; // ObjectProperty
		constexpr auto m_mcPassDetailBar = 0x28c; // ObjectProperty
		constexpr auto m_mcPassDetailBarTip = 0x294; // ObjectProperty
		constexpr auto m_mcPassDetailBarFill = 0x29c; // ObjectProperty
		constexpr auto m_mcLogo = 0x2a4; // ObjectProperty
		constexpr auto m_mcButton = 0x2ac; // ObjectProperty [0x9]
		constexpr auto m_mcButtonCTA = 0x2f4; // ObjectProperty [0x9]
		constexpr auto m_mcButtonDailyCTA = 0x33c; // ObjectProperty [0x9]
		constexpr auto m_mcButtonSale = 0x384; // ObjectProperty [0x9]
		constexpr auto m_mcButtonText = 0x3cc; // ObjectProperty [0x9]
		constexpr auto m_mcButtonBounds = 0x414; // ObjectProperty [0x9]
		constexpr auto m_mcButtonHighlight = 0x45c; // ObjectProperty
		constexpr auto m_mcQuestList = 0x464; // ObjectProperty
		constexpr auto m_mcQuestListClose = 0x46c; // ObjectProperty
		constexpr auto m_mcQuestListBlocker = 0x474; // ObjectProperty
		constexpr auto m_mcQuestEntry = 0x47c; // ObjectProperty [0x3]
		constexpr auto m_mcQuestButton = 0x494; // ObjectProperty [0x3]
		constexpr auto m_mcQuestDiscard = 0x4ac; // ObjectProperty [0x3]
		constexpr auto m_mcQuestComplete = 0x4c4; // ObjectProperty [0x3]
		constexpr auto m_mcQuestTitle = 0x4dc; // ObjectProperty [0x3]
		constexpr auto m_mcQuestEntryCTA = 0x4f4; // ObjectProperty [0x3]
		constexpr auto m_mcQuestMask = 0x50c; // ObjectProperty [0x3]
		constexpr auto m_mcQuestTip = 0x524; // ObjectProperty [0x3]
		constexpr auto m_mcQuestFillBar = 0x53c; // ObjectProperty [0x3]
		constexpr auto m_mcQuestEntryBG = 0x554; // ObjectProperty [0x3]
		constexpr auto m_mcQuestRewardText = 0x56c; // ObjectProperty
		constexpr auto m_mcQuestReward1 = 0x574; // ObjectProperty
		constexpr auto m_mcCalloutGroup = 0x57c; // ObjectProperty
		constexpr auto m_mcCalloutDecro = 0x584; // ObjectProperty
		constexpr auto m_mcCalloutButton = 0x58c; // ObjectProperty
		constexpr auto m_mcCalloutButtonKey = 0x594; // ObjectProperty
		constexpr auto m_CarouselPanel = 0x59c; // ObjectProperty
		constexpr auto m_FeatureData = 0x5a4; // TArray<FJsonFeatureData>
		constexpr auto m_FeatureMap = 0x5b4; // TMap<None, None>
		constexpr auto m_pButtonGroup = 0x5fc; // ObjectProperty
		constexpr auto m_pQuestGroup = 0x604; // ObjectProperty
		constexpr auto m_pRerollAction = 0x60c; // ObjectProperty
		constexpr auto m_pDequeueAction = 0x614; // ObjectProperty
		constexpr auto m_pCalloutAction = 0x61c; // ObjectProperty
		constexpr auto m_akPlay = 0x624; // ObjectProperty
		constexpr auto m_akLeave = 0x62c; // ObjectProperty
		constexpr auto m_akMatch = 0x634; // ObjectProperty
		constexpr auto m_akQuestOpen = 0x63c; // ObjectProperty
		constexpr auto m_akQuestClose = 0x644; // ObjectProperty
		constexpr auto m_akQuestReroll = 0x64c; // ObjectProperty
		constexpr auto m_akQuestConfirm = 0x654; // ObjectProperty
	}

	namespace n_ATgSpectatorController {
		constexpr auto m_CameraMode = 0x1614; // SpectatorCameraMode
		constexpr auto m_CurrentCycle = 0x1615; // SpectatorCameraCycle
		constexpr auto m_PendingCycle = 0x1616; // SpectatorCameraCycle
		constexpr auto m_eHelicopterFlight = 0x1617; // SpecFlightMode
		constexpr auto m_CurrentSpectatorMode = 0x1618; // ESpectatorMode
		constexpr auto m_CurrentZoomState = 0x1619; // ESpecZoomState
		constexpr auto m_BookmarkCamera = 0x161c; // ObjectProperty
		constexpr auto m_Bookmarks = 0x1624; // FSpectatorBookmark [0xa]
		constexpr auto m_fDefaultTweenTime = 0x1804; // float
		constexpr auto m_bOutlineCharacters = 0x1808; // char : 1
		constexpr auto m_bIsMapSquashed = 0x1808; // char : 1
		constexpr auto m_bIgnoreCullDistanceVolumes = 0x1808; // char : 1
		constexpr auto m_fNameplateFadeMinDist = 0x180c; // float
		constexpr auto m_fNameplateFadeMaxDist = 0x1810; // float
		constexpr auto m_fNameplateFadeMaxAmount = 0x1814; // float
		constexpr auto m_fNameplateScaleMinDist = 0x1818; // float
		constexpr auto m_fNameplateScaleMaxDist = 0x181c; // float
		constexpr auto m_fNameplateScaleMaxAmount = 0x1820; // float
		constexpr auto m_fInterpolateCameraDistance = 0x1824; // float
		constexpr auto m_TimeLastTaskforceChange = 0x1828; // float
		constexpr auto m_TaskForceID = 0x182c; // int32_t
		constexpr auto m_NewTaskForceID = 0x1830; // int32_t
		constexpr auto m_TaskforceChangeCount = 0x1834; // int32_t
		constexpr auto m_BroadcastChannels = 0x1838; // FBroadcastChannel [0x4]
		constexpr auto c_vMouseClickDeprojectionExtent = 0x1858; // FVector
		constexpr auto m_fOverviewCenterpointOffset = 0x1864; // float
		constexpr auto m_fMouseCursorVisibleTime = 0x1868; // float
		constexpr auto m_fRemainingCursorVisibleTime = 0x186c; // float
	}

	namespace n_UUIData_ChestExtended {
		constexpr auto nItemId = 0x60; // int32_t
		constexpr auto nBotRefId = 0x64; // int32_t
		constexpr auto nVendorId = 0x68; // int32_t
		constexpr auto nSortOrder = 0x6c; // int32_t
		constexpr auto nRarity = 0x70; // int32_t
		constexpr auto nBundleVendorId = 0x74; // int32_t
		constexpr auto nBundleCount = 0x78; // int32_t
		constexpr auto nBundleLootIds = 0x7c; // int32_t [0x4]
		constexpr auto nBundleItemCounts = 0x8c; // int32_t [0x4]
	}

	namespace n_UTgSeqAct_GetMaterialInst {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto MatInstName = 0x110; // FString
		constexpr auto MaterialIndex = 0x120; // int32_t
	}

	namespace n_ADecalManager {
		constexpr auto DecalTemplate = 0x280; // ComponentProperty
		constexpr auto PoolDecals = 0x288; // TArray<ComponentProperty>
		constexpr auto DecalLifeSpan = 0x298; // float
		constexpr auto DecalDepthBias = 0x29c; // float
		constexpr auto OrbisDecalDepthBias = 0x2a0; // float
		constexpr auto DecalBlendRange = 0x2a4; // FVector2D
		constexpr auto ActiveDecals = 0x2ac; // TArray<FActiveDecalInfo>
	}

	namespace n_UOnlineEventsInterfaceMcp {
		constexpr auto EventUploadConfigs = 0x80; // TArray<FEventUploadConfig>
		constexpr auto MCPEventPostObjects = 0x90; // TArray<FPointer>
		constexpr auto DisabledUploadTypes = 0xa0; // TArray<EEventUploadType>
		constexpr auto bBinaryStats = 0xb0; // char : 1
	}

	namespace n_UTgSkelCon_AstroSpinner {
		constexpr auto m_PawnOwner = 0x188; // ObjectProperty
	}

	namespace n_ATgBotEncounterVolume {
		constexpr auto m_Factories = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_nPlayers = 0x2cc; // int32_t
	}

	namespace n_ATgDeployable {
		constexpr auto VfTable_ITgSkinnableInterface = 0x280; // FPointer
		constexpr auto VfTable_ITgCombatActor = 0x288; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x290; // FPointer
		constexpr auto VfTable_ITgInteractiveAudio = 0x298; // FPointer
		constexpr auto VfTable_ITgGameplayCurveOwner = 0x2a0; // FPointer
		constexpr auto r_nDeployableId = 0x2a8; // int32_t
		constexpr auto r_nUniqueDeployableId = 0x2ac; // int32_t
		constexpr auto r_nSkinId = 0x2b0; // int32_t
		constexpr auto r_nWeaponSkinId = 0x2b4; // int32_t
		constexpr auto c_bInitialized = 0x2b8; // char : 1
		constexpr auto m_bConsumedOnFire = 0x2b8; // char : 1
		constexpr auto m_bFireOnDeploy = 0x2b8; // char : 1
		constexpr auto m_bHasAlreadyFiredOnce = 0x2b8; // char : 1
		constexpr auto m_bInstantFire = 0x2b8; // char : 1
		constexpr auto m_bRequiresEffectManager = 0x2b8; // char : 1
		constexpr auto c_bMinimapOnlyOwnerSee = 0x2b8; // char : 1
		constexpr auto r_bTakeDamage = 0x2b8; // char : 1
		constexpr auto m_bInDestroyedState = 0x2b8; // char : 0
		constexpr auto s_bDestroyedThisTick = 0x2b8; // char : 0
		constexpr auto m_bIsDeployed = 0x2b8; // char : 0
		constexpr auto c_bEnemyMatLoaded = 0x2b8; // char : 0
		constexpr auto s_bAlwaysRelevantExceptRoyale = 0x2b8; // char : 0
		constexpr auto m_bProtectedFromGameModeDestroy = 0x2b8; // char : 0
		constexpr auto m_bProtectedFromOwnerDisconnectDestroy = 0x2b8; // char : 0
		constexpr auto m_bDestroyOnOwnerDeathFlag = 0x2b8; // char : 0
		constexpr auto m_bAdjustMeshToGround = 0x2b8; // char : 0
		constexpr auto m_bIsVisionBlocker = 0x2b8; // char : 0
		constexpr auto m_bIsAIVisionBlocker = 0x2b8; // char : 0
		constexpr auto m_bMovableProjBlocker = 0x2b8; // char : 0
		constexpr auto m_bShouldRagdoll = 0x2b8; // char : 0
		constexpr auto m_bDeviceUsedIsHandDevice = 0x2b8; // char : 0
		constexpr auto m_bUseSilhouettesOverride = 0x2b8; // char : 0
		constexpr auto m_bOverrideTargetComponentHeight = 0x2b8; // char : 0
		constexpr auto r_bInitialIsEnemy = 0x2b8; // char : 0
		constexpr auto c_bIsSpectateToggleActive = 0x2b8; // char : 0
		constexpr auto m_bUseRangeFalloffCurve = 0x2b8; // char : 0
		constexpr auto m_bAllowDisenchant = 0x2b8; // char : 0
		constexpr auto m_nDeployableType = 0x2bc; // int32_t
		constexpr auto r_nPhysicalType = 0x2c0; // int32_t
		constexpr auto r_nHealth = 0x2c4; // int32_t
		constexpr auto r_EffectManager = 0x2c8; // ObjectProperty
		constexpr auto m_EquipEffects = 0x2d0; // TArray<ObjectProperty>
		constexpr auto s_Properties = 0x2e0; // TArray<FTgPropertyInstance>
		constexpr auto c_Form = 0x2f0; // ObjectProperty
		constexpr auto c_FireFx = 0x2f8; // ObjectProperty
		constexpr auto c_Mesh = 0x300; // ComponentProperty
		constexpr auto r_vFlashLocation = 0x308; // FVector
		constexpr auto r_nFlashCount = 0x314; // char
		constexpr auto r_nFlashFireCount = 0x315; // char
		constexpr auto c_nPreviousFlashFireCount = 0x316; // char
		constexpr auto m_InitHUDOverlayIcon = 0x317; // DeployableOverlayIcon
		constexpr auto m_InitHUDOverlayState = 0x318; // DeployableOverlayState
		constexpr auto m_FireMode = 0x31c; // ObjectProperty
		constexpr auto m_fStateTime = 0x324; // float
		constexpr auto s_DeployFactory = 0x328; // ObjectProperty
		constexpr auto m_TimeCreated = 0x330; // int32_t
		constexpr auto m_DestroyedMesh = 0x334; // ComponentProperty
		constexpr auto m_fLifeAfterDeathSecs = 0x33c; // float
		constexpr auto r_nReplicateDestroyIt = 0x340; // int32_t
		constexpr auto m_AsInteractiveAudio = 0x344; // TScriptInterface<Class>
		constexpr auto s_fPersistTime = 0x354; // float
		constexpr auto LightEnvironment = 0x358; // ComponentProperty
		constexpr auto r_fTimeToDeploySecs = 0x360; // float
		constexpr auto r_fInitDeployTime = 0x364; // float
		constexpr auto m_fCurrentDeployPercentage = 0x368; // float
		constexpr auto r_fCurrentDeployTime = 0x36c; // float
		constexpr auto m_fDamagedDuringDeploy = 0x370; // float
		constexpr auto s_SpawnerDeviceMode = 0x374; // ObjectProperty
		constexpr auto r_Owner = 0x37c; // ObjectProperty
		constexpr auto r_nOwnerFireMode = 0x384; // int32_t
		constexpr auto AlwaysRelevantDistanceSquared = 0x388; // float
		constexpr auto s_fMaxRelevancyDistanceSquared = 0x38c; // float
		constexpr auto m_fMaxAimAssistStacks = 0x390; // float
		constexpr auto m_DeployableAnimNodes = 0x394; // TArray<ObjectProperty>
		constexpr auto r_vRagdollDir = 0x3a4; // FVector
		constexpr auto m_nShardCost = 0x3b0; // int32_t
		constexpr auto m_CollisionSettings = 0x3b4; // FCollisionSettingsDeployable
		constexpr auto m_PawnsBasedOnMe = 0x3c4; // TArray<ObjectProperty>
		constexpr auto m_SilhouetteManager = 0x3d4; // ObjectProperty
		constexpr auto m_nInitHUDOverlayDisplayMask = 0x3dc; // int32_t
		constexpr auto m_InitHUDOverlayEnemyViewDist = 0x3e0; // float
		constexpr auto m_fHUDOverlayZOffset = 0x3e4; // float
		constexpr auto m_pAmSkin = 0x3e8; // FPointer
		constexpr auto m_pAmWeaponSkin = 0x3f0; // FPointer
		constexpr auto m_TargetComponent = 0x3f8; // ComponentProperty
		constexpr auto m_TargetCollisionTraceDistance = 0x400; // float
		constexpr auto m_fOverriddenTargetComponentHeight = 0x404; // float
		constexpr auto m_LastDamager = 0x408; // ObjectProperty
		constexpr auto m_LastDamagerTimeStamp = 0x410; // int32_t
		constexpr auto r_DRI = 0x414; // ObjectProperty
		constexpr auto c_LocalPC = 0x41c; // ObjectProperty
		constexpr auto m_DRIClass = 0x424; // AActor*
		constexpr auto m_fDisableSpectatorFxTime = 0x42c; // float
		constexpr auto m_fDisableSpectatorFxTimeRemaining = 0x430; // float
		constexpr auto m_AkActorUnoccluded = 0x434; // ObjectProperty
		constexpr auto m_fHazardDistance = 0x43c; // float
		constexpr auto m_fHazardRating = 0x440; // float
		constexpr auto m_fInteractMaxDistance = 0x444; // float
	}

	namespace n_UUIData_CustomPlayer {
		constexpr auto m_nTaskForce = 0x60; // int32_t
		constexpr auto m_dwPlayerId = 0x64; // Fdword
	}

	namespace n_UTgAIBehaviorCondition_TimeSinceLastTookDamage {
		constexpr auto TimeThreshold = 0x98; // float
		constexpr auto bMustBeCombatTarget = 0x9c; // char : 1
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb0; // char : 1
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UActorFactoryAmbientSoundSimple {
		constexpr auto SoundNodeWave = 0x9c; // ObjectProperty
	}

	namespace n_AGameCrowdDestination {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x28c; // FPointer
		constexpr auto bKillWhenReached = 0x294; // char : 1
		constexpr auto bAllowAsPreviousDestination = 0x294; // char : 1
		constexpr auto bAvoidWhenPanicked = 0x294; // char : 1
		constexpr auto bSkipBehaviorIfPanicked = 0x294; // char : 1
		constexpr auto bFleeDestination = 0x294; // char : 1
		constexpr auto bMustReachExactly = 0x294; // char : 1
		constexpr auto bHasRestrictions = 0x294; // char : 1
		constexpr auto bAllowsSpawning = 0x294; // char : 1
		constexpr auto bAllowCloudSpawning = 0x294; // char : 0
		constexpr auto bAllowVisibleSpawning = 0x294; // char : 0
		constexpr auto bLineSpawner = 0x294; // char : 0
		constexpr auto bSpawnAtEdge = 0x294; // char : 0
		constexpr auto bSoftPerimeter = 0x294; // char : 0
		constexpr auto bIsVisible = 0x294; // char : 0
		constexpr auto bWillBeVisible = 0x294; // char : 0
		constexpr auto bCanSpawnHereNow = 0x294; // char : 0
		constexpr auto bIsBeyondSpawnDistance = 0x294; // char : 0
		constexpr auto bAdjacentToVisibleNode = 0x294; // char : 0
		constexpr auto bHasNavigationMesh = 0x294; // char : 0
		constexpr auto NextDestinations = 0x298; // TArray<ObjectProperty>
		constexpr auto QueueHead = 0x2a8; // ObjectProperty
		constexpr auto Capacity = 0x2b0; // int32_t
		constexpr auto Frequency = 0x2b4; // float
		constexpr auto CustomerCount = 0x2b8; // int32_t
		constexpr auto SupportedAgentClasses = 0x2bc; // TArray<AGameCrowdAgent*>
		constexpr auto SupportedArchetypes = 0x2cc; // TArray<ObjectProperty>
		constexpr auto RestrictedAgentClasses = 0x2dc; // TArray<AGameCrowdAgent*>
		constexpr auto RestrictedArchetypes = 0x2ec; // TArray<ObjectProperty>
		constexpr auto ExactReachTolerance = 0x2fc; // float
		constexpr auto InteractionTag = 0x300; // FName
		constexpr auto InteractionDelay = 0x308; // float
		constexpr auto ReachedBehaviors = 0x30c; // TArray<FBehaviorEntry>
		constexpr auto AgentEnRoute = 0x31c; // ObjectProperty
		constexpr auto Priority = 0x324; // float
		constexpr auto LastSpawnTime = 0x328; // float
		constexpr auto MyPopMgr = 0x32c; // ObjectProperty
	}

	namespace n_UUserCloudFileCloudSaveSystemDataBlobStore {
		constexpr auto UserCloudFile = 0x60; // TScriptInterface<Class>
		constexpr auto GetDataBlobCallback = 0x70; // DelegateProperty
		constexpr auto SetDataBlobCallback = 0x80; // DelegateProperty
		constexpr auto DeleteDataBlobCallback = 0x90; // DelegateProperty
		constexpr auto __GetDataBlobCallbackDelegate__Delegate = 0xa0; // DelegateProperty
		constexpr auto __SetDataBlobCallbackDelegate__Delegate = 0xb0; // DelegateProperty
		constexpr auto __DeleteDataBlobCallbackDelegate__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x6c; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x70; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x94; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xbc; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xc0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0xe4; // FOrbitOptions
	}

	namespace n_UUIComponent_StringWithCount {
		constexpr auto m_mcCountTf = 0x120; // ObjectProperty
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0xb0; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0xb4; // FExpressionInput
	}

	namespace n_UParticleModuleLocationStaticVertSurface {
		constexpr auto SourceType = 0x68; // ELocationStaticVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // char : 1
		constexpr auto bOrientMeshEmitters = 0x78; // char : 1
		constexpr auto bEnforceNormalCheck = 0x78; // char : 1
		constexpr auto StaticMeshActorParamName = 0x7c; // FName
		constexpr auto NormalToCompare = 0x84; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x90; // float
		constexpr auto NormalCheckTolerance = 0x94; // float
		constexpr auto ValidMaterialIndices = 0x98; // TArray<int32_t>
	}

	namespace n_AGamePlayerCamera {
		constexpr auto ThirdPersonCam = 0x604; // ObjectProperty
		constexpr auto ThirdPersonCameraClass = 0x60c; // UGameCameraBase*
		constexpr auto FixedCam = 0x614; // ObjectProperty
		constexpr auto FixedCameraClass = 0x61c; // UGameCameraBase*
		constexpr auto CurrentCamera = 0x624; // ObjectProperty
		constexpr auto bUseForcedCamFOV = 0x62c; // char : 1
		constexpr auto bInterpolateCamChanges = 0x62c; // char : 1
		constexpr auto bResetInterp = 0x62c; // char : 1
		constexpr auto ForcedCamFOV = 0x630; // float
		constexpr auto LastViewTarget = 0x634; // ObjectProperty
		constexpr auto SplitScreenShakeScale = 0x63c; // float
		constexpr auto LastTargetBase = 0x640; // ObjectProperty
		constexpr auto LastTargetBaseTM = 0x650; // FMatrix
	}

	namespace n_UMorphNodeWeight {
		constexpr auto NodeWeight = 0x84; // float
	}

	namespace n_USeqAct_IsInObjectList {
		constexpr auto bCheckForAllObjects = 0x108; // char : 1
		constexpr auto bObjectFound = 0x108; // char : 1
	}

	namespace n_UInput {
		constexpr auto Bindings = 0xb0; // TArray<FKeyBind>
		constexpr auto PressedKeys = 0xc0; // TArray<FKeyBind>
		constexpr auto CurrentControllerId = 0xd0; // int32_t
		constexpr auto CurrentEvent = 0xd4; // EInputEvent
		constexpr auto CurrentDelta = 0xd8; // float
		constexpr auto CurrentDeltaTime = 0xdc; // float
		constexpr auto NameToPtr = 0xe0; // TMap<None, None>
		constexpr auto AxisArray = 0x128; // TArray<FPointer>
		constexpr auto CachedInputEvents = 0x138; // TArray<ObjectProperty>
		constexpr auto CachedAnalogInputEvents = 0x148; // TArray<ObjectProperty>
		constexpr auto CachedTouchInputEvents = 0x158; // TArray<ObjectProperty>
		constexpr auto CurrentTouches = 0x168; // TArray<FTouchTracker>
	}

	namespace n_UCheatManager {
		constexpr auto ViewingFrom = 0x60; // FString
		constexpr auto OwnCamera = 0x70; // FString
	}

	namespace n_UOnlineGameInterfaceSteamworks {
		constexpr auto GameInviteAcceptedDelegates = 0x348; // TArray<DelegateProperty>
		constexpr auto RegisterPlayerCompleteDelegates = 0x358; // TArray<DelegateProperty>
		constexpr auto UnregisterPlayerCompleteDelegates = 0x368; // TArray<DelegateProperty>
		constexpr auto __OnGameInviteAccepted__Delegate = 0x378; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x388; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x398; // DelegateProperty
	}

	namespace n_ANxForceFieldRadial {
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto ForceStrength = 0x2e4; // float
		constexpr auto ForceRadius = 0x2e8; // float
		constexpr auto SelfRotationStrength = 0x2ec; // float
		constexpr auto ForceFalloff = 0x2f0; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2f4; // FPointer
	}

	namespace n_ATgMeshAssembly {
		constexpr auto m_nMeshAsmId = 0x280; // int32_t
		constexpr auto m_nTeam = 0x284; // int32_t
		constexpr auto m_Mesh = 0x288; // ComponentProperty
		constexpr auto m_LightEnvironment = 0x290; // ComponentProperty
	}

	namespace n_UUIComponent_MatchDisplay {
		constexpr auto m_mcBuildHeader = 0x120; // ObjectProperty
		constexpr auto m_mcStatsHeader = 0x128; // ObjectProperty
		constexpr auto m_pList = 0x130; // ObjectProperty
		constexpr auto m_eDisplayMode = 0x138; // EUICMatchDisplayTabType
	}

	namespace n_APComVideoPlayer {
		constexpr auto VideoURL = 0x280; // FString
		constexpr auto Width = 0x290; // int32_t
		constexpr auto Height = 0x294; // int32_t
		constexpr auto Volume = 0x298; // float
		constexpr auto bAutoResize = 0x29c; // char : 1
		constexpr auto bConstrainAspectRatio = 0x29c; // char : 1
		constexpr auto bDebugRender = 0x29c; // char : 1
		constexpr auto bVideoFinished = 0x29c; // char : 1
		constexpr auto bOnVideoFinishedIssued = 0x29c; // char : 1
		constexpr auto bHasMinorStreamingProblem = 0x29c; // char : 1
		constexpr auto ConstrainedAspectRatio = 0x2a0; // float
		constexpr auto Resource = 0x2a4; // FPointer
		constexpr auto RenderTargetToUse = 0x2ac; // ObjectProperty
		constexpr auto TextureCopyForStreamingProblem = 0x2b4; // ObjectProperty
		constexpr auto TimeSinceMinorStreamingProblem = 0x2bc; // float
		constexpr auto StreamingProblemMaterial = 0x2c0; // ObjectProperty
		constexpr auto CurrentErrorState = 0x2c8; // EPComVideoPlayerError
		constexpr auto RenderThreadErrorState = 0x2c9; // EPComVideoPlayerError
		constexpr auto BlackTexture = 0x2cc; // ObjectProperty
		constexpr auto __OnVideoFinished__Delegate = 0x2d4; // DelegateProperty
		constexpr auto __OnVideoError__Delegate = 0x2e4; // DelegateProperty
	}

	namespace n_UTgSkelCon_HitReaction {
		constexpr auto m_CurrentRecoilDir = 0x168; // RecoilHitDir
		constexpr auto m_MoveType = 0x169; // HitReactionMoveType
		constexpr auto m_RecoilFromFront = 0x16c; // FRecoilInfo
		constexpr auto m_RecoilFromBack = 0x24c; // FRecoilInfo
		constexpr auto m_RecoilFromLeft = 0x32c; // FRecoilInfo
		constexpr auto m_RecoilFromRight = 0x40c; // FRecoilInfo
		constexpr auto m_SlaveSkelControlNames = 0x4ec; // TArray<FName>
		constexpr auto m_SlaveSkelControls = 0x4fc; // TArray<ObjectProperty>
		constexpr auto m_bInitialized = 0x50c; // char : 1
	}

	namespace n_UUIComponent_Dropdown {
		constexpr auto m_pGamepadKey = 0x120; // ObjectProperty
		constexpr auto m_pList = 0x128; // ObjectProperty
		constexpr auto m_pBlocker = 0x130; // ObjectProperty
		constexpr auto m_Button = 0x138; // FUICListEntry
		constexpr auto m_pToggleListVisible = 0x160; // ObjectProperty
		constexpr auto m_pBack = 0x168; // ObjectProperty
		constexpr auto m_pAny = 0x170; // ObjectProperty
	}

	namespace n_USeqAct_ConcatenateStrings {
		constexpr auto StrA = 0x108; // FString
		constexpr auto StrB = 0x118; // FString
		constexpr auto ConcatenateWithSpace = 0x128; // char : 1
		constexpr auto StrResult = 0x12c; // FString
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x6c; // FRawDistributionFloat
		constexpr auto RateScale = 0x90; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xb4; // EParticleBurstMethod
		constexpr auto BurstList = 0xb8; // TArray<FParticleBurst>
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FColor
	}

	namespace n_UTgAIBehaviorCondition_VisibilityBase {
		constexpr auto bRestrictFoV = 0x98; // char : 1
	}

	namespace n_UTgSeqAct_TemporaryRemoveDevice {
		constexpr auto m_nEquipPoint = 0x108; // int32_t
	}

	namespace n_USeqEvent_MobileInput {
		constexpr auto XAxisValue = 0x138; // float
		constexpr auto YAxisValue = 0x13c; // float
		constexpr auto CenterX = 0x140; // float
		constexpr auto CenterY = 0x144; // float
		constexpr auto CurrentX = 0x148; // float
		constexpr auto CurrentY = 0x14c; // float
	}

	namespace n_UTgAnimBlendByWeaponSwapType {
		constexpr auto m_WeaponSwaps = 0x168; // TArray<FWeaponSwapTypeData>
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto CenterX = 0x118; // float
		constexpr auto CenterY = 0x11c; // float
		constexpr auto Speed = 0x120; // float
	}

	namespace n_UMcpIdMappingManager {
		constexpr auto AccountMappings = 0xa8; // TArray<FMcpIdMapping>
		constexpr auto AddMappingUrl = 0xb8; // FString
		constexpr auto QueryMappingUrl = 0xc8; // FString
		constexpr auto AddMappingRequests = 0xd8; // TArray<FAddMappingRequest>
		constexpr auto QueryMappingRequests = 0xe8; // TArray<FQueryMappingRequest>
	}

	namespace n_ATgActionPoint {
		constexpr auto ActionType = 0x380; // eActionPointType
		constexpr auto nObjectiveNum = 0x381; // char
		constexpr auto nTaskForce = 0x382; // char
		constexpr auto bUseRotation = 0x384; // char : 1
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x280; // ComponentProperty
		constexpr auto LightEnvironment = 0x288; // ComponentProperty
		constexpr auto bDestroyOnSystemFinish = 0x290; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x290; // char : 1
		constexpr auto bCurrentlyActive = 0x290; // char : 1
	}

	namespace n_USeqAct_Latent {
		constexpr auto LatentActors = 0x108; // TArray<ObjectProperty>
		constexpr auto bAborted = 0x118; // char : 1
		constexpr auto LatentActivationTime = 0x11c; // float
	}

	namespace n_ATgDeploy_EffectTrail {
		constexpr auto r_TrailPawn = 0x448; // ObjectProperty
		constexpr auto m_TrailEffectID = 0x450; // int32_t
		constexpr auto m_TrailEffects = 0x454; // ObjectProperty
		constexpr auto m_bHasInitialPoint = 0x45c; // char : 1
		constexpr auto r_bInDeployMode = 0x45c; // char : 1
		constexpr auto m_fPointDistance = 0x460; // float
		constexpr auto m_fPointLifetime = 0x464; // float
		constexpr auto m_nNextPointIndex = 0x468; // int32_t
		constexpr auto m_nTailPointIndex = 0x46c; // int32_t
		constexpr auto m_TrailPoints = 0x470; // FVector [0x14]
		constexpr auto m_ParticleSystemOffsets = 0x560; // FVector [0x14]
		constexpr auto m_TrailTimes = 0x650; // float [0x14]
		constexpr auto m_CollisionProxies = 0x6a0; // ObjectProperty [0x14]
		constexpr auto m_Decals = 0x740; // ComponentProperty [0x14]
	}

	namespace n_USeqAct_RangeSwitch {
		constexpr auto Ranges = 0x108; // TArray<FSwitchRange>
	}

	namespace n_ATgDevice_HunterRoll {
		constexpr auto m_bRolledBackward = 0xb60; // char : 1
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0xb8; // EInterpMoveAxis
		constexpr auto LookupTrack = 0xbc; // FInterpLookupTrack
	}

	namespace n_UUIScene_UIRadialMenuLobby {
		constexpr auto m_bPreviewingChicken = 0x1e0; // char : 1
		constexpr auto m_nOnTickCallbackHandle = 0x1e4; // int32_t
		constexpr auto m_fTransformationTimer = 0x1e8; // float
	}

	namespace n_ATgDeploy_HealthNugget_TeamOnly {
		constexpr auto r_nTaskForceAlignment = 0x46c; // int32_t
		constexpr auto m_fNuggetSpawnTime = 0x470; // float
		constexpr auto m_fNuggetGracePeriod = 0x474; // float
	}

	namespace n_APortal {
		constexpr auto Destination = 0x2bc; // ObjectProperty
		constexpr auto SourceEdgeRotation = 0x2c4; // FRotator
		constexpr auto SourceEdgeTranslation = 0x2d0; // FVector
		constexpr auto fEdgeWidth = 0x2dc; // float
		constexpr auto bForceParallelEdges = 0x2e0; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_WhatIsLastAttackerTargeting {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x60; // ObjectProperty
		constexpr auto OldRenderingOverrides = 0x68; // FRenderingPerformanceOverrides
	}

	namespace n_UUIComponent_Popup {
		constexpr auto m_pItem = 0x140; // ObjectProperty
		constexpr auto m_grScene = 0x148; // ObjectProperty
		constexpr auto m_nCallbackOnBackHandle = 0x150; // int32_t
		constexpr auto m_bCanHidePopup = 0x154; // char : 1
		constexpr auto m_bFadeWithShowHide = 0x154; // char : 1
	}

	namespace n_UUIInteractable_NavPanel {
		constexpr auto m_mcHighlight = 0x140; // ObjectProperty
		constexpr auto m_mcTitle = 0x148; // ObjectProperty
		constexpr auto m_mcIcon = 0x150; // ObjectProperty
		constexpr auto m_mcPrimeQuestCTA = 0x158; // ObjectProperty
		constexpr auto m_pCTA = 0x160; // ObjectProperty
	}

	namespace n_UTgAnimNodeAimOffset {
		constexpr auto Owner = 0x170; // ObjectProperty
		constexpr auto m_CachedNodeList = 0x178; // TArray<ObjectProperty>
		constexpr auto m_bInitializedCachedNodeList = 0x188; // char : 1
		constexpr auto m_bDisableVerticalAiming = 0x188; // char : 1
		constexpr auto bInterpolating = 0x188; // char : 1
		constexpr auto m_bBakeProfileForAllAnimOffsets = 0x188; // char : 1
		constexpr auto m_bRandomAimPointsEnabled = 0x188; // char : 1
		constexpr auto m_bOverrideAim = 0x188; // char : 1
		constexpr auto m_bAimAtTarget = 0x188; // char : 1
		constexpr auto m_bDisableWeaponLeading = 0x188; // char : 1
		constexpr auto m_PitchControlType = 0x18c; // EPitchControlType
		constexpr auto m_PitchControlUserCurve = 0x190; // FInterpCurveFloat
		constexpr auto TurnInPlaceOffset = 0x1a4; // float
		constexpr auto LastAimX = 0x1a8; // float
		constexpr auto InterpSpeed = 0x1ac; // float
		constexpr auto m_nBakeProfileIndex = 0x1b0; // int32_t
		constexpr auto m_AimOffsetPct = 0x1b4; // FVector2D
		constexpr auto m_RandomAimPointsRangeX = 0x1bc; // FVector2D
		constexpr auto m_RandomAimPointsRangeY = 0x1c4; // FVector2D
		constexpr auto m_fRandomAimPointsInterpRate = 0x1cc; // float
		constexpr auto m_fRandomAimPointsIntervalMin = 0x1d0; // float
		constexpr auto m_fRandomAimPointsIntervalMax = 0x1d4; // float
		constexpr auto m_fCurrentRandomAimPointsInterval = 0x1d8; // float
		constexpr auto m_TargetRandomAimLocation = 0x1dc; // FVector2D
		constexpr auto m_fDeltaTime = 0x1e4; // float
		constexpr auto m_OverriddenAim = 0x1e8; // FVector2D
		constexpr auto m_WeaponMeshActor = 0x1f0; // ObjectProperty
	}

	namespace n_UParticleModuleAttractorSkelVertSurface {
		constexpr auto FalloffType = 0x68; // EVertSurfaceAttractorFalloffType
		constexpr auto DestinationType = 0x69; // EAttractorSkelVertSurfaceDestination
		constexpr auto bParticleLifeRelative = 0x6c; // char : 1
		constexpr auto bEnforceNormalCheck = 0x6c; // char : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SkelMeshActorParamName = 0x154; // FName
		constexpr auto ValidAssociatedBones = 0x15c; // TArray<FName>
		constexpr auto NormalToCompare = 0x16c; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x178; // float
		constexpr auto NormalCheckTolerance = 0x17c; // float
		constexpr auto ValidMaterialIndices = 0x180; // TArray<int32_t>
	}

	namespace n_UAnimNotify_Trails {
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x70; // char : 1
		constexpr auto bPreview = 0x70; // char : 1
		constexpr auto bPreviewForceExplicit = 0x70; // char : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x70; // char : 1
		constexpr auto bResampleRequired = 0x70; // char : 1
		constexpr auto FirstEdgeSocketName = 0x74; // FName
		constexpr auto ControlPointSocketName = 0x7c; // FName
		constexpr auto SecondEdgeSocketName = 0x84; // FName
		constexpr auto LastStartTime = 0x8c; // float
		constexpr auto EndTime = 0x90; // float
		constexpr auto SampleTimeStep = 0x94; // float
		constexpr auto TrailSampleData = 0x98; // TArray<FTrailSamplePoint>
		constexpr auto SamplesPerSecond = 0xa8; // float
		constexpr auto TrailSampledData = 0xac; // TArray<FTrailSample>
		constexpr auto CurrentTime = 0xbc; // float
		constexpr auto TimeStep = 0xc0; // float
		constexpr auto AnimNodeSeq = 0xc4; // ObjectProperty
	}

	namespace n_AWorldAttractor {
		constexpr auto bEnabled = 0x280; // char : 1
		constexpr auto LoopDuration = 0x284; // float
		constexpr auto CurrentTime = 0x288; // float
		constexpr auto FalloffType = 0x28c; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x290; // FMatineeRawDistributionFloat
		constexpr auto Range = 0x2bc; // FMatineeRawDistributionFloat
		constexpr auto Strength = 0x2e8; // FMatineeRawDistributionFloat
		constexpr auto CollisionRadius = 0x314; // float
		constexpr auto DragCoefficient = 0x318; // FMatineeRawDistributionFloat
		constexpr auto DragRadius = 0x344; // FMatineeRawDistributionFloat
	}

	namespace n_UMobileMenuBarItem {
		constexpr auto Width = 0x60; // int32_t
		constexpr auto Height = 0x64; // int32_t
		constexpr auto VpPos = 0x68; // FVector2D
	}

	namespace n_UUIShopCrowns {
		constexpr auto m_fPurchaseFlash = 0x244; // float
		constexpr auto m_mcBack = 0x248; // ObjectProperty
		constexpr auto m_mcName = 0x250; // ObjectProperty
		constexpr auto m_mcFrame = 0x258; // ObjectProperty
		constexpr auto m_mcTotal = 0x260; // ObjectProperty
		constexpr auto m_mcBlocker = 0x268; // ObjectProperty
		constexpr auto m_mcTotalCrowns = 0x270; // ObjectProperty
		constexpr auto m_mcItem = 0x278; // ObjectProperty [0x5]
		constexpr auto m_mcItemIcon = 0x2a0; // ObjectProperty [0x5]
		constexpr auto m_mcItemName = 0x2c8; // ObjectProperty [0x5]
		constexpr auto m_mcItemDesc = 0x2f0; // ObjectProperty [0x5]
		constexpr auto m_mcItemCrowns = 0x318; // ObjectProperty [0x5]
		constexpr auto m_mcItemButton = 0x340; // ObjectProperty [0x5]
		constexpr auto m_mcItemButtonName = 0x368; // ObjectProperty [0x5]
		constexpr auto m_mcItemButtonDesc = 0x390; // ObjectProperty [0x5]
		constexpr auto m_mcItemButtonType = 0x3b8; // ObjectProperty [0x5]
		constexpr auto m_mcItemButtonFlash = 0x3e0; // ObjectProperty [0x5]
		constexpr auto m_pCrownBundleInputGroup = 0x408; // ObjectProperty
		constexpr auto m_akCrownsTier1 = 0x410; // ObjectProperty
		constexpr auto m_akCrownsTier2 = 0x418; // ObjectProperty
		constexpr auto m_akCrownsTier3 = 0x420; // ObjectProperty
		constexpr auto m_akCrownsTier4 = 0x428; // ObjectProperty
		constexpr auto m_akCrownsTier5 = 0x430; // ObjectProperty
	}

	namespace n_UTgEffectDamage_PresenceDoT {
		constexpr auto m_EffectTimeStamps = 0xc8; // TArray<float>
		constexpr auto m_EffectDamageValues = 0xd8; // TArray<float>
		constexpr auto m_DamageInstances = 0xe8; // FPointer
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetIsInTowerRadius {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
	}

	namespace n_UUIData_SprayRental {
		constexpr auto pChestData = 0x60; // ObjectProperty
		constexpr auto nSprayItemId = 0x68; // int32_t
		constexpr auto nSprayVendorId = 0x6c; // int32_t
		constexpr auto nChestItemId = 0x70; // int32_t
		constexpr auto nLootId = 0x74; // int32_t
		constexpr auto nBundleVendorId = 0x78; // int32_t
		constexpr auto nBundleCount = 0x7c; // int32_t
		constexpr auto nBundleLootIds = 0x80; // int32_t [0x4]
		constexpr auto nBundleItemCounts = 0x90; // int32_t [0x4]
	}

	namespace n_USeqAct_Destroy {
		constexpr auto bDestroyBasedActors = 0x108; // char : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_UAnimNodeBlendByProperty {
		constexpr auto PropertyName = 0x144; // FName
		constexpr auto bUseOwnersBase = 0x14c; // char : 1
		constexpr auto bForceUpdate = 0x14c; // char : 1
		constexpr auto bUseSpecificBlendTimes = 0x14c; // char : 1
		constexpr auto bSynchronizeNodesInEditor = 0x14c; // char : 1
		constexpr auto CachedPropertyName = 0x150; // FName
		constexpr auto CachedFloatProperty = 0x158; // FPointer
		constexpr auto CachedBoolProperty = 0x160; // FPointer
		constexpr auto CachedByteProperty = 0x168; // FPointer
		constexpr auto CachedOwner = 0x170; // ObjectProperty
		constexpr auto BlendTime = 0x178; // float
		constexpr auto FloatPropMin = 0x17c; // float
		constexpr auto FloatPropMax = 0x180; // float
		constexpr auto BlendToChild1Time = 0x184; // float
		constexpr auto BlendToChild2Time = 0x188; // float
	}

	namespace n_ATgProj_IceStorm {
		constexpr auto m_bStopped = 0x51c; // char : 1
		constexpr auto m_bCheckLOSForHit = 0x51c; // char : 1
	}

	namespace n_ATgHelpAlertVolume {
		constexpr auto TaskForceNumber = 0x2bc; // int32_t
		constexpr auto GameTipIdList = 0x2c0; // TArray<int32_t>
	}

	namespace n_UTgSeqAct_UIAlert {
		constexpr auto nMsgId = 0x108; // int32_t
		constexpr auto Taskforces = 0x10c; // TArray<int32_t>
		constexpr auto Broadcast = 0x11c; // TArray<char>
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UUIDataShop {
		constexpr auto m_LootTableItems = 0x60; // TMap<None, None>
		constexpr auto m_Vendors = 0xa8; // TMap<None, None>
		constexpr auto m_RealMoneyItems = 0xf0; // TMap<None, None>
		constexpr auto m_Items = 0x138; // TMap<None, None>
		constexpr auto m_SKUtoLootId = 0x180; // TMap<None, None>
		constexpr auto m_MarketplaceProducts = 0x1c8; // TArray<FMarketplaceProductDetails>
		constexpr auto m_RequiredItemReverseLookup = 0x1d8; // FMultiMap_Mirror
		constexpr auto m_dwContinuousRequestVendors = 0x220; // TArray<Fdword>
		constexpr auto m_fContinuousRequestTimer = 0x230; // float
		constexpr auto m_dwInfoVendors = 0x234; // TArray<Fdword>
		constexpr auto m_dwStoreVendors = 0x244; // TArray<Fdword>
		constexpr auto m_dwRealMoneyVendors = 0x254; // TArray<Fdword>
		constexpr auto m_bAllStoreVendorsLoaded = 0x264; // char : 1
		constexpr auto m_bFinishedStoringRealMoneyItemData = 0x264; // char : 1
		constexpr auto m_dwVendorRequestId = 0x268; // Fdword
		constexpr auto m_dwContinuousVendorsRequestId = 0x26c; // Fdword
		constexpr auto m_dwRealMoneyVendorsRequestId = 0x270; // Fdword
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInTowerRadius {
		constexpr auto bGodsMustBeEnemy = 0x98; // char : 1
		constexpr auto bTowerMustBeEnemy = 0x98; // char : 1
		constexpr auto GodThreshold = 0x9c; // int32_t
	}

	namespace n_UUIHudBot {
		constexpr auto m_nMana = 0x244; // int32_t
		constexpr auto m_nLives = 0x248; // int32_t
		constexpr auto m_nHealth = 0x24c; // int32_t
		constexpr auto m_nShards = 0x250; // int32_t
		constexpr auto m_nNuggets = 0x254; // int32_t
		constexpr auto m_nManaMax = 0x258; // int32_t
		constexpr auto m_nHealthMax = 0x25c; // int32_t
		constexpr auto m_nAmmoClip = 0x260; // int32_t
		constexpr auto m_nAmmoType = 0x264; // int32_t
		constexpr auto m_nAmmoCarry = 0x268; // int32_t
		constexpr auto m_nLootDevice = 0x26c; // int32_t
		constexpr auto m_nPickupDeviceId = 0x270; // int32_t
		constexpr auto m_bMount = 0x274; // char : 1
		constexpr auto m_bPrompt = 0x274; // char : 1
		constexpr auto m_bShowAmmo = 0x274; // char : 1
		constexpr auto m_bCursorMode = 0x274; // char : 1
		constexpr auto m_bShouldShow = 0x274; // char : 1
		constexpr auto m_bCosmeticWheel = 0x274; // char : 1
		constexpr auto m_bPlayerChickened = 0x274; // char : 1
		constexpr auto m_eActive = 0x278; // char
		constexpr auto m_eCastType = 0x279; // char
		constexpr auto m_ePickupSlot = 0x27a; // char
		constexpr auto m_ePromptType = 0x27b; // char
		constexpr auto m_eCursorType = 0x27c; // char
		constexpr auto m_eStatus = 0x27d; // char [0x5]
		constexpr auto m_fCastTime = 0x284; // float
		constexpr auto m_fCastTimer = 0x288; // float
		constexpr auto m_fActiveTime = 0x28c; // float
		constexpr auto m_fArrowTime = 0x290; // float
		constexpr auto m_fArrowTimerIn = 0x294; // float
		constexpr auto m_fArrowTimerOut = 0x298; // float
		constexpr auto m_fArmor = 0x29c; // float
		constexpr auto m_fArmorMax = 0x2a0; // float
		constexpr auto m_fKeyTimer = 0x2a4; // float
		constexpr auto m_fErrorTimer = 0x2a8; // float
		constexpr auto m_fLootAnimTimer = 0x2ac; // float
		constexpr auto m_sCombatEntry = 0x2b0; // FString
		constexpr auto m_nCachedMaxShards = 0x2c0; // int32_t
		constexpr auto m_nAmmo = 0x2c4; // int32_t [0x2]
		constexpr auto m_nRune = 0x2cc; // int32_t [0x6]
		constexpr auto m_nEquip = 0x2e4; // int32_t [0x2]
		constexpr auto m_nArmor = 0x2ec; // int32_t [0x4]
		constexpr auto m_nSkill = 0x2fc; // int32_t [0x5]
		constexpr auto m_nSkillAmmo = 0x310; // int32_t [0x5]
		constexpr auto m_fTimers = 0x324; // float [0x5]
		constexpr auto m_fActive = 0x338; // float [0x5]
		constexpr auto m_fArrowTimerA = 0x34c; // float [0x4]
		constexpr auto m_fArrowTimerB = 0x35c; // float [0x4]
		constexpr auto m_ActiveEffects = 0x36c; // FHudBuffEffect [0x7]
		constexpr auto m_SortedEffects = 0x430; // TArray<ObjectProperty>
		constexpr auto m_CombatEntries = 0x440; // TArray<FUICOMBATENTRY>
		constexpr auto m_mcLives = 0x450; // ObjectProperty
		constexpr auto m_mcShards = 0x458; // ObjectProperty
		constexpr auto m_mcNuggets = 0x460; // ObjectProperty
		constexpr auto m_mcLivesText = 0x468; // ObjectProperty
		constexpr auto m_mcShardsText = 0x470; // ObjectProperty
		constexpr auto m_mcNuggetsText = 0x478; // ObjectProperty
		constexpr auto m_mcError = 0x480; // ObjectProperty
		constexpr auto m_mcCombat = 0x488; // ObjectProperty
		constexpr auto m_mcCast = 0x490; // ObjectProperty
		constexpr auto m_mcCastMask = 0x498; // ObjectProperty
		constexpr auto m_mcCastTime = 0x4a0; // ObjectProperty
		constexpr auto m_mcCastShards = 0x4a8; // ObjectProperty
		constexpr auto m_mcCastShardsText = 0x4b0; // ObjectProperty
		constexpr auto m_mcPrompt = 0x4b8; // ObjectProperty
		constexpr auto m_mcPromptKey = 0x4c0; // ObjectProperty
		constexpr auto m_mcPromptText = 0x4c8; // ObjectProperty
		constexpr auto m_mcHealth = 0x4d0; // ObjectProperty
		constexpr auto m_mcHealthBar = 0x4d8; // ObjectProperty
		constexpr auto m_mcHealthBarChange = 0x4e0; // ObjectProperty
		constexpr auto m_mcHealthBarFlash = 0x4e8; // ObjectProperty
		constexpr auto m_mcHealthBarTip = 0x4f0; // ObjectProperty
		constexpr auto m_mcHealthTextCurrent = 0x4f8; // ObjectProperty
		constexpr auto m_mcHealthTextMax = 0x500; // ObjectProperty
		constexpr auto m_mcHealthFrameFlash = 0x508; // ObjectProperty
		constexpr auto m_mcMana = 0x510; // ObjectProperty
		constexpr auto m_mcManaBar = 0x518; // ObjectProperty
		constexpr auto m_mcArmor = 0x520; // ObjectProperty
		constexpr auto m_mcArmorBar = 0x528; // ObjectProperty
		constexpr auto m_mcArmorBarChange = 0x530; // ObjectProperty
		constexpr auto m_mcArmorBarFlash = 0x538; // ObjectProperty
		constexpr auto m_mcArmorBarTip = 0x540; // ObjectProperty
		constexpr auto m_mcArmorTextCurrent = 0x548; // ObjectProperty
		constexpr auto m_mcArmorTextMax = 0x550; // ObjectProperty
		constexpr auto m_mcArmorFrameFlash = 0x558; // ObjectProperty
		constexpr auto m_mcSpectating = 0x560; // ObjectProperty
		constexpr auto m_mcRune = 0x568; // ObjectProperty [0x6]
		constexpr auto m_mcRuneIcon = 0x598; // ObjectProperty [0x6]
		constexpr auto m_mcArmorPiece = 0x5c8; // ObjectProperty [0x4]
		constexpr auto m_mcSlot = 0x5e8; // ObjectProperty
		constexpr auto m_mcSlotEquip = 0x5f0; // ObjectProperty
		constexpr auto m_mcSlotEquipIcon = 0x5f8; // ObjectProperty
		constexpr auto m_mcSlotEquipFrame = 0x600; // ObjectProperty
		constexpr auto m_mcSlotSkill = 0x608; // ObjectProperty
		constexpr auto m_mcSlotSkillIcon = 0x610; // ObjectProperty
		constexpr auto m_mcSlotSkillFrame = 0x618; // ObjectProperty
		constexpr auto m_mcSlotArrow = 0x620; // ObjectProperty [0x4]
		constexpr auto m_mcEquip = 0x640; // ObjectProperty [0x2]
		constexpr auto m_mcEquipAmmo = 0x650; // ObjectProperty [0x2]
		constexpr auto m_mcEquipAmmoIcon = 0x660; // ObjectProperty [0x2]
		constexpr auto m_mcEquipAmmoInfinity = 0x670; // ObjectProperty [0x2]
		constexpr auto m_mcEquipIcon = 0x680; // ObjectProperty [0x2]
		constexpr auto m_mcEquipFrame = 0x690; // ObjectProperty [0x2]
		constexpr auto m_mcEquipRarity = 0x6a0; // ObjectProperty [0x2]
		constexpr auto m_mcEquipElement = 0x6b0; // ObjectProperty [0x2]
		constexpr auto m_mcEquipDagger1 = 0x6c0; // ObjectProperty
		constexpr auto m_mcEquipDagger2 = 0x6c8; // ObjectProperty
		constexpr auto m_mcSkill = 0x6d0; // ObjectProperty [0x5]
		constexpr auto m_mcSkillKey = 0x6f8; // ObjectProperty [0x5]
		constexpr auto m_mcSkillIcon = 0x720; // ObjectProperty [0x5]
		constexpr auto m_mcSkillTime = 0x748; // ObjectProperty [0x5]
		constexpr auto m_mcSkillFrame = 0x770; // ObjectProperty [0x5]
		constexpr auto m_mcSkillActive = 0x798; // ObjectProperty [0x5]
		constexpr auto m_mcKey = 0x7c0; // ObjectProperty [0x5]
		constexpr auto m_mcKeyPulse = 0x7e8; // ObjectProperty [0x5]
		constexpr auto m_mcBuffBar = 0x810; // ObjectProperty
		constexpr auto m_mcBuff = 0x818; // ObjectProperty [0x7]
		constexpr auto m_mcBuffIcon = 0x850; // ObjectProperty [0x7]
		constexpr auto m_mcBuffTimer = 0x888; // ObjectProperty [0x7]
		constexpr auto m_EffectGroupIconMap = 0x8c0; // TMap<None, None>
		constexpr auto m_EffectGroupNameMap = 0x908; // TMap<None, None>
		constexpr auto m_AkArmorBreak = 0x950; // ObjectProperty
	}

	namespace n_UGamePadLightbarSubsystem {
		constexpr auto CurrentLightBarState = 0x60; // LightBarState
		constexpr auto CurrentColor = 0x64; // FLinearColor
		constexpr auto OriginalColor = 0x74; // FLinearColor
		constexpr auto TargetColor = 0x84; // FLinearColor
		constexpr auto LerpTimeRemaining = 0x94; // float
		constexpr auto TotalLerpTime = 0x98; // float
		constexpr auto DefaultColor = 0x9c; // FColor
		constexpr auto ColorDefinitions = 0xa0; // TArray<FColorDefinition>
		constexpr auto LerpToInstructions = 0xb0; // TArray<FLerpToInstruction>
		constexpr auto SetAndLerpInstructions = 0xc0; // TArray<FSetAndLerpInstruction>
		constexpr auto PulseInstructions = 0xd0; // TArray<FPulseInstruction>
	}

	namespace n_UUIData_MultiQueue {
		constexpr auto nIcon = 0x60; // int32_t
		constexpr auto sName = 0x64; // FString
		constexpr auto sDesc = 0x74; // FString
		constexpr auto pQueues = 0x84; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipChange {
		constexpr auto PointIndex = 0x128; // int32_t
	}

	namespace n_UMaterialExpressionDestDepth {
		constexpr auto bNormalize = 0xb0; // char : 1
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto SpeedX = 0x118; // float
		constexpr auto SpeedY = 0x11c; // float
	}

	namespace n_UPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x6c; // float
		constexpr auto bSoft = 0x70; // char : 1
		constexpr auto SoftStartPenalty = 0x74; // float
	}

	namespace n_USeqAct_SetActiveAnimChild {
		constexpr auto NodeName = 0x108; // FName
		constexpr auto ChildIndex = 0x110; // int32_t
		constexpr auto BlendTime = 0x114; // float
	}

	namespace n_UTgAnimBlendByAmmo {
		constexpr auto m_nDefaultChild = 0x168; // int32_t
		constexpr auto m_nDeviceType = 0x16c; // int32_t
		constexpr auto m_bDelayUpdateUntilReplay = 0x170; // char : 1
		constexpr auto m_bCheckAmmoPerTick = 0x170; // char : 1
		constexpr auto m_ChildAmmoParams = 0x174; // TArray<FAmmoBlendParams>
		constexpr auto m_nPendingChildIndex = 0x184; // int32_t
		constexpr auto m_nAmmoUpdateTickTag = 0x188; // int32_t
	}

	namespace n_UTgInvListener_OpportunityInChaos {
		constexpr auto m_fStartFireTime = 0xc8; // float
	}

	namespace n_UDistributionFloatUniformRange {
		constexpr auto MaxHigh = 0x7c; // float
		constexpr auto MaxLow = 0x80; // float
		constexpr auto MinHigh = 0x84; // float
		constexpr auto MinLow = 0x88; // float
		constexpr auto bMirrorMaxMin = 0x8c; // char : 1
	}

	namespace n_ATgDeploy_Pickup {
		constexpr auto r_nDeviceId = 0x448; // int32_t
		constexpr auto r_nAmmoCount = 0x44c; // int32_t
		constexpr auto r_bAmmoOverridden = 0x450; // char : 1
		constexpr auto m_bDestroyOnPickup = 0x450; // char : 1
		constexpr auto m_bPickedUp = 0x450; // char : 1
		constexpr auto m_bCanAutoPickup = 0x450; // char : 1
		constexpr auto c_bPendingDisenchant = 0x450; // char : 1
		constexpr auto r_bIsDisenchanted = 0x450; // char : 1
		constexpr auto m_fAliveTime = 0x454; // float
		constexpr auto m_nNumBounces = 0x458; // int32_t
		constexpr auto m_rTargetRotation = 0x45c; // FRotator
		constexpr auto m_fTargetRotationInterpSpeed = 0x468; // float
		constexpr auto r_nLockTime = 0x46c; // int32_t
		constexpr auto r_nLockPlayer = 0x470; // int32_t
		constexpr auto r_nLockTaskForce = 0x474; // int32_t
		constexpr auto s_fLockTime = 0x478; // float
		constexpr auto r_sLockName = 0x47c; // FString
		constexpr auto m_fAutoPickupSquareDistance = 0x48c; // float
		constexpr auto m_nmPlayerPickupDisplayGroupName = 0x490; // FName
		constexpr auto c_LootPickupResponseCounter = 0x498; // int32_t
		constexpr auto m_PendingTargetPickupPawn = 0x49c; // ObjectProperty
		constexpr auto m_fTimeToAutoPickup = 0x4a4; // float
		constexpr auto m_fRemainingTimeTillAutoPickup = 0x4a8; // float
		constexpr auto r_TargetPickupPawn = 0x4ac; // ObjectProperty
		constexpr auto m_fAccelRate = 0x4b4; // float
		constexpr auto m_fFlyToPlayerDeltaTime = 0x4b8; // float
		constexpr auto m_fFlyToPlayerCutoffTime = 0x4bc; // float
		constexpr auto m_Silhouette = 0x4c0; // ComponentProperty
		constexpr auto m_nUpgradeFXId = 0x4c8; // int32_t
		constexpr auto m_nDisableFXId = 0x4cc; // int32_t
		constexpr auto m_UpgradeFX = 0x4d0; // ObjectProperty
		constexpr auto m_DisableFX = 0x4d8; // ObjectProperty
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto bIsLayerThumbnail = 0x344; // char : 1
		constexpr auto DataWeightmapIndex = 0x348; // int32_t
		constexpr auto DataWeightmapSize = 0x34c; // int32_t
	}

	namespace n_ABrush {
		constexpr auto CsgOper = 0x280; // ECsgOper
		constexpr auto BrushColor = 0x284; // FColor
		constexpr auto PolyFlags = 0x288; // int32_t
		constexpr auto bColored = 0x28c; // char : 1
		constexpr auto bCuttingBrush = 0x28c; // char : 1
		constexpr auto bSolidWhenSelected = 0x28c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x28c; // char : 1
		constexpr auto Brush = 0x290; // ObjectProperty
		constexpr auto BrushComponent = 0x298; // ComponentProperty
		constexpr auto SavedSelections = 0x2a0; // TArray<FGeomSelection>
	}

	namespace n_UCameraModifier {
		constexpr auto bDisabled = 0x60; // char : 1
		constexpr auto bPendingDisable = 0x60; // char : 1
		constexpr auto bExclusive = 0x60; // char : 1
		constexpr auto bDebug = 0x60; // char : 1
		constexpr auto CameraOwner = 0x64; // ObjectProperty
		constexpr auto Priority = 0x6c; // char
		constexpr auto AlphaInTime = 0x70; // float
		constexpr auto AlphaOutTime = 0x74; // float
		constexpr auto Alpha = 0x78; // float
		constexpr auto TargetAlpha = 0x7c; // float
	}

	namespace n_ATgPostProcessVolume {
		constexpr auto m_Material = 0x44c; // ObjectProperty
		constexpr auto m_SceneDPG = 0x454; // ESceneDepthPriorityGroup
		constexpr auto m_MaterialMIC = 0x458; // ObjectProperty
		constexpr auto m_FadeInTime = 0x460; // float
		constexpr auto m_FadeOutTime = 0x464; // float
		constexpr auto m_FadeScalarParameterName = 0x468; // FName
	}

	namespace n_UTexture2DDynamic {
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto NumMips = 0x10c; // int32_t
		constexpr auto bIsResolveTarget = 0x110; // char : 1
	}

	namespace n_UMorphTarget {
		constexpr auto MorphLODModels = 0x60; // TArray<int32_t>
		constexpr auto MaterialSlotId = 0x70; // int32_t
		constexpr auto ScalarParameterName = 0x74; // FName
	}

	namespace n_ATgDevice_OwlStealth {
		constexpr auto c_bAlreadyConsumedStealthJuice = 0xaec; // char : 1
	}

	namespace n_AInstancedFoliageActor {
		constexpr auto FoliageMeshes = 0x280; // FMap_Mirror
		constexpr auto SelectedMesh = 0x2c8; // ObjectProperty
		constexpr auto InstancedStaticMeshComponents = 0x2d0; // TArray<ComponentProperty>
		constexpr auto GCExternalReferences = 0x2e0; // TArray<ObjectProperty>
		constexpr auto StreamingSerializationVersion = 0x2f0; // int32_t
		constexpr auto StreamingFilename = 0x2f4; // FString
		constexpr auto StreamGroups = 0x304; // FArray_Mirror
	}

	namespace n_USkelControlHandlebars {
		constexpr auto WheelRollAxis = 0x100; // EAxis
		constexpr auto HandlebarRotateAxis = 0x101; // EAxis
		constexpr auto WheelBoneName = 0x104; // FName
		constexpr auto bInvertRotation = 0x10c; // char : 1
		constexpr auto SteerWheelBoneIndex = 0x110; // int32_t
	}

	namespace n_ATgDeploy_ShieldFernando {
		constexpr auto m_nLargeShieldMeshID = 0x44c; // int32_t
		constexpr auto m_SmallMesh = 0x450; // ComponentProperty
		constexpr auto m_LargeMesh = 0x458; // ComponentProperty
		constexpr auto r_nToweringBarrierHealth = 0x460; // int32_t
		constexpr auto r_nAegisBonusHealth = 0x464; // int32_t
		constexpr auto m_bHasHeatTransfer = 0x468; // char : 1
		constexpr auto m_bHasRattle = 0x468; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_HasConsumable {
		constexpr auto ConsumableType = 0x98; // EConsumableType
	}

	namespace n_UTgAIBehaviorCondition_LanepusherHealthPercent {
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_ADoorMarker {
		constexpr auto MyDoor = 0x378; // ObjectProperty
		constexpr auto DoorType = 0x380; // EDoorType
		constexpr auto DoorTrigger = 0x384; // ObjectProperty
		constexpr auto bWaitUntilCompletelyOpened = 0x38c; // char : 1
		constexpr auto bInitiallyClosed = 0x38c; // char : 1
		constexpr auto bBlockedWhenClosed = 0x38c; // char : 1
		constexpr auto bDoorOpen = 0x38c; // char : 1
		constexpr auto bTempDisabledCollision = 0x38c; // char : 1
	}

	namespace n_USimpleSplineAudioComponent {
		constexpr auto bAttenuateWithLPF = 0x2e4; // char : 1
		constexpr auto LPFRadiusMin = 0x2e8; // float
		constexpr auto LPFRadiusMax = 0x2ec; // float
		constexpr auto dBAttenuationAtMax = 0x2f0; // float
		constexpr auto FlattenAttenuationRadius = 0x2f4; // float
		constexpr auto DistanceAlgorithm = 0x2f8; // SoundDistanceModel
		constexpr auto RadiusMin = 0x2fc; // float
		constexpr auto RadiusMax = 0x300; // float
		constexpr auto SoundSlots = 0x304; // TArray<FSplineSoundSlot>
		constexpr auto NotifyBufferFinishedHook = 0x314; // ObjectProperty
	}

	namespace n_UUIData_Goal {
		constexpr auto m_dwActivityId = 0x60; // Fdword
		constexpr auto m_dwGoalGroupId = 0x64; // Fdword
		constexpr auto m_dwGoalId = 0x68; // Fdword
	}

	namespace n_UApexComponentBase {
		constexpr auto ComponentBaseResources = 0x294; // FPointer
		constexpr auto ReleaseResourcesFence = 0x29c; // FRenderCommandFence_Mirror
		constexpr auto Asset = 0x2a0; // ObjectProperty
		constexpr auto WireframeColor = 0x2a8; // FColor
		constexpr auto bAssetChanged = 0x2ac; // char : 1
	}

	namespace n_UTgSkelCon_SkinGate {
		constexpr auto DefaultChild = 0xd0; // FSkelControlSkinGateChild
		constexpr auto ChildControls = 0xe4; // TArray<FSkelControlSkinGateChild>
	}

	namespace n_UShadowMap2D {
		constexpr auto Texture = 0x60; // ObjectProperty
		constexpr auto CoordinateScale = 0x68; // FVector2D
		constexpr auto CoordinateBias = 0x70; // FVector2D
		constexpr auto LightGuid = 0x78; // FGuid
		constexpr auto bIsShadowFactorTexture = 0x88; // char : 1
		constexpr auto Component = 0x8c; // ComponentProperty
		constexpr auto InstanceIndex = 0x94; // int32_t
	}

	namespace n_UTgAnimBlendByRealmCharacter {
		constexpr auto m_WeaponMeshActor = 0x168; // ObjectProperty
		constexpr auto m_SubNodeDeviceSubtype = 0x170; // DeviceSubtype
		constexpr auto m_ChildParams = 0x174; // FChildAnimParameters [0x27]
		constexpr auto m_nChildAnimStack = 0x9fc; // TArray<char>
		constexpr auto m_nCustomRetrieveIndex = 0xa0c; // int32_t
		constexpr auto m_bBlendToIdleOnInterruptInspect = 0xa10; // char : 1
	}

	namespace n_ATgMissionListVolume {
		constexpr auto m_nMapObjectId = 0x2bc; // int32_t
		constexpr auto s_nQueueTableId = 0x2c0; // int32_t
		constexpr auto s_nQueueTableMsgId = 0x2c4; // int32_t
		constexpr auto m_Teleporter = 0x2c8; // ObjectProperty
	}

	namespace n_UModelComponent {
		constexpr auto Model = 0x24c; // ObjectProperty
		constexpr auto ZoneIndex = 0x254; // int32_t
		constexpr auto ComponentIndex = 0x258; // int32_t
		constexpr auto Nodes = 0x25c; // TArray<FPointer>
		constexpr auto Elements = 0x26c; // TArray<FPointer>
	}

	namespace n_UUIInteraction {
		constexpr auto VfTable_FExec = 0xb0; // FPointer
		constexpr auto VfTable_FGlobalDataStoreClientManager = 0xb8; // FPointer
		constexpr auto VfTable_FCallbackEventDevice = 0xc0; // FPointer
		constexpr auto UIManager = 0xc8; // ObjectProperty
		constexpr auto UIManagerClass = 0xd0; // UUIManager*
		constexpr auto SceneClientClass = 0xd8; // UGameUISceneClient*
		constexpr auto SceneClient = 0xe0; // ObjectProperty
		constexpr auto SupportedDoubleClickKeys = 0xe8; // TArray<FName>
		constexpr auto DataStoreManager = 0xf8; // ObjectProperty
		constexpr auto bProcessInput = 0x100; // char : 1
		constexpr auto UIJoystickDeadZone = 0x104; // float
		constexpr auto UIAxisMultiplier = 0x108; // float
		constexpr auto AxisRepeatDelay = 0x10c; // float
		constexpr auto MouseButtonRepeatDelay = 0x110; // float
		constexpr auto DoubleClickTriggerSeconds = 0x114; // float
		constexpr auto DoubleClickPixelTolerance = 0x118; // int32_t
		constexpr auto MouseButtonRepeatInfo = 0x11c; // FUIKeyRepeatData
		constexpr auto ConfiguredAxisEmulationDefinitions = 0x12c; // TArray<FUIAxisEmulationDefinition>
		constexpr auto AxisEmulationDefinitions = 0x13c; // TMap<None, None>
		constexpr auto AxisInputEmulation = 0x184; // FUIAxisEmulationData [0x18]
	}

	namespace n_USeqAct_ActorFactory {
		constexpr auto bEnabled = 0x120; // char : 1
		constexpr auto bIsSpawning = 0x120; // char : 1
		constexpr auto bCheckSpawnCollision = 0x120; // char : 1
		constexpr auto Factory = 0x124; // ObjectProperty
		constexpr auto PointSelection = 0x12c; // EPointSelection
		constexpr auto SpawnPoints = 0x130; // TArray<ObjectProperty>
		constexpr auto SpawnLocations = 0x140; // TArray<FVector>
		constexpr auto SpawnOrientations = 0x150; // TArray<FVector>
		constexpr auto SpawnCount = 0x160; // int32_t
		constexpr auto SpawnDelay = 0x164; // float
		constexpr auto LastSpawnIdx = 0x168; // int32_t
		constexpr auto CurrentSpawnIdx = 0x16c; // int32_t
		constexpr auto SpawnedCount = 0x170; // int32_t
		constexpr auto RemainingDelay = 0x174; // float
	}

	namespace n_USeqAct_SetApexClothingParam {
		constexpr auto bEnableApexClothingSimulation = 0x108; // char : 1
	}

	namespace n_APhysicsVolume {
		constexpr auto ZoneVelocity = 0x2bc; // FVector
		constexpr auto bVelocityAffectsWalking = 0x2c8; // char : 1
		constexpr auto bPainCausing = 0x2c8; // char : 1
		constexpr auto bAIShouldIgnorePain = 0x2c8; // char : 1
		constexpr auto bEntryPain = 0x2c8; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x2c8; // char : 1
		constexpr auto bDestructive = 0x2c8; // char : 1
		constexpr auto bNoInventory = 0x2c8; // char : 1
		constexpr auto bMoveProjectiles = 0x2c8; // char : 1
		constexpr auto bBounceVelocity = 0x2c8; // char : 0
		constexpr auto bNeutralZone = 0x2c8; // char : 0
		constexpr auto bCrowdAgentsPlayDeathAnim = 0x2c8; // char : 0
		constexpr auto bPhysicsOnContact = 0x2c8; // char : 0
		constexpr auto bWaterVolume = 0x2c8; // char : 0
		constexpr auto m_bIsElevating = 0x2c8; // char : 0
		constexpr auto m_bClampPawnVelocity = 0x2c8; // char : 0
		constexpr auto GroundFriction = 0x2cc; // float
		constexpr auto TerminalVelocity = 0x2d0; // float
		constexpr auto DamagePerSec = 0x2d4; // float
		constexpr auto DamageType = 0x2d8; // UDamageType*
		constexpr auto Priority = 0x2e0; // int32_t
		constexpr auto FluidFriction = 0x2e4; // float
		constexpr auto PainInterval = 0x2e8; // float
		constexpr auto RigidBodyDamping = 0x2ec; // float
		constexpr auto MaxDampingForce = 0x2f0; // float
		constexpr auto PainTimer = 0x2f4; // ObjectProperty
		constexpr auto DamageInstigator = 0x2fc; // ObjectProperty
		constexpr auto NextPhysicsVolume = 0x304; // ObjectProperty
		constexpr auto m_fClampedPawnVelocity = 0x30c; // FVector2D
	}

	namespace n_UTgDeviceForm_WeaponSwap {
		constexpr auto m_PistolScale1p = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_PistolScale3p = 0x2cc; // TArray<ObjectProperty>
		constexpr auto m_RifleScale1p = 0x2dc; // TArray<ObjectProperty>
		constexpr auto m_RifleScale3p = 0x2ec; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_PlayCameraAnim {
		constexpr auto AnimToPlay = 0x108; // ObjectProperty
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto BlendOutTime = 0x114; // float
		constexpr auto Rate = 0x118; // float
		constexpr auto IntensityScale = 0x11c; // float
	}

	namespace n_UAnimNotify_Kismet {
		constexpr auto NotifyName = 0x68; // FName
	}

	namespace n_UMaterialExpressionTextureSampleParameterNormal {
		constexpr auto InstanceOverride = 0x140; // FPointer
	}

	namespace n_UTgAnimBlendByHeadSkin {
		constexpr auto m_SkinMap = 0x168; // TArray<FHeadSkinChildInfo>
	}

	namespace n_UTgInventoryObject_Listen_OutOfCombat {
		constexpr auto m_bEffectIsApplied = 0xc8; // char : 1
	}

	namespace n_APComRepInfo_Game {
		constexpr auto m_MusicThemePlayer = 0x2e8; // ObjectProperty
		constexpr auto m_MusicThemePlayerClass = 0x2f0; // UPComMusicThemePlayer*
		constexpr auto m_MusicThemePlayerClassName = 0x2f8; // FString
	}

	namespace n_UUIDataChampion {
		constexpr auto m_nBotId = 0x70; // int32_t
		constexpr auto m_nLevel = 0x74; // int32_t
		constexpr auto m_nArchetype = 0x78; // int32_t
		constexpr auto m_sName = 0x7c; // FString
		constexpr auto m_sDesc = 0x8c; // FString
		constexpr auto m_sLore = 0x9c; // FString
		constexpr auto m_sDamage = 0xac; // FString
		constexpr auto m_sSpecial = 0xbc; // FString
		constexpr auto m_nItemsTotal = 0xcc; // int32_t
		constexpr auto m_nItemsOwned = 0xd0; // int32_t
		constexpr auto m_fItemsPercent = 0xd4; // float
		constexpr auto m_nXPProgress = 0xd8; // int32_t
		constexpr auto m_nXPRequired = 0xdc; // int32_t
		constexpr auto m_fXPPercent = 0xe0; // float
		constexpr auto m_nActiveSet = 0xe4; // int32_t
		constexpr auto m_nActiveTalent = 0xe8; // int32_t
		constexpr auto m_nActiveDeck = 0xec; // int32_t
		constexpr auto m_nActiveSkin = 0xf0; // int32_t
		constexpr auto m_nActiveHead = 0xf4; // int32_t
		constexpr auto m_nActiveEmote = 0xf8; // int32_t
		constexpr auto m_nActiveVoice = 0xfc; // int32_t
		constexpr auto m_nActiveWeapon = 0x100; // int32_t
		constexpr auto m_nActiveSpray = 0x104; // int32_t
		constexpr auto m_nActiveMVPPose = 0x108; // int32_t
		constexpr auto m_ClassItem = 0x10c; // ObjectProperty
		constexpr auto m_CharacterRotationLTI = 0x114; // ObjectProperty
		constexpr auto m_Sets = 0x11c; // TArray<ObjectProperty>
		constexpr auto m_Cards = 0x12c; // TArray<ObjectProperty>
		constexpr auto m_Heads = 0x13c; // TArray<ObjectProperty>
		constexpr auto m_Skins = 0x14c; // TArray<ObjectProperty>
		constexpr auto m_Skills = 0x15c; // TArray<ObjectProperty>
		constexpr auto m_Weapons = 0x16c; // TArray<ObjectProperty>
		constexpr auto m_Emotes = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_Sprays = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_MVPPoses = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_Voices = 0x1ac; // TArray<ObjectProperty>
		constexpr auto m_Decks = 0x1bc; // TArray<FUIDataDeck>
	}

	namespace n_ALensFlareSource {
		constexpr auto LensFlareComp = 0x280; // ComponentProperty
		constexpr auto bCurrentlyActive = 0x288; // char : 1
	}

	namespace n_UUIComponent_Skill {
		constexpr auto m_mcKey = 0x120; // ObjectProperty
		constexpr auto m_mcBase = 0x128; // ObjectProperty
		constexpr auto m_mcIcon = 0x130; // ObjectProperty
		constexpr auto m_mcTitle = 0x138; // ObjectProperty
		constexpr auto m_mcDamage = 0x140; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x148; // ObjectProperty
		constexpr auto m_mcCooldown = 0x150; // ObjectProperty
		constexpr auto m_mcCooldownTF = 0x158; // ObjectProperty
	}

	namespace n_UUIHudMap {
		constexpr auto m_nDepth = 0x244; // int32_t
		constexpr auto m_bScroll = 0x248; // char : 1
		constexpr auto m_bSnapFog = 0x248; // char : 1
		constexpr auto m_bInitMap = 0x248; // char : 1
		constexpr auto m_bHovering = 0x248; // char : 1
		constexpr auto m_bDirection = 0x248; // char : 1
		constexpr auto m_bWantsToPlaceWaypoint = 0x248; // char : 1
		constexpr auto m_bWantsToRemoveWaypoint = 0x248; // char : 1
		constexpr auto m_fSize = 0x24c; // float
		constexpr auto m_fRadius = 0x250; // float
		constexpr auto m_fCursorX = 0x254; // float
		constexpr auto m_fCursorY = 0x258; // float
		constexpr auto m_fOffsetX = 0x25c; // float
		constexpr auto m_fOffsetY = 0x260; // float
		constexpr auto m_fPulseTimer = 0x264; // float
		constexpr auto m_fCursorRate = 0x268; // float
		constexpr auto m_fChestPulseIn = 0x26c; // float
		constexpr auto m_fChestPulseIOut = 0x270; // float
		constexpr auto m_fDirectionTimer = 0x274; // float
		constexpr auto m_fCursorSafeBound = 0x278; // float
		constexpr auto m_fCursorPanBound = 0x27c; // float
		constexpr auto m_fGamepadCursorX = 0x280; // float
		constexpr auto m_fGamepadCursorY = 0x284; // float
		constexpr auto m_fConvergeRadius = 0x288; // float
		constexpr auto m_fConvergeTarget = 0x28c; // float
		constexpr auto m_fConvergeTargetX = 0x290; // float
		constexpr auto m_fConvergeTargetY = 0x294; // float
		constexpr auto m_vBoundsCenter = 0x298; // FVector
		constexpr auto m_vBoundsExtents = 0x2a4; // FVector
		constexpr auto m_pRightStickYAxis = 0x2b0; // ObjectProperty
		constexpr auto m_pRightStickXAxis = 0x2b8; // ObjectProperty
		constexpr auto m_Forges = 0x2c0; // TArray<FUIPING_DATA>
		constexpr auto m_Chests = 0x2d0; // TArray<FUIPING_DATA>
		constexpr auto m_Catapults = 0x2e0; // TArray<FUIPING_DATA>
		constexpr auto m_NamedAreas = 0x2f0; // TArray<FUIPING_DATA>
		constexpr auto m_mcMap = 0x300; // ObjectProperty
		constexpr auto m_mcMapFog = 0x308; // ObjectProperty
		constexpr auto m_mcMapMask = 0x310; // ObjectProperty
		constexpr auto m_mcMapRect = 0x318; // ObjectProperty
		constexpr auto m_mcMapMaskRect = 0x320; // ObjectProperty
		constexpr auto m_mcMapZoom = 0x328; // ObjectProperty
		constexpr auto m_mcMapGroup = 0x330; // ObjectProperty
		constexpr auto m_mcMapScroll = 0x338; // ObjectProperty
		constexpr auto m_mcMapImage = 0x340; // ObjectProperty [0x3]
		constexpr auto m_mcMapRegion = 0x358; // ObjectProperty [0x5]
		constexpr auto m_mcMapInner = 0x380; // ObjectProperty
		constexpr auto m_mcMapOuter = 0x388; // ObjectProperty
		constexpr auto m_mcMapCursor = 0x390; // ObjectProperty
		constexpr auto m_mcMapForges = 0x398; // ObjectProperty
		constexpr auto m_mcMapZeppelinLine = 0x3a0; // ObjectProperty
		constexpr auto m_mcMapZeppelinA = 0x3a8; // ObjectProperty
		constexpr auto m_mcMapZeppelinB = 0x3b0; // ObjectProperty
		constexpr auto m_mcMapNamedAreas = 0x3b8; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirection = 0x3c0; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirectionAnim = 0x3c8; // ObjectProperty
		constexpr auto m_mcMapScrimmageDirectionLine = 0x3d0; // ObjectProperty
		constexpr auto m_mcMapCursorLineX = 0x3d8; // ObjectProperty
		constexpr auto m_mcMapCursorLineY = 0x3e0; // ObjectProperty
		constexpr auto m_mcMapDirection = 0x3e8; // ObjectProperty
		constexpr auto m_mcMapDirectionAnim = 0x3f0; // ObjectProperty
		constexpr auto m_mcMapDirectionLine = 0x3f8; // ObjectProperty
		constexpr auto m_mcLegend = 0x400; // ObjectProperty
		constexpr auto m_mcLocalPulse = 0x408; // ObjectProperty
		constexpr auto m_mcLocalPlayer = 0x410; // ObjectProperty
		constexpr auto m_mcCoordinates = 0x418; // ObjectProperty
		constexpr auto m_mcWaypoint = 0x420; // ObjectProperty [0x6]
		constexpr auto m_mcCoordXA = 0x450; // ObjectProperty [0x8]
		constexpr auto m_mcCoordXB = 0x490; // ObjectProperty [0x8]
		constexpr auto m_mcCoordYA = 0x4d0; // ObjectProperty [0x8]
		constexpr auto m_mcCoordYB = 0x510; // ObjectProperty [0x8]
		constexpr auto m_mcDailyQuests = 0x550; // ObjectProperty
		constexpr auto m_mcQuestEntry = 0x558; // ObjectProperty [0x3]
		constexpr auto m_mcQuestMask = 0x570; // ObjectProperty [0x3]
		constexpr auto m_mcQuestTip = 0x588; // ObjectProperty [0x3]
		constexpr auto m_mcQuestComplete = 0x5a0; // ObjectProperty [0x3]
		constexpr auto m_mcQuestFillBar = 0x5b8; // ObjectProperty [0x3]
		constexpr auto m_mcQuestEntryBG = 0x5d0; // ObjectProperty [0x3]
		constexpr auto m_mcQuestRewardText = 0x5e8; // ObjectProperty
		constexpr auto m_mcQuestReward1 = 0x5f0; // ObjectProperty
		constexpr auto m_mcTeam = 0x5f8; // ObjectProperty [0x6]
		constexpr auto m_mcAlliance = 0x628; // ObjectProperty [0x28]
		constexpr auto m_mcPlayer = 0x768; // ObjectProperty [0x6]
		constexpr auto m_mcPlayerMute = 0x798; // ObjectProperty [0x6]
		constexpr auto m_mcPlayerVoice = 0x7c8; // ObjectProperty [0x6]
	}

	namespace n_USeqVar_RandomFloat {
		constexpr auto Min = 0xa4; // float
		constexpr auto Max = 0xa8; // float
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x60; // ObjectProperty
		constexpr auto Surfaces = 0x68; // TArray<int32_t>
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x68; // BeamModifierType
		constexpr auto PositionOptions = 0x6c; // FBeamModifierOptions
		constexpr auto Position = 0x70; // FRawDistributionVector
		constexpr auto TangentOptions = 0x94; // FBeamModifierOptions
		constexpr auto Tangent = 0x98; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xbc; // char : 1
		constexpr auto StrengthOptions = 0xc0; // FBeamModifierOptions
		constexpr auto Strength = 0xc4; // FRawDistributionFloat
	}

	namespace n_ATgInventoryManager {
		constexpr auto r_ItemCount = 0x2ac; // int32_t
		constexpr auto m_nPreviousDeviceInstanceId = 0x2b0; // int32_t
		constexpr auto m_bNeedsInvUpdate = 0x2b4; // char : 1
		constexpr auto m_PreviousWeapon = 0x2b8; // ObjectProperty
		constexpr auto m_InventoryMap = 0x2c0; // TMap<None, None>
		constexpr auto s_ReplicateMap = 0x308; // TMap<None, None>
		constexpr auto s_DeletionMap = 0x350; // TMap<None, None>
		constexpr auto m_PostAutoFireDevice = 0x398; // ObjectProperty
		constexpr auto m_pPendingDeletedDevices = 0x3a0; // TArray<ObjectProperty>
	}

	namespace n_UAppNotificationsBase {
		constexpr auto AppLaunchNotification = 0x80; // FLaunchNotificationInfo
		constexpr auto __OnReceivedLocalNotification__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnReceivedRemoteNotification__Delegate = 0xbc; // DelegateProperty
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevels = 0x2bc; // TArray<ObjectProperty>
		constexpr auto bEditorPreVisOnly = 0x2cc; // char : 1
		constexpr auto bDisabled = 0x2cc; // char : 1
		constexpr auto bTestDistanceToVolume = 0x2cc; // char : 1
		constexpr auto StreamingUsage = 0x2d0; // EStreamingVolumeUsage
		constexpr auto Usage = 0x2d1; // EStreamingVolumeUsage
		constexpr auto TestVolumeDistance = 0x2d4; // float
	}

	namespace n_UImageReflectionComponent {
		constexpr auto ReflectionTexture = 0x88; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsActiveReady {
		constexpr auto ActiveType = 0x98; // EActiveType
	}

	namespace n_UAnimNotify_Script {
		constexpr auto NotifyName = 0x68; // FName
		constexpr auto NotifyTickName = 0x70; // FName
		constexpr auto NotifyEndName = 0x78; // FName
	}

	namespace n_UUIData_StreamSettings {
		constexpr auto m_bIsStreaming = 0x60; // char : 1
		constexpr auto m_Settings = 0x64; // FPComOpenBroadcasterSettings
	}

	namespace n_UUIComponent_DailyQuest {
		constexpr auto m_mcTF = 0x13c; // ObjectProperty
		constexpr auto m_mcComplete = 0x144; // ObjectProperty
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UUIDataProvider_PlayerAchievements {
		constexpr auto Achievements = 0x74; // TArray<FAchievementDetails>
	}

	namespace n_USeqAct_ControlGameMovie {
		constexpr auto MovieName = 0x120; // FString
		constexpr auto StartOfRenderingMovieFrame = 0x130; // int32_t
		constexpr auto EndOfRenderingMovieFrame = 0x134; // int32_t
	}

	namespace n_UGameCrowd_ListOfAgents {
		constexpr auto ListOfAgents = 0x60; // TArray<FAgentArchetypeInfo>
	}

	namespace n_UUIPatchNotes {
		constexpr auto m_mcHeader = 0x244; // ObjectProperty
		constexpr auto m_mcHeaderTitle = 0x24c; // ObjectProperty
		constexpr auto m_mcPatchNotes = 0x254; // ObjectProperty
		constexpr auto m_mcPatchNotesVersion = 0x25c; // ObjectProperty
		constexpr auto m_mcPatchNotesButton = 0x264; // ObjectProperty
		constexpr auto m_mcPatchNotesButtonTF = 0x26c; // ObjectProperty
		constexpr auto m_mcPatchNotesButtonKey = 0x274; // ObjectProperty
		constexpr auto m_mcPatchNotesButtonHighlight = 0x27c; // ObjectProperty
		constexpr auto m_mcBanner = 0x284; // ObjectProperty
		constexpr auto m_mcBannerColumn = 0x28c; // ObjectProperty [0x3]
		constexpr auto m_mcBannerColumnTitle = 0x2a4; // ObjectProperty [0x3]
		constexpr auto m_mcBannerColumnDesc = 0x2bc; // ObjectProperty [0x3]
		constexpr auto m_mcIcon = 0x2d4; // ObjectProperty
		constexpr auto m_mcIconTexture = 0x2dc; // ObjectProperty
		constexpr auto m_mcBlocker = 0x2e4; // ObjectProperty
		constexpr auto m_pOpenPatchNotesGroup = 0x2ec; // ObjectProperty
		constexpr auto m_bShow = 0x2f4; // char : 1
		constexpr auto m_sExternalURL = 0x2f8; // FString
	}

	namespace n_ATgDevice_Charge {
		constexpr auto m_eChargeState = 0xaf8; // EChargeState
		constexpr auto m_bStopOnHitType = 0xaf9; // ChargeStopOnHitType
		constexpr auto m_ChargeTimingType = 0xafa; // ChargeFiringType
		constexpr auto m_bUsePhysFlying = 0xafc; // char : 1
		constexpr auto m_bUseDamageRadiusForHitProxy = 0xafc; // char : 1
		constexpr auto m_bIgnoreHumanoids = 0xafc; // char : 1
		constexpr auto m_bHitOnce = 0xafc; // char : 1
		constexpr auto m_bApplyHitOnTouch = 0xafc; // char : 1
		constexpr auto m_bApplyHitSpecialOnTouch = 0xafc; // char : 1
		constexpr auto m_bIgnoreRange = 0xafc; // char : 1
		constexpr auto m_bCharging = 0xafc; // char : 1
		constexpr auto m_bStopOnAttachedForcefield = 0xafc; // char : 0
		constexpr auto m_bInterruptDeviceIfChargeEnds = 0xafc; // char : 0
		constexpr auto m_bUseDirectHitSpecial = 0xafc; // char : 0
		constexpr auto m_bChargeBackward = 0xafc; // char : 0
		constexpr auto m_bCanLeftClickCancel = 0xafc; // char : 0
		constexpr auto m_bIgnoreMovementCorrection = 0xafc; // char : 0
		constexpr auto m_HitProxy = 0xb00; // ObjectProperty
		constexpr auto m_vHitProxyRelativeLocation = 0xb08; // FVector
		constexpr auto m_vHitProxySizeOffset = 0xb14; // FVector
		constexpr auto s_fServerValidationSizeMultiplier = 0xb20; // float
		constexpr auto m_rLastChargeDirection = 0xb24; // FRotator
		constexpr auto s_AppliedList = 0xb30; // TArray<ObjectProperty>
		constexpr auto s_HitActors = 0xb40; // TArray<ObjectProperty>
		constexpr auto s_TouchData = 0xb50; // TArray<FChargeTouchData>
	}

	namespace n_APawn {
		constexpr auto VfTable_IInterface_Speaker = 0x280; // FPointer
		constexpr auto MaxStepHeight = 0x288; // float
		constexpr auto MaxJumpHeight = 0x28c; // float
		constexpr auto WalkableFloorZ = 0x290; // float
		constexpr auto LedgeCheckThreshold = 0x294; // float
		constexpr auto PartialLedgeMoveDir = 0x298; // FVector
		constexpr auto Controller = 0x2a4; // ObjectProperty
		constexpr auto NextPawn = 0x2ac; // ObjectProperty
		constexpr auto NetRelevancyTime = 0x2b4; // float
		constexpr auto LastRealViewer = 0x2b8; // ObjectProperty
		constexpr auto LastViewer = 0x2c0; // ObjectProperty
		constexpr auto bScriptTickSpecial = 0x2c8; // char : 1
		constexpr auto bUpAndOut = 0x2c8; // char : 1
		constexpr auto bIsWalking = 0x2c8; // char : 1
		constexpr auto bWantsToCrouch = 0x2c8; // char : 1
		constexpr auto bIsCrouched = 0x2c8; // char : 1
		constexpr auto bTryToUncrouch = 0x2c8; // char : 1
		constexpr auto bCanCrouch = 0x2c8; // char : 1
		constexpr auto bCrawler = 0x2c8; // char : 1
		constexpr auto bReducedSpeed = 0x2c8; // char : 0
		constexpr auto bJumpCapable = 0x2c8; // char : 0
		constexpr auto bCanJump = 0x2c8; // char : 0
		constexpr auto bCanWalk = 0x2c8; // char : 0
		constexpr auto bCanSwim = 0x2c8; // char : 0
		constexpr auto bCanFly = 0x2c8; // char : 0
		constexpr auto bCanClimbLadders = 0x2c8; // char : 0
		constexpr auto bCanStrafe = 0x2c8; // char : 0
		constexpr auto bAvoidLedges = 0x2c8; // char : 0
		constexpr auto bStopAtLedges = 0x2c8; // char : 0
		constexpr auto bAllowLedgeOverhang = 0x2c8; // char : 0
		constexpr auto bPartiallyOverLedge = 0x2c8; // char : 0
		constexpr auto bSimulateGravity = 0x2c8; // char : 0
		constexpr auto bIgnoreForces = 0x2c8; // char : 0
		constexpr auto bCanWalkOffLedges = 0x2c8; // char : 0
		constexpr auto bCanBeBaseForPawns = 0x2c8; // char : 0
		constexpr auto bSimGravityDisabled = 0x2c8; // char : 0
		constexpr auto bDirectHitWall = 0x2c8; // char : 0
		constexpr auto bPushesRigidBodies = 0x2c8; // char : 0
		constexpr auto bForceFloorCheck = 0x2c8; // char : 0
		constexpr auto bForceKeepAnchor = 0x2c8; // char : 0
		constexpr auto bCanMantle = 0x2c8; // char : 0
		constexpr auto bCanClimbUp = 0x2c8; // char : 0
		constexpr auto bCanClimbCeilings = 0x2c8; // char : 0
		constexpr auto bCanSwatTurn = 0x2cc; // char : 1
		constexpr auto bCanLeap = 0x2cc; // char : 1
		constexpr auto bCanCoverSlip = 0x2cc; // char : 1
		constexpr auto bDisplayPathErrors = 0x2cc; // char : 1
		constexpr auto bCanPickupInventory = 0x2cc; // char : 1
		constexpr auto bAmbientCreature = 0x2cc; // char : 1
		constexpr auto bLOSHearing = 0x2cc; // char : 1
		constexpr auto bMuffledHearing = 0x2cc; // char : 1
		constexpr auto bDontPossess = 0x2cc; // char : 0
		constexpr auto bRollToDesired = 0x2cc; // char : 0
		constexpr auto bStationary = 0x2cc; // char : 0
		constexpr auto bCachedRelevant = 0x2cc; // char : 0
		constexpr auto bNoWeaponFiring = 0x2cc; // char : 0
		constexpr auto bModifyReachSpecCost = 0x2cc; // char : 0
		constexpr auto bModifyNavPointDest = 0x2cc; // char : 0
		constexpr auto bPathfindsAsVehicle = 0x2cc; // char : 0
		constexpr auto bPrevBypassSimulatedClientPhysics = 0x2cc; // char : 0
		constexpr auto bRunPhysicsWithNoController = 0x2cc; // char : 0
		constexpr auto bForceMaxAccel = 0x2cc; // char : 0
		constexpr auto bLimitFallAccel = 0x2cc; // char : 0
		constexpr auto bReplicateHealthToAll = 0x2cc; // char : 0
		constexpr auto bForceRMVelocity = 0x2cc; // char : 0
		constexpr auto bForceRegularVelocity = 0x2cc; // char : 0
		constexpr auto bPlayedDeath = 0x2cc; // char : 0
		constexpr auto bDesiredRotationSet = 0x2cc; // char : 0
		constexpr auto bLockDesiredRotation = 0x2cc; // char : 0
		constexpr auto bUnlockWhenReached = 0x2cc; // char : 0
		constexpr auto m_bPhysVolumesOnlyAffectDownwardVelocities = 0x2cc; // char : 0
		constexpr auto m_bIsOnNonBaseableSurface = 0x2cc; // char : 0
		constexpr auto bNeedsBaseTickedFirst = 0x2cc; // char : 0
		constexpr auto bUsedByMatinee = 0x2cc; // char : 0
		constexpr auto bRootMotionFromInterpCurve = 0x2cc; // char : 0
		constexpr auto bDebugShowCameraLocation = 0x2d0; // char : 1
		constexpr auto bFastAttachedMove = 0x2d0; // char : 1
		constexpr auto WalkingPhysics = 0x2d4; // EPhysics
		constexpr auto PathSearchType = 0x2d5; // EPathSearchType
		constexpr auto RemoteViewPitch = 0x2d6; // char
		constexpr auto FlashCount = 0x2d7; // char
		constexpr auto FiringMode = 0x2d8; // char
		constexpr auto c_LastReceivedPhysics = 0x2d9; // EPhysics
		constexpr auto WalkingPhysicsMoveFlags = 0x2dc; // int32_t
		constexpr auto UncrouchTime = 0x2e0; // float
		constexpr auto CrouchHeight = 0x2e4; // float
		constexpr auto CrouchRadius = 0x2e8; // float
		constexpr auto FullHeight = 0x2ec; // int32_t
		constexpr auto NonPreferredVehiclePathMultiplier = 0x2f0; // float
		constexpr auto PathConstraintList = 0x2f4; // ObjectProperty
		constexpr auto PathGoalList = 0x2fc; // ObjectProperty
		constexpr auto DesiredSpeed = 0x304; // float
		constexpr auto MaxDesiredSpeed = 0x308; // float
		constexpr auto HearingThreshold = 0x30c; // float
		constexpr auto Alertness = 0x310; // float
		constexpr auto SightRadius = 0x314; // float
		constexpr auto PeripheralVision = 0x318; // float
		constexpr auto AvgPhysicsTime = 0x31c; // float
		constexpr auto Mass = 0x320; // float
		constexpr auto Buoyancy = 0x324; // float
		constexpr auto MeleeRange = 0x328; // float
		constexpr auto Anchor = 0x32c; // ObjectProperty
		constexpr auto AnchorItem = 0x334; // int32_t
		constexpr auto LastAnchor = 0x338; // ObjectProperty
		constexpr auto FindAnchorFailedTime = 0x340; // float
		constexpr auto LastValidAnchorTime = 0x344; // float
		constexpr auto DestinationOffset = 0x348; // float
		constexpr auto NextPathRadius = 0x34c; // float
		constexpr auto SerpentineDir = 0x350; // FVector
		constexpr auto SerpentineDist = 0x35c; // float
		constexpr auto SerpentineTime = 0x360; // float
		constexpr auto SpawnTime = 0x364; // float
		constexpr auto MaxPitchLimit = 0x368; // int32_t
		constexpr auto GroundSpeed = 0x36c; // float
		constexpr auto WaterSpeed = 0x370; // float
		constexpr auto AirSpeed = 0x374; // float
		constexpr auto LadderSpeed = 0x378; // float
		constexpr auto AccelRate = 0x37c; // float
		constexpr auto JumpZ = 0x380; // float
		constexpr auto OutofWaterZ = 0x384; // float
		constexpr auto MaxOutOfWaterStepHeight = 0x388; // float
		constexpr auto AirControl = 0x38c; // float
		constexpr auto WalkingPct = 0x390; // float
		constexpr auto MovementSpeedModifier = 0x394; // float
		constexpr auto CrouchedPct = 0x398; // float
		constexpr auto MaxFallSpeed = 0x39c; // float
		constexpr auto AIMaxFallSpeedFactor = 0x3a0; // float
		constexpr auto BaseEyeHeight = 0x3a4; // float
		constexpr auto EyeHeight = 0x3a8; // float
		constexpr auto Floor = 0x3ac; // FVector
		constexpr auto SplashTime = 0x3b8; // float
		constexpr auto HeadVolume = 0x3bc; // ObjectProperty
		constexpr auto Health = 0x3c4; // int32_t
		constexpr auto HealthMax = 0x3c8; // int32_t
		constexpr auto BreathTime = 0x3cc; // float
		constexpr auto UnderWaterTime = 0x3d0; // float
		constexpr auto LastPainTime = 0x3d4; // float
		constexpr auto KismetDeathDelayTime = 0x3d8; // float
		constexpr auto RMVelocity = 0x3dc; // FVector
		constexpr auto noise1spot = 0x3e8; // FVector
		constexpr auto noise1time = 0x3f4; // float
		constexpr auto noise1other = 0x3f8; // ObjectProperty
		constexpr auto noise1loudness = 0x400; // float
		constexpr auto noise2spot = 0x404; // FVector
		constexpr auto noise2time = 0x410; // float
		constexpr auto noise2other = 0x414; // ObjectProperty
		constexpr auto noise2loudness = 0x41c; // float
		constexpr auto SoundDampening = 0x420; // float
		constexpr auto DamageScaling = 0x424; // float
		constexpr auto MenuName = 0x428; // FString
		constexpr auto ControllerClass = 0x438; // AAIController*
		constexpr auto PlayerReplicationInfo = 0x440; // ObjectProperty
		constexpr auto OnLadder = 0x448; // ObjectProperty
		constexpr auto LandMovementState = 0x450; // FName
		constexpr auto WaterMovementState = 0x458; // FName
		constexpr auto LastStartSpot = 0x460; // ObjectProperty
		constexpr auto LastStartTime = 0x468; // float
		constexpr auto TakeHitLocation = 0x46c; // FVector
		constexpr auto HitDamageType = 0x478; // UDamageType*
		constexpr auto TearOffMomentum = 0x480; // FVector
		constexpr auto Mesh = 0x48c; // ComponentProperty
		constexpr auto CylinderComponent = 0x494; // ComponentProperty
		constexpr auto RBPushRadius = 0x49c; // float
		constexpr auto RBPushStrength = 0x4a0; // float
		constexpr auto DrivenVehicle = 0x4a4; // ObjectProperty
		constexpr auto AlwaysRelevantDistanceSquared = 0x4ac; // float
		constexpr auto VehicleCheckRadius = 0x4b0; // float
		constexpr auto LastHitBy = 0x4b4; // ObjectProperty
		constexpr auto ViewPitchMin = 0x4bc; // float
		constexpr auto ViewPitchMax = 0x4c0; // float
		constexpr auto AllowedYawError = 0x4c4; // int32_t
		constexpr auto DesiredRotation = 0x4c8; // FRotator
		constexpr auto InventoryManagerClass = 0x4d4; // AInventoryManager*
		constexpr auto InvManager = 0x4dc; // ObjectProperty
		constexpr auto Weapon = 0x4e4; // ObjectProperty
		constexpr auto FlashLocation = 0x4ec; // FVector
		constexpr auto LastFiringFlashLocation = 0x4f8; // FVector
		constexpr auto ShotCount = 0x504; // int32_t
		constexpr auto PreRagdollCollisionComponent = 0x508; // ComponentProperty
		constexpr auto PhysicsPushBody = 0x510; // ObjectProperty
		constexpr auto FailedLandingCount = 0x518; // int32_t
		constexpr auto SlotNodes = 0x51c; // TArray<ObjectProperty>
		constexpr auto InterpGroupList = 0x52c; // TArray<ObjectProperty>
		constexpr auto FacialAudioComp = 0x53c; // ComponentProperty
		constexpr auto MIC_PawnMat = 0x544; // ObjectProperty
		constexpr auto MIC_PawnHair = 0x54c; // ObjectProperty
		constexpr auto ScalarParameterInterpArray = 0x554; // TArray<FScalarParameterInterpStruct>
		constexpr auto RootMotionInterpCurve = 0x564; // FRootMotionCurve
		constexpr auto RootMotionInterpRate = 0x584; // float
		constexpr auto RootMotionInterpCurrentTime = 0x588; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x58c; // FVector
		constexpr auto m_TerrainWalkableFloorZ = 0x598; // float
		constexpr auto c_vLastReceivedVelocity = 0x59c; // FVector
	}

	namespace n_ATgRepInfo_Portal {
		constexpr auto r_TwinDRI = 0x2e0; // ObjectProperty
		constexpr auto c_bMasterEntity = 0x2e8; // char : 1
	}

	namespace n_UInterpTrackSkelControlStrength {
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_UTextureCube {
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto NumMips = 0x10c; // int32_t
		constexpr auto bIsCubemapValid = 0x110; // char : 1
		constexpr auto FacePosX = 0x114; // ObjectProperty
		constexpr auto FaceNegX = 0x11c; // ObjectProperty
		constexpr auto FacePosY = 0x124; // ObjectProperty
		constexpr auto FaceNegY = 0x12c; // ObjectProperty
		constexpr auto FacePosZ = 0x134; // ObjectProperty
		constexpr auto FaceNegZ = 0x13c; // ObjectProperty
	}

	namespace n_UAutoNavMeshPathObstacleUnregister {
		constexpr auto PathObstacleRef = 0x60; // TScriptInterface<Class>
	}

	namespace n_UTgMenuContentData {
		constexpr auto m_MeshData = 0x60; // TArray<FMeshData>
		constexpr auto m_LoginMusic = 0x70; // ObjectProperty
		constexpr auto m_GodSelectionMusic = 0x78; // ObjectProperty
		constexpr auto m_BattleReadyMusic = 0x80; // ObjectProperty
	}

	namespace n_UTgSeqAct_PushMatinee {
		constexpr auto m_fCheckpoint1Time = 0x21c; // float
		constexpr auto m_fCheckpoint2Time = 0x220; // float
		constexpr auto m_nDefenderTaskForce = 0x224; // int32_t
	}

	namespace n_ATgSkeletalMeshActor {
		constexpr auto c_MeshAssets = 0x2e8; // FMeshAssets
		constexpr auto c_bLoadMeshAssetts = 0x328; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceTarget {
		constexpr auto m_bIsCardActive = 0xc8; // char : 1
		constexpr auto m_HitActors = 0xcc; // TArray<ObjectProperty>
	}

	namespace n_ATgRepInfo_Game_TeamDeathMatch {
		constexpr auto c_nLeadingTeam = 0x744; // int32_t
		constexpr auto c_nLeadingTeamScoreAmount = 0x748; // int32_t
	}

	namespace n_ATgDevice_OwlInhand {
		constexpr auto m_CachedSwapDevice = 0xaec; // ObjectProperty
		constexpr auto m_CachedScopeDevice = 0xaf4; // ObjectProperty
		constexpr auto bUsePerfectAccuracy = 0xafc; // char : 1
	}

	namespace n_UParticleModuleCollisionActor {
		constexpr auto ActorsToCollideWith = 0x140; // TArray<FName>
		constexpr auto bCheckPawnCollisions = 0x150; // char : 1
	}

	namespace n_UUIComponent_Tooltip {
		constexpr auto m_eAlignHorz = 0x120; // UIALIGNINGTYPE
		constexpr auto m_eAlignVert = 0x121; // UIALIGNINGTYPE
		constexpr auto m_pDisplay = 0x124; // ObjectProperty
		constexpr auto m_fAnimInOutTime = 0x12c; // float
		constexpr auto m_fAnimInDelay = 0x130; // float
	}

	namespace n_USeqEvent_ProjectileLanded {
		constexpr auto MaxDistance = 0x128; // float
	}

	namespace n_UPointLightComponent {
		constexpr auto ShadowRadiusMultiplier = 0x1a4; // float
		constexpr auto Radius = 0x1a8; // float
		constexpr auto FalloffExponent = 0x1ac; // float
		constexpr auto ShadowFalloffExponent = 0x1b0; // float
		constexpr auto MinShadowFalloffRadius = 0x1b4; // float
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto ShadowPlane = 0x210; // FPlane
		constexpr auto PreviewLightRadius = 0x220; // ComponentProperty
		constexpr auto LightmassSettings = 0x228; // FLightmassPointLightSettings
		constexpr auto PreviewLightSourceRadius = 0x238; // ComponentProperty
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto SubImageIndex = 0x68; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x8c; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromFogCenter {
		constexpr auto Percent = 0x98; // float
	}

	namespace n_USceneCaptureCubeMapComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto NearPlane = 0xd8; // float
		constexpr auto FarPlane = 0xdc; // float
		constexpr auto WorldLocation = 0xe0; // FVector
	}

	namespace n_ATgDefensePoint {
		constexpr auto CurrentUser = 0x380; // ObjectProperty
		constexpr auto NextDefensePoint = 0x388; // ObjectProperty
		constexpr auto bFirstScript = 0x390; // char : 1
		constexpr auto bSniping = 0x390; // char : 1
		constexpr auto bDontChangePosition = 0x390; // char : 1
		constexpr auto bAvoid = 0x390; // char : 1
		constexpr auto bDisabled = 0x390; // char : 1
		constexpr auto bNotInVehicle = 0x390; // char : 1
		constexpr auto Priority = 0x394; // char
		constexpr auto WeaponPreference = 0x398; // AWeapon*
		constexpr auto NumChecked = 0x3a0; // float
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x68; // char : 1
		constexpr auto Positive_Y = 0x68; // char : 1
		constexpr auto Positive_Z = 0x68; // char : 1
		constexpr auto Negative_X = 0x68; // char : 1
		constexpr auto Negative_Y = 0x68; // char : 1
		constexpr auto Negative_Z = 0x68; // char : 1
		constexpr auto SurfaceOnly = 0x68; // char : 1
		constexpr auto Velocity = 0x68; // char : 1
		constexpr auto VelocityScale = 0x6c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x90; // FRawDistributionVector
	}

	namespace n_UTgInventoryObject_Listen_Combo_Skye {
		constexpr auto m_fLastStealthTime = 0xd0; // float
		constexpr auto m_bComboActive = 0xd4; // char : 1
		constexpr auto m_bCanTriggerCombo = 0xd4; // char : 1
		constexpr auto m_nHitStacks = 0xd8; // int32_t
	}

	namespace n_ATgSkeletalMeshActor_LobbyBase {
		constexpr auto m_bPlayTransitionOutro = 0x4d4; // char : 1
		constexpr auto m_TransitionActorClassName = 0x4d8; // FString
		constexpr auto m_nCharacterMastery = 0x4e8; // int32_t
		constexpr auto m_TransitionActor = 0x4ec; // ObjectProperty
	}

	namespace n_ATgDevice_SideArm {
		constexpr auto m_fQueueFireTime = 0xaec; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xaf0; // float
	}

	namespace n_UGameStateObject {
		constexpr auto TeamStates = 0x88; // FArray_Mirror
		constexpr auto PlayerStates = 0x98; // FArray_Mirror
		constexpr auto SessionType = 0xa8; // GameSessionType
		constexpr auto bIsMatchStarted = 0xac; // char : 1
		constexpr auto bIsRoundStarted = 0xac; // char : 1
		constexpr auto RoundNumber = 0xb0; // int32_t
		constexpr auto MaxRoundNumber = 0xb4; // int32_t
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto VectorProp = 0x70; // FPointer
		constexpr auto ResetVector = 0x78; // FVector
	}

	namespace n_ATgAIController_BehaviorGod {
		constexpr auto VfTable_ITgPaladinsController = 0x90c; // FPointer
		constexpr auto WaitForSpawnSecs = 0x914; // float
		constexpr auto PlayerID = 0x918; // int32_t
		constexpr auto bCanPurchaseItems = 0x91c; // char : 1
		constexpr auto bCanPurchaseSkills = 0x91c; // char : 1
		constexpr auto bRespawnAtOriginalLocation = 0x91c; // char : 1
		constexpr auto CurrentGoldRemainder = 0x920; // float
		constexpr auto CurrentGold = 0x924; // int32_t
		constexpr auto CurrentXPRemainder = 0x928; // float
		constexpr auto CurrentXP = 0x92c; // int32_t
		constexpr auto GeometricMean = 0x930; // FVector
	}

	namespace n_UTgCallbackContainer {
		constexpr auto m_RegisteredCallbacks = 0x60; // FMultiMap_Mirror
		constexpr auto m_RegisteredCallbacksByHandle = 0xa8; // FMap_Mirror
		constexpr auto m_CallbackHandles = 0xf0; // FMap_Mirror
	}

	namespace n_UTgIconDetails {
		constexpr auto m_OwningGroup = 0x60; // ObjectProperty
		constexpr auto m_mcIconObject = 0x68; // ObjectProperty
		constexpr auto m_mcTexture = 0x70; // ObjectProperty
		constexpr auto m_mcLoadingSpinner = 0x78; // ObjectProperty
		constexpr auto m_sTextureString = 0x80; // FString
		constexpr auto m_sTag = 0x90; // FString
		constexpr auto m_bIsTextureSet = 0xa0; // char : 1
	}

	namespace n_UTgAIBehaviorComposite_Random {
		constexpr auto ChildWeights = 0xb8; // TArray<float>
		constexpr auto ChildFreezeTime = 0xc8; // float
		constexpr auto bRandomizeOnComplete = 0xcc; // char : 1
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_USeqAct_AIMoveToActor {
		constexpr auto bInterruptable = 0x120; // char : 1
		constexpr auto bPickClosest = 0x120; // char : 1
		constexpr auto Destination = 0x124; // TArray<ObjectProperty>
		constexpr auto MovementSpeedModifier = 0x134; // float
		constexpr auto LookAt = 0x138; // ObjectProperty
		constexpr auto LastDestinationChoice = 0x140; // int32_t
	}

	namespace n_UTgGameplayCurvesSet_PositionFromPitch {
		constexpr auto ForwardTranslation = 0x64; // FRawDistributionFloat
		constexpr auto UpTranslation = 0x88; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorSensor_NearbyChests {
		constexpr auto MaxRadius = 0x94; // float
	}

	namespace n_UGameThirdPersonCameraMode_Default {
		constexpr auto WorstLocAimingZOffset = 0x258; // float
		constexpr auto bTemporaryOriginRotInterp = 0x25c; // char : 1
		constexpr auto TemporaryOriginRotInterpSpeed = 0x260; // float
	}

	namespace n_UNavMeshPath_Toward {
		constexpr auto bBiasAgainstHighLevelPath = 0x78; // char : 1
		constexpr auto OutOfHighLevelPathBias = 0x7c; // float
		constexpr auto GoalActor = 0x80; // ObjectProperty
		constexpr auto GoalPoint = 0x88; // FVector
	}

	namespace n_UAnimNodeSequenceBlendByAim {
		constexpr auto Aim = 0x1bc; // FVector2D
		constexpr auto PreviousAim = 0x1c4; // FVector2D
		constexpr auto HorizontalRange = 0x1cc; // FVector2D
		constexpr auto VerticalRange = 0x1d4; // FVector2D
		constexpr auto AngleOffset = 0x1dc; // FVector2D
		constexpr auto AnimName_LU = 0x1e4; // FName
		constexpr auto AnimName_LC = 0x1ec; // FName
		constexpr auto AnimName_LD = 0x1f4; // FName
		constexpr auto AnimName_CU = 0x1fc; // FName
		constexpr auto AnimName_CC = 0x204; // FName
		constexpr auto AnimName_CD = 0x20c; // FName
		constexpr auto AnimName_RU = 0x214; // FName
		constexpr auto AnimName_RC = 0x21c; // FName
		constexpr auto AnimName_RD = 0x224; // FName
	}

	namespace n_UUIComponent_HeaderTabs {
		constexpr auto m_pBumpers = 0x1d8; // ObjectProperty [0x2]
		constexpr auto m_NavLeft = 0x1e8; // ObjectProperty
		constexpr auto m_NavRight = 0x1f0; // ObjectProperty
		constexpr auto m_fButtonSpace = 0x1f8; // float
		constexpr auto m_fBumperSpaceLeft = 0x1fc; // float
		constexpr auto m_fBumperSpaceRight = 0x200; // float
	}

	namespace n_UTgInventoryObject_Listen_LastStand {
		constexpr auto m_bHealthInActiveRange = 0xd8; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_FirstShotDuringOrAfterMovementAbility {
		constexpr auto m_bMovementAbilityActive = 0xd8; // char : 1
	}

	namespace n_UTgAIBehaviorAction_MoveToLaneVolume {
		constexpr auto bMustBeSameLane = 0x9c; // char : 1
	}

	namespace n_ATgDevice_PoisonPistol {
		constexpr auto m_fQueueFireTime = 0xaec; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xaf0; // float
	}

	namespace n_UTgClientSettings {
		constexpr auto m_bMute = 0x60; // char : 1
		constexpr auto MuteOnLoseFocus = 0x60; // char : 1
		constexpr auto EnableGyroInput = 0x60; // char : 1
		constexpr auto fGamma = 0x64; // float
		constexpr auto SFXVolume = 0x68; // float
		constexpr auto MusicVolume = 0x6c; // float
		constexpr auto VoiceVolume = 0x70; // float
		constexpr auto MasterVolume = 0x74; // float
		constexpr auto MaxSlotsPlayerSkins = 0x78; // int32_t
		constexpr auto MaxSlotsChickenSkins = 0x7c; // int32_t
		constexpr auto MaxSlotsMountSkins = 0x80; // int32_t
		constexpr auto MaxSlotsContrails = 0x84; // int32_t
		constexpr auto DesiredAspectRatio = 0x88; // EAspectRatio
		constexpr auto ControlIconStyle = 0x89; // EControlIconStyle
		constexpr auto LocalProperties = 0x8c; // TArray<FLOCALPROPERTY>
	}

	namespace n_UTgAIUtilityFilter_Payload {
		constexpr auto DistanceCutoff = 0xc0; // float
	}

	namespace n_ATgDevice_Aura {
		constexpr auto r_fRadiusScale = 0xaec; // float
		constexpr auto m_TouchingActors = 0xaf0; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0xb00; // TArray<ObjectProperty>
		constexpr auto m_bIsAuraActive = 0xb10; // char : 1
		constexpr auto m_fLastBlockedByBlockersTime = 0xb14; // float
		constexpr auto m_fMinBlockedByBlockersTime = 0xb18; // float
		constexpr auto m_BlockedActors = 0xb1c; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0xb2c; // ObjectProperty
	}

	namespace n_UMaterialExpressionConstantClamp {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // float
		constexpr auto Max = 0xe8; // float
	}

	namespace n_UMobileMenuBar {
		constexpr auto bIsVertical = 0xdc; // char : 1
		constexpr auto bDirty = 0xdc; // char : 1
		constexpr auto SelectedIndex = 0xe0; // int32_t
		constexpr auto FirstItem = 0xe4; // int32_t
		constexpr auto Items = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_DeployMod {
		constexpr auto VfTable_ITgDeviceInterface_DeployMod = 0xaec; // FPointer
	}

	namespace n_UOnlineSubsystemCommonImpl {
		constexpr auto VoiceEngine = 0x264; // FPointer
		constexpr auto MaxLocalTalkers = 0x26c; // int32_t
		constexpr auto MaxRemoteTalkers = 0x270; // int32_t
		constexpr auto bIsUsingSpeechRecognition = 0x274; // char : 1
		constexpr auto GameInterfaceImpl = 0x278; // ObjectProperty
		constexpr auto AuthInterfaceImpl = 0x280; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget_Jungle {
		constexpr auto bMustBeWeakest = 0x94; // char : 1
		constexpr auto TargetType = 0x98; // EJungleTargetType
	}

	namespace n_UApexClothingAsset {
		constexpr auto LodMaterialInfo = 0x80; // TArray<FClothingLodInfo>
		constexpr auto MApexAsset = 0x90; // FPointer
		constexpr auto Materials = 0x98; // TArray<ObjectProperty>
		constexpr auto ApexClothingLibrary = 0xa8; // ObjectProperty
		constexpr auto bUseHardwareCloth = 0xb0; // char : 1
		constexpr auto bFallbackSkinning = 0xb0; // char : 1
		constexpr auto bSlowStart = 0xb0; // char : 1
		constexpr auto bRecomputeNormals = 0xb0; // char : 1
		constexpr auto bAllowAdaptiveTargetFrequency = 0xb0; // char : 1
		constexpr auto bResetAfterTeleport = 0xb0; // char : 1
		constexpr auto bUseLocalSpaceSimulation = 0xb0; // char : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xb0; // char : 1
		constexpr auto IgnoreInitialTrigger = 0xb0; // char : 0
		constexpr auto UVChannelForTangentUpdate = 0xb4; // int32_t
		constexpr auto MaxDistanceBlendTime = 0xb8; // float
		constexpr auto ContinuousRotationThreshold = 0xbc; // float
		constexpr auto ContinuousDistanceThreshold = 0xc0; // float
		constexpr auto LodWeightsMaxDistance = 0xc4; // float
		constexpr auto LodWeightsDistanceWeight = 0xc8; // float
		constexpr auto LodWeightsBias = 0xcc; // float
		constexpr auto LodWeightsBenefitsBias = 0xd0; // float
		constexpr auto LODDecayTime = 0xd4; // float
		constexpr auto SoundOnMove = 0xd8; // ObjectProperty
		constexpr auto SoundOnRest = 0xe0; // ObjectProperty
		constexpr auto SoundWhileMoving = 0xe8; // ObjectProperty
		constexpr auto SpeedThresholdOnMove = 0xf0; // float
		constexpr auto SpeedThresholdOnRest = 0xf4; // float
	}

	namespace n_ATgFortressVolume {
		constexpr auto TaskforceIndex = 0x2bc; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_MountShield {
		constexpr auto m_fNextMountShieldTime = 0xd8; // float
		constexpr auto m_fMinMountShieldTime = 0xdc; // float
	}

	namespace n_UTgSeqEvent_ChestStartEncounter {
		constexpr auto m_ChestDeployable = 0x128; // ObjectProperty
	}

	namespace n_UTgDeviceFire_MirrorDamageToHealBlock {
		constexpr auto m_fHealBlockAmount = 0x270; // float
	}

	namespace n_ADecalActorBase {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x280; // FPointer
		constexpr auto Decal = 0x288; // ComponentProperty
	}

	namespace n_USeqAct_AkPostTrigger {
		constexpr auto Trigger = 0x108; // FString
	}

	namespace n_UTgAIBehaviorAction_Juke {
		constexpr auto JukeDist = 0x94; // float
		constexpr auto JukeProbability = 0x98; // float
	}

	namespace n_ATgDevice_Emitter {
		constexpr auto m_PawnsInRange = 0xaec; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0xafc; // ObjectProperty
		constexpr auto m_bHasProjector = 0xb04; // char : 1
		constexpr auto m_bIsOnOwner = 0xb04; // char : 1
		constexpr auto m_fProjectorPercent = 0xb08; // float
		constexpr auto m_CachedPawnOwner = 0xb0c; // ObjectProperty
	}

	namespace n_UGameplayEventsWriterBase {
		constexpr auto Game = 0x1c0; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_CurrentLevel {
		constexpr auto LevelThreshold = 0x98; // int32_t
	}

	namespace n_USoundNodeAmbientNonLoop {
		constexpr auto DelayMin = 0xb0; // float
		constexpr auto DelayMax = 0xb4; // float
		constexpr auto DelayTime = 0xb8; // FRawDistributionFloat
	}

	namespace n_ANxRadialForceField {
		constexpr auto RenderComponent = 0x2d4; // ComponentProperty
		constexpr auto ForceStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceFalloff = 0x2e4; // ERadialImpulseFalloff
		constexpr auto LinearKernel = 0x2e8; // FPointer
	}

	namespace n_UGameAICmd_Hover_MoveToGoal_Mesh {
		constexpr auto Find = 0x84; // ObjectProperty
		constexpr auto Radius = 0x8c; // float
		constexpr auto bWasFiring = 0x90; // char : 1
		constexpr auto bFinalApproach = 0x90; // char : 1
		constexpr auto bFallbackMoveToMesh = 0x90; // char : 1
		constexpr auto DesiredHoverHeight = 0x94; // float
		constexpr auto CurrentHoverHeight = 0x98; // float
		constexpr auto SubGoalReachDist = 0x9c; // float
		constexpr auto GoalDistance = 0xa0; // float
		constexpr auto IntermediatePoint = 0xa4; // FVector
		constexpr auto LastMovePoint = 0xb0; // FVector
		constexpr auto NumMovePointFails = 0xbc; // int32_t
		constexpr auto MaxMovePointFails = 0xc0; // int32_t
		constexpr auto FallbackDest = 0xc4; // FVector
		constexpr auto MoveToActor = 0xd0; // ObjectProperty
		constexpr auto LastMoveTargetPathLocation = 0xd8; // FBasedPosition
		constexpr auto InitialFinalDestination = 0x110; // FVector
	}

	namespace n_UTgAIBehaviorCondition_NumDeaths {
		constexpr auto DeathThreshold = 0x98; // int32_t
	}

	namespace n_ATgMenuTransitionActor {
		constexpr auto m_IntroPSC = 0x280; // ComponentProperty
		constexpr auto m_LoopPSC = 0x288; // ComponentProperty
		constexpr auto m_OutroPSC = 0x290; // ComponentProperty
	}

	namespace n_UUIComponent_ChestPanelBase {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_mcName = 0x128; // ObjectProperty
		constexpr auto m_mcType = 0x130; // ObjectProperty
		constexpr auto m_mcDesc = 0x138; // ObjectProperty
		constexpr auto m_mcCount = 0x140; // ObjectProperty
		constexpr auto m_pCTA = 0x148; // ObjectProperty
		constexpr auto m_pOpenChestButton = 0x150; // ObjectProperty
		constexpr auto m_grChests = 0x158; // ObjectProperty
		constexpr auto m_nOwnedChests = 0x160; // int32_t
		constexpr auto m_nOwnedItemCount = 0x164; // int32_t
		constexpr auto m_nTotalItemCount = 0x168; // int32_t
		constexpr auto m_pExclusiveItems = 0x16c; // TArray<ObjectProperty>
		constexpr auto m_sOpenChestLoadName = 0x17c; // FString
		constexpr auto m_bLockedForDelay = 0x18c; // char : 1
		constexpr auto m_sSavedButtonText = 0x190; // FString
		constexpr auto m_pVendorItem = 0x1a0; // FPointer
	}

	namespace n_UTgGameplayCurvesSet_AimAssistKeyframes {
		constexpr auto DebugVals = 0x64; // FAimAssistKeyframeDebugVals
		constexpr auto bSaveDebugVals = 0x168; // char : 1
		constexpr auto HorizMagnetKeyframes = 0x16c; // TArray<ObjectProperty>
		constexpr auto VertMagnetKeyframes = 0x17c; // TArray<ObjectProperty>
		constexpr auto FrictionKeyframes = 0x18c; // TArray<ObjectProperty>
		constexpr auto TrackingByAccuracyKeyframes = 0x19c; // TArray<ObjectProperty>
		constexpr auto TrackingByAngleKeyframes = 0x1ac; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_ThrownProjectile {
		constexpr auto m_bEndCook = 0xaec; // char : 1
		constexpr auto m_bThrownGrenade = 0xaec; // char : 1
		constexpr auto s_bFullCook = 0xaec; // char : 1
		constexpr auto m_fExplodeTime = 0xaf0; // float
	}

	namespace n_ATgDevice_Toggle {
		constexpr auto m_bIsToggle = 0xaec; // char : 1
	}

	namespace n_ATestSplittingVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2bc; // FPointer
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x7c; // FVector
		constexpr auto bLockAxes = 0x88; // char : 1
		constexpr auto LockedAxes = 0x8c; // EDistributionVectorLockFlags
	}

	namespace n_ATgDevice_WarpStep {
		constexpr auto m_bRolledBackward = 0xaec; // char : 1
	}

	namespace n_UTgAnimNotify_CameraCut {
		constexpr auto m_fTweenSpeed = 0x68; // float
		constexpr auto m_vTweenDir = 0x6c; // FVector
		constexpr auto m_vLocationOffset = 0x78; // FVector
		constexpr auto m_rRotationOffset = 0x84; // FRotator
		constexpr auto m_rRotationTarget = 0x90; // FRotator
		constexpr auto m_fRotationDuration = 0x9c; // float
		constexpr auto m_fRotationDelay = 0xa0; // float
	}

	namespace n_UTgAIBehaviorCondition_DeltaGodsInCapturePoint {
		constexpr auto GodThreshold = 0x98; // int32_t
	}

	namespace n_ATgEmitter {
		constexpr auto BoneName = 0x294; // FName
	}

	namespace n_UUIScene_UIRadialMenu {
		constexpr auto m_mcPing = 0x1e0; // ObjectProperty
		constexpr auto m_mcPingPrompt = 0x1e8; // ObjectProperty
		constexpr auto m_pLeftPrompt = 0x1f0; // ObjectProperty
		constexpr auto m_pRightPrompt = 0x1f8; // ObjectProperty
	}

	namespace n_ATgDevice_ToggleWithLockout {
		constexpr auto m_CachedTgP = 0xaec; // ObjectProperty
	}

	namespace n_UUIPropertyDataProvider {
		constexpr auto ComplexPropertyTypes = 0x70; // TArray<UProperty*>
		constexpr auto __CanSupportComplexPropertyType__Delegate = 0x80; // DelegateProperty
	}

	namespace n_ATgDeploy_Wall {
		constexpr auto m_vSegmentExtent = 0x470; // FVector
		constexpr auto m_vOpenSpotExtent = 0x47c; // FVector
		constexpr auto m_fWallOpenSpotTolerance = 0x488; // float
		constexpr auto m_fWallTraceDownDistance = 0x48c; // float
		constexpr auto m_WallPlacementInfos = 0x490; // FWallSpawnInfo [0x7]
		constexpr auto m_pImpasseForm = 0x500; // ObjectProperty
		constexpr auto m_CenterMesh = 0x508; // ComponentProperty
		constexpr auto m_LeftMeshes = 0x510; // ComponentProperty [0x3]
		constexpr auto m_RightMeshes = 0x528; // ComponentProperty [0x3]
		constexpr auto m_WallMeshIDCenter = 0x540; // int32_t
		constexpr auto m_WallMeshIDEndCap = 0x544; // int32_t
		constexpr auto r_bGrowthModeActivationSignal = 0x548; // char : 1
		constexpr auto m_bInGrowthMode = 0x548; // char : 1
		constexpr auto m_bDidInitialHit = 0x548; // char : 1
		constexpr auto r_bEarthenGuardActive = 0x548; // char : 1
		constexpr auto r_bHasAlpine = 0x548; // char : 1
		constexpr auto m_fGrowStartTime = 0x54c; // float
		constexpr auto m_fInitialWallScaleZ = 0x550; // float
	}

	namespace n_UPBRuleNodeTransform {
		constexpr auto Translation = 0x70; // ComponentProperty
		constexpr auto Rotation = 0x78; // ComponentProperty
		constexpr auto Scale = 0x80; // ComponentProperty
	}

	namespace n_ATgTutorialInfo {
		constexpr auto fButtonHoldTime = 0x280; // float
		constexpr auto fVolumeStandTime = 0x284; // float
		constexpr auto fBotRespawnTime = 0x288; // float
		constexpr auto fBotTargetsKilledWaitTime = 0x28c; // float
		constexpr auto fPlayerTeamCaptureMultiplier = 0x290; // float
		constexpr auto fRepeatInstructionTime = 0x294; // float
		constexpr auto fExtendedRepeatInstructionTime = 0x298; // float
		constexpr auto fIntroExtensionTime = 0x29c; // float
		constexpr auto fBotDelayTravelToMovementTime = 0x2a0; // float
		constexpr auto fBotDelayTravelToUltRangeTime = 0x2a4; // float
		constexpr auto fPayloadContestPercent = 0x2a8; // float
		constexpr auto fLanePusherGroundSpeed = 0x2ac; // float
		constexpr auto fEnergyChargeMultiplier = 0x2b0; // float
		constexpr auto ApproachHelperArea = 0x2b4; // ObjectProperty
		constexpr auto AutoShootingRangeStandingTargetArea = 0x2bc; // ObjectProperty
		constexpr auto UltimateShootingRangeStandingTargetArea = 0x2c4; // ObjectProperty
		constexpr auto JumpLowerArea = 0x2cc; // ObjectProperty
		constexpr auto JumpUpperArea = 0x2d4; // ObjectProperty
		constexpr auto HelperBotFactory = 0x2dc; // ObjectProperty
		constexpr auto AutoBotFactory = 0x2e4; // ObjectProperty
		constexpr auto MultipleAutoBotFactory = 0x2ec; // ObjectProperty
		constexpr auto BattleAbilityBotFactory = 0x2f4; // ObjectProperty
		constexpr auto AltAbilityBotFactory = 0x2fc; // ObjectProperty
		constexpr auto UltimateChargeBotFactory = 0x304; // ObjectProperty
		constexpr auto UltimateAbilityBotFactory = 0x30c; // ObjectProperty
		constexpr auto ContestCapturePointBotFactory = 0x314; // ObjectProperty
		constexpr auto ContestPayloadBotsFactory = 0x31c; // ObjectProperty
		constexpr auto HelperMoveTargetAutoRange = 0x324; // ObjectProperty
		constexpr auto HelperMoveTargetMovementAbility = 0x32c; // ObjectProperty
		constexpr auto HelperMoveTargetUltRange = 0x334; // ObjectProperty
		constexpr auto EndGameFocus = 0x33c; // ObjectProperty
		constexpr auto HelperBotController = 0x344; // ObjectProperty
	}

	namespace n_UStaticMeshComponentFactory {
		constexpr auto StaticMesh = 0x74; // ObjectProperty
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_AGameCrowdBehaviorPoint {
		constexpr auto RadiusOfBehaviorEvent = 0x28c; // float
		constexpr auto DurationOfBehaviorEvent = 0x290; // float
		constexpr auto EventType = 0x294; // ECrowdBehaviorEvent
		constexpr auto bRequireLOS = 0x298; // char : 1
		constexpr auto Initiator = 0x29c; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Scout {
		constexpr auto m_SKCBirdScale = 0x2bc; // ObjectProperty
	}

	namespace n_USeqAct_AssignController {
		constexpr auto ControllerClass = 0x108; // AController*
	}

	namespace n_UUIDataAcquisition {
		constexpr auto dwLocalAcquisitionId = 0x60; // Fdword
		constexpr auto eQuestOrigin = 0x64; // QuestOrigin
	}

	namespace n_UGameplayEventsReader {
		constexpr auto RegisteredHandlers = 0x1c0; // TArray<ObjectProperty>
	}

	namespace n_UAnimNode_MultiBlendPerBone {
		constexpr auto PawnOwner = 0x114; // ObjectProperty
		constexpr auto MaskList = 0x11c; // TArray<FPerBoneMaskInfo>
		constexpr auto RotationBlendType = 0x12c; // EBlendType
	}

	namespace n_UTgAnimBlendByFallTransition {
		constexpr auto m_fPreDownVelocity = 0x19c; // float
	}

	namespace n_UTgSeqVar_Player {
		constexpr auto HumanPlayers = 0xdc; // TArray<ObjectProperty>
		constexpr auto BotPlayers = 0xec; // TArray<ObjectProperty>
		constexpr auto PetPlayers = 0xfc; // TArray<ObjectProperty>
		constexpr auto bAllBots = 0x10c; // char : 1
		constexpr auto bAllHumans = 0x10c; // char : 1
		constexpr auto bAllHumansAndPets = 0x10c; // char : 1
		constexpr auto nTaskForceNumber = 0x110; // int32_t
	}

	namespace n_UTgInvListener_ExplosiveImpalerArrow {
		constexpr auto m_AimData = 0xcc; // FAimData
	}

	namespace n_UTgInventoryObject_Listen_Combo_Cassie {
		constexpr auto m_fDodgeRollFireTime = 0xd0; // float
		constexpr auto m_fDisengageHitTime = 0xd4; // float
		constexpr auto m_DisengageHitPawn = 0xd8; // ObjectProperty
	}

	namespace n_UTgDeviceForm_WeaponZoom {
		constexpr auto m_fCameraFOVInterpolationTime = 0x2bc; // float
		constexpr auto m_fMaxCameraFOVInteprolationTime = 0x2c0; // float
		constexpr auto m_fCameraFOVInterpolationTarget = 0x2c4; // float
		constexpr auto m_fActiveFOV = 0x2c8; // float
		constexpr auto m_fHasStartedInterpolation = 0x2cc; // char : 1
		constexpr auto m_fDesiredStartInterpolationTimestamp = 0x2d0; // float
	}

	namespace n_UUIData_SocialAction {
		constexpr auto m_sTitle = 0x60; // TArray<FString>
		constexpr auto m_eAction = 0x70; // SAACT_ACTION
		constexpr auto m_eSourceList = 0x71; // SAL_LIST
		constexpr auto m_pSelectorFunc = 0x74; // FPointer
		constexpr auto m_bCloseOnAction = 0x7c; // char : 1
		constexpr auto m_bAllowSelectAll = 0x7c; // char : 1
	}

	namespace n_UTgGameDC_EffectList {
		constexpr auto m_bListUpdated = 0x16c; // char : 1
		constexpr auto m_EffectList = 0x170; // ObjectProperty [0x10]
	}

	namespace n_USeqEvent_AISeeEnemy {
		constexpr auto MaxSightDistance = 0x128; // float
	}

	namespace n_AWebConnection {
		constexpr auto WebServer = 0x2e4; // ObjectProperty
		constexpr auto ReceivedData = 0x2ec; // FString
		constexpr auto Request = 0x2fc; // ObjectProperty
		constexpr auto Response = 0x304; // ObjectProperty
		constexpr auto Application = 0x30c; // ObjectProperty
		constexpr auto bDelayCleanup = 0x314; // char : 1
		constexpr auto RawBytesExpecting = 0x318; // int32_t
		constexpr auto MaxValueLength = 0x31c; // int32_t
		constexpr auto MaxLineLength = 0x320; // int32_t
		constexpr auto ConnID = 0x324; // int32_t
	}

	namespace n_UUIDataEsportsTeam {
		constexpr auto dwTeamId = 0x60; // Fdword
		constexpr auto sName = 0x64; // FString
		constexpr auto sAbbr = 0x74; // FString
		constexpr auto sTextureName = 0x84; // FString
	}

	namespace n_UUIComponent_ItemMini {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_nLevelOverride = 0x128; // int32_t
	}

	namespace n_UTgAIBehaviorAction_AssignLane {
		constexpr auto LaneIndex = 0x94; // int32_t
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x24c; // FColor
		constexpr auto FrustumAngle = 0x250; // float
		constexpr auto FrustumAspectRatio = 0x254; // float
		constexpr auto FrustumStartDist = 0x258; // float
		constexpr auto FrustumEndDist = 0x25c; // float
		constexpr auto Texture = 0x260; // ObjectProperty
	}

	namespace n_UTgAIUtilityFilter_DistanceFromTarget {
		constexpr auto DistanceCutoff = 0xc0; // float
		constexpr auto bInverse = 0xc4; // char : 1
	}

	namespace n_USeqAct_Delay {
		constexpr auto bDelayActive = 0x120; // char : 1
		constexpr auto bStartWillRestart = 0x120; // char : 1
		constexpr auto DefaultDuration = 0x124; // float
		constexpr auto Duration = 0x128; // float
		constexpr auto LastUpdateTime = 0x12c; // float
		constexpr auto RemainingTime = 0x130; // float
	}

	namespace n_ULightmassLevelSettings {
		constexpr auto NumIndirectLightingBounces = 0x60; // int32_t
		constexpr auto EnvironmentColor = 0x64; // FColor
		constexpr auto EnvironmentIntensity = 0x68; // float
		constexpr auto EmissiveBoost = 0x6c; // float
		constexpr auto DiffuseBoost = 0x70; // float
		constexpr auto SpecularBoost = 0x74; // float
		constexpr auto bUseAmbientOcclusion = 0x78; // char : 1
		constexpr auto bVisualizeAmbientOcclusion = 0x78; // char : 1
		constexpr auto DirectIlluminationOcclusionFraction = 0x7c; // float
		constexpr auto IndirectIlluminationOcclusionFraction = 0x80; // float
		constexpr auto OcclusionExponent = 0x84; // float
		constexpr auto FullyOccludedSamplesFraction = 0x88; // float
		constexpr auto MaxOcclusionDistance = 0x8c; // float
	}

	namespace n_UUIComponent_PartyLobbyInfoPanel {
		constexpr auto m_nSelectedQueue = 0x120; // int32_t
		constexpr auto m_bSelfReady = 0x124; // char : 1
		constexpr auto m_bInQueue = 0x124; // char : 1
		constexpr auto m_bSoloLTEActive = 0x124; // char : 1
		constexpr auto m_bDuoLTEActive = 0x124; // char : 1
		constexpr auto m_bSquadLTEActive = 0x124; // char : 1
		constexpr auto m_bLTEActive = 0x124; // char : 1
		constexpr auto m_bInitLTEInfo = 0x124; // char : 1
		constexpr auto m_bCanScroll = 0x124; // char : 1
		constexpr auto m_pDailyQuests = 0x128; // ObjectProperty
		constexpr auto m_mcBattlePass = 0x130; // ObjectProperty
		constexpr auto m_mcBattlePassName = 0x138; // ObjectProperty
		constexpr auto m_mcBattlePassLevel = 0x140; // ObjectProperty
		constexpr auto m_mcBattlePassIcon = 0x148; // ObjectProperty
		constexpr auto m_pBattlePassProgress = 0x150; // ObjectProperty
		constexpr auto m_mcClass = 0x158; // ObjectProperty
		constexpr auto m_mcClassName = 0x160; // ObjectProperty
		constexpr auto m_mcClassLevel = 0x168; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x170; // ObjectProperty
		constexpr auto m_pClassProgress = 0x178; // ObjectProperty
		constexpr auto m_mcQueueRank = 0x180; // ObjectProperty
		constexpr auto m_mcQueueRankIcon = 0x188; // ObjectProperty
		constexpr auto m_mcQueueRankKills = 0x190; // ObjectProperty
		constexpr auto m_mcQueueRankWins = 0x198; // ObjectProperty
		constexpr auto m_mcQueueRankName = 0x1a0; // ObjectProperty
		constexpr auto m_mcQueueButtonLabel = 0x1a8; // ObjectProperty
		constexpr auto m_mcQueueButtonTimer = 0x1b0; // ObjectProperty
		constexpr auto m_pQueueButton = 0x1b8; // ObjectProperty
		constexpr auto m_pPlayButton = 0x1c0; // ObjectProperty
		constexpr auto m_mcCrossplayTF = 0x1c8; // ObjectProperty
		constexpr auto m_mcFillTeamTF = 0x1d0; // ObjectProperty
		constexpr auto m_mcRegionTF = 0x1d8; // ObjectProperty
		constexpr auto m_mcErrorTF = 0x1e0; // ObjectProperty
		constexpr auto m_pSelectQueueAction = 0x1e8; // ObjectProperty
		constexpr auto m_pPlayAction = 0x1f0; // ObjectProperty
		constexpr auto m_pPlayCancelAction = 0x1f8; // ObjectProperty
		constexpr auto m_pReadyAction = 0x200; // ObjectProperty
		constexpr auto m_pUnreadyAction = 0x208; // ObjectProperty
		constexpr auto m_pCustomStartAction = 0x210; // ObjectProperty
		constexpr auto m_pCustomQuitAction = 0x218; // ObjectProperty
		constexpr auto m_pCustomCloseAction = 0x220; // ObjectProperty
		constexpr auto m_pCustomPanel = 0x228; // ObjectProperty
		constexpr auto m_nOutputCount = 0x230; // int32_t
		constexpr auto m_nScroll = 0x234; // int32_t
		constexpr auto m_nLineNumber = 0x238; // int32_t
		constexpr auto m_fOutputWidth = 0x23c; // float
		constexpr auto m_sRemaining = 0x240; // FString
		constexpr auto m_SoloLTEMessages = 0x250; // TArray<FString>
		constexpr auto m_DuoLTEMessages = 0x260; // TArray<FString>
		constexpr auto m_SquadLTEMessages = 0x270; // TArray<FString>
		constexpr auto m_LTEMessages = 0x280; // FPointer
		constexpr auto m_mcLTEBanner = 0x288; // ObjectProperty
		constexpr auto m_mcLTEDescription = 0x290; // ObjectProperty
		constexpr auto m_mcLTETitle = 0x298; // ObjectProperty
		constexpr auto m_mcLTEFrame = 0x2a0; // ObjectProperty
		constexpr auto m_mcLTEBuffer = 0x2a8; // ObjectProperty
		constexpr auto m_mcLTEScrollbar = 0x2b0; // ObjectProperty
		constexpr auto m_mcLTEOutput = 0x2b8; // ObjectProperty [0xa]
	}

	namespace n_ANxForceField {
		constexpr auto ExcludeChannel = 0x280; // int32_t
		constexpr auto bForceActive = 0x284; // char : 1
		constexpr auto CollideWithChannels = 0x288; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x28c; // ERBCollisionChannel
		constexpr auto ForceField = 0x290; // FPointer
		constexpr auto ConvexMeshes = 0x298; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x2a8; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x2b8; // TArray<FPointer>
		constexpr auto U2NRotation = 0x2c8; // FPointer
		constexpr auto SceneIndex = 0x2d0; // int32_t
	}

	namespace n_ATgCollisionProxy_SpectatorActionListener {
		constexpr auto __ProxyDeviceOnStartFire__Delegate = 0x2bc; // DelegateProperty
	}

	namespace n_UGameCrowdAgentBehavior {
		constexpr auto MyEventType = 0x60; // ECrowdBehaviorEvent
		constexpr auto ViralBehaviorEvent = 0x61; // ECrowdBehaviorEvent
		constexpr auto DurationOfBehavior = 0x64; // float
		constexpr auto TimeUntilStopBehavior = 0x68; // float
		constexpr auto bIdleBehavior = 0x6c; // char : 1
		constexpr auto bFaceActionTargetFirst = 0x6c; // char : 1
		constexpr auto bIsViralBehavior = 0x6c; // char : 1
		constexpr auto bPassOnIsViralBehaviorFlag = 0x6c; // char : 1
		constexpr auto ActionTarget = 0x70; // ObjectProperty
		constexpr auto MaxPlayerDistance = 0x78; // float
		constexpr auto ViralRadius = 0x7c; // float
		constexpr auto DurationBeforeBecomesViral = 0x80; // float
		constexpr auto TimeToBecomeViral = 0x84; // float
		constexpr auto DurationOfViralBehaviorPropagation = 0x88; // float
		constexpr auto TimeToStopPropagatingViralBehavior = 0x8c; // float
		constexpr auto MyAgent = 0x90; // ObjectProperty
		constexpr auto DebugBehaviorColor = 0x98; // FColor
	}

	namespace n_USeqAct_AccessObjectList {
		constexpr auto OutputObject = 0x108; // ObjectProperty
		constexpr auto ObjectIndex = 0x110; // int32_t
	}

	namespace n_USeqEvent_TakeDamage {
		constexpr auto MinDamageAmount = 0x128; // float
		constexpr auto DamageThreshold = 0x12c; // float
		constexpr auto DamageTypes = 0x130; // TArray<UDamageType*>
		constexpr auto IgnoreDamageTypes = 0x140; // TArray<UDamageType*>
		constexpr auto CurrentDamage = 0x150; // float
		constexpr auto bResetDamageOnToggle = 0x154; // char : 1
	}

	namespace n_UTgFlagContentData {
		constexpr auto m_MeshData = 0x60; // TArray<FFlagMeshData>
	}

	namespace n_UTgSeqEvent_TutorialEvent {
		constexpr auto TutEvent = 0x128; // TUTORIAL_EVENT
		constexpr auto EventData = 0x12c; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_BuffNextAttack {
		constexpr auto bIsFirstAttackAfterUse = 0xc8; // char : 1
		constexpr auto bFirstOnly = 0xc8; // char : 1
		constexpr auto fEndTime = 0xcc; // float
	}

	namespace n_UTgAIBehaviorCondition_IsLookingAtInteractTarget {
		constexpr auto VisibilityAngle = 0x98; // float
	}

	namespace n_UTgControlModule_StunDisoriented {
		constexpr auto m_nInitialYaw = 0xcc; // int32_t
		constexpr auto m_nTargetYaw = 0xd0; // int32_t
		constexpr auto m_fInterpTime = 0xd4; // float
		constexpr auto m_fRemainingInterpTime = 0xd8; // float
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x90; // char : 1
		constexpr auto bLockAxes2 = 0x90; // char : 1
		constexpr auto bUseExtremes = 0x90; // char : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x96; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_UUIData_PopupGeneric {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto sTitle = 0x68; // FString [0x2]
		constexpr auto nInitialIndex = 0x88; // int32_t
		constexpr auto bUserMustClose = 0x8c; // char : 1
		constexpr auto sButtonName = 0x90; // FString [0x8]
		constexpr auto pOtherSceneStompFunction = 0x110; // FPointer
		constexpr auto m_CallbackContainer = 0x118; // ObjectProperty
	}

	namespace n_ADynamicBlockingVolume {
		constexpr auto bEnabled = 0x2c0; // char : 1
		constexpr auto bHandleNavMeshRegistrationInGame = 0x2c0; // char : 1
		constexpr auto bHasRegisteredObstacle = 0x2c0; // char : 1
	}

	namespace n_USeqAct_SetLocation {
		constexpr auto bSetLocation = 0x108; // char : 1
		constexpr auto bSetRotation = 0x108; // char : 1
		constexpr auto LocationValue = 0x10c; // FVector
		constexpr auto RotationValue = 0x118; // FRotator
		constexpr auto Target = 0x124; // ObjectProperty
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x80; // char : 1
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x68; // FRawDistributionVector
	}

	namespace n_USeqAct_ModifyProperty {
		constexpr auto Properties = 0x108; // TArray<FPropertyInfo>
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x7c; // float
		constexpr auto Max = 0x80; // float
	}

	namespace n_AWeapon {
		constexpr auto AIController = 0x2f4; // ObjectProperty
	}

	namespace n_USeqAct_AddFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UOnlineRecentPlayersList {
		constexpr auto RecentPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto RecentParties = 0x70; // TArray<FRecentParty>
		constexpr auto LastParty = 0x80; // FRecentParty
		constexpr auto MaxRecentPlayers = 0x98; // int32_t
		constexpr auto MaxRecentParties = 0x9c; // int32_t
		constexpr auto RecentPlayersAddIndex = 0xa0; // int32_t
		constexpr auto RecentPartiesAddIndex = 0xa4; // int32_t
		constexpr auto CurrentPlayers = 0xa8; // TArray<FCurrentPlayerMet>
	}

	namespace n_UTgAnimNodePlayCustomAnim {
		constexpr auto m_bOverrideBlendInTime = 0x12c; // char : 1
		constexpr auto m_bOverrideBlendOutTime = 0x12c; // char : 1
		constexpr auto m_fOverriddenBlendInTime = 0x130; // float
		constexpr auto m_fOverriddenBlendOutTime = 0x134; // float
	}

	namespace n_UTgSeqAct_SetMissionTime {
		constexpr auto m_fMissionTimeSecs = 0x108; // float
		constexpr auto m_fIncrementSecs = 0x10c; // float
		constexpr auto m_fMissionTimeRemaining = 0x110; // float
	}

	namespace n_ATgEmitterCrashlanding {
		constexpr auto m_PrimaryMesh = 0x294; // ComponentProperty
		constexpr auto m_SecondaryMesh = 0x29c; // ComponentProperty
		constexpr auto ParticleDurationAfterImpact = 0x2a4; // float
		constexpr auto m_LensFlare = 0x2a8; // ComponentProperty
		constexpr auto m_AudioComponent = 0x2b0; // ComponentProperty
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // char : 1
	}

	namespace n_UUIScene_UIShopPurchaseConfirm {
		constexpr auto m_mcName = 0x154; // ObjectProperty
		constexpr auto m_mcOffer = 0x15c; // ObjectProperty
		constexpr auto m_mcRarity = 0x164; // ObjectProperty
		constexpr auto m_mcDesc = 0x16c; // ObjectProperty
		constexpr auto m_mcSale = 0x174; // ObjectProperty
		constexpr auto m_mcIncludesItems = 0x17c; // ObjectProperty
		constexpr auto m_mcHoverName = 0x184; // ObjectProperty
		constexpr auto m_mcHoverDesc = 0x18c; // ObjectProperty
		constexpr auto m_mcCompletePurchase = 0x194; // ObjectProperty
		constexpr auto m_mcOwnedCrownsContainer = 0x19c; // ObjectProperty
		constexpr auto m_mcPurchased = 0x1a4; // ObjectProperty
		constexpr auto m_pPurchaseItems = 0x1ac; // ObjectProperty
		constexpr auto m_pPrevArrow = 0x1b4; // ObjectProperty
		constexpr auto m_pNextArrow = 0x1bc; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x1c4; // ObjectProperty
		constexpr auto m_pRotator = 0x1cc; // ObjectProperty
		constexpr auto m_pPurchaseCrownsButton = 0x1d4; // ObjectProperty
		constexpr auto m_pPurchaseCrownsButtonKey = 0x1dc; // ObjectProperty
		constexpr auto m_pPurchaseItemButton = 0x1e4; // ObjectProperty
		constexpr auto m_pOwnedCrowns = 0x1ec; // ObjectProperty
		constexpr auto m_pItemPrice = 0x1f4; // ObjectProperty
		constexpr auto m_grInput = 0x1fc; // ObjectProperty
		constexpr auto m_pPurchaseItemAction = 0x204; // ObjectProperty
		constexpr auto m_pPurchaseCrownsAction = 0x20c; // ObjectProperty
	}

	namespace n_UAmbientOcclusionEffect {
		constexpr auto OcclusionColor = 0x88; // FLinearColor
		constexpr auto OcclusionPower = 0x98; // float
		constexpr auto OcclusionScale = 0x9c; // float
		constexpr auto OcclusionBias = 0xa0; // float
		constexpr auto MinOcclusion = 0xa4; // float
		constexpr auto SSAO2 = 0xa8; // char : 1
		constexpr auto bAngleBasedSSAO = 0xa8; // char : 1
		constexpr auto OcclusionRadius = 0xac; // float
		constexpr auto OcclusionAttenuation = 0xb0; // float
		constexpr auto OcclusionQuality = 0xb4; // EAmbientOcclusionQuality
		constexpr auto OcclusionFadeoutMinDistance = 0xb8; // float
		constexpr auto OcclusionFadeoutMaxDistance = 0xbc; // float
		constexpr auto HaloDistanceThreshold = 0xc0; // float
		constexpr auto HaloDistanceScale = 0xc4; // float
		constexpr auto HaloOcclusion = 0xc8; // float
		constexpr auto EdgeDistanceThreshold = 0xcc; // float
		constexpr auto EdgeDistanceScale = 0xd0; // float
		constexpr auto FilterDistanceScale = 0xd4; // float
		constexpr auto FilterSize = 0xd8; // int32_t
		constexpr auto HistoryConvergenceTime = 0xdc; // float
		constexpr auto HistoryWeightConvergenceTime = 0xe0; // float
	}

	namespace n_UAnimNodeBlendBySpeed {
		constexpr auto Speed = 0x144; // float
		constexpr auto LastChannel = 0x148; // int32_t
		constexpr auto BlendUpTime = 0x14c; // float
		constexpr auto BlendDownTime = 0x150; // float
		constexpr auto BlendDownPerc = 0x154; // float
		constexpr auto Constraints = 0x158; // TArray<float>
		constexpr auto bUseAcceleration = 0x168; // char : 1
		constexpr auto BlendUpDelay = 0x16c; // float
		constexpr auto BlendDownDelay = 0x170; // float
		constexpr auto BlendDelayRemaining = 0x174; // float
	}

	namespace n_USeqAct_SetObject {
		constexpr auto DefaultValue = 0x108; // ObjectProperty
		constexpr auto Value = 0x110; // ObjectProperty
	}

	namespace n_UGFxAction_SetVariable {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_UTgInventoryObject_Listen_Combo_Fernando {
		constexpr auto m_nNumContacts = 0xd0; // int32_t
	}

	namespace n_UTgAnimBlendByPaladinsCharacter {
		constexpr auto m_WeaponMeshActor = 0x168; // ObjectProperty
		constexpr auto m_SubNodeEquipSlot = 0x170; // TG_EQUIP_POINT
		constexpr auto m_ChildParams = 0x174; // FChildAnimParameters [0x11]
		constexpr auto m_nChildAnimStack = 0x52c; // TArray<EPalCharParams>
		constexpr auto m_nCustomRetrieveIndex = 0x53c; // int32_t
		constexpr auto m_bBlendToIdleOnInterruptInspect = 0x540; // char : 1
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x68; // TArray<ObjectProperty>
	}

	namespace n_ATgDeploy_BombKingStickyBomb {
		constexpr auto r_bDetonated = 0x448; // char : 1
		constexpr auto c_bSuppressExplosion = 0x448; // char : 1
		constexpr auto r_bShouldDetach = 0x448; // char : 1
		constexpr auto r_StuckPlayer = 0x44c; // ObjectProperty
		constexpr auto m_StuckSocket = 0x454; // FName
		constexpr auto m_CachedPlayer = 0x45c; // ObjectProperty
		constexpr auto r_HitNormal = 0x464; // FVector
		constexpr auto m_fCachedCollisionRadius = 0x470; // float
		constexpr auto m_fCachedCollisionHeight = 0x474; // float
		constexpr auto m_GetStuckFx = 0x478; // ObjectProperty
		constexpr auto m_StickOtherFx = 0x480; // ObjectProperty
		constexpr auto r_StuckRotation = 0x488; // FRotator
		constexpr auto r_CartOffset = 0x494; // FVector
		constexpr auto r_StuckGeometry = 0x4a0; // ObjectProperty
		constexpr auto r_nOriginalProjectileID = 0x4a8; // int32_t
		constexpr auto r_fFXDamageRadius = 0x4ac; // float
		constexpr auto r_fFXEffectiveRadius = 0x4b0; // float
		constexpr auto m_CollisionProxy = 0x4b4; // ObjectProperty
		constexpr auto m_PendingCollisions = 0x4bc; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimBlendByCatapult {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_ATgMinionGoal {
		constexpr auto m_nLaneNum = 0x378; // int32_t
		constexpr auto m_nTaskForce = 0x37c; // int32_t
		constexpr auto m_EndPoint = 0x380; // ObjectProperty
		constexpr auto m_bUseForFinalDestination = 0x388; // char : 1
	}

	namespace n_UUIScene_UIFooterGamepad {
		constexpr auto m_Option = 0x154; // FFooterOption [0x8]
		constexpr auto m_nInputRegisteredCallbackHandle = 0x374; // int32_t
		constexpr auto m_nInputDisplayNamesChangedCallbackHandle = 0x378; // int32_t
		constexpr auto m_bFrozen = 0x37c; // char : 1
		constexpr auto m_CachedInputGamepadKeys = 0x380; // TArray<int32_t>
		constexpr auto m_CachedInputDisplay = 0x390; // TArray<FString>
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_ATgKismetTestActor {
		constexpr auto m_nTestCount = 0x2d0; // int32_t
		constexpr auto r_nCurrentTest = 0x2d4; // int32_t
		constexpr auto r_nPassCount = 0x2d8; // int32_t
		constexpr auto r_nFailCount = 0x2dc; // int32_t
		constexpr auto c_aTextures = 0x2e0; // TArray<ObjectProperty>
		constexpr auto c_PassSound = 0x2f0; // ObjectProperty
		constexpr auto c_FailSound = 0x2f8; // ObjectProperty
		constexpr auto c_aResultActors = 0x300; // TArray<ObjectProperty>
	}

	namespace n_APostProcessVolume {
		constexpr auto Priority = 0x2bc; // float
		constexpr auto bOverrideWorldPostProcessChain = 0x2c0; // char : 1
		constexpr auto bEnabled = 0x2c0; // char : 1
		constexpr auto Settings = 0x2c4; // FPostProcessSettings
		constexpr auto NextLowerPriorityVolume = 0x444; // ObjectProperty
	}

	namespace n_UMaterialExpressionTerrainLayerWeight {
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto Base = 0xb8; // FExpressionInput
		constexpr auto Layer = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewWeight = 0x128; // float
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_USeqEvent_MobileSwipe {
		constexpr auto Tolerance = 0x13c; // float
		constexpr auto MinDistance = 0x140; // float
		constexpr auto InitialTouch = 0x144; // FVector2D
		constexpr auto TouchedActors = 0x14c; // TArray<ObjectProperty>
		constexpr auto TraceDistance = 0x15c; // float
	}

	namespace n_UDrawConeComponent {
		constexpr auto ConeColor = 0x24c; // FColor
		constexpr auto ConeRadius = 0x250; // float
		constexpr auto ConeAngle = 0x254; // float
		constexpr auto ConeSides = 0x258; // int32_t
	}

	namespace n_ATgDeploy_EffectSpots {
		constexpr auto r_EffectSpots = 0x448; // FEffectSpotInfo [0x64]
		constexpr auto m_nNewSpotIndex = 0x1578; // int32_t
		constexpr auto m_CollisionProxy = 0x157c; // ObjectProperty
		constexpr auto m_fFirstPassRadius = 0x1584; // float
		constexpr auto m_TouchingActors = 0x1588; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0x1598; // TArray<FEffectSpotTarget>
		constexpr auto m_bUsesEffectRefresh = 0x15a8; // char : 1
		constexpr auto m_fLastRefreshTime = 0x15ac; // float
		constexpr auto m_fMinRefreshTime = 0x15b0; // float
		constexpr auto c_SpotFX = 0x15b4; // FEffectSpotFXInfo [0x64]
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0xb0; // FExpressionInput
		constexpr auto InputName = 0xe4; // FString
		constexpr auto Description = 0xf4; // FString
		constexpr auto Id = 0x104; // FGuid
		constexpr auto InputType = 0x114; // EFunctionInputType
		constexpr auto PreviewValue = 0x120; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0x130; // char : 1
		constexpr auto bCompilingFunctionPreview = 0x130; // char : 1
		constexpr auto SortPriority = 0x134; // int32_t
	}

	namespace n_ATgDevice_Scope {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaf4; // FPointer
		constexpr auto m_bDelayMoveSpeedPenalty = 0xafc; // char : 1
		constexpr auto m_bIsZoomed = 0xafc; // char : 1
	}

	namespace n_UUIDataManager {
		constexpr auto m_CommonData = 0x70; // ObjectProperty
		constexpr auto m_ChampionData = 0x78; // ObjectProperty
		constexpr auto m_Social = 0x80; // ObjectProperty
		constexpr auto m_LeagueMgr = 0x88; // ObjectProperty
		constexpr auto m_Goals = 0x90; // ObjectProperty
		constexpr auto m_Queues = 0x98; // ObjectProperty
		constexpr auto m_Esports = 0xa0; // ObjectProperty
		constexpr auto m_Chat = 0xa8; // ObjectProperty
		constexpr auto m_Match = 0xb0; // ObjectProperty
		constexpr auto m_AcquisitionMgr = 0xb8; // ObjectProperty
		constexpr auto m_DataDirector = 0xc0; // ObjectProperty
		constexpr auto m_Data = 0xc8; // TArray<ObjectProperty>
		constexpr auto m_RestrictedClasses = 0xd8; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0xb0; // ObjectProperty
		constexpr auto FontTexturePage = 0xb8; // int32_t
	}

	namespace n_UNxForceFieldCylindricalComponent {
		constexpr auto RadialStrength = 0x2bc; // float
		constexpr auto RotationalStrength = 0x2c0; // float
		constexpr auto LiftStrength = 0x2c4; // float
		constexpr auto ForceRadius = 0x2c8; // float
		constexpr auto ForceTopRadius = 0x2cc; // float
		constexpr auto LiftFalloffHeight = 0x2d0; // float
		constexpr auto EscapeVelocity = 0x2d4; // float
		constexpr auto ForceHeight = 0x2d8; // float
		constexpr auto HeightOffset = 0x2dc; // float
		constexpr auto UseSpecialRadialForce = 0x2e0; // char : 1
		constexpr auto Kernel = 0x2e4; // FPointer
	}

	namespace n_ATgHelpTipActor {
		constexpr auto m_strTitle = 0x280; // FString
		constexpr auto m_strTip = 0x290; // FString
		constexpr auto m_nGameTipId = 0x2a0; // int32_t
		constexpr auto m_fAlpha = 0x2a4; // float
		constexpr auto m_fAlphaNearDistanceSq = 0x2a8; // float
		constexpr auto m_fAlphaFarDistanceSq = 0x2ac; // float
	}

	namespace n_ATgModifyPawnPropertiesVolume {
		constexpr auto m_nMapObjectId = 0x2bc; // int32_t
		constexpr auto m_bDisableJump = 0x2c0; // char : 1
		constexpr auto m_bDisableBlockActors = 0x2c0; // char : 1
		constexpr auto m_bDisableHanging = 0x2c0; // char : 1
		constexpr auto m_bDisableAllDevices = 0x2c0; // char : 1
		constexpr auto m_bTriggerUseEvent = 0x2c0; // char : 1
		constexpr auto m_bOneWayMovement = 0x2c0; // char : 1
		constexpr auto m_vOnewWay = 0x2c4; // FRotator
		constexpr auto m_DirArrow = 0x2d0; // ComponentProperty
		constexpr auto s_nLootTableId = 0x2d8; // int32_t
	}

	namespace n_USeqAct_SetSoundMode {
		constexpr auto SoundMode = 0x108; // ObjectProperty
		constexpr auto bTopPriority = 0x110; // char : 1
	}

	namespace n_UMobileMenuScene {
		constexpr auto MenuName = 0x60; // FString
		constexpr auto MenuObjects = 0x70; // TArray<ObjectProperty>
		constexpr auto SceneCaptionFont = 0x80; // ObjectProperty
		constexpr auto InputOwner = 0x88; // ObjectProperty
		constexpr auto bSceneDoesNotRequireInput = 0x90; // char : 1
		constexpr auto bRelativeLeft = 0x90; // char : 1
		constexpr auto bRelativeTop = 0x90; // char : 1
		constexpr auto bRelativeWidth = 0x90; // char : 1
		constexpr auto bRelativeHeight = 0x90; // char : 1
		constexpr auto bApplyGlobalScaleLeft = 0x90; // char : 1
		constexpr auto bApplyGlobalScaleTop = 0x90; // char : 1
		constexpr auto bApplyGlobalScaleWidth = 0x90; // char : 1
		constexpr auto bApplyGlobalScaleHeight = 0x90; // char : 0
		constexpr auto TouchpadIndex = 0x94; // char
		constexpr auto Left = 0x98; // float
		constexpr auto Top = 0x9c; // float
		constexpr auto Width = 0xa0; // float
		constexpr auto Height = 0xa4; // float
		constexpr auto InitialLeft = 0xa8; // float
		constexpr auto InitialTop = 0xac; // float
		constexpr auto InitialWidth = 0xb0; // float
		constexpr auto InitialHeight = 0xb4; // float
		constexpr auto AuthoredGlobalScale = 0xb8; // float
		constexpr auto Opacity = 0xbc; // float
		constexpr auto UITouchSound = 0xc0; // ObjectProperty
		constexpr auto UIUnTouchSound = 0xc8; // ObjectProperty
	}

	namespace n_UPBRuleNodeCycle {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatSize = 0x74; // float
		constexpr auto CycleSize = 0x78; // int32_t
		constexpr auto bFixRepeatSize = 0x7c; // char : 1
	}

	namespace n_UNavMeshGoal_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x7c; // FVector
	}

	namespace n_ATgDevice_Mount {
		constexpr auto m_bForceFireDueToRespawn = 0xaf0; // char : 1
		constexpr auto m_bDismountProtection = 0xaf0; // char : 1
		constexpr auto m_fZoomDurationOverride = 0xaf4; // float
		constexpr auto s_nMountHealthRemaining = 0xaf8; // int32_t
		constexpr auto m_nAutoReloadTransactionID = 0xafc; // int32_t
		constexpr auto m_CachedInhand = 0xb00; // ObjectProperty
		constexpr auto m_fAutoMountDismountProtectionDuration = 0xb08; // float
	}

	namespace n_UUIData_RebindCommand {
		constexpr auto m_nCommandIndex = 0x60; // int32_t
		constexpr auto m_nCaptureAlt = 0x64; // int32_t
	}

	namespace n_UPComBrowserInteraction {
		constexpr auto VfTable_FCallbackEventDevice = 0xb0; // FPointer
	}

	namespace n_UTgSeqEvent_InputReceived {
		constexpr auto bAllowInputDisabling = 0x128; // char : 1
	}

	namespace n_ATgTeamBlocker {
		constexpr auto m_bBlockFlagCarrier = 0x298; // char : 1
		constexpr auto m_bBlockFriendlyFire = 0x298; // char : 1
	}

	namespace n_UMaterialFunction {
		constexpr auto StateId = 0x60; // FGuid
		constexpr auto Description = 0x70; // FString
		constexpr auto bExposeToLibrary = 0x80; // char : 1
		constexpr auto bReentrantFlag = 0x80; // char : 1
		constexpr auto LibraryCategories = 0x84; // TArray<FString>
		constexpr auto FunctionExpressions = 0x94; // TArray<ObjectProperty>
	}

	namespace n_ATgTeleportPlayerVolume {
		constexpr auto TeleportLocation = 0x2bc; // TgTeleportVolumeType
		constexpr auto nMessageId = 0x2c0; // int32_t
		constexpr auto bTeleportBots = 0x2c4; // char : 1
		constexpr auto bTeleportPlayers = 0x2c4; // char : 1
	}

	namespace n_UUIFooter {
		constexpr auto m_mcKey = 0x244; // ObjectProperty [0x5]
		constexpr auto m_mcPurchaseBlocker = 0x26c; // ObjectProperty
		constexpr auto m_fPurhcaseBlockerTimeout = 0x274; // float
		constexpr auto m_nInputRegisteredCallbackHandle = 0x278; // int32_t
		constexpr auto m_nInputDisplayNamesChangedCallbackHandle = 0x27c; // int32_t
	}

	namespace n_AGameCrowdReplicationActor {
		constexpr auto Spawner = 0x280; // ObjectProperty
		constexpr auto bSpawningActive = 0x288; // char : 1
		constexpr auto DestroyAllCount = 0x28c; // int32_t
	}

	namespace n_UTgEffect {
		constexpr auto m_EffectGroup = 0x60; // ObjectProperty
		constexpr auto m_nEffectID = 0x68; // int32_t
		constexpr auto m_nPropertyId = 0x6c; // int32_t
		constexpr auto m_nCalcMethodCode = 0x70; // int32_t
		constexpr auto m_bUseOnInterval = 0x74; // char : 1
		constexpr auto m_bRemovable = 0x74; // char : 1
		constexpr auto m_bAllowStacking = 0x74; // char : 1
		constexpr auto m_bApplyToProperty = 0x74; // char : 1
		constexpr auto m_nPropertyValueId = 0x78; // int32_t
		constexpr auto m_fCurrent = 0x7c; // float
		constexpr auto m_fBase = 0x80; // float
		constexpr auto m_fMinimum = 0x84; // float
		constexpr auto m_fMaximum = 0x88; // float
		constexpr auto m_fScalingFactor = 0x8c; // float
		constexpr auto m_fStaticValueOffset = 0x90; // float
		constexpr auto m_MaxKnockbackZ = 0x94; // float
		constexpr auto m_MinKnockbackZ = 0x98; // float
		constexpr auto m_KnockbackZMultiplier = 0x9c; // float
	}

	namespace n_APlayerStart {
		constexpr auto bEnabled = 0x378; // char : 1
		constexpr auto bPrimaryStart = 0x378; // char : 1
		constexpr auto bBestStart = 0x378; // char : 1
		constexpr auto TeamIndex = 0x37c; // int32_t
		constexpr auto Score = 0x380; // int32_t
		constexpr auto SelectionIndex = 0x384; // int32_t
	}

	namespace n_UTgMapInfo {
		constexpr auto m_EndFocusActor_TF1 = 0x60; // ObjectProperty
		constexpr auto m_EndFocusActor_TF2 = 0x68; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_2 = 0x70; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_3 = 0x78; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_4 = 0x80; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_2 = 0x88; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_3 = 0x90; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_4 = 0x98; // ObjectProperty
		constexpr auto m_OverlayPathMesh = 0xa0; // ObjectProperty
		constexpr auto m_vMapCenter = 0xa8; // FVector2D
		constexpr auto m_vTaskForce1BaseLocation = 0xb0; // FVector2D
		constexpr auto m_vTaskForce2BaseLocation = 0xb8; // FVector2D
		constexpr auto m_fLockViewBufferZoneSize = 0xc0; // float
		constexpr auto m_bSupportsGuardianThrone = 0xc4; // char : 1
		constexpr auto m_LitParticleBrightness = 0xc8; // float
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x74; // float
	}

	namespace n_UMaterialExpressionDepthBiasedBlend {
		constexpr auto bNormalize = 0xb0; // char : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto RGB = 0xb8; // FExpressionInput
		constexpr auto Alpha = 0xec; // FExpressionInput
		constexpr auto Bias = 0x120; // FExpressionInput
	}

	namespace n_UNavMeshPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto MaxPathVisits = 0x68; // int32_t
		constexpr auto bAlwaysCallEvaluateGoal = 0x6c; // char : 1
		constexpr auto bDoPartialAStar = 0x6c; // char : 1
		constexpr auto NumNodesThrownOut = 0x70; // int32_t
		constexpr auto NumNodesProcessed = 0x74; // int32_t
		constexpr auto MaxOpenListSize = 0x78; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NumRallyPoints {
		constexpr auto nRallyPointsThreshold = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bMustBeSameTaskForce = 0x9c; // char : 1
	}

	namespace n_UTgSeqAct_TutorialInstruction {
		constexpr auto nMsgId = 0x108; // int32_t
	}

	namespace n_UUIComponent_MapTeamMarker {
		constexpr auto m_fSize = 0x120; // float
		constexpr auto m_fRadius = 0x124; // float
		constexpr auto m_fOffsetX = 0x128; // float
		constexpr auto m_fOffsetY = 0x12c; // float
		constexpr auto m_mcFrame = 0x130; // ObjectProperty
		constexpr auto m_mcPulse = 0x138; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget_LastAttacker {
		constexpr auto bSkipPawnNotify = 0x94; // char : 1
		constexpr auto bMustBeHittable = 0x94; // char : 1
		constexpr auto IgnoreTargetType = 0x98; // ECombatTargetType
	}

	namespace n_UUIHudVoiceChat {
		constexpr auto m_fAlphaSpeaking = 0x244; // float
		constexpr auto m_fAlphaNotSpeaking = 0x248; // float
		constexpr auto m_fAlphaMuted = 0x24c; // float
		constexpr auto m_fFadeTime = 0x250; // float
		constexpr auto m_mcAllyPlayers = 0x254; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerLabels = 0x27c; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerSpeakIcons = 0x2a4; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerIcons = 0x2cc; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayers = 0x2f4; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerLabels = 0x31c; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerSpeakIcons = 0x344; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerIcons = 0x36c; // ObjectProperty [0x5]
		constexpr auto m_nmAllyPlayerIcons = 0x394; // FName [0x5]
		constexpr auto m_nmEnemyPlayerIcons = 0x3bc; // FName [0x5]
		constexpr auto m_LocalPlayerNetId = 0x3e4; // FUniqueNetId
	}

	namespace n_USequenceVariable {
		constexpr auto VarName = 0x98; // FName
	}

	namespace n_ATgDeploy_SmokeScreen {
		constexpr auto m_CachedPawnOwner = 0x48c; // ObjectProperty
		constexpr auto m_bHasAppliedOwnerStealth = 0x494; // char : 1
		constexpr auto r_fRadiusForFX = 0x498; // float
	}

	namespace n_UOnlinePlayerStorage {
		constexpr auto VersionNumber = 0x60; // int32_t
		constexpr auto VersionSettingsId = 0x64; // int32_t
		constexpr auto SaveCountSettingId = 0x68; // int32_t
		constexpr auto ProfileSettings = 0x6c; // TArray<FOnlineProfileSetting>
		constexpr auto ProfileMappings = 0x7c; // TArray<FSettingsPropertyPropertyMetaData>
		constexpr auto AsyncState = 0x8c; // EOnlinePlayerStorageAsyncState
		constexpr auto DeviceID = 0x90; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsChestInRadius {
		constexpr auto Radius = 0x98; // float
		constexpr auto SeenAsOpen = 0x9c; // char : 1
		constexpr auto CheckLOS = 0x9c; // char : 1
	}

	namespace n_UTgSeqEvent_ReachShards {
		constexpr auto nShardCount = 0x128; // int32_t
	}

	namespace n_USeqAct_ConsoleCommand {
		constexpr auto Command = 0x108; // FString
		constexpr auto Commands = 0x118; // TArray<FString>
	}

	namespace n_USoundNodeWave {
		constexpr auto CompressionQuality = 0x74; // int32_t
		constexpr auto bForceRealTimeDecompression = 0x78; // char : 1
		constexpr auto bLoopingSound = 0x78; // char : 1
		constexpr auto bDynamicResource = 0x78; // char : 1
		constexpr auto bUseTTS = 0x78; // char : 1
		constexpr auto bProcedural = 0x78; // char : 1
		constexpr auto bMature = 0x78; // char : 1
		constexpr auto bManualWordWrap = 0x78; // char : 1
		constexpr auto bSingleLine = 0x78; // char : 1
		constexpr auto TTSSpeaker = 0x7c; // ETTSSpeaker
		constexpr auto DecompressionType = 0x7d; // EDecompressionType
		constexpr auto MobileDetailMode = 0x7e; // EDetailMode
		constexpr auto SpokenText = 0x80; // FString
		constexpr auto Volume = 0x90; // float
		constexpr auto Pitch = 0x94; // float
		constexpr auto Duration = 0x98; // float
		constexpr auto NumChannels = 0x9c; // int32_t
		constexpr auto SampleRate = 0xa0; // int32_t
		constexpr auto RawData = 0xa4; // FUntypedBulkData_Mirror
		constexpr auto VorbisDecompressor = 0xe4; // FPointer
		constexpr auto RawPCMData = 0xec; // FPointer
		constexpr auto RawPCMDataSize = 0xf4; // int32_t
		constexpr auto CompressedPCData = 0xf8; // FUntypedBulkData_Mirror
		constexpr auto CompressedXbox360Data = 0x138; // FUntypedBulkData_Mirror
		constexpr auto CompressedDingoData = 0x178; // FUntypedBulkData_Mirror
		constexpr auto CompressedPS3Data = 0x1b8; // FUntypedBulkData_Mirror
		constexpr auto CompressedWiiUData = 0x1f8; // FUntypedBulkData_Mirror
		constexpr auto CompressedIPhoneData = 0x238; // FUntypedBulkData_Mirror
		constexpr auto CompressedFlashData = 0x278; // FUntypedBulkData_Mirror
		constexpr auto CompressedOrbisData = 0x2b8; // FUntypedBulkData_Mirror
		constexpr auto ResourceID = 0x2f8; // int32_t
		constexpr auto ResourceSize = 0x2fc; // int32_t
		constexpr auto ResourceData = 0x300; // FPointer
		constexpr auto Subtitles = 0x308; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0x318; // TArray<FLocalizedSubtitle>
	}

	namespace n_UUIComponent_BattlePassRewardTier {
		constexpr auto m_pLayoutNormal = 0x120; // ObjectProperty
		constexpr auto m_pLayoutBonus = 0x128; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetMapLane {
		constexpr auto m_nMapLane = 0x108; // int32_t
	}

	namespace n_ATgProj_Flare {
		constexpr auto m_bStartedPulse = 0x56c; // char : 1
		constexpr auto m_fLifetimeForPhysicsSubstep = 0x570; // float
	}

	namespace n_UUIHudResultBG {
		constexpr auto m_nRank = 0x244; // int32_t
		constexpr auto m_nKills = 0x248; // int32_t
		constexpr auto m_nPlayer = 0x24c; // int32_t
		constexpr auto m_nTestRank = 0x250; // int32_t
		constexpr auto m_bEliminated = 0x254; // char : 1
		constexpr auto m_bShownAlready = 0x254; // char : 1
		constexpr auto m_fBlurTimer = 0x258; // float
		constexpr auto m_fDisplayTimer = 0x25c; // float
		constexpr auto m_fMinimizeTimer = 0x260; // float
		constexpr auto m_fDisappearTimer = 0x264; // float
		constexpr auto m_fMenuFocusTimer = 0x268; // float
		constexpr auto m_mcPlayer = 0x26c; // ObjectProperty
		constexpr auto m_mcPlayerName = 0x274; // ObjectProperty
		constexpr auto m_mcPlayerRank = 0x27c; // ObjectProperty
		constexpr auto m_mcPlayerFade = 0x284; // ObjectProperty
		constexpr auto m_mcPlayerLineA = 0x28c; // ObjectProperty
		constexpr auto m_mcPlayerLineB = 0x294; // ObjectProperty
		constexpr auto m_mcPlayerElims = 0x29c; // ObjectProperty
		constexpr auto m_mcPlayerKills = 0x2a4; // ObjectProperty
		constexpr auto m_mcPlayerKiller = 0x2ac; // ObjectProperty
		constexpr auto m_mcDefeat = 0x2b4; // ObjectProperty
		constexpr auto m_mcDefeatTitle = 0x2bc; // ObjectProperty
		constexpr auto m_mcDefeatFlags = 0x2c4; // ObjectProperty
		constexpr auto m_mcDefeatFrame = 0x2cc; // ObjectProperty
		constexpr auto m_mcButton = 0x2d4; // ObjectProperty [0x3]
		constexpr auto m_mcVictory = 0x2ec; // ObjectProperty [0x3]
		constexpr auto m_mcTutorialBanner = 0x304; // ObjectProperty
		constexpr auto m_mcTutorialBackground = 0x30c; // ObjectProperty
		constexpr auto m_pMenuGroup = 0x314; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByHealth {
		constexpr auto m_HealthChildren = 0x168; // TArray<float>
		constexpr auto m_TgPawn = 0x178; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearbyTargetTypeCount {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bMustBeInForwardCone = 0x9c; // char : 1
		constexpr auto TargetTypeThreshold = 0xa0; // int32_t
		constexpr auto TargetType = 0xa4; // ECombatTargetType
		constexpr auto ForwardConeAngle = 0xa8; // float
	}

	namespace n_UTgAnimBlendByStartingPosture {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_StartingPosture = 0x170; // TG_POSTURE
		constexpr auto m_bExpired = 0x174; // char : 1
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x68; // EParticleAxisLock
	}

	namespace n_UTerrainMaterial {
		constexpr auto LocalToMapping = 0x60; // FMatrix
		constexpr auto MappingType = 0xa0; // ETerrainMappingType
		constexpr auto MappingScale = 0xa4; // float
		constexpr auto MappingRotation = 0xa8; // float
		constexpr auto MappingPanU = 0xac; // float
		constexpr auto MappingPanV = 0xb0; // float
		constexpr auto Material = 0xb4; // ObjectProperty
		constexpr auto DisplacementMap = 0xbc; // ObjectProperty
		constexpr auto DisplacementScale = 0xc4; // float
	}

	namespace n_UTgAnimBlendBySkydive {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileDeployableActive {
		constexpr auto m_nActiveDeployableCount = 0xcc; // int32_t
	}

	namespace n_UTgDeviceForm_FragGrenade {
		constexpr auto m_FragGrenadeBlendList1P = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_FragGrenadeBlendList3P = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_LobbySlotItem {
		constexpr auto m_mcText = 0x120; // ObjectProperty
		constexpr auto m_mcLock = 0x128; // ObjectProperty
		constexpr auto m_mcRarity = 0x130; // ObjectProperty
		constexpr auto m_mcEquipped = 0x138; // ObjectProperty
		constexpr auto m_mcExclusive = 0x140; // ObjectProperty
		constexpr auto m_mcTypeIcon = 0x148; // ObjectProperty
		constexpr auto m_mcIcon = 0x150; // ObjectProperty
		constexpr auto m_mcAudio = 0x158; // ObjectProperty
		constexpr auto m_mcRented = 0x160; // ObjectProperty
		constexpr auto m_mcRentalDuration = 0x168; // ObjectProperty
		constexpr auto m_mcRentalDurationText = 0x170; // ObjectProperty
		constexpr auto m_mcPrice = 0x178; // ObjectProperty
		constexpr auto m_mcPriceA = 0x180; // ObjectProperty
		constexpr auto m_mcPriceB = 0x188; // ObjectProperty
		constexpr auto m_mcPrevPrice = 0x190; // ObjectProperty
		constexpr auto m_mcPrevPriceA = 0x198; // ObjectProperty
		constexpr auto m_mcPrevPriceAStrike = 0x1a0; // ObjectProperty
		constexpr auto m_mcPrevPriceB = 0x1a8; // ObjectProperty
		constexpr auto m_mcPrevPriceBStrike = 0x1b0; // ObjectProperty
		constexpr auto m_bHovered = 0x1b8; // char : 1
	}

	namespace n_UTgDeviceFire_DeployOnLocation {
		constexpr auto m_TargetLocation = 0x270; // FVector
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x60; // int32_t
		constexpr auto bEnabled = 0x64; // char : 1
		constexpr auto ConvertedModules = 0x64; // char : 1
		constexpr auto RequiredModule = 0x68; // ObjectProperty
		constexpr auto Modules = 0x70; // TArray<ObjectProperty>
		constexpr auto TypeDataModule = 0x80; // ObjectProperty
		constexpr auto SpawnModule = 0x88; // ObjectProperty
		constexpr auto EventGenerator = 0x90; // ObjectProperty
		constexpr auto SpawningModules = 0x98; // TArray<ObjectProperty>
		constexpr auto SpawnModules = 0xa8; // TArray<ObjectProperty>
		constexpr auto UpdateModules = 0xb8; // TArray<ObjectProperty>
		constexpr auto OrbitModules = 0xc8; // TArray<ObjectProperty>
		constexpr auto EventReceiverModules = 0xd8; // TArray<ObjectProperty>
		constexpr auto PeakActiveParticles = 0xe8; // int32_t
	}

	namespace n_USpeedTree {
		constexpr auto bLegacySpeedTree = 0x60; // char : 1
		constexpr auto SRH = 0x64; // FPointer
		constexpr auto LeafStaticShadowOpacity = 0x6c; // float
		constexpr auto Branch1Material = 0x70; // ObjectProperty
		constexpr auto Branch2Material = 0x78; // ObjectProperty
		constexpr auto FrondMaterial = 0x80; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x88; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x90; // ObjectProperty
		constexpr auto BillboardMaterial = 0x98; // ObjectProperty
		constexpr auto Branch1MaterialNoScreenDoor = 0xa0; // ObjectProperty
		constexpr auto Branch2MaterialNoScreenDoor = 0xa8; // ObjectProperty
		constexpr auto FrondMaterialNoScreenDoor = 0xb0; // ObjectProperty
		constexpr auto LeafCardMaterialNoScreenDoor = 0xb8; // ObjectProperty
		constexpr auto LeafMeshMaterialNoScreenDoor = 0xc0; // ObjectProperty
		constexpr auto BillboardMaterialNoScreenDoor = 0xc8; // ObjectProperty
		constexpr auto WindStrength = 0xd0; // float
		constexpr auto WindDirection = 0xd4; // FVector
	}

	namespace n_UTgInventoryObject_Listen_HitWithDeviceSpecial {
		constexpr auto m_bSkipActiveCheck = 0xd0; // char : 1
		constexpr auto m_bSkipStartCooldown = 0xd0; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_EnergyCharge {
		constexpr auto m_CachedTgPawn = 0xc8; // ObjectProperty
		constexpr auto m_fChargeMultiplierDamageDealt = 0xd0; // float
		constexpr auto m_fChargeMultiplierDamageTaken = 0xd4; // float
		constexpr auto m_fChargeMultiplierPetDamage = 0xd8; // float
	}

	namespace n_URB_RadialImpulseComponent {
		constexpr auto ImpulseFalloff = 0x24c; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x250; // float
		constexpr auto ImpulseRadius = 0x254; // float
		constexpr auto bVelChange = 0x258; // char : 1
		constexpr auto bCauseFracture = 0x258; // char : 1
		constexpr auto PreviewSphere = 0x25c; // ComponentProperty
	}

	namespace n_UParticleLightEnvironmentComponent {
		constexpr auto ReferenceCount = 0x158; // int32_t
		constexpr auto NumPooledReuses = 0x15c; // int32_t
		constexpr auto SharedInstigator = 0x160; // ObjectProperty
		constexpr auto SharedParticleSystem = 0x168; // ObjectProperty
		constexpr auto bAllowDLESharing = 0x170; // char : 1
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto BoolProp = 0x70; // FPointer
		constexpr auto BitMask = 0x78; // int32_t
		constexpr auto ResetBool = 0x7c; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_ReloadCard {
		constexpr auto m_nPendingHitCounter = 0xd0; // int32_t
	}

	namespace n_ACoverReplicator {
		constexpr auto CoverReplicationData = 0x280; // TArray<FCoverReplicationInfo>
	}

	namespace n_ATgGame_RoyaleTutorial {
		constexpr auto c_vZeppelinSpawnLoc = 0x798; // FVector
		constexpr auto c_fZeppelinSpawnRot = 0x7a4; // float
		constexpr auto c_fAutoDeployTime = 0x7a8; // float
		constexpr auto m_bDisenchantEnabled = 0x7ac; // char : 1
		constexpr auto m_bMountEnabled = 0x7ac; // char : 1
		constexpr auto m_bDisplayPrompt = 0x7ac; // char : 1
		constexpr auto m_bClearObjGroup = 0x7ac; // char : 1
		constexpr auto m_bShowTooltip = 0x7ac; // char : 1
		constexpr auto m_bTooltipLeftPosition = 0x7ac; // char : 1
		constexpr auto m_bTutorialCompleted = 0x7ac; // char : 1
		constexpr auto m_sPromptCommand = 0x7b0; // FString
		constexpr auto m_nPromptMessageId = 0x7c0; // int32_t
		constexpr auto m_nCurrentObjMessageId = 0x7c4; // int32_t
		constexpr auto m_nTooltipMessageId = 0x7c8; // int32_t
		constexpr auto m_pForgeObjectives = 0x7cc; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0xb0; // char : 1
	}

	namespace n_UTgAIBehaviorAction_Strafe {
		constexpr auto StrafeUpdateTime = 0x9c; // float
		constexpr auto DistanceMultiplier = 0xa0; // float
	}

	namespace n_ATgDevice_RepulsorField {
		constexpr auto r_fAtTheReadyRadius = 0xb34; // float
	}

	namespace n_UUIComponent_ClassSelectInfoPanel {
		constexpr auto m_mcImage = 0x120; // ObjectProperty
		constexpr auto m_mcTitleA = 0x128; // ObjectProperty
		constexpr auto m_mcTitleB = 0x130; // ObjectProperty
		constexpr auto m_mcInfoFrame = 0x138; // ObjectProperty
		constexpr auto m_mcAbility = 0x140; // ObjectProperty
		constexpr auto m_mcAbilityDesc = 0x148; // ObjectProperty
		constexpr auto m_mcAbilityIcon = 0x150; // ObjectProperty
		constexpr auto m_mcAbilityName = 0x158; // ObjectProperty
		constexpr auto m_mcTalentGroup = 0x160; // ObjectProperty
		constexpr auto m_mcTalent = 0x168; // ObjectProperty [0xa]
		constexpr auto m_mcTalentIcon = 0x1b8; // ObjectProperty [0xa]
		constexpr auto m_mcTalentTitle = 0x208; // ObjectProperty [0xa]
		constexpr auto m_mcTalentDesc = 0x258; // ObjectProperty [0xa]
	}

	namespace n_UUIComponent_PortraitBorder {
		constexpr auto m_mcFrame = 0x120; // ObjectProperty
		constexpr auto m_mcLock = 0x128; // ObjectProperty
		constexpr auto m_mcEquippedCheckmark = 0x130; // ObjectProperty
	}

	namespace n_UTgAnimNodeAimOffset_Base {
		constexpr auto m_bBakeAllProfileOffsetsFromAnimations = 0x16c; // char : 1
		constexpr auto m_bPopulateAnimNamesWithPrefixes = 0x16c; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_Combo_BombKing {
		constexpr auto m_HitActors = 0xd0; // TArray<FStickyHitInfo>
	}

	namespace n_USeqAct_AttachToEvent {
		constexpr auto bPreferController = 0x108; // char : 1
	}

	namespace n_ATgNamedAreaVolume {
		constexpr auto m_nMessageId = 0x2bc; // int32_t
		constexpr auto m_PreviewText = 0x2c0; // FString
		constexpr auto m_PlayerStarts = 0x2d0; // TArray<ObjectProperty>
	}

	namespace n_UNavMeshGoalFilter_PolyEncompassesAI {
		constexpr auto OverrideExtentToCheck = 0x6c; // FVector
	}

	namespace n_UTgSeqEvent_UpdateLanePusherCount {
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_ATgDevice_DualWield {
		constexpr auto m_vProjectileSpawnOffset2 = 0xaec; // FVector
		constexpr auto m_bFireLeftWeapon = 0xaf8; // char : 1
	}

	namespace n_ANxCylindricalForceFieldCapsule {
		constexpr auto RenderComponent = 0x304; // ComponentProperty
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Scale = 0x8c; // char : 1
	}

	namespace n_UEdCoordSystem {
		constexpr auto M = 0x60; // FMatrix
		constexpr auto Desc = 0xa0; // FString
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x68; // FName
	}

	namespace n_UTgSeqAct_JoinTeam {
		constexpr auto TeamLeader = 0x108; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Tempest {
		constexpr auto m_BeamTarget1 = 0x2bc; // ObjectProperty
		constexpr auto m_BeamTarget2 = 0x2c4; // ObjectProperty
		constexpr auto m_bBeamActive1 = 0x2cc; // char : 1
		constexpr auto m_bBeamActive2 = 0x2cc; // char : 1
		constexpr auto m_bBeamDirty1 = 0x2cc; // char : 1
		constexpr auto m_bBeamDirty2 = 0x2cc; // char : 1
		constexpr auto m_fBeamStartTime1 = 0x2d0; // float
		constexpr auto m_fBeamStartTime2 = 0x2d4; // float
		constexpr auto m_fBeamOnTime = 0x2d8; // float
	}

	namespace n_URB_BodySetup {
		constexpr auto SleepFamily = 0xb8; // ESleepFamily
		constexpr auto BoneName = 0xbc; // FName
		constexpr auto bFixed = 0xc4; // char : 1
		constexpr auto bNoCollision = 0xc4; // char : 1
		constexpr auto bBlockZeroExtent = 0xc4; // char : 1
		constexpr auto bBlockNonZeroExtent = 0xc4; // char : 1
		constexpr auto bNoBodyShotChecks = 0xc4; // char : 1
		constexpr auto bEnableContinuousCollisionDetection = 0xc4; // char : 1
		constexpr auto bAlwaysFullAnimWeight = 0xc4; // char : 1
		constexpr auto bConsiderForBounds = 0xc4; // char : 1
		constexpr auto PhysMaterial = 0xc8; // ObjectProperty
		constexpr auto MassScale = 0xd0; // float
		constexpr auto CollisionGeom = 0xd4; // TArray<FPointer>
		constexpr auto CollisionGeomScale3D = 0xe4; // TArray<FVector>
		constexpr auto PreCachedPhysScale = 0xf4; // TArray<FVector>
		constexpr auto PreCachedPhysData = 0x104; // TArray<FKCachedConvexData>
		constexpr auto PreCachedPhysDataVersion = 0x114; // int32_t
	}

	namespace n_UGameThirdPersonCameraMode {
		constexpr auto ThirdPersonCam = 0x60; // ObjectProperty
		constexpr auto FOVAngle = 0x68; // float
		constexpr auto BlendTime = 0x6c; // float
		constexpr auto bLockedToViewTarget = 0x70; // char : 1
		constexpr auto bDirectLook = 0x70; // char : 1
		constexpr auto bFollowTarget = 0x70; // char : 1
		constexpr auto bInterpLocation = 0x70; // char : 1
		constexpr auto bUsePerAxisOriginLocInterp = 0x70; // char : 1
		constexpr auto bInterpRotation = 0x70; // char : 1
		constexpr auto bRotInterpSpeedConstant = 0x70; // char : 1
		constexpr auto bDoPredictiveAvoidance = 0x70; // char : 1
		constexpr auto bValidateWorstLoc = 0x70; // char : 0
		constexpr auto bSkipCameraCollision = 0x70; // char : 0
		constexpr auto bSmoothViewOffsetPitchChanges = 0x70; // char : 0
		constexpr auto bApplyDeltaViewOffset = 0x70; // char : 0
		constexpr auto bAdjustDOF = 0x70; // char : 0
		constexpr auto bDOFUpdated = 0x70; // char : 0
		constexpr auto bNoFOVPostProcess = 0x70; // char : 0
		constexpr auto bInterpViewOffsetOnlyForCamTransition = 0x70; // char : 0
		constexpr auto FollowingInterpSpeed_Pitch = 0x74; // float
		constexpr auto FollowingInterpSpeed_Yaw = 0x78; // float
		constexpr auto FollowingInterpSpeed_Roll = 0x7c; // float
		constexpr auto FollowingCameraVelThreshold = 0x80; // float
		constexpr auto OriginLocInterpSpeed = 0x84; // float
		constexpr auto PerAxisOriginLocInterpSpeed = 0x88; // FVector
		constexpr auto OriginRotInterpSpeed = 0x94; // float
		constexpr auto StrafeLeftAdjustment = 0x98; // FVector
		constexpr auto StrafeRightAdjustment = 0xa4; // FVector
		constexpr auto StrafeOffsetScalingThreshold = 0xb0; // float
		constexpr auto StrafeOffsetInterpSpeedIn = 0xb4; // float
		constexpr auto StrafeOffsetInterpSpeedOut = 0xb8; // float
		constexpr auto LastStrafeOffset = 0xbc; // FVector
		constexpr auto RunFwdAdjustment = 0xc8; // FVector
		constexpr auto RunBackAdjustment = 0xd4; // FVector
		constexpr auto RunOffsetScalingThreshold = 0xe0; // float
		constexpr auto RunOffsetInterpSpeedIn = 0xe4; // float
		constexpr auto RunOffsetInterpSpeedOut = 0xe8; // float
		constexpr auto LastRunOffset = 0xec; // FVector
		constexpr auto WorstLocOffset = 0xf8; // FVector
		constexpr auto TargetRelativeCameraOriginOffset = 0x104; // FVector
		constexpr auto ViewOffset = 0x110; // FViewOffsetData
		constexpr auto ViewOffset_ViewportAdjustments = 0x134; // FViewOffsetData [0x6]
		constexpr auto DOF_FalloffExponent = 0x20c; // float
		constexpr auto DOF_BlurKernelSize = 0x210; // float
		constexpr auto DOF_FocusInnerRadius = 0x214; // float
		constexpr auto DOF_MaxNearBlurAmount = 0x218; // float
		constexpr auto DOF_MaxFarBlurAmount = 0x21c; // float
		constexpr auto LastDOFRadius = 0x220; // float
		constexpr auto LastDOFDistance = 0x224; // float
		constexpr auto DOFDistanceInterpSpeed = 0x228; // float
		constexpr auto DOFTraceExtent = 0x22c; // FVector
		constexpr auto DOF_RadiusFalloff = 0x238; // float
		constexpr auto DOF_RadiusRange = 0x23c; // FVector2D
		constexpr auto DOF_RadiusDistRange = 0x244; // FVector2D
		constexpr auto ViewOffsetInterp = 0x24c; // float
		constexpr auto OffsetAdjustmentInterpSpeed = 0x250; // float
		constexpr auto CurrentViewportType = 0x254; // ECameraViewportTypes
	}

	namespace n_ATgDevice_ChargeFernando {
		constexpr auto m_fCooldownReduction = 0xb60; // float
	}

	namespace n_USeqAct_ProjectileFactory {
		constexpr auto PSTemplate = 0x178; // ObjectProperty
		constexpr auto SocketName = 0x180; // FName
		constexpr auto BoneName = 0x188; // FName
	}

	namespace n_ATgDevice_Minigun {
		constexpr auto m_fFireReadiness = 0xaec; // float
		constexpr auto r_nFireReadinessPercent = 0xaf0; // int32_t
		constexpr auto m_nOldFireReadinessPercent = 0xaf4; // int32_t
		constexpr auto m_ForceFeedbackBarrelSpin = 0xaf8; // TArray<ObjectProperty>
		constexpr auto m_ForceFeedbackBarrelFiring = 0xb08; // TArray<ObjectProperty>
	}

	namespace n_UTgInvListener_CooledMags {
		constexpr auto m_CachedSidearm = 0xc8; // ObjectProperty
		constexpr auto m_CachedInhand = 0xd0; // ObjectProperty
		constexpr auto m_fAmmoFillTime = 0xd8; // float
	}

	namespace n_ATgDeviceVolumeInfo {
		constexpr auto V = 0x280; // ObjectProperty
	}

	namespace n_AGameCrowdAgentSM {
		constexpr auto Mesh = 0x500; // ComponentProperty
		constexpr auto MeshColor = 0x508; // ObjectProperty
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x68; // ELocationBoneSocketSource
		constexpr auto SelectionMethod = 0x69; // ELocationBoneSocketSelectionMethod
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto SourceLocations = 0x78; // TArray<FLocationBoneSocketInfo>
		constexpr auto bUpdatePositionEachFrame = 0x88; // char : 1
		constexpr auto bOrientMeshEmitters = 0x88; // char : 1
		constexpr auto bInheritVelocityAtSpawn = 0x88; // char : 1
		constexpr auto SkelMeshActorParamName = 0x8c; // FName
		constexpr auto LastUpdateTime = 0x94; // float
	}

	namespace n_UTgAnimNodeToggleWithTransition_Disengage {
		constexpr auto m_nPendingChildIndex = 0x170; // int32_t
		constexpr auto m_bForceNewActiveChild = 0x174; // char : 1
	}

	namespace n_UTgSkeletalMeshComponent {
		constexpr auto c_bFxApplied = 0x7b4; // char : 1
		constexpr auto c_bIsFemale = 0x7b4; // char : 1
		constexpr auto c_FxList = 0x7b8; // TArray<ObjectProperty>
		constexpr auto c_DatabaseFxList = 0x7c8; // TArray<ObjectProperty>
		constexpr auto c_FxAssemblyData = 0x7d8; // TArray<FFx_AssemblyData>
		constexpr auto m_nAssemblyId = 0x7e8; // int32_t
		constexpr auto m_ChildMeshes = 0x7ec; // TArray<ComponentProperty>
		constexpr auto FPCTranslation = 0x7fc; // FVector
		constexpr auto FPCRotation = 0x808; // FRotator
		constexpr auto FPCScale = 0x814; // FVector
		constexpr auto c_AudioGroupId = 0x820; // int32_t
		constexpr auto c_nForceUpdateAttachmentsInTick = 0x824; // int32_t
		constexpr auto c_HeadShotComponents = 0x828; // TArray<ComponentProperty>
		constexpr auto AnimNotifyPlayParticleEffectEntries = 0x838; // TArray<FAnimNotifyParticleCacheEntry>
		constexpr auto m_nMaterialStackId = 0x848; // int32_t
		constexpr auto m_MaterialStack = 0x84c; // TArray<FMaterialStackInstance>
		constexpr auto m_MeshAccessoryStorage = 0x85c; // TArray<FMeshAccessoryStorage>
	}

	namespace n_UUIData_HeaderTab {
		constexpr auto m_sTitle = 0x60; // FString
		constexpr auto m_nCTACount = 0x70; // int32_t
	}

	namespace n_ANavMeshObstacle {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x280; // FPointer
		constexpr auto bEnabled = 0x288; // char : 1
		constexpr auto bPreserveInternalGeo = 0x288; // char : 1
	}

	namespace n_UUIScene_UICustomGameCreate {
		constexpr auto m_mcTitle = 0x154; // ObjectProperty
		constexpr auto m_mcError = 0x15c; // ObjectProperty
		constexpr auto m_mcWait = 0x164; // ObjectProperty
		constexpr auto m_pNameInput = 0x16c; // ObjectProperty
		constexpr auto m_pPasswordInput = 0x174; // ObjectProperty
		constexpr auto m_pGameTypeInput = 0x17c; // ObjectProperty
		constexpr auto m_pJoinAsSpectatorInput = 0x184; // ObjectProperty
		constexpr auto m_pCreateButton = 0x18c; // ObjectProperty
		constexpr auto m_pGroup = 0x194; // ObjectProperty
		constexpr auto m_fUpdateTimer = 0x19c; // float
		constexpr auto m_fCreateDisableTimer = 0x1a0; // float
	}

	namespace n_UUIComponent_DeviceDetailsPerk {
		constexpr auto m_mcTF = 0x120; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x128; // ObjectProperty
		constexpr auto m_mcElementIcon = 0x130; // ObjectProperty
	}

	namespace n_UTgEffect_Lift {
		constexpr auto m_bApplyKnockup = 0xa0; // char : 1
		constexpr auto m_bRemoveCripple = 0xa0; // char : 1
		constexpr auto m_bRemoveRoot = 0xa0; // char : 1
		constexpr auto m_fZHeight = 0xa4; // float
	}

	namespace n_UUIChatTab {
		constexpr auto m_nIdentity = 0x2cc; // int32_t
		constexpr auto m_nOutputCount = 0x2d0; // int32_t
		constexpr auto m_bOpen = 0x2d4; // char : 1
		constexpr auto m_bCanChat = 0x2d4; // char : 1
		constexpr auto m_bCanScroll = 0x2d4; // char : 1
		constexpr auto m_bPrevInputState = 0x2d4; // char : 1
		constexpr auto m_bPlayNotifySound = 0x2d4; // char : 1
		constexpr auto m_mcClose = 0x2d8; // ObjectProperty
		constexpr auto m_mcMinimize = 0x2e0; // ObjectProperty
		constexpr auto m_mcOpen = 0x2e8; // ObjectProperty
		constexpr auto m_mcOpenTF = 0x2f0; // ObjectProperty
		constexpr auto m_mcOpenFrame = 0x2f8; // ObjectProperty
		constexpr auto m_mcOpenButton = 0x300; // ObjectProperty
		constexpr auto m_mcOpenButtonTF = 0x308; // ObjectProperty
		constexpr auto m_mcOpenButtonEdge = 0x310; // ObjectProperty
		constexpr auto m_mcOpenButtonMask = 0x318; // ObjectProperty
		constexpr auto m_mcBuffer = 0x320; // ObjectProperty
		constexpr auto m_mcButton = 0x328; // ObjectProperty
		constexpr auto m_mcButtonTF = 0x330; // ObjectProperty
		constexpr auto m_mcButtonEdge = 0x338; // ObjectProperty
		constexpr auto m_mcButtonMask = 0x340; // ObjectProperty
		constexpr auto m_mcButtonHighlight = 0x348; // ObjectProperty
		constexpr auto m_mcNotify = 0x350; // ObjectProperty
		constexpr auto m_mcScroll = 0x358; // ObjectProperty
		constexpr auto m_mcInputBtn = 0x360; // ObjectProperty
		constexpr auto m_mcOutput = 0x368; // ObjectProperty [0x4]
		constexpr auto m_mcOutputIcon = 0x388; // ObjectProperty [0x4]
		constexpr auto m_pCommandList = 0x3a8; // ObjectProperty
		constexpr auto m_AkChatSound = 0x3b0; // ObjectProperty
		constexpr auto m_AkNewTabSound = 0x3b8; // ObjectProperty
	}

	namespace n_UUIFade {
		constexpr auto m_mcBlocker = 0x244; // ObjectProperty
	}

	namespace n_UUIHudInventory {
		constexpr auto m_nScrollIndex = 0x244; // int32_t
		constexpr auto m_nRunes = 0x248; // int32_t [0x6]
		constexpr auto m_nPotion = 0x260; // int32_t [0x2]
		constexpr auto m_nWeapon = 0x268; // int32_t [0x2]
		constexpr auto m_nAbility = 0x270; // int32_t [0x2]
		constexpr auto m_bPolymorphedWhenOpening = 0x278; // char : 1
		constexpr auto m_akDropItem = 0x27c; // ObjectProperty
		constexpr auto m_mcBack = 0x284; // ObjectProperty
		constexpr auto m_mcLine = 0x28c; // ObjectProperty
		constexpr auto m_mcHeader = 0x294; // ObjectProperty
		constexpr auto m_mcBlocker = 0x29c; // ObjectProperty
		constexpr auto m_mcScrollBar = 0x2a4; // ObjectProperty
		constexpr auto m_mcSwap = 0x2ac; // ObjectProperty [0x2]
		constexpr auto m_mcTitle = 0x2bc; // ObjectProperty [0x4]
		constexpr auto m_pInventoryInputGroup = 0x2dc; // ObjectProperty
		constexpr auto m_mcRune = 0x2e4; // ObjectProperty [0x6]
		constexpr auto m_mcRuneIcon = 0x314; // ObjectProperty [0x6]
		constexpr auto m_mcRuneName = 0x344; // ObjectProperty [0x6]
		constexpr auto m_mcRuneDesc = 0x374; // ObjectProperty [0x6]
		constexpr auto m_mcRuneFrame = 0x3a4; // ObjectProperty [0x6]
		constexpr auto m_mcWeapon = 0x3d4; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponDrop = 0x3e4; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponIcon = 0x3f4; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponLine = 0x404; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponName = 0x414; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponType = 0x424; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponClass = 0x434; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponDescA = 0x444; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponDescB = 0x454; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponFrame = 0x464; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponImage = 0x474; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponRarity = 0x484; // ObjectProperty [0x2]
		constexpr auto m_mcWeaponElement = 0x494; // ObjectProperty [0x2]
		constexpr auto m_mcAbility = 0x4a4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityDrop = 0x4b4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityIcon = 0x4c4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityLine = 0x4d4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityName = 0x4e4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityType = 0x4f4; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityDesc = 0x504; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityClass = 0x514; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityFrame = 0x524; // ObjectProperty [0x2]
		constexpr auto m_mcAbilityImage = 0x534; // ObjectProperty [0x2]
		constexpr auto m_mcPotion = 0x544; // ObjectProperty [0x2]
		constexpr auto m_mcPotionIcon = 0x554; // ObjectProperty [0x2]
		constexpr auto m_mcPotionLine = 0x564; // ObjectProperty [0x2]
		constexpr auto m_mcPotionDrop = 0x574; // ObjectProperty [0x2]
		constexpr auto m_mcPotionName = 0x584; // ObjectProperty [0x2]
		constexpr auto m_mcPotionType = 0x594; // ObjectProperty [0x2]
		constexpr auto m_mcPotionDesc = 0x5a4; // ObjectProperty [0x2]
		constexpr auto m_mcPotionCount = 0x5b4; // ObjectProperty [0x2]
		constexpr auto m_scOpen = 0x5c4; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_HasEffectCategory {
		constexpr auto EffectCategoryId = 0x98; // int32_t
		constexpr auto EffectGroupId = 0x9c; // int32_t
	}

	namespace n_UTgGameDC_Team {
		constexpr auto m_nTaskForce = 0x16c; // int32_t
		constexpr auto m_Members = 0x170; // ObjectProperty [0x5]
		constexpr auto m_nMaxMemberCount = 0x198; // int32_t
		constexpr auto m_Guardian = 0x19c; // ObjectProperty
		constexpr auto m_Towers = 0x1a4; // ObjectProperty [0x9]
		constexpr auto m_SurrenderTimer = 0x1ec; // ObjectProperty
	}

	namespace n_UParticleModuleMaterialByParameter {
		constexpr auto MaterialParameters = 0x68; // TArray<FName>
		constexpr auto DefaultMaterials = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UNavMeshPathConstraint {
		constexpr auto NextConstraint = 0x60; // ObjectProperty
		constexpr auto NumNodesProcessed = 0x68; // int32_t
		constexpr auto NumThrownOutNodes = 0x6c; // int32_t
		constexpr auto AddedDirectCost = 0x70; // float
		constexpr auto AddedHeuristicCost = 0x74; // float
	}

	namespace n_USeqEvent_RemoteEvent {
		constexpr auto EventName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // char : 1
	}

	namespace n_UTgIconManager {
		constexpr auto m_GFxReferenceToIconDetailsMap = 0x60; // FMap_Mirror
		constexpr auto m_ItemIdToIconGroupMap = 0xa8; // FMultiMap_Mirror
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto AnimSets = 0xb8; // TArray<ObjectProperty>
		constexpr auto SlotName = 0xc8; // FName
		constexpr auto AnimSeqs = 0xd0; // TArray<FAnimControlTrackKey>
		constexpr auto bEnableRootMotion = 0xe0; // char : 1
		constexpr auto bSkipAnimNotifiers = 0xe0; // char : 1
	}

	namespace n_ATgRespawnBeaconBase {
		constexpr auto m_nMeshAssemblyId = 0x308; // int32_t
		constexpr auto m_ActualMeshComponent = 0x30c; // ComponentProperty
		constexpr auto m_BeaconNodes = 0x314; // TArray<ObjectProperty>
		constexpr auto c_bEnemyMatLoaded = 0x324; // char : 1
		constexpr auto m_bShouldShowSilhouetteToFriends = 0x324; // char : 1
		constexpr auto m_fDeployTime = 0x328; // float
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x6c; // float
		constexpr auto SpawnPerUnit = 0x70; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x94; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x94; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x94; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x94; // char : 1
		constexpr auto MovementTolerance = 0x98; // float
		constexpr auto MaxFrameDistance = 0x9c; // float
		constexpr auto MinFrameDistance = 0xa0; // float
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x68; // FRawDistributionVector
	}

	namespace n_UAnimNodeRandom {
		constexpr auto RandomInfo = 0x144; // TArray<FRandomAnimInfo>
		constexpr auto PlayingSeqNode = 0x154; // ObjectProperty
		constexpr auto PendingChildIndex = 0x15c; // int32_t
		constexpr auto bPickedPendingChildIndex = 0x160; // char : 1
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x60; // FString
	}

	namespace n_ATgRepInfo_Game_RoyaleStorm {
		constexpr auto r_nTickets = 0x744; // int32_t [0x2]
		constexpr auto r_vCanyonOrigin = 0x74c; // FVector
		constexpr auto r_fCanyonDirection = 0x758; // float
		constexpr auto r_fCanyonWidth = 0x75c; // float
		constexpr auto r_fConvergeWidth1 = 0x760; // float
		constexpr auto r_fConvergeWidth2 = 0x764; // float
	}

	namespace n_ATgDeploy_ChurchillShield {
		constexpr auto m_fMinPitch = 0x44c; // float
	}

	namespace n_UTgAIBehaviorAction_TargetNearestItem {
		constexpr auto CheckLOS = 0x94; // char : 1
	}

	namespace n_UTgSkelCon_ClockworkSpinner {
		constexpr auto m_fInterpTime = 0x100; // float
		constexpr auto m_fRemainingInterpTime = 0x104; // float
		constexpr auto m_fPauseTime = 0x108; // float
		constexpr auto m_fRemainingPauseTime = 0x10c; // float
		constexpr auto RotationAxis = 0x110; // EAxis
		constexpr auto DeltaRotation = 0x114; // int32_t
		constexpr auto m_fInterpRotation = 0x118; // float
		constexpr auto bLimitedRotation = 0x11c; // char : 1
		constexpr auto bForward = 0x11c; // char : 1
		constexpr auto m_bResetRotationOnZeroStrength = 0x11c; // char : 1
		constexpr auto m_fRotationMin = 0x120; // float
		constexpr auto m_fRotationMax = 0x124; // float
		constexpr auto m_fResetInterpTime = 0x128; // float
		constexpr auto m_fResetPauseTime = 0x12c; // float
		constexpr auto m_fResetRotation = 0x130; // float
		constexpr auto m_fRotatorMin = 0x134; // float
		constexpr auto m_fRotatorMax = 0x138; // float
		constexpr auto RotationsPerSecond = 0x13c; // float
		constexpr auto ResetRotationsPerSecond = 0x140; // float
	}

	namespace n_ARadialBlurActor {
		constexpr auto RadialBlur = 0x280; // ComponentProperty
	}

	namespace n_UTgAIBehaviorComposite {
		constexpr auto Children = 0x94; // TArray<ObjectProperty>
		constexpr auto ChildrenIndices = 0xa4; // TArray<int32_t>
		constexpr auto bCompleteOnAll = 0xb4; // char : 1
		constexpr auto bFailsOnAll = 0xb4; // char : 1
		constexpr auto bRetryFailedChild = 0xb4; // char : 1
		constexpr auto bFixedChildrenSize = 0xb4; // char : 1
	}

	namespace n_UTgSettingsManager {
		constexpr auto m_Sets = 0x60; // TMap<None, None>
		constexpr auto m_Settings = 0xa8; // TArray<ObjectProperty>
		constexpr auto m_Commands = 0xb8; // TArray<FTgKeyCommand>
	}

	namespace n_UTgSeqAct_ProgressTo {
		constexpr auto m_Instigator = 0x134; // ObjectProperty
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb4; // char : 1
		constexpr auto bAdjustForWorldSpace = 0xb4; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xdc; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x100; // CylinderHeightAxis
	}

	namespace n_UOnlineNewsInterfaceMcp {
		constexpr auto NewsItems = 0x80; // TArray<FNewsCacheEntry>
		constexpr auto ReadNewsDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto bNeedsTicking = 0xa0; // char : 1
		constexpr auto __OnReadNewsCompleted__Delegate = 0xa4; // DelegateProperty
	}

	namespace n_UTgSeqAct_TriggerBots {
		constexpr auto bUseDestination = 0x108; // char : 1
		constexpr auto TargetActor = 0x10c; // ObjectProperty
		constexpr auto destActor = 0x114; // ObjectProperty
	}

	namespace n_UApexAsset {
		constexpr auto OriginalApexName = 0x60; // FString
		constexpr auto ApexComponents = 0x70; // TArray<ComponentProperty>
	}

	namespace n_ATgNavigationPoint {
		constexpr auto m_nMapObjectId = 0x378; // int32_t
		constexpr auto m_fLastSpawnedTime = 0x37c; // float
	}

	namespace n_AHavokNavMeshActor {
		constexpr auto bNavMeshLoaded = 0x280; // char : 1
		constexpr auto DrawTraversalAnalysis = 0x280; // char : 1
		constexpr auto DrawNavMeshEdges = 0x280; // char : 1
		constexpr auto DrawNavMeshUserEdges = 0x280; // char : 1
		constexpr auto DrawNavMeshFaces = 0x280; // char : 1
		constexpr auto DrawCluster = 0x280; // char : 1
		constexpr auto DrawFaceToClusterLines = 0x280; // char : 1
		constexpr auto FixupOverlappingTriangles = 0x280; // char : 1
		constexpr auto IncludeUserEdgesInClusters = 0x280; // char : 0
		constexpr auto ShrinkNavMeshByCharacterWidth = 0x280; // char : 0
		constexpr auto MultithreadGeneration = 0x280; // char : 0
		constexpr auto UseAdaptiveSplit = 0x280; // char : 0
		constexpr auto UseSimplification = 0x280; // char : 0
		constexpr auto PreserveVerticalBorderRegions = 0x280; // char : 0
		constexpr auto BorderPreservationTolerance = 0x280; // char : 0
		constexpr auto bAnalyzeDropDowns = 0x280; // char : 0
		constexpr auto bAnalyzeJumps = 0x280; // char : 0
		constexpr auto EditorSprite = 0x284; // ComponentProperty
		constexpr auto RenderingComponent = 0x28c; // ComponentProperty
		constexpr auto NavMeshData = 0x294; // FUntypedBulkData_Mirror
		constexpr auto HavokWorld = 0x2d4; // FPointer
		constexpr auto HavokGrid = 0x2dc; // ObjectProperty
		constexpr auto Version = 0x2e4; // EHavokVersion
		constexpr auto DrawClusterOffset = 0x2e8; // FVector
		constexpr auto SingleCarverAABBMin = 0x2f4; // FVector
		constexpr auto SingleCarverAABBMax = 0x300; // FVector
		constexpr auto MaxSplits = 0x30c; // int32_t
		constexpr auto NumXSplits = 0x310; // int32_t
		constexpr auto NumYSplits = 0x314; // int32_t
		constexpr auto DesiredFacesPerCluster = 0x318; // int32_t
		constexpr auto MaxBorderDistanceError = 0x31c; // float
		constexpr auto MaxPartitionHeightError = 0x320; // float
		constexpr auto MinRegionArea = 0x324; // float
		constexpr auto MinDistanceToSeed = 0x328; // float
		constexpr auto MaxWalkableSlope = 0x32c; // float
		constexpr auto MaxWalkableSlopeTerrain = 0x330; // float
		constexpr auto EntityHalfHeight = 0x334; // float
		constexpr auto StartingHeightOffset = 0x338; // float
		constexpr auto MaxStepHeight = 0x33c; // float
		constexpr auto MaxPolyHeight = 0x340; // float
		constexpr auto HeightMergeThreshold = 0x344; // float
		constexpr auto MinRadius = 0x348; // float
		constexpr auto MaxRadius = 0x34c; // float
		constexpr auto MaxDropHeight = 0x350; // float
		constexpr auto MaxUnderhang = 0x354; // float
		constexpr auto DropDownCost = 0x358; // float
		constexpr auto MaxJumpHeight = 0x35c; // float
		constexpr auto StandardJumpHeight = 0x360; // float
		constexpr auto StandardJumpDistance = 0x364; // float
		constexpr auto JumpCost = 0x368; // float
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_ANxForceFieldTornado {
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto RadialStrength = 0x2e4; // float
		constexpr auto RotationalStrength = 0x2e8; // float
		constexpr auto LiftStrength = 0x2ec; // float
		constexpr auto ForceRadius = 0x2f0; // float
		constexpr auto ForceTopRadius = 0x2f4; // float
		constexpr auto LiftFalloffHeight = 0x2f8; // float
		constexpr auto EscapeVelocity = 0x2fc; // float
		constexpr auto ForceHeight = 0x300; // float
		constexpr auto HeightOffset = 0x304; // float
		constexpr auto BSpecialRadialForceMode = 0x308; // char : 1
		constexpr auto SelfRotationStrength = 0x30c; // float
		constexpr auto Kernel = 0x310; // FPointer
	}

	namespace n_AVolume {
		constexpr auto AssociatedActor = 0x2b0; // ObjectProperty
		constexpr auto bForcePawnWalk = 0x2b8; // char : 1
		constexpr auto bProcessAllActors = 0x2b8; // char : 1
		constexpr auto bExcludeNavmesh = 0x2b8; // char : 1
		constexpr auto bPawnsOnly = 0x2b8; // char : 1
		constexpr auto bLocalPawnsOnly = 0x2b8; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_InsideDeviceVolume {
		constexpr auto DeviceID = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_UMobileMenuLabel {
		constexpr auto Caption = 0xdc; // FString
		constexpr auto TextFont = 0xec; // ObjectProperty
		constexpr auto TextColor = 0xf4; // FColor
		constexpr auto TouchedColor = 0xf8; // FColor
		constexpr auto TextXScale = 0xfc; // float
		constexpr auto TextYScale = 0x100; // float
		constexpr auto bAutoSize = 0x104; // char : 1
	}

	namespace n_ATgDevice_Stealth {
		constexpr auto m_bIsInCombat = 0xaec; // char : 1
		constexpr auto m_bCanFireInCombat = 0xaec; // char : 1
	}

	namespace n_UTgAIBehaviorAction_SetBotBehaviorState {
		constexpr auto DesiredBehaviorState = 0x94; // EBotBehaviorState
	}

	namespace n_UTgAIBehaviorCondition_IsLookingAtCombatTarget {
		constexpr auto VisibilityAngle = 0x98; // float
	}

	namespace n_UUIDataEsportsEventTeam {
		constexpr auto pEvent = 0x60; // ObjectProperty
		constexpr auto pTeam = 0x68; // ObjectProperty
		constexpr auto dwEventTeamId = 0x70; // Fdword
		constexpr auto dwWins = 0x74; // Fdword
		constexpr auto dwLosses = 0x78; // Fdword
		constexpr auto nSeed = 0x7c; // int32_t
	}

	namespace n_UTgSkelCon_Limb {
		constexpr auto m_PawnOwner = 0x12c; // ObjectProperty
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0xa0; // FInterpCurveVector
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UTgAIBehaviorCondition_Energy {
		constexpr auto energy = 0x98; // float
	}

	namespace n_UAnimNotify_CameraEffect {
		constexpr auto CameraLensEffect = 0x68; // AEmitterCameraLensEffectBase*
	}

	namespace n_USeqEvent_MobileObjectPicker {
		constexpr auto TraceDistance = 0x13c; // float
		constexpr auto bCheckonTouch = 0x140; // char : 1
		constexpr auto FinalTouchLocation = 0x144; // FVector
		constexpr auto FinalTouchNormal = 0x150; // FVector
		constexpr auto FinalTouchObject = 0x15c; // ObjectProperty
		constexpr auto Targets = 0x164; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UTgAnimBlendByChurchillDrone {
		constexpr auto m_bLeftDrone = 0x168; // char : 1
	}

	namespace n_UUISafeFrame {
		constexpr auto m_mcAdjust = 0x244; // ObjectProperty
		constexpr auto m_mcAccept = 0x24c; // ObjectProperty
	}

	namespace n_ADynamicPhysicsVolume {
		constexpr auto bEnabled = 0x314; // char : 1
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xd8; // FParticleRandomSeedInfo
	}

	namespace n_AInternetLink {
		constexpr auto LinkMode = 0x280; // ELinkMode
		constexpr auto InLineMode = 0x281; // ELineMode
		constexpr auto OutLineMode = 0x282; // ELineMode
		constexpr auto ReceiveMode = 0x283; // EReceiveMode
		constexpr auto Socket = 0x284; // FPointer
		constexpr auto Port = 0x28c; // int32_t
		constexpr auto RemoteSocket = 0x290; // FPointer
		constexpr auto PrivateResolveInfo = 0x298; // FPointer
		constexpr auto DataPending = 0x2a0; // int32_t
	}

	namespace n_UTgSeqEvent_Named {
		constexpr auto NamedEvent = 0x128; // TSE_NAME
	}

	namespace n_UTgAIBehaviorCondition_DeviceReadyToUse {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_ATgIdol {
		constexpr auto r_nDefenderTaskForce = 0x280; // int32_t
		constexpr auto m_Holder = 0x284; // ObjectProperty
		constexpr auto r_HolderPRI = 0x28c; // ObjectProperty
		constexpr auto m_OldHolder = 0x294; // ObjectProperty
	}

	namespace n_UUIComponent_TitlesViewEntry {
		constexpr auto m_nTitleId = 0x140; // int32_t
		constexpr auto m_mcRarityText = 0x144; // ObjectProperty
		constexpr auto m_mcColorBlock = 0x14c; // ObjectProperty
		constexpr auto m_mcFade = 0x154; // ObjectProperty
		constexpr auto m_mcTitle = 0x15c; // ObjectProperty
		constexpr auto m_mcLockIcon = 0x164; // ObjectProperty
		constexpr auto m_mcEquipped = 0x16c; // ObjectProperty
		constexpr auto m_scEquip = 0x174; // ObjectProperty
		constexpr auto m_scUnequip = 0x17c; // ObjectProperty
		constexpr auto m_scNotOwned = 0x184; // ObjectProperty
	}

	namespace n_UNavMeshGoal_OutOfViewFrom {
		constexpr auto GoalPoly = 0x7c; // FPointer
		constexpr auto OutOfViewLocation = 0x84; // FVector
		constexpr auto bShowDebug = 0x90; // char : 1
	}

	namespace n_UTgSubtitledMessages {
		constexpr auto CurrentSubtitle = 0x60; // FQueuedSubtitle
		constexpr auto QueuedSubtitles = 0x84; // TArray<FQueuedSubtitle>
		constexpr auto OwnerPC = 0x94; // ObjectProperty
		constexpr auto PlayingSubtitleAC = 0x9c; // ComponentProperty
		constexpr auto bFinishedSubtitle = 0xa4; // char : 1
		constexpr auto SubtitleFailsafeTime = 0xa8; // float
	}

	namespace n_ATgAIController_BehaviorGodDisconnected {
		constexpr auto bInitialController = 0x93c; // char : 1
	}

	namespace n_UNavMeshGoal_ClosestActorInList {
		constexpr auto GoalList = 0x7c; // TArray<FBiasedGoalActor>
		constexpr auto PolyToGoalActorMap = 0x8c; // FMultiMap_Mirror
		constexpr auto CachedAnchorPoly = 0xd4; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_DeployOnDeployable {
		constexpr auto m_ValidDeployableIds = 0xc8; // TArray<int32_t>
	}

	namespace n_USkyLightComponent {
		constexpr auto LowerBrightness = 0x1a4; // float
		constexpr auto LowerColor = 0x1a8; // FColor
	}

	namespace n_ATgSplineActor {
		constexpr auto m_ActionPoint = 0x2e8; // ELanePusherActionPoint
		constexpr auto m_bPreview = 0x2ec; // char : 1
	}

	namespace n_UActorFactoryVehicle {
		constexpr auto VehicleClass = 0x9c; // AVehicle*
	}

	namespace n_USceneCapturePortalComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
		constexpr auto ViewDestination = 0xdc; // ObjectProperty
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x68; // FRawDistributionVector
		constexpr auto StartAlpha = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // char : 1
	}

	namespace n_ASVehicle {
		constexpr auto SimObj = 0x628; // ComponentProperty
		constexpr auto Wheels = 0x630; // TArray<ComponentProperty>
		constexpr auto COMOffset = 0x640; // FVector
		constexpr auto InertiaTensorMultiplier = 0x64c; // FVector
		constexpr auto bStayUpright = 0x658; // char : 1
		constexpr auto bUseSuspensionAxis = 0x658; // char : 1
		constexpr auto bUpdateWheelShapes = 0x658; // char : 1
		constexpr auto bVehicleOnGround = 0x658; // char : 1
		constexpr auto bVehicleOnWater = 0x658; // char : 1
		constexpr auto bIsInverted = 0x658; // char : 1
		constexpr auto bChassisTouchingGround = 0x658; // char : 1
		constexpr auto bWasChassisTouchingGroundLastTick = 0x658; // char : 1
		constexpr auto bCanFlip = 0x658; // char : 0
		constexpr auto bFlipRight = 0x658; // char : 0
		constexpr auto bIsUprighting = 0x658; // char : 0
		constexpr auto bOutputHandbrake = 0x658; // char : 0
		constexpr auto bHoldingDownHandbrake = 0x658; // char : 0
		constexpr auto StayUprightRollResistAngle = 0x65c; // float
		constexpr auto StayUprightPitchResistAngle = 0x660; // float
		constexpr auto StayUprightStiffness = 0x664; // float
		constexpr auto StayUprightDamping = 0x668; // float
		constexpr auto StayUprightConstraintSetup = 0x66c; // ObjectProperty
		constexpr auto StayUprightConstraintInstance = 0x674; // ObjectProperty
		constexpr auto HeavySuspensionShiftPercent = 0x67c; // float
		constexpr auto MaxSpeed = 0x680; // float
		constexpr auto MaxAngularVelocity = 0x684; // float
		constexpr auto TimeOffGround = 0x688; // float
		constexpr auto UprightLiftStrength = 0x68c; // float
		constexpr auto UprightTorqueStrength = 0x690; // float
		constexpr auto UprightTime = 0x694; // float
		constexpr auto UprightStartTime = 0x698; // float
		constexpr auto EngineSound = 0x69c; // ComponentProperty
		constexpr auto SquealSound = 0x6a4; // ComponentProperty
		constexpr auto CollisionSound = 0x6ac; // ObjectProperty
		constexpr auto EnterVehicleSound = 0x6b4; // ObjectProperty
		constexpr auto ExitVehicleSound = 0x6bc; // ObjectProperty
		constexpr auto CollisionIntervalSecs = 0x6c4; // float
		constexpr auto SquealThreshold = 0x6c8; // float
		constexpr auto SquealLatThreshold = 0x6cc; // float
		constexpr auto LatAngleVolumeMult = 0x6d0; // float
		constexpr auto EngineStartOffsetSecs = 0x6d4; // float
		constexpr auto EngineStopOffsetSecs = 0x6d8; // float
		constexpr auto LastCollisionSoundTime = 0x6dc; // float
		constexpr auto OutputBrake = 0x6e0; // float
		constexpr auto OutputGas = 0x6e4; // float
		constexpr auto OutputSteering = 0x6e8; // float
		constexpr auto OutputRise = 0x6ec; // float
		constexpr auto ForwardVel = 0x6f0; // float
		constexpr auto NumPoweredWheels = 0x6f4; // int32_t
		constexpr auto BaseOffset = 0x6f8; // FVector
		constexpr auto CamDist = 0x704; // float
		constexpr auto DriverViewPitch = 0x708; // int32_t
		constexpr auto DriverViewYaw = 0x70c; // int32_t
		constexpr auto VState = 0x710; // FVehicleState
		constexpr auto AngErrorAccumulator = 0x760; // float
		constexpr auto RadialImpulseScaling = 0x764; // float
	}

	namespace n_ULightEnvironmentComponent {
		constexpr auto bEnabled = 0x88; // char : 1
		constexpr auto bForceNonCompositeDynamicLights = 0x88; // char : 1
		constexpr auto bAllowDynamicShadowsOnTranslucency = 0x88; // char : 1
		constexpr auto bAllowPreShadow = 0x88; // char : 1
		constexpr auto bTranslucencyShadowed = 0x88; // char : 1
		constexpr auto DominantShadowFactor = 0x8c; // float
		constexpr auto AffectingDominantLight = 0x90; // ComponentProperty
		constexpr auto AffectedComponents = 0x98; // TArray<ComponentProperty>
	}

	namespace n_UMobileMenuInventory {
		constexpr auto Slots = 0xdc; // TArray<ObjectProperty>
		constexpr auto Items = 0xec; // TArray<ObjectProperty>
		constexpr auto SideLeewayPercent = 0xfc; // float
		constexpr auto CurrentElement = 0x100; // FRenderElementInfo
		constexpr auto Drag = 0x108; // FDragElementInfo
		constexpr auto ScaleSize = 0x130; // FVector2D
		constexpr auto bRenderDragItem = 0x138; // char : 1
		constexpr auto __OnUpdateItemInSlot__Delegate = 0x13c; // DelegateProperty
		constexpr auto __DoCanPutItemInSlot__Delegate = 0x14c; // DelegateProperty
		constexpr auto __OnUpdateDrag__Delegate = 0x15c; // DelegateProperty
	}

	namespace n_UTgSeqAct_GetPlayerCount {
		constexpr auto m_nTaskForce = 0x108; // int32_t
		constexpr auto m_fPlayerCount = 0x10c; // float
		constexpr auto m_fAssaultCount = 0x110; // float
		constexpr auto m_fMedicCount = 0x114; // float
		constexpr auto m_fReconCount = 0x118; // float
		constexpr auto m_fRoboticsCount = 0x11c; // float
	}

	namespace n_ATgSpawnGate {
		constexpr auto m_eSpawnGateType = 0x2c4; // ESpawnGateType
		constexpr auto m_StandardEmitter = 0x2c8; // ObjectProperty
		constexpr auto m_TeamColoredEmitter = 0x2d0; // ObjectProperty
		constexpr auto m_bStartActive = 0x2d8; // char : 1
		constexpr auto m_bGateOpen = 0x2d8; // char : 1
		constexpr auto m_nCurrentTaskforce = 0x2dc; // int32_t
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x24c; // FColor
		constexpr auto ArrowSize = 0x250; // float
		constexpr auto bTreatAsASprite = 0x254; // char : 1
	}

	namespace n_AFracturedStaticMeshActor {
		constexpr auto MaxPartsToSpawnAtOnce = 0x280; // int32_t
		constexpr auto FracturedStaticMeshComponent = 0x284; // ComponentProperty
		constexpr auto SkinnedComponent = 0x28c; // ComponentProperty
		constexpr auto ChunkHealth = 0x294; // TArray<int32_t>
		constexpr auto bHasShownMissingSoundWarning = 0x2a4; // char : 1
		constexpr auto bBreakChunksOnActorTouch = 0x2a4; // char : 1
		constexpr auto bShouldSaveForCheckpoint = 0x2a4; // char : 1
		constexpr auto FracturedByDamageType = 0x2a8; // TArray<UDamageType*>
		constexpr auto ChunkHealthScale = 0x2b8; // float
		constexpr auto OverrideFragmentDestroyEffects = 0x2bc; // TArray<ObjectProperty>
		constexpr auto FractureCullMinDistance = 0x2cc; // float
		constexpr auto FractureCullMaxDistance = 0x2d0; // float
		constexpr auto DeferredPartsToSpawn = 0x2d4; // TArray<FDeferredPartToSpawn>
		constexpr auto PartImpactEffect = 0x2e4; // FPhysEffectInfo
		constexpr auto ExplosionFractureSound = 0x2fc; // ObjectProperty
		constexpr auto SingleChunkFractureSound = 0x304; // ObjectProperty
		constexpr auto MI_LoseChunkPreviousMaterial = 0x30c; // ObjectProperty
	}

	namespace n_ATgDevice_OppressorMine {
		constexpr auto m_NewTargetSFXRecentTargets = 0xaec; // TArray<ObjectProperty>
		constexpr auto m_NewTargetSFXTargetTime = 0xafc; // TArray<float>
		constexpr auto m_fMinNewTargetSFXDelay = 0xb0c; // float
	}

	namespace n_UTgAIBehaviorAction_MoveToCapturePoint {
		constexpr auto Arbitrator = 0x9c; // ESelectionArbitrator
		constexpr auto bTeleport = 0xa0; // char : 1
	}

	namespace n_UTgInvListener_RedirectDamageToDeployables {
		constexpr auto m_ActiveDeployables = 0xc8; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Pip {
		constexpr auto m_Projectiles = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_SpawnLocations = 0xe0; // TArray<FVector>
		constexpr auto m_MarkedTargetsFlask = 0xf0; // TArray<ObjectProperty>
		constexpr auto m_fMarkedTimesFlask = 0x100; // TArray<float>
	}

	namespace n_ATgDeploy_DreadSerpent {
		constexpr auto s_HitActors = 0x47c; // TArray<ObjectProperty>
	}

	namespace n_UUIHudTop {
		constexpr auto m_nDirection = 0x244; // int32_t
		constexpr auto m_nPerkCount = 0x248; // int32_t
		constexpr auto m_nStartTime = 0x24c; // int32_t
		constexpr auto m_nDeployTime = 0x250; // int32_t
		constexpr auto m_nDebuffCount = 0x254; // int32_t
		constexpr auto m_nPrepareTime = 0x258; // int32_t
		constexpr auto m_nPlayersAlive = 0x25c; // int32_t
		constexpr auto m_bShowAlert = 0x260; // char : 1
		constexpr auto m_fRotMax = 0x264; // float
		constexpr auto m_fTickMaxY = 0x268; // float
		constexpr auto m_fTickMinY = 0x26c; // float
		constexpr auto m_fTickMinX = 0x270; // float
		constexpr auto m_fTickMaxX = 0x274; // float
		constexpr auto m_fModifierX = 0x278; // float
		constexpr auto m_fModifierY = 0x27c; // float
		constexpr auto m_fPerkTimer = 0x280; // float
		constexpr auto m_fAliveTimer = 0x284; // float
		constexpr auto m_nEffectGroup = 0x288; // int32_t [0x10]
		constexpr auto m_nTickets = 0x2c8; // int32_t [0x2]
		constexpr auto m_nPerkQueue = 0x2d0; // TArray<int32_t>
		constexpr auto m_mcAlert = 0x2e0; // ObjectProperty
		constexpr auto m_mcAlertTitle = 0x2e8; // ObjectProperty
		constexpr auto m_mcAlertSubtitle = 0x2f0; // ObjectProperty
		constexpr auto m_mcRemaining = 0x2f8; // ObjectProperty
		constexpr auto m_mcDeploy = 0x300; // ObjectProperty
		constexpr auto m_mcDeployTime = 0x308; // ObjectProperty
		constexpr auto m_mcDeployPrompt = 0x310; // ObjectProperty
		constexpr auto m_mcCompass = 0x318; // ObjectProperty
		constexpr auto m_mcCompassCurrentPos = 0x320; // ObjectProperty
		constexpr auto m_mcCompassWaypointSafety = 0x328; // ObjectProperty
		constexpr auto m_mcCompassText = 0x330; // ObjectProperty [0x18]
		constexpr auto m_mcCompassTicks = 0x3f0; // ObjectProperty [0x18]
		constexpr auto m_mcWaypoints = 0x4b0; // ObjectProperty [0x6]
		constexpr auto m_mcRealmWars = 0x4e0; // ObjectProperty
		constexpr auto m_mcRealmWarsTip = 0x4e8; // ObjectProperty [0x2]
		constexpr auto m_mcRealmWarsBar = 0x4f8; // ObjectProperty [0x2]
		constexpr auto m_mcRealmWarsScore = 0x508; // ObjectProperty [0x2]
		constexpr auto m_mcRealmWarsChange = 0x518; // ObjectProperty [0x2]
		constexpr auto m_mcRealmWarsRemain = 0x528; // ObjectProperty [0x2]
		constexpr auto m_mcRealmWarsAlliance = 0x538; // ObjectProperty [0x2]
		constexpr auto m_Teammate = 0x548; // FUITEAMMATE [0x6]
		constexpr auto m_mcDebuff = 0xbf0; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTF = 0xc08; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffIcon = 0xc20; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTimer = 0xc38; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTimerBar = 0xc50; // ObjectProperty [0x3]
		constexpr auto m_mcPerk = 0xc68; // ObjectProperty
		constexpr auto m_mcPerkIcon = 0xc70; // ObjectProperty
		constexpr auto m_mcPerkName = 0xc78; // ObjectProperty
		constexpr auto m_mcPerkDesc = 0xc80; // ObjectProperty
		constexpr auto m_mcPerkFrame = 0xc88; // ObjectProperty
		constexpr auto m_LocalPlayerNetId = 0xc90; // FUniqueNetId
	}

	namespace n_UUISocial {
		constexpr auto m_nPage = 0x244; // int32_t
		constexpr auto m_nPartySize = 0x248; // int32_t
		constexpr auto m_bAllowInvite = 0x24c; // char : 1
		constexpr auto m_bSearching = 0x24c; // char : 1
		constexpr auto m_eTabState = 0x250; // char
		constexpr auto m_ePopupState = 0x251; // char
		constexpr auto m_fFadeTime = 0x254; // float
		constexpr auto m_fFadeTimer = 0x258; // float
		constexpr auto m_fSearchTime = 0x25c; // float
		constexpr auto m_fUpdateTime = 0x260; // float
		constexpr auto m_fSearchTimer = 0x264; // float
		constexpr auto m_fUpdateTimer = 0x268; // float
		constexpr auto m_pPopupPlayer = 0x26c; // ObjectProperty
		constexpr auto m_mcHeader = 0x274; // ObjectProperty
		constexpr auto m_mcHeaderActive = 0x27c; // ObjectProperty
		constexpr auto m_mcHeaderKey = 0x284; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTab = 0x294; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabCTA = 0x2a4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabLine = 0x2b4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabBounds = 0x2c4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabSelect = 0x2d4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabShadow = 0x2e4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabHighlight = 0x2f4; // ObjectProperty [0x2]
		constexpr auto m_mcParty = 0x304; // ObjectProperty
		constexpr auto m_mcPartyAdd = 0x30c; // ObjectProperty
		constexpr auto m_mcPartyLeave = 0x314; // ObjectProperty
		constexpr auto m_mcPartyPlayer = 0x31c; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerDesc = 0x33c; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerName = 0x35c; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerType = 0x37c; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerIcon = 0x39c; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerLogo = 0x3bc; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerFrame = 0x3dc; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerTexture = 0x3fc; // ObjectProperty [0x4]
		constexpr auto m_mcPartyPlayerHighlight = 0x41c; // ObjectProperty [0x4]
		constexpr auto m_mcPlayers = 0x43c; // ObjectProperty
		constexpr auto m_mcPlayerAdd = 0x444; // ObjectProperty
		constexpr auto m_mcPlayerPage = 0x44c; // ObjectProperty
		constexpr auto m_mcPlayerSearch = 0x454; // ObjectProperty
		constexpr auto m_mcPlayerKeys = 0x45c; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerArrows = 0x46c; // ObjectProperty [0x2]
		constexpr auto m_mcPlayerButton = 0x47c; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonDesc = 0x50c; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonIcon = 0x59c; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonLogo = 0x62c; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonName = 0x6bc; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonFrame = 0x74c; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonTexture = 0x7dc; // ObjectProperty [0x12]
		constexpr auto m_mcPlayerButtonHighlight = 0x86c; // ObjectProperty [0x12]
		constexpr auto m_mcPopupSearch = 0x8fc; // ObjectProperty
		constexpr auto m_mcPopupSearchBack = 0x904; // ObjectProperty
		constexpr auto m_mcPopupSearchName = 0x90c; // ObjectProperty
		constexpr auto m_mcPopupSearchDesc = 0x914; // ObjectProperty
		constexpr auto m_mcPopupSearchInput = 0x91c; // ObjectProperty
		constexpr auto m_mcPopupSearchAccept = 0x924; // ObjectProperty
		constexpr auto m_mcPopupPlayer = 0x92c; // ObjectProperty
		constexpr auto m_mcPopupPlayerBack = 0x934; // ObjectProperty
		constexpr auto m_mcPopupPlayerName = 0x93c; // ObjectProperty
		constexpr auto m_mcPopupPlayerButton = 0x944; // ObjectProperty [0x4]
		constexpr auto m_mcBlocker = 0x964; // ObjectProperty
		constexpr auto m_pPartyGroup = 0x96c; // ObjectProperty
		constexpr auto m_pSearchGroup = 0x974; // ObjectProperty
		constexpr auto m_pPlayerGroup = 0x97c; // ObjectProperty
		constexpr auto m_pPlayersGroup = 0x984; // ObjectProperty
		constexpr auto m_pLeaveAction = 0x98c; // ObjectProperty
		constexpr auto m_pInviteAction = 0x994; // ObjectProperty
		constexpr auto m_pSearchAction = 0x99c; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlineGameSearch {
		constexpr auto SearchResultsName = 0x98; // FName
		constexpr auto OnlineSub = 0xa0; // ObjectProperty
		constexpr auto GameInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameSearchCfgList = 0xb8; // TArray<FGameSearchCfg>
		constexpr auto SelectedIndex = 0xc8; // int32_t
		constexpr auto ActiveSearchIndex = 0xcc; // int32_t
	}

	namespace n_ATgPawn_BarrierTank {
		constexpr auto m_WallPlacementInfos = 0x310c; // FWallPlacementInfo [0x5]
		constexpr auto m_vSegmentExtent = 0x315c; // FVector
		constexpr auto m_vOpenSpotExtent = 0x3168; // FVector
		constexpr auto m_fWallTraceDownDistance = 0x3174; // float
		constexpr auto m_fWallOpenSpotTolerance = 0x3178; // float
		constexpr auto m_fInitialWallScaleZ = 0x317c; // float
		constexpr auto r_bInGaeBolg = 0x3180; // char : 1
		constexpr auto m_bUseGaeBolgRetrieve = 0x3180; // char : 1
		constexpr auto m_fGaeBolgJumpZModifier = 0x3184; // float
		constexpr auto r_nInhandAmmoRemaining = 0x3188; // int32_t
	}

	namespace n_ATgKAsset_ClientSideSim {
		constexpr auto m_fDamageImpulse = 0x29c; // float
		constexpr auto m_Arrow = 0x2a0; // ComponentProperty
		constexpr auto m_ForceSprite = 0x2a8; // ComponentProperty
		constexpr auto m_bEnableWind = 0x2b0; // char : 1
		constexpr auto m_bEnableGusts = 0x2b0; // char : 1
		constexpr auto bAnimates = 0x2b0; // char : 1
		constexpr auto m_fWindForceMin = 0x2b4; // float
		constexpr auto m_fWindForceMax = 0x2b8; // float
		constexpr auto m_fWindForceStrength = 0x2bc; // float
		constexpr auto m_fWindForceTargetStrength = 0x2c0; // float
		constexpr auto m_fWindFrequency = 0x2c4; // float
		constexpr auto m_fWindForceRemainingTime = 0x2c8; // float
		constexpr auto m_vWindDirection = 0x2cc; // FVector
		constexpr auto m_fForceDistance = 0x2d8; // float
		constexpr auto m_fForceZOffsetMultiplier = 0x2dc; // float
		constexpr auto m_fGustActiveTime = 0x2e0; // float
		constexpr auto m_vTimeBetweenGusts = 0x2e4; // FVector2D
		constexpr auto m_fGustActiveRemainingTime = 0x2ec; // float
		constexpr auto m_fTimeTillNextGust = 0x2f0; // float
		constexpr auto m_WindFrequencyMultiplier = 0x2f4; // FVector2D
		constexpr auto m_WindForceMultiplier = 0x2fc; // FVector2D
	}

	namespace n_AController {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto Pawn = 0x288; // ObjectProperty
		constexpr auto PlayerReplicationInfo = 0x290; // ObjectProperty
		constexpr auto PlayerNum = 0x298; // int32_t
		constexpr auto NextController = 0x29c; // ObjectProperty
		constexpr auto bIsPlayer = 0x2a4; // char : 1
		constexpr auto bGodMode = 0x2a4; // char : 1
		constexpr auto bSoaking = 0x2a4; // char : 1
		constexpr auto bSlowerZAcquire = 0x2a4; // char : 1
		constexpr auto bNotifyPostLanded = 0x2a4; // char : 1
		constexpr auto bNotifyApex = 0x2a4; // char : 1
		constexpr auto bOverrideSearchStart = 0x2a4; // char : 1
		constexpr auto bAdvancedTactics = 0x2a4; // char : 1
		constexpr auto bCanDoSpecial = 0x2a4; // char : 0
		constexpr auto bAdjusting = 0x2a4; // char : 0
		constexpr auto bPreparingMove = 0x2a4; // char : 0
		constexpr auto bForceStrafe = 0x2a4; // char : 0
		constexpr auto bLOSflag = 0x2a4; // char : 0
		constexpr auto bSkipExtraLOSChecks = 0x2a4; // char : 0
		constexpr auto bNotifyFallingHitWall = 0x2a4; // char : 0
		constexpr auto bEarlyOutOfSighTestsForSameType = 0x2a4; // char : 0
		constexpr auto bPreciseDestination = 0x2a4; // char : 0
		constexpr auto bSeeFriendly = 0x2a4; // char : 0
		constexpr auto bUsingPathLanes = 0x2a4; // char : 0
		constexpr auto bFire = 0x2a8; // char
		constexpr auto bAltFire = 0x2a9; // char
		constexpr auto m_eCurrentStunType = 0x2aa; // EStunType
		constexpr auto MinHitWall = 0x2ac; // float
		constexpr auto NavigationHandleClass = 0x2b0; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x2b8; // ObjectProperty
		constexpr auto OverrideSearchStart = 0x2c0; // FVector
		constexpr auto MoveTimer = 0x2cc; // float
		constexpr auto MoveTarget = 0x2d0; // ObjectProperty
		constexpr auto DestinationPosition = 0x2d8; // FBasedPosition
		constexpr auto FocalPosition = 0x310; // FBasedPosition
		constexpr auto Focus = 0x348; // ObjectProperty
		constexpr auto GoalList = 0x350; // ObjectProperty [0x4]
		constexpr auto AdjustPosition = 0x370; // FBasedPosition
		constexpr auto StartSpot = 0x3a8; // ObjectProperty
		constexpr auto RouteCache = 0x3b0; // TArray<ObjectProperty>
		constexpr auto CurrentPath = 0x3c0; // ObjectProperty
		constexpr auto NextRoutePath = 0x3c8; // ObjectProperty
		constexpr auto CurrentPathDir = 0x3d0; // FVector
		constexpr auto RouteGoal = 0x3dc; // ObjectProperty
		constexpr auto RouteDist = 0x3e4; // float
		constexpr auto LastRouteFind = 0x3e8; // float
		constexpr auto PendingMover = 0x3ec; // ObjectProperty
		constexpr auto FailedMoveTarget = 0x3f4; // ObjectProperty
		constexpr auto MoveFailureCount = 0x3fc; // int32_t
		constexpr auto GroundPitchTime = 0x400; // float
		constexpr auto ShotTarget = 0x404; // ObjectProperty
		constexpr auto LastFailedReach = 0x40c; // ObjectProperty
		constexpr auto FailedReachTime = 0x414; // float
		constexpr auto FailedReachLocation = 0x418; // FVector
		constexpr auto SightCounter = 0x424; // float
		constexpr auto SightCounterInterval = 0x428; // float
		constexpr auto InUseNodeCostMultiplier = 0x42c; // float
		constexpr auto HighJumpNodeCostModifier = 0x430; // int32_t
		constexpr auto MaxMoveTowardPawnTargetTime = 0x434; // float
		constexpr auto Enemy = 0x438; // ObjectProperty
		constexpr auto VisiblePortals = 0x440; // TArray<FVisiblePortalInfo>
		constexpr auto LaneOffset = 0x450; // float
		constexpr auto OldBasedRotation = 0x454; // FRotator
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x460; // FVector
		constexpr auto NavMeshPath_SearchHierachicalMinDistance = 0x46c; // float
	}

	namespace n_UDrawCylinderComponent {
		constexpr auto CylinderColor = 0x24c; // FColor
		constexpr auto CylinderMaterial = 0x250; // ObjectProperty
		constexpr auto CylinderRadius = 0x258; // float
		constexpr auto CylinderTopRadius = 0x25c; // float
		constexpr auto CylinderHeight = 0x260; // float
		constexpr auto CylinderHeightOffset = 0x264; // float
		constexpr auto CylinderSides = 0x268; // int32_t
		constexpr auto bDrawWireCylinder = 0x26c; // char : 1
		constexpr auto bDrawLitCylinder = 0x26c; // char : 1
		constexpr auto bDrawOnlyIfSelected = 0x26c; // char : 1
	}

	namespace n_UParticleModuleAttractorBoneSocket {
		constexpr auto FalloffType = 0x68; // EBoneSocketAttractorFalloffType
		constexpr auto DestinationType = 0x69; // ELocationBoneSocketDestination
		constexpr auto SelectionMethod = 0x6a; // ELocationBoneSocketDestSelectionMethod
		constexpr auto bParticleLifeRelative = 0x6c; // char : 1
		constexpr auto bAttractAlongLengthOfBone = 0x6c; // char : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SourceLocations = 0x154; // TArray<FAttractLocationBoneSocketInfo>
		constexpr auto SkelMeshActorParamName = 0x164; // FName
	}

	namespace n_ULevelStreaming {
		constexpr auto PackageName = 0x60; // FName
		constexpr auto LoadedLevel = 0x68; // ObjectProperty
		constexpr auto Offset = 0x70; // FVector
		constexpr auto LevelTransform = 0x80; // FMatrix
		constexpr auto OldOffset = 0xc0; // FVector
		constexpr auto bIsVisible = 0xcc; // char : 1
		constexpr auto bHasLoadRequestPending = 0xcc; // char : 1
		constexpr auto bHasUnloadRequestPending = 0xcc; // char : 1
		constexpr auto bShouldBeVisibleInEditor = 0xcc; // char : 1
		constexpr auto bBoundingBoxVisible = 0xcc; // char : 1
		constexpr auto bLocked = 0xcc; // char : 1
		constexpr auto bIsFullyStatic = 0xcc; // char : 1
		constexpr auto bShouldBeLoaded = 0xcc; // char : 1
		constexpr auto bShouldBeVisible = 0xcc; // char : 0
		constexpr auto bShouldBlockOnLoad = 0xcc; // char : 0
		constexpr auto bDrawOnLevelStatusMap = 0xcc; // char : 0
		constexpr auto bIsRequestingUnloadAndRemoval = 0xcc; // char : 0
		constexpr auto bClientSideLevel = 0xcc; // char : 0
		constexpr auto DrawColor = 0xd0; // FColor
		constexpr auto EditorStreamingVolumes = 0xd4; // TArray<ObjectProperty>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe4; // float
		constexpr auto LastVolumeUnloadRequestTime = 0xe8; // float
		constexpr auto EditorGridVolume = 0xec; // ObjectProperty
		constexpr auto GridPosition = 0xf4; // int32_t [0x3]
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x68; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x8c; // char : 1
	}

	namespace n_UTgSeqAct_PauseSetupTimer {
		constexpr auto PauseImmediately = 0x108; // char : 1
		constexpr auto PauseAtTimeRemaining = 0x10c; // float
	}

	namespace n_ATgDevice_BarrierTankInhand {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
		constexpr auto m_CachedBarrierTankPawn = 0xaf4; // ObjectProperty
		constexpr auto m_vProjectileSpawnOffset2 = 0xafc; // FVector
		constexpr auto m_vProjectileSpawnOffset3 = 0xb08; // FVector
		constexpr auto __InterruptFiringDelegate__Delegate = 0xb14; // DelegateProperty
	}

	namespace n_UUISubtitle {
		constexpr auto m_fTimer = 0x244; // float
		constexpr auto m_fSwitchTimer = 0x248; // float
		constexpr auto m_sNewSubtitle = 0x24c; // FString
		constexpr auto m_mcText = 0x25c; // ObjectProperty
		constexpr auto m_mcFrame = 0x264; // ObjectProperty
	}

	namespace n_UTgAIBehaviorTree {
		constexpr auto ChildNode = 0x94; // ObjectProperty
		constexpr auto SensorNodes = 0x9c; // TArray<ObjectProperty>
		constexpr auto UtilitySets = 0xac; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject {
		constexpr auto m_InventoryData = 0x60; // FInventoryData
		constexpr auto m_nRefData = 0x88; // int32_t
		constexpr auto m_InvManager = 0x8c; // ObjectProperty
		constexpr auto m_bTemporary = 0x94; // char : 1
		constexpr auto s_ReplicatedState = 0x98; // EReplicatedState
		constexpr auto m_pAmItem = 0x9c; // FPointer
		constexpr auto c_nNbrAcquired = 0xa4; // int32_t
		constexpr auto c_fTimeAcquired = 0xa8; // float
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTargetAsCombatTarget {
		constexpr auto bSkipPawnNotify = 0x94; // char : 1
	}

	namespace n_UTranslationContext {
		constexpr auto TranslatorTags = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimNodeBlendList {
		constexpr auto DefaultBlendTime = 0x144; // float
		constexpr auto ChildBlendTimes = 0x148; // TArray<float>
		constexpr auto SpecificChildBlendTimes = 0x158; // TArray<FChildBlendParam>
	}

	namespace n_UUIComponent_HealFeedEntry {
		constexpr auto m_mcText = 0x120; // ObjectProperty
		constexpr auto m_fRawAmount = 0x128; // float
		constexpr auto m_fChangeAmount = 0x12c; // float
		constexpr auto m_bHealingReduced = 0x130; // char : 1
		constexpr auto m_eHealDisplayType = 0x134; // HealDisplayType
	}

	namespace n_USeqAct_Switch {
		constexpr auto LinkCount = 0x108; // int32_t
		constexpr auto IncrementAmount = 0x10c; // int32_t
		constexpr auto bLooping = 0x110; // char : 1
		constexpr auto bAutoDisableLinks = 0x110; // char : 1
		constexpr auto Indices = 0x114; // TArray<int32_t>
	}

	namespace n_UActorFactoryApexDestructible {
		constexpr auto bStartAwake = 0x9c; // char : 1
		constexpr auto RBChannel = 0xa0; // ERBCollisionChannel
		constexpr auto CollideWithChannels = 0xa4; // FRBCollisionChannelContainer
		constexpr auto DestructibleAsset = 0xa8; // ObjectProperty
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0xa0; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0xb0; // char : 1
		constexpr auto fIntroFadeTime = 0xb4; // float
		constexpr auto fOutroFadeTime = 0xb8; // float
	}

	namespace n_UObject {
		constexpr auto VfTableObject = 0x0; // FPointer
		constexpr auto HashNext = 0x8; // FPointer
		constexpr auto ObjectFlags = 0x10; // FQWord
		constexpr auto HashOuterNext = 0x18; // FPointer
		constexpr auto StateFrame = 0x20; // FPointer
		constexpr auto Linker = 0x28; // ObjectProperty
		constexpr auto LinkerIndex = 0x30; // FPointer
		constexpr auto ObjectInternalInteger = 0x38; // int32_t
		constexpr auto NetIndex = 0x3c; // int32_t
		constexpr auto Outer = 0x40; // ObjectProperty
		constexpr auto Name = 0x48; // FName
		constexpr auto Class = 0x50; // UObject*
		constexpr auto ObjectArchetype = 0x58; // ObjectProperty
	}

	namespace n_UFluidSurfaceComponent {
		constexpr auto FluidMaterial = 0x24c; // ObjectProperty
		constexpr auto LightMapResolution = 0x254; // int32_t
		constexpr auto LightmassSettings = 0x258; // FLightmassPrimitiveSettings
		constexpr auto EnableSimulation = 0x274; // char : 1
		constexpr auto EnableDetail = 0x274; // char : 1
		constexpr auto bTiling = 0x274; // char : 1
		constexpr auto bPause = 0x274; // char : 1
		constexpr auto bShowSimulationNormals = 0x274; // char : 1
		constexpr auto bShowSimulationPosition = 0x274; // char : 1
		constexpr auto bShowDetailNormals = 0x274; // char : 1
		constexpr auto bShowDetailPosition = 0x274; // char : 1
		constexpr auto bShowFluidSimulation = 0x274; // char : 0
		constexpr auto bShowFluidDetail = 0x274; // char : 0
		constexpr auto bTestRipple = 0x274; // char : 0
		constexpr auto bTestRippleCenterOnDetail = 0x274; // char : 0
		constexpr auto SimulationQuadsX = 0x278; // int32_t
		constexpr auto SimulationQuadsY = 0x27c; // int32_t
		constexpr auto GridSpacing = 0x280; // float
		constexpr auto GridSpacingLowRes = 0x284; // float
		constexpr auto TargetSimulation = 0x288; // ObjectProperty
		constexpr auto GPUTessellationFactor = 0x290; // float
		constexpr auto FluidDamping = 0x294; // float
		constexpr auto FluidTravelSpeed = 0x298; // float
		constexpr auto FluidHeightScale = 0x29c; // float
		constexpr auto FluidUpdateRate = 0x2a0; // float
		constexpr auto ForceImpact = 0x2a4; // float
		constexpr auto ForceContinuous = 0x2a8; // float
		constexpr auto LightingContrast = 0x2ac; // float
		constexpr auto TargetDetail = 0x2b0; // ObjectProperty
		constexpr auto DeactivationDistance = 0x2b8; // float
		constexpr auto DetailResolution = 0x2bc; // int32_t
		constexpr auto DetailSize = 0x2c0; // float
		constexpr auto DetailDamping = 0x2c4; // float
		constexpr auto DetailTravelSpeed = 0x2c8; // float
		constexpr auto DetailTransfer = 0x2cc; // float
		constexpr auto DetailHeightScale = 0x2d0; // float
		constexpr auto DetailUpdateRate = 0x2d4; // float
		constexpr auto NormalLength = 0x2d8; // float
		constexpr auto TestRippleSpeed = 0x2dc; // float
		constexpr auto TestRippleFrequency = 0x2e0; // float
		constexpr auto TestRippleRadius = 0x2e4; // float
		constexpr auto FluidWidth = 0x2e8; // float
		constexpr auto FluidHeight = 0x2ec; // float
		constexpr auto TestRippleTime = 0x2f0; // float
		constexpr auto TestRippleAngle = 0x2f4; // float
		constexpr auto DeactivationTimer = 0x2f8; // float
		constexpr auto ViewDistance = 0x2fc; // float
		constexpr auto SimulationPosition = 0x300; // FVector
		constexpr auto DetailPosition = 0x30c; // FVector
		constexpr auto ClampMap = 0x318; // TArray<char>
		constexpr auto ShadowMaps = 0x328; // TArray<ObjectProperty>
		constexpr auto LightMap = 0x338; // FLightMapRef
		constexpr auto FluidSimulation = 0x340; // FPointer
	}

	namespace n_ATgDevice_GeometryBarrierTank {
		constexpr auto r_fTremorsCooldownReduction = 0xaec; // float
		constexpr auto m_fCachedWallHealthPercent = 0xaf0; // float
	}

	namespace n_UTgSkelCon_OscillateTranslation {
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationAxis = 0x108; // FVector
		constexpr auto OscillationAxisSpace = 0x114; // EBoneControlSpace
		constexpr auto OscillationAxisSpaceBoneName = 0x118; // FName
		constexpr auto Theta = 0x120; // float
	}

	namespace n_UUIData_LeagueTierChange {
		constexpr auto m_League = 0x60; // ObjectProperty
		constexpr auto m_PrevTier = 0x68; // ObjectProperty
		constexpr auto m_NextTier = 0x70; // ObjectProperty
		constexpr auto m_ePromotionType = 0x78; // UIDLTC_PromotionType
	}

	namespace n_UTextureFlipBook {
		constexpr auto VfTable_FTickableObject = 0x208; // FPointer
		constexpr auto TimeIntoMovie = 0x210; // float
		constexpr auto TimeSinceLastFrame = 0x214; // float
		constexpr auto HorizontalScale = 0x218; // float
		constexpr auto VerticalScale = 0x21c; // float
		constexpr auto bPaused = 0x220; // char : 1
		constexpr auto bStopped = 0x220; // char : 1
		constexpr auto bLooping = 0x220; // char : 1
		constexpr auto bAutoPlay = 0x220; // char : 1
		constexpr auto HorizontalImages = 0x224; // int32_t
		constexpr auto VerticalImages = 0x228; // int32_t
		constexpr auto FBMethod = 0x22c; // TextureFlipBookMethod
		constexpr auto FrameRate = 0x230; // float
		constexpr auto FrameTime = 0x234; // float
		constexpr auto CurrentRow = 0x238; // int32_t
		constexpr auto CurrentColumn = 0x23c; // int32_t
		constexpr auto RenderOffsetU = 0x240; // float
		constexpr auto RenderOffsetV = 0x244; // float
		constexpr auto ReleaseResourcesFence = 0x248; // FPointer
	}

	namespace n_AGamePlayerController {
		constexpr auto bWarnCrowdMembers = 0x76c; // char : 1
		constexpr auto bDebugCrowdAwareness = 0x76c; // char : 1
		constexpr auto bIsWarmupPaused = 0x76c; // char : 1
		constexpr auto bEnableMouseCursor = 0x76c; // char : 1
		constexpr auto AgentAwareRadius = 0x770; // float
		constexpr auto CurrentSoundMode = 0x774; // FName
	}

	namespace n_UTgAnimNodeTiltTowardsVelocity {
		constexpr auto m_MaximumVelocity = 0x114; // FVector2D
		constexpr auto m_PitchOffset = 0x11c; // int32_t
		constexpr auto m_MaximumPitchOffset = 0x120; // int32_t
		constexpr auto m_RollOffset = 0x124; // int32_t
		constexpr auto m_MaximumRollOffset = 0x128; // int32_t
		constexpr auto m_Pawn = 0x12c; // ObjectProperty
	}

	namespace n_UTgEffectDamage_Execute {
		constexpr auto m_bApplied = 0xc8; // char : 1
		constexpr auto m_bExecute = 0xc8; // char : 1
	}

	namespace n_UTgSpectatorInput {
		constexpr auto SpectatorSensitivity = 0x510; // float
	}

	namespace n_AGamePawn {
		constexpr auto bLastHitWasHeadShot = 0x5a8; // char : 1
		constexpr auto bRespondToExplosions = 0x5a8; // char : 1
	}

	namespace n_USeqEvent_HudRenderText {
		constexpr auto DisplayFont = 0x140; // ObjectProperty
		constexpr auto DisplayColor = 0x148; // FColor
		constexpr auto DisplayLocation = 0x14c; // FVector
		constexpr auto DisplayText = 0x158; // FString
		constexpr auto TextDrawMethod = 0x168; // ETextDrawMethod
	}

	namespace n_UGameWaveForms {
		constexpr auto CameraShakeMediumShort = 0x60; // ObjectProperty
		constexpr auto CameraShakeMediumLong = 0x68; // ObjectProperty
		constexpr auto CameraShakeBigShort = 0x70; // ObjectProperty
		constexpr auto CameraShakeBigLong = 0x78; // ObjectProperty
	}

	namespace n_UTgEffectForm_WithMeshes {
		constexpr auto m_EffectMeshInfos = 0xfc; // TArray<FEffectMeshInfo>
	}

	namespace n_UTgParticleSystemComponent {
		constexpr auto m_AttachedToSkelMesh = 0x3c8; // ComponentProperty
		constexpr auto m_bReenableAfterTeleport = 0x3d0; // char : 1
	}

	namespace n_USoundNodeLooping {
		constexpr auto bLoopIndefinitely = 0x74; // char : 1
		constexpr auto LoopCountMin = 0x78; // float
		constexpr auto LoopCountMax = 0x7c; // float
		constexpr auto LoopCount = 0x80; // FRawDistributionFloat
	}

	namespace n_UOnlineProfileSettings {
		constexpr auto ProfileSettingIds = 0x94; // TArray<int32_t>
		constexpr auto DefaultSettings = 0xa4; // TArray<FOnlineProfileSetting>
		constexpr auto OwnerMappings = 0xb4; // TArray<FIdToStringMapping>
	}

	namespace n_ATgDevice_GroverInhand {
		constexpr auto m_nProjectilesRemaining = 0xaec; // int32_t
		constexpr auto m_nProjectileCount = 0xaf0; // int32_t
		constexpr auto m_fMultiProjectileDelay = 0xaf4; // float
	}

	namespace n_UTgAIBehaviorAction_TargetNearestChest {
		constexpr auto SeenAsOpen = 0x94; // char : 1
		constexpr auto CheckLOS = 0x94; // char : 1
	}

	namespace n_UFogVolumeConstantDensityComponent {
		constexpr auto Density = 0xe0; // float
	}

	namespace n_UTgAIBehaviorCondition_AtDropLocation {
		constexpr auto Tolerance = 0x98; // float
	}

	namespace n_UTgAIBehaviorCondition_SiegeScore {
		constexpr auto ScoreThreshold = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_ATgWeaponMeshActor_Orb {
		constexpr auto m_fFireGlowFadeTime = 0x504; // float
		constexpr auto m_fRemainingGlowFadeTime = 0x508; // float
	}

	namespace n_UUIComponent_RankedEOMProgress {
		constexpr auto m_mcNetTP = 0x120; // ObjectProperty
		constexpr auto m_mcCurrentTP = 0x128; // ObjectProperty
		constexpr auto m_mcCurrentRank = 0x130; // ObjectProperty
		constexpr auto m_mcRankIconPrev = 0x138; // ObjectProperty
		constexpr auto m_mcRankIconNext = 0x140; // ObjectProperty
		constexpr auto m_pProgress = 0x148; // ObjectProperty
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x68; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x8c; // char : 1
		constexpr auto bFloor = 0x8c; // char : 1
		constexpr auto bApplyPSysScale = 0x8c; // char : 1
	}

	namespace n_UTitleFileDownloadCache {
		constexpr auto TitleFiles = 0x80; // TArray<FTitleFileCacheEntry>
		constexpr auto LoadCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto SaveCompleteDelegates = 0xa0; // TArray<DelegateProperty>
		constexpr auto __OnLoadTitleFileComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnSaveTitleFileComplete__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UTgDeviceForm_Emote {
		constexpr auto m_BlendByEmoteTypeNodes = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_bIsLooping = 0x2cc; // char : 1
	}

	namespace n_UTgAnimNodePlayFireAnim {
		constexpr auto FireAnimNodeName = 0x168; // FName
		constexpr auto FireAnimNodeSequence = 0x170; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsChestLooted {
		constexpr auto SeenAsOpen = 0x98; // char : 1
	}

	namespace n_ATgInventoryManager_Player {
		constexpr auto s_DynamicCardsMap = 0x3b0; // TMap<None, None>
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x60; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_USeqCond_SwitchObject {
		constexpr auto SupportedValues = 0xec; // TArray<FSwitchObjectCase>
	}

	namespace n_UUIDataProvider_OnlinePartyChatList {
		constexpr auto PartyMembersList = 0x74; // TArray<FOnlinePartyMember>
		constexpr auto NatTypes = 0x84; // TArray<FString>
		constexpr auto NickNameCol = 0x94; // FString
		constexpr auto NatTypeCol = 0xa4; // FString
		constexpr auto IsLocalCol = 0xb4; // FString
		constexpr auto IsInPartyVoiceCol = 0xc4; // FString
		constexpr auto IsTalkingCol = 0xd4; // FString
		constexpr auto IsInGameSessionCol = 0xe4; // FString
		constexpr auto IsPlayingThisGameCol = 0xf4; // FString
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x74; // char : 1
	}

	namespace n_ATgTeamRoyaleZeppelin {
		constexpr auto m_SkeletalMeshComponent = 0x280; // ComponentProperty
		constexpr auto m_LightEnvironment = 0x288; // ComponentProperty
		constexpr auto m_PlayerList = 0x290; // TArray<ObjectProperty>
		constexpr auto m_TaskForceList = 0x2a0; // TArray<ObjectProperty>
		constexpr auto m_DeployLocation = 0x2b0; // FVector
		constexpr auto m_DeployRotation = 0x2bc; // FRotator
		constexpr auto m_fDeployTime = 0x2c8; // float
		constexpr auto m_fFlightDistance = 0x2cc; // float
		constexpr auto m_fFlightTime = 0x2d0; // float
		constexpr auto m_fFlightLerpAlpha = 0x2d4; // float
		constexpr auto m_fDownFlightTime = 0x2d8; // float
		constexpr auto r_fDownFlightDist = 0x2dc; // float
		constexpr auto m_fDownFlightAlpha = 0x2e0; // float
		constexpr auto r_fHealthPool = 0x2e4; // float
		constexpr auto r_vInitialLoc = 0x2e8; // FVector
		constexpr auto r_vTargetFlightLoc = 0x2f4; // FVector
		constexpr auto m_nZeppelinMeshAsmId = 0x300; // int32_t
		constexpr auto c_bLocalViewTarget = 0x304; // char : 1
		constexpr auto m_bStopAtInitialDeployRange = 0x304; // char : 1
		constexpr auto r_bDestroyAfterDeploy = 0x304; // char : 1
		constexpr auto r_bReadyForDeploy = 0x304; // char : 1
		constexpr auto r_nTeam = 0x308; // int32_t
		constexpr auto m_fInitialDeployRemainingTime = 0x30c; // float
		constexpr auto m_fAutoDeployRemainingTime = 0x310; // float
		constexpr auto m_fAutoDeployTime = 0x314; // float
		constexpr auto m_eFlightStatus = 0x318; // ZepFlightStatus
	}

	namespace n_ATeamInfo {
		constexpr auto TeamName = 0x280; // FString
		constexpr auto Size = 0x290; // int32_t
		constexpr auto Score = 0x294; // float
		constexpr auto TeamIndex = 0x298; // int32_t
		constexpr auto TeamColor = 0x29c; // FColor
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x60; // FVector
		constexpr auto ResetRotation = 0x6c; // FRotator
		constexpr auto InitialTM = 0x80; // FMatrix
		constexpr auto InitialQuat = 0xc0; // FQuat
	}

	namespace n_AGravityVolume {
		constexpr auto GravityZ = 0x314; // float
	}

	namespace n_USeqVar_Bool {
		constexpr auto bValue = 0xa0; // int32_t
	}

	namespace n_UTerrainWeightMapTexture {
		constexpr auto ParentTerrain = 0x208; // ObjectProperty
		constexpr auto WeightedMaterials = 0x210; // TArray<FPointer>
	}

	namespace n_UTgAnimMetaData_MeshAccessory {
		constexpr auto m_Meshes = 0x60; // TArray<FMeshPlacement>
		constexpr auto m_bSkinIndependent = 0x70; // char : 1
		constexpr auto m_bSetKeysNoInterp = 0x70; // char : 1
		constexpr auto m_bUseScaling = 0x70; // char : 1
		constexpr auto m_KeyFrames = 0x74; // TArray<FTimeModifier>
		constexpr auto m_fBecomeRelevantScale = 0x84; // float
		constexpr auto m_fCeaseRelevantScale = 0x88; // float
	}

	namespace n_UTgAnimNodeBlendByWeaponAnim {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_Device = 0x170; // ObjectProperty
		constexpr auto m_nmBuildupFireSpinControlName = 0x178; // FName
		constexpr auto m_BuildupFireSpinControl = 0x180; // ObjectProperty
		constexpr auto m_nmRecoilControlNames = 0x188; // TArray<FName>
		constexpr auto m_RecoilControls = 0x198; // TArray<ObjectProperty>
		constexpr auto m_TinyWeaponsRecoilControls = 0x1a8; // TArray<ObjectProperty>
		constexpr auto m_nmMeleeControlNames = 0x1b8; // TArray<FName>
		constexpr auto m_MeleeControls = 0x1c8; // TArray<ObjectProperty>
		constexpr auto m_bPlayBuildUp = 0x1d8; // char : 1
		constexpr auto m_bPlayFire = 0x1d8; // char : 1
		constexpr auto m_bScaleFireByRefireTime = 0x1d8; // char : 1
		constexpr auto m_bScalePutawayRetrieveAnims = 0x1d8; // char : 1
		constexpr auto m_bSetIdleOnNonRelevant = 0x1d8; // char : 1
		constexpr auto m_bPlayFireOnlyWhenRelevant = 0x1d8; // char : 1
		constexpr auto m_FireFinalRoundAnimName = 0x1dc; // FName
		constexpr auto m_DryFireAnimName = 0x1e4; // FName
		constexpr auto m_MovingFireAnimName = 0x1ec; // FName
		constexpr auto m_StandardFireAnimName = 0x1f4; // FName
		constexpr auto m_StandardPostFireAnimName = 0x1fc; // FName
		constexpr auto m_ReloadPartialClipAnimName = 0x204; // FName
		constexpr auto m_StandardReloadAnimName = 0x20c; // FName
		constexpr auto m_CameraAnimations = 0x214; // TArray<FDeviceNodeCameraAnimation>
		constexpr auto m_FireCameraShake = 0x224; // ObjectProperty
		constexpr auto m_EquipPoint = 0x22c; // TG_EQUIP_POINT
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x68; // char : 1
		constexpr auto bNRScaleEmitterTime = 0x68; // char : 1
		constexpr auto bSmooth = 0x68; // char : 1
		constexpr auto bNoiseLock = 0x68; // char : 1
		constexpr auto bOscillate = 0x68; // char : 1
		constexpr auto bUseNoiseTangents = 0x68; // char : 1
		constexpr auto bTargetNoise = 0x68; // char : 1
		constexpr auto bApplyNoiseScale = 0x68; // char : 1
		constexpr auto Frequency = 0x6c; // int32_t
		constexpr auto Frequency_LowRange = 0x70; // int32_t
		constexpr auto NoiseRange = 0x74; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x98; // FRawDistributionFloat
		constexpr auto NoiseSpeed = 0xbc; // FRawDistributionVector
		constexpr auto NoiseLockRadius = 0xe0; // float
		constexpr auto NoiseLockTime = 0xe4; // float
		constexpr auto NoiseTension = 0xe8; // float
		constexpr auto NoiseTangentStrength = 0xec; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x110; // int32_t
		constexpr auto FrequencyDistance = 0x114; // float
		constexpr auto NoiseScale = 0x118; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorCondition_IsLastAttackerOfType {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UTgControlModule_Free {
		constexpr auto CameraYawOffset = 0x6c; // int32_t
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0xb0; // float
	}

	namespace n_USoundNode {
		constexpr auto NodeUpdateHint = 0x60; // int32_t
		constexpr auto ChildNodes = 0x64; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_Transporter {
		constexpr auto m_fDowntraceDistance = 0xaec; // float
		constexpr auto c_vCurrentTargeting2Location = 0xaf0; // FVector
	}

	namespace n_ATgFatalityFactory {
		constexpr auto m_FatalityMeshActor = 0x280; // ObjectProperty
		constexpr auto m_LightingChannels = 0x288; // FLightingChannelContainer
	}

	namespace n_UTgDeviceForm_MountNoHorse {
		constexpr auto c_SparkleFXID = 0x2dc; // int32_t
		constexpr auto c_SparkleFX = 0x2e0; // ObjectProperty
	}

	namespace n_USeqAct_DivideFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_AHUD {
		constexpr auto WhiteColor = 0x280; // FColor
		constexpr auto GreenColor = 0x284; // FColor
		constexpr auto RedColor = 0x288; // FColor
		constexpr auto PlayerOwner = 0x28c; // ObjectProperty
		constexpr auto bLostFocusPaused = 0x294; // char : 1
		constexpr auto bShowHUD = 0x294; // char : 1
		constexpr auto bShowScores = 0x294; // char : 1
		constexpr auto bShowDebugInfo = 0x294; // char : 1
		constexpr auto bShowBadConnectionAlert = 0x294; // char : 1
		constexpr auto bShowDirectorInfoDebug = 0x294; // char : 1
		constexpr auto bShowDirectorInfoHUD = 0x294; // char : 1
		constexpr auto bMessageBeep = 0x294; // char : 1
		constexpr auto bRenderFullScreen = 0x294; // char : 0
		constexpr auto bScaleCanvasForCinematicMode = 0x294; // char : 0
		constexpr auto bShowOverlays = 0x294; // char : 0
		constexpr auto HudCanvasScale = 0x298; // float
		constexpr auto PostRenderedActors = 0x29c; // TArray<ObjectProperty>
		constexpr auto ConsoleMessages = 0x2ac; // TArray<FConsoleMessage>
		constexpr auto ConsoleColor = 0x2bc; // FColor
		constexpr auto ConsoleMessageCount = 0x2c0; // int32_t
		constexpr auto ConsoleFontSize = 0x2c4; // int32_t
		constexpr auto MessageFontOffset = 0x2c8; // int32_t
		constexpr auto MaxHUDAreaMessageCount = 0x2cc; // int32_t
		constexpr auto LocalMessages = 0x2d0; // FHudLocalizedMessage [0x8]
		constexpr auto ConsoleMessagePosX = 0x550; // float
		constexpr auto ConsoleMessagePosY = 0x554; // float
		constexpr auto Canvas = 0x558; // ObjectProperty
		constexpr auto LastHUDRenderTime = 0x560; // float
		constexpr auto RenderDelta = 0x564; // float
		constexpr auto SizeX = 0x568; // float
		constexpr auto SizeY = 0x56c; // float
		constexpr auto CenterX = 0x570; // float
		constexpr auto CenterY = 0x574; // float
		constexpr auto RatioX = 0x578; // float
		constexpr auto RatioY = 0x57c; // float
		constexpr auto DebugDisplay = 0x580; // TArray<FName>
		constexpr auto KismetTextInfo = 0x590; // TArray<FKismetDrawTextInfo>
	}

	namespace n_UTgInvListener_TargetOverHealed {
		constexpr auto s_stacks = 0xd0; // TArray<FTOHInfo>
	}

	namespace n_UTgAIBehaviorCondition_SelectedTargetHealthPercent {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIgnoreTaskforce = 0x9c; // char : 1
		constexpr auto TargetSelector = 0xa0; // ETargetSelector
		constexpr auto TargetType = 0xa1; // ECombatTargetType
		constexpr auto TargetId = 0xa4; // int32_t
		constexpr auto HealthPct = 0xa8; // float
	}

	namespace n_USeqCond_IsLoggedIn {
		constexpr auto NumNeededLoggedIn = 0xec; // int32_t
	}

	namespace n_UPComPerformanceCaptureBase {
		constexpr auto StatsToCollect = 0x60; // TArray<FName>
		constexpr auto StatIds = 0x70; // FArray_Mirror
		constexpr auto StatTypes = 0x80; // TArray<char>
		constexpr auto FOV = 0x90; // float
		constexpr auto Profiles = 0x94; // TArray<FPComPerformanceCaptureProfile>
		constexpr auto FallbackProfile = 0xa4; // FPComPerformanceCaptureProfile
		constexpr auto ActiveProfile = 0xc0; // FPComPerformanceCaptureProfile
	}

	namespace n_UUIGameInfoSummary {
		constexpr auto ClassName = 0x94; // FString
		constexpr auto GameAcronym = 0xa4; // FString
		constexpr auto MapPrefix = 0xb4; // FString
		constexpr auto bIsTeamGame = 0xc4; // char : 1
		constexpr auto bIsDisabled = 0xc4; // char : 1
		constexpr auto GameSettingsClassName = 0xc8; // FString
		constexpr auto GameName = 0xd8; // FString
		constexpr auto Description = 0xe8; // FString
	}

	namespace n_UBlurEffect {
		constexpr auto BlurKernelSize = 0x88; // int32_t
	}

	namespace n_UUIComponent_ContextMenuEntry {
		constexpr auto m_pFrameButton = 0x120; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_RunInRandomDirection {
		constexpr auto TraceDistance = 0x94; // float
		constexpr auto Acceleration = 0x98; // float
	}

	namespace n_ARB_LineImpulseActor {
		constexpr auto ImpulseStrength = 0x280; // float
		constexpr auto ImpulseRange = 0x284; // float
		constexpr auto bVelChange = 0x288; // char : 1
		constexpr auto bStopAtFirstHit = 0x288; // char : 1
		constexpr auto bCauseFracture = 0x288; // char : 1
		constexpr auto Arrow = 0x28c; // ComponentProperty
		constexpr auto ImpulseCount = 0x294; // char
	}

	namespace n_UUIInteractable_JsonPanel {
		constexpr auto m_mcHighlight = 0x140; // ObjectProperty
		constexpr auto m_mcImage = 0x148; // ObjectProperty
		constexpr auto m_mcTitle = 0x150; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x158; // ObjectProperty
		constexpr auto m_mcLiveBanner = 0x160; // ObjectProperty
		constexpr auto m_mcLiveBannerText = 0x168; // ObjectProperty [0x3]
		constexpr auto m_JsonFeatureData = 0x180; // FJsonFeatureData
		constexpr auto m_bInteractable = 0x214; // char : 1
	}

	namespace n_AAIController {
		constexpr auto bAdjustFromWalls = 0x470; // char : 1
		constexpr auto bReverseScriptedRoute = 0x470; // char : 1
		constexpr auto Skill = 0x474; // float
		constexpr auto ScriptedMoveTarget = 0x478; // ObjectProperty
		constexpr auto ScriptedRoute = 0x480; // ObjectProperty
		constexpr auto ScriptedRouteIndex = 0x488; // int32_t
		constexpr auto ScriptedFocus = 0x48c; // ObjectProperty
	}

	namespace n_ADroppedPickup {
		constexpr auto Inventory = 0x280; // ObjectProperty
		constexpr auto InventoryClass = 0x288; // AInventory*
		constexpr auto PickupCache = 0x290; // ObjectProperty
		constexpr auto bFadeOut = 0x298; // char : 1
	}

	namespace n_UAnimMetaData_SkelControlKeyFrame {
		constexpr auto KeyFrames = 0x7c; // TArray<FTimeModifier>
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x8c; // char : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x8c; // char : 1
	}

	namespace n_UTgDeviceForm_HexaFireGuns {
		constexpr auto m_SpinnerSkelControl1P = 0x2bc; // ObjectProperty
		constexpr auto m_SpinnerSkelControl3P = 0x2c4; // ObjectProperty
		constexpr auto m_nNextGunFired = 0x2cc; // int32_t
		constexpr auto c_nmSocket1 = 0x2d0; // FName
		constexpr auto c_nmSocket2 = 0x2d8; // FName
		constexpr auto c_nmSocket3 = 0x2e0; // FName
		constexpr auto c_nmSocket4 = 0x2e8; // FName
		constexpr auto m_LowerRightBarrel1P = 0x2f0; // ObjectProperty
		constexpr auto m_UpperRightBarrel1P = 0x2f8; // ObjectProperty
		constexpr auto m_LowerLeftBarrel1P = 0x300; // ObjectProperty
		constexpr auto m_UpperLeftBarrel1P = 0x308; // ObjectProperty
		constexpr auto m_LowerRightBarrel3P = 0x310; // ObjectProperty
		constexpr auto m_UpperRightBarrel3P = 0x318; // ObjectProperty
		constexpr auto m_LowerLeftBarrel3P = 0x320; // ObjectProperty
		constexpr auto m_UpperLeftBarrel3P = 0x328; // ObjectProperty
	}

	namespace n_UTgDeviceForm_DragonSlam {
		constexpr auto m_bStartFireInAir = 0x2bc; // char : 1
		constexpr auto m_DragonSlamBlendList1P = 0x2c0; // TArray<ObjectProperty>
		constexpr auto m_DragonSlamBlendList3P = 0x2d0; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_Weightless {
		constexpr auto r_fSprintHorizontalSpeedMod = 0xaec; // float
		constexpr auto r_fSprintJumpSpeedMod = 0xaf0; // float
	}

	namespace n_UUIDataStore_DynamicResource {
		constexpr auto ProfileProvider = 0x98; // ObjectProperty
		constexpr auto GameResourceDataStore = 0xa0; // ObjectProperty
		constexpr auto ResourceProviderDefinitions = 0xa8; // TArray<FDynamicResourceProviderDefinition>
		constexpr auto ResourceProviders = 0xb8; // FMultiMap_Mirror
	}

	namespace n_USeqAct_DivideInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_USeqAct_PlayAgentAnimation {
		constexpr auto AnimationList = 0x120; // TArray<FName>
		constexpr auto BlendInTime = 0x130; // float
		constexpr auto BlendOutTime = 0x134; // float
		constexpr auto bUseRootMotion = 0x138; // char : 1
		constexpr auto bFaceActionTargetFirst = 0x138; // char : 1
		constexpr auto bLooping = 0x138; // char : 1
		constexpr auto bBlendBetweenAnims = 0x138; // char : 1
		constexpr auto LoopIndex = 0x13c; // int32_t
		constexpr auto LoopTime = 0x140; // float
		constexpr auto ActionTarget = 0x144; // ObjectProperty
	}

	namespace n_UTgAnimMetaData_ScaleWeaponMesh {
		constexpr auto m_bSetKeysNoInterp = 0x80; // char : 1
	}

	namespace n_USeqVar_ObjectList {
		constexpr auto ObjList = 0xc4; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimNodeStanceDualFire {
		constexpr auto m_bFireParityDirty = 0x188; // char : 1
		constexpr auto m_nDesiredStance = 0x18c; // int32_t
	}

	namespace n_ATgSkeletalMeshActor_FlagStand {
		constexpr auto m_FlagContentDataClassName = 0x4d4; // FString
		constexpr auto m_FlagContentData = 0x4e4; // ObjectProperty
		constexpr auto m_nGameTaskForce = 0x4ec; // int32_t
		constexpr auto m_nTeamIndex = 0x4f0; // int32_t
	}

	namespace n_AAmbientSoundSimple {
		constexpr auto AmbientProperties = 0x294; // ObjectProperty
		constexpr auto SoundCueInstance = 0x29c; // ObjectProperty
		constexpr auto SoundNodeInstance = 0x2a4; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromAvoidableProjectile {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_ATgDevice_PrincessF {
		constexpr auto m_cachedSupportDevice = 0xb60; // ObjectProperty
		constexpr auto m_nEyeheightAdjustmentWhileSliding = 0xb68; // int32_t
		constexpr auto m_fEyeHeightSmoothFactor = 0xb6c; // float
	}

	namespace n_ATgProj_Tracer {
		constexpr auto PSC = 0x450; // ComponentProperty
	}

	namespace n_AFluidSurfaceActor {
		constexpr auto FluidComponent = 0x280; // ComponentProperty
		constexpr auto ProjectileEntryEffect = 0x288; // ObjectProperty
	}

	namespace n_UTgSeqAct_PlayRecoilSkelControl {
		constexpr auto SkelControlName = 0x108; // FName
		constexpr auto ProfileName = 0x110; // FName
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0xa0; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // char : 1
	}

	namespace n_UParticleModuleWorldAttractor {
		constexpr auto bParticleLifeRelative = 0x68; // char : 1
		constexpr auto AttractorInfluence = 0x6c; // FRawDistributionFloat
	}

	namespace n_ATgSpectatorCamera {
		constexpr auto m_DefaultBlendParams = 0x89c; // FViewTargetTransitionParams
		constexpr auto m_SnapBlendParams = 0x8ac; // FViewTargetTransitionParams
		constexpr auto m_CinematicAnim = 0x8bc; // ObjectProperty
		constexpr auto m_AnimInstance = 0x8c4; // ObjectProperty
	}

	namespace n_UTgAnimNodeStanceTransitionerSynchronized {
		constexpr auto StanceResetTime = 0x168; // float
		constexpr auto CanResetStanceOnTick = 0x16c; // char : 1
		constexpr auto m_bDelayingChildSwitch = 0x16c; // char : 1
		constexpr auto m_nCurrentStance = 0x170; // int32_t
		constexpr auto m_fTimestampToSwitchStance = 0x174; // float
		constexpr auto StanceTransitionControl = 0x178; // TArray<FStanceTransitionParam>
	}

	namespace n_UPhysicsLODVerticalEmitter {
		constexpr auto ParticlePercentage = 0x60; // int32_t
	}

	namespace n_UMobileMenuList {
		constexpr auto bIsVerticalList = 0xdc; // char : 1
		constexpr auto bDisableScrolling = 0xdc; // char : 1
		constexpr auto bForceSelectedToLineup = 0xdc; // char : 1
		constexpr auto bTapToScrollToItem = 0xdc; // char : 1
		constexpr auto bLoops = 0xdc; // char : 1
		constexpr auto SelectedOffset = 0xe0; // float
		constexpr auto Items = 0xe4; // TArray<ObjectProperty>
		constexpr auto SelectedItem = 0xf4; // FSelectedMenuItem
		constexpr auto Drag = 0x100; // FMenuListDragInfo
		constexpr auto Movement = 0x154; // FMenuListMovementInfo
		constexpr auto Deacceleration = 0x170; // float
		constexpr auto EaseOutExp = 0x174; // float
		constexpr auto ScreenSize = 0x178; // FIntPoint
		constexpr auto FirstVisible = 0x180; // int32_t
		constexpr auto LastVisible = 0x184; // int32_t
		constexpr auto NumShowEndOfList = 0x188; // int32_t
		constexpr auto EndOfListSupression = 0x18c; // float
	}

	namespace n_UTgDeviceForm_Turret {
		constexpr auto m_SKCTurretScale = 0x2bc; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Makoa {
		constexpr auto m_MarkedTargets = 0xd0; // TArray<FMarkedTargetHook>
	}

	namespace n_AInterpActor {
		constexpr auto bShouldSaveForCheckpoint = 0x2d0; // char : 1
		constexpr auto bMonitorMover = 0x2d0; // char : 1
		constexpr auto bMonitorZVelocity = 0x2d0; // char : 1
		constexpr auto bDestroyProjectilesOnEncroach = 0x2d0; // char : 1
		constexpr auto bContinueOnEncroachPhysicsObject = 0x2d0; // char : 1
		constexpr auto bStopOnEncroach = 0x2d0; // char : 1
		constexpr auto bContinueOnEncroachNonPawn = 0x2d0; // char : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x2d0; // char : 1
		constexpr auto bIsLift = 0x2d0; // char : 0
		constexpr auto MyMarker = 0x2d4; // ObjectProperty
		constexpr auto MaxZVelocity = 0x2dc; // float
		constexpr auto StayOpenTime = 0x2e0; // float
		constexpr auto OpenSound = 0x2e4; // ObjectProperty
		constexpr auto OpeningAmbientSound = 0x2ec; // ObjectProperty
		constexpr auto OpenedSound = 0x2f4; // ObjectProperty
		constexpr auto CloseSound = 0x2fc; // ObjectProperty
		constexpr auto ClosingAmbientSound = 0x304; // ObjectProperty
		constexpr auto ClosedSound = 0x30c; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x314; // ComponentProperty
	}

	namespace n_UTgDeviceForm_HeatHaze {
		constexpr auto m_bShouldBeActive = 0x2bc; // char : 1
		constexpr auto m_fUltActivationTime = 0x2c0; // float
		constexpr auto m_fUltActivationPercent = 0x2c4; // float
	}

	namespace n_UTgAIBehaviorCondition_IsItemInRadius {
		constexpr auto Radius = 0x98; // float
		constexpr auto CheckLOS = 0x9c; // char : 1
	}

	namespace n_UUIData_MatchInvitePlayerState {
		constexpr auto m_eState = 0x60; // MatchInvitePlayerState
	}

	namespace n_UTgGameDC_Game {
		constexpr auto m_GameTimer = 0x16c; // ObjectProperty
		constexpr auto m_FriendTeamData = 0x174; // ObjectProperty
		constexpr auto m_EnemyTeamData = 0x17c; // ObjectProperty
		constexpr auto m_GoldFury = 0x184; // ObjectProperty
		constexpr auto currentGameType = 0x18c; // GAME_MODE_TYPE
	}

	namespace n_UUIComponent_Display {
		constexpr auto m_pData = 0x118; // ObjectProperty
	}

	namespace n_UTgAnimNodeStanceFireIntercept {
		constexpr auto m_nStanceToAllow = 0x168; // int32_t
		constexpr auto m_nCurrentStance = 0x16c; // int32_t
	}

	namespace n_UUIComponent_BattlePassHome {
		constexpr auto m_pPurchasePanel = 0x120; // ObjectProperty
		constexpr auto m_pInfoPanel = 0x128; // ObjectProperty
		constexpr auto m_pItemInfo = 0x130; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x138; // ObjectProperty
		constexpr auto m_mcAvatarContainer = 0x140; // ObjectProperty
		constexpr auto m_Avatar = 0x148; // ObjectProperty
		constexpr auto m_pTiers = 0x150; // ObjectProperty
		constexpr auto m_pNextReward = 0x158; // ObjectProperty
		constexpr auto m_pPrevReward = 0x160; // ObjectProperty
		constexpr auto m_mcTiersTF0 = 0x168; // ObjectProperty
		constexpr auto m_mcTiersTF1 = 0x170; // ObjectProperty
		constexpr auto m_mcBattlePassTrack = 0x178; // ObjectProperty
		constexpr auto m_mcBattlePassTrackHeader = 0x180; // ObjectProperty
		constexpr auto m_grGroup = 0x188; // ObjectProperty
		constexpr auto m_nAcknowledgedTier = 0x190; // int32_t
		constexpr auto m_nAcknowledgedLevel = 0x194; // int32_t
		constexpr auto m_dwAcknowledgedPoints = 0x198; // Fdword
		constexpr auto m_bAcknowledgedPaid = 0x19c; // char : 1
		constexpr auto m_bFirstPresentation = 0x19c; // char : 1
		constexpr auto m_vBaseCameraOffset = 0x1a0; // FVector
		constexpr auto m_vMountCameraOffset = 0x1ac; // FVector
		constexpr auto m_vDeathStampCameraOffset = 0x1b8; // FVector
		constexpr auto m_InputScrollLeft = 0x1c4; // ObjectProperty
		constexpr auto m_InputScrollRight = 0x1cc; // ObjectProperty
		constexpr auto m_nOnTickCallbackHandle = 0x1d4; // int32_t
		constexpr auto m_pPromptLeft = 0x1d8; // ObjectProperty
		constexpr auto m_pPromptRight = 0x1e0; // ObjectProperty
		constexpr auto m_pPreviewLTIRequested = 0x1e8; // ObjectProperty
	}

	namespace n_ARoute {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x280; // FPointer
		constexpr auto RouteType = 0x288; // ERouteType
		constexpr auto RouteList = 0x28c; // TArray<FActorReference>
		constexpr auto FudgeFactor = 0x29c; // float
		constexpr auto RouteIndexOffset = 0x2a0; // int32_t
	}

	namespace n_ANxForceFieldGeneric {
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto RoughExtentX = 0x2e4; // float
		constexpr auto RoughExtentY = 0x2e8; // float
		constexpr auto RoughExtentZ = 0x2ec; // float
		constexpr auto Coordinates = 0x2f0; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2f4; // FVector
		constexpr auto PositionMultiplierX = 0x300; // FVector
		constexpr auto PositionMultiplierY = 0x30c; // FVector
		constexpr auto PositionMultiplierZ = 0x318; // FVector
		constexpr auto PositionTarget = 0x324; // FVector
		constexpr auto VelocityMultiplierX = 0x330; // FVector
		constexpr auto VelocityMultiplierY = 0x33c; // FVector
		constexpr auto VelocityMultiplierZ = 0x348; // FVector
		constexpr auto VelocityTarget = 0x354; // FVector
		constexpr auto Noise = 0x360; // FVector
		constexpr auto FalloffLinear = 0x36c; // FVector
		constexpr auto FalloffQuadratic = 0x378; // FVector
		constexpr auto TorusRadius = 0x384; // float
		constexpr auto LinearKernel = 0x388; // FPointer
	}

	namespace n_UJsonObject {
		constexpr auto ValueMap = 0x60; // FMap_Mirror
		constexpr auto ObjectMap = 0xa8; // FMap_Mirror
		constexpr auto ValueArray = 0xf0; // TArray<FString>
		constexpr auto ObjectArray = 0x100; // TArray<ObjectProperty>
	}

	namespace n_UGFxAction_Invoke {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MethodName = 0x110; // FString
		constexpr auto Arguments = 0x120; // TArray<FASValue>
	}

	namespace n_UTgAIBehaviorAction_MoveToLanePusher {
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_UTgGameDC_MapEntity {
		constexpr auto m_nPawnId = 0x16c; // int32_t
	}

	namespace n_UUIComponent_PromptRadialMenu {
		constexpr auto m_mcTF = 0x120; // ObjectProperty
		constexpr auto m_mcMouseWheel = 0x128; // ObjectProperty
		constexpr auto m_pKey = 0x130; // ObjectProperty
		constexpr auto m_pFrameButton = 0x138; // ObjectProperty
	}

	namespace n_UUIComponent_ChallengeGoal {
		constexpr auto m_pProgress = 0x120; // ObjectProperty
		constexpr auto m_mcTexture = 0x128; // ObjectProperty
		constexpr auto m_mcTF0 = 0x130; // ObjectProperty
		constexpr auto m_mcTF1 = 0x138; // ObjectProperty
	}

	namespace n_UTgInvListener_ConsumeMarksForDamage {
		constexpr auto m_PendingMarkRemoval = 0xcc; // TArray<ObjectProperty>
	}

	namespace n_UTgDataObject {
		constexpr auto m_bDirty = 0x60; // char : 1
		constexpr auto m_bCallback = 0x60; // char : 1
		constexpr auto m_Laundry = 0x64; // TArray<UIID>
		constexpr auto m_Data = 0x74; // TMap<None, None>
	}

	namespace n_ATgProj_TargetedBounceBase {
		constexpr auto m_LastBounceTarget = 0x56c; // ObjectProperty
		constexpr auto m_NextBounceTarget = 0x574; // ObjectProperty
		constexpr auto m_bCanTargetShields = 0x57c; // char : 1
		constexpr auto m_fMaxBounceRange = 0x580; // float
	}

	namespace n_UTgInventoryObject_Listen_PetAbilityWhileDeployableActive {
		constexpr auto m_nActiveDeployableCount = 0xc8; // int32_t
	}

	namespace n_ATgSpawnTeleporterEntrance {
		constexpr auto bEnabled = 0x2bc; // char : 1
	}

	namespace n_UNetDriver {
		constexpr auto ConnectionTimeout = 0x9c; // float
		constexpr auto InitialConnectTimeout = 0xa0; // float
		constexpr auto P2PConnectionTimeout = 0xa4; // float
		constexpr auto InitialHandshakeTimeout = 0xa8; // float
		constexpr auto KeepAliveTime = 0xac; // float
		constexpr auto RelevantTimeout = 0xb0; // float
		constexpr auto SpawnPrioritySeconds = 0xb4; // float
		constexpr auto ServerTravelPause = 0xb8; // float
		constexpr auto MaxClientRate = 0xc0; // int32_t
		constexpr auto MaxInternetClientRate = 0xc4; // int32_t
		constexpr auto NetServerMaxTickRate = 0xc8; // int32_t
		constexpr auto bClampListenServerTickRate = 0xd0; // char : 1
		constexpr auto AllowDownloads = 0xd4; // char : 1
		constexpr auto AllowPeerConnections = 0xd8; // char : 1
		constexpr auto AllowPeerVoice = 0xdc; // char : 1
		constexpr auto MaxDownloadSize = 0x100; // int32_t
		constexpr auto DownloadManagers = 0x104; // TArray<FString>
		constexpr auto NetConnectionClassName = 0x1b0; // FString
		constexpr auto PeerNetConnectionClassName = 0x1c8; // FString
	}

	namespace n_UHttpRequestInterface {
		constexpr auto __OnProcessRequestComplete__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UDistributionVector {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // char : 1
		constexpr auto bIsDirty = 0x78; // char : 1
	}

	namespace n_ATrigger {
		constexpr auto CylinderComponent = 0x280; // ComponentProperty
		constexpr auto bRecentlyTriggered = 0x288; // char : 1
		constexpr auto AITriggerDelay = 0x28c; // float
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0xa0; // TArray<FParticleReplayTrackKey>
		constexpr auto bIsCapturingReplay = 0xb0; // char : 1
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto ExpressionGUID = 0x128; // FGuid
		constexpr auto Group = 0x138; // FName
	}

	namespace n_UPBRuleNodeCorner {
		constexpr auto CornerSize = 0x70; // float
		constexpr auto Angles = 0x74; // TArray<FRBCornerAngleInfo>
		constexpr auto FlatThreshold = 0x84; // float
		constexpr auto bNoMeshForConcaveCorners = 0x88; // char : 1
		constexpr auto bUseAdjacentRulesetForRightGap = 0x88; // char : 1
		constexpr auto CornerType = 0x8c; // EPBCornerType
		constexpr auto CornerShapeOffset = 0x90; // float
		constexpr auto RoundTesselation = 0x94; // int32_t
		constexpr auto RoundCurvature = 0x98; // float
	}

	namespace n_UHttpFactory {
		constexpr auto HttpRequestClassName = 0x60; // FString
	}

	namespace n_UOnlineTitleFileDownloadWeb {
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileWeb>
	}

	namespace n_UMcpServerTimeBase {
		constexpr auto McpServerTimeClassName = 0x78; // FString
		constexpr auto __OnQueryServerTimeComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UTgDeviceFire_DrogozLeg1 {
		constexpr auto m_DamageAmount = 0x270; // float
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileInGrass {
		constexpr auto m_bCachedIsInGrass = 0xc8; // char : 1
		constexpr auto s_fExitTimestamp = 0xcc; // float
	}

	namespace n_ATgPathPreviewActor {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_Destination = 0x288; // ObjectProperty
		constexpr auto m_Source = 0x290; // ObjectProperty
		constexpr auto m_NavigationHandle = 0x298; // ObjectProperty
		constexpr auto m_NavMeshPathParams = 0x2a0; // FNavMeshPathParams
	}

	namespace n_UUIComponent_BattlePassRewardJoinedLevels {
		constexpr auto m_pLevels = 0x120; // TArray<ObjectProperty>
		constexpr auto m_mcHeader = 0x130; // ObjectProperty
		constexpr auto m_mcTierLock = 0x138; // ObjectProperty
	}

	namespace n_USplineComponent {
		constexpr auto SplineInfo = 0x24c; // FInterpCurveVector
		constexpr auto SplineCurviness = 0x260; // float
		constexpr auto SplineColor = 0x264; // FColor
		constexpr auto SplineDrawRes = 0x268; // float
		constexpr auto SplineArrowSize = 0x26c; // float
		constexpr auto bSplineDisabled = 0x270; // char : 1
		constexpr auto SplineReparamTable = 0x274; // FInterpCurveFloat
	}

	namespace n_UTgSeqAct_AITargetActor {
		constexpr auto CombatTarget = 0x108; // ObjectProperty
	}

	namespace n_UFailedConnect {
		constexpr auto FailMessage = 0x74; // FString [0x4]
	}

	namespace n_UUIComponent_Rotator {
		constexpr auto m_nTickHandle = 0x120; // int32_t
		constexpr auto m_fRotationDegreesPerSecond = 0x124; // float
	}

	namespace n_UPostProcessEffect {
		constexpr auto bShowInEditor = 0x60; // char : 1
		constexpr auto bShowInGame = 0x60; // char : 1
		constexpr auto bUseWorldSettings = 0x60; // char : 1
		constexpr auto m_D3D11Only = 0x60; // char : 1
		constexpr auto bAffectsLightingOnly = 0x60; // char : 1
		constexpr auto EffectName = 0x64; // FName
		constexpr auto NodePosY = 0x6c; // int32_t
		constexpr auto NodePosX = 0x70; // int32_t
		constexpr auto DrawWidth = 0x74; // int32_t
		constexpr auto DrawHeight = 0x78; // int32_t
		constexpr auto OutDrawY = 0x7c; // int32_t
		constexpr auto InDrawY = 0x80; // int32_t
		constexpr auto SceneDPG = 0x84; // ESceneDepthPriorityGroup
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto SceneProxy = 0x88; // FPointer
		constexpr auto Strength = 0x90; // float
		constexpr auto Phase = 0x94; // float
		constexpr auto Frequency = 0x98; // float
		constexpr auto Speed = 0x9c; // float
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x24c; // ObjectProperty
		constexpr auto LightEnvironmentClass = 0x254; // UParticleLightEnvironmentComponent*
		constexpr auto LightEnvironmentSharedInstigator = 0x25c; // ObjectProperty
		constexpr auto MaxLightEnvironmentPooledReuses = 0x264; // int32_t
		constexpr auto EmitterInstances = 0x268; // TArray<FPointer>
		constexpr auto SMComponents = 0x278; // TArray<ComponentProperty>
		constexpr auto SMMaterialInterfaces = 0x288; // TArray<ObjectProperty>
		constexpr auto SkelMeshComponents = 0x298; // TArray<ComponentProperty>
		constexpr auto ViewMBInfoArray = 0x2a8; // TArray<FViewParticleEmitterInstanceMotionBlurInfo>
		constexpr auto bAutoActivate = 0x2b8; // char : 1
		constexpr auto bWasCompleted = 0x2b8; // char : 1
		constexpr auto bHasDurationElapsed = 0x2b8; // char : 1
		constexpr auto bSuppressSpawning = 0x2b8; // char : 1
		constexpr auto bWasDeactivated = 0x2b8; // char : 1
		constexpr auto bResetOnDetach = 0x2b8; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x2b8; // char : 1
		constexpr auto bJustAttached = 0x2b8; // char : 1
		constexpr auto bIsActive = 0x2b8; // char : 0
		constexpr auto bHasBeenActivated = 0x2b8; // char : 0
		constexpr auto bWasRecycledSinceLastTick = 0x2b8; // char : 0
		constexpr auto bWasUpdateDeferred = 0x2b8; // char : 0
		constexpr auto bWarmingUp = 0x2b8; // char : 0
		constexpr auto bIsCachedInPool = 0x2b8; // char : 0
		constexpr auto bOverrideLODMethod = 0x2b8; // char : 0
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x2b8; // char : 0
		constexpr auto bSkipBoundsUpdate = 0x2b8; // char : 0
		constexpr auto bUpdateComponentInTick = 0x2b8; // char : 0
		constexpr auto bDeferredBeamUpdate = 0x2b8; // char : 0
		constexpr auto bForcedInActive = 0x2b8; // char : 0
		constexpr auto bIsWarmingUp = 0x2b8; // char : 0
		constexpr auto bIsViewRelevanceDirty = 0x2b8; // char : 0
		constexpr auto bRecacheViewRelevance = 0x2b8; // char : 0
		constexpr auto m_EmitBasedOnAnimNotify = 0x2b8; // char : 0
		constexpr auto m_bHasRibbonModule = 0x2b8; // char : 0
		constexpr auto bLODUpdatePending = 0x2b8; // char : 0
		constexpr auto bSkipSpawnCountCheck = 0x2b8; // char : 0
		constexpr auto m_bRealTimeTicking = 0x2b8; // char : 0
		constexpr auto bHasSavedScale3D = 0x2b8; // char : 0
		constexpr auto InstanceParameters = 0x2bc; // TArray<FParticleSysParam>
		constexpr auto OldPosition = 0x2cc; // FVector
		constexpr auto PartSysVelocity = 0x2d8; // FVector
		constexpr auto WarmupTime = 0x2e4; // float
		constexpr auto WarmupTickRate = 0x2e8; // float
		constexpr auto LODLevel = 0x2ec; // int32_t
		constexpr auto SecondsBeforeInactive = 0x2f0; // float
		constexpr auto TimeSinceLastForceUpdateTransform = 0x2f4; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x2f8; // float
		constexpr auto AccumTickTime = 0x2fc; // float
		constexpr auto LODMethod = 0x300; // ParticleSystemLODMethod
		constexpr auto ReplayState = 0x301; // ParticleReplayState
		constexpr auto CachedViewRelevanceFlags = 0x304; // TArray<FMaterialViewRelevance>
		constexpr auto m_ActiveRemainingTime = 0x314; // float
		constexpr auto m_ParticleChannels = 0x318; // FParticleChannelContainer
		constexpr auto ReplayClips = 0x31c; // TArray<ObjectProperty>
		constexpr auto ReplayClipIDNumber = 0x32c; // int32_t
		constexpr auto ReplayFrameIndex = 0x330; // int32_t
		constexpr auto AccumLODDistanceCheckTime = 0x334; // float
		constexpr auto SpawnEvents = 0x338; // TArray<FParticleEventSpawnData>
		constexpr auto DeathEvents = 0x348; // TArray<FParticleEventDeathData>
		constexpr auto CollisionEvents = 0x358; // TArray<FParticleEventCollideData>
		constexpr auto KismetEvents = 0x368; // TArray<FParticleEventKismetData>
		constexpr auto AttractorCollisionEvents = 0x378; // TArray<FParticleEventAttractorCollideData>
		constexpr auto ReleaseResourcesFence = 0x388; // FPointer
		constexpr auto CustomTimeDilation = 0x390; // float
		constexpr auto EmitterDelay = 0x394; // float
		constexpr auto FOV = 0x398; // float
		constexpr auto SavedScale3D = 0x39c; // FVector
		constexpr auto __OnSystemFinished__Delegate = 0x3a8; // DelegateProperty
		constexpr auto __OnSystemDurationElapsed__Delegate = 0x3b8; // DelegateProperty
	}

	namespace n_AStaticLightCollectionActor {
		constexpr auto LightComponents = 0x28c; // TArray<ComponentProperty>
		constexpr auto MaxLightComponents = 0x29c; // int32_t
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0xb0; // FExpressionInput
	}

	namespace n_ATgDeploy_Shield {
		constexpr auto bBasedOnPawn = 0x448; // char : 1
	}

	namespace n_AGameReplicationInfo {
		constexpr auto GameClass = 0x280; // AGameInfo*
		constexpr auto bStopCountDown = 0x288; // char : 1
		constexpr auto bMatchHasBegun = 0x288; // char : 1
		constexpr auto bMatchIsOver = 0x288; // char : 1
		constexpr auto RemainingTime = 0x28c; // int32_t
		constexpr auto ElapsedTime = 0x290; // int32_t
		constexpr auto RemainingMinute = 0x294; // int32_t
		constexpr auto GoalScore = 0x298; // int32_t
		constexpr auto TimeLimit = 0x29c; // int32_t
		constexpr auto Teams = 0x2a0; // TArray<ObjectProperty>
		constexpr auto ServerName = 0x2b0; // FString
		constexpr auto Winner = 0x2c0; // ObjectProperty
		constexpr auto PRIArray = 0x2c8; // TArray<ObjectProperty>
		constexpr auto InactivePRIArray = 0x2d8; // TArray<ObjectProperty>
	}

	namespace n_ANxGenericForceFieldCapsule {
		constexpr auto RenderComponent = 0x374; // ComponentProperty
		constexpr auto CapsuleHeight = 0x37c; // float
		constexpr auto CapsuleRadius = 0x380; // float
	}

	namespace n_UMultiProviderAnalytics {
		constexpr auto AnalyticsProviderClassNames = 0x98; // TArray<FString>
		constexpr auto AnalyticsProviders = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleTypeDataTrail2 {
		constexpr auto TessellationFactor = 0x68; // int32_t
		constexpr auto TessellationFactorDistance = 0x6c; // float
		constexpr auto TessellationStrength = 0x70; // float
		constexpr auto TextureTile = 0x74; // int32_t
		constexpr auto Sheets = 0x78; // int32_t
		constexpr auto MaxTrailCount = 0x7c; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x80; // int32_t
		constexpr auto bClipSourceSegement = 0x84; // char : 1
		constexpr auto bClearTangents = 0x84; // char : 1
		constexpr auto RenderGeometry = 0x84; // char : 1
		constexpr auto RenderDirectLine = 0x84; // char : 1
		constexpr auto RenderLines = 0x84; // char : 1
		constexpr auto RenderTessellation = 0x84; // char : 1
	}

	namespace n_ANxTornadoForceField {
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto BSpecialRadialForceMode = 0x2f8; // char : 1
		constexpr auto Kernel = 0x2fc; // FPointer
	}

	namespace n_ATgDeploy_ChurchillWard {
		constexpr auto r_bTargetVisible = 0x448; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_IsLanepusherLastAttackerOfType {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UDOFEffect {
		constexpr auto FalloffExponent = 0x88; // float
		constexpr auto BlurKernelSize = 0x8c; // float
		constexpr auto MaxNearBlurAmount = 0x90; // float
		constexpr auto MinBlurAmount = 0x94; // float
		constexpr auto MaxFarBlurAmount = 0x98; // float
		constexpr auto FocusType = 0x9c; // EFocusType
		constexpr auto FocusInnerRadius = 0xa0; // float
		constexpr auto FocusDistance = 0xa4; // float
		constexpr auto FocusPosition = 0xa8; // FVector
	}

	namespace n_ATgDevice_Scout {
		constexpr auto m_CachedPawnOwner = 0xaec; // ObjectProperty
		constexpr auto m_AlliesScouted = 0xaf4; // TArray<ObjectProperty>
		constexpr auto m_EnemiesScouted = 0xb04; // TArray<ObjectProperty>
		constexpr auto m_fScoutRefreshTime = 0xb14; // float
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x74; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x84; // int32_t
		constexpr auto bRandomizeWithoutReplacement = 0x88; // char : 1
		constexpr auto HasBeenUsed = 0x8c; // TArray<char>
		constexpr auto NumRandomUsed = 0x9c; // int32_t
	}

	namespace n_ATgDemoRecSpectator {
		constexpr auto PendingCommands = 0x1870; // TArray<FSpectatorCommand>
		constexpr auto m_TimeIndex = 0x1880; // int32_t
		constexpr auto m_TimeDilations = 0x1884; // TArray<FDilationData>
		constexpr auto m_pTgCallbackDevice = 0x1894; // FPointer
		constexpr auto m_1xTimeIndex = 0x189c; // int32_t
		constexpr auto m_bIsPaused = 0x18a0; // char : 1
		constexpr auto m_bInStasis = 0x18a0; // char : 1
		constexpr auto m_bSpectatorMaster = 0x18a0; // char : 1
		constexpr auto m_bSyncWithMasterEnabled = 0x18a0; // char : 1
		constexpr auto m_bIsSyncingWithMaster = 0x18a0; // char : 1
		constexpr auto m_bAutoSlomo = 0x18a0; // char : 1
		constexpr auto m_bReceiveCamSync = 0x18a0; // char : 1
		constexpr auto m_nLastReceivedMasterFrame = 0x18a4; // int32_t
		constexpr auto m_fLastReceivedMasterTimeDilation = 0x18a8; // float
		constexpr auto m_fLastReceievedRealTimeStamp = 0x18ac; // float
		constexpr auto m_nSyncFrameThreshold = 0x18b0; // int32_t
		constexpr auto m_nSyncFrameCheckThreshold = 0x18b4; // int32_t
		constexpr auto m_nSyncAheadFrameThreshold = 0x18b8; // int32_t
		constexpr auto m_nLastTimerValue = 0x18bc; // int32_t
		constexpr auto m_SpectatorDirector = 0x18c0; // ObjectProperty
		constexpr auto m_ActionListener = 0x18c8; // ObjectProperty
		constexpr auto m_fActionListenerRadius = 0x18d0; // float
		constexpr auto m_fActionListenerHeight = 0x18d4; // float
		constexpr auto m_nCurrentActionListenerRating = 0x18d8; // int32_t
		constexpr auto m_nActionListenerRatingThreshold = 0x18dc; // int32_t
		constexpr auto m_fRemainingAutoSlomoTime = 0x18e0; // float
		constexpr auto m_fAutoSlomoExpirationTime = 0x18e4; // float
		constexpr auto m_nAutoSlomoSpeedIndex = 0x18e8; // int32_t
		constexpr auto m_nAutoSlomoNearbyPlayersNum = 0x18ec; // int32_t
		constexpr auto m_fAutoSlomoFrequency = 0x18f0; // float
		constexpr auto m_fRemainingAutoSlomoTimeoutTime = 0x18f4; // float
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x74; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x98; // char : 1
		constexpr auto bUsePSysLocation = 0x98; // char : 1
		constexpr auto bInheritVelocity = 0x98; // char : 1
		constexpr auto InheritVelocityScale = 0x9c; // FRawDistributionVector
	}

	namespace n_UUIData_BattlePassTier {
		constexpr auto m_nTier = 0x60; // int32_t
		constexpr auto m_dwPlayerBPXP = 0x64; // Fdword
		constexpr auto m_pLevelRewards = 0x68; // TArray<ObjectProperty>
		constexpr auto m_bHasBonusRewards = 0x78; // char : 1
	}

	namespace n_UPBRuleNodeVariation {
		constexpr auto bVariationOfScopeOnLeft = 0x70; // char : 1
	}

	namespace n_UTgAnimMetaData_DisplayGroupPSCParam {
		constexpr auto ParamName = 0x80; // FName
		constexpr auto DisplayGroup = 0x88; // FName
		constexpr auto EqpSlot = 0x90; // TG_EQUIP_POINT
		constexpr auto bActivateGroupOnRelevant = 0x94; // char : 1
		constexpr auto bDeactivateGroupOnCeaseRelevant = 0x94; // char : 1
	}

	namespace n_UInputContextManager {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_CallbackContainer = 0x68; // ObjectProperty
		constexpr auto m_ContextStack = 0x70; // TArray<ObjectProperty>
	}

	namespace n_ATgWeaponMeshActor_LongbowInhand {
		constexpr auto m_bPlayingPlantedFireSFX = 0x504; // char : 1
		constexpr auto m_bPlayingUltimateFireSFX = 0x504; // char : 1
	}

	namespace n_UUIComponent_HudMenuInventory {
		constexpr auto m_mcShards = 0x120; // ObjectProperty
		constexpr auto m_pItemList = 0x128; // ObjectProperty
		constexpr auto m_pDetails = 0x130; // ObjectProperty
		constexpr auto m_grInput = 0x138; // ObjectProperty
		constexpr auto m_pSwapActon = 0x140; // ObjectProperty
		constexpr auto m_akDropWeapon = 0x148; // ObjectProperty
		constexpr auto m_akDropAbility = 0x150; // ObjectProperty
		constexpr auto m_akDropConsumable = 0x158; // ObjectProperty
	}

	namespace n_UNavMeshGoalFilter_OutSideOfDotProductWedge {
		constexpr auto Location = 0x6c; // FVector
		constexpr auto Rotation = 0x78; // FVector
		constexpr auto Epsilon = 0x84; // float
	}

	namespace n_UTgAnimNodeSlot {
		constexpr auto m_TgPawn = 0x138; // ObjectProperty
		constexpr auto m_bBlendOutIfVelocityIsGreaterThanZero = 0x140; // char : 1
		constexpr auto m_bIsTransitionAnim = 0x140; // char : 1
		constexpr auto m_bNotifyActorOnChildAnimEnd = 0x140; // char : 1
		constexpr auto m_nmHackingTransitionAnimName = 0x144; // FName
		constexpr auto m_nmHackingLoopingAnimName = 0x14c; // FName
		constexpr auto m_nmAFKTransitionAnimName = 0x154; // FName
		constexpr auto m_nmAFKLoopingAnimName = 0x15c; // FName
		constexpr auto m_nmQueuedAnim = 0x164; // FName
	}

	namespace n_UTgAIBehaviorAction_MoveToDamagingDeployable {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // char : 1
		constexpr auto bMoveAway = 0x9c; // char : 1
	}

	namespace n_UUIHud {
		constexpr auto m_mcSubscenes = 0x244; // ObjectProperty [0xb]
		constexpr auto m_mcPaused = 0x29c; // ObjectProperty
	}

	namespace n_UAnimNodeSequence {
		constexpr auto AnimSeqName = 0xfc; // FName
		constexpr auto Rate = 0x104; // float
		constexpr auto bPlaying = 0x108; // char : 1
		constexpr auto bLooping = 0x108; // char : 1
		constexpr auto bCauseActorAnimEnd = 0x108; // char : 1
		constexpr auto bCauseActorAnimPlay = 0x108; // char : 1
		constexpr auto bZeroRootRotation = 0x108; // char : 1
		constexpr auto bZeroRootTranslation = 0x108; // char : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x108; // char : 1
		constexpr auto bNoNotifies = 0x108; // char : 1
		constexpr auto bForceRefposeWhenNotPlaying = 0x108; // char : 0
		constexpr auto bIsIssuingNotifies = 0x108; // char : 0
		constexpr auto bForceAlwaysSlave = 0x108; // char : 0
		constexpr auto bSynchronize = 0x108; // char : 0
		constexpr auto bReverseSync = 0x108; // char : 0
		constexpr auto bShowTimeLineSlider = 0x108; // char : 0
		constexpr auto bLoopCameraAnim = 0x108; // char : 0
		constexpr auto bRandomizeCameraAnimLoopStartTime = 0x108; // char : 0
		constexpr auto m_bIgnoreFootSkelControls = 0x108; // char : 0
		constexpr auto m_bIgnoreBlendBySpeedScaling = 0x108; // char : 0
		constexpr auto bDoNotResetIfPlaying = 0x108; // char : 0
		constexpr auto bOnlyResetSynchGroupOnReplayAnim = 0x108; // char : 0
		constexpr auto bEditorOnlyAddRefPoseToAdditiveAnimation = 0x108; // char : 0
		constexpr auto bCheckForFinishAnimEarly = 0x108; // char : 0
		constexpr auto bBlendingOut = 0x108; // char : 0
		constexpr auto CurrentTime = 0x10c; // float
		constexpr auto PreviousTime = 0x110; // float
		constexpr auto EndTime = 0x114; // float
		constexpr auto AnimSeq = 0x118; // ObjectProperty
		constexpr auto AnimLinkupIndex = 0x120; // int32_t
		constexpr auto NotifyWeightThreshold = 0x124; // float
		constexpr auto SynchGroupName = 0x128; // FName
		constexpr auto SynchPosOffset = 0x130; // float
		constexpr auto CameraAnim = 0x134; // ObjectProperty
		constexpr auto ActiveCameraAnimInstance = 0x13c; // ObjectProperty
		constexpr auto CameraAnimScale = 0x144; // float
		constexpr auto CameraAnimPlayRate = 0x148; // float
		constexpr auto CameraAnimBlendInTime = 0x14c; // float
		constexpr auto CameraAnimBlendOutTime = 0x150; // float
		constexpr auto RootBoneOption = 0x154; // ERootBoneAxis [0x3]
		constexpr auto RootRotationOption = 0x157; // ERootRotationOption [0x3]
		constexpr auto DebugTrack = 0x15c; // ObjectProperty
		constexpr auto DebugCarat = 0x164; // ObjectProperty
		constexpr auto DeferredNotifies = 0x16c; // TArray<ObjectProperty>
		constexpr auto DeferredNotifyTicks = 0x17c; // TArray<FDeferredAnimNotifyTickInformation>
		constexpr auto DeferredNotifyEnds = 0x18c; // TArray<FDeferredAnimNotifyEndInformation>
		constexpr auto MetaDataSkelControlList = 0x19c; // TArray<ObjectProperty>
	}

	namespace n_ULineBatchComponent {
		constexpr auto FPrimitiveDrawInterfaceVfTable = 0x24c; // FPointer
		constexpr auto FPrimitiveDrawInterfaceView = 0x254; // FPointer
		constexpr auto BatchedLines = 0x25c; // TArray<FPointer>
		constexpr auto BatchedPoints = 0x26c; // TArray<FPointer>
		constexpr auto DefaultLifeTime = 0x27c; // float
	}

	namespace n_USettings {
		constexpr auto LocalizedSettings = 0x60; // TArray<FLocalizedStringSetting>
		constexpr auto Properties = 0x70; // TArray<FSettingsProperty>
		constexpr auto LocalizedSettingsMappings = 0x80; // TArray<FLocalizedStringSettingMetaData>
		constexpr auto PropertyMappings = 0x90; // TArray<FSettingsPropertyPropertyMetaData>
	}

	namespace n_USeqEvent_TouchInput {
		constexpr auto bTrapInput = 0x128; // char : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto AllowedTouchIndex = 0x130; // int32_t
		constexpr auto AllowedTouchpadIndex = 0x134; // int32_t
	}

	namespace n_UTgAnimNodeBlendByDrogozFlying {
		constexpr auto m_BoosterRecords = 0x168; // TArray<FBoosterFlightInfo>
		constexpr auto m_bInThrust = 0x178; // char : 1
		constexpr auto m_bInBooster = 0x178; // char : 1
		constexpr auto m_bTransitionsCanBeInterrupted = 0x178; // char : 1
		constexpr auto m_fBoosterStartTime = 0x17c; // float
		constexpr auto m_fBoosterRelevancyWindow = 0x180; // float
		constexpr auto m_fBoosterTriggerPercent = 0x184; // float
		constexpr auto m_fMaxFlightFallSpeed = 0x188; // float
	}

	namespace n_ATgDeploy_BlackHole {
		constexpr auto r_fRadiusScale = 0x448; // float
		constexpr auto m_fMaxPullSpeed = 0x44c; // float
		constexpr auto m_fMinPullSpeed = 0x450; // float
		constexpr auto m_fDistanceWithMaxSpeed = 0x454; // float
		constexpr auto m_fEventHorizonDistance = 0x458; // float
		constexpr auto m_fInnerRadius = 0x45c; // float
		constexpr auto m_ActorsInRange = 0x460; // TArray<ObjectProperty>
		constexpr auto m_CachedPawnOwner = 0x470; // ObjectProperty
		constexpr auto m_CachedEnemyTaskForce = 0x478; // ObjectProperty
		constexpr auto r_bPullActive = 0x480; // char : 1
	}

	namespace n_ATgWeaponMeshActor_ChurchillInhand {
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x504; // FPointer
		constexpr auto m_bPlayingADSFX = 0x50c; // char : 1
		constexpr auto m_fShieldLagStrength = 0x510; // float
		constexpr auto m_fShieldMinPitch = 0x514; // float
		constexpr auto m_fShieldMinPitchMaxTranslate = 0x518; // float
		constexpr auto m_cDefaultColorizeRed1p = 0x51c; // FLinearColor
		constexpr auto m_cDefaultColorizeRed3p = 0x52c; // FLinearColor
		constexpr auto m_nColorizeRedChnageSource = 0x53c; // int32_t
		constexpr auto DetectedColorWeapon = 0x540; // FLinearColor
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x24c; // ObjectProperty
		constexpr auto BrushAggGeom = 0x254; // FKAggregateGeom
		constexpr auto BrushPhysDesc = 0x2a0; // FPointer
		constexpr auto CachedPhysBrushData = 0x2a8; // FKCachedConvexData_Mirror
		constexpr auto CachedPhysBrushDataVersion = 0x2b8; // int32_t
		constexpr auto bBlockComplexCollisionTrace = 0x2bc; // char : 1
	}

	namespace n_UUIDataProvider_OnlinePlayerStorage {
		constexpr auto Profile = 0x74; // ObjectProperty
		constexpr auto ProviderName = 0x7c; // FName
		constexpr auto bWasErrorLastRead = 0x84; // char : 1
		constexpr auto bIsExternalUIOpen = 0x84; // char : 1
		constexpr auto bNeedsDeferredRefresh = 0x84; // char : 1
		constexpr auto PlayerStorageArrayProviders = 0x88; // TArray<FPlayerStorageArrayProvider>
		constexpr auto DeviceStorageSizeNeeded = 0x98; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_TimeSinceLanepusherTookDamage {
		constexpr auto TimeThreshold = 0x98; // float
	}

	namespace n_UTgSeqAct_NavIndicator {
		constexpr auto m_NavTarget = 0x108; // ObjectProperty
	}

	namespace n_UPComPictureInPictureScene {
		constexpr auto SkyBrightness = 0x60; // float
		constexpr auto SkyColor = 0x64; // FColor
		constexpr auto LightBrightness = 0x68; // float
		constexpr auto bAlwaysAllowAudioPlayback = 0x6c; // char : 1
		constexpr auto bForceAllUsedMipsResident = 0x6c; // char : 1
		constexpr auto Scene = 0x70; // FPointer
		constexpr auto Components = 0x78; // TArray<ComponentProperty>
		constexpr auto DirectionalLight = 0x88; // ComponentProperty
		constexpr auto DirectionalBounceLight = 0x90; // ComponentProperty
		constexpr auto SkyLight = 0x98; // ComponentProperty
		constexpr auto LineBatcher = 0xa0; // ComponentProperty
	}

	namespace n_AScout {
		constexpr auto PathSizes = 0x5a8; // TArray<FPathSizeInfo>
		constexpr auto TestJumpZ = 0x5b8; // float
		constexpr auto TestGroundSpeed = 0x5bc; // float
		constexpr auto TestMaxFallSpeed = 0x5c0; // float
		constexpr auto TestFallSpeed = 0x5c4; // float
		constexpr auto MaxLandingVelocity = 0x5c8; // float
		constexpr auto MinNumPlayerStarts = 0x5cc; // int32_t
		constexpr auto DefaultReachSpecClass = 0x5d0; // UReachSpec*
		constexpr auto EdgePathColors = 0x5d8; // TArray<FColor>
		constexpr auto NavMeshGen_StepSize = 0x5e8; // float
		constexpr auto NavMeshGen_EntityHalfHeight = 0x5ec; // float
		constexpr auto NavMeshGen_StartingHeightOffset = 0x5f0; // float
		constexpr auto NavMeshGen_MaxDropHeight = 0x5f4; // float
		constexpr auto NavMeshGen_MaxStepHeight = 0x5f8; // float
		constexpr auto NavMeshGen_VertZDeltaSnapThresh = 0x5fc; // float
		constexpr auto NavMeshGen_MinPolyArea = 0x600; // float
		constexpr auto NavMeshGen_BorderBackfill_CheckDist = 0x604; // float
		constexpr auto NavMeshGen_MinMergeDotAreaThreshold = 0x608; // float
		constexpr auto NavMeshGen_MinMergeDotSmallArea = 0x60c; // float
		constexpr auto NavMeshGen_MinMergeDotLargeArea = 0x610; // float
		constexpr auto NavMeshGen_MaxPolyHeight = 0x614; // float
		constexpr auto NavMeshGen_HeightMergeThreshold = 0x618; // float
		constexpr auto NavMeshGen_EdgeMaxDelta = 0x61c; // float
		constexpr auto NavMeshGen_MaxGroundCheckSize = 0x620; // float
		constexpr auto NavMeshGen_MinEdgeLength = 0x624; // float
		constexpr auto NavMeshGen_MinRadius = 0x628; // float
		constexpr auto NavMeshGen_MaxRadius = 0x62c; // float
		constexpr auto StandardJumpHeight = 0x630; // float
		constexpr auto StandardJumpDistance = 0x634; // float
		constexpr auto NavMeshGen_RecastCellSize = 0x638; // float
		constexpr auto NavMeshGen_RecastCellHeight = 0x63c; // float
		constexpr auto NavMeshGen_RecastErodeRadius = 0x640; // float
		constexpr auto NavMeshGen_ExpansionDoObstacleMeshSimplification = 0x644; // char : 1
		constexpr auto bHightlightOneWayReachSpecs = 0x644; // char : 1
		constexpr auto MinMantleFallDist = 0x648; // float
		constexpr auto MaxMantleFallDist = 0x64c; // float
		constexpr auto MinMantleLateralDist = 0x650; // float
		constexpr auto MaxMantleLateralDist = 0x654; // float
		constexpr auto MaxMantleFallTime = 0x658; // float
	}

	namespace n_UTgInventoryObject_Listen_InHand_HitMissStacker {
		constexpr auto m_fLastStackTime = 0xc8; // float
		constexpr auto m_nAppliedStacks = 0xcc; // int32_t
	}

	namespace n_UMeshComponentFactory {
		constexpr auto Materials = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UUIData_TitleQuantity {
		constexpr auto m_sTitle = 0x60; // FString
		constexpr auto m_nQuantity = 0x70; // int32_t
		constexpr auto m_nTotal = 0x74; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsTargetTypeInLeash {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UParticleModuleUberRainDrops {
		constexpr auto LifetimeMin = 0x78; // float
		constexpr auto LifetimeMax = 0x7c; // float
		constexpr auto StartSizeMin = 0x80; // FVector
		constexpr auto StartSizeMax = 0x8c; // FVector
		constexpr auto StartVelocityMin = 0x98; // FVector
		constexpr auto StartVelocityMax = 0xa4; // FVector
		constexpr auto StartVelocityRadialMin = 0xb0; // float
		constexpr auto StartVelocityRadialMax = 0xb4; // float
		constexpr auto ColorOverLife = 0xb8; // FVector
		constexpr auto AlphaOverLife = 0xc4; // float
		constexpr auto bIsUsingCylinder = 0xc8; // char : 1
		constexpr auto bPositive_X = 0xc8; // char : 1
		constexpr auto bPositive_Y = 0xc8; // char : 1
		constexpr auto bPositive_Z = 0xc8; // char : 1
		constexpr auto bNegative_X = 0xc8; // char : 1
		constexpr auto bNegative_Y = 0xc8; // char : 1
		constexpr auto bNegative_Z = 0xc8; // char : 1
		constexpr auto bSurfaceOnly = 0xc8; // char : 1
		constexpr auto bVelocity = 0xc8; // char : 0
		constexpr auto bRadialVelocity = 0xc8; // char : 0
		constexpr auto PC_VelocityScale = 0xcc; // float
		constexpr auto PC_StartLocation = 0xd0; // FVector
		constexpr auto PC_StartRadius = 0xdc; // float
		constexpr auto PC_StartHeight = 0xe0; // float
		constexpr auto PC_HeightAxis = 0xe4; // CylinderHeightAxis
		constexpr auto StartLocationMin = 0xe8; // FVector
		constexpr auto StartLocationMax = 0xf4; // FVector
	}

	namespace n_ATgDeploy_DeployableLinkedEffectField {
		constexpr auto m_ParentDeployable = 0x47c; // ObjectProperty
	}

	namespace n_ATgDroppedItem {
		constexpr auto m_fLifeSpan = 0x280; // float
		constexpr auto m_bFadeOut = 0x284; // char : 1
		constexpr auto m_nmPickUpState = 0x288; // FName
		constexpr auto r_nItemId = 0x290; // int32_t
		constexpr auto c_Mesh = 0x294; // ComponentProperty
		constexpr auto s_EffectGroupList = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SendPlayerTrackingEvent {
		constexpr auto m_nEventId = 0x108; // int32_t
		constexpr auto m_nSubEventID = 0x10c; // int32_t
		constexpr auto m_ReferenceName = 0x110; // FString
		constexpr auto m_nReferenceValue = 0x120; // int32_t
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget_Jungle {
		constexpr auto TargetType = 0x94; // EJungleTargetType
	}

	namespace n_USeqEvent_RigidBodyCollision {
		constexpr auto MinCollisionVelocity = 0x128; // float
	}

	namespace n_UTgAnimNodeBlendByBlink {
		constexpr auto m_TgPawn = 0x158; // ObjectProperty
		constexpr auto m_SkelMesh = 0x160; // ComponentProperty
		constexpr auto m_fBlinkAnimRate = 0x168; // float
		constexpr auto m_vTimeBetweenBlinks = 0x16c; // FVector2D
		constexpr auto m_fTimeTillNextBlink = 0x174; // float
		constexpr auto m_DisableBlinkingAnimNodeNameList = 0x178; // TArray<FName>
		constexpr auto m_CachedNodeList = 0x188; // TArray<ObjectProperty>
		constexpr auto m_bInitializedCachedNodeList = 0x198; // char : 1
	}

	namespace n_USeqAct_ToggleHidden {
		constexpr auto bToggleBasedActors = 0x108; // char : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UUIComponent_RolledItem {
		constexpr auto m_pCard = 0x120; // ObjectProperty
		constexpr auto m_pLegendaryCard = 0x128; // ObjectProperty
		constexpr auto m_pItem = 0x130; // ObjectProperty
		constexpr auto m_mcItemDuplicateLabel = 0x138; // ObjectProperty
		constexpr auto m_pReplacementItem = 0x140; // ObjectProperty
		constexpr auto m_pFrameButton = 0x148; // ObjectProperty
		constexpr auto m_SubItems = 0x150; // ObjectProperty
		constexpr auto m_pEquipButton = 0x158; // ObjectProperty
		constexpr auto m_pEquippedText = 0x160; // ObjectProperty
		constexpr auto bRollover = 0x168; // char : 1
		constexpr auto m_akItemAnimCard = 0x16c; // ObjectProperty
		constexpr auto m_akItemAnimLegendaryCard = 0x174; // ObjectProperty
		constexpr auto m_akItemAnimCurrency = 0x17c; // ObjectProperty
	}

	namespace n_UAnimNodeBlendList {
		constexpr auto TargetWeight = 0x114; // TArray<float>
		constexpr auto BlendTimeToGo = 0x124; // float
		constexpr auto ActiveChildIndex = 0x128; // int32_t
		constexpr auto bPlayActiveChild = 0x12c; // char : 1
		constexpr auto bForceChildFullWeightWhenBecomingRelevant = 0x12c; // char : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x12c; // char : 1
		constexpr auto PlayActiveChildExceptionList = 0x130; // TArray<int32_t>
		constexpr auto SliderPosition = 0x140; // float
	}

	namespace n_UMaterialExpressionTerrainLayerSwitch {
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto LayerUsed = 0xb8; // FExpressionInput
		constexpr auto LayerNotUsed = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewUsed = 0x128; // char : 1
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_UUIComponent_ArcadeRankedProgress {
		constexpr auto m_mcQueueName = 0x120; // ObjectProperty
		constexpr auto m_mcRatingChange = 0x128; // ObjectProperty
		constexpr auto m_mcRatingImproved = 0x130; // ObjectProperty
		constexpr auto m_pRating = 0x138; // ObjectProperty
	}

	namespace n_UPBRuleNodeComment {
		constexpr auto SizeX = 0x70; // int32_t
		constexpr auto SizeY = 0x74; // int32_t
		constexpr auto BorderWidth = 0x78; // int32_t
		constexpr auto BorderColor = 0x7c; // FColor
		constexpr auto bFilled = 0x80; // char : 1
		constexpr auto FillColor = 0x84; // FColor
	}

	namespace n_UStaticMesh {
		constexpr auto LODInfo = 0x70; // TArray<FStaticMeshLODInfo>
		constexpr auto LODDistanceRatio = 0x80; // float
		constexpr auto LODMaxRange = 0x84; // float
		constexpr auto LightMapResolution = 0x98; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x9c; // int32_t
		constexpr auto BodySetup = 0xf8; // ObjectProperty
		constexpr auto UseSimpleLineCollision = 0x13c; // char : 1
		constexpr auto UseSimpleBoxCollision = 0x140; // char : 1
		constexpr auto UseSimpleRigidBodyCollision = 0x144; // char : 1
		constexpr auto UseFullPrecisionUVs = 0x148; // char : 1
		constexpr auto bUsedForInstancing = 0x14c; // char : 1
		constexpr auto ConsolePreallocateInstanceCount = 0x150; // int32_t
		constexpr auto bUseMaximumStreamingTexelRatio = 0x154; // char : 1
		constexpr auto bPartitionForEdgeGeometry = 0x158; // char : 1
		constexpr auto bCanBecomeDynamic = 0x15c; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0x164; // char : 1
		constexpr auto bStripComplexCollision = 0x168; // char : 1
		constexpr auto bShareLODLightmaps = 0x16c; // char : 1
		constexpr auto StreamingDistanceMultiplier = 0x170; // float
		constexpr auto CanStepUpOn = 0x1b0; // char : 1
		constexpr auto CanBaseOn = 0x1b4; // char : 1
	}

	namespace n_UPMESTG_LeaveADecalBase {
		constexpr auto PhysicalMaterialPropertyClass = 0x60; // UPhysicalMaterialPropertyBase*
	}

	namespace n_UTgAnimNodeBlendByProperty {
		constexpr auto m_fBaseBlendTime = 0x18c; // float
		constexpr auto SpecificChildBlendTimes = 0x190; // TArray<FChildBlendParam>
	}

	namespace n_ATgGameHUD {
		constexpr auto m_nKillerPlayer = 0x62c; // int32_t
		constexpr auto m_nKillerDevice = 0x630; // int32_t
		constexpr auto m_nRank = 0x634; // int32_t
		constexpr auto m_nWinner = 0x638; // int32_t
		constexpr auto m_nPartyState = 0x63c; // int32_t
		constexpr auto m_bAlive = 0x640; // char : 1
		constexpr auto m_bGameWon = 0x640; // char : 1
		constexpr auto m_bGameOver = 0x640; // char : 1
		constexpr auto m_bDeployed = 0x640; // char : 1
		constexpr auto m_bSpectating = 0x640; // char : 1
		constexpr auto m_bTutorialCompleted = 0x640; // char : 1
		constexpr auto m_bClassMenuShownOnce = 0x640; // char : 1
		constexpr auto m_bClassMenuRemovedOnce = 0x640; // char : 1
		constexpr auto m_sKillerName = 0x644; // FString
		constexpr auto m_fKillerConsoleUniqueId = 0x654; // FUniqueNetId
		constexpr auto m_nReportIds = 0x65c; // TArray<int32_t>
		constexpr auto m_fReportConsoleUniqueIds = 0x66c; // TArray<FUniqueNetId>
		constexpr auto m_sReportNames = 0x67c; // TArray<FString>
	}

	namespace n_UUIComponent_ShieldBar {
		constexpr auto m_mcBarContainer = 0x120; // ObjectProperty
		constexpr auto m_mcShieldMask = 0x128; // ObjectProperty
		constexpr auto m_mcDamageMask = 0x130; // ObjectProperty
		constexpr auto m_TargetPawn = 0x138; // ObjectProperty
		constexpr auto m_fCurrentDamagePct = 0x140; // float
		constexpr auto m_fCurrentShieldPct = 0x144; // float
		constexpr auto m_bVisible = 0x148; // char : 1
		constexpr auto m_fDamageInterpSpeed = 0x14c; // float
		constexpr auto m_fMinDamageInterpSpeed = 0x150; // float
	}

	namespace n_UUIData_PartyKick {
		constexpr auto m_nRequiredPartySize = 0x60; // int32_t
		constexpr auto m_pPostPartyKickResponse = 0x64; // ObjectProperty
	}

	namespace n_UPlayerInput {
		constexpr auto bUsingGamepad = 0x178; // char : 1
		constexpr auto bInvertMouse = 0x178; // char : 1
		constexpr auto bInvertTurn = 0x178; // char : 1
		constexpr auto bWasForward = 0x178; // char : 1
		constexpr auto bWasBack = 0x178; // char : 1
		constexpr auto bWasLeft = 0x178; // char : 1
		constexpr auto bWasRight = 0x178; // char : 1
		constexpr auto bEdgeForward = 0x178; // char : 1
		constexpr auto bEdgeBack = 0x178; // char : 0
		constexpr auto bEdgeLeft = 0x178; // char : 0
		constexpr auto bEdgeRight = 0x178; // char : 0
		constexpr auto bEnableMouseSmoothing = 0x178; // char : 0
		constexpr auto bEnableFOVScaling = 0x178; // char : 0
		constexpr auto bLockTurnUntilRelease = 0x178; // char : 0
		constexpr auto LastAxisKeyName = 0x17c; // FName
		constexpr auto DoubleClickTimer = 0x184; // float
		constexpr auto DoubleClickTime = 0x188; // float
		constexpr auto MouseSensitivity = 0x18c; // float
		constexpr auto m_fLookSensitivity = 0x190; // float
		constexpr auto m_fLookSensitivityY = 0x194; // float
		constexpr auto m_fLookAccelSpeed = 0x198; // float
		constexpr auto m_fDeadZoneLeft = 0x19c; // float
		constexpr auto m_fDeadZoneRight = 0x1a0; // float
		constexpr auto aBaseX = 0x1a4; // float
		constexpr auto aBaseY = 0x1a8; // float
		constexpr auto aBaseZ = 0x1ac; // float
		constexpr auto aMouseX = 0x1b0; // float
		constexpr auto aMouseY = 0x1b4; // float
		constexpr auto aForward = 0x1b8; // float
		constexpr auto aTurn = 0x1bc; // float
		constexpr auto aStrafe = 0x1c0; // float
		constexpr auto aUp = 0x1c4; // float
		constexpr auto aLookUp = 0x1c8; // float
		constexpr auto aRightAnalogTrigger = 0x1cc; // float
		constexpr auto aLeftAnalogTrigger = 0x1d0; // float
		constexpr auto aPS3AccelX = 0x1d4; // float
		constexpr auto aPS3AccelY = 0x1d8; // float
		constexpr auto aPS3AccelZ = 0x1dc; // float
		constexpr auto aPS3Gyro = 0x1e0; // float
		constexpr auto aWiiUPointerX = 0x1e4; // float
		constexpr auto aWiiUPointerY = 0x1e8; // float
		constexpr auto aTilt = 0x1ec; // FVector
		constexpr auto aRotationRate = 0x1f8; // FVector
		constexpr auto aGravity = 0x204; // FVector
		constexpr auto aAcceleration = 0x210; // FVector
		constexpr auto aTouch = 0x21c; // FVector [0x5]
		constexpr auto aBackTouch = 0x258; // FVector [0x5]
		constexpr auto RawJoyUp = 0x294; // float
		constexpr auto RawJoyRight = 0x298; // float
		constexpr auto RawJoyLookRight = 0x29c; // float
		constexpr auto RawJoyLookUp = 0x2a0; // float
		constexpr auto MoveForwardSpeed = 0x2a4; // float
		constexpr auto MoveStrafeSpeed = 0x2a8; // float
		constexpr auto LookRightScale = 0x2ac; // float
		constexpr auto LookUpScale = 0x2b0; // float
		constexpr auto bStrafe = 0x2b4; // char
		constexpr auto bXAxis = 0x2b5; // char
		constexpr auto bYAxis = 0x2b6; // char
		constexpr auto ZeroTime = 0x2b8; // float [0x2]
		constexpr auto SmoothedMouse = 0x2c0; // float [0x2]
		constexpr auto MouseSamples = 0x2c8; // int32_t
		constexpr auto MouseSamplingTotal = 0x2cc; // float
		constexpr auto AutoUnlockTurnTime = 0x2d0; // float
	}

	namespace n_APylon {
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x378; // FPointer
		constexpr auto VfTable_IInterface_NavigationHandle = 0x380; // FPointer
		constexpr auto NavMeshPtr = 0x388; // FPointer
		constexpr auto ObstacleMesh = 0x390; // FPointer
		constexpr auto DynamicObstacleMesh = 0x398; // FPointer
		constexpr auto WorkingSetPtr = 0x3a0; // FPointer
		constexpr auto PathObjectsThatAffectThisPylon = 0x3a8; // FPointer
		constexpr auto NextPassSeedList = 0x3b0; // TArray<FVector>
		constexpr auto OctreeId = 0x3c0; // FOctreeElementId
		constexpr auto OctreeIWasAddedTo = 0x3cc; // FPointer
		constexpr auto NextPylon = 0x3d4; // ObjectProperty
		constexpr auto ExpansionVolumes = 0x3dc; // TArray<ObjectProperty>
		constexpr auto ExpansionRadius = 0x3ec; // float
		constexpr auto MaxExpansionRadius = 0x3f0; // float
		constexpr auto PylonRadiusPreview = 0x3f4; // ComponentProperty
		constexpr auto bImportedMesh = 0x3fc; // char : 1
		constexpr auto bUseExpansionSphereOverride = 0x3fc; // char : 1
		constexpr auto bNeedsCostCheck = 0x3fc; // char : 1
		constexpr auto bPylonInHighLevelPath = 0x3fc; // char : 1
		constexpr auto bUseRecast = 0x3fc; // char : 1
		constexpr auto bAllowRecastGenerator = 0x3fc; // char : 1
		constexpr auto bDrawEdgePolys = 0x3fc; // char : 1
		constexpr auto bDrawPolyBounds = 0x3fc; // char : 1
		constexpr auto bRenderInShowPaths = 0x3fc; // char : 0
		constexpr auto bDrawWalkableSurface = 0x3fc; // char : 0
		constexpr auto bDrawObstacleSurface = 0x3fc; // char : 0
		constexpr auto bSolidObstaclesInGame = 0x3fc; // char : 0
		constexpr auto bBuildThisPylon = 0x3fc; // char : 0
		constexpr auto bDisabled = 0x3fc; // char : 0
		constexpr auto bForceObstacleMeshCollision = 0x3fc; // char : 0
		constexpr auto ExpansionSphereCenter = 0x400; // FVector
		constexpr auto RenderingComp = 0x40c; // ComponentProperty
		constexpr auto BrokenSprite = 0x414; // ComponentProperty
		constexpr auto ImposterPylons = 0x41c; // TArray<ObjectProperty>
		constexpr auto OnBuild_DisableCollisionForThese = 0x42c; // TArray<ObjectProperty>
		constexpr auto OnBuild_EnableCollisionForThese = 0x43c; // TArray<ObjectProperty>
		constexpr auto MaxPolyHeight_Optional = 0x44c; // float
		constexpr auto NavMeshGenerator = 0x450; // char
		constexpr auto VoxelFilterBounds = 0x454; // TArray<FKAggregateGeom>
		constexpr auto VoxelFilterTM = 0x464; // TArray<FMatrix>
		constexpr auto DebugEdgeCount = 0x474; // int32_t
		constexpr auto DebugPathExtent = 0x478; // FVector
		constexpr auto DebugPathStartLocation = 0x484; // FVector
	}

	namespace n_UTgSeqAct_SetPlayerMesh {
		constexpr auto m_nMeshAsmId = 0x108; // int32_t
	}

	namespace n_ATgBotFactory_Leashed {
		constexpr auto LeashLocation = 0x384; // FVector
		constexpr auto LeashRange = 0x390; // float
		constexpr auto LeashVolume = 0x394; // ObjectProperty
	}

	namespace n_UTgSeqCond_CompareDeviceId {
		constexpr auto Device = 0xec; // ObjectProperty
		constexpr auto DeviceID = 0xf4; // int32_t
	}

	namespace n_ATgDemoRecSpectator_Debug {
		constexpr auto m_OriginalPlayer = 0x18f8; // ObjectProperty
		constexpr auto m_OriginalPlayerController = 0x1900; // ObjectProperty
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Drogoz {
		constexpr auto m_AmmoSkelControlNames = 0x544; // TArray<FName>
		constexpr auto m_AmmoSkelControls = 0x554; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SetCreditGainBlock {
		constexpr auto m_bBlockCreditGain = 0x108; // int32_t
	}

	namespace n_AFractureManager {
		constexpr auto FSMPartPoolSize = 0x280; // int32_t
		constexpr auto bEnableAntiVibration = 0x284; // char : 1
		constexpr auto bEnableSpawnChunkEffectForRadialDamage = 0x284; // char : 1
		constexpr auto DestroyVibrationLevel = 0x288; // float
		constexpr auto DestroyMinAngVel = 0x28c; // float
		constexpr auto ExplosionVelScale = 0x290; // float
		constexpr auto PartPool = 0x294; // TArray<ObjectProperty>
		constexpr auto FreeParts = 0x2a4; // TArray<int32_t>
		constexpr auto ActorsWithDeferredPartsToSpawn = 0x2b4; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x60; // FName
		constexpr auto BoneName = 0x68; // FName
		constexpr auto RelativeLocation = 0x70; // FVector
		constexpr auto RelativeRotation = 0x7c; // FRotator
		constexpr auto RelativeScale = 0x88; // FVector
		constexpr auto PreviewSkelComp = 0x94; // ComponentProperty
	}

	namespace n_UTgAnimNodeStance {
		constexpr auto m_Stance = 0x144; // int32_t
	}

	namespace n_USeqEvent_PlayerSpawned {
		constexpr auto SpawnPoint = 0x128; // ObjectProperty
	}

	namespace n_ATgAkActor {
		constexpr auto m_bCanCheckOcclusion = 0x280; // char : 1
	}

	namespace n_UAnimNodeSynch {
		constexpr auto Groups = 0x114; // TArray<FSynchGroup>
	}

	namespace n_UTgAIUtilityFilter_AssaultRangeType {
		constexpr auto RangeType = 0xc0; // ERangeType
	}

	namespace n_UAnimationCompressionAlgorithm {
		constexpr auto Description = 0x60; // FString
		constexpr auto bNeedsSkeleton = 0x70; // char : 1
		constexpr auto TranslationCompressionFormat = 0x74; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x75; // AnimationCompressionFormat
	}

	namespace n_ATgDeploy_SiegeShield {
		constexpr auto m_InitRotation = 0x448; // FRotator
		constexpr auto m_VFXCollisionMesh = 0x454; // ComponentProperty
		constexpr auto m_CollisionProxy = 0x45c; // ObjectProperty
		constexpr auto r_GroundSpeed = 0x464; // float
		constexpr auto m_bOnlyHitOnce = 0x468; // char : 1
	}

	namespace n_UTgPhysicalMaterialProperty {
		constexpr auto MaterialType = 0x60; // FName
	}

	namespace n_UUIComponent_DisplayPlayer {
		constexpr auto m_mcAvatarIcon = 0x120; // ObjectProperty
		constexpr auto m_mcPlayerName = 0x128; // ObjectProperty
		constexpr auto m_mcPlayerTitle = 0x130; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x138; // ObjectProperty
		constexpr auto m_mcChickenIcon = 0x140; // ObjectProperty
		constexpr auto m_mcDeathIcon = 0x148; // ObjectProperty
		constexpr auto m_mcColorIcon = 0x150; // ObjectProperty
		constexpr auto m_mcLives = 0x158; // ObjectProperty
		constexpr auto m_mcKills = 0x160; // ObjectProperty
		constexpr auto m_mcShards = 0x168; // ObjectProperty
		constexpr auto m_pMuteButton = 0x170; // ObjectProperty
		constexpr auto m_pArmorBar = 0x178; // ObjectProperty
		constexpr auto m_pHealthBar = 0x180; // ObjectProperty
		constexpr auto m_pItems = 0x188; // ObjectProperty
		constexpr auto m_pFrameButton = 0x190; // ObjectProperty
	}

	namespace n_UTgSkelCon_LookAt {
		constexpr auto m_Owner = 0x16c; // ObjectProperty
		constexpr auto m_bAimAtEnemyTarget = 0x174; // char : 1
		constexpr auto m_AlwaysInterpolateTarget = 0x174; // char : 1
		constexpr auto m_bHadTargetLastTick = 0x174; // char : 1
	}

	namespace n_UTgSeqAct_GetTaskForceCount {
		constexpr auto Taskforce = 0x108; // int32_t
		constexpr auto m_nPlayerCount = 0x10c; // int32_t
		constexpr auto m_nBotCount = 0x110; // int32_t
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0x108; // int32_t
		constexpr auto Format = 0x10c; // EPixelFormat
	}

	namespace n_ATgRealmCapturePoint {
		constexpr auto r_nUniqueCapturePointId = 0x2b0; // int32_t
		constexpr auto m_CustomAnimNode = 0x2b4; // ObjectProperty
		constexpr auto c_MICStatus = 0x2bc; // int32_t
		constexpr auto m_HelpTip = 0x2c0; // ObjectProperty
		constexpr auto CapturePointMeshActors = 0x2c8; // TArray<ObjectProperty>
		constexpr auto m_Volumes = 0x2d8; // TArray<ObjectProperty>
		constexpr auto m_fContestDuration = 0x2e8; // float
		constexpr auto m_fContestTimer = 0x2ec; // float
		constexpr auto m_TouchingChampions = 0x2f0; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_CrownPack {
		constexpr auto m_nPackId = 0x120; // int32_t
		constexpr auto m_mcPurchaseAmount = 0x124; // ObjectProperty
		constexpr auto m_mcBonusAmount = 0x12c; // ObjectProperty
		constexpr auto m_pCrowns = 0x134; // ObjectProperty
		constexpr auto m_pPrice = 0x13c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x144; // ObjectProperty
	}

	namespace n_UTgLocalPlayer {
		constexpr auto m_fViewScale = 0x474; // float
		constexpr auto m_vViewPan = 0x478; // FVector
		constexpr auto m_bEnableOutlineEffect = 0x484; // char : 1
		constexpr auto m_bEnableColorBlindEffect = 0x484; // char : 1
		constexpr auto m_bColorBlindSimulate = 0x484; // char : 1
		constexpr auto m_bBlurForeground = 0x484; // char : 1
		constexpr auto m_fHitOnlyAlpha = 0x488; // float
		constexpr auto m_fHealthOnlyAlpha = 0x48c; // float
		constexpr auto m_fHealthPPAlpha = 0x490; // float
		constexpr auto m_fDeathDesatPPAlpha = 0x494; // float
		constexpr auto m_eColorBlindEffectType = 0x498; // int32_t
		constexpr auto m_fTargetBlurAmount = 0x49c; // float
		constexpr auto m_fBlurAmount = 0x4a0; // float
		constexpr auto m_fBlurInterpSpeed = 0x4a4; // float
		constexpr auto m_fBlurKernelSize = 0x4a8; // float
		constexpr auto m_eCurrentDOFType = 0x4ac; // EDOFType
	}

	namespace n_USavedMove {
		constexpr auto NextMove = 0x60; // ObjectProperty
		constexpr auto TimeStamp = 0x68; // float
		constexpr auto Delta = 0x6c; // float
		constexpr auto bRun = 0x70; // char : 1
		constexpr auto bDuck = 0x70; // char : 1
		constexpr auto bPressedJump = 0x70; // char : 1
		constexpr auto bDoubleJump = 0x70; // char : 1
		constexpr auto bPreciseDestination = 0x70; // char : 1
		constexpr auto bForceRMVelocity = 0x70; // char : 1
		constexpr auto bForceMaxAccel = 0x70; // char : 1
		constexpr auto bRootMotionFromInterpCurve = 0x70; // char : 1
		constexpr auto DoubleClickMove = 0x74; // EDoubleClickDir
		constexpr auto SavedPhysics = 0x75; // EPhysics
		constexpr auto RootMotionMode = 0x76; // ERootMotionMode
		constexpr auto StartLocation = 0x78; // FVector
		constexpr auto StartRelativeLocation = 0x84; // FVector
		constexpr auto StartVelocity = 0x90; // FVector
		constexpr auto StartFloor = 0x9c; // FVector
		constexpr auto SavedLocation = 0xa8; // FVector
		constexpr auto SavedVelocity = 0xb4; // FVector
		constexpr auto SavedRelativeLocation = 0xc0; // FVector
		constexpr auto RMVelocity = 0xcc; // FVector
		constexpr auto Acceleration = 0xd8; // FVector
		constexpr auto Rotation = 0xe4; // FRotator
		constexpr auto StartBase = 0xf0; // ObjectProperty
		constexpr auto EndBase = 0xf8; // ObjectProperty
		constexpr auto CustomTimeDilation = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto RootMotionInterpCurrentTime = 0x108; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x10c; // FVector
	}

	namespace n_UAnimationCompressionAlgorithm_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x94; // float
		constexpr auto MaxPosDiffBitwise = 0x98; // float
		constexpr auto MaxAngleDiffBitwise = 0x9c; // float
		constexpr auto AllowedRotationFormats = 0xa0; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0xb0; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xc0; // char : 1
		constexpr auto bUseAdaptiveError = 0xc0; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xc0; // char : 1
		constexpr auto bUseAdaptiveError2 = 0xc0; // char : 1
		constexpr auto ResampledFramerate = 0xc4; // float
		constexpr auto MinKeysForResampling = 0xc8; // int32_t
		constexpr auto TrackHeightBias = 0xcc; // int32_t
		constexpr auto ParentingDivisor = 0xd0; // float
		constexpr auto ParentingDivisorExponent = 0xd4; // float
		constexpr auto RotationErrorSourceRatio = 0xd8; // float
		constexpr auto TranslationErrorSourceRatio = 0xdc; // float
		constexpr auto MaxErrorPerTrackRatio = 0xe0; // float
		constexpr auto PerturbationProbeSize = 0xe4; // float
		constexpr auto PerReductionCachedData = 0xe8; // FPointer
	}

	namespace n_USeqAct_SetMotionBlurParams {
		constexpr auto MotionBlurAmount = 0x120; // float
		constexpr auto InterpolateSeconds = 0x124; // float
		constexpr auto InterpolateElapsed = 0x128; // float
		constexpr auto OldMotionBlurAmount = 0x12c; // float
	}

	namespace n_UTgInvListener_Scapegoat {
		constexpr auto m_CachedShield = 0xc8; // ObjectProperty
	}

	namespace n_URB_ConstraintInstance {
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto OwnerComponent = 0x68; // ComponentProperty
		constexpr auto ConstraintIndex = 0x70; // int32_t
		constexpr auto SceneIndex = 0x74; // int32_t
		constexpr auto bInHardware = 0x78; // char : 1
		constexpr auto bLinearXPositionDrive = 0x78; // char : 1
		constexpr auto bLinearXVelocityDrive = 0x78; // char : 1
		constexpr auto bLinearYPositionDrive = 0x78; // char : 1
		constexpr auto bLinearYVelocityDrive = 0x78; // char : 1
		constexpr auto bLinearZPositionDrive = 0x78; // char : 1
		constexpr auto bLinearZVelocityDrive = 0x78; // char : 1
		constexpr auto bSwingPositionDrive = 0x78; // char : 1
		constexpr auto bSwingVelocityDrive = 0x78; // char : 0
		constexpr auto bTwistPositionDrive = 0x78; // char : 0
		constexpr auto bTwistVelocityDrive = 0x78; // char : 0
		constexpr auto bAngularSlerpDrive = 0x78; // char : 0
		constexpr auto bTerminated = 0x78; // char : 0
		constexpr auto ConstraintData = 0x7c; // FPointer
		constexpr auto LinearPositionTarget = 0x84; // FVector
		constexpr auto LinearVelocityTarget = 0x90; // FVector
		constexpr auto LinearDriveSpring = 0x9c; // float
		constexpr auto LinearDriveDamping = 0xa0; // float
		constexpr auto LinearDriveForceLimit = 0xa4; // float
		constexpr auto AngularPositionTarget = 0xb0; // FQuat
		constexpr auto AngularVelocityTarget = 0xc0; // FVector
		constexpr auto AngularDriveSpring = 0xcc; // float
		constexpr auto AngularDriveDamping = 0xd0; // float
		constexpr auto AngularDriveForceLimit = 0xd4; // float
		constexpr auto DummyKinActor = 0xd8; // FPointer
	}

	namespace n_ARB_RadialForceActor {
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto ForceStrength = 0x288; // float
		constexpr auto ForceRadius = 0x28c; // float
		constexpr auto SwirlStrength = 0x290; // float
		constexpr auto SpinTorque = 0x294; // float
		constexpr auto ForceFalloff = 0x298; // ERadialImpulseFalloff
		constexpr auto RadialForceMode = 0x299; // ERadialForceType
		constexpr auto bForceActive = 0x29c; // char : 1
		constexpr auto bForceApplyToCloth = 0x29c; // char : 1
		constexpr auto bForceApplyToFluid = 0x29c; // char : 1
		constexpr auto bForceApplyToRigidBodies = 0x29c; // char : 1
		constexpr auto bForceApplyToProjectiles = 0x29c; // char : 1
		constexpr auto CollideWithChannels = 0x2a0; // FRBCollisionChannelContainer
	}

	namespace n_UMcpMessageManager {
		constexpr auto VfTable_FTickableObject = 0xec; // FPointer
		constexpr auto CreateMessageUrl = 0xf4; // FString
		constexpr auto DeleteMessageUrl = 0x104; // FString
		constexpr auto QueryMessagesUrl = 0x114; // FString
		constexpr auto QueryMessageContentsUrl = 0x124; // FString
		constexpr auto DeleteAllMessagesUrl = 0x134; // FString
		constexpr auto CompressMessageRequests = 0x144; // TArray<FMcpCompressMessageRequest>
		constexpr auto UncompressMessageRequests = 0x154; // TArray<FMcpUncompressMessageRequest>
	}

	namespace n_UMcpUserInventoryManager {
		constexpr auto CreateSaveSlotUrl = 0x128; // FString
		constexpr auto DeleteSaveSlotUrl = 0x138; // FString
		constexpr auto ListSaveSlotUrl = 0x148; // FString
		constexpr auto ListItemsUrl = 0x158; // FString
		constexpr auto PurchaseItemUrl = 0x168; // FString
		constexpr auto SellItemUrl = 0x178; // FString
		constexpr auto EarnItemUrl = 0x188; // FString
		constexpr auto ConsumeItemUrl = 0x198; // FString
		constexpr auto DeleteItemUrl = 0x1a8; // FString
		constexpr auto IapRecordUrl = 0x1b8; // FString
		constexpr auto SaveSlots = 0x1c8; // TArray<FMcpInventorySaveSlot>
		constexpr auto SaveSlotRequests = 0x1d8; // TArray<FSaveSlotRequestState>
		constexpr auto ListSaveSlotRequests = 0x1e8; // TArray<FSaveSlotRequestState>
		constexpr auto ListItemsRequests = 0x1f8; // TArray<FSaveSlotRequestState>
		constexpr auto ItemRequests = 0x208; // TArray<FInventoryItemRequestState>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Ying {
		constexpr auto m_fCombo1MaxDuration = 0xd0; // float
		constexpr auto m_fCombo1BonusDamagePercent = 0xd4; // float
		constexpr auto m_fCombo2BonusDamage = 0xd8; // float
		constexpr auto m_MarkedTargets = 0xdc; // TArray<ObjectProperty>
		constexpr auto m_fMarkTimes = 0xec; // TArray<float>
		constexpr auto m_InhandTarget = 0xfc; // ObjectProperty
		constexpr auto m_nInhandHits = 0x104; // int32_t
		constexpr auto m_nCombo1DeviceId = 0x108; // int32_t
	}

	namespace n_ATgEffectManager {
		constexpr auto r_GroundSpeedMods = 0x280; // FDiminishedEffectInfo
		constexpr auto r_ManagedEffectList = 0x290; // FEffectListEntry [0x10]
		constexpr auto c_byCounterList = 0x390; // char [0x10]
		constexpr auto c_InstanceCounts = 0x3a0; // char [0x10]
		constexpr auto s_eCachedStunType = 0x3b0; // EStunType
		constexpr auto m_fTimeRemaining = 0x3b4; // float [0x10]
		constexpr auto c_Forms = 0x3f4; // ObjectProperty [0x10]
		constexpr auto c_ActiveTimers = 0x474; // char : 1
		constexpr auto r_bRelevancyNotify = 0x474; // char : 1
		constexpr auto r_EventQueue = 0x478; // FEffectQueueEntry [0x10]
		constexpr auto r_nNextQueueIndex = 0x678; // int32_t
		constexpr auto r_nFirstValidQueueIndex = 0x67c; // int32_t
		constexpr auto c_nLastQueueIndex = 0x680; // int32_t
		constexpr auto s_AppliedEffectGroups = 0x684; // TArray<ObjectProperty>
		constexpr auto s_AppliedPermanentEffects = 0x694; // TArray<ObjectProperty>
		constexpr auto r_Owner = 0x6a4; // ObjectProperty
		constexpr auto m_ApplyDamageEffectGroup = 0x6ac; // ObjectProperty
		constexpr auto m_ApplyDamageEffect = 0x6b4; // ObjectProperty
		constexpr auto m_ApplyHealthEffectGroup = 0x6bc; // ObjectProperty
		constexpr auto m_ApplyHealthEffect = 0x6c4; // ObjectProperty
		constexpr auto m_ApplyManaEffectGroup = 0x6cc; // ObjectProperty
		constexpr auto m_ApplyManaEffect = 0x6d4; // ObjectProperty
		constexpr auto m_ApplyEnergyEffectGroup = 0x6dc; // ObjectProperty
		constexpr auto m_ApplyEnergyEffect = 0x6e4; // ObjectProperty
		constexpr auto s_StunStack = 0x6ec; // TArray<FStunStackEntry>
		constexpr auto s_EnergyStunStack = 0x6fc; // TArray<FEnergyStunStackEntry>
		constexpr auto s_ReduceActiveCooldownEffects = 0x70c; // TArray<FReduceActiveCooldownEntry>
		constexpr auto m_fMaxReduceActiveCooldownDelay = 0x71c; // float
		constexpr auto s_nSilenceCount = 0x720; // int32_t
		constexpr auto s_nDisarmCount = 0x724; // int32_t
		constexpr auto s_nCrippleCount = 0x728; // int32_t
		constexpr auto s_nStealthCount = 0x72c; // int32_t
		constexpr auto s_nDazeCount = 0x730; // int32_t
		constexpr auto s_nMarkedCount = 0x734; // int32_t
		constexpr auto s_nSlowCount = 0x738; // int32_t
		constexpr auto s_bStealthDisabledCount = 0x73c; // int32_t
		constexpr auto s_nOnFireCount = 0x740; // int32_t
		constexpr auto s_nCCImmuneCount = 0x744; // int32_t
		constexpr auto s_nBleedingCount = 0x748; // int32_t
		constexpr auto s_nKnockbackCount = 0x74c; // int32_t
		constexpr auto s_nRootCount = 0x750; // int32_t
		constexpr auto s_nPoisonedCount = 0x754; // int32_t
		constexpr auto s_nBoostCount = 0x758; // int32_t
		constexpr auto s_nStealthInCombatCount = 0x75c; // int32_t
		constexpr auto s_nWallHackCount = 0x760; // int32_t
		constexpr auto s_nForceOutOfCombatCount = 0x764; // int32_t
		constexpr auto s_nPolymorphCount = 0x768; // int32_t
		constexpr auto s_nRevealedCount = 0x76c; // int32_t
		constexpr auto s_nFlashCount = 0x770; // int32_t
		constexpr auto s_fSpawnGuardTime = 0x774; // float
		constexpr auto s_InstigatorWallReveals = 0x778; // TArray<ObjectProperty>
		constexpr auto s_nInstigatorWallRevealCount = 0x788; // TArray<int32_t>
		constexpr auto s_InstigatorStealthReveals = 0x798; // TArray<ObjectProperty>
		constexpr auto s_nInstigatorStealthRevealCount = 0x7a8; // TArray<int32_t>
		constexpr auto s_SlowCaps = 0x7b8; // TArray<ObjectProperty>
		constexpr auto s_MaxHPDamageCaps = 0x7c8; // TArray<ObjectProperty>
		constexpr auto s_CurHPDamageCaps = 0x7d8; // TArray<ObjectProperty>
		constexpr auto s_FreezeBehaviorCount = 0x7e8; // int32_t
		constexpr auto s_DiminishingReturnsStacks = 0x7ec; // TArray<FDiminishingReturnsStackInfo>
		constexpr auto m_nDiminishingReturnMaxStacks = 0x7fc; // int32_t
		constexpr auto s_ActiveDamageDeviceIntercepts = 0x800; // TArray<ObjectProperty>
		constexpr auto s_ActiveDamageMitigationIntercepts = 0x810; // TArray<ObjectProperty>
		constexpr auto s_ActiveOnLandedIntercepts = 0x820; // TArray<ObjectProperty>
		constexpr auto s_ActiveWallKnockbackHits = 0x830; // TArray<ObjectProperty>
		constexpr auto s_ActivePlayerKnockbackHits = 0x840; // TArray<ObjectProperty>
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x70; // char : 1
		constexpr auto bAttach = 0x70; // char : 1
		constexpr auto bPreview = 0x70; // char : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x70; // char : 1
		constexpr auto bIsFootstep = 0x70; // char : 1
		constexpr auto ShouldDilateTimeByPlayRate = 0x70; // char : 1
		constexpr auto m_bReuse = 0x70; // char : 1
		constexpr auto PSNonExtremeContentTemplate = 0x74; // ObjectProperty
		constexpr auto SocketName = 0x7c; // FName
		constexpr auto BoneName = 0x84; // FName
		constexpr auto BoneSocketModuleActorName = 0x8c; // FName
		constexpr auto TimeDilationFactor = 0x94; // float
	}

	namespace n_AStaticMeshActorBasedOnExtremeContent {
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto ExtremeContent = 0x288; // TArray<FSMMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x298; // TArray<FSMMaterialSetterDatum>
	}

	namespace n_UAnimNodeBlendByBase {
		constexpr auto Type = 0x144; // EBaseBlendType
		constexpr auto ActorTag = 0x148; // FName
		constexpr auto ActorClass = 0x150; // AActor*
		constexpr auto BlendTime = 0x158; // float
		constexpr auto CachedBase = 0x15c; // ObjectProperty
	}

	namespace n_USeqAct_AttachToActor {
		constexpr auto bDetach = 0x108; // char : 1
		constexpr auto bHardAttach = 0x108; // char : 1
		constexpr auto bUseRelativeOffset = 0x108; // char : 1
		constexpr auto bUseRelativeRotation = 0x108; // char : 1
		constexpr auto BoneName = 0x10c; // FName
		constexpr auto RelativeOffset = 0x114; // FVector
		constexpr auto RelativeRotation = 0x120; // FRotator
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialPositionTransform
	}

	namespace n_UUIData_Vendor {
		constexpr auto m_dwVendorId = 0x60; // Fdword
		constexpr auto m_LootTableItems = 0x64; // TMap<None, None>
		constexpr auto m_AsArray = 0xac; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_Survival {
		constexpr auto m_ThrustDevice = 0xaec; // ObjectProperty
	}

	namespace n_UTgSeqEvent_MissionTimeRemaining {
		constexpr auto SecsRemaining = 0x128; // float
	}

	namespace n_USeqEvent_HudRender {
		constexpr auto Targets = 0x128; // TArray<ObjectProperty>
		constexpr auto bIsActive = 0x138; // char : 1
		constexpr auto AuthoredGlobalScale = 0x13c; // float
	}

	namespace n_UTgInventoryObject_Listen_DuringAbility {
		constexpr auto m_bAbilityInActiveState = 0xd0; // char : 1
		constexpr auto m_bIsActive = 0xd0; // char : 1
		constexpr auto m_eDuringType = 0xd4; // EDuringAbilityType
	}

	namespace n_UTgCameraModule_SpectatorThirdPerson {
		constexpr auto OldViewpoint = 0x1cc; // FTPOV
		constexpr auto RemainingBlendTime = 0x1f0; // float
		constexpr auto TotalBlendTime = 0x1f4; // float
	}

	namespace n_UUIComponent_GenericTitleButtons {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty [0x2]
		constexpr auto m_Buttons = 0x130; // ObjectProperty [0x8]
		constexpr auto m_ButtonClickHandles = 0x170; // int32_t [0x8]
		constexpr auto m_grButtons = 0x190; // ObjectProperty
	}

	namespace n_UUIData_CustomGameManager {
		constexpr auto sName = 0x60; // FString
		constexpr auto sDesc = 0x70; // FString
		constexpr auto nIcon = 0x80; // int32_t
	}

	namespace n_UTgSeqAct_ClientLoadDevices {
		constexpr auto m_DeviceIdList = 0x108; // TArray<int32_t>
		constexpr auto m_bClearExistingLoads = 0x118; // char : 1
	}

	namespace n_UTgGameplayCurvesSet_HitReactions {
		constexpr auto ReactionStrengthOverTime = 0x64; // FRawDistributionFloat
		constexpr auto ReactionStrengthOverTimeDelayed = 0x88; // FRawDistributionFloat
		constexpr auto ReactionStrengthByDamage = 0xac; // FRawDistributionFloat
	}

	namespace n_UDrawBoxComponent {
		constexpr auto BoxColor = 0x24c; // FColor
		constexpr auto BoxMaterial = 0x250; // ObjectProperty
		constexpr auto BoxExtent = 0x258; // FVector
		constexpr auto bDrawWireBox = 0x264; // char : 1
		constexpr auto bDrawLitBox = 0x264; // char : 1
		constexpr auto bDrawOnlyIfSelected = 0x264; // char : 1
	}

	namespace n_ASoundComponentPool {
		constexpr auto PoolSounds = 0x280; // TArray<ComponentProperty>
		constexpr auto ActiveSounds = 0x290; // TArray<ComponentProperty>
		constexpr auto StartingNumComponents = 0x2a0; // int32_t
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_USeqAct_ToggleConstraintDrive {
		constexpr auto bEnableAngularPositionDrive = 0x108; // char : 1
		constexpr auto bEnableAngularVelocityDrive = 0x108; // char : 1
		constexpr auto bEnableLinearPositionDrive = 0x108; // char : 1
		constexpr auto bEnableLinearvelocityDrive = 0x108; // char : 1
	}

	namespace n_APComPlayerController {
		constexpr auto m_LastPendingPartyInviteId = 0x77c; // FUniqueNetId
		constexpr auto m_bPartySessionJoinInProgress = 0x784; // char : 1
		constexpr auto m_bPartySessionCreateInProgress = 0x784; // char : 1
		constexpr auto m_bPartyDestroyInProgress = 0x784; // char : 1
		constexpr auto m_bQuittingToMainMenu = 0x784; // char : 1
		constexpr auto m_bHasAcknowledgedPawn = 0x784; // char : 1
		constexpr auto m_bKeepLoggedIn = 0x784; // char : 1
		constexpr auto m_dwPendingPartyId = 0x788; // Fdword
		constexpr auto m_nMaxPartyPublicConnections = 0x78c; // int32_t
		constexpr auto m_PendingInviteResult = 0x790; // FOnlineGameSearchResult
		constexpr auto PartySessionName = 0x7a0; // FName
		constexpr auto GameSessionName = 0x7a8; // FName
		constexpr auto m_dwLastLoginPortalId = 0x7b0; // Fdword
		constexpr auto m_dwLastLoginAccountId = 0x7b4; // Fdword
		constexpr auto m_sLastLoginAccessToken = 0x7b8; // FString
		constexpr auto m_sLastLoginAccessTokenExpiration = 0x7c8; // FString
	}

	namespace n_UNxForceFieldGenericComponent {
		constexpr auto RoughExtentX = 0x2bc; // float
		constexpr auto RoughExtentY = 0x2c0; // float
		constexpr auto RoughExtentZ = 0x2c4; // float
		constexpr auto Coordinates = 0x2c8; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2cc; // FVector
		constexpr auto PositionMultiplierX = 0x2d8; // FVector
		constexpr auto PositionMultiplierY = 0x2e4; // FVector
		constexpr auto PositionMultiplierZ = 0x2f0; // FVector
		constexpr auto PositionTarget = 0x2fc; // FVector
		constexpr auto VelocityMultiplierX = 0x308; // FVector
		constexpr auto VelocityMultiplierY = 0x314; // FVector
		constexpr auto VelocityMultiplierZ = 0x320; // FVector
		constexpr auto VelocityTarget = 0x32c; // FVector
		constexpr auto Noise = 0x338; // FVector
		constexpr auto FalloffLinear = 0x344; // FVector
		constexpr auto FalloffQuadratic = 0x350; // FVector
		constexpr auto TorusRadius = 0x35c; // float
		constexpr auto Kernel = 0x360; // FPointer
	}

	namespace n_UTgSeqAct_LogTutorialAction {
		constexpr auto PlayerAction = 0x108; // int32_t
		constexpr auto EventData = 0x10c; // int32_t
	}

	namespace n_UTgAnimNodeStanceTransition {
		constexpr auto m_SourceStance = 0x144; // int32_t
		constexpr auto m_DestinationStance = 0x148; // int32_t
	}

	namespace n_UTgSkelCon_RotateToAim {
		constexpr auto m_fRotationSpeed = 0x100; // float
		constexpr auto m_bUseConstantSpeed = 0x104; // char : 1
		constexpr auto Aim = 0x108; // FRotator
		constexpr auto m_rTargetRotation = 0x114; // FRotator
	}

	namespace n_UUIComponent_PlayerName {
		constexpr auto m_eAlignment = 0x120; // UIALIGNINGTYPE
		constexpr auto m_mcNameStandard = 0x124; // ObjectProperty
		constexpr auto m_mcNameVIP = 0x12c; // ObjectProperty
		constexpr auto m_mcVIPIcon = 0x134; // ObjectProperty
		constexpr auto m_mcNameVIPSparkles = 0x13c; // TArray<ObjectProperty>
		constexpr auto m_mcNameVIPStrokes = 0x14c; // TArray<ObjectProperty>
	}

	namespace n_UParticleSystem {
		constexpr auto SystemUpdateMode = 0x60; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0x61; // ParticleSystemLODMethod
		constexpr auto OcclusionBoundsMethod = 0x62; // EParticleSystemOcclusionBoundsMethod
		constexpr auto UpdateTime_FPS = 0x64; // float
		constexpr auto UpdateTime_Delta = 0x68; // float
		constexpr auto WarmupTime = 0x6c; // float
		constexpr auto WarmupTickRate = 0x70; // float
		constexpr auto TranslucencySortPriority = 0x74; // int32_t
		constexpr auto Emitters = 0x78; // TArray<ObjectProperty>
		constexpr auto PreviewComponent = 0x88; // ComponentProperty
		constexpr auto bLit = 0x90; // char : 1
		constexpr auto bOrientZAxisTowardCamera = 0x90; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0x90; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x90; // char : 1
		constexpr auto m_bDeactivateOnInactive = 0x90; // char : 1
		constexpr auto m_bDeactivateOnInactiveIfEmitterPool = 0x90; // char : 1
		constexpr auto m_bHasDisplayMasks = 0x90; // char : 1
		constexpr auto bShouldResetPeakCounts = 0x90; // char : 1
		constexpr auto bHasPhysics = 0x90; // char : 0
		constexpr auto bUseRealtimeThumbnail = 0x90; // char : 0
		constexpr auto ThumbnailImageOutOfDate = 0x90; // char : 0
		constexpr auto bSkipSpawnCountCheck = 0x90; // char : 0
		constexpr auto bUseDelayRange = 0x90; // char : 0
		constexpr auto CurveEdSetup = 0x94; // ObjectProperty
		constexpr auto LODDistanceCheckTime = 0x9c; // float
		constexpr auto LODDistances = 0xa0; // TArray<float>
		constexpr auto LODSettings = 0xb0; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0xc0; // FBox
		constexpr auto SecondsBeforeInactive = 0xdc; // float
		constexpr auto Delay = 0xe0; // float
		constexpr auto DelayLow = 0xe4; // float
		constexpr auto MacroUVPosition = 0xe8; // FVector
		constexpr auto MacroUVRadius = 0xf4; // float
		constexpr auto CustomOcclusionBounds = 0xf8; // FBox
		constexpr auto SoloTracking = 0x114; // TArray<FLODSoloTrack>
		constexpr auto GCExternalReferences = 0x124; // TArray<ObjectProperty>
	}

	namespace n_USceneCaptureReflectComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
		constexpr auto ActorsToReflect = 0xdc; // TArray<ObjectProperty>
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_ATgRespawnBeaconExit {
		constexpr auto m_bChangesYaw = 0x32c; // char : 1
		constexpr auto c_bHiddenToLocalPlayer = 0x32c; // char : 1
		constexpr auto m_fPercHealthPerSec = 0x330; // float
		constexpr auto m_fHealthRegenLockoutTime = 0x334; // float
		constexpr auto r_nRespawnTime = 0x338; // int32_t
		constexpr auto m_fTimeUntilHealTick = 0x33c; // float
		constexpr auto m_rInitialRot = 0x340; // FRotator
		constexpr auto m_vInitialPos = 0x34c; // FVector
		constexpr auto r_CarrierRepInfo = 0x358; // ObjectProperty
		constexpr auto m_SpawnPointOverride = 0x360; // ObjectProperty
		constexpr auto r_CurrentVisibilityVolumes = 0x368; // ObjectProperty [0x2]
		constexpr auto c_LocalActiveState = 0x378; // ERespawnBeaconActiveState
		constexpr auto r_ActiveState = 0x379; // ERespawnBeaconActiveState
		constexpr auto r_nPlayTakeHit = 0x37a; // char
		constexpr auto m_Entrances = 0x37c; // TArray<ObjectProperty>
		constexpr auto m_CarriedDel = 0x38c; // TArray<DelegateProperty>
		constexpr auto m_DestroyedDel = 0x39c; // TArray<DelegateProperty>
		constexpr auto m_DeployingDel = 0x3ac; // TArray<DelegateProperty>
		constexpr auto m_ActiveDel = 0x3bc; // TArray<DelegateProperty>
		constexpr auto r_nDeathLocation = 0x3cc; // FVector
		constexpr auto m_LastDamager = 0x3d8; // ObjectProperty
		constexpr auto __BeaconStateChanged__Delegate = 0x3e0; // DelegateProperty
	}

	namespace n_UAnimObject {
		constexpr auto SkelComponent = 0x60; // ComponentProperty
	}

	namespace n_USeqAct_SubtractInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UTgAnimNodeBlendByCombatWariness {
		constexpr auto CombatWarinessDuration = 0x168; // float
		constexpr auto AllowIdleAnimToComplete = 0x16c; // char : 1
		constexpr auto AllowWaryAnimToComplete = 0x16c; // char : 1
		constexpr auto IsWary = 0x16c; // char : 1
		constexpr auto WaryTime = 0x170; // float
	}

	namespace n_USeqAct_Gate {
		constexpr auto bOpen = 0x108; // char : 1
		constexpr auto AutoCloseCount = 0x10c; // int32_t
		constexpr auto CurrentCloseCount = 0x110; // int32_t
	}

	namespace n_AKActorFromStatic {
		constexpr auto MyStaticMeshActor = 0x3b4; // ObjectProperty
		constexpr auto MaxImpulseSpeed = 0x3bc; // float
	}

	namespace n_UTgInvListener_SteadyAim {
		constexpr auto m_nSteadyAimStackCount = 0xc8; // int32_t
		constexpr auto m_fFullyChargedHitTime = 0xcc; // float
	}

	namespace n_USeqAct_SetWorldAttractorParam {
		constexpr auto Attractor = 0x108; // TArray<ObjectProperty>
		constexpr auto bEnabledField = 0x118; // char : 1
		constexpr auto bFalloffTypeField = 0x118; // char : 1
		constexpr auto bFalloffExponentField = 0x118; // char : 1
		constexpr auto bRangeField = 0x118; // char : 1
		constexpr auto bStrengthField = 0x118; // char : 1
		constexpr auto bEnabled = 0x118; // char : 1
		constexpr auto FalloffType = 0x11c; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x120; // FRawDistributionFloat
		constexpr auto Range = 0x144; // FRawDistributionFloat
		constexpr auto Strength = 0x168; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorAction_SpreadFromSquad {
		constexpr auto SpreadDistance = 0x9c; // float
	}

	namespace n_UParticleModuleColorByParameter {
		constexpr auto ColorParam = 0x68; // FName
		constexpr auto DefaultColor = 0x70; // FColor
	}

	namespace n_UTgSkelControlTrail {
		constexpr auto m_vMaxTranslation = 0x150; // FVector
		constexpr auto m_vMinTranslation = 0x15c; // FVector
		constexpr auto m_bLimitTranslation = 0x168; // char : 1
	}

	namespace n_USeqVar_Float {
		constexpr auto FloatValue = 0xa0; // float
	}

	namespace n_UProcBuildingRuleset {
		constexpr auto RootRule = 0x60; // ObjectProperty
		constexpr auto bBeingEdited = 0x68; // char : 1
		constexpr auto bEnableInteriorTexture = 0x68; // char : 1
		constexpr auto bLODOnlyRoof = 0x68; // char : 1
		constexpr auto bPickRandomSwatch = 0x68; // char : 1
		constexpr auto DefaultRoofMaterial = 0x6c; // ObjectProperty
		constexpr auto DefaultFloorMaterial = 0x74; // ObjectProperty
		constexpr auto DefaultNonRectWallMaterial = 0x7c; // ObjectProperty
		constexpr auto RoofZOffset = 0x84; // float
		constexpr auto NotRoofZOffset = 0x88; // float
		constexpr auto FloorZOffset = 0x8c; // float
		constexpr auto NotFloorZOffset = 0x90; // float
		constexpr auto RoofPolyInset = 0x94; // float
		constexpr auto FloorPolyInset = 0x98; // float
		constexpr auto BuildingLODSpecular = 0x9c; // float
		constexpr auto RoofEdgeScopeRaise = 0xa0; // float
		constexpr auto LODCubemap = 0xa4; // ObjectProperty
		constexpr auto InteriorTexture = 0xac; // ObjectProperty
		constexpr auto Variations = 0xb4; // TArray<FPBVariationInfo>
		constexpr auto ParamSwatches = 0xc4; // TArray<FPBParamSwatch>
	}

	namespace n_UTgInventoryObject_Listen_AdjustFiringInstances {
		constexpr auto m_pFiringInstancesToAdjust = 0xc8; // TArray<FAdjustedFiringInstance>
		constexpr auto m_nItemDeviceTypeToTrack = 0xd8; // int32_t
		constexpr auto m_nActivationItemDeviceType = 0xdc; // int32_t
		constexpr auto m_nActivationDeviceType = 0xe0; // int32_t
		constexpr auto m_bJustActivated = 0xe4; // char : 1
		constexpr auto m_fDuration = 0xe8; // float
		constexpr auto m_fLastActivation = 0xec; // float
	}

	namespace n_UTgDamageType {
		constexpr auto m_bImpulseMesh = 0x90; // char : 1
		constexpr auto m_bDisableRagdoll = 0x90; // char : 1
		constexpr auto m_bEnableMotors = 0x90; // char : 1
		constexpr auto m_bShouldRagdollAfterDeathAnim = 0x90; // char : 1
		constexpr auto m_bCanPlayDeathSpecialFXOnDefaultDeath = 0x90; // char : 1
		constexpr auto m_bHarvestMaterialParameters = 0x90; // char : 1
		constexpr auto m_bFreezeAnimsOnDeath = 0x90; // char : 1
		constexpr auto m_bIgnorePersonalShields = 0x90; // char : 1
		constexpr auto m_bIsLatent = 0x90; // char : 0
		constexpr auto m_bIsAOE = 0x90; // char : 0
		constexpr auto m_bDismountVictim = 0x90; // char : 0
		constexpr auto m_bPreventHitDirectionNotify = 0x90; // char : 0
		constexpr auto m_bMinImpulse = 0x94; // float
		constexpr auto m_bMaxImpulse = 0x98; // float
		constexpr auto m_bMinUpKick = 0x9c; // float
		constexpr auto m_bMaxUpKick = 0xa0; // float
		constexpr auto m_nmDeathAnimNames = 0xa4; // TArray<FName>
		constexpr auto m_nmDeathFlailAnimNames = 0xb4; // TArray<FName>
		constexpr auto m_fMinAngularVelocity = 0xc4; // float
		constexpr auto m_fMaxAngularVelocity = 0xc8; // float
		constexpr auto m_nDeathSpecialFXId = 0xcc; // int32_t
		constexpr auto m_nmDeathSpecialFXSocket = 0xd0; // FName
		constexpr auto m_OverrideMaterial = 0xd8; // ObjectProperty
		constexpr auto m_fLifeAfterDeathSeconds = 0xe0; // float
		constexpr auto m_fHideAfterDeathSeconds = 0xe4; // float
		constexpr auto m_nFadeOutSpecialFXId = 0xe8; // int32_t
		constexpr auto ActivateSkelControlListOnDeath = 0xec; // TArray<FName>
		constexpr auto m_TakeHitAkEvent = 0xfc; // ObjectProperty
		constexpr auto m_TakeHeadShotAkEvent = 0x104; // ObjectProperty
		constexpr auto m_LatentDamageType = 0x10c; // UTgDamageType*
		constexpr auto m_LeftCameraShake = 0x114; // ObjectProperty
		constexpr auto m_RightCameraShake = 0x11c; // ObjectProperty
		constexpr auto m_ForwardCameraShake = 0x124; // ObjectProperty
		constexpr auto m_BackwardCameraShake = 0x12c; // ObjectProperty
		constexpr auto m_BackwardRightCameraShake = 0x134; // ObjectProperty
		constexpr auto m_BackwardLeftCameraShake = 0x13c; // ObjectProperty
		constexpr auto m_ForwardRightCameraShake = 0x144; // ObjectProperty
		constexpr auto m_ForwardLeftCameraShake = 0x14c; // ObjectProperty
	}

	namespace n_UGenericParamListStatEntry {
		constexpr auto StatEvent = 0x60; // FPointer
		constexpr auto Writer = 0x68; // ObjectProperty
	}

	namespace n_AInventory {
		constexpr auto Inventory = 0x280; // ObjectProperty
		constexpr auto InvManager = 0x288; // ObjectProperty
		constexpr auto ItemName = 0x290; // FString
		constexpr auto bDropOnDeath = 0x2a0; // char : 1
		constexpr auto bDelayedSpawn = 0x2a0; // char : 1
		constexpr auto bPredictRespawns = 0x2a0; // char : 1
		constexpr auto RespawnTime = 0x2a4; // float
		constexpr auto MaxDesireability = 0x2a8; // float
		constexpr auto PickupMessage = 0x2ac; // FString
		constexpr auto PickupSound = 0x2bc; // ObjectProperty
		constexpr auto PickupForce = 0x2c4; // FString
		constexpr auto DroppedPickupClass = 0x2d4; // ADroppedPickup*
		constexpr auto DroppedPickupMesh = 0x2dc; // ComponentProperty
		constexpr auto PickupFactoryMesh = 0x2e4; // ComponentProperty
		constexpr auto DroppedPickupParticles = 0x2ec; // ComponentProperty
	}

	namespace n_UCylinderComponent {
		constexpr auto CollisionHeight = 0x24c; // float
		constexpr auto CollisionRadius = 0x250; // float
		constexpr auto CylinderColor = 0x254; // FColor
		constexpr auto bDrawBoundingBox = 0x258; // char : 1
		constexpr auto bDrawNonColliding = 0x258; // char : 1
		constexpr auto bAlwaysRenderIfSelected = 0x258; // char : 1
	}

	namespace n_UGameCrowdBehavior_PlayAnimation {
		constexpr auto AnimationList = 0x9c; // TArray<FName>
		constexpr auto BlendInTime = 0xac; // float
		constexpr auto BlendOutTime = 0xb0; // float
		constexpr auto bUseRootMotion = 0xb4; // char : 1
		constexpr auto bLookAtPlayer = 0xb4; // char : 1
		constexpr auto bLooping = 0xb4; // char : 1
		constexpr auto bBlendBetweenAnims = 0xb4; // char : 1
		constexpr auto CustomActionTarget = 0xb8; // ObjectProperty
		constexpr auto LoopIndex = 0xc0; // int32_t
		constexpr auto LoopTime = 0xc4; // float
		constexpr auto AnimSequence = 0xc8; // ObjectProperty
		constexpr auto AnimationIndex = 0xd0; // int32_t
	}

	namespace n_UTgSilhouetteComponent {
		constexpr auto bEnabled = 0x24c; // char : 1
		constexpr auto bUseFadeOutAlpha = 0x24c; // char : 1
		constexpr auto bNegativeSilhouette = 0x24c; // char : 1
		constexpr auto bUseThicknessMultiplier = 0x24c; // char : 1
		constexpr auto bUseDepthSorting = 0x24c; // char : 1
		constexpr auto SilhouetteColor = 0x250; // FLinearColor
		constexpr auto NearThickness = 0x260; // float
		constexpr auto FarThickness = 0x264; // float
		constexpr auto NearDistance = 0x268; // float
		constexpr auto FarDistance = 0x26c; // float
		constexpr auto MeshComponent = 0x270; // ComponentProperty
		constexpr auto NearDistanceSq = 0x278; // float
		constexpr auto FarDistanceSq = 0x27c; // float
		constexpr auto FadeOutTime = 0x280; // float
		constexpr auto RemainingFadeOutTime = 0x284; // float
		constexpr auto PrimitiveSceneInfoId = 0x288; // int32_t
		constexpr auto ThicknessMultiplier = 0x28c; // float
		constexpr auto DefaultThicknessMultiplier = 0x290; // float
		constexpr auto ReleaseResourcesFence = 0x294; // FPointer
	}

	namespace n_ATgGameInfo_TeamDeathMatch {
		constexpr auto m_bSpawnInputLock = 0x280; // char : 1
		constexpr auto m_bAllowSpawnGuardDuringDeviceFire = 0x280; // char : 1
	}

	namespace n_UUIComponent_ItemStats {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_ItemStatEntries = 0x128; // ObjectProperty
	}

	namespace n_UMantleReachSpec {
		constexpr auto bClimbUp = 0xc8; // char : 1
	}

	namespace n_ASceneCapture2DActor {
		constexpr auto DrawFrustum = 0x288; // ComponentProperty
	}

	namespace n_UTgGameplayCurvesSet_AimAssistLocking {
		constexpr auto RelativeLockStrengthHoriz = 0x64; // FRawDistributionFloat
		constexpr auto RelativeLockStrengthVert = 0x88; // FRawDistributionFloat
		constexpr auto RelativeLockStrengthByDist = 0xac; // FRawDistributionFloat
		constexpr auto fGlobalLockStrength = 0xd0; // float
	}

	namespace n_UGameUISceneClient {
		constexpr auto LatestDeltaTime = 0x11c; // float
		constexpr auto DoubleClickStartTime = 0x120; // FDouble
		constexpr auto DoubleClickStartPosition = 0x128; // FIntPoint
		constexpr auto InitialPressedKeys = 0x130; // FMap_Mirror
		constexpr auto bUpdateInputProcessingStatus = 0x178; // char : 1
		constexpr auto bUpdateSceneViewportSizes = 0x178; // char : 1
		constexpr auto bEnableDebugInput = 0x178; // char : 1
		constexpr auto bRenderDebugInfo = 0x178; // char : 1
		constexpr auto bCaptureUnprocessedInput = 0x178; // char : 1
		constexpr auto NavAliases = 0x17c; // TArray<FName>
		constexpr auto AxisInputKeys = 0x18c; // TArray<FName>
	}

	namespace n_UVivoxOSSConnectors {
		constexpr auto m_OnlineSub = 0x60; // ObjectProperty
		constexpr auto Closures = 0x68; // TArray<ObjectProperty>
		constexpr auto m_VivoxInterface = 0x78; // FPointer
	}

	namespace n_UTgCameraModule_TopDown {
		constexpr auto WorldViewRotation = 0x9c; // FRotator
	}

	namespace n_UUIComponent_HudMenuClass {
		constexpr auto m_pInfo = 0x120; // ObjectProperty
		constexpr auto m_pTalentList = 0x128; // ObjectProperty
		constexpr auto m_grInput = 0x130; // ObjectProperty
	}

	namespace n_USeqAct_Possess {
		constexpr auto PawnToPossess = 0x108; // ObjectProperty
		constexpr auto bKillOldPawn = 0x110; // char : 1
		constexpr auto bTryToLeaveVehicle = 0x110; // char : 1
	}

	namespace n_UUIComponent_LootItem {
		constexpr auto m_pItem = 0x120; // ObjectProperty
		constexpr auto m_mcXName = 0x128; // ObjectProperty
		constexpr auto m_mcRentalIcon = 0x130; // ObjectProperty
		constexpr auto m_mcRentalText = 0x138; // ObjectProperty
	}

	namespace n_ATgMapBoundsVolume {
		constexpr auto MinimapImage = 0x2bc; // ObjectProperty
	}

	namespace n_UUIData_StringList {
		constexpr auto sValues = 0x60; // TArray<FString>
	}

	namespace n_UTgAchievement_BulletSponge {
		constexpr auto m_nDamageShielded = 0x90; // int32_t
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget_Minotaur {
		constexpr auto bMustBeEnemy = 0x94; // char : 1
	}

	namespace n_UGFxClikWidget {
		constexpr auto __EventListener__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UInterpTrackAkEvent {
		constexpr auto AkEvents = 0xa0; // TArray<FAkEventTrackKey>
	}

	namespace n_UFogVolumeLinearHalfspaceDensityComponent {
		constexpr auto PlaneDistanceFactor = 0xe0; // float
		constexpr auto HalfspacePlane = 0xf0; // FPlane
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto CollisionHeightData = 0x24c; // FUntypedBulkData_Mirror
		constexpr auto ComponentLayers = 0x28c; // TArray<FName>
		constexpr auto DominantLayerData = 0x29c; // FUntypedBulkData_Mirror
		constexpr auto SectionBaseX = 0x2dc; // int32_t
		constexpr auto SectionBaseY = 0x2e0; // int32_t
		constexpr auto CollisionSizeQuads = 0x2e4; // int32_t
		constexpr auto CollisionScale = 0x2e8; // float
		constexpr auto CollisionQuadFlags = 0x2ec; // TArray<char>
		constexpr auto PhysicalMaterials = 0x2fc; // TArray<ObjectProperty>
		constexpr auto RBHeightfield = 0x30c; // FPointer
		constexpr auto bHasKDOPData = 0x314; // char : 1
		constexpr auto bIncludeHoles = 0x314; // char : 1
		constexpr auto bHeightFieldDataHasHole = 0x314; // char : 1
		constexpr auto kDOPTree = 0x318; // FPointer
		constexpr auto kDOPCollisionVerts = 0x320; // TArray<FVector>
		constexpr auto CachedBoxSphereBounds = 0x330; // FBoxSphereBounds
	}

	namespace n_UTgSkelCon_Gate {
		constexpr auto ChildControls = 0xd0; // TArray<FSkelControlGateChild>
	}

	namespace n_UTgAIBehaviorCondition_Taskforce {
		constexpr auto Taskforce = 0x98; // int32_t
	}

	namespace n_UTgSeqAct_BeaconExitSetRespawn {
		constexpr auto m_RespawnPoint = 0x108; // ObjectProperty
		constexpr auto m_bRespawnImmediately = 0x110; // char : 1
	}

	namespace n_UUIComponent_MasteryRewardsEntry {
		constexpr auto m_mcLockIcon = 0x120; // ObjectProperty
		constexpr auto m_mcLevelText = 0x128; // ObjectProperty
		constexpr auto m_mcRewardType = 0x130; // ObjectProperty
		constexpr auto m_mcRewardName = 0x138; // ObjectProperty
		constexpr auto m_mcRewardTitle = 0x140; // ObjectProperty
		constexpr auto m_mcRewardChest = 0x148; // ObjectProperty
		constexpr auto m_mcRewardCurrency = 0x150; // ObjectProperty
		constexpr auto m_mcRewardCurrencyTF = 0x158; // ObjectProperty
		constexpr auto m_mcCardIcon = 0x160; // ObjectProperty
		constexpr auto m_mcItemIcon = 0x168; // ObjectProperty
		constexpr auto m_mcTextureIcon = 0x170; // ObjectProperty
		constexpr auto m_mcRarity = 0x178; // ObjectProperty
		constexpr auto m_pFrameButton = 0x180; // ObjectProperty
		constexpr auto m_pPriceButton = 0x188; // ObjectProperty
	}

	namespace n_ATgDevice_HolyHammer {
		constexpr auto m_nChainCount = 0xaec; // int32_t
		constexpr auto m_fChainResetTimer = 0xaf0; // float
		constexpr auto m_fChainResetDuration = 0xaf4; // float
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // char : 1
		constexpr auto MultiplyY = 0x8c; // char : 1
		constexpr auto MultiplyZ = 0x8c; // char : 1
	}

	namespace n_UTgAnimBlendPerBone {
		constexpr auto m_bLoopSourceChild = 0x158; // char : 1
		constexpr auto m_bLoopTargetChild = 0x158; // char : 1
		constexpr auto m_bPlaySourceChild = 0x158; // char : 1
		constexpr auto m_bPlayTargetChild = 0x158; // char : 1
		constexpr auto m_bSetStrengthFromAnimNode = 0x158; // char : 1
		constexpr auto m_bInvertStrengthFromAnimNode = 0x158; // char : 1
		constexpr auto m_bInitializedCachedNodeList = 0x158; // char : 1
		constexpr auto m_StrengthAnimNodeNameList = 0x15c; // TArray<FName>
		constexpr auto m_StrengthEmoteList = 0x16c; // TArray<EEmote>
		constexpr auto m_CachedNodeList = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_CachedEmoteSequences = 0x18c; // TArray<ObjectProperty>
	}

	namespace n_UForceFieldShapeCapsule {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UTgCameraModifier_LobbyCameraTransition {
		constexpr auto SourceCamera = 0x80; // ObjectProperty
		constexpr auto DestinationCamera = 0x88; // ObjectProperty
		constexpr auto TransitionType = 0x90; // CameraTransType
		constexpr auto fSlideDistance = 0x94; // float
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x2bc; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x2cc; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_MirrorDamageToHeal {
		constexpr auto m_CachedFiremode = 0xd0; // ObjectProperty
	}

	namespace n_USwfMovie {
		constexpr auto bUsesFontlib = 0xa0; // char : 1
		constexpr auto bSetSRGBOnImportedTextures = 0xa0; // char : 1
		constexpr auto bPackTextures = 0xa0; // char : 1
		constexpr auto bForceSquarePacking = 0xa0; // char : 1
		constexpr auto bUseStreamableTextures = 0xa0; // char : 1
		constexpr auto PackTextureSize = 0xa4; // int32_t
		constexpr auto TextureRescale = 0xa8; // FlashTextureRescale
		constexpr auto TextureFormat = 0xac; // FString
		constexpr auto RTTextures = 0xbc; // int32_t
		constexpr auto RTVideoTextures = 0xc0; // int32_t
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x6c; // FRawDistributionVector
		constexpr auto Absolute = 0x90; // char : 1
	}

	namespace n_ATgPickupFactory_Item {
		constexpr auto PickupSound = 0x3d4; // ObjectProperty
		constexpr auto PickupMessage = 0x3dc; // FString
		constexpr auto RespawnTime = 0x3ec; // float
	}

	namespace n_UUIComponent_TitlesView {
		constexpr auto m_TitleEntries = 0x120; // TArray<ObjectProperty>
		constexpr auto m_grTitlesGroup = 0x130; // ObjectProperty
		constexpr auto m_mcPlayerTitle = 0x138; // ObjectProperty
		constexpr auto m_pPlayerName = 0x140; // ObjectProperty
		constexpr auto m_pEquipButton = 0x148; // ObjectProperty
		constexpr auto m_pTooltipLeft = 0x150; // ObjectProperty
		constexpr auto m_pTooltipRight = 0x158; // ObjectProperty
		constexpr auto m_pScrollbar = 0x160; // ObjectProperty
		constexpr auto m_nLastTooltipIndex = 0x168; // int32_t
		constexpr auto m_nNumTitlesRows = 0x16c; // int32_t
		constexpr auto m_nNumTitlesCols = 0x170; // int32_t
	}

	namespace n_UUIComponent_List {
		constexpr auto m_ScrollAxis = 0x120; // FSmoothScrollingAxis [0x2]
		constexpr auto m_nSelectedDataIndex = 0x160; // int32_t
		constexpr auto m_ListItems = 0x164; // TArray<FUICListEntry>
		constexpr auto m_ListBufferItems = 0x174; // TArray<ObjectProperty>
		constexpr auto m_ListData = 0x184; // TArray<ObjectProperty>
		constexpr auto m_grList = 0x194; // ObjectProperty
		constexpr auto m_pScrollbarV = 0x19c; // ObjectProperty
		constexpr auto m_pScrollbarH = 0x1a4; // ObjectProperty
		constexpr auto m_dwItemSize = 0x1ac; // Fdword
		constexpr auto m_dwDataSize = 0x1b0; // Fdword
		constexpr auto m_bExtendVertically = 0x1b4; // char : 1
		constexpr auto m_bAutoFillNavGroup = 0x1b4; // char : 1
		constexpr auto m_bFocusSelectedItem = 0x1b4; // char : 1
		constexpr auto m_bAutoSelectQueued = 0x1b4; // char : 1
		constexpr auto m_bInvertXAxis = 0x1b4; // char : 1
		constexpr auto m_bInvertYAxis = 0x1b4; // char : 1
		constexpr auto m_bNavigatingByKeyboard = 0x1b4; // char : 1
		constexpr auto m_nScrollX = 0x1b8; // int32_t
		constexpr auto m_nScrollY = 0x1bc; // int32_t
		constexpr auto m_nItemOffsetX = 0x1c0; // int32_t
		constexpr auto m_nItemOffsetY = 0x1c4; // int32_t
		constexpr auto m_nMarginX = 0x1c8; // int32_t
		constexpr auto m_nMarginY = 0x1cc; // int32_t
		constexpr auto m_fAutoSelectDelay = 0x1d0; // float
		constexpr auto m_fAutoSelectTimer = 0x1d4; // float
	}

	namespace n_UUIDataProvider_SettingsArray {
		constexpr auto Settings = 0x70; // ObjectProperty
		constexpr auto SettingsId = 0x78; // int32_t
		constexpr auto SettingsName = 0x7c; // FName
		constexpr auto ColumnHeaderText = 0x84; // FString
		constexpr auto Values = 0x94; // TArray<FIdToStringMapping>
	}

	namespace n_UUIComponent_BoosterItemBenefits {
		constexpr auto m_nRowsSet = 0x120; // int32_t
		constexpr auto m_mcBenefitsTF = 0x124; // ObjectProperty [0xb]
	}

	namespace n_AGameInfo {
		constexpr auto bRestartLevel = 0x280; // char : 1
		constexpr auto bPauseable = 0x280; // char : 1
		constexpr auto bTeamGame = 0x280; // char : 1
		constexpr auto bGameEnded = 0x280; // char : 1
		constexpr auto bOverTime = 0x280; // char : 1
		constexpr auto bDelayedStart = 0x280; // char : 1
		constexpr auto bWaitingToStartMatch = 0x280; // char : 1
		constexpr auto bChangeLevels = 0x280; // char : 1
		constexpr auto bAlreadyChanged = 0x280; // char : 0
		constexpr auto bAdminCanPause = 0x280; // char : 0
		constexpr auto bGameRestarted = 0x280; // char : 0
		constexpr auto bLevelChange = 0x280; // char : 0
		constexpr auto bKickLiveIdlers = 0x280; // char : 0
		constexpr auto bUsingArbitration = 0x280; // char : 0
		constexpr auto bHasArbitratedHandshakeBegun = 0x280; // char : 0
		constexpr auto bNeedsEndGameHandshake = 0x280; // char : 0
		constexpr auto bIsEndGameHandshakeComplete = 0x280; // char : 0
		constexpr auto bHasEndGameHandshakeBegun = 0x280; // char : 0
		constexpr auto bFixedPlayerStart = 0x280; // char : 0
		constexpr auto bDoFearCostFallOff = 0x280; // char : 0
		constexpr auto bUseSeamlessTravel = 0x280; // char : 0
		constexpr auto bHasNetworkError = 0x280; // char : 0
		constexpr auto bRequiresPushToTalk = 0x280; // char : 0
		constexpr auto bIsStandbyCheckingEnabled = 0x280; // char : 0
		constexpr auto bIsStandbyCheckingOn = 0x280; // char : 0
		constexpr auto bHasStandbyCheatTriggered = 0x280; // char : 0
		constexpr auto CauseEventCommand = 0x284; // FString
		constexpr auto BugLocString = 0x294; // FString
		constexpr auto BugRotString = 0x2a4; // FString
		constexpr auto PendingArbitrationPCs = 0x2b4; // TArray<ObjectProperty>
		constexpr auto ArbitrationPCs = 0x2c4; // TArray<ObjectProperty>
		constexpr auto ArbitrationHandshakeTimeout = 0x2d4; // float
		constexpr auto GameDifficulty = 0x2d8; // float
		constexpr auto GoreLevel = 0x2dc; // int32_t
		constexpr auto GameSpeed = 0x2e0; // float
		constexpr auto DefaultPawnClass = 0x2e4; // APawn*
		constexpr auto HUDType = 0x2ec; // AHUD*
		constexpr auto SecondaryHUDType = 0x2f4; // AHUD*
		constexpr auto MaxSpectators = 0x2fc; // int32_t
		constexpr auto MaxSpectatorsAllowed = 0x300; // int32_t
		constexpr auto NumSpectators = 0x304; // int32_t
		constexpr auto MaxPlayers = 0x308; // int32_t
		constexpr auto MaxPlayersAllowed = 0x30c; // int32_t
		constexpr auto NumPlayers = 0x310; // int32_t
		constexpr auto NumBots = 0x314; // int32_t
		constexpr auto NumTravellingPlayers = 0x318; // int32_t
		constexpr auto CurrentID = 0x31c; // int32_t
		constexpr auto DefaultPlayerName = 0x320; // FString
		constexpr auto GameName = 0x330; // FString
		constexpr auto FearCostFallOff = 0x340; // float
		constexpr auto GoalScore = 0x344; // int32_t
		constexpr auto MaxLives = 0x348; // int32_t
		constexpr auto TimeLimit = 0x34c; // int32_t
		constexpr auto DeathMessageClass = 0x350; // ULocalMessage*
		constexpr auto GameMessageClass = 0x358; // UGameMessage*
		constexpr auto BaseMutator = 0x360; // ObjectProperty
		constexpr auto AccessControlClass = 0x368; // AAccessControl*
		constexpr auto AccessControl = 0x370; // ObjectProperty
		constexpr auto BroadcastHandlerClass = 0x378; // ABroadcastHandler*
		constexpr auto BroadcastHandler = 0x380; // ObjectProperty
		constexpr auto AutoTestManagerClass = 0x388; // AAutoTestManager*
		constexpr auto MyAutoTestManager = 0x390; // ObjectProperty
		constexpr auto PlayerControllerClass = 0x398; // APlayerController*
		constexpr auto PlayerReplicationInfoClass = 0x3a0; // APlayerReplicationInfo*
		constexpr auto GameReplicationInfoClass = 0x3a8; // AGameReplicationInfo*
		constexpr auto GameReplicationInfo = 0x3b0; // ObjectProperty
		constexpr auto PopulationManager = 0x3b8; // ObjectProperty
		constexpr auto PopulationManagerClass = 0x3c0; // ACrowdPopulationManagerBase*
		constexpr auto MaxIdleTime = 0x3c8; // float
		constexpr auto MaxTimeMargin = 0x3cc; // float
		constexpr auto TimeMarginSlack = 0x3d0; // float
		constexpr auto MinTimeMargin = 0x3d4; // float
		constexpr auto InactivePRIArray = 0x3d8; // TArray<ObjectProperty>
		constexpr auto Pausers = 0x3e8; // TArray<DelegateProperty>
		constexpr auto OnlineSub = 0x3f8; // ObjectProperty
		constexpr auto GameInterface = 0x400; // TScriptInterface<Class>
		constexpr auto OnlineStatsWriteClass = 0x410; // UOnlineStatsWrite*
		constexpr auto LeaderboardId = 0x418; // int32_t
		constexpr auto ArbitratedLeaderboardId = 0x41c; // int32_t
		constexpr auto CoverReplicatorBase = 0x420; // ObjectProperty
		constexpr auto OnlineGameSettingsClass = 0x428; // UOnlineGameSettings*
		constexpr auto ServerOptions = 0x430; // FString
		constexpr auto AdjustedNetSpeed = 0x440; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x444; // float
		constexpr auto TotalNetBandwidth = 0x448; // int32_t
		constexpr auto MinDynamicBandwidth = 0x44c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x450; // int32_t
		constexpr auto StandbyRxCheatTime = 0x454; // float
		constexpr auto StandbyTxCheatTime = 0x458; // float
		constexpr auto BadPingThreshold = 0x45c; // int32_t
		constexpr auto PercentMissingForRxStandby = 0x460; // float
		constexpr auto PercentMissingForTxStandby = 0x464; // float
		constexpr auto PercentForBadPing = 0x468; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x46c; // float
		constexpr auto StreamingPauseIcon = 0x470; // ObjectProperty
		constexpr auto GameInfoClassAliases = 0x478; // TArray<FGameClassShortName>
		constexpr auto DefaultGameType = 0x488; // FString
		constexpr auto DefaultMapPrefixes = 0x498; // TArray<FGameTypePrefix>
		constexpr auto CustomMapPrefixes = 0x4a8; // TArray<FGameTypePrefix>
		constexpr auto AnimTreePoolSize = 0x4b8; // int32_t
		constexpr auto __CanUnpause__Delegate = 0x4bc; // DelegateProperty
	}

	namespace n_UNavMeshPath_WithinTraversalDist {
		constexpr auto MaxTraversalDist = 0x78; // float
		constexpr auto bSoft = 0x7c; // char : 1
		constexpr auto SoftStartPenalty = 0x80; // float
	}

	namespace n_ABroadcastHandler {
		constexpr auto SentText = 0x280; // int32_t
		constexpr auto bMuteSpectators = 0x284; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_AbilityProcBase {
		constexpr auto m_nAbilitySlotRestriction = 0xc8; // int32_t
		constexpr auto m_nAbilityTypeRestriction = 0xcc; // int32_t
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x60; // TArray<FDelegateArray>
		constexpr auto __PlatformInterfaceDelegate__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UTgSeqEvent_LoadoutChanged {
		constexpr auto DeckIndex = 0x128; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsMetaGameState {
		constexpr auto TestGameState = 0x98; // EMetaGameState
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0xa0; // float
		constexpr auto PathBuildTime = 0xa4; // float
		constexpr auto InterpGroups = 0xa8; // TArray<ObjectProperty>
		constexpr auto CurveEdSetup = 0xb8; // ObjectProperty
		constexpr auto EdSectionStart = 0xc0; // float
		constexpr auto EdSectionEnd = 0xc4; // float
		constexpr auto bShouldBakeAndPrune = 0xc8; // char : 1
		constexpr auto BakeAndPruneStatus = 0xcc; // TArray<FAnimSetBakeAndPruneStatus>
		constexpr auto CachedDirectorGroup = 0xdc; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_SpawnTeamHealthNugget {
		constexpr auto m_NuggetSpawnFX = 0xc8; // ObjectProperty
		constexpr auto m_NuggetSpawnFXID = 0xd0; // int32_t
		constexpr auto m_bUseCV1ForSpawnChance = 0xd4; // char : 1
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x24c; // int32_t
		constexpr auto SectionBaseY = 0x250; // int32_t
		constexpr auto ComponentSizeQuads = 0x254; // int32_t
		constexpr auto SubsectionSizeQuads = 0x258; // int32_t
		constexpr auto NumSubsections = 0x25c; // int32_t
		constexpr auto OverrideMaterial = 0x260; // ObjectProperty
		constexpr auto MaterialInstance = 0x268; // ObjectProperty
		constexpr auto WeightmapLayerAllocations = 0x270; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x280; // TArray<ObjectProperty>
		constexpr auto WeightmapData = 0x290; // FIndirectArray_Mirror
		constexpr auto WeightmapScaleBias = 0x2a0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x2b0; // float
		constexpr auto HeightmapScaleBias = 0x2c0; // FVector4
		constexpr auto HeightmapTexture = 0x2d0; // ObjectProperty
		constexpr auto CachedBoxSphereBounds = 0x2d8; // FBoxSphereBounds
		constexpr auto CachedLocalBox = 0x2f4; // FBox
		constexpr auto ShadowMaps = 0x310; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x320; // TArray<FGuid>
		constexpr auto LightMap = 0x330; // FLightMapRef
		constexpr auto EditToolRenderData = 0x338; // FPointer
		constexpr auto CollisionMipLevel = 0x340; // int32_t
		constexpr auto PlatformData = 0x344; // FPointer
		constexpr auto PlatformDataSize = 0x34c; // int32_t
		constexpr auto bNeedPostUndo = 0x350; // char : 1
		constexpr auto ForcedLOD = 0x354; // int32_t
		constexpr auto NeighborLOD = 0x358; // char [0x8]
		constexpr auto NeighborLODBias = 0x360; // char [0x8]
		constexpr auto LODBias = 0x368; // int32_t
	}

	namespace n_UPBRuleNodeSubRuleset {
		constexpr auto SubRuleset = 0x70; // ObjectProperty
	}

	namespace n_UUIComponent_Toggle {
		constexpr auto m_bActive = 0x140; // char : 1
		constexpr auto m_mcActive = 0x144; // ObjectProperty
	}

	namespace n_UTerrainComponent {
		constexpr auto ShadowMaps = 0x24c; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x25c; // TArray<FGuid>
		constexpr auto TerrainObject = 0x26c; // FPointer
		constexpr auto SectionBaseX = 0x274; // int32_t
		constexpr auto SectionBaseY = 0x278; // int32_t
		constexpr auto SectionSizeX = 0x27c; // int32_t
		constexpr auto SectionSizeY = 0x280; // int32_t
		constexpr auto TrueSectionSizeX = 0x284; // int32_t
		constexpr auto TrueSectionSizeY = 0x288; // int32_t
		constexpr auto LightMap = 0x28c; // FLightMapRef
		constexpr auto PatchBounds = 0x294; // TArray<FTerrainPatchBounds>
		constexpr auto BatchMaterials = 0x2a4; // TArray<FTerrainMaterialMask>
		constexpr auto FullBatch = 0x2b4; // int32_t
		constexpr auto BVTree = 0x2b8; // FTerrainBVTree
		constexpr auto CollisionVertices = 0x2c8; // TArray<FVector>
		constexpr auto RBHeightfield = 0x2d8; // FPointer
		constexpr auto bDisplayCollisionLevel = 0x2e0; // char : 1
	}

	namespace n_UGFxEvent_FSCommand {
		constexpr auto Movie = 0x128; // ObjectProperty
		constexpr auto FSCommand = 0x130; // FString
		constexpr auto Handler = 0x140; // ObjectProperty
	}

	namespace n_ATgDeploy_ShieldBarikDome {
		constexpr auto m_fTurretSetupTime = 0x44c; // float
	}

	namespace n_USeqAct_SetMatInstVectorParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto VectorValue = 0x118; // FLinearColor
	}

	namespace n_UUIArmory {
		constexpr auto m_nHoverItem = 0x244; // int32_t
		constexpr auto m_eState = 0x248; // char
		constexpr auto m_eItemType = 0x249; // char
		constexpr auto m_bHovering = 0x24c; // char : 1
		constexpr auto m_bRotating = 0x24c; // char : 1
		constexpr auto m_fPreviousPosX = 0x250; // float
		constexpr auto m_pItemsGroup = 0x254; // ObjectProperty
		constexpr auto m_pClassGroup = 0x25c; // ObjectProperty
		constexpr auto m_mcHeader = 0x264; // ObjectProperty
		constexpr auto m_mcHeaderMenu = 0x26c; // ObjectProperty
		constexpr auto m_mcHeaderCrowns = 0x274; // ObjectProperty
		constexpr auto m_mcHeaderCrownsText = 0x27c; // ObjectProperty
		constexpr auto m_mcHeaderTrophies = 0x284; // ObjectProperty
		constexpr auto m_mcHeaderTrophiesText = 0x28c; // ObjectProperty
		constexpr auto m_mcHeaderKey = 0x294; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTab = 0x2a4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabSelect = 0x2b4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabShadow = 0x2c4; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabHighlight = 0x2d4; // ObjectProperty [0x2]
		constexpr auto m_mcItems = 0x2e4; // ObjectProperty
		constexpr auto m_mcEmoteItem = 0x2ec; // ObjectProperty [0x3]
		constexpr auto m_mcEmoteItemFrame = 0x304; // ObjectProperty [0x3]
		constexpr auto m_mcEmoteItemRarity = 0x31c; // ObjectProperty [0x3]
		constexpr auto m_mcEmoteItemTexture = 0x334; // ObjectProperty [0x3]
		constexpr auto m_mcSprayItem = 0x34c; // ObjectProperty [0x3]
		constexpr auto m_mcSprayItemFrame = 0x364; // ObjectProperty [0x3]
		constexpr auto m_mcSprayItemRarity = 0x37c; // ObjectProperty [0x3]
		constexpr auto m_mcSprayItemTexture = 0x394; // ObjectProperty [0x3]
		constexpr auto m_mcNormalItem = 0x3ac; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemIcon = 0x3e4; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemFrame = 0x41c; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemRarity = 0x454; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemTexture = 0x48c; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemTypeTF = 0x4c4; // ObjectProperty [0x7]
		constexpr auto m_mcNormalItemNameTF = 0x4fc; // ObjectProperty [0x7]
		constexpr auto m_mcClasses = 0x534; // ObjectProperty
		constexpr auto m_mcClass = 0x53c; // ObjectProperty [0x4]
		constexpr auto m_mcClassName = 0x55c; // ObjectProperty [0x4]
		constexpr auto m_mcClassIcon = 0x57c; // ObjectProperty [0x4]
		constexpr auto m_mcClassLevel = 0x59c; // ObjectProperty [0x4]
		constexpr auto m_mcClassPortrait = 0x5bc; // ObjectProperty [0x4]
		constexpr auto m_mcClassProgress = 0x5dc; // ObjectProperty [0x4]
		constexpr auto m_mcClassProgressTip = 0x5fc; // ObjectProperty [0x4]
		constexpr auto m_mcClassProgressFill = 0x61c; // ObjectProperty [0x4]
		constexpr auto m_mcDetails = 0x63c; // ObjectProperty
		constexpr auto m_mcDetailDesc = 0x644; // ObjectProperty
		constexpr auto m_mcDetailName = 0x64c; // ObjectProperty
		constexpr auto m_mcDetailType = 0x654; // ObjectProperty
		constexpr auto m_mcDetailFrame = 0x65c; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x664; // ObjectProperty
		constexpr auto m_mcRotator = 0x66c; // ObjectProperty
	}

	namespace n_USequence {
		constexpr auto LogFile = 0xec; // FPointer
		constexpr auto SequenceObjects = 0xf4; // TArray<ObjectProperty>
		constexpr auto ActiveSequenceOps = 0x104; // TArray<ObjectProperty>
		constexpr auto NestedSequences = 0x114; // TArray<ObjectProperty>
		constexpr auto UnregisteredEvents = 0x124; // TArray<ObjectProperty>
		constexpr auto DelayedActivatedOps = 0x134; // TArray<FActivateOp>
		constexpr auto DelayedLatentOps = 0x144; // TArray<ObjectProperty>
		constexpr auto bEnabled = 0x154; // char : 1
		constexpr auto QueuedActivations = 0x158; // TArray<FQueuedActivationInfo>
		constexpr auto DefaultViewX = 0x168; // int32_t
		constexpr auto DefaultViewY = 0x16c; // int32_t
		constexpr auto DefaultViewZoom = 0x170; // float
	}

	namespace n_AMobileDebugCameraController {
		constexpr auto OldMobileGroup = 0x7c8; // int32_t
		constexpr auto MPI = 0x7cc; // ObjectProperty
	}

	namespace n_UTgScreenCapturePostEffect {
		constexpr auto ScreenCapture = 0x90; // ObjectProperty
		constexpr auto bIsScreenCaptureReady = 0x98; // char : 1
	}

	namespace n_UTgSeqAct_TutorialHighlighter {
		constexpr auto GameUIElement = 0x108; // eTutorialHighlighterElement
	}

	namespace n_UTgGameplayCurvesSet_DamageFalloffAOE {
		constexpr auto DamageFalloff = 0x64; // FRawDistributionFloat
		constexpr auto bIsRangeNormalized = 0x88; // char : 1
		constexpr auto bExcludeEffectiveRange = 0x88; // char : 1
	}

	namespace n_ATgGame_RoyaleBase {
		constexpr auto m_pLootManager = 0x744; // ObjectProperty
		constexpr auto m_fMapSize = 0x74c; // float
		constexpr auto m_fZeppelinDist = 0x750; // float
		constexpr auto m_vZeppelinMapOriginShift = 0x754; // FVector
		constexpr auto m_nDisenchantValues = 0x760; // TArray<int32_t>
		constexpr auto m_nLootLifespan = 0x770; // int32_t
		constexpr auto m_nItemDropLimit = 0x774; // int32_t
		constexpr auto m_fForgeTime = 0x778; // float
		constexpr auto m_fZeppelinInitialSpawnHeight = 0x77c; // float
		constexpr auto m_bDeployPlayers = 0x780; // char : 1
		constexpr auto m_bZeppelinSpawn = 0x780; // char : 1
		constexpr auto m_bDestroyZeppelinsAfterDeploy = 0x780; // char : 1
		constexpr auto m_fZeppelinAirSpeed = 0x784; // float
		constexpr auto m_fDeployRange = 0x788; // float
		constexpr auto m_fZeppelinOriginSpawnOffset = 0x78c; // float
		constexpr auto m_fZeppelinRangeSpawnOffset = 0x790; // float
		constexpr auto m_nMaxShards = 0x794; // int32_t
	}

	namespace n_UTgAnimBlendByFireMode {
		constexpr auto m_nDefaultFireMode = 0x168; // int32_t
		constexpr auto m_EquipPoint = 0x16c; // TG_EQUIP_POINT
	}

	namespace n_UGameplayEventsHandler {
		constexpr auto EventIDFilter = 0x60; // TArray<int32_t>
		constexpr auto GroupFilter = 0x70; // TArray<FGameStatGroup>
		constexpr auto Reader = 0x80; // ObjectProperty
	}

	namespace n_UMorphNodeWeightBase {
		constexpr auto NodeConns = 0x74; // TArray<FMorphNodeConn>
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Percent = 0xe4; // FExpressionInput
		constexpr auto LuminanceFactors = 0x118; // FLinearColor
	}

	namespace n_APrefabInstance {
		constexpr auto TemplatePrefab = 0x280; // ObjectProperty
		constexpr auto TemplateVersion = 0x288; // int32_t
		constexpr auto ArchetypeToInstanceMap = 0x28c; // TMap<None, None>
		constexpr auto SequenceInstance = 0x2d4; // ObjectProperty
		constexpr auto PI_PackageVersion = 0x2dc; // int32_t
		constexpr auto PI_LicenseePackageVersion = 0x2e0; // int32_t
		constexpr auto PI_Bytes = 0x2e4; // TArray<char>
		constexpr auto PI_CompleteObjects = 0x2f4; // TArray<ObjectProperty>
		constexpr auto PI_ReferencedObjects = 0x304; // TArray<ObjectProperty>
		constexpr auto PI_SavedNames = 0x314; // TArray<FString>
		constexpr auto PI_ObjectMap = 0x324; // TMap<None, None>
		constexpr auto m_bIgnoreVersionUpdates = 0x36c; // char : 1
	}

	namespace n_APComMusicThemeSyncActor {
		constexpr auto m_ReplicatedMusicEvent = 0x280; // FName
	}

	namespace n_UTgAIBehaviorAction_MoveToCover {
		constexpr auto bAllowPopout = 0x9c; // char : 1
	}

	namespace n_UUIComponent_GameMap {
		constexpr auto m_nDepth = 0x120; // int32_t
		constexpr auto m_bSnapFog = 0x124; // char : 1
		constexpr auto m_bInitMap = 0x124; // char : 1
		constexpr auto m_bDirection = 0x124; // char : 1
		constexpr auto m_bMapHasFocus = 0x124; // char : 1
		constexpr auto m_fSize = 0x128; // float
		constexpr auto m_fRadius = 0x12c; // float
		constexpr auto m_fCursorX = 0x130; // float
		constexpr auto m_fCursorY = 0x134; // float
		constexpr auto m_fOffsetX = 0x138; // float
		constexpr auto m_fOffsetY = 0x13c; // float
		constexpr auto m_fPulseTimer = 0x140; // float
		constexpr auto m_fChestPulseInTimer = 0x144; // float
		constexpr auto m_fChestPulseIOutTimer = 0x148; // float
		constexpr auto m_fGamepadCursorX = 0x14c; // float
		constexpr auto m_fGamepadCursorY = 0x150; // float
		constexpr auto m_fCursorRate = 0x154; // float
		constexpr auto m_fCursorSafeBound = 0x158; // float
		constexpr auto m_fCursorPanBound = 0x15c; // float
		constexpr auto m_fConvergeRadius = 0x160; // float
		constexpr auto m_fConvergeTarget = 0x164; // float
		constexpr auto m_fConvergeTargetX = 0x168; // float
		constexpr auto m_fConvergeTargetY = 0x16c; // float
		constexpr auto m_vBoundsCenter = 0x170; // FVector
		constexpr auto m_vBoundsExtents = 0x17c; // FVector
		constexpr auto m_mcMap = 0x188; // ObjectProperty
		constexpr auto m_mcMapCursor = 0x190; // ObjectProperty
		constexpr auto m_mcMapCursorLineX = 0x198; // ObjectProperty
		constexpr auto m_mcMapCursorLineY = 0x1a0; // ObjectProperty
		constexpr auto m_mcMapFog = 0x1a8; // ObjectProperty
		constexpr auto m_mcMapMask = 0x1b0; // ObjectProperty
		constexpr auto m_mcMapInner = 0x1b8; // ObjectProperty
		constexpr auto m_mcMapOuter = 0x1c0; // ObjectProperty
		constexpr auto m_mcMapForges = 0x1c8; // ObjectProperty
		constexpr auto m_mcMapDirection = 0x1d0; // ObjectProperty
		constexpr auto m_mcMapDirectionAnim = 0x1d8; // ObjectProperty
		constexpr auto m_mcMapDirectionLine = 0x1e0; // ObjectProperty
		constexpr auto m_mcMapNamedAreas = 0x1e8; // ObjectProperty
		constexpr auto m_mcMapZeppelinLine = 0x1f0; // ObjectProperty
		constexpr auto m_mcMapZeppelinA = 0x1f8; // ObjectProperty
		constexpr auto m_mcMapZeppelinB = 0x200; // ObjectProperty
		constexpr auto m_pMapTextures = 0x208; // ObjectProperty
		constexpr auto m_pTeamMarkers = 0x210; // ObjectProperty
		constexpr auto m_pChestMarkers = 0x218; // ObjectProperty
		constexpr auto m_pForgeMarkers = 0x220; // ObjectProperty
		constexpr auto m_pCatapultMarkers = 0x228; // ObjectProperty
		constexpr auto m_pAllianceMarkers = 0x230; // ObjectProperty
		constexpr auto m_pWaypoints = 0x238; // ObjectProperty
		constexpr auto m_pNamedAreas = 0x240; // ObjectProperty
		constexpr auto m_pLocalMarker = 0x248; // ObjectProperty
		constexpr auto m_pMapInteractable = 0x250; // ObjectProperty
		constexpr auto m_pPlaceWaypointAction = 0x258; // ObjectProperty
		constexpr auto m_pRemoveWaypointAction = 0x260; // ObjectProperty
	}

	namespace n_ATgAudioOcclusionActor {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_NavigationHandleClass = 0x288; // UNavigationHandle*
		constexpr auto m_NavigationHandle = 0x290; // ObjectProperty
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x298; // FVector
		constexpr auto m_fCurrentMaxPathLength = 0x2a4; // float
	}

	namespace n_ATgGame_Royale {
		constexpr auto m_nConvergeRoundNum = 0x798; // int32_t
		constexpr auto m_eFogState = 0x79c; // char
		constexpr auto m_eGameState = 0x79d; // char
		constexpr auto m_eDisconnectPlayerMode = 0x79e; // EPlayerDisconnectMode
		constexpr auto m_fDeltaTime = 0x7a0; // float
		constexpr auto m_fFogStateTimer = 0x7a4; // float
		constexpr auto m_fRemainingGameTime = 0x7a8; // float
		constexpr auto m_bFogStateTimerEnabled = 0x7ac; // char : 1
		constexpr auto m_bFogRoamingEnabled = 0x7ac; // char : 1
		constexpr auto m_bFogPreConvergedEnabled = 0x7ac; // char : 1
		constexpr auto m_bLTEActive = 0x7ac; // char : 1
		constexpr auto m_bMatchCompositionLoaded = 0x7ac; // char : 1
		constexpr auto m_bAllVendorsLoaded = 0x7ac; // char : 1
		constexpr auto m_bLootGoblinEnabled = 0x7ac; // char : 1
		constexpr auto m_bUseFog = 0x7ac; // char : 1
		constexpr auto m_bUseShiftingFog = 0x7ac; // char : 0
		constexpr auto m_bUseStats = 0x7ac; // char : 0
		constexpr auto m_bUseRespawns = 0x7ac; // char : 0
		constexpr auto m_bInitialCircle = 0x7ac; // char : 0
		constexpr auto m_fGameStateTimer = 0x7b0; // float
		constexpr auto m_pFogDevice = 0x7b4; // ObjectProperty
		constexpr auto m_pChickenLifeDrainDevice = 0x7bc; // ObjectProperty
		constexpr auto m_pIslandStartsA = 0x7c4; // TArray<FRoyaleStart>
		constexpr auto m_pIslandStartsB = 0x7d4; // TArray<FRoyaleStart>
		constexpr auto m_pIslandStartsC = 0x7e4; // TArray<FRoyaleStart>
		constexpr auto m_pIslandStartsD = 0x7f4; // TArray<FRoyaleStart>
		constexpr auto m_pPlayerStarts = 0x804; // TArray<FRoyaleStart>
		constexpr auto m_pTeamStarts = 0x814; // TArray<FRoyaleStart>
		constexpr auto m_pDropPoints = 0x824; // TArray<ObjectProperty>
		constexpr auto m_pTournamentObjectives = 0x834; // TMap<None, None>
		constexpr auto m_pAvailableObjectiveSizes = 0x87c; // TArray<EObjectiveSize>
		constexpr auto m_pCloseChests = 0x88c; // TArray<FCloseChestData>
		constexpr auto m_AllGroupDeployableFactories = 0x89c; // TArray<FTgDeployableFactoryGroupList>
		constexpr auto m_AllNamedAreaVolumes = 0x8ac; // TArray<ObjectProperty>
		constexpr auto m_AllInvalidObjectiveVolumes = 0x8bc; // TArray<ObjectProperty>
		constexpr auto m_pConvergeActor = 0x8cc; // ObjectProperty
		constexpr auto m_pForges = 0x8d4; // TArray<ObjectProperty>
		constexpr auto m_AllConvergeObjectives = 0x8e4; // TArray<ObjectProperty>
		constexpr auto m_InitialObjectives = 0x8f4; // TArray<ObjectProperty>
		constexpr auto m_LegendaryChestDropObjectives = 0x904; // TArray<ObjectProperty>
		constexpr auto m_EpicenterLocations = 0x914; // TArray<FVector>
		constexpr auto m_fGameWaitTime = 0x924; // float
		constexpr auto m_fGameReadyTime = 0x928; // float
		constexpr auto m_fGameDeployTime = 0x92c; // float
		constexpr auto m_fGameCompleteTime = 0x930; // float
		constexpr auto m_fZeppelinMinTime = 0x934; // float
		constexpr auto m_fZeppelinMaxTime = 0x938; // float
		constexpr auto m_fInitialFogSpawnTime = 0x93c; // float
		constexpr auto m_fInitialConvergeRadius = 0x940; // float
		constexpr auto m_RoyaleRounds = 0x944; // TArray<FRoyaleRoundInfo>
		constexpr auto m_LootSpawnData = 0x954; // TArray<FTgDeployableFactoryGroupSpawnData>
		constexpr auto m_fMaxConvergeDistFromOrigin = 0x964; // float
		constexpr auto m_fAutoDeployWaitTime = 0x968; // float
		constexpr auto m_nChickenReward = 0x96c; // int32_t
		constexpr auto m_fDismountDamage = 0x970; // float
		constexpr auto m_fChestCloseTime = 0x974; // float
		constexpr auto m_fAllowedGameTime = 0x978; // float
		constexpr auto m_fInitArmorPercent = 0x97c; // float
		constexpr auto m_fForgeActivePercent = 0x980; // float
		constexpr auto m_fDisconnectedPlayerKillTime = 0x984; // float
		constexpr auto m_fLootZeppelinRunningTime = 0x988; // float
		constexpr auto m_fShiftingFogSpeed = 0x98c; // float
		constexpr auto m_fReviveTotalTime = 0x990; // float
		constexpr auto m_nPlayerLives = 0x994; // int32_t
		constexpr auto m_fSpawnLootGoblinRunningTime = 0x998; // int32_t
		constexpr auto m_nLootGoblinBotId = 0x99c; // int32_t
		constexpr auto m_nLootGoblinTaskForce = 0x9a0; // int32_t
		constexpr auto m_nLootGoblinSpawnTime = 0x9a4; // int32_t
		constexpr auto m_pSpawnedLootGoblins = 0x9a8; // TArray<ObjectProperty>
		constexpr auto m_fPlayerStartManaPercent = 0x9b8; // float
		constexpr auto m_nFogChanceToEndOnForges = 0x9bc; // int32_t
	}

	namespace n_UUIComponent_ItemDisplay {
		constexpr auto m_pRarityText = 0x120; // ObjectProperty
		constexpr auto m_pTitle = 0x128; // ObjectProperty
		constexpr auto m_pChest = 0x130; // ObjectProperty
		constexpr auto m_pIcon = 0x138; // ObjectProperty
		constexpr auto m_pRarityFrame = 0x140; // ObjectProperty
		constexpr auto m_pCard = 0x148; // ObjectProperty
		constexpr auto m_pItem = 0x150; // ObjectProperty
		constexpr auto m_pChestQuantity = 0x158; // ObjectProperty
	}

	namespace n_ATgDevice_ShieldFernando {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
	}

	namespace n_UUIDataEsportsEvent {
		constexpr auto dwEventId = 0x60; // Fdword
		constexpr auto dwMaxPicks = 0x64; // Fdword
		constexpr auto dwTypeId = 0x68; // Fdword
		constexpr auto sName = 0x6c; // FString
		constexpr auto bActive = 0x7c; // char : 1
		constexpr auto m_EventTeamArray = 0x80; // TArray<ObjectProperty>
		constexpr auto m_EventTeamsById = 0x90; // TMap<None, None>
		constexpr auto m_EventTeams = 0xd8; // TMap<None, None>
		constexpr auto m_PickedTeams = 0x120; // TArray<ObjectProperty>
		constexpr auto m_EventMatchupArray = 0x130; // TArray<ObjectProperty>
		constexpr auto m_EventMatchups = 0x140; // TMap<None, None>
		constexpr auto m_WeekData = 0x188; // TArray<ObjectProperty>
	}

	namespace n_ATgDeviceVolume_Pulse {
		constexpr auto DamageInstigator = 0x2bc; // ObjectProperty
		constexpr auto m_nMapObjectId = 0x2c4; // int32_t
		constexpr auto s_nDeviceId = 0x2c8; // int32_t
		constexpr auto m_FireMode = 0x2cc; // ObjectProperty
		constexpr auto s_nTeamNumber = 0x2d4; // int32_t
		constexpr auto s_nTaskForce = 0x2d8; // char
	}

	namespace n_USVehicleWheel {
		constexpr auto Steer = 0x70; // float
		constexpr auto MotorTorque = 0x74; // float
		constexpr auto BrakeTorque = 0x78; // float
		constexpr auto ChassisTorque = 0x7c; // float
		constexpr auto bPoweredWheel = 0x80; // char : 1
		constexpr auto bHoverWheel = 0x80; // char : 1
		constexpr auto bCollidesVehicles = 0x80; // char : 1
		constexpr auto bCollidesPawns = 0x80; // char : 1
		constexpr auto bIsSquealing = 0x80; // char : 1
		constexpr auto bWheelOnGround = 0x80; // char : 1
		constexpr auto SteerFactor = 0x84; // float
		constexpr auto SkelControlName = 0x88; // FName
		constexpr auto WheelControl = 0x90; // ObjectProperty
		constexpr auto BoneName = 0x98; // FName
		constexpr auto BoneOffset = 0xa0; // FVector
		constexpr auto WheelRadius = 0xac; // float
		constexpr auto SuspensionTravel = 0xb0; // float
		constexpr auto SuspensionSpeed = 0xb4; // float
		constexpr auto WheelParticleSystem = 0xb8; // ObjectProperty
		constexpr auto Side = 0xc0; // EWheelSide
		constexpr auto LongSlipFactor = 0xc4; // float
		constexpr auto LatSlipFactor = 0xc8; // float
		constexpr auto HandbrakeLongSlipFactor = 0xcc; // float
		constexpr auto HandbrakeLatSlipFactor = 0xd0; // float
		constexpr auto ParkedSlipFactor = 0xd4; // float
		constexpr auto WheelPosition = 0xd8; // FVector
		constexpr auto SpinVel = 0xe4; // float
		constexpr auto LongSlipRatio = 0xe8; // float
		constexpr auto LatSlipAngle = 0xec; // float
		constexpr auto ContactNormal = 0xf0; // FVector
		constexpr auto LongDirection = 0xfc; // FVector
		constexpr auto LatDirection = 0x108; // FVector
		constexpr auto ContactForce = 0x114; // float
		constexpr auto LongImpulse = 0x118; // float
		constexpr auto LatImpulse = 0x11c; // float
		constexpr auto DesiredSuspensionPosition = 0x120; // float
		constexpr auto SuspensionPosition = 0x124; // float
		constexpr auto CurrentRotation = 0x128; // float
		constexpr auto WheelShape = 0x12c; // FPointer
		constexpr auto WheelMaterialIndex = 0x134; // int32_t
		constexpr auto WheelPSCClass = 0x138; // UParticleSystemComponent*
		constexpr auto WheelParticleComp = 0x140; // ComponentProperty
		constexpr auto SlipParticleParamName = 0x148; // FName
	}

	namespace n_AAmbientSound {
		constexpr auto bAutoPlay = 0x288; // char : 1
		constexpr auto bIsPlaying = 0x288; // char : 1
		constexpr auto AudioComponent = 0x28c; // ComponentProperty
	}

	namespace n_AGameCrowdInfoVolume {
		constexpr auto PotentialSpawnPoints = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x60; // ObjectProperty
		constexpr auto GroupActor = 0x68; // ObjectProperty
		constexpr auto TrackInst = 0x70; // TArray<ObjectProperty>
		constexpr auto CachedCamOverridePostProcess = 0x80; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_BlastShotHitEffect {
		constexpr auto m_PreviouslyHitActors = 0xc8; // TArray<ObjectProperty>
		constexpr auto m_nTargetType = 0xd8; // int32_t
	}

	namespace n_UTgArmorPiece {
		constexpr auto ParamNameDesaturateCubeMap = 0x60; // FString
		constexpr auto ParamNameDissolveColor = 0x70; // FString
		constexpr auto ParamNameFresnelAlpha = 0x80; // FString
		constexpr auto ParamNameFresnelColor = 0x90; // FString
		constexpr auto ParamNameReflectionColor = 0xa0; // FString
		constexpr auto ArmorPiece = 0xb0; // EArmorPiece
		constexpr auto m_CommonDesaturateCubeMap = 0xb4; // float
		constexpr auto m_RareDesaturateCubeMap = 0xb8; // float
		constexpr auto m_EpicDesaturateCubeMap = 0xbc; // float
		constexpr auto m_LegendaryDesaturateCubeMap = 0xc0; // float
		constexpr auto m_CommonDissolveColor = 0xc4; // FLinearColor
		constexpr auto m_RareDissolveColor = 0xd4; // FLinearColor
		constexpr auto m_EpicDissolveColor = 0xe4; // FLinearColor
		constexpr auto m_LegendaryDissolveColor = 0xf4; // FLinearColor
		constexpr auto m_CommonFresnelAlpha = 0x104; // float
		constexpr auto m_RareFresnelAlpha = 0x108; // float
		constexpr auto m_EpicFresnelAlpha = 0x10c; // float
		constexpr auto m_LegendaryFresnelAlpha = 0x110; // float
		constexpr auto m_CommonFresnelColor = 0x114; // FLinearColor
		constexpr auto m_RareFresnelColor = 0x124; // FLinearColor
		constexpr auto m_EpicFresnelColor = 0x134; // FLinearColor
		constexpr auto m_LegendaryFresnelColor = 0x144; // FLinearColor
		constexpr auto m_CommonReflectionColor = 0x154; // FLinearColor
		constexpr auto m_RareReflectionColor = 0x164; // FLinearColor
		constexpr auto m_EpicReflectionColor = 0x174; // FLinearColor
		constexpr auto m_LegendaryReflectionColor = 0x184; // FLinearColor
	}

	namespace n_UTgDataChunk {
		constexpr auto m_DataHandler = 0x118; // ObjectProperty
		constexpr auto m_ParentChunk = 0x120; // ObjectProperty
		constexpr auto m_DataList = 0x128; // TArray<FDataField>
		constexpr auto m_ChildChunks = 0x138; // TArray<ObjectProperty>
		constexpr auto m_bIsDirty = 0x148; // char : 1
		constexpr auto m_bIsSubscribed = 0x148; // char : 1
		constexpr auto m_bClearOnMapChange = 0x148; // char : 1
		constexpr auto __usc_Subscribe_Delegate__Delegate = 0x14c; // DelegateProperty
		constexpr auto __usc_Unsubscribe_Delegate__Delegate = 0x15c; // DelegateProperty
	}

	namespace n_UTgSeqAct_AIFreeze {
		constexpr auto TaskForceNumber = 0x108; // int32_t
	}

	namespace n_UTgSeqEvent_DeviceUsed {
		constexpr auto m_nDeviceId = 0x128; // int32_t
	}

	namespace n_UUIData_RealMoneyItem {
		constexpr auto m_dwPrice = 0x60; // Fdword
		constexpr auto m_bIsOwned = 0x64; // char : 1
		constexpr auto m_sProductName = 0x68; // FString
		constexpr auto m_sProductSKU = 0x78; // FString
		constexpr auto m_sConsoleDescription = 0x88; // FString
		constexpr auto m_sProductImage = 0x98; // FString
		constexpr auto m_sIncludeTaxMessage = 0xa8; // FString
		constexpr auto m_sDisplayListPrice = 0xb8; // TArray<FString>
		constexpr auto m_sDisplayPrice = 0xc8; // TArray<FString>
		constexpr auto m_sCurrencyCode = 0xd8; // TArray<FString>
		constexpr auto m_sSignedOffer = 0xe8; // TArray<FString>
		constexpr auto m_fListPrice = 0xf8; // TArray<float>
		constexpr auto m_fPrice = 0x108; // TArray<float>
		constexpr auto m_pLootTableItem = 0x118; // ObjectProperty
	}

	namespace n_AMobileMenuGame {
		constexpr auto InitialSceneToDisplayClass = 0x4cc; // UMobileMenuScene*
	}

	namespace n_UUIGAPeachStartup {
		constexpr auto m_fHirezAnimTimer = 0x2a0; // float
		constexpr auto m_fPeachAnimTimer = 0x2a4; // float
		constexpr auto m_fSkipDelay = 0x2a8; // float
		constexpr auto m_fSkipDelayTimer = 0x2ac; // float
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x98; // ObjectProperty
		constexpr auto CompressTolerance = 0xa0; // float
	}

	namespace n_ULocalPlayer {
		constexpr auto VfTable_FObserverInterface = 0x8c; // FPointer
		constexpr auto ControllerId = 0x94; // int32_t
		constexpr auto ViewportClient = 0x98; // ObjectProperty
		constexpr auto Origin = 0xa0; // FVector2D
		constexpr auto Size = 0xa8; // FVector2D
		constexpr auto PlayerPostProcess = 0xb0; // ObjectProperty
		constexpr auto PlayerPostProcessChains = 0xb8; // TArray<ObjectProperty>
		constexpr auto bForceDefaultPostProcessChain = 0xc8; // char : 1
		constexpr auto bWantToResetToMapDefaultPP = 0xc8; // char : 1
		constexpr auto bSentSplitJoin = 0xc8; // char : 1
		constexpr auto bPendingServerAuth = 0xc8; // char : 1
		constexpr auto ViewState = 0xcc; // FPointer
		constexpr auto ViewState2 = 0xd4; // FPointer
		constexpr auto ActorVisibilityHistory = 0xdc; // FSynchronizedActorVisibilityHistory
		constexpr auto LastViewLocation = 0xec; // FVector
		constexpr auto CurrentPPInfo = 0xf8; // FCurrentPostProcessVolumeInfo
		constexpr auto LevelPPInfo = 0x288; // FCurrentPostProcessVolumeInfo
		constexpr auto ActivePPOverrides = 0x418; // TArray<FPostProcessSettingsOverride>
		constexpr auto AspectRatioAxisConstraint = 0x428; // EAspectRatioAxisConstraint
		constexpr auto LastMap = 0x42c; // FString
		constexpr auto TagContext = 0x43c; // ObjectProperty
		constexpr auto CachedAuthInt = 0x444; // TScriptInterface<Class>
		constexpr auto ServerAuthTimestamp = 0x454; // float
		constexpr auto ServerAuthTimeout = 0x458; // int32_t
		constexpr auto ServerAuthRetryCount = 0x45c; // int32_t
		constexpr auto MaxServerAuthRetryCount = 0x460; // int32_t
		constexpr auto ServerAuthUID = 0x464; // FUniqueNetId
		constexpr auto ListenerAkComponent = 0x46c; // ObjectProperty
	}

	namespace n_UTgAnimNodeStanceTransitioner {
		constexpr auto m_DefaultStance = 0x144; // int32_t
		constexpr auto m_CurrentStance = 0x148; // int32_t
		constexpr auto m_bIsPlayingTransition = 0x14c; // char : 1
		constexpr auto m_BlendTransitionDuration = 0x150; // float
		constexpr auto m_StanceNodeInfos = 0x154; // TArray<FCachedTgAnimNodeStanceInfo>
		constexpr auto m_TransitionNodeInfos = 0x164; // TArray<FCachedTgAnimNodeStanceTransitionInfo>
	}

	namespace n_UPBRuleNodeSize {
		constexpr auto SizeAxis = 0x70; // EProcBuildingAxis
		constexpr auto DecisionSize = 0x74; // float
		constexpr auto bUseTopLevelScopeSize = 0x78; // char : 1
	}

	namespace n_APortalVolume {
		constexpr auto Portals = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_ShopCrowns {
		constexpr auto m_dwVendorRequestId = 0x120; // Fdword
		constexpr auto m_bRealMoneyDataReady = 0x124; // char : 1
		constexpr auto m_mcLoadingTF = 0x128; // ObjectProperty
		constexpr auto m_pPurchaseOptions = 0x130; // ObjectProperty
		constexpr auto m_grInput = 0x138; // ObjectProperty
		constexpr auto m_akCrownsTier1 = 0x140; // ObjectProperty
		constexpr auto m_akCrownsTier2 = 0x148; // ObjectProperty
		constexpr auto m_akCrownsTier3 = 0x150; // ObjectProperty
		constexpr auto m_akCrownsTier4 = 0x158; // ObjectProperty
		constexpr auto m_akCrownsTier5 = 0x160; // ObjectProperty
	}

	namespace n_UParticleModuleSizeScaleOverDensity {
		constexpr auto SizeScaleOverDensity = 0x68; // FRawDistributionVector
	}

	namespace n_UUIDataStore_OnlineGameSettings {
		constexpr auto GameSettingsCfgList = 0x98; // TArray<FGameSettingsCfg>
		constexpr auto SettingsProviderClass = 0xa8; // UUIDataProvider_Settings*
		constexpr auto SelectedIndex = 0xb0; // int32_t
	}

	namespace n_UActorFactorySkeletalMesh {
		constexpr auto SkeletalMesh = 0x9c; // ObjectProperty
		constexpr auto AnimSet = 0xa4; // ObjectProperty
		constexpr auto AnimSequenceName = 0xac; // FName
	}

	namespace n_UUILogin {
		constexpr auto m_nLoginAttempts = 0x244; // int32_t
		constexpr auto m_nScroll = 0x248; // int32_t
		constexpr auto m_eState = 0x24c; // char
		constexpr auto m_bLoading = 0x250; // char : 1
		constexpr auto m_bHaveInput = 0x250; // char : 1
		constexpr auto m_bAgeConfirm = 0x250; // char : 1
		constexpr auto m_bBypassButtonOne = 0x250; // char : 1
		constexpr auto m_bBypassButtonTwo = 0x250; // char : 1
		constexpr auto m_fDiscoveryTime = 0x254; // float
		constexpr auto m_fDiscoveryTimer = 0x258; // float
		constexpr auto m_fAnimationTimer = 0x25c; // float
		constexpr auto m_fFailTimer = 0x260; // float
		constexpr auto m_fFailDuration = 0x264; // float
		constexpr auto m_sEULAText = 0x268; // TArray<FString>
		constexpr auto m_mcFrame = 0x278; // ObjectProperty
		constexpr auto m_mcVersion = 0x280; // ObjectProperty
		constexpr auto m_mcEULA = 0x288; // ObjectProperty
		constexpr auto m_mcEULABuffer = 0x290; // ObjectProperty
		constexpr auto m_mcEULAScroll = 0x298; // ObjectProperty
		constexpr auto m_mcEULAText = 0x2a0; // ObjectProperty [0x15]
		constexpr auto m_mcEULAButton = 0x348; // ObjectProperty [0x2]
		constexpr auto m_mcEULAPrompt = 0x358; // ObjectProperty [0x2]
		constexpr auto m_mcQueue = 0x368; // ObjectProperty
		constexpr auto m_mcQueueDesc = 0x370; // ObjectProperty
		constexpr auto m_mcQueueName = 0x378; // ObjectProperty
		constexpr auto m_mcQueueButton = 0x380; // ObjectProperty
		constexpr auto m_mcLoading = 0x388; // ObjectProperty
		constexpr auto m_mcLoadingTF = 0x390; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x398; // ObjectProperty
		constexpr auto m_mcLoadingAnimA = 0x3a0; // ObjectProperty
		constexpr auto m_mcLoadingAnimB = 0x3a8; // ObjectProperty
		constexpr auto m_mcCreatePlayer = 0x3b0; // ObjectProperty
		constexpr auto m_mcCreatePlayerError = 0x3b8; // ObjectProperty
		constexpr auto m_mcCreatePlayerInput = 0x3c0; // ObjectProperty
		constexpr auto m_mcCreatePlayerButton = 0x3c8; // ObjectProperty [0x2]
		constexpr auto m_mcManualLogin = 0x3d8; // ObjectProperty
		constexpr auto m_mcManualLoginError = 0x3e0; // ObjectProperty
		constexpr auto m_mcManualLoginButton = 0x3e8; // ObjectProperty
		constexpr auto m_mcManualLoginInput = 0x3f0; // ObjectProperty [0x2]
		constexpr auto m_mcManualLoginTitle = 0x400; // ObjectProperty [0x2]
		constexpr auto m_mcConsoleLogin = 0x410; // ObjectProperty
		constexpr auto m_mcConsoleLoginPrompt = 0x418; // ObjectProperty
		constexpr auto m_mcConsoleLoginChangeUser = 0x420; // ObjectProperty
		constexpr auto m_mcLinkFactor = 0x428; // ObjectProperty
		constexpr auto m_mcLinkFactorError = 0x430; // ObjectProperty
		constexpr auto m_mcLinkFactorInput = 0x438; // ObjectProperty
		constexpr auto m_mcLinkFactorButton = 0x440; // ObjectProperty [0x2]
		constexpr auto m_mcLinkAccount = 0x450; // ObjectProperty
		constexpr auto m_mcLinkAccountDesc = 0x458; // ObjectProperty
		constexpr auto m_mcLinkAccountName = 0x460; // ObjectProperty
		constexpr auto m_mcLinkAccountButton = 0x468; // ObjectProperty [0x3]
		constexpr auto m_mcLinkWarning = 0x480; // ObjectProperty
		constexpr auto m_mcLinkWarningDesc = 0x488; // ObjectProperty
		constexpr auto m_mcLinkWarningName = 0x490; // ObjectProperty
		constexpr auto m_mcLinkWarningButton = 0x498; // ObjectProperty [0x2]
		constexpr auto m_mcLinkWarningPrompt = 0x4a8; // ObjectProperty [0x2]
		constexpr auto m_mcHirezCreate = 0x4b8; // ObjectProperty
		constexpr auto m_mcHirezCreateAge = 0x4c0; // ObjectProperty
		constexpr auto m_mcHirezCreateCheck = 0x4c8; // ObjectProperty
		constexpr auto m_mcHirezCreateError = 0x4d0; // ObjectProperty
		constexpr auto m_mcHirezCreateInput = 0x4d8; // ObjectProperty [0x4]
		constexpr auto m_mcHirezCreateTitle = 0x4f8; // ObjectProperty [0x4]
		constexpr auto m_mcHirezCreateKeyboard = 0x518; // ObjectProperty [0x4]
		constexpr auto m_mcHirezCreateButton = 0x538; // ObjectProperty
		constexpr auto m_mcHirezLogin = 0x540; // ObjectProperty
		constexpr auto m_mcHirezLoginError = 0x548; // ObjectProperty
		constexpr auto m_mcHirezLoginInput = 0x550; // ObjectProperty [0x2]
		constexpr auto m_mcHirezLoginTitle = 0x560; // ObjectProperty [0x2]
		constexpr auto m_mcHirezLoginKeyboard = 0x570; // ObjectProperty [0x2]
		constexpr auto m_mcHirezLoginButton = 0x580; // ObjectProperty
		constexpr auto m_pInputEULA = 0x588; // ObjectProperty
		constexpr auto m_pInputLink = 0x590; // ObjectProperty
		constexpr auto m_pInputLogin = 0x598; // ObjectProperty
		constexpr auto m_pInputCreate = 0x5a0; // ObjectProperty
		constexpr auto m_pInputFactor = 0x5a8; // ObjectProperty
		constexpr auto m_pInputWarning = 0x5b0; // ObjectProperty
		constexpr auto m_pActionChangeUser = 0x5b8; // ObjectProperty
	}

	namespace n_ATgDevice_GrumpyBomb {
		constexpr auto m_fPostTargetingLockInDuration = 0xaec; // float
	}

	namespace n_UTgAIBehaviorCondition_ReturnAlways {
		constexpr auto AlwaysReturn = 0x98; // EBehaviorStatus
	}

	namespace n_UInterpTrackInstHeadTracking {
		constexpr auto Action = 0x60; // EHeadTrackingAction
		constexpr auto CurrentActorMap = 0x64; // TMap<None, None>
		constexpr auto Mesh = 0xac; // ComponentProperty
		constexpr auto TrackControls = 0xb4; // TArray<ObjectProperty>
		constexpr auto LastUpdatePosition = 0xc4; // float
	}

	namespace n_UUIComponent_Currency {
		constexpr auto eCurrencyCode = 0x120; // Fdword
		constexpr auto ePurchaseType = 0x124; // Fdword
		constexpr auto bShowIfOwnedOrRented = 0x128; // char : 1
		constexpr auto bStrikeIfOwnedOrRented = 0x128; // char : 1
		constexpr auto bDisplayIfZero = 0x128; // char : 1
		constexpr auto bShowVIPDiscount = 0x128; // char : 1
		constexpr auto eDisplayType = 0x12c; // UICCurr_DisplayType
		constexpr auto eAlignment = 0x12d; // UIALIGNINGTYPE
	}

	namespace n_UUIShopRedeem {
		constexpr auto m_bCanRedeem = 0x244; // char : 1
		constexpr auto m_fWaitTimeout = 0x248; // float
		constexpr auto m_mcName = 0x24c; // ObjectProperty
		constexpr auto m_mcDesc = 0x254; // ObjectProperty
		constexpr auto m_mcWait = 0x25c; // ObjectProperty
		constexpr auto m_mcError = 0x264; // ObjectProperty
		constexpr auto m_mcInput = 0x26c; // ObjectProperty
		constexpr auto m_mcBlocker = 0x274; // ObjectProperty
		constexpr auto m_mcSuccess = 0x27c; // ObjectProperty
		constexpr auto m_mcButton = 0x284; // ObjectProperty [0x2]
		constexpr auto m_pRedeemGroup = 0x294; // ObjectProperty
		constexpr auto m_pInputHandleSubmitRedeem = 0x29c; // ObjectProperty
	}

	namespace n_UTgSeqAct_ChangeScale {
		constexpr auto TargetScale = 0x108; // float
		constexpr auto TargetScale3D = 0x10c; // FVector
		constexpr auto TransitionTime = 0x118; // float
	}

	namespace n_UMaterialExpressionCustomTexture {
		constexpr auto Texture = 0xb0; // ObjectProperty
		constexpr auto TextureObject = 0xb8; // FExpressionInput
	}

	namespace n_UUIBattlePass {
		constexpr auto m_nXP = 0x244; // int32_t
		constexpr auto m_nTab = 0x248; // int32_t
		constexpr auto m_nLevel = 0x24c; // int32_t
		constexpr auto m_nOffset = 0x250; // int32_t
		constexpr auto m_nPreOffset = 0x254; // int32_t
		constexpr auto m_nHoverItem = 0x258; // int32_t
		constexpr auto m_nHoverType = 0x25c; // int32_t
		constexpr auto m_nHoverLevel = 0x260; // int32_t
		constexpr auto m_nSelectedLevel = 0x264; // int32_t
		constexpr auto m_nCrowns = 0x268; // int32_t
		constexpr auto m_bHovering = 0x26c; // char : 1
		constexpr auto m_bRotating = 0x26c; // char : 1
		constexpr auto m_fPreviousPosX = 0x270; // float
		constexpr auto m_nItemsA = 0x274; // int32_t [0x32]
		constexpr auto m_nItemsB = 0x33c; // int32_t [0x32]
		constexpr auto m_pItemsGroupL = 0x404; // ObjectProperty
		constexpr auto m_pItemsGroupR = 0x40c; // ObjectProperty
		constexpr auto m_fPurchaseFlash = 0x414; // float
		constexpr auto m_mcHeader = 0x418; // ObjectProperty
		constexpr auto m_mcHeaderTab = 0x420; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabShadow = 0x430; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabSelect = 0x440; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTabHighlight = 0x450; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderCrowns = 0x460; // ObjectProperty
		constexpr auto m_mcHeaderCrownsText = 0x468; // ObjectProperty
		constexpr auto m_mcCrownsButton = 0x470; // ObjectProperty
		constexpr auto m_mcRewardsTab = 0x478; // ObjectProperty
		constexpr auto m_mcQuests = 0x480; // ObjectProperty
		constexpr auto m_mcRotator = 0x488; // ObjectProperty
		constexpr auto m_mcProgress = 0x490; // ObjectProperty
		constexpr auto m_mcProgressXP = 0x498; // ObjectProperty
		constexpr auto m_mcProgressBar = 0x4a0; // ObjectProperty
		constexpr auto m_mcProgressIcon = 0x4a8; // ObjectProperty
		constexpr auto m_mcProgressName = 0x4b0; // ObjectProperty
		constexpr auto m_mcProgressTime = 0x4b8; // ObjectProperty
		constexpr auto m_mcProgressBoost = 0x4c0; // ObjectProperty
		constexpr auto m_mcProgressLevel = 0x4c8; // ObjectProperty
		constexpr auto m_mcProgressBarTip = 0x4d0; // ObjectProperty
		constexpr auto m_mcProgressBarFill = 0x4d8; // ObjectProperty
		constexpr auto m_mcProgressIconLevelA = 0x4e0; // ObjectProperty
		constexpr auto m_mcProgressIconLevelB = 0x4e8; // ObjectProperty
		constexpr auto m_mcProgressIconLevelC = 0x4f0; // ObjectProperty
		constexpr auto m_mcDetails = 0x4f8; // ObjectProperty
		constexpr auto m_mcDetailDesc = 0x500; // ObjectProperty
		constexpr auto m_mcDetailName = 0x508; // ObjectProperty
		constexpr auto m_mcDetailType = 0x510; // ObjectProperty
		constexpr auto m_mcDetailFrame = 0x518; // ObjectProperty
		constexpr auto m_mcPurchase = 0x520; // ObjectProperty
		constexpr auto m_mcPurchaseTF = 0x528; // ObjectProperty
		constexpr auto m_mcPurchaseFlash = 0x530; // ObjectProperty
		constexpr auto m_mcPurchaseFrame = 0x538; // ObjectProperty
		constexpr auto m_mcPurchaseButton = 0x540; // ObjectProperty
		constexpr auto m_mcPurchaseButtonTF = 0x548; // ObjectProperty
		constexpr auto m_mcPurchaseButtonKey = 0x550; // ObjectProperty
		constexpr auto m_mcLevelUp = 0x558; // ObjectProperty
		constexpr auto m_mcLevelUpTF = 0x560; // ObjectProperty
		constexpr auto m_mcLevelUpFlash = 0x568; // ObjectProperty
		constexpr auto m_mcLevelUpFrame = 0x570; // ObjectProperty
		constexpr auto m_mcLevelUpButton = 0x578; // ObjectProperty
		constexpr auto m_mcLevelUpButtonTF = 0x580; // ObjectProperty
		constexpr auto m_mcLevelUpButtonKey = 0x588; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x590; // ObjectProperty
		constexpr auto m_mcRewards = 0x598; // ObjectProperty
		constexpr auto m_mcRewardTrack = 0x5a0; // ObjectProperty
		constexpr auto m_mcRewardPage = 0x5a8; // ObjectProperty [0x2]
		constexpr auto m_mcRewardArrow = 0x5b8; // ObjectProperty [0x2]
		constexpr auto m_mcRewardPrompt = 0x5c8; // ObjectProperty [0x2]
		constexpr auto m_mcRewardLevel = 0x5d8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelFrame = 0x628; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemA = 0x678; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemB = 0x6c8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemAIcon = 0x718; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBIcon = 0x768; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemAFrame = 0x7b8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBFrame = 0x808; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemAActive = 0x858; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBActive = 0x8a8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemARarity = 0x8f8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBRarity = 0x948; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemATexture = 0x998; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBTexture = 0x9e8; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemAIconFrame = 0xa38; // ObjectProperty [0xa]
		constexpr auto m_mcRewardLevelItemBIconFrame = 0xa88; // ObjectProperty [0xa]
	}

	namespace n_ADebugCameraHUD {
		constexpr auto bDrawDebugText = 0x5a0; // char : 1
	}

	namespace n_UUIDataItem {
		constexpr auto m_qwInventoryId = 0x60; // FQWord
		constexpr auto m_nId = 0x68; // int32_t
		constexpr auto m_nIcon = 0x6c; // int32_t
		constexpr auto m_nCooldown = 0x70; // int32_t
		constexpr auto m_sName = 0x74; // FString
		constexpr auto m_sDesc = 0x84; // FString
		constexpr auto m_sIcon = 0x94; // FString
		constexpr auto m_nmIcon = 0xa4; // FName
		constexpr auto m_nmIconLocked = 0xac; // FName
		constexpr auto m_nmCardIcon = 0xb4; // FName
		constexpr auto nIndex = 0xbc; // int32_t
		constexpr auto m_SubItems = 0xc0; // TArray<ObjectProperty>
		constexpr auto m_StoreLTIs = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_Thunderstruck {
		constexpr auto m_UniqueTargets = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_bCachedIsArcing = 0xe0; // char : 1
	}

	namespace n_UInterpTrackInstNotify {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_URB_Handle {
		constexpr auto GrabbedComponent = 0x88; // ComponentProperty
		constexpr auto GrabbedBoneName = 0x90; // FName
		constexpr auto SceneIndex = 0x98; // int32_t
		constexpr auto bInHardware = 0x9c; // char : 1
		constexpr auto bRotationConstrained = 0x9c; // char : 1
		constexpr auto bInterpolating = 0x9c; // char : 1
		constexpr auto HandleData = 0xa0; // FPointer
		constexpr auto KinActorData = 0xa8; // FPointer
		constexpr auto LinearDamping = 0xb0; // float
		constexpr auto LinearStiffness = 0xb4; // float
		constexpr auto LinearStiffnessScale3D = 0xb8; // FVector
		constexpr auto LinearDampingScale3D = 0xc4; // FVector
		constexpr auto AngularDamping = 0xd0; // float
		constexpr auto AngularStiffness = 0xd4; // float
		constexpr auto Destination = 0xd8; // FVector
		constexpr auto StepSize = 0xe4; // FVector
		constexpr auto Location = 0xf0; // FVector
	}

	namespace n_UUIGameMoviePlayer {
		constexpr auto VfTable_ITgCallbackInterface = 0x2a0; // FPointer
		constexpr auto m_sDevJsonURL = 0x2a8; // FString
		constexpr auto m_sPTSJsonURL = 0x2b8; // FString
		constexpr auto m_sLiveJsonURL = 0x2c8; // FString
		constexpr auto m_nResizeTicks = 0x2d8; // int32_t
		constexpr auto m_nChosenQueue = 0x2dc; // int32_t
		constexpr auto m_nPreviousRank = 0x2e0; // int32_t
		constexpr auto m_bVisible = 0x2e4; // char : 1
		constexpr auto m_bGamepad = 0x2e4; // char : 1
		constexpr auto m_bTimedQueue = 0x2e4; // char : 1
		constexpr auto m_bHasNoPlayer = 0x2e4; // char : 1
		constexpr auto m_bSkipTutorial = 0x2e4; // char : 1
		constexpr auto m_bInLoginQueue = 0x2e4; // char : 1
		constexpr auto m_bDirectionalNav = 0x2e4; // char : 1
		constexpr auto m_bReceivedRatings = 0x2e4; // char : 1
		constexpr auto m_bSummaryPurchase = 0x2e4; // char : 0
		constexpr auto m_bPlayAnnouncerSample = 0x2e4; // char : 0
		constexpr auto m_fQueueTimer = 0x2e8; // float
		constexpr auto m_fCameraFader = 0x2ec; // float
		constexpr auto m_fLoginQueueTimer = 0x2f0; // float
		constexpr auto m_fTransitionTimer = 0x2f4; // float
		constexpr auto m_fTransitionFader = 0x2f8; // float
		constexpr auto m_fVideoCompletedTimer = 0x2fc; // float
		constexpr auto m_sPass = 0x300; // FString
		constexpr auto m_sUserName = 0x310; // FString
		constexpr auto m_mcMapFrame = 0x320; // ObjectProperty
		constexpr auto m_mcMapFrameLarge = 0x328; // ObjectProperty
		constexpr auto m_mcKeyboardFocus = 0x330; // ObjectProperty
		constexpr auto m_KeyboardComponent = 0x338; // ObjectProperty
		constexpr auto m_Chat = 0x340; // ObjectProperty
		constexpr auto m_UIDataManager = 0x348; // ObjectProperty
		constexpr auto m_ConfigManager = 0x350; // FPointer
		constexpr auto m_LandingPanelManager = 0x358; // ObjectProperty
		constexpr auto m_PatchNotesJsonManager = 0x360; // ObjectProperty
		constexpr auto m_SeasonTicketManager = 0x368; // ObjectProperty
		constexpr auto m_WebBrowser = 0x370; // ObjectProperty
		constexpr auto m_Scenes = 0x378; // TMap<None, None>
		constexpr auto m_OnlineProfiles = 0x3c0; // TMap<None, None>
		constexpr auto m_sPendingOnlineScene = 0x408; // FString
		constexpr auto m_sDelayErrorTitle = 0x418; // FString
		constexpr auto m_sDelayErrorDesc = 0x428; // FString
		constexpr auto m_RenderTarget = 0x438; // ObjectProperty
		constexpr auto m_BrowserTexture = 0x440; // ObjectProperty [0x4]
		constexpr auto m_Team1Name = 0x460; // FString
		constexpr auto m_Team2Name = 0x470; // FString
		constexpr auto m_akError = 0x480; // ObjectProperty
		constexpr auto m_akJoinQueue = 0x488; // ObjectProperty
		constexpr auto m_AnnouncerManifestGroup = 0x490; // ObjectProperty
		constexpr auto m_nAnnouncerItemId = 0x498; // int32_t
		constexpr auto m_akEquippedAnnouncerSound = 0x49c; // ObjectProperty
		constexpr auto m_VoicePackManifestGroup = 0x4a4; // ObjectProperty
		constexpr auto m_nVoicePackItemId = 0x4ac; // int32_t
		constexpr auto m_pQuitPromptData = 0x4b0; // ObjectProperty
		constexpr auto m_CallbackContainer = 0x4b8; // ObjectProperty
		constexpr auto m_Rankings = 0x4c0; // TArray<FPropertyPair>
		constexpr auto m_Experience = 0x4d0; // TArray<FPropertyPair>
	}

	namespace n_UNxForceFieldTornadoComponent {
		constexpr auto RadialStrength = 0x2bc; // float
		constexpr auto RotationalStrength = 0x2c0; // float
		constexpr auto LiftStrength = 0x2c4; // float
		constexpr auto ForceRadius = 0x2c8; // float
		constexpr auto ForceTopRadius = 0x2cc; // float
		constexpr auto LiftFalloffHeight = 0x2d0; // float
		constexpr auto EscapeVelocity = 0x2d4; // float
		constexpr auto ForceHeight = 0x2d8; // float
		constexpr auto HeightOffset = 0x2dc; // float
		constexpr auto BSpecialRadialForceMode = 0x2e0; // char : 1
		constexpr auto SelfRotationStrength = 0x2e4; // float
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_ATriggerStreamingLevel {
		constexpr auto Levels = 0x290; // TArray<FLevelStreamingData>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Drogoz {
		constexpr auto m_fLastThrustTime = 0xd0; // float
	}

	namespace n_UOnlineGameInterfaceImpl {
		constexpr auto OwningSubsystem = 0x60; // ObjectProperty
		constexpr auto GameSettings = 0x68; // ObjectProperty
		constexpr auto GameSearch = 0x70; // ObjectProperty
		constexpr auto CreateOnlineGameCompleteDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto UpdateOnlineGameCompleteDelegates = 0x88; // TArray<DelegateProperty>
		constexpr auto DestroyOnlineGameCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto JoinOnlineGameCompleteDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto MigrateOnlineGameCompleteDelegates = 0xb8; // TArray<DelegateProperty>
		constexpr auto JoinMigratedOnlineGameCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto RecalculateSkillRatingCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto StartOnlineGameCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto EndOnlineGameCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto FindOnlineGamesCompleteDelegates = 0x108; // TArray<DelegateProperty>
		constexpr auto CancelFindOnlineGamesCompleteDelegates = 0x118; // TArray<DelegateProperty>
		constexpr auto LanBeaconState = 0x128; // ELanBeaconState
		constexpr auto LanNonce = 0x129; // char [0x8]
		constexpr auto LanAnnouncePort = 0x134; // int32_t
		constexpr auto LanGameUniqueId = 0x138; // int32_t
		constexpr auto LanPacketPlatformMask = 0x13c; // int32_t
		constexpr auto LanQueryTimeLeft = 0x140; // float
		constexpr auto LanQueryTimeout = 0x144; // float
		constexpr auto LanBeacon = 0x148; // FPointer
		constexpr auto SessionInfo = 0x150; // FPointer
		constexpr auto __OnFindOnlineGamesComplete__Delegate = 0x158; // DelegateProperty
		constexpr auto __OnCreateOnlineGameComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnUpdateOnlineGameComplete__Delegate = 0x178; // DelegateProperty
		constexpr auto __OnDestroyOnlineGameComplete__Delegate = 0x188; // DelegateProperty
		constexpr auto __OnCancelFindOnlineGamesComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnJoinOnlineGameComplete__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __OnCreateOnlineGameWithPartyComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnMatchmakeOnlineGameWithPartyComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnAddSessionMemberComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnMultiplayerSessionChange__Delegate = 0x1e8; // DelegateProperty
		constexpr auto __OnUpdateSessionPropertiesComplete__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __OnGameSessionReady__Delegate = 0x208; // DelegateProperty
		constexpr auto __OnAcceptPendingGameSessionComplete__Delegate = 0x218; // DelegateProperty
		constexpr auto __OnGamePlayersChanged__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnMatchStatusChanged__Delegate = 0x238; // DelegateProperty
		constexpr auto __OnQuerySessionsForUserComplete__Delegate = 0x248; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x258; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x268; // DelegateProperty
		constexpr auto __OnRetrievedGameSettingsForIP__Delegate = 0x278; // DelegateProperty
		constexpr auto __OnStartOnlineGameComplete__Delegate = 0x288; // DelegateProperty
		constexpr auto __OnEndOnlineGameComplete__Delegate = 0x298; // DelegateProperty
		constexpr auto __OnArbitrationRegistrationComplete__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __OnGameInviteAccepted__Delegate = 0x2b8; // DelegateProperty
		constexpr auto __OnRecalculateSkillRatingComplete__Delegate = 0x2c8; // DelegateProperty
		constexpr auto __OnMigrateOnlineGameComplete__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __OnJoinMigratedOnlineGameComplete__Delegate = 0x2e8; // DelegateProperty
		constexpr auto __OnQosStatusChanged__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __OnGetNumberOfCurrentPlayersComplete__Delegate = 0x308; // DelegateProperty
		constexpr auto __OnGetRoomIdFromTitleService__Delegate = 0x318; // DelegateProperty
		constexpr auto __OnGetSessionMemberInfoComplete__Delegate = 0x328; // DelegateProperty
		constexpr auto __OnGetUserConnectionInfoComplete__Delegate = 0x338; // DelegateProperty
	}

	namespace n_UTgCameraModule_ThirdPerson {
		constexpr auto vBasePivotLocation = 0x68; // FVector
		constexpr auto vBaseCameraOffset = 0x74; // FVector
		constexpr auto vDownCameraOffset = 0x80; // FVector
		constexpr auto vDevADSCameraOffset = 0x8c; // FVector
		constexpr auto bOverrideDevADSCameraOffset = 0x98; // char : 1
		constexpr auto bForce3PView = 0x98; // char : 1
		constexpr auto vForcedCameraOffset = 0x9c; // FVector
		constexpr auto vCurrentCameraOffset = 0xa8; // FVector
		constexpr auto vPreviousCameraOffset = 0xb4; // FVector
		constexpr auto fCameraOffsetLerpDurationToForced = 0xc0; // float
		constexpr auto fCameraOffsetLerpDurationToBase = 0xc4; // float
		constexpr auto fCameraOffsetLerpTimer = 0xc8; // float
		constexpr auto fZoomFactorInterp = 0xcc; // float
		constexpr auto fZoomFactor = 0xd0; // float
		constexpr auto fZoomStep = 0xd4; // float
		constexpr auto fZoomMax = 0xd8; // float
		constexpr auto fMountZoomMax = 0xdc; // float
		constexpr auto fZoomMin = 0xe0; // float
		constexpr auto fZoom3pPercentFromTo = 0xe4; // FVector2D
		constexpr auto fZoomDuration = 0xec; // float
		constexpr auto fZoomDurationOverride = 0xf0; // float
		constexpr auto fZoomUsedTime = 0xf4; // float
		constexpr auto ePreviousPerspectiveType = 0xf8; // CameraPerspectiveType
		constexpr auto ePerspectiveType = 0xf9; // CameraPerspectiveType
		constexpr auto vSkydiveCameraOffset = 0xfc; // FVector
		constexpr auto fSkydiveCameraAlpha = 0x108; // float
		constexpr auto fSkydiveCameraBlendSpeed = 0x10c; // float
		constexpr auto vCatapultCameraOffset = 0x110; // FVector
		constexpr auto fCatapultCameraAlpha = 0x11c; // float
		constexpr auto fCatapultCameraBlendSpeed = 0x120; // float
		constexpr auto vCatapultLocation = 0x124; // FVector
		constexpr auto vCrouchCameraOffset = 0x130; // FVector
		constexpr auto fCrouchCameraAlpha = 0x13c; // float
		constexpr auto fCrouchCameraBlendSpeed = 0x140; // float
		constexpr auto vChickenCameraOffset = 0x144; // FVector
		constexpr auto fChickenCameraAlpha = 0x150; // float
		constexpr auto fChickenCameraBlendSpeed = 0x154; // float
		constexpr auto vMountCameraOffset = 0x158; // FVector
		constexpr auto fMountCameraAlpha = 0x164; // float
		constexpr auto fMountCameraBlendSpeed = 0x168; // float
		constexpr auto fWallCollisionRecoverSpeed = 0x16c; // float
		constexpr auto f_WallCollisionAlpha = 0x170; // float
		constexpr auto vServerCorrectionDelta = 0x174; // FVector
		constexpr auto vAvgServerCorrectionDelta = 0x180; // FVector
		constexpr auto vLastDesiredLocation = 0x18c; // FVector
		constexpr auto CorrectionSmoothing = 0x198; // FServerCorrectionSmoothingParams
		constexpr auto m_fCollisionHeightInterpSpeed = 0x1b8; // float
		constexpr auto m_fCollisionHeightZ = 0x1bc; // float
		constexpr auto TeamRoyaleZeppelinViewOffset = 0x1c0; // FVector
	}

	namespace n_UTgGameplayCurvesSet_AimAcceleration {
		constexpr auto AimAccelerationCurves = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_PartyLobbyPlayerMenu {
		constexpr auto m_mcFrame = 0x120; // ObjectProperty
		constexpr auto m_pButtonList = 0x128; // ObjectProperty
		constexpr auto m_pBlocker = 0x130; // ObjectProperty
	}

	namespace n_UUIComponent_LevelProgress {
		constexpr auto m_mcLevel = 0x120; // ObjectProperty
		constexpr auto m_mcNextLevelXP = 0x128; // ObjectProperty
		constexpr auto m_mcTimePlayed = 0x130; // ObjectProperty
		constexpr auto m_mcWins = 0x138; // ObjectProperty
		constexpr auto m_mcTotalXP = 0x140; // ObjectProperty
		constexpr auto m_mcProgress = 0x148; // ObjectProperty
	}

	namespace n_UWebApplication {
		constexpr auto WorldInfo = 0x60; // ObjectProperty
		constexpr auto WebServer = 0x68; // ObjectProperty
		constexpr auto Path = 0x70; // FString
	}

	namespace n_ATgDeploy_LootCrate {
		constexpr auto m_nAssemblyId = 0x448; // int32_t
		constexpr auto m_fLockTime = 0x44c; // float
		constexpr auto m_LootInfo = 0x450; // TArray<FLootCrateInfo>
		constexpr auto m_OverrideLootInfo = 0x460; // TArray<FLootCrateInfo>
		constexpr auto s_fCloseTimer = 0x470; // float
		constexpr auto m_SecondaryCylinderHeight = 0x474; // float
		constexpr auto m_SecondaryCylinderRadius = 0x478; // float
		constexpr auto m_TouchCollisionProxy = 0x47c; // ObjectProperty
		constexpr auto m_CollisionProxyClass = 0x484; // ATgCollisionProxy_Cylinder*
		constexpr auto c_LootPickupResponseCounter = 0x48c; // int32_t
		constexpr auto c_bInitializing = 0x490; // char : 1
		constexpr auto m_fLootSpawnAngleDegrees = 0x494; // float
		constexpr auto m_fLootSpawnMinDist = 0x498; // float
		constexpr auto m_fLootSpawnMaxDist = 0x49c; // float
		constexpr auto m_fOpenAnimBlendTime = 0x4a0; // float
		constexpr auto BotsViewedBy = 0x4a4; // TArray<ObjectProperty>
	}

	namespace n_USpriteComponent {
		constexpr auto Sprite = 0x24c; // ObjectProperty
		constexpr auto bIsScreenSizeScaled = 0x254; // char : 1
		constexpr auto ScreenSize = 0x258; // float
		constexpr auto U = 0x25c; // float
		constexpr auto UL = 0x260; // float
		constexpr auto V = 0x264; // float
		constexpr auto VL = 0x268; // float
	}

	namespace n_UTgInventoryObject_Listen_FirstShotDuringOrAfterStealth {
		constexpr auto m_bWasStealthed = 0xc8; // char : 1
		constexpr auto m_fLastStealthTime = 0xcc; // float
	}

	namespace n_UTgInventoryObject_Listen_FireInsteadOfDeath {
		constexpr auto m_fImmuneTimer = 0xc8; // float
		constexpr auto m_bPendingActivation = 0xcc; // char : 1
	}

	namespace n_ATgDeploy_Gourd {
		constexpr auto r_bHasRipenedGourd = 0x47c; // char : 1
	}

	namespace n_ATgSkeletalMeshActor_Loader {
		constexpr auto VfTable_ITgSkinnableInterface = 0x32c; // FPointer
		constexpr auto m_PendingMeshInfo = 0x334; // ObjectProperty
		constexpr auto m_CurrentMeshInfo = 0x33c; // ObjectProperty
		constexpr auto c_AssetManifestGroup = 0x344; // ObjectProperty
		constexpr auto m_PendingBot = 0x34c; // FPointer
		constexpr auto m_PendingSkin = 0x354; // FPointer
		constexpr auto m_PendingHead = 0x35c; // FPointer
		constexpr auto m_PendingDevice = 0x364; // FPointer
		constexpr auto m_PendingDeviceSkin = 0x36c; // FPointer
		constexpr auto m_PendingDeployable = 0x374; // FPointer
		constexpr auto m_PendingMarker = 0x37c; // FPointer
		constexpr auto m_PendingPose = 0x384; // LobbyAnimPose
		constexpr auto m_CurrentPose = 0x385; // LobbyAnimPose
		constexpr auto m_HighlightType = 0x386; // EModelHighlightType
		constexpr auto m_PendingMVPDevice = 0x388; // FPointer
		constexpr auto m_PendingContrailSkin = 0x390; // FPointer
		constexpr auto m_CurrentBot = 0x398; // FPointer
		constexpr auto m_CurrentSkin = 0x3a0; // FPointer
		constexpr auto m_CurrentHead = 0x3a8; // FPointer
		constexpr auto m_CurrentDevice = 0x3b0; // FPointer
		constexpr auto m_CurrentDeviceSkin = 0x3b8; // FPointer
		constexpr auto m_CurrentDeployable = 0x3c0; // FPointer
		constexpr auto m_CurrentMarker = 0x3c8; // FPointer
		constexpr auto m_CurrentMVPDevice = 0x3d0; // FPointer
		constexpr auto m_CurrentContrailSkin = 0x3d8; // FPointer
		constexpr auto m_SpawnedMarker = 0x3e0; // FPointer
		constexpr auto m_bWaitingForTextures = 0x3e8; // char : 1
		constexpr auto m_bIsAsyncLoading = 0x3e8; // char : 1
		constexpr auto m_bAllowOverlays = 0x3e8; // char : 1
		constexpr auto m_bUsesPreviewMesh = 0x3e8; // char : 1
		constexpr auto m_bOverrideLightingChannels = 0x3e8; // char : 1
		constexpr auto m_nAsyncLoadDelayTicksDefault = 0x3ec; // int32_t
		constexpr auto m_nAsyncLoadDelayTicks = 0x3f0; // int32_t
		constexpr auto m_PointLight = 0x3f4; // ComponentProperty
		constexpr auto m_ChildMeshes = 0x3fc; // TArray<ComponentProperty>
		constexpr auto m_SkinMeshes = 0x40c; // TArray<ComponentProperty>
		constexpr auto m_HeadMeshes = 0x41c; // TArray<ComponentProperty>
		constexpr auto m_WeaponMeshes = 0x42c; // TArray<ComponentProperty>
		constexpr auto m_AlternateLightEnvironmentTemplate = 0x43c; // ComponentProperty
		constexpr auto m_AlternateLightEnvironments = 0x444; // TArray<ComponentProperty>
		constexpr auto m_OverlayMaterial = 0x454; // ObjectProperty
		constexpr auto m_CustomCharacterComponent = 0x45c; // ComponentProperty
		constexpr auto m_MeshReplacementMICs = 0x464; // TArray<ObjectProperty>
		constexpr auto m_MeterBusses = 0x474; // TArray<FLobbySMAMeterBus>
		constexpr auto m_LightingChannels = 0x484; // FLightingChannelContainer
		constexpr auto m_EmoteBlendNodes = 0x488; // TArray<ObjectProperty>
		constexpr auto m_EmoteSequenceNodes = 0x498; // TArray<ObjectProperty>
		constexpr auto NonHighlightMaterial = 0x4a8; // ObjectProperty
		constexpr auto m_EmoteAnimSet = 0x4b0; // ObjectProperty
		constexpr auto m_MVPAnimSet = 0x4b8; // ObjectProperty
		constexpr auto m_fEmoteLoopDelay = 0x4c0; // float
		constexpr auto __OnMeshUpdated__Delegate = 0x4c4; // DelegateProperty
	}

	namespace n_UMeshComponent {
		constexpr auto Materials = 0x24c; // TArray<ObjectProperty>
		constexpr auto MatResGrpId = 0x25c; // int32_t
		constexpr auto SavedBodyMICs = 0x260; // TArray<ObjectProperty>
		constexpr auto DefaultBodyMICs = 0x270; // TArray<ObjectProperty>
		constexpr auto DyedBodyMICs = 0x280; // TArray<ObjectProperty>
		constexpr auto m_bForceHideComponent = 0x290; // char : 1
	}

	namespace n_ATgDevice_Leap {
		constexpr auto m_bLeapInLookDirection = 0xaec; // char : 1
		constexpr auto m_bDidJustLeap = 0xaec; // char : 1
	}

	namespace n_UPComGameEngine {
		constexpr auto pOutgoingMarshal = 0xaa4; // FPointer
	}

	namespace n_UUIComponent_DualButtonPanel {
		constexpr auto m_pPanelRoot = 0x118; // ObjectProperty
		constexpr auto m_pPanelButton = 0x120; // ObjectProperty
		constexpr auto m_pButton = 0x128; // ObjectProperty
		constexpr auto m_pButtonCurrency = 0x130; // ObjectProperty
	}

	namespace n_UTgSeqAct_RequestMission {
		constexpr auto m_nMapGameId = 0x108; // int32_t
	}

	namespace n_UAnimNotify {
		constexpr auto ShouldDeferIssue = 0x60; // char : 1
		constexpr auto DetailMode = 0x64; // EDetailMode
	}

	namespace n_UIniLocPatcher {
		constexpr auto Files = 0x60; // TArray<FIniLocFileEntry>
		constexpr auto bRequestEmsFileList = 0x70; // char : 1
		constexpr auto MaxCachedFileAge = 0x74; // int32_t
		constexpr auto TitleFileInterface = 0x78; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x88; // TScriptInterface<Class>
		constexpr auto ReadTitleFileCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnAllTitleFilesCompleted__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_USeqAct_GiveInventory {
		constexpr auto InventoryList = 0x108; // TArray<AInventory*>
		constexpr auto bClearExisting = 0x118; // char : 1
		constexpr auto bForceReplace = 0x118; // char : 1
	}

	namespace n_AVehicle {
		constexpr auto Driver = 0x5a8; // ObjectProperty
		constexpr auto bDriving = 0x5b0; // char : 1
		constexpr auto bDriverIsVisible = 0x5b0; // char : 1
		constexpr auto bAttachDriver = 0x5b0; // char : 1
		constexpr auto bTurnInPlace = 0x5b0; // char : 1
		constexpr auto bSeparateTurretFocus = 0x5b0; // char : 1
		constexpr auto bFollowLookDir = 0x5b0; // char : 1
		constexpr auto bHasHandbrake = 0x5b0; // char : 1
		constexpr auto bScriptedRise = 0x5b0; // char : 1
		constexpr auto bDuckObstacles = 0x5b0; // char : 0
		constexpr auto bAvoidReversing = 0x5b0; // char : 0
		constexpr auto bRetryPathfindingWithDriver = 0x5b0; // char : 0
		constexpr auto bIgnoreStallZ = 0x5b0; // char : 0
		constexpr auto bDoExtraNetRelevancyTraces = 0x5b0; // char : 0
		constexpr auto ExitPositions = 0x5b4; // TArray<FVector>
		constexpr auto ExitRadius = 0x5c4; // float
		constexpr auto ExitOffset = 0x5c8; // FVector
		constexpr auto Steering = 0x5d4; // float
		constexpr auto Throttle = 0x5d8; // float
		constexpr auto Rise = 0x5dc; // float
		constexpr auto TargetLocationAdjustment = 0x5e0; // FVector
		constexpr auto DriverDamageMult = 0x5ec; // float
		constexpr auto MomentumMult = 0x5f0; // float
		constexpr auto CrushedDamageType = 0x5f4; // UDamageType*
		constexpr auto MinCrushSpeed = 0x5fc; // float
		constexpr auto ForceCrushPenetration = 0x600; // float
		constexpr auto StuckCount = 0x604; // char
		constexpr auto ThrottleTime = 0x608; // float
		constexpr auto StuckTime = 0x60c; // float
		constexpr auto OldSteering = 0x610; // float
		constexpr auto OnlySteeringStartTime = 0x614; // float
		constexpr auto OldThrottle = 0x618; // float
		constexpr auto AIMoveCheckTime = 0x61c; // float
		constexpr auto VehicleMovingTime = 0x620; // float
		constexpr auto TurnTime = 0x624; // float
	}

	namespace n_UTgManifestGroup {
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto m_ManifestList = 0x68; // TArray<FPointer>
		constexpr auto m_pObjectReferencers = 0x78; // TArray<ObjectProperty>
		constexpr auto m_OwningObject = 0x88; // ObjectProperty
		constexpr auto m_bIsInCallback = 0x90; // char : 1
		constexpr auto m_bInitialized = 0x90; // char : 1
		constexpr auto m_bResetOnMapLoad = 0x90; // char : 1
		constexpr auto m_AsyncLoadPriority = 0x94; // EAsyncLoadPriority
		constexpr auto __OnAllManifestsLoaded__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UUIScene_UIRadialMenuBase {
		constexpr auto m_CurrentPage = 0x154; // RadialMenuPage
		constexpr auto m_CurrentSlice = 0x155; // RadialMenuDir
		constexpr auto m_nCurrentSubSelectionN = 0x158; // int32_t
		constexpr auto m_nCurrentSubSelectionS = 0x15c; // int32_t
		constexpr auto m_bShowingLargeButtonN = 0x160; // char : 1
		constexpr auto m_bShowingLargeButtonS = 0x160; // char : 1
		constexpr auto m_bAllowPageLooping = 0x160; // char : 1
		constexpr auto m_bCenterMouseOnShow = 0x160; // char : 1
		constexpr auto m_nAxisUpdateCBHandle = 0x164; // int32_t
		constexpr auto m_fSelectionDelayGamepad = 0x168; // float
		constexpr auto m_fSelectionDelayMouse = 0x16c; // float
		constexpr auto m_fDeselectionDelayGamepad = 0x170; // float
		constexpr auto m_fDeselectionDelayMouse = 0x174; // float
		constexpr auto m_fMouseOffsetX = 0x178; // float
		constexpr auto m_fMouseOffsetY = 0x17c; // float
		constexpr auto m_mcWheel = 0x180; // ObjectProperty
		constexpr auto m_pItemE = 0x188; // ObjectProperty
		constexpr auto m_pItemW = 0x190; // ObjectProperty
		constexpr auto m_pItemLargeN = 0x198; // ObjectProperty
		constexpr auto m_pItemLargeS = 0x1a0; // ObjectProperty
		constexpr auto m_pSubSelectN = 0x1a8; // TArray<ObjectProperty>
		constexpr auto m_pSubSelectS = 0x1b8; // TArray<ObjectProperty>
		constexpr auto m_akSliceHover = 0x1c8; // ObjectProperty
		constexpr auto m_akWheelSelect = 0x1d0; // ObjectProperty
		constexpr auto m_ItemClass = 0x1d8; // UUIComponent_ItemRadialMenuBase*
	}

	namespace n_UOnlineStats {
		constexpr auto TotalRowsInView = 0x60; // int32_t
		constexpr auto Rows = 0x64; // TArray<FOnlineStatsRow>
		constexpr auto ColumnData = 0x74; // TArray<FColumnMetaData>
	}

	namespace n_USeqAct_Teleport {
		constexpr auto bUpdateRotation = 0x108; // char : 1
		constexpr auto bCheckOverlap = 0x108; // char : 1
		constexpr auto bResetVelocity = 0x108; // char : 1
		constexpr auto TeleportDistance = 0x10c; // float
		constexpr auto TeleportVolumes = 0x110; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackInstSkelControlStrength {
		constexpr auto bSavedControlledByAnimMetaData = 0x60; // char : 1
	}

	namespace n_UMaterialExpressionDepthBiasBlend {
		constexpr auto bNormalize = 0x120; // char : 1
		constexpr auto BiasScale = 0x124; // float
		constexpr auto Bias = 0x128; // FExpressionInput
	}

	namespace n_UTgAIBehaviorCondition_AmmoCount {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x6c; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x90; // FRawDistributionFloat
	}

	namespace n_UTgAnimTurnInPlace_Player {
		constexpr auto TIP_Transitions = 0x1ac; // TArray<FTIP_Transition>
	}

	namespace n_UParticleModuleUberRainSplashA {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // char : 1
		constexpr auto MultiplyX = 0xe4; // char : 1
		constexpr auto MultiplyY = 0xe4; // char : 1
		constexpr auto MultiplyZ = 0xe4; // char : 1
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto ColorOverLife = 0x10c; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x130; // FRawDistributionFloat
	}

	namespace n_UTgAnimBlendByPhase {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_LastPhase = 0x170; // int32_t
		constexpr auto m_CurrentPhase = 0x174; // int32_t
		constexpr auto m_bEnableTransitionAnims = 0x178; // char : 1
		constexpr auto m_PhaseProfiles = 0x17c; // TArray<Fm_PhaseProfile>
	}

	namespace n_UTgAIBehaviorComposite_Sequence {
		constexpr auto bStopOnRunningChild = 0xb8; // char : 1
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x68; // FRawDistributionVector
		constexpr auto LocationOffset = 0x8c; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xb0; // FRawDistributionVector
		constexpr auto Direction = 0xd4; // FRawDistributionVector
	}

	namespace n_UInstancedFoliageSettings {
		constexpr auto Density = 0x60; // float
		constexpr auto Radius = 0x64; // float
		constexpr auto ScaleMinX = 0x68; // float
		constexpr auto ScaleMinY = 0x6c; // float
		constexpr auto ScaleMinZ = 0x70; // float
		constexpr auto ScaleMaxX = 0x74; // float
		constexpr auto ScaleMaxY = 0x78; // float
		constexpr auto ScaleMaxZ = 0x7c; // float
		constexpr auto LockScaleX = 0x80; // char : 1
		constexpr auto LockScaleY = 0x80; // char : 1
		constexpr auto LockScaleZ = 0x80; // char : 1
		constexpr auto AlignToNormal = 0x80; // char : 1
		constexpr auto RandomYaw = 0x80; // char : 1
		constexpr auto UniformScale = 0x80; // char : 1
		constexpr auto ReapplyDensity = 0x80; // char : 1
		constexpr auto ReapplyRadius = 0x80; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x80; // char : 0
		constexpr auto ReapplyRandomYaw = 0x80; // char : 0
		constexpr auto ReapplyScaleX = 0x80; // char : 0
		constexpr auto ReapplyScaleY = 0x80; // char : 0
		constexpr auto ReapplyScaleZ = 0x80; // char : 0
		constexpr auto ReapplyRandomPitchAngle = 0x80; // char : 0
		constexpr auto ReapplyGroundSlope = 0x80; // char : 0
		constexpr auto ReapplyHeight = 0x80; // char : 0
		constexpr auto ReapplyLandscapeLayer = 0x80; // char : 0
		constexpr auto ReapplyZOffset = 0x80; // char : 0
		constexpr auto CastShadow = 0x80; // char : 0
		constexpr auto bCastDynamicShadow = 0x80; // char : 0
		constexpr auto bCastStaticShadow = 0x80; // char : 0
		constexpr auto bSelfShadowOnly = 0x80; // char : 0
		constexpr auto bNoModSelfShadow = 0x80; // char : 0
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x80; // char : 0
		constexpr auto bCastHiddenShadow = 0x80; // char : 0
		constexpr auto bCastShadowAsTwoSided = 0x80; // char : 0
		constexpr auto bAcceptsLights = 0x80; // char : 0
		constexpr auto bAcceptsDynamicLights = 0x80; // char : 0
		constexpr auto bUseOnePassLightingOnTranslucency = 0x80; // char : 0
		constexpr auto bUsePrecomputedShadows = 0x80; // char : 0
		constexpr auto bStreamInstanceBuffer = 0x80; // char : 0
		constexpr auto bCollideActors = 0x80; // char : 0
		constexpr auto bBlockActors = 0x84; // char : 1
		constexpr auto bBlockNonZeroExtent = 0x84; // char : 1
		constexpr auto bBlockZeroExtent = 0x84; // char : 1
		constexpr auto IsSelected = 0x84; // char : 1
		constexpr auto ShowNothing = 0x84; // char : 1
		constexpr auto ShowPaintSettings = 0x84; // char : 1
		constexpr auto ShowInstanceSettings = 0x84; // char : 1
		constexpr auto AlignMaxAngle = 0x88; // float
		constexpr auto RandomPitchAngle = 0x8c; // float
		constexpr auto GroundSlope = 0x90; // float
		constexpr auto HeightMin = 0x94; // float
		constexpr auto HeightMax = 0x98; // float
		constexpr auto LandscapeLayer = 0x9c; // FName
		constexpr auto ZOffsetMin = 0xa4; // float
		constexpr auto ZOffsetMax = 0xa8; // float
		constexpr auto MaxInstancesPerCluster = 0xac; // int32_t
		constexpr auto MaxClusterRadius = 0xb0; // float
		constexpr auto ReapplyDensityAmount = 0xb4; // float
		constexpr auto StartCullDistance = 0xb8; // int32_t
		constexpr auto EndCullDistance = 0xbc; // int32_t
		constexpr auto CullOption = 0xc0; // FoliageCullOption
		constexpr auto DetailMode = 0xc1; // EDetailMode
		constexpr auto TranslucencySortPriority = 0xc4; // int32_t
		constexpr auto DisplayOrder = 0xc8; // int32_t
	}

	namespace n_AHavokCustomTraversalAnnotation {
		constexpr auto m_Target = 0x280; // ObjectProperty
		constexpr auto TraversalType = 0x288; // EHavokTraversalType
		constexpr auto EdgeCost = 0x28c; // float
		constexpr auto SourceEdgeRotation = 0x290; // FRotator
		constexpr auto SourceEdgeTranslation = 0x29c; // FVector
		constexpr auto fEdgeWidth = 0x2a8; // float
		constexpr auto bForceParallelEdges = 0x2ac; // char : 1
		constexpr auto m_Source = 0x2b0; // ObjectProperty
	}

	namespace n_ATgPawn_Alchemist {
		constexpr auto r_bWeightless = 0x310c; // char : 1
		constexpr auto m_bWeightlessDurationEnded = 0x310c; // char : 1
		constexpr auto m_fWeightlessMaxSpeedModifier = 0x3110; // float
		constexpr auto m_fWeightlessJumpZModifier = 0x3114; // float
	}

	namespace n_UGameSpecialMove {
		constexpr auto PawnOwner = 0x60; // ObjectProperty
		constexpr auto Handle = 0x68; // FName
		constexpr auto LastCanDoSpecialMoveTime = 0x70; // float
		constexpr auto bLastCanDoSpecialMove = 0x74; // char : 1
		constexpr auto bReachPreciseDestination = 0x74; // char : 1
		constexpr auto bReachedPreciseDestination = 0x74; // char : 1
		constexpr auto bReachPreciseRotation = 0x74; // char : 1
		constexpr auto bReachedPreciseRotation = 0x74; // char : 1
		constexpr auto bForcePrecisePosition = 0x74; // char : 1
		constexpr auto PreciseDestination = 0x78; // FVector
		constexpr auto PreciseDestBase = 0x84; // ObjectProperty
		constexpr auto PreciseDestRelOffset = 0x8c; // FVector
		constexpr auto PreciseRotationInterpolationTime = 0x98; // float
		constexpr auto PreciseRotation = 0x9c; // FRotator
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x60; // FLightmassPrimitiveSettings
	}

	namespace n_UActorFactoryFogVolumeConstantDensityInfo {
		constexpr auto SelectedMaterial = 0x9c; // ObjectProperty
		constexpr auto bNothingSelected = 0xa4; // char : 1
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto PosX = 0xb0; // int32_t
		constexpr auto PosY = 0xb4; // int32_t
		constexpr auto SizeX = 0xb8; // int32_t
		constexpr auto SizeY = 0xbc; // int32_t
		constexpr auto Text = 0xc0; // FString
	}

	namespace n_ATgCameraVolume {
		constexpr auto AssociatedCamera = 0x2bc; // ObjectProperty
	}

	namespace n_UTgAnimNodeSequenceByBoneRotation {
		constexpr auto BoneName = 0x1ac; // FName
		constexpr auto BoneAxis = 0x1b4; // EAxis
		constexpr auto AnimList = 0x1b8; // TArray<FAnimByRotation>
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0xa0; // FInterpCurveFloat
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UTgAIBehaviorSensor_SafeToRecall {
		constexpr auto SafeRecallDist = 0x94; // float
	}

	namespace n_ATgDevice_Spray {
		constexpr auto m_bMissedSpray = 0xaec; // char : 1
	}

	namespace n_ATgPawn {
		constexpr auto VfTable_ITgSkinnableInterface = 0x5ac; // FPointer
		constexpr auto VfTable_ITgCombatActor = 0x5b4; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x5bc; // FPointer
		constexpr auto VfTable_ITgInteractiveAudio = 0x5c4; // FPointer
		constexpr auto r_vPhysTweenTarget = 0x5cc; // FVector
		constexpr auto r_eTweenState = 0x5d8; // ETweenState
		constexpr auto m_eLocalTweenState = 0x5d9; // ETweenState
		constexpr auto s_BitPackedHitReaction = 0x5da; // char
		constexpr auto r_eGrabState = 0x5db; // EGrabState
		constexpr auto m_eLocalGrabState = 0x5dc; // EGrabState
		constexpr auto r_eChargeState = 0x5dd; // EChargeState
		constexpr auto r_eDeathReason = 0x5de; // TG_DEATH_REASON
		constexpr auto c_PreviousMeshVisibilityState = 0x5df; // TgMeshVisibilityState
		constexpr auto r_ReplicatedDeviceState = 0x5e0; // TG_REP_DEVICE_STATE [0x14]
		constexpr auto r_eDesiredInHand = 0x5f4; // TG_EQUIP_POINT
		constexpr auto m_eCachedDesiredInHand = 0x5f5; // TG_EQUIP_POINT
		constexpr auto m_eEquippedInHand = 0x5f6; // TG_EQUIP_POINT
		constexpr auto r_nPackedFireMultiRanges = 0x5f7; // char [0x14]
		constexpr auto r_eDesiredAIDevice = 0x60b; // TG_EQUIP_POINT
		constexpr auto r_eIsStealthed = 0x60c; // STEALTH_TYPE
		constexpr auto c_eIsStealthed = 0x60d; // STEALTH_TYPE
		constexpr auto r_nInCombatNonce = 0x60e; // char
		constexpr auto c_nInCombatNonceAck = 0x60f; // char
		constexpr auto m_InitHUDOverlayIcon = 0x610; // DeployableOverlayIcon
		constexpr auto m_InitHUDOverlayState = 0x611; // DeployableOverlayState
		constexpr auto m_ePosture = 0x612; // TG_POSTURE
		constexpr auto r_eCurrentStunType = 0x613; // EStunType
		constexpr auto c_nLocalRespawnBeaconHUDState = 0x614; // char
		constexpr auto m_OverlayCurrentTypeBody = 0x615; // OverlayMICType
		constexpr auto m_OverlayCurrentTypeWeapon = 0x616; // OverlayMICType
		constexpr auto m_eCharacterCustom1OverlayDepthGroup = 0x617; // ESceneDepthPriorityGroup
		constexpr auto m_eForcedSilhouetteVisibility = 0x618; // EForcedSilhouetteVisibility
		constexpr auto m_HitReactionType = 0x619; // EHitReactionType
		constexpr auto r_eMountState = 0x61a; // EMountState
		constexpr auto c_UITargetingType = 0x61b; // EUITargetingType
		constexpr auto m_eMetaGameState = 0x61c; // EMetaGameState
		constexpr auto m_eBotBehaviorState = 0x61d; // EBotBehaviorState
		constexpr auto m_nIsInIntroState = 0x61e; // char
		constexpr auto c_PrevPolymorph = 0x61f; // EPolymorphType
		constexpr auto c_LocalPolymorph = 0x620; // EPolymorphType
		constexpr auto r_CurrentPolymorph = 0x621; // EPolymorphType
		constexpr auto c_ThreatLevel = 0x622; // EThreatLevel
		constexpr auto c_LastThreatLevel = 0x623; // EThreatLevel
		constexpr auto m_RangeStateFromLocalViewer = 0x624; // LocalViewerRangeState
		constexpr auto c_eCurrentAudioEmotePlaying = 0x625; // EEmote
		constexpr auto m_CurrentVaultType = 0x626; // TgVaultTypes
		constexpr auto m_eWindowVaultState = 0x627; // TgWindowVaultStates
		constexpr auto m_eSkydivingState = 0x628; // SkydivingState
		constexpr auto m_ePrevSkydivingState = 0x629; // SkydivingState
		constexpr auto m_eSprintState = 0x62a; // SprintState
		constexpr auto m_fPhysTweenDist = 0x62c; // float
		constexpr auto r_fPhysTweenDuration = 0x630; // float
		constexpr auto m_nPhysTweenPostureId = 0x634; // int32_t
		constexpr auto r_bPhysTweenInterrupted = 0x638; // char : 1
		constexpr auto s_bIsInGrass = 0x638; // char : 1
		constexpr auto r_bIsInItemShop = 0x638; // char : 1
		constexpr auto r_bHasLeftItemShop = 0x638; // char : 1
		constexpr auto r_bGrabInterrupted = 0x638; // char : 1
		constexpr auto m_PreGrabCollideActors = 0x638; // char : 1
		constexpr auto m_PreGrabBlockActors = 0x638; // char : 1
		constexpr auto r_bUsePhysFlyingForCharge = 0x638; // char : 1
		constexpr auto r_bChargeIgnoreHumanoidBlocking = 0x638; // char : 0
		constexpr auto m_bWantsCharge = 0x638; // char : 0
		constexpr auto m_bCanJumpWhileCharging = 0x638; // char : 0
		constexpr auto m_bCanChargeInAir = 0x638; // char : 0
		constexpr auto m_bEndChargeInFalling = 0x638; // char : 0
		constexpr auto m_bIgnoreFriendlyBlocking = 0x638; // char : 0
		constexpr auto m_bIgnoreEnemyBlocking = 0x638; // char : 0
		constexpr auto m_bHasDestroyedMesh = 0x638; // char : 0
		constexpr auto m_bDefaultPropsInitialized = 0x638; // char : 0
		constexpr auto m_bAffectedByVortices = 0x638; // char : 0
		constexpr auto s_LoadMeshServerSide = 0x638; // char : 0
		constexpr auto c_bDeviceHiddenDueToFullBodyAnim = 0x638; // char : 0
		constexpr auto c_bMeshHiddenDueToDeath = 0x638; // char : 0
		constexpr auto c_bHideMeshFromCameraPenetration = 0x638; // char : 0
		constexpr auto c_bHideMeshFromKismet = 0x638; // char : 0
		constexpr auto r_bInGlobalOffhandCooldown = 0x638; // char : 0
		constexpr auto bInGlobalOffhandCooldownClient = 0x638; // char : 0
		constexpr auto m_bInFireLock = 0x638; // char : 0
		constexpr auto c_bHasAutoEquippedNonMeleeWeapon = 0x638; // char : 0
		constexpr auto m_bCachedLocalPlayerHasLOS = 0x638; // char : 0
		constexpr auto c_bIsStealthMaterialOn = 0x638; // char : 0
		constexpr auto r_bIsVolumeStealthed = 0x638; // char : 0
		constexpr auto r_bIsVolumeStealthFading = 0x638; // char : 0
		constexpr auto m_bDisableVolumeStealth = 0x638; // char : 0
		constexpr auto r_bDisableVolumeStealth = 0x63c; // char : 1
		constexpr auto m_bCannotBeVolumeStealthed = 0x63c; // char : 1
		constexpr auto m_bPlayingStealth = 0x63c; // char : 1
		constexpr auto m_bPlayingDetected = 0x63c; // char : 1
		constexpr auto c_bHiddenDueToStealth = 0x63c; // char : 1
		constexpr auto c_bHiddenDueToObscuringDeployable = 0x63c; // char : 1
		constexpr auto r_bCanStartStealthInCombat = 0x63c; // char : 1
		constexpr auto m_bIsVisionBlocker = 0x63c; // char : 1
		constexpr auto m_bIsAIVisionBlocker = 0x63c; // char : 0
		constexpr auto m_bApplyDistanceFade = 0x63c; // char : 0
		constexpr auto r_bIsBot = 0x63c; // char : 0
		constexpr auto s_bInvisibleToPets = 0x63c; // char : 0
		constexpr auto s_bCanSeePets = 0x63c; // char : 0
		constexpr auto c_bIsFrametestZombie = 0x63c; // char : 0
		constexpr auto r_bIsAnimInStrafeMode = 0x63c; // char : 0
		constexpr auto m_ReachedTargetSoKillRootMotion = 0x63c; // char : 0
		constexpr auto s_bCanApplyEffects = 0x63c; // char : 0
		constexpr auto m_bInitialized = 0x63c; // char : 0
		constexpr auto m_bUseInterrupted = 0x63c; // char : 0
		constexpr auto c_bIgnoreInterruption = 0x63c; // char : 0
		constexpr auto r_bNoEnergyCost = 0x63c; // char : 0
		constexpr auto m_bCheatUseNoEnergy = 0x63c; // char : 0
		constexpr auto m_bCheatNoRecharge = 0x63c; // char : 0
		constexpr auto m_bIsInvisibleToAI = 0x63c; // char : 0
		constexpr auto r_bInCombatFlag = 0x63c; // char : 0
		constexpr auto s_bIsStill = 0x63c; // char : 0
		constexpr auto m_bHitWallThisTick = 0x63c; // char : 0
		constexpr auto r_bIsAFK = 0x63c; // char : 0
		constexpr auto c_bHandIKEnabledFromAnimSet = 0x63c; // char : 0
		constexpr auto c_bCanDoTurnInPlaceAnim = 0x63c; // char : 0
		constexpr auto c_bIsPlayingTurnInPlaceAnim = 0x63c; // char : 0
		constexpr auto m_bShouldApplyCCImmuneOverlay = 0x63c; // char : 0
		constexpr auto m_bToggleZoom = 0x640; // char : 1
		constexpr auto m_bCanBeKnockedBack = 0x640; // char : 1
		constexpr auto m_bCausesPushblock = 0x640; // char : 1
		constexpr auto m_bPushblockAffectsFriendlies = 0x640; // char : 1
		constexpr auto m_bPushblockAffectsEnemies = 0x640; // char : 1
		constexpr auto m_bIsCrowdControlImmuneKismet = 0x640; // char : 1
		constexpr auto m_bUseSmoothNetReceiveRotation = 0x640; // char : 1
		constexpr auto m_bForceSmoothCorrection = 0x640; // char : 1
		constexpr auto r_bIsRotationLockedForSpectate = 0x640; // char : 0
		constexpr auto m_bAlwaysUseAccurateRotation = 0x640; // char : 0
		constexpr auto r_bHasAccurateRotation = 0x640; // char : 0
		constexpr auto c_bUpdateSkelMeshWhenNotRendered = 0x640; // char : 0
		constexpr auto c_bUpdateSkelMeshWhenNotRenderedServer = 0x640; // char : 0
		constexpr auto r_bSilenced = 0x640; // char : 0
		constexpr auto r_bDisarmed = 0x640; // char : 0
		constexpr auto r_bCrippled = 0x640; // char : 0
		constexpr auto r_bIsInStasis = 0x640; // char : 0
		constexpr auto r_bCanBePulled = 0x640; // char : 0
		constexpr auto s_bHasCrippleEffect = 0x640; // char : 0
		constexpr auto c_bEnemyMatLoaded = 0x640; // char : 0
		constexpr auto r_bIsFlashBang = 0x640; // char : 0
		constexpr auto r_bIsJumping = 0x640; // char : 0
		constexpr auto r_bIsShortJump = 0x640; // char : 0
		constexpr auto m_bIsLanding = 0x640; // char : 0
		constexpr auto m_bAllowHigherWallJumping = 0x640; // char : 0
		constexpr auto m_bIgnorePhysCheckForJump = 0x640; // char : 0
		constexpr auto m_bHasPlayedDeathAnimation = 0x640; // char : 0
		constexpr auto m_bForceDeathAnim = 0x640; // char : 0
		constexpr auto r_bHasRespawnBeacon = 0x640; // char : 0
		constexpr auto m_bDestroyOnOwnerDeathFlag = 0x640; // char : 0
		constexpr auto r_bNeedPlaySpawnFx = 0x640; // char : 0
		constexpr auto c_bSpawnFxPlayed = 0x640; // char : 0
		constexpr auto c_bTargeted = 0x644; // char : 1
		constexpr auto c_bTargetedLightup = 0x644; // char : 1
		constexpr auto c_bApplyDropShadow = 0x644; // char : 1
		constexpr auto m_bShowNameplate = 0x644; // char : 1
		constexpr auto r_bInitialIsEnemy = 0x644; // char : 1
		constexpr auto c_bNeedsAssetLoad = 0x644; // char : 1
		constexpr auto c_bNeedsAssetSwap = 0x644; // char : 1
		constexpr auto c_bNeedsDeviceFormChange = 0x644; // char : 1
		constexpr auto r_bPawnHasLanded = 0x644; // char : 0
		constexpr auto r_bDebugShowAIDebug = 0x644; // char : 0
		constexpr auto m_SwapToDestroyedMeshOnTick = 0x644; // char : 0
		constexpr auto m_bBlockCamera = 0x644; // char : 0
		constexpr auto m_bOverlaysEnabled = 0x644; // char : 0
		constexpr auto m_b1POverlaysEnabled = 0x644; // char : 0
		constexpr auto m_b1POverlaysActive = 0x644; // char : 0
		constexpr auto m_bSilhouettesVisible = 0x644; // char : 0
		constexpr auto m_bUseSilhouettes = 0x644; // char : 0
		constexpr auto m_bSilhouettesVisibleForObserverSpectator = 0x644; // char : 0
		constexpr auto m_bIgnoreTearOffMomentum = 0x644; // char : 0
		constexpr auto m_bAcceptsHitReactions = 0x644; // char : 0
		constexpr auto m_bIsFadingOut = 0x644; // char : 0
		constexpr auto m_bUseDamageTypeForDeathAnim = 0x644; // char : 0
		constexpr auto r_bDemoCanPurchaseItems = 0x644; // char : 0
		constexpr auto s_bHasInteractedWithStore = 0x644; // char : 0
		constexpr auto s_bAlwaysRelevantExceptRoyale = 0x644; // char : 0
		constexpr auto m_bDoSmoothCorrectionThisTick = 0x644; // char : 0
		constexpr auto m_bOnlyTakeHeadshotDamage = 0x644; // char : 0
		constexpr auto r_bIsMounted = 0x644; // char : 0
		constexpr auto m_bIsEnteringMount = 0x644; // char : 0
		constexpr auto m_bCreateMountMeshDeferred = 0x644; // char : 0
		constexpr auto m_bCanAlignMount = 0x644; // char : 0
		constexpr auto m_bInADS = 0x644; // char : 0
		constexpr auto m_bUpdateInhandDeferred = 0x648; // char : 1
		constexpr auto m_bUpdateEyeHeight = 0x648; // char : 1
		constexpr auto m_bJustLanded = 0x648; // char : 1
		constexpr auto m_bLandRecovery = 0x648; // char : 1
		constexpr auto r_bIsSprinting = 0x648; // char : 1
		constexpr auto r_bJustJumped = 0x648; // char : 1
		constexpr auto m_bStunEnergyRegen = 0x648; // char : 1
		constexpr auto c_bHealAkEventPlaying = 0x648; // char : 1
		constexpr auto m_bPainAkEventPlaying = 0x648; // char : 0
		constexpr auto r_bIsDazed = 0x648; // char : 0
		constexpr auto r_bIsMarked = 0x648; // char : 0
		constexpr auto r_bIsBleeding = 0x648; // char : 0
		constexpr auto r_bIsOnFire = 0x648; // char : 0
		constexpr auto r_bIsRooted = 0x648; // char : 0
		constexpr auto r_bIsKnockedBack = 0x648; // char : 0
		constexpr auto r_bIsPoisoned = 0x648; // char : 0
		constexpr auto r_bIsSlowed = 0x648; // char : 0
		constexpr auto r_bIsFrozen = 0x648; // char : 0
		constexpr auto r_bIsCCImmune = 0x648; // char : 0
		constexpr auto r_bIsRevealed = 0x648; // char : 0
		constexpr auto r_bIsWallHacking = 0x648; // char : 0
		constexpr auto r_bIsInSelfKnockBack = 0x648; // char : 0
		constexpr auto m_bUseOutlines = 0x648; // char : 0
		constexpr auto m_bIsLeaping = 0x648; // char : 0
		constexpr auto m_bCanSpawnHealthNuggetsOnDeath = 0x648; // char : 0
		constexpr auto m_bCanAutoMountOnRespawn = 0x648; // char : 0
		constexpr auto c_bShowingDisarm = 0x648; // char : 0
		constexpr auto r_bFirstSpawnWave = 0x648; // char : 0
		constexpr auto m_bWaitForIntroAnimToEnd = 0x648; // char : 0
		constexpr auto m_bIntroAnimFinished = 0x648; // char : 0
		constexpr auto m_bAllowIntroWhiteOut = 0x648; // char : 0
		constexpr auto m_bIntroWhiteOutActive = 0x648; // char : 0
		constexpr auto m_bAirAccuracyPenalty = 0x64c; // char : 1
		constexpr auto c_bThreatInLineOfSightRecently = 0x64c; // char : 1
		constexpr auto m_bCanBeHeadShot = 0x64c; // char : 1
		constexpr auto c_bHide3PWeaponMeshWhileMounted = 0x64c; // char : 1
		constexpr auto m_bShouldBeFirstPersonLastFrame = 0x64c; // char : 1
		constexpr auto m_bFadeOutOnLifeAfterDeathTimerExpired = 0x64c; // char : 1
		constexpr auto m_bUsesRecoil = 0x64c; // char : 1
		constexpr auto m_bUsingSecondaryPhysicsAsset = 0x64c; // char : 1
		constexpr auto m_bWasKilledByEnvironment = 0x64c; // char : 0
		constexpr auto m_bShouldSmoothEyeHeight = 0x64c; // char : 0
		constexpr auto m_bHasAstroBuff = 0x64c; // char : 0
		constexpr auto r_bIsLifted = 0x64c; // char : 0
		constexpr auto m_bCameraOverrideLocation = 0x64c; // char : 0
		constexpr auto m_bShouldMantle = 0x64c; // char : 0
		constexpr auto m_bWindowVaultDeviceLockout = 0x64c; // char : 0
		constexpr auto r_bIsADS = 0x64c; // char : 0
		constexpr auto m_bScopedIn = 0x64c; // char : 0
		constexpr auto c_bSaveModMoveSpeed = 0x64c; // char : 0
		constexpr auto m_bBehindView = 0x64c; // char : 0
		constexpr auto r_bClientUsingForced3pOption = 0x64c; // char : 0
		constexpr auto m_bWantsSkydivingTrail = 0x64c; // char : 0
		constexpr auto m_bSkydivingTrailEnabled = 0x64c; // char : 0
		constexpr auto m_bFogDamageDisabled = 0x64c; // char : 0
		constexpr auto r_bArmorVisible = 0x64c; // char : 0
		constexpr auto m_bUIInputLock = 0x64c; // char : 0
		constexpr auto m_bQuietFootstepStateEnabled = 0x64c; // char : 0
		constexpr auto m_bJustLaunchedFromCatapult = 0x64c; // char : 0
		constexpr auto c_bIsPlayingCatapultPawnFX = 0x64c; // char : 0
		constexpr auto m_bLockSkelControlRotation = 0x64c; // char : 0
		constexpr auto r_nPhysTweenFlags = 0x650; // int32_t
		constexpr auto m_sGameplayPackage = 0x654; // FString
		constexpr auto m_AsInteractiveAudio = 0x664; // TScriptInterface<Class>
		constexpr auto m_PawnDialogue = 0x674; // ObjectProperty
		constexpr auto c_fLastAttackAudioCueTimestamp = 0x67c; // float
		constexpr auto c_fLastAttackFromBehindAudioCueTimestamp = 0x680; // float
		constexpr auto c_fLastAttackFromAboveAudioCueTimestamp = 0x684; // float
		constexpr auto c_fLastAttackFromSniperAudioCueTimestamp = 0x688; // float
		constexpr auto c_fRequestCooldownEmotePause = 0x68c; // float
		constexpr auto r_GrabSource = 0x690; // ObjectProperty
		constexpr auto r_fGrabDuration = 0x698; // float
		constexpr auto r_GrabAttachSocket = 0x69c; // FName
		constexpr auto r_vGrabLocationOffset = 0x6a4; // FVector
		constexpr auto r_rGrabRotationOffset = 0x6b0; // FRotator
		constexpr auto m_vGrabDestRelLocation = 0x6bc; // FVector
		constexpr auto m_rGrabDestRelRotation = 0x6c8; // FRotator
		constexpr auto m_nPhysGrabPostureId = 0x6d4; // int32_t
		constexpr auto s_GrabbedTargets = 0x6d8; // TArray<ObjectProperty>
		constexpr auto r_nCannotBeGrabSource = 0x6e8; // int32_t
		constexpr auto m_TeleportNotifyList = 0x6ec; // TArray<ObjectProperty>
		constexpr auto r_fChargeInitialYaw = 0x6fc; // float
		constexpr auto r_fChargeInitialPitch = 0x700; // float
		constexpr auto r_vChargeInitialLocation = 0x704; // FVector
		constexpr auto r_fChargeSpeed = 0x710; // float
		constexpr auto r_fChargeRange = 0x714; // float
		constexpr auto r_fChargeTurnRate = 0x718; // float
		constexpr auto m_nCoreMeshAsmId = 0x71c; // int32_t
		constexpr auto m_CoreMeshAssembly = 0x720; // FPointer
		constexpr auto m_nBodyMeshAsmId = 0x728; // int32_t
		constexpr auto m_BodyMeshAssembly = 0x72c; // FPointer
		constexpr auto m_DestroyedMeshAssembly = 0x734; // FPointer
		constexpr auto m_n1PHeadMeshId = 0x73c; // int32_t
		constexpr auto r_nPawnId = 0x740; // int32_t
		constexpr auto c_fLastUpdateTime = 0x744; // float
		constexpr auto m_nArchetype = 0x748; // int32_t
		constexpr auto r_EffectManager = 0x74c; // ObjectProperty
		constexpr auto m_Properties = 0x754; // TArray<FTgPropertyInstance>
		constexpr auto r_CurrentPropValues = 0x764; // float [0x9e]
		constexpr auto m_LocalPropValues = 0x9dc; // float [0x9e]
		constexpr auto s_PropValuesRepResolution = 0xc54; // float [0x9e]
		constexpr auto s_DefaultPropValues = 0xecc; // float [0x9e]
		constexpr auto r_fCachedMaxHealth = 0x1144; // float
		constexpr auto s_DebugPropertyMods = 0x1148; // TArray<FDebugPropertyMod>
		constexpr auto m_AkActorUnoccluded = 0x1158; // ObjectProperty
		constexpr auto m_EmoteChances = 0x1160; // FEEmoteCategoryChance
		constexpr auto m_EmoteChancesAbility = 0x118c; // FEEmoteAbilityChance
		constexpr auto c_nEmoteCameraStackId = 0x11a0; // int32_t
		constexpr auto m_fLastEmoteTime = 0x11a4; // float
		constexpr auto m_fEmoteGlobalCooldown = 0x11a8; // float
		constexpr auto m_fLastEmoteCatTimes = 0x11ac; // TArray<float>
		constexpr auto m_fLastPlayerVGSEmoteTimes = 0x11bc; // TArray<float>
		constexpr auto m_fEmoteNonLocalCooldown = 0x11cc; // float
		constexpr auto m_fLastNonLocalEmoteTime = 0x11d0; // float
		constexpr auto c_CustomEmoteData = 0x11d4; // TArray<FECustomEmoteData>
		constexpr auto c_nLastCustomEmoteIndex = 0x11e4; // int32_t
		constexpr auto m_fSprayAccurateTraceLength = 0x11e8; // float
		constexpr auto m_fSprayDecalWidth = 0x11ec; // float
		constexpr auto m_fSprayDecalHeight = 0x11f0; // float
		constexpr auto m_fSprayDecalDepth = 0x11f4; // float
		constexpr auto c_SprayDecal = 0x11f8; // ComponentProperty
		constexpr auto c_CustomSprayData = 0x1200; // TArray<FECustomSprayData>
		constexpr auto c_nLastCustomSprayIndex = 0x1210; // int32_t
		constexpr auto m_fSoftLandVelocityCutoff = 0x1214; // float
		constexpr auto m_fHardLandVelocityCutoff = 0x1218; // float
		constexpr auto s_nSpawnTime = 0x121c; // float
		constexpr auto r_nPhysicalType = 0x1220; // int32_t
		constexpr auto r_fReconnectTime = 0x1224; // float
		constexpr auto m_CurrentVortexList = 0x1228; // TArray<ObjectProperty>
		constexpr auto m_CurrentBlackHoleList = 0x1238; // TArray<ObjectProperty>
		constexpr auto m_DeathDamageType = 0x1248; // UTgDamageType*
		constexpr auto m_DeathHitLocation = 0x1250; // FVector
		constexpr auto m_nDeathFXMaterialHandle = 0x125c; // int32_t
		constexpr auto r_EquipDeviceInfo = 0x1260; // FEquipDeviceInfo [0x14]
		constexpr auto m_EquippedDevices = 0x13f0; // ObjectProperty [0x14]
		constexpr auto m_CarriedAmmo = 0x1490; // int32_t [0x14]
		constexpr auto c_EquipForm = 0x14e0; // ObjectProperty [0x14]
		constexpr auto c_EquipFormState = 0x1580; // FName [0x14]
		constexpr auto c_nmInHandSocket = 0x1620; // FName
		constexpr auto r_v2dInHandEquipInfo = 0x1628; // FVector2D
		constexpr auto c_CurrentTargetingDevice = 0x1630; // ObjectProperty
		constexpr auto c_CurrentStartActionDevice = 0x1638; // ObjectProperty
		constexpr auto c_fShouldStartActionTimeStamp = 0x1640; // float
		constexpr auto m_CurrentInHandDevice = 0x1644; // ObjectProperty
		constexpr auto c_nLockInHandToTargetingDevice = 0x164c; // int32_t
		constexpr auto c_WorldBracketFX = 0x1650; // ObjectProperty
		constexpr auto c_nLastProcessedFlashEventIdx = 0x1658; // int32_t
		constexpr auto r_nFirstValidFlashEventIdx = 0x165c; // int32_t
		constexpr auto r_nFlashQueIndex = 0x1660; // int32_t
		constexpr auto r_nFlashEvent = 0x1664; // int32_t [0x20]
		constexpr auto r_vFlashLocation = 0x16e4; // FVector [0x20]
		constexpr auto r_vFlashRayDir = 0x1864; // FVector [0x20]
		constexpr auto r_vFlashRefireTime = 0x19e4; // float [0x20]
		constexpr auto r_pFlashTarget = 0x1a64; // ObjectProperty [0x20]
		constexpr auto r_pFlashDamageType = 0x1b64; // UDamageType* [0x20]
		constexpr auto r_nFlashFireInfo = 0x1c64; // int32_t [0x20]
		constexpr auto r_fFireMultiMaxRange = 0x1ce4; // float
		constexpr auto r_nFireMultiSeed = 0x1ce8; // int32_t
		constexpr auto r_fFireMultiSpreadAngle = 0x1cec; // float
		constexpr auto s_fTauntAmount = 0x1cf0; // float
		constexpr auto m_fLastPainSound = 0x1cf4; // float
		constexpr auto LightEnvironment = 0x1cf8; // ComponentProperty
		constexpr auto FireLocationOffsets = 0x1d00; // FVector [0x14]
		constexpr auto BotTurnAcceleration = 0x1df0; // float
		constexpr auto BotTurnSpeed = 0x1df4; // float
		constexpr auto m_fMaxAimAssistStacks = 0x1df8; // float
		constexpr auto m_fLOSReevaluationPeriod = 0x1dfc; // float
		constexpr auto m_fLOSEvalTimer = 0x1e00; // float
		constexpr auto r_fStealthFadeRate = 0x1e04; // float
		constexpr auto r_CurrentVisibilityVolumes = 0x1e08; // ObjectProperty [0x2]
		constexpr auto r_ObscuringDeployables = 0x1e18; // ObjectProperty [0xa]
		constexpr auto r_BlindingDeployables = 0x1e68; // ObjectProperty [0xa]
		constexpr auto r_VisibleThroughWallsInstigators = 0x1eb8; // ObjectProperty [0xc]
		constexpr auto r_VisibleThroughStealthInstigators = 0x1f18; // ObjectProperty [0xc]
		constexpr auto m_fVolumeStealthDisableTime = 0x1f78; // float
		constexpr auto c_fVolumeFadeValue = 0x1f7c; // float
		constexpr auto c_fDistanceFadeValue = 0x1f80; // float
		constexpr auto c_fStealthFadeValue = 0x1f84; // float
		constexpr auto c_fObscuringDeployableFadeValue = 0x1f88; // float
		constexpr auto c_fBlindingDeployableFadeValue = 0x1f8c; // float
		constexpr auto c_fCurrentFadeValue = 0x1f90; // float
		constexpr auto c_fDistanceLastCollidingVisionRange = 0x1f94; // float
		constexpr auto c_fLocalStealthFadeRate = 0x1f98; // float
		constexpr auto c_TeleporterEnterFX = 0x1f9c; // ObjectProperty
		constexpr auto c_TeleporterExitFX = 0x1fa4; // ObjectProperty
		constexpr auto c_BlinkEnterFX = 0x1fac; // ObjectProperty
		constexpr auto c_BlinkExitFX = 0x1fb4; // ObjectProperty
		constexpr auto c_DetectedFx = 0x1fbc; // ObjectProperty
		constexpr auto c_PetSuccessfulHitFx = 0x1fc4; // ObjectProperty
		constexpr auto c_fFxScaleSize = 0x1fcc; // float
		constexpr auto m_fLifeAfterDeathSecs = 0x1fd0; // float
		constexpr auto r_aDebugTarget = 0x1fd4; // ObjectProperty
		constexpr auto r_aDebugDestination = 0x1fdc; // ObjectProperty
		constexpr auto r_aDebugNextNav = 0x1fe4; // ObjectProperty
		constexpr auto r_vDebugNextNavMeshPoint = 0x1fec; // FVector
		constexpr auto r_vDebugSpreadoutLocation = 0x1ff8; // FVector
		constexpr auto r_nDebugHearingRange = 0x2004; // int32_t
		constexpr auto r_nDebugSightRange = 0x2008; // int32_t
		constexpr auto r_nDebugFOV = 0x200c; // int32_t
		constexpr auto r_sDebugAction = 0x2010; // FString
		constexpr auto r_sDebugName = 0x2020; // FString
		constexpr auto r_sDebugFactory = 0x2030; // FString
		constexpr auto s_vOneWayMovement = 0x2040; // FVector
		constexpr auto r_vDown = 0x204c; // FVector
		constexpr auto m_fMountFrictionMultiplier = 0x2058; // float
		constexpr auto m_fBackpedalPct = 0x205c; // float
		constexpr auto m_fMountBackpedalPct = 0x2060; // float
		constexpr auto r_TargetActor = 0x2064; // ObjectProperty
		constexpr auto r_LockedTarget = 0x206c; // ObjectProperty
		constexpr auto c_TargetMethod = 0x2074; // int32_t
		constexpr auto s_Pets = 0x2078; // ObjectProperty [0x8]
		constexpr auto m_PetOwner = 0x20b8; // ObjectProperty
		constexpr auto c_ActivePets = 0x20c0; // int32_t
		constexpr auto s_LastAttacker = 0x20c4; // ObjectProperty
		constexpr auto s_LastAttacked = 0x20cc; // ObjectProperty
		constexpr auto s_LastChickened = 0x20d4; // ObjectProperty
		constexpr auto m_CurrentMeleeTarget = 0x20dc; // ObjectProperty
		constexpr auto r_Owner = 0x20e4; // ObjectProperty
		constexpr auto s_nSpawnerDeviceInstId = 0x20ec; // int32_t
		constexpr auto s_nSpawnerDeviceModeId = 0x20f0; // int32_t
		constexpr auto r_DeathInfo = 0x20f4; // FDeathInfo
		constexpr auto r_nResetCharacter = 0x2118; // int32_t
		constexpr auto r_nLiveRespawn = 0x211c; // int32_t
		constexpr auto DyingStateName = 0x2120; // FName
		constexpr auto m_nSpawnLocationId = 0x2128; // int32_t
		constexpr auto m_nSpawnTableId = 0x212c; // int32_t
		constexpr auto m_nSpawnTableDetailId = 0x2130; // int32_t
		constexpr auto m_LastPlayerStart = 0x2134; // ObjectProperty
		constexpr auto m_fStandingHeight = 0x213c; // float
		constexpr auto m_fStandingRadius = 0x2140; // float
		constexpr auto m_fTargetCylinderHeight = 0x2144; // float
		constexpr auto m_fTargetCylinderRadius = 0x2148; // float
		constexpr auto r_nPacingType = 0x214c; // int32_t
		constexpr auto m_nKillShards = 0x2150; // int32_t
		constexpr auto m_CurrentUseActor = 0x2154; // ObjectProperty
		constexpr auto m_fBaseTranslationOffset = 0x215c; // float
		constexpr auto m_fCrouchTranslationOffset = 0x2160; // float
		constexpr auto r_fInCombatTime = 0x2164; // float
		constexpr auto m_fInCombatTime = 0x2168; // float
		constexpr auto m_fBaseCombatTime = 0x216c; // float
		constexpr auto m_fPhaseChangeTime = 0x2170; // float
		constexpr auto m_fPhaseChangedTimeStamp = 0x2174; // float
		constexpr auto m_PhaseChangeRemainingTime = 0x2178; // float
		constexpr auto r_nPhase = 0x217c; // int32_t
		constexpr auto c_PreviousPhase = 0x2180; // int32_t
		constexpr auto m_nInitHUDOverlayDisplayMask = 0x2184; // int32_t
		constexpr auto m_InitHUDOverlayEnemyViewDist = 0x2188; // float
		constexpr auto m_SimpleTransitionerNodes = 0x218c; // TArray<ObjectProperty>
		constexpr auto m_FireBlendNodes = 0x219c; // TArray<ObjectProperty>
		constexpr auto m_CombatWarinessBlendNodes = 0x21ac; // TArray<ObjectProperty>
		constexpr auto m_PostureBlendNodes = 0x21bc; // TArray<ObjectProperty>
		constexpr auto m_AnimNodeEmoteSwitches = 0x21cc; // TArray<ObjectProperty>
		constexpr auto m_EmoteBlendNodes = 0x21dc; // TArray<ObjectProperty>
		constexpr auto m_EmoteSequenceNodes = 0x21ec; // TArray<ObjectProperty>
		constexpr auto m_EmoteTypeNodes = 0x21fc; // TArray<ObjectProperty>
		constexpr auto m_AnimBlendByRealmCharacter = 0x220c; // TArray<ObjectProperty>
		constexpr auto m_AnimNodeBlendByIntroductions = 0x221c; // TArray<ObjectProperty>
		constexpr auto m_DeviceModeBlendNodes = 0x222c; // TArray<ObjectProperty>
		constexpr auto m_SkelControlLocks = 0x223c; // TArray<ObjectProperty>
		constexpr auto m_HitReactionAnimNode = 0x224c; // TArray<ObjectProperty>
		constexpr auto m_AimOffsetAnimNodes = 0x225c; // TArray<ObjectProperty>
		constexpr auto m_SkelControlLockNames = 0x226c; // TArray<FName>
		constexpr auto m_UpperBodyAnimNode = 0x227c; // ObjectProperty
		constexpr auto m_UpperBodyAnimNodeSequence = 0x2284; // ObjectProperty
		constexpr auto m_FullBodyAnimNode = 0x228c; // ObjectProperty
		constexpr auto m_nYawOffset = 0x2294; // int32_t
		constexpr auto m_PostureStack = 0x2298; // FPostureStack
		constexpr auto m_fKnockbackMultiplier = 0x22bc; // float
		constexpr auto m_fRBPushStrengthMultiplier = 0x22c0; // float
		constexpr auto m_fRBPushStrengthRange = 0x22c4; // FVector2D
		constexpr auto m_PreviousNetReceiveRotation = 0x22cc; // FRotator
		constexpr auto m_TargetNetReceiveRotation = 0x22d8; // FRotator
		constexpr auto m_RotationInterpRate = 0x22e4; // float
		constexpr auto m_nNetRotationCount = 0x22e8; // int32_t
		constexpr auto m_nSmoothedRemoteViewPitch = 0x22ec; // int32_t
		constexpr auto m_nPreviousReceivedRemoteViewPitch = 0x22f0; // int32_t
		constexpr auto m_nTargetRemoteViewPitch = 0x22f4; // int32_t
		constexpr auto m_PitchInterpRate = 0x22f8; // float
		constexpr auto m_nNetViewPitchCount = 0x22fc; // int32_t
		constexpr auto m_fSmoothCorrectionRate = 0x2300; // float
		constexpr auto r_nViewYawWhenRotationLocked = 0x2304; // int32_t
		constexpr auto m_UnpackedRemoteViewPitch = 0x2308; // int32_t
		constexpr auto r_nPackedPitchYawForSpectate = 0x230c; // int32_t
		constexpr auto m_pStatsTracker = 0x2310; // FPointer
		constexpr auto m_LastDamager = 0x2318; // ObjectProperty
		constexpr auto m_LastDamagerTimeStamp = 0x2320; // float
		constexpr auto s_Damagers = 0x2324; // TArray<FPawnDamagerStruct>
		constexpr auto m_LastKnockbacker = 0x2334; // ObjectProperty
		constexpr auto m_fJumpLandingTime = 0x233c; // float
		constexpr auto m_fCeilingTraceDistForWallJumping = 0x2340; // float
		constexpr auto m_fHorseJumpHeightIncrease = 0x2344; // float
		constexpr auto r_StunTauntTarget = 0x2348; // ObjectProperty
		constexpr auto m_LocalTouchingRespawnBeacons = 0x2350; // TArray<ObjectProperty>
		constexpr auto c_LocalPC = 0x2360; // ObjectProperty
		constexpr auto c_PlayerDropShadow = 0x2368; // ComponentProperty
		constexpr auto c_PlayerDropShadowTemplate = 0x2370; // ObjectProperty
		constexpr auto c_PlayerDropShadowMIC = 0x2378; // ObjectProperty
		constexpr auto c_fPlayerDropShadowFade = 0x2380; // float
		constexpr auto c_PlayerDropShadowSocketName = 0x2384; // FName
		constexpr auto DefaultControlModuleClass = 0x238c; // UTgControlModule*
		constexpr auto m_fFaceRotationInterpTime = 0x2394; // float
		constexpr auto m_fRemainingFaceRotationInterpTime = 0x2398; // float
		constexpr auto r_nBigTeleportCount = 0x239c; // int32_t
		constexpr auto c_nTickCheckingState = 0x23a0; // int32_t
		constexpr auto c_AssetManifestGroup = 0x23a4; // ObjectProperty
		constexpr auto c_LevelUpFX = 0x23ac; // ObjectProperty
		constexpr auto c_nLevelUpFxId = 0x23b4; // int32_t
		constexpr auto s_nKillCombo = 0x23b8; // int32_t
		constexpr auto s_nKillStreak = 0x23bc; // int32_t
		constexpr auto s_nLastDamageDeviceId = 0x23c0; // int32_t
		constexpr auto r_nProfileId = 0x23c4; // int32_t
		constexpr auto r_nSettingsOverrideId = 0x23c8; // int32_t
		constexpr auto r_nSkinId = 0x23cc; // int32_t
		constexpr auto r_nHeadSkinId = 0x23d0; // int32_t
		constexpr auto r_nWeaponSkinId = 0x23d4; // int32_t
		constexpr auto r_nMountSkinId = 0x23d8; // int32_t
		constexpr auto r_nContrailSkinId = 0x23dc; // int32_t
		constexpr auto r_nWardSkinId = 0x23e0; // int32_t
		constexpr auto r_nCustomSprayIds = 0x23e4; // int32_t [0x5]
		constexpr auto r_nCustomEmoteIds = 0x23f8; // int32_t [0x5]
		constexpr auto s_nInitialPlayerId = 0x240c; // int32_t
		constexpr auto r_nDeathStampId = 0x2410; // int32_t
		constexpr auto r_nMapMarkerId = 0x2414; // int32_t
		constexpr auto m_pAmBot = 0x2418; // FPointer
		constexpr auto m_pAmSkin = 0x2420; // FPointer
		constexpr auto m_pAmHead = 0x2428; // FPointer
		constexpr auto m_pAmWeaponSkin = 0x2430; // FPointer
		constexpr auto m_pAmMountSkin = 0x2438; // FPointer
		constexpr auto m_pAmMarkerSkin = 0x2440; // FPointer
		constexpr auto m_pAmContrailSkin = 0x2448; // FPointer
		constexpr auto m_pAmVoicePack = 0x2450; // FPointer
		constexpr auto m_pAmCustomSprays = 0x2458; // TArray<FPointer>
		constexpr auto m_pAmCustomEmotes = 0x2468; // TArray<FPointer>
		constexpr auto m_pAmAllSkins = 0x2478; // TArray<FPointer>
		constexpr auto c_StunnedPostureID = 0x2488; // int32_t
		constexpr auto c_FearedPostureID = 0x248c; // int32_t
		constexpr auto c_DisarmedPostureID = 0x2490; // int32_t
		constexpr auto s_Viewers = 0x2494; // TArray<ObjectProperty>
		constexpr auto m_fLastCTFVolumeTimestamp = 0x24a4; // float
		constexpr auto m_fDamageTakenRTPC = 0x24a8; // float
		constexpr auto m_fArmorDamageTakenPercentRTPC = 0x24ac; // float
		constexpr auto m_fDamageTakenMax = 0x24b0; // float
		constexpr auto m_fDamageTakenMaxSustainDuration = 0x24b4; // float
		constexpr auto m_fDamageTakenRTPCSustainDuration = 0x24b8; // float
		constexpr auto m_OverlayInfosBody = 0x24bc; // TArray<FOverlayInfo>
		constexpr auto m_OverlayInfosWeapon = 0x24cc; // TArray<FOverlayInfo>
		constexpr auto m_ExecuteOverlayMaterialFriend = 0x24dc; // ObjectProperty
		constexpr auto m_ExecuteOverlayMaterialEnemy = 0x24e4; // ObjectProperty
		constexpr auto m_ShieldOverlayMaterialFriend = 0x24ec; // ObjectProperty
		constexpr auto m_ShieldOverlayMaterialEnemy = 0x24f4; // ObjectProperty
		constexpr auto m_ImmortalOverlayMaterialFriend = 0x24fc; // ObjectProperty
		constexpr auto m_ImmortalOverlayMaterialEnemy = 0x2504; // ObjectProperty
		constexpr auto m_CharacterCustom1OverlayMaterial = 0x250c; // ObjectProperty
		constexpr auto m_FreezeOverlayMaterial = 0x2514; // ObjectProperty
		constexpr auto m_SilhouetteInfos = 0x251c; // TArray<FSilhouetteInfo>
		constexpr auto m_SilhouetteClass = 0x252c; // UTgSilhouetteComponent*
		constexpr auto m_IgnoredHitPulseIndicies = 0x2534; // TArray<int32_t>
		constexpr auto m_fHitReactionAIPauseTime = 0x2544; // float
		constexpr auto m_fHitReactionBlendOutTime = 0x2548; // float
		constexpr auto m_fHitReactionTweenTime = 0x254c; // float
		constexpr auto m_fFadeOutTime = 0x2550; // float
		constexpr auto m_fFadeOutSpeed = 0x2554; // float
		constexpr auto m_DeathAnimFX = 0x2558; // ObjectProperty
		constexpr auto m_HitReactionSkelControls = 0x2560; // TArray<ObjectProperty>
		constexpr auto m_fRemainingHitReactionPulseTime = 0x2570; // float
		constexpr auto m_fHitReactionPulseTime = 0x2574; // float
		constexpr auto m_fDisorientSpinRate = 0x2578; // float
		constexpr auto s_fMaxRelevancyDistanceSquared = 0x257c; // float
		constexpr auto m_fMaxSmoothNetUpdateDist = 0x2580; // float
		constexpr auto m_fNoSmoothNetUpdateDist = 0x2584; // float
		constexpr auto m_fSmoothNetUpdateTime = 0x2588; // float
		constexpr auto m_vMeshTranslationOffset = 0x258c; // FVector
		constexpr auto m_fInitialHealthPercent = 0x2598; // float
		constexpr auto c_fHUDHealthPercent = 0x259c; // float
		constexpr auto m_fDamageDealtPercentAI = 0x25a0; // float
		constexpr auto m_fDamageTakenPercentAI = 0x25a4; // float
		constexpr auto s_RecentHealList = 0x25a8; // TArray<FHealingInfo>
		constexpr auto m_fRecentHealExpireTime = 0x25b8; // float
		constexpr auto m_nCloneExpirationAttacksCount = 0x25bc; // int32_t
		constexpr auto m_fCloneLeashRange = 0x25c0; // float
		constexpr auto m_fCloneExpirationTime = 0x25c4; // float
		constexpr auto r_CloneParentPRI = 0x25c8; // ObjectProperty
		constexpr auto r_nMountYaw = 0x25d0; // int32_t
		constexpr auto m_MountFrontTraceSocketName = 0x25d4; // FName
		constexpr auto m_MountBackTraceSocketName = 0x25dc; // FName
		constexpr auto m_MountRootBoneName = 0x25e4; // FName
		constexpr auto m_pMountSkelControl = 0x25ec; // ObjectProperty
		constexpr auto m_pMeshSkelControl = 0x25f4; // ObjectProperty
		constexpr auto m_fMountPitchPrevious = 0x25fc; // float
		constexpr auto m_fMountPitchTarget = 0x2600; // float
		constexpr auto m_fMountPitchCurrent = 0x2604; // float
		constexpr auto m_fMountVerticalOffsetPrevious = 0x2608; // float
		constexpr auto m_fMountVerticalOffsetTarget = 0x260c; // float
		constexpr auto m_nMountPreviousRot = 0x2610; // int32_t
		constexpr auto m_nMountAlignInterp = 0x2614; // float
		constexpr auto m_SprintBlendNode = 0x2618; // ObjectProperty
		constexpr auto m_WeaponMesh = 0x2620; // ObjectProperty
		constexpr auto m_BodyMesh = 0x2628; // ComponentProperty
		constexpr auto m_HeadMesh = 0x2630; // ComponentProperty
		constexpr auto m_HeadSilhouetteIndex = 0x2638; // int32_t
		constexpr auto m_HeadOverlayIndex = 0x263c; // int32_t
		constexpr auto r_nBodyMeshOverride = 0x2640; // int32_t
		constexpr auto r_nHeadMeshOverride = 0x2644; // int32_t
		constexpr auto c_nCurrentHeadMeshID = 0x2648; // int32_t
		constexpr auto m_BobFootstepFactor = 0x264c; // float
		constexpr auto Bob = 0x2650; // float
		constexpr auto LandBob = 0x2654; // float
		constexpr auto JumpBob = 0x2658; // float
		constexpr auto AppliedBob = 0x265c; // float
		constexpr auto BobTime = 0x2660; // float
		constexpr auto WalkBob = 0x2664; // FVector
		constexpr auto m_fOldZ = 0x2670; // float
		constexpr auto m_fBobMult1 = 0x2674; // float
		constexpr auto m_fBobMult2 = 0x2678; // float
		constexpr auto m_fBobBlendAmount = 0x267c; // float
		constexpr auto m_fBobBlendSpeed = 0x2680; // float
		constexpr auto AimSpot = 0x2684; // FVector
		constexpr auto AimNoise = 0x2690; // FVector
		constexpr auto m_fAimSpotsetLastRefresh = 0x269c; // float
		constexpr auto m_fAimNoiseLastRefresh = 0x26a0; // float
		constexpr auto m_fAimPitch = 0x26a4; // float
		constexpr auto m_fJetpackPowerPoolCost = 0x26a8; // float
		constexpr auto m_fSprintPowerPoolCost = 0x26ac; // float
		constexpr auto m_fSprintMinPowerPoolPct = 0x26b0; // float
		constexpr auto m_fSprintPct = 0x26b4; // float
		constexpr auto m_TakeHitAudioComponent = 0x26b8; // ComponentProperty
		constexpr auto m_PainAudioComponent = 0x26c0; // ComponentProperty
		constexpr auto m_TakeHitAkEvent = 0x26c8; // ObjectProperty
		constexpr auto m_TakeHeadShotAkEvent = 0x26d0; // ObjectProperty
		constexpr auto c_HealPlayAkEvent = 0x26d8; // ObjectProperty
		constexpr auto c_HealStopAkEvent = 0x26e0; // ObjectProperty
		constexpr auto m_PainAkEvent = 0x26e8; // ObjectProperty
		constexpr auto m_fLastPainEvent = 0x26f0; // float
		constexpr auto m_fPainEventCooldown = 0x26f4; // float
		constexpr auto m_FireAnimNode = 0x26f8; // ObjectProperty
		constexpr auto m_StealthPulseEffectGroup = 0x2700; // ObjectProperty
		constexpr auto m_fStealthPulseTime = 0x2708; // float
		constexpr auto r_fKnockedBackFrictionOverride = 0x270c; // float
		constexpr auto r_vKnockedBackVelocityOverride = 0x2710; // FVector
		constexpr auto r_nIncomingImpactCount = 0x271c; // int32_t
		constexpr auto r_fReloadScale = 0x2720; // float
		constexpr auto r_fEquipTimeScale = 0x2724; // float
		constexpr auto r_HealTarget = 0x2728; // ObjectProperty
		constexpr auto c_HealingBeamPSC = 0x2730; // ComponentProperty
		constexpr auto m_OutlineMesh = 0x2738; // ComponentProperty
		constexpr auto m_OutlineMaterial = 0x2740; // ObjectProperty
		constexpr auto m_NearObjectiveVolume = 0x2748; // ObjectProperty
		constexpr auto r_fLeapAirControl = 0x2750; // float
		constexpr auto m_fBaseLeapAirControl = 0x2754; // float
		constexpr auto m_fKnockAirControl = 0x2758; // float
		constexpr auto m_HomeguardVolumes = 0x275c; // TArray<ObjectProperty>
		constexpr auto m_LastHomeguardTime = 0x276c; // float
		constexpr auto m_MountMesh = 0x2770; // ComponentProperty
		constexpr auto s_fEndStealthDamage = 0x2778; // float
		constexpr auto s_fDamageTakenDuringStealth = 0x277c; // float
		constexpr auto m_fHUDOverlayZOffset = 0x2780; // float
		constexpr auto m_fHUDOverlayMorphMountedZOffset = 0x2784; // float
		constexpr auto m_lastDamageSourceSlot = 0x2788; // int32_t
		constexpr auto m_fLastMoveTime = 0x278c; // float
		constexpr auto s_AttachedProjBlocker = 0x2790; // ObjectProperty
		constexpr auto m_fScaleMesh = 0x2798; // float
		constexpr auto m_fScaleMeshChangePerSecond = 0x279c; // float
		constexpr auto m_fScaleCollisionHeight = 0x27a0; // float
		constexpr auto m_fScaleCollisionHeightChangePerSecond = 0x27a4; // float
		constexpr auto m_fScaleCollisionRadius = 0x27a8; // float
		constexpr auto m_fScaleCollisionRadiusChangePerSecond = 0x27ac; // float
		constexpr auto m_IntroPostureID = 0x27b0; // int32_t
		constexpr auto r_fIntroTime = 0x27b4; // float
		constexpr auto r_fIntroOffset = 0x27b8; // float
		constexpr auto s_fIntroStartTime = 0x27bc; // float
		constexpr auto m_fIntroProgress = 0x27c0; // float
		constexpr auto r_ReplicatedState = 0x27c4; // FName
		constexpr auto m_RespawnNodes = 0x27cc; // TArray<ObjectProperty>
		constexpr auto m_BuffCampIntroNodes = 0x27dc; // TArray<ObjectProperty>
		constexpr auto m_IntialIntroState = 0x27ec; // FName
		constexpr auto m_nmIntroWhiteOutParamName = 0x27f4; // FName
		constexpr auto m_fIntroWhiteOutScale = 0x27fc; // float
		constexpr auto m_fIntroWhiteOutUpTime = 0x2800; // float
		constexpr auto m_fIntroWhiteOutDownTime = 0x2804; // float
		constexpr auto r_nInsideTaskForceBase = 0x2808; // int32_t
		constexpr auto m_HealFX3P = 0x280c; // ObjectProperty
		constexpr auto m_ShieldFX3P = 0x2814; // ObjectProperty
		constexpr auto c_fNextTakeHitDisplayGroupTimestamp = 0x281c; // float
		constexpr auto c_fNextTakeHitDisplayDelay = 0x2820; // float
		constexpr auto r_PolymorphInstigator = 0x2824; // ObjectProperty
		constexpr auto m_PrePolymorphHealth = 0x282c; // int32_t
		constexpr auto m_PolymorphMaxHealth = 0x2830; // int32_t
		constexpr auto m_RigidBodyImpacts = 0x2834; // TArray<FRigidBodyImpactInfo>
		constexpr auto m_nWaterVolumeCount = 0x2844; // int32_t
		constexpr auto m_fMinShallowWaterDepth = 0x2848; // float
		constexpr auto m_ShallowWaterFx = 0x284c; // FWaterFxData
		constexpr auto m_DeepWaterFx = 0x2870; // FWaterFxData
		constexpr auto c_fServerTimeStamp = 0x2894; // float
		constexpr auto m_fZoomDistOverride = 0x2898; // float
		constexpr auto m_fZoomDurationOverride = 0x289c; // float
		constexpr auto c_fLastUnoccludedWeaponSoundTimestamp = 0x28a0; // FDouble
		constexpr auto c_fThreatBehind = 0x28a8; // float
		constexpr auto c_fThreatInEffectiveRange = 0x28ac; // float
		constexpr auto c_fThreatDistanceSquared = 0x28b0; // float
		constexpr auto c_fThreatDistance = 0x28b4; // float
		constexpr auto c_fThreatFocused = 0x28b8; // float
		constexpr auto c_fThreatFocusTarget = 0x28bc; // float
		constexpr auto c_fThreatSeenBy = 0x28c0; // float
		constexpr auto c_fThreatDamaged = 0x28c4; // float
		constexpr auto c_fThreatOcclusion = 0x28c8; // float
		constexpr auto c_fThreatBinnedOcclusion = 0x28cc; // float
		constexpr auto c_fThreatShotAt = 0x28d0; // float
		constexpr auto c_fThreatUlt = 0x28d4; // float
		constexpr auto c_fThreatLevelValue = 0x28d8; // float
		constexpr auto c_fThreatDecayResidual = 0x28dc; // float
		constexpr auto c_fLastThreatLevelValue = 0x28e0; // float
		constexpr auto c_fDBGThreatDistanceFeet = 0x28e4; // float
		constexpr auto r_GameplayCurves = 0x28e8; // ObjectProperty
		constexpr auto m_BaseCurves = 0x28f0; // ObjectProperty
		constexpr auto m_DownedCurves = 0x28f8; // ObjectProperty
		constexpr auto m_nSuccessfulHitSpecialFXId = 0x2900; // int32_t
		constexpr auto LLegBoneNames = 0x2904; // TArray<FName>
		constexpr auto RLegBoneNames = 0x2914; // TArray<FName>
		constexpr auto LArmBoneNames = 0x2924; // TArray<FName>
		constexpr auto RArmBoneNames = 0x2934; // TArray<FName>
		constexpr auto HeadBoneNames = 0x2944; // TArray<FName>
		constexpr auto m_HeadShotComponentBoneName = 0x2954; // FName
		constexpr auto m_HeadShotComponent = 0x295c; // ComponentProperty
		constexpr auto m_fMountScaleOverride = 0x2964; // float
		constexpr auto m_LandCameraShake = 0x2968; // ObjectProperty
		constexpr auto m_JumpCameraShake = 0x2970; // ObjectProperty
		constexpr auto m_DoubleJumpCameraShake = 0x2978; // ObjectProperty
		constexpr auto m_DisenchantCameraShake = 0x2980; // ObjectProperty
		constexpr auto m_DisenchantFx = 0x2988; // ObjectProperty
		constexpr auto m_f1PTransitionFireDelay = 0x2990; // float
		constexpr auto m_f1PTransitionFireDelayRemaining = 0x2994; // float
		constexpr auto m_fEnergyChargeMultiplier = 0x2998; // float
		constexpr auto c_fRecreateTrackedProjectilesTimer = 0x299c; // float
		constexpr auto m_fRecoilSmoothRate = 0x29a0; // float
		constexpr auto m_rCurrentRecoil = 0x29a4; // FRotator
		constexpr auto m_rSmoothedRecoil = 0x29b0; // FRotator
		constexpr auto m_rLastAppliedRecoil = 0x29bc; // FRotator
		constexpr auto m_fSettleDelay = 0x29c8; // float
		constexpr auto m_fSettleSpeed = 0x29cc; // float
		constexpr auto m_fRecoilSettleDeltaTimeOverflow = 0x29d0; // float
		constexpr auto m_fRecoilSmoothDeltaTimeOverflow = 0x29d4; // float
		constexpr auto m_rVisualRecoil = 0x29d8; // FRotator
		constexpr auto m_fVisualRecoilApplicationTime = 0x29e4; // float
		constexpr auto m_fVisualRecoilDuration = 0x29e8; // float
		constexpr auto m_VisualRecoilApplied = 0x29ec; // ObjectProperty
		constexpr auto r_nVoicePackId = 0x29f4; // int32_t
		constexpr auto m_vPendingWallKnockbackHitNormals = 0x29f8; // TArray<FVector>
		constexpr auto m_nPendingPlayerKnockbackHitPawnIds = 0x2a08; // TArray<int32_t>
		constexpr auto m_fTimeOnNonBaseableSurface = 0x2a18; // float
		constexpr auto m_fNonBaseableSurfaceAirControlDuration = 0x2a1c; // float
		constexpr auto m_fNonBaseableSurfaceLerpTime = 0x2a20; // float
		constexpr auto m_fNonBaseableSurfaceRampUpMult = 0x2a24; // float
		constexpr auto m_fNonBaseableSurfaceMaxMoveAmount = 0x2a28; // float
		constexpr auto m_fNonBaseableSurfaceGraceTime = 0x2a2c; // float
		constexpr auto m_fNonBaseableSurfaceExitMaxVelocity = 0x2a30; // float
		constexpr auto m_fNonBaseableSurfaceControlPercent = 0x2a34; // float
		constexpr auto m_OriginalMaterialsBody = 0x2a38; // TArray<ObjectProperty>
		constexpr auto m_OriginalMaterialsHead = 0x2a48; // TArray<ObjectProperty>
		constexpr auto m_OriginalMaterialsWeapon = 0x2a58; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsBody = 0x2a68; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsHead = 0x2a78; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsWeapon = 0x2a88; // TArray<ObjectProperty>
		constexpr auto m_fEyeHeightSmoothFactor = 0x2a98; // float
		constexpr auto m_DeathFFWaveform = 0x2a9c; // ObjectProperty
		constexpr auto m_BuffDevice = 0x2aa4; // ObjectProperty
		constexpr auto m_PrincessPresenceDebuffDevice = 0x2aac; // ObjectProperty
		constexpr auto m_PrincessPresenceBuffDevice = 0x2ab4; // ObjectProperty
		constexpr auto m_fFlourishTimeout = 0x2abc; // float
		constexpr auto c_nCurrentVGSPlaying = 0x2ac0; // int32_t
		constexpr auto m_SingleUseOn3pTransitionDelegates = 0x2ac4; // TArray<DelegateProperty>
		constexpr auto m_PreMountMeshRotation = 0x2ad4; // FRotator
		constexpr auto m_MountCastFX3P = 0x2ae0; // ObjectProperty
		constexpr auto m_MountSummonFX3P = 0x2ae8; // ObjectProperty
		constexpr auto m_ReviveCastFX3P = 0x2af0; // ObjectProperty
		constexpr auto m_OnRevivingFX3P = 0x2af8; // ObjectProperty
		constexpr auto m_fInterpElapsed = 0x2b00; // float
		constexpr auto m_fInterpDuration = 0x2b04; // float
		constexpr auto m_nInterpStart = 0x2b08; // int32_t
		constexpr auto m_nInterpTarget = 0x2b0c; // int32_t
		constexpr auto c_vForced3pAdditionalOffset = 0x2b10; // FVector
		constexpr auto c_v3pOffsetTest = 0x2b1c; // FVector
		constexpr auto c_v3pOffsetTestMounted = 0x2b28; // FVector
		constexpr auto c_vMountCameraOffset = 0x2b34; // FVector [0x2]
		constexpr auto m_vCameraOverrideLocation = 0x2b4c; // FVector
		constexpr auto m_VaultPath = 0x2b58; // TArray<FVector>
		constexpr auto m_nmWindowVaultAnimName = 0x2b68; // FName
		constexpr auto m_fFaceWallVaultingThreshold = 0x2b70; // float
		constexpr auto m_fVaultZ = 0x2b74; // float
		constexpr auto m_fLedgeGrabDist = 0x2b78; // float
		constexpr auto m_fLedgeGrabbableWallZ = 0x2b7c; // float
		constexpr auto m_fLedgeGrabbableZ = 0x2b80; // float
		constexpr auto m_fMaxLedgeCheckHeight = 0x2b84; // float
		constexpr auto m_fLedgeMantleDist = 0x2b88; // float
		constexpr auto m_fLateralLedgeSpeedMult = 0x2b8c; // float
		constexpr auto m_vLedgeGrabWallDir = 0x2b90; // FVector
		constexpr auto m_fLedgeDist = 0x2b9c; // float
		constexpr auto m_fWindowVaultNoInputTime = 0x2ba0; // float
		constexpr auto m_fWindowVaultDeviceLockoutTime = 0x2ba4; // float
		constexpr auto m_fWindowVaultCooldownTime = 0x2ba8; // float
		constexpr auto m_fADSGroundspeedPct = 0x2bac; // float
		constexpr auto m_fTotalADSZoomTime = 0x2bb0; // float
		constexpr auto m_fRemainingADSZoomInTime = 0x2bb4; // float
		constexpr auto m_fRemainingADSZoomOutTime = 0x2bb8; // float
		constexpr auto m_sBotCodeNameOverride = 0x2bbc; // FString
		constexpr auto m_fHazardDistance = 0x2bcc; // float
		constexpr auto m_fHazardRating = 0x2bd0; // float
		constexpr auto m_nPickupDeployableList = 0x2bd4; // TArray<ObjectProperty>
		constexpr auto m_PickupMinDot = 0x2be4; // float
		constexpr auto m_fPickupMaxDistance = 0x2be8; // float
		constexpr auto m_fPickupMaxSquareRadius = 0x2bec; // float
		constexpr auto c_fSimModMoveSpeedToSave = 0x2bf0; // float
		constexpr auto c_fSavedSimModMoveSpeed = 0x2bf4; // float
		constexpr auto r_fRevivingTimer = 0x2bf8; // float
		constexpr auto m_fLastRoyaleTakeHitTime = 0x2bfc; // float
		constexpr auto m_nReviveBoostedCount = 0x2c00; // int32_t
		constexpr auto m_fSteepTerrainWalkableFloorZ = 0x2c04; // float
		constexpr auto m_fSteepTerrainSlowMultiplierSmall = 0x2c08; // float
		constexpr auto m_fSteepTerrainSlowMultiplierMid = 0x2c0c; // float
		constexpr auto m_fSteepTerrainSlowMultiplierLarge = 0x2c10; // float
		constexpr auto m_fSteepTerrainSlopeZMidBreakpoint = 0x2c14; // float
		constexpr auto m_CameraInvisFX3P = 0x2c18; // ObjectProperty
		constexpr auto m_TouchingIndoorVolumes = 0x2c20; // TArray<ObjectProperty>
		constexpr auto m_fDoubleJumpThreshold = 0x2c30; // float
		constexpr auto m_nDoubleJumpRemaining = 0x2c34; // int32_t
		constexpr auto m_fUnderheadADSDistanceClampAngle = 0x2c38; // float
		constexpr auto m_fUnderheadADSDistanceClampPushIn = 0x2c3c; // float
		constexpr auto m_fUnderheadADSDistanceClampOvershoot = 0x2c40; // float
		constexpr auto m_fOverheadADSDistanceClampAngle = 0x2c44; // float
		constexpr auto m_fOverheadADSDistanceClampPushIn = 0x2c48; // float
		constexpr auto m_fOverheadADSDistanceClampOvershoot = 0x2c4c; // float
		constexpr auto c_vForced3pAdditionalOffsetADS = 0x2c50; // FVector
		constexpr auto m_fSkydiveAirControl = 0x2c5c; // float
		constexpr auto m_fSkydiveGravityMultiplier = 0x2c60; // float
		constexpr auto m_fSkydiveFromCatapultAirControl = 0x2c64; // float
		constexpr auto m_fSkydiveFromCatapultGravityMultiplier = 0x2c68; // float
		constexpr auto m_fCatapultAirControl = 0x2c6c; // float
		constexpr auto m_fSkydiveMaxStrafeSpeed = 0x2c70; // float
		constexpr auto m_SkydiveAccelRate = 0x2c74; // float
		constexpr auto m_SkydiveRootTime = 0x2c78; // float
		constexpr auto m_SkydieChickenLandTime = 0x2c7c; // float
		constexpr auto m_SkydiveChickenRootTime = 0x2c80; // float
		constexpr auto m_SkydiveRootRemainingTime = 0x2c84; // float
		constexpr auto m_SkydiveBrakePercent = 0x2c88; // float
		constexpr auto m_fSkydivePrelandDistance = 0x2c8c; // float
		constexpr auto m_fSkydivePSParamTime = 0x2c90; // float
		constexpr auto m_fFallRootMinSpeed = 0x2c94; // float
		constexpr auto m_fFallRootTime = 0x2c98; // float
		constexpr auto m_MountLogDebugTimes = 0x2c9c; // int32_t
		constexpr auto m_pPendingWeaponAnimSet = 0x2ca0; // ObjectProperty
		constexpr auto m_fAllowableSprintAngle = 0x2ca8; // float
		constexpr auto m_nSprintPostureID = 0x2cac; // int32_t
		constexpr auto m_f3pSmoothSpeed1 = 0x2cb0; // float
		constexpr auto m_f3pSmoothSpeed2 = 0x2cb4; // float
		constexpr auto m_ArmorSkin = 0x2cb8; // ObjectProperty
		constexpr auto m_nDownedTaskForceList = 0x2cc0; // TArray<int32_t>
		constexpr auto m_pPrevEquipForm = 0x2cd0; // ObjectProperty
		constexpr auto m_DeviceTimers = 0x2cd8; // TArray<FDeviceTimer>
		constexpr auto m_AnimNodeBlendCrouchNodes = 0x2ce8; // TArray<ObjectProperty>
		constexpr auto m_LandRecoilSkelControls = 0x2cf8; // TArray<ObjectProperty>
		constexpr auto r_Talents = 0x2d08; // FTalentInfo [0xa]
		constexpr auto m_fNonVerbalEmoteCooldown = 0x2e20; // float
		constexpr auto m_fNonVerbalEmoteTime = 0x2e24; // float
		constexpr auto m_fPolymorphGroundSpeed = 0x2e28; // float
		constexpr auto m_fMountCastTime = 0x2e2c; // float
		constexpr auto m_fSprintSpeed = 0x2e30; // float
		constexpr auto m_fHitIndicatorVerticalDistance = 0x2e34; // float
		constexpr auto m_fHitIndicatorHorizontalDistance = 0x2e38; // float
		constexpr auto r_Catapult = 0x2e3c; // ObjectProperty
		constexpr auto m_rLockedSkelControlRotation = 0x2e44; // FRotator
		constexpr auto m_pShieldMesh = 0x2e50; // ComponentProperty
		constexpr auto m_CurrentWeatherVolume = 0x2e58; // ObjectProperty
		constexpr auto m_SkelControl_BigHead = 0x2e60; // ObjectProperty
		constexpr auto __On3pTransitionEvent__Delegate = 0x2e68; // DelegateProperty
	}

	namespace n_UUIComponent_BattlePassRewardsInfoPanel {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcTimeLeft = 0x128; // ObjectProperty
		constexpr auto m_pProgress = 0x130; // ObjectProperty
		constexpr auto m_mcProgressLevel = 0x138; // ObjectProperty
		constexpr auto m_mcProgressXP = 0x140; // ObjectProperty
	}

	namespace n_ARB_CylindricalForceActor {
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto RadialStrength = 0x288; // float
		constexpr auto RotationalStrength = 0x28c; // float
		constexpr auto LiftStrength = 0x290; // float
		constexpr auto LiftFalloffHeight = 0x294; // float
		constexpr auto EscapeVelocity = 0x298; // float
		constexpr auto ForceRadius = 0x29c; // float
		constexpr auto ForceTopRadius = 0x2a0; // float
		constexpr auto ForceHeight = 0x2a4; // float
		constexpr auto HeightOffset = 0x2a8; // float
		constexpr auto bForceActive = 0x2ac; // char : 1
		constexpr auto bForceApplyToCloth = 0x2ac; // char : 1
		constexpr auto bForceApplyToFluid = 0x2ac; // char : 1
		constexpr auto bForceApplyToRigidBodies = 0x2ac; // char : 1
		constexpr auto bForceApplyToProjectiles = 0x2ac; // char : 1
		constexpr auto CollideWithChannels = 0x2b0; // FRBCollisionChannelContainer
	}

	namespace n_UMcpUserManager {
		constexpr auto UserStatuses = 0xb8; // TArray<FMcpUserStatus>
		constexpr auto RegisterUserMcpUrl = 0xc8; // FString
		constexpr auto RegisterUserEmailUrl = 0xd8; // FString
		constexpr auto RegisterUserFacebookUrl = 0xe8; // FString
		constexpr auto QueryUserUrl = 0xf8; // FString
		constexpr auto QueryUsersUrl = 0x108; // FString
		constexpr auto DeleteUserUrl = 0x118; // FString
		constexpr auto RegisterUserRequests = 0x128; // TArray<FRegisterUserRequest>
		constexpr auto QueryUsersRequests = 0x138; // TArray<ObjectProperty>
		constexpr auto DeleteUserRequests = 0x148; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_Interp {
		constexpr auto SavedActorTransforms = 0x120; // TMap<None, None>
		constexpr auto SavedActorVisibilities = 0x168; // TMap<None, None>
		constexpr auto PlayRate = 0x1b0; // float
		constexpr auto Position = 0x1b4; // float
		constexpr auto ForceStartPosition = 0x1b8; // float
		constexpr auto bIsPlaying = 0x1bc; // char : 1
		constexpr auto bPaused = 0x1bc; // char : 1
		constexpr auto bIsBeingEdited = 0x1bc; // char : 1
		constexpr auto bLooping = 0x1bc; // char : 1
		constexpr auto bRewindOnPlay = 0x1bc; // char : 1
		constexpr auto bNoResetOnRewind = 0x1bc; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x1bc; // char : 1
		constexpr auto bReversePlayback = 0x1bc; // char : 1
		constexpr auto bInterpForPathBuilding = 0x1bc; // char : 0
		constexpr auto bForceStartPos = 0x1bc; // char : 0
		constexpr auto bDisableRadioFilter = 0x1bc; // char : 0
		constexpr auto bClientSideOnly = 0x1bc; // char : 0
		constexpr auto bSkipUpdateIfNotVisible = 0x1bc; // char : 0
		constexpr auto bIsSkippable = 0x1bc; // char : 0
		constexpr auto bShouldShowGore = 0x1bc; // char : 0
		constexpr auto LinkedCover = 0x1c0; // TArray<ObjectProperty>
		constexpr auto InterpData = 0x1d0; // ObjectProperty
		constexpr auto GroupInst = 0x1d8; // TArray<ObjectProperty>
		constexpr auto ReplicatedActorClass = 0x1e8; // AMatineeActor*
		constexpr auto ReplicatedActor = 0x1f0; // ObjectProperty
		constexpr auto PreferredSplitScreenNum = 0x1f8; // int32_t
		constexpr auto CameraCuts = 0x1fc; // TArray<FCameraCutInfo>
		constexpr auto TerminationTime = 0x20c; // float
		constexpr auto RenderingOverrides = 0x210; // FRenderingPerformanceOverrides
		constexpr auto ConstantCameraAnim = 0x214; // char
		constexpr auto ConstantCameraAnimRate = 0x218; // float
	}

	namespace n_AFrameworkGame {
		constexpr auto RequiredMobileInputConfigs = 0x4cc; // TArray<FRequiredMobileInputConfig>
	}

	namespace n_UTgSeqEvent_BotDied {
		constexpr auto m_nBotsKilled = 0x128; // int32_t
		constexpr auto m_nBotsKilledCounter = 0x12c; // int32_t
	}

	namespace n_AGameCrowdPopulationManager {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto CloudSpawnInfo = 0x288; // FCrowdSpawnInfoItem
		constexpr auto ScriptedSpawnInfo = 0x318; // TArray<FCrowdSpawnInfoItem>
		constexpr auto ActiveCrowdInfoVolume = 0x328; // ObjectProperty
		constexpr auto GlobalPotentialSpawnPoints = 0x330; // TArray<ObjectProperty>
		constexpr auto SplitScreenNumReduction = 0x340; // float
		constexpr auto PlayerPositionPredictionTime = 0x344; // float
		constexpr auto HeadVisibilityOffset = 0x348; // float
		constexpr auto NavigationHandleClass = 0x34c; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x354; // ObjectProperty
		constexpr auto QueryingAgent = 0x35c; // ObjectProperty
		constexpr auto PlayerInfo = 0x364; // TArray<FCrowdSpawnerPlayerInfo>
		constexpr auto LastPlayerInfoUpdateTime = 0x374; // float
		constexpr auto bDebugSpawns = 0x378; // char : 1
		constexpr auto bPauseCrowd = 0x378; // char : 1
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UPartyBeaconHost {
		constexpr auto Clients = 0x98; // TArray<FClientBeaconConnection>
		constexpr auto NumTeams = 0xa8; // int32_t
		constexpr auto NumPlayersPerTeam = 0xac; // int32_t
		constexpr auto NumReservations = 0xb0; // int32_t
		constexpr auto NumConsumedReservations = 0xb4; // int32_t
		constexpr auto Reservations = 0xb8; // TArray<FPartyReservation>
		constexpr auto OnlineSessionName = 0xc8; // FName
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto ForceTeamNum = 0xd4; // int32_t
		constexpr auto ReservedHostTeamNum = 0xd8; // int32_t
		constexpr auto bBestFitTeamAssignment = 0xdc; // char : 1
		constexpr auto BeaconState = 0xe0; // EPartyBeaconHostState
		constexpr auto __OnReservationChange__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnReservationsFull__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnClientCancellationReceived__Delegate = 0x104; // DelegateProperty
	}

	namespace n_UUIComponent_HoldPrompt {
		constexpr auto m_pGamepadKey = 0x120; // ObjectProperty
		constexpr auto m_mcRadialMask = 0x128; // ObjectProperty
		constexpr auto m_mcTF = 0x130; // ObjectProperty
		constexpr auto m_fHoldTimer = 0x138; // float
		constexpr auto m_fHoldDuration = 0x13c; // float
		constexpr auto m_fFadeOutDelay = 0x140; // float
		constexpr auto m_fFadeOutDuration = 0x144; // float
		constexpr auto m_fFadeOutTimer = 0x148; // float
		constexpr auto m_bHolding = 0x14c; // char : 1
		constexpr auto m_bPrimed = 0x14c; // char : 1
		constexpr auto m_PressAction = 0x150; // ObjectProperty
		constexpr auto m_ReleaseAction = 0x158; // ObjectProperty
	}

	namespace n_UClientBeaconAddressResolver {
		constexpr auto BeaconPort = 0x60; // int32_t
		constexpr auto BeaconName = 0x64; // FName
	}

	namespace n_UTgInventoryObject_Listen_MultiplyDamageDrawn {
		constexpr auto m_bPassedThreshold = 0xc8; // char : 1
	}

	namespace n_ARB_ConstraintActor {
		constexpr auto ConstraintActor1 = 0x280; // ObjectProperty
		constexpr auto ConstraintActor2 = 0x288; // ObjectProperty
		constexpr auto ConstraintSetup = 0x290; // ObjectProperty
		constexpr auto ConstraintInstance = 0x298; // ObjectProperty
		constexpr auto bDisableCollision = 0x2a0; // char : 1
		constexpr auto bUpdateActor1RefFrame = 0x2a0; // char : 1
		constexpr auto bUpdateActor2RefFrame = 0x2a0; // char : 1
		constexpr auto PulleyPivotActor1 = 0x2a4; // ObjectProperty
		constexpr auto PulleyPivotActor2 = 0x2ac; // ObjectProperty
	}

	namespace n_ATgInternalChestManagerVolume {
		constexpr auto m_nMinChests = 0x2bc; // int32_t
	}

	namespace n_ATgMidnightFogVolumeDensityInfo {
		constexpr auto m_bFogOn = 0x294; // char : 1
		constexpr auto m_bFogUpdateNeeded = 0x294; // char : 1
		constexpr auto m_bIsFadingOut = 0x294; // char : 1
		constexpr auto m_fCurrentStartDistance = 0x298; // float
		constexpr auto m_fFadeOutDuration = 0x29c; // float
		constexpr auto m_fFadeOutTimer = 0x2a0; // float
		constexpr auto m_fTargetMaxDensity = 0x2a4; // float
		constexpr auto m_fDestroyTimer = 0x2a8; // float
		constexpr auto SphericalDensityComponent = 0x2ac; // ComponentProperty
	}

	namespace n_UUIComponent_ItemTooltip {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x128; // ObjectProperty
		constexpr auto m_mcDescription = 0x130; // ObjectProperty
		constexpr auto m_nLastSetItemID = 0x138; // int32_t
	}

	namespace n_UUIHudMap_Spectator {
		constexpr auto m_TaskforceData = 0x7f8; // TArray<FUITASKFORCE_DATA>
		constexpr auto m_mcPlayers = 0x808; // ObjectProperty [0x64]
		constexpr auto m_mcTaskforceRefs = 0xb28; // ObjectProperty [0x64]
		constexpr auto m_nTaskforceDisplayCount = 0xe48; // int32_t
		constexpr auto m_mcSpectator = 0xe4c; // ObjectProperty
		constexpr auto m_mcColumns = 0xe54; // ObjectProperty [0x4]
		constexpr auto m_nColumnCnt = 0xe74; // int32_t
		constexpr auto m_nMaxTFPerColumn = 0xe78; // int32_t
	}

	namespace n_UGFxAction_OpenMovie {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MoviePlayerClass = 0x110; // UGFxMoviePlayer*
		constexpr auto MoviePlayer = 0x118; // ObjectProperty
		constexpr auto bTakeFocus = 0x120; // char : 1
		constexpr auto bCaptureInput = 0x120; // char : 1
		constexpr auto bStartPaused = 0x120; // char : 1
		constexpr auto bEnableGammaCorrection = 0x120; // char : 1
		constexpr auto bDisplayWithHudOff = 0x120; // char : 1
		constexpr auto RenderTextureMode = 0x124; // GFxRenderTextureMode
		constexpr auto RenderTexture = 0x128; // ObjectProperty
		constexpr auto CaptureKeys = 0x130; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x140; // TArray<FName>
	}

	namespace n_ASkeletalMeshActorBasedOnExtremeContent {
		constexpr auto ExtremeContent = 0x2e8; // TArray<FSkelMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x2f8; // TArray<FSkelMaterialSetterDatum>
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0x108; // int32_t
		constexpr auto SizeY = 0x10c; // int32_t
		constexpr auto Format = 0x110; // EPixelFormat
		constexpr auto AddressX = 0x111; // TextureAddress
		constexpr auto AddressY = 0x112; // TextureAddress
		constexpr auto ClearColor = 0x114; // FLinearColor
		constexpr auto bForceLinearGamma = 0x124; // char : 1
	}

	namespace n_USkelControlLookAt {
		constexpr auto TargetLocation = 0xd0; // FVector
		constexpr auto TargetLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto LookAtAxis = 0xdd; // EAxis
		constexpr auto UpAxis = 0xde; // EAxis
		constexpr auto AllowRotationSpace = 0xdf; // EBoneControlSpace
		constexpr auto TargetSpaceBoneName = 0xe0; // FName
		constexpr auto bInvertLookAtAxis = 0xe8; // char : 1
		constexpr auto bDefineUpAxis = 0xe8; // char : 1
		constexpr auto bInvertUpAxis = 0xe8; // char : 1
		constexpr auto bEnableLimit = 0xe8; // char : 1
		constexpr auto bLimitBasedOnRefPose = 0xe8; // char : 1
		constexpr auto bDisableBeyondLimit = 0xe8; // char : 1
		constexpr auto bNotifyBeyondLimit = 0xe8; // char : 1
		constexpr auto bShowLimit = 0xe8; // char : 1
		constexpr auto bAllowRotationX = 0xe8; // char : 0
		constexpr auto bAllowRotationY = 0xe8; // char : 0
		constexpr auto bAllowRotationZ = 0xe8; // char : 0
		constexpr auto TargetLocationInterpSpeed = 0xec; // float
		constexpr auto DesiredTargetLocation = 0xf0; // FVector
		constexpr auto ActorSpaceLookAtTarget = 0xfc; // FVector
		constexpr auto MaxAngle = 0x108; // float
		constexpr auto OuterMaxAngle = 0x10c; // float
		constexpr auto DeadZoneAngle = 0x110; // float
		constexpr auto RotationAngleRangeX = 0x114; // FVector2D
		constexpr auto RotationAngleRangeY = 0x11c; // FVector2D
		constexpr auto RotationAngleRangeZ = 0x124; // FVector2D
		constexpr auto AllowRotationOtherBoneName = 0x12c; // FName
		constexpr auto LookAtAlpha = 0x134; // float
		constexpr auto LookAtAlphaTarget = 0x138; // float
		constexpr auto LookAtAlphaBlendTimeToGo = 0x13c; // float
		constexpr auto LimitLookDir = 0x140; // FVector
		constexpr auto BaseLookDir = 0x14c; // FVector
		constexpr auto BaseBonePos = 0x158; // FVector
		constexpr auto LastCalcTime = 0x164; // float
		constexpr auto ControlBoneIndex = 0x168; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_FullBurstHit {
		constexpr auto m_nCurrentFireLoopInstanceId = 0xd0; // int32_t
		constexpr auto m_nCurrentHits = 0xd4; // int32_t
		constexpr auto m_nTargetHits = 0xd8; // int32_t
		constexpr auto m_bBonusActive = 0xdc; // char : 1
		constexpr auto m_pLastTargetHit = 0xe0; // ObjectProperty
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_BarrierTank {
		constexpr auto m_AmmoSkelControlNames = 0x544; // TArray<FName>
		constexpr auto m_AmmoSkelControls = 0x554; // TArray<ObjectProperty>
		constexpr auto m_CachedBarrierTankPawn = 0x564; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsWithinCombatDistance {
		constexpr auto bSubtractTargetPawnRadius = 0x98; // char : 1
		constexpr auto DistanceThresholdPercent = 0x9c; // float
		constexpr auto DeviceSlot = 0xa0; // TG_EQUIP_POINT
	}

	namespace n_AEnvironmentVolume {
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x2bc; // FPointer
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2c4; // FPointer
		constexpr auto bSplitNavMesh = 0x2cc; // char : 1
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x310; // FSplineMeshParams
		constexpr auto SplineXDir = 0x368; // FVector
		constexpr auto bSmoothInterpRollScale = 0x374; // char : 1
	}

	namespace n_UForceFieldShapeBox {
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UPrefabSequence {
		constexpr auto OwnerPrefab = 0x174; // ObjectProperty
	}

	namespace n_USeqVar_Int {
		constexpr auto IntValue = 0xa0; // int32_t
	}

	namespace n_ATgGame_Mission {
		constexpr auto m_bSpawnInTaskForceArea = 0x628; // char : 1
		constexpr auto s_bPreGuardianPhasePulsed = 0x628; // char : 1
		constexpr auto s_bGuardianPhasePulsed = 0x628; // char : 1
		constexpr auto s_bWasSurrendered = 0x628; // char : 1
		constexpr auto m_bSurrenderAvailable = 0x628; // char : 1
		constexpr auto m_bAllowAutoUpgrades = 0x628; // char : 1
		constexpr auto m_bUsePlayerCharacterIntros = 0x628; // char : 1
		constexpr auto m_eTimerState = 0x62c; // GameTimerState
		constexpr auto m_eTimerStatePaused = 0x62d; // GameTimerState
		constexpr auto m_fMissionTime = 0x630; // float
		constexpr auto m_fSecondaryMissionTime = 0x634; // float
		constexpr auto m_fWaitingForPlayersTime = 0x638; // float
		constexpr auto m_fSetupTime = 0x63c; // float
		constexpr auto m_fPausedAtTime = 0x640; // float
		constexpr auto m_fGameMissionTime = 0x644; // float
		constexpr auto s_MissionTimeAccumulator = 0x648; // float
		constexpr auto s_ReadyPlayers = 0x64c; // TArray<ObjectProperty>
		constexpr auto s_nReadyMercs = 0x65c; // int32_t
		constexpr auto m_fTickCreditsFreq = 0x660; // float
		constexpr auto m_fCreditsToGivePerTick = 0x664; // float
		constexpr auto m_nStartingCurrency = 0x668; // int32_t
		constexpr auto m_nStartingLevel = 0x66c; // int32_t
		constexpr auto m_nWinBonusXp = 0x670; // int32_t
		constexpr auto m_nWinPlayerXp = 0x674; // int32_t
		constexpr auto m_nLosePlayerXp = 0x678; // int32_t
		constexpr auto m_fGodXpCoefficient = 0x67c; // float
		constexpr auto m_fGodXpCoefficientLoss = 0x680; // float
		constexpr auto m_fGodXpWinBonus = 0x684; // float
		constexpr auto m_fFreeVIPWinPoints = 0x688; // float
		constexpr auto m_fFreeVIPLossPoints = 0x68c; // float
		constexpr auto m_fFreeVIPPerMinute = 0x690; // float
		constexpr auto m_fPaidVIPWinPoints = 0x694; // float
		constexpr auto m_fPaidVIPLossPoints = 0x698; // float
		constexpr auto m_fPaidVIPPerMinute = 0x69c; // float
		constexpr auto m_fBaseTokens = 0x6a0; // float
		constexpr auto m_nKillTokens = 0x6a4; // int32_t
		constexpr auto s_SurrenderData = 0x6a8; // FSurrenderData [0x2]
		constexpr auto m_fSurrenderTime = 0x6f0; // float
		constexpr auto m_XPRadius = 0x6f4; // int32_t
		constexpr auto m_MinionKillerBonus = 0x6f8; // float
		constexpr auto m_BasePlayerGoldReward = 0x6fc; // float
		constexpr auto m_fFirstBloodGoldReward = 0x700; // float
		constexpr auto m_fBasePlayerAssistGoldRewardMultipler = 0x704; // float
		constexpr auto m_fBasePlayerAssistXpRewardMultipler = 0x708; // float
		constexpr auto m_fBaseNPCAssistGoldRewardMultipler = 0x70c; // float
		constexpr auto m_fBaseNPCAssistXpRewardMultipler = 0x710; // float
		constexpr auto m_nPIESpawnTable = 0x714; // int32_t
		constexpr auto m_nTargetPlayerCountForMercs = 0x718; // int32_t
		constexpr auto m_MercsToSpawn = 0x71c; // TArray<FTgAIBotPlayersToSpawn>
		constexpr auto m_MinionGoals = 0x72c; // TArray<ObjectProperty>
		constexpr auto m_nDebugExtraCharXp = 0x73c; // int32_t
		constexpr auto m_nDebugExtraBPXp = 0x740; // int32_t
	}

	namespace n_ATgGame_RoyaleStorm {
		constexpr auto m_nTickets = 0x9c0; // int32_t
		constexpr auto m_fCanyonOriginSpawnOffset = 0x9c4; // float
		constexpr auto m_fCanyonHalfWidth = 0x9c8; // float
		constexpr auto m_fZepplinSpawnRadius = 0x9cc; // float
		constexpr auto m_pConvergeActor2 = 0x9d0; // ObjectProperty
		constexpr auto m_pCanyonEdge1 = 0x9d8; // ObjectProperty
		constexpr auto m_pCanyonEdge2 = 0x9e0; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0xd0; // char : 1
		constexpr auto ExtendedCaptionDisplay = 0xd0; // char : 1
		constexpr auto InstanceOverride = 0xd4; // FPointer
	}

	namespace n_ULightFunction {
		constexpr auto SourceMaterial = 0x60; // ObjectProperty
		constexpr auto Scale = 0x68; // FVector
		constexpr auto DisabledBrightness = 0x74; // float
	}

	namespace n_UTgAnimBlendByEmote {
		constexpr auto nmEmotePrefix = 0x168; // FName
		constexpr auto mnEmoteMovingSuffix = 0x170; // FName
		constexpr auto nmEmoteFullMovingSuffix = 0x178; // FName
		constexpr auto bForceTreatAsMovingEmoteNode = 0x180; // char : 1
		constexpr auto EmoteSequenceChildren = 0x184; // TArray<ObjectProperty>
		constexpr auto PerBoneChildren = 0x194; // TArray<ObjectProperty>
		constexpr auto FullMovingBlendLists = 0x1a4; // TArray<ObjectProperty>
	}

	namespace n_UTgAIBehaviorCondition_AmmoCostPerShot {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_AVolumePathNode {
		constexpr auto StartingRadius = 0x378; // float
		constexpr auto StartingHeight = 0x37c; // float
	}

	namespace n_UPartyBeaconClient {
		constexpr auto HostPendingRequest = 0x98; // FOnlineGameSearchResult
		constexpr auto PendingRequest = 0xa8; // FPartyReservation
		constexpr auto ClientBeaconState = 0xc4; // EPartyBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xc5; // EPartyBeaconClientRequest
		constexpr auto ReservationRequestTimeout = 0xc8; // float
		constexpr auto ReservationRequestElapsedTime = 0xcc; // float
		constexpr auto ResolverClassName = 0xd0; // FString
		constexpr auto ResolverClass = 0xe0; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0xe8; // ObjectProperty
		constexpr auto __OnReservationRequestComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __OnReservationCountUpdated__Delegate = 0x100; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnHostIsReady__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnHostHasCancelled__Delegate = 0x130; // DelegateProperty
	}

	namespace n_UTgCameraModule_SpectatorLockedView {
		constexpr auto WorldViewRotation = 0x9c; // FRotator
		constexpr auto bAutoRotate = 0xa8; // char : 1
		constexpr auto FOV = 0xac; // float
		constexpr auto ZoomIncrement = 0xb0; // float
		constexpr auto CurrentWorldViewTargetIndex = 0xb4; // int32_t
	}

	namespace n_UTgThreatModel {
		constexpr auto m_PawnsWithThreatLevels = 0x60; // TArray<ObjectProperty>
		constexpr auto m_bThreatSystemEnabled = 0x70; // char : 1
		constexpr auto m_bOcclusionSystemEnabled = 0x70; // char : 1
		constexpr auto m_bDebugThreatSystem = 0x70; // char : 1
		constexpr auto m_fThreatCoefficientProximity = 0x74; // float
		constexpr auto m_fThreatCoefficientOcclusion = 0x78; // float
		constexpr auto m_fThreatCoefficientBinnedOcclusion = 0x7c; // float
		constexpr auto m_fThreatCoefficientUlt = 0x80; // float
		constexpr auto m_fThreatCoefficientShotAt = 0x84; // float
		constexpr auto m_fThreatCoefficientSeenBy = 0x88; // float
		constexpr auto m_fThreatCoefficientDamaged = 0x8c; // float
		constexpr auto m_fThreatCoefficientFocused = 0x90; // float
		constexpr auto m_fThreatCoefficientFocusTarget = 0x94; // float
		constexpr auto m_fThreatDecayCoefficientShotAt = 0x98; // float
		constexpr auto m_fThreatDecayCoefficientSeenBy = 0x9c; // float
		constexpr auto m_fThreatDecayCoefficientUlt = 0xa0; // float
		constexpr auto m_DebugThreatSystemChannel = 0xa4; // FString
	}

	namespace n_UUIPlay {
		constexpr auto m_nPreferredRegion = 0x244; // int32_t
		constexpr auto m_nQueues = 0x248; // int32_t [0x5]
		constexpr auto m_nRank = 0x25c; // int32_t [0x5]
		constexpr auto m_nWins = 0x270; // int32_t [0x5]
		constexpr auto m_nKills = 0x284; // int32_t [0x5]
		constexpr auto m_bPopup = 0x298; // char : 1
		constexpr auto m_bRegion = 0x298; // char : 1
		constexpr auto m_bExclusiveTeam = 0x298; // char : 1
		constexpr auto m_bFinishedTutorial = 0x298; // char : 1
		constexpr auto m_bRatings = 0x298; // char : 1
		constexpr auto m_bAnimatePanels = 0x298; // char : 1
		constexpr auto m_bSoloLTEActive = 0x298; // char : 1
		constexpr auto m_bDuoLTEActive = 0x298; // char : 1
		constexpr auto m_bSquadLTEActive = 0x298; // char : 0
		constexpr auto m_bInitLTEInfo = 0x298; // char : 0
		constexpr auto m_nRegions = 0x29c; // TArray<int32_t>
		constexpr auto m_sRegionNames = 0x2ac; // TArray<FString>
		constexpr auto m_sLTETitles = 0x2bc; // FString [0x3]
		constexpr auto m_mcBack = 0x2ec; // ObjectProperty
		constexpr auto m_mcIcon = 0x2f4; // ObjectProperty
		constexpr auto m_mcHeader = 0x2fc; // ObjectProperty
		constexpr auto m_mcCrossplay = 0x304; // ObjectProperty
		constexpr auto m_mcPanel = 0x30c; // ObjectProperty [0x5]
		constexpr auto m_mcPanelName = 0x334; // ObjectProperty [0x5]
		constexpr auto m_mcPanelDesc = 0x35c; // ObjectProperty [0x5]
		constexpr auto m_mcPanelIcon = 0x384; // ObjectProperty [0x5]
		constexpr auto m_mcPanelTime = 0x3ac; // ObjectProperty [0x5]
		constexpr auto m_mcPanelTimeMask = 0x3d4; // ObjectProperty [0x5]
		constexpr auto m_mcPanelTimeText = 0x3fc; // ObjectProperty [0x5]
		constexpr auto m_mcPanelLTEBanner = 0x424; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetails = 0x44c; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsIcon = 0x474; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsName = 0x49c; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsWins = 0x4c4; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsWinsTF = 0x4ec; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsKills = 0x514; // ObjectProperty [0x5]
		constexpr auto m_mcPanelRankDetailsKillsTF = 0x53c; // ObjectProperty [0x5]
		constexpr auto m_pPlayPanelsGroup = 0x564; // ObjectProperty
		constexpr auto m_mcOption = 0x56c; // ObjectProperty [0x3]
		constexpr auto m_mcOptionName = 0x584; // ObjectProperty [0x3]
		constexpr auto m_mcOptionDesc = 0x59c; // ObjectProperty [0x3]
		constexpr auto m_pPlayOptionsGroup = 0x5b4; // ObjectProperty
		constexpr auto m_mcPopup = 0x5bc; // ObjectProperty
		constexpr auto m_mcPopupBack = 0x5c4; // ObjectProperty
		constexpr auto m_mcPopupName = 0x5cc; // ObjectProperty
		constexpr auto m_mcPopupDesc = 0x5d4; // ObjectProperty
		constexpr auto m_mcPopupFrame = 0x5dc; // ObjectProperty
		constexpr auto m_mcPopupBlocker = 0x5e4; // ObjectProperty
		constexpr auto m_pPlayPopupGroup = 0x5ec; // ObjectProperty
		constexpr auto m_mcRegion = 0x5f4; // ObjectProperty
		constexpr auto m_mcRegionDesc = 0x5fc; // ObjectProperty
		constexpr auto m_mcRegionName = 0x604; // ObjectProperty
		constexpr auto m_mcRegionBlocker = 0x60c; // ObjectProperty
		constexpr auto m_mcRegionCrossplay = 0x614; // ObjectProperty
		constexpr auto m_mcRegionButton = 0x61c; // ObjectProperty [0xc]
		constexpr auto m_mcRegionButtonIcon = 0x67c; // ObjectProperty [0xc]
		constexpr auto m_pRegionButtonGroup = 0x6dc; // ObjectProperty
		constexpr auto m_pInputHandleTeamFillX = 0x6e4; // ObjectProperty
		constexpr auto m_pInputHandleRegionY = 0x6ec; // ObjectProperty
	}

	namespace n_UMorphNodeBase {
		constexpr auto NodeName = 0x68; // FName
		constexpr auto bDrawSlider = 0x70; // char : 1
	}

	namespace n_ULensFlare {
		constexpr auto SourceElement = 0x60; // FLensFlareElement
		constexpr auto SourceMesh = 0x1f8; // ObjectProperty
		constexpr auto SourceDPG = 0x200; // ESceneDepthPriorityGroup
		constexpr auto ReflectionsDPG = 0x201; // ESceneDepthPriorityGroup
		constexpr auto Reflections = 0x204; // TArray<FLensFlareElement>
		constexpr auto OuterCone = 0x214; // float
		constexpr auto InnerCone = 0x218; // float
		constexpr auto ConeFudgeFactor = 0x21c; // float
		constexpr auto Radius = 0x220; // float
		constexpr auto bUseTrueConeCalculation = 0x224; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x224; // char : 1
		constexpr auto bRenderDebugLines = 0x224; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0x224; // char : 1
		constexpr auto MinStrength = 0x228; // float
		constexpr auto ScreenPercentageMap = 0x22c; // FRawDistributionFloat
		constexpr auto FixedRelativeBoundingBox = 0x250; // FBox
		constexpr auto CurveEdSetup = 0x26c; // ObjectProperty
		constexpr auto ReflectionCount = 0x274; // int32_t
		constexpr auto ThumbnailAngle = 0x278; // FRotator
		constexpr auto ThumbnailDistance = 0x284; // float
		constexpr auto ThumbnailImage = 0x288; // ObjectProperty
	}

	namespace n_UUIDataProvider_Settings {
		constexpr auto Settings = 0x90; // ObjectProperty
		constexpr auto bIsAListRow = 0x98; // char : 1
	}

	namespace n_ATgFogOfWarBarrier {
		constexpr auto m_bOneDirectional = 0x2a4; // char : 1
		constexpr auto m_fBlockMinimumDistance = 0x2a8; // float
	}

	namespace n_UUIComponent_ItemObtainabilityBanner {
		constexpr auto m_eObtainability = 0x120; // SimplifiedItemObtainabilityValue
	}

	namespace n_UTgDeviceForm_PeckAttack {
		constexpr auto m_AimSkelControl3P = 0x2bc; // ObjectProperty
		constexpr auto m_VelocitySkelControl3P = 0x2c4; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByZoomTransition {
		constexpr auto m_fTransitionStartTime = 0x168; // float
	}

	namespace n_UFaceFXAsset {
		constexpr auto FaceFXActor = 0x60; // FPointer
		constexpr auto RawFaceFXActorBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXSessionBytes = 0x78; // TArray<char>
		constexpr auto MountedFaceFXAnimSets = 0x88; // TArray<ObjectProperty>
		constexpr auto NumLoadErrors = 0x98; // int32_t
	}

	namespace n_UUIComponent_PlayerCurrency {
		constexpr auto m_mcCurrencyIcon = 0x120; // TArray<ObjectProperty>
		constexpr auto m_mcCurrencyTF = 0x130; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x90; // char : 1
		constexpr auto FrameRate = 0x94; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb8; // int32_t
	}

	namespace n_UUIComponent_ChestPanelTencent {
		constexpr auto m_pSprayData = 0x260; // ObjectProperty
		constexpr auto m_mcSprayIcon = 0x268; // ObjectProperty
		constexpr auto m_mcSprayIconGfx = 0x270; // ObjectProperty
		constexpr auto m_mcSprayIconCard = 0x278; // ObjectProperty
		constexpr auto m_mcSprayIconRarity = 0x280; // ObjectProperty
		constexpr auto m_mcRentalLabel = 0x288; // ObjectProperty
		constexpr auto m_mcRentalTime = 0x290; // ObjectProperty
		constexpr auto m_sSprayName = 0x298; // FString
		constexpr auto m_sChestName = 0x2a8; // FString
		constexpr auto m_nSprayIconIndex = 0x2b8; // int32_t
		constexpr auto m_nSprayRarityIndex = 0x2bc; // int32_t
		constexpr auto m_nChestIconFrame = 0x2c0; // int32_t
	}

	namespace n_USeqAct_LevelVisibility {
		constexpr auto Level = 0x120; // ObjectProperty
		constexpr auto LevelName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // char : 1
	}

	namespace n_UMobileMenuListItem {
		constexpr auto Width = 0x74; // float
		constexpr auto Height = 0x78; // float
	}

	namespace n_ATgDevice_WeaponSwap {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
	}

	namespace n_UTgEffectHeal {
		constexpr auto m_fMissingHealthInitial = 0xa0; // float
		constexpr auto m_nIntervalCount = 0xa4; // int32_t
		constexpr auto m_nSimplifiedPropertyId = 0xa8; // int32_t
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UUIComponent_OptionEntryPaged {
		constexpr auto m_Entries = 0x150; // TArray<FPagedEntry>
		constexpr auto m_nSelectedIndex = 0x160; // int32_t
		constexpr auto m_mcPagedInput = 0x164; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x16c; // ObjectProperty
		constexpr auto m_pRightArrow = 0x174; // ObjectProperty
		constexpr auto m_mcValueTF = 0x17c; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendAnimsByDirection {
		constexpr auto m_BlendSpeed = 0x1bc; // float
		constexpr auto m_bUsePlayRateByDirection = 0x1c0; // char : 1
		constexpr auto m_bIncludeStandingAnim = 0x1c0; // char : 1
		constexpr auto m_bForceStanding = 0x1c0; // char : 1
		constexpr auto m_bInterpolateWeights = 0x1c0; // char : 1
		constexpr auto m_bMirrorDirectionsWhenPawnMirrored = 0x1c0; // char : 1
		constexpr auto m_bForwardLeftCorrection = 0x1c0; // char : 1
		constexpr auto m_PlayRateByDirection = 0x1c4; // float [0x8]
		constexpr auto m_PlayRateStanding = 0x1e4; // float
		constexpr auto m_fStillThreshold = 0x1e8; // float
		constexpr auto m_DirAngle = 0x1ec; // float
		constexpr auto m_LastRelevantTime = 0x1f0; // float
	}

	namespace n_UUIComponent_ItemIcon {
		constexpr auto m_mcRarityText = 0x120; // ObjectProperty
		constexpr auto m_mcRarity = 0x128; // ObjectProperty
		constexpr auto m_mcIcon = 0x130; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x138; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsLookingAtCapturePoint {
		constexpr auto VisibilityAngle = 0x98; // float
	}

	namespace n_UTgSeqAct_GetBot {
		constexpr auto m_nBotNumber = 0x108; // int32_t
	}

	namespace n_ATgDeploy_Forge {
		constexpr auto m_bBroadcast = 0x448; // char : 1
		constexpr auto m_bDestroyOnDeath = 0x448; // char : 1
		constexpr auto s_fDuration = 0x44c; // float
		constexpr auto s_nTeam = 0x450; // int32_t
		constexpr auto s_fLockTime = 0x454; // float
		constexpr auto s_sLockName = 0x458; // FString
		constexpr auto r_nDeviceId = 0x468; // int32_t
		constexpr auto r_nDuration = 0x46c; // int32_t
		constexpr auto r_nLockPlayer = 0x470; // int32_t
	}

	namespace n_UTgAIBehaviorAction_PlayEmote {
		constexpr auto EmoteToPlay = 0x94; // EEmote
	}

	namespace n_ATgTimeDilationVolume {
		constexpr auto m_fTimeMultiplier = 0x314; // float
		constexpr auto m_bAffectInstigator = 0x318; // char : 1
		constexpr auto m_AffectedActors = 0x31c; // TArray<ObjectProperty>
		constexpr auto m_AffectedPawns = 0x32c; // TArray<ObjectProperty>
	}

	namespace n_UUIData_ChampionChests {
		constexpr auto m_Chests = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UAnimTree {
		constexpr auto AnimTreeTemplate = 0x114; // ObjectProperty
		constexpr auto bEnablePooling = 0x11c; // char : 1
		constexpr auto bUseSavedPose = 0x11c; // char : 1
		constexpr auto bBeingEdited = 0x11c; // char : 1
		constexpr auto bParentNodeArrayBuilt = 0x11c; // char : 1
		constexpr auto bRebuildAnimTickArray = 0x11c; // char : 1
		constexpr auto m_bControlSpeed = 0x11c; // char : 1
		constexpr auto AnimGroups = 0x120; // TArray<FAnimGroup>
		constexpr auto PrioritizedSkelBranches = 0x130; // TArray<FName>
		constexpr auto ComposePrePassBoneNames = 0x140; // TArray<FName>
		constexpr auto ComposePostPassBoneNames = 0x150; // TArray<FName>
		constexpr auto RootMorphNodes = 0x160; // TArray<ObjectProperty>
		constexpr auto m_AnimTreeComments = 0x170; // TArray<ObjectProperty>
		constexpr auto SkelControlLists = 0x180; // TArray<FSkelControlListHead>
		constexpr auto SavedPose = 0x190; // TArray<FBoneAtom>
		constexpr auto AnimTickArray = 0x1a0; // TArray<ObjectProperty>
		constexpr auto m_fSpeed = 0x1b0; // float
		constexpr auto m_MasterMorphWeightNodeNames = 0x1b4; // TArray<FName>
		constexpr auto m_MasterMorphWeightGroups = 0x1c4; // TArray<FName>
		constexpr auto m_HelmetMorphRestrictions = 0x1d4; // TArray<FHelmetMorphRestrictions>
	}

	namespace n_UMaterialExpressionDepthBiasedAlpha {
		constexpr auto bNormalize = 0xb0; // char : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto Alpha = 0xb8; // FExpressionInput
		constexpr auto Bias = 0xec; // FExpressionInput
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x280; // ComponentProperty
	}

	namespace n_UTgDeviceForm_DemonTeleport {
		constexpr auto m_DemonNodes3p = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_DemonNodes1p = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UUIInteractable_Button_GamepadPrompt {
		constexpr auto m_pButton = 0x118; // ObjectProperty
		constexpr auto m_mcPrompt = 0x120; // ObjectProperty
		constexpr auto m_nOptionCBHandle = 0x128; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsBotBehaviorState {
		constexpr auto TestBehaviorState = 0x98; // EBotBehaviorState
	}

	namespace n_UTgGameDC_PlayerVitals {
		constexpr auto m_fHealth = 0x170; // float
		constexpr auto m_fHealthMax = 0x174; // float
		constexpr auto m_fEnergy = 0x178; // float
		constexpr auto m_fEnergyMax = 0x17c; // float
		constexpr auto m_fBoost = 0x180; // float
		constexpr auto m_fBoostMax = 0x184; // float
		constexpr auto m_fMana = 0x188; // float
		constexpr auto m_fManaMax = 0x18c; // float
		constexpr auto m_fHealthPct = 0x190; // float
		constexpr auto m_fEnergyPct = 0x194; // float
		constexpr auto m_fBoostPct = 0x198; // float
		constexpr auto m_fManaPct = 0x19c; // float
		constexpr auto m_fXPPct = 0x1a0; // float
		constexpr auto m_nLevel = 0x1a4; // int32_t
		constexpr auto m_ReviveTimer = 0x1a8; // ObjectProperty
		constexpr auto m_RefireTimer = 0x1b0; // ObjectProperty
		constexpr auto m_RecallTimer = 0x1b8; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByVerticalAim {
		constexpr auto m_Aim = 0x114; // float
		constexpr auto m_Range = 0x118; // FVector2D
		constexpr auto m_AngleOffset = 0x120; // float
		constexpr auto m_PreviousAim = 0x124; // float
		constexpr auto bInitialized = 0x128; // char : 1
		constexpr auto m_bLoopChildrenOnRelevant = 0x128; // char : 1
		constexpr auto m_bPlayChildrenOnRelevant = 0x128; // char : 1
		constexpr auto m_AnimName_Up = 0x12c; // FName
		constexpr auto m_AnimName_Center = 0x134; // FName
		constexpr auto m_AnimName_Down = 0x13c; // FName
		constexpr auto m_SeqNode1 = 0x144; // ObjectProperty
		constexpr auto m_SeqNode2 = 0x14c; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_PoisonBolts {
		constexpr auto m_PoisonBoltTargets = 0xd0; // TArray<FPoisonBoltInfo>
		constexpr auto m_EffectGroupID = 0xe0; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NumGodsNearProjectile {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto ProjectileId = 0xa0; // int32_t
		constexpr auto GodThreshold = 0xa4; // int32_t
	}

	namespace n_UPhysXParticleSystem {
		constexpr auto MaxParticles = 0x60; // int32_t
		constexpr auto ParticleSpawnReserve = 0x64; // int32_t
		constexpr auto RBChannel = 0x68; // ERBCollisionChannel
		constexpr auto SimulationMethod = 0x69; // ESimulationMethod
		constexpr auto PacketSizeMultiplier = 0x6a; // EPacketSizeMultiplier
		constexpr auto RBCollideWithChannels = 0x6c; // FRBCollisionChannelContainer
		constexpr auto CollisionDistance = 0x70; // float
		constexpr auto RestitutionWithStaticShapes = 0x74; // float
		constexpr auto RestitutionWithDynamicShapes = 0x78; // float
		constexpr auto FrictionWithStaticShapes = 0x7c; // float
		constexpr auto FrictionWithDynamicShapes = 0x80; // float
		constexpr auto StaticFrictionWithStaticShapes = 0x84; // float
		constexpr auto StaticFrictionWithDynamicShapes = 0x88; // float
		constexpr auto bDynamicCollision = 0x8c; // char : 1
		constexpr auto bDisableGravity = 0x8c; // char : 1
		constexpr auto bStaticCollision = 0x8c; // char : 1
		constexpr auto bTwoWayCollision = 0x8c; // char : 1
		constexpr auto bDestroy = 0x8c; // char : 1
		constexpr auto bSyncFailed = 0x8c; // char : 1
		constexpr auto bIsInGame = 0x8c; // char : 1
		constexpr auto MaxMotionDistance = 0x90; // float
		constexpr auto Damping = 0x94; // float
		constexpr auto ExternalAcceleration = 0x98; // FVector
		constexpr auto RestParticleDistance = 0xa4; // float
		constexpr auto RestDensity = 0xa8; // float
		constexpr auto KernelRadiusMultiplier = 0xac; // float
		constexpr auto Stiffness = 0xb0; // float
		constexpr auto Viscosity = 0xb4; // float
		constexpr auto CollisionResponseCoefficient = 0xb8; // float
		constexpr auto CascadeScene = 0xbc; // FPointer
		constexpr auto PSys = 0xc4; // FPointer
	}

	namespace n_AGameAIController {
		constexpr auto CommandList = 0x494; // ObjectProperty
		constexpr auto bHasRunawayCommandList = 0x49c; // char : 1
		constexpr auto bAILogging = 0x49c; // char : 1
		constexpr auto bAILogToWindow = 0x49c; // char : 1
		constexpr auto bFlushAILogEachLine = 0x49c; // char : 1
		constexpr auto bMapBasedLogName = 0x49c; // char : 1
		constexpr auto bAIDrawDebug = 0x49c; // char : 1
		constexpr auto bAIBroken = 0x49c; // char : 1
		constexpr auto AILogFile = 0x4a0; // ObjectProperty
		constexpr auto DebugTextMaxLen = 0x4a8; // float
		constexpr auto CommandHistory = 0x4ac; // TArray<FAICmdHistoryItem>
		constexpr auto CommandHistoryNum = 0x4bc; // int32_t
		constexpr auto AILogFilter = 0x4c0; // TArray<FName>
		constexpr auto DemoActionString = 0x4d0; // FString
	}

	namespace n_UTgAnimNodeBlendByStrafe {
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
		constexpr auto m_fBlendTime = 0x12c; // float
	}

	namespace n_USoundMode {
		constexpr auto bApplyEQ = 0x60; // char : 1
		constexpr auto EQSettings = 0x64; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x88; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x98; // float
		constexpr auto FadeInTime = 0x9c; // float
		constexpr auto Duration = 0xa0; // float
		constexpr auto FadeOutTime = 0xa4; // float
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto SourceTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto SourceSocketName = 0x74; // FName
		constexpr auto bSourceAbsolute = 0x7c; // char : 1
		constexpr auto bLockSource = 0x7c; // char : 1
		constexpr auto bLockSourceTangent = 0x7c; // char : 1
		constexpr auto bLockSourceStength = 0x7c; // char : 1
		constexpr auto Source = 0x80; // FRawDistributionVector
		constexpr auto SourceTangent = 0xa4; // FRawDistributionVector
		constexpr auto SourceStrength = 0xc8; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorAction_GroupUp {
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
		constexpr auto MinDistance = 0xa0; // float
		constexpr auto MaxDistance = 0xa4; // float
	}

	namespace n_UUIHudReport {
		constexpr auto m_nPlayerIndex = 0x244; // int32_t
		constexpr auto m_bReasons = 0x248; // char : 1
		constexpr auto m_nReported = 0x24c; // int32_t [0x6]
		constexpr auto m_nReportMessages = 0x264; // int32_t [0x6]
		constexpr auto m_mcBack = 0x27c; // ObjectProperty
		constexpr auto m_mcIcon = 0x284; // ObjectProperty
		constexpr auto m_mcHeader = 0x28c; // ObjectProperty
		constexpr auto m_mcPlayers = 0x294; // ObjectProperty
		constexpr auto m_mcPlayersKiller = 0x29c; // ObjectProperty
		constexpr auto m_mcPlayersTeammates = 0x2a4; // ObjectProperty
		constexpr auto m_mcPlayersReport = 0x2ac; // ObjectProperty [0x6]
		constexpr auto m_mcPlayersButton = 0x2dc; // ObjectProperty [0x6]
		constexpr auto m_mcReasons = 0x30c; // ObjectProperty
		constexpr auto m_mcReasonsInput = 0x314; // ObjectProperty
		constexpr auto m_mcReasonsButton = 0x31c; // ObjectProperty [0x6]
		constexpr auto m_pPlayersInputGroup = 0x34c; // ObjectProperty
		constexpr auto m_pReasonsInputGroup = 0x354; // ObjectProperty
		constexpr auto m_pViewProfileAction = 0x35c; // ObjectProperty
		constexpr auto m_nReportablePlayers = 0x364; // int32_t
	}

	namespace n_ACamera {
		constexpr auto PCOwner = 0x280; // ObjectProperty
		constexpr auto CameraStyle = 0x288; // FName
		constexpr auto DefaultFOV = 0x290; // float
		constexpr auto bLockedFOV = 0x294; // char : 1
		constexpr auto bConstrainAspectRatio = 0x294; // char : 1
		constexpr auto bEnableFading = 0x294; // char : 1
		constexpr auto bFadeAudio = 0x294; // char : 1
		constexpr auto bForceDisableTemporalAA = 0x294; // char : 1
		constexpr auto bEnableColorScaling = 0x294; // char : 1
		constexpr auto bEnableColorScaleInterp = 0x294; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x294; // char : 1
		constexpr auto bDebugClientSideCamera = 0x294; // char : 0
		constexpr auto bShouldSendClientSideCameraUpdate = 0x294; // char : 0
		constexpr auto LockedFOV = 0x298; // float
		constexpr auto ConstrainedAspectRatio = 0x29c; // float
		constexpr auto DefaultAspectRatio = 0x2a0; // float
		constexpr auto OffAxisYawAngle = 0x2a4; // float
		constexpr auto OffAxisPitchAngle = 0x2a8; // float
		constexpr auto FadeColor = 0x2ac; // FColor
		constexpr auto FadeAmount = 0x2b0; // float
		constexpr auto CamOverridePostProcessAlpha = 0x2b4; // float
		constexpr auto CamPostProcessSettings = 0x2b8; // FPostProcessSettings
		constexpr auto RenderingOverrides = 0x438; // FRenderingPerformanceOverrides
		constexpr auto ColorScale = 0x43c; // FVector
		constexpr auto DesiredColorScale = 0x448; // FVector
		constexpr auto OriginalColorScale = 0x454; // FVector
		constexpr auto ColorScaleInterpDuration = 0x460; // float
		constexpr auto ColorScaleInterpStartTime = 0x464; // float
		constexpr auto CameraCache = 0x468; // FTCameraCache
		constexpr auto LastFrameCameraCache = 0x490; // FTCameraCache
		constexpr auto ViewTarget = 0x4b8; // FTViewTarget
		constexpr auto PendingViewTarget = 0x4f8; // FTViewTarget
		constexpr auto BlendTimeToGo = 0x538; // float
		constexpr auto BlendParams = 0x53c; // FViewTargetTransitionParams
		constexpr auto ModifierList = 0x54c; // TArray<ObjectProperty>
		constexpr auto FreeCamDistance = 0x55c; // float
		constexpr auto FreeCamOffset = 0x560; // FVector
		constexpr auto FadeAlpha = 0x56c; // FVector2D
		constexpr auto FadeTime = 0x574; // float
		constexpr auto FadeTimeRemaining = 0x578; // float
		constexpr auto CameraLensEffects = 0x57c; // TArray<ObjectProperty>
		constexpr auto CameraShakeCamMod = 0x58c; // ObjectProperty
		constexpr auto CameraShakeCamModClass = 0x594; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x59c; // ObjectProperty [0x8]
		constexpr auto ActiveAnims = 0x5dc; // TArray<ObjectProperty>
		constexpr auto FreeAnims = 0x5ec; // TArray<ObjectProperty>
		constexpr auto AnimCameraActor = 0x5fc; // ObjectProperty
	}

	namespace n_ATgDevice_GourdMod {
		constexpr auto m_ImmuneTargets = 0xaec; // TArray<ObjectProperty>
		constexpr auto m_ImmuneTimes = 0xafc; // TArray<float>
	}

	namespace n_UTgAIBehaviorAction_SelectAllyAttackerAsTarget {
		constexpr auto TimeThreshold = 0xa8; // float
		constexpr auto AllyDistanceThreshold = 0xac; // float
		constexpr auto AttackerDistanceThreshold = 0xb0; // float
	}

	namespace n_UDominantSpotLightComponent {
		constexpr auto DominantLightShadowInfo = 0x270; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x320; // FArray_Mirror
	}

	namespace n_UTgAIUtilityFilter_InsideActiveRallyPoint {
		constexpr auto bAllowEnemyRally = 0xc0; // char : 1
	}

	namespace n_ATgDevice_DrogozInhand {
		constexpr auto m_DrogozLeg2 = 0xaec; // ObjectProperty
		constexpr auto m_vSalvoProjectileSpawnOffset = 0xaf4; // FVector
		constexpr auto m_bStartedSalvo = 0xb00; // char : 1
		constexpr auto m_SalvoDevice = 0xb04; // ObjectProperty
		constexpr auto m_nSalvoRockets = 0xb0c; // int32_t
	}

	namespace n_UTgSeqAct_SelectBestSpawnPoint {
		constexpr auto Points = 0x108; // TArray<ObjectProperty>
		constexpr auto PlayerReceived = 0x118; // ObjectProperty
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb4; // FRawDistributionFloat
	}

	namespace n_UTgSeqAct_BeaconEntranceSetActive {
		constexpr auto m_bSetActive = 0x108; // char : 1
	}

	namespace n_UUIAcquisition {
		constexpr auto VfTable_IAcquisitionHandler = 0x244; // FPointer
		constexpr auto m_Items = 0x24c; // TArray<FAcquiredItem>
		constexpr auto m_nOffset = 0x25c; // int32_t
		constexpr auto m_bShownItem = 0x260; // char : 1
		constexpr auto m_bFoundNitroReceipt = 0x260; // char : 1
		constexpr auto m_bHovering = 0x260; // char : 1
		constexpr auto m_bRotating = 0x260; // char : 1
		constexpr auto m_fItemTimeout = 0x264; // float
		constexpr auto m_fPreviousPosX = 0x268; // float
		constexpr auto m_mcBack = 0x26c; // ObjectProperty
		constexpr auto m_mcName = 0x274; // ObjectProperty
		constexpr auto m_mcDesc = 0x27c; // ObjectProperty
		constexpr auto m_mcRotate = 0x284; // ObjectProperty
		constexpr auto m_mcHoverName = 0x28c; // ObjectProperty
		constexpr auto m_mcHoverDesc = 0x294; // ObjectProperty
		constexpr auto m_mcHeader = 0x29c; // ObjectProperty
		constexpr auto m_mcHeaderName = 0x2a4; // ObjectProperty
		constexpr auto m_mcHeaderDesc = 0x2ac; // ObjectProperty
		constexpr auto m_mcHeaderRank = 0x2b4; // ObjectProperty
		constexpr auto m_mcHeaderRankLevel = 0x2bc; // ObjectProperty
		constexpr auto m_mcHeaderRankLevelA = 0x2c4; // ObjectProperty
		constexpr auto m_mcHeaderRankLevelB = 0x2cc; // ObjectProperty
		constexpr auto m_mcHeaderRankLevelC = 0x2d4; // ObjectProperty
		constexpr auto m_mcArrow = 0x2dc; // ObjectProperty [0x2]
		constexpr auto m_mcItem = 0x2ec; // ObjectProperty [0x5]
		constexpr auto m_mcItemIcon = 0x314; // ObjectProperty [0x5]
		constexpr auto m_mcItemFrame = 0x33c; // ObjectProperty [0x5]
		constexpr auto m_mcItemRarity = 0x364; // ObjectProperty [0x5]
		constexpr auto m_mcItemTexture = 0x38c; // ObjectProperty [0x5]
		constexpr auto m_mcItemIconFrame = 0x3b4; // ObjectProperty [0x5]
		constexpr auto m_pItemPreviewStack = 0x3dc; // ObjectProperty
		constexpr auto m_pAcquisitionItemsGroup = 0x3e4; // ObjectProperty
		constexpr auto m_pInputHandleBumperLeft = 0x3ec; // ObjectProperty
		constexpr auto m_pInputHandleBumperRight = 0x3f4; // ObjectProperty
	}

	namespace n_ATgAIVolume {
		constexpr auto LaneIndex = 0x2bc; // int32_t
		constexpr auto TaskforceIndex = 0x2c0; // int32_t
		constexpr auto bEnabled = 0x2c4; // char : 1
	}

	namespace n_USeqAct_ToggleInput {
		constexpr auto bToggleMovement = 0x108; // char : 1
		constexpr auto bToggleTurning = 0x108; // char : 1
	}

	namespace n_ATgDevice_CoveredCharge {
		constexpr auto m_bHasHitTarget = 0xb60; // char : 1
		constexpr auto m_fTimeToStop = 0xb64; // float
	}

	namespace n_UWebResponse {
		constexpr auto Headers = 0x60; // TArray<FString>
		constexpr auto ReplacementMap = 0x70; // FMap_Mirror
		constexpr auto IncludePath = 0xb8; // FString
		constexpr auto CharSet = 0xc8; // FString
		constexpr auto Connection = 0xd8; // ObjectProperty
		constexpr auto bSentText = 0xe0; // char : 1
		constexpr auto bSentResponse = 0xe0; // char : 1
	}

	namespace n_UTgGameDC_Chat {
		constexpr auto c_CurrentMessage = 0x60; // FQueueMessage
		constexpr auto c_QueuedMessages = 0x90; // TArray<FQueueMessage>
		constexpr auto c_fProcessTime = 0xa0; // float
		constexpr auto c_DeferredMessages = 0xa4; // TArray<ObjectProperty>
		constexpr auto m_scFirstBlood = 0xb4; // ObjectProperty
		constexpr auto m_MessageTokens = 0xbc; // TArray<FMessageToken>
		constexpr auto m_fLastEnemyKilledAllyMessageTime = 0xcc; // float
		constexpr auto m_fMinEnemyKilledAllyMessageTime = 0xd0; // float
		constexpr auto m_fLastAllyKilledEnemyMessageTime = 0xd4; // float
		constexpr auto m_fMinAllyKilledEnemyMessageTime = 0xd8; // float
	}

	namespace n_UUIComponent_PreviewRotator {
		constexpr auto m_bHovering = 0x140; // char : 1
		constexpr auto m_bRotating = 0x140; // char : 1
		constexpr auto m_fPreviousPosX = 0x144; // float
		constexpr auto m_fRotationFactor = 0x148; // float
		constexpr auto m_LeftPressInputAction = 0x14c; // ObjectProperty
		constexpr auto m_LeftReleaseInputAction = 0x154; // ObjectProperty
	}

	namespace n_UUIBattlePassPurchase {
		constexpr auto m_fPurchaseFlash = 0x244; // float
		constexpr auto m_mcBack = 0x248; // ObjectProperty
		constexpr auto m_mcName = 0x250; // ObjectProperty
		constexpr auto m_mcDesc = 0x258; // ObjectProperty
		constexpr auto m_mcIcon = 0x260; // ObjectProperty
		constexpr auto m_mcTotal = 0x268; // ObjectProperty
		constexpr auto m_mcTotalCrowns = 0x270; // ObjectProperty
		constexpr auto m_mcShadow = 0x278; // ObjectProperty [0x3]
		constexpr auto m_mcPanel = 0x290; // ObjectProperty [0x3]
		constexpr auto m_mcPanelIcon = 0x2a8; // ObjectProperty [0x3]
		constexpr auto m_mcPanelName = 0x2c0; // ObjectProperty [0x3]
		constexpr auto m_mcPanelDesc = 0x2d8; // ObjectProperty [0x3]
		constexpr auto m_mcPanelBanner = 0x2f0; // ObjectProperty [0x3]
		constexpr auto m_mcPanelPurchase = 0x308; // ObjectProperty [0x3]
		constexpr auto m_mcPanelPurchaseFlash = 0x320; // ObjectProperty [0x3]
		constexpr auto m_mcPanelPurchasePrice = 0x338; // ObjectProperty [0x3]
		constexpr auto m_mcPanelPurchasePriceDiscount = 0x350; // ObjectProperty [0x3]
		constexpr auto m_pPurchaseGroup = 0x368; // ObjectProperty
	}

	namespace n_UOnlineSubsystemSteamworks {
		constexpr auto VfTable_PComOnlinePlayerInterface = 0x288; // FPointer
		constexpr auto bStoringAchievement = 0x290; // char : 1
		constexpr auto bClientStatsStorePending = 0x290; // char : 1
		constexpr auto bGSStatsStoresSuccess = 0x290; // char : 1
		constexpr auto bNeedsKeyboardTicking = 0x290; // char : 1
		constexpr auto bLastHasConnection = 0x290; // char : 1
		constexpr auto bIsStatsSessionOk = 0x290; // char : 1
		constexpr auto bHasSteamworksAccount = 0x290; // char : 1
		constexpr auto bShouldUseMcp = 0x290; // char : 1
		constexpr auto TotalGSStatsStoresPending = 0x294; // int32_t
		constexpr auto UserStatsReceivedState = 0x298; // EOnlineEnumerationReadState
		constexpr auto LoggedInStatus = 0x299; // ELoginStatus
		constexpr auto bWasKeyboardInputCanceled = 0x29a; // char
		constexpr auto CurrentNotificationPosition = 0x29b; // ENetworkNotificationPosition
		constexpr auto CachedGameInt = 0x29c; // ObjectProperty
		constexpr auto LocalProfileName = 0x2a4; // FString
		constexpr auto LoggedInPlayerName = 0x2b4; // FString
		constexpr auto LoggedInPlayerId = 0x2c4; // FUniqueNetId
		constexpr auto LoggedInPlayerNum = 0x2cc; // int32_t
		constexpr auto ProfileDataDirectory = 0x2d0; // FString
		constexpr auto ProfileDataExtension = 0x2e0; // FString
		constexpr auto WriteProfileSettingsDelegates = 0x2f0; // TArray<DelegateProperty>
		constexpr auto CachedProfile = 0x300; // ObjectProperty
		constexpr auto LocalPlayerStorageReadDelegates = 0x308; // TArray<DelegateProperty>
		constexpr auto LocalPlayerStorageWriteDelegates = 0x318; // TArray<DelegateProperty>
		constexpr auto RemotePlayerStorageReadDelegates = 0x328; // TArray<DelegateProperty>
		constexpr auto SpeechRecognitionCompleteDelegates = 0x338; // TArray<DelegateProperty>
		constexpr auto ReadFriendsDelegates = 0x348; // TArray<DelegateProperty>
		constexpr auto FriendsChangeDelegates = 0x358; // TArray<DelegateProperty>
		constexpr auto MutingChangeDelegates = 0x368; // TArray<DelegateProperty>
		constexpr auto LoginChangeDelegates = 0x378; // TArray<DelegateProperty>
		constexpr auto LoginFailedDelegates = 0x388; // TArray<DelegateProperty>
		constexpr auto ContentPurchaseResponseDelegates = 0x398; // TArray<DelegateProperty>
		constexpr auto LogoutCompletedDelegates = 0x3a8; // TArray<DelegateProperty>
		constexpr auto AccountCreateDelegates = 0x3b8; // TArray<DelegateProperty>
		constexpr auto TalkingDelegates = 0x3c8; // TArray<DelegateProperty>
		constexpr auto ReadOnlineStatsCompleteDelegates = 0x3d8; // TArray<DelegateProperty>
		constexpr auto FlushOnlineStatsDelegates = 0x3e8; // TArray<DelegateProperty>
		constexpr auto ConnectionStatusChangeDelegates = 0x3f8; // TArray<DelegateProperty>
		constexpr auto ControllerChangeDelegates = 0x408; // TArray<DelegateProperty>
		constexpr auto LinkStatusDelegates = 0x418; // TArray<DelegateProperty>
		constexpr auto ReadTitleFileCompleteDelegates = 0x428; // TArray<DelegateProperty>
		constexpr auto AchievementDelegates = 0x438; // TArray<DelegateProperty>
		constexpr auto AchievementReadDelegates = 0x448; // TArray<DelegateProperty>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0x458; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0x468; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0x478; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0x488; // TArray<DelegateProperty>
		constexpr auto SharedFileReadCompleteDelegates = 0x498; // TArray<DelegateProperty>
		constexpr auto SharedFileWriteCompleteDelegates = 0x4a8; // TArray<DelegateProperty>
		constexpr auto TokenAndSignatureRetrievedDelegates = 0x4b8; // TArray<DelegateProperty>
		constexpr auto PrivilegeLevelCheckedDelegates = 0x4c8; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersDelegates = 0x4d8; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersByUniqueNetIdsDelegates = 0x4e8; // TArray<DelegateProperty>
		constexpr auto FilterTextDelegates = 0x4f8; // TArray<DelegateProperty>
		constexpr auto CurrentLocalTalker = 0x508; // FLocalTalkerSteam
		constexpr auto RemoteTalkers = 0x514; // TArray<FRemoteTalker>
		constexpr auto GameID = 0x524; // int32_t
		constexpr auto CurrentStatsRead = 0x528; // ObjectProperty
		constexpr auto PendingStats = 0x530; // TArray<FPendingPlayerStats>
		constexpr auto KeyboardResultsString = 0x540; // FString
		constexpr auto KeyboardInputDelegates = 0x550; // TArray<DelegateProperty>
		constexpr auto FriendInviteReceivedDelegates = 0x560; // TArray<DelegateProperty>
		constexpr auto FriendMessageReceivedDelegates = 0x570; // TArray<DelegateProperty>
		constexpr auto AddFriendByNameCompleteDelegates = 0x580; // TArray<DelegateProperty>
		constexpr auto ProfileCache = 0x590; // FProfileSettingsCache
		constexpr auto PlayerStorageCache = 0x5c8; // ObjectProperty
		constexpr auto CachedFriendMessage = 0x5d0; // FString
		constexpr auto DeviceCache = 0x5e0; // FDeviceIdCache
		constexpr auto LocationUrlsForInvites = 0x604; // TArray<FString>
		constexpr auto LocationUrl = 0x614; // FString
		constexpr auto ReceivedGameInviteDelegates = 0x624; // TArray<DelegateProperty>
		constexpr auto JoinFriendGameCompleteDelegates = 0x634; // TArray<DelegateProperty>
		constexpr auto GetNumberOfCurrentPlayersCompleteDelegates = 0x644; // TArray<DelegateProperty>
		constexpr auto RegisterHostStatGuidCompleteDelegates = 0x654; // TArray<DelegateProperty>
		constexpr auto CachedFriendMessages = 0x664; // TArray<FOnlineFriendMessage>
		constexpr auto StatusMappings = 0x674; // TArray<FOnlineStatusMapping>
		constexpr auto DefaultStatus = 0x684; // FString
		constexpr auto GameInviteMessage = 0x694; // FString
		constexpr auto ControllerStates = 0x6a4; // FControllerConnectionState [0x4]
		constexpr auto ConnectionPresenceTimeInterval = 0x6c4; // float
		constexpr auto ConnectionPresenceElapsedTime = 0x6c8; // float
		constexpr auto EncryptedProductKey = 0x6cc; // FString
		constexpr auto MuteList = 0x6dc; // TArray<FUniqueNetId>
		constexpr auto UserCloudFiles = 0x6ec; // TArray<FSteamUserCloud>
		constexpr auto UserCloudMetadata = 0x6fc; // TArray<FSteamUserCloudMetadata>
		constexpr auto SharedFileCache = 0x70c; // TArray<FTitleFile>
		constexpr auto QueuedAvatarRequests = 0x71c; // TArray<FQueuedAvatarRequest>
		constexpr auto AchievementMappings = 0x72c; // TArray<FAchievementMappingInfo>
		constexpr auto PendingAchievementProgress = 0x73c; // TArray<FAchievementProgressStat>
		constexpr auto LeaderboardList = 0x74c; // TArray<FLeaderboardTemplate>
		constexpr auto DeferredLeaderboardReads = 0x75c; // TArray<FDeferredLeaderboardRead>
		constexpr auto DeferredLeaderboardWrites = 0x76c; // TArray<FDeferredLeaderboardWrite>
		constexpr auto PendingLeaderboardStats = 0x77c; // TArray<FDeferredLeaderboardWrite>
		constexpr auto LeaderboardNameMappings = 0x78c; // TArray<FViewIdToLeaderboardName>
		constexpr auto GameServerStatsMappings = 0x79c; // TArray<int32_t>
		constexpr auto CachedAuthInt = 0x7ac; // ObjectProperty
		constexpr auto PendingRedirects = 0x7b4; // TArray<FIpAddr>
		constexpr auto __OnLoginChange__Delegate = 0x7c4; // DelegateProperty
		constexpr auto __OnLoginCancelled__Delegate = 0x7d4; // DelegateProperty
		constexpr auto __OnMutingChange__Delegate = 0x7e4; // DelegateProperty
		constexpr auto __OnFriendsChange__Delegate = 0x7f4; // DelegateProperty
		constexpr auto __OnLoginFailed__Delegate = 0x804; // DelegateProperty
		constexpr auto __OnLogoutCompleted__Delegate = 0x814; // DelegateProperty
		constexpr auto __OnLoginStatusChange__Delegate = 0x824; // DelegateProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x834; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x844; // DelegateProperty
		constexpr auto __OnReadPlayerStorageComplete__Delegate = 0x854; // DelegateProperty
		constexpr auto __OnReadPlayerStorageForNetIdComplete__Delegate = 0x864; // DelegateProperty
		constexpr auto __OnWritePlayerStorageComplete__Delegate = 0x874; // DelegateProperty
		constexpr auto __OnReadFriendsComplete__Delegate = 0x884; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x894; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x8a4; // DelegateProperty
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x8b4; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x8c4; // DelegateProperty
		constexpr auto __OnLinkStatusChange__Delegate = 0x8d4; // DelegateProperty
		constexpr auto __OnExternalUIChange__Delegate = 0x8e4; // DelegateProperty
		constexpr auto __OnControllerChange__Delegate = 0x8f4; // DelegateProperty
		constexpr auto __OnConnectionStatusChange__Delegate = 0x904; // DelegateProperty
		constexpr auto __OnStorageDeviceChange__Delegate = 0x914; // DelegateProperty
		constexpr auto __OnReadTitleFileComplete__Delegate = 0x924; // DelegateProperty
		constexpr auto __OnCreateOnlineAccountCompleted__Delegate = 0x934; // DelegateProperty
		constexpr auto __OnKeyboardInputComplete__Delegate = 0x944; // DelegateProperty
		constexpr auto __OnAddFriendByNameComplete__Delegate = 0x954; // DelegateProperty
		constexpr auto __OnFriendInviteReceived__Delegate = 0x964; // DelegateProperty
		constexpr auto __OnReceivedGameInvite__Delegate = 0x974; // DelegateProperty
		constexpr auto __OnJoinFriendGameComplete__Delegate = 0x984; // DelegateProperty
		constexpr auto __OnFriendMessageReceived__Delegate = 0x994; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0x9a4; // DelegateProperty
		constexpr auto __OnContentPurchaseResponse__Delegate = 0x9b4; // DelegateProperty
		constexpr auto __OnDeviceSelectionComplete__Delegate = 0x9c4; // DelegateProperty
		constexpr auto __OnUnlockAchievementComplete__Delegate = 0x9d4; // DelegateProperty
		constexpr auto __OnProfileDataChanged__Delegate = 0x9e4; // DelegateProperty
		constexpr auto __OnReadAchievementsComplete__Delegate = 0x9f4; // DelegateProperty
		constexpr auto __OnReadOnlineAvatarComplete__Delegate = 0xa04; // DelegateProperty
		constexpr auto __OnGetNumberOfCurrentPlayersComplete__Delegate = 0xa14; // DelegateProperty
		constexpr auto __OnReadCrossTitleProfileSettingsComplete__Delegate = 0xa24; // DelegateProperty
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0xa34; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0xa44; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0xa54; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0xa64; // DelegateProperty
		constexpr auto __OnReadSharedFileComplete__Delegate = 0xa74; // DelegateProperty
		constexpr auto __OnWriteSharedFileComplete__Delegate = 0xa84; // DelegateProperty
		constexpr auto __OnTokenAndSignatureRetrieved__Delegate = 0xa94; // DelegateProperty
		constexpr auto __OnPrivilegeLevelChecked__Delegate = 0xaa4; // DelegateProperty
		constexpr auto __OnStatisticChanged__Delegate = 0xab4; // DelegateProperty
		constexpr auto __OnCurrentUserChanged__Delegate = 0xac4; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsers__Delegate = 0xad4; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsersByUniqueNetIds__Delegate = 0xae4; // DelegateProperty
		constexpr auto __OnFilterText__Delegate = 0xaf4; // DelegateProperty
		constexpr auto __OnSystemUserControllerPairingChanged__Delegate = 0xb04; // DelegateProperty
		constexpr auto __OnShowGamerCardComplete__Delegate = 0xb14; // DelegateProperty
		constexpr auto __OnAccountPickerComplete__Delegate = 0xb24; // DelegateProperty
		constexpr auto __OnUserAccountInfoRetrieved__Delegate = 0xb34; // DelegateProperty
		constexpr auto __OnRemoteTalkerStatusChange__Delegate = 0xb44; // DelegateProperty
		constexpr auto __OnShowComposeMessageUIComplete__Delegate = 0xb54; // DelegateProperty
		constexpr auto __OnPeoplePickerComplete__Delegate = 0xb64; // DelegateProperty
		constexpr auto __OnAcceptReceivedData__Delegate = 0xb74; // DelegateProperty
		constexpr auto __OnShowHelpComplete__Delegate = 0xb84; // DelegateProperty
		constexpr auto __OnReadOnlineProfilesComplete__Delegate = 0xb94; // DelegateProperty
		constexpr auto __OnRegisterLocalTalkerComplete__Delegate = 0xba4; // DelegateProperty
		constexpr auto __OnUnregisterLocalTalkerComplete__Delegate = 0xbb4; // DelegateProperty
		constexpr auto __OnUnregisterRemoteTalkerComplete__Delegate = 0xbc4; // DelegateProperty
	}

	namespace n_UAnimNotify_Rumble {
		constexpr auto PredefinedWaveForm = 0x68; // UWaveFormBase*
		constexpr auto WaveForm = 0x70; // ObjectProperty
		constexpr auto bCheckForBasedPlayer = 0x78; // char : 1
		constexpr auto EffectRadius = 0x7c; // float
	}

	namespace n_UDrawCapsuleComponent {
		constexpr auto CapsuleColor = 0x24c; // FColor
		constexpr auto CapsuleMaterial = 0x250; // ObjectProperty
		constexpr auto CapsuleHeight = 0x258; // float
		constexpr auto CapsuleRadius = 0x25c; // float
		constexpr auto bDrawWireCapsule = 0x260; // char : 1
		constexpr auto bDrawLitCapsule = 0x260; // char : 1
		constexpr auto bDrawOnlyIfSelected = 0x260; // char : 1
	}

	namespace n_USoundNodeAmbient {
		constexpr auto bAttenuate = 0x74; // char : 1
		constexpr auto bSpatialize = 0x74; // char : 1
		constexpr auto bAttenuateWithLPF = 0x74; // char : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto DistanceModel = 0x7c; // SoundDistanceModel
		constexpr auto RadiusMin = 0x80; // float
		constexpr auto RadiusMax = 0x84; // float
		constexpr auto LPFRadiusMin = 0x88; // float
		constexpr auto LPFRadiusMax = 0x8c; // float
		constexpr auto PitchMin = 0x90; // float
		constexpr auto PitchMax = 0x94; // float
		constexpr auto VolumeMin = 0x98; // float
		constexpr auto VolumeMax = 0x9c; // float
		constexpr auto SoundSlots = 0xa0; // TArray<FAmbientSoundSlot>
	}

	namespace n_USkelControlWheel {
		constexpr auto WheelDisplacement = 0x100; // float
		constexpr auto WheelMaxRenderDisplacement = 0x104; // float
		constexpr auto WheelRoll = 0x108; // float
		constexpr auto WheelRollAxis = 0x10c; // EAxis
		constexpr auto WheelSteeringAxis = 0x10d; // EAxis
		constexpr auto WheelSteering = 0x110; // float
		constexpr auto bInvertWheelRoll = 0x114; // char : 1
		constexpr auto bInvertWheelSteering = 0x114; // char : 1
	}

	namespace n_UImageReflectionShadowPlaneComponent {
		constexpr auto bEnabled = 0x24c; // char : 1
		constexpr auto ReflectionPlane = 0x250; // FPlane
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto SelectionMethod = 0x70; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x74; // char : 1
		constexpr auto bInheritSourceRotation = 0x74; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x78; // float
		constexpr auto InheritSourceRotationScale = 0x7c; // float
	}

	namespace n_UUIResourceCombinationProvider {
		constexpr auto StaticDataProvider = 0x70; // ObjectProperty
		constexpr auto ProfileProvider = 0x78; // ObjectProperty
	}

	namespace n_USeqEvent_HudRenderImage {
		constexpr auto DisplayColor = 0x140; // FLinearColor
		constexpr auto DisplayLocation = 0x150; // FVector
		constexpr auto DisplayTexture = 0x15c; // ObjectProperty
		constexpr auto XL = 0x164; // float
		constexpr auto YL = 0x168; // float
		constexpr auto U = 0x16c; // float
		constexpr auto V = 0x170; // float
		constexpr auto UL = 0x174; // float
		constexpr auto VL = 0x178; // float
	}

	namespace n_ATgDeploy_Shard {
		constexpr auto m_fDelayedPickupTime = 0x4e0; // float
		constexpr auto m_DelayedPickupPawn = 0x4e4; // ObjectProperty
	}

	namespace n_ATgDeploy_HealingTotem {
		constexpr auto r_fRadiusScale = 0x448; // float
		constexpr auto r_bHasHealingRain = 0x44c; // char : 1
		constexpr auto r_bHasWindTotem = 0x44c; // char : 1
		constexpr auto r_fMonolithReduction = 0x450; // float
		constexpr auto r_fPersistTime = 0x454; // float
		constexpr auto m_CachedPawnOwner = 0x458; // ObjectProperty
	}

	namespace n_UUIDataLeague {
		constexpr auto dwLeagueId = 0x60; // Fdword
		constexpr auto m_TierArray = 0x64; // TArray<ObjectProperty>
		constexpr auto m_Tiers = 0x74; // TMap<None, None>
		constexpr auto m_PlayerArray = 0xbc; // TArray<ObjectProperty>
		constexpr auto m_Players = 0xcc; // TMap<None, None>
	}

	namespace n_UTgSeqCond_HasCondition {
		constexpr auto ConditionList = 0xec; // ConditionType
	}

	namespace n_ALandscape {
		constexpr auto LayerNames = 0x3bc; // TArray<FName>
		constexpr auto LayerInfos = 0x3cc; // TArray<FLandscapeLayerInfo>
	}

	namespace n_UHavokNavigationHandle {
		constexpr auto PathPoints = 0x1b0; // TArray<FCachedPathItem>
		constexpr auto PathingNavMeshType = 0x1c0; // EHavokNavigationMeshType
		constexpr auto CurrEdgeType = 0x1c1; // EHavokEdgeType
		constexpr auto LastClearPathTime = 0x1c4; // float
		constexpr auto ClearPathTime = 0x1c8; // float
		constexpr auto OpenSetSizeMultiplier = 0x1cc; // int32_t
		constexpr auto SearchStateSizeMultiplier = 0x1d0; // int32_t
		constexpr auto HierarchicalOpenSetSizeMultiplier = 0x1d4; // int32_t
		constexpr auto HierarchicalSearchStateSizeMultiplier = 0x1d8; // int32_t
		constexpr auto MaxIterations = 0x1dc; // int32_t
		constexpr auto HierarchicalMaxIterations = 0x1e0; // int32_t
		constexpr auto PreferHierarchicalSearch = 0x1e4; // char : 1
		constexpr auto UseHierarchicalSearch = 0x1e4; // char : 1
	}

	namespace n_ANavigationPoint {
		constexpr auto bEndPoint = 0x280; // char : 1
		constexpr auto bTransientEndPoint = 0x280; // char : 1
		constexpr auto bHideEditorPaths = 0x280; // char : 1
		constexpr auto bCanReach = 0x280; // char : 1
		constexpr auto bBlocked = 0x280; // char : 1
		constexpr auto bOneWayPath = 0x280; // char : 1
		constexpr auto bNeverUseStrafing = 0x280; // char : 1
		constexpr auto bAlwaysUseStrafing = 0x280; // char : 1
		constexpr auto bForceNoStrafing = 0x280; // char : 0
		constexpr auto bAutoBuilt = 0x280; // char : 0
		constexpr auto bSpecialMove = 0x280; // char : 0
		constexpr auto bNoAutoConnect = 0x280; // char : 0
		constexpr auto bNotBased = 0x280; // char : 0
		constexpr auto bPathsChanged = 0x280; // char : 0
		constexpr auto bDestinationOnly = 0x280; // char : 0
		constexpr auto bSourceOnly = 0x280; // char : 0
		constexpr auto bSpecialForced = 0x280; // char : 0
		constexpr auto bMustBeReachable = 0x280; // char : 0
		constexpr auto bBlockable = 0x280; // char : 0
		constexpr auto bFlyingPreferred = 0x280; // char : 0
		constexpr auto bMayCausePain = 0x280; // char : 0
		constexpr auto bAlreadyVisited = 0x280; // char : 0
		constexpr auto bVehicleDestination = 0x280; // char : 0
		constexpr auto bMakeSourceOnly = 0x280; // char : 0
		constexpr auto bMustTouchToReach = 0x280; // char : 0
		constexpr auto bCanWalkOnToReach = 0x280; // char : 0
		constexpr auto bBuildLongPaths = 0x280; // char : 0
		constexpr auto bBlockedForVehicles = 0x280; // char : 0
		constexpr auto bPreferredVehiclePath = 0x280; // char : 0
		constexpr auto bHasCrossLevelPaths = 0x280; // char : 0
		constexpr auto bShouldSaveForCheckpoint = 0x280; // char : 0
		constexpr auto NavOctreeObject = 0x284; // FNavigationOctreeObject
		constexpr auto PathList = 0x2c0; // TArray<ObjectProperty>
		constexpr auto Volumes = 0x2d0; // TArray<FActorReference>
		constexpr auto visitedWeight = 0x2e0; // int32_t
		constexpr auto bestPathWeight = 0x2e4; // int32_t
		constexpr auto nextNavigationPoint = 0x2e8; // ObjectProperty
		constexpr auto nextOrdered = 0x2f0; // ObjectProperty
		constexpr auto prevOrdered = 0x2f8; // ObjectProperty
		constexpr auto previousPath = 0x300; // ObjectProperty
		constexpr auto Cost = 0x308; // int32_t
		constexpr auto ExtraCost = 0x30c; // int32_t
		constexpr auto TransientCost = 0x310; // int32_t
		constexpr auto FearCost = 0x314; // int32_t
		constexpr auto CostArray = 0x318; // TArray<FDebugNavCost>
		constexpr auto InventoryCache = 0x328; // ObjectProperty
		constexpr auto InventoryDist = 0x330; // float
		constexpr auto LastDetourWeight = 0x334; // float
		constexpr auto CylinderComponent = 0x338; // ComponentProperty
		constexpr auto MaxPathSize = 0x340; // FCylinder
		constexpr auto NavGuid = 0x348; // FGuid
		constexpr auto GoodSprite = 0x358; // ComponentProperty
		constexpr auto BadSprite = 0x360; // ComponentProperty
		constexpr auto NetworkID = 0x368; // int32_t
		constexpr auto AnchoredPawn = 0x36c; // ObjectProperty
		constexpr auto LastAnchoredPawnTime = 0x374; // float
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x68; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x8c; // FRawDistributionVector
		constexpr auto bAbsolute = 0xb0; // char : 1
		constexpr auto bKillInside = 0xb0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xb0; // char : 1
	}

	namespace n_UTgLevelStreamingSpectator {
		constexpr auto m_LoadingMethod = 0x100; // SpectatorStreamingMethod
	}

	namespace n_UTgInventoryObject_Listen_DoubleTap {
		constexpr auto m_fBaseWeaponDamage = 0xc8; // float
		constexpr auto m_fDoubleTapDelay = 0xcc; // float
		constexpr auto m_PendingDoubleTapActors = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_PendingDoubleTapTimes = 0xe0; // TArray<float>
	}

	namespace n_ATgSkeletalMeshActor_Lobby {
		constexpr auto m_fSpawnOffsetYaw = 0x4f4; // float
		constexpr auto m_fMaxSpawnRotation = 0x4f8; // float
		constexpr auto m_fMinSpawnRotation = 0x4fc; // float
		constexpr auto m_bAdjustMeshToGround = 0x500; // char : 1
		constexpr auto m_bCanBeRotated = 0x500; // char : 1
		constexpr auto m_bEnablePostures = 0x500; // char : 1
		constexpr auto m_CardMICBotIdPending = 0x504; // int32_t
		constexpr auto m_CardMICTransitionDesiredAlpha = 0x508; // float
		constexpr auto m_CardMICTransitionAlpha = 0x50c; // float
		constexpr auto m_FlagStandActor = 0x510; // ObjectProperty
		constexpr auto m_PedestalActor = 0x518; // ObjectProperty
		constexpr auto m_CardMICs = 0x520; // TArray<ObjectProperty>
		constexpr auto r_CurrentPosture = 0x530; // TG_POSTURE
		constexpr auto m_fRotationAmount = 0x534; // float
		constexpr auto m_fDesiredRotationAmount = 0x538; // float
		constexpr auto m_rOriginalRotation = 0x53c; // FRotator
		constexpr auto m_fSelectionGlowRemainingTime = 0x548; // float
		constexpr auto m_fSelectionGlowTotalTime = 0x54c; // float
		constexpr auto m_PostureBlendNodes = 0x550; // TArray<ObjectProperty>
		constexpr auto m_HighlightPSC = 0x560; // ComponentProperty
	}

	namespace n_UTgSeqAct_TgCameraShake {
		constexpr auto m_CameraShake = 0x108; // ObjectProperty
		constexpr auto m_LocationActor = 0x110; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_TargetsDamageableByDevice {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto TargetType = 0x99; // ECombatTargetType
		constexpr auto TargetCount = 0x9c; // int32_t
	}

	namespace n_UMultiFont {
		constexpr auto ResolutionTestTable = 0x1a0; // TArray<float>
	}

	namespace n_APylonSeed {
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x280; // FPointer
	}

	namespace n_ANxRadialCustomForceField {
		constexpr auto SelfRotationStrength = 0x2f0; // float
		constexpr auto Kernel = 0x2f4; // FPointer
	}

	namespace n_ATgProj_FreeGrenade {
		constexpr auto m_bShieldTouched = 0x51c; // char : 1
		constexpr auto m_bExplodeOnTouch = 0x51c; // char : 1
		constexpr auto m_bExplodeOnGeometry = 0x51c; // char : 1
		constexpr auto m_bExplodeOnFloor = 0x51c; // char : 1
		constexpr auto m_bUseBilinearInterpolationForBounceDamping = 0x51c; // char : 1
		constexpr auto m_bUseGravityZOverride = 0x51c; // char : 1
		constexpr auto m_TouchedShield = 0x520; // ObjectProperty
		constexpr auto m_fToleranceZ = 0x528; // float
		constexpr auto m_fBounceDampingVertMin = 0x52c; // float
		constexpr auto m_fBounceDampingVertMax = 0x530; // float
		constexpr auto m_fBounceDampingHorizMin = 0x534; // float
		constexpr auto m_fBounceDampingHorizMax = 0x538; // float
		constexpr auto m_fBounceDamping = 0x53c; // float
		constexpr auto m_fSpeedToActivateBounceFX = 0x540; // float
		constexpr auto m_fGravityZOverride = 0x544; // float
		constexpr auto m_nBounceCount = 0x548; // int32_t
		constexpr auto m_nBouncesToExplode = 0x54c; // int32_t
		constexpr auto m_fBounceDistinctionDuration = 0x550; // float
		constexpr auto m_fLastBounceTime = 0x554; // float
		constexpr auto m_vRecentHitNormal = 0x558; // FVector
		constexpr auto m_fRecentHitTime = 0x564; // float
		constexpr auto m_fBounceFlashThreshold = 0x568; // float
	}

	namespace n_UAkBank {
		constexpr auto AutoLoad = 0x60; // char : 1
		constexpr auto GenerateDefinition = 0x60; // char : 1
		constexpr auto bIsAsyncLoading = 0x60; // char : 1
		constexpr auto bIsReadyForFinishDestroy = 0x60; // char : 1
	}

	namespace n_USeqAct_FeatureTest {
		constexpr auto FreezeAtParameters = 0x12c; // FString
		constexpr auto ScreenShotDelay = 0x13c; // float
		constexpr auto ScreenShotName = 0x140; // FString
		constexpr auto RemainingScreenShotDelay = 0x150; // float
	}

	namespace n_ATgDevice_ShieldBounce {
		constexpr auto m_nLastFiringInstance = 0xaec; // int32_t
		constexpr auto m_nNumJumps = 0xaf0; // int32_t
	}

	namespace n_UActorFactoryDecal {
		constexpr auto DecalMaterial = 0x9c; // ObjectProperty
	}

	namespace n_ATgSkeletalMeshActor_Pedestal {
		constexpr auto m_DefaultBot = 0x568; // FPointer
		constexpr auto m_DefaultPedestalActors = 0x570; // TArray<ObjectProperty>
		constexpr auto m_bUsingDefaultPedestal = 0x580; // char : 1
		constexpr auto m_PedestalType = 0x584; // EPedestalType
	}

	namespace n_UTgAudioPawnDialogue {
		constexpr auto m_ChatterEvents = 0x60; // TArray<FChatterEvent>
		constexpr auto m_DialogueEvents = 0x70; // TArray<FDialogueEvent>
		constexpr auto m_fCategoryCooldownTimestamps = 0x80; // float [0x12]
		constexpr auto m_fCategoryCooldownBase = 0xc8; // float [0x12]
		constexpr auto m_pOwner = 0x110; // ObjectProperty
		constexpr auto m_fLastEmoteTime = 0x118; // float
		constexpr auto m_bSpeaking = 0x11c; // char : 1
		constexpr auto m_bInitialized = 0x11c; // char : 1
		constexpr auto m_nInvokedWeapon = 0x120; // int32_t
	}

	namespace n_UTgAIUtilityFilter_LoSToTarget {
		constexpr auto bInverse = 0xc0; // char : 1
	}

	namespace n_UTgCameraModule_FrontFacingCamera {
		constexpr auto m_rWorldRotationOffset = 0x1cc; // FRotator
		constexpr auto m_fFOV = 0x1d8; // float
	}

	namespace n_UPrimitiveComponentFactory {
		constexpr auto CollideActors = 0x60; // char : 1
		constexpr auto BlockActors = 0x60; // char : 1
		constexpr auto BlockZeroExtent = 0x60; // char : 1
		constexpr auto BlockNonZeroExtent = 0x60; // char : 1
		constexpr auto BlockRigidBody = 0x60; // char : 1
		constexpr auto HiddenGame = 0x60; // char : 1
		constexpr auto HiddenEditor = 0x60; // char : 1
		constexpr auto CastShadow = 0x60; // char : 1
	}

	namespace n_UTgAnimNotify_Sound {
		constexpr auto m_SkinOverrideList = 0x88; // TArray<FPSE_Skin>
	}

	namespace n_UApexGenericAsset {
		constexpr auto MApexAsset = 0x80; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileOffCooldown {
		constexpr auto m_bIsActive = 0xc8; // char : 1
	}

	namespace n_UTgGameViewportClient {
		constexpr auto m_DeferredManifests = 0x1c4; // TArray<ObjectProperty>
		constexpr auto m_dragging = 0x1d4; // char : 1
		constexpr auto m_wasMaximized = 0x1d4; // char : 1
		constexpr auto bReadLeftStickAxis = 0x1d4; // char : 1
		constexpr auto bReadRightStickAxis = 0x1d4; // char : 1
		constexpr auto fRawLeftStickAxis = 0x1d8; // float
		constexpr auto fRawRightStickAxis = 0x1dc; // float
		constexpr auto fRawRightStickX = 0x1e0; // float
		constexpr auto fRawRightStickY = 0x1e4; // float
	}

	namespace n_UTgDeviceForm_Pursuit {
		constexpr auto m_LeftSlideSkelControlName1P = 0x2bc; // FName
		constexpr auto m_RightSlideSkelControlName1P = 0x2c4; // FName
		constexpr auto m_LeftSlideSkelControlName3P = 0x2cc; // FName
		constexpr auto m_RightSlideSkelControlName3P = 0x2d4; // FName
		constexpr auto m_LeftSlideSkelControl1P = 0x2dc; // ObjectProperty
		constexpr auto m_RightSlideSkelControl1P = 0x2e4; // ObjectProperty
		constexpr auto m_LeftSlideSkelControl3P = 0x2ec; // ObjectProperty
		constexpr auto m_RightSlideSkelControl3P = 0x2f4; // ObjectProperty
		constexpr auto c_fPreviousLeftSlideStrength = 0x2fc; // float
		constexpr auto c_fPreviousRightSlideStrength = 0x300; // float
		constexpr auto m_bCachedDualFireParity = 0x304; // char : 1
	}

	namespace n_ARB_ForceFieldExcludeVolume {
		constexpr auto ForceFieldChannel = 0x2bc; // int32_t
		constexpr auto SceneIndex = 0x2c0; // int32_t
	}

	namespace n_UInterpTrackMorphWeight {
		constexpr auto MorphNodeName = 0xb8; // FName
	}

	namespace n_USeqAct_AkSetSwitch {
		constexpr auto SwitchGroup = 0x108; // FString
		constexpr auto Switch = 0x118; // FString
	}

	namespace n_USeqAct_HeadTrackingControl {
		constexpr auto TrackControllerName = 0x108; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x118; // float
		constexpr auto bDisableBeyondLimit = 0x11c; // char : 1
		constexpr auto bLookAtPawns = 0x11c; // char : 1
		constexpr auto MaxLookAtTime = 0x120; // float
		constexpr auto MinLookAtTime = 0x124; // float
		constexpr auto MaxInterestTime = 0x128; // float
		constexpr auto ActorClassesToLookAt = 0x12c; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0x13c; // TArray<FName>
		constexpr auto LookAtTargets = 0x14c; // TArray<ObjectProperty>
		constexpr auto ActorToComponentMap = 0x15c; // TMap<None, None>
	}

	namespace n_USplineAudioComponent {
		constexpr auto ListenerScopeRadius = 0x2cc; // float
		constexpr auto ClosestPointOnSplineIndex = 0x2d0; // int32_t
		constexpr auto Points = 0x2d4; // TArray<FInterpPointOnSpline>
	}

	namespace n_UReachSpec {
		constexpr auto NavOctreeObject = 0x60; // FPointer
		constexpr auto Distance = 0x68; // int32_t
		constexpr auto Direction = 0x6c; // FVector
		constexpr auto Start = 0x78; // ObjectProperty
		constexpr auto End = 0x80; // FActorReference
		constexpr auto CollisionRadius = 0x98; // int32_t
		constexpr auto CollisionHeight = 0x9c; // int32_t
		constexpr auto reachFlags = 0xa0; // int32_t
		constexpr auto MaxLandingVelocity = 0xa4; // int32_t
		constexpr auto bPruned = 0xa8; // char
		constexpr auto PathColorIndex = 0xa9; // char
		constexpr auto bAddToNavigationOctree = 0xac; // char : 1
		constexpr auto bCanCutCorners = 0xac; // char : 1
		constexpr auto bCheckForObstructions = 0xac; // char : 1
		constexpr auto bSkipPrune = 0xac; // char : 1
		constexpr auto bDisabled = 0xac; // char : 1
		constexpr auto PruneSpecList = 0xb0; // TArray<UReachSpec*>
		constexpr auto BlockedBy = 0xc0; // ObjectProperty
	}

	namespace n_ATgHeightFog {
		constexpr auto FogComponent = 0x280; // ComponentProperty
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipChange_Server {
		constexpr auto PointIndex = 0x128; // int32_t
	}

	namespace n_UUIDataCommon {
		constexpr auto m_nLevel = 0x70; // int32_t
		constexpr auto m_nItemsTotal = 0x74; // int32_t
		constexpr auto m_nItemsOwned = 0x78; // int32_t
		constexpr auto m_nXPProgress = 0x7c; // int32_t
		constexpr auto m_nXPRequired = 0x80; // int32_t
		constexpr auto m_nActiveMount = 0x84; // int32_t
		constexpr auto m_fXPPercent = 0x88; // float
		constexpr auto m_fItemsPercent = 0x8c; // float
		constexpr auto m_PortalAccounts = 0x90; // TMap<None, None>
		constexpr auto m_BurnA = 0xd8; // TArray<ObjectProperty>
		constexpr auto m_BurnB = 0xe8; // TArray<ObjectProperty>
		constexpr auto m_BurnC = 0xf8; // TArray<ObjectProperty>
		constexpr auto m_BurnD = 0x108; // TArray<ObjectProperty>
		constexpr auto m_BurnConquestA = 0x118; // TArray<ObjectProperty>
		constexpr auto m_BurnConquestB = 0x128; // TArray<ObjectProperty>
		constexpr auto m_BurnConquestC = 0x138; // TArray<ObjectProperty>
		constexpr auto m_BurnConquestD = 0x148; // TArray<ObjectProperty>
		constexpr auto m_Mounts = 0x158; // TArray<ObjectProperty>
		constexpr auto m_EquipableTitles = 0x168; // TArray<ObjectProperty>
		constexpr auto m_AnnouncerPacks = 0x178; // TArray<ObjectProperty>
		constexpr auto m_Chests = 0x188; // TArray<ObjectProperty>
		constexpr auto m_MatchBoosters = 0x198; // TArray<ObjectProperty>
		constexpr auto m_AccountBoosters = 0x1a8; // TArray<ObjectProperty>
		constexpr auto m_Subscriptions = 0x1b8; // TArray<ObjectProperty>
		constexpr auto m_Currencies = 0x1c8; // TArray<ObjectProperty>
		constexpr auto m_Bundles = 0x1d8; // TArray<ObjectProperty>
		constexpr auto m_WebBundles = 0x1e8; // TArray<ObjectProperty>
		constexpr auto m_Lore = 0x1f8; // TArray<ObjectProperty>
		constexpr auto m_ActivatedMatchBoosters = 0x208; // TArray<ObjectProperty>
		constexpr auto m_dwBattlePassPoints = 0x218; // Fdword
		constexpr auto m_dwBattlePassLevel = 0x21c; // Fdword
		constexpr auto m_dwBattlePassTier = 0x220; // Fdword
		constexpr auto m_bBattlePassOwned = 0x224; // Fdword
	}

	namespace n_UTgAnimNodeAimOffset_Charge {
		constexpr auto m_bInterpToCurrentTurnRate = 0x1f8; // char : 1
		constexpr auto m_fInterpSpeed = 0x1fc; // float
		constexpr auto m_fMaxYawRate = 0x200; // float
		constexpr auto m_fAimYawOffset = 0x204; // float
		constexpr auto m_rCachedOwnerRotator = 0x208; // FRotator
	}

	namespace n_ATgEmitter_CameraEffect_DamageBase {
		constexpr auto ScreenLocation = 0x2b4; // EDamageEffectScreenLocation
	}

	namespace n_UTgSkelControlSingleBone_Skinned {
		constexpr auto DefaultStrength = 0x144; // float
		constexpr auto SkinOverrides = 0x148; // TArray<FSkinStrengthOverride>
		constexpr auto bInitializedStrength = 0x158; // char : 1
		constexpr auto fSkinStrength = 0x15c; // float
	}

	namespace n_UTgAIBehaviorSensor_NearbyItems {
		constexpr auto MaxRadius = 0x94; // float
	}

	namespace n_USeqCond_IncrementFloat {
		constexpr auto IncrementAmount = 0xec; // float
		constexpr auto ValueA = 0xf0; // float
		constexpr auto ValueB = 0xf4; // float
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0xd0; // FLinearColor
	}

	namespace n_UTgInventoryObject_Device {
		constexpr auto s_Device = 0xac; // ObjectProperty
		constexpr auto m_nDeviceInstanceId = 0xb4; // int32_t
		constexpr auto c_nNumFindDeviceFails = 0xb8; // int32_t
		constexpr auto m_nStackCount = 0xbc; // int32_t
		constexpr auto m_pAmDevice = 0xc0; // FPointer
	}

	namespace n_AImageReflectionSceneCapture {
		constexpr auto DepthRange = 0x294; // float
		constexpr auto ColorRange = 0x298; // float
	}

	namespace n_UAnimNodeSequenceBlendBase {
		constexpr auto Anims = 0x1ac; // TArray<FAnimBlendInfo>
	}

	namespace n_UHavokNavMeshGrid {
		constexpr auto WorldToScreen = 0x60; // FMatrix
		constexpr auto ScreenToWorld = 0xa0; // FMatrix
		constexpr auto TexelDistance = 0xe0; // float
		constexpr auto GridSize = 0xe4; // int32_t
		constexpr auto SerializedGridData = 0xe8; // FUntypedBulkData_Mirror
		constexpr auto MemoryGridData = 0x128; // TArray<char>
	}

	namespace n_UTgSeqAct_AIStartFireAt {
		constexpr auto ForcedFireMode = 0x108; // char
	}

	namespace n_UTgAnimMetaData_MaskingPlane {
		constexpr auto WallIndex = 0xe0; // int32_t
		constexpr auto WallNormal = 0xe4; // FVector
		constexpr auto WallPosition0 = 0xf0; // FVector
		constexpr auto WallPosition1 = 0xfc; // FVector
		constexpr auto WallEnableBaseName = 0x108; // FName
		constexpr auto WallPositionBaseName = 0x110; // FName
		constexpr auto WallNormalBaseName = 0x118; // FName
	}

	namespace n_UAnimNodeBlendBase {
		constexpr auto Children = 0xfc; // TArray<FAnimBlendChild>
		constexpr auto bFixNumChildren = 0x10c; // char : 1
		constexpr auto m_bForceChildToLoop = 0x10c; // char : 1
		constexpr auto BlendType = 0x110; // AlphaBlendType
	}

	namespace n_UUIComponent_ChampionRankRow {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcType = 0x128; // ObjectProperty
		constexpr auto m_mcWins = 0x130; // ObjectProperty
		constexpr auto m_mcLosses = 0x138; // ObjectProperty
		constexpr auto m_mcRank = 0x140; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x148; // ObjectProperty
		constexpr auto m_mcMasteryTitle = 0x150; // ObjectProperty
		constexpr auto m_MasteryProgress = 0x158; // ObjectProperty
		constexpr auto m_pDetailsButton = 0x160; // ObjectProperty
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0xb8; // FName
	}

	namespace n_UScriptViewportClient {
		constexpr auto VfTable_FViewportClient = 0x60; // FPointer
	}

	namespace n_USeqAct_CameraFade {
		constexpr auto FadeColor = 0x108; // FColor
		constexpr auto FadeAlpha = 0x10c; // FVector2D
		constexpr auto FadeOpacity = 0x114; // float
		constexpr auto FadeTime = 0x118; // float
		constexpr auto bPersistFade = 0x11c; // char : 1
		constexpr auto bFadeAudio = 0x11c; // char : 1
		constexpr auto FadeTimeRemaining = 0x120; // float
		constexpr auto CachedPCs = 0x124; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_NearOwnTurret {
		constexpr auto m_bIsActive = 0xc8; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_TimeInPayloadMode {
		constexpr auto TimeThreshold = 0x98; // float
	}

	namespace n_ATgDevice_TyraInhand {
		constexpr auto m_bUltIsActive = 0xaec; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetDamageableByDevice {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_UUIData_LobbySlotItem {
		constexpr auto eState = 0x60; // UIChampionCustomizeState
		constexpr auto pItemInfo = 0x64; // FPointer
		constexpr auto bActive = 0x6c; // char : 1
	}

	namespace n_UParticleModuleColorScaleOverDensity {
		constexpr auto ColorScaleOverDensity = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverDensity = 0x8c; // FRawDistributionFloat
	}

	namespace n_UUIComponent_GenericTitleInputButtons {
		constexpr auto m_mcTitle = 0x120; // ObjectProperty [0x2]
		constexpr auto m_mcError = 0x130; // ObjectProperty
		constexpr auto m_Buttons = 0x138; // ObjectProperty [0x2]
		constexpr auto m_ButtonClickHandles = 0x148; // int32_t [0x2]
		constexpr auto m_mcInputTF = 0x150; // ObjectProperty
		constexpr auto m_mcInputFrame = 0x158; // ObjectProperty
		constexpr auto m_mcInputFrameHighlight = 0x160; // ObjectProperty
		constexpr auto m_grButtons = 0x168; // ObjectProperty
	}

	namespace n_ATgDeploy_EffectField {
		constexpr auto m_fEffectFieldHeight = 0x448; // float
		constexpr auto r_fRadiusScale = 0x44c; // float
		constexpr auto m_TouchingPawns = 0x450; // TArray<ObjectProperty>
		constexpr auto m_HitActors = 0x460; // TArray<ObjectProperty>
		constexpr auto m_bOnlyHitOnce = 0x470; // char : 1
		constexpr auto m_CollisionProxy = 0x474; // ObjectProperty
	}

	namespace n_UTgSeqAct_AddAnimSets {
		constexpr auto m_MaleAnimSets = 0x108; // TArray<ObjectProperty>
		constexpr auto m_FemaleAnimSets = 0x118; // TArray<ObjectProperty>
		constexpr auto m_bAppendToExisting = 0x128; // char : 1
	}

	namespace n_UUIComponent_FWOTDEntry {
		constexpr auto m_mcTF0 = 0x120; // ObjectProperty
		constexpr auto m_mcTF1 = 0x128; // ObjectProperty
		constexpr auto m_mcFWOTDIcon = 0x130; // ObjectProperty
		constexpr auto m_mcCheckmark = 0x138; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x140; // ObjectProperty
		constexpr auto m_mcChestIconTF = 0x148; // ObjectProperty
		constexpr auto m_mcCompleted = 0x150; // ObjectProperty
		constexpr auto m_pButton = 0x158; // ObjectProperty
		constexpr auto m_dwBotId = 0x160; // Fdword
		constexpr auto m_dwChestId = 0x164; // Fdword
		constexpr auto m_bHasUnopenedChest = 0x168; // char : 1
	}

	namespace n_UUIDataQueues {
		constexpr auto m_QueueData = 0x70; // ObjectProperty
		constexpr auto m_DevQueues = 0x78; // TArray<ObjectProperty>
		constexpr auto m_Queues = 0x88; // TMap<None, None>
		constexpr auto m_CustomQueues = 0xd0; // TMap<None, None>
		constexpr auto m_CustomGames = 0x118; // TMap<None, None>
		constexpr auto m_fStatusTimer = 0x160; // float
	}

	namespace n_UHeadTrackingComponent {
		constexpr auto TrackControllerName = 0x88; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x98; // float
		constexpr auto bDisableBeyondLimit = 0x9c; // char : 1
		constexpr auto MaxLookAtTime = 0xa0; // float
		constexpr auto MinLookAtTime = 0xa4; // float
		constexpr auto MaxInterestTime = 0xa8; // float
		constexpr auto ActorClassesToLookAt = 0xac; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xbc; // TArray<FName>
		constexpr auto CurrentActorMap = 0xcc; // TMap<None, None>
		constexpr auto SkeletalMeshComp = 0x114; // ComponentProperty
		constexpr auto TrackControls = 0x11c; // TArray<ObjectProperty>
		constexpr auto RootMeshLocation = 0x12c; // FVector
		constexpr auto RootMeshRotation = 0x138; // FRotator
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x78; // int32_t
		constexpr auto bStartAtSecondKey = 0x7c; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_FirstShotAfterMovementAbility {
		constexpr auto m_fLastMovementAbilityTime = 0xc8; // float
		constexpr auto m_bJustFinishedMovementAbility = 0xcc; // char : 1
		constexpr auto m_nNumApplicationsRemaining = 0xd0; // int32_t
		constexpr auto m_fLastAppliedTime = 0xd4; // float
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x294; // ObjectProperty
		constexpr auto PS_CameraEffectNonExtremeContent = 0x29c; // ObjectProperty
		constexpr auto BaseFOV = 0x2a4; // float
		constexpr auto DistFromCamera = 0x2a8; // float
		constexpr auto bAllowMultipleInstances = 0x2ac; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2b0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto BaseCamera = 0x2c0; // ObjectProperty
	}

	namespace n_USeqAct_SetInt {
		constexpr auto Target = 0x108; // int32_t
		constexpr auto Value = 0x10c; // TArray<int32_t>
	}

	namespace n_UOnlinePlaylistGameTypeProvider {
		constexpr auto PlaylistGameTypeName = 0x94; // FName
		constexpr auto DisplayName = 0x9c; // FString
		constexpr auto Description = 0xac; // FString
		constexpr auto GameTypeId = 0xbc; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_PhysicsState {
		constexpr auto PhysicsState = 0x98; // EPhysics
	}

	namespace n_UTgSeqAct_GiveShards {
		constexpr auto m_nShardAmount = 0x108; // int32_t
	}

	namespace n_UTgAchievement_QuestionsLater {
		constexpr auto bTakenDamageYet = 0x90; // char : 1
		constexpr auto bHasHitAllEnemies = 0x90; // char : 1
		constexpr auto EnemyPawnsHit = 0x94; // TArray<int32_t>
	}

	namespace n_UAnimSequence {
		constexpr auto SequenceName = 0x60; // FName
		constexpr auto Notifies = 0x68; // TArray<FAnimNotifyEvent>
		constexpr auto MetaData = 0x78; // TArray<ObjectProperty>
		constexpr auto BoneControlModifiers = 0x88; // TArray<FSkelControlModifier>
		constexpr auto SequenceLength = 0x98; // float
		constexpr auto NumFrames = 0x9c; // int32_t
		constexpr auto RateScale = 0xa0; // float
		constexpr auto bParticleEffectsAreFootsteps = 0xa4; // char : 1
		constexpr auto bNoLoopingInterpolation = 0xa4; // char : 1
		constexpr auto bIsAdditive = 0xa4; // char : 1
		constexpr auto bAdditiveBuiltLooping = 0xa4; // char : 1
		constexpr auto bDoNotOverrideCompression = 0xa4; // char : 1
		constexpr auto bHasBeenUsed = 0xa4; // char : 1
		constexpr auto bWasCompressedWithoutTranslations = 0xa4; // char : 1
		constexpr auto RawAnimData = 0xa8; // TArray<FRawAnimSequenceTrack>
		constexpr auto RawAnimationData = 0xb8; // TArray<FRawAnimSequenceTrack>
		constexpr auto TranslationData = 0xc8; // TArray<FTranslationTrack>
		constexpr auto RotationData = 0xd8; // TArray<FRotationTrack>
		constexpr auto CurveData = 0xe8; // TArray<FCurveTrack>
		constexpr auto TranslationCompressionFormat = 0xf8; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0xf9; // AnimationCompressionFormat
		constexpr auto KeyEncodingFormat = 0xfa; // AnimationKeyFormat
		constexpr auto CompressedTrackOffsets = 0xfc; // TArray<int32_t>
		constexpr auto CompressedByteStream = 0x10c; // TArray<char>
		constexpr auto TranslationCodec = 0x11c; // FPointer
		constexpr auto RotationCodec = 0x124; // FPointer
		constexpr auto AdditiveRefPose = 0x12c; // TArray<FBoneAtom>
		constexpr auto AdditiveBasePose = 0x13c; // TArray<FRawAnimSequenceTrack>
		constexpr auto EncodingPkgVersion = 0x14c; // int32_t
		constexpr auto UseScore = 0x150; // float
	}

	namespace n_UUIComponent_MatchInvitePlayerEntry {
		constexpr auto m_mcAccepted = 0x120; // ObjectProperty
		constexpr auto m_mcFailed = 0x128; // ObjectProperty
	}

	namespace n_URB_BodyInstance {
		constexpr auto OwnerComponent = 0x60; // ComponentProperty
		constexpr auto BodyIndex = 0x68; // int32_t
		constexpr auto Velocity = 0x6c; // FVector
		constexpr auto PreviousVelocity = 0x78; // FVector
		constexpr auto SceneIndex = 0x84; // int32_t
		constexpr auto BodyData = 0x88; // FPointer
		constexpr auto BoneSpring = 0x90; // FPointer
		constexpr auto BoneSpringKinActor = 0x98; // FPointer
		constexpr auto bEnableBoneSpringLinear = 0xa0; // char : 1
		constexpr auto bEnableBoneSpringAngular = 0xa0; // char : 1
		constexpr auto bDisableOnOverextension = 0xa0; // char : 1
		constexpr auto bNotifyOwnerOnOverextension = 0xa0; // char : 1
		constexpr auto bTeleportOnOverextension = 0xa0; // char : 1
		constexpr auto bUseKinActorForBoneSpring = 0xa0; // char : 1
		constexpr auto bMakeSpringToBaseCollisionComponent = 0xa0; // char : 1
		constexpr auto bOnlyCollideWithPawns = 0xa0; // char : 1
		constexpr auto bEnableCollisionResponse = 0xa0; // char : 0
		constexpr auto bPushBody = 0xa0; // char : 0
		constexpr auto bForceUnfixed = 0xa0; // char : 0
		constexpr auto bInstanceAlwaysFullAnimWeight = 0xa0; // char : 0
		constexpr auto BoneLinearSpring = 0xa4; // float
		constexpr auto BoneLinearDamping = 0xa8; // float
		constexpr auto BoneAngularSpring = 0xac; // float
		constexpr auto BoneAngularDamping = 0xb0; // float
		constexpr auto OverextensionThreshold = 0xb4; // float
		constexpr auto CustomGravityFactor = 0xb8; // float
		constexpr auto LastEffectPlayedTime = 0xbc; // float
		constexpr auto ContactReportForceThreshold = 0xc0; // float
		constexpr auto InstanceMassScale = 0xc4; // float
		constexpr auto InstanceDampingScale = 0xc8; // float
		constexpr auto PhysMaterialOverride = 0xcc; // ObjectProperty
	}

	namespace n_UTgCameraModule {
		constexpr auto PlayerCamera = 0x60; // ObjectProperty
	}

	namespace n_UUIComponent_HeaderTab {
		constexpr auto m_pCTA = 0x120; // ObjectProperty
		constexpr auto m_mcTwitchCTA = 0x128; // ObjectProperty
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0xb8; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xc8; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xc8; // char : 1
		constexpr auto bSuppressSubtitles = 0xc8; // char : 1
		constexpr auto bTreatAsDialogue = 0xc8; // char : 1
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0xb0d4; // TArray<ObjectProperty>
	}

	namespace n_UPrefab {
		constexpr auto PrefabVersion = 0x60; // int32_t
		constexpr auto PrefabArchetypes = 0x64; // TArray<ObjectProperty>
		constexpr auto RemovedArchetypes = 0x74; // TArray<ObjectProperty>
		constexpr auto PrefabSequence = 0x84; // ObjectProperty
	}

	namespace n_UGameAICommand {
		constexpr auto ChildCommand = 0x60; // ObjectProperty
		constexpr auto ChildStatus = 0x68; // FName
		constexpr auto GameAIOwner = 0x70; // ObjectProperty
		constexpr auto Status = 0x78; // FName
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bAborted = 0x80; // char : 1
		constexpr auto bIgnoreNotifies = 0x80; // char : 1
		constexpr auto bIgnoreStepAside = 0x80; // char : 1
		constexpr auto bPendingPop = 0x80; // char : 1
	}

	namespace n_AGameCrowdDestinationQueuePoint {
		constexpr auto NextQueuePosition = 0x28c; // ObjectProperty
		constexpr auto PreviousQueuePosition = 0x294; // ObjectProperty
		constexpr auto QueuedAgent = 0x29c; // ObjectProperty
		constexpr auto QueueDestination = 0x2a4; // ObjectProperty
		constexpr auto bClearingQueue = 0x2ac; // char : 1
		constexpr auto bPendingAdvance = 0x2ac; // char : 1
		constexpr auto AverageReactionTime = 0x2b0; // float
		constexpr auto QueueBehaviorClass = 0x2b4; // UGameCrowdBehavior_WaitInQueue*
	}

	namespace n_UPComSeqAct_PlayMusicEvent {
		constexpr auto EventName = 0x108; // FName
	}

	namespace n_UTgControlModule_ThirdPerson {
		constexpr auto CameraYawOffset = 0x6c; // int32_t
		constexpr auto fRotInterpSpeed = 0x70; // float
		constexpr auto fAimPitch = 0x74; // float
		constexpr auto PitchCurve = 0x78; // FInterpCurveFloat
		constexpr auto AimCurve = 0x8c; // FInterpCurveFloat
		constexpr auto m_bWasInCatapultLastTick = 0xa0; // char : 1
		constexpr auto m_InitialRotationToCatapult = 0xa4; // FRotator
		constexpr auto m_StrafeCameraAnim = 0xb0; // ObjectProperty
		constexpr auto fOrientationResetStartPitch = 0xb8; // float
		constexpr auto fOrientationResetRemaining = 0xbc; // float
		constexpr auto fOrientationResetDuration = 0xc0; // float
		constexpr auto fOrientationResetCooldown = 0xc4; // float
		constexpr auto fOrientationResetLastUsed = 0xc8; // float
	}

	namespace n_ANxTornadoForceFieldCapsule {
		constexpr auto RenderComponent = 0x304; // ComponentProperty
	}

	namespace n_UUIHudClass {
		constexpr auto m_nTime = 0x244; // int32_t
		constexpr auto m_nClass = 0x248; // int32_t
		constexpr auto m_nPlayer = 0x24c; // int32_t [0x5]
		constexpr auto m_nClassIndex = 0x260; // int32_t
		constexpr auto m_bSelection = 0x264; // char : 1
		constexpr auto m_bShouldShow = 0x264; // char : 1
		constexpr auto m_mcImage = 0x268; // ObjectProperty
		constexpr auto m_mcTitleA = 0x270; // ObjectProperty
		constexpr auto m_mcTitleB = 0x278; // ObjectProperty
		constexpr auto m_mcBlocker = 0x280; // ObjectProperty
		constexpr auto m_mcInfoFrame = 0x288; // ObjectProperty
		constexpr auto m_mcPrompt = 0x290; // ObjectProperty
		constexpr auto m_mcPromptKey = 0x298; // ObjectProperty
		constexpr auto m_mcPromptClass = 0x2a0; // ObjectProperty
		constexpr auto m_mcAbility = 0x2a8; // ObjectProperty
		constexpr auto m_mcAbilityDesc = 0x2b0; // ObjectProperty
		constexpr auto m_mcAbilityIcon = 0x2b8; // ObjectProperty
		constexpr auto m_mcAbilityName = 0x2c0; // ObjectProperty
		constexpr auto m_mcTalentGroup = 0x2c8; // ObjectProperty
		constexpr auto m_mcTalent = 0x2d0; // ObjectProperty [0xa]
		constexpr auto m_mcTalentIcon = 0x320; // ObjectProperty [0xa]
		constexpr auto m_mcTalentTitle = 0x370; // ObjectProperty [0xa]
		constexpr auto m_mcTalentDesc = 0x3c0; // ObjectProperty [0xa]
		constexpr auto m_mcHeader = 0x410; // ObjectProperty
		constexpr auto m_mcHeaderTime = 0x418; // ObjectProperty
		constexpr auto m_mcHeaderPlayer = 0x420; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderPlayerIcon = 0x448; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderPlayerClass = 0x470; // ObjectProperty [0x5]
		constexpr auto m_mcButton = 0x498; // ObjectProperty [0x4]
		constexpr auto m_mcButtonIcon = 0x4b8; // ObjectProperty [0x4]
		constexpr auto m_mcButtonLevel = 0x4d8; // ObjectProperty [0x4]
		constexpr auto m_mcButtonHighlight = 0x4f8; // ObjectProperty [0x4]
		constexpr auto m_mcButtonHighlightIcon = 0x518; // ObjectProperty [0x4]
		constexpr auto m_mcButtonProgress = 0x538; // ObjectProperty [0x4]
		constexpr auto m_mcButtonProgressTip = 0x558; // ObjectProperty [0x4]
		constexpr auto m_mcButtonProgressFill = 0x578; // ObjectProperty [0x4]
		constexpr auto m_pInputGroup = 0x598; // ObjectProperty
		constexpr auto m_akSelect = 0x5a0; // ObjectProperty
	}

	namespace n_UUISettings {
		constexpr auto m_ChampionDropdown = 0x244; // ObjectProperty
		constexpr auto m_eType = 0x24c; // int32_t
		constexpr auto m_nHighlightOption = 0x250; // int32_t
		constexpr auto m_nOptionCount = 0x254; // int32_t
		constexpr auto m_nScrollIndex = 0x258; // int32_t
		constexpr auto m_bOptionFocus = 0x25c; // char : 1
		constexpr auto m_bKeybindFocus = 0x25c; // char : 1
		constexpr auto m_bSettingsChanged = 0x25c; // char : 1
		constexpr auto m_bIsInResetPrompt = 0x25c; // char : 1
		constexpr auto m_bUseVSync = 0x25c; // char : 1
		constexpr auto m_bUseD3D11 = 0x25c; // char : 1
		constexpr auto m_fDelayTimer = 0x260; // float
		constexpr auto m_Title = 0x264; // ObjectProperty
		constexpr auto m_Frame = 0x26c; // ObjectProperty
		constexpr auto m_Reset = 0x274; // ObjectProperty
		constexpr auto m_mcBack = 0x27c; // ObjectProperty
		constexpr auto m_Blocker = 0x284; // ObjectProperty
		constexpr auto m_mcIcon = 0x28c; // ObjectProperty
		constexpr auto m_mcHeader = 0x294; // ObjectProperty
		constexpr auto m_mcHeaderGlow = 0x29c; // ObjectProperty
		constexpr auto m_KeybindPopup = 0x2a4; // ObjectProperty
		constexpr auto m_KeybindPopupTF = 0x2ac; // ObjectProperty
		constexpr auto m_KeybindCancel = 0x2b4; // ObjectProperty
		constexpr auto m_Option = 0x2bc; // FSettingOption [0xc]
		constexpr auto m_Keybind = 0x6dc; // FKeybindOption [0xc]
		constexpr auto m_ExitButton = 0x9dc; // ObjectProperty
		constexpr auto m_AcceptButton = 0x9e4; // ObjectProperty
		constexpr auto m_mcScrollBar = 0x9ec; // ObjectProperty
		constexpr auto m_mcHeaderButton = 0x9f4; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonLine = 0xa1c; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonGlow = 0xa44; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonBounds = 0xa6c; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonShadow = 0xa94; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonSelected = 0xabc; // ObjectProperty [0x5]
		constexpr auto m_mcHeaderButtonHighlight = 0xae4; // ObjectProperty [0x5]
		constexpr auto m_pHeaderButtonCTA = 0xb0c; // ObjectProperty [0x5]
		constexpr auto m_grOptions = 0xb34; // ObjectProperty
		constexpr auto m_grKeybinds = 0xb3c; // ObjectProperty
		constexpr auto m_grTeams = 0xb44; // ObjectProperty
		constexpr auto m_mcGamepad = 0xb4c; // ObjectProperty
		constexpr auto m_mcGamepadButtons = 0xb54; // ObjectProperty
		constexpr auto m_mcGamepadImage = 0xb5c; // ObjectProperty
		constexpr auto m_mcSafeFrame = 0xb64; // ObjectProperty
		constexpr auto m_ResetToDefaultAction = 0xb6c; // ObjectProperty
		constexpr auto m_DelayedUpdates = 0xb74; // TArray<int32_t>
		constexpr auto m_VideoTypes = 0xb84; // TArray<int32_t>
		constexpr auto m_HudTypes = 0xb94; // TArray<int32_t>
		constexpr auto m_AudioTypes = 0xba4; // TArray<int32_t>
		constexpr auto m_ControlTypes = 0xbb4; // TArray<int32_t>
		constexpr auto m_nPressAndHoldSettingType = 0xbc4; // int32_t
		constexpr auto m_fPressAndHoldStartTimestamp = 0xbc8; // float
		constexpr auto m_fPressAndHoldOldTimestamp = 0xbcc; // float
		constexpr auto m_fPressAndHoldTimeoutTime = 0xbd0; // float
		constexpr auto m_fPressAndHoldFastTime = 0xbd4; // float
		constexpr auto m_akOption = 0xbd8; // ObjectProperty
		constexpr auto m_akVolume = 0xbe0; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetTaskforce {
		constexpr auto TaskForceNumber = 0x108; // int32_t
	}

	namespace n_ATgLanePylon {
		constexpr auto m_nLane = 0x490; // int32_t
	}

	namespace n_UTgAIBehaviorAction_FollowLane {
		constexpr auto bUseReverseDirection = 0x94; // char : 1
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x60; // float
		constexpr auto Location = 0x64; // FIntPoint
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MICInfos = 0x60; // TArray<FVectorMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_UTgAnimBlendBySpeedWithExhaustion {
		constexpr auto m_bEnableExhaustion = 0x21c; // char : 1
		constexpr auto m_fExhaustionLevel = 0x220; // float
		constexpr auto m_ExhaustedChildren = 0x224; // TArray<int32_t>
		constexpr auto m_GainExhaustionChildren = 0x234; // TArray<int32_t>
		constexpr auto m_fExhaustionGainSpeed = 0x244; // float
		constexpr auto m_fExhaustionLossSpeed = 0x248; // float
		constexpr auto m_fExhaustionLevelMax = 0x24c; // float
		constexpr auto m_fExhaustionLevelMin = 0x250; // float
	}

	namespace n_ATgDeploy_DeployableLinked {
		constexpr auto m_ParentDeployable = 0x448; // ObjectProperty
	}

	namespace n_AMaterialInstanceTimeVaryingActor {
		constexpr auto MatInst = 0x280; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_MoveAroundLanePusher {
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
		constexpr auto bMoveClockWise = 0xa0; // char : 1
	}

	namespace n_UTgAILocalPositionSolver {
		constexpr auto VfTable_IInterface_ActorPathConstraints = 0x60; // FPointer
		constexpr auto DefaultWeights = 0x68; // TArray<FDefaultRepulsorData>
		constexpr auto OuterController = 0x78; // ObjectProperty
		constexpr auto LastQueryTime = 0x80; // float
		constexpr auto LastQueryPoint = 0x84; // FVector
		constexpr auto LastSolvePoint = 0x90; // FVector
		constexpr auto bSolveDistanceThreshold = 0x9c; // char : 1
		constexpr auto bSolveWeights = 0x9c; // char : 1
	}

	namespace n_USeqAct_ParticleEventGenerator {
		constexpr auto bEnabled = 0x108; // char : 1
		constexpr auto bUseEmitterLocation = 0x108; // char : 1
		constexpr auto Instigator = 0x10c; // ObjectProperty
		constexpr auto EventNames = 0x114; // TArray<FString>
		constexpr auto EventTime = 0x124; // float
		constexpr auto EventLocation = 0x128; // FVector
		constexpr auto EventDirection = 0x134; // FVector
		constexpr auto EventVelocity = 0x140; // FVector
		constexpr auto EventNormal = 0x14c; // FVector
	}

	namespace n_UAnimNotify_ClothingMaxDistanceScale {
		constexpr auto StartScale = 0x68; // float
		constexpr auto EndScale = 0x6c; // float
		constexpr auto ScaleMode = 0x70; // EMaxDistanceScaleMode
		constexpr auto Duration = 0x74; // float
	}

	namespace n_UDownloadableContentEnumerator {
		constexpr auto DLCBundles = 0x60; // TArray<FOnlineContent>
		constexpr auto DLCRootDir = 0x70; // FString
		constexpr auto FindDLCDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto __OnFindDLCComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x68; // ETrail2SourceMethod
		constexpr auto SelectionMethod = 0x69; // EParticleSourceSelectionMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto SourceStrength = 0x74; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x98; // char : 1
		constexpr auto bInheritRotation = 0x98; // char : 1
		constexpr auto SourceOffsetCount = 0x9c; // int32_t
		constexpr auto SourceOffsetDefaults = 0xa0; // TArray<FVector>
	}

	namespace n_UTgMarkComponent {
		constexpr auto s_MarkList = 0x88; // TArray<FTargetMark>
		constexpr auto s_MarkEffectGroup = 0x98; // TArray<ObjectProperty>
		constexpr auto m_nHostItemId = 0xa8; // int32_t
		constexpr auto m_bStackEffects = 0xac; // char : 1
		constexpr auto m_bRemoveMarksOnDeath = 0xac; // char : 1
		constexpr auto m_fMarkDuration = 0xb0; // float
		constexpr auto m_nMaxMarks = 0xb4; // int32_t
		constexpr auto m_nPhysicalType = 0xb8; // int32_t
	}

	namespace n_UTgCameraModule_ThirdPersonVariableHeight {
		constexpr auto ZOffset = 0x1cc; // float
	}

	namespace n_AColorScaleVolume {
		constexpr auto ColorScale = 0x2bc; // FVector
		constexpr auto InterpTime = 0x2c8; // float
	}

	namespace n_UTgSeqAct_TriggerInterpActor {
		constexpr auto m_sStateName = 0x108; // FString
	}

	namespace n_UTgAIBehaviorAction_MoveToLanePusherFront {
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_ATgDevice_LongbowPlanted {
		constexpr auto m_CachedInhand = 0xaec; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NumMinionsInTowerRadius {
		constexpr auto bMinionsMustBeEnemy = 0x98; // char : 1
		constexpr auto bTowerMustBeEnemy = 0x98; // char : 1
		constexpr auto MinionThreshold = 0x9c; // int32_t
	}

	namespace n_USeqAct_SetMatInstScalarParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto ScalarValue = 0x118; // float
	}

	namespace n_UTexture2D {
		constexpr auto Mips = 0x100; // FIndirectArray_Mirror
		constexpr auto CachedPVRTCMips = 0x110; // FIndirectArray_Mirror
		constexpr auto CachedATITCMips = 0x120; // FIndirectArray_Mirror
		constexpr auto CachedETCMips = 0x130; // FIndirectArray_Mirror
		constexpr auto CachedFlashMipsMaxResolution = 0x140; // int32_t
		constexpr auto CachedFlashMips = 0x144; // FUntypedBulkData_Mirror
		constexpr auto SizeX = 0x184; // int32_t
		constexpr auto SizeY = 0x188; // int32_t
		constexpr auto OriginalSizeX = 0x18c; // int32_t
		constexpr auto OriginalSizeY = 0x190; // int32_t
		constexpr auto Format = 0x194; // EPixelFormat
		constexpr auto AddressX = 0x195; // TextureAddress
		constexpr auto AddressY = 0x196; // TextureAddress
		constexpr auto bIsEditorOnly = 0x198; // char : 1
		constexpr auto bHasBeenCooked = 0x198; // char : 1
		constexpr auto bIsStreamable = 0x198; // char : 1
		constexpr auto bHasCancelationPending = 0x198; // char : 1
		constexpr auto bHasBeenLoadedFromPersistentArchive = 0x198; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x198; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x198; // char : 1
		constexpr auto bIsCompositingSource = 0x198; // char : 1
		constexpr auto bHasBeenPaintedInEditor = 0x198; // char : 0
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x19c; // float
		constexpr auto TextureFileCacheName = 0x1a0; // FName
		constexpr auto TextureFileCacheGuid = 0x1a8; // FGuid
		constexpr auto RequestedMips = 0x1b8; // int32_t
		constexpr auto ResidentMips = 0x1bc; // int32_t
		constexpr auto MipsToRemoveOnCompress = 0x1c0; // int32_t
		constexpr auto PendingMipChangeRequestStatus = 0x1c4; // FThreadSafeCounter
		constexpr auto SystemMemoryData = 0x1c8; // TArray<char>
		constexpr auto StreamableTexturesLink = 0x1d8; // FTextureLinkedListMirror
		constexpr auto StreamingIndex = 0x1f0; // int32_t
		constexpr auto MipTailBaseIdx = 0x1f4; // int32_t
		constexpr auto ResourceMem = 0x1f8; // FPointer
		constexpr auto FirstResourceMemMip = 0x200; // int32_t
		constexpr auto Timer = 0x204; // float
	}

	namespace n_ATgRoyaleConvergeActor {
		constexpr auto m_fTargetConvergeRadiusSize = 0x280; // float
		constexpr auto m_fConvergeRadiusSize = 0x284; // float
		constexpr auto r_vConvergeRepInfo = 0x288; // FConvergeInfo
		constexpr auto m_FogActor = 0x290; // ObjectProperty
		constexpr auto m_fConvergeRadiusSpeed = 0x298; // float
		constexpr auto m_ConvergeLocationSpeed = 0x29c; // float
		constexpr auto r_vConvergeLocation = 0x2a0; // FVector
		constexpr auto m_bIsConverging = 0x2ac; // char : 1
		constexpr auto m_bIsExpanding = 0x2ac; // char : 1
		constexpr auto c_bFirstConvergence = 0x2ac; // char : 1
		constexpr auto m_bIsShifting = 0x2ac; // char : 1
		constexpr auto m_bUpdateTranslation = 0x2ac; // char : 1
		constexpr auto m_StaticMeshComponent = 0x2b0; // ComponentProperty
		constexpr auto m_fLastConvergeTimestamp = 0x2b8; // float
		constexpr auto m_fConvergeUpdateRate = 0x2bc; // float
		constexpr auto c_aSoundActor = 0x2c0; // ObjectProperty
		constexpr auto c_akDeathField = 0x2c8; // ObjectProperty
		constexpr auto m_fShiftingRemainingTime = 0x2d0; // float
	}

	namespace n_UDataStoreClient {
		constexpr auto GlobalDataStoreClasses = 0x70; // TArray<FString>
		constexpr auto GlobalDataStores = 0x80; // TArray<ObjectProperty>
		constexpr auto PlayerDataStoreClassNames = 0x90; // TArray<FString>
		constexpr auto PlayerDataStoreClasses = 0xa0; // TArray<UUIDataStore*>
		constexpr auto PlayerDataStores = 0xb0; // TArray<FPlayerDataStoreGroup>
	}

	namespace n_UUIComponent_DLCPack {
		constexpr auto m_mcDetail = 0x120; // TArray<ObjectProperty>
		constexpr auto m_mcNew = 0x130; // ObjectProperty
		constexpr auto m_mcTitle = 0x138; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x140; // ObjectProperty
		constexpr auto m_mcPrice = 0x148; // ObjectProperty
		constexpr auto m_mcConsolePrice = 0x150; // ObjectProperty
		constexpr auto m_mcDollars = 0x158; // ObjectProperty
		constexpr auto m_mcCents = 0x160; // ObjectProperty
		constexpr auto m_mcCurrency = 0x168; // ObjectProperty
		constexpr auto m_mcOneTimePurchase = 0x170; // ObjectProperty
		constexpr auto m_mcBuyNowText = 0x178; // ObjectProperty
		constexpr auto m_mcRefund = 0x180; // ObjectProperty
		constexpr auto m_mcSaleBanner = 0x188; // ObjectProperty
		constexpr auto m_mcDLCTexture = 0x190; // ObjectProperty
		constexpr auto m_mcPurchaseButton = 0x198; // ObjectProperty
		constexpr auto m_mcPanelButton = 0x1a0; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x1a8; // ObjectProperty
		constexpr auto m_pPrice = 0x1b0; // ObjectProperty
		constexpr auto m_mcGamepadPrompt = 0x1b8; // ObjectProperty
		constexpr auto m_eTextureSize = 0x1c0; // AdTextureSize
		constexpr auto m_bIsPortrait = 0x1c4; // char : 1
		constexpr auto m_bIsPanelButton = 0x1c4; // char : 1
		constexpr auto m_nPackId = 0x1c8; // int32_t
		constexpr auto m_sPackPrefix = 0x1cc; // FString
		constexpr auto m_sGamepadBuyKey = 0x1dc; // FName
	}

	namespace n_UTgAIBehaviorCondition {
		constexpr auto ComparisonOperator = 0x94; // EBehaviorComparison
	}

	namespace n_UTgAIUtility {
		constexpr auto UtilityType = 0x94; // EUtilityType
		constexpr auto IgnoreBehaviorState = 0x98; // TArray<EBotBehaviorState>
		constexpr auto RejctBehaviorState = 0xa8; // TArray<EBotBehaviorState>
		constexpr auto ParentIndex = 0xb8; // int32_t
	}

	namespace n_UUIHudChatBox {
		constexpr auto m_bLobby = 0x2cc; // char : 1
		constexpr auto m_bFadeFrame = 0x2cc; // char : 1
		constexpr auto m_bHighlight = 0x2cc; // char : 1
		constexpr auto m_bHideInput = 0x2cc; // char : 1
		constexpr auto m_fOffset = 0x2d0; // float
		constexpr auto m_fInputPosY = 0x2d4; // float
		constexpr auto m_fInputWidth = 0x2d8; // float
		constexpr auto m_fOutputTimer = 0x2dc; // float [0x8]
		constexpr auto m_nMaxWidth = 0x2fc; // int32_t
		constexpr auto m_sReplyName = 0x300; // FString
		constexpr auto m_Buffer = 0x310; // ObjectProperty
		constexpr auto m_Highlight = 0x318; // ObjectProperty
		constexpr auto m_Output = 0x320; // ObjectProperty
		constexpr auto m_OutputText = 0x328; // ObjectProperty [0x8]
		constexpr auto m_OutputIcon = 0x368; // ObjectProperty [0x8]
		constexpr auto m_OutputVgsCallout = 0x3a8; // ObjectProperty [0x28]
		constexpr auto m_OutputFrame = 0x4e8; // ObjectProperty
		constexpr auto m_OutputScroll = 0x4f0; // ObjectProperty
		constexpr auto m_mcCloseBtn = 0x4f8; // ObjectProperty
		constexpr auto m_Input = 0x500; // ObjectProperty
		constexpr auto m_InputBtn = 0x508; // ObjectProperty
		constexpr auto m_InputHelp = 0x510; // ObjectProperty
		constexpr auto m_InputChan = 0x518; // ObjectProperty
		constexpr auto m_InputFrame = 0x520; // ObjectProperty
		constexpr auto m_bVGSText = 0x528; // TArray<char>
	}

	namespace n_ATgCatapultActor {
		constexpr auto m_SeatSocketName = 0x2e8; // FName
		constexpr auto m_nUIMapIndex = 0x2f0; // int32_t
		constexpr auto r_DriverPawn = 0x2f4; // ObjectProperty
		constexpr auto m_fLaunchTime = 0x2fc; // float
		constexpr auto m_vLaunchVelocity = 0x300; // FVector
		constexpr auto m_fRotationSpeed = 0x30c; // float
		constexpr auto m_fTriggerRadius = 0x310; // float
		constexpr auto m_fTriggerHeight = 0x314; // float
		constexpr auto m_TriggerCylinder = 0x318; // ObjectProperty
		constexpr auto r_nFlashFire = 0x320; // char
		constexpr auto c_nCachedFlashFire = 0x321; // char
		constexpr auto r_bIsFiring = 0x324; // char : 1
		constexpr auto c_bIsRotating = 0x324; // char : 1
		constexpr auto m_bIsPlayingFireAnim = 0x324; // char : 1
		constexpr auto c_WheelControls = 0x328; // ObjectProperty [0x4]
		constexpr auto c_WheelSpinSpeed = 0x348; // float
		constexpr auto c_SimulatedRotationSpeed = 0x34c; // float
		constexpr auto c_SavedRotation = 0x350; // FRotator
		constexpr auto c_TargetRotation = 0x35c; // FRotator
		constexpr auto m_fLaunchPowerLevel = 0x368; // float
		constexpr auto c_MovementFXList = 0x36c; // TArray<ObjectProperty>
		constexpr auto c_MovementFXSocketList = 0x37c; // TArray<FName>
		constexpr auto c_SeatIndicatorFX = 0x38c; // ObjectProperty
		constexpr auto c_AimIndicatorFX = 0x394; // ObjectProperty
		constexpr auto c_TurnStartAudFX = 0x39c; // ObjectProperty
		constexpr auto c_TurnStopAudFX = 0x3a4; // ObjectProperty
		constexpr auto c_DriverEnterAudFX = 0x3ac; // ObjectProperty
		constexpr auto m_fRotationLockoutTime = 0x3b4; // float
		constexpr auto m_fRemainingRotationLockoutTime = 0x3b8; // float
		constexpr auto c_nYawFXDeadzone = 0x3bc; // int32_t
		constexpr auto c_nYawOffset = 0x3c0; // int32_t
		constexpr auto m_vRelativeSeatLoc = 0x3c4; // FVector
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x60; // FFontImportOptionsData
	}

	namespace n_UTgNewUserSettings {
		constexpr auto WatchedVideoIds = 0x60; // TArray<int32_t>
	}

	namespace n_USeqAct_FinishSequence {
		constexpr auto OutputLabel = 0x108; // FString
	}

	namespace n_UUIDataProvider_OnlineFriends {
		constexpr auto FriendsList = 0x74; // TArray<FOnlineFriend>
		constexpr auto NickNameCol = 0x84; // FString
		constexpr auto PresenceInfoCol = 0x94; // FString
		constexpr auto FriendStateCol = 0xa4; // FString
		constexpr auto bIsOnlineCol = 0xb4; // FString
		constexpr auto bIsPlayingCol = 0xc4; // FString
		constexpr auto bIsPlayingThisGameCol = 0xd4; // FString
		constexpr auto bIsJoinableCol = 0xe4; // FString
		constexpr auto bHasVoiceSupportCol = 0xf4; // FString
		constexpr auto bHaveInvitedCol = 0x104; // FString
		constexpr auto bHasInvitedYouCol = 0x114; // FString
		constexpr auto OfflineText = 0x124; // FString
		constexpr auto OnlineText = 0x134; // FString
		constexpr auto AwayText = 0x144; // FString
		constexpr auto BusyText = 0x154; // FString
	}

	namespace n_UMcpGroupsManager {
		constexpr auto CreateGroupUrl = 0x128; // FString
		constexpr auto DeleteGroupUrl = 0x138; // FString
		constexpr auto QueryGroupsUrl = 0x148; // FString
		constexpr auto QueryGroupMembersUrl = 0x158; // FString
		constexpr auto AddGroupMembersUrl = 0x168; // FString
		constexpr auto RemoveGroupMembersUrl = 0x178; // FString
		constexpr auto DeleteAllGroupsUrl = 0x188; // FString
		constexpr auto AcceptGroupInviteUrl = 0x198; // FString
		constexpr auto RejectGroupInviteUrl = 0x1a8; // FString
		constexpr auto __OnQueryGroupsRequestComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersRequestComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnAddGroupMembersRequestComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteRequestComplete__Delegate = 0x1e8; // DelegateProperty
	}

	namespace n_UTgSeqAct_AIMoveToActor {
		constexpr auto Destination = 0x108; // ObjectProperty
	}

	namespace n_UInputAction {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_Keys = 0x68; // TArray<FInputKeyEvent>
		constexpr auto m_CallbackContainer = 0x78; // ObjectProperty
		constexpr auto m_bAlwaysHandleInput = 0x80; // char : 1
	}

	namespace n_USeqVar_External {
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto VariableLabel = 0xa8; // FString
	}

	namespace n_UTgLevelStreamingWorldDetail {
		constexpr auto MinimumWorldDetailLevel = 0x100; // int32_t
		constexpr auto MaximumWorldDetailLevel = 0x104; // int32_t
		constexpr auto CachedDetailCheck = 0x108; // char
		constexpr auto LastUpdateTime = 0x10c; // int32_t
	}

	namespace n_ATgAIController_BehaviorPet {
		constexpr auto OwnerCombatTarget = 0x90c; // ObjectProperty
	}

	namespace n_AKActorSpawnable {
		constexpr auto bRecycleScaleToZero = 0x3b4; // char : 1
		constexpr auto bScalingToZero = 0x3b4; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceLifesteal {
		constexpr auto m_CachedFiremode = 0xc8; // ObjectProperty
	}

	namespace n_ATgRespawnBeaconEntrance {
		constexpr auto ExitBeacon = 0x32c; // ObjectProperty
		constexpr auto r_bEntranceActive = 0x334; // char : 1
		constexpr auto r_nPendingTeleport = 0x338; // char
		constexpr auto c_LocalChargingState = 0x339; // ERespawnBeaconChargingState
		constexpr auto r_ChargingState = 0x33a; // ERespawnBeaconChargingState
		constexpr auto m_TeleportPSC = 0x33c; // ComponentProperty
		constexpr auto m_fChargeDelay = 0x344; // float
		constexpr auto m_fTeleportDelay = 0x348; // float
		constexpr auto m_fPreTeleportFXTime = 0x34c; // float
		constexpr auto s_fChargeStateTimeStamp = 0x350; // float
		constexpr auto s_PendingTeleports = 0x354; // TArray<FPendingTeleportInfo>
	}

	namespace n_UTgGameplayCurvesSet_BulletMagnetOverDist {
		constexpr auto BulletMagnetDegOverDist = 0x64; // FRawDistributionFloat
		constexpr auto BulletMagnetMaxDegOverDist = 0x88; // FRawDistributionFloat
		constexpr auto BulletMagnetActiveType = 0xac; // EPaladinsBulletMagnetType
	}

	namespace n_UTgObjectReferencer {
		constexpr auto m_Manifest = 0x84; // FPointer
	}

	namespace n_UInterpTrackSkelControlScale {
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_UAnimNodeBlendPerBone {
		constexpr auto bForceLocalSpaceBlend = 0x124; // char : 1
		constexpr auto BranchStartBoneName = 0x128; // TArray<FName>
		constexpr auto Child2PerBoneWeight = 0x138; // TArray<float>
		constexpr auto LocalToCompReqBones = 0x148; // TArray<char>
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0xb0; // FString
		constexpr auto Description = 0xc0; // FString
		constexpr auto SortPriority = 0xd0; // int32_t
		constexpr auto A = 0xd4; // FExpressionInput
		constexpr auto bLastPreviewed = 0x108; // char : 1
		constexpr auto Id = 0x10c; // FGuid
	}

	namespace n_UUIDataStore_OnlinePlayerData {
		constexpr auto FriendsProvider = 0x98; // ObjectProperty
		constexpr auto PlayerControllerId = 0xa0; // int32_t
		constexpr auto PlayerNick = 0xa4; // FString
		constexpr auto ProfileSettingsClassName = 0xb4; // FString
		constexpr auto ProfileSettingsClass = 0xc4; // UOnlineProfileSettings*
		constexpr auto ProfileProvider = 0xcc; // ObjectProperty
		constexpr auto ProfileProviderClassName = 0xd4; // FString
		constexpr auto ProfileProviderClass = 0xe4; // UUIDataProvider_OnlineProfileSettings*
		constexpr auto PlayerStorageClassName = 0xec; // FString
		constexpr auto PlayerStorageClass = 0xfc; // UOnlinePlayerStorage*
		constexpr auto StorageProvider = 0x104; // ObjectProperty
		constexpr auto StorageProviderClassName = 0x10c; // FString
		constexpr auto StorageProviderClass = 0x11c; // UUIDataProvider_OnlinePlayerStorage*
		constexpr auto FriendMessagesProvider = 0x124; // ObjectProperty
		constexpr auto AchievementsProvider = 0x12c; // ObjectProperty
		constexpr auto FriendsProviderClassName = 0x134; // FString
		constexpr auto FriendsProviderClass = 0x144; // UUIDataProvider_OnlineFriends*
		constexpr auto FriendMessagesProviderClassName = 0x14c; // FString
		constexpr auto FriendMessagesProviderClass = 0x15c; // UUIDataProvider_OnlineFriendMessages*
		constexpr auto AchievementsProviderClassName = 0x164; // FString
		constexpr auto AchievementsProviderClass = 0x174; // UUIDataProvider_PlayerAchievements*
		constexpr auto PartyChatProviderClassName = 0x17c; // FString
		constexpr auto PartyChatProviderClass = 0x18c; // UUIDataProvider_OnlinePartyChatList*
		constexpr auto PartyChatProvider = 0x194; // ObjectProperty
	}

	namespace n_UTgAnimNotify_Sound_ByBotId {
		constexpr auto m_BotOverrideList = 0x7c; // TArray<FPSE_BotData>
	}

	namespace n_ASpeedTreeActor {
		constexpr auto SpeedTreeComponent = 0x280; // ComponentProperty
	}

	namespace n_ATgRoyaleCatapult {
		constexpr auto SMC = 0x280; // ComponentProperty
		constexpr auto m_nCatapultGroupID = 0x288; // int32_t
	}

	namespace n_UUIScene_UIHudMenu {
		constexpr auto m_mcToggleMenuPrompt = 0x154; // ObjectProperty
		constexpr auto m_pTabs = 0x15c; // ObjectProperty
		constexpr auto m_pMap = 0x164; // ObjectProperty
		constexpr auto m_pInventory = 0x16c; // ObjectProperty
		constexpr auto m_pClass = 0x174; // ObjectProperty
		constexpr auto m_pToggleMenuAction = 0x17c; // ObjectProperty
	}

	namespace n_URB_ConstraintDrawComponent {
		constexpr auto LimitMaterial = 0x24c; // ObjectProperty
	}

	namespace n_UUIComponent_LeaderboardPlayer {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcTitle = 0x128; // ObjectProperty
		constexpr auto m_mcPosition = 0x130; // ObjectProperty
		constexpr auto m_mcWins = 0x138; // ObjectProperty
		constexpr auto m_mcLosses = 0x140; // ObjectProperty
		constexpr auto m_mcScore = 0x148; // ObjectProperty
		constexpr auto m_mcRegion = 0x150; // ObjectProperty
		constexpr auto m_mcChampion = 0x158; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x160; // ObjectProperty
		constexpr auto m_mcChampionFrame = 0x168; // ObjectProperty
		constexpr auto m_FrameButton = 0x170; // ObjectProperty
	}

	namespace n_USeqAct_MultiplyFloat {
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_ATgStaticMeshActor_TeamColor {
		constexpr auto nTaskForce = 0x2a4; // int32_t
		constexpr auto TeamColoringParameterName = 0x2a8; // FName
		constexpr auto bInvertColoringParameter = 0x2b0; // char : 1
		constexpr auto bInstancedAllMaterials = 0x2b0; // char : 1
		constexpr auto bFriendlyWithLocalPlayer = 0x2b4; // char
		constexpr auto InitialMaterialList = 0x2b8; // TArray<ObjectProperty>
	}

	namespace n_USkelControlFootPlacement {
		constexpr auto FootOffset = 0x12c; // float
		constexpr auto FootUpAxis = 0x130; // EAxis
		constexpr auto FootRotOffset = 0x134; // FRotator
		constexpr auto bInvertFootUpAxis = 0x140; // char : 1
		constexpr auto bOrientFootToGround = 0x140; // char : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0x140; // char : 1
		constexpr auto m_bManuallyOverrideEffectorLocation = 0x140; // char : 1
		constexpr auto m_bUseCachedFootOffset = 0x140; // char : 1
		constexpr auto MaxUpAdjustment = 0x144; // float
		constexpr auto MaxDownAdjustment = 0x148; // float
		constexpr auto MaxFootOrientAdjust = 0x14c; // float
		constexpr auto m_vCachedFootOffset = 0x150; // FVector
	}

	namespace n_ATgLootManager {
		constexpr auto m_SlotLoot = 0x280; // TArray<int32_t>
		constexpr auto m_SlotChosen = 0x290; // TArray<char>
		constexpr auto m_CachedTables = 0x2a0; // TArray<ObjectProperty>
		constexpr auto m_nChosenCount = 0x2b0; // int32_t
		constexpr auto m_LootTables = 0x2b4; // TArray<int32_t>
		constexpr auto m_SlotTables = 0x2c4; // TArray<int32_t>
		constexpr auto m_SlotExceptions = 0x2d4; // TArray<char>
		constexpr auto m_nShardDropCount = 0x2e4; // int32_t
		constexpr auto m_fLootSpawnMinVelocity = 0x2e8; // float
		constexpr auto m_fLootSpawnMaxVelocity = 0x2ec; // float
		constexpr auto m_fLootSpawnMinZVelocity = 0x2f0; // float
		constexpr auto m_fLootSpawnMaxZVelocity = 0x2f4; // float
		constexpr auto m_fLootSpawnAngle = 0x2f8; // float
		constexpr auto m_PendingLootList = 0x2fc; // TArray<FPendingLoot>
		constexpr auto m_fLastPendingLootSpawnTimestamp = 0x30c; // float
		constexpr auto m_fPendingLootSpawnFrequency = 0x310; // float
		constexpr auto m_bLTEDisableLootArmorPotions = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootHealingPotions = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootWeapons = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootSupportAbilities = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootOffensiveAbilities = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootMovementAbilities = 0x314; // char : 1
		constexpr auto m_bLTEDisableLootRunes = 0x314; // char : 1
		constexpr auto m_bLTESingleWeaponLimit = 0x314; // char : 1
		constexpr auto m_bLTESingleSupportAbilityLimit = 0x314; // char : 0
		constexpr auto m_bLTESingleOffensiveAbilityLimit = 0x314; // char : 0
		constexpr auto m_bLTESingleMovementAbilityLimit = 0x314; // char : 0
		constexpr auto m_nLTESingleWeaponType = 0x318; // int32_t
		constexpr auto m_nLTESingleSupportAbilityType = 0x31c; // int32_t
		constexpr auto m_nLTESingleOffensiveAbilityType = 0x320; // int32_t
		constexpr auto m_nLTESingleMovementAbilityType = 0x324; // int32_t
		constexpr auto m_CachedItemSubtypeLookup = 0x328; // FMultiMap_Mirror
	}

	namespace n_ATgDevice_VanguardUlt {
		constexpr auto m_fGrabUpdateTimer = 0xb94; // float
		constexpr auto m_fGrabUpdateDuration = 0xb98; // float
		constexpr auto m_fJoinDuration = 0xb9c; // float
	}

	namespace n_USeqAct_ToggleCinematicMode {
		constexpr auto bDisableMovement = 0x108; // char : 1
		constexpr auto bDisableTurning = 0x108; // char : 1
		constexpr auto bHidePlayer = 0x108; // char : 1
		constexpr auto bDisableInput = 0x108; // char : 1
		constexpr auto bHideHUD = 0x108; // char : 1
		constexpr auto bDeadBodies = 0x108; // char : 1
		constexpr auto bDroppedPickups = 0x108; // char : 1
	}

	namespace n_UMobileMenuObject {
		constexpr auto bHasBeenInitialized = 0x60; // char : 1
		constexpr auto bRelativeLeft = 0x60; // char : 1
		constexpr auto bRelativeTop = 0x60; // char : 1
		constexpr auto bRelativeWidth = 0x60; // char : 1
		constexpr auto bRelativeHeight = 0x60; // char : 1
		constexpr auto bApplyGlobalScaleLeft = 0x60; // char : 1
		constexpr auto bApplyGlobalScaleTop = 0x60; // char : 1
		constexpr auto bApplyGlobalScaleWidth = 0x60; // char : 1
		constexpr auto bApplyGlobalScaleHeight = 0x60; // char : 0
		constexpr auto bHeightRelativeToWidth = 0x60; // char : 0
		constexpr auto bXOffsetIsActual = 0x60; // char : 0
		constexpr auto bYOffsetIsActual = 0x60; // char : 0
		constexpr auto bIsActive = 0x60; // char : 0
		constexpr auto bIsHidden = 0x60; // char : 0
		constexpr auto bIsTouched = 0x60; // char : 0
		constexpr auto bIsHighlighted = 0x60; // char : 0
		constexpr auto bTellSceneBeforeRendering = 0x60; // char : 0
		constexpr auto Left = 0x64; // float
		constexpr auto Top = 0x68; // float
		constexpr auto Width = 0x6c; // float
		constexpr auto Height = 0x70; // float
		constexpr auto InitialLeft = 0x74; // float
		constexpr auto InitialTop = 0x78; // float
		constexpr auto InitialWidth = 0x7c; // float
		constexpr auto InitialHeight = 0x80; // float
		constexpr auto AuthoredGlobalScale = 0x84; // float
		constexpr auto TopLeeway = 0x88; // float
		constexpr auto BottomLeeway = 0x8c; // float
		constexpr auto LeftLeeway = 0x90; // float
		constexpr auto RightLeeway = 0x94; // float
		constexpr auto XOffset = 0x98; // float
		constexpr auto YOffset = 0x9c; // float
		constexpr auto Tag = 0xa0; // FString
		constexpr auto InputOwner = 0xb0; // ObjectProperty
		constexpr auto Opacity = 0xb8; // float
		constexpr auto OwnerScene = 0xbc; // ObjectProperty
		constexpr auto RelativeToTag = 0xc4; // FString
		constexpr auto RelativeTo = 0xd4; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_MirrorDamageToHealBlock {
		constexpr auto m_CachedFiremode = 0xc8; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_MoveBase {
		constexpr auto bSubtractPawnRadius = 0x94; // char : 1
		constexpr auto bSubtractTargetPawnRadius = 0x94; // char : 1
		constexpr auto bLookAtTarget = 0x94; // char : 1
		constexpr auto bMustHaveLOS = 0x94; // char : 1
		constexpr auto MoveTolerance = 0x98; // float
	}

	namespace n_UUIComponent_OptionEntryText {
		constexpr auto m_pTextInput = 0x150; // ObjectProperty
	}

	namespace n_USeqAct_AkPostEvent {
		constexpr auto Signal = 0x120; // int32_t
		constexpr auto Event = 0x124; // ObjectProperty
	}

	namespace n_UGFxRawData {
		constexpr auto RawData = 0x60; // TArray<char>
		constexpr auto ReferencedSwfs = 0x70; // TArray<FString>
		constexpr auto References = 0x80; // TArray<ObjectProperty>
		constexpr auto UserReferences = 0x90; // TArray<ObjectProperty>
	}

	namespace n_UTgBrowserManager {
		constexpr auto URLGold = 0x60; // FString
		constexpr auto URLAlert = 0x70; // FString
		constexpr auto URLStore = 0x80; // FString
		constexpr auto URLBooster = 0x90; // FString
		constexpr auto URLSupport = 0xa0; // FString
		constexpr auto URLProfile = 0xb0; // FString
		constexpr auto URLRedirect = 0xc0; // FString
		constexpr auto URLActivateKey = 0xd0; // FString
		constexpr auto URLCreateAccount = 0xe0; // FString
		constexpr auto URLRecoverPassword = 0xf0; // FString
		constexpr auto URLRecoverUsername = 0x100; // FString
		constexpr auto URLGodPack = 0x110; // FString
		constexpr auto URLRanked = 0x120; // FString
		constexpr auto URLFacebookPromo = 0x130; // FString
		constexpr auto URLTwitterPromo = 0x140; // FString
		constexpr auto URLRecruitPromo = 0x150; // FString
		constexpr auto URLPlayerStats = 0x160; // FString
		constexpr auto URLTwitchSignup = 0x170; // FString
		constexpr auto URLTwitchHelp = 0x180; // FString
		constexpr auto URLLaunchTournament = 0x190; // FString
		constexpr auto URLLinkAccount = 0x1a0; // FString
		constexpr auto m_pContainer = 0x1b0; // ObjectProperty
	}

	namespace n_UPComInputLightingEffect {
		constexpr auto bAllowLogitechSdk = 0x60; // char : 1
		constexpr auto bLogitechSdkInitialized = 0x60; // char : 1
		constexpr auto bLatchedSystemSettingsSdkAllowed = 0x60; // char : 1
		constexpr auto Presets = 0x64; // TArray<FPComInputLightingPreset>
		constexpr auto PresetsMap = 0x74; // FMap_Mirror
		constexpr auto ActivePresets = 0xbc; // TArray<FPComActiveInputLightingPreset>
		constexpr auto BlendFromColor = 0xcc; // FLinearColor
		constexpr auto BlendPercent = 0xdc; // float
	}

	namespace n_UPComMusicThemePlayer {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MusicThemePath = 0x68; // FString
		constexpr auto MusicTheme = 0x78; // ObjectProperty
		constexpr auto MusicComp = 0x80; // ComponentProperty
		constexpr auto MusicSyncActor = 0x88; // ObjectProperty
		constexpr auto LastMusicEvent = 0x90; // FName
		constexpr auto CurrentMusicTrack = 0x98; // FMusicTrackStruct
		constexpr auto CurrentMusicTrackStartTime = 0xc4; // float
		constexpr auto CurrentMusicTrackDuration = 0xc8; // float
	}

	namespace n_UTgAnimBlendByViewTarget {
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_LocalPlayerController = 0x170; // ObjectProperty
	}

	namespace n_UHavokNavigationRenderingComponent {
		constexpr auto bDrawEdges = 0x24c; // char : 1
	}

	namespace n_UMcpUserManagerBase {
		constexpr auto McpUserManagerClassName = 0x78; // FString
		constexpr auto __OnRegisterUserComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryUsersComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteUserComplete__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialVectorCoordTransform
	}

	namespace n_UTgMinimapManager {
		constexpr auto m_LocalTeam = 0x60; // TgMapTeam
		constexpr auto m_EntityMap = 0x64; // TMap<None, None>
		constexpr auto m_bShouldDisableVisionRange = 0xac; // char : 1
		constexpr auto m_bSkipWorldGeometryLOS = 0xac; // char : 1
		constexpr auto m_bRequiresVisionUpdate = 0xac; // char : 1
		constexpr auto m_fFogOfWarAreaRevealTime = 0xb0; // float
		constexpr auto m_fUpdateTimer = 0xb4; // float
		constexpr auto m_fLastEntityUpdateTime = 0xb8; // float
		constexpr auto m_ReferencedRepInfos = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UTgAIBehaviorAction_MoveToDeployable {
		constexpr auto DeployableId = 0x9c; // int32_t
		constexpr auto bMustBeEnemy = 0xa0; // char : 1
		constexpr auto bIgnoreInsideCollision = 0xa0; // char : 1
		constexpr auto bIgnoreTaskforce = 0xa0; // char : 1
	}

	namespace n_UTgDeviceForm_DemonStim {
		constexpr auto m_fTransitionTime = 0x2bc; // float
	}

	namespace n_ATgDevice_ChainSequence {
		constexpr auto m_nChainCount = 0xaec; // int32_t
		constexpr auto m_fChainResetTimer = 0xaf0; // float
		constexpr auto m_fChainResetDuration = 0xaf4; // float
	}

	namespace n_UTgInvListener_ActiveWhileWeaponSwap {
		constexpr auto m_bActivateWhileInhandActive = 0xc8; // char : 1
		constexpr auto m_bIsActive = 0xc8; // char : 1
	}

	namespace n_UTgAnimNotify_InterpolateMorphTargetWeight {
		constexpr auto MorphNodePoseName = 0x68; // FName
		constexpr auto MorphTargetWeight = 0x70; // float
		constexpr auto OnInterruptBehavior = 0x74; // InterruptMorphTargetBehavior
		constexpr auto InterruptMorphTargetWeight = 0x78; // float
		constexpr auto InitialMorphTargetWeight = 0x7c; // float
	}

	namespace n_UUIDataStore_Registry {
		constexpr auto RegistryData = 0x98; // TArray<FRegistryKeyValuePair>
	}

	namespace n_USeqAct_DrawText {
		constexpr auto DisplayTimeSeconds = 0x108; // float
		constexpr auto bDisplayOnObject = 0x10c; // char : 1
		constexpr auto DrawTextInfo = 0x110; // FKismetDrawTextInfo
	}

	namespace n_ATgDevice_Impasse {
		constexpr auto r_fTremorsCooldownReduction = 0xaec; // float
		constexpr auto m_fCachedWallHealthPercent = 0xaf0; // float
	}

	namespace n_UTgAIBehaviorCondition_IsDecoyState {
		constexpr auto DecoyState = 0x98; // char
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x68; // char : 1
	}

	namespace n_ARB_Thruster {
		constexpr auto bThrustEnabled = 0x280; // char : 1
		constexpr auto ThrustStrength = 0x284; // float
	}

	namespace n_USeqAct_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x108; // ObjectProperty
		constexpr auto FaceFXGroupName = 0x110; // FString
		constexpr auto FaceFXAnimName = 0x120; // FString
		constexpr auto SoundCueToPlay = 0x130; // ObjectProperty
		constexpr auto AkEventToPlay = 0x138; // ObjectProperty
	}

	namespace n_UTgAchievement_Damage {
		constexpr auto m_fDamageDealt = 0x90; // float
	}

	namespace n_ATgCollisionProxy_Mesh {
		constexpr auto m_MeshComponent = 0x2b4; // ComponentProperty
	}

	namespace n_UTgAnimNodeBlendByAFK {
		constexpr auto PawnOwner = 0x168; // ObjectProperty
	}

	namespace n_UUIData_BattlePassLevel {
		constexpr auto m_nLevel = 0x60; // int32_t
		constexpr auto m_pLTI = 0x64; // ObjectProperty
		constexpr auto m_bUnlocked = 0x6c; // char : 1
		constexpr auto m_bPremium = 0x6c; // char : 1
	}

	namespace n_USeqAct_CameraLookAt {
		constexpr auto bAffectCamera = 0x108; // char : 1
		constexpr auto bAlwaysFocus = 0x108; // char : 1
		constexpr auto bAdjustCamera = 0x108; // char : 1
		constexpr auto bTurnInPlace = 0x108; // char : 1
		constexpr auto bIgnoreTrace = 0x108; // char : 1
		constexpr auto bAffectHead = 0x108; // char : 1
		constexpr auto bRotatePlayerWithCamera = 0x108; // char : 1
		constexpr auto bToggleGodMode = 0x108; // char : 1
		constexpr auto bLeaveCameraRotation = 0x108; // char : 0
		constexpr auto bDisableInput = 0x108; // char : 0
		constexpr auto bUsedTimer = 0x108; // char : 0
		constexpr auto bCheckLineOfSight = 0x108; // char : 0
		constexpr auto InterpSpeedRange = 0x10c; // FVector2D
		constexpr auto InFocusFOV = 0x114; // FVector2D
		constexpr auto FocusBoneName = 0x11c; // FName
		constexpr auto TextDisplay = 0x124; // FString
		constexpr auto TotalTime = 0x134; // float
		constexpr auto CameraFOV = 0x138; // float
		constexpr auto RemainingTime = 0x13c; // float
	}

	namespace n_UTextureMovie {
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto AddressX = 0x109; // TextureAddress
		constexpr auto AddressY = 0x10a; // TextureAddress
		constexpr auto MovieStreamSource = 0x10b; // EMovieStreamSource
		constexpr auto DecoderClass = 0x10c; // UCodecMovie*
		constexpr auto Decoder = 0x114; // ObjectProperty
		constexpr auto Paused = 0x11c; // char : 1
		constexpr auto Stopped = 0x11c; // char : 1
		constexpr auto Looping = 0x11c; // char : 1
		constexpr auto ResetOnLastFrame = 0x11c; // char : 1
		constexpr auto AutoPlay = 0x11c; // char : 1
		constexpr auto Data = 0x120; // FUntypedBulkData_Mirror
		constexpr auto ReleaseCodecFence = 0x160; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_BigGame {
		constexpr auto m_fDisengageHitTime = 0xc8; // float
		constexpr auto m_DisengageHitTarget = 0xcc; // ObjectProperty
	}

	namespace n_UUIHudCenter {
		constexpr auto m_nReticle = 0x244; // int32_t
		constexpr auto m_nStuckCount = 0x248; // int32_t
		constexpr auto m_nAmmoCurrent = 0x24c; // int32_t
		constexpr auto m_nAmmoClipSize = 0x250; // int32_t
		constexpr auto m_nReticleColor = 0x254; // int32_t
		constexpr auto m_bCharge = 0x258; // char : 1
		constexpr auto m_bSprinting = 0x258; // char : 1
		constexpr auto m_bShouldShow = 0x258; // char : 1
		constexpr auto m_bChangeReticleOverEnemy = 0x258; // char : 1
		constexpr auto m_bChargeAmmo = 0x258; // char : 1
		constexpr auto m_bReticleBloom = 0x258; // char : 1
		constexpr auto m_bReticleVisible = 0x258; // char : 1
		constexpr auto m_bReticleAccessoryVisible = 0x258; // char : 1
		constexpr auto m_bDisableCombatLog = 0x258; // char : 0
		constexpr auto m_bRecharging = 0x258; // char : 0
		constexpr auto m_bWasHiddenOnTick = 0x258; // char : 0
		constexpr auto m_bWasReloading = 0x258; // char : 0
		constexpr auto m_bResurrecting = 0x258; // char : 0
		constexpr auto m_bResurrectionFailed = 0x258; // char : 0
		constexpr auto m_bShowFuel = 0x258; // char : 0
		constexpr auto m_bHitWarning3pVisible = 0x258; // char : 0
		constexpr auto m_bEnteredCatapult = 0x258; // char : 0
		constexpr auto m_fReloadTime = 0x25c; // float
		constexpr auto m_fReloadTimer = 0x260; // float
		constexpr auto m_fChargePercent = 0x264; // float
		constexpr auto m_fResolutionModX = 0x268; // float
		constexpr auto m_fResolutionModY = 0x26c; // float
		constexpr auto m_fResurrectionTimer = 0x270; // float
		constexpr auto m_fTotalResurrectionTime = 0x274; // float
		constexpr auto m_mcCharge = 0x278; // ObjectProperty
		constexpr auto m_mcChargeMask = 0x280; // ObjectProperty
		constexpr auto m_mcReticle = 0x288; // ObjectProperty
		constexpr auto m_mcCircleReticle = 0x290; // ObjectProperty
		constexpr auto m_mcCicleReticleAccuracy = 0x298; // ObjectProperty [0x2]
		constexpr auto m_mcCrossReticle = 0x2a8; // ObjectProperty
		constexpr auto m_mcCrossReticleUp = 0x2b0; // ObjectProperty
		constexpr auto m_mcCrossReticleLeft = 0x2b8; // ObjectProperty
		constexpr auto m_mcCrossReticleRight = 0x2c0; // ObjectProperty
		constexpr auto m_mcCrossReticleDown = 0x2c8; // ObjectProperty
		constexpr auto m_mcDotReticle = 0x2d0; // ObjectProperty
		constexpr auto m_mcWideReticle = 0x2d8; // ObjectProperty
		constexpr auto m_mcShaLinReticle = 0x2e0; // ObjectProperty
		constexpr auto m_mcShaLinReticleDraw = 0x2e8; // ObjectProperty
		constexpr auto m_mcShaLinImpalerReticle = 0x2f0; // ObjectProperty
		constexpr auto m_mcMaeveReticle = 0x2f8; // ObjectProperty
		constexpr auto m_mcMaevePounceLIRecticle = 0x300; // ObjectProperty
		constexpr auto m_mcMaevePounceLORecticle = 0x308; // ObjectProperty
		constexpr auto m_mcMaevePounceRIRecticle = 0x310; // ObjectProperty
		constexpr auto m_mcMaevePounceRORecticle = 0x318; // ObjectProperty
		constexpr auto m_mcMinigunReticle = 0x320; // ObjectProperty
		constexpr auto m_mcMinigunReticleAccuracy = 0x328; // ObjectProperty [0x2]
		constexpr auto m_mcMinigunReticleFill = 0x338; // ObjectProperty
		constexpr auto m_mcMinigunReticleMask = 0x340; // ObjectProperty
		constexpr auto m_mcCatapultReticle = 0x348; // ObjectProperty
		constexpr auto m_mcCatapultAim = 0x350; // ObjectProperty
		constexpr auto m_mcHitWarning3p = 0x358; // ObjectProperty
		constexpr auto m_mcTargeter = 0x360; // ObjectProperty
		constexpr auto m_mcHitMarker = 0x368; // ObjectProperty
		constexpr auto m_mcHitMarkerTicks = 0x370; // ObjectProperty [0x4]
		constexpr auto m_mcAccuracy = 0x390; // ObjectProperty
		constexpr auto m_mcRecharge = 0x398; // ObjectProperty
		constexpr auto m_mcRechargeCD = 0x3a0; // ObjectProperty
		constexpr auto m_mcStuck = 0x3a8; // ObjectProperty
		constexpr auto m_mcAmmoNew = 0x3b0; // ObjectProperty
		constexpr auto m_mcAmmoNewCharge = 0x3b8; // ObjectProperty
		constexpr auto m_mcAmmoNewCurrent = 0x3c0; // ObjectProperty
		constexpr auto m_mcAmmoNewClipSize = 0x3c8; // ObjectProperty
		constexpr auto m_mcAmmoNewChargeMask = 0x3d0; // ObjectProperty
		constexpr auto m_mcResurrecting = 0x3d8; // ObjectProperty
		constexpr auto m_mcResurrectingText = 0x3e0; // ObjectProperty
		constexpr auto m_mcResurrectingTimer = 0x3e8; // ObjectProperty
		constexpr auto m_eCombatInfoType = 0x3f0; // int32_t
		constexpr auto m_fGlobalChatTimer = 0x3f4; // float
		constexpr auto m_Reward = 0x3f8; // ObjectProperty
		constexpr auto m_RewardName = 0x400; // ObjectProperty
		constexpr auto m_RewardAmount = 0x408; // ObjectProperty
		constexpr auto m_mcGlobalChat = 0x410; // ObjectProperty
		constexpr auto m_mcGlobalChatTF = 0x418; // ObjectProperty
		constexpr auto m_mcKillingBlow = 0x420; // ObjectProperty
		constexpr auto m_mcDamage = 0x428; // ObjectProperty
		constexpr auto m_Projectiles = 0x430; // ObjectProperty
		constexpr auto m_ProjectilePointers = 0x438; // FHudProjectile [0xa]
		constexpr auto m_DamageMarkersLight = 0x6b8; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistLight = 0x6c8; // TArray<int32_t>
		constexpr auto m_DamageMarkersMedium = 0x6d8; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistMedium = 0x6e8; // TArray<int32_t>
		constexpr auto m_DamageMarkersHeavy = 0x6f8; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistHeavy = 0x708; // TArray<int32_t>
		constexpr auto m_DamageMarkersAOEMedium = 0x718; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistAOEMedium = 0x728; // TArray<int32_t>
		constexpr auto m_DamageMarkersAOEHeavy = 0x738; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistAOEHeavy = 0x748; // TArray<int32_t>
		constexpr auto m_mcFuel = 0x758; // ObjectProperty
		constexpr auto m_mcFuelBar = 0x760; // ObjectProperty
		constexpr auto m_mcFuelMask = 0x768; // ObjectProperty
		constexpr auto m_mcReload = 0x770; // ObjectProperty
		constexpr auto m_mcReloadTF = 0x778; // ObjectProperty
		constexpr auto m_mcReloadAnim = 0x780; // ObjectProperty
		constexpr auto m_HealFeed = 0x788; // ObjectProperty
		constexpr auto m_Messages = 0x790; // TArray<FMessageClip>
		constexpr auto m_fClient3pReloadOffset = 0x7a0; // float
		constexpr auto m_fHitWarning3pMoveSpeed = 0x7a4; // float
		constexpr auto m_fHitWarning3pMoveCheckDistance = 0x7a8; // float
		constexpr auto m_fHitWarning3pScale = 0x7ac; // float
		constexpr auto m_cHitWarning3pColor = 0x7b0; // FColor
		constexpr auto m_cHitWarning3pReticleColor = 0x7b4; // FColor
		constexpr auto m_fHitWarning3pThreshold = 0x7b8; // float
		constexpr auto m_fHitWarning3pThreshold2d = 0x7bc; // float
		constexpr auto m_vHitWarning3pScalingSize = 0x7c0; // FVector2D
		constexpr auto m_vHitWarning3pScalingRange = 0x7c8; // FVector2D
		constexpr auto m_fHitWarning3pScalingSpeed = 0x7d0; // float
		constexpr auto m_HitMarker = 0x7d4; // FHitMarkerInfo
		constexpr auto m_fMaxDamageTimestamp = 0x7fc; // float
		constexpr auto m_fDamageDealtRTPCSustainDuration = 0x800; // float
		constexpr auto m_fChampionHitTimestamp = 0x804; // float
		constexpr auto m_fChampionCountRTPCSustainDuration = 0x808; // float
		constexpr auto m_AccumulatedDamageInstances = 0x80c; // TArray<FDamageInstance>
		constexpr auto m_fDamageAccumulationWindow = 0x81c; // float
		constexpr auto m_GameplayCurves = 0x820; // ObjectProperty
	}

	namespace n_ATgSplineActor_Payload {
		constexpr auto m_bReached = 0x2f0; // char : 1
		constexpr auto m_fSecondsToAdd = 0x2f4; // float
	}

	namespace n_UAnimNodeAimOffset {
		constexpr auto Aim = 0x114; // FVector2D
		constexpr auto AngleOffset = 0x11c; // FVector2D
		constexpr auto bForceAimDir = 0x124; // char : 1
		constexpr auto bBakeFromAnimations = 0x124; // char : 1
		constexpr auto bPassThroughWhenNotRendered = 0x124; // char : 1
		constexpr auto bSynchronizeNodesInEditor = 0x124; // char : 1
		constexpr auto PassThroughAtOrAboveLOD = 0x128; // int32_t
		constexpr auto ForcedAimDir = 0x12c; // EAnimAimDir
		constexpr auto RequiredBones = 0x130; // TArray<char>
		constexpr auto AimCpntIndexLUT = 0x140; // TArray<char>
		constexpr auto TemplateNode = 0x150; // ObjectProperty
		constexpr auto Profiles = 0x158; // TArray<FAimOffsetProfile>
		constexpr auto CurrentProfileIndex = 0x168; // int32_t
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x60; // FName
		constexpr auto m_nActivationMask = 0x68; // int32_t
		constexpr auto m_ParticleChannels = 0x6c; // FParticleChannelContainer
		constexpr auto SubUVDataOffset = 0x70; // int32_t
		constexpr auto EmitterRenderMode = 0x74; // EEmitterRenderMode
		constexpr auto LODLevels = 0x78; // TArray<ObjectProperty>
		constexpr auto ConvertedModules = 0x88; // char : 1
		constexpr auto bCollapsed = 0x88; // char : 1
		constexpr auto bIsSoloing = 0x88; // char : 1
		constexpr auto bCookedOut = 0x88; // char : 1
		constexpr auto PeakActiveParticles = 0x8c; // int32_t
		constexpr auto InitialAllocationCount = 0x90; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x94; // float
	}

	namespace n_UTgSeqAct_SpawnProjectile {
		constexpr auto ProjectileClass = 0x108; // AProjectile*
	}

	namespace n_UTgInvListener_ConsecutiveInhandHits {
		constexpr auto s_stacks = 0xc8; // TArray<FCIHStack>
		constexpr auto s_pLastTargetHit = 0xd8; // ObjectProperty
	}

	namespace n_UTgAimAccelerationCurves {
		constexpr auto SettingsName = 0x60; // FName
		constexpr auto MaxAccelMultiplierX = 0x68; // float
		constexpr auto MaxAccelMultiplierY = 0x6c; // float
		constexpr auto AimSpeedX = 0x70; // FRawDistributionFloat
		constexpr auto AimAccelX = 0x94; // FRawDistributionFloat
		constexpr auto AimSpeedY = 0xb8; // FRawDistributionFloat
		constexpr auto AimAccelY = 0xdc; // FRawDistributionFloat
	}

	namespace n_UTgDeviceFire_DeployOnTarget {
		constexpr auto m_TargetHit = 0x270; // ObjectProperty
		constexpr auto m_bDeployAtFeet = 0x278; // char : 1
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x74; // char : 1
		constexpr auto bModulatePitch = 0x74; // char : 1
		constexpr auto AmplitudeMin = 0x78; // float
		constexpr auto AmplitudeMax = 0x7c; // float
		constexpr auto FrequencyMin = 0x80; // float
		constexpr auto FrequencyMax = 0x84; // float
		constexpr auto OffsetMin = 0x88; // float
		constexpr auto OffsetMax = 0x8c; // float
		constexpr auto CenterMin = 0x90; // float
		constexpr auto CenterMax = 0x94; // float
		constexpr auto Amplitude = 0x98; // FRawDistributionFloat
		constexpr auto Frequency = 0xbc; // FRawDistributionFloat
		constexpr auto Offset = 0xe0; // FRawDistributionFloat
		constexpr auto Center = 0x104; // FRawDistributionFloat
	}

	namespace n_UTgAnimNodeToggleWithTransition {
		constexpr auto m_fTransitionStartTime = 0x168; // float
		constexpr auto m_fTransitionTimeRemaining = 0x16c; // float
	}

	namespace n_UUIDataStore_OnlineStats {
		constexpr auto StatsReadClasses = 0x98; // TArray<UOnlineStatsRead*>
		constexpr auto StatsReadName = 0xa8; // FName
		constexpr auto PlayerNickData = 0xb0; // FPlayerNickMetaData
		constexpr auto RankNameMetaData = 0xc8; // FRankMetaData
		constexpr auto TotalRowsName = 0xe0; // FName
		constexpr auto StatsReadObjects = 0xe8; // TArray<ObjectProperty>
		constexpr auto StatsRead = 0xf8; // ObjectProperty
		constexpr auto CurrentReadType = 0x100; // EStatsFetchType
		constexpr auto StatsInterface = 0x104; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x114; // TScriptInterface<Class>
	}

	namespace n_UTgAIBehaviorAction_UseActive {
		constexpr auto ActiveType = 0x94; // EActiveType
	}

	namespace n_UOnlineGameSettings {
		constexpr auto NumPublicConnections = 0xa0; // int32_t
		constexpr auto NumPrivateConnections = 0xa4; // int32_t
		constexpr auto NumOpenPublicConnections = 0xa8; // int32_t
		constexpr auto NumOpenPrivateConnections = 0xac; // int32_t
		constexpr auto ServerNonce = 0xb0; // FQWord
		constexpr auto ServiceConfigId = 0xb8; // FString
		constexpr auto SessionTemplateName = 0xc8; // FString
		constexpr auto MatchHopperName = 0xd8; // FString
		constexpr auto SessionGuid = 0xe8; // FString
		constexpr auto SessionHandle = 0xf8; // FString
		constexpr auto ReservedMembers = 0x108; // TArray<FUniqueNetId>
		constexpr auto bShouldAdvertise = 0x118; // char : 1
		constexpr auto bIsLanMatch = 0x118; // char : 1
		constexpr auto bUsesStats = 0x118; // char : 1
		constexpr auto bAllowJoinInProgress = 0x118; // char : 1
		constexpr auto bPublic = 0x118; // char : 1
		constexpr auto bAllowInvites = 0x118; // char : 1
		constexpr auto bUsesPresence = 0x118; // char : 1
		constexpr auto bAllowJoinViaPresence = 0x118; // char : 1
		constexpr auto bAllowJoinViaPresenceFriendsOnly = 0x118; // char : 0
		constexpr auto bUsesArbitration = 0x118; // char : 0
		constexpr auto bAntiCheatProtected = 0x118; // char : 0
		constexpr auto bWasFromInvite = 0x118; // char : 0
		constexpr auto bIsDedicated = 0x118; // char : 0
		constexpr auto bHasSkillUpdateInProgress = 0x118; // char : 0
		constexpr auto bShouldShrinkArbitratedSessions = 0x118; // char : 0
		constexpr auto OwningPlayerName = 0x11c; // FString
		constexpr auto OwningPlayerId = 0x12c; // FUniqueNetId
		constexpr auto PingInMs = 0x134; // int32_t
		constexpr auto MatchQuality = 0x138; // float
		constexpr auto GameState = 0x13c; // EOnlineGameState
		constexpr auto BuildUniqueId = 0x140; // int32_t
	}

	namespace n_USeqEvent_MobileRawInput {
		constexpr auto TouchIndex = 0x128; // int32_t
		constexpr auto TouchpadIndex = 0x12c; // int32_t
		constexpr auto TouchLocationX = 0x130; // float
		constexpr auto TouchLocationY = 0x134; // float
		constexpr auto TimeStamp = 0x138; // float
	}

	namespace n_UImageBasedReflectionComponent {
		constexpr auto bEnabled = 0x310; // char : 1
		constexpr auto bTwoSided = 0x310; // char : 1
		constexpr auto ReflectionTexture = 0x314; // ObjectProperty
		constexpr auto ReflectionColor = 0x31c; // FLinearColor
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInLanePusherRadius {
		constexpr auto bGodsMustBeEnemy = 0x9c; // char : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
	}

	namespace n_UTgSeqAct_PlayAnnouncement {
		constexpr auto bPlayImmediately = 0x108; // char : 1
		constexpr auto bFlushOthers = 0x108; // char : 1
		constexpr auto SoundIndex = 0x10c; // int32_t
		constexpr auto OptionalCue = 0x110; // ObjectProperty
	}

	namespace n_UAnimNotify_PlayFaceFXAnim {
		constexpr auto FaceFXAnimSetRef = 0x68; // ObjectProperty
		constexpr auto GroupName = 0x70; // FString
		constexpr auto AnimName = 0x80; // FString
		constexpr auto SoundCueToPlay = 0x90; // ObjectProperty
		constexpr auto AkEventToPlay = 0x98; // ObjectProperty
		constexpr auto bOverridePlayingAnim = 0xa0; // char : 1
		constexpr auto PlayFrequency = 0xa4; // float
	}

	namespace n_UUISummary {
		constexpr auto m_nEntry = 0x244; // int32_t
		constexpr auto m_nHover = 0x248; // int32_t
		constexpr auto m_nOffset = 0x24c; // int32_t
		constexpr auto m_nClassXP = 0x250; // int32_t
		constexpr auto m_nBattleXP = 0x254; // int32_t
		constexpr auto m_nQuestsComplete = 0x258; // int32_t
		constexpr auto m_nBreakdownIndex = 0x25c; // int32_t
		constexpr auto m_eState = 0x260; // char
		constexpr auto m_bTesting = 0x264; // char : 1
		constexpr auto m_bTutorial = 0x264; // char : 1
		constexpr auto m_bProgressShown = 0x264; // char : 1
		constexpr auto m_fStateTimer = 0x268; // float
		constexpr auto m_fDelayedTransitionTimer = 0x26c; // float
		constexpr auto m_fBreakdownTimer = 0x270; // float
		constexpr auto m_FreeList = 0x274; // TArray<int32_t>
		constexpr auto m_ItemList = 0x284; // TArray<int32_t>
		constexpr auto m_mcSummary = 0x294; // ObjectProperty
		constexpr auto m_mcSummaryLine = 0x29c; // ObjectProperty
		constexpr auto m_mcSummaryName = 0x2a4; // ObjectProperty
		constexpr auto m_mcSummaryRank = 0x2ac; // ObjectProperty
		constexpr auto m_mcSummaryRankIcon = 0x2b4; // ObjectProperty
		constexpr auto m_mcSummaryScore = 0x2bc; // ObjectProperty
		constexpr auto m_mcSummaryScoreName = 0x2c4; // ObjectProperty
		constexpr auto m_mcSummaryScoreDesc = 0x2cc; // ObjectProperty
		constexpr auto m_mcSummaryEntry = 0x2d4; // ObjectProperty [0x5]
		constexpr auto m_mcSummaryEntryName = 0x2fc; // ObjectProperty [0x5]
		constexpr auto m_mcSummaryEntryDesc = 0x324; // ObjectProperty [0x5]
		constexpr auto m_mcSummaryCharacter = 0x34c; // ObjectProperty
		constexpr auto m_mcSummaryClass = 0x354; // ObjectProperty
		constexpr auto m_mcSummaryClassIcon = 0x35c; // ObjectProperty
		constexpr auto m_mcSummaryClassName = 0x364; // ObjectProperty
		constexpr auto m_mcSummaryClassDesc = 0x36c; // ObjectProperty
		constexpr auto m_mcSummaryClassType = 0x374; // ObjectProperty
		constexpr auto m_mcSummaryClassNext = 0x37c; // ObjectProperty
		constexpr auto m_mcSummaryClassNextIcon = 0x384; // ObjectProperty
		constexpr auto m_mcSummaryClassNextItem = 0x38c; // ObjectProperty
		constexpr auto m_mcSummaryClassNextItemFrame = 0x394; // ObjectProperty
		constexpr auto m_mcSummaryClassNextItemTexture = 0x39c; // ObjectProperty
		constexpr auto m_mcSummaryClassProgress = 0x3a4; // ObjectProperty
		constexpr auto m_mcSummaryClassProgressTip = 0x3ac; // ObjectProperty
		constexpr auto m_mcSummaryClassProgressFill = 0x3b4; // ObjectProperty
		constexpr auto m_mcSummaryClassProgressChange = 0x3bc; // ObjectProperty
		constexpr auto m_mcSummaryBattle = 0x3c4; // ObjectProperty
		constexpr auto m_mcSummaryBattleIcon = 0x3cc; // ObjectProperty
		constexpr auto m_mcSummaryBattleIconLevelA = 0x3d4; // ObjectProperty
		constexpr auto m_mcSummaryBattleIconLevelB = 0x3dc; // ObjectProperty
		constexpr auto m_mcSummaryBattleIconLevelC = 0x3e4; // ObjectProperty
		constexpr auto m_mcSummaryBattleName = 0x3ec; // ObjectProperty
		constexpr auto m_mcSummaryBattleDesc = 0x3f4; // ObjectProperty
		constexpr auto m_mcSummaryBattleFree = 0x3fc; // ObjectProperty
		constexpr auto m_mcSummaryBattlePaid = 0x404; // ObjectProperty
		constexpr auto m_mcSummaryBattleNext = 0x40c; // ObjectProperty
		constexpr auto m_mcSummaryBattleNextFree = 0x414; // ObjectProperty
		constexpr auto m_mcSummaryBattleNextPaid = 0x41c; // ObjectProperty
		constexpr auto m_mcSummaryBattleProgress = 0x424; // ObjectProperty
		constexpr auto m_mcSummaryBattleProgressTip = 0x42c; // ObjectProperty
		constexpr auto m_mcSummaryBattleProgressFill = 0x434; // ObjectProperty
		constexpr auto m_mcSummaryBattleProgressChange = 0x43c; // ObjectProperty
		constexpr auto m_mcSummaryQuests = 0x444; // ObjectProperty
		constexpr auto m_mcSummaryQuestsTF = 0x44c; // ObjectProperty
		constexpr auto m_mcSummaryRewards = 0x454; // ObjectProperty
		constexpr auto m_mcSummaryRewardsIcons = 0x45c; // ObjectProperty [0x3]
		constexpr auto m_mcUnlock = 0x474; // ObjectProperty
		constexpr auto m_mcUnlockName = 0x47c; // ObjectProperty
		constexpr auto m_mcUnlockDesc = 0x484; // ObjectProperty
		constexpr auto m_mcUnlockRotate = 0x48c; // ObjectProperty
		constexpr auto m_mcUnlockHoverName = 0x494; // ObjectProperty
		constexpr auto m_mcUnlockHoverDesc = 0x49c; // ObjectProperty
		constexpr auto m_mcUnlockHeader = 0x4a4; // ObjectProperty
		constexpr auto m_mcUnlockHeaderName = 0x4ac; // ObjectProperty
		constexpr auto m_mcUnlockHeaderDesc = 0x4b4; // ObjectProperty
		constexpr auto m_mcUnlockHeaderRank = 0x4bc; // ObjectProperty
		constexpr auto m_mcUnlockHeaderRankLevel = 0x4c4; // ObjectProperty
		constexpr auto m_mcUnlockHeaderRankLevelA = 0x4cc; // ObjectProperty
		constexpr auto m_mcUnlockHeaderRankLevelB = 0x4d4; // ObjectProperty
		constexpr auto m_mcUnlockHeaderRankLevelC = 0x4dc; // ObjectProperty
		constexpr auto m_mcUnlockArrow = 0x4e4; // ObjectProperty [0x2]
		constexpr auto m_mcUnlockPrompt = 0x4f4; // ObjectProperty [0x2]
		constexpr auto m_mcUnlockFree = 0x504; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockFreeFrame = 0x52c; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockFreeRarity = 0x554; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockFreeTexture = 0x57c; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockItem = 0x5a4; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockItemFrame = 0x5cc; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockItemRarity = 0x5f4; // ObjectProperty [0x5]
		constexpr auto m_mcUnlockItemTexture = 0x61c; // ObjectProperty [0x5]
		constexpr auto m_pItemPreviewStack = 0x644; // ObjectProperty
		constexpr auto m_pSummaryHomeButton = 0x64c; // ObjectProperty
		constexpr auto m_pSummaryHomeButtonKey = 0x654; // ObjectProperty
		constexpr auto m_pSummaryNextButton = 0x65c; // ObjectProperty
		constexpr auto m_pSummaryNextButtonKey = 0x664; // ObjectProperty
		constexpr auto m_pUnlockPurchaseButton = 0x66c; // ObjectProperty
		constexpr auto m_pUnlockPurchaseButtonKey = 0x674; // ObjectProperty
		constexpr auto m_pUnlockNextButton = 0x67c; // ObjectProperty
		constexpr auto m_pUnlockNextButtonKey = 0x684; // ObjectProperty
		constexpr auto m_pTalentNextButton = 0x68c; // ObjectProperty
		constexpr auto m_pTalentNextButtonKey = 0x694; // ObjectProperty
		constexpr auto m_pLevelNextButton = 0x69c; // ObjectProperty
		constexpr auto m_pLevelNextButtonKey = 0x6a4; // ObjectProperty
		constexpr auto m_mcLevel = 0x6ac; // ObjectProperty
		constexpr auto m_mcLevelIcon = 0x6b4; // ObjectProperty
		constexpr auto m_mcLevelLine = 0x6bc; // ObjectProperty
		constexpr auto m_mcLevelName = 0x6c4; // ObjectProperty
		constexpr auto m_mcLevelDesc = 0x6cc; // ObjectProperty
		constexpr auto m_mcLevelQueue = 0x6d4; // ObjectProperty
		constexpr auto m_mcLevelQueueName = 0x6dc; // ObjectProperty
		constexpr auto m_mcLevelQueueDesc = 0x6e4; // ObjectProperty
		constexpr auto m_mcLevelIconTexture = 0x6ec; // ObjectProperty
		constexpr auto m_mcTalent = 0x6f4; // ObjectProperty
		constexpr auto m_mcTalentLine = 0x6fc; // ObjectProperty
		constexpr auto m_mcTalentName = 0x704; // ObjectProperty
		constexpr auto m_mcTalentDesc = 0x70c; // ObjectProperty
		constexpr auto m_mcTalentInfo = 0x714; // ObjectProperty
		constexpr auto m_mcTalentInfoIcon = 0x71c; // ObjectProperty
		constexpr auto m_mcTalentInfoName = 0x724; // ObjectProperty
		constexpr auto m_mcTalentInfoDesc = 0x72c; // ObjectProperty
		constexpr auto m_mcTalentInfoType = 0x734; // ObjectProperty
		constexpr auto m_mcTalentTitle = 0x73c; // ObjectProperty
		constexpr auto m_mcTalentTitleFrame = 0x744; // ObjectProperty
		constexpr auto m_mcTalentTitleTexture = 0x74c; // ObjectProperty
		constexpr auto m_mcTalentPath = 0x754; // ObjectProperty
		constexpr auto m_mcTalentNodes = 0x75c; // FUINODESET [0x4]
		constexpr auto m_mcTitleNodes = 0xdbc; // FUITITLESET
		constexpr auto m_pLevelGroup = 0xf44; // ObjectProperty
		constexpr auto m_pTalentGroup = 0xf4c; // ObjectProperty
		constexpr auto m_pUnlockGroup = 0xf54; // ObjectProperty
		constexpr auto m_pSummaryGroup = 0xf5c; // ObjectProperty
		constexpr auto m_pUnlockBumperLeft = 0xf64; // ObjectProperty
		constexpr auto m_pUnlockBumperRight = 0xf6c; // ObjectProperty
		constexpr auto m_pSummaryHomeAction = 0xf74; // ObjectProperty
		constexpr auto m_pSummaryNextAction = 0xf7c; // ObjectProperty
		constexpr auto m_pUnlockPurchaseAction = 0xf84; // ObjectProperty
		constexpr auto m_pUnlockNextAction = 0xf8c; // ObjectProperty
		constexpr auto m_pTalentNextAction = 0xf94; // ObjectProperty
		constexpr auto m_pLevelNextAction = 0xf9c; // ObjectProperty
		constexpr auto m_scEntry = 0xfa4; // ObjectProperty
		constexpr auto m_scFlyin = 0xfac; // ObjectProperty
		constexpr auto m_scNugget = 0xfb4; // ObjectProperty
	}

	namespace n_ATrigger_LOS {
		constexpr auto PCsWithLOS = 0x290; // TArray<ObjectProperty>
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x80; // FName
		constexpr auto MinInput = 0x88; // float
		constexpr auto MaxInput = 0x8c; // float
		constexpr auto MinOutput = 0x90; // float
		constexpr auto MaxOutput = 0x94; // float
		constexpr auto ParamMode = 0x98; // DistributionParamMode
	}

	namespace n_USeqAct_ActivateRemoteEvent {
		constexpr auto Instigator = 0x108; // ObjectProperty
		constexpr auto EventName = 0x110; // FName
		constexpr auto bStatusIsOk = 0x118; // char : 1
	}

	namespace n_ATgRepInfo_Game_RoyaleTournament {
		constexpr auto r_nFogCount = 0x744; // int32_t
		constexpr auto r_bInForgeStage = 0x748; // char : 1
		constexpr auto r_pAllFogs = 0x74c; // ObjectProperty [0x4]
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x60; // char : 1
		constexpr auto bUpdateModule = 0x60; // char : 1
		constexpr auto bFinalUpdateModule = 0x60; // char : 1
		constexpr auto bCurvesAsColor = 0x60; // char : 1
		constexpr auto b3DDrawMode = 0x60; // char : 1
		constexpr auto bSupported3DDrawMode = 0x60; // char : 1
		constexpr auto bEnabled = 0x60; // char : 1
		constexpr auto bEditable = 0x60; // char : 1
		constexpr auto LODDuplicate = 0x60; // char : 0
		constexpr auto bSupportsRandomSeed = 0x60; // char : 0
		constexpr auto bRequiresLoopingNotification = 0x60; // char : 0
		constexpr auto LODValidity = 0x64; // char
	}

	namespace n_UUIScene_UIBattlePassPurchase {
		constexpr auto m_mcTitle = 0x154; // ObjectProperty
		constexpr auto m_mcTimeRemaining = 0x15c; // ObjectProperty
		constexpr auto m_pDLCList = 0x164; // ObjectProperty
		constexpr auto m_pCloseButton = 0x16c; // ObjectProperty
		constexpr auto m_grMain = 0x174; // ObjectProperty
	}

	namespace n_ATgDevice_RespawnBeacon {
		constexpr auto s_BeaconExit = 0xaec; // ObjectProperty
		constexpr auto r_bHasBeacon = 0xaf4; // char : 1
	}

	namespace n_UUIScene_UIBattlePassLevelUp {
		constexpr auto VfTable_IAcquisitionHandler = 0x154; // FPointer
		constexpr auto m_nBPItemsShown = 0x15c; // int32_t
		constexpr auto m_UnlockedItems = 0x160; // TArray<ObjectProperty>
		constexpr auto m_grGroup = 0x170; // ObjectProperty
		constexpr auto m_mcIcon = 0x178; // ObjectProperty
		constexpr auto m_mcTF0 = 0x180; // ObjectProperty
		constexpr auto m_mcTF1 = 0x188; // ObjectProperty
		constexpr auto m_mcRewardTF = 0x190; // ObjectProperty
		constexpr auto m_pFreePassReward = 0x198; // ObjectProperty
		constexpr auto m_mcPurchasePrompt = 0x1a0; // ObjectProperty
		constexpr auto m_List = 0x1a8; // ObjectProperty
		constexpr auto m_pCloseButton = 0x1b0; // ObjectProperty
		constexpr auto m_pUpgradeButton = 0x1b8; // ObjectProperty
		constexpr auto m_pEquipAllButton = 0x1c0; // ObjectProperty
		constexpr auto m_mcCheckmark = 0x1c8; // ObjectProperty
	}

	namespace n_ATgTrigger_Use {
		constexpr auto m_sDisplayText = 0x290; // FString
		constexpr auto m_sInactiveText = 0x2a0; // FString
		constexpr auto m_nInteractDistance = 0x2b0; // int32_t
		constexpr auto m_bAimToInteract = 0x2b4; // char : 1
		constexpr auto m_nDisplayMsgId = 0x2b8; // int32_t
		constexpr auto m_nInactiveMsgId = 0x2bc; // int32_t
	}

	namespace n_ACoverLink {
		constexpr auto GLOBAL_bUseSlotMarkers = 0x378; // char : 1
		constexpr auto bDisabled = 0x378; // char : 1
		constexpr auto bClaimAllSlots = 0x378; // char : 1
		constexpr auto bAutoSort = 0x378; // char : 1
		constexpr auto bAutoAdjust = 0x378; // char : 1
		constexpr auto bCircular = 0x378; // char : 1
		constexpr auto bLooped = 0x378; // char : 1
		constexpr auto bPlayerOnly = 0x378; // char : 1
		constexpr auto bDynamicCover = 0x378; // char : 0
		constexpr auto bFractureOnTouch = 0x378; // char : 0
		constexpr auto bDebug_FireLinks = 0x378; // char : 0
		constexpr auto bDebug_ExposedLinks = 0x378; // char : 0
		constexpr auto bDebug_CoverGen = 0x378; // char : 0
		constexpr auto bDoAutoSlotDensityFixup = 0x378; // char : 0
		constexpr auto LeanTraceDist = 0x37c; // float
		constexpr auto Slots = 0x380; // TArray<FCoverSlot>
		constexpr auto DynamicLinkInfos = 0x390; // TArray<FDynamicLinkInfo>
		constexpr auto Claims = 0x3a0; // TArray<ObjectProperty>
		constexpr auto InvalidateDistance = 0x3b0; // float
		constexpr auto MaxFireLinkDist = 0x3b4; // float
		constexpr auto CircularOrigin = 0x3b8; // FVector
		constexpr auto CircularRadius = 0x3c4; // float
		constexpr auto AlignDist = 0x3c8; // float
		constexpr auto AutoCoverSlotInterval = 0x3cc; // float
		constexpr auto StandHeight = 0x3d0; // float
		constexpr auto MidHeight = 0x3d4; // float
		constexpr auto StandingLeanOffset = 0x3d8; // FVector
		constexpr auto CrouchLeanOffset = 0x3e4; // FVector
		constexpr auto PopupOffset = 0x3f0; // FVector
		constexpr auto SlipDist = 0x3fc; // float
		constexpr auto TurnDist = 0x400; // float
		constexpr auto DangerScale = 0x404; // float
		constexpr auto NextCoverLink = 0x408; // ObjectProperty
		constexpr auto LocationDescription = 0x410; // ECoverLocationDescription
	}

	namespace n_UMeshBeaconHost {
		constexpr auto ClientConnections = 0xa4; // TArray<FClientMeshBeaconConnection>
		constexpr auto PendingPlayerConnections = 0xb4; // TArray<FUniqueNetId>
		constexpr auto OwningPlayerId = 0xc4; // FUniqueNetId
		constexpr auto bAllowBandwidthTesting = 0xcc; // char : 1
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto __OnReceivedClientConnectionRequest__Delegate = 0xd4; // DelegateProperty
		constexpr auto __OnStartedBandwidthTest__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnFinishedBandwidthTest__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnAllPendingPlayersConnected__Delegate = 0x104; // DelegateProperty
		constexpr auto __OnReceivedClientCreateNewSessionResult__Delegate = 0x114; // DelegateProperty
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_UActorFactoryActor {
		constexpr auto ActorClass = 0x9c; // AActor*
	}

	namespace n_UTgControlModule_Spectator {
		constexpr auto RotationLimit = 0x6c; // float
		constexpr auto SpectatorStallZ = 0x70; // float
		constexpr auto SpectatorMinStallZ = 0x74; // float
	}

	namespace n_AVolumeTimer {
		constexpr auto V = 0x280; // ObjectProperty
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // char : 1
	}

	namespace n_ATgItemShopVolume {
		constexpr auto TaskforceIndex = 0x2bc; // int32_t
	}

	namespace n_AFracturedStaticMeshPart {
		constexpr auto DestroyPartRadiusFactor = 0x314; // float
		constexpr auto BaseFracturedMeshActor = 0x318; // ObjectProperty
		constexpr auto bHasBeenRecycled = 0x320; // char : 1
		constexpr auto bChangeRBChannelWhenAsleep = 0x320; // char : 1
		constexpr auto bCompositeThatExplodesOnImpact = 0x320; // char : 1
		constexpr auto LastSpawnTime = 0x324; // float
		constexpr auto PartPoolIndex = 0x328; // int32_t
		constexpr auto FracPartGravScale = 0x32c; // float
		constexpr auto AsleepRBChannel = 0x330; // ERBCollisionChannel
		constexpr auto OldVelocity = 0x334; // FVector
		constexpr auto CurrentVibrationLevel = 0x340; // float
		constexpr auto LastImpactSoundTime = 0x344; // float
	}

	namespace n_UTgDeviceForm_RiderMovement {
		constexpr auto m_vActiveCameraOffset = 0x2bc; // FVector
	}

	namespace n_UParticleModuleSubUVDirect {
		constexpr auto SubUVPosition = 0x68; // FRawDistributionVector
		constexpr auto SubUVSize = 0x8c; // FRawDistributionVector
	}

	namespace n_USeqAct_SetCameraTarget {
		constexpr auto CameraTarget = 0x108; // ObjectProperty
		constexpr auto TransitionParams = 0x110; // FViewTargetTransitionParams
	}

	namespace n_ATgDeploy_BoobyTrap {
		constexpr auto m_CollisionProxy = 0x448; // ObjectProperty
		constexpr auto m_TouchingActors = 0x450; // TArray<ObjectProperty>
	}

	namespace n_ATgDeploy_LootCrateDevice {
		constexpr auto m_nDeviceIds = 0x4b8; // TArray<int32_t>
	}

	namespace n_UTgAIBehaviorAction_MoveToShield {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // char : 1
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UAnimationCompressionAlgorithm_Automatic {
		constexpr auto MaxEndEffectorError = 0x78; // float
		constexpr auto bTryFixedBitwiseCompression = 0x7c; // char : 1
		constexpr auto bTryPerTrackBitwiseCompression = 0x7c; // char : 1
		constexpr auto bTryLinearKeyRemovalCompression = 0x7c; // char : 1
		constexpr auto bTryIntervalKeyRemoval = 0x7c; // char : 1
		constexpr auto bRunCurrentDefaultCompressor = 0x7c; // char : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x7c; // char : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x7c; // char : 1
	}

	namespace n_UTgAnimNodeBlendNPC {
		constexpr auto m_NoCustomerPresentBlendInTime = 0x168; // float
		constexpr auto m_CustomerPresentBlendInTime = 0x16c; // float
		constexpr auto m_GreetingBlendInTime = 0x170; // float
		constexpr auto m_NoSaleBlendInTime = 0x174; // float
		constexpr auto m_CallOutBlendInTime = 0x178; // float
		constexpr auto m_SaleBlendInTime = 0x17c; // float
		constexpr auto m_TransCustomerPresentToNotPresentBlendInTime = 0x180; // float
		constexpr auto m_UninterruptibleAnims = 0x184; // TArray<FName>
		constexpr auto m_QueuedChild = 0x194; // NPCAnimationStates
		constexpr auto m_QueuedBlendTime = 0x198; // float
		constexpr auto m_CurrentAnimPlaying = 0x19c; // FName
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x68; // EBeam2Method
		constexpr auto TaperMethod = 0x69; // EBeamTaperMethod
		constexpr auto TextureTile = 0x6c; // int32_t
		constexpr auto TextureTileDistance = 0x70; // float
		constexpr auto Sheets = 0x74; // int32_t
		constexpr auto MaxBeamCount = 0x78; // int32_t
		constexpr auto Speed = 0x7c; // float
		constexpr auto InterpolationPoints = 0x80; // int32_t
		constexpr auto bAlwaysOn = 0x84; // char : 1
		constexpr auto RenderGeometry = 0x84; // char : 1
		constexpr auto RenderDirectLine = 0x84; // char : 1
		constexpr auto RenderLines = 0x84; // char : 1
		constexpr auto RenderTessellation = 0x84; // char : 1
		constexpr auto UpVectorStepSize = 0x88; // int32_t
		constexpr auto BranchParentName = 0x8c; // FName
		constexpr auto Distance = 0x94; // FRawDistributionFloat
		constexpr auto TaperFactor = 0xb8; // FRawDistributionFloat
		constexpr auto TaperScale = 0xdc; // FRawDistributionFloat
	}

	namespace n_UUIComponent_OptionEntryBase {
		constexpr auto m_mcLabel = 0x140; // ObjectProperty
		constexpr auto m_pGroup = 0x148; // ObjectProperty
	}

	namespace n_UAnimNode {
		constexpr auto bRelevant = 0x68; // char : 1
		constexpr auto bJustBecameRelevant = 0x68; // char : 1
		constexpr auto bTickDuringPausedAnims = 0x68; // char : 1
		constexpr auto bEditorOnly = 0x68; // char : 1
		constexpr auto bDisableCaching = 0x68; // char : 1
		constexpr auto bCallScriptEventOnInit = 0x68; // char : 1
		constexpr auto bCallScriptEventOnBecomeRelevant = 0x68; // char : 1
		constexpr auto bCallScriptEventOnCeaseRelevant = 0x68; // char : 1
		constexpr auto NodeTickTag = 0x6c; // int32_t
		constexpr auto PostBoneUpdateNodeTickTag = 0x70; // int32_t
		constexpr auto NodeInitTag = 0x74; // int32_t
		constexpr auto NodeEndEventTick = 0x78; // int32_t
		constexpr auto TickArrayIndex = 0x7c; // int32_t
		constexpr auto NodeCachedAtomsTag = 0x80; // int32_t
		constexpr auto NodeTotalWeight = 0x84; // float
		constexpr auto ParentNodes = 0x88; // TArray<ObjectProperty>
		constexpr auto NodeName = 0x98; // FName
		constexpr auto CachedBoneAtoms = 0xa0; // TArray<FBoneAtom>
		constexpr auto CachedNumDesiredBones = 0xb0; // char
		constexpr auto CachedRootMotionDelta = 0xc0; // FBoneAtom
		constexpr auto bCachedHasRootMotion = 0xe0; // int32_t
		constexpr auto CachedCurveKeys = 0xe4; // TArray<FCurveKey>
		constexpr auto SearchTag = 0xf4; // int32_t
		constexpr auto m_LabelColor = 0xf8; // FColor
	}

	namespace n_ATgStealthGrassActor {
		constexpr auto c_vBaseOffset = 0x280; // FVector
		constexpr auto c_vGrassOffset = 0x28c; // FVector
		constexpr auto c_fGrassOffsetInterpSpeed = 0x298; // float
		constexpr auto c_bLowerGrass = 0x29c; // char : 1
		constexpr auto m_bHasLoot = 0x29c; // char : 1
		constexpr auto r_bCanHealNow = 0x29c; // char : 1
		constexpr auto c_fLowerGrassAlpha = 0x2a0; // float
		constexpr auto c_GrassMesh = 0x2a4; // ComponentProperty
		constexpr auto c_GroundMesh = 0x2ac; // ComponentProperty
		constexpr auto m_ParticleSystemComponent = 0x2b4; // ComponentProperty
		constexpr auto m_LootParticleSystem = 0x2bc; // ObjectProperty
		constexpr auto m_NoLootParticleSystem = 0x2c4; // ObjectProperty
		constexpr auto m_SpawnedDeployable = 0x2cc; // ObjectProperty
		constexpr auto m_fDeployableSpawnTimer = 0x2d4; // float
		constexpr auto m_fDeployableSpawnChanceOnInit = 0x2d8; // float
		constexpr auto m_fDeployableSpawnChanceOnTimer = 0x2dc; // float
		constexpr auto m_nLootDeployableId = 0x2e0; // int32_t
		constexpr auto m_HealingDevice = 0x2e4; // ObjectProperty
		constexpr auto m_HealingDeviceId = 0x2ec; // int32_t
		constexpr auto m_fDisableHealingTime = 0x2f0; // float
		constexpr auto m_fEnableHealingTime = 0x2f4; // float
		constexpr auto AlwaysRelevantDistanceSquared = 0x2f8; // float
		constexpr auto MaxRelevantDistanceSquared = 0x2fc; // float
	}

	namespace n_UTgControlModule_SpectatorLockedView {
		constexpr auto DirectorModeSpectatorStallZ = 0x78; // float
		constexpr auto DirectorModeSpectatorMinStallZ = 0x7c; // float
	}

	namespace n_ATgNamedPOIActor {
		constexpr auto m_nMessageId = 0x280; // int32_t
		constexpr auto m_PreviewText = 0x284; // FString
		constexpr auto m_bIsRegion = 0x294; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_WhatIsCombatTargetTargeting {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto MatInst = 0x280; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsDesiredAimDevice {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_UCoverSlipReachSpec {
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionFloat
	}

	namespace n_UUIDataStore_InputAlias {
		constexpr auto InputAliases = 0x98; // TArray<FUIDataStoreInputAlias>
		constexpr auto InputAliasLookupMap = 0xa8; // TMap<None, None>
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0xb0; // FExpressionInput
		constexpr auto Exponent = 0xe4; // FExpressionInput
	}

	namespace n_UPartyBeacon {
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto PartyBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // char : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // char : 1
		constexpr auto bShouldTick = 0x74; // char : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto __OnDestroyComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UTgSeqEvent_PlayerInitialized {
		constexpr auto bLocalPlayerOnly = 0x128; // char : 1
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x68; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // char : 1
		constexpr auto bOrientMeshEmitters = 0x78; // char : 1
		constexpr auto bEnforceNormalCheck = 0x78; // char : 1
		constexpr auto SkelMeshActorParamName = 0x7c; // FName
		constexpr auto ValidAssociatedBones = 0x84; // TArray<FName>
		constexpr auto NormalToCompare = 0x94; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0xa0; // float
		constexpr auto NormalCheckTolerance = 0xa4; // float
		constexpr auto ValidMaterialIndices = 0xa8; // TArray<int32_t>
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x80; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x90; // FString
		constexpr auto LastErrorSolution = 0xa0; // FString
	}

	namespace n_UTgDeviceForm_Inhand {
		constexpr auto m_nAmmoCount = 0x2bc; // int32_t
		constexpr auto m_nMaxAmmoCount = 0x2c0; // int32_t
		constexpr auto m_fPreviousAmmoPerc = 0x2c4; // float
		constexpr auto m_fCurrentAmmoPerc = 0x2c8; // float
	}

	namespace n_ATgProj_ColumnBeam {
		constexpr auto m_fFloorCheckHeight = 0x51c; // float
		constexpr auto m_bUseFloorAdjustment = 0x520; // char : 1
	}

	namespace n_UTgInvListener_ActiveDeployableEffect {
		constexpr auto m_AppliedTargetIds = 0xc8; // TArray<int32_t>
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x60; // FString
		constexpr auto HelpUsage = 0x70; // FString
		constexpr auto HelpWebLink = 0x80; // FString
		constexpr auto HelpParamNames = 0x90; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0xa0; // TArray<FString>
		constexpr auto IsServer = 0xb0; // char : 1
		constexpr auto IsClient = 0xb0; // char : 1
		constexpr auto IsEditor = 0xb0; // char : 1
		constexpr auto LogToConsole = 0xb0; // char : 1
		constexpr auto ShowErrorCount = 0xb0; // char : 1
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
		constexpr auto MaxEffectorDiff = 0x80; // float
		constexpr auto MinEffectorDiff = 0x84; // float
		constexpr auto EffectorDiffSocket = 0x88; // float
		constexpr auto ParentKeyScale = 0x8c; // float
		constexpr auto bRetarget = 0x90; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x90; // char : 1
	}

	namespace n_UTgSeqEvent_UI_Event {
		constexpr auto mDeckNum = 0x128; // int32_t
		constexpr auto mEmptyItemSlots = 0x12c; // int32_t
	}

	namespace n_UTgAIInfluenceMapRenderingComponent {
		constexpr auto InfluenceMap = 0x250; // ObjectProperty
		constexpr auto InfluenceMapTexture = 0x258; // ObjectProperty
	}

	namespace n_ATgOverviewCameraActor {
		constexpr auto m_bFlipped = 0x420; // char : 1
	}

	namespace n_USeqAct_GetProperty {
		constexpr auto PropertyName = 0x108; // FName
	}

	namespace n_UTgAIBehaviorCondition_AmmoAfterShot {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_USceneCapture2DComponent {
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto FieldOfView = 0xd8; // float
		constexpr auto NearPlane = 0xdc; // float
		constexpr auto FarPlane = 0xe0; // float
		constexpr auto bUpdateMatrices = 0xe4; // char : 1
		constexpr auto ViewMatrix = 0xf0; // FMatrix
		constexpr auto ProjMatrix = 0x130; // FMatrix
		constexpr auto ViewMatrix_RT = 0x170; // FMatrix
		constexpr auto ProjMatrix_RT = 0x1b0; // FMatrix
	}

	namespace n_USequenceObject {
		constexpr auto ObjInstanceVersion = 0x60; // int32_t
		constexpr auto ParentSequence = 0x64; // ObjectProperty
		constexpr auto ObjName = 0x6c; // FString
		constexpr auto ObjComment = 0x7c; // FString
		constexpr auto bDeletable = 0x8c; // char : 1
		constexpr auto bDrawFirst = 0x8c; // char : 1
		constexpr auto bDrawLast = 0x8c; // char : 1
		constexpr auto bOutputObjCommentToScreen = 0x8c; // char : 1
		constexpr auto bSuppressAutoComment = 0x8c; // char : 1
		constexpr auto DrawWidth = 0x90; // int32_t
		constexpr auto DrawHeight = 0x94; // int32_t
	}

	namespace n_UGameMessage {
		constexpr auto SwitchLevelMessage = 0x74; // FString
		constexpr auto LeftMessage = 0x84; // FString
		constexpr auto FailedTeamMessage = 0x94; // FString
		constexpr auto FailedPlaceMessage = 0xa4; // FString
		constexpr auto FailedSpawnMessage = 0xb4; // FString
		constexpr auto EnteredMessage = 0xc4; // FString
		constexpr auto MaxedOutMessage = 0xd4; // FString
		constexpr auto ArbitrationMessage = 0xe4; // FString
		constexpr auto OvertimeMessage = 0xf4; // FString
		constexpr auto GlobalNameChange = 0x104; // FString
		constexpr auto NewTeamMessage = 0x114; // FString
		constexpr auto NewTeamMessageTrailer = 0x124; // FString
		constexpr auto NoNameChange = 0x134; // FString
		constexpr auto VoteStarted = 0x144; // FString
		constexpr auto VotePassed = 0x154; // FString
		constexpr auto MustHaveStats = 0x164; // FString
		constexpr auto CantBeSpectator = 0x174; // FString
		constexpr auto CantBePlayer = 0x184; // FString
		constexpr auto BecameSpectator = 0x194; // FString
		constexpr auto NewPlayerMessage = 0x1a4; // FString
		constexpr auto KickWarning = 0x1b4; // FString
		constexpr auto NewSpecMessage = 0x1c4; // FString
		constexpr auto SpecEnteredMessage = 0x1d4; // FString
	}

	namespace n_UMobileMenuImage {
		constexpr auto Image = 0xdc; // ObjectProperty
		constexpr auto ImageDrawStyle = 0xe4; // MenuImageDrawStyle
		constexpr auto ImageUVs = 0xe8; // FUVCoords
		constexpr auto ImageColor = 0xfc; // FLinearColor
	}

	namespace n_UTgAIUtilitySet {
		constexpr auto AnnotationType = 0x94; // EAIAnnotationType
		constexpr auto Functions = 0x98; // TArray<ObjectProperty>
		constexpr auto Filters = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_UTgAIBehaviorCondition_IsInFortress {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
	}

	namespace n_UTgSeqAct_ShowSubtitle {
		constexpr auto m_nMessageId = 0x108; // int32_t
		constexpr auto m_fShowTime = 0x10c; // float
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UTgDistributionFloatSoundAttenuation {
		constexpr auto AttenuationType = 0x7c; // SoundAttenuationType
		constexpr auto Attenuation_Sm_foley = 0x80; // float
		constexpr auto Attenuation_Lg_foley = 0x84; // float
		constexpr auto Attenuation_Melee_hit = 0x88; // float
		constexpr auto Attenuation_Sm_gun = 0x8c; // float
		constexpr auto Attenuation_Med_gun = 0x90; // float
		constexpr auto Attenuation_Lg_gun = 0x94; // float
		constexpr auto Attenuation_Sm_exp = 0x98; // float
		constexpr auto Attenuation_Med_exp = 0x9c; // float
		constexpr auto Attenuation_Lg_exp = 0xa0; // float
		constexpr auto GroupName = 0xa4; // FName
		constexpr auto AttenuationGroups = 0xac; // TArray<FAttenuationGroup>
	}

	namespace n_UTgChatData {
		constexpr auto m_nId = 0x60; // int32_t
		constexpr auto m_nSoundId = 0x64; // int32_t
		constexpr auto m_nChannel = 0x68; // int32_t
		constexpr auto m_bFeedback = 0x6c; // char : 1
		constexpr auto m_bSenderIsVIP = 0x6c; // char : 1
		constexpr auto m_bIsVGS = 0x6c; // char : 1
		constexpr auto m_sSender = 0x70; // FString
		constexpr auto m_dwSenderVIPTier = 0x80; // Fdword
		constexpr auto m_sMessage = 0x84; // FString
		constexpr auto m_sSenderColor = 0x94; // FString
		constexpr auto m_sSenderClass = 0xa4; // FString
		constexpr auto m_sMessageColor = 0xb4; // FString
	}

	namespace n_AImageReflectionShadowPlane {
		constexpr auto bEnabled = 0x280; // char : 1
		constexpr auto ReflectionShadowComponent = 0x284; // ComponentProperty
	}

	namespace n_UUILobbyChat {
		constexpr auto m_nDepth = 0x244; // int32_t
		constexpr auto m_nPosition = 0x248; // int32_t
		constexpr auto m_nOpenIdentity = 0x24c; // int32_t
		constexpr auto m_sLocalTabName = 0x250; // FString
		constexpr auto m_mcArrow = 0x260; // ObjectProperty [0x2]
		constexpr auto m_mcArrowNotify = 0x270; // ObjectProperty [0x2]
		constexpr auto m_mcTabs = 0x280; // TArray<ObjectProperty>
		constexpr auto m_AkNewTabSound = 0x290; // ObjectProperty
	}

	namespace n_ATgRepInfo_CapturePoint {
		constexpr auto r_OwningCapturePoint = 0x280; // ObjectProperty
		constexpr auto r_nUniqueCapturePointId = 0x288; // int32_t
		constexpr auto r_nControlledByTaskForce = 0x28c; // int32_t
		constexpr auto r_fOwnershipPct = 0x290; // float
		constexpr auto r_nTransitionDirection = 0x294; // char
		constexpr auto r_bIsLocked = 0x298; // char : 1
		constexpr auto c_OwnershipPercentKismetNode = 0x29c; // ObjectProperty
	}

	namespace n_UGameCameraBase {
		constexpr auto PlayerCamera = 0x60; // ObjectProperty
		constexpr auto bResetCameraInterpolation = 0x68; // char : 1
	}

	namespace n_ACameraActor {
		constexpr auto bConstrainAspectRatio = 0x280; // char : 1
		constexpr auto bCamOverridePostProcess = 0x280; // char : 1
		constexpr auto AspectRatio = 0x284; // float
		constexpr auto FOVAngle = 0x288; // float
		constexpr auto CamOverridePostProcessAlpha = 0x28c; // float
		constexpr auto CamOverridePostProcess = 0x290; // FPostProcessSettings
		constexpr auto DrawFrustum = 0x410; // ComponentProperty
		constexpr auto MeshComp = 0x418; // ComponentProperty
	}

	namespace n_UPComGameViewportClient {
		constexpr auto OpenBroadcaster = 0x1a8; // ObjectProperty
		constexpr auto InputLightingEffect = 0x1b0; // ObjectProperty
		constexpr auto bUseDynamicResolutionScaler = 0x1b8; // char : 1
		constexpr auto DynamicResolutionScaler = 0x1bc; // FPointer
	}

	namespace n_UTgAnimNodeBlendByAndroxusDrift {
		constexpr auto m_DriftRecords = 0x168; // TArray<FDriftInfo>
		constexpr auto m_bInDrift = 0x178; // char : 1
		constexpr auto m_bTransitionsCanBeInterrupted = 0x178; // char : 1
		constexpr auto m_fDriftStartTime = 0x17c; // float
		constexpr auto m_fDriftRelevancyWindow = 0x180; // float
		constexpr auto m_fDriftTriggerPercent = 0x184; // float
		constexpr auto m_fMaxFallSpeed = 0x188; // float
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x240; // float
		constexpr auto OuterConeAngle = 0x244; // float
		constexpr auto LightShaftConeAngle = 0x248; // float
		constexpr auto PreviewInnerCone = 0x24c; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x254; // ComponentProperty
		constexpr auto Rotation = 0x25c; // FRotator
	}

	namespace n_UMcpManagedValueManagerBase {
		constexpr auto McpManagedValueManagerClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnReadSaveSlotComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnUpdateValueComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnDeleteValueComplete__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UMaterialExpressionTerrainLayerCoords {
		constexpr auto MappingType = 0xb0; // ETerrainCoordMappingType
		constexpr auto MappingScale = 0xb4; // float
		constexpr auto MappingRotation = 0xb8; // float
		constexpr auto MappingPanU = 0xbc; // float
		constexpr auto MappingPanV = 0xc0; // float
	}

	namespace n_UTgDeviceForm_Barrage {
		constexpr auto m_CachedActiveOverlayController = 0x2bc; // ObjectProperty
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x68; // FRawDistributionVector
		constexpr auto bInheritParent = 0x8c; // char : 1
	}

	namespace n_UTgData_EOM {
		constexpr auto m_nKills = 0xbc; // int32_t
		constexpr auto m_nPlace = 0xc0; // int32_t
		constexpr auto m_nGameId = 0xc4; // int32_t
		constexpr auto m_nProfile = 0xc8; // int32_t
		constexpr auto m_nQueueId = 0xcc; // int32_t
		constexpr auto m_nGameTime = 0xd0; // int32_t
		constexpr auto m_nLocalTF = 0xd4; // int32_t
		constexpr auto m_nWinningTF = 0xd8; // int32_t
		constexpr auto m_nClassXPTotal = 0xdc; // int32_t
		constexpr auto m_nClassXPTimeAlive = 0xe0; // int32_t
		constexpr auto m_nClassXPPlacement = 0xe4; // int32_t
		constexpr auto m_nClassXPElims = 0xe8; // int32_t
		constexpr auto m_fClassXPMultiplier = 0xec; // float
		constexpr auto m_nBattlepassXPTotal = 0xf0; // int32_t
		constexpr auto m_nBattlepassXPTimeAlive = 0xf4; // int32_t
		constexpr auto m_nBattlepassXPPlacement = 0xf8; // int32_t
		constexpr auto m_nBattlepassXPElims = 0xfc; // int32_t
		constexpr auto m_fBattlepassXPMultiplier = 0x100; // float
		constexpr auto m_nQuestsCompletedThisSession = 0x104; // int32_t
		constexpr auto m_nXPBonus = 0x108; // int32_t
		constexpr auto m_nXPEarned = 0x10c; // int32_t
		constexpr auto m_nCharacterXPEarned = 0x110; // int32_t
		constexpr auto m_nCharacterXPBonus = 0x114; // int32_t
		constexpr auto m_nTokens = 0x118; // int32_t
		constexpr auto m_nTokensFound = 0x11c; // int32_t
		constexpr auto m_nTokensKills = 0x120; // int32_t
		constexpr auto m_nTokensBonus = 0x124; // int32_t
		constexpr auto m_nTokensQuests = 0x128; // int32_t
		constexpr auto m_nTokensVictory = 0x12c; // int32_t
		constexpr auto m_Players = 0x130; // TArray<ObjectProperty>
		constexpr auto m_AlreadyCompletedQuests = 0x140; // TArray<ObjectProperty>
		constexpr auto m_vCurrencyEntries = 0x150; // TArray<FCurrencyEntry>
		constexpr auto m_NullCurrency = 0x160; // FCurrencyEntry
	}

	namespace n_UTgAIUtilityFilter_CapturePoint {
		constexpr auto DistanceCutoff = 0xc0; // float
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto Range = 0x70; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x94; // char : 1
		constexpr auto bAffectBaseVelocity = 0x94; // char : 1
		constexpr auto bRenewSource = 0x94; // char : 1
		constexpr auto bInheritSourceVel = 0x94; // char : 1
		constexpr auto Strength = 0x98; // FRawDistributionFloat
		constexpr auto SelectionMethod = 0xbc; // EAttractorParticleSelectionMethod
		constexpr auto LastSelIndex = 0xc0; // int32_t
	}

	namespace n_USVehicleSimTank {
		constexpr auto LeftTrackVel = 0xf8; // float
		constexpr auto RightTrackVel = 0xfc; // float
		constexpr auto LeftTrackTorque = 0x100; // float
		constexpr auto RightTrackTorque = 0x104; // float
		constexpr auto MaxEngineTorque = 0x108; // float
		constexpr auto EngineDamping = 0x10c; // float
		constexpr auto InsideTrackTorqueFactor = 0x110; // float
		constexpr auto SteeringLatStiffnessFactor = 0x114; // float
		constexpr auto TurnInPlaceThrottle = 0x118; // float
		constexpr auto TurnMaxGripReduction = 0x11c; // float
		constexpr auto TurnGripScaleRate = 0x120; // float
		constexpr auto bTurnInPlaceOnSteer = 0x124; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_PipConsequential {
		constexpr auto s_nHitCounter = 0xc8; // int32_t
	}

	namespace n_UAnimNotify_Footstep {
		constexpr auto FootDown = 0x68; // int32_t
		constexpr auto m_PreviewSound = 0x6c; // ObjectProperty
		constexpr auto m_FootstepType = 0x74; // EFootstepTypes
	}

	namespace n_UGFxAction_SetCaptureKeys {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto CaptureKeys = 0x110; // TArray<FName>
	}

	namespace n_ATgAIDirector {
		constexpr auto m_bActive = 0x280; // char : 1
		constexpr auto m_bCanAdjustNow = 0x280; // char : 1
		constexpr auto m_bDisparityDetected = 0x280; // char : 1
		constexpr auto m_bProlongedDisparityDetected = 0x280; // char : 1
		constexpr auto m_bHasLoweredDifficultyAtTie = 0x280; // char : 1
		constexpr auto m_bFreezeAIDifficulty = 0x280; // char : 1
		constexpr auto m_fTimeSinceLastUpdate = 0x284; // float
		constexpr auto m_fLastSkillDisparity = 0x288; // float
		constexpr auto m_iIncreaseTF1Difficulty = 0x28c; // int32_t
		constexpr auto m_iIncreaseTF2Difficulty = 0x290; // int32_t
		constexpr auto m_iDisparityDetectionTime = 0x294; // int32_t
		constexpr auto m_iTriggerTime = 0x298; // int32_t
		constexpr auto m_iTaskForce1PlayerCount = 0x29c; // int32_t
		constexpr auto m_iTaskForce2PlayerCount = 0x2a0; // int32_t
		constexpr auto LockoutTime = 0x2a4; // float
		constexpr auto SkillDisparityTrigger = 0x2a8; // float
		constexpr auto UpdateRate = 0x2ac; // float
		constexpr auto m_fLastPayloadPercent = 0x2b0; // float
		constexpr auto m_fBaseUpperKillRatio = 0x2b4; // float
		constexpr auto m_fBaseLowerKillRatio = 0x2b8; // float
		constexpr auto m_fBaseUpperPayloadRate = 0x2bc; // float
		constexpr auto m_fBaseLowerPayloadRate = 0x2c0; // float
		constexpr auto NumDeaths_Weight = 0x2c4; // float
		constexpr auto Damage_Weight = 0x2c8; // float
		constexpr auto Kills_Weight = 0x2cc; // float
		constexpr auto SoloKills_Weight = 0x2d0; // float
		constexpr auto Assists_Weight = 0x2d4; // float
		constexpr auto ObjectiveTime_Weight = 0x2d8; // float
		constexpr auto Healing_Weight = 0x2dc; // float
		constexpr auto Shielding_Weight = 0x2e0; // float
		constexpr auto Credits_Weight = 0x2e4; // float
		constexpr auto Accuracy_Weight = 0x2e8; // float
		constexpr auto Killstreak_Multiplier = 0x2ec; // float
		constexpr auto numDeathsBase0 = 0x2f0; // float
		constexpr auto numDeathsBase1 = 0x2f4; // float
		constexpr auto PlayerSkillData = 0x2f8; // FSkillLevelRawData [0x2]
		constexpr auto TeamSkillData = 0x348; // FSkillLevelRawData [0x2]
		constexpr auto OldPlayerSkillData = 0x398; // FSkillLevelRawData [0x2]
		constexpr auto OldTeamSkillData = 0x3e8; // FSkillLevelRawData [0x2]
		constexpr auto SkillPercentages = 0x438; // FSkillLevelPercentageData [0x4]
	}

	namespace n_UTgRecoilKeyframe {
		constexpr auto firingTime = 0x60; // float
		constexpr auto RecoilPerShot = 0x64; // FRawDistributionFloat
	}

	namespace n_UGameExplosion {
		constexpr auto bDirectionalExplosion = 0x60; // char : 1
		constexpr auto bIgnoreInstigator = 0x60; // char : 1
		constexpr auto bAllowTeammateCringes = 0x60; // char : 1
		constexpr auto bFullDamageToAttachee = 0x60; // char : 1
		constexpr auto bAttachExplosionEmitterToAttachee = 0x60; // char : 1
		constexpr auto bPerformRadialBlurRelevanceCheck = 0x60; // char : 1
		constexpr auto bCausesFracture = 0x60; // char : 1
		constexpr auto bAllowPerMaterialFX = 0x60; // char : 1
		constexpr auto bParticleSystemIsBeingOverriddenDontUsePhysMatVersion = 0x60; // char : 0
		constexpr auto bSkipDefaultPhysMatParticleSystem = 0x60; // char : 0
		constexpr auto bUseMapSpecificValues = 0x60; // char : 0
		constexpr auto bUseOverlapCheck = 0x60; // char : 0
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // char : 0
		constexpr auto bAutoControllerVibration = 0x60; // char : 0
		constexpr auto DirectionalExplosionAngleDeg = 0x64; // float
		constexpr auto DamageDelay = 0x68; // float
		constexpr auto Damage = 0x6c; // float
		constexpr auto DamageRadius = 0x70; // float
		constexpr auto DamageFalloffExponent = 0x74; // float
		constexpr auto ActorToIgnoreForDamage = 0x78; // ObjectProperty
		constexpr auto ActorClassToIgnoreForDamage = 0x80; // AActor*
		constexpr auto ActorClassToIgnoreForKnockdownsAndCringes = 0x88; // AActor*
		constexpr auto MyDamageType = 0x90; // UDamageType*
		constexpr auto KnockDownRadius = 0x98; // float
		constexpr auto KnockDownStrength = 0x9c; // float
		constexpr auto CringeRadius = 0xa0; // float
		constexpr auto CringeDuration = 0xa4; // FVector2D
		constexpr auto MomentumTransferScale = 0xac; // float
		constexpr auto ParticleEmitterTemplate = 0xb0; // ObjectProperty
		constexpr auto ExplosionEmitterScale = 0xb8; // float
		constexpr auto HitActor = 0xbc; // ObjectProperty
		constexpr auto HitLocation = 0xc4; // FVector
		constexpr auto HitNormal = 0xd0; // FVector
		constexpr auto ExplosionSound = 0xdc; // ObjectProperty
		constexpr auto ExplosionSoundHurtSomeone = 0xe4; // ObjectProperty
		constexpr auto ExploLight = 0xec; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xf4; // float
		constexpr auto ExploRadialBlur = 0xf8; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0x100; // float
		constexpr auto ExploRadialBlurMaxBlur = 0x104; // float
		constexpr auto FractureMeshRadius = 0x108; // float
		constexpr auto FracturePartVel = 0x10c; // float
		constexpr auto CamShake = 0x110; // ObjectProperty
		constexpr auto CamShake_Left = 0x118; // ObjectProperty
		constexpr auto CamShake_Right = 0x120; // ObjectProperty
		constexpr auto CamShake_Rear = 0x128; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x130; // float
		constexpr auto CamShakeOuterRadius = 0x134; // float
		constexpr auto CamShakeFalloff = 0x138; // float
		constexpr auto CameraLensEffect = 0x13c; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0x144; // float
	}

	namespace n_UUIDataObject {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_CallbackContainer = 0x68; // ObjectProperty
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto PropertyUpdateCallback = 0x60; // ObjectProperty
		constexpr auto PropertyOuterObjectInst = 0x68; // ObjectProperty
	}

	namespace n_ATgDeploy_XP {
		constexpr auto m_bPreAwardXP = 0x4e0; // char : 1
		constexpr auto m_fDelayedPickupTime = 0x4e4; // float
		constexpr auto m_DelayedPickupPawn = 0x4e8; // ObjectProperty
	}

	namespace n_UAnimNodeScalePlayRate {
		constexpr auto ScaleByValue = 0x114; // float
	}

	namespace n_AProcBuilding {
		constexpr auto BuildingMeshCompInfos = 0x2bc; // TArray<FPBMeshCompInfo>
		constexpr auto BuildingFracMeshCompInfos = 0x2cc; // TArray<FPBFracMeshCompInfo>
		constexpr auto SimpleMeshComp = 0x2dc; // ComponentProperty
		constexpr auto bGenerateRoofMesh = 0x2e4; // char : 1
		constexpr auto bGenerateFloorMesh = 0x2e4; // char : 1
		constexpr auto bApplyRulesToRoof = 0x2e4; // char : 1
		constexpr auto bApplyRulesToFloor = 0x2e4; // char : 1
		constexpr auto bSplitWallsAtRoofLevels = 0x2e4; // char : 1
		constexpr auto bSplitWallsAtWallEdges = 0x2e4; // char : 1
		constexpr auto bQuickEdited = 0x2e4; // char : 1
		constexpr auto bBuildingBrushCollision = 0x2e4; // char : 1
		constexpr auto bDebugDrawEdgeInfo = 0x2e4; // char : 0
		constexpr auto bDebugDrawScopes = 0x2e4; // char : 0
		constexpr auto LODMeshComps = 0x2e8; // TArray<ComponentProperty>
		constexpr auto NumMeshedTopLevelScopes = 0x2f8; // int32_t
		constexpr auto MaxFacadeZ = 0x2fc; // float
		constexpr auto MinFacadeZ = 0x300; // float
		constexpr auto OverlappingBuildings = 0x304; // TArray<ObjectProperty>
		constexpr auto SimpleMeshMassiveLODDistance = 0x314; // float
		constexpr auto RenderToTexturePullBackAmount = 0x318; // float
		constexpr auto RoofLightmapRes = 0x31c; // int32_t
		constexpr auto NonRectWallLightmapRes = 0x320; // int32_t
		constexpr auto ParamSwatchName = 0x324; // FName
		constexpr auto BuildingMaterialParams = 0x32c; // TArray<FPBMaterialParam>
		constexpr auto LowLODPersistentActor = 0x33c; // ObjectProperty
		constexpr auto CurrentSimpleMeshComp = 0x344; // ComponentProperty
		constexpr auto CurrentSimpleMeshActor = 0x34c; // ObjectProperty
		constexpr auto BuildingInstanceVersion = 0x354; // int32_t
	}

	namespace n_AEmitterSpawnable {
		constexpr auto ParticleTemplate = 0x294; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_DeployOnAbility {
		constexpr auto m_eDeployType = 0xd0; // EDeployOnAbilityType
	}

	namespace n_UPathGoalEvaluator {
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto GeneratedGoal = 0x68; // ObjectProperty
		constexpr auto MaxPathVisits = 0x70; // int32_t
		constexpr auto CacheIdx = 0x74; // int32_t
	}

	namespace n_ANxTornadoAngularForceFieldCapsule {
		constexpr auto RenderComponent = 0x308; // ComponentProperty
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
	}

	namespace n_USeqEvent_Touch {
		constexpr auto ClassProximityTypes = 0x128; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x138; // TArray<AActor*>
		constexpr auto bForceOverlapping = 0x148; // char : 1
		constexpr auto bUseInstigator = 0x148; // char : 1
		constexpr auto bAllowDeadPawns = 0x148; // char : 1
		constexpr auto TouchedList = 0x14c; // TArray<ObjectProperty>
	}

	namespace n_APortalMarker {
		constexpr auto MyPortal = 0x378; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetEnergyGainBlock {
		constexpr auto m_bBlockEnergyGain = 0x108; // int32_t
	}

	namespace n_AFileWriter {
		constexpr auto ArchivePtr = 0x280; // FPointer
		constexpr auto Filename = 0x288; // FString
		constexpr auto FileType = 0x298; // FWFileType
		constexpr auto bFlushEachWrite = 0x29c; // char : 1
		constexpr auto bWantsAsyncWrites = 0x29c; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetIsInMinotaurRadius {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
	}

	namespace n_ATgPortal {
		constexpr auto bUpdateRotation = 0x2e4; // char : 1
		constexpr auto bCheckOverlap = 0x2e4; // char : 1
		constexpr auto bResetVelocity = 0x2e4; // char : 1
		constexpr auto bCheckTaskForce = 0x2e4; // char : 1
		constexpr auto nTaskForce = 0x2e8; // int32_t
		constexpr auto TeleportSoundCue = 0x2ec; // ObjectProperty
		constexpr auto FadeInTime = 0x2f4; // float
		constexpr auto VolumeMultiplier = 0x2f8; // float
		constexpr auto PitchMultiplier = 0x2fc; // float
	}

	namespace n_ATgWeaponMeshActor_BarrierTankInhand {
		constexpr auto m_bHasFinishedBurst = 0x504; // char : 1
	}

	namespace n_UUIComponent_ClassSelectEntry {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_mcName = 0x128; // ObjectProperty
		constexpr auto m_mcLevel = 0x130; // ObjectProperty
		constexpr auto m_pProgress = 0x138; // ObjectProperty
	}

	namespace n_AAkAmbientSound {
		constexpr auto bAutoPlay = 0x288; // char : 1
		constexpr auto StopWhenOwnerIsDestroyed = 0x288; // char : 1
		constexpr auto bIsPlaying = 0x288; // char : 1
		constexpr auto PlayEvent = 0x28c; // ObjectProperty
	}

	namespace n_UTgCustomCharacterComponent {
		constexpr auto m_SourceMeshList = 0x88; // TArray<ObjectProperty>
		constexpr auto m_CompositeTextures = 0x98; // TArray<FCompositeTextureType>
		constexpr auto m_nCompositeTextureSizeX = 0xa8; // int32_t
		constexpr auto m_nCompositeTextureSizeY = 0xac; // int32_t
		constexpr auto m_CompositeParts = 0xb0; // TArray<FCompositePartInfo>
		constexpr auto m_CompositeFxList = 0xc0; // TArray<ObjectProperty>
	}

	namespace n_ATgDestructible {
		constexpr auto r_EffectManager = 0x2e8; // ObjectProperty
		constexpr auto r_nMaxHealth = 0x2f0; // int32_t
		constexpr auto m_bDisplayHealth = 0x2f4; // char : 1
		constexpr auto m_bDestroyed = 0x2f4; // char : 1
		constexpr auto m_bInitialized = 0x2f4; // char : 1
		constexpr auto m_bFogOfWarBlocker = 0x2f4; // char : 1
		constexpr auto m_bOneDirectional = 0x2f4; // char : 1
		constexpr auto m_nPhysicalType = 0x2f8; // int32_t
		constexpr auto m_nTaskForce = 0x2fc; // char
		constexpr auto r_nHealth = 0x300; // int32_t
		constexpr auto r_nActorInstanceId = 0x304; // int32_t
	}

	namespace n_UTgAIBehaviorAction_SetAimDevice {
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_USeqAct_SetParticleSysParam {
		constexpr auto InstanceParameters = 0x108; // TArray<FParticleSysParam>
		constexpr auto bOverrideScalar = 0x118; // char : 1
		constexpr auto ScalarValue = 0x11c; // float
	}

	namespace n_ATgProj_Vine {
		constexpr auto m_VineForm = 0x51c; // ObjectProperty
	}

	namespace n_UTgSeqAct_PlayFullBodyAnim {
		constexpr auto c_AnimName = 0x108; // FName
		constexpr auto c_fRate = 0x110; // float
		constexpr auto c_fBlendInTime = 0x114; // float
		constexpr auto c_fBlendOutTime = 0x118; // float
		constexpr auto c_bLooping = 0x11c; // char : 1
		constexpr auto c_bOverride = 0x11c; // char : 1
	}

	namespace n_UUIDataStore_GameState {
		constexpr auto __OnRefreshDataFieldValue__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UActorFactoryRigidBody {
		constexpr auto bStartAwake = 0xb8; // char : 1
		constexpr auto bDamageAppliesImpulse = 0xb8; // char : 1
		constexpr auto bLocalSpaceInitialVelocity = 0xb8; // char : 1
		constexpr auto bEnableStayUprightSpring = 0xb8; // char : 1
		constexpr auto InitialVelocity = 0xbc; // FVector
		constexpr auto AdditionalVelocity = 0xc8; // ComponentProperty
		constexpr auto InitialAngularVelocity = 0xd0; // ComponentProperty
		constexpr auto RBChannel = 0xd8; // ERBCollisionChannel
		constexpr auto StayUprightTorqueFactor = 0xdc; // float
		constexpr auto StayUprightMaxTorque = 0xe0; // float
	}

	namespace n_ALadderVolume {
		constexpr auto WallDir = 0x314; // FRotator
		constexpr auto m_bBotOnly = 0x320; // char : 1
		constexpr auto bNoPhysicalLadder = 0x320; // char : 1
		constexpr auto bAutoPath = 0x320; // char : 1
		constexpr auto bAllowLadderStrafing = 0x320; // char : 1
		constexpr auto LookDir = 0x324; // FVector
		constexpr auto ClimbDir = 0x330; // FVector
		constexpr auto LadderList = 0x33c; // ObjectProperty
		constexpr auto PendingClimber = 0x344; // ObjectProperty
		constexpr auto WallDirArrow = 0x34c; // ComponentProperty
		constexpr auto m_WallDirArrow = 0x354; // ComponentProperty
	}

	namespace n_USeqEvent_Mover {
		constexpr auto StayOpenTime = 0x128; // float
	}

	namespace n_UTgInventoryObject_Listen_Combo_Grohk {
		constexpr auto m_fFirstHitThisTickTimestamp = 0xd0; // float
		constexpr auto m_nHitsThisChain = 0xd4; // int32_t
		constexpr auto m_bBonusActive = 0xd8; // char : 1
	}

	namespace n_ATgDeploy_GeometryBarrierTank {
		constexpr auto m_CachedInaraPawn = 0x470; // ObjectProperty
		constexpr auto m_CenterMesh = 0x478; // ComponentProperty
		constexpr auto m_LeftMeshes = 0x480; // ComponentProperty [0x2]
		constexpr auto m_RightMeshes = 0x490; // ComponentProperty [0x2]
		constexpr auto m_WallMeshIDCenter = 0x4a0; // int32_t
		constexpr auto m_WallMeshIDEndCap = 0x4a4; // int32_t
		constexpr auto r_bGrowthModeActivationSignal = 0x4a8; // char : 1
		constexpr auto m_bInGrowthMode = 0x4a8; // char : 1
		constexpr auto m_bDidInitialHit = 0x4a8; // char : 1
		constexpr auto r_bEarthenGuardActive = 0x4a8; // char : 1
		constexpr auto r_bHasAlpine = 0x4a8; // char : 1
		constexpr auto m_fGrowStartTime = 0x4ac; // float
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto bAttenuate = 0x74; // char : 1
		constexpr auto bSpatialize = 0x74; // char : 1
		constexpr auto bAttenuateWithLPF = 0x74; // char : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto DistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto DistanceType = 0x81; // ESoundDistanceCalc
		constexpr auto RadiusMin = 0x84; // float
		constexpr auto RadiusMax = 0x88; // float
		constexpr auto LPFRadiusMin = 0x8c; // float
		constexpr auto LPFRadiusMax = 0x90; // float
	}

	namespace n_UGFxInteraction {
		constexpr auto VfTable_FCallbackEventDevice = 0xb0; // FPointer
		constexpr auto bFakeMobileTouches = 0xb8; // char : 1
	}

	namespace n_UMorphNodePose {
		constexpr auto Target = 0x74; // ObjectProperty
		constexpr auto MorphName = 0x7c; // FName
		constexpr auto Weight = 0x84; // float
	}

	namespace n_UTgAnimBlendByMountSkin {
		constexpr auto m_SkinMap = 0x168; // TArray<FMountSkinChildInfo>
	}

	namespace n_ATgCollisionProxy_Cylinder {
		constexpr auto m_CollisionCylinder = 0x2b4; // ComponentProperty
	}

	namespace n_ATgForgeObjective {
		constexpr auto m_Used = 0x2b0; // TArray<FForgeUse>
		constexpr auto m_Upgraded = 0x2c0; // TArray<FForgeUse>
		constexpr auto r_Items = 0x2d0; // FForgeItem [0x8]
		constexpr auto r_Upgrades = 0x330; // FForgeItem [0x8]
		constexpr auto r_nUpgrades = 0x390; // int32_t
		constexpr auto r_nOwningTeam = 0x394; // int32_t
		constexpr auto s_nPlayerCountA = 0x398; // int32_t
		constexpr auto s_nPlayerCountB = 0x39c; // int32_t
		constexpr auto s_bAllowCapture = 0x3a0; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_IsInTowerRadius {
		constexpr auto bMustBeEnemy = 0x98; // char : 1
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bDamageAppliesImpulse = 0x280; // char : 1
		constexpr auto bShouldDoAnimNotifies = 0x280; // char : 1
		constexpr auto bForceSaveInCheckpoint = 0x280; // char : 1
		constexpr auto bCollideActors_OldValue = 0x280; // char : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x280; // char : 1
		constexpr auto SkeletalMeshComponent = 0x284; // ComponentProperty
		constexpr auto LightEnvironment = 0x28c; // ComponentProperty
		constexpr auto Silhouette = 0x294; // ComponentProperty
		constexpr auto FacialAudioComp = 0x29c; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x2a4; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x2ac; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x2b4; // ObjectProperty
		constexpr auto ControlTargets = 0x2bc; // TArray<FSkelMeshActorControlTarget>
		constexpr auto InterpGroupList = 0x2cc; // TArray<ObjectProperty>
		constexpr auto SavedAnimSeqName = 0x2dc; // FName
		constexpr auto SavedCurrentTime = 0x2e4; // float
	}

	namespace n_UTgAnimNodeHitReactionOffset {
		constexpr auto Owner = 0x170; // ObjectProperty
		constexpr auto m_vCurrentAngle = 0x178; // FVector2D
		constexpr auto m_bSecondaryReaction = 0x180; // char : 1
		constexpr auto m_fMaxReactionTime = 0x184; // float
		constexpr auto m_fMinTimeBetweenReactions = 0x188; // float
		constexpr auto m_ActiveReactions = 0x18c; // TArray<FHitReactionInfo>
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x60; // FName
		constexpr auto PhysMaterial = 0x68; // ObjectProperty
		constexpr auto Hardness = 0x70; // float
		constexpr auto bNoWeightBlend = 0x74; // char : 1
	}

	namespace n_UTgSeqAct_SetInputEnabled {
		constexpr auto bEnableMoveForward = 0x108; // char : 1
		constexpr auto bEnableMoveBackward = 0x108; // char : 1
		constexpr auto bEnableMoveLeft = 0x108; // char : 1
		constexpr auto bEnableMoveRight = 0x108; // char : 1
		constexpr auto bEnableLookUp = 0x108; // char : 1
		constexpr auto bEnableLookDown = 0x108; // char : 1
		constexpr auto bEnableLookLeft = 0x108; // char : 1
		constexpr auto bEnableLookRight = 0x108; // char : 1
		constexpr auto bEnableJumping = 0x108; // char : 0
		constexpr auto bEnableMounting = 0x108; // char : 0
		constexpr auto bEnableAuto = 0x108; // char : 0
		constexpr auto bEnableAlt = 0x108; // char : 0
		constexpr auto bEnableBattleAbility = 0x108; // char : 0
		constexpr auto bEnableMovementAbility = 0x108; // char : 0
		constexpr auto bEnableUltimate = 0x108; // char : 0
		constexpr auto bEnableEmote = 0x108; // char : 0
	}

	namespace n_UTgChampionTickManager {
		constexpr auto m_nCurrentFrame = 0x60; // int32_t
		constexpr auto m_nNextID = 0x64; // int32_t
		constexpr auto m_CachedPlayerController = 0x68; // ObjectProperty
		constexpr auto m_bTickThrottlingEnabled = 0x70; // char : 1
		constexpr auto m_fGuaranteedTickDistance = 0x74; // float
		constexpr auto m_nTickGroupCount = 0x78; // int32_t
		constexpr auto c_ChampionEntries = 0x7c; // TMap<None, None>
	}

	namespace n_ATgDevice_VanguardGrab {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xb60; // FPointer
		constexpr auto m_bWaitingForServerHit = 0xb68; // char : 1
		constexpr auto m_bHasStartedGrab = 0xb68; // char : 1
		constexpr auto m_bHasHitTarget = 0xb68; // char : 1
		constexpr auto m_bLegendaryActive = 0xb68; // char : 1
		constexpr auto m_bLegendaryEnabled = 0xb68; // char : 1
		constexpr auto m_HitCharacter = 0xb6c; // ObjectProperty
		constexpr auto m_DesiredTarget = 0xb74; // ObjectProperty
		constexpr auto m_fJoinViewLerpTime = 0xb7c; // float
		constexpr auto m_fHorizontalGrabTargetOffset = 0xb80; // float
		constexpr auto __InterruptFiringDelegate__Delegate = 0xb84; // DelegateProperty
	}

	namespace n_UPComPlayerInput {
		constexpr auto c_bDirty = 0x2d4; // char : 1
		constexpr auto c_bUseServerBindings = 0x2d4; // char : 1
		constexpr auto c_bJumpEnabled = 0x2d4; // char : 1
		constexpr auto c_sCurrentProfile = 0x2d8; // FString
		constexpr auto m_nKeybindConfigSet = 0x2e8; // int32_t
		constexpr auto m_nMinLookSensitivity = 0x2ec; // float
		constexpr auto m_nMaxLookSensitivity = 0x2f0; // float
		constexpr auto m_RecCastMode = 0x2f4; // int32_t
	}

	namespace n_UTgSilhouetteComponentPaladins {
		constexpr auto m_ColorSettings = 0x29c; // FSilhouetteColorSettings
		constexpr auto m_FadeSettings = 0x2bc; // FSilhouetteFadeSettings
		constexpr auto m_PulseSettings = 0x2d0; // FSilhouettePulseSettings
	}

	namespace n_UMcpUserCloudFileDownload {
		constexpr auto EnumerateCloudFilesUrl = 0x78; // FString
		constexpr auto ReadCloudFileUrl = 0x88; // FString
		constexpr auto WriteCloudFileUrl = 0x98; // FString
		constexpr auto DeleteCloudFileUrl = 0xa8; // FString
		constexpr auto UserCloudFileRequests = 0xb8; // TArray<FMcpUserCloudFilesEntry>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0x128; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0x138; // DelegateProperty
	}

	namespace n_UActorFactoryEmitter {
		constexpr auto ParticleSystem = 0x9c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_GoblinState {
		constexpr auto GoblinState = 0x98; // EGoblinState
	}

	namespace n_USkelControlTrail {
		constexpr auto ChainLength = 0xd0; // int32_t
		constexpr auto ChainBoneAxis = 0xd4; // EAxis
		constexpr auto bInvertChainBoneAxis = 0xd8; // char : 1
		constexpr auto bLimitStretch = 0xd8; // char : 1
		constexpr auto bActorSpaceFakeVel = 0xd8; // char : 1
		constexpr auto bHadValidStrength = 0xd8; // char : 1
		constexpr auto TrailRelaxation = 0xdc; // float
		constexpr auto StretchLimit = 0xe0; // float
		constexpr auto FakeVelocity = 0xe4; // FVector
		constexpr auto ThisTimstep = 0xf0; // float
		constexpr auto TrailBoneLocations = 0xf4; // TArray<FVector>
		constexpr auto OldLocalToWorld = 0x110; // FMatrix
	}

	namespace n_UTgAnimBlendInterpBySpeed {
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
		constexpr auto m_fBlendTime = 0x12c; // float
		constexpr auto m_fFullRunSpeed = 0x130; // float
		constexpr auto m_fFullIdleSpeed = 0x134; // float
	}

	namespace n_UTgAIBehaviorCondition_NumGodsNearDeployable {
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
		constexpr auto DeployableId = 0xa0; // int32_t
		constexpr auto GodThreshold = 0xa4; // int32_t
	}

	namespace n_UUIData_Match {
		constexpr auto dwMatchId = 0x70; // Fdword
		constexpr auto MatchMembersMap = 0x74; // TMap<None, None>
		constexpr auto MatchMembers = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UTgCameraModule_Free {
		constexpr auto CamAltitude = 0x68; // float
		constexpr auto DesiredCamAltitude = 0x6c; // float
		constexpr auto MaxCamAltitude = 0x70; // float
		constexpr auto MinCamAltitude = 0x74; // float
		constexpr auto CamZoomIncrement = 0x78; // float
	}

	namespace n_UTgInventoryObject_Listen_MirrorPetDamageToHeal {
		constexpr auto m_CachedFiremode = 0xd0; // ObjectProperty
	}

	namespace n_UAnimNodeBlendMultiBone {
		constexpr auto BlendTargetList = 0x114; // TArray<FChildBoneBlendInfo>
		constexpr auto SourceRequiredBones = 0x124; // TArray<char>
	}

	namespace n_UTgAIBehaviorCondition_PlayerDeployState {
		constexpr auto DeployState = 0x98; // EPlayerDeployState
	}

	namespace n_UTgSetting {
		constexpr auto m_fDefault = 0x60; // float
		constexpr auto m_fConfigDefault = 0x64; // float
		constexpr auto m_fOriginal = 0x68; // float
		constexpr auto m_fMax = 0x6c; // float
		constexpr auto m_fMin = 0x70; // float
		constexpr auto m_fTemp = 0x74; // float
		constexpr auto m_fValue = 0x78; // float
		constexpr auto m_fPrecision = 0x7c; // float
		constexpr auto m_eType = 0x80; // SETTING_TYPE
		constexpr auto m_Options = 0x84; // TArray<FOptionData>
		constexpr auto m_bCanPressAndHold = 0x94; // char : 1
		constexpr auto m_fPressAndHoldModifierAmount = 0x98; // float
	}

	namespace n_UUIComponent_BattlePassChallenge {
		constexpr auto m_mcLockChallenge = 0x120; // ObjectProperty
		constexpr auto m_mcLockReward = 0x128; // ObjectProperty
		constexpr auto m_mcTitleTF0 = 0x130; // ObjectProperty
		constexpr auto m_mcTitleTF1 = 0x138; // ObjectProperty
		constexpr auto m_mcLockedTF = 0x140; // ObjectProperty
		constexpr auto m_mcRewardTF0 = 0x148; // ObjectProperty
		constexpr auto m_mcRewardTF1 = 0x150; // ObjectProperty
		constexpr auto m_pGoalList = 0x158; // ObjectProperty
	}

	namespace n_UTgSeqAct_DefenseWaveSpawner {
		constexpr auto m_nRoundNumber = 0x108; // int32_t
		constexpr auto m_fSpawnFrequency = 0x10c; // float
		constexpr auto m_fNextSpawnTime = 0x110; // float
	}

	namespace n_UUIPatchNotesJsonManager {
		constexpr auto m_pMovie = 0x84; // ObjectProperty
		constexpr auto m_PatchData = 0x8c; // FPatchNotesData
		constexpr auto m_PatchImages = 0xf4; // TArray<ObjectProperty>
	}

	namespace n_USkelControl_TwistBone {
		constexpr auto SourceBoneName = 0xd0; // FName
		constexpr auto TwistAngleScale = 0xd8; // float
	}

	namespace n_ALadder {
		constexpr auto MyLadder = 0x378; // ObjectProperty
		constexpr auto LadderList = 0x380; // ObjectProperty
	}

	namespace n_UGoal_AtActor {
		constexpr auto GoalActor = 0x78; // ObjectProperty
		constexpr auto GoalDist = 0x80; // float
		constexpr auto bKeepPartial = 0x84; // char : 1
	}

	namespace n_UAnimNotify_PawnMaterialParam {
		constexpr auto ScalarParameterInterpArray = 0x68; // TArray<FScalarParameterInterpStruct>
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgAnimMetaData_SkelControl_BoneScale_KeyFrame {
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto KeyFrames = 0x70; // TArray<FTimeModifier>
		constexpr auto bAllowScaleUp = 0x80; // char : 1
		constexpr auto bAllowScaleDown = 0x80; // char : 1
		constexpr auto bAdjustControllerStrength = 0x80; // char : 1
		constexpr auto bFullControlOverController = 0x80; // char : 1
		constexpr auto bSetKeysNoInterp = 0x80; // char : 1
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x80; // char : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x80; // char : 1
		constexpr auto SkelControlName = 0x84; // FName
		constexpr auto OnBecomeRelevantBehavior = 0x8c; // EOnRelevanceChange
		constexpr auto OnCeaseRelevantBehavior = 0x8d; // EOnRelevanceChange
		constexpr auto OnBecomeRelevantStrength = 0x90; // float
		constexpr auto OnCeaseRelevantStrength = 0x94; // float
	}

	namespace n_UTgDeviceForm_Spray {
		constexpr auto m_SprayMIC = 0x2bc; // ObjectProperty
		constexpr auto m_nRandAlphaMaskMax = 0x2c4; // int32_t
		constexpr auto m_nPrevAlphaMask = 0x2c8; // int32_t
		constexpr auto c_SpawnedDecal = 0x2cc; // ComponentProperty
		constexpr auto m_fAccurateTraceLength = 0x2d4; // float
		constexpr auto m_fWidth = 0x2d8; // float
		constexpr auto m_fHeight = 0x2dc; // float
		constexpr auto m_fDepth = 0x2e0; // float
		constexpr auto m_SprayBehavior = 0x2e4; // SprayDisplayBehavior
		constexpr auto m_bInitializedSprayParams = 0x2e8; // char : 1
		constexpr auto m_nSprayHitFXId = 0x2ec; // int32_t
		constexpr auto m_nSprayMissedFXId = 0x2f0; // int32_t
		constexpr auto c_SprayHitFX = 0x2f4; // ObjectProperty
		constexpr auto c_SprayMissedFX = 0x2fc; // ObjectProperty
	}

	namespace n_UPComPictureInPicture {
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto Scene = 0x68; // ObjectProperty
		constexpr auto RenderTargetToUse = 0x70; // ObjectProperty
		constexpr auto ViewDescs = 0x78; // TArray<FPComPipViewDesc>
		constexpr auto bEnableDebugRendering = 0x88; // char : 1
		constexpr auto CurrentOffset = 0x8c; // FVector2D
		constexpr auto CurrentScaling = 0x94; // FVector2D
	}

	namespace n_ATgDeploy_GeometryBuck {
		constexpr auto m_bInteriorEffectApplied = 0x470; // char : 1
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_ATgFatalityMeshActor {
		constexpr auto m_nTaskForceId = 0x280; // int32_t
		constexpr auto m_Mesh = 0x284; // ComponentProperty
	}

	namespace n_ATgDevice_DoubleCharge {
		constexpr auto m_nTotalNumShots = 0xb60; // int32_t
		constexpr auto m_nShotsFired = 0xb64; // int32_t
		constexpr auto m_bSetAsTargetingDeviceForMultiFire = 0xb68; // char : 1
	}

	namespace n_USpeechRecognition {
		constexpr auto Language = 0x60; // FString
		constexpr auto ConfidenceThreshhold = 0x70; // float
		constexpr auto Vocabularies = 0x74; // TArray<FRecogVocabulary>
		constexpr auto VoiceData = 0x84; // TArray<char>
		constexpr auto WorkingVoiceData = 0x94; // TArray<char>
		constexpr auto UserData = 0xa4; // TArray<char>
		constexpr auto InstanceData = 0xb4; // FRecogUserData [0x4]
		constexpr auto bDirty = 0x104; // char : 1
		constexpr auto bInitialised = 0x104; // char : 1
		constexpr auto FnxVoiceData = 0x108; // FPointer
	}

	namespace n_UPComPlayerProfile {
		constexpr auto Rank = 0x94; // int32_t
		constexpr auto Kills = 0x98; // int32_t
		constexpr auto Deaths = 0x9c; // int32_t
		constexpr auto Assists = 0xa0; // int32_t
		constexpr auto XpLevel = 0xa4; // int32_t
		constexpr auto HZPoints = 0xa8; // int32_t
		constexpr auto XPPoints = 0xac; // int32_t
		constexpr auto AssistPoints = 0xb0; // int32_t
		constexpr auto AverageScore = 0xb4; // int32_t
		constexpr auto BoostHoursRemaining = 0xb8; // int32_t
		constexpr auto InfoMask = 0xbc; // int32_t
		constexpr auto TimePlayed = 0xc0; // int32_t
		constexpr auto TotalAccolades = 0xc4; // int32_t
		constexpr auto FastestSki = 0xc8; // int32_t
		constexpr auto FlagGrabs = 0xcc; // int32_t
		constexpr auto FlagCaps = 0xd0; // int32_t
		constexpr auto GensDestroyed = 0xd4; // int32_t
		constexpr auto ObjsDestroyed = 0xd8; // int32_t
		constexpr auto bVIP = 0xdc; // char : 1
		constexpr auto bBoost = 0xdc; // char : 1
		constexpr auto PlayerID = 0xe0; // int32_t
		constexpr auto PlayerName = 0xe4; // FString
		constexpr auto Badges = 0xf4; // TArray<FBadgeStruct>
		constexpr auto TopBadges = 0x104; // TArray<FBadgeStruct>
		constexpr auto ClassTimePlayed = 0x114; // TArray<FPropertyPair>
		constexpr auto Accolades = 0x124; // TArray<FAccoladeStruct>
	}

	namespace n_UTgAchievement_Wanderer {
		constexpr auto m_vLastPlayerLocation = 0x90; // FVector
		constexpr auto m_bLastLocationValid = 0x9c; // char : 1
		constexpr auto m_fDistanceAccumulator = 0xa0; // float
	}

	namespace n_UTgAIBehaviorComposite_SequenceScripted {
		constexpr auto bFreezeOnLast = 0xb8; // char : 1
		constexpr auto bIsLooping = 0xb8; // char : 1
		constexpr auto bFirstChildIsResetTest = 0xb8; // char : 1
		constexpr auto bResetSequenceOnFailure = 0xb8; // char : 1
	}

	namespace n_UNxForceFieldRadialComponent {
		constexpr auto ForceStrength = 0x2bc; // float
		constexpr auto ForceRadius = 0x2c0; // float
		constexpr auto SelfRotationStrength = 0x2c4; // float
		constexpr auto ForceFalloff = 0x2c8; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2cc; // FPointer
	}

	namespace n_USeqEvent_Used {
		constexpr auto bAimToInteract = 0x128; // char : 1
		constexpr auto InteractDistance = 0x12c; // float
		constexpr auto InteractText = 0x130; // FString
		constexpr auto InteractIcon = 0x140; // ObjectProperty
		constexpr auto ClassProximityTypes = 0x148; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x158; // TArray<AActor*>
	}

	namespace n_UUIComponent_HealFeed {
		constexpr auto m_InactiveEntries = 0x120; // TArray<ObjectProperty>
		constexpr auto m_HealSources = 0x130; // FHealSource [0x5]
		constexpr auto m_pViewTarget = 0x234; // ObjectProperty
		constexpr auto m_bIsVisible = 0x23c; // char : 1
		constexpr auto m_fSourceHideDelay = 0x240; // float
		constexpr auto m_fUpdateDisplayTimer = 0x244; // float
		constexpr auto m_fUpdateDisplayRate = 0x248; // float
		constexpr auto m_HealAmountMap = 0x24c; // TMap<None, None>
	}

	namespace n_ATgDeploy_TurretEffectField {
		constexpr auto m_DeployTimePendingTargets = 0x47c; // TArray<ObjectProperty>
		constexpr auto m_ParentTurret = 0x48c; // ObjectProperty
	}

	namespace n_UTgAnimBlendByFall {
		constexpr auto m_FallSource = 0x168; // EFallSource
		constexpr auto FallState = 0x169; // EBlendFallTypes
		constexpr auto m_PreviousTickPhysics = 0x16a; // EPhysics
		constexpr auto LastFallingVelocity = 0x16c; // float
		constexpr auto pOwner = 0x170; // ObjectProperty
		constexpr auto m_fPrelandDistance = 0x178; // float
		constexpr auto m_bDebugMeasureJumpUp = 0x17c; // char : 1
		constexpr auto m_bDebugMeasureJumpDownToLand = 0x17c; // char : 1
		constexpr auto m_bMeasuring = 0x17c; // char : 1
		constexpr auto m_bUsesPreDown = 0x17c; // char : 1
		constexpr auto m_bJumpOnly = 0x17c; // char : 1
		constexpr auto m_StartMeasureJump = 0x180; // FVector
		constexpr auto m_fMeasureTime = 0x18c; // float
		constexpr auto m_fLandingMovementPlayRate = 0x190; // float
		constexpr auto m_nmNameLandingSynchGroup = 0x194; // FName
	}

	namespace n_ATriggeredPath {
		constexpr auto bOpen = 0x378; // char : 1
		constexpr auto MyTrigger = 0x37c; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Evie {
		constexpr auto m_MarkedTargets = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_fBlinkTimestamp = 0xe0; // float
		constexpr auto m_fIceBlockTimestamp = 0xe4; // float
	}

	namespace n_UMcpManagedValueManager {
		constexpr auto CreateSaveSlotUrl = 0xc8; // FString
		constexpr auto ReadSaveSlotUrl = 0xd8; // FString
		constexpr auto UpdateValueUrl = 0xe8; // FString
		constexpr auto DeleteValueUrl = 0xf8; // FString
		constexpr auto SaveSlots = 0x108; // TArray<FManagedValueSaveSlot>
		constexpr auto CreateSaveSlotRequests = 0x118; // TArray<FSaveSlotRequestState>
		constexpr auto ReadSaveSlotRequests = 0x128; // TArray<FSaveSlotRequestState>
		constexpr auto UpdateValueRequests = 0x138; // TArray<FValueRequestState>
		constexpr auto DeleteValueRequests = 0x148; // TArray<FValueRequestState>
	}

	namespace n_UInterpTrackHeadTracking {
		constexpr auto HeadTrackingTrack = 0xa0; // TArray<FHeadTrackingKey>
		constexpr auto TrackControllerName = 0xb0; // TArray<FName>
		constexpr auto LookAtActorRadius = 0xc0; // float
		constexpr auto bDisableBeyondLimit = 0xc4; // char : 1
		constexpr auto bLookAtPawns = 0xc4; // char : 1
		constexpr auto MaxLookAtTime = 0xc8; // float
		constexpr auto MinLookAtTime = 0xcc; // float
		constexpr auto MaxInterestTime = 0xd0; // float
		constexpr auto ActorClassesToLookAt = 0xd4; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xe4; // TArray<FName>
	}

	namespace n_UDrawSphereComponent {
		constexpr auto SphereColor = 0x24c; // FColor
		constexpr auto SphereMaterial = 0x250; // ObjectProperty
		constexpr auto SphereRadius = 0x258; // float
		constexpr auto SphereSides = 0x25c; // int32_t
		constexpr auto bDrawWireSphere = 0x260; // char : 1
		constexpr auto bDrawLitSphere = 0x260; // char : 1
		constexpr auto bDrawOnlyIfSelected = 0x260; // char : 1
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x60; // FSoundClassProperties
		constexpr auto ChildClassNames = 0x90; // TArray<FName>
		constexpr auto bIsChild = 0xa0; // char : 1
		constexpr auto EditorData = 0xa4; // TMap<None, None>
	}

	namespace n_UGameAICmd_Hover_MoveToGoal {
		constexpr auto Path = 0x84; // ObjectProperty
		constexpr auto Find = 0x8c; // ObjectProperty
		constexpr auto Goal = 0x94; // ObjectProperty
		constexpr auto Radius = 0x9c; // float
		constexpr auto bWasFiring = 0xa0; // char : 1
		constexpr auto DesiredHoverHeight = 0xa4; // float
		constexpr auto CurrentHoverHeight = 0xa8; // float
		constexpr auto SubGoalReachDist = 0xac; // float
		constexpr auto GoalDistance = 0xb0; // float
		constexpr auto MoveVectDest = 0xb4; // FVector
		constexpr auto CurrentSpec = 0xc0; // ObjectProperty
	}

	namespace n_UKismetBookMark {
		constexpr auto BookMarkSequencePathName = 0x6c; // FString
	}

	namespace n_UUIDataSocial {
		constexpr auto m_bPrefersMic = 0x70; // char : 1
		constexpr auto m_nOnlineFriendCount = 0x74; // int32_t
		constexpr auto m_nConnectedFriendCount = 0x78; // int32_t
		constexpr auto m_nPendingFriendInvites = 0x7c; // int32_t
		constexpr auto m_dwLastUpdatePartyActiveCount = 0x80; // Fdword
		constexpr auto m_nReferralPeriodSeconds = 0x84; // int32_t
		constexpr auto m_dwReferredHighestLevel = 0x88; // Fdword
		constexpr auto m_dwReferredLongestPlayedMinutes = 0x8c; // Fdword
		constexpr auto m_dwReferredReachedTier2 = 0x90; // Fdword
		constexpr auto m_dwLFGMinimumLevel = 0x94; // Fdword
		constexpr auto m_dwLFGMaximumLevel = 0x98; // Fdword
		constexpr auto m_dwCurrentTeamId = 0x9c; // Fdword
		constexpr auto m_sLFGMessage = 0xa0; // FString
		constexpr auto m_AllFriends = 0xb0; // TArray<ObjectProperty>
		constexpr auto m_CrossPlatformFriends = 0xc0; // TArray<ObjectProperty>
		constexpr auto m_PortalFriends = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_Party = 0xe0; // TArray<ObjectProperty>
		constexpr auto m_Search = 0xf0; // TArray<ObjectProperty>
		constexpr auto m_ReferredPlayers = 0x100; // TArray<ObjectProperty>
		constexpr auto m_Referrers = 0x110; // TArray<ObjectProperty>
		constexpr auto m_LFGPlayers = 0x120; // TArray<ObjectProperty>
		constexpr auto m_LFGFilters = 0x130; // TArray<Fdword>
		constexpr auto m_LFGSelfFilters = 0x140; // TArray<Fdword>
		constexpr auto m_Players = 0x150; // TMap<None, None>
		constexpr auto m_PlayerByUserId = 0x198; // TMap<None, None>
	}

	namespace n_UParticleModuleUberBase {
		constexpr auto RequiredModules = 0x68; // TArray<FName>
	}

	namespace n_UAnimMetaData_SkelControl {
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto bFullControlOverController = 0x70; // char : 1
		constexpr auto SkelControlName = 0x74; // FName
	}

	namespace n_USeqAct_AkSetState {
		constexpr auto StateGroup = 0x108; // FString
		constexpr auto State = 0x118; // FString
	}

	namespace n_ALevelGridVolume {
		constexpr auto LevelGridVolumeName = 0x2bc; // FString
		constexpr auto CellShape = 0x2cc; // LevelGridCellShape
		constexpr auto Subdivisions = 0x2d0; // int32_t [0x3]
		constexpr auto LoadingDistance = 0x2dc; // float
		constexpr auto KeepLoadedRange = 0x2e0; // float
		constexpr auto CellConvexElem = 0x2e4; // FKConvexElem
	}

	namespace n_UUIComponent_BuyCrownsButton {
		constexpr auto m_mcTF = 0x120; // ObjectProperty
		constexpr auto m_pButton = 0x128; // ObjectProperty
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x60; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x64; // float
		constexpr auto bSavedActiveState = 0x68; // char : 1
	}

	namespace n_ATgCoverPoint {
		constexpr auto m_bLeanLeft = 0x394; // char : 1
		constexpr auto m_bLeanRight = 0x394; // char : 1
		constexpr auto m_bAllowPopup = 0x394; // char : 1
		constexpr auto m_bAllowMantle = 0x394; // char : 1
		constexpr auto m_vLeanLeft = 0x398; // FVector
		constexpr auto m_vLeanRight = 0x3a4; // FVector
		constexpr auto m_vPopUp = 0x3b0; // FVector
	}

	namespace n_UUIComponent_DailyRewardPanel {
		constexpr auto m_eState = 0x120; // char
		constexpr auto m_sTimeLeft = 0x124; // FString
		constexpr auto m_pRewardLTI = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcRewardTF = 0x144; // ObjectProperty
		constexpr auto m_mcPriceTF = 0x14c; // ObjectProperty
		constexpr auto m_mcFlash = 0x154; // ObjectProperty
		constexpr auto m_mcRewardClaimed = 0x15c; // ObjectProperty
		constexpr auto m_pRewardDays = 0x164; // ObjectProperty
		constexpr auto m_akRewardClaimSuccess = 0x16c; // ObjectProperty
		constexpr auto m_akRewardClaimFail = 0x174; // ObjectProperty
	}

	namespace n_UUIJoinCustomPopup {
		constexpr auto m_bHaveInput = 0x244; // char : 1
		constexpr auto m_mcTitle = 0x248; // ObjectProperty
		constexpr auto m_mcError = 0x250; // ObjectProperty
		constexpr auto m_mcMatchNameTF = 0x258; // ObjectProperty
		constexpr auto m_mcInputMatchName = 0x260; // ObjectProperty
		constexpr auto m_mcPasswordTF = 0x268; // ObjectProperty
		constexpr auto m_mcInputPass = 0x270; // ObjectProperty
		constexpr auto m_mcInputJoin = 0x278; // ObjectProperty
		constexpr auto m_mcDummyButtonMatch = 0x280; // ObjectProperty
		constexpr auto m_mcDummyButtonPassword = 0x288; // ObjectProperty
		constexpr auto m_pJoinCustomMatchInputGroup = 0x290; // ObjectProperty
		constexpr auto m_pGameToJoin = 0x298; // ObjectProperty
	}

	namespace n_USeqEvent_MobileMotion {
		constexpr auto Roll = 0x128; // float
		constexpr auto Pitch = 0x12c; // float
		constexpr auto Yaw = 0x130; // float
		constexpr auto DeltaRoll = 0x134; // float
		constexpr auto DeltaPitch = 0x138; // float
		constexpr auto DeltaYaw = 0x13c; // float
	}

	namespace n_UTgSeqAct_SetUltimateEnergy {
		constexpr auto fChargePercent = 0x108; // float
	}

	namespace n_UUIData_List_TitleIcon {
		constexpr auto nIcon = 0x70; // int32_t
		constexpr auto sTitles = 0x74; // TArray<FString>
	}

	namespace n_UMobileMenuElement {
		constexpr auto VpPos = 0x60; // FVector2D
		constexpr auto VpSize = 0x68; // FVector2D
		constexpr auto bIsVisible = 0x70; // char : 1
		constexpr auto bIsActive = 0x70; // char : 1
	}

	namespace n_UTgInvListener_DeathAfterHit {
		constexpr auto m_fResetTimer = 0xd0; // float
		constexpr auto m_pLastTargetsHit = 0xd4; // TArray<ObjectProperty>
	}

	namespace n_UUIHudVGS {
		constexpr auto m_Label = 0x244; // ObjectProperty [0xe]
		constexpr auto m_Keybind = 0x2b4; // ObjectProperty [0xe]
		constexpr auto m_ListItem = 0x324; // ObjectProperty [0xe]
		constexpr auto m_GamepadItem = 0x394; // ObjectProperty [0x6]
		constexpr auto m_FramePC = 0x3c4; // ObjectProperty
		constexpr auto m_FrameConsole = 0x3cc; // ObjectProperty
		constexpr auto m_pRootPC = 0x3d4; // ObjectProperty
		constexpr auto m_pRootConsole = 0x3dc; // ObjectProperty
		constexpr auto m_pCurrent = 0x3e4; // ObjectProperty
		constexpr auto m_bIsGamepadSequence = 0x3ec; // char : 1
		constexpr auto m_ActiveKeys = 0x3f0; // TArray<FName>
	}

	namespace n_UCanvas {
		constexpr auto Font = 0x60; // ObjectProperty
		constexpr auto OrgX = 0x68; // float
		constexpr auto OrgY = 0x6c; // float
		constexpr auto ClipX = 0x70; // float
		constexpr auto ClipY = 0x74; // float
		constexpr auto CurX = 0x78; // float
		constexpr auto CurY = 0x7c; // float
		constexpr auto CurZ = 0x80; // float
		constexpr auto CurYL = 0x84; // float
		constexpr auto DrawColor = 0x88; // FColor
		constexpr auto bCenter = 0x8c; // char : 1
		constexpr auto bNoSmooth = 0x8c; // char : 1
		constexpr auto SizeX = 0x90; // int32_t
		constexpr auto SizeY = 0x94; // int32_t
		constexpr auto Canvas = 0x98; // FPointer
		constexpr auto SceneView = 0xa0; // FPointer
		constexpr auto ColorModulate = 0xb0; // FPlane
		constexpr auto DefaultTexture = 0xc0; // ObjectProperty
	}

	namespace n_USeqAct_AddInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_USeqAct_ModifyObjectList {
		constexpr auto ListEntriesCount = 0x108; // int32_t
	}

	namespace n_APlayerReplicationInfo {
		constexpr auto Score = 0x280; // float
		constexpr auto Deaths = 0x284; // int32_t
		constexpr auto Ping = 0x288; // char
		constexpr auto TTSSpeaker = 0x289; // ETTSSpeaker
		constexpr auto RemoteUserDataUpdated = 0x28a; // char
		constexpr auto NumLives = 0x28c; // int32_t
		constexpr auto PlayerName = 0x290; // FString
		constexpr auto OldName = 0x2a0; // FString
		constexpr auto PlayerID = 0x2b0; // int32_t
		constexpr auto Team = 0x2b4; // ObjectProperty
		constexpr auto bAdmin = 0x2bc; // char : 1
		constexpr auto bIsSpectator = 0x2bc; // char : 1
		constexpr auto bOnlySpectator = 0x2bc; // char : 1
		constexpr auto bWaitingPlayer = 0x2bc; // char : 1
		constexpr auto bReadyToPlay = 0x2bc; // char : 1
		constexpr auto bOutOfLives = 0x2bc; // char : 1
		constexpr auto bBot = 0x2bc; // char : 1
		constexpr auto bHasBeenWelcomed = 0x2bc; // char : 1
		constexpr auto bIsInactive = 0x2bc; // char : 0
		constexpr auto bFromPreviousLevel = 0x2bc; // char : 0
		constexpr auto bIsTargeted = 0x2bc; // char : 0
		constexpr auto RemoteUserIsGuest = 0x2bc; // char : 0
		constexpr auto StartTime = 0x2c0; // int32_t
		constexpr auto StringSpectating = 0x2c4; // FString
		constexpr auto StringUnknown = 0x2d4; // FString
		constexpr auto Kills = 0x2e4; // int32_t
		constexpr auto GameMessageClass = 0x2e8; // UGameMessage*
		constexpr auto ExactPing = 0x2f0; // float
		constexpr auto SavedNetworkAddress = 0x2f4; // FString
		constexpr auto UniqueId = 0x304; // FUniqueNetId
		constexpr auto ConsoleUniqueId = 0x30c; // FUniqueNetId
		constexpr auto SessionName = 0x314; // FName
		constexpr auto AutomatedTestingData = 0x31c; // FAutomatedTestingDatum
		constexpr auto StatConnectionCounts = 0x324; // int32_t
		constexpr auto StatPingTotals = 0x328; // int32_t
		constexpr auto StatPingMin = 0x32c; // int32_t
		constexpr auto StatPingMax = 0x330; // int32_t
		constexpr auto StatPKLTotal = 0x334; // int32_t
		constexpr auto StatPKLMin = 0x338; // int32_t
		constexpr auto StatPKLMax = 0x33c; // int32_t
		constexpr auto StatMaxInBPS = 0x340; // int32_t
		constexpr auto StatAvgInBPS = 0x344; // int32_t
		constexpr auto StatMaxOutBPS = 0x348; // int32_t
		constexpr auto StatAvgOutBPS = 0x34c; // int32_t
		constexpr auto Avatar = 0x350; // ObjectProperty
		constexpr auto RemoteUserAudioDevices = 0x358; // FPRIAudioDeviceInfo [0xa]
		constexpr auto RemoteUserId = 0x470; // FString
	}

	namespace n_UUIData_LootTableItem {
		constexpr auto m_dwLootId = 0x60; // Fdword
		constexpr auto m_pParentVendor = 0x64; // ObjectProperty
		constexpr auto m_Prices = 0x6c; // TArray<ObjectProperty>
		constexpr auto m_dwPrevRequiredItemId = 0x7c; // Fdword
		constexpr auto m_bIsDynamicStoreBundle = 0x80; // char : 1
	}

	namespace n_UClipPadEntry {
		constexpr auto Title = 0x60; // FString
		constexpr auto Text = 0x70; // FString
	}

	namespace n_USeqAct_DelaySwitch {
		constexpr auto LinkCount = 0x120; // int32_t
		constexpr auto CurrentIdx = 0x124; // int32_t
		constexpr auto SwitchDelay = 0x128; // float
		constexpr auto NextLinkTime = 0x12c; // float
	}

	namespace n_UAnimNotify_Sound {
		constexpr auto SoundCue = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // char : 1
		constexpr auto bIgnoreIfMeshHidden = 0x70; // char : 1
		constexpr auto bIgnoreIfActorHidden = 0x70; // char : 1
		constexpr auto BoneName = 0x74; // FName
		constexpr auto PercentToPlay = 0x7c; // float
		constexpr auto VolumeMultiplier = 0x80; // float
		constexpr auto PitchMultiplier = 0x84; // float
	}

	namespace n_UTgInventoryObject_Listen_StandingStillSelfEffect {
		constexpr auto m_fRestTime = 0xc8; // float
		constexpr auto m_bIsApplied = 0xcc; // char : 1
		constexpr auto m_CachedPawnOwner = 0xd0; // ObjectProperty
	}

	namespace n_UUIHudVGSData {
		constexpr auto m_nId = 0x60; // int32_t
		constexpr auto m_nParentId = 0x64; // int32_t
		constexpr auto m_nScopeVal = 0x68; // int32_t
		constexpr auto m_sLabel = 0x6c; // FString
		constexpr auto m_sOutput = 0x7c; // FString
		constexpr auto m_sKeybind = 0x8c; // FString
		constexpr auto m_Children = 0x9c; // TArray<ObjectProperty>
	}

	namespace n_AAISwitchablePylon {
		constexpr auto bOpen = 0x490; // char : 1
	}

	namespace n_UUIComponent_ItemIconInventory {
		constexpr auto m_mcIcon = 0x120; // ObjectProperty
		constexpr auto m_mcQuantity = 0x128; // ObjectProperty
	}

	namespace n_UUIInteractable_Item {
		constexpr auto m_mcPrice = 0x140; // ObjectProperty
		constexpr auto m_mcGlow = 0x148; // ObjectProperty
		constexpr auto m_mcRarityGlow = 0x150; // ObjectProperty
		constexpr auto m_mcEquipped = 0x158; // ObjectProperty
		constexpr auto m_pCTA = 0x160; // ObjectProperty
		constexpr auto m_mcSprayUnlocked = 0x168; // ObjectProperty
		constexpr auto m_mcUpgradeText = 0x170; // ObjectProperty
		constexpr auto m_mcStarburstA = 0x178; // ObjectProperty
		constexpr auto m_mcStarburstB = 0x180; // ObjectProperty
		constexpr auto m_mcGlowA = 0x188; // ObjectProperty
		constexpr auto m_mcGlowB = 0x190; // ObjectProperty
		constexpr auto m_mcGlowC = 0x198; // ObjectProperty
		constexpr auto m_mcGlowD = 0x1a0; // ObjectProperty
		constexpr auto m_mcGlowE = 0x1a8; // ObjectProperty
		constexpr auto m_bEquipped = 0x1b0; // char : 1
		constexpr auto m_bShowChampion = 0x1b0; // char : 1
		constexpr auto m_nUpgradeTickHandle = 0x1b4; // int32_t
		constexpr auto m_fUpgradeAnimDuration = 0x1b8; // float
		constexpr auto m_fUpgradeTimer = 0x1bc; // float
		constexpr auto m_akCardUpgrade = 0x1c0; // ObjectProperty
		constexpr auto m_akCardLevelUp = 0x1c8; // ObjectProperty
	}

	namespace n_UUIComponent_EsportsTeam {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_mcRecord = 0x128; // ObjectProperty
		constexpr auto m_mcTexture = 0x130; // ObjectProperty
	}

	namespace n_UTgGfxScene {
		constexpr auto VfTable_ITgCallbackInterface = 0x118; // FPointer
		constexpr auto m_UISceneClass = 0x120; // UObject*
		constexpr auto m_UIScene = 0x128; // ObjectProperty
		constexpr auto m_OptionList = 0x130; // TArray<GFXOPTION>
		constexpr auto m_DisplayData = 0x140; // TArray<FUIDisplayData>
		constexpr auto m_Blockers = 0x150; // TArray<ObjectProperty>
		constexpr auto m_KeyCommands = 0x160; // TArray<FUIKeyCommand>
		constexpr auto m_Prompts = 0x170; // TArray<ObjectProperty>
		constexpr auto m_ePromptAlignment = 0x180; // UIALIGNINGTYPE
		constexpr auto m_eScalingType = 0x181; // UISCALINGTYPE
		constexpr auto m_eSnappingType = 0x182; // UISNAPPINGTYPE
		constexpr auto m_eAligningType = 0x183; // UIALIGNINGTYPE
		constexpr auto m_fPromptOffsetX = 0x184; // float
		constexpr auto m_nHighlight = 0x188; // int32_t
		constexpr auto m_nSelectCount = 0x18c; // int32_t
		constexpr auto m_nBackground = 0x190; // int32_t
		constexpr auto m_bBlur = 0x194; // char : 1
		constexpr auto m_bBlurForeground = 0x194; // char : 1
		constexpr auto m_bReshow = 0x194; // char : 1
		constexpr auto m_bHidden = 0x194; // char : 1
		constexpr auto m_bDisable = 0x194; // char : 1
		constexpr auto m_bInitData = 0x194; // char : 1
		constexpr auto m_bShowFade = 0x194; // char : 1
		constexpr auto m_bVisibleOnLoad = 0x194; // char : 1
		constexpr auto m_bPushContextOnLoad = 0x194; // char : 0
		constexpr auto m_bResetFocusOnShow = 0x194; // char : 0
		constexpr auto m_bResetHeaderFocusOnShow = 0x194; // char : 0
		constexpr auto m_bResize = 0x194; // char : 0
		constexpr auto m_bIsPopup = 0x194; // char : 0
		constexpr auto m_bDead = 0x194; // char : 0
		constexpr auto m_bAlwaysTick = 0x194; // char : 0
		constexpr auto m_bAllowSpectatorClickThru = 0x194; // char : 0
		constexpr auto m_bShowCursor = 0x194; // char : 0
		constexpr auto m_bCaptureKeys = 0x194; // char : 0
		constexpr auto m_bConsumeMotion = 0x194; // char : 0
		constexpr auto m_bAcceptsInput = 0x194; // char : 0
		constexpr auto m_bRegisterBack = 0x194; // char : 0
		constexpr auto m_bIsOnline = 0x194; // char : 0
		constexpr auto m_bCanShake = 0x194; // char : 0
		constexpr auto m_bShouldShake = 0x194; // char : 0
		constexpr auto m_bAlwaysKeepOpen = 0x194; // char : 0
		constexpr auto m_bAllowMultipleOnStack = 0x194; // char : 0
		constexpr auto m_bHasBeenUninitialized = 0x194; // char : 0
		constexpr auto m_fScaling = 0x198; // float
		constexpr auto m_fScale = 0x19c; // float
		constexpr auto m_fDeltaTime = 0x1a0; // float
		constexpr auto m_CachedPosition = 0x1a4; // FVector2D
		constexpr auto m_akOver = 0x1ac; // ObjectProperty
		constexpr auto m_akShow = 0x1b4; // ObjectProperty
		constexpr auto m_akHide = 0x1bc; // ObjectProperty
		constexpr auto m_akTabs = 0x1c4; // ObjectProperty
		constexpr auto m_akScroll = 0x1cc; // ObjectProperty
		constexpr auto m_nEventFunc = 0x1d4; // int32_t
		constexpr auto m_nEventType = 0x1d8; // int32_t
		constexpr auto m_nEventIndex = 0x1dc; // int32_t
		constexpr auto m_pFocus = 0x1e0; // ObjectProperty
		constexpr auto m_pData = 0x1e8; // ObjectProperty
		constexpr auto m_pMovie = 0x1f0; // ObjectProperty
		constexpr auto m_pUIData = 0x1f8; // ObjectProperty
		constexpr auto m_mcHeaderBumper = 0x200; // ObjectProperty [0x2]
		constexpr auto m_grHeader = 0x210; // ObjectProperty
		constexpr auto m_nFocusedGroup = 0x218; // int32_t
		constexpr auto m_pInputGroups = 0x21c; // TArray<ObjectProperty>
		constexpr auto m_CallbackContainer = 0x22c; // ObjectProperty
		constexpr auto __DelegateEvent__Delegate = 0x234; // DelegateProperty
	}

	namespace n_ASceneCaptureActor {
		constexpr auto SceneCapture = 0x280; // ComponentProperty
	}

	namespace n_UUIData_MapMarker {
		constexpr auto m_bActive = 0x60; // char : 1
		constexpr auto m_fTimer = 0x64; // float
		constexpr auto m_vLocation = 0x68; // FVector
	}

	namespace n_UMcpServiceBase {
		constexpr auto McpConfigClassName = 0x60; // FString
		constexpr auto McpConfig = 0x70; // ObjectProperty
	}

	namespace n_UTgEffectDamage {
		constexpr auto m_nSimplifiedPropertyId = 0xa0; // int32_t
		constexpr auto m_DamageTypeClass = 0xa4; // UTgDamageType*
		constexpr auto m_DefaultDamageTypeClass = 0xac; // UTgDamageType*
		constexpr auto m_ArmorHitDamageTypeClass = 0xb4; // UTgDamageType*
		constexpr auto m_fDamageInitial = 0xbc; // float
		constexpr auto m_fBonusDamageToShields = 0xc0; // float
		constexpr auto m_bAllowLifeSteal = 0xc4; // char : 1
		constexpr auto m_bCanBeBuffed = 0xc4; // char : 1
	}

	namespace n_UTgEffectForm_BuffBelt {
		constexpr auto VfTable_FTickableObject = 0xfc; // FPointer
		constexpr auto m_OrbitAngleYawOffset = 0x104; // float
		constexpr auto m_OrbitHeightOffset = 0x108; // float
		constexpr auto m_bFirstUpdate = 0x10c; // char : 1
		constexpr auto m_OrbitRotationSpeed = 0x110; // float
	}

	namespace n_ATgWeatherVolume {
		constexpr auto m_Template = 0x2bc; // ObjectProperty
	}

	namespace n_UMcpServerTimeManager {
		constexpr auto TimeStampUrl = 0x98; // FString
		constexpr auto LastTimeStamp = 0xa8; // FString
		constexpr auto HTTPRequestServerTime = 0xb8; // ObjectProperty
	}

	namespace n_UDominantDirectionalLightComponent {
		constexpr auto DominantLightShadowInfo = 0x1d0; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x280; // FArray_Mirror
	}

	namespace n_UUIInteractable_ButtonWithKey {
		constexpr auto m_pKey = 0x140; // ObjectProperty
	}

	namespace n_USeqAct_RandomSwitch {
		constexpr auto AutoDisabledIndices = 0x124; // TArray<int32_t>
	}

	namespace n_USeqAct_MobileAddInputZones {
		constexpr auto ZoneName = 0x108; // FName
		constexpr auto NewZone = 0x110; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_PolymorphState {
		constexpr auto PolymorphState = 0x98; // EPolymorphType
	}

	namespace n_USubsystem {
		constexpr auto VfTable_FExec = 0x60; // FPointer
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // char : 1
	}

	namespace n_ATgDeploy_LootCrateEncounter {
		constexpr auto r_bIsLocked = 0x4b8; // char : 1
		constexpr auto r_bEncounterActive = 0x4b8; // char : 1
	}

	namespace n_UTgGameplayCurves {
		constexpr auto CurveSets = 0x60; // TArray<ObjectProperty>
		constexpr auto InheritedCurves = 0x70; // TArray<ObjectProperty>
		constexpr auto bShowInheritedCurves = 0x80; // char : 1
		constexpr auto bInheritedCurvesShareEditorTab = 0x80; // char : 1
		constexpr auto CurveEdSetup = 0x84; // ObjectProperty
	}

	namespace n_ATgDevice_KingBomb {
		constexpr auto m_fEndFireZoomDurationOverride = 0xb60; // float
	}

	namespace n_USeqAct_SetBool {
		constexpr auto DefaultValue = 0x108; // char : 1
	}

	namespace n_ATgDevice_Withdraw {
		constexpr auto bInStealth = 0xb60; // char : 1
	}

	namespace n_ATgDevice_DemonTeleport {
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xaec; // FPointer
		constexpr auto m_bShouldDestroyDeployable = 0xaf4; // char : 1
		constexpr auto m_bCancelled = 0xaf4; // char : 1
		constexpr auto m_bPhaseApplied = 0xaf4; // char : 1
		constexpr auto m_bAllowTeleport = 0xaf4; // char : 1
		constexpr auto m_fTeleportDelayTimer = 0xaf8; // float
		constexpr auto m_vTeleportToLocation = 0xafc; // FVector
		constexpr auto pTeleportFx = 0xb08; // ObjectProperty
	}

	namespace n_ATgProj_ImpalerArrow {
		constexpr auto m_fCollisionScale = 0x51c; // float
	}

	namespace n_UPComSupportCommands {
		constexpr auto PC = 0x60; // ObjectProperty
		constexpr auto WorldInfo = 0x68; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLeashCombatTarget {
		constexpr auto bMustBeEnemy = 0x94; // char : 1
		constexpr auto bMustBeWeakest = 0x94; // char : 1
		constexpr auto bMustHaveLineOfSight = 0x94; // char : 1
		constexpr auto bMustHaveDamagedGod = 0x94; // char : 1
		constexpr auto bMustNotBeImmune = 0x94; // char : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // char : 1
		constexpr auto bMustBeHittable = 0x94; // char : 1
		constexpr auto TargetType = 0x98; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_DeviceIsFiring {
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_UInputGroup {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_nMinX = 0x68; // int32_t
		constexpr auto m_nMinY = 0x6c; // int32_t
		constexpr auto m_nSizeX = 0x70; // int32_t
		constexpr auto m_nSizeY = 0x74; // int32_t
		constexpr auto m_nFocusX = 0x78; // int32_t
		constexpr auto m_nFocusY = 0x7c; // int32_t
		constexpr auto m_nPrevFocusX = 0x80; // int32_t
		constexpr auto m_nPrevFocusY = 0x84; // int32_t
		constexpr auto m_bLoopX = 0x88; // char : 1
		constexpr auto m_bLoopY = 0x88; // char : 1
		constexpr auto m_bCursorUpdateX = 0x88; // char : 1
		constexpr auto m_bCursorUpdateY = 0x88; // char : 1
		constexpr auto m_bCursorUpdateWidth = 0x88; // char : 1
		constexpr auto m_bCursorUpdateHeight = 0x88; // char : 1
		constexpr auto m_bAllowSelect = 0x88; // char : 1
		constexpr auto m_bAllowNavigation = 0x88; // char : 1
		constexpr auto m_bCallbacksRegistered = 0x88; // char : 0
		constexpr auto m_nDefaultXFocus = 0x8c; // int32_t
		constexpr auto m_nDefaultYFocus = 0x90; // int32_t
		constexpr auto m_NavUp = 0x94; // ObjectProperty
		constexpr auto m_NavDown = 0x9c; // ObjectProperty
		constexpr auto m_NavLeft = 0xa4; // ObjectProperty
		constexpr auto m_NavRight = 0xac; // ObjectProperty
		constexpr auto m_Select = 0xb4; // ObjectProperty
		constexpr auto m_InputContext = 0xbc; // ObjectProperty
		constexpr auto m_Objects = 0xc4; // TArray<FUIGroupObject>
		constexpr auto m_mcCursor = 0xd4; // ObjectProperty
		constexpr auto m_pScene = 0xdc; // ObjectProperty
		constexpr auto m_CallbackContainer = 0xe4; // ObjectProperty
	}

	namespace n_UMaterialExpressionScreenPosition {
		constexpr auto ScreenAlign = 0xb0; // char : 1
	}

	namespace n_UUIInteractable_JsonPanel_Carousel {
		constexpr auto m_mcNavControlsRoot = 0x218; // ObjectProperty
		constexpr auto m_LeftArrow = 0x220; // ObjectProperty
		constexpr auto m_RightArrow = 0x228; // ObjectProperty
		constexpr auto m_mcLeftButtonPrompt = 0x230; // ObjectProperty
		constexpr auto m_mcRightButtonPrompt = 0x238; // ObjectProperty
		constexpr auto m_mcImage2 = 0x240; // ObjectProperty
		constexpr auto m_bOnImage2 = 0x248; // char : 1
		constexpr auto m_bPauseAutoRotation = 0x248; // char : 1
		constexpr auto m_bDisableAutoRotation = 0x248; // char : 1
		constexpr auto m_bDisableNavigation = 0x248; // char : 1
		constexpr auto m_nIndex = 0x24c; // int32_t
		constexpr auto m_mcActivate = 0x250; // ObjectProperty
		constexpr auto m_NavDots = 0x258; // TArray<ObjectProperty>
		constexpr auto m_fNavDotCenter = 0x268; // float
		constexpr auto m_CarouselJsonFeatureData = 0x26c; // TArray<FJsonFeatureData>
		constexpr auto m_fDotPlacementX = 0x27c; // float
		constexpr auto m_fDotWidth = 0x280; // float
		constexpr auto m_fDotPadding = 0x284; // float
		constexpr auto m_fAutoRotationTime = 0x288; // float
		constexpr auto m_fAutoRotationDelay = 0x28c; // float
		constexpr auto m_GamepadLeftKey = 0x290; // FName
		constexpr auto m_GamepadRightKey = 0x298; // FName
	}

	namespace n_ATgStaticMeshActor_CapturePoint {
		constexpr auto UncontestedCaptureColor = 0x2a4; // FLinearColor
		constexpr auto FriendlyCaptureColor = 0x2b4; // FLinearColor
		constexpr auto EnemyCaptureColor = 0x2c4; // FLinearColor
		constexpr auto EmissiveColorParameterName = 0x2d4; // FName
		constexpr auto CapturePercentParameterName = 0x2dc; // FName
		constexpr auto InitialMaterialList = 0x2e4; // TArray<ObjectProperty>
		constexpr auto bInstancedAllMaterials = 0x2f4; // char : 1
		constexpr auto CurrentCaptureStatus = 0x2f8; // int32_t
		constexpr auto CurrentCapturePercent = 0x2fc; // float
	}

	namespace n_UInputContext {
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_InputActions = 0x68; // TArray<ObjectProperty>
		constexpr auto m_CallbackContainer = 0x78; // ObjectProperty
		constexpr auto m_bPassInputToNextContext = 0x80; // char : 1
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x68; // char : 1
		constexpr auto bApplyOwnerScale = 0x68; // char : 1
	}

	namespace n_UTgDeviceForm_Transporter {
		constexpr auto c_TargetingModeMeshIndicator2 = 0x2bc; // ObjectProperty
		constexpr auto c_TargetingModeFx2 = 0x2c4; // ObjectProperty
		constexpr auto c_TargetingModeFx2Location = 0x2cc; // FVector
		constexpr auto c_nTargetingModeFx2Id = 0x2d8; // int32_t
	}

	namespace n_ATgSkeletalMeshActor_DestructibleTowerChunk {
		constexpr auto TgSkeletalMeshComp = 0x32c; // ComponentProperty
	}

	namespace n_UInterpTrackInstAkEvent {
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UUIRoot {
		constexpr auto BadCapsLocContexts = 0x60; // TArray<FString>
	}

	namespace n_USeqAct_MultiplyInt {
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UUICharacterSummary {
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto CharacterName = 0xa4; // FString
		constexpr auto CharacterBio = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // char : 1
	}

	namespace n_UTgAIBehaviorAction_SelectCombatTargetsTarget {
		constexpr auto bGodsOnly = 0x94; // char : 1
	}

	namespace n_ATgStaticMeshActor_PantheonMIC {
		constexpr auto MICOverrides = 0x2a4; // ObjectProperty [0x8]
		constexpr auto m_nGameTaskForce = 0x2e4; // int32_t
		constexpr auto m_nTeamIndex = 0x2e8; // int32_t
	}

	namespace n_UUIItemLarge {
		constexpr auto m_ItemLarge = 0x60; // ObjectProperty
		constexpr auto m_mcItemOwnedText = 0x68; // ObjectProperty
		constexpr auto m_mcItemRentedText = 0x70; // ObjectProperty
		constexpr auto m_mcItemRentedTextLabel = 0x78; // ObjectProperty
		constexpr auto m_mcItemRentedTextTime = 0x80; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_GroverInhandAxe {
		constexpr auto StanceNode = 0x504; // ObjectProperty
	}

	namespace n_APComPerformanceCaptureNode {
		constexpr auto ExecCommand = 0x280; // FString
		constexpr auto DelayBeforeCapture = 0x290; // float
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x60; // FVector
		constexpr auto Rotation = 0x6c; // FRotator
		constexpr auto HiddenLevels = 0x78; // TArray<FString>
	}

	namespace n_UNxForceFieldComponent {
		constexpr auto Shape = 0x24c; // ObjectProperty
		constexpr auto DrawComponent = 0x254; // ComponentProperty
		constexpr auto ExcludeChannel = 0x25c; // int32_t
		constexpr auto bForceActive = 0x260; // char : 1
		constexpr auto bDestroyWhenInactive = 0x260; // char : 1
		constexpr auto CollideWithChannels = 0x264; // FRBCollisionChannelContainer
		constexpr auto Duration = 0x268; // float
		constexpr auto ForceField = 0x26c; // FPointer
		constexpr auto ConvexMeshes = 0x274; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x284; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x294; // TArray<FPointer>
		constexpr auto SceneIndex = 0x2a4; // int32_t
		constexpr auto ElapsedTime = 0x2a8; // float
		constexpr auto RenderComponent = 0x2ac; // ComponentProperty
		constexpr auto RBPhysScene = 0x2b4; // FPointer
	}

	namespace n_ATgDevice_PoppyBomb {
		constexpr auto r_bHasActiveProjectile = 0xaec; // char : 1
	}

	namespace n_ATgDeploy_IllusionLongbow {
		constexpr auto c_nDefaultBodyMeshId = 0x448; // int32_t
		constexpr auto c_nDefaultHeadMeshId = 0x44c; // int32_t
		constexpr auto c_nDefaultWeaponMeshId = 0x450; // int32_t
		constexpr auto m_BodyMesh = 0x454; // ComponentProperty
		constexpr auto m_HeadMesh = 0x45c; // ComponentProperty
		constexpr auto m_WeaponMesh = 0x464; // ComponentProperty
		constexpr auto m_bodyReplacementMICs = 0x46c; // TArray<ObjectProperty>
		constexpr auto m_headReplacementMICs = 0x47c; // TArray<ObjectProperty>
		constexpr auto m_weaponReplacementMICs = 0x48c; // TArray<ObjectProperty>
		constexpr auto m_bFadingAway = 0x49c; // char : 1
		constexpr auto m_fLifeAfterDeathOverride = 0x4a0; // float
		constexpr auto m_FxCollisionProxy = 0x4a4; // ObjectProperty
		constexpr auto m_fCollisionRadius = 0x4ac; // float
	}

	namespace n_UUIData_Float {
		constexpr auto m_fValue = 0x60; // float
	}

	namespace n_UTimeLapseRecordingDriver {
		constexpr auto DemoSpectatorClass = 0x208; // FString
		constexpr auto DefaultRewindTime = 0x218; // float
	}

	namespace n_ADynamicAnchor {
		constexpr auto CurrentUser = 0x378; // ObjectProperty
	}

	namespace n_UTgSkelCon_FootPlacement {
		constexpr auto bShouldUseWorldDown = 0x15c; // char : 1
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0xb0; // FExpressionInput
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x6c; // FRawDistributionVector
	}

	namespace n_USeqAct_AndGate {
		constexpr auto bOpen = 0x108; // char : 1
		constexpr auto LinkedOutputFiredStatus = 0x10c; // TArray<char>
		constexpr auto LinkedOutputs = 0x11c; // TArray<FPointer>
	}

	namespace n_ATgSkeletalMeshActor_Leash {
		constexpr auto m_StartMesh = 0x32c; // ComponentProperty
		constexpr auto m_StartBoneName = 0x334; // FName
		constexpr auto m_EndMesh = 0x33c; // ComponentProperty
		constexpr auto m_EndBoneName = 0x344; // FName
		constexpr auto m_StartControl = 0x34c; // ObjectProperty
		constexpr auto m_EndControl = 0x354; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsWithinDistance {
		constexpr auto bIsXYOnly = 0x98; // char : 1
		constexpr auto DistanceCheck = 0x9c; // float
	}

	namespace n_UTgAnimNodeBlendByGameState {
		constexpr auto PawnOwner = 0x168; // ObjectProperty
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x2bc; // TArray<ObjectProperty>
		constexpr auto OverrideInvisibleActors = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UHTTPDownload {
		constexpr auto RedirectToURL = 0x74; // FString
		constexpr auto UseCompression = 0x84; // char : 1
		constexpr auto ProxyServerHost = 0xaa4; // FString
		constexpr auto ProxyServerPort = 0xab4; // int32_t
		constexpr auto MaxRedirection = 0xab8; // char : 1
		constexpr auto ConnectionTimeout = 0xabc; // float
	}

	namespace n_UFogVolumeDensityComponent {
		constexpr auto FogMaterial = 0x88; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterial = 0x90; // ObjectProperty
		constexpr auto bEnabled = 0x98; // char : 1
		constexpr auto bAffectsTranslucency = 0x98; // char : 1
		constexpr auto bOnlyAffectsTranslucency = 0x98; // char : 1
		constexpr auto bUseViewOriginOverride = 0x98; // char : 1
		constexpr auto SimpleLightColor = 0x9c; // FLinearColor
		constexpr auto ApproxFogLightColor = 0xac; // FLinearColor
		constexpr auto StartDistance = 0xbc; // float
		constexpr auto MaxDistance = 0xc0; // float
		constexpr auto FogVolumeActors = 0xc4; // TArray<ObjectProperty>
		constexpr auto ViewOriginOverride = 0xd4; // FVector
	}

	namespace n_UAnimNodeCrossfader {
		constexpr auto DefaultAnimSeqName = 0x124; // FName
		constexpr auto bDontBlendOutOneShot = 0x12c; // char : 1
		constexpr auto PendingBlendOutTimeOneShot = 0x130; // float
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto TraceDistance = 0x1a4; // float
		constexpr auto bWholeSceneOnlyDynamicShadowCasters = 0x1a8; // char : 1
		constexpr auto WholeSceneDynamicShadowRadius = 0x1ac; // float
		constexpr auto NumWholeSceneDynamicShadowCascades = 0x1b0; // int32_t
		constexpr auto CascadeDistributionExponent = 0x1b4; // float
		constexpr auto LightmassSettings = 0x1b8; // FLightmassDirectionalLightSettings
	}

	namespace n_AMatineeActor {
		constexpr auto InterpAction = 0x280; // ObjectProperty
		constexpr auto bIsPlaying = 0x288; // char : 1
		constexpr auto bReversePlayback = 0x288; // char : 1
		constexpr auto bPaused = 0x288; // char : 1
		constexpr auto AllAIGroupsInitialized = 0x288; // char : 1
		constexpr auto PlayRate = 0x28c; // float
		constexpr auto Position = 0x290; // float
		constexpr auto AIGroupNames = 0x294; // FName [0xa]
		constexpr auto AIGroupPawns = 0x2e4; // ObjectProperty [0xa]
		constexpr auto AIGroupInitStage = 0x334; // int32_t [0xa]
		constexpr auto ClientSidePositionErrorTolerance = 0x35c; // float
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x60; // ObjectProperty
		constexpr auto AnimLength = 0x68; // float
		constexpr auto BoundingBox = 0x6c; // FBox
		constexpr auto BasePPSettings = 0x88; // FPostProcessSettings
		constexpr auto BasePPSettingsAlpha = 0x208; // float
		constexpr auto BaseFOV = 0x20c; // float
	}

	namespace n_UGameStatsAggregator {
		constexpr auto GameState = 0x88; // ObjectProperty
		constexpr auto AggregatesList = 0x90; // TArray<FAggregateEventMapping>
		constexpr auto AggregateEventsMapping = 0xa0; // FMap_Mirror
		constexpr auto AggregateEvents = 0xe8; // TArray<FGameplayEventMetaData>
		constexpr auto AggregatesFound = 0xf8; // TArray<int32_t>
		constexpr auto AllGameEvents = 0x108; // FGameEvents
		constexpr auto AllTeamEvents = 0x150; // TArray<FTeamEvents>
		constexpr auto AllPlayerEvents = 0x160; // TArray<FPlayerEvents>
		constexpr auto AllWeaponEvents = 0x170; // FWeaponEvents
		constexpr auto AllProjectileEvents = 0x1c8; // FProjectileEvents
		constexpr auto AllPawnEvents = 0x220; // FPawnEvents
		constexpr auto AllDamageEvents = 0x278; // FDamageEvents
	}

	namespace n_UTgSkelCon_Spring {
		constexpr auto m_vWorldSpaceGoal = 0x16c; // FVector
		constexpr auto m_vInitialWorldSpaceGoalOffset = 0x178; // FVector
		constexpr auto m_vVelocity = 0x184; // FVector
		constexpr auto m_fSpringStiffness = 0x190; // float
		constexpr auto m_fSpringDamping = 0x194; // float
	}

	namespace n_UTgAnimBlendBySkin {
		constexpr auto m_SkinMap = 0x168; // TArray<FSkinChildInfo>
	}

	namespace n_USeqAct_Deproject {
		constexpr auto ScreenX = 0x108; // float
		constexpr auto ScreenY = 0x10c; // float
		constexpr auto TraceDistance = 0x110; // float
		constexpr auto HitObject = 0x114; // ObjectProperty
		constexpr auto HitLocation = 0x11c; // FVector
		constexpr auto HitNormal = 0x128; // FVector
	}

	namespace n_USeqCond_CompareFloat {
		constexpr auto ValueA = 0xec; // float
		constexpr auto ValueB = 0xf0; // float
	}

	namespace n_UUISoundTheme {
		constexpr auto SoundEventBindings = 0x60; // TArray<FSoundEventMapping>
	}

	namespace n_UGameFixedCamera {
		constexpr auto DefaultFOV = 0x6c; // float
	}

	namespace n_UTgSeqEvent_EnergyUpdated {
		constexpr auto ResultEnergy = 0x128; // int32_t
	}

	namespace n_UTgCameraShake {
		constexpr auto m_fShakeScale = 0xf8; // float
		constexpr auto m_bDoControllerVibration = 0xfc; // char : 1
		constexpr auto m_bRadialShake = 0xfc; // char : 1
		constexpr auto m_bOrientTowardRadialEpicenter = 0xfc; // char : 1
		constexpr auto m_fRadialShake_InnerRadius = 0x100; // float
		constexpr auto m_fRadialShake_OuterRadius = 0x104; // float
		constexpr auto m_fRadialShake_Falloff = 0x108; // float
		constexpr auto m_PlaySpace = 0x10c; // ECameraAnimPlaySpace
	}

	namespace n_ATgPlayerController {
		constexpr auto VfTable_ITgPaladinsController = 0x7d8; // FPointer
		constexpr auto VfTable_ITgCallbackInterface = 0x7e0; // FPointer
		constexpr auto ZombieInfo = 0x7e8; // FSZombieInfo
		constexpr auto m_nAnnouncerSeriesStep = 0x844; // int32_t [0x6]
		constexpr auto s_nPlayerId = 0x85c; // int32_t
		constexpr auto s_nPartyId = 0x860; // int32_t
		constexpr auto s_qwNetAccessFlags = 0x864; // FQWord
		constexpr auto r_nXp = 0x86c; // int32_t
		constexpr auto r_nCurrency = 0x870; // int32_t
		constexpr auto s_fCurrencyRemainder = 0x874; // float
		constexpr auto s_fXpRemainder = 0x878; // float
		constexpr auto r_bCanPurchaseItems = 0x87c; // char : 1
		constexpr auto r_bCanChangeLoadout = 0x87c; // char : 1
		constexpr auto r_bAutoPurchase = 0x87c; // char : 1
		constexpr auto r_bAutoSkillUp = 0x87c; // char : 1
		constexpr auto r_bToggleZoom = 0x87c; // char : 1
		constexpr auto m_bBlockVGS = 0x87c; // char : 1
		constexpr auto c_bPreparingForge = 0x87c; // char : 1
		constexpr auto c_bAttemptingPickupWep = 0x87c; // char : 1
		constexpr auto c_bRequestingPickup = 0x87c; // char : 0
		constexpr auto s_bSentAutoKickAlert = 0x87c; // char : 0
		constexpr auto s_bAddDeadTimeStatsTracker = 0x87c; // char : 0
		constexpr auto c_bWeaponSwap = 0x87c; // char : 0
		constexpr auto c_bDeviceSwap = 0x87c; // char : 0
		constexpr auto r_bLockYawRotation = 0x87c; // char : 0
		constexpr auto bPressingLeftMouseButton = 0x87c; // char : 0
		constexpr auto bPressingRightMouseButton = 0x87c; // char : 0
		constexpr auto bPressingMovementButton = 0x87c; // char : 0
		constexpr auto bPressingAltFireButton = 0x87c; // char : 0
		constexpr auto bPressingReloadButton = 0x87c; // char : 0
		constexpr auto bPressingHealButton = 0x87c; // char : 0
		constexpr auto bPressingRepairButton = 0x87c; // char : 0
		constexpr auto m_bPendingReload = 0x87c; // char : 0
		constexpr auto r_bRove = 0x87c; // char : 0
		constexpr auto m_bNoSmoothedMovementCorrection = 0x87c; // char : 0
		constexpr auto c_bProcessedNoSmoothNotification = 0x87c; // char : 0
		constexpr auto s_bNoSmoothedMovementCorrectionRequested = 0x87c; // char : 0
		constexpr auto s_bIsNoSmoothMovementCorrectionManaged = 0x87c; // char : 0
		constexpr auto m_bUsingDeadSpectatorControlModule = 0x87c; // char : 0
		constexpr auto s_bClearAchievementIgnoreListsOnNextTick = 0x87c; // char : 0
		constexpr auto bDebugProjectileLagCompensation = 0x87c; // char : 0
		constexpr auto c_bAssistModeSublevelLoaded = 0x87c; // char : 0
		constexpr auto c_bAllowSpecialMaterialEffects = 0x87c; // char : 0
		constexpr auto m_bIgnoreSilhouettes = 0x880; // char : 1
		constexpr auto m_bForceSilhouettesOnVisibleGods = 0x880; // char : 1
		constexpr auto m_bDetailedViewEnabled = 0x880; // char : 1
		constexpr auto m_bShowPlayerCircles = 0x880; // char : 1
		constexpr auto m_bAllowUndrawnPurchase = 0x880; // char : 1
		constexpr auto m_bCanHearStealthPawns = 0x880; // char : 1
		constexpr auto c_bShowFootstepInfoDebug = 0x880; // char : 1
		constexpr auto m_bDetailedDeviceLogging = 0x880; // char : 1
		constexpr auto m_bOutlineEnemies = 0x880; // char : 0
		constexpr auto m_bOutlineFriendlies = 0x880; // char : 0
		constexpr auto c_bEnablePathfinderGuide = 0x880; // char : 0
		constexpr auto m_fPathfinderEnabled = 0x880; // char : 0
		constexpr auto c_bIsPlayingFallWindSound = 0x880; // char : 0
		constexpr auto m_bJustDidJumpDoubleTap = 0x880; // char : 0
		constexpr auto m_bThreatSystemEnabled = 0x880; // char : 0
		constexpr auto m_bOcclusionSystemEnabled = 0x880; // char : 0
		constexpr auto m_bDebugThreatSystem = 0x880; // char : 0
		constexpr auto c_bMatchAlmostWonSwitchPrimed = 0x880; // char : 0
		constexpr auto m_IsTimeDilationInterpolating = 0x880; // char : 0
		constexpr auto m_IsDesaturationInterpolating = 0x880; // char : 0
		constexpr auto m_bIsTrackingAimTowardTargetLocation = 0x880; // char : 0
		constexpr auto bForcedTimelapseRequested = 0x880; // char : 0
		constexpr auto bForcedPlayOfGameRequested = 0x880; // char : 0
		constexpr auto m_bRewindMoversForReplaySavedMoves = 0x880; // char : 0
		constexpr auto m_bShowDebugRewindMovers = 0x880; // char : 0
		constexpr auto c_bCaptureProgressAkEventPlaying = 0x880; // char : 0
		constexpr auto m_bShowChampionOverviewTip = 0x880; // char : 0
		constexpr auto m_bEnableUltimateAkEventUnocclusion = 0x880; // char : 0
		constexpr auto c_bIsPlayOfTheGame = 0x880; // char : 0
		constexpr auto c_bRoyaleDeploySequence = 0x880; // char : 0
		constexpr auto m_bHideReticle = 0x880; // char : 0
		constexpr auto m_bHideReticleAcc = 0x880; // char : 0
		constexpr auto m_bSupportsEffectSimulation = 0x884; // char : 1
		constexpr auto m_bForced3pOption = 0x884; // char : 1
		constexpr auto m_bFreeCamEnabled = 0x884; // char : 1
		constexpr auto m_bFogPPFXInitialized = 0x884; // char : 1
		constexpr auto bMount = 0x884; // char : 1
		constexpr auto bInADS = 0x884; // char : 1
		constexpr auto m_bSwitchingClasses = 0x884; // char : 1
		constexpr auto m_bAbilityOneHeld = 0x884; // char : 1
		constexpr auto m_bMovementHeld = 0x884; // char : 0
		constexpr auto m_bAbilityTwoFired = 0x884; // char : 0
		constexpr auto m_bCanVault = 0x884; // char : 0
		constexpr auto s_bUseRespawnLocation = 0x884; // char : 0
		constexpr auto m_bEnableAutoSprint = 0x884; // char : 0
		constexpr auto r_bBigHeadModeEnabled = 0x884; // char : 0
		constexpr auto r_bBigHeadModeStarting = 0x884; // char : 0
		constexpr auto c_fLastGoldNagTime = 0x888; // float
		constexpr auto m_nReviveBuybackCost = 0x88c; // int32_t
		constexpr auto r_nStatPoints = 0x890; // int32_t
		constexpr auto s_VGSFlood = 0x894; // FFLOOD
		constexpr auto s_PingFlood = 0x89c; // FFLOOD
		constexpr auto r_DesiredViewPRI = 0x8a4; // ObjectProperty
		constexpr auto s_nViewingPlayerIds = 0x8ac; // TArray<int32_t>
		constexpr auto c_aLastViewTarget = 0x8bc; // ObjectProperty
		constexpr auto m_CachedPlayerInput = 0x8c4; // ObjectProperty
		constexpr auto m_CachedSpectatorInput = 0x8cc; // ObjectProperty
		constexpr auto m_aHoverActor = 0x8d4; // ObjectProperty
		constexpr auto m_vHoverLocation = 0x8dc; // FVector
		constexpr auto m_fHoverActorActiveTime = 0x8e8; // float
		constexpr auto m_vWorldMapLocation = 0x8ec; // FVector
		constexpr auto m_WorldMapTargetRepInfos = 0x8f8; // TArray<ObjectProperty>
		constexpr auto m_vWorldMouseLocation = 0x908; // FVector
		constexpr auto m_vWorldMouseDirection = 0x914; // FVector
		constexpr auto c_fTimeTillAFK = 0x920; // float
		constexpr auto s_bAutoKickStartTime = 0x924; // float
		constexpr auto r_LastPurchasedItems = 0x928; // FTG_LAST_PURCHASE [0x1a]
		constexpr auto s_LastPossessedPawn = 0x9f8; // ObjectProperty
		constexpr auto m_fRecentLostHealth = 0xa00; // float
		constexpr auto m_fLastLostHealthTime = 0xa04; // float
		constexpr auto m_TargetedPlayers = 0xa08; // TArray<ObjectProperty>
		constexpr auto s_fWaitForSpawnSecs = 0xa18; // float
		constexpr auto c_fRespawnTime = 0xa1c; // float
		constexpr auto m_fDeathTime = 0xa20; // float
		constexpr auto r_bInputEnabled = 0xa24; // int32_t [0x14]
		constexpr auto ControlModule = 0xa74; // ObjectProperty
		constexpr auto DefaultControlModuleClass = 0xa7c; // UTgControlModule*
		constexpr auto c_nCameraYawOffset = 0xa84; // int32_t
		constexpr auto m_nDevicesLockingInput = 0xa88; // int32_t
		constexpr auto m_nDevicesLockingCamera = 0xa8c; // int32_t
		constexpr auto m_nDevicesLockingRotation = 0xa90; // int32_t
		constexpr auto m_fPendingReloadTime = 0xa94; // float
		constexpr auto m_fPendingReloadMaxTime = 0xa98; // float
		constexpr auto m_EndGameFocus = 0xa9c; // ObjectProperty
		constexpr auto m_fLastVGS = 0xaa4; // float
		constexpr auto m_vLastServerCorrectOrigPos = 0xaa8; // FVector
		constexpr auto s_fLastConfirmedSentSmoothedMovementTimestamp = 0xab4; // float
		constexpr auto c_fLastRecievedNoSmoothTimestamp = 0xab8; // float
		constexpr auto m_byDesiredMoveSpeedReduction = 0xabc; // char
		constexpr auto c_eCameraPosture = 0xabd; // TG_CAMERAPOSTURE
		constexpr auto r_WatchOtherPlayer = 0xabe; // EWatchOtherPlayersMode
		constexpr auto c_GameWinState = 0xabf; // GAME_WIN_STATE
		constexpr auto m_bOldbRun = 0xac0; // char
		constexpr auto c_eCurrentOverlay = 0xac1; // EHUDOverlay
		constexpr auto m_eDetailedDeviceEqp = 0xac2; // TG_EQUIP_POINT
		constexpr auto m_LastEquipPoint = 0xac3; // TG_EQUIP_POINT
		constexpr auto c_LastSentClientRoll = 0xac4; // char
		constexpr auto m_UltHeld = 0xac5; // char
		constexpr auto m_JumpHeld = 0xac6; // char
		constexpr auto m_JumpHeldAlt = 0xac7; // char
		constexpr auto m_PerCharacterAlt = 0xac8; // char
		constexpr auto c_ePickupSlot = 0xac9; // char
		constexpr auto c_CameraStack = 0xacc; // TArray<FCameraStackInfo>
		constexpr auto c_nNextCameraStackId = 0xadc; // int32_t
		constexpr auto m_fTimeToViewOthersCamAfterDeath = 0xae0; // float
		constexpr auto m_fWatchOthersFadeToBlackCamTime = 0xae4; // float
		constexpr auto m_fWatchOthersFadeFromBlackCamTime = 0xae8; // float
		constexpr auto s_Achievements = 0xaec; // TArray<ObjectProperty>
		constexpr auto c_TgAkAudio = 0xafc; // ObjectProperty
		constexpr auto r_nFlashProjectile = 0xb04; // int32_t [0x20]
		constexpr auto r_FlashProjectileEx = 0xb84; // FsSimProjectileFireInfo [0x20]
		constexpr auto r_nFirstValidProjIdx = 0x1304; // int32_t
		constexpr auto r_nFlashSimProjIdx = 0x1308; // int32_t
		constexpr auto c_nLastFlashSimProjIdx = 0x130c; // int32_t
		constexpr auto r_nPerkPointsAvail = 0x1310; // int32_t
		constexpr auto m_fCatapultPowerLevel = 0x1314; // float
		constexpr auto m_fCatapultPowerRate = 0x1318; // float
		constexpr auto m_fCatapultMinPower = 0x131c; // float
		constexpr auto m_fCatapultMaxPower = 0x1320; // float
		constexpr auto c_GameTipManager = 0x1324; // ObjectProperty
		constexpr auto s_pCombatMessages = 0x132c; // FPointer
		constexpr auto s_fLastCombatMessageProcess = 0x1334; // float
		constexpr auto c_nCurrentLevel = 0x1338; // int32_t
		constexpr auto c_TutorialAnnouncer = 0x133c; // ObjectProperty
		constexpr auto r_TutorialBlockedClientActions = 0x1344; // int32_t
		constexpr auto c_SubtitledMessages = 0x1348; // ObjectProperty
		constexpr auto CachedPRI = 0x1350; // ObjectProperty
		constexpr auto m_OverlayPathMaterial = 0x1358; // ObjectProperty
		constexpr auto m_HiddenPawns = 0x1360; // TArray<ObjectProperty>
		constexpr auto c_AlertAudioComponent = 0x1370; // ComponentProperty
		constexpr auto c_AlertAkEvent = 0x1378; // ObjectProperty
		constexpr auto c_KismetLoadedDevices = 0x1380; // TArray<ObjectProperty>
		constexpr auto m_PreviewCameraShake = 0x1390; // ObjectProperty
		constexpr auto m_fPathfinderStreamTime = 0x1398; // float
		constexpr auto m_fPathfinderPulseTime = 0x139c; // float
		constexpr auto m_fPathfinderLifetime = 0x13a0; // float
		constexpr auto m_fPathfinderSpeed = 0x13a4; // float
		constexpr auto m_fPathfinderStartDist = 0x13a8; // float
		constexpr auto c_LastSentMoveTimeStamp = 0x13ac; // float
		constexpr auto c_LastSentMoveAcceleration = 0x13b0; // FVector
		constexpr auto c_LastSentMoveCompressedFlags = 0x13bc; // int32_t
		constexpr auto c_LastSentClientLoc = 0x13c0; // FVector
		constexpr auto c_LastSentView = 0x13cc; // int32_t
		constexpr auto c_FallWindSoundPlay = 0x13d0; // ObjectProperty
		constexpr auto c_FallWindSoundStop = 0x13d8; // ObjectProperty
		constexpr auto c_HitMarkerSounds = 0x13e0; // ObjectProperty [0x5]
		constexpr auto c_ScoreKillSound = 0x1408; // ObjectProperty
		constexpr auto c_ScoreDownSound = 0x1410; // ObjectProperty
		constexpr auto c_ChickenShardSound = 0x1418; // ObjectProperty
		constexpr auto m_nKillCamTargetId = 0x1420; // int32_t
		constexpr auto m_nKillCamTargetBackupId = 0x1424; // int32_t
		constexpr auto r_fServerTimeStamp = 0x1428; // float
		constexpr auto m_fLastJumpTapTime = 0x142c; // float
		constexpr auto m_fMaxJumpDoubleTapTime = 0x1430; // float
		constexpr auto m_nVoicePackId = 0x1434; // int32_t
		constexpr auto m_PawnsWithThreatLevels = 0x1438; // TArray<ObjectProperty>
		constexpr auto m_Pathfinder = 0x1448; // ObjectProperty
		constexpr auto m_fThreatCoefficientProximity = 0x1450; // float
		constexpr auto m_fThreatCoefficientOcclusion = 0x1454; // float
		constexpr auto m_fThreatCoefficientBinnedOcclusion = 0x1458; // float
		constexpr auto m_fThreatCoefficientUlt = 0x145c; // float
		constexpr auto m_fThreatCoefficientShotAt = 0x1460; // float
		constexpr auto m_fThreatCoefficientSeenBy = 0x1464; // float
		constexpr auto m_fThreatCoefficientDamaged = 0x1468; // float
		constexpr auto m_fThreatCoefficientFocused = 0x146c; // float
		constexpr auto m_fThreatCoefficientFocusTarget = 0x1470; // float
		constexpr auto m_fThreatCoefficientBehind = 0x1474; // float
		constexpr auto m_fThreatCoefficientInEffectiveRange = 0x1478; // float
		constexpr auto m_fThreatDecayCoefficientShotAt = 0x147c; // float
		constexpr auto m_fThreatDecayCoefficientSeenBy = 0x1480; // float
		constexpr auto m_fThreatDecayCoefficientUlt = 0x1484; // float
		constexpr auto m_DebugThreatSystemChannel = 0x1488; // FString
		constexpr auto m_CurrentMusicEventName = 0x1498; // FString
		constexpr auto m_nameBuyBurnCardsTimer = 0x14a8; // FName
		constexpr auto m_TimeDilationFromTo = 0x14b0; // FVector2D
		constexpr auto m_TimeDilationInterpolateSeconds = 0x14b8; // float
		constexpr auto m_TimeDilationUsedSeconds = 0x14bc; // float
		constexpr auto m_DesaturationFromTo = 0x14c0; // FVector2D
		constexpr auto m_DesaturationInterpolateSeconds = 0x14c8; // float
		constexpr auto m_DesaturationUsedSeconds = 0x14cc; // float
		constexpr auto m_EnergyLastFrame = 0x14d0; // int32_t
		constexpr auto m_TrackingTargetLocation = 0x14d4; // FVector
		constexpr auto m_fTrackingTargetMaxAimDistDiff = 0x14e0; // float
		constexpr auto m_RoundEndAlert = 0x14e4; // ObjectProperty
		constexpr auto m_akQueuedAnnouncer = 0x14ec; // ObjectProperty
		constexpr auto m_fTimeToPlayQueuedAnnouncer = 0x14f4; // float
		constexpr auto m_CurrentDirectorMatinee = 0x14f8; // ObjectProperty
		constexpr auto m_CaptureProgressPlayAkEvent = 0x1500; // ObjectProperty
		constexpr auto m_CaptureProgressStopAkEvent = 0x1508; // ObjectProperty
		constexpr auto m_fCachedCaptureProgress = 0x1510; // float
		constexpr auto m_PointGettingCapturedPlayAkEvent = 0x1514; // ObjectProperty
		constexpr auto m_nPointGettingCapturedPlayCount = 0x151c; // int32_t
		constexpr auto m_fShowChampionOverviewTipDelay = 0x1520; // float
		constexpr auto s_nRoundsIdle = 0x1524; // int32_t
		constexpr auto s_fIdleTimeReduction = 0x1528; // float
		constexpr auto c_nLeadingTeam = 0x152c; // int32_t
		constexpr auto c_nLeadingTeamTicketAmount = 0x1530; // int32_t
		constexpr auto m_CallbackContainer = 0x1534; // ObjectProperty
		constexpr auto m_nReticleColorOverride = 0x153c; // int32_t
		constexpr auto m_cReticleColor = 0x1540; // FLinearColor
		constexpr auto m_fAchievementPollRate = 0x1550; // float
		constexpr auto m_fAchievementPollElapsed = 0x1554; // float
		constexpr auto s_nTeamMateHealMeVisibilityTest = 0x1558; // int32_t
		constexpr auto c_fForced3pFOV = 0x155c; // float
		constexpr auto m_fFreeCamYawOffset = 0x1560; // float
		constexpr auto m_fFreeCamPitchOffset = 0x1564; // float
		constexpr auto r_fSwapWeaponDelay = 0x1568; // float
		constexpr auto m_fReviveTeammateDistance = 0x156c; // float
		constexpr auto m_TeammateReviving = 0x1570; // ObjectProperty
		constexpr auto r_BeingRevivedByPawn = 0x1578; // ObjectProperty
		constexpr auto m_RoyaleFogCameraMIC = 0x1580; // ObjectProperty
		constexpr auto m_RoyaleFogMaterialEffect = 0x1588; // ObjectProperty
		constexpr auto c_LootPickupResponseCounter = 0x1590; // int32_t
		constexpr auto m_vLastPOVLocation = 0x1594; // FVector
		constexpr auto m_rLastPOVRotation = 0x15a0; // FRotator
		constexpr auto c_ChampionTickManager = 0x15ac; // ObjectProperty
		constexpr auto c_InteractDeployable = 0x15b4; // ObjectProperty
		constexpr auto c_InteractForgeObjective = 0x15bc; // ObjectProperty
		constexpr auto c_InteractCatapult = 0x15c4; // ObjectProperty
		constexpr auto m_pHud = 0x15cc; // ObjectProperty
		constexpr auto m_3DHitIndicators = 0x15d4; // ObjectProperty [0x6]
		constexpr auto m_n3DHitIndicatorPoolIndex = 0x1604; // int32_t
		constexpr auto s_vRespawnLocation = 0x1608; // FVector
	}

	namespace n_UUIComponent_Loadout {
		constexpr auto m_pGems = 0x120; // ObjectProperty [0x5]
		constexpr auto m_pCardIcons = 0x148; // ObjectProperty [0x5]
		constexpr auto m_pPowerLevel = 0x170; // ObjectProperty
		constexpr auto m_pLock = 0x178; // ObjectProperty
		constexpr auto m_pNewLoadoutText = 0x180; // ObjectProperty
		constexpr auto m_pLoadoutTypeIcon = 0x188; // ObjectProperty
		constexpr auto m_pTitle = 0x190; // ObjectProperty
		constexpr auto m_pCancelButton = 0x198; // ObjectProperty
		constexpr auto m_pSelectLoadoutButton = 0x1a0; // ObjectProperty
		constexpr auto m_bShowDeleteButton = 0x1a8; // char : 1
		constexpr auto m_bDisableEmptyDecks = 0x1a8; // char : 1
	}

	namespace n_UUIComponent_Card_Upgradable {
		constexpr auto m_mcUpgradeText = 0x120; // ObjectProperty
		constexpr auto m_mcStarburstA = 0x128; // ObjectProperty
		constexpr auto m_mcStarburstB = 0x130; // ObjectProperty
		constexpr auto m_mcGlowA = 0x138; // ObjectProperty
		constexpr auto m_mcGlowB = 0x140; // ObjectProperty
		constexpr auto m_mcGlowC = 0x148; // ObjectProperty
		constexpr auto m_mcGlowD = 0x150; // ObjectProperty
		constexpr auto m_mcGlowE = 0x158; // ObjectProperty
		constexpr auto m_pCard = 0x160; // ObjectProperty
		constexpr auto m_nUpgradeQuantity = 0x168; // int32_t
		constexpr auto m_nUpgradeTickHandle = 0x16c; // int32_t
		constexpr auto m_fUpgradeTimer = 0x170; // float
		constexpr auto m_akCardUpgrade = 0x174; // ObjectProperty
		constexpr auto m_akCardLevelUp = 0x17c; // ObjectProperty
	}

	namespace n_UUIArmoryDetail {
		constexpr auto m_nBotId = 0x244; // int32_t
		constexpr auto m_nHoverItem = 0x248; // int32_t
		constexpr auto m_nItemIndex = 0x24c; // int32_t
		constexpr auto m_nTreeIndex = 0x250; // int32_t
		constexpr auto m_nSlot = 0x254; // int32_t
		constexpr auto m_eState = 0x258; // char
		constexpr auto m_eItemType = 0x259; // char
		constexpr auto m_bHovering = 0x25c; // char : 1
		constexpr auto m_bRotating = 0x25c; // char : 1
		constexpr auto m_fPreviousPosX = 0x260; // float
		constexpr auto m_fBackTimer = 0x264; // float
		constexpr auto m_nItems = 0x268; // TArray<int32_t>
		constexpr auto m_pItemGroup = 0x278; // ObjectProperty
		constexpr auto m_pLoadGroup = 0x280; // ObjectProperty
		constexpr auto m_pTreeGroup = 0x288; // ObjectProperty
		constexpr auto m_mcHeader = 0x290; // ObjectProperty
		constexpr auto m_mcHeaderIcon = 0x298; // ObjectProperty
		constexpr auto m_mcHeaderText = 0x2a0; // ObjectProperty
		constexpr auto m_mcHeaderKey = 0x2a8; // ObjectProperty [0x2]
		constexpr auto m_mcHeaderTab = 0x2b8; // ObjectProperty [0x3]
		constexpr auto m_mcHeaderTabSelect = 0x2d0; // ObjectProperty [0x3]
		constexpr auto m_mcHeaderTabShadow = 0x2e8; // ObjectProperty [0x3]
		constexpr auto m_mcHeaderTabHighlight = 0x300; // ObjectProperty [0x3]
		constexpr auto m_mcItems = 0x318; // ObjectProperty
		constexpr auto m_mcItemPage = 0x320; // ObjectProperty
		constexpr auto m_mcItemKey = 0x328; // ObjectProperty [0x2]
		constexpr auto m_mcItemArrow = 0x338; // ObjectProperty [0x2]
		constexpr auto m_mcItem = 0x348; // ObjectProperty [0xc]
		constexpr auto m_mcItemIcon = 0x3a8; // ObjectProperty [0xc]
		constexpr auto m_mcItemFrame = 0x408; // ObjectProperty [0xc]
		constexpr auto m_mcItemActive = 0x468; // ObjectProperty [0xc]
		constexpr auto m_mcItemRarity = 0x4c8; // ObjectProperty [0xc]
		constexpr auto m_mcItemTexture = 0x528; // ObjectProperty [0xc]
		constexpr auto m_mcItemIconFrame = 0x588; // ObjectProperty [0xc]
		constexpr auto m_mcLoadout = 0x5e8; // ObjectProperty
		constexpr auto m_mcLoadoutInfo = 0x5f0; // ObjectProperty
		constexpr auto m_mcLoadoutInfoDesc = 0x5f8; // ObjectProperty
		constexpr auto m_mcLoadoutInfoName = 0x600; // ObjectProperty
		constexpr auto m_mcLoadoutInfoType = 0x608; // ObjectProperty
		constexpr auto m_mcLoadoutInfoTexture = 0x610; // ObjectProperty
		constexpr auto m_mcLoadoutTalent = 0x618; // ObjectProperty [0xa]
		constexpr auto m_mcLoadoutTalentName = 0x668; // ObjectProperty [0xa]
		constexpr auto m_mcLoadoutTalentDesc = 0x6b8; // ObjectProperty [0xa]
		constexpr auto m_mcLoadoutTalentTexture = 0x708; // ObjectProperty [0xa]
		constexpr auto m_mcTree = 0x758; // ObjectProperty
		constexpr auto m_mcTreePage = 0x760; // ObjectProperty
		constexpr auto m_mcTreeInfo = 0x768; // ObjectProperty
		constexpr auto m_mcTreeInfoDesc = 0x770; // ObjectProperty
		constexpr auto m_mcTreeInfoName = 0x778; // ObjectProperty
		constexpr auto m_mcTreeInfoType = 0x780; // ObjectProperty
		constexpr auto m_mcTreeInfoTexture = 0x788; // ObjectProperty
		constexpr auto m_mcTreeInfoItem = 0x790; // ObjectProperty
		constexpr auto m_mcTreeInfoItemFrame = 0x798; // ObjectProperty
		constexpr auto m_mcTreeInfoItemTexture = 0x7a0; // ObjectProperty
		constexpr auto m_mcTreeProgress = 0x7a8; // ObjectProperty
		constexpr auto m_mcTreeProgressDesc = 0x7b0; // ObjectProperty
		constexpr auto m_mcTreeProgressName = 0x7b8; // ObjectProperty
		constexpr auto m_mcTreeProgressType = 0x7c0; // ObjectProperty
		constexpr auto m_mcTreeProgressIcon = 0x7c8; // ObjectProperty
		constexpr auto m_mcTreeProgressBar = 0x7d0; // ObjectProperty
		constexpr auto m_mcTreeProgressBarTip = 0x7d8; // ObjectProperty
		constexpr auto m_mcTreeProgressBarFill = 0x7e0; // ObjectProperty
		constexpr auto m_mcTreeProgressTexture = 0x7e8; // ObjectProperty
		constexpr auto m_mcTreeProgressItem = 0x7f0; // ObjectProperty
		constexpr auto m_mcTreeProgressItemFrame = 0x7f8; // ObjectProperty
		constexpr auto m_mcTreeProgressItemTexutre = 0x800; // ObjectProperty
		constexpr auto m_mcTreeKey = 0x808; // ObjectProperty [0x2]
		constexpr auto m_mcTreeArrow = 0x818; // ObjectProperty [0x2]
		constexpr auto m_mcTreeNodes = 0x828; // FUINODESET [0x4]
		constexpr auto m_mcTitleNodes = 0xe88; // FUITITLESET
		constexpr auto m_mcDetails = 0x1010; // ObjectProperty
		constexpr auto m_mcDetailDesc = 0x1018; // ObjectProperty
		constexpr auto m_mcDetailName = 0x1020; // ObjectProperty
		constexpr auto m_mcDetailType = 0x1028; // ObjectProperty
		constexpr auto m_mcDetailFrame = 0x1030; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x1038; // ObjectProperty
		constexpr auto m_mcRotator = 0x1040; // ObjectProperty
		constexpr auto m_pInputTriggerLeft = 0x1048; // ObjectProperty
		constexpr auto m_pInputTriggerRight = 0x1050; // ObjectProperty
	}

	namespace n_ATgProj_HolyHammer {
		constexpr auto bReachedLimit = 0x51c; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_ReduceAlternateCooldown {
		constexpr auto m_bAppliedReduction = 0xc8; // char : 1
	}

	namespace n_UTgCameraModule_Spectator {
		constexpr auto WorldViewPitch = 0x68; // int32_t
		constexpr auto OldViewpoint = 0x6c; // FTPOV
		constexpr auto RemainingBlendTime = 0x90; // float
		constexpr auto TotalBlendTime = 0x94; // float
		constexpr auto bCollideWorld = 0x98; // char : 1
	}

	namespace n_UUIComponent_CTA {
		constexpr auto m_mcTF = 0x120; // ObjectProperty
		constexpr auto m_bAnimOnHide = 0x128; // char : 1
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Alpha = 0x118; // FExpressionInput
	}

	namespace n_ULevel {
		constexpr auto LightmapTotalSize = 0x1f8; // float
		constexpr auto ShadowmapTotalSize = 0x1fc; // float
	}

	namespace n_USeqAct_LevelStreamingBase {
		constexpr auto bMakeVisibleAfterLoad = 0x120; // char : 1
		constexpr auto bShouldBlockOnLoad = 0x120; // char : 1
	}

	namespace n_UTgAIBehaviorAction_MoveToFogCenter {
		constexpr auto Percent = 0x9c; // float
	}

	namespace n_UUIDataDirector {
		constexpr auto m_AcquisitionQueues = 0x70; // TArray<ObjectProperty>
		constexpr auto m_AcquisitionQueueMap = 0x80; // TMap<None, None>
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0xa0; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0xb0; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0xb0; // char : 1
		constexpr auto bFireEventsWhenForwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // char : 1
	}

	namespace n_UTgAnimNodeJumpLeanOffset {
		constexpr auto JumpLeanStrength = 0x16c; // float
		constexpr auto MaxLeanChangeSpeed = 0x170; // float
		constexpr auto bMultiplyByZVelocity = 0x174; // char : 1
		constexpr auto CachedAimNode = 0x178; // ObjectProperty
		constexpr auto OldAimProfileName = 0x180; // FName
		constexpr auto PreBlendAim = 0x188; // FVector2D
		constexpr auto LeanWeight = 0x190; // float
		constexpr auto LeanWeightTarget = 0x194; // float
		constexpr auto BlendTimeToGo = 0x198; // float
	}

	namespace n_ANxTornadoAngularForceField {
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto BSpecialRadialForceMode = 0x2f8; // char : 1
		constexpr auto SelfRotationStrength = 0x2fc; // float
		constexpr auto Kernel = 0x300; // FPointer
	}

	namespace n_UTgDeviceForm_ArcingBeam {
		constexpr auto m_ArcingBeamList = 0x2bc; // TArray<FArcingFXInfo>
		constexpr auto m_BeamSourceActor = 0x2cc; // ObjectProperty
		constexpr auto m_fBeamPersistTime = 0x2d4; // float
		constexpr auto m_bRequireDeviceIsFiring = 0x2d8; // char : 1
		constexpr auto m_bIsFXContinuous = 0x2d8; // char : 1
		constexpr auto m_nBeamEffectID = 0x2dc; // int32_t
	}

	namespace n_UTerrainLayerSetup {
		constexpr auto Materials = 0x60; // TArray<FTerrainFilteredMaterial>
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipPercent {
		constexpr auto OwnershipPercent = 0x128; // float
		constexpr auto PointIndex = 0x12c; // int32_t
	}

	namespace n_ATgPathfinderWalker {
		constexpr auto m_Pathfinder = 0x280; // ObjectProperty
		constexpr auto m_CurrentSpline = 0x288; // ObjectProperty
		constexpr auto m_fCurrentSplineDist = 0x290; // float
		constexpr auto __OnFinishedPathing__Delegate = 0x294; // DelegateProperty
	}

	namespace n_UUIData_MasteryReward {
		constexpr auto m_dwLevel = 0x60; // Fdword
		constexpr auto m_pLTIGiven = 0x64; // ObjectProperty
		constexpr auto m_pItem = 0x6c; // ObjectProperty
		constexpr auto m_pChampion = 0x74; // ObjectProperty
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x68; // EParticleEventType
		constexpr auto EventName = 0x6c; // FName
	}

	namespace n_UTgAIBehaviorCondition_TimeSinceOpenedChest {
		constexpr auto TimeThreshold = 0x98; // float
	}

	namespace n_UDemoRecDriver {
		constexpr auto DemoSpectatorClass = 0x234; // FString
		constexpr auto MaxRewindPoints = 0x2ec; // int32_t
		constexpr auto RewindPointInterval = 0x2f4; // float
		constexpr auto NumRecentRewindPoints = 0x2f8; // int32_t
		constexpr auto ProtectedRewindPointInterval = 0x304; // int32_t
		constexpr auto MaxEventPoints = 0x318; // int32_t
		constexpr auto EventPointInterval = 0x320; // float
		constexpr auto MinEventBuffer = 0x324; // float
	}

	namespace n_ATgDevice_ToggleInhand {
		constexpr auto m_CachedTgP = 0xaec; // ObjectProperty
		constexpr auto m_nProjectilesFired = 0xaf4; // int32_t
		constexpr auto m_bWaitForOutro = 0xaf8; // char : 1
	}

	namespace n_UTgStaticMeshComponent {
		constexpr auto c_bFxApplied = 0x310; // char : 1
		constexpr auto c_FxList = 0x314; // TArray<ObjectProperty>
		constexpr auto c_DatabaseFxList = 0x324; // TArray<ObjectProperty>
		constexpr auto c_FxAssemblyData = 0x334; // TArray<FFx_AssemblyData>
		constexpr auto m_nAssemblyId = 0x344; // int32_t
	}

	namespace n_ATgRoyaleCatapultGroup {
		constexpr auto m_nCatapultGroupID = 0x280; // int32_t
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto AGreaterThanB = 0x118; // FExpressionInput
		constexpr auto AEqualsB = 0x14c; // FExpressionInput
		constexpr auto ALessThanB = 0x180; // FExpressionInput
	}

	namespace n_USystem {
		constexpr auto StaleCacheDays = 0x68; // int32_t
		constexpr auto MaxStaleCacheSize = 0x6c; // int32_t
		constexpr auto MaxOverallCacheSize = 0x70; // int32_t
		constexpr auto PackageSizeSoftLimit = 0x74; // int32_t
		constexpr auto AsyncIOBandwidthLimit = 0x78; // float
		constexpr auto SavePath = 0x7c; // FString
		constexpr auto CachePath = 0x8c; // FString
		constexpr auto CacheExt = 0x9c; // FString
		constexpr auto Paths = 0xac; // TArray<FString>
		constexpr auto SeekFreePCPaths = 0xbc; // TArray<FString>
		constexpr auto ScriptPaths = 0xcc; // TArray<FString>
		constexpr auto FRScriptPaths = 0xdc; // TArray<FString>
		constexpr auto CutdownPaths = 0xec; // TArray<FString>
		constexpr auto Suppress = 0xfc; // TArray<FName>
		constexpr auto Extensions = 0x10c; // TArray<FString>
		constexpr auto SeekFreePCExtensions = 0x11c; // TArray<FString>
		constexpr auto LocalizationPaths = 0x12c; // TArray<FString>
		constexpr auto ArchivePaths = 0x13c; // TArray<FString>
		constexpr auto TextureFileCacheExtension = 0x14c; // FString
	}

	namespace n_ATgDevice_Somersault {
		constexpr auto m_DodgeRollDevice = 0xaec; // ObjectProperty
	}

	namespace n_UTgAnimNotify_ApplyRigidBodyPhysics {
		constexpr auto ShouldAttachToBone = 0x68; // char : 1
		constexpr auto BoneName = 0x6c; // FName
		constexpr auto ImpulseLocation = 0x74; // FVector
		constexpr auto ImpulseRadius = 0x80; // float
		constexpr auto ImpulseStrength = 0x84; // float
	}

	namespace n_UNavMeshGoal_GenericFilterContainer {
		constexpr auto GoalFilters = 0x7c; // TArray<ObjectProperty>
		constexpr auto SuccessfulGoal = 0x8c; // FPointer
		constexpr auto MyNavigationHandle = 0x94; // ObjectProperty
		constexpr auto SeedLocations = 0x9c; // TArray<FVector>
	}

	namespace n_USeqAct_Log {
		constexpr auto bOutputToScreen = 0x108; // char : 1
		constexpr auto bIncludeObjComment = 0x108; // char : 1
		constexpr auto TargetDuration = 0x10c; // float
		constexpr auto TargetOffset = 0x110; // FVector
		constexpr auto LogMessage = 0x11c; // FString
	}

	namespace n_USoundNodeWaveStreaming {
		constexpr auto QueuedAudio = 0x328; // TArray<char>
		constexpr auto InactiveDuration = 0x338; // float
	}

	namespace n_USeqAct_SetVector {
		constexpr auto DefaultValue = 0x108; // FVector
	}

	namespace n_UTgAISquad_Minion {
		constexpr auto s_fNextClusterTime = 0xa8; // float
		constexpr auto s_fNextMergeTime = 0xac; // float
	}

	namespace n_UTgAIBehaviorCondition_Timer {
		constexpr auto TimerLength = 0x98; // float
		constexpr auto MinTime = 0x9c; // float
		constexpr auto RandomTime = 0xa0; // char : 1
	}

	namespace n_UAkComponent {
		constexpr auto BoneName = 0x88; // FName
		constexpr auto AutoPlayEvent = 0x90; // ObjectProperty
		constexpr auto bStopWhenOwnerDestroyed = 0x98; // char : 1
		constexpr auto bRegisteredWithWwise = 0x98; // char : 1
		constexpr auto bIsDefaultListener = 0x98; // char : 1
	}

	namespace n_ATgSpectatorDirector {
		constexpr auto m_bIsActive = 0x280; // char : 1
		constexpr auto m_bIsPending = 0x280; // char : 1
		constexpr auto m_bAutoSwitchCameraViews = 0x280; // char : 1
		constexpr auto m_bForceThirdPersonView = 0x280; // char : 1
		constexpr auto m_fRemainingAutoUpdateCheckTime = 0x284; // float
		constexpr auto m_fTimeSinceViewSwitchedTeams = 0x288; // float
		constexpr auto m_fTimeSinceViewSwitchedMode = 0x28c; // float
		constexpr auto m_fRemainingAutoReturnCheckTime = 0x290; // float
		constexpr auto m_CurrentCameraMode = 0x294; // SpectatorCameraMode
		constexpr auto m_CurrentRatedViewTarget = 0x298; // FViewTargetInfo
		constexpr auto m_DemoRewindViewTarget = 0x2bc; // FViewTargetInfo
		constexpr auto m_v2dForcedDirectorLocation = 0x2e0; // FVector2D
		constexpr auto m_fForcedDirectorLocationTimestamp = 0x2e8; // float
	}

	namespace n_UAudioComponent {
		constexpr auto SoundCue = 0x88; // ObjectProperty
		constexpr auto CueFirstNode = 0x90; // ObjectProperty
		constexpr auto InstanceParameters = 0x98; // TArray<FAudioComponentParam>
		constexpr auto bUseOwnerLocation = 0xa8; // char : 1
		constexpr auto bAutoPlay = 0xa8; // char : 1
		constexpr auto bAutoDestroy = 0xa8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0xa8; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0xa8; // char : 1
		constexpr auto bWasOccluded = 0xa8; // char : 1
		constexpr auto bNeedsOcclusionCheck = 0xa8; // char : 1
		constexpr auto bSuppressSubtitles = 0xa8; // char : 1
		constexpr auto bWasPlaying = 0xa8; // char : 0
		constexpr auto bAllowSpatialization = 0xa8; // char : 0
		constexpr auto bFinished = 0xa8; // char : 0
		constexpr auto bApplyRadioFilter = 0xa8; // char : 0
		constexpr auto bRadioFilterSelected = 0xa8; // char : 0
		constexpr auto bPreviewComponent = 0xa8; // char : 0
		constexpr auto bIgnoreForFlushing = 0xa8; // char : 0
		constexpr auto StereoBleed = 0xac; // float
		constexpr auto LFEBleed = 0xb0; // float
		constexpr auto bEQFilterApplied = 0xb4; // char : 1
		constexpr auto bAlwaysPlay = 0xb4; // char : 1
		constexpr auto bIsUISound = 0xb4; // char : 1
		constexpr auto bIsMusic = 0xb4; // char : 1
		constexpr auto bReverb = 0xb4; // char : 1
		constexpr auto bCenterChannelOnly = 0xb4; // char : 1
		constexpr auto m_fAdditionalPriority = 0xb8; // float
		constexpr auto WaveInstances = 0xbc; // TArray<FPointer>
		constexpr auto SoundNodeData = 0xcc; // TArray<char>
		constexpr auto SoundNodeOffsetMap = 0xdc; // TMap<None, None>
		constexpr auto SoundNodeResetWaveMap = 0x124; // FMultiMap_Mirror
		constexpr auto Listener = 0x16c; // FPointer
		constexpr auto PlaybackTime = 0x174; // float
		constexpr auto PortalVolume = 0x178; // ObjectProperty
		constexpr auto Location = 0x180; // FVector
		constexpr auto ComponentLocation = 0x18c; // FVector
		constexpr auto LastOwner = 0x198; // ObjectProperty
		constexpr auto SubtitlePriority = 0x1a0; // float
		constexpr auto FadeInStartTime = 0x1a4; // float
		constexpr auto FadeInStopTime = 0x1a8; // float
		constexpr auto FadeInTargetVolume = 0x1ac; // float
		constexpr auto FadeOutStartTime = 0x1b0; // float
		constexpr auto FadeOutStopTime = 0x1b4; // float
		constexpr auto FadeOutTargetVolume = 0x1b8; // float
		constexpr auto m_fFadeOutTargetPitch = 0x1bc; // float
		constexpr auto AdjustVolumeStartTime = 0x1c0; // float
		constexpr auto AdjustVolumeStopTime = 0x1c4; // float
		constexpr auto AdjustVolumeTargetVolume = 0x1c8; // float
		constexpr auto CurrAdjustVolumeTargetVolume = 0x1cc; // float
		constexpr auto CurrentNotifyBufferFinishedHook = 0x1d0; // ObjectProperty
		constexpr auto CurrentLocation = 0x1d8; // FVector
		constexpr auto CurrentVelocity = 0x1e4; // FVector
		constexpr auto CurrentVolume = 0x1f0; // float
		constexpr auto CurrentPitch = 0x1f4; // float
		constexpr auto CurrentHighFrequencyGain = 0x1f8; // float
		constexpr auto CurrentUseSpatialization = 0x1fc; // int32_t
		constexpr auto CurrentNotifyOnLoop = 0x200; // int32_t
		constexpr auto OmniRadius = 0x204; // float
		constexpr auto CurrentVolumeMultiplier = 0x208; // float
		constexpr auto CurrentPitchMultiplier = 0x20c; // float
		constexpr auto CurrentHighFrequencyGainMultiplier = 0x210; // float
		constexpr auto CurrentVoiceCenterChannelVolume = 0x214; // float
		constexpr auto CurrentRadioFilterVolume = 0x218; // float
		constexpr auto CurrentRadioFilterVolumeThreshold = 0x21c; // float
		constexpr auto LastUpdateTime = 0x220; // FDouble
		constexpr auto SourceInteriorVolume = 0x228; // float
		constexpr auto SourceInteriorLPF = 0x22c; // float
		constexpr auto CurrentInteriorVolume = 0x230; // float
		constexpr auto CurrentInteriorLPF = 0x234; // float
		constexpr auto SoundModeStartTime = 0x238; // FDouble
		constexpr auto LastLocation = 0x240; // FVector
		constexpr auto LastInteriorSettings = 0x24c; // FInteriorSettings
		constexpr auto LastReverbVolumeIndex = 0x27c; // int32_t
		constexpr auto VolumeMultiplier = 0x280; // float
		constexpr auto PitchMultiplier = 0x284; // float
		constexpr auto HighFrequencyGainMultiplier = 0x288; // float
		constexpr auto OcclusionCheckInterval = 0x28c; // float
		constexpr auto LastOcclusionCheckTime = 0x290; // float
		constexpr auto PreviewSoundRadius = 0x294; // ComponentProperty
		constexpr auto __OnAudioFinished__Delegate = 0x29c; // DelegateProperty
		constexpr auto __OnAudioFinishedFX__Delegate = 0x2ac; // DelegateProperty
		constexpr auto __OnQueueSubtitles__Delegate = 0x2bc; // DelegateProperty
	}

	namespace n_UAnimNodePlayCustomAnim {
		constexpr auto bIsPlayingCustomAnim = 0x124; // char : 1
		constexpr auto CustomPendingBlendOutTime = 0x128; // float
	}

	namespace n_UTgInvListener_SetInhandFiremodeAfterDeviceFired {
		constexpr auto m_nRemainingShots = 0xd0; // int32_t
		constexpr auto m_fRemainingTime = 0xd4; // float
	}

	namespace n_UNavMeshGoal_Random {
		constexpr auto MinDist = 0x7c; // int32_t
		constexpr auto BestRating = 0x80; // float
		constexpr auto PartialGoal = 0x84; // FPointer
	}

	namespace n_ATgForgeObjective_Tournament {
		constexpr auto m_bIsUsable = 0x3a4; // char : 1
	}

	namespace n_USeqVar_Vector {
		constexpr auto VectValue = 0xa0; // FVector
	}

	namespace n_UTgPlayerInput {
		constexpr auto c_TgPC = 0x2f8; // ObjectProperty
		constexpr auto c_bASKeyCapture = 0x300; // char : 1
		constexpr auto c_bASSpecKeyCapture = 0x300; // char : 1
		constexpr auto c_bMiniMapPinging = 0x300; // char : 1
		constexpr auto c_bAutoRun = 0x300; // char : 1
		constexpr auto bEnableAimAssist = 0x300; // char : 1
		constexpr auto bDebugAimAssist = 0x300; // char : 1
		constexpr auto m_bOldLookValid = 0x300; // char : 1
		constexpr auto GamepadSensitivityX = 0x304; // float
		constexpr auto GamepadSensitivityY = 0x308; // float
		constexpr auto GyroSensitivityX = 0x30c; // float
		constexpr auto GyroSensitivityY = 0x310; // float
		constexpr auto GyroTuningConstant = 0x314; // float
		constexpr auto fScopeSensitivity = 0x318; // float
		constexpr auto fADSSensitivity = 0x31c; // float
		constexpr auto fGamepadADSSensitivyMult = 0x320; // float
		constexpr auto fGamepadScopeSensitivyMult = 0x324; // float
		constexpr auto m_fMinScopeSensitivityMult = 0x328; // float
		constexpr auto m_fMaxScopeSensitivityMult = 0x32c; // float
		constexpr auto m_fMinADSSensitivityMult = 0x330; // float
		constexpr auto m_fMaxADSSensitivityMult = 0x334; // float
		constexpr auto nAimAccelerationSet = 0x338; // int32_t
		constexpr auto nAimAccelerationBoost = 0x33c; // int32_t
		constexpr auto fTurnSpeedAccelAmt = 0x340; // float
		constexpr auto fLookUpSpeedAccelAmt = 0x344; // float
		constexpr auto nAimAccelerationAlgorithm = 0x348; // int32_t
		constexpr auto fOldATurn = 0x34c; // float
		constexpr auto fOldALookUp = 0x350; // float
		constexpr auto nAimAssistMagnetStrength = 0x354; // int32_t
		constexpr auto nAimAssistFrictionStrength = 0x358; // int32_t
		constexpr auto nInnerDeadZoneSize = 0x35c; // int32_t
		constexpr auto nOuterDeadZoneSize = 0x360; // int32_t
		constexpr auto BestAimAssistTarget = 0x364; // ObjectProperty
		constexpr auto m_AimAssistCurves = 0x36c; // ObjectProperty
		constexpr auto aTurnFinalValue = 0x374; // float
		constexpr auto aLookUpFinalValue = 0x378; // float
		constexpr auto m_AimAssistTargets = 0x37c; // TArray<FAimAssistTargetWeight>
		constexpr auto TargetWeightVars = 0x38c; // FAimAssistTargetWeightVars
		constexpr auto DebugAimAssistVals = 0x3a8; // FDebugAimAssist
		constexpr auto m_vOldLookTarget = 0x4cc; // FVector
		constexpr auto m_vOldLockDelta = 0x4d8; // FVector2D
		constexpr auto __OnRawInputKey__Delegate = 0x4e0; // DelegateProperty
		constexpr auto __OnInputAxis__Delegate = 0x4f0; // DelegateProperty
		constexpr auto __OnInputChar__Delegate = 0x500; // DelegateProperty
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_UUberPostProcessEffect {
		constexpr auto SceneShadows = 0xf0; // FVector
		constexpr auto SceneHighLights = 0xfc; // FVector
		constexpr auto SceneMidTones = 0x108; // FVector
		constexpr auto SceneDesaturation = 0x114; // float
		constexpr auto SceneColorize = 0x118; // FVector
		constexpr auto TonemapperType = 0x124; // ETonemapperType
		constexpr auto PostProcessAAType = 0x125; // EPostProcessAAType
		constexpr auto TonemapperRange = 0x128; // float
		constexpr auto TonemapperToeFactor = 0x12c; // float
		constexpr auto TonemapperScale = 0x130; // float
		constexpr auto MotionBlurSoftEdgeKernelSize = 0x134; // float
		constexpr auto bEnableImageGrain = 0x138; // char : 1
		constexpr auto bScaleEffectsWithViewSize = 0x138; // char : 1
		constexpr auto bEnableHDRTonemapper = 0x138; // char : 1
		constexpr auto SceneImageGrainScale = 0x13c; // float
		constexpr auto BloomWeightSmall = 0x140; // float
		constexpr auto BloomWeightMedium = 0x144; // float
		constexpr auto BloomWeightLarge = 0x148; // float
		constexpr auto BloomSizeScaleSmall = 0x14c; // float
		constexpr auto BloomSizeScaleMedium = 0x150; // float
		constexpr auto BloomSizeScaleLarge = 0x154; // float
		constexpr auto EdgeDetectionThreshold = 0x158; // float
		constexpr auto PreviousLUTBlender = 0x15c; // FLUTBlender
		constexpr auto SceneHDRTonemapperScale = 0x180; // float
	}

	namespace n_UOnlineTitleFileDownloadBase {
		constexpr auto ReadTitleFileCompleteDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto RequestTitleFileListCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto BaseUrl = 0xa0; // FString
		constexpr auto RequestFileListURL = 0xb0; // FString
		constexpr auto RequestFileURL = 0xc0; // FString
		constexpr auto TimeOut = 0xd0; // float
		constexpr auto FilesToUrls = 0xd4; // TArray<FFileNameToURLMapping>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnRequestTitleFileListComplete__Delegate = 0xf4; // DelegateProperty
	}

	namespace n_USequenceEvent {
		constexpr auto DuplicateEvts = 0xec; // TArray<ObjectProperty>
		constexpr auto Originator = 0xfc; // ObjectProperty
		constexpr auto Instigator = 0x104; // ObjectProperty
		constexpr auto ActivationTime = 0x10c; // float
		constexpr auto TriggerCount = 0x110; // int32_t
		constexpr auto MaxTriggerCount = 0x114; // int32_t
		constexpr auto ReTriggerDelay = 0x118; // float
		constexpr auto bEnabled = 0x11c; // char : 1
		constexpr auto bPlayerOnly = 0x11c; // char : 1
		constexpr auto bRegistered = 0x11c; // char : 1
		constexpr auto bClientSideOnly = 0x11c; // char : 1
		constexpr auto bServerAndClientSide = 0x11c; // char : 1
		constexpr auto bHumanOnly = 0x11c; // char : 1
		constexpr auto Priority = 0x120; // char
		constexpr auto MaxWidth = 0x124; // int32_t
	}

	namespace n_UTgSeqEvent_DeviceEquipped {
		constexpr auto m_nDeviceId = 0x128; // int32_t
	}

	namespace n_ATgGame_RoyaleScrimmage {
		constexpr auto m_bFoundSetup = 0x9c0; // char : 1
		constexpr auto m_TeamColorMap = 0x9c4; // TMap<None, None>
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x74; // TArray<FDistanceDatum>
	}

	namespace n_UAnimNotify_AkEvent {
		constexpr auto AkEvent = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // char : 1
		constexpr auto m_bIgnoreIfMeshHidden = 0x70; // char : 1
		constexpr auto m_bIgnoreIfActorHidden = 0x70; // char : 1
		constexpr auto BoneName = 0x74; // FName
	}

	namespace n_UParticleModuleSizeMultiplyVelocity {
		constexpr auto VelocityMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // char : 1
		constexpr auto MultiplyY = 0x8c; // char : 1
		constexpr auto MultiplyZ = 0x8c; // char : 1
		constexpr auto CapMaxSize = 0x90; // FVector
		constexpr auto CapMinSize = 0x9c; // FVector
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0xb0; // FString
		constexpr auto OutputType = 0xc0; // ECustomMaterialOutputType
		constexpr auto Description = 0xc4; // FString
		constexpr auto Inputs = 0xd4; // TArray<FCustomInput>
	}

	namespace n_UTgAnimNodeBlendByDeviceEquipped {
		constexpr auto m_DeviceId = 0x168; // int32_t
	}

	namespace n_ATgDevice_OwlSidearm {
		constexpr auto m_fQueueFireTime = 0xaec; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xaf0; // float
	}

	namespace n_USeqAct_GetDistance {
		constexpr auto Distance = 0x108; // float
	}

	namespace n_UTgAnimNodeEmoteCustomAnim {
		constexpr auto c_bIsInHandDeviceMeshInvisible = 0x12c; // char : 1
		constexpr auto c_bHasReachedFullWeight = 0x12c; // char : 1
	}

	namespace n_UTgAIBehaviorCondition_DistanceBase {
		constexpr auto DistanceThreshold = 0x98; // float
	}

	namespace n_UTgInventoryObject_Listen_AddDamage {
		constexpr auto m_bAutoProcOnInhand = 0xc8; // char : 1
		constexpr auto m_bCheckIsValidTarget = 0xc8; // char : 1
	}

	namespace n_UTgAnimNodeRandom {
		constexpr auto m_iDefaultChildIndex = 0x168; // int32_t
		constexpr auto m_bConsiderRelevancy = 0x16c; // char : 1
		constexpr auto m_bMasterOtherNodes = 0x16c; // char : 1
		constexpr auto m_bIsASlave = 0x16c; // char : 1
		constexpr auto m_bEnableTimer = 0x16c; // char : 1
		constexpr auto m_TimeAllChildren = 0x16c; // char : 1
		constexpr auto m_SlaveNames = 0x170; // TArray<FName>
		constexpr auto m_Slaves = 0x180; // TArray<ObjectProperty>
		constexpr auto m_nPrimaryChild = 0x190; // int32_t
		constexpr auto m_TimeRange = 0x194; // FVector2D
		constexpr auto m_fRemainingTime = 0x19c; // float
		constexpr auto RandomInfo = 0x1a0; // TArray<FTgRandomAnimInfo>
	}

	namespace n_UUIDataPrice {
		constexpr auto m_nVendorId = 0x60; // int32_t
		constexpr auto m_nLootId = 0x64; // int32_t
		constexpr auto m_nItemId = 0x68; // int32_t
		constexpr auto m_nPurchaseType = 0x6c; // int32_t
		constexpr auto m_nCurrencyType = 0x70; // int32_t
		constexpr auto m_nQuantity = 0x74; // int32_t
		constexpr auto m_nPrice = 0x78; // int32_t
		constexpr auto m_nDiscountPrice = 0x7c; // int32_t
		constexpr auto m_nOriginalPrice = 0x80; // int32_t
	}

	namespace n_ATgDevice_AutoHealing2 {
		constexpr auto m_bIsApplied = 0xaec; // char : 1
		constexpr auto m_bForceRemoval = 0xaec; // char : 1
		constexpr auto m_CachedPawnOwner = 0xaf0; // ObjectProperty
		constexpr auto m_fLastLowHealthSoundTime = 0xaf8; // float
		constexpr auto m_fPrevHealthPct = 0xafc; // float
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromInteractTarget {
		constexpr auto Distance = 0x98; // float
	}

	namespace n_ATgPawn_Biped {
		constexpr auto m_nmLeftFootBone = 0x2e78; // FName
		constexpr auto m_nmRightFootBone = 0x2e80; // FName
		constexpr auto m_nmLeftFootControlName = 0x2e88; // FName
		constexpr auto m_nmRightFootControlName = 0x2e90; // FName
		constexpr auto m_fOldLocationZ = 0x2e98; // float
		constexpr auto m_bEnableRightFootPlacement = 0x2e9c; // char : 1
		constexpr auto m_bEnableLeftFootPlacement = 0x2e9c; // char : 1
		constexpr auto m_bMayDisableFootIKFromAnimNodes = 0x2e9c; // char : 1
		constexpr auto m_bInitializedFootIKCachedNodeList = 0x2e9c; // char : 1
		constexpr auto m_bApplyLeftHandWeaponIK = 0x2e9c; // char : 1
		constexpr auto m_bSetHandIKStrengthFromAnimNodes = 0x2e9c; // char : 1
		constexpr auto m_bInitializedHandIKCachedNodeList = 0x2e9c; // char : 1
		constexpr auto c_bPlayingRefire = 0x2e9c; // char : 1
		constexpr auto c_bRefireIsUpperBody = 0x2e9c; // char : 0
		constexpr auto m_fZSmoothingRate = 0x2ea0; // float
		constexpr auto m_fMaxFootPlacementDistSquared = 0x2ea4; // float
		constexpr auto m_LeftLegControl = 0x2ea8; // ObjectProperty
		constexpr auto m_RightLegControl = 0x2eb0; // ObjectProperty
		constexpr auto m_FootIKZeroStrengthAnimNodeNameList = 0x2eb8; // TArray<FName>
		constexpr auto m_FootIKZeroStrengthCachedNodeList = 0x2ec8; // TArray<ObjectProperty>
		constexpr auto m_vPreviousRightFootPosition = 0x2ed8; // FVector
		constexpr auto m_vPreviousLeftFootPosition = 0x2ee4; // FVector
		constexpr auto m_fCachedRightTracedFloor = 0x2ef0; // float
		constexpr auto m_fCachedLeftTracedFloor = 0x2ef4; // float
		constexpr auto m_fCachedRightFloorNormalZ = 0x2ef8; // float
		constexpr auto m_fCachedLeftFloorNormalZ = 0x2efc; // float
		constexpr auto m_nCachedLeftFootBoneIndex = 0x2f00; // int32_t
		constexpr auto m_nCachedRightFootBoneIndex = 0x2f04; // int32_t
		constexpr auto m_SkelControl_LeftHandName = 0x2f08; // FName
		constexpr auto m_SkelControl_LeftHand = 0x2f10; // ObjectProperty
		constexpr auto m_SkelControl_LeftHandRotate = 0x2f18; // ObjectProperty
		constexpr auto m_SkelControl_RightHandName = 0x2f20; // FName
		constexpr auto m_SkelControl_RightHand = 0x2f28; // ObjectProperty
		constexpr auto m_SkelControl_RightHandRotate = 0x2f30; // ObjectProperty
		constexpr auto m_SkelControl_RightToLeftPropSwitch = 0x2f38; // ObjectProperty
		constexpr auto m_HandIKFullStrengthAnimNodeNameList = 0x2f40; // TArray<FName>
		constexpr auto m_HandIKZeroStrengthAnimNodeNameList = 0x2f50; // TArray<FName>
		constexpr auto m_HandIKFullStengthCachedNodeList = 0x2f60; // TArray<ObjectProperty>
		constexpr auto m_HandIKZeroStrengthCachedNodeList = 0x2f70; // TArray<ObjectProperty>
		constexpr auto m_FadeMaterialControllerBody = 0x2f80; // ObjectProperty
		constexpr auto c_RefireBeginBlendAnimationName = 0x2f88; // FName
		constexpr auto c_RefireEndBlendAnimationName = 0x2f90; // FName
		constexpr auto c_RefireAnimSet = 0x2f98; // ObjectProperty
		constexpr auto c_fRefireDuration = 0x2fa0; // float
		constexpr auto c_fRefireEndDuration = 0x2fa4; // float
		constexpr auto m_vAimAssistAnchorOffset = 0x2fa8; // FVector
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0xb0; // char : 1
	}

	namespace n_ANxGenericForceFieldBox {
		constexpr auto RenderComponent = 0x374; // ComponentProperty
		constexpr auto BoxExtent = 0x37c; // FVector
	}

	namespace n_UTgAIBehaviorCondition_DifficultyLevel {
		constexpr auto Difficulty = 0x98; // EBotDifficultyLevel
	}

	namespace n_UUIDataStore_MenuItems {
		constexpr auto CurrentGameSettingsTag = 0xf0; // FName
		constexpr auto OptionProviders = 0xf8; // FMultiMap_Mirror
		constexpr auto DynamicProviders = 0x140; // TArray<ObjectProperty>
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0xb108; // ObjectProperty
	}

	namespace n_UUIResourceDataProvider {
		constexpr auto bSkipDuringEnumeration = 0x90; // char : 1
	}

	namespace n_ATgDeploy_Bomb {
		constexpr auto r_fPersistTime = 0x448; // float
		constexpr auto m_CountdownIndicator = 0x44c; // ComponentProperty
		constexpr auto m_CountdownIndicatorMIC = 0x454; // ObjectProperty
		constexpr auto r_fRadiusScale = 0x45c; // float
	}

	namespace n_UParticleModuleUberLTISIVCLIL {
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
	}

	namespace n_UPrimitiveComponent {
		constexpr auto Tag = 0x88; // int32_t
		constexpr auto ThreadTag = 0x8c; // int32_t [0x5]
		constexpr auto Bounds = 0xa0; // FBoxSphereBounds
		constexpr auto SceneInfo = 0xbc; // FPointer
		constexpr auto DetachFence = 0xc4; // int32_t
		constexpr auto LocalToWorldDeterminant = 0xc8; // float
		constexpr auto LocalToWorld = 0xd0; // FMatrix
		constexpr auto MotionBlurInfoIndex = 0x110; // int32_t
		constexpr auto DecalList = 0x114; // TArray<FPointer>
		constexpr auto DecalsToReattach = 0x124; // TArray<ComponentProperty>
		constexpr auto ShadowParent = 0x134; // ComponentProperty
		constexpr auto ReplacementPrimitive = 0x13c; // ComponentProperty
		constexpr auto FogVolumeComponent = 0x144; // ComponentProperty
		constexpr auto OverrideLightComponent = 0x14c; // ComponentProperty
		constexpr auto LightEnvironment = 0x154; // ComponentProperty
		constexpr auto PreviousLightEnvironment = 0x15c; // ComponentProperty
		constexpr auto MinDrawDistance = 0x164; // float
		constexpr auto MassiveLODDistance = 0x168; // float
		constexpr auto MaxDrawDistance = 0x16c; // float
		constexpr auto CachedMaxDrawDistance = 0x170; // float
		constexpr auto MotionBlurInstanceScale = 0x174; // float
		constexpr auto CullDistance = 0x178; // float
		constexpr auto CachedCullDistance = 0x17c; // float
		constexpr auto DepthPriorityGroup = 0x180; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x181; // ESceneDepthPriorityGroup
		constexpr auto DetailMode = 0x182; // EDetailMode
		constexpr auto RBChannel = 0x183; // ERBCollisionChannel
		constexpr auto RBDominanceGroup = 0x184; // char
		constexpr auto PreviewEnvironmentShadowing = 0x185; // char
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x188; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x188; // char : 1
		constexpr auto HiddenGame = 0x188; // char : 1
		constexpr auto HiddenEditor = 0x188; // char : 1
		constexpr auto bOwnerNoSee = 0x188; // char : 1
		constexpr auto bOnlyOwnerSee = 0x188; // char : 1
		constexpr auto bIgnoreOwnerHidden = 0x188; // char : 1
		constexpr auto bIncludeInManualZPrepass = 0x188; // char : 1
		constexpr auto bUseAsOccluder = 0x188; // char : 0
		constexpr auto bAllowApproximateOcclusion = 0x188; // char : 0
		constexpr auto bFirstFrameOcclusion = 0x188; // char : 0
		constexpr auto bIgnoreNearPlaneIntersection = 0x188; // char : 0
		constexpr auto bSelectable = 0x188; // char : 0
		constexpr auto bForceMipStreaming = 0x188; // char : 0
		constexpr auto bAcceptsDecals = 0x188; // char : 0
		constexpr auto bAcceptsDecalsDuringGameplay = 0x188; // char : 0
		constexpr auto bAcceptsStaticDecals = 0x188; // char : 0
		constexpr auto bAcceptsDynamicDecals = 0x188; // char : 0
		constexpr auto bIsRefreshingDecals = 0x188; // char : 0
		constexpr auto bAllowDecalAutomaticReAttach = 0x188; // char : 0
		constexpr auto bUsePerInstanceHitProxies = 0x188; // char : 0
		constexpr auto CastShadow = 0x188; // char : 0
		constexpr auto bForceDirectLightMap = 0x188; // char : 0
		constexpr auto bCastDynamicShadow = 0x188; // char : 0
		constexpr auto bCastStaticShadow = 0x188; // char : 0
		constexpr auto bSelfShadowOnly = 0x188; // char : 0
		constexpr auto bNoModSelfShadow = 0x188; // char : 0
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x188; // char : 0
		constexpr auto bCastHiddenShadow = 0x188; // char : 0
		constexpr auto bCastShadowAsTwoSided = 0x188; // char : 0
		constexpr auto bAcceptsLights = 0x188; // char : 0
		constexpr auto bAcceptsDynamicLights = 0x188; // char : 0
		constexpr auto bUseOnePassLightingOnTranslucency = 0x18c; // char : 1
		constexpr auto bUsePrecomputedShadows = 0x18c; // char : 1
		constexpr auto bHasExplicitShadowParent = 0x18c; // char : 1
		constexpr auto bAllowAmbientOcclusion = 0x18c; // char : 1
		constexpr auto CollideActors = 0x18c; // char : 1
		constexpr auto AlwaysCheckCollision = 0x18c; // char : 1
		constexpr auto BlockActors = 0x18c; // char : 1
		constexpr auto BlockZeroExtent = 0x18c; // char : 1
		constexpr auto BlockNonZeroExtent = 0x18c; // char : 0
		constexpr auto CanBlockCamera = 0x18c; // char : 0
		constexpr auto BlockRigidBody = 0x18c; // char : 0
		constexpr auto bBlockFootPlacement = 0x18c; // char : 0
		constexpr auto bSeenByAI = 0x18c; // char : 0
		constexpr auto bDisableAllRigidBody = 0x18c; // char : 0
		constexpr auto bSkipRBGeomCreation = 0x18c; // char : 0
		constexpr auto bNotifyRigidBodyCollision = 0x18c; // char : 0
		constexpr auto bFluidDrain = 0x18c; // char : 0
		constexpr auto bFluidTwoWay = 0x18c; // char : 0
		constexpr auto bIgnoreRadialImpulse = 0x18c; // char : 0
		constexpr auto bIgnoreRadialForce = 0x18c; // char : 0
		constexpr auto bIgnoreForceField = 0x18c; // char : 0
		constexpr auto bUseCompartment = 0x18c; // char : 0
		constexpr auto AlwaysLoadOnClient = 0x18c; // char : 0
		constexpr auto AlwaysLoadOnServer = 0x18c; // char : 0
		constexpr auto bIgnoreHiddenActorsMembership = 0x18c; // char : 0
		constexpr auto AbsoluteTranslation = 0x18c; // char : 0
		constexpr auto AbsoluteRotation = 0x18c; // char : 0
		constexpr auto AbsoluteScale = 0x18c; // char : 0
		constexpr auto bAllowShadowFade = 0x18c; // char : 0
		constexpr auto bSupportedOnMobile = 0x18c; // char : 0
		constexpr auto bWasSNFiltered = 0x18c; // char : 0
		constexpr auto OctreeNodes = 0x190; // TArray<int32_t>
		constexpr auto TranslucencySortPriority = 0x1a0; // int32_t
		constexpr auto VisibilityId = 0x1a4; // int32_t
		constexpr auto LightingChannels = 0x1a8; // FLightingChannelContainer
		constexpr auto RBCollideWithChannels = 0x1ac; // FRBCollisionChannelContainer
		constexpr auto PhysMaterialOverride = 0x1b0; // ObjectProperty
		constexpr auto BodyInstance = 0x1b8; // ObjectProperty
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto Rotation = 0x20c; // FRotator
		constexpr auto Scale = 0x218; // float
		constexpr auto Scale3D = 0x21c; // FVector
		constexpr auto BoundsScale = 0x228; // float
		constexpr auto OcclusionBoundsScale = 0x22c; // FVector
		constexpr auto OcclusionSphereScale = 0x238; // float
		constexpr auto OverrideDrawDistanceScale = 0x23c; // float
		constexpr auto LastSubmitTime = 0x240; // float
		constexpr auto LastRenderTime = 0x244; // float
		constexpr auto ScriptRigidBodyCollisionThreshold = 0x248; // float
	}

	namespace n_UTgParticleModuleTypeDataLight {
		constexpr auto m_PointLightComponent = 0x68; // ComponentProperty
		constexpr auto m_PLCDuplicate = 0x70; // ComponentProperty
	}

	namespace n_AEmitterPool {
		constexpr auto PSCTemplate = 0x280; // ComponentProperty
		constexpr auto PoolComponents = 0x288; // TArray<ComponentProperty>
		constexpr auto ActiveComponents = 0x298; // TArray<ComponentProperty>
		constexpr auto MaxActiveEffects = 0x2a8; // int32_t
		constexpr auto InitialPooledComponentCount = 0x2ac; // int32_t
		constexpr auto bLogPoolOverflow = 0x2b0; // char : 1
		constexpr auto bLogPoolOverflowList = 0x2b0; // char : 1
		constexpr auto RelativePSCs = 0x2b4; // TArray<FEmitterBaseInfo>
		constexpr auto SMC_MIC_ReductionTime = 0x2c4; // float
		constexpr auto SMC_MIC_CurrentReductionTime = 0x2c8; // float
		constexpr auto IdealStaticMeshComponents = 0x2cc; // int32_t
		constexpr auto IdealMaterialInstanceConstants = 0x2d0; // int32_t
		constexpr auto FreeSMComponents = 0x2d4; // TArray<ComponentProperty>
		constexpr auto FreeMatInstConsts = 0x2e4; // TArray<ObjectProperty>
	}

	namespace n_ANxCylindricalForceField {
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto UseSpecialRadialForce = 0x2f8; // char : 1
		constexpr auto Kernel = 0x2fc; // FPointer
	}

	namespace n_USeqAct_AkSetRTPCValue {
		constexpr auto Param = 0x120; // FString
		constexpr auto Value = 0x130; // float
		constexpr auto Running = 0x134; // char : 1
	}

	namespace n_UApexDestructibleAsset {
		constexpr auto MApexAsset = 0x80; // FPointer
		constexpr auto Materials = 0x88; // TArray<ObjectProperty>
		constexpr auto FractureMaterials = 0x98; // TArray<ObjectProperty>
		constexpr auto bPlaySingleFractureMaterialEffect = 0xa8; // char : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xa8; // char : 1
		constexpr auto bDynamic = 0xa8; // char : 1
		constexpr auto DefaultPhysMaterial = 0xac; // ObjectProperty
		constexpr auto MDestructibleThumbnailComponent = 0xb4; // FPointer
		constexpr auto CrumbleEmitterName = 0xbc; // FString
		constexpr auto DustEmitterName = 0xcc; // FString
		constexpr auto DestructibleParameters = 0xdc; // FNxDestructibleParameters
	}

	namespace n_UMaterialExpressionTextureObject {
		constexpr auto Texture = 0xb0; // ObjectProperty
	}

	namespace n_UTgControlModule_Feared {
		constexpr auto c_fLastSwitchTime = 0xcc; // float
		constexpr auto c_fNextSwitchTime = 0xd0; // float
		constexpr auto c_vCurrentDirection = 0xd4; // FVector
	}

	namespace n_AWorldInfo {
		constexpr auto DefaultPostProcessSettings = 0x294; // FPostProcessSettings
		constexpr auto WorldPostProcessChain = 0x414; // ObjectProperty
		constexpr auto bPersistPostProcessToNextLevel = 0x41c; // char : 1
		constexpr auto bFogEnabled = 0x41c; // char : 1
		constexpr auto bBumpOffsetEnabled = 0x41c; // char : 1
		constexpr auto bUseGammaCorrection = 0x41c; // char : 1
		constexpr auto bMapNeedsLightingFullyRebuilt = 0x41c; // char : 1
		constexpr auto bMapHasMultipleDominantLightsAffectingOnePrimitive = 0x41c; // char : 1
		constexpr auto bMapHasPathingErrors = 0x41c; // char : 1
		constexpr auto bRequestedBlockOnAsyncLoading = 0x41c; // char : 1
		constexpr auto bBegunPlay = 0x41c; // char : 0
		constexpr auto bPlayersOnly = 0x41c; // char : 0
		constexpr auto bPlayersOnlyPending = 0x41c; // char : 0
		constexpr auto bSuspendAI = 0x41c; // char : 0
		constexpr auto bDropDetail = 0x41c; // char : 0
		constexpr auto bAggressiveLOD = 0x41c; // char : 0
		constexpr auto bStartup = 0x41c; // char : 0
		constexpr auto bPathsRebuilt = 0x41c; // char : 0
		constexpr auto bHasPathNodes = 0x41c; // char : 0
		constexpr auto bIsMenuLevel = 0x41c; // char : 0
		constexpr auto bDebugPauseExecution = 0x41c; // char : 0
		constexpr auto bDebugStepExecution = 0x41c; // char : 0
		constexpr auto bUseConsoleInput = 0x41c; // char : 0
		constexpr auto bMinimizeBSPSections = 0x41c; // char : 0
		constexpr auto bNoDefaultInventoryForPlayer = 0x41c; // char : 0
		constexpr auto bNoPathWarnings = 0x41c; // char : 0
		constexpr auto bNoMobileMapWarnings = 0x41c; // char : 0
		constexpr auto bHighPriorityLoading = 0x41c; // char : 0
		constexpr auto bHighPriorityLoadingLocal = 0x41c; // char : 0
		constexpr auto bUseProcBuildingRulesetOverride = 0x41c; // char : 0
		constexpr auto bInteractiveMode = 0x41c; // char : 0
		constexpr auto bDisableAllStaticPhysXObjects = 0x41c; // char : 0
		constexpr auto bSupportDoubleBufferedPhysics = 0x41c; // char : 0
		constexpr auto bPhysicsIgnoreDeltaTime = 0x41c; // char : 0
		constexpr auto bEnableChanceOfPhysicsChunkOverride = 0x420; // char : 1
		constexpr auto bLimitExplosionChunkSize = 0x420; // char : 1
		constexpr auto bLimitDamageChunkSize = 0x420; // char : 1
		constexpr auto bPrecomputeVisibility = 0x420; // char : 1
		constexpr auto bPlaceCellsOnSurfaces = 0x420; // char : 1
		constexpr auto bAllowTemporalAA = 0x420; // char : 1
		constexpr auto bUseGlobalIllumination = 0x420; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x420; // char : 1
		constexpr auto bHaveActiveCrowd = 0x420; // char : 0
		constexpr auto bAllowHostMigration = 0x420; // char : 0
		constexpr auto bGameplayFramePause = 0x420; // char : 0
		constexpr auto SquintModeKernelSize = 0x424; // float
		constexpr auto ZPrepassOverride = 0x428; // EZPrepassOverride
		constexpr auto NetMode = 0x429; // ENetMode
		constexpr auto NextTravelType = 0x42a; // ETravelType
		constexpr auto VisibilityAggressiveness = 0x42b; // EVisibilityAggressiveness
		constexpr auto PreferredLightmapType = 0x42c; // EPreferredLightmapType
		constexpr auto LevelLightingQuality = 0x42d; // ELightingBuildQuality
		constexpr auto ContributionCullOverrideHigh = 0x430; // float
		constexpr auto ContributionCullOverrideMedium = 0x434; // float
		constexpr auto ContributionCullOverrideLow = 0x438; // float
		constexpr auto HighestPriorityPostProcessVolume = 0x43c; // ObjectProperty
		constexpr auto DefaultReverbSettings = 0x444; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x454; // FInteriorSettings
		constexpr auto FogStart = 0x484; // float
		constexpr auto FogEnd = 0x488; // float
		constexpr auto FogColor = 0x48c; // FColor
		constexpr auto BumpEnd = 0x490; // float
		constexpr auto HighestPriorityReverbVolume = 0x494; // ObjectProperty
		constexpr auto MassiveLODOverrideVolumes = 0x49c; // TArray<ObjectProperty>
		constexpr auto PortalVolumes = 0x4ac; // TArray<ObjectProperty>
		constexpr auto EnvironmentVolumes = 0x4bc; // TArray<ObjectProperty>
		constexpr auto StreamingLevels = 0x4cc; // TArray<ObjectProperty>
		constexpr auto LastTimeUnbuiltLightingWasEncountered = 0x4dc; // FDouble
		constexpr auto TimeDilation = 0x4e4; // float
		constexpr auto DemoPlayTimeDilation = 0x4e8; // float
		constexpr auto TimeSeconds = 0x4ec; // float
		constexpr auto RealTimeSeconds = 0x4f0; // float
		constexpr auto AudioTimeSeconds = 0x4f4; // float
		constexpr auto DeltaSeconds = 0x4f8; // float
		constexpr auto PauseDelay = 0x4fc; // float
		constexpr auto RealTimeToUnPause = 0x500; // float
		constexpr auto m_fRealDeltaSeconds = 0x504; // float
		constexpr auto Pauser = 0x508; // ObjectProperty
		constexpr auto DefaultTexture = 0x510; // ObjectProperty
		constexpr auto WireframeTexture = 0x518; // ObjectProperty
		constexpr auto WhiteSquareTexture = 0x520; // ObjectProperty
		constexpr auto LargeVertex = 0x528; // ObjectProperty
		constexpr auto BSPVertex = 0x530; // ObjectProperty
		constexpr auto DeferredExecs = 0x538; // TArray<FString>
		constexpr auto GRI = 0x548; // ObjectProperty
		constexpr auto ComputerName = 0x550; // FString
		constexpr auto EngineVersion = 0x560; // FString
		constexpr auto MinNetVersion = 0x570; // FString
		constexpr auto Game = 0x580; // ObjectProperty
		constexpr auto StallZ = 0x588; // float
		constexpr auto WorldGravityZ = 0x58c; // float
		constexpr auto DefaultGravityZ = 0x590; // float
		constexpr auto GlobalGravityZ = 0x594; // float
		constexpr auto RBPhysicsGravityScaling = 0x598; // float
		constexpr auto m_fAudioAltitudeCeiling = 0x59c; // float
		constexpr auto m_fAudioAltitudeFloor = 0x5a0; // float
		constexpr auto NavigationPointList = 0x5a4; // ObjectProperty
		constexpr auto ControllerList = 0x5ac; // ObjectProperty
		constexpr auto PawnList = 0x5b4; // ObjectProperty
		constexpr auto CoverList = 0x5bc; // ObjectProperty
		constexpr auto PylonList = 0x5c4; // ObjectProperty
		constexpr auto MoveRepSize = 0x5cc; // float
		constexpr auto ReplicationViewers = 0x5d0; // TArray<FNetViewer>
		constexpr auto NextURL = 0x5e0; // FString
		constexpr auto NextSwitchCountdown = 0x5f0; // float
		constexpr auto PackedLightAndShadowMapTextureSize = 0x5f4; // int32_t
		constexpr auto DefaultColorScale = 0x5f8; // FVector
		constexpr auto DefaultGameType = 0x604; // AGameInfo*
		constexpr auto GameTypesSupportedOnThisMap = 0x60c; // TArray<AGameInfo*>
		constexpr auto ClientDestroyedActorContent = 0x61c; // TArray<ObjectProperty>
		constexpr auto PreparingLevelNames = 0x62c; // TArray<FName>
		constexpr auto CommittedPersistentLevelName = 0x63c; // FName
		constexpr auto PersistentMapForcedObjects = 0x644; // ObjectProperty
		constexpr auto MusicComp = 0x64c; // ComponentProperty
		constexpr auto CurrentMusicTrack = 0x654; // FMusicTrackStruct
		constexpr auto ReplicatedMusicTrack = 0x680; // FMusicTrackStruct
		constexpr auto Title = 0x6ac; // FString
		constexpr auto Author = 0x6bc; // FString
		constexpr auto MyMapInfo = 0x6cc; // ObjectProperty
		constexpr auto EmitterPoolClassPath = 0x6d4; // FString
		constexpr auto MyEmitterPool = 0x6e4; // ObjectProperty
		constexpr auto SecondaryEmitterPoolClassPath = 0x6ec; // FString
		constexpr auto MySecondaryEmitterPool = 0x6fc; // ObjectProperty
		constexpr auto DecalManagerClassPath = 0x704; // FString
		constexpr auto MyDecalManager = 0x714; // ObjectProperty
		constexpr auto FractureManagerClassPath = 0x71c; // FString
		constexpr auto MyFractureManager = 0x72c; // ObjectProperty
		constexpr auto ParticleEventManagerClassPath = 0x734; // FString
		constexpr auto MyParticleEventManager = 0x744; // ObjectProperty
		constexpr auto MySoundComponentPool = 0x74c; // ObjectProperty
		constexpr auto ProcBuildingRulesetOverride = 0x754; // ObjectProperty
		constexpr auto SkelMeshCompTickTagCount = 0x75c; // int32_t
		constexpr auto MaxPhysicsDeltaTime = 0x760; // float
		constexpr auto MaxPhysicsSubsteps = 0x764; // int32_t
		constexpr auto PhysicsProperties = 0x768; // FPhysXSceneProperties
		constexpr auto CompartmentRunFrames = 0x7a4; // TArray<FCompartmentRunList>
		constexpr auto DefaultSkinWidth = 0x7b4; // float
		constexpr auto ApexLODResourceBudget = 0x7b8; // float
		constexpr auto ApexDestructionLODResourceValue = 0x7bc; // float
		constexpr auto ApexClothingLODResourceValue = 0x7c0; // float
		constexpr auto DestructibleSettings = 0x7c4; // FApexModuleDestructibleSettings
		constexpr auto EmitterVertical = 0x7d8; // ObjectProperty
		constexpr auto VerticalProperties = 0x7e0; // FPhysXVerticalProperties
		constexpr auto WorldAttractors = 0x7f8; // TArray<FPointer>
		constexpr auto ChanceOfPhysicsChunkOverride = 0x808; // float
		constexpr auto MaxExplosionChunkSize = 0x80c; // float
		constexpr auto MaxDamageChunkSize = 0x810; // float
		constexpr auto FractureExplosionVelScale = 0x814; // float
		constexpr auto MaxNumFacturedChunksToSpawnInAFrame = 0x818; // int32_t
		constexpr auto NumFacturedChunksSpawnedThisFrame = 0x81c; // int32_t
		constexpr auto FracturedMeshWeaponDamage = 0x820; // float
		constexpr auto VisibilityCellSize = 0x824; // int32_t
		constexpr auto CharacterLitIndirectBrightness = 0x828; // float
		constexpr auto CharacterLitIndirectContrastFactor = 0x82c; // float
		constexpr auto CharacterShadowedIndirectBrightness = 0x830; // float
		constexpr auto CharacterShadowedIndirectContrastFactor = 0x834; // float
		constexpr auto CharacterLightingContrastFactor = 0x838; // float
		constexpr auto ImageReflectionEnvironmentTexture = 0x83c; // ObjectProperty
		constexpr auto ImageReflectionEnvironmentColor = 0x844; // FLinearColor
		constexpr auto ImageReflectionEnvironmentRotation = 0x854; // float
		constexpr auto ScreenMessages = 0x858; // FMap_Mirror
		constexpr auto PriorityScreenMessages = 0x8a0; // TArray<FScreenMessageString>
		constexpr auto LightmassSettings = 0x8b0; // FLightmassWorldInfoSettings
		constexpr auto NavMeshPathConstraintCache = 0x908; // TMap<None, None>
		constexpr auto NavMeshPathGoalEvaluatorCache = 0x950; // TMap<None, None>
		constexpr auto PopulationManager = 0x998; // ObjectProperty
		constexpr auto PeerHostMigration = 0x9a0; // FHostMigrationState
		constexpr auto HostMigrationTimeout = 0x9c0; // float
		constexpr auto m_fPerfParticleScale = 0x9c4; // float
		constexpr auto m_MiniMapTexture = 0x9c8; // ObjectProperty
		constexpr auto m_fMiniMapSizeValue = 0x9d0; // float
		constexpr auto m_fMinimumPayloadTravelTime = 0x9d4; // float
		constexpr auto FirstPhysicsVolume = 0x9d8; // ObjectProperty
	}

	namespace n_ATgPawn_Turret {
		constexpr auto r_bLockdownIsOn = 0x2ed4; // char : 1
		constexpr auto r_bHasHealingStation = 0x2ed4; // char : 1
		constexpr auto m_bFirstAidNuggetOverride = 0x2ed4; // char : 1
		constexpr auto m_nLockdownPostureID = 0x2ed8; // int32_t
		constexpr auto m_SpawningDevice = 0x2edc; // ObjectProperty
		constexpr auto m_TargetingNotificationAkEvent = 0x2ee4; // ObjectProperty
		constexpr auto m_PrevTargetActor = 0x2eec; // ObjectProperty
	}

	namespace n_UUIComponent_ChestPanel {
		constexpr auto m_nChestBundleIndex = 0x1a8; // int32_t
		constexpr auto m_nChestQuantity = 0x1ac; // int32_t
		constexpr auto m_nCouponItemId = 0x1b0; // int32_t
		constexpr auto m_dwCrystalCost = 0x1b4; // Fdword
		constexpr auto m_dwGoldCost = 0x1b8; // Fdword
		constexpr auto m_dwVIPPointCost = 0x1bc; // Fdword
		constexpr auto m_dwOriginalCrystalCost = 0x1c0; // Fdword
		constexpr auto m_mcCursor = 0x1c4; // ObjectProperty
		constexpr auto m_mcPriceContainer = 0x1cc; // ObjectProperty
		constexpr auto m_mcDropdown = 0x1d4; // ObjectProperty
		constexpr auto m_mcDropdownMask = 0x1dc; // ObjectProperty
		constexpr auto m_mcDropdownFrame = 0x1e4; // ObjectProperty
		constexpr auto m_mcQuantityDropdownPrompt = 0x1ec; // ObjectProperty
		constexpr auto m_mcQuantityDropdownPrompt_Inner = 0x1f4; // ObjectProperty
		constexpr auto m_grDropdown = 0x1fc; // ObjectProperty
		constexpr auto m_grBundledChest = 0x204; // ObjectProperty
		constexpr auto m_mcPurchase = 0x20c; // ObjectProperty
		constexpr auto m_mcPurchaseQuantity = 0x214; // ObjectProperty
		constexpr auto m_mcQuantityDropdownToggle = 0x21c; // ObjectProperty
		constexpr auto m_mcQuantityDropdownToggle_Inner = 0x224; // ObjectProperty
		constexpr auto m_mcDropdownOptions = 0x22c; // ObjectProperty [0x5]
		constexpr auto m_ToggleDropdownInputAction = 0x254; // ObjectProperty
		constexpr auto m_bDropdownOpen = 0x25c; // char : 1
		constexpr auto m_bDetailsIsOpenChest = 0x25c; // char : 1
	}

	namespace n_UTgMenuMeshInfo {
		constexpr auto MeshInfo = 0x60; // FLobbyMeshInfo
		constexpr auto Children = 0xc4; // TArray<ObjectProperty>
		constexpr auto ParentSocketName = 0xd4; // FName
		constexpr auto AttachedParticleSystems = 0xdc; // TArray<FParticleSystemInfo>
	}

	namespace n_UPComUIManagerBase {
		constexpr auto m_bDebugDraw = 0x60; // char : 1
		constexpr auto m_bLocalLoad = 0x60; // char : 1
		constexpr auto m_cachedImages = 0x64; // TArray<FManagerImage>
		constexpr auto m_strJson = 0x74; // FString
	}

	namespace n_USeqAct_SetDOFParams {
		constexpr auto FalloffExponent = 0x120; // float
		constexpr auto BlurKernelSize = 0x124; // float
		constexpr auto MaxNearBlurAmount = 0x128; // float
		constexpr auto MinBlurAmount = 0x12c; // float
		constexpr auto MaxFarBlurAmount = 0x130; // float
		constexpr auto FocusInnerRadius = 0x134; // float
		constexpr auto FocusDistance = 0x138; // float
		constexpr auto FocusPosition = 0x13c; // FVector
		constexpr auto InterpolateSeconds = 0x148; // float
		constexpr auto InterpolateElapsed = 0x14c; // float
		constexpr auto OldFalloffExponent = 0x150; // float
		constexpr auto OldBlurKernelSize = 0x154; // float
		constexpr auto OldMaxNearBlurAmount = 0x158; // float
		constexpr auto OldMinBlurAmount = 0x15c; // float
		constexpr auto OldMaxFarBlurAmount = 0x160; // float
		constexpr auto OldFocusInnerRadius = 0x164; // float
		constexpr auto OldFocusDistance = 0x168; // float
		constexpr auto OldFocusPosition = 0x16c; // FVector
	}

	namespace n_UCoverMeshComponent {
		constexpr auto Meshes = 0x310; // TArray<FCoverMeshes>
		constexpr auto LocationOffset = 0x320; // FVector
		constexpr auto AutoAdjustOn = 0x32c; // ObjectProperty
		constexpr auto AutoAdjustOff = 0x334; // ObjectProperty
		constexpr auto Disabled = 0x33c; // ObjectProperty
		constexpr auto bShowWhenNotSelected = 0x344; // char : 1
	}

	namespace n_UTgInventoryObject_Listen_HitWithDevice {
		constexpr auto m_bIgnoreChildDevice = 0xd0; // char : 1
		constexpr auto m_bAutoProcOnInhand = 0xd0; // char : 1
		constexpr auto m_bAutoProcOnAsIfInhand = 0xd0; // char : 1
		constexpr auto m_bSkipActiveCheck = 0xd0; // char : 1
		constexpr auto m_bSkipStartCooldown = 0xd0; // char : 1
		constexpr auto m_bUseAllyTargets = 0xd0; // char : 1
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x6c; // FRawDistributionFloat
		constexpr auto Velocity = 0x90; // FRawDistributionFloat
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_ATgAIController_BehaviorRoyale {
		constexpr auto m_vDropLocation = 0x93c; // FVector
		constexpr auto m_InteractTarget = 0x948; // ObjectProperty
		constexpr auto m_fOpenedChestTime = 0x950; // float
		constexpr auto m_fMoveToFogCenterTime = 0x954; // float
		constexpr auto m_fFogCenterThrottleTime = 0x958; // float
		constexpr auto NearbyChests = 0x95c; // TArray<ObjectProperty>
		constexpr auto NearbyItems = 0x96c; // TArray<ObjectProperty>
		constexpr auto m_bIsPathingStuck = 0x97c; // char : 1
		constexpr auto m_bSafeFromFog = 0x97c; // char : 1
		constexpr auto m_fUnstuckTime = 0x980; // float
		constexpr auto m_nLastRoundNotSafeFromFog = 0x984; // int32_t
		constexpr auto m_fTimeCombatTargetUntrackable = 0x988; // float
		constexpr auto m_fUntrackableDuration = 0x98c; // float
		constexpr auto m_fUntrackableMovementDelta = 0x990; // float
		constexpr auto m_vLastCombatTargetLocation = 0x994; // FVector
		constexpr auto m_DifficultyConfigs = 0x9a0; // TArray<FDifficultyConfig>
	}

	namespace n_UActorComponent {
		constexpr auto Scene = 0x70; // FPointer
		constexpr auto Owner = 0x78; // ObjectProperty
		constexpr auto bAttached = 0x80; // char : 1
		constexpr auto bTickInEditor = 0x80; // char : 1
		constexpr auto bNeedsReattach = 0x80; // char : 1
		constexpr auto bNeedsUpdateTransform = 0x80; // char : 1
		constexpr auto TickGroup = 0x84; // ETickingGroup
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector
		constexpr auto bLockAxes = 0x90; // char : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x140; // float
		constexpr auto Channel = 0x144; // ETextureColorChannel
	}

	namespace n_UTgAIBehaviorCondition_NearbyGodDelta {
		constexpr auto GodThreshold = 0x9c; // int32_t
		constexpr auto bMustBeInForwardCone = 0xa0; // char : 1
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UInterpTrackNotify {
		constexpr auto Node = 0xa0; // ObjectProperty
		constexpr auto ParentNodeName = 0xa8; // FName
		constexpr auto OuterSequence = 0xb0; // ObjectProperty
		constexpr auto OuterSet = 0xb8; // ObjectProperty
		constexpr auto NotifyTrack = 0xc0; // TArray<FNotifyTrackKey>
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Height = 0xe4; // FExpressionInput
		constexpr auto HeightRatioInput = 0x118; // FExpressionInput
		constexpr auto HeightRatio = 0x14c; // float
		constexpr auto ReferencePlane = 0x150; // float
	}

	namespace n_UFluidInfluenceComponent {
		constexpr auto bActive = 0x24c; // char : 1
		constexpr auto RaindropFillEntireFluid = 0x24c; // char : 1
		constexpr auto bIsToggleTriggered = 0x24c; // char : 1
		constexpr auto FluidActor = 0x250; // ObjectProperty
		constexpr auto InfluenceType = 0x258; // EInfluenceType
		constexpr auto MaxDistance = 0x25c; // float
		constexpr auto WaveStrength = 0x260; // float
		constexpr auto WaveFrequency = 0x264; // float
		constexpr auto WavePhase = 0x268; // float
		constexpr auto WaveRadius = 0x26c; // float
		constexpr auto RaindropAreaRadius = 0x270; // float
		constexpr auto RaindropRadius = 0x274; // float
		constexpr auto RaindropStrength = 0x278; // float
		constexpr auto RaindropRate = 0x27c; // float
		constexpr auto FlowSpeed = 0x280; // float
		constexpr auto FlowNumRipples = 0x284; // int32_t
		constexpr auto FlowSideMotionRadius = 0x288; // float
		constexpr auto FlowWaveRadius = 0x28c; // float
		constexpr auto FlowStrength = 0x290; // float
		constexpr auto FlowFrequency = 0x294; // float
		constexpr auto SphereOuterRadius = 0x298; // float
		constexpr auto SphereInnerRadius = 0x29c; // float
		constexpr auto SphereStrength = 0x2a0; // float
		constexpr auto CurrentAngle = 0x2a4; // float
		constexpr auto CurrentTimer = 0x2a8; // float
		constexpr auto CurrentFluidActor = 0x2ac; // ObjectProperty
	}

	namespace n_AGameCrowdAgentSkeletal {
		constexpr auto SkeletalMeshComponent = 0x500; // ComponentProperty
		constexpr auto SpeedBlendNode = 0x508; // ObjectProperty
		constexpr auto FullBodySlot = 0x510; // ObjectProperty
		constexpr auto ActionSeqNode = 0x518; // ObjectProperty
		constexpr auto WalkSeqNode = 0x520; // ObjectProperty
		constexpr auto RunSeqNode = 0x528; // ObjectProperty
		constexpr auto AgentTree = 0x530; // ObjectProperty
		constexpr auto WalkAnimNames = 0x538; // TArray<FName>
		constexpr auto RunAnimNames = 0x548; // TArray<FName>
		constexpr auto IdleAnimNames = 0x558; // TArray<FName>
		constexpr auto DeathAnimNames = 0x568; // TArray<FName>
		constexpr auto SpeedBlendStart = 0x578; // float
		constexpr auto SpeedBlendEnd = 0x57c; // float
		constexpr auto AnimVelRate = 0x580; // float
		constexpr auto MaxSpeedBlendChangeSpeed = 0x584; // float
		constexpr auto MoveSyncGroupName = 0x588; // FName
		constexpr auto Attachments = 0x590; // TArray<FGameCrowdAttachmentList>
		constexpr auto MaxTargetAcquireTime = 0x5a0; // float
		constexpr auto bUseRootMotionVelocity = 0x5a4; // char : 1
		constexpr auto bAllowSkeletonUpdateChangeBasedOnTickResult = 0x5a4; // char : 1
		constexpr auto bTickWhenNotVisible = 0x5a4; // char : 1
		constexpr auto bIsPlayingIdleAnimation = 0x5a4; // char : 1
		constexpr auto bIsPlayingDeathAnimation = 0x5a4; // char : 1
		constexpr auto bIsPlayingImportantAnimation = 0x5a4; // char : 1
		constexpr auto bAnimateThisTick = 0x5a4; // char : 1
		constexpr auto NotVisibleDisableTickTime = 0x5a8; // float
		constexpr auto MaxAnimationDistance = 0x5ac; // float
		constexpr auto MaxAnimationDistanceSq = 0x5b0; // float
	}

	namespace n_UVivoxClosureOnPrivilegeLevelChecked {
		constexpr auto m_ChannelJoinCount = 0x70; // int32_t
	}

	namespace n_UPBRuleNodeEdgeMesh {
		constexpr auto FlatThreshold = 0x70; // float
		constexpr auto MainXPullIn = 0x74; // float
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x68; // ObjectProperty
		constexpr auto TinyFontName = 0x70; // FString
		constexpr auto SmallFont = 0x80; // ObjectProperty
		constexpr auto SmallFontName = 0x88; // FString
		constexpr auto MediumFont = 0x98; // ObjectProperty
		constexpr auto MediumFontName = 0xa0; // FString
		constexpr auto LargeFont = 0xb0; // ObjectProperty
		constexpr auto LargeFontName = 0xb8; // FString
		constexpr auto SubtitleFont = 0xc8; // ObjectProperty
		constexpr auto SubtitleFontName = 0xd0; // FString
		constexpr auto AdditionalFonts = 0xe0; // TArray<ObjectProperty>
		constexpr auto AdditionalFontNames = 0xf0; // TArray<FString>
		constexpr auto ConsoleClass = 0x100; // UConsole*
		constexpr auto ConsoleClassName = 0x108; // FString
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FString
		constexpr auto DataStoreClientClass = 0x130; // UDataStoreClient*
		constexpr auto DataStoreClientClassName = 0x138; // FString
		constexpr auto LocalPlayerClass = 0x148; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x150; // FString
		constexpr auto DefaultMaterial = 0x160; // ObjectProperty
		constexpr auto DefaultMaterialName = 0x168; // FString
		constexpr auto DefaultDecalMaterial = 0x178; // ObjectProperty
		constexpr auto DefaultDecalMaterialName = 0x180; // FString
		constexpr auto DefaultTexture = 0x190; // ObjectProperty
		constexpr auto DefaultTextureName = 0x198; // FString
		constexpr auto WireframeMaterial = 0x1a8; // ObjectProperty
		constexpr auto WireframeMaterialName = 0x1b0; // FString
		constexpr auto EmissiveTexturedMaterial = 0x1c0; // ObjectProperty
		constexpr auto EmissiveTexturedMaterialName = 0x1c8; // FString
		constexpr auto GeomMaterial = 0x1d8; // ObjectProperty
		constexpr auto GeomMaterialName = 0x1e0; // FString
		constexpr auto DefaultFogVolumeMaterial = 0x1f0; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterialName = 0x1f8; // FString
		constexpr auto TickMaterial = 0x208; // ObjectProperty
		constexpr auto TickMaterialName = 0x210; // FString
		constexpr auto CrossMaterial = 0x220; // ObjectProperty
		constexpr auto CrossMaterialName = 0x228; // FString
		constexpr auto LevelColorationLitMaterial = 0x238; // ObjectProperty
		constexpr auto LevelColorationLitMaterialName = 0x240; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x250; // ObjectProperty
		constexpr auto LevelColorationUnlitMaterialName = 0x258; // FString
		constexpr auto LightingTexelDensityMaterial = 0x268; // ObjectProperty
		constexpr auto LightingTexelDensityName = 0x270; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x280; // ObjectProperty
		constexpr auto ShadedLevelColorationLitMaterialName = 0x288; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x298; // ObjectProperty
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x2a0; // FString
		constexpr auto RemoveSurfaceMaterial = 0x2b0; // ObjectProperty
		constexpr auto RemoveSurfaceMaterialName = 0x2b8; // FString
		constexpr auto VertexColorMaterial = 0x2c8; // ObjectProperty
		constexpr auto VertexColorMaterialName = 0x2d0; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x2e0; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x2e8; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x2f8; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x300; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x310; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x318; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x328; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x330; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x340; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x348; // FString
		constexpr auto HeatmapMaterial = 0x358; // ObjectProperty
		constexpr auto HeatmapMaterialName = 0x360; // FString
		constexpr auto BoneWeightMaterial = 0x370; // ObjectProperty
		constexpr auto BoneWeightMaterialName = 0x378; // FString
		constexpr auto TangentColorMaterial = 0x388; // ObjectProperty
		constexpr auto TangentColorMaterialName = 0x390; // FString
		constexpr auto MobileEmulationMasterMaterial = 0x3a0; // ObjectProperty
		constexpr auto MobileEmulationMasterMaterialName = 0x3a8; // FString
		constexpr auto ProcBuildingSimpleMaterial = 0x3b8; // ObjectProperty
		constexpr auto ProcBuildingSimpleMaterialName = 0x3c0; // FString
		constexpr auto BuildingQuadStaticMesh = 0x3d0; // ObjectProperty
		constexpr auto BuildingQuadStaticMeshName = 0x3d8; // FString
		constexpr auto ProcBuildingLODColorTexelsPerWorldUnit = 0x3e8; // float
		constexpr auto ProcBuildingLODLightingTexelsPerWorldUnit = 0x3ec; // float
		constexpr auto MaxProcBuildingLODColorTextureSize = 0x3f0; // int32_t
		constexpr auto MaxProcBuildingLODLightingTextureSize = 0x3f4; // int32_t
		constexpr auto UseProcBuildingLODTextureCropping = 0x3f8; // char : 1
		constexpr auto ForcePowerOfTwoProcBuildingLODTextures = 0x3f8; // char : 1
		constexpr auto bCombineSimilarMappings = 0x3f8; // char : 1
		constexpr auto bRenderLightMapDensityGrayscale = 0x3f8; // char : 1
		constexpr auto bScreenshotRequested = 0x3f8; // char : 1
		constexpr auto bUseSound = 0x3f8; // char : 1
		constexpr auto bUseBackgroundLevelStreaming = 0x3f8; // char : 1
		constexpr auto bSubtitlesEnabled = 0x3f8; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x3f8; // char : 0
		constexpr auto bSmoothFrameRate = 0x3f8; // char : 0
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x3f8; // char : 0
		constexpr auto bShouldGenerateSimpleLightmaps = 0x3f8; // char : 0
		constexpr auto bForceStaticTerrain = 0x3f8; // char : 0
		constexpr auto bForceCPUSkinning = 0x3f8; // char : 0
		constexpr auto bUsePostProcessEffects = 0x3f8; // char : 0
		constexpr auto bOnScreenKismetWarnings = 0x3f8; // char : 0
		constexpr auto bEnableKismetLogging = 0x3f8; // char : 0
		constexpr auto bAllowMatureLanguage = 0x3f8; // char : 0
		constexpr auto bDisablePhysXHardwareSupport = 0x3f8; // char : 0
		constexpr auto bPauseOnLossOfFocus = 0x3f8; // char : 0
		constexpr auto bCheckParticleRenderSize = 0x3f8; // char : 0
		constexpr auto bEnableColorClear = 0x3f8; // char : 0
		constexpr auto bAreConstraintsDirty = 0x3f8; // char : 0
		constexpr auto bHasPendingGlobalReattach = 0x3f8; // char : 0
		constexpr auto bEnableOnScreenDebugMessages = 0x3f8; // char : 0
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x3f8; // char : 0
		constexpr auto bSuppressMapWarnings = 0x3f8; // char : 0
		constexpr auto bCookSeparateSharedMPGameContent = 0x3f8; // char : 0
		constexpr auto bUseRecastNavMesh = 0x3f8; // char : 0
		constexpr auto bDisableAILogging = 0x3f8; // char : 0
		constexpr auto bUseNormalMapsForSimpleLightMaps = 0x3f8; // char : 0
		constexpr auto bStartWithMatineeCapture = 0x3f8; // char : 0
		constexpr auto bCompressMatineeCapture = 0x3fc; // char : 1
		constexpr auto bLockReadOnlyLevels = 0x3fc; // char : 1
		constexpr auto MaxRMSDForCombiningMappings = 0x400; // float
		constexpr auto ImageReflectionTextureSize = 0x404; // int32_t
		constexpr auto LightingOnlyBrightness = 0x408; // FLinearColor
		constexpr auto LightComplexityColors = 0x418; // TArray<FColor>
		constexpr auto ShaderComplexityColors = 0x428; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x438; // float
		constexpr auto MinTextureDensity = 0x43c; // float
		constexpr auto IdealTextureDensity = 0x440; // float
		constexpr auto MaxTextureDensity = 0x444; // float
		constexpr auto MinLightMapDensity = 0x448; // float
		constexpr auto IdealLightMapDensity = 0x44c; // float
		constexpr auto MaxLightMapDensity = 0x450; // float
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x454; // float
		constexpr auto RenderLightMapDensityColorScale = 0x458; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x45c; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x46c; // FLinearColor
		constexpr auto StatColorMappings = 0x47c; // TArray<FStatColorMapping>
		constexpr auto EditorBrushMaterial = 0x48c; // ObjectProperty
		constexpr auto EditorBrushMaterialName = 0x494; // FString
		constexpr auto DefaultPhysMaterial = 0x4a4; // ObjectProperty
		constexpr auto DefaultPhysMaterialName = 0x4ac; // FString
		constexpr auto LandscapeHolePhysMaterial = 0x4bc; // ObjectProperty
		constexpr auto LandscapeHolePhysMaterialName = 0x4c4; // FString
		constexpr auto ApexDamageParams = 0x4d4; // ObjectProperty
		constexpr auto ApexDamageParamsName = 0x4dc; // FString
		constexpr auto TerrainErrorMaterial = 0x4ec; // ObjectProperty
		constexpr auto TerrainErrorMaterialName = 0x4f4; // FString
		constexpr auto TerrainMaterialMaxTextureCount = 0x504; // int32_t
		constexpr auto TerrainTessellationCheckCount = 0x508; // int32_t
		constexpr auto TerrainTessellationCheckDistance = 0x50c; // float
		constexpr auto OnlineSubsystemClass = 0x510; // UOnlineSubsystem*
		constexpr auto DefaultOnlineSubsystemName = 0x518; // FString
		constexpr auto DefaultPostProcess = 0x528; // ObjectProperty
		constexpr auto DefaultPostProcessName = 0x530; // FString
		constexpr auto ThumbnailSkeletalMeshPostProcess = 0x540; // ObjectProperty
		constexpr auto ThumbnailSkeletalMeshPostProcessName = 0x548; // FString
		constexpr auto ThumbnailParticleSystemPostProcess = 0x558; // ObjectProperty
		constexpr auto ThumbnailParticleSystemPostProcessName = 0x560; // FString
		constexpr auto ThumbnailMaterialPostProcess = 0x570; // ObjectProperty
		constexpr auto ThumbnailMaterialPostProcessName = 0x578; // FString
		constexpr auto DefaultUIScenePostProcess = 0x588; // ObjectProperty
		constexpr auto DefaultUIScenePostProcessName = 0x590; // FString
		constexpr auto DefaultUICaretMaterial = 0x5a0; // ObjectProperty
		constexpr auto DefaultUICaretMaterialName = 0x5a8; // FString
		constexpr auto SceneCaptureReflectActorMaterial = 0x5b8; // ObjectProperty
		constexpr auto SceneCaptureReflectActorMaterialName = 0x5c0; // FString
		constexpr auto SceneCaptureCubeActorMaterial = 0x5d0; // ObjectProperty
		constexpr auto SceneCaptureCubeActorMaterialName = 0x5d8; // FString
		constexpr auto ScreenDoorNoiseTexture = 0x5e8; // ObjectProperty
		constexpr auto ScreenDoorNoiseTextureName = 0x5f0; // FString
		constexpr auto ImageGrainNoiseTexture = 0x600; // ObjectProperty
		constexpr auto ImageGrainNoiseTextureName = 0x608; // FString
		constexpr auto RandomAngleTexture = 0x618; // ObjectProperty
		constexpr auto RandomAngleTextureName = 0x620; // FString
		constexpr auto RandomNormalTexture = 0x630; // ObjectProperty
		constexpr auto RandomNormalTextureName = 0x638; // FString
		constexpr auto RandomMirrorDiscTexture = 0x648; // ObjectProperty
		constexpr auto RandomMirrorDiscTextureName = 0x650; // FString
		constexpr auto WeightMapPlaceholderTexture = 0x660; // ObjectProperty
		constexpr auto WeightMapPlaceholderTextureName = 0x668; // FString
		constexpr auto LightMapDensityTexture = 0x678; // ObjectProperty
		constexpr auto LightMapDensityTextureName = 0x680; // FString
		constexpr auto LightMapDensityNormal = 0x690; // ObjectProperty
		constexpr auto LightMapDensityNormalName = 0x698; // FString
		constexpr auto DefaultSound = 0x6a8; // ObjectProperty
		constexpr auto DefaultSoundName = 0x6b0; // FString
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x6c0; // float
		constexpr auto MaxTimeBetweenPurgingPendingKillObjects = 0x6c4; // float
		constexpr auto GarbageCollectionDelayMinimumMemoryMB = 0x6c8; // int32_t
		constexpr auto Client = 0x6cc; // ObjectProperty
		constexpr auto GamePlayers = 0x6d4; // TArray<ObjectProperty>
		constexpr auto GameViewport = 0x6e4; // ObjectProperty
		constexpr auto DeferredCommands = 0x6ec; // TArray<FString>
		constexpr auto TickCycles = 0x6fc; // int32_t
		constexpr auto GameCycles = 0x700; // int32_t
		constexpr auto ClientCycles = 0x704; // int32_t
		constexpr auto MaxSmoothedFrameRate = 0x708; // float
		constexpr auto MinSmoothedFrameRate = 0x70c; // float
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x710; // int32_t
		constexpr auto RemoteControlExec = 0x714; // FPointer
		constexpr auto MobileMaterialEmulator = 0x71c; // FPointer
		constexpr auto C_WorldBox = 0x724; // FColor
		constexpr auto C_BrushWire = 0x728; // FColor
		constexpr auto C_AddWire = 0x72c; // FColor
		constexpr auto C_SubtractWire = 0x730; // FColor
		constexpr auto C_SemiSolidWire = 0x734; // FColor
		constexpr auto C_NonSolidWire = 0x738; // FColor
		constexpr auto C_WireBackground = 0x73c; // FColor
		constexpr auto C_ScaleBoxHi = 0x740; // FColor
		constexpr auto C_VolumeCollision = 0x744; // FColor
		constexpr auto C_BSPCollision = 0x748; // FColor
		constexpr auto C_OrthoBackground = 0x74c; // FColor
		constexpr auto C_Volume = 0x750; // FColor
		constexpr auto C_BrushShape = 0x754; // FColor
		constexpr auto StreamingDistanceFactor = 0x758; // float
		constexpr auto ScoutClassName = 0x75c; // FString
		constexpr auto TransitionType = 0x76c; // ETransitionType
		constexpr auto TransitionDescription = 0x770; // FString
		constexpr auto TransitionGameType = 0x780; // FString
		constexpr auto MeshLODRange = 0x790; // float
		constexpr auto CameraRotationThreshold = 0x794; // float
		constexpr auto CameraTranslationThreshold = 0x798; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x79c; // float
		constexpr auto PercentUnoccludedRequeries = 0x7a0; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x7a4; // float
		constexpr auto MaxFluidNumVerts = 0x7a8; // int32_t
		constexpr auto FluidSimulationTimeLimit = 0x7ac; // float
		constexpr auto MaxParticleResize = 0x7b0; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x7b4; // int32_t
		constexpr auto MaxParticleVertexMemory = 0x7b8; // int32_t
		constexpr auto MaxParticleSpriteCount = 0x7bc; // int32_t
		constexpr auto MaxParticleSubUVCount = 0x7c0; // int32_t
		constexpr auto BeginUPTryCount = 0x7c4; // int32_t
		constexpr auto PendingDroppedNotes = 0x7c8; // TArray<FDropNoteInfo>
		constexpr auto DynamicCoverMeshComponentName = 0x7d8; // FString
		constexpr auto NetClientTicksPerSecond = 0x7e8; // float
		constexpr auto MaxTrackedOcclusionIncrement = 0x7ec; // float
		constexpr auto TrackedOcclusionStepSize = 0x7f0; // float
		constexpr auto DefaultSelectedMaterialColor = 0x7f4; // FLinearColor
		constexpr auto DefaultHoveredMaterialColor = 0x804; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x814; // FLinearColor
		constexpr auto UnselectedMaterialColor = 0x824; // FLinearColor
		constexpr auto IgnoreSimulatedFuncWarnings = 0x834; // TArray<FName>
		constexpr auto ScreenSaverInhibitorSemaphore = 0x844; // int32_t
		constexpr auto ScreenSaverInhibitor = 0x848; // FPointer
		constexpr auto GlobalTranslationContext = 0x850; // ObjectProperty
		constexpr auto LoadingMovieStartTime = 0x858; // FDouble
		constexpr auto MatineeCaptureName = 0x860; // FString
		constexpr auto MatineePackageCaptureName = 0x870; // FString
		constexpr auto VisibleLevelsForMatineeCapture = 0x880; // FString
		constexpr auto MatineeCaptureFPS = 0x890; // int32_t
		constexpr auto MatineeCaptureType = 0x894; // int32_t
		constexpr auto PeerNetDriver = 0x898; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsTooFarFromLane {
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_USeqAct_SetMatInstTexParam {
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto NewTexture = 0x110; // ObjectProperty
		constexpr auto ParamName = 0x118; // FName
	}

	namespace n_UTgAnimBlendByNodeName {
		constexpr auto m_NodeNameToChildIndex = 0x168; // TArray<FNodeNameToChildIndex>
		constexpr auto m_CachedNodes = 0x178; // TArray<FRelevantNodeNameNodes>
		constexpr auto m_LastSuccessfulAnimNode = 0x188; // ObjectProperty
		constexpr auto m_bHasCachedNodes = 0x190; // char : 1
	}

	namespace n_ATgCharacterPerformance {
		constexpr auto BasePerformanceCapture = 0x628; // ObjectProperty
		constexpr auto CurrentCaptureState = 0x630; // EPComPerformanceCaptureState
		constexpr auto CharacterInput = 0x634; // FString
		constexpr auto SetInput = 0x644; // FString
		constexpr auto CurrentCharacterIndex = 0x654; // int32_t
		constexpr auto CurrentSkinIndex = 0x658; // int32_t
		constexpr auto CharacterPlacements = 0x65c; // TArray<ObjectProperty>
		constexpr auto CharactersToTest = 0x66c; // TArray<FString>
		constexpr auto AllSkinIDs = 0x67c; // TArray<int32_t>
		constexpr auto DeviceToCharacterIDPairs = 0x68c; // TArray<FDeviceToCharacterID>
		constexpr auto StatsPerSkin = 0x69c; // TArray<FPComPerformanceCaptureStatsPerSkin>
		constexpr auto CharacterPawns = 0x6ac; // TArray<ObjectProperty>
		constexpr auto ManifestGroup = 0x6bc; // ObjectProperty
		constexpr auto CharacterPerformanceUtility = 0x6c4; // FPointer
	}

	namespace n_ATgPawn_Engineer {
		constexpr auto m_pJetpackMesh = 0x310c; // ComponentProperty
		constexpr auto m_pJetpackSkelCons = 0x3114; // TArray<ObjectProperty>
		constexpr auto m_pJetpackSkelConNames = 0x3124; // TArray<FName>
		constexpr auto m_bBoosterUseConstantSpeedReduction = 0x3134; // char : 1
		constexpr auto m_bIsInBooster = 0x3134; // char : 1
		constexpr auto m_bInBoosterLockout = 0x3134; // char : 1
		constexpr auto m_fBoosterSpeedReductionRate = 0x3138; // float
		constexpr auto m_fBoosterEndTime = 0x313c; // float
		constexpr auto m_fBoosterLockoutTime = 0x3140; // float
		constexpr auto m_CachedBoosterDevice = 0x3144; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_SquadTargetHealthPercent {
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UUIWebBrowser {
		constexpr auto m_bAutoClose = 0x244; // char : 1
		constexpr auto m_bDrawBorder = 0x244; // char : 1
		constexpr auto m_mcFrame = 0x248; // ObjectProperty
		constexpr auto m_mcBrowserShape = 0x250; // ObjectProperty
		constexpr auto m_mcBackButton = 0x258; // ObjectProperty
		constexpr auto m_mcForwardButton = 0x260; // ObjectProperty
		constexpr auto m_mcCloseButton = 0x268; // ObjectProperty
	}

	namespace n_UFracturedSkinnedMeshComponent {
		constexpr auto ComponentSkinResources = 0x338; // FPointer
		constexpr auto FragmentTransforms = 0x340; // TArray<FMatrix>
		constexpr auto DependentComponents = 0x350; // TArray<ComponentProperty>
		constexpr auto bBecameVisible = 0x360; // char : 1
		constexpr auto bFragmentTransformsChanged = 0x360; // char : 1
	}

	namespace n_ATgDeploy_EpicLootCrate {
		constexpr auto m_fTimeoutTime = 0x4b8; // float
	}

	namespace n_ATgPlayerCamera {
		constexpr auto PlayerOwner = 0x604; // ObjectProperty
		constexpr auto CurrentCameraMod = 0x60c; // ObjectProperty
		constexpr auto DefaultCameraModuleClass = 0x614; // UTgCameraModule*
		constexpr auto CameraModuleList = 0x61c; // TArray<ObjectProperty>
		constexpr auto CamAngle = 0x62c; // FRotator
		constexpr auto m_bIsLowHealth = 0x638; // char : 1
		constexpr auto bTweening = 0x638; // char : 1
		constexpr auto bInterpolatingFOV = 0x638; // char : 1
		constexpr auto m_bPlayingHeal = 0x638; // char : 1
		constexpr auto CameraLocationLocalToTarget = 0x63c; // FVector
		constexpr auto CameraRotationLocalToTarget = 0x650; // FQuat
		constexpr auto fTweenStart = 0x660; // float
		constexpr auto fTweenDuration = 0x664; // float
		constexpr auto LastCameraMod = 0x668; // ObjectProperty
		constexpr auto fFOVInterpStartTimestamp = 0x670; // float
		constexpr auto fFOVInterpStartValue = 0x674; // float
		constexpr auto fFOVInterpEndTimestamp = 0x678; // float
		constexpr auto fLastAppliedFOV = 0x67c; // float
		constexpr auto m_fCollisionTraceExtent = 0x680; // float
		constexpr auto m_LowHealthCameraEffect = 0x684; // ObjectProperty
		constexpr auto m_BleedCameraEffect = 0x68c; // ObjectProperty
		constexpr auto m_DazeCameraEffect = 0x694; // ObjectProperty
		constexpr auto m_FireCameraEffect = 0x69c; // ObjectProperty
		constexpr auto m_FreezeCameraEffect = 0x6a4; // ObjectProperty
		constexpr auto m_HealCameraEffect = 0x6ac; // ObjectProperty
		constexpr auto m_KnockbackCameraEffect = 0x6b4; // ObjectProperty
		constexpr auto m_MarkCameraEffect = 0x6bc; // ObjectProperty
		constexpr auto m_PoisonCameraEffect = 0x6c4; // ObjectProperty
		constexpr auto m_VenomCameraEffect = 0x6cc; // ObjectProperty
		constexpr auto m_RootCameraEffect = 0x6d4; // ObjectProperty
		constexpr auto m_SlowCameraEffect = 0x6dc; // ObjectProperty
		constexpr auto m_StunCameraEffect = 0x6e4; // ObjectProperty
		constexpr auto m_HiddenCameraEffect = 0x6ec; // ObjectProperty
		constexpr auto m_GrassCameraEffect = 0x6f4; // ObjectProperty
		constexpr auto m_TeleportCameraEffect = 0x6fc; // ObjectProperty
		constexpr auto m_PreTeleportCameraEffect = 0x704; // ObjectProperty
		constexpr auto m_CCImmuneCameraEffect = 0x70c; // ObjectProperty
		constexpr auto m_CrippleCameraEffect = 0x714; // ObjectProperty
		constexpr auto m_RevealedCameraEffect = 0x71c; // ObjectProperty
		constexpr auto m_WeatherCameraEffect = 0x724; // ObjectProperty
		constexpr auto m_CurrentWeatherVolume = 0x72c; // ObjectProperty
		constexpr auto m_CameraEffects = 0x734; // TArray<ObjectProperty>
		constexpr auto m_nCameraEffectIdCounter = 0x744; // int32_t
		constexpr auto m_HealthDamageCameraEffectClasses = 0x748; // ATgEmitter_CameraEffect_DamageBase* [0x8]
		constexpr auto m_ShieldDamageCameraEffectClasses = 0x788; // ATgEmitter_CameraEffect_DamageBase* [0x8]
		constexpr auto m_HealthDamageFXState = 0x7c8; // FPropertyDecayState [0x8]
		constexpr auto m_HealingFXState = 0x828; // FPropertyDecayState
		constexpr auto m_HealthDamageFXParams = 0x834; // FPropertyDecayParams
		constexpr auto m_HealingFXParams = 0x848; // FPropertyDecayParams
		constexpr auto m_fAccumulateHealing = 0x85c; // float
		constexpr auto m_fSecondsSinceLastHealFXUpdate = 0x860; // float
		constexpr auto m_fHealFXUpdatePeriod = 0x864; // float
		constexpr auto m_fBloodHazeIntensity = 0x868; // float
		constexpr auto m_fHealingFXHalflifeAccumulation = 0x86c; // float
		constexpr auto m_fHealingFXHalflifeImpulse = 0x870; // float
		constexpr auto m_fHealingFXReliefFactor = 0x874; // float
		constexpr auto m_fHealingFXAccumulationMix = 0x878; // float
		constexpr auto m_fHealingFXVisibleThreshold = 0x87c; // float
		constexpr auto m_fHealingCritFXThreshold = 0x880; // float
		constexpr auto m_fHealthDamageFXHalflifeAccumulation = 0x884; // float
		constexpr auto m_fHealthDamageFXHalflifeImpulse = 0x888; // float
		constexpr auto m_fHealthDamageFXPainFactor = 0x88c; // float
		constexpr auto m_fHealthDamageFXAccumulationMix = 0x890; // float
		constexpr auto m_fHealthDamageCritFXThreshold = 0x894; // float
		constexpr auto m_fHealthDamageCritFXAccumulationMix = 0x898; // float
	}

	namespace n_UUIHudForge {
		constexpr auto m_nShards = 0x244; // int32_t
		constexpr auto m_nUpgrades = 0x248; // int32_t
		constexpr auto m_pEntryGroup = 0x24c; // ObjectProperty
		constexpr auto m_nMaxTeammateCount = 0x254; // int32_t
		constexpr auto m_nEntryHighlighted = 0x258; // int32_t
		constexpr auto m_nClassNameMessage = 0x25c; // int32_t
		constexpr auto m_eState = 0x260; // char
		constexpr auto m_mcForgeTabs = 0x264; // FUIFORGETAB [0x3]
		constexpr auto m_mcEntry = 0x2c4; // FUIFORGEENTRYGFX [0x8]
		constexpr auto m_mcClassData = 0x484; // FUIFORGEENTRYDATA [0x8]
		constexpr auto m_mcNeutralData = 0x584; // FUIFORGEENTRYDATA [0x8]
		constexpr auto m_mcUpgradeData = 0x684; // FUIFORGEENTRYDATA [0x8]
		constexpr auto m_mcEntryData = 0x784; // FPointer
		constexpr auto m_mcPlayerShardsGroup = 0x78c; // ObjectProperty
		constexpr auto m_mcPlayerShards = 0x794; // ObjectProperty
		constexpr auto m_mcUpgradesLeftGroup = 0x79c; // ObjectProperty
		constexpr auto m_mcUpgradesLeft = 0x7a4; // ObjectProperty
		constexpr auto m_mcErrorMessage = 0x7ac; // ObjectProperty
		constexpr auto m_mcTooltip = 0x7b4; // ObjectProperty
		constexpr auto m_mcTooltipName = 0x7bc; // ObjectProperty
		constexpr auto m_mcTooltipType = 0x7c4; // ObjectProperty
		constexpr auto m_mcTooltipDesc = 0x7cc; // ObjectProperty
		constexpr auto m_mcTooltipIcon = 0x7d4; // ObjectProperty
		constexpr auto m_mcTooltipPanel = 0x7dc; // ObjectProperty
		constexpr auto m_mcTooltipCost = 0x7e4; // ObjectProperty
		constexpr auto m_mcTooltipError = 0x7ec; // ObjectProperty
		constexpr auto m_mcTooltipTime = 0x7f4; // ObjectProperty
		constexpr auto m_mcTooltipRarity = 0x7fc; // ObjectProperty
		constexpr auto m_akSelect = 0x804; // ObjectProperty
		constexpr auto m_akForgeEnter = 0x80c; // ObjectProperty
		constexpr auto m_bLTEDisableForgeClass = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeNeutral = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeUpgrades = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeArmorPotions = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeHealingPotions = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeWeapons = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeSupportAbilities = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeOffensiveAbilities = 0x814; // char : 1
		constexpr auto m_bLTEDisableForgeMovementAbilities = 0x814; // char : 0
		constexpr auto m_bLTEDisableForgeRunes = 0x814; // char : 0
		constexpr auto m_bLTEDisableForgeResurrection = 0x814; // char : 0
		constexpr auto m_bLTEDisableUpgradeWeapons = 0x814; // char : 0
		constexpr auto m_bLTEDisableUpgradeSupportAbilities = 0x814; // char : 0
		constexpr auto m_bLTEDisableUpgradeOffensiveAbilities = 0x814; // char : 0
		constexpr auto m_bLTEDisableUpgradeMovementAbilities = 0x814; // char : 0
	}

	namespace n_ULightComponent {
		constexpr auto SceneInfo = 0x88; // FPointer
		constexpr auto WorldToLight = 0x90; // FMatrix
		constexpr auto LightToWorld = 0xd0; // FMatrix
		constexpr auto LightGuid = 0x110; // FGuid
		constexpr auto LightmapGuid = 0x120; // FGuid
		constexpr auto Brightness = 0x130; // float
		constexpr auto LightColor = 0x134; // FColor
		constexpr auto Function = 0x138; // ObjectProperty
		constexpr auto bEnabled = 0x140; // char : 1
		constexpr auto CastShadows = 0x140; // char : 1
		constexpr auto CastStaticShadows = 0x140; // char : 1
		constexpr auto CastDynamicShadows = 0x140; // char : 1
		constexpr auto bCastCompositeShadow = 0x140; // char : 1
		constexpr auto bAffectCompositeShadowDirection = 0x140; // char : 1
		constexpr auto bNonModulatedSelfShadowing = 0x140; // char : 1
		constexpr auto bSelfShadowOnly = 0x140; // char : 1
		constexpr auto bAllowPreShadow = 0x140; // char : 0
		constexpr auto bForceDynamicLight = 0x140; // char : 0
		constexpr auto UseDirectLightMap = 0x140; // char : 0
		constexpr auto bHasLightEverBeenBuiltIntoLightMap = 0x140; // char : 0
		constexpr auto bCanAffectDynamicPrimitivesOutsideDynamicChannel = 0x140; // char : 0
		constexpr auto bRenderLightShafts = 0x140; // char : 0
		constexpr auto bUseImageReflectionSpecular = 0x140; // char : 0
		constexpr auto bPrecomputedLightingIsValid = 0x140; // char : 0
		constexpr auto bExplicitlyAssignedLight = 0x140; // char : 0
		constexpr auto bAllowCompositingIntoDLE = 0x140; // char : 0
		constexpr auto LightEnvironment = 0x144; // ComponentProperty
		constexpr auto LightingChannels = 0x14c; // FLightingChannelContainer
		constexpr auto LightAffectsClassification = 0x150; // ELightAffectsClassification
		constexpr auto LightShadowMode = 0x151; // ELightShadowMode
		constexpr auto ModShadowColor = 0x154; // FLinearColor
		constexpr auto ModShadowFadeoutTime = 0x164; // float
		constexpr auto ModShadowFadeoutExponent = 0x168; // float
		constexpr auto LightListIndex = 0x16c; // int32_t
		constexpr auto ShadowProjectionTechnique = 0x170; // EShadowProjectionTechnique
		constexpr auto ShadowFilterQuality = 0x171; // EShadowFilterQuality
		constexpr auto MinShadowResolution = 0x174; // int32_t
		constexpr auto MaxShadowResolution = 0x178; // int32_t
		constexpr auto ShadowFadeResolution = 0x17c; // int32_t
		constexpr auto OcclusionDepthRange = 0x180; // float
		constexpr auto BloomScale = 0x184; // float
		constexpr auto BloomThreshold = 0x188; // float
		constexpr auto BloomScreenBlendThreshold = 0x18c; // float
		constexpr auto BloomTint = 0x190; // FColor
		constexpr auto RadialBlurPercent = 0x194; // float
		constexpr auto OcclusionMaskDarkness = 0x198; // float
		constexpr auto ReflectionSpecularBrightness = 0x19c; // float
		constexpr auto DetailMode = 0x1a0; // EDetailMode
	}

	namespace n_ATgEmitter_CameraEffect_LowHealth {
		constexpr auto m_fFade = 0x2b4; // float
	}

	namespace n_UUIMapSummary {
		constexpr auto MapName = 0x94; // FString
		constexpr auto ScreenshotPathName = 0xa4; // FString
		constexpr auto DisplayName = 0xb4; // FString
		constexpr auto Description = 0xc4; // FString
	}

	namespace n_ATgActorFactory {
		constexpr auto m_nMapObjectId = 0x280; // int32_t
		constexpr auto s_bAutoSpawn = 0x284; // char : 1
		constexpr auto s_nTeamNumber = 0x288; // int32_t
		constexpr auto s_nTaskForce = 0x28c; // char
		constexpr auto m_MinimapType = 0x28d; // MinimapFactoryType
		constexpr auto s_eSelectionMethod = 0x28e; // eSelectionMethod
		constexpr auto s_nSelectionListId = 0x290; // int32_t
		constexpr auto s_nSelectedObjectId = 0x294; // int32_t
		constexpr auto m_nSelectionListPropId = 0x298; // int32_t
		constexpr auto s_nNameId = 0x29c; // int32_t
		constexpr auto s_nFactoryId = 0x2a0; // int32_t
		constexpr auto m_FRI = 0x2a4; // ObjectProperty
		constexpr auto m_FRIClass = 0x2ac; // ATgRepInfo_Factory*
		constexpr auto s_nCurListIndex = 0x2b4; // int32_t
		constexpr auto m_WorldIconSprite = 0x2b8; // ComponentProperty
	}

	namespace n_APickupFactory {
		constexpr auto bOnlyReplicateHidden = 0x378; // char : 1
		constexpr auto bPickupHidden = 0x378; // char : 1
		constexpr auto bPredictRespawns = 0x378; // char : 1
		constexpr auto bIsSuperItem = 0x378; // char : 1
		constexpr auto bRespawnPaused = 0x378; // char : 1
		constexpr auto InventoryType = 0x37c; // AInventory*
		constexpr auto RespawnEffectTime = 0x384; // float
		constexpr auto MaxDesireability = 0x388; // float
		constexpr auto PickupMesh = 0x38c; // ComponentProperty
		constexpr auto ReplacementFactory = 0x394; // ObjectProperty
		constexpr auto OriginalFactory = 0x39c; // ObjectProperty
	}

	namespace n_UTgSeqAct_TrainingAwards {
		constexpr auto m_fGoldTime = 0x108; // float
		constexpr auto m_fSilverTime = 0x10c; // float
		constexpr auto m_fBronzeTime = 0x110; // float
		constexpr auto m_fPassTime = 0x114; // float
	}

	namespace n_UTgSkelCon_OscillateBoneScale {
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationBaseScale = 0x108; // float
		constexpr auto Theta = 0x10c; // float
	}

	namespace n_UNavMeshPath_MinDistBetweenSpecsOfType {
		constexpr auto MinDistBetweenEdgeTypes = 0x78; // float
		constexpr auto InitLocation = 0x7c; // FVector
		constexpr auto EdgeType = 0x88; // ENavMeshEdgeType
		constexpr auto Penalty = 0x8c; // float
	}

	namespace n_UTgGameplayCurvesSet_RecoilSimple {
		constexpr auto HorizRecoil1 = 0x64; // FRawDistributionFloat
		constexpr auto HorizRecoil2 = 0x88; // FRawDistributionFloat
		constexpr auto VertRecoil1 = 0xac; // FRawDistributionFloat
		constexpr auto VertRecoil2 = 0xd0; // FRawDistributionFloat
		constexpr auto GamepadHorizRecoilMultiplier = 0xf4; // float
		constexpr auto GamepadVertRecoilMultiplier = 0xf8; // float
		constexpr auto RecoilType = 0xfc; // EPaladinsRecoilType
	}

	namespace n_UTgDeviceForm_KingBomb {
		constexpr auto m_bKingBombActive = 0x2bc; // char : 1
	}

	namespace n_UTgDeviceForm_Mount {
		constexpr auto m_LoadedAnimSets = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_pWheelSpinnerSkelCons = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_ATgBotFactory_PointCapture {
		constexpr auto m_CapturePoint = 0x39c; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_MendingSpiritsActive {
		constexpr auto m_PawnTargets = 0xd0; // TArray<ObjectProperty>
		constexpr auto m_bEffectsAreActive = 0xe0; // char : 1
	}

	namespace n_UTgSoundGroup {
		constexpr auto c_SoundCues = 0x60; // TArray<ObjectProperty>
		constexpr auto c_FootstepSounds = 0x70; // TArray<FFootstepSoundInfo>
	}

	namespace n_UTgSeqEvent_SpawnWise {
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_UTgData_Cards {
		constexpr auto m_pMovie = 0x60; // ObjectProperty
	}

	namespace n_ADynamicSMActor {
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto LightEnvironment = 0x288; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x290; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x298; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x2a0; // ObjectProperty
		constexpr auto bForceStaticDecals = 0x2a8; // char : 1
		constexpr auto bPawnCanBaseOn = 0x2a8; // char : 1
		constexpr auto bSafeBaseIfAsleep = 0x2a8; // char : 1
		constexpr auto bHandleNavMeshRegistrationInGame = 0x2a8; // char : 1
		constexpr auto bHasRegisteredObstacle = 0x2a8; // char : 1
		constexpr auto ReplicatedMeshTranslation = 0x2ac; // FVector
		constexpr auto ReplicatedMeshRotation = 0x2b8; // FRotator
		constexpr auto ReplicatedMeshScale3D = 0x2c4; // FVector
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Radius = 0x118; // FExpressionInput
		constexpr auto Hardness = 0x14c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x180; // float
		constexpr auto HardnessPercent = 0x184; // float
	}

	namespace n_UTgAnimNotify_ViewShake {
		constexpr auto m_fShakeRadius = 0xbc; // float
		constexpr auto m_fDuration = 0xc0; // float
		constexpr auto m_fAmplitude = 0xc4; // float
		constexpr auto m_bUseLocationRadiusBasedShake = 0xc8; // char : 1
	}

	namespace n_UMultiCueSplineAudioComponent {
		constexpr auto SoundSlots = 0x2e4; // TArray<FMultiCueSplineSoundSlot>
		constexpr auto CurrentSlotIndex = 0x2f4; // int32_t
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxisAndAngle = 0xb0; // FExpressionInput
		constexpr auto PositionOnAxis = 0xe4; // FExpressionInput
		constexpr auto Position = 0x118; // FExpressionInput
	}

	namespace n_UTgAIUtilityFilter {
		constexpr auto bSoftFilter = 0xbc; // char : 1
	}

	namespace n_UUIWeaponSummary {
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto FriendlyName = 0xa4; // FString
		constexpr auto WeaponDescription = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // char : 1
	}

	namespace n_UParticleModuleTypeDataApex {
		constexpr auto ApexIOFX = 0x68; // ObjectProperty
		constexpr auto ApexEmitter = 0x70; // ObjectProperty
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x68; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_ATgProj_MagicEye {
		constexpr auto m_bStartedPulse = 0x51c; // char : 1
		constexpr auto m_fLifetimeForPhysicsSubstep = 0x520; // float
	}

	namespace n_UActorFactoryAI {
		constexpr auto ControllerClass = 0x9c; // AAIController*
		constexpr auto PawnClass = 0xa4; // APawn*
		constexpr auto PawnName = 0xac; // FString
		constexpr auto bGiveDefaultInventory = 0xbc; // char : 1
		constexpr auto InventoryList = 0xc0; // TArray<AInventory*>
		constexpr auto TeamIndex = 0xd0; // int32_t
	}

	namespace n_UUIData_MatchMember {
		constexpr auto sName = 0x60; // FString
		constexpr auto dwPlayerId = 0x70; // Fdword
		constexpr auto qwUserId = 0x74; // FQWord
		constexpr auto bIsVIP = 0x7c; // char : 1
		constexpr auto bIsLocalTF = 0x7c; // char : 1
		constexpr auto nTaskForce = 0x80; // int32_t
		constexpr auto dwVIPTier = 0x84; // Fdword
		constexpr auto pPlayerData = 0x88; // ObjectProperty
	}

	namespace n_UComponent {
		constexpr auto TemplateOwnerClass = 0x60; // UObject*
		constexpr auto TemplateName = 0x68; // FName
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_AActor {
		constexpr auto Components = 0x60; // TArray<ComponentProperty>
		constexpr auto AllComponents = 0x70; // TArray<ComponentProperty>
		constexpr auto Location = 0x80; // FVector
		constexpr auto Rotation = 0x8c; // FRotator
		constexpr auto DrawScale = 0x98; // float
		constexpr auto DrawScale3D = 0x9c; // FVector
		constexpr auto PrePivot = 0xa8; // FVector
		constexpr auto DetachFence = 0xb4; // FRenderCommandFence
		constexpr auto CustomTimeDilation = 0xb8; // float
		constexpr auto Physics = 0xbc; // EPhysics
		constexpr auto RemoteRole = 0xbd; // ENetRole
		constexpr auto Role = 0xbe; // ENetRole
		constexpr auto CollisionType = 0xbf; // ECollisionType
		constexpr auto ReplicatedCollisionType = 0xc0; // ECollisionType
		constexpr auto TickGroup = 0xc1; // ETickingGroup
		constexpr auto Owner = 0xc4; // ObjectProperty
		constexpr auto Base = 0xcc; // ObjectProperty
		constexpr auto Timers = 0xd4; // TArray<FTimerData>
		constexpr auto bStatic = 0xe4; // char : 1
		constexpr auto bHidden = 0xe4; // char : 1
		constexpr auto bNoDelete = 0xe4; // char : 1
		constexpr auto bDeleteMe = 0xe4; // char : 1
		constexpr auto bTicked = 0xe4; // char : 1
		constexpr auto bOnlyOwnerSee = 0xe4; // char : 1
		constexpr auto bTickIsDisabled = 0xe4; // char : 1
		constexpr auto bServerTickIsDisabled = 0xe4; // char : 1
		constexpr auto bWorldGeometry = 0xe4; // char : 0
		constexpr auto bIgnoreRigidBodyPawns = 0xe4; // char : 0
		constexpr auto bOrientOnSlope = 0xe4; // char : 0
		constexpr auto bIgnoreEncroachers = 0xe4; // char : 0
		constexpr auto bPushedByEncroachers = 0xe4; // char : 0
		constexpr auto bDestroyedByInterpActor = 0xe4; // char : 0
		constexpr auto bRouteBeginPlayEvenIfStatic = 0xe4; // char : 0
		constexpr auto bIsMoving = 0xe4; // char : 0
		constexpr auto bAlwaysEncroachCheck = 0xe4; // char : 0
		constexpr auto bHasAlternateTargetLocation = 0xe4; // char : 0
		constexpr auto bCanStepUpOn = 0xe4; // char : 0
		constexpr auto bNetTemporary = 0xe4; // char : 0
		constexpr auto bOnlyRelevantToOwner = 0xe4; // char : 0
		constexpr auto bNetDirty = 0xe4; // char : 0
		constexpr auto bAlwaysRelevant = 0xe4; // char : 0
		constexpr auto bReplicateInstigator = 0xe4; // char : 0
		constexpr auto bReplicateMovement = 0xe4; // char : 0
		constexpr auto bSkipActorPropertyReplication = 0xe4; // char : 0
		constexpr auto bUpdateSimulatedPosition = 0xe4; // char : 0
		constexpr auto bTearOff = 0xe4; // char : 0
		constexpr auto bOnlyDirtyReplication = 0xe4; // char : 0
		constexpr auto bAlwaysInformOfTimelapse = 0xe4; // char : 0
		constexpr auto bNetTimelapse = 0xe4; // char : 0
		constexpr auto bNetTimelapseInit = 0xe4; // char : 0
		constexpr auto bNetTimelapsePost = 0xe8; // char : 1
		constexpr auto bAllowFluidSurfaceInteraction = 0xe8; // char : 1
		constexpr auto bDemoRecording = 0xe8; // char : 1
		constexpr auto bDemoOwner = 0xe8; // char : 1
		constexpr auto bForceDemoRelevant = 0xe8; // char : 1
		constexpr auto bNetInitialRotation = 0xe8; // char : 1
		constexpr auto bReplicateRigidBodyLocation = 0xe8; // char : 1
		constexpr auto bKillDuringLevelTransition = 0xe8; // char : 1
		constexpr auto bExchangedRoles = 0xe8; // char : 0
		constexpr auto bConsiderAllStaticMeshComponentsForStreaming = 0xe8; // char : 0
		constexpr auto bDebug = 0xe8; // char : 0
		constexpr auto bPostRenderIfNotVisible = 0xe8; // char : 0
		constexpr auto s_bThrottleNetRelevancy = 0xe8; // char : 0
		constexpr auto m_bHasThreadedWork = 0xe8; // char : 0
		constexpr auto bForceNetUpdate = 0xe8; // char : 0
		constexpr auto bPendingNetUpdate = 0xe8; // char : 0
		constexpr auto bHardAttach = 0xe8; // char : 0
		constexpr auto bIgnoreBaseRotation = 0xe8; // char : 0
		constexpr auto bShadowParented = 0xe8; // char : 0
		constexpr auto bSkipAttachedMoves = 0xe8; // char : 0
		constexpr auto bCanBeAdheredTo = 0xe8; // char : 0
		constexpr auto bCanBeFrictionedTo = 0xe8; // char : 0
		constexpr auto bHurtEntry = 0xe8; // char : 0
		constexpr auto bGameRelevant = 0xe8; // char : 0
		constexpr auto bMovable = 0xe8; // char : 0
		constexpr auto bDestroyInPainVolume = 0xe8; // char : 0
		constexpr auto bCanBeDamaged = 0xe8; // char : 0
		constexpr auto bShouldBaseAtStartup = 0xe8; // char : 0
		constexpr auto bPendingDelete = 0xe8; // char : 0
		constexpr auto bCanTeleport = 0xe8; // char : 0
		constexpr auto bAlwaysTick = 0xe8; // char : 0
		constexpr auto bBlocksNavigation = 0xe8; // char : 0
		constexpr auto BlockRigidBody = 0xec; // char : 1
		constexpr auto bCollideWhenPlacing = 0xec; // char : 1
		constexpr auto bCollideActors = 0xec; // char : 1
		constexpr auto bCollideWorld = 0xec; // char : 1
		constexpr auto bCollideComplex = 0xec; // char : 1
		constexpr auto bBlockActors = 0xec; // char : 1
		constexpr auto bProjTarget = 0xec; // char : 1
		constexpr auto bBlocksTeleport = 0xec; // char : 1
		constexpr auto bMoveIgnoresDestruction = 0xec; // char : 0
		constexpr auto bProjectileMoveSingleBlocking = 0xec; // char : 0
		constexpr auto bNoEncroachCheck = 0xec; // char : 0
		constexpr auto bCollideAsEncroacher = 0xec; // char : 0
		constexpr auto bPhysRigidBodyOutOfWorldCheck = 0xec; // char : 0
		constexpr auto bComponentOutsideWorld = 0xec; // char : 0
		constexpr auto bForceOctreeSNFilter = 0xec; // char : 0
		constexpr auto bForceOctreeMNFilter = 0xec; // char : 0
		constexpr auto bForceOctreeMNFilterAuthorityOnly = 0xec; // char : 0
		constexpr auto bRigidBodyWasAwake = 0xec; // char : 0
		constexpr auto bCallRigidBodyWakeEvents = 0xec; // char : 0
		constexpr auto bWhitelistCollisionWarning = 0xec; // char : 0
		constexpr auto bBounce = 0xec; // char : 0
		constexpr auto bJustTeleported = 0xec; // char : 0
		constexpr auto bSupportNetIrrelevant = 0xec; // char : 0
		constexpr auto bClientSideOnly = 0xec; // char : 0
		constexpr auto bEnableMobileTouch = 0xec; // char : 0
		constexpr auto bNetInitial = 0xec; // char : 0
		constexpr auto bNetOwner = 0xec; // char : 0
		constexpr auto bNetRelevant = 0xec; // char : 0
		constexpr auto bNetAcked = 0xec; // char : 0
		constexpr auto bHiddenEd = 0xec; // char : 0
		constexpr auto bEditable = 0xec; // char : 0
		constexpr auto bHiddenEdGroup = 0xec; // char : 0
		constexpr auto bHiddenEdLayer = 0xf0; // char : 1
		constexpr auto bHiddenEdCustom = 0xf0; // char : 1
		constexpr auto bHiddenEdTemporary = 0xf0; // char : 1
		constexpr auto bHiddenEdLevel = 0xf0; // char : 1
		constexpr auto bHiddenEdScene = 0xf0; // char : 1
		constexpr auto bEdShouldSnap = 0xf0; // char : 1
		constexpr auto bTempEditor = 0xf0; // char : 1
		constexpr auto bPathColliding = 0xf0; // char : 1
		constexpr auto bPathTemp = 0xf0; // char : 0
		constexpr auto bScriptInitialized = 0xf0; // char : 0
		constexpr auto bLockLocation = 0xf0; // char : 0
		constexpr auto bForceAllowKismetModification = 0xf0; // char : 0
		constexpr auto bReplicateBotRankId = 0xf0; // char : 0
		constexpr auto bNoTick = 0xf0; // char : 0
		constexpr auto bDebugEffectIsRelevant = 0xf0; // char : 0
		constexpr auto bUpdateHavokPos = 0xf0; // char : 0
		constexpr auto bHavokPosOnlyUseCollisionComponent = 0xf0; // char : 0
		constexpr auto c_bJustStartedTimelapsePlayback = 0xf0; // char : 0
		constexpr auto c_bJustEndedTimelapsePlayback = 0xf0; // char : 0
		constexpr auto m_bCanBaseOn = 0xf0; // char : 0
		constexpr auto m_bSupportsRelativeLocationBase = 0xf0; // char : 0
		constexpr auto m_bComplexOccluder = 0xf0; // char : 0
		constexpr auto m_bCanPlayFirstPersonAkEvent = 0xf0; // char : 0
		constexpr auto SkelMeshCompTickTag = 0xf4; // int32_t
		constexpr auto NetTag = 0xf8; // int32_t
		constexpr auto IndexInTickList = 0xfc; // int32_t
		constexpr auto LastSlowRelevancyCheckTime = 0x100; // float
		constexpr auto NetUpdateTime = 0x104; // float
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto NetPriority = 0x10c; // float
		constexpr auto LastNetUpdateTime = 0x110; // float
		constexpr auto TimeSinceLastTick = 0x114; // float
		constexpr auto Instigator = 0x118; // ObjectProperty
		constexpr auto WorldInfo = 0x120; // ObjectProperty
		constexpr auto LifeSpan = 0x128; // float
		constexpr auto CreationTime = 0x12c; // float
		constexpr auto LastRenderTime = 0x130; // float
		constexpr auto Tag = 0x134; // FName
		constexpr auto InitialState = 0x13c; // FName
		constexpr auto Layer = 0x144; // FName
		constexpr auto Group = 0x14c; // FName
		constexpr auto HiddenEditorViews = 0x154; // FQWord
		constexpr auto Touching = 0x15c; // TArray<ObjectProperty>
		constexpr auto Children = 0x16c; // TArray<ObjectProperty>
		constexpr auto LatentFloat = 0x17c; // float
		constexpr auto LatentSeqNode = 0x180; // ObjectProperty
		constexpr auto PhysicsVolume = 0x188; // ObjectProperty
		constexpr auto Velocity = 0x190; // FVector
		constexpr auto Acceleration = 0x19c; // FVector
		constexpr auto AngularVelocity = 0x1a8; // FVector
		constexpr auto BaseSkelComponent = 0x1b4; // ComponentProperty
		constexpr auto BaseBoneName = 0x1bc; // FName
		constexpr auto Attached = 0x1c4; // TArray<ObjectProperty>
		constexpr auto RelativeLocation = 0x1d4; // FVector
		constexpr auto RelativeRotation = 0x1e0; // FRotator
		constexpr auto CollisionComponent = 0x1ec; // ComponentProperty
		constexpr auto OverlapTag = 0x1f4; // int32_t
		constexpr auto RotationRate = 0x1f8; // FRotator
		constexpr auto PendingTouch = 0x204; // ObjectProperty
		constexpr auto DatabaseFieldName = 0x20c; // FName
		constexpr auto MessageClass = 0x214; // ULocalMessage*
		constexpr auto BotRankId = 0x21c; // int32_t
		constexpr auto SupportedEvents = 0x220; // TArray<USequenceEvent*>
		constexpr auto GeneratedEvents = 0x230; // TArray<ObjectProperty>
		constexpr auto LatentActions = 0x240; // TArray<ObjectProperty>
		constexpr auto LocationPackedKey = 0x250; // int32_t
		constexpr auto LocationPrev = 0x254; // FVector
		constexpr auto m_fLastOcclusionCheckTime = 0x260; // float
		constexpr auto m_fOcclusionCheckInterval = 0x264; // float
		constexpr auto m_fOcclusionNormalization = 0x268; // float
		constexpr auto m_fLastOcclusionCheckLocation = 0x26c; // float
		constexpr auto m_fOcclusionCheckDist = 0x270; // float
		constexpr auto m_fOcclusionAmount = 0x274; // float
		constexpr auto m_fMaxDistForOcclusionPathfinding = 0x278; // float
		constexpr auto m_fMaxDistForOcclusionCheck = 0x27c; // float
	}

	namespace n_AImageReflection {
		constexpr auto bEnabled = 0x280; // char : 1
		constexpr auto ReflectionComponent = 0x284; // ComponentProperty
		constexpr auto ImageReflectionComponent = 0x28c; // ComponentProperty
	}

	namespace n_UTgInventoryObject_Listen_Exaction {
		constexpr auto m_CachedFiremode = 0xd8; // ObjectProperty
	}

	namespace n_ATgWindowVaultVolume {
		constexpr auto m_WallDir = 0x2bc; // FRotator
		constexpr auto WallDirArrow = 0x2c8; // ComponentProperty
	}

	namespace n_UTgEffectForm_DisablePawn {
		constexpr auto m_bPauseAnims = 0xfc; // char : 1
	}

	namespace n_USeqAct_SetPhysics {
		constexpr auto newPhysics = 0x108; // EPhysics
	}

	namespace n_UTgDeviceFire_MirrorDamageToHeal {
		constexpr auto m_fHealAmount = 0x270; // float
	}

	namespace n_UObjectReferencer {
		constexpr auto FlattenedObjects = 0x60; // TArray<ObjectProperty>
		constexpr auto ReferencedObjects = 0x70; // TArray<ObjectProperty>
		constexpr auto bShouldFlatten = 0x80; // char : 1
	}

	namespace n_UTgSeqAct_DisplayPrompt {
		constexpr auto m_sCommand = 0x108; // FString
		constexpr auto m_nMessageId = 0x118; // int32_t
	}

	namespace n_UDistributionFloat {
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // char : 1
		constexpr auto bIsDirty = 0x78; // char : 1
	}

	namespace n_ATgGame_RoyaleTournament {
		constexpr auto m_pBracketRounds = 0x9c0; // TArray<FTournamentRound>
		constexpr auto m_nTotalRounds = 0x9d0; // int32_t
		constexpr auto m_nCurrentRound = 0x9d4; // int32_t
		constexpr auto m_eCurrentRoundSize = 0x9d8; // EObjectiveSize
		constexpr auto m_pRemainingTeams = 0x9dc; // TArray<ObjectProperty>
		constexpr auto m_nBetweenRoundWait = 0x9ec; // int32_t
	}

	namespace n_UTgAIBehaviorAction_PurchaseBurnCards {
		constexpr auto BurnCardId = 0x94; // int32_t
		constexpr auto DesiredRank = 0x98; // int32_t
		constexpr auto bDontPay = 0x9c; // char : 1
	}

	namespace n_UPlayer {
		constexpr auto VfTable_FExec = 0x60; // FPointer
		constexpr auto Actor = 0x68; // ObjectProperty
		constexpr auto CurrentNetSpeed = 0x70; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x74; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x78; // int32_t
		constexpr auto PP_DesaturationMultiplier = 0x7c; // float
		constexpr auto PP_HighlightsMultiplier = 0x80; // float
		constexpr auto PP_MidTonesMultiplier = 0x84; // float
		constexpr auto PP_ShadowsMultiplier = 0x88; // float
	}

	namespace n_UUIDataStore {
		constexpr auto Tag = 0x70; // FName
		constexpr auto RefreshSubscriberNotifies = 0x78; // TArray<DelegateProperty>
		constexpr auto __OnDataStoreValueUpdated__Delegate = 0x88; // DelegateProperty
	}

	namespace n_USeqAct_AddRemoveFaceFXAnimSet {
		constexpr auto FaceFXAnimSets = 0x108; // TArray<ObjectProperty>
	}

	namespace n_UTgEffectForm_Freeze {
		constexpr auto m_BurstingIceFXId = 0x100; // int32_t
	}

	namespace n_ATgPathfinder {
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_fMaxSpeed = 0x288; // float
		constexpr auto m_vWaypoints = 0x28c; // TArray<FVector>
		constexpr auto m_fPathCheckRadius = 0x29c; // float
		constexpr auto m_NavigationHandle = 0x2a0; // ObjectProperty
		constexpr auto m_Spline = 0x2a8; // ObjectProperty
		constexpr auto m_CurrentSpline = 0x2b0; // ObjectProperty
		constexpr auto m_fCurrentSplineDist = 0x2b8; // float
		constexpr auto m_NavMeshPathParams = 0x2bc; // FNavMeshPathParams
		constexpr auto m_ActiveWalkers = 0x2f4; // TArray<ObjectProperty>
		constexpr auto m_WalkerLifeSpan = 0x304; // float
		constexpr auto __OnFinishedPathing__Delegate = 0x308; // DelegateProperty
	}

	namespace n_UAnimNotify_ViewShake {
		constexpr auto Duration = 0x68; // float
		constexpr auto RotAmplitude = 0x6c; // FVector
		constexpr auto RotFrequency = 0x78; // FVector
		constexpr auto LocAmplitude = 0x84; // FVector
		constexpr auto LocFrequency = 0x90; // FVector
		constexpr auto FOVAmplitude = 0x9c; // float
		constexpr auto FOVFrequency = 0xa0; // float
		constexpr auto bDoControllerVibration = 0xa4; // char : 1
		constexpr auto bUseBoneLocation = 0xa4; // char : 1
		constexpr auto ShakeRadius = 0xa8; // float
		constexpr auto BoneName = 0xac; // FName
		constexpr auto ShakeParams = 0xb4; // ObjectProperty
	}

	namespace n_USeqAct_StreamInTextures {
		constexpr auto bLocationBased = 0x120; // char : 1
		constexpr auto bStreamingActive = 0x120; // char : 1
		constexpr auto bHasTriggeredAllLoaded = 0x120; // char : 1
		constexpr auto Seconds = 0x124; // float
		constexpr auto StreamingDistanceMultiplier = 0x128; // float
		constexpr auto NumWantingResourcesID = 0x12c; // int32_t
		constexpr auto StopTimestamp = 0x130; // float
		constexpr auto LocationActors = 0x134; // TArray<ObjectProperty>
		constexpr auto ForceMaterials = 0x144; // TArray<ObjectProperty>
		constexpr auto CinematicTextureGroups = 0x154; // FTextureGroupContainer
	}

	namespace n_ATgDevice_ToggleInhandFiremode {
		constexpr auto m_CachedInhand = 0xaec; // ObjectProperty
	}

	namespace n_UMaterialExpressionPixelDepth {
		constexpr auto bNormalize = 0xb0; // char : 1
	}

	namespace n_UTgSeqAct_UIElementVisibility {
		constexpr auto ShowElement = 0x108; // char : 1
		constexpr auto UISceneName = 0x10c; // FString
		constexpr auto UIElementName = 0x11c; // FString
	}

	namespace n_USeqCond_Increment {
		constexpr auto IncrementAmount = 0xec; // int32_t
		constexpr auto ValueA = 0xf0; // int32_t
		constexpr auto ValueB = 0xf4; // int32_t
	}

	namespace n_UActorFactory {
		constexpr auto GameplayActorClass = 0x60; // AActor*
		constexpr auto MenuName = 0x68; // FString
		constexpr auto MenuPriority = 0x78; // int32_t
		constexpr auto AlternateMenuPriority = 0x7c; // int32_t
		constexpr auto NewActorClassName = 0x80; // FString
		constexpr auto NewActorClass = 0x90; // AActor*
		constexpr auto bPlaceable = 0x98; // char : 1
		constexpr auto bShowInEditorQuickMenu = 0x98; // char : 1
	}

	namespace n_UActorFactoryFracturedStaticMesh {
		constexpr auto FracturedStaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_USkelControlSingleBone {
		constexpr auto bApplyTranslation = 0xd0; // char : 1
		constexpr auto bApplyRotation = 0xd0; // char : 1
		constexpr auto bAddTranslation = 0xd0; // char : 1
		constexpr auto bAddRotation = 0xd0; // char : 1
		constexpr auto bRemoveMeshRotation = 0xd0; // char : 1
		constexpr auto BoneTranslation = 0xd4; // FVector
		constexpr auto BoneTranslationSpace = 0xe0; // EBoneControlSpace
		constexpr auto BoneRotationSpace = 0xe1; // EBoneControlSpace
		constexpr auto TranslationSpaceBoneName = 0xe4; // FName
		constexpr auto BoneRotation = 0xec; // FRotator
		constexpr auto RotationSpaceBoneName = 0xf8; // FName
	}

	namespace n_UInterpGroupAI {
		constexpr auto StageMarkGroup = 0x98; // FName
		constexpr auto SnapToRootBoneLocationWhenFinished = 0xa0; // char : 1
		constexpr auto bNoEncroachmentCheck = 0xa0; // char : 1
		constexpr auto bDisableWorldCollision = 0xa0; // char : 1
		constexpr auto bIgnoreLegacyHeightAdjust = 0xa0; // char : 1
		constexpr auto bRecreatePreviewPawn = 0xa0; // char : 1
		constexpr auto bRefreshStageMarkGroup = 0xa0; // char : 1
	}

	namespace n_UAudioDevice {
		constexpr auto MaxChannels = 0x68; // int32_t
		constexpr auto CommonAudioPoolSize = 0x6c; // int32_t
		constexpr auto LowPassFilterResonance = 0x70; // float
		constexpr auto MinCompressedDurationEditor = 0x74; // float
		constexpr auto MinCompressedDurationGame = 0x78; // float
		constexpr auto ChirpInSoundNodeWaveName = 0x7c; // FString
		constexpr auto ChirpInSoundNodeWave = 0x8c; // ObjectProperty
		constexpr auto ChirpOutSoundNodeWaveName = 0x94; // FString
		constexpr auto ChirpOutSoundNodeWave = 0xa4; // ObjectProperty
		constexpr auto CommonAudioPool = 0xac; // FPointer
		constexpr auto CommonAudioPoolFreeBytes = 0xb4; // int32_t
		constexpr auto AudioComponents = 0xb8; // TArray<ComponentProperty>
		constexpr auto AudioComponentsToStop = 0xc8; // TArray<ComponentProperty>
		constexpr auto Sources = 0xd8; // TArray<FPointer>
		constexpr auto FreeSources = 0xe8; // TArray<FPointer>
		constexpr auto WaveInstanceSourceMap = 0xf8; // TMap<None, None>
		constexpr auto bGameWasTicking = 0x140; // char : 1
		constexpr auto bSoundSpawningEnabled = 0x140; // char : 1
		constexpr auto Listeners = 0x144; // TArray<FListener>
		constexpr auto CurrentTick = 0x154; // FQWord
		constexpr auto SoundClasses = 0x15c; // TMap<None, None>
		constexpr auto SourceSoundClasses = 0x1a4; // TMap<None, None>
		constexpr auto CurrentSoundClasses = 0x1ec; // TMap<None, None>
		constexpr auto DestinationSoundClasses = 0x234; // TMap<None, None>
		constexpr auto SoundModes = 0x27c; // TMap<None, None>
		constexpr auto Effects = 0x2c4; // FPointer
		constexpr auto BaseSoundModeName = 0x2cc; // FName
		constexpr auto CurrentMode = 0x2d4; // ObjectProperty
		constexpr auto SoundModeStartTime = 0x2dc; // FDouble
		constexpr auto SoundModeFadeInStartTime = 0x2e4; // FDouble
		constexpr auto SoundModeFadeInEndTime = 0x2ec; // FDouble
		constexpr auto SoundModeEndTime = 0x2f4; // FDouble
		constexpr auto ListenerVolumeIndex = 0x2fc; // int32_t
		constexpr auto ListenerInteriorSettings = 0x300; // FInteriorSettings
		constexpr auto InteriorStartTime = 0x330; // FDouble
		constexpr auto InteriorEndTime = 0x338; // FDouble
		constexpr auto ExteriorEndTime = 0x340; // FDouble
		constexpr auto InteriorLPFEndTime = 0x348; // FDouble
		constexpr auto ExteriorLPFEndTime = 0x350; // FDouble
		constexpr auto InteriorVolumeInterp = 0x358; // float
		constexpr auto InteriorLPFInterp = 0x35c; // float
		constexpr auto ExteriorVolumeInterp = 0x360; // float
		constexpr auto ExteriorLPFInterp = 0x364; // float
		constexpr auto TestAudioComponent = 0x368; // ComponentProperty
		constexpr auto TextToSpeech = 0x370; // FPointer
		constexpr auto DebugState = 0x378; // EDebugState
		constexpr auto TransientMasterVolume = 0x37c; // float
		constexpr auto LastUpdateTime = 0x380; // float
		constexpr auto DefaultAudioComponentClass = 0x384; // UAudioComponent*
		constexpr auto DefaultAudioComponentClassName = 0x38c; // FString
		constexpr auto DefaultAudioDevice = 0x39c; // FString
	}

	namespace n_UGFxAction_CloseMovie {
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto bUnload = 0x110; // char : 1
	}

	namespace n_UUIComponent_GamepadKey {
		constexpr auto m_eGamepadKey = 0x120; // GamepadKeys
	}

	namespace n_USceneCaptureComponent {
		constexpr auto bEnabled = 0x88; // char : 1
		constexpr auto bEnablePostProcess = 0x88; // char : 1
		constexpr auto bEnableFog = 0x88; // char : 1
		constexpr auto bUseMainScenePostProcessSettings = 0x88; // char : 1
		constexpr auto bSkipUpdateIfTextureUsersOccluded = 0x88; // char : 1
		constexpr auto bSkipUpdateIfOwnerOccluded = 0x88; // char : 1
		constexpr auto bSkipRenderingDepthPrepass = 0x88; // char : 1
		constexpr auto ClearColor = 0x8c; // FColor
		constexpr auto ViewMode = 0x90; // ESceneCaptureViewMode
		constexpr auto SceneLOD = 0x94; // int32_t
		constexpr auto FrameRate = 0x98; // float
		constexpr auto PostProcess = 0x9c; // ObjectProperty
		constexpr auto MaxUpdateDist = 0xa4; // float
		constexpr auto MaxViewDistanceOverride = 0xa8; // float
		constexpr auto MaxStreamingUpdateDist = 0xac; // float
		constexpr auto CaptureInfo = 0xb0; // FPointer
		constexpr auto ViewState = 0xb8; // FPointer
		constexpr auto PostProcessProxies = 0xc0; // TArray<FPointer>
	}

	namespace n_UAnimNodeAdditiveBlending {
		constexpr auto bPassThroughWhenNotRendered = 0x124; // char : 1
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x60; // FString
		constexpr auto ResponseCode = 0x70; // int32_t
		constexpr auto Tag = 0x74; // int32_t
		constexpr auto Headers = 0x78; // FMap_Mirror
		constexpr auto StringResponse = 0xc0; // FString
		constexpr auto BinaryResponse = 0xd0; // TArray<char>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Grover {
		constexpr auto m_vAxeStartingLocation = 0xd0; // FVector
	}

	namespace n_UUIComponent_ItemPreviewStack {
		constexpr auto m_bHas3dPreview = 0x120; // char : 1
		constexpr auto m_mcLoadingScreen = 0x124; // ObjectProperty
		constexpr auto m_mcLoadingScreenTexture = 0x12c; // ObjectProperty
		constexpr auto m_pItemGeneric = 0x134; // ObjectProperty
		constexpr auto m_LoadingScreenManifestGroup = 0x13c; // ObjectProperty
	}

	namespace n_UPathConstraint {
		constexpr auto CacheIdx = 0x60; // int32_t
		constexpr auto NextConstraint = 0x64; // ObjectProperty
	}

	namespace n_ATgCollisionProxy {
		constexpr auto m_NearByPlayers = 0x280; // TArray<ObjectProperty>
		constexpr auto m_bIgnoreStealthPlayers = 0x290; // char : 1
		constexpr auto m_bIgnoreNonPlayers = 0x290; // char : 1
		constexpr auto m_bIgnoreInvulnerablePlayers = 0x290; // char : 1
		constexpr auto m_bForwardOwnerOnly = 0x290; // char : 1
		constexpr auto __ProxyTouch__Delegate = 0x294; // DelegateProperty
		constexpr auto __ProxyUnTouch__Delegate = 0x2a4; // DelegateProperty
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto SceneTextureType = 0xe4; // ESceneTextureType
		constexpr auto ScreenAlign = 0xe8; // char : 1
	}

	namespace n_UTgAnimBlendByWeaponSkin {
		constexpr auto m_SkinMap = 0x168; // TArray<FWeaponSkinChildInfo>
	}

	namespace n_UTgCached_LootTable {
		constexpr auto m_fTotalDropChance = 0x6c; // float
		constexpr auto m_Items = 0x70; // TArray<ObjectProperty>
		constexpr auto m_Tables = 0x80; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_GetLocalPlayerController {
		constexpr auto LocalPlayerController = 0x108; // ObjectProperty
	}

	namespace n_UAnimNodeBlend {
		constexpr auto Child2Weight = 0x114; // float
		constexpr auto Child2WeightTarget = 0x118; // float
		constexpr auto BlendTimeToGo = 0x11c; // float
		constexpr auto bSkipBlendWhenNotRendered = 0x120; // char : 1
	}

	namespace n_UTgAIObstacleAvoidanceRenderingComponent {
		constexpr auto ObstacleAvoidance = 0x24c; // ObjectProperty
	}

	namespace n_ATgDevice_Vine {
		constexpr auto m_PullTarget = 0xaec; // ObjectProperty
		constexpr auto m_vPullLocation = 0xaf4; // FVector
		constexpr auto m_fPullSpeed = 0xb00; // float
		constexpr auto m_fTruePostfireTime = 0xb04; // float
		constexpr auto m_fPullEndOffset = 0xb08; // float
		constexpr auto m_bCanBeCanceled = 0xb0c; // char : 1
		constexpr auto m_bMissedPull = 0xb0c; // char : 1
		constexpr auto m_bIsPulling = 0xb0c; // char : 1
		constexpr auto m_bHasPulledOnce = 0xb0c; // char : 1
		constexpr auto m_bTeleportedAfterFiring = 0xb0c; // char : 1
		constexpr auto m_fMomentumAfterPull = 0xb10; // float
	}

	namespace n_UTgGameplayCurvesSet_TargetAimTracking {
		constexpr auto TargetTrackingCurves = 0x64; // TArray<ObjectProperty>
		constexpr auto DebugVals = 0x74; // FTargetAimTrackingDebugVals
		constexpr auto bSaveDebugVals = 0xb0; // char : 1
	}

	namespace n_UExporter {
		constexpr auto FormatExtension = 0x68; // TArray<FString>
		constexpr auto FormatDescription = 0x78; // TArray<FString>
	}

	namespace n_UGameCrowdBehavior_WaitInQueue {
		constexpr auto bStoppingBehavior = 0x9c; // char : 1
		constexpr auto QueuePosition = 0xa0; // ObjectProperty
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // char : 1
	}

	namespace n_UTgAIUtilityHandle {
		constexpr auto UtilitySets = 0x60; // FUtilitySet [0x2]
		constexpr auto FilteredAnnotationPoints = 0xf0; // FUtilityPair [0x2]
		constexpr auto eBehaviorState = 0x180; // EBotBehaviorState
		constexpr auto AssaultRangeType = 0x181; // ERangeType
	}

	namespace n_UTgGameplayCurvesSet_RecoilVisual {
		constexpr auto AngleDistribution = 0x64; // FRawDistributionFloat
		constexpr auto StrengthDegreesByAngleMin = 0x88; // FRawDistributionFloat
		constexpr auto StrengthDegreesByAngleMax = 0xac; // FRawDistributionFloat
		constexpr auto RecoilApplicationCurve = 0xd0; // FRawDistributionFloat
	}

	namespace n_AAmbientSoundSimpleToggleable {
		constexpr auto bCurrentlyPlaying = 0x2ac; // char : 1
		constexpr auto bFadeOnToggle = 0x2ac; // char : 1
		constexpr auto bIgnoreAutoPlay = 0x2ac; // char : 1
		constexpr auto FadeInDuration = 0x2b0; // float
		constexpr auto FadeInVolumeLevel = 0x2b4; // float
		constexpr auto FadeOutDuration = 0x2b8; // float
		constexpr auto FadeOutVolumeLevel = 0x2bc; // float
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x68; // FVector
		constexpr auto EndPoint1 = 0x74; // FVector
		constexpr auto Range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xa4; // FRawDistributionFloat
	}

	namespace n_UTgAISquad_MonsterBehaviorTree {
		constexpr auto BehaviorTreeAsName = 0xa8; // FName
		constexpr auto Controller = 0xb0; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_Sprint {
		constexpr auto Sprint = 0x94; // char : 1
	}

	namespace n_UTgAnimBlendByRecoilTime {
		constexpr auto m_pDeviceForm = 0x124; // ObjectProperty
		constexpr auto m_pDevice = 0x12c; // ObjectProperty
		constexpr auto m_TgPawn = 0x134; // ObjectProperty
		constexpr auto m_PctBlend = 0x13c; // float
		constexpr auto m_fFireHoldTimer = 0x140; // float
		constexpr auto m_fMaxFireHoldTime = 0x144; // float
		constexpr auto m_fBlendTime = 0x148; // float
		constexpr auto m_fMaxRecoilTime = 0x14c; // float
	}

	namespace n_UTgAnimBlendByBuffMonsterIntro {
		constexpr auto m_bScalePlayRateOfSpawnAndIntro = 0x168; // char : 1
		constexpr auto m_bEndIntroStateEarly = 0x168; // char : 1
		constexpr auto m_bIntroHasBeenSetup = 0x168; // char : 1
		constexpr auto m_fIntroTimeHittableAt = 0x16c; // float
		constexpr auto m_fTimeToStartIntroAnim = 0x170; // float
		constexpr auto m_CachedPawn = 0x174; // ObjectProperty
		constexpr auto m_fSpawnIntroScaleRate = 0x17c; // float
	}

	namespace n_UTgAIBehaviorAction_ReloadDevice {
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_UUIComponent_BattlePassChallenges {
		constexpr auto m_pChallengeList = 0x120; // ObjectProperty
		constexpr auto m_pNextArrow = 0x128; // ObjectProperty
		constexpr auto m_pPrevArrow = 0x130; // ObjectProperty
	}

	namespace n_UMotionBlurEffect {
		constexpr auto MaxVelocity = 0x88; // float
		constexpr auto MotionBlurAmount = 0x8c; // float
		constexpr auto FullMotionBlur = 0x90; // char : 1
		constexpr auto CameraRotationThreshold = 0x94; // float
		constexpr auto CameraTranslationThreshold = 0x98; // float
	}

	namespace n_ATgTeamPlayerStart {
		constexpr auto m_nTaskForce = 0x3bc; // char
		constexpr auto m_nPriority = 0x3c0; // int32_t
		constexpr auto nPrevPriority = 0x3c4; // int32_t
		constexpr auto m_fMaxDistForEnemyCheckUU = 0x3c8; // float
		constexpr auto m_fMaxDistForHazardCheckUU = 0x3cc; // float
		constexpr auto m_fMaxWeightForEnemyDistanceCheck = 0x3d0; // float
		constexpr auto m_fMaxDistForAllyCheckUU = 0x3d4; // float
		constexpr auto m_fMinDistForAllyCheckUU = 0x3d8; // float
		constexpr auto m_fMaxWeightForAllyDistanceCheck = 0x3dc; // float
		constexpr auto m_fRandomRatingWeighting = 0x3e0; // float
		constexpr auto m_bInitialSpawnOnly = 0x3e4; // char : 1
		constexpr auto m_bDisallowEnemyLOS = 0x3e4; // char : 1
		constexpr auto m_bRotateTowardNearestVisibleAlly = 0x3e4; // char : 1
		constexpr auto m_fExtraHeightToTraceTo = 0x3e8; // float
		constexpr auto m_nMinLevel = 0x3ec; // int32_t
		constexpr auto m_fLastUsedTimeStamp = 0x3f0; // float
		constexpr auto s_AssignedPlayers = 0x3f4; // TArray<ObjectProperty>
	}

	namespace n_ATgChestManagerVolume {
		constexpr auto m_nPointOfInterestId = 0x2bc; // int32_t
		constexpr auto m_eType = 0x2c0; // EChestVolumeTypes
		constexpr auto m_fSmallChestPercent = 0x2c4; // float
		constexpr auto m_SmallPOIConfig = 0x2c8; // TArray<FChestSpawnConfig>
		constexpr auto m_fMediumChestPercent = 0x2d8; // float
		constexpr auto m_MediumPOIConfig = 0x2dc; // TArray<FChestSpawnConfig>
		constexpr auto m_fLargeChestPercent = 0x2ec; // float
		constexpr auto m_LargePOIConfig = 0x2f0; // TArray<FChestSpawnConfig>
		constexpr auto m_Factories = 0x300; // TArray<ObjectProperty>
		constexpr auto m_InternalChestData = 0x310; // TArray<FInternalChestInfo>
	}

	namespace n_UTgSeqAct_SetHexState {
		constexpr auto m_bChallengerWon = 0x108; // char : 1
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceData = 0x310; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto PerInstanceSMData = 0x320; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumPendingLightmaps = 0x330; // int32_t
		constexpr auto ComponentJoinKey = 0x334; // int32_t
		constexpr auto CachedMappings = 0x338; // TArray<FInstancedStaticMeshMappingInfo>
		constexpr auto InstancingRandomSeed = 0x348; // int32_t
		constexpr auto InstanceStartCullDistance = 0x34c; // int32_t
		constexpr auto InstanceEndCullDistance = 0x350; // int32_t
		constexpr auto StreamingBounds = 0x354; // FBoxSphereBounds
		constexpr auto InstanceBufferResource = 0x370; // FPointer
		constexpr auto InstancedMeshStreamGroup = 0x378; // FPointer
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x380; // char : 1
		constexpr auto bStreamInstanceBuffer = 0x380; // char : 1
		constexpr auto bDontResolveInstancedLightmaps = 0x380; // char : 1
	}

	namespace n_UTgAnimNotify_ToggleRigidBodies {
		constexpr auto BoneNames = 0x68; // TArray<FName>
		constexpr auto Effect = 0x78; // ERigidBodyFixationChange
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetInDeviceVolume {
		constexpr auto DeviceID = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // char : 1
	}

	namespace n_UFacebookIntegration {
		constexpr auto AppID = 0x80; // FString
		constexpr auto Permissions = 0x90; // TArray<FString>
		constexpr auto UserName = 0xa0; // FString
		constexpr auto UserId = 0xb0; // FString
		constexpr auto AccessToken = 0xc0; // FString
		constexpr auto FriendsList = 0xd0; // TArray<FFacebookFriend>
	}

	namespace n_UInterpTrackAkRTPC {
		constexpr auto Param = 0xb8; // FString
	}

	namespace n_UUIComponentPool {
		constexpr auto m_ActivePooledItems = 0x118; // TArray<ObjectProperty>
		constexpr auto m_InactivePooledItems = 0x128; // TArray<ObjectProperty>
	}

	namespace n_USVehicleSimBase {
		constexpr auto WheelSuspensionStiffness = 0x88; // float
		constexpr auto WheelSuspensionDamping = 0x8c; // float
		constexpr auto WheelSuspensionBias = 0x90; // float
		constexpr auto WheelLongExtremumSlip = 0x94; // float
		constexpr auto WheelLongExtremumValue = 0x98; // float
		constexpr auto WheelLongAsymptoteSlip = 0x9c; // float
		constexpr auto WheelLongAsymptoteValue = 0xa0; // float
		constexpr auto WheelLatExtremumSlip = 0xa4; // float
		constexpr auto WheelLatExtremumValue = 0xa8; // float
		constexpr auto WheelLatAsymptoteSlip = 0xac; // float
		constexpr auto WheelLatAsymptoteValue = 0xb0; // float
		constexpr auto WheelInertia = 0xb4; // float
		constexpr auto bWheelSpeedOverride = 0xb8; // char : 1
		constexpr auto bClampedFrictionModel = 0xb8; // char : 1
		constexpr auto bAutoDrive = 0xb8; // char : 1
		constexpr auto AutoDriveSteer = 0xbc; // float
	}

	namespace n_ATgObjective {
		constexpr auto r_nControllingTaskForceIndex = 0x280; // int32_t
		constexpr auto r_nControllingTaskForceCount = 0x284; // int32_t
		constexpr auto r_eStatus = 0x288; // EObjectiveStatus
		constexpr auto m_InWordIndicatorFX = 0x28c; // ObjectProperty
		constexpr auto m_ForegroundIndicatorFX = 0x294; // ObjectProperty
		constexpr auto m_nActiveAlertId = 0x29c; // int32_t
		constexpr auto m_nPendingActiveAlertId = 0x2a0; // int32_t
		constexpr auto m_nInactiveAlertId = 0x2a4; // int32_t
		constexpr auto m_nWaypointMessageOverride = 0x2a8; // int32_t
		constexpr auto m_bTriggerEventsOnClientAsWell = 0x2ac; // char : 1
	}

	namespace n_UUIData_LeaderboardPlayer {
		constexpr auto sName = 0x60; // FString
		constexpr auto qwPortalUserId = 0x70; // FQWord
		constexpr auto fRank = 0x78; // float
		constexpr auto nLevel = 0x7c; // int32_t
		constexpr auto nWins = 0x80; // int32_t
		constexpr auto nLosses = 0x84; // int32_t
		constexpr auto nPerk = 0x88; // int32_t
		constexpr auto nRegion = 0x8c; // int32_t
		constexpr auto nTitle = 0x90; // int32_t
		constexpr auto nPosition = 0x94; // int32_t
		constexpr auto pChampion = 0x98; // ObjectProperty
	}

	namespace n_URadialBlurComponent {
		constexpr auto Material = 0x88; // ObjectProperty
		constexpr auto DepthPriorityGroup = 0x90; // ESceneDepthPriorityGroup
		constexpr auto BlurScale = 0x94; // float
		constexpr auto BlurFalloffExponent = 0x98; // float
		constexpr auto BlurOpacity = 0x9c; // float
		constexpr auto MaxCullDistance = 0xa0; // float
		constexpr auto DistanceFalloffExponent = 0xa4; // float
		constexpr auto bRenderAsVelocity = 0xa8; // char : 1
		constexpr auto bEnabled = 0xa8; // char : 1
		constexpr auto LocalToWorld = 0xb0; // FMatrix
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto High = 0xb0; // FExpressionInput
		constexpr auto Medium = 0xe4; // FExpressionInput
		constexpr auto Low = 0x118; // FExpressionInput
	}

	namespace n_UUIComponent_DisplayDeviceDetails {
		constexpr auto m_dwDeviceId = 0x120; // Fdword
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcDesc = 0x12c; // ObjectProperty
		constexpr auto m_mcType = 0x134; // ObjectProperty
		constexpr auto m_mcFrame = 0x13c; // ObjectProperty
		constexpr auto m_mcRarity = 0x144; // ObjectProperty
		constexpr auto m_mcIconA = 0x14c; // ObjectProperty
		constexpr auto m_mcIconAFrame = 0x154; // ObjectProperty
		constexpr auto m_mcIconATexture = 0x15c; // ObjectProperty
		constexpr auto m_mcIconB = 0x164; // ObjectProperty
		constexpr auto m_mcIconBFrame = 0x16c; // ObjectProperty
		constexpr auto m_mcIconBTexture = 0x174; // ObjectProperty
		constexpr auto m_pStatsList = 0x17c; // ObjectProperty
		constexpr auto m_pPerksList = 0x184; // ObjectProperty
	}

	namespace n_UUIData_Pair {
		constexpr auto m_pFirst = 0x60; // ObjectProperty
		constexpr auto m_pSecond = 0x68; // ObjectProperty
	}

	namespace n_UUIComponent_CenteredHeaderTabs {
		constexpr auto m_pBumpers = 0x1d8; // ObjectProperty [0x2]
		constexpr auto m_NavLeft = 0x1e8; // ObjectProperty
		constexpr auto m_NavRight = 0x1f0; // ObjectProperty
		constexpr auto m_fButtonSpace = 0x1f8; // float
		constexpr auto m_fBumperSpaceLeft = 0x1fc; // float
		constexpr auto m_fBumperSpaceRight = 0x200; // float
	}

	namespace n_ATgEmitter_CameraEffect {
		constexpr auto m_fDistFromCamera = 0x29c; // float
		constexpr auto m_bShowOnlyIn1P = 0x2a0; // char : 1
		constexpr auto m_bShowOnlyIn3P = 0x2a0; // char : 1
		constexpr auto m_bIsIn1P = 0x2a0; // char : 1
		constexpr auto m_bIsCameraEffectActive = 0x2a0; // char : 1
		constexpr auto m_SoundList = 0x2a4; // TArray<FFx_Sound>
	}

	namespace n_USeqVar_String {
		constexpr auto StrValue = 0xa0; // FString
	}

	namespace n_UUIHudMinimap_Spectator {
		constexpr auto m_mcPlayers = 0x7f8; // ObjectProperty [0x64]
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_UUIMoviePlayer {
		constexpr auto m_nLastTimerIndex = 0x1f8; // int32_t
		constexpr auto m_bInitialized = 0x1fc; // char : 1
		constexpr auto m_bInTransition = 0x1fc; // char : 1
		constexpr auto m_bResizeForSafeZones = 0x1fc; // char : 1
		constexpr auto m_mcRoot = 0x200; // ObjectProperty
		constexpr auto m_mcGlobal = 0x208; // ObjectProperty
		constexpr auto m_DataHandler = 0x210; // ObjectProperty
		constexpr auto m_TimerManager = 0x218; // ObjectProperty
		constexpr auto m_DataHandlerClass = 0x220; // UTgDataHandler*
		constexpr auto m_pTgCallbackDevice = 0x228; // FPointer
		constexpr auto m_pKeybindLookup = 0x230; // FPointer
		constexpr auto OnlineSub = 0x238; // ObjectProperty
		constexpr auto GameInterface = 0x240; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0x250; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x260; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0x270; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x280; // TScriptInterface<Class>
		constexpr auto MarketplaceInterface = 0x290; // TScriptInterface<Class>
	}

	namespace n_UUIComponent_MasteryRewards {
		constexpr auto m_pRewards = 0x120; // ObjectProperty
		constexpr auto m_PurchaseAction = 0x128; // ObjectProperty
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x60; // int32_t
		constexpr auto Frames = 0x64; // TArray<FParticleSystemReplayFrame>
	}

	namespace n_USeqAct_SetMesh {
		constexpr auto NewSkeletalMesh = 0x108; // ObjectProperty
		constexpr auto NewStaticMesh = 0x110; // ObjectProperty
		constexpr auto MeshType = 0x118; // EMeshType
		constexpr auto bIsAllowedToMove = 0x11c; // char : 1
		constexpr auto bAllowDecalsToReattach = 0x11c; // char : 1
	}

	namespace n_AWaterVolume {
		constexpr auto EntrySound = 0x314; // ObjectProperty
		constexpr auto EntryActor = 0x31c; // AActor*
		constexpr auto ExitSound = 0x324; // ObjectProperty
		constexpr auto ExitActor = 0x32c; // AActor*
	}

	namespace n_UUIComponent_SocialPlayer {
		constexpr auto m_mcName = 0x120; // ObjectProperty
		constexpr auto m_pName = 0x128; // ObjectProperty
		constexpr auto m_CrossplayIcon = 0x130; // ObjectProperty
		constexpr auto m_mcIcon = 0x138; // ObjectProperty
		constexpr auto m_mcStatus = 0x140; // ObjectProperty
		constexpr auto m_mcLevel = 0x148; // ObjectProperty
		constexpr auto m_mcLevelX = 0x150; // ObjectProperty
		constexpr auto m_mcRankedIndicator = 0x158; // ObjectProperty
		constexpr auto m_mcRankedIcon = 0x160; // ObjectProperty
		constexpr auto m_mcFrame = 0x168; // ObjectProperty
		constexpr auto m_mcTitle = 0x170; // ObjectProperty
		constexpr auto m_mcAddIcon = 0x178; // ObjectProperty
		constexpr auto m_mcAddFrame = 0x180; // ObjectProperty
		constexpr auto m_mcAddFrameBG = 0x188; // ObjectProperty
	}

	namespace n_UTgAudioComponent {
		constexpr auto m_bCanBeHeardDuringStealth = 0x2cc; // char : 1
		constexpr auto m_fStealthFadeInTime = 0x2d0; // float
		constexpr auto m_fStealthFadeOutTime = 0x2d4; // float
		constexpr auto m_fStealthVolumeMultiplier = 0x2d8; // float
	}

	namespace n_UTgSeqAct_TemporaryAddDevice {
		constexpr auto m_nDeviceId = 0x108; // int32_t
		constexpr auto m_nEquipPoint = 0x10c; // int32_t
	}

	namespace n_UUIMenuManager {
		constexpr auto m_pPopupManager = 0x244; // ObjectProperty
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto R = 0xe4; // char : 1
		constexpr auto G = 0xe4; // char : 1
		constexpr auto B = 0xe4; // char : 1
		constexpr auto A = 0xe4; // char : 1
	}

	namespace n_UCodecMovie {
		constexpr auto PlaybackDuration = 0x60; // float
	}

	namespace n_AApexDestructibleActor {
		constexpr auto LightEnvironment = 0x280; // ComponentProperty
		constexpr auto bFractureMaterialOverride = 0x288; // char : 1
		constexpr auto bPlaySingleFractureMaterialEffect = 0x288; // char : 1
		constexpr auto FractureMaterials = 0x28c; // TArray<ObjectProperty>
		constexpr auto StaticDestructibleComponent = 0x29c; // ComponentProperty
		constexpr auto LOD = 0x2a4; // int32_t
		constexpr auto VisibilityFactors = 0x2a8; // TArray<char>
		constexpr auto FractureSounds = 0x2b8; // TArray<ObjectProperty>
		constexpr auto FractureParticleEffects = 0x2c8; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_CombatRepair {
		constexpr auto m_CachedPawnOwner = 0xc8; // ObjectProperty
	}

	namespace n_UTgSeqVar_DamageType {
		constexpr auto DamageTypeValue = 0xa0; // UDamageType*
	}

	namespace n_UAkEvent {
		constexpr auto RequiredBank = 0x60; // ObjectProperty
		constexpr auto m_FirstPersonEvent = 0x68; // ObjectProperty
		constexpr auto m_ShutdownEvent = 0x70; // ObjectProperty
		constexpr auto m_bIgnoreOcclusion = 0x78; // char : 1
		constexpr auto m_bForce1pAnd3p = 0x78; // char : 1
	}

	namespace n_USeqEvent_SequenceActivated {
		constexpr auto InputLabel = 0x128; // FString
	}

	namespace n_UMeshBeaconClient {
		constexpr auto HostPendingRequest = 0xa4; // FOnlineGameSearchResult
		constexpr auto ClientPendingRequest = 0xb4; // FClientConnectionRequest
		constexpr auto CurrentBandwidthTest = 0xdc; // FClientBandwidthTestData
		constexpr auto ClientBeaconState = 0xf0; // EMeshBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xf1; // EMeshBeaconPacketType
		constexpr auto ConnectionRequestTimeout = 0xf4; // float
		constexpr auto ConnectionRequestElapsedTime = 0xf8; // float
		constexpr auto ResolverClassName = 0xfc; // FString
		constexpr auto ResolverClass = 0x10c; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0x114; // ObjectProperty
		constexpr auto bUsingRegisteredAddr = 0x11c; // char : 1
		constexpr auto __OnConnectionRequestResult__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestRequest__Delegate = 0x130; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestResults__Delegate = 0x140; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x150; // DelegateProperty
		constexpr auto __OnCreateNewSessionRequestReceived__Delegate = 0x160; // DelegateProperty
	}

	namespace n_UTgAIBehaviorCondition_HealthPercent {
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UTgControlModule_SpectatorOverview {
		constexpr auto DirectorModeSpectatorStallZ = 0x78; // float
		constexpr auto DirectorModeSpectatorMinStallZ = 0x7c; // float
	}

	namespace n_UPBRuleNodeRepeat {
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatMaxSize = 0x74; // float
	}

	namespace n_ATeleporter {
		constexpr auto URL = 0x378; // FString
		constexpr auto ProductRequired = 0x388; // FName
		constexpr auto bChangesVelocity = 0x390; // char : 1
		constexpr auto bChangesYaw = 0x390; // char : 1
		constexpr auto bReversesX = 0x390; // char : 1
		constexpr auto bReversesY = 0x390; // char : 1
		constexpr auto bReversesZ = 0x390; // char : 1
		constexpr auto bEnabled = 0x390; // char : 1
		constexpr auto bCanTeleportVehicles = 0x390; // char : 1
		constexpr auto TargetVelocity = 0x394; // FVector
		constexpr auto LastFired = 0x3a0; // float
	}

	namespace n_UTgAnimSequenceChain {
		constexpr auto m_bLoopChain = 0x168; // char : 1
		constexpr auto m_bResetOnRelevant = 0x168; // char : 1
		constexpr auto m_bDelayBlendOutToPlayAnim = 0x168; // char : 1
		constexpr auto m_bAdvanceOnReplay = 0x168; // char : 1
		constexpr auto m_bAdvanceOnAnimEnd = 0x168; // char : 1
		constexpr auto m_bIsAllowedToBlendOut = 0x168; // char : 1
		constexpr auto m_ReplayedThisFrame = 0x168; // char : 1
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x68; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x8c; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xb0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xd4; // EParticleCollisionComplete
		constexpr auto bApplyPhysics = 0xd8; // char : 1
		constexpr auto bPawnsDoNotDecrementCount = 0xd8; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0xd8; // char : 1
		constexpr auto bDropDetail = 0xd8; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0xd8; // char : 1
		constexpr auto bCollideWithWorld = 0xd8; // char : 1
		constexpr auto bCollideWithWorldAttractors = 0xd8; // char : 1
		constexpr auto ParticleMass = 0xdc; // FRawDistributionFloat
		constexpr auto DirScalar = 0x100; // float
		constexpr auto VerticalFudgeFactor = 0x104; // float
		constexpr auto DelayAmount = 0x108; // FRawDistributionFloat
		constexpr auto MaxCollisionDistance = 0x12c; // float
		constexpr auto ParticleAttractorCollisionActions = 0x130; // TArray<FParticleAttractorCollisionAction>
	}

	namespace n_UUIComponent_HudMenuMap {
		constexpr auto m_bMapFocused = 0x120; // char : 1
		constexpr auto m_pPlayerList = 0x124; // ObjectProperty
		constexpr auto m_pQuestList = 0x12c; // ObjectProperty
		constexpr auto m_pMap = 0x134; // ObjectProperty
		constexpr auto m_pContextMenu = 0x13c; // ObjectProperty
		constexpr auto m_pSpectatorPlayers = 0x144; // ObjectProperty
		constexpr auto m_grInput = 0x14c; // ObjectProperty
		constexpr auto m_pToggleFocusAction = 0x154; // ObjectProperty
		constexpr auto m_nViewTargetPlayerId = 0x15c; // int32_t
	}

}