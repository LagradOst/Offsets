// Created by BlueFire1337
// Updated 2022-01-30
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0x59a8800;
	constexpr auto GObjects = 0x59e53d0;
	constexpr auto GWorld = 0x5b339f8;

	namespace n_UCompositeCurveTable { // : UCurveTable
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_USourceEffectDynamicsProcessorPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_USourceEffectStereoDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UTeamStackUpActivity { // : UTeamBaseActivity
		constexpr auto DoorChecker = 0x1e8; // AAICharacter*
		constexpr auto StackUpDoor = 0x1f0; // ADoor*
	}

	namespace n_UCompressedImageSequenceProtocol { // : UImageSequenceProtocol
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_USubmixEffectMultibandCompressorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum { // : UNiagaraDataInterfaceAudioSubmix
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0x90; // float
	}

	namespace n_ULoudnessMeterWidget { // : UBaseWidget
		constexpr auto MovementSound_WidgetSwitcher = 0x278; // UWidgetSwitcher*
		constexpr auto PlayerCharacter = 0x280; // APlayerCharacter*
	}

	namespace n_UW_VOIPTalker_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto VerticalBox_65 = 0x268; // UVerticalBox*
		constexpr auto PlayerStateFound = 0x270; // bool
		constexpr auto PlayerController = 0x278; // AReadyOrNotPlayerController*
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UStackUpActivityProxy { // : UTeamActivityProxy
		constexpr auto StackUpDoor = 0x58; // ADoor*
		constexpr auto StackUpActor = 0x60; // AStackUpActor*
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_APlantArea { // : AActor
		constexpr auto OverlapArea = 0x230; // UBoxComponent*
	}

	namespace n_UInAppPurchaseComponent { // : UActorComponent
		constexpr auto InAppPurchaseLogMessage = 0xb0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf0; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UFreeArrestedActivity { // : UBaseActivity
		constexpr auto Target = 0x1b0; // APlayerCharacter*
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UMagicLeapARPinComponent { // : USceneComponent
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UMovieSceneSequenceTickManager { // : UObject
		constexpr auto SequenceActors = 0x28; // TArray<FMovieSceneSequenceActorPointers>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UW_LoadingScreen_C { // : ULoadingScreen
		constexpr auto UberGraphFrame = 0x2d8; // FPointerToUberGraphFrame
		constexpr auto BlinkSpaceToContinue = 0x2e0; // UWidgetAnimation*
		constexpr auto Image_1 = 0x2e8; // UImage*
		constexpr auto Loading = 0x2f0; // UTextBlock*
		constexpr auto Tips = 0x2f8; // UTextBlock*
		constexpr auto W_PageHeader = 0x300; // UW_PageHeader_C*
		constexpr auto Out Map = 0x308; // FString
		constexpr auto Out Mode = 0x318; // FString
	}

	namespace n_ADefaultPlayerStart_C { // : APlayerStart
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
		constexpr auto NextPlayerStart = 0x258; // ADefaultPlayerStart_C*
		constexpr auto Team = 0x260; // ETeamType
		constexpr auto SpawnsClasses = 0x268; // TArray<APawn*>
		constexpr auto bOverlapping = 0x278; // bool
	}

	namespace n_UANIMBP_Zipcuffs_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto bVisibleInRayTracing = 0x158; // char : 1
		constexpr auto bEvaluateWorldPositionOffset = 0x158; // char : 1
		constexpr auto BodyInstance = 0x160; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b8; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b9; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2bc; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2c0; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2c4; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c8; // int32_t
		constexpr auto CollisionRadius = 0x2cc; // float
		constexpr auto ShadeRadius = 0x2d0; // float
		constexpr auto NumSteps = 0x2d4; // int32_t
		constexpr auto InitialSeedDensity = 0x2d8; // float
		constexpr auto AverageSpreadDistance = 0x2dc; // float
		constexpr auto SpreadVariance = 0x2e0; // float
		constexpr auto SeedsPerStep = 0x2e4; // int32_t
		constexpr auto DistributionSeed = 0x2e8; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2ec; // float
		constexpr auto bCanGrowInShade = 0x2f0; // bool
		constexpr auto bSpawnsInShade = 0x2f1; // bool
		constexpr auto MaxInitialAge = 0x2f4; // float
		constexpr auto MaxAge = 0x2f8; // float
		constexpr auto OverlapPriority = 0x2fc; // float
		constexpr auto ProceduralScale = 0x300; // FFloatInterval
		constexpr auto ScaleCurve = 0x308; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x390; // int32_t
		constexpr auto ReapplyDensity = 0x394; // char : 1
		constexpr auto ReapplyRadius = 0x394; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x394; // char : 1
		constexpr auto ReapplyRandomYaw = 0x394; // char : 1
		constexpr auto ReapplyScaling = 0x394; // char : 1
		constexpr auto ReapplyScaleX = 0x394; // char : 1
		constexpr auto ReapplyScaleY = 0x394; // char : 1
		constexpr auto ReapplyScaleZ = 0x394; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x395; // char : 1
		constexpr auto ReapplyGroundSlope = 0x395; // char : 1
		constexpr auto ReapplyHeight = 0x395; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x395; // char : 1
		constexpr auto ReapplyZOffset = 0x395; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x395; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x395; // char : 1
		constexpr auto bEnableDensityScaling = 0x395; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x396; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x398; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a8; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3ac; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UIntervalGizmo { // : UInteractiveGizmo
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_ULightAttachment { // : UWeaponAttachment
		constexpr auto SpotLightComponent = 0xff8; // USpotLightComponent*
		constexpr auto PointLightComponent = 0x1000; // UPointLightComponent*
		constexpr auto bRepOn = 0x1008; // bool
		constexpr auto Intensity = 0x1010; // float
		constexpr auto InnerConeAngle = 0x1014; // float
		constexpr auto OuterConeAngle = 0x1018; // float
		constexpr auto LightColor = 0x101c; // FLinearColor
		constexpr auto IESProfile = 0x1030; // UTextureLightProfile*
		constexpr auto Attenuation = 0x1038; // float
		constexpr auto LensFlareClass = 0x1040; // ALensFlare*
		constexpr auto SpawnedLensFlare = 0x1048; // ALensFlare*
		constexpr auto NumOfFlashLightTrackingPoints = 0x1050; // int32_t
		constexpr auto FlashLightTrackingPoints = 0x1058; // TArray<AFlashLightTrackingPoint*>
		constexpr auto bLightOffDueToNotBeingEquipped = 0x10e8; // bool
	}

	namespace n_AScenarioGenerator { // : AVolume
		constexpr auto ScenarioMap = 0x258; // TMap<FString, FScenarioDataArray>
		constexpr auto ScenarioName = 0x2a8; // FString
		constexpr auto bSpawnWhenEntered = 0x2b8; // bool
		constexpr auto CurrentScenarioCoverActivator = 0x2c0; // AScenarioCoverActivator*
		constexpr auto ScenarioImportance = 0x2c8; // EScenarioImportance
		constexpr auto ScenarioCover = 0x2d0; // TArray<ACoverActor*>
		constexpr auto ScenarioSwatCover = 0x2e0; // TArray<ACoverActor*>
		constexpr auto ScenarioThreats = 0x2f0; // TArray<AThreatAwarenessActor*>
		constexpr auto ScenarioCoverActivators = 0x308; // TArray<AScenarioCoverActivator*>
		constexpr auto SpawnedCharacters = 0x318; // TArray<AAICharacter*>
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ASpectatorBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x248; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UW_TeamView_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CloseView_Progress_Box = 0x268; // USizeBox*
		constexpr auto CloseView_ProgressCircle_Image = 0x270; // UImage*
		constexpr auto CloseView_Text = 0x278; // UTextBlock*
		constexpr auto InvalidationBox_1 = 0x280; // UInvalidationBox*
		constexpr auto SwitchView_Text = 0x288; // UTextBlock*
		constexpr auto TeamIndicator_Image = 0x290; // UImage*
		constexpr auto TeamIndicator_Image_Style2 = 0x298; // UImage*
		constexpr auto TeamView_CurrentIndex_Text = 0x2a0; // UTextBlock*
		constexpr auto TeamView_CurrentIndex_Text_3 = 0x2a8; // UTextBlock*
		constexpr auto TeamView_Data = 0x2b0; // UVerticalBox*
		constexpr auto TeamView_Image = 0x2b8; // UImage*
		constexpr auto TeamView_PlayerHealth_Status_Text = 0x2c0; // UTextBlock*
		constexpr auto TeamView_PlayerName_Text = 0x2c8; // UTextBlock*
		constexpr auto TeamView_PlayerStatus_Arrested_Text = 0x2d0; // UTextBlock*
		constexpr auto TeamView_PlayerStatus_Stunned_Text = 0x2d8; // UTextBlock*
		constexpr auto PlayerCharacter = 0x2e0; // APlayerCharacter*
		constexpr auto ViewPlayerName = 0x2e8; // FString
		constexpr auto TotalTeamViewPlayers = 0x2f8; // int32_t
		constexpr auto CloseView_KeyName = 0x300; // FText
		constexpr auto MID_ProgressCircle = 0x318; // UMaterialInstanceDynamic*
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x248; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b0; // bool
		constexpr auto SessionTimeoutSecs = 0x2b4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2b8; // float
	}

	namespace n_USkeletalMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_AMissionPortal { // : AReadyOrNotTriggerVolume
		constexpr auto InteractableComponent = 0x258; // UInteractableComponent*
		constexpr auto SelectableGameModes = 0x260; // TArray<AReadyOrNotGameMode*>
		constexpr auto Profile = 0x270; // UReadyOrNotProfile*
		constexpr auto WhiteboardText = 0x278; // UTextRenderComponent*
		constexpr auto MissionURL = 0x288; // FString
		constexpr auto ModeURL = 0x298; // FString
		constexpr auto CompsToOutline = 0x2a8; // TArray<UStaticMeshComponent*>
		constexpr auto LightsToEnable = 0x2b8; // TArray<ULightComponent*>
		constexpr auto CompsToOutlineMissionSelected = 0x2c8; // TArray<UStaticMeshComponent*>
		constexpr auto LightsToEnableMissionSelected = 0x2d8; // TArray<ULightComponent*>
	}

	namespace n_ADevice_S590_Breach_v2_C { // : ABreachingShotgun
		constexpr auto UberGraphFrame = 0x12c0; // FPointerToUberGraphFrame
	}

	namespace n_AGlassActor { // : AActor
		constexpr auto DestructibleWindow = 0x220; // UDestructibleComponent*
		constexpr auto RandomGlassMaterial = 0x228; // TArray<UMaterialInstance*>
		constexpr auto RandomShatteredGlassMaterial = 0x238; // TArray<UMaterialInstance*>
		constexpr auto OnApplyDamageToWindow = 0x248; // FMulticastInlineDelegate
	}

	namespace n_ATrapActivator { // : AActor
		constexpr auto Activatees = 0x220; // TArray<ATrapActivatee*>
		constexpr auto bDisarmed = 0x230; // bool
	}

	namespace n_UAnimationSharingManager { // : UObject
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_AKingOfTheHillGS { // : AReadyOrNotGameState
		constexpr auto Mover = 0x6e0; // ATugOfWarMover*
	}

	namespace n_UUserDefinedImageCaptureProtocol { // : UUserDefinedCaptureProtocol
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnCameraCut = 0x4e8; // FMulticastInlineDelegate
	}

	namespace n_AChemlight { // : ABaseItem
		constexpr auto Ammo = 0x968; // UAmmoComponent*
		constexpr auto SocketSpawnName = 0x970; // FName
	}

	namespace n_URandomVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_ASecondary_Taser_V2_C { // : ATaser
		constexpr auto UberGraphFrame = 0x14f0; // FPointerToUberGraphFrame
		constexpr auto OverallTaserWireLength = 0x14f8; // float
		constexpr auto LastLocation = 0x14fc; // FVector
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_ULicenseSave { // : USaveGame
		constexpr auto bAcceptedAlphaNonDisclosureAgreement = 0x28; // bool
	}

	namespace n_UWidgetAnimationDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UMagicLeapImageTrackerComponent { // : USceneComponent
		constexpr auto TargetImageTexture = 0x1f8; // UTexture2D*
		constexpr auto Name = 0x200; // FString
		constexpr auto LongerDimension = 0x210; // float
		constexpr auto bIsStationary = 0x214; // bool
		constexpr auto bUseUnreliablePose = 0x215; // bool
		constexpr auto AxisOrientation = 0x216; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x218; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x228; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x258; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x4e8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x540; // FVector
		constexpr auto SplineBoundaryMin = 0x54c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x550; // FGuid
		constexpr auto BodySetup = 0x560; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x568; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x56c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x56c; // char : 1
		constexpr auto bMeshDirty = 0x56c; // char : 1
		constexpr auto ForwardAxis = 0x56d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x570; // float
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UHardCoverCombatMove { // : UBaseCombatMoveActivity
		constexpr auto LastWaitInCoverActivity = 0x1c0; // UTakeCoverActivity*
		constexpr auto LastTrackedEnemy = 0x1d8; // AReadyOrNotCharacter*
	}

	namespace n_UWorldBuildingActivity { // : UBaseActivity
		constexpr auto Icon = 0x1d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto bOneShotAnimationDataTableAnim = 0x1f8; // bool
		constexpr auto TableMontageName = 0x200; // FString
		constexpr auto FinalRotationOffset = 0x210; // FRotator
		constexpr auto MontageStart = 0x220; // UAnimMontage*
		constexpr auto MontageEnd = 0x228; // UAnimMontage*
		constexpr auto MontageLoop = 0x230; // UAnimMontage*
		constexpr auto Start = 0x238; // UAnimSequence*
		constexpr auto End = 0x240; // UAnimSequence*
		constexpr auto AbruptEnd = 0x248; // UAnimSequence*
		constexpr auto Loop = 0x250; // UAnimSequence*
		constexpr auto bKnockOutWhenStunned = 0x258; // bool
		constexpr auto IgnoredWorldBuildingActors = 0x260; // TArray<AActor*>
		constexpr auto StartActivitySpeech = 0x280; // FString
		constexpr auto FinishActivitySpeech = 0x290; // FString
		constexpr auto bShouldHolsterWeapon = 0x2aa; // bool
	}

	namespace n_UChargeCombatMove { // : UBaseCombatMoveActivity
		constexpr auto FlankingAvoidanceVolume = 0x1c0; // AFlankingAvoidanceVolume*
	}

	namespace n_UWheeledVehicleMovementComponent { // : UPawnMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_ULiveLinkCurveRemapSettings { // : ULiveLinkSourceSettings
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UDLSSSettings { // : UObject
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_UMatineeCameraShake { // : UCameraShakeBase
		constexpr auto OscillationDuration = 0xa8; // float
		constexpr auto OscillationBlendInTime = 0xac; // float
		constexpr auto OscillationBlendOutTime = 0xb0; // float
		constexpr auto RotOscillation = 0xb4; // FROscillator
		constexpr auto LocOscillation = 0xd8; // FVOscillator
		constexpr auto FOVOscillation = 0xfc; // FFOscillator
		constexpr auto AnimPlayRate = 0x108; // float
		constexpr auto AnimScale = 0x10c; // float
		constexpr auto AnimBlendInTime = 0x110; // float
		constexpr auto AnimBlendOutTime = 0x114; // float
		constexpr auto RandomAnimSegmentDuration = 0x118; // float
		constexpr auto Anim = 0x120; // UCameraAnim*
		constexpr auto AnimSequence = 0x128; // UCameraAnimationSequence*
		constexpr auto bRandomAnimSegment = 0x130; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x134; // float
		constexpr auto AnimInst = 0x138; // UCameraAnimInst*
		constexpr auto SequenceShakePattern = 0x180; // USequenceCameraShakePattern*
	}

	namespace n_USubmixEffectFilterPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_AClearPoint { // : AActor
		constexpr auto SpriteComponent = 0x220; // UBillboardComponent*
	}

	namespace n_AIncriminationClueSpawnPoint { // : AActorSpawnPoint
		constexpr auto IncriminationClueClass = 0x238; // AIncriminationClue*
		constexpr auto ClueFlareClass = 0x240; // AActor*
		constexpr auto ClueNumber = 0x248; // char
		constexpr auto ShowObjectiveMarkerIn = 0x24c; // float
		constexpr auto ClueName = 0x250; // FText
		constexpr auto ClueFoundMessage = 0x268; // FText
	}

	namespace n_UGizmoComponentHitTarget { // : UObject
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UStaticMeshSimulationComponent { // : UActorComponent
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x270; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UNiagaraDataInterfaceMeshRendererInfo { // : UNiagaraDataInterface
		constexpr auto MeshRenderer = 0x38; // UNiagaraMeshRendererProperties*
	}

	namespace n_UCheckDoorQuestNode { // : UBaseTeamQuestNode
		constexpr auto TargetDoor = 0x270; // ADoor*
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UW_StandardSlider_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ScaleBox_137 = 0x268; // UScaleBox*
		constexpr auto SliderValueText = 0x270; // UTextBlock*
		constexpr auto TheSlider = 0x278; // USlider*
		constexpr auto DescriptionTextWidget = 0x280; // UTextBlock*
		constexpr auto Description = 0x288; // FText
		constexpr auto SliderType = 0x2a0; // StandardSliderTypes
		constexpr auto SliderFloatMin = 0x2a4; // float
		constexpr auto SliderIntegerMin = 0x2a8; // int32_t
		constexpr auto SliderIntegerMax = 0x2ac; // int32_t
		constexpr auto SliderIntegerStep = 0x2b0; // int32_t
		constexpr auto SliderFloatMax = 0x2b4; // float
		constexpr auto SliderFloatStep = 0x2b8; // float
		constexpr auto PreviewFloatValue = 0x2bc; // float
		constexpr auto FloatValue = 0x2c0; // float
		constexpr auto IntegerValue = 0x2c4; // int32_t
		constexpr auto QualityValue = 0x2c8; // int32_t
		constexpr auto PreviewIntegerValue = 0x2cc; // int32_t
		constexpr auto PreviewQualityValue = 0x2d0; // int32_t
		constexpr auto OnFloatValueChanged = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnIntegralValueChanged = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnQualityValueChanged = 0x2f8; // FMulticastInlineDelegate
		constexpr auto bDisplayAsPercent = 0x308; // bool
		constexpr auto PercentageFormat = 0x310; // FText
		constexpr auto SupportedResolutions = 0x328; // TArray<FString>
		constexpr auto ResolutionValue = 0x338; // FString
		constexpr auto OnResolutionValueChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto SnapToGrid = 0x358; // bool
		constexpr auto OnDlssValueChanged = 0x360; // FMulticastInlineDelegate
		constexpr auto SliderTextSizeRatio = 0x370; // float
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x478; // int32_t
		constexpr auto PreviousLODLevel = 0x47c; // int32_t
		constexpr auto MinLOD = 0x480; // int32_t
		constexpr auto SubDivisionStepSize = 0x484; // int32_t
		constexpr auto StaticMesh = 0x488; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x490; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x494; // char : 1
		constexpr auto bOverrideWireframeColor = 0x494; // char : 1
		constexpr auto bOverrideMinLod = 0x494; // char : 1
		constexpr auto bOverrideNavigationExport = 0x494; // char : 1
		constexpr auto bForceNavigationObstacle = 0x494; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x494; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x494; // char : 1
		constexpr auto bOverrideLightMapRes = 0x494; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x495; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x495; // char : 1
		constexpr auto bUseSubDivisions = 0x495; // char : 1
		constexpr auto bUseDefaultCollision = 0x495; // char : 1
		constexpr auto bReverseCulling = 0x495; // char : 1
		constexpr auto OverriddenLightMapRes = 0x498; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x49c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x4a0; // float
		constexpr auto StreamingDistanceMultiplier = 0x4a4; // float
		constexpr auto LODData = 0x4a8; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4b8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4c8; // FLightmassPrimitiveSettings
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_ASearchAndDestroyGS { // : AReadyOrNotGameState
		constexpr auto BombCountActive = 0x6e0; // float
		constexpr auto bBombPlanted = 0x6e4; // bool
		constexpr auto bBombDetonate = 0x6e5; // bool
		constexpr auto bBombDefused = 0x6e6; // bool
		constexpr auto bHasBomb = 0x6e8; // APlayerCharacter*
	}

	namespace n_ALastKnownPositionActor { // : AActor
		constexpr auto SceneRoot = 0x220; // USceneComponent*
	}

	namespace n_UToFloatField { // : UFieldNodeFloat
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UHotkeyWidget { // : UUserWidget
		constexpr auto Hotkey_Text = 0x260; // UTextBlock*
		constexpr auto Hotkey_Image = 0x268; // UImage*
		constexpr auto HotkeyDivider_Image = 0x270; // UImage*
		constexpr auto RemainingUses_Text = 0x278; // UTextBlock*
		constexpr auto Anim_Pressed = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Released = 0x288; // UWidgetAnimation*
		constexpr auto InputName = 0x290; // FName
		constexpr auto Icon = 0x298; // FSlateBrush
		constexpr auto bCustomAnimation = 0x320; // char : 1
		constexpr auto bShowRemainingUses = 0x320; // char : 1
	}

	namespace n_ABP_TabletCapture_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto SceneCaptureComponent2D = 0x230; // USceneCaptureComponent2D*
		constexpr auto TabletHUD = 0x238; // UW_TabletHUD_C*
	}

	namespace n_AVIPPlayer_C { // : ABasePlayer_C
		constexpr auto UberGraphFrame = 0x2250; // FPointerToUberGraphFrame
	}

	namespace n_UANIMBP_Stinger_V2_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x258; // float
		constexpr auto bEnabled = 0x25c; // char : 1
		constexpr auto Settings = 0x260; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x280; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2a8; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2b8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UBulletImpactDebugText_C { // : UUserWidget
		constexpr auto Text = 0x260; // UTextBlock*
		constexpr auto ID = 0x268; // int32_t
	}

	namespace n_UW_DamagePaperdoll_C { // : UPlayerPaperdollWidget
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto bFlashingHead = 0x310; // bool
		constexpr auto bFlashingLeftLeg = 0x311; // bool
		constexpr auto bFlashingLeftArm = 0x312; // bool
		constexpr auto bFlashingRightLeg = 0x313; // bool
		constexpr auto bFlashingRightArm = 0x314; // bool
		constexpr auto bFlashingBody = 0x315; // bool
		constexpr auto bDamagedLeftLeg = 0x316; // bool
		constexpr auto bDamagedRightLeg = 0x317; // bool
		constexpr auto bDamagedHead = 0x318; // bool
		constexpr auto bDamagedBody = 0x319; // bool
		constexpr auto bDamagedLeftArm = 0x31a; // bool
		constexpr auto bDamagedRightArm = 0x31b; // bool
		constexpr auto bShowFlashyBits = 0x31c; // bool
		constexpr auto FlashingTime = 0x320; // float
		constexpr auto FlashOnLength = 0x324; // float
		constexpr auto FlashOffLength = 0x328; // float
		constexpr auto FlashOnDurationLeft = 0x32c; // float
		constexpr auto FlashOffDurationLeft = 0x330; // float
		constexpr auto HealedPaperdollColor = 0x334; // FLinearColor
		constexpr auto DamagedPaperdollColor = 0x344; // FLinearColor
		constexpr auto FinalDamagedPaperdollColor = 0x354; // FLinearColor
		constexpr auto bHealedLeftLeg = 0x364; // bool
		constexpr auto bHealedRightLeg = 0x365; // bool
		constexpr auto bHealedRightArm = 0x366; // bool
		constexpr auto bHealedLeftArm = 0x367; // bool
		constexpr auto bHealedHead = 0x368; // bool
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawPolygonFlags = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x42a; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxSlope = 0x44c; // float
		constexpr auto AgentMaxStepHeight = 0x450; // float
		constexpr auto MinRegionArea = 0x454; // float
		constexpr auto MergeRegionSize = 0x458; // float
		constexpr auto MaxSimplificationError = 0x45c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x460; // int32_t
		constexpr auto TileNumberHardLimit = 0x464; // int32_t
		constexpr auto PolyRefTileBits = 0x468; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x46c; // int32_t
		constexpr auto PolyRefSaltBits = 0x470; // int32_t
		constexpr auto NavMeshOriginOffset = 0x474; // FVector
		constexpr auto DefaultDrawDistance = 0x480; // float
		constexpr auto DefaultMaxSearchNodes = 0x484; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x488; // float
		constexpr auto RegionPartitioning = 0x48c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x48d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x490; // int32_t
		constexpr auto LayerChunkSplits = 0x494; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x498; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x498; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x498; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x498; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x498; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x498; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x498; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x498; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x499; // char : 1
		constexpr auto bUseVirtualFilters = 0x499; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x499; // char : 1
		constexpr auto bUseVoxelCache = 0x499; // char : 1
		constexpr auto TileSetUpdateInterval = 0x49c; // float
		constexpr auto HeuristicScale = 0x4a0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a4; // float
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x3b0; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b8; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c8; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_URadialSectorWidget { // : UUserWidget
		constexpr auto SectorImagePanel = 0x260; // UPanelWidget*
		constexpr auto SectorImage = 0x268; // UImage*
		constexpr auto SectorInnerRadius = 0x270; // float
		constexpr auto SectorOuterRadius = 0x274; // float
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_USourceEffectFilterPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x40; // float
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x268; // char : 1
		constexpr auto DamagePerSec = 0x26c; // float
		constexpr auto DamageType = 0x270; // UDamageType*
		constexpr auto PainInterval = 0x278; // float
		constexpr auto bEntryPain = 0x27c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x27c; // char : 1
		constexpr auto DamageInstigator = 0x280; // AController*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UTocSpeechData { // : UDataAsset
		constexpr auto CivilianIncapacitated = 0x30; // USoundCue*
		constexpr auto CivilianDead = 0x38; // USoundCue*
		constexpr auto CivilianRestrained = 0x40; // USoundCue*
		constexpr auto SuspectIncapacitated = 0x48; // USoundCue*
		constexpr auto SuspectDead = 0x50; // USoundCue*
		constexpr auto SuspectRestrained = 0x58; // USoundCue*
		constexpr auto OfficerDown = 0x60; // USoundCue*
		constexpr auto DOA = 0x68; // USoundCue*
		constexpr auto SWATVictory = 0x70; // UFMODEvent*
		constexpr auto SuspectVictory = 0x78; // UFMODEvent*
		constexpr auto SWATInCustody = 0x80; // UFMODEvent*
		constexpr auto SuspectInCustody_MP = 0x88; // UFMODEvent*
		constexpr auto SWATReinforcements = 0x90; // UFMODEvent*
		constexpr auto SuspectReinforcements = 0x98; // UFMODEvent*
		constexpr auto BothTeamsReinforcements = 0xa0; // UFMODEvent*
		constexpr auto SWATFriendlyFire = 0xa8; // UFMODEvent*
		constexpr auto SuspectFriendlyFire = 0xb0; // UFMODEvent*
		constexpr auto VIPEscorted = 0xb8; // UFMODEvent*
		constexpr auto VIPExecuted = 0xc0; // UFMODEvent*
		constexpr auto SWATKilledVIP = 0xc8; // UFMODEvent*
		constexpr auto SuspectKilledVIP = 0xd0; // UFMODEvent*
		constexpr auto VIPInCustody = 0xd8; // UFMODEvent*
		constexpr auto VIPReleased = 0xe0; // UFMODEvent*
	}

	namespace n_UEnvQueryManager { // : UAISubsystem
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UActivityFiniteStateMachine { // : UObject
		constexpr auto States = 0x28; // TArray<UActivityState*>
		constexpr auto ActiveState = 0x38; // UActivityState*
	}

	namespace n_ACoopGS { // : AReadyOrNotGameState
		constexpr auto bMissionSucceded = 0x6f0; // bool
		constexpr auto bMissionSoftCompleted = 0x6f1; // bool
		constexpr auto Mode = 0x6f2; // ECOOPMode
		constexpr auto CurrentDeployables = 0x6f4; // int32_t
		constexpr auto DeployableDepot = 0x6f8; // AActor*
		constexpr auto DepotLabel = 0x700; // FName
		constexpr auto DepotNumber = 0x708; // int32_t
		constexpr auto DepotCost = 0x70c; // int32_t
		constexpr auto CurrentPersonnel = 0x710; // int32_t
		constexpr auto CurrentUsedPersonnelPoints = 0x714; // int32_t
		constexpr auto PersonnelMapping = 0x718; // TMap<int32_t, int32_t>
		constexpr auto TotalAIOfficers = 0x768; // int32_t
		constexpr auto TotalOfficers = 0x76c; // int32_t
		constexpr auto NumCompleteExtraObjectives = 0x770; // int32_t
		constexpr auto NumTotalExtraObjectives = 0x774; // int32_t
		constexpr auto TeamKills = 0x778; // int32_t
		constexpr auto bAllPlayerCharactesDead = 0x77c; // bool
		constexpr auto SquadPointsRemaining = 0x780; // int32_t
		constexpr auto SelectedRedSpawnPoint = 0x784; // ESelectedSpawn
		constexpr auto RedSpawnSquadPoints = 0x788; // int32_t
		constexpr auto SelectedBlueSpawnPoint = 0x78c; // ESelectedSpawn
		constexpr auto BlueSpawnSquadPoints = 0x790; // int32_t
		constexpr auto missionMusic = 0x798; // UFMODEvent*
		constexpr auto musicInstance = 0x7a0; // FFMODEventInstance
		constexpr auto PromotedLeaderFormat = 0x7a8; // FText
		constexpr auto YesVotes = 0x7c0; // int32_t
		constexpr auto NoVotes = 0x7c4; // int32_t
		constexpr auto TOCDelay = 0x7d0; // float
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UAISubsystem { // : UObject
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x238; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x250; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x258; // FSoftObjectPath
		constexpr auto CameraSettings = 0x270; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x278; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x280; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x288; // char : 1
		constexpr auto bOverrideInstanceData = 0x288; // char : 1
		constexpr auto bReplicatePlayback = 0x288; // char : 1
		constexpr auto DefaultInstanceData = 0x290; // UObject*
		constexpr auto BurnInInstance = 0x298; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2a0; // bool
	}

	namespace n_UPlayMontageCallbackProxy { // : UObject
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UOperatorField { // : UFieldNodeBase
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_ABasePlayer_C { // : APlayerCharacter
		constexpr auto UberGraphFrame = 0x21c0; // FPointerToUberGraphFrame
		constexpr auto Handcuffs_Arrested = 0x21c8; // USkeletalMeshComponent*
		constexpr auto Current Muscle Strength = 0x21d0; // float
		constexpr auto Muscle Strength = 0x21d4; // float
		constexpr auto Muscle Strength DEAD = 0x21d8; // float
		constexpr auto In Air Muscle Strength Switch = 0x21dc; // bool
		constexpr auto In Air Switch Delay = 0x21dd; // bool
		constexpr auto bRadialActivated = 0x21de; // bool
		constexpr auto WeaponAllowed = 0x21df; // bool
		constexpr auto RadialWidget = 0x21e0; // UObject*
		constexpr auto bSuppressionDebug = 0x21e8; // bool
		constexpr auto bRadialActions = 0x21e9; // bool
		constexpr auto VaultStepAnim = 0x21f0; // UAnimMontage*
		constexpr auto VaultUpAnim = 0x21f8; // UAnimMontage*
		constexpr auto VaultOverAnim = 0x2200; // UAnimMontage*
		constexpr auto CurrentVaultMontage = 0x2208; // UAnimMontage*
		constexpr auto DeathBlendTime = 0x2210; // float
		constexpr auto CurrentSuppressionShakeAmount = 0x2214; // float
		constexpr auto SuppressionShakeDecreaseRate = 0x2218; // float
		constexpr auto ArmBreakShakeAmount = 0x221c; // float
		constexpr auto SuppressionShakeScale = 0x2220; // float
		constexpr auto DefaultIdleShake = 0x2224; // float
		constexpr auto SprintShakeAmount = 0x2228; // float
		constexpr auto SprintShakeDecreaseRate = 0x222c; // float
		constexpr auto CurrentSprintShakeAmount = 0x2230; // float
		constexpr auto WeaponWheel = 0x2238; // UW_WeaponWheel_C*
		constexpr auto ItemSelectionMenu = 0x2240; // UW_ItemSelectionMenu_C*
		constexpr auto TabletCaptureActor = 0x2248; // ABP_TabletCapture_C*
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UTreeView { // : UListView
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UNiagaraDataInterfaceCurlNoise { // : UNiagaraDataInterface
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto ClearInvalidTags = 0x4a; // bool
		constexpr auto FastReplication = 0x4b; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_ADynamicWorldActor { // : AActor
		constexpr auto DynamicLabel = 0x220; // FName
		constexpr auto bReplicateSpawn = 0x228; // bool
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0x180; // int32_t
		constexpr auto SizeY = 0x184; // int32_t
		constexpr auto ClearColor = 0x188; // FLinearColor
		constexpr auto AddressX = 0x198; // TextureAddress
		constexpr auto AddressY = 0x199; // TextureAddress
		constexpr auto bForceLinearGamma = 0x19a; // char : 1
		constexpr auto bHDR = 0x19a; // char : 1
		constexpr auto bGPUSharedFlag = 0x19a; // char : 1
		constexpr auto RenderTargetFormat = 0x19b; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0x19c; // char : 1
		constexpr auto MipsSamplerFilter = 0x19d; // TextureFilter
		constexpr auto MipsAddressU = 0x19e; // TextureAddress
		constexpr auto MipsAddressV = 0x19f; // TextureAddress
		constexpr auto OverrideFormat = 0x1a0; // EPixelFormat
	}

	namespace n_UMotivityMoveData { // : UDataAsset
		constexpr auto MovementStyles = 0x30; // TArray<FMovementStyle>
	}

	namespace n_UUniformVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_AShotgunImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UThrowItemThroughDoorActivity { // : UDoorBreachActivity
		constexpr auto ThrowItemClass = 0x1e0; // ABaseItem*
		constexpr auto OnThrowReady = 0x1e8; // FMulticastInlineDelegate
		constexpr auto OnThrowingItem = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ThrownItem = 0x210; // ABaseItem*
	}

	namespace n_UMovieSceneEventRepeaterSection { // : UMovieSceneEventSectionBase
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_ATrapActor { // : AActor
		constexpr auto TrapMeshComponent = 0x240; // UStaticMeshComponent*
		constexpr auto TrapActivateAudioComponent = 0x248; // UFMODAudioComponent*
		constexpr auto InteractableComponent = 0x250; // UInteractableComponent*
		constexpr auto ScoringComponent = 0x258; // UScoringComponent*
		constexpr auto SplineComponent = 0x260; // USplineComponent*
		constexpr auto CableMeshComponent = 0x268; // UStaticMeshComponent*
		constexpr auto CutCableComponent1 = 0x270; // UCableComponent*
		constexpr auto CutCableComponent2 = 0x278; // UCableComponent*
		constexpr auto TripWireTriggerComponent = 0x280; // UBoxComponent*
		constexpr auto PerceptionStimuliComp = 0x288; // UAIPerceptionStimuliSourceComponent*
		constexpr auto TrapRoot = 0x290; // USceneComponent*
		constexpr auto AttachedActor = 0x298; // AActor*
		constexpr auto TrapName = 0x2a0; // FString
		constexpr auto TrapType = 0x2b0; // ETrapType
		constexpr auto TrapStatus = 0x2b1; // ETrapState
		constexpr auto bCanUseMultitoolWhenActivated = 0x2b2; // bool
		constexpr auto bInitializeTrapOnBeginPlay = 0x2b3; // bool
		constexpr auto CableMesh = 0x2b8; // UStaticMesh*
		constexpr auto CableMaterial = 0x2c0; // UMaterialInterface*
		constexpr auto TrapTriggered = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UAnimNotify_ChangeBehaviour { // : UAnimNotify
		constexpr auto ChangeBehaviour = 0x38; // EChangeBehaviour
		constexpr auto Behaviours = 0x40; // TArray<EBehaviourMods>
	}

	namespace n_ATugOfWarGM { // : AReadyOrNotGameMode_PVP
		constexpr auto ArrestedBlueCharacters = 0x718; // TArray<APlayerCharacter*>
		constexpr auto ArrestedRedCharacters = 0x728; // TArray<APlayerCharacter*>
		constexpr auto TOWVictorySound = 0x738; // UFMODEvent*
		constexpr auto MatchLoopMusic = 0x740; // UFMODEvent*
		constexpr auto MatchStartMusic = 0x748; // UFMODEvent*
		constexpr auto MatchEndMusic = 0x750; // UFMODEvent*
	}

	namespace n_UAmbisonicsEncodingSettings { // : USoundfieldEncodingSettingsBase
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x450; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x460; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x470; // TArray<UMeshComponent*>
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x450; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x470; // char : 1
	}

	namespace n_UAsyncActionLoadPrimaryAsset { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UReadyOrNotDebugSubsystem { // : UWorldSubsystem
		constexpr auto bDrawMeleeRange = 0x30; // char : 1
		constexpr auto bInfiniteHealth = 0x30; // char : 1
		constexpr auto bInfiniteAmmo = 0x30; // char : 1
		constexpr auto bDrawGrenadePath = 0x30; // char : 1
		constexpr auto bRTXOn = 0x30; // char : 1
		constexpr auto bRTX_GlobalIlluminationOn = 0x30; // char : 1
		constexpr auto bRTX_ReflectionsOn = 0x30; // char : 1
		constexpr auto bRTX_AmbientOcclusionOn = 0x30; // char : 1
		constexpr auto bRTX_ShadowsOn = 0x31; // char : 1
		constexpr auto bRTX_TranslucencyOn = 0x31; // char : 1
		constexpr auto bVSyncOn = 0x31; // char : 1
		constexpr auto bOverlayOn_Fibonacci = 0x32; // bool
		constexpr auto bOverlayOn_LineUp = 0x33; // bool
		constexpr auto bOverlayOn_PistolLine = 0x34; // bool
		constexpr auto bOverlayOn_RifleLine = 0x35; // bool
		constexpr auto bOverlayOn_RuleOfThirds = 0x36; // bool
		constexpr auto bApplyGlobalDamageMultiplier_Weapons = 0x37; // char : 1
		constexpr auto bApplyGlobalDamageMultiplier_Grenades = 0x37; // char : 1
		constexpr auto GlobalDamageMultiplier_Weapons = 0x38; // float
		constexpr auto GlobalDamageMultiplier_Grenades = 0x3c; // float
		constexpr auto bLogWeaponDamageValuesToConsole = 0x40; // char : 1
		constexpr auto bShowObjectiveMarkers = 0x40; // char : 1
		constexpr auto bShowAllEvidenceActors = 0x40; // char : 1
		constexpr auto bShowHesitationBar = 0x40; // char : 1
		constexpr auto bLogPlayerAnimationStatus = 0x40; // char : 1
		constexpr auto bDrawInteractableComponents = 0x40; // char : 1
		constexpr auto bDisableInteractableComponent = 0x40; // char : 1
		constexpr auto bDrawDebugTraces = 0x40; // char : 1
		constexpr auto bDrawDoorKillStunDistances = 0x41; // char : 1
		constexpr auto bMuteFMOD = 0x41; // char : 1
		constexpr auto bPauseFMOD = 0x41; // char : 1
		constexpr auto bForceOpenAllDoors = 0x41; // char : 1
		constexpr auto bForceCloseAllDoors = 0x41; // char : 1
		constexpr auto bLaserEyes = 0x41; // char : 1
		constexpr auto bDisableMusic = 0x41; // char : 1
		constexpr auto bDrawCoverPoints = 0x41; // char : 1
		constexpr auto bDrawCoverOctree = 0x42; // char : 1
		constexpr auto bSWATDynamicCover = 0x42; // char : 1
		constexpr auto bSuspectDynamicCover = 0x42; // char : 1
		constexpr auto bDrawSWATCoverLogic = 0x42; // char : 1
		constexpr auto bDrawSuspectCoverLogic = 0x42; // char : 1
		constexpr auto bInfiniteSWATItems = 0x42; // char : 1
	}

	namespace n_UW_VOIPTalkerEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_191 = 0x268; // UImage*
		constexpr auto PlayerChannel = 0x270; // UTextBlock*
		constexpr auto PlayerName = 0x278; // UTextBlock*
		constexpr auto VoiceImg = 0x280; // UScaleBox*
		constexpr auto PlayerState = 0x288; // APlayerState*
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UW_DebugInfo_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto DebugName_Text = 0x268; // UTextBlock*
		constexpr auto DebugValue_Text = 0x270; // UTextBlock*
		constexpr auto Image_54 = 0x278; // UImage*
		constexpr auto DebugName = 0x280; // FText
		constexpr auto DebugNameFont = 0x298; // FSlateFontInfo
		constexpr auto DebugValueFont = 0x2f0; // FSlateFontInfo
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UReadyOrNotAnimInstance { // : UMotivityAnimInstance
		constexpr auto Velocity = 0x2e4; // FVector
		constexpr auto Speed = 0x2f0; // float
		constexpr auto SpeedHorizontal = 0x2f4; // float
		constexpr auto SpeedVertical = 0x2f8; // float
		constexpr auto MaxSpeed = 0x2fc; // float
		constexpr auto Direction = 0x300; // float
		constexpr auto ViewPitch = 0x304; // float
		constexpr auto ViewYaw = 0x308; // float
		constexpr auto bIsMoving = 0x30c; // bool
		constexpr auto bIsInAir = 0x30d; // bool
		constexpr auto HeadLookRotation = 0x310; // FRotator
		constexpr auto ActorTransform = 0x320; // FTransform
		constexpr auto VelocityLocalNormalized = 0x350; // FVector
		constexpr auto CurrentDirection = 0x35c; // EMoveDirection
		constexpr auto WalkSpeedDatabase = 0x360; // TArray<float>
		constexpr auto JogSpeedDatabase = 0x370; // TArray<float>
		constexpr auto CrouchWalkSpeedDatabase = 0x380; // TArray<float>
		constexpr auto DirDegreesPerSecond = 0x390; // float
		constexpr auto ForwardDirAngle = 0x394; // float
		constexpr auto BackwardDirAngle = 0x398; // float
		constexpr auto LeftDirAngle = 0x39c; // float
		constexpr auto RightDirAngle = 0x3a0; // float
		constexpr auto ForwardDirDeg = 0x3a4; // float
		constexpr auto BackwardDirDeg = 0x3a8; // float
		constexpr auto LeftDirDeg = 0x3ac; // float
		constexpr auto RightDirDeg = 0x3b0; // float
		constexpr auto StrafeForwardDir = 0x3b4; // float
		constexpr auto StrafeBackwardDir = 0x3b8; // float
		constexpr auto StrafeLeftDir = 0x3bc; // float
		constexpr auto StrafeRightDir = 0x3c0; // float
		constexpr auto MovementAlpha = 0x3c4; // float
		constexpr auto MovementJogAlpha = 0x3c8; // float
		constexpr auto MovementJogThreshold = 0x3cc; // float
		constexpr auto LeftFootIKLocation = 0x3d0; // FVector
		constexpr auto RightFootIKLocation = 0x3dc; // FVector
		constexpr auto LeftFootIKRotation = 0x3e8; // FRotator
		constexpr auto RightFootIKRotation = 0x3f4; // FRotator
		constexpr auto HipOffsetVector = 0x400; // FVector
		constexpr auto bCrouching = 0x40c; // bool
		constexpr auto bIsStopping = 0x40d; // bool
		constexpr auto HeadRotation = 0x410; // FRotator
		constexpr auto bPlayingTurnTransition = 0x41c; // bool
		constexpr auto TransitionThresholdAngle = 0x420; // float
		constexpr auto TurnInPlaceDelay = 0x424; // float
		constexpr auto RotTransitions = 0x428; // TArray<FRotTransitionInfo>
		constexpr auto RotTransitionsAI = 0x438; // TArray<FRotTransitionInfoAI>
		constexpr auto ActiveTurnAnim = 0x448; // UAnimSequence*
		constexpr auto ActiveTurnRecoveryAnim = 0x450; // UAnimSequence*
		constexpr auto ActiveCurveSourceAnim = 0x458; // UAnimSequence*
		constexpr auto ActiveTurnAnimTime = 0x468; // float
		constexpr auto ActiveTurnRecoveryAnimTime = 0x46c; // float
		constexpr auto ActiveTurnAnimTimeSmoothed = 0x470; // float
		constexpr auto CurrentTurnInPlaceIndex = 0x474; // int32_t
		constexpr auto ViewYawCache = 0x478; // float
		constexpr auto YawOffset = 0x4b0; // float
		constexpr auto RootYawOffset = 0x4b4; // float
		constexpr auto CurMotionBlock = 0x4c1; // EMotionBlockType
		constexpr auto TurnPlayrateModifier = 0x4c4; // float
		constexpr auto bIsTurnInPlaceRecovery = 0x4c8; // bool
		constexpr auto TurnInPlaceRecoveryStartTime = 0x4cc; // float
		constexpr auto bIsFalling = 0x4d0; // bool
		constexpr auto bHasPrelanded = 0x4d1; // bool
		constexpr auto bJumpRecoveryActive = 0x4d2; // bool
		constexpr auto JumpRecoveryAnimTime = 0x4d4; // float
		constexpr auto JumpRecoveryStrength = 0x4d8; // float
		constexpr auto JumpRecoveryTime = 0x4dc; // float
		constexpr auto DirAngle = 0x4e8; // float
		constexpr auto DirAngleDegrees = 0x4ec; // float
		constexpr auto CurrentDirectionExt = 0x4f0; // EMoveDirectionExt
		constexpr auto bIsTeamMLO = 0x4f1; // bool
		constexpr auto LeftHandIKAlpha = 0x4f4; // float
		constexpr auto SprintAlpha = 0x4f8; // float
		constexpr auto bIsDeployableEquipped = 0x4fc; // bool
		constexpr auto bIsPistol = 0x4fd; // bool
		constexpr auto bIsRifle = 0x4fe; // bool
		constexpr auto bIsItem = 0x4ff; // bool
		constexpr auto bItemOneHanded = 0x500; // bool
		constexpr auto bIsC2Charge = 0x501; // bool
		constexpr auto bLevel1MovementTrigger = 0x502; // bool
		constexpr auto bLevel2MovementTrigger = 0x503; // bool
		constexpr auto bLevel3MovementTrigger = 0x504; // bool
		constexpr auto bCrouchLevel1MovementTrigger = 0x505; // bool
		constexpr auto bRotationRateReached = 0x506; // bool
		constexpr auto DeltaRotation = 0x508; // float
		constexpr auto SprintFPAlpha = 0x518; // float
	}

	namespace n_UDisarmStandaloneTrapActivity { // : UBaseActivity
		constexpr auto TrapToDisarm = 0x1b0; // ATrapActor*
	}

	namespace n_AAdvancedGameSession { // : AGameSession
		constexpr auto BanList = 0x238; // TMap<FUniqueNetIdRepl, FText>
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_UARTexture { // : UTexture
		constexpr auto TextureType = 0x178; // EARTextureType
		constexpr auto Timestamp = 0x17c; // float
		constexpr auto ExternalTextureGuid = 0x180; // FGuid
		constexpr auto Size = 0x190; // FVector2D
	}

	namespace n_ASwatCrouchVolume { // : AVolume
		constexpr auto CachedSwat = 0x258; // TMap<ASWATCharacter*, bool>
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x250; // int32_t
		constexpr auto ClientActors = 0x258; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x280; // float
		constexpr auto BaseLookUpRate = 0x284; // float
		constexpr auto MovementComponent = 0x288; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x290; // USphereComponent*
		constexpr auto MeshComponent = 0x298; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a0; // char : 1
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x220; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x228; // AGameModeBase*
		constexpr auto SpectatorClass = 0x230; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x238; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x248; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x24c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x250; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x254; // float
	}

	namespace n_UNiagaraParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x1c0; // bool
		constexpr auto bHandlingDisconnect = 0x1c1; // bool
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UImage { // : UWidget
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_AMessagePromptActor { // : AActor
		constexpr auto MessageMapID = 0x220; // FString
		constexpr auto bIsBigPopUp = 0x230; // bool
		constexpr auto bHasDisplayedMessage = 0x231; // bool
		constexpr auto MessageTitle = 0x238; // FText
		constexpr auto MessageContent = 0x250; // TArray<FText>
		constexpr auto MessageActions = 0x260; // TArray<FMessagePromptContent>
	}

	namespace n_USoundNodeQualityLevel { // : USoundNode
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto ShotDisplayName = 0x168; // FString
		constexpr auto DisplayName = 0x178; // FText
	}

	namespace n_UGizmoWorldAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bPrimeOnLoad = 0x170; // char : 1
		constexpr auto FirstNode = 0x178; // USoundNode*
		constexpr auto VolumeMultiplier = 0x180; // float
		constexpr auto PitchMultiplier = 0x184; // float
		constexpr auto AttenuationOverrides = 0x188; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x528; // float
		constexpr auto bOverrideAttenuation = 0x530; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x530; // char : 1
		constexpr auto CookedQualityIndex = 0x534; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x538; // char : 1
	}

	namespace n_UANIMBP_Player_FP_Master_C { // : URoNAnimInstance_PlayerFP
		constexpr auto UberGraphFrame = 0x5b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x5b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x6c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x7c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x920; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x948; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x968; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_17 = 0xa70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0xb78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0xc18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_16 = 0xc98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0xda0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_15 = 0xdc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0xec8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0xee8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0xf08; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LazySpringBone = 0xf28; // FAnimNode_LazySpringBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x10e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x11e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x12a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x1358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x13d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x1458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x14d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x1558; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyCurve_2 = 0x1660; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_ModifyCurve = 0x16b8; // FAnimNode_ModifyCurve
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x1710; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x17d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x1850; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x19a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x19d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x1a70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x1a98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x1ba0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x1ca8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_5 = 0x1db0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x1df8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_20 = 0x1ee0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1fa8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x2068; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x2090; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x20b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x21c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x21e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x2200; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_19 = 0x2280; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x2348; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x23e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_4 = 0x2468; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x24b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_PivotBone_5 = 0x24d0; // FAnimNode_PivotBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x25d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x26d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_CopyPoseFromMesh_2 = 0x27e0; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x29b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x2a78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x2a98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x2ba0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x2bc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x2be0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x2ce8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x2df0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_PivotBone_4 = 0x2e10; // FAnimNode_PivotBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x2f10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x2fd0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x3080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x3100; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x3180; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x3200; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x3280; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x33d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x3488; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x3508; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x3588; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x3608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x3688; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x37e0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x3890; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x3910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x3990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x3a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x3a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x3be8; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x3dc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByEnum = 0x3de0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x3e90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x3f10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x3f90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x4010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x4090; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x41e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x4230; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x4250; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x43a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x43d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x43f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x4420; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x4448; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x4470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x44f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_18 = 0x4518; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_19 = 0x45e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x4610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_18 = 0x4638; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x4668; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x46e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x4710; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_17 = 0x47d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x4808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_16 = 0x4830; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x4860; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x4910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x4990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x4a10; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x4ad8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4ba0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x4bc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x4cc8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x4e20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x4e48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x4e70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x4e98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x4ec0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x4ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x4f10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x4f38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x4fb8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_15 = 0x5080; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x50b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_14 = 0x50d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x5108; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x5130; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x51b0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_13 = 0x5278; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x52a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_12 = 0x52d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x5300; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x53b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x53d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x5400; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x5428; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x5450; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x5478; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x54a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x5540; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x55e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x5660; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x5700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x5780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x5800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x58a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x5940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x59c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x5a40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x5ac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0x5b40; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x5c08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x5c88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0x5d28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x5d58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x5dd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x5e58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x5ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x5f78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x6018; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x6098; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x6138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x61b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x6258; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x62f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x6378; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x6418; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x6498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0x6518; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x65e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x6660; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x6720; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x67a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x6820; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x68e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_10 = 0x6988; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x69b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x6a38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x6ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x6b58; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x6bf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x6c78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x6cf8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x6d98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0x6e18; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x6ee0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x6f80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x7000; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x70c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0x7140; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x7208; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x7288; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x72b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_8 = 0x72e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x7310; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x73c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_PivotBone_3 = 0x7518; // FAnimNode_PivotBone
		constexpr auto AnimGraphNode_PivotBone_2 = 0x7618; // FAnimNode_PivotBone
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x7718; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x77d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x7858; // FAnimNode_Slot
		constexpr auto AnimGraphNode_PivotBone = 0x78a0; // FAnimNode_PivotBone
		constexpr auto AnimGraphNode_Slot = 0x79a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x79e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x7b40; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LegIK_2 = 0x7b60; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_LegIK = 0x7c58; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_SaveCachedPose = 0x7d50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x7ea8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x7ed0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x7ef8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x7f20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x7f48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x7f70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x7f98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x7fc0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x7fe8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x8010; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x8038; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x8060; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x8088; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x80b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x80d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x8158; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0x81d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_7 = 0x82a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x82d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x8350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0x83d0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_StateResult_6 = 0x8498; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x84c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0x8548; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x8610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x8690; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x86c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x8740; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x8808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x8888; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x88b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x8938; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x8a00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x8a80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x8ab0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x8b50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x8bf0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x8c90; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x8d58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x8d80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x8da8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x8dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose = 0x8e50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_2 = 0x8e78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x8ea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x8f28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x8fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x9048; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer = 0x9110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x9190; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x91c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x9270; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x9378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Root = 0x9480; // FAnimNode_Root
		constexpr auto CameraRotationRate = 0x94b0; // FRotator
		constexpr auto bIsAiming = 0x94bc; // bool
		constexpr auto bIsFocusedAiming = 0x94bd; // bool
		constexpr auto bIsReloading = 0x94be; // bool
		constexpr auto AimInterp = 0x94c0; // float
		constexpr auto bIsMagCheck = 0x94c4; // bool
		constexpr auto IdlePlayrate = 0x94c8; // float
		constexpr auto ProcRecoilTrans = 0x94cc; // FVector
		constexpr auto ProcRecoilRot = 0x94d8; // FRotator
		constexpr auto ProcRecoilBuildupTrans = 0x94e4; // FVector
		constexpr auto ProcRecoilBuildupRot = 0x94f0; // FRotator
		constexpr auto NewVar_1 = 0x94fc; // FRotator
		constexpr auto StanceAdjustment = 0x9508; // FVector
		constexpr auto CapsuleRot = 0x9514; // FRotator
		constexpr auto LazyAlpha = 0x9520; // float
		constexpr auto BaseMagWeaponRef = 0x9528; // ABaseMagazineWeapon*
		constexpr auto PlayerCharRef = 0x9530; // APlayerCharacter*
		constexpr auto DeltaSeconds = 0x9538; // float
		constexpr auto LegsBroken = 0x953c; // bool
		constexpr auto ArmsBroken = 0x953d; // bool
		constexpr auto AimingLocoStrength = 0x9540; // float
		constexpr auto bIsCrouched = 0x9544; // bool
		constexpr auto bLowReadyPointUp = 0x9545; // bool
		constexpr auto bLowReadyPointDown = 0x9546; // bool
		constexpr auto LowReadyPointUpAlpha = 0x9548; // float
		constexpr auto LowReadyPointDownAlpha = 0x954c; // float
		constexpr auto LeanAlpha = 0x9550; // float
		constexpr auto FreeLookRot = 0x9554; // FRotator
		constexpr auto StabilizeMovementAlpha = 0x9560; // float
		constexpr auto QuickLeanAmount = 0x9564; // float
		constexpr auto bSightTweakMode = 0x9568; // bool
		constexpr auto bIsJumping = 0x9569; // bool
		constexpr auto bIsSprinting = 0x956a; // bool
		constexpr auto InputUpDown = 0x956c; // float
		constexpr auto bOnLadder = 0x9570; // bool
		constexpr auto bInteractionActive = 0x9571; // bool
		constexpr auto Hand_IK_Left = 0x9574; // float
		constexpr auto Hand_IK_Right = 0x9578; // float
		constexpr auto bHasUnderbarrelAttachment = 0x957c; // bool
		constexpr auto UnderbarrelType = 0x957d; // EWeaponUnderbarrelAnimationType
		constexpr auto bIsMontagePlaying = 0x957e; // bool
		constexpr auto bIsGrenade = 0x957f; // bool
		constexpr auto ShakeAmount = 0x9580; // float
		constexpr auto bArrested = 0x9584; // bool
		constexpr auto DirBlendTime = 0x9588; // float
		constexpr auto LeftHandSprintHack = 0x958c; // float
		constexpr auto LeftHandWorldVector = 0x9590; // FVector
		constexpr auto LeftHandWorldRotator = 0x959c; // FRotator
		constexpr auto LeftHandWorldAlpha = 0x95a8; // float
		constexpr auto LeftHandWorldElbowVector = 0x95ac; // FVector
		constexpr auto bLeftHandDoorActive = 0x95b8; // bool
		constexpr auto LeanHeadSocketLocation = 0x95bc; // FVector
		constexpr auto LeanHeadBlendAlpha = 0x95c8; // float
		constexpr auto LeanHeadOffset = 0x95cc; // FVector
		constexpr auto Acceleration = 0x95d8; // FVector
		constexpr auto CameraBobTrans = 0x95e4; // FVector
		constexpr auto StartMotionWeight = 0x95f0; // float
		constexpr auto StartMotionPlayrate = 0x95f4; // float
		constexpr auto WeaponBobTrans = 0x95f8; // FVector
		constexpr auto WeaponBobRot = 0x9604; // FRotator
		constexpr auto WeaponBobAlpha = 0x9610; // float
		constexpr auto WeaponBobTrigger = 0x9614; // bool
		constexpr auto bShouldAllowStopMotion = 0x9615; // bool
		constexpr auto bBuildUpSprint = 0x9616; // bool
		constexpr auto SprintBuildupAlpha = 0x9618; // float
		constexpr auto bIsHeavyArmor = 0x961c; // bool
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UMagazineDisplayComponent { // : UStaticMeshComponent
		constexpr auto FoundWeapon = 0x4e0; // ABaseMagazineWeapon*
		constexpr auto RequireMeshs = 0x4f0; // TArray<USkeletalMesh*>
		constexpr auto ItemCategory = 0x500; // EItemCategory
		constexpr auto MinimumMagazineCountToDisplay = 0x504; // int32_t
		constexpr auto Socket = 0x508; // FName
	}

	namespace n_UCursor_Pen_C { // : UCursorWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Cursor_Switcher = 0x268; // UWidgetSwitcher*
		constexpr auto Image_8 = 0x270; // UImage*
		constexpr auto Mouse = 0x278; // UImage*
		constexpr auto MouseOverlay = 0x280; // UOverlay*
		constexpr auto PenColorSwitcher = 0x288; // UWidgetSwitcher*
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_USubmixEffectReverbPluginPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x91; // FSubmixEffectReverbPluginSettings
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter { // : UMaterialExpressionRuntimeVirtualTextureSample
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_ULevelSequenceDirector { // : UObject
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
		constexpr auto SubSequenceID = 0x30; // int32_t
		constexpr auto MovieScenePlayerIndex = 0x34; // int32_t
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x1bf8; // float
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UDatasmithVREDSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UDatasmithPointLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UPaperFlipbook { // : UObject
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto Keyframes = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_ASuspectArmor { // : ABaseArmour
		constexpr auto SuspectArmorCoverage = 0xad8; // ESuspectArmorCoverage
		constexpr auto ExplosionScreenShake = 0xae8; // UMatineeCameraShake*
		constexpr auto ExplosionShakeRadius = 0xaf0; // float
		constexpr auto ExplosionDamageType = 0xaf8; // UDamageType*
		constexpr auto MaxDamageOnDetonation = 0xb00; // float
		constexpr auto MinDamageOnDetonation = 0xb04; // float
		constexpr auto DamageInnerRadius = 0xb08; // float
		constexpr auto DamageOuterRadius = 0xb0c; // float
		constexpr auto ExplosionDamageDelayAfterEffect = 0xb10; // float
		constexpr auto ExplosionParticle = 0xb18; // UParticleSystem*
		constexpr auto ExplosionAudioFMOD = 0xb20; // UFMODEvent*
	}

	namespace n_UInteractiveGizmo { // : UObject
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UGetUserPrivilegeCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UClothingAssetBase { // : UObject
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UPaperTerrainMaterial { // : UDataAsset
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_AKingOfTheHostageGS { // : AReadyOrNotGameState
		constexpr auto RedTeam_RoundTimeRemaining = 0x6e0; // float
		constexpr auto BlueTeam_RoundTimeRemaining = 0x6e4; // float
	}

	namespace n_UObjectiveMarkerWidget { // : UBaseWidget
		constexpr auto ParentComponent = 0x278; // UObjectiveMarkerComponent*
		constexpr auto RootCanvasPanel = 0x280; // UCanvasPanel*
		constexpr auto Icon_SizeBox = 0x288; // USizeBox*
		constexpr auto Icon_Image = 0x290; // UImage*
		constexpr auto DirectionalArrow_Image = 0x298; // UImage*
		constexpr auto DistanceInMeters_Text = 0x2a0; // UTextBlock*
		constexpr auto MarkerName_Text = 0x2a8; // UTextBlock*
		constexpr auto Location = 0x2b0; // FVector
		constexpr auto DistanceToLocalPlayer = 0x2bc; // float
		constexpr auto DirectionAngle = 0x2c0; // float
		constexpr auto bHideDistance = 0x2c4; // char : 1
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_URoNAnimInstance_PlayerTP { // : UReadyOrNotAnimInstance
		constexpr auto Proxy = 0x520; // FReadyOrNotAnimInstanceProxyTP
		constexpr auto LastAnimWeaponData = 0xc90; // UReadyOrNotWeaponAnimData*
		constexpr auto EditorWeaponAnimData = 0xc98; // UReadyOrNotWeaponAnimData*
		constexpr auto bWeaponDown = 0xca0; // bool
		constexpr auto bIsAiming = 0xca1; // bool
		constexpr auto bIsShieldEquipped = 0xca2; // bool
		constexpr auto AimingAlpha = 0xca4; // float
		constexpr auto bLeanLeft = 0xca8; // bool
		constexpr auto bLeanRight = 0xca9; // bool
		constexpr auto QuickLeanLeftAmount = 0xcac; // float
		constexpr auto QuickLeanRightAmount = 0xcb0; // float
		constexpr auto QuickLeanLeftAlpha = 0xcb4; // float
		constexpr auto QuickLeanRightAlpha = 0xcb8; // float
		constexpr auto QuickLeanIntensity = 0xcbc; // float
		constexpr auto FootIKValue = 0xcc0; // float
		constexpr auto FootIKAlpha = 0xcc4; // float
		constexpr auto bArrested = 0xcc8; // bool
		constexpr auto bIsDead = 0xcc9; // bool
		constexpr auto bDeathAnimEnd = 0xcca; // bool
		constexpr auto bStunned = 0xccb; // bool
		constexpr auto bTased = 0xccc; // bool
		constexpr auto bOnLadder = 0xccd; // bool
		constexpr auto LadderUpDownMovement = 0xcd0; // float
		constexpr auto LeanAngleY = 0xcd4; // float
		constexpr auto LeanAngleZ = 0xcd8; // float
		constexpr auto bCoverLeft = 0xcdc; // bool
		constexpr auto bCoverRight = 0xcdd; // bool
		constexpr auto bCoverMiddle = 0xcde; // bool
		constexpr auto bCoverLeftLow = 0xcdf; // bool
		constexpr auto bCoverRightLow = 0xce0; // bool
		constexpr auto bCoverPeek = 0xce1; // bool
		constexpr auto AimOffsetAlpha = 0xce4; // float
		constexpr auto AimOffsets = 0xcec; // FVector2D
		constexpr auto bJumpStartTrigger = 0xd0c; // bool
		constexpr auto SmoothMappedLeanToAnimStandLeft = 0xd10; // float
		constexpr auto SmoothMappedLeanToAnimStandRight = 0xd14; // float
		constexpr auto SmoothMappedLeanToAnimCrouchLeft = 0xd18; // float
		constexpr auto SmoothMappedLeanToAnimCrouchRight = 0xd1c; // float
		constexpr auto Speed_tp_rifle_stand_sprint_f = 0xd20; // float
		constexpr auto Crouch_Idle_Pose_Low_TP = 0xd28; // UAnimSequenceBase*
		constexpr auto Crouch_Idle_Pose_Up_TP = 0xd30; // UAnimSequenceBase*
		constexpr auto Crouch_Idle_Pose_Shld_TP = 0xd38; // UAnimSequenceBase*
		constexpr auto Crouch_Idle_Pose_Sights_TP = 0xd40; // UAnimSequenceBase*
		constexpr auto Crouch_Idle_Pose_Ret_TP = 0xd48; // UAnimSequenceBase*
		constexpr auto Crouch_Idle_Pose_Ovr_TP = 0xd50; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Low_TP = 0xd58; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Up_TP = 0xd60; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Shld_TP = 0xd68; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Sights_TP = 0xd70; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Ret_TP = 0xd78; // UAnimSequenceBase*
		constexpr auto Idle_Pose_Ovr_TP = 0xd80; // UAnimSequenceBase*
		constexpr auto bLeaningLeftNotCrouching = 0xd88; // bool
		constexpr auto bNotLeaningLeftOrCrouching = 0xd89; // bool
		constexpr auto bNotLeaningLeftOrNotCrouching = 0xd8a; // bool
		constexpr auto bLeaningRightNotCrouching = 0xd8b; // bool
		constexpr auto bNotLeaningRightOrCrouching = 0xd8c; // bool
		constexpr auto bNotLeaningRightOrNotCrouching = 0xd8d; // bool
		constexpr auto bCrouchingAndMoving = 0xd8e; // bool
		constexpr auto bNotCrouchingAndMoving = 0xd8f; // bool
		constexpr auto bAimingAndNotDeployable = 0xd90; // bool
		constexpr auto WalkSpeedForward = 0xd94; // float
		constexpr auto WalkSpeedLeft = 0xd98; // float
		constexpr auto WalkSpeedRight = 0xd9c; // float
		constexpr auto WalkSpeedBackward = 0xda0; // float
		constexpr auto CrouchWalkSpeedForward = 0xda4; // float
		constexpr auto CrouchWalkSpeedLeft = 0xda8; // float
		constexpr auto CrouchWalkSpeedRight = 0xdac; // float
		constexpr auto CrouchWalkSpeedBackward = 0xdb0; // float
		constexpr auto RunSpeedForward = 0xdb4; // float
		constexpr auto RunSpeedLeft = 0xdb8; // float
		constexpr auto RunSpeedRight = 0xdbc; // float
		constexpr auto RunSpeedBackward = 0xdc0; // float
		constexpr auto bLessThanPointOneSecondOnRelevantAnim = 0xdc4; // bool
		constexpr auto bIsInCombatOrAlerted = 0xdc5; // bool
		constexpr auto bMoving = 0xdc6; // bool
		constexpr auto bIsAlerted = 0xdc7; // bool
		constexpr auto AlertAlpha = 0xdc8; // float
		constexpr auto bIsInCombat = 0xdcc; // bool
		constexpr auto bIsSurrendering = 0xdcd; // bool
		constexpr auto bSprayed = 0xdce; // bool
		constexpr auto bStung = 0xdcf; // bool
		constexpr auto CurWeaponType = 0xdd0; // EWeaponType
		constexpr auto CurPseudoSpeed = 0xdd1; // EPseudoSpeedType
		constexpr auto bFemale = 0xdd2; // bool
		constexpr auto bChild = 0xdd3; // bool
		constexpr auto bHasInjury = 0xdd4; // bool
		constexpr auto AnimSpeedFwdPlayrateSync = 0xdd8; // float
		constexpr auto AnimSpeedSidePlayrateSync = 0xddc; // float
		constexpr auto RetentionAlpha = 0xde0; // float
		constexpr auto LoweredAlpha = 0xde4; // float
		constexpr auto SightAlpha = 0xdf0; // float
		constexpr auto LoweredCooldownTime = 0xdf4; // float
		constexpr auto IsLoweredUp = 0xdf8; // bool
		constexpr auto ArmsOnlySlotAlpha = 0xe0c; // float
		constexpr auto LeftArmOnlySlotAlpha = 0xe10; // float
	}

	namespace n_UModularSynthPresetBank { // : UObject
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_AHelmet_Goggles_C { // : AHeadwear
		constexpr auto UberGraphFrame = 0x15f0; // FPointerToUberGraphFrame
		constexpr auto PlayerState = 0x15f8; // APlayerState*
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_ABulletProjectile { // : ADamageProjectile
		constexpr auto BulletMesh = 0x288; // UStaticMeshComponent*
		constexpr auto BulletMeshSkele = 0x290; // USkeletalMeshComponent*
		constexpr auto WhizzAudioComp = 0x298; // UAudioComponent*
		constexpr auto FiredFromWeapon = 0x2b8; // ABaseItem*
		constexpr auto FiredFromPlayer = 0x2c0; // APlayerCharacter*
		constexpr auto HitAngleMultiplier = 0x2c8; // float
		constexpr auto RequiredAngleToDeflect = 0x2cc; // float
		constexpr auto PercentageToDeflect = 0x2d0; // float
		constexpr auto DeflectionAmount = 0x2d4; // float
		constexpr auto SpeedLossMultiplierPerSurface = 0x2e0; // float
		constexpr auto DamageLossMultiplierPerSurface = 0x2e4; // float
		constexpr auto VelocityRequiredToRespawn = 0x2e8; // float
		constexpr auto bDrawBlood = 0x2ec; // bool
		constexpr auto BulletProjectileScale = 0x2fc; // FVector
		constexpr auto DecalScale = 0x308; // float
		constexpr auto bAffectedByGravity = 0x30c; // bool
		constexpr auto BulletWizzSound = 0x310; // USoundCue*
		constexpr auto MinimumDistanceForWizz = 0x318; // float
		constexpr auto requiredSpeedForWizz = 0x31c; // float
		constexpr auto DebugLineSize = 0x320; // float
		constexpr auto ExitEffects = 0x328; // AImpactEffect*
		constexpr auto RicochetEffects = 0x330; // AImpactEffect*
		constexpr auto RichochetParticle = 0x338; // UParticleSystem*
		constexpr auto ArmorPiercing = 0x340; // float
		constexpr auto bDestroyOnHit = 0x344; // bool
		constexpr auto bAttachOnHit = 0x345; // bool
		constexpr auto InitialSpeed = 0x348; // float
		constexpr auto InitialLocation = 0x34c; // FVector
		constexpr auto OwningActor = 0x358; // AActor*
		constexpr auto LockIntegrityDamage = 0x360; // float
		constexpr auto ProjectileMesh = 0x368; // USkeletalMesh*
		constexpr auto ProjectileMeshStatic = 0x370; // UStaticMesh*
		constexpr auto InitialDamageType = 0x378; // UDamageType*
		constexpr auto LifeSpan = 0x380; // float
		constexpr auto Drag = 0x384; // float
		constexpr auto Wobble = 0x388; // float
		constexpr auto InitialWobbleDelay = 0x38c; // float
		constexpr auto PhysicsImpulseMultiplier = 0x390; // float
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UW_RSReplayEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PlayButton = 0x268; // UButton*
		constexpr auto TextBlock_1 = 0x270; // UTextBlock*
		constexpr auto ReplayFriendlyName = 0x278; // FString
		constexpr auto ReplayFileName = 0x288; // FString
		constexpr auto length in ms = 0x298; // int32_t
	}

	namespace n_ABloodPool { // : AActor
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x220; // FString
		constexpr auto GameSessionClass = 0x230; // AGameSession*
		constexpr auto GameStateClass = 0x238; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x240; // APlayerController*
		constexpr auto PlayerStateClass = 0x248; // APlayerState*
		constexpr auto HUDClass = 0x250; // AHUD*
		constexpr auto DefaultPawnClass = 0x258; // APawn*
		constexpr auto SpectatorClass = 0x260; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x268; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x270; // AServerStatReplicator*
		constexpr auto GameSession = 0x278; // AGameSession*
		constexpr auto GameState = 0x280; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x288; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x290; // FText
		constexpr auto bUseSeamlessTravel = 0x2a8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2a8; // char : 1
		constexpr auto bPauseable = 0x2a8; // char : 1
	}

	namespace n_UFleeingCombatMove { // : UBaseCombatMoveActivity
		constexpr auto UsedFleePoints = 0x1c0; // TArray<AThreatAwarenessActor*>
	}

	namespace n_AThreatAwarenessActor { // : AActor
		constexpr auto DefaultScene = 0x220; // USceneComponent*
		constexpr auto ThreatLevel = 0x228; // EThreatLevel
		constexpr auto DoorThreat = 0x230; // ADoor*
		constexpr auto bFrontDoorThreat = 0x238; // bool
		constexpr auto Exits = 0x240; // TArray<FExitData>
		constexpr auto UniqueExits = 0x250; // TArray<ADoor*>
		constexpr auto PathableThreatAwarenessActors = 0x268; // TArray<AThreatAwarenessActor*>
		constexpr auto DirectlyVisibleThreatAwarenessActors = 0x278; // TArray<AThreatAwarenessActor*>
		constexpr auto SwatLookAtPoints = 0x288; // TArray<FVector>
		constexpr auto CoverActorsForThisThreatLocation = 0x298; // TArray<ACoverActor*>
	}

	namespace n_AThrownItem { // : AActor
		constexpr auto ThrowInstigator = 0x220; // AReadyOrNotCharacter*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
		constexpr auto StaticMesh = 0x230; // UStaticMeshComponent*
		constexpr auto PerceptionStimuliComp = 0x238; // UAIPerceptionStimuliSourceComponent*
		constexpr auto TurnPhysicsOffDelay = 0x240; // float
		constexpr auto ThrowDistance = 0x244; // float
		constexpr auto FirstBouncePath = 0x248; // TArray<FVector>
		constexpr auto FirstBounceHit = 0x258; // FHitResult
		constexpr auto SecondBouncePath = 0x2e8; // TArray<FVector>
		constexpr auto SecondBounceHit = 0x2f8; // FHitResult
		constexpr auto ThirdBouncePath = 0x388; // TArray<FVector>
		constexpr auto ThirdBounceHit = 0x398; // FHitResult
		constexpr auto CompletePath = 0x428; // TArray<FVector_NetQuantize>
		constexpr auto BouncePt1 = 0x438; // int32_t
		constexpr auto BouncePt2 = 0x43c; // int32_t
		constexpr auto BouncePt3 = 0x440; // int32_t
		constexpr auto ThrowSpeed = 0x448; // float
		constexpr auto ThrowBounciness = 0x454; // float
	}

	namespace n_USequenceCameraShakePattern { // : UCameraShakePattern
		constexpr auto Sequence = 0x28; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0x30; // float
		constexpr auto Scale = 0x34; // float
		constexpr auto BlendInTime = 0x38; // float
		constexpr auto BlendoutTime = 0x3c; // float
		constexpr auto RandomSegmentDuration = 0x40; // float
		constexpr auto bRandomSegment = 0x44; // bool
		constexpr auto Player = 0x48; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0x50; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_USpawnSkeletalMeshAnimNotifyState { // : UAnimNotifyState
		constexpr auto SkeletalMeshToSpawn = 0x30; // USkeletalMesh*
		constexpr auto PlayAnimation = 0x38; // UAnimationAsset*
		constexpr auto MeshTransform = 0x40; // FTransform
		constexpr auto bEnableWeaponFOVShader = 0x70; // bool
		constexpr auto bOnlyOwnerSee = 0x71; // bool
		constexpr auto bOwnerNoSee = 0x72; // bool
		constexpr auto BoneToSpawnOn = 0x74; // FName
		constexpr auto bDestroyAtEnd = 0x8c; // bool
		constexpr auto bSimulatePhysicsAtEnd = 0x8d; // bool
		constexpr auto ForceVector = 0x90; // FVector
		constexpr auto SkeletalMeshActor = 0xa0; // ASkeletalMeshActor*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AExitImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UOnlineEngineInterfaceImpl { // : UOnlineEngineInterface
		constexpr auto MappedUniqueNetIdTypes = 0x28; // TMap<FName, FName>
		constexpr auto CompatibleUniqueNetIdTypes = 0x78; // TArray<FName>
		constexpr auto VoiceSubsystemNameOverride = 0x88; // FName
	}

	namespace n_UMediaComponent { // : UActorComponent
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UHumanCharacterHUD_V2 { // : UBaseWidget
		constexpr auto CanvasPanel_Main = 0x280; // UCanvasPanel*
		constexpr auto RetainerBox_SwayableElements = 0x288; // URetainerBox*
		constexpr auto PlayerActionText_Slot_2 = 0x290; // UPlayerActionPromptWidget*
		constexpr auto PlayerActionText_Slot_3 = 0x298; // UPlayerActionPromptWidget*
		constexpr auto PlayerActionText_Slot_4 = 0x2a0; // UPlayerActionPromptWidget*
		constexpr auto PlayerActionText_Slot_5 = 0x2a8; // UPlayerActionPromptWidget*
		constexpr auto PlayerActionText_Slot_Reserved_2 = 0x2b0; // UPlayerActionPromptWidget*
		constexpr auto PlayerActionText_Slot_Reserved_3 = 0x2b8; // UPlayerActionPromptWidget*
		constexpr auto HUDStyle = 0x2c0; // EHUDStyle
		constexpr auto ObjectiveMarker_WidgetFadeZones = 0x2c8; // TArray<FName>
		constexpr auto bEnableHUDSway = 0x2d8; // char : 1
		constexpr auto MaxHUDSwayMovement = 0x2dc; // FVector2D
		constexpr auto SwayStrength = 0x2e4; // FVector2D
		constexpr auto SwaySpeed = 0x2ec; // FVector2D
		constexpr auto bEnableCurvedHUD = 0x2f4; // char : 1
		constexpr auto CurvedHUDStrength = 0x2f8; // float
		constexpr auto PlayerCharacter = 0x300; // APlayerCharacter*
		constexpr auto PlayerController = 0x308; // AReadyOrNotPlayerController*
		constexpr auto AccumulatedMouseDelta = 0x310; // FVector2D
	}

	namespace n_UTeamPaperdollWidget { // : UUserWidget
		constexpr auto Paperdoll_Image = 0x260; // UImage*
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_AReadyOrNotPlayerState { // : APlayerState
		constexpr auto bHasFinishedLoading = 0x330; // bool
		constexpr auto Kills = 0x334; // int32_t
		constexpr auto KillsThisLife = 0x338; // int32_t
		constexpr auto TeamKills = 0x33c; // int32_t
		constexpr auto Arrests = 0x340; // int32_t
		constexpr auto TimesArrested = 0x344; // int32_t
		constexpr auto ArrestsThisLife = 0x348; // int32_t
		constexpr auto Objectives = 0x34c; // int32_t
		constexpr auto Reports = 0x350; // int32_t
		constexpr auto Evidence = 0x354; // int32_t
		constexpr auto EvidenceActorsInPossession = 0x358; // TArray<AEvidenceActor*>
		constexpr auto DeathDamageType = 0x370; // UDamageType*
		constexpr auto DeathWeapon = 0x378; // ABaseMagazineWeapon*
		constexpr auto LastFireMode = 0x380; // EFireMode
		constexpr auto bDeadToPointDamage = 0x381; // bool
		constexpr auto DeathTraceHit = 0x384; // FHitResult
		constexpr auto DeathKiller = 0x410; // APlayerCharacter*
		constexpr auto Deaths = 0x418; // int32_t
		constexpr auto Incapacitations = 0x41c; // int32_t
		constexpr auto DamageDealt = 0x420; // float
		constexpr auto DamageReceived = 0x424; // float
		constexpr auto PlayerSpawnTag = 0x428; // FString
		constexpr auto BulletsFired = 0x43c; // int32_t
		constexpr auto BulletsFiredThisLife = 0x440; // int32_t
		constexpr auto Team = 0x444; // ETeamType
		constexpr auto ServerSavedLoadout = 0x448; // FSavedLoadout
		constexpr auto OnPlayerLoadoutChanged = 0x570; // FMulticastInlineDelegate
		constexpr auto bReady = 0x581; // bool
		constexpr auto bSquadLeader = 0x582; // bool
		constexpr auto LastLoadout = 0x588; // FSavedLoadout
		constexpr auto PointsFromKills = 0x6b0; // float
		constexpr auto PointsFromDamage = 0x6b4; // float
		constexpr auto PointsFromArrests = 0x6b8; // float
		constexpr auto PointsFromObjective = 0x6bc; // float
		constexpr auto PointsFromReportingKills = 0x6c0; // float
		constexpr auto PointsFromReportingArrests = 0x6c4; // float
		constexpr auto bIsInGame = 0x6c8; // bool
		constexpr auto bJoinInProgress = 0x6c9; // bool
		constexpr auto bIsVIP = 0x6ca; // bool
		constexpr auto bWasVIP = 0x6cb; // bool
		constexpr auto GrenadesThrown = 0x6cc; // int32_t
		constexpr auto TotalYells = 0x6d0; // int32_t
		constexpr auto NumberOrdersGiven = 0x6d4; // int32_t
		constexpr auto BulletsHit = 0x6d8; // int32_t
		constexpr auto BulletsHitThisLife = 0x6dc; // int32_t
		constexpr auto Headshots = 0x6e0; // int32_t
		constexpr auto TimeAlive = 0x6e4; // float
		constexpr auto VoiceType = 0x6f0; // EVoiceType
		constexpr auto bIsTalking = 0x6f1; // bool
		constexpr auto bTorsoInjured = 0x700; // bool
		constexpr auto bLeftArmInjured = 0x701; // bool
		constexpr auto bRightArmInjured = 0x702; // bool
		constexpr auto bLeftLegInjured = 0x703; // bool
		constexpr auto bRightLegInjured = 0x704; // bool
		constexpr auto bHeadInjured = 0x705; // bool
		constexpr auto BulletsBlocked = 0x708; // int32_t
		constexpr auto HitsReceived = 0x70c; // int32_t
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x450; // int32_t
		constexpr auto Hand = 0x454; // EControllerHand
		constexpr auto MotionSource = 0x458; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x460; // char : 1
		constexpr auto CurrentTrackingStatus = 0x464; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x465; // bool
		constexpr auto DisplayModelSource = 0x468; // FName
		constexpr auto CustomDisplayMesh = 0x470; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x478; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4f0; // UPrimitiveComponent*
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x220; // char : 1
	}

	namespace n_AGM_COOP_C { // : ACoopGM
		constexpr auto UberGraphFrame = 0x9a8; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x9b0; // USceneComponent*
		constexpr auto HostageSpawns = 0x9b8; // TArray<FVector>
		constexpr auto bSidesSwapped = 0x9c8; // bool
		constexpr auto TargetTimeDilation = 0x9cc; // float
		constexpr auto OnRoundResetComplete = 0x9d0; // FMulticastInlineDelegate
		constexpr auto SpeechActor = 0x9e0; // UObject*
	}

	namespace n_ANightvisionGoggles { // : AHeadwear
		constexpr auto SpawnedWidget = 0x15e8; // UUserWidget*
		constexpr auto NightVisionFirstPersonWidget = 0x15f0; // UUserWidget*
		constexpr auto NightVisionPostProcess = 0x1600; // FPostProcessSettings
		constexpr auto bNVGOn = 0x1b60; // bool
		constexpr auto bTogglingNVG = 0x1b61; // bool
		constexpr auto BlockDamageTypesWhileActive = 0x1b68; // TArray<UDamageType*>
	}

	namespace n_UGizmoTransformChangeStateTarget { // : UObject
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_USubmixEffectDynamicsProcessorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xf0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UMovieSceneEvaluationHookSystem { // : UMovieSceneEntitySystem
		constexpr auto PendingEventsByRootInstance = 0x48; // TMap<FMovieSceneEvaluationInstanceKey, FMovieSceneEvaluationHookEventContainer>
	}

	namespace n_UTeamSoftCoverCombatMove { // : UBaseCombatMoveActivity
		constexpr auto OtherSoftCoverCombatMoves = 0x1c0; // TArray<UTeamSoftCoverCombatMove*>
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x270; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x278; // UParticleSystem*
		constexpr auto BaseCamera = 0x280; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_UNiagaraEmitter { // : UObject
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UANIMBP_SCAR_L_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x3f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x548; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x568; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x628; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x6c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x7c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x7e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x868; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x8e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x9f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xaf8; // FAnimNode_ModifyBone
		constexpr auto Mag01Alpha = 0xc00; // float
		constexpr auto ScopeAdjustAlpha = 0xc04; // float
		constexpr auto bIsSemi = 0xc08; // bool
	}

	namespace n_UNiagaraParameterCollection { // : UObject
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UW_FPSCounter_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FPS = 0x268; // UTextBlock*
	}

	namespace n_ACuttableCableActor { // : AActor
		constexpr auto bCableCut = 0x220; // bool
		constexpr auto CableSnapLength = 0x224; // float
		constexpr auto bCablePullInsteadOfCutting = 0x228; // bool
		constexpr auto SceneRoot = 0x230; // USceneComponent*
		constexpr auto SubCable1 = 0x238; // UCableComponent*
		constexpr auto SubCable2 = 0x240; // UCableComponent*
		constexpr auto WholeCable = 0x248; // UCableComponent*
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UGenlockedTimecodeProvider { // : UTimecodeProvider
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection { // : UMovieSceneSection
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UNiagaraMeshRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Meshes = 0x78; // TArray<FNiagaraMeshRendererMeshProperties>
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto SortMode = 0x89; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0x8c; // char : 1
		constexpr auto bSubImageBlend = 0x8c; // char : 1
		constexpr auto bEnableFrustumCulling = 0x8c; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0x8c; // char : 1
		constexpr auto bEnableMeshFlipbook = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto FacingMode = 0xa8; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xac; // char : 1
		constexpr auto LockedAxis = 0xb0; // FVector
		constexpr auto LockedAxisSpace = 0xbc; // ENiagaraMeshLockedAxisSpace
		constexpr auto MinCameraDistance = 0xc0; // float
		constexpr auto MaxCameraDistance = 0xc4; // float
		constexpr auto RendererVisibility = 0xc8; // uint32_t
		constexpr auto PositionBinding = 0xd0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x128; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x180; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1d8; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x230; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x288; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2e0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x338; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x390; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x3e8; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x440; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x498; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x4f0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x548; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5a0; // FNiagaraVariableAttributeBinding
		constexpr auto MeshIndexBinding = 0x5f8; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x650; // TArray<FNiagaraMaterialAttributeBinding>
		constexpr auto PrevPositionBinding = 0x660; // FNiagaraVariableAttributeBinding
		constexpr auto PrevScaleBinding = 0x6b8; // FNiagaraVariableAttributeBinding
		constexpr auto PrevMeshOrientationBinding = 0x710; // FNiagaraVariableAttributeBinding
		constexpr auto PrevCameraOffsetBinding = 0x768; // FNiagaraVariableAttributeBinding
		constexpr auto PrevVelocityBinding = 0x7c0; // FNiagaraVariableAttributeBinding
		constexpr auto ParticleMesh = 0x880; // UStaticMesh*
		constexpr auto PivotOffset = 0x888; // FVector
		constexpr auto PivotOffsetSpace = 0x894; // ENiagaraMeshPivotOffsetSpace
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UPlayerSpeedIndicator_V2 { // : UBaseWidget
		constexpr auto Twenty_Box = 0x278; // USizeBox*
		constexpr auto Twenty_Image = 0x280; // UImage*
		constexpr auto Fourty_Box = 0x288; // USizeBox*
		constexpr auto Fourty_Image = 0x290; // UImage*
		constexpr auto Sixty_Box = 0x298; // USizeBox*
		constexpr auto Sixty_Image = 0x2a0; // UImage*
		constexpr auto Eighty_Box = 0x2a8; // USizeBox*
		constexpr auto Eighty_Image = 0x2b0; // UImage*
		constexpr auto OneHundred_Box = 0x2b8; // USizeBox*
		constexpr auto OneHundred_Image = 0x2c0; // UImage*
		constexpr auto SpeedPercentage_Text = 0x2c8; // UTextBlock*
		constexpr auto PlayerCharacter = 0x2d0; // APlayerCharacter*
		constexpr auto BaselineOpacity = 0x2d8; // float
		constexpr auto FadeSpeed = 0x2dc; // float
		constexpr auto LastSetRunSpeedPercent = 0x2e0; // float
		constexpr auto MinRunSpeedPercent = 0x2e4; // float
		constexpr auto MaxRunSpeedPercent = 0x2e8; // float
		constexpr auto NormalizedRunSpeedPercent = 0x2ec; // float
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UW_KingOfTheHillMeter_V2_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto LeftAligned_HorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ProgressBar_LeftAligned = 0x270; // UProgressBar*
		constexpr auto ProgressBar_Overlay_Left = 0x278; // UOverlay*
		constexpr auto ProgressBar_Overlay_Right = 0x280; // UOverlay*
		constexpr auto ProgressBar_RightAligned = 0x288; // UProgressBar*
		constexpr auto RightAligned_HorizontalBox = 0x290; // UHorizontalBox*
		constexpr auto StyleSwitcher = 0x298; // UWidgetSwitcher*
		constexpr auto LastValue = 0x2a0; // int32_t
		constexpr auto Alignment = 0x2a4; // EHorizontalAlignment
		constexpr auto Team = 0x2a5; // ETeamType
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x228; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x229; // ENavDataGatheringMode
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UOpenDoorTeamQuestNode { // : UCheckDoorQuestNode
		constexpr auto bMustBeFullyOpen = 0x278; // bool
	}

	namespace n_UBP_MessageDisplayBox_C { // : UMessageDisplayBox
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto Image_72 = 0x290; // UImage*
		constexpr auto MessageText = 0x298; // UTextBlock*
		constexpr auto OkButton = 0x2a0; // UW_StandardButton_C*
		constexpr auto LastShowMouseCursor = 0x2a8; // bool
		constexpr auto bDown = 0x2a9; // bool
		constexpr auto bHovering = 0x2aa; // bool
	}

	namespace n_APairedInteractionDriver { // : AInfo
		constexpr auto InteractionData = 0x220; // UInteractionsData*
		constexpr auto Driver = 0x228; // AActor*
		constexpr auto Slave = 0x230; // AActor*
		constexpr auto OptionalItem = 0x238; // ABaseItem*
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xf0; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x190; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x230; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2d0; // FMovieSceneFloatChannel
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_AARSharedWorldGameState { // : AGameState
		constexpr auto PreviewImageData = 0x290; // TArray<char>
		constexpr auto ARWorldData = 0x2a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2bc; // int32_t
	}

	namespace n_UMeshSelectionSet { // : USelectionSet
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UTextureRenderTargetVolume { // : UTextureRenderTarget
		constexpr auto SizeX = 0x180; // int32_t
		constexpr auto SizeY = 0x184; // int32_t
		constexpr auto SizeZ = 0x188; // int32_t
		constexpr auto ClearColor = 0x18c; // FLinearColor
		constexpr auto OverrideFormat = 0x19c; // EPixelFormat
		constexpr auto bHDR = 0x19d; // char : 1
		constexpr auto bForceLinearGamma = 0x19d; // char : 1
	}

	namespace n_UPaperSprite { // : UObject
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_ASearchAndDestroyGM { // : AReadyOrNotGameMode_PVP
		constexpr auto bBombPlanted = 0x718; // bool
		constexpr auto NumRedSpawned = 0x71c; // int32_t
		constexpr auto NumBlueSpawned = 0x720; // int32_t
	}

	namespace n_ASkyAtmosphere { // : AInfo
		constexpr auto SkyAtmosphereComponent = 0x220; // USkyAtmosphereComponent*
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0x90; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa0; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xa8; // UPawnAction*
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UGameplayTask_TimeLimitedExecution { // : UGameplayTask
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UResourceComponent { // : UActorComponent
		constexpr auto OnFullResource = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnLowResource = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnDepletedResource = 0xd0; // FMulticastInlineDelegate
		constexpr auto ResourceName = 0xe0; // FName
		constexpr auto Resource = 0xe8; // float
		constexpr auto MaxResource = 0xec; // float
		constexpr auto MaxResourceLimit = 0xf0; // float
		constexpr auto LowResourceThreshold = 0xf4; // float
		constexpr auto OriginalMaxResource = 0xf8; // float
		constexpr auto LowResource = 0xfc; // float
		constexpr auto PreviousResource = 0x100; // float
		constexpr auto bUnlimited = 0x104; // char : 1
	}

	namespace n_UWidgetAnimationPlayCallbackProxy { // : UObject
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_AZipcuffs { // : ABaseItem
		constexpr auto PendingArrestCharacter = 0x958; // APlayerCharacter*
		constexpr auto TargetedCharacter = 0x960; // AReadyOrNotCharacter*
		constexpr auto bArresting = 0x968; // bool
		constexpr auto ArrestMaxDistance = 0x970; // float
		constexpr auto ArrestCollisionChannels = 0x978; // TArray<ECollisionChannel>
		constexpr auto UseZipcuffs_1P = 0x988; // UAnimMontage*
		constexpr auto UseZipcuffs_3P = 0x990; // UAnimMontage*
		constexpr auto ArrestTime = 0x998; // float
		constexpr auto ForcedInteractionData = 0x9a8; // UInteractionsData*
		constexpr auto StandingArrestInteractionSuspects = 0x9b0; // TArray<UInteractionsData*>
		constexpr auto StandingArrestInteractionCivilians = 0x9c0; // TArray<UInteractionsData*>
		constexpr auto PvPArrestInteraction = 0x9d0; // TArray<UInteractionsData*>
		constexpr auto SpawnedZipcuffsClass = 0x9e0; // APlacedZipcuffs*
		constexpr auto ZipcuffBone = 0x9e8; // FName
		constexpr auto SpawnCuffsTransform = 0x9f0; // FTransform
		constexpr auto SpawnCuffsRelativeRotation = 0xa20; // FRotator
		constexpr auto SpawnCuffsRelativeTranslation = 0xa2c; // FVector
		constexpr auto FMODZipcuffsArrest = 0xa38; // UFMODEvent*
	}

	namespace n_UDatasmithGLTFSceneImportData { // : UDatasmithSceneImportData
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_ASpawnGenerator { // : AActor
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto BillboardComponent = 0x228; // UBillboardComponent*
		constexpr auto SpawnTeam = 0x230; // ETeamType
		constexpr auto Rows = 0x232; // uint16_t
		constexpr auto Columns = 0x234; // uint16_t
		constexpr auto RowSpacing = 0x238; // float
		constexpr auto ColumnSpacing = 0x23c; // float
		constexpr auto bShowNodes = 0x240; // char : 1
		constexpr auto PlayerStarts = 0x258; // TArray<APlayerStart*>
	}

	namespace n_UW_SpectatorCharacter_HUD_C { // : USpectatorCharacterHUD
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto CenterPrintShow = 0x280; // UWidgetAnimation*
		constexpr auto CenterPrintHide = 0x288; // UWidgetAnimation*
		constexpr auto ShowReinforcements = 0x290; // UWidgetAnimation*
		constexpr auto ShowDeathView = 0x298; // UWidgetAnimation*
		constexpr auto BP_RichChatBox = 0x2a0; // UW_RichChatBox_C*
		constexpr auto CenterprintText = 0x2a8; // UTextBlock*
		constexpr auto DeathViewCanvasCOOP = 0x2b0; // UCanvasPanel*
		constexpr auto DeathViewCanvasPvP = 0x2b8; // UCanvasPanel*
		constexpr auto DeathViewSwitcher = 0x2c0; // UWidgetSwitcher*
		constexpr auto HeadCamTxt = 0x2c8; // UTextBlock*
		constexpr auto SpectatingBox = 0x2d0; // UVerticalBox*
		constexpr auto SpectatingNameText = 0x2d8; // UTextBlock*
		constexpr auto TextBlock_119 = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_198 = 0x2e8; // UTextBlock*
		constexpr auto Vote_Hotkeys = 0x2f0; // UTextBlock*
		constexpr auto Vote_StarterName = 0x2f8; // UTextBlock*
		constexpr auto Vote_TimeLeft = 0x300; // UTextBlock*
		constexpr auto Vote_VoteName = 0x308; // UTextBlock*
		constexpr auto Vote_Voters = 0x310; // UTextBlock*
		constexpr auto VotingDisplay = 0x318; // UVerticalBox*
		constexpr auto W_COOPDeathScreen = 0x320; // UW_COOPDeathScreen_C*
		constexpr auto SpectateControlsFormat = 0x328; // FText
		constexpr auto SpectateControlsOnlyPrevious = 0x340; // FText
		constexpr auto SpectateControlsOnlyNext = 0x358; // FText
		constexpr auto TimeUntilDeathViewAppears = 0x370; // float
		constexpr auto bStartedSpectating = 0x374; // bool
		constexpr auto bShownDeathView = 0x375; // bool
		constexpr auto DeltaTime = 0x378; // float
		constexpr auto StartedShowingCenterPrint = 0x37c; // bool
		constexpr auto CenterPrintTime = 0x380; // float
		constexpr auto CancelTick = 0x384; // bool
	}

	namespace n_AFreeMode { // : AReadyOrNotGameMode
		constexpr auto RespawnTime = 0x6b8; // float
	}

	namespace n_UProceduralMeshComponent { // : UMeshComponent
		constexpr auto bUseComplexAsSimpleCollision = 0x480; // bool
		constexpr auto bUseAsyncCooking = 0x481; // bool
		constexpr auto ProcMeshBodySetup = 0x488; // UBodySetup*
		constexpr auto ProcMeshSections = 0x490; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x4a0; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4b0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4d0; // TArray<UBodySetup*>
	}

	namespace n_ABulletTracer { // : AActor
		constexpr auto RootComp = 0x220; // USceneComponent*
		constexpr auto ParticleComponent = 0x248; // UParticleSystemComponent*
		constexpr auto TracerParticle = 0x250; // UParticleSystem*
		constexpr auto SmokeParticle = 0x258; // UParticleSystem*
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x220; // USplineMeshComponent*
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bForceNetAddressable = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x59; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x5a; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5b; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto NetDriverName = 0xe8; // FName
		constexpr auto Role = 0xf0; // ENetRole
		constexpr auto NetDormancy = 0xf1; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf2; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf3; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf4; // int32_t
		constexpr auto InputComponent = 0xf8; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x100; // float
		constexpr auto NetTag = 0x104; // int32_t
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto MinNetUpdateFrequency = 0x10c; // float
		constexpr auto NetPriority = 0x110; // float
		constexpr auto Instigator = 0x118; // APawn*
		constexpr auto Children = 0x120; // TArray<AActor*>
		constexpr auto RootComponent = 0x130; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x138; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x150; // TArray<FName>
		constexpr auto ParentComponent = 0x160; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x170; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x180; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x181; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x182; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x183; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x184; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x185; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x186; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x187; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x188; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x189; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x18f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f0; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x200; // TArray<UActorComponent*>
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_UStereoLayerShapeCylinder { // : UStereoLayerShape
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_AHeadwear { // : ABaseArmour
		constexpr auto bProtectsAgainstInstantKnockout = 0xad8; // bool
		constexpr auto bUseMaskVoiceFilter = 0xad9; // bool
		constexpr auto VoiceLineEventOverrideSpatalized = 0xae0; // UFMODEvent*
		constexpr auto VoiceLineEventOverrideLocal = 0xae8; // UFMODEvent*
		constexpr auto MaskOverlay = 0xaf0; // UUserWidget*
		constexpr auto bEnablePostProcess = 0xaf8; // bool
		constexpr auto MaskPostProcess = 0xb00; // FPostProcessSettings
		constexpr auto MaskSupressionPostProcess = 0x1060; // FPostProcessSettings
		constexpr auto bOverrideBreathingSound = 0x15c0; // bool
		constexpr auto OverriddenBreathingSounds = 0x15c8; // TArray<USoundCue*>
		constexpr auto GapBetweenBreaths = 0x15d8; // float
		constexpr auto bSpawnedOverlay = 0x15dc; // bool
		constexpr auto SpawnedMaskOverlay = 0x15e0; // UUserWidget*
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto TextureStreamingInfo = 0x318; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x328; // char : 1
		constexpr auto bDisableTessellation = 0x328; // char : 1
		constexpr auto bMobile = 0x328; // char : 1
		constexpr auto bEditorToolUsage = 0x328; // char : 1
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x258; // AProceduralFoliageVolume*
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x380; // TArray<UAssetUserData*>
	}

	namespace n_UMediaSoundComponent { // : USynthComponent
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x220; // UStaticMeshComponent*
		constexpr auto InstancedStaticMeshComponents = 0x228; // TMap<FHLODInstancingKey, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x278; // UHLODProxy*
		constexpr auto Key = 0x280; // FName
		constexpr auto LODDrawDistance = 0x288; // float
		constexpr auto LODLevel = 0x28c; // int32_t
		constexpr auto SubActors = 0x290; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a0; // char
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x830; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x834; // char : 1
		constexpr auto CustomNearClippingPlane = 0x838; // float
		constexpr auto bUseCustomProjectionMatrix = 0x83c; // bool
		constexpr auto CustomProjectionMatrix = 0x840; // FMatrix
		constexpr auto bEnableClipPlane = 0x880; // bool
		constexpr auto ClipPlaneBase = 0x884; // FVector
		constexpr auto ClipPlaneNormal = 0x890; // FVector
		constexpr auto bCameraCutThisFrame = 0x89c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x89c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x8a0; // bool
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UArmourResourceComponent { // : UResourceComponent
		constexpr auto MaxTickets = 0x108; // int32_t
		constexpr auto Resistance = 0x10c; // float
		constexpr auto RemainingTickets = 0x110; // int32_t
	}

	namespace n_ACharacterCustomizationPortal { // : AActor
		constexpr auto CustomizationCharacter = 0x228; // AReadyOrNotCharacter*
		constexpr auto InteractableComponent = 0x230; // UInteractableComponent*
		constexpr auto BillboardComponent = 0x238; // UBillboardComponent*
		constexpr auto CharacterSpawnPoint = 0x240; // UArrowComponent*
		constexpr auto CompsToOutline = 0x258; // TArray<UStaticMeshComponent*>
		constexpr auto LightsToEnable = 0x268; // TArray<ULightComponent*>
		constexpr auto LightActorsOfTag = 0x278; // FName
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_APremissionStreetView { // : AActor
		constexpr auto LeftBuildingMesh = 0x220; // UStaticMeshComponent*
		constexpr auto RightBuildingMesh = 0x228; // UStaticMeshComponent*
		constexpr auto LeftTrafficLight = 0x230; // UChildActorComponent*
		constexpr auto RightTrafficLight = 0x238; // UChildActorComponent*
		constexpr auto Direction = 0x240; // UArrowComponent*
		constexpr auto Buildings = 0x248; // TArray<UStaticMesh*>
		constexpr auto TrafficLights = 0x258; // TArray<AActor*>
		constexpr auto InterpConstantSpeed = 0x274; // float
		constexpr auto TimeUntilReset = 0x278; // float
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UW_ItemSelection_ItemGroupList_C { // : UBaseWidget
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto ItemList_Container = 0x280; // UHorizontalBox*
		constexpr auto W_ItemSelection_ItemGroup_2 = 0x288; // UW_ItemSelection_ItemGroup_C*
		constexpr auto W_ItemSelection_ItemGroup_3 = 0x290; // UW_ItemSelection_ItemGroup_C*
		constexpr auto W_ItemSelection_ItemGroup_4 = 0x298; // UW_ItemSelection_ItemGroup_C*
		constexpr auto W_ItemSelection_ItemGroup_5 = 0x2a0; // UW_ItemSelection_ItemGroup_C*
		constexpr auto W_ItemSelection_ItemGroup_6 = 0x2a8; // UW_ItemSelection_ItemGroup_C*
		constexpr auto W_ItemSelection_ItemGroup_75 = 0x2b0; // UW_ItemSelection_ItemGroup_C*
		constexpr auto SelectedColumn = 0x2b8; // int32_t
		constexpr auto PreviousSelectedColumn = 0x2bc; // int32_t
		constexpr auto ItemLists = 0x2c0; // TArray<UW_ItemSelection_ItemList_C*>
		constexpr auto ItemGroups = 0x2d0; // TArray<FItemSelectionPanelSetting_ItemGroup>
		constexpr auto PlayerCharacter = 0x2e0; // APlayerCharacter*
		constexpr auto bNVGOn = 0x2e8; // bool
	}

	namespace n_UAREnvironmentCaptureProbeTexture { // : UTextureCube
		constexpr auto TextureType = 0x1d0; // EARTextureType
		constexpr auto Timestamp = 0x1d4; // float
		constexpr auto ExternalTextureGuid = 0x1d8; // FGuid
		constexpr auto Size = 0x1e8; // FVector2D
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UANIMBP_Sequencer_Head_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_PoseBlendNode = 0x2f8; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x398; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x570; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x630; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x678; // FAnimNode_SequencePlayer
		constexpr auto FaceRomRef = 0x6f8; // UPoseAsset*
		constexpr auto Bodyref = 0x700; // USkeletalMeshComponent*
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UMovieSceneTrackInstanceSystem { // : UMovieSceneEntitySystem
		constexpr auto Instantiator = 0x48; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_ADestructibleActor { // : AActor
		constexpr auto DestructibleComponent = 0x220; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x228; // FMulticastInlineDelegate
	}

	namespace n_AQuadrotor { // : ABaseItem
		constexpr auto ViewfinderMesh = 0x958; // USkeletalMeshComponent*
		constexpr auto SceneCapture2D = 0x960; // USceneCaptureComponent2D*
		constexpr auto RenderTarget = 0x968; // UTextureRenderTarget2D*
		constexpr auto bToggleDroneControl = 0x970; // bool
		constexpr auto DefaultViewfinderMaterial = 0x978; // UMaterial*
		constexpr auto ViewfinderScreenMaterial = 0x980; // UMaterialInstanceDynamic*
		constexpr auto LocalPlayerCaptureResolution = 0x988; // FVector2D
		constexpr auto SimulatedPlayerCaptureResolution = 0x990; // FVector2D
		constexpr auto ViewfinderSocket_Hands = 0x9a0; // FName
		constexpr auto ViewfinderSocket_Body = 0x9a8; // FName
		constexpr auto ThrowDrone_1P = 0x9b0; // UAnimMontage*
		constexpr auto ThrowDrone_3P = 0x9b8; // UAnimMontage*
		constexpr auto DronePawnClass = 0x9c0; // AQuadrotorPawn*
		constexpr auto SpawnedDrone = 0x9c8; // AQuadrotorPawn*
	}

	namespace n_ATutorialMessageVolume { // : AReadyOrNotTriggerVolume
		constexpr auto MessageMapID = 0x250; // FString
		constexpr auto bIsBigPopUp = 0x260; // bool
		constexpr auto bHasDisplayedMessage = 0x261; // bool
		constexpr auto MessageTitle = 0x268; // FText
		constexpr auto MessageContent = 0x280; // TArray<FText>
		constexpr auto MessageActions = 0x290; // TArray<FTutorialActionPromptSlot>
	}

	namespace n_ACTFTriggerBox { // : ATriggerBox
		constexpr auto TextRender = 0x228; // UTextRenderComponent*
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x598; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5a8; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5b0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5cc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5e8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5f8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x600; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x604; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x620; // bool
		constexpr auto InstanceCountToRender = 0x624; // int32_t
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UMagazineAttachment { // : UWeaponAttachment
		constexpr auto MagazineStaticMesh = 0xff8; // UStaticMesh*
		constexpr auto Socket_01 = 0x1000; // FName
		constexpr auto Socket_02 = 0x1008; // FName
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UPaperRuntimeSettings { // : UObject
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_AScoringManager { // : AInfo
		constexpr auto TotalScorePool = 0x268; // int32_t
		constexpr auto ObjectiveScoreGroups = 0x278; // TArray<FScoreGroup>
		constexpr auto PenaltyScoreGroups = 0x288; // TArray<FScorePenaltyData>
		constexpr auto bIsOfficialScoring = 0x29c; // bool
	}

	namespace n_UNiagaraSimulationStageGeneric { // : UNiagaraSimulationStageBase
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_ASecondary_Makarov_C { // : ABaseMagazineWeapon
		constexpr auto UberGraphFrame = 0x1260; // FPointerToUberGraphFrame
		constexpr auto PointLight = 0x1268; // UPointLightComponent*
		constexpr auto SpotLight = 0x1270; // USpotLightComponent*
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UW_COOPDeathScreen_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto btn_Spectate = 0x268; // UW_Button_C*
		constexpr auto Loading = 0x270; // UTextBlock*
		constexpr auto OnSpectateButtonClicked = 0x278; // FMulticastInlineDelegate
		constexpr auto AliveOfficers = 0x288; // int32_t
		constexpr auto DeadOfficers = 0x28c; // int32_t
	}

	namespace n_AOneWayBlockingVolume { // : AActor
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto DirectionArrowComponent = 0x228; // UArrowComponent*
	}

	namespace n_UTeamProgressScoreWidget { // : UBaseWidget
		constexpr auto Team = 0x278; // ETeamType
		constexpr auto ProgressBar_LeftAligned = 0x280; // UProgressBar*
		constexpr auto Score_Text_LeftAligned = 0x288; // UTextBlock*
		constexpr auto ProgressBar_RightAligned = 0x290; // UProgressBar*
		constexpr auto Score_Text_RightAligned = 0x298; // UTextBlock*
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x220; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x228; // UCameraComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x240; // char : 1
		constexpr auto AspectRatio = 0x244; // float
		constexpr auto FOVAngle = 0x248; // float
		constexpr auto PostProcessBlendWeight = 0x24c; // float
		constexpr auto PostProcessSettings = 0x250; // FPostProcessSettings
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UUpdateSessionCallbackProxyAdvanced { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UDatasmithImportOptions { // : UDatasmithOptionsBase
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x30; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x44; // FDatasmithReimportOptions
		constexpr auto Filename = 0x48; // FString
		constexpr auto FilePath = 0x58; // FString
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UPaperFlipbookComponent { // : UMeshComponent
		constexpr auto SourceFlipbook = 0x478; // UPaperFlipbook*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto PlayRate = 0x488; // float
		constexpr auto bLooping = 0x48c; // char : 1
		constexpr auto bReversePlayback = 0x48c; // char : 1
		constexpr auto bPlaying = 0x48c; // char : 1
		constexpr auto AccumulatedTime = 0x490; // float
		constexpr auto CachedFrameIndex = 0x494; // int32_t
		constexpr auto SpriteColor = 0x498; // FLinearColor
		constexpr auto CachedBodySetup = 0x4a8; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4b0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UNiagaraSimulationStageBase { // : UNiagaraMergeable
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_ARunImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_AWalkImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UGizmoTransformProxyTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_AStartupSpectator_C { // : ASpectatePawn
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto Camera = 0x318; // UCameraComponent*
	}

	namespace n_UPenetrationData { // : UDataAsset
		constexpr auto DefaultPenetrationData = 0x30; // FMaterialPenetration
		constexpr auto RON_Aluminium = 0x38; // FMaterialPenetration
		constexpr auto RON_Asphalt = 0x40; // FMaterialPenetration
		constexpr auto RON_Brick = 0x48; // FMaterialPenetration
		constexpr auto RON_CarbonFibre = 0x50; // FMaterialPenetration
		constexpr auto RON_Cardboard = 0x58; // FMaterialPenetration
		constexpr auto RON_Ceramic = 0x60; // FMaterialPenetration
		constexpr auto RON_ConcreteSoft = 0x68; // FMaterialPenetration
		constexpr auto RON_ConcreteStrong = 0x70; // FMaterialPenetration
		constexpr auto RON_Dirt = 0x78; // FMaterialPenetration
		constexpr auto RON_Drywall = 0x80; // FMaterialPenetration
		constexpr auto RON_Electrical = 0x88; // FMaterialPenetration
		constexpr auto RON_EnergyShield = 0x90; // FMaterialPenetration
		constexpr auto RON_Fabric_Carpet = 0x98; // FMaterialPenetration
		constexpr auto RON_Fabric_Stuffing = 0xa0; // FMaterialPenetration
		constexpr auto RON_Fabric_Thin = 0xa8; // FMaterialPenetration
		constexpr auto RON_Flesh = 0xb0; // FMaterialPenetration
		constexpr auto RON_Galvanized = 0xb8; // FMaterialPenetration
		constexpr auto RON_Glass_Plate = 0xc0; // FMaterialPenetration
		constexpr auto RON_Glass_Windshield = 0xc8; // FMaterialPenetration
		constexpr auto RON_Grass = 0xd0; // FMaterialPenetration
		constexpr auto RON_Gravel = 0xd8; // FMaterialPenetration
		constexpr auto RON_Ice = 0xe0; // FMaterialPenetration
		constexpr auto RON_Lava = 0xe8; // FMaterialPenetration
		constexpr auto RON_Lead = 0xf0; // FMaterialPenetration
		constexpr auto RON_Leaves = 0xf8; // FMaterialPenetration
		constexpr auto RON_Limestone = 0x100; // FMaterialPenetration
		constexpr auto RON_Mahogany = 0x108; // FMaterialPenetration
		constexpr auto RON_Marble_Coated = 0x110; // FMaterialPenetration
		constexpr auto RON_Marble_Thick = 0x118; // FMaterialPenetration
		constexpr auto RON_Mud = 0x120; // FMaterialPenetration
		constexpr auto RON_Oil = 0x128; // FMaterialPenetration
		constexpr auto RON_Paper = 0x130; // FMaterialPenetration
		constexpr auto RON_Pine = 0x138; // FMaterialPenetration
		constexpr auto RON_Plaster = 0x140; // FMaterialPenetration
		constexpr auto RON_Plastic = 0x148; // FMaterialPenetration
		constexpr auto RON_Plywood = 0x150; // FMaterialPenetration
		constexpr auto RON_Polystyrene = 0x158; // FMaterialPenetration
		constexpr auto RON_Powder = 0x160; // FMaterialPenetration
		constexpr auto RON_Rock = 0x168; // FMaterialPenetration
		constexpr auto RON_Rubber = 0x170; // FMaterialPenetration
		constexpr auto RON_Sand = 0x178; // FMaterialPenetration
		constexpr auto RON_Snow = 0x180; // FMaterialPenetration
		constexpr auto RON_Soil = 0x188; // FMaterialPenetration
		constexpr auto RON_Steel = 0x190; // FMaterialPenetration
		constexpr auto RON_Tin = 0x198; // FMaterialPenetration
		constexpr auto RON_Treewood = 0x1a0; // FMaterialPenetration
		constexpr auto RON_Wallpaper = 0x1a8; // FMaterialPenetration
		constexpr auto RON_Water = 0x1b0; // FMaterialPenetration
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x228; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x228; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x228; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x228; // char : 1
		constexpr auto BaseEyeHeight = 0x22c; // float
		constexpr auto AutoPossessPlayer = 0x230; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x231; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x232; // char
		constexpr auto AIControllerClass = 0x238; // AController*
		constexpr auto PlayerState = 0x240; // APlayerState*
		constexpr auto LastHitBy = 0x250; // AController*
		constexpr auto Controller = 0x258; // AController*
		constexpr auto ControlInputVector = 0x264; // FVector
		constexpr auto LastControlInputVector = 0x270; // FVector
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x260; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x268; // bool
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_ABP_PoliceLights_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto Cube = 0x228; // UStaticMeshComponent*
		constexpr auto Cube2 = 0x230; // UStaticMeshComponent*
		constexpr auto Cube1 = 0x238; // UStaticMeshComponent*
		constexpr auto SpotLight1 = 0x240; // USpotLightComponent*
		constexpr auto SpotLight = 0x248; // USpotLightComponent*
		constexpr auto EmissiveIntensity = 0x250; // float
		constexpr auto EmissiveSpeed = 0x254; // float
		constexpr auto EmissiveColor = 0x258; // FLinearColor
		constexpr auto SpotlightsSpeed = 0x268; // float
	}

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeBodySetup = 0x450; // UBodySetup*
		constexpr auto AreaClass = 0x458; // UNavAreaBase*
		constexpr auto ShapeColor = 0x460; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x464; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x464; // char : 1
		constexpr auto bDynamicObstacle = 0x464; // char : 1
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeVolume { // : USoundNodeAssetReferencer
		constexpr auto VolumeAdjust = 0x48; // float
	}

	namespace n_USubmixEffectConvolutionReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTabletDisplay { // : UUserWidget
		constexpr auto OwningTablet = 0x260; // ATablet*
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNiagaraComponentRendererProperties { // : UNiagaraRendererProperties
		constexpr auto ComponentType = 0x78; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x80; // uint32_t
		constexpr auto EnabledBinding = 0x88; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0xe0; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0x138; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0x139; // bool
		constexpr auto RendererVisibility = 0x13c; // int32_t
		constexpr auto TemplateComponent = 0x140; // USceneComponent*
		constexpr auto PropertyBindings = 0x148; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UMusicData { // : UDataAsset
		constexpr auto PreplanningTrack = 0x30; // FMusicTrack
		constexpr auto AmbientTrack = 0x58; // FMusicTrack
		constexpr auto ActionTrack = 0x80; // FMusicTrack
		constexpr auto FMODTracks = 0xa8; // FMusicTrackFMOD
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_UWeaponWheelWidget { // : URadialWidgetBase
		constexpr auto Categories = 0x400; // TArray<FName>
	}

	namespace n_APaperGroupedSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperGroupedSpriteComponent*
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_USimpleCameraShakePattern { // : UCameraShakePattern
		constexpr auto Duration = 0x28; // float
		constexpr auto BlendInTime = 0x2c; // float
		constexpr auto BlendoutTime = 0x30; // float
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UDeveloperSettings
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x384; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x385; // EMovementMode
		constexpr auto GroundMovementMode = 0x386; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x387; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x387; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x387; // char : 1
		constexpr auto bJustTeleported = 0x387; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x387; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x387; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x388; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x388; // char : 1
		constexpr auto bNotifyApex = 0x388; // char : 1
		constexpr auto bCheatFlying = 0x388; // char : 1
		constexpr auto bWantsToCrouch = 0x388; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x388; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x388; // char : 1
		constexpr auto bFastAttachedMove = 0x388; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x389; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x389; // char : 1
		constexpr auto bPerformingJumpOff = 0x389; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x389; // char : 1
		constexpr auto bUseRVOAvoidance = 0x389; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x389; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x389; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38a; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38a; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38a; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38a; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38a; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38a; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x39c; // float
		constexpr auto RequestedVelocity = 0x3a0; // FVector
		constexpr auto AvoidanceUID = 0x3ac; // int32_t
		constexpr auto AvoidanceGroup = 0x3b0; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3b8; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3bc; // float
		constexpr auto PendingLaunchVelocity = 0x3c0; // FVector
		constexpr auto NavMeshProjectionInterval = 0x470; // float
		constexpr auto NavMeshProjectionTimer = 0x474; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x478; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x480; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x484; // float
		constexpr auto PostPhysicsTickFunction = 0x488; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d0; // float
		constexpr auto CurrentRootMotion = 0x980; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9b8; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa80; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xac0; // FVector
	}

	namespace n_UDatasmithLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UPaperTileSet { // : UObject
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UAutoDestroySubsystem { // : UTickableWorldSubsystem
		constexpr auto ActorsToPoll = 0x40; // TArray<AActor*>
	}

	namespace n_AFormationActor { // : AActor
		constexpr auto FollowActor = 0x220; // AActor*
		constexpr auto MaxPositions = 0x228; // int32_t
		constexpr auto MaxRange = 0x22c; // float
		constexpr auto AlphaCapsule = 0x230; // UCapsuleComponent*
		constexpr auto Positions = 0x238; // TArray<UBillboardComponent*>
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UW_Tablet_TabButton_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button = 0x268; // UW_StandardButton_C*
		constexpr auto Tab_Text = 0x270; // UTextBlock*
		constexpr auto TabMenuName = 0x278; // FText
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_ABP_RoNBloodDrip_C { // : ABloodPool
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto BloodMaterial = 0x230; // UMaterialInstanceDynamic*
		constexpr auto BloodGrowRate = 0x238; // float
		constexpr auto CurrentBloodGrowth = 0x23c; // float
		constexpr auto bBleeding = 0x240; // bool
		constexpr auto InitialReveal = 0x244; // float
	}

	namespace n_ABP_MenuGameMode_C { // : AMainMenuGM
		constexpr auto UberGraphFrame = 0x348; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x350; // USceneComponent*
		constexpr auto RandomMapInt = 0x358; // int32_t
		constexpr auto ConnectingWidget = 0x360; // UObject*
	}

	namespace n_UMovieSceneObjectPropertyTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyClass = 0xc8; // UObject*
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UDatasmithAreaLightActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UGeometryCacheCodecRaw { // : UGeometryCacheCodecBase
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_ATrapSpawnPoint { // : ATrapActor
		constexpr auto SpawnPoint = 0x2e0; // UTrapSpawnComponent*
		constexpr auto bAlreadySpawned = 0x2e8; // bool
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_Preview_Char_Body_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x2d0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x4b0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x690; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x6b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SequencePlayer = 0x6d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseDriver_6 = 0x750; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_5 = 0x8b8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_4 = 0xa20; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_3 = 0xb88; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_BlendListByBool = 0xcf0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseDriver_2 = 0xd90; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver = 0xef8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_Root = 0x1060; // FAnimNode_Root
		constexpr auto PreviewSeqRef = 0x1090; // UAnimSequence*
		constexpr auto bIsPhysicsOn = 0x1098; // bool
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x298; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a0; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2a8; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b0; // AHUD*
		constexpr auto PlayerCameraManager = 0x2b8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2c8; // bool
		constexpr auto TargetViewRotation = 0x2cc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2e4; // float
		constexpr auto HiddenActors = 0x2f0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x300; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x314; // float
		constexpr auto LastSpectatorSyncLocation = 0x318; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x324; // FRotator
		constexpr auto ClientCap = 0x330; // int32_t
		constexpr auto CheatManager = 0x338; // UCheatManager*
		constexpr auto CheatClass = 0x340; // UCheatManager*
		constexpr auto PlayerInput = 0x348; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x350; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d0; // char : 1
		constexpr auto NetPlayerIndex = 0x3d4; // char
		constexpr auto PendingSwapConnection = 0x410; // UNetConnection*
		constexpr auto NetConnection = 0x418; // UNetConnection*
		constexpr auto InputYawScale = 0x42c; // float
		constexpr auto InputPitchScale = 0x430; // float
		constexpr auto InputRollScale = 0x434; // float
		constexpr auto bShowMouseCursor = 0x438; // char : 1
		constexpr auto bEnableClickEvents = 0x438; // char : 1
		constexpr auto bEnableTouchEvents = 0x438; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x438; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x438; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x438; // char : 1
		constexpr auto ForceFeedbackScale = 0x43c; // float
		constexpr auto ClickEventKeys = 0x440; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x450; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x451; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x452; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x453; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x454; // float
		constexpr auto SeamlessTravelCount = 0x458; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x45a; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d0; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4d8; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f0; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x548; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x554; // bool
		constexpr auto SpawnLocation = 0x558; // FVector
	}

	namespace n_UDatasmithActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_UGeometryCacheTrack { // : UObject
		constexpr auto Duration = 0x28; // float
	}

	namespace n_AMultitool { // : ABaseItem
		constexpr auto MultitoolAnimData = 0x958; // TMap<EMultitoolFunctions, UReadyOrNotWeaponAnimData*>
		constexpr auto PvPFreeInteraction = 0x9a8; // UInteractionsData*
		constexpr auto CurrentToolKit = 0x9b0; // EMultitoolFunctions
		constexpr auto bIsLockpickGun = 0x9b1; // bool
		constexpr auto bAudioBasedProgress = 0x9b2; // char : 1
		constexpr auto FMODLockpickingSound = 0x9b8; // UFMODEvent*
		constexpr auto FMODKnifeSound = 0x9c0; // UFMODEvent*
		constexpr auto FMODWirecutterSound = 0x9c8; // UFMODEvent*
		constexpr auto FMODFreeingSound = 0x9d0; // UFMODEvent*
		constexpr auto TargetActor = 0x9d8; // AActor*
		constexpr auto PendingFreeCharacter = 0x9e0; // APlayerCharacter*
		constexpr auto bOperating = 0x9e8; // bool
		constexpr auto CurrentOperatingTime = 0x9ec; // float
		constexpr auto MaxOperatingTime = 0x9f0; // float
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_USteamWSRequestUGCDetailsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UImageSequenceProtocol_EXR { // : UImageSequenceProtocol
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_AMirror { // : APlanarReflection
		constexpr auto VisibilityBoundsTransform = 0x240; // FTransform
		constexpr auto VisibilityBoundsExtent = 0x270; // FVector
	}

	namespace n_UMovieSceneSlomoSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_AFlashLightTrackingPoint { // : AActor
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto PerceptionStimuliComp = 0x228; // UAIPerceptionStimuliSourceComponent*
	}

	namespace n_UUniformInteger { // : UFieldNodeInt
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput { // : UMaterialExpressionCustomOutput
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto MASK = 0xb8; // FExpressionInput
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_USingleClickInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_USourceEffectEQPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x220; // UWindDirectionalSourceComponent*
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles { // : UNiagaraEventReceiverEmitterAction
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x760; // float
		constexpr auto BlendRadius = 0x764; // float
		constexpr auto BlendWeight = 0x768; // float
		constexpr auto bEnabled = 0x76c; // char : 1
		constexpr auto bUnbound = 0x76c; // char : 1
	}

	namespace n_UW_SWATCommandStatus_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_CommandCompletedWhileAnotherQueued = 0x268; // UWidgetAnimation*
		constexpr auto Anim_CommandIssued = 0x270; // UWidgetAnimation*
		constexpr auto Anim_CommandCompleted = 0x278; // UWidgetAnimation*
		constexpr auto CommandStatus_Box = 0x280; // UVerticalBox*
		constexpr auto CurrentCommand_Box = 0x288; // UHorizontalBox*
		constexpr auto CurrentCommand_Pulse_Text = 0x290; // UW_Text_C*
		constexpr auto CurrentCommand_Status_Text = 0x298; // UW_Text_C*
		constexpr auto CurrentCommand_Text = 0x2a0; // UW_Text_C*
		constexpr auto HealthStatus_SizeBox = 0x2a8; // USizeBox*
		constexpr auto IssueCommand_Hotkey_RichText = 0x2b0; // URichTextBlock*
		constexpr auto PlayerHealth_Text = 0x2b8; // UW_Text_C*
		constexpr auto QueueCommand_Box = 0x2c0; // UHorizontalBox*
		constexpr auto QueueCommand_SubText = 0x2c8; // UTextBlock*
		constexpr auto QueueCommand_SubText_Rich = 0x2d0; // URichTextBlock*
		constexpr auto SizeBox = 0x2d8; // USizeBox*
		constexpr auto SwatInfo_Box = 0x2e0; // UVerticalBox*
		constexpr auto SwatName_Text = 0x2e8; // UW_Text_C*
		constexpr auto SwatStats_Box = 0x2f0; // UHorizontalBox*
		constexpr auto TeamIndicator_Box = 0x2f8; // USizeBox*
		constexpr auto TeamIndicator_Image = 0x300; // UImage*
		constexpr auto bIsLead = 0x308; // bool
		constexpr auto SquadPosition = 0x309; // ESquadPosition
		constexpr auto HealthStatus = 0x30a; // EPlayerHealthStatus
		constexpr auto MaxHeight = 0x30c; // float
		constexpr auto MinHeight = 0x310; // float
		constexpr auto BlueTeamColor = 0x314; // FLinearColor
		constexpr auto RedTeamColor = 0x324; // FLinearColor
		constexpr auto ElementColor = 0x334; // FLinearColor
		constexpr auto HealthyColor = 0x344; // FLinearColor
		constexpr auto InjuredColor = 0x354; // FLinearColor
		constexpr auto IncapacitatedColor = 0x364; // FLinearColor
		constexpr auto IsDesignTime = 0x374; // bool
		constexpr auto TargetHeight = 0x378; // float
		constexpr auto NormalColor = 0x37c; // FLinearColor
		constexpr auto TH_HeightChange = 0x390; // FTimerHandle
		constexpr auto bWaiting = 0x398; // bool
		constexpr auto bIsProgress = 0x399; // bool
		constexpr auto TargetHealthWidth = 0x39c; // float
		constexpr auto TH_HealthWidthChange = 0x3a0; // FTimerHandle
	}

	namespace n_UNiagaraDataInterfaceVectorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UNoiseField { // : UFieldNodeFloat
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x228; // char : 1
		constexpr auto bWakeOnLevelStart = 0x228; // char : 1
		constexpr auto SkeletalMeshComponent = 0x230; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x238; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x240; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x248; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x250; // UMaterialInterface*
	}

	namespace n_URestrictedGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x230; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x240; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x250; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x258; // bool
		constexpr auto OnSmartLinkReached = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UChallenge { // : UObject
		constexpr auto ChallengeName = 0x28; // FText
		constexpr auto ChallengeDescription = 0x40; // FText
		constexpr auto ChallengeProgressName = 0x58; // FName
		constexpr auto ChallengeProgressCurrent = 0x60; // int32_t
		constexpr auto ChallengeProgressMax = 0x64; // int32_t
		constexpr auto bHiddenChallenge = 0x68; // bool
		constexpr auto bChallengeComplete = 0x69; // bool
		constexpr auto bLevelSpecificChallenge = 0x6a; // bool
	}

	namespace n_APickupWeaponActor { // : APickupActor
		constexpr auto Weapon = 0x288; // ABaseWeapon*
		constexpr auto bKillOnPickup = 0x290; // bool
		constexpr auto bSecondaryWeapon = 0x291; // bool
		constexpr auto bModifyLoadout = 0x292; // bool
		constexpr auto ScopeAttachment = 0x298; // UWeaponAttachment*
		constexpr auto MuzzleAttachment = 0x2a0; // UWeaponAttachment*
		constexpr auto UnderbarrelAttachment = 0x2a8; // UWeaponAttachment*
		constexpr auto OverbarrelAttachment = 0x2b0; // UWeaponAttachment*
	}

	namespace n_UDatasmithStaticMeshIFCImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UTestMovieSceneTrack { // : UMovieSceneTrack
		constexpr auto bHighPassFilter = 0x98; // bool
		constexpr auto SectionArray = 0xa0; // TArray<UMovieSceneSection*>
	}

	namespace n_UFindSessionsCallbackProxyAdvanced { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_AHelmet_UpArmor_C { // : AHeadwear
		constexpr auto UberGraphFrame = 0x15f0; // FPointerToUberGraphFrame
		constexpr auto PlayerState = 0x15f8; // APlayerState*
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_UItemData { // : UDataAsset
		constexpr auto PrimaryWeapons = 0x30; // TArray<FWeaponData>
		constexpr auto BluePVPUniquePrimaryWeapons = 0x40; // TArray<FWeaponData>
		constexpr auto RedPVPUniquePrimaryWeapons = 0x50; // TArray<FWeaponData>
		constexpr auto SecondaryWeapons = 0x60; // TArray<FWeaponData>
		constexpr auto NullItem = 0x70; // ABaseItem*
		constexpr auto NullPrimaryScopeAttachment = 0x78; // UWeaponAttachment*
		constexpr auto NullMuzzleAttachment = 0x80; // UWeaponAttachment*
		constexpr auto NullOverbarrelAttachment = 0x88; // UWeaponAttachment*
		constexpr auto NullUnderbarrelAttachment = 0x90; // UWeaponAttachment*
		constexpr auto NullStockAttachment = 0x98; // UWeaponAttachment*
		constexpr auto NullGripAttachment = 0xa0; // UWeaponAttachment*
		constexpr auto NullIlluminatorAttachment = 0xa8; // UWeaponAttachment*
		constexpr auto NullAmmunitionAttachment = 0xb0; // UWeaponAttachment*
		constexpr auto DefaultItemsGivenToPlayer = 0xb8; // TArray<TSoftClassPtr<UObject>>
		constexpr auto FactorySkin = 0xc8; // USkinComponent*
		constexpr auto DefaultLoadouts = 0xd0; // TArray<FSavedLoadout>
		constexpr auto LongTacticalItems = 0xe0; // TArray<FDeviceData>
		constexpr auto TacticalItems = 0xf0; // TArray<FDeviceData>
		constexpr auto BodySelection = 0x100; // TArray<FArmourData>
		constexpr auto HeadSelection = 0x110; // TArray<FArmourData>
		constexpr auto UniformSelection = 0x120; // TArray<USkinComponent*>
		constexpr auto CharacterSelection = 0x130; // TArray<FCharacterData>
		constexpr auto DefaultItemImage = 0x140; // TSoftObjectPtr<UTexture2D>
		constexpr auto PersonnelNames = 0x168; // TArray<FText>
		constexpr auto PersonnelDescriptions = 0x178; // TArray<FText>
		constexpr auto AttachmentPointsBase = 0x188; // int32_t
	}

	namespace n_UBodySetup { // : UBodySetupCore
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_UCompositeDataTable { // : UDataTable
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UEnvQueryTest_Volume { // : UEnvQueryTest
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_AObjective { // : AInfo
		constexpr auto ScoringComponent = 0x220; // UScoringComponent*
		constexpr auto ObjectiveCompleteAudio = 0x228; // UFMODEvent*
		constexpr auto ObjectiveFailedAudio = 0x230; // UFMODEvent*
		constexpr auto ObjectiveStatus = 0x238; // EObjectiveStatus
		constexpr auto ObjectiveName = 0x240; // FText
		constexpr auto ObjectiveDescription = 0x258; // FText
		constexpr auto LockedToMode = 0x270; // ECOOPMode
		constexpr auto bFailureEndsMission = 0x271; // bool
		constexpr auto bHiddenObjective = 0x272; // bool
	}

	namespace n_UUMGSequenceTickManager { // : UObject
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UAnimStreamable { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UInteractiveToolManager { // : UObject
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UPhysicsSettingsCore { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UChatMessage_Entry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MessageText = 0x268; // UTextBlock*
		constexpr auto Message = 0x270; // FRChatMessage
		constexpr auto Team = 0x2d8; // FString
	}

	namespace n_UAnimNotify_ToggleEquipmentVis { // : UAnimNotify
		constexpr auto InventroyVis = 0x38; // EToggleInventoryVis
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x220; // int32_t
		constexpr auto MaxPlayers = 0x224; // int32_t
		constexpr auto MaxPartySize = 0x228; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x22c; // char
		constexpr auto bRequiresPushToTalk = 0x22d; // bool
		constexpr auto SessionName = 0x230; // FName
	}

	namespace n_APlayerCharacter { // : AReadyOrNotCharacter
		constexpr auto MeshComps = 0x10d0; // TArray<USkeletalMeshComponent*>
		constexpr auto Mesh1P = 0x10e0; // USkeletalMeshComponent*
		constexpr auto LastSetMesh1PDynamicMaterial = 0x10e8; // UMaterialInterface*
		constexpr auto DynamicWeaponFovMats = 0x10f0; // TArray<UMaterialInstanceDynamic*>
		constexpr auto PlayerPostProcessingComp = 0x1110; // UPlayerPostProcessing*
		constexpr auto BleedComponent = 0x1118; // UBleedComponent*
		constexpr auto LastKnownPlayerState = 0x1120; // APlayerState*
		constexpr auto ReplicatedFPMesh = 0x1128; // FRotator
		constexpr auto CurInputVector = 0x1140; // FVector
		constexpr auto PushOverlappingAI_Handle = 0x1150; // FTimerHandle
		constexpr auto bInAISafeZone = 0x1158; // bool
		constexpr auto ActivityPreviousLocationMap = 0x1160; // TMap<UBaseActivity*, FVector>
		constexpr auto BlockedByPlayerCallCoolDown = 0x11b0; // float
		constexpr auto MeshBody1P = 0x11b8; // USkeletalMeshComponent*
		constexpr auto Body1PMat = 0x11c0; // UMaterialInstanceDynamic*
		constexpr auto FirstPersonCameraComponent = 0x11c8; // UCameraComponent*
		constexpr auto CameraCaptureComponent = 0x11d0; // USceneCaptureComponent2D*
		constexpr auto HeadcamComp = 0x11d8; // UArrowComponent*
		constexpr auto FMODWeaponComp = 0x11e0; // UFMODAudioComponent*
		constexpr auto FMODBreathingAudioComp = 0x11e8; // UFMODAudioComponent*
		constexpr auto FMODEnvComp = 0x11f0; // UFMODAudioComponent*
		constexpr auto ScoringComponent = 0x11f8; // UScoringComponent*
		constexpr auto CurrentViewCharacter = 0x1200; // AReadyOrNotCharacter*
		constexpr auto CurrentCameraLocation = 0x1208; // FVector
		constexpr auto CurrentCameraRotation = 0x1214; // FRotator
		constexpr auto OnDefaultCommandIssued = 0x1220; // FMulticastInlineDelegate
		constexpr auto OnTeamViewSet = 0x1230; // FMulticastInlineDelegate
		constexpr auto CurrentTeamViewIndex = 0x1240; // int32_t
		constexpr auto PlayerViewActor = 0x1248; // APlayerViewActor*
		constexpr auto PlayerViewActorClass = 0x1250; // APlayerViewActor*
		constexpr auto TH_TeamViewInput = 0x1258; // FTimerHandle
		constexpr auto TeamViewInputHoldTime = 0x1260; // float
		constexpr auto surfaceType = 0x1264; // float
		constexpr auto roomType = 0x1268; // float
		constexpr auto PVPSpeakerName = 0x1270; // FString
		constexpr auto bPendingCenterprint = 0x1280; // bool
		constexpr auto PendingCenterprintDuration = 0x1284; // float
		constexpr auto PendingCenterprintType = 0x1288; // FName
		constexpr auto PendingCenterprintOther = 0x1290; // APlayerCharacter*
		constexpr auto bIsSwatCommandOpen = 0x1298; // bool
		constexpr auto SwatCommandWidget = 0x12a0; // USwatCommandWidget*
		constexpr auto bInCommandMenu = 0x12a9; // bool
		constexpr auto bInDevicesMenu = 0x12aa; // bool
		constexpr auto bInTabMenu = 0x12ab; // bool
		constexpr auto bFadeToGray = 0x12ac; // bool
		constexpr auto FallDamageIndicator = 0x12b0; // TSoftClassPtr<UObject>
		constexpr auto DyingAudioComp = 0x12d8; // UAudioComponent*
		constexpr auto OverlappingDoor = 0x1300; // ADoor*
		constexpr auto Sensitivity = 0x1308; // float
		constexpr auto bInvertYaw = 0x130c; // bool
		constexpr auto bInvertPitch = 0x130d; // bool
		constexpr auto AILookingAtThis = 0x1310; // AAICharacter*
		constexpr auto bSpottedBySwat = 0x1318; // bool
		constexpr auto lastHighlightedActor = 0x1320; // AActor*
		constexpr auto HUD_Widget = 0x1328; // UUserWidget*
		constexpr auto HumanCharacterWidget_V2 = 0x1330; // UHumanCharacterHUD_V2*
		constexpr auto UseDistance = 0x1338; // float
		constexpr auto LastInteractableComponent = 0x1340; // UInteractableComponent*
		constexpr auto LastBuildingEntered = 0x1348; // ABuildingTrigger*
		constexpr auto InsideCurrentBuilding = 0x1350; // ABuildingTrigger*
		constexpr auto lastHighlightedDoor = 0x1358; // ADoor*
		constexpr auto lastHighlightedEvidence = 0x1360; // ABaseItem*
		constexpr auto lastHighlightedPickupMagazine = 0x1368; // APickupMagazineActor*
		constexpr auto bExitWithFireSelect = 0x1370; // bool
		constexpr auto PreviousPosessedCharacter = 0x1378; // APlayerCharacter*
		constexpr auto OnClientPossessed = 0x1388; // FMulticastInlineDelegate
		constexpr auto OnPlayerTakenDamageDetails = 0x1398; // FMulticastInlineDelegate
		constexpr auto CriticalInjuredEvent = 0x13a8; // UFMODEvent*
		constexpr auto FlatlineEvent = 0x13b0; // UFMODEvent*
		constexpr auto FlatlineEventPvP = 0x13b8; // UFMODEvent*
		constexpr auto HeadshotEvent = 0x13c0; // UFMODEvent*
		constexpr auto SAPIPlateHitEvent = 0x13c8; // UFMODEvent*
		constexpr auto bWasRecentlyHealed = 0x13d0; // char : 1
		constexpr auto bIsBeingHealed = 0x13d0; // char : 1
		constexpr auto bIsHealing = 0x13d0; // char : 1
		constexpr auto bMirroring = 0x13d0; // char : 1
		constexpr auto bSpawnInventoryItemsOnPossess = 0x13d8; // bool
		constexpr auto OnNightVisionGogglesToggled = 0x13e0; // FMulticastInlineDelegate
		constexpr auto FreeLookCache = 0x13f0; // FRotator
		constexpr auto YellOutEffectLength = 0x1418; // float
		constexpr auto YelloutEffectRadius = 0x141c; // float
		constexpr auto bShowReadyStatus = 0x1420; // bool
		constexpr auto LobbyAssociatedPlayerState = 0x1428; // APlayerState*
		constexpr auto LastPlayerState = 0x1430; // AReadyOrNotPlayerState*
		constexpr auto HitBones = 0x1438; // TArray<FName>
		constexpr auto Hit_Arm_L = 0x1448; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Arm_R = 0x1470; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Body_Upper = 0x1498; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Body_Lower = 0x14c0; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Leg_L = 0x14e8; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Leg_R = 0x1510; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Foot_L = 0x1538; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Foot_R = 0x1560; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Head_Front = 0x1588; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Hit_Head_Back = 0x15b0; // TSoftObjectPtr<UAnimMontage>
		constexpr auto Camera_Hit_Arm_L = 0x15d8; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Arm_R = 0x15e0; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Low = 0x15e8; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Leg_L = 0x15f0; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Leg_R = 0x15f8; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Head_Front = 0x1600; // UMatineeCameraShake*
		constexpr auto Camera_Hit_Head_Back = 0x1608; // UMatineeCameraShake*
		constexpr auto CrouchHeight = 0x1610; // float
		constexpr auto BodyImpactGroundSound = 0x1618; // USoundCue*
		constexpr auto SpeedSmoothed = 0x1638; // float
		constexpr auto Camera_RotationRate = 0x163c; // FRotator
		constexpr auto Actor_RotationRate = 0x1648; // FRotator
		constexpr auto CurrentlyPiloting = 0x1660; // APawn*
		constexpr auto WoundMap = 0x1668; // TMap<FName, FWoundData>
		constexpr auto BloodSpray = 0x16b8; // UParticleSystem*
		constexpr auto RevivingPlayer = 0x1748; // APlayerCharacter*
		constexpr auto BeingRevivedByPlayer = 0x1750; // APlayerCharacter*
		constexpr auto RevivingOperatingTime = 0x1758; // float
		constexpr auto StunMovementSpeedMultiplier = 0x175c; // float
		constexpr auto bStunAimLocked = 0x1760; // bool
		constexpr auto LastEquippedItemBeforeStun = 0x1768; // ABaseItem*
		constexpr auto LastBlockedStun = 0x1778; // EStunType
		constexpr auto LastBlockedStunTime = 0x177c; // float
		constexpr auto FirstPersonShakeAmount = 0x1780; // float
		constexpr auto ViewBlendMultiplier = 0x1784; // float
		constexpr auto BlendedBone = 0x178c; // FName
		constexpr auto Replicated_3PAnimInstance = 0x17a0; // UAnimInstance*
		constexpr auto Replicated_1PAnimInstance = 0x17a8; // UAnimInstance*
		constexpr auto MontageQueue_3P = 0x17b0; // TArray<UAnimMontage*>
		constexpr auto MontageQueue_1P = 0x17c0; // TArray<UAnimMontage*>
		constexpr auto ItemSelectionPanelGroups = 0x17d0; // TArray<FItemSelectionPanelSetting_ItemGroup>
		constexpr auto HoldingUseTime = 0x17e0; // float
		constexpr auto bHoldingUse = 0x17e4; // bool
		constexpr auto UseClickTime = 0x17e8; // float
		constexpr auto bLookingAtEvidenceItem = 0x17ec; // bool
		constexpr auto bLookingAtDoor = 0x17ed; // bool
		constexpr auto bLookingAtCivilian = 0x17ee; // bool
		constexpr auto bLookingAtSuspect = 0x17ef; // bool
		constexpr auto bLookingAtDeadHuman = 0x17f0; // bool
		constexpr auto bLookingAtHuman = 0x17f1; // bool
		constexpr auto bLookingAtTarget = 0x17f2; // bool
		constexpr auto bUserLowReady = 0x17f3; // bool
		constexpr auto bForceLowReady = 0x17f4; // bool
		constexpr auto LowReadyTraceDistance = 0x17f8; // float
		constexpr auto LastCollectedEvidence = 0x1800; // AEvidenceActor*
		constexpr auto ArmorOverrideMapFP = 0x1808; // TMap<ABaseArmour*, USkeletalMesh*>
		constexpr auto ChemlightClasses = 0x1860; // TArray<AActor*>
		constexpr auto bIsInTightSpace = 0x1870; // char : 1
		constexpr auto PlayerEffects = 0x1878; // TArray<UBasePlayerEffect*>
		constexpr auto RecoilNerfEffect = 0x1888; // UBasePlayerEffect*
		constexpr auto DefaultItems = 0x1898; // FLoadout
		constexpr auto EquipIndex = 0x18b8; // int32_t
		constexpr auto RandomLoadoutSelection = 0x18c0; // TArray<FLoadout>
		constexpr auto ForwardShake = 0x18d0; // UMatineeCameraShake*
		constexpr auto RightShake = 0x18d8; // UMatineeCameraShake*
		constexpr auto OnWeaponFireModeChanged = 0x18e0; // FMulticastInlineDelegate
		constexpr auto OnWeaponFired = 0x18f0; // FMulticastInlineDelegate
		constexpr auto DroppedItem = 0x1910; // ABaseItem*
		constexpr auto BloodPool = 0x1918; // ABloodPool*
		constexpr auto CameraRotationRateMeshSpaceMultiplier = 0x1920; // FVector
		constexpr auto MeshspaceRecoilMovementMultiplier = 0x192c; // FVector
		constexpr auto MeshSpaceMovementMultiplier1P = 0x1938; // float
		constexpr auto MeshspaceRecoilMovementMinMax = 0x193c; // FVector
		constexpr auto bWeaponDown3P = 0x1951; // bool
		constexpr auto bIsWearingHeavyArmour = 0x1952; // bool
		constexpr auto ReturnToWeaponDownDelay = 0x1954; // float
		constexpr auto bFireLoop = 0x1960; // bool
		constexpr auto FullAutoLoop_Handle = 0x1968; // FTimerHandle
		constexpr auto TimeSinceAiming = 0x1978; // float
		constexpr auto bServerIsBlockingAnimationPlaying = 0x1988; // bool
		constexpr auto OnAttachmentLightToggled = 0x1990; // FMulticastInlineDelegate
		constexpr auto OnMelee = 0x19b8; // FMulticastInlineDelegate
		constexpr auto SprintFovFactor = 0x19d4; // float
		constexpr auto SprintFovInterpTime = 0x19d8; // float
		constexpr auto DefaultFovInterpTime = 0x19dc; // float
		constexpr auto PendingC2Removal = 0x19f0; // APlacedC2Explosive*
		constexpr auto LastEquippedItemBeforeUsingChem = 0x19f8; // ABaseItem*
		constexpr auto QuickThrowItem = 0x1a00; // ABaseGrenade*
		constexpr auto ItemBeforeQuickThrow = 0x1a08; // ABaseItem*
		constexpr auto bQuickThrowing = 0x1a11; // bool
		constexpr auto ClearingScore = 0x1a18; // float
		constexpr auto bAiming = 0x1a1c; // bool
		constexpr auto AimTime = 0x1a20; // float
		constexpr auto bReloadLoop = 0x1a2a; // bool
		constexpr auto OnWeaponMagCheck = 0x1a40; // FMulticastInlineDelegate
		constexpr auto ForwardStrafeSpeedMultiplier = 0x1a54; // float
		constexpr auto BackwardStrafeSpeedMultiplier = 0x1a58; // float
		constexpr auto SideStrafeSpeedMultiplier = 0x1a5c; // float
		constexpr auto LeanSpeedMultiplier = 0x1a60; // float
		constexpr auto SpeedPercentLossPerLegInjury = 0x1a64; // float
		constexpr auto bLeanLeftToggle = 0x1a7c; // bool
		constexpr auto bLeanRightToggle = 0x1a7d; // bool
		constexpr auto LeanAudioComponent = 0x1a80; // UFMODAudioComponent*
		constexpr auto LeanAudioEvent = 0x1a88; // UFMODEvent*
		constexpr auto FirstPersonCameraPos_CurrentFrame = 0x1a90; // FVector
		constexpr auto FirstPersonCameraPos_LastFrame = 0x1a9c; // FVector
		constexpr auto LeanMovementValue = 0x1aa8; // float
		constexpr auto FreelookSetting = 0x1aac; // FCameraFreelookSetting
		constexpr auto VaultTraceForward = 0x1ac0; // FHitResult
		constexpr auto VaultTraceDownClose = 0x1b48; // FHitResult
		constexpr auto VaultTraceDownMiddle = 0x1bd0; // FHitResult
		constexpr auto VaultTraceDownFar = 0x1c58; // FHitResult
		constexpr auto bLedgeFound = 0x1ce0; // bool
		constexpr auto bVaulting = 0x1ce1; // bool
		constexpr auto LastPlayedVaultMontage = 0x1d10; // UAnimMontage*
		constexpr auto bLeaningLeft = 0x1d18; // bool
		constexpr auto bLeaningRight = 0x1d19; // bool
		constexpr auto bLeaningUp = 0x1d1a; // bool
		constexpr auto bLeaningDown = 0x1d1b; // bool
		constexpr auto bFreeLeaning = 0x1d20; // bool
		constexpr auto bIsLeaning = 0x1d21; // bool
		constexpr auto RunSpeed = 0x1d24; // float
		constexpr auto SpeedModifier_AimFocus = 0x1d28; // float
		constexpr auto SpeedModifier_Aim = 0x1d2c; // float
		constexpr auto SpeedModifier_Crouch = 0x1d30; // float
		constexpr auto SpeedModifier_Sprint = 0x1d34; // float
		constexpr auto SpeedModifier_SprintMax = 0x1d38; // float
		constexpr auto SpeedModifier_SprintTime = 0x1d3c; // float
		constexpr auto SpeedModifier_ArmorMin = 0x1d40; // float
		constexpr auto HitSpeedMultiplier = 0x1d44; // float
		constexpr auto SlowDownSpeedMultiplier = 0x1d48; // float
		constexpr auto WalkSpeedRampMultiplier = 0x1d4c; // float
		constexpr auto SprintSpeedRampUpMultiplier = 0x1d50; // float
		constexpr auto CurrentRunSpeedPercent = 0x1d54; // float
		constexpr auto MaxRunSpeedPercent = 0x1d5c; // float
		constexpr auto MaxCrouchRunSpeedPercent = 0x1d60; // float
		constexpr auto MinWalkSpeedPercent = 0x1d64; // float
		constexpr auto LastSetRunSpeed = 0x1d78; // float
		constexpr auto WalkSpeedMultiplier = 0x1d7c; // float
		constexpr auto DeployableWalkSpeedMultiplier = 0x1d80; // float
		constexpr auto bHoldingFastWalk = 0x1d84; // bool
		constexpr auto bHoldingSprint = 0x1d85; // bool
		constexpr auto bDisableSprinting = 0x1d94; // char : 1
		constexpr auto bWalking = 0x1d95; // bool
		constexpr auto bAllowPlacement = 0x1d96; // bool
		constexpr auto QuickLeanAmount = 0x1db0; // float
		constexpr auto FreeLeanX = 0x1db4; // float
		constexpr auto FreeLeanZ = 0x1db8; // float
		constexpr auto MeshspaceInterp = 0x1df8; // float
		constexpr auto VelocityCameraRollMultiplier = 0x1dfc; // float
		constexpr auto PendingRecoil = 0x1e00; // FRotator
		constexpr auto RecoilSpeed = 0x1e18; // float
		constexpr auto Last1PMontage = 0x1e28; // UAnimMontage*
		constexpr auto PlayedTableMontageMap1P = 0x1e30; // TMap<FString, UAnimMontage*>
		constexpr auto Rep_MontageSection3P = 0x1e88; // FName
		constexpr auto JumpStartSound = 0x1e90; // UFMODEvent*
		constexpr auto JumpLandSound = 0x1e98; // UFMODEvent*
		constexpr auto InMix = 0x1ea0; // UFMODSnapshot*
		constexpr auto OutMix = 0x1ea8; // UFMODSnapshot*
		constexpr auto bOutMixPlaying = 0x1eb0; // bool
		constexpr auto InjuredScreamPVP = 0x1eb8; // UFMODEvent*
		constexpr auto DeathScreamPVP = 0x1ec8; // UFMODEvent*
		constexpr auto InjuredScreamComponent = 0x1ed0; // UFMODAudioComponent*
		constexpr auto MovementRequiredPerSound = 0x1edc; // float
		constexpr auto RotationRequiredPerSound = 0x1ee0; // float
		constexpr auto NegativeVelocityRequiredForLandingSound = 0x1ee4; // float
		constexpr auto WalkSounds = 0x1f08; // TArray<FMovementSound>
		constexpr auto WalkSounds_Environmental = 0x1f18; // TSoftClassPtr<UObject>
		constexpr auto RunSounds = 0x1f40; // TArray<FMovementSound>
		constexpr auto RunSounds_Environmental = 0x1f50; // TSoftClassPtr<UObject>
		constexpr auto TurningSounds = 0x1f78; // TArray<FMovementSound>
		constexpr auto LandingSounds = 0x1f88; // TArray<FMovementSound>
		constexpr auto HitDirectionForward = 0x1fa8; // float
		constexpr auto HitDirectionRight = 0x1fac; // float
		constexpr auto Rep_FPBodyMesh = 0x1fc0; // USkeletalMesh*
		constexpr auto BreathingBaseEvent = 0x1fc8; // UFMODEvent*
		constexpr auto ExhaustionLevel = 0x1fd0; // float
		constexpr auto ExhaustionDissipationRate = 0x1fd4; // float
		constexpr auto ExhaustionIncreaseRate = 0x1fd8; // float
		constexpr auto ExhaustionThreshold = 0x1fdc; // float
		constexpr auto FearLevel = 0x1fe0; // float
		constexpr auto FearDissipationRate = 0x1fe8; // float
		constexpr auto FearSuppressionScale = 0x1fec; // float
		constexpr auto FearThreshold = 0x1ff0; // float
		constexpr auto bIsSightTweakMode = 0x2004; // bool
		constexpr auto SightTweakerWidgetTemplate = 0x2008; // UUserWidget*
		constexpr auto SightTweakerOverlay = 0x2010; // UUserWidget*
		constexpr auto SightTweakerPosOffset = 0x2018; // FVector
		constexpr auto SightTweakerRotOffset = 0x2024; // FRotator
		constexpr auto bNoTeamDamage = 0x2040; // bool
		constexpr auto SpawnProtectionTime = 0x2044; // float
		constexpr auto bIsThirdPerson = 0x2048; // bool
		constexpr auto ThirdPersonCameraComponent = 0x2050; // UCameraComponent*
		constexpr auto ThirdPersonCameraArm = 0x2058; // USpringArmComponent*
		constexpr auto Server_BaseAimRotation = 0x2060; // FRotator
		constexpr auto FreeAimCache = 0x206c; // FRotator
		constexpr auto IsPlayingInteraction = 0x2080; // bool
		constexpr auto bIsStopping = 0x20cc; // bool
		constexpr auto bNVGOn = 0x20cd; // bool
		constexpr auto LadderPlacementZone = 0x20d0; // ALadderSnapZone*
		constexpr auto MoveForwardInput = 0x20e4; // float
		constexpr auto MoveRightInput = 0x20e8; // float
		constexpr auto LeftFootSocketName = 0x2104; // FName
		constexpr auto RighttFootSocketName = 0x210c; // FName
		constexpr auto LeftFootEnum = 0x2114; // EFootConstEnum
		constexpr auto RightFootEnum = 0x2115; // EFootConstEnum
		constexpr auto FootAdjustOffset = 0x2118; // float
		constexpr auto FootInterpSpeed = 0x211c; // float
		constexpr auto FootRotationInterpSpeed = 0x2120; // float
		constexpr auto HipInterpSpeed = 0x2124; // float
		constexpr auto TraceDistance = 0x2128; // float
		constexpr auto TraceOffset = 0x212c; // float
		constexpr auto VelocityThreshold = 0x2130; // float
		constexpr auto SpeedBubbleAmount = 0x2134; // float
		constexpr auto CurrentMeshRot = 0x2138; // FRotator
		constexpr auto bIgnoreRotationOverride = 0x2146; // bool
		constexpr auto CurrentEmotion = 0x2147; // EPlayerEmotion
		constexpr auto FacialAnimationOverrideTime = 0x2148; // float
		constexpr auto FacialAnimationBlend = 0x214c; // float
		constexpr auto FacialAnimationBlendDecay = 0x2150; // float
		constexpr auto FacialAnimationPriority = 0x2154; // int32_t
		constexpr auto CameraBobTrans = 0x2170; // FVector
		constexpr auto WeaponBobTrans = 0x217c; // FVector
		constexpr auto WeaponBobRot = 0x2188; // FRotator
		constexpr auto CameraBobRot = 0x2194; // FRotator
		constexpr auto bIsSecondarySightActive = 0x21a0; // bool
		constexpr auto OnSecondarySightToggled = 0x21a8; // FMulticastInlineDelegate
		constexpr auto bIsPelvisFPMovementBobActive = 0x21b8; // bool
		constexpr auto PelvisFPMovementDamping = 0x21bc; // float
	}

	namespace n_UNiagaraComponentSettings { // : UObject
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto paramName = 0xa0; // FName
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UMaterialFunction { // : UMaterialFunctionInterface
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UNiagaraDataInterfaceLandscape { // : UNiagaraDataInterface
		constexpr auto SourceLandscape = 0x38; // AActor*
		constexpr auto SourceMode = 0x40; // ENDILandscape_SourceMode
		constexpr auto PhysicalMaterials = 0x48; // TArray<UPhysicalMaterial*>
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_PlayNiagaraEffect { // : UAnimNotify
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AScenarioCoverActivator { // : AVolume
		constexpr auto ScenarioGenerator = 0x258; // AScenarioGenerator*
	}

	namespace n_AObjectivePoint { // : AActor
		constexpr auto TiedToActor = 0x220; // AActor*
		constexpr auto ObjectiveMarkerComponent = 0x228; // UObjectiveMarkerComponent*
		constexpr auto MapActorComponent = 0x230; // UMapActorComponent*
	}

	namespace n_UOodleNetworkTrainerCommandlet { // : UCommandlet
		constexpr auto bCompressionTest = 0x80; // bool
		constexpr auto HashTableSize = 0x84; // int32_t
		constexpr auto DictionarySize = 0x88; // int32_t
		constexpr auto DictionaryTrials = 0x8c; // int32_t
		constexpr auto TrialRandomness = 0x90; // int32_t
		constexpr auto TrialGenerations = 0x94; // int32_t
		constexpr auto bNoTrials = 0x98; // bool
	}

	namespace n_ATugOfWarGS { // : AReadyOrNotGameState
		constexpr auto Mover = 0x6e0; // ATugOfWarMover*
	}

	namespace n_UBrushBaseProperties { // : UInteractiveToolPropertySet
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UAndroidPermissionCallbackProxy { // : UObject
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_ARosterScenarioSpawner { // : AInfo
		constexpr auto ObjectiveSpawns = 0x220; // TMap<FName, FDataTableRowHandle>
		constexpr auto Objectives = 0x270; // TArray<FObjectiveSpawn>
		constexpr auto WeaponCacheActors = 0x280; // TArray<AWeaponCacheActor*>
		constexpr auto PossibleWeapons = 0x290; // TArray<ABaseMagazineWeapon*>
		constexpr auto MaxPatrolRadiusDistance = 0x2a0; // float
		constexpr auto TimeBetweenTargetingCivilians = 0x2a4; // float
		constexpr auto TimeUntilBombExplodes = 0x2a8; // float
		constexpr auto ConfiguredSpawns = 0x2b0; // TArray<AAISpawn*>
		constexpr auto UsedPatrolPoints = 0x2c8; // TArray<APatrolPoint*>
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xc0; // UEnum*
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_AMainMenuGM { // : AGameModeBase
		constexpr auto MainMenuMusic = 0x2d0; // UFMODEvent*
		constexpr auto MainMenuAmbience = 0x2d8; // UFMODEvent*
		constexpr auto OnUpdateSessionSearch = 0x308; // FMulticastInlineDelegate
		constexpr auto AuthenticationMenu = 0x330; // UUserWidget*
		constexpr auto MainMenu = 0x340; // UUserWidget*
	}

	namespace n_UDestructibleDoorChunkComponent { // : UStaticMeshComponent
		constexpr auto bIsDoorHandle = 0x4e0; // bool
		constexpr auto bIsHinge = 0x4e1; // bool
		constexpr auto Health = 0x4e4; // float
		constexpr auto bCannotKickIfDestroyed = 0x4e8; // bool
		constexpr auto SupportChunks = 0x4f0; // TArray<UDestructibleDoorChunkComponent*>
	}

	namespace n_AReadyOrNotAvoidanceManager { // : AInfo
		constexpr auto SpawnedAI = 0x220; // TArray<ACyberneticCharacter*>
		constexpr auto MoveToTag_01 = 0x234; // FName
		constexpr auto MoveToTag_02 = 0x23c; // FName
	}

	namespace n_AServerStatReplicator { // : AInfo
		constexpr auto bUpdateStatNet = 0x220; // bool
		constexpr auto bOverwriteClientStats = 0x221; // bool
		constexpr auto Channels = 0x224; // uint32_t
		constexpr auto InRate = 0x228; // uint32_t
		constexpr auto OutRate = 0x22c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x234; // uint32_t
		constexpr auto InRateClientMax = 0x238; // uint32_t
		constexpr auto InRateClientMin = 0x23c; // uint32_t
		constexpr auto InRateClientAvg = 0x240; // uint32_t
		constexpr auto InPacketsClientMax = 0x244; // uint32_t
		constexpr auto InPacketsClientMin = 0x248; // uint32_t
		constexpr auto InPacketsClientAvg = 0x24c; // uint32_t
		constexpr auto OutRateClientMax = 0x250; // uint32_t
		constexpr auto OutRateClientMin = 0x254; // uint32_t
		constexpr auto OutRateClientAvg = 0x258; // uint32_t
		constexpr auto OutPacketsClientMax = 0x25c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x260; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x264; // uint32_t
		constexpr auto NetNumClients = 0x268; // uint32_t
		constexpr auto InPackets = 0x26c; // uint32_t
		constexpr auto OutPackets = 0x270; // uint32_t
		constexpr auto InBunches = 0x274; // uint32_t
		constexpr auto OutBunches = 0x278; // uint32_t
		constexpr auto OutLoss = 0x27c; // uint32_t
		constexpr auto InLoss = 0x280; // uint32_t
		constexpr auto VoiceBytesSent = 0x284; // uint32_t
		constexpr auto VoiceBytesRecv = 0x288; // uint32_t
		constexpr auto VoicePacketsSent = 0x28c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x290; // uint32_t
		constexpr auto PercentInVoice = 0x294; // uint32_t
		constexpr auto PercentOutVoice = 0x298; // uint32_t
		constexpr auto NumActorChannels = 0x29c; // uint32_t
		constexpr auto NumConsideredActors = 0x2a0; // uint32_t
		constexpr auto PrioritizedActors = 0x2a4; // uint32_t
		constexpr auto NumRelevantActors = 0x2a8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2ac; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2b4; // uint32_t
		constexpr auto NumActors = 0x2b8; // uint32_t
		constexpr auto NumNetActors = 0x2bc; // uint32_t
		constexpr auto NumDormantActors = 0x2c0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2c4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2c8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d0; // uint32_t
		constexpr auto ObjPathBytes = 0x2d4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2d8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2dc; // uint32_t
		constexpr auto NetSaturated = 0x2e0; // uint32_t
	}

	namespace n_AMusicSequencerUnreal { // : AMusicSequencerBase
		constexpr auto AudioPlayer = 0x248; // UAudioComponent*
		constexpr auto CurrentState = 0x250; // EMusicState
		constexpr auto NextState = 0x251; // EMusicState
		constexpr auto NextScriptedState = 0x252; // EMusicState
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UMapActorIconWidget { // : UMapActorWidget
		constexpr auto Icon_Image = 0x2b0; // UImage*
		constexpr auto Icon_Image_BG = 0x2b8; // UImage*
	}

	namespace n_ALightningGenerator { // : AActor
		constexpr auto SceneRoot = 0x230; // USceneComponent*
		constexpr auto Thunder = 0x238; // UAudioComponent*
		constexpr auto ParticleComponent = 0x240; // UParticleSystemComponent*
		constexpr auto ParticleSpawnChance = 0x248; // float
		constexpr auto ParticleTemplates = 0x250; // TArray<UParticleSystem*>
		constexpr auto ThunderSounds = 0x260; // TArray<USoundBase*>
		constexpr auto Lightning = 0x270; // UDirectionalLightComponent*
		constexpr auto ThunderDelayMin = 0x278; // float
		constexpr auto ThunderDelayMax = 0x27c; // float
		constexpr auto LightningColorMin = 0x280; // FLinearColor
		constexpr auto LightningColorMax = 0x290; // FLinearColor
		constexpr auto LightningDelayMin = 0x2a0; // float
		constexpr auto LightningDelayMax = 0x2a4; // float
		constexpr auto LightningIntensityMin = 0x2a8; // float
		constexpr auto LightningIntensityMax = 0x2ac; // float
		constexpr auto LightningIntensityDecay = 0x2b0; // float
		constexpr auto LightningIntensityJitterMin = 0x2b4; // float
		constexpr auto LightningIntensityJitterMax = 0x2b8; // float
		constexpr auto LightningIntensityJitterTimeMin = 0x2bc; // float
		constexpr auto LightningIntensityJitterTimeMax = 0x2c0; // float
		constexpr auto LightningJitterTimeRemaining = 0x2c4; // float
	}

	namespace n_USynthComponent { // : USceneComponent
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bEnableBusSends = 0x1fc; // char : 1
		constexpr auto bEnableBaseSubmix = 0x1fc; // char : 1
		constexpr auto bEnableSubmixSends = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_UCableComponent { // : UMeshComponent
		constexpr auto bAttachStart = 0x478; // bool
		constexpr auto bAttachEnd = 0x479; // bool
		constexpr auto AttachEndTo = 0x480; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x4a8; // FName
		constexpr auto EndLocation = 0x4b0; // FVector
		constexpr auto CableLength = 0x4bc; // float
		constexpr auto NumSegments = 0x4c0; // int32_t
		constexpr auto SubstepTime = 0x4c4; // float
		constexpr auto SolverIterations = 0x4c8; // int32_t
		constexpr auto bEnableStiffness = 0x4cc; // bool
		constexpr auto bUseSubstepping = 0x4cd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4ce; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4cf; // bool
		constexpr auto bEnableCollision = 0x4d0; // bool
		constexpr auto CollisionFriction = 0x4d4; // float
		constexpr auto CableForce = 0x4d8; // FVector
		constexpr auto CableGravityScale = 0x4e4; // float
		constexpr auto CableWidth = 0x4e8; // float
		constexpr auto NumSides = 0x4ec; // int32_t
		constexpr auto TileMaterial = 0x4f0; // float
	}

	namespace n_ARandomizedShippingContainerActor { // : AActor
		constexpr auto ContainerMeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto ContainerDecalsComp = 0x228; // UStaticMeshComponent*
		constexpr auto LeftDoorDecalsComp = 0x230; // UStaticMeshComponent*
		constexpr auto RightDoorDecalsComp = 0x238; // UStaticMeshComponent*
		constexpr auto ContainerMaterials = 0x240; // TArray<UMaterialInterface*>
		constexpr auto ContainerDecals = 0x250; // TArray<UStaticMesh*>
		constexpr auto LeftDoorDecals = 0x260; // TArray<UStaticMesh*>
		constexpr auto RightDoorDecals = 0x270; // TArray<UStaticMesh*>
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UTrapSpawnComponent { // : UActorComponent
		constexpr auto TrapRoster = 0xb0; // FName
		constexpr auto AttachToComponent = 0xb8; // FName
		constexpr auto ComponentSocket = 0xc0; // FName
		constexpr auto TrapTransform = 0xd0; // FTransform
		constexpr auto TrapSpawnClasses = 0x100; // TArray<FTrapSpawnType>
		constexpr auto bSpawnSelected = 0x110; // bool
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UARQRCodeComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_AHelmet_NVG_V2_C { // : ANightvisionGoggles
		constexpr auto UberGraphFrame = 0x1b80; // FPointerToUberGraphFrame
		constexpr auto SpotLight = 0x1b88; // USpotLightComponent*
		constexpr auto Arrow = 0x1b90; // UArrowComponent*
		constexpr auto PlayerState = 0x1b98; // APlayerState*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_UAudioBus { // : UObject
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_URuntimeVirtualTextureComponent { // : USceneComponent
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto bSupportSampledLighting = 0x215; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x218; // float
		constexpr auto IndirectLightingIntensity = 0x21c; // float
		constexpr auto VolumetricScatteringIntensity = 0x220; // float
		constexpr auto SamplesPerPixel = 0x224; // int32_t
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto Blocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0x180; // EPixelFormat
	}

	namespace n_UDataAsset { // : UObject
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x228; // UDrawSphereComponent*
	}

	namespace n_UReadyOrNotProfile { // : USaveGame
		constexpr auto SaveSlotName = 0x28; // FString
		constexpr auto UserIndex = 0x38; // uint32_t
		constexpr auto LevelStats = 0x40; // TMap<FString, FBasicLevelStats>
		constexpr auto ChallengeProgress = 0x90; // TMap<FName, int32_t>
		constexpr auto CourseTimes = 0xe0; // TMap<FString, float>
		constexpr auto Cash = 0x130; // float
	}

	namespace n_UANIMBP_M4A1_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x358; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x3f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x478; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root = 0x4e0; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose = 0x510; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x668; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x728; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x770; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x798; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x7c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x8c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x8e8; // FAnimNode_ModifyBone
		constexpr auto Mag01Alpha = 0x9f0; // float
		constexpr auto bIsSemi = 0x9f4; // bool
		constexpr auto bBoltCatchOut = 0x9f5; // bool
		constexpr auto CarrierHandleAlpha = 0x9f8; // float
		constexpr auto Mag02Alpha = 0x9fc; // float
	}

	namespace n_UProgressionData { // : UDataAsset
		constexpr auto LevelUpData = 0x30; // FLevelUpData
	}

	namespace n_UBaseActivity { // : UObject
		constexpr auto OnStartActivity = 0x28; // FMulticastInlineDelegate
		constexpr auto OnPerformActivity = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFinishActivity = 0x48; // FMulticastInlineDelegate
		constexpr auto OnSoftFinishActivity = 0x58; // FMulticastInlineDelegate
		constexpr auto ActivityName = 0x80; // FString
		constexpr auto Priority = 0x90; // int32_t
		constexpr auto TickInterval = 0x98; // float
		constexpr auto MaxActivityTime = 0x9c; // float
		constexpr auto ActivityCooldown = 0xa0; // float
		constexpr auto ActivityStartDelay = 0xa4; // float
		constexpr auto MaxRandomStartDelay = 0xa8; // float
		constexpr auto bIsProgressActivity = 0xac; // char : 1
		constexpr auto bFinishActivityWhenOverriden = 0xac; // char : 1
		constexpr auto bAbortMoveWhenActivityFinished = 0xac; // char : 1
		constexpr auto bAbortMoveWhenActivityOverriden = 0xac; // char : 1
		constexpr auto bAbortActivityIfCannotReachLocation = 0xac; // char : 1
		constexpr auto bAbortIfTrackingEnemy = 0xac; // char : 1
		constexpr auto bNoMoveActivity = 0xac; // char : 1
		constexpr auto bResetStateMachineWhenActivityResumed = 0xac; // char : 1
		constexpr auto bOverrideCommandMarkerActivationSetup = 0xad; // char : 1
		constexpr auto bDisplayCommandMarkers = 0xad; // char : 1
		constexpr auto ElapsedActivityTime = 0xb0; // float
		constexpr auto Location = 0xb8; // FVector
		constexpr auto ActivityName_Original = 0xc8; // FString
		constexpr auto ProgressState = 0xd8; // FString
		constexpr auto OwningController = 0x190; // ACyberneticController*
		constexpr auto CachedCommandDecal = 0x198; // ACommandDecal*
		constexpr auto NonCachedCommandDecal = 0x1a0; // ACommandDecal*
		constexpr auto ActivityStateMachine = 0x1a8; // UActivityFiniteStateMachine*
	}

	namespace n_UNiagaraDataInterfaceCurveBase { // : UNiagaraDataInterface
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UFMODAudioComponent { // : USceneComponent
		constexpr auto Event = 0x1f8; // UFMODEvent*
		constexpr auto ParameterCache = 0x200; // TMap<FName, float>
		constexpr auto ProgrammerSoundName = 0x258; // FString
		constexpr auto bEnableTimelineCallbacks = 0x268; // char : 1
		constexpr auto bAutoDestroy = 0x280; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x280; // char : 1
		constexpr auto OnEventStopped = 0x288; // FMulticastInlineDelegate
		constexpr auto OnTimelineMarker = 0x298; // FMulticastInlineDelegate
		constexpr auto OnTimelineBeat = 0x2a8; // FMulticastInlineDelegate
		constexpr auto AttenuationDetails = 0x2b8; // FFMODAttenuationDetails
		constexpr auto OcclusionDetails = 0x2c4; // FFMODOcclusionDetails
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_AGunGameGM { // : AReadyOrNotGameMode_PVP
		constexpr auto RespawnTime = 0x718; // float
		constexpr auto bSuddenDeath = 0x71c; // bool
		constexpr auto Itemlist = 0x720; // TArray<TSoftClassPtr<UObject>>
		constexpr auto DefaultItems = 0x730; // FSavedLoadout
		constexpr auto KillsToProgress = 0x858; // int32_t
	}

	namespace n_AMusicManager { // : AInfo
		constexpr auto MusicEvent = 0x220; // UFMODEvent*
		constexpr auto MusicEventInst = 0x228; // FFMODEventInstance
		constexpr auto TH_UpdateMusicParameters = 0x230; // FTimerHandle
	}

	namespace n_UPaperTileMap { // : UObject
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UNiagaraBakerSettings { // : UObject
		constexpr auto StartSeconds = 0x28; // float
		constexpr auto DurationSeconds = 0x2c; // float
		constexpr auto FramesPerSecond = 0x30; // int32_t
		constexpr auto bPreviewLooping = 0x34; // char : 1
		constexpr auto FramesPerDimension = 0x38; // FIntPoint
		constexpr auto OutputTextures = 0x40; // TArray<FNiagaraBakerTextureSettings>
		constexpr auto CameraViewportMode = 0x50; // ENiagaraBakerViewMode
		constexpr auto CameraViewportLocation = 0x54; // FVector [0x7]
		constexpr auto CameraViewportRotation = 0xa8; // FRotator [0x7]
		constexpr auto CameraOrbitDistance = 0xfc; // float
		constexpr auto CameraFOV = 0x100; // float
		constexpr auto CameraOrthoWidth = 0x104; // float
		constexpr auto bUseCameraAspectRatio = 0x108; // char : 1
		constexpr auto CameraAspectRatio = 0x10c; // float
		constexpr auto bRenderComponentOnly = 0x110; // char : 1
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UW_StandardButton_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Disabled_Normal = 0x268; // UImage*
		constexpr auto Disabled_PremissionPlanning_LoadoutCategory = 0x270; // UImage*
		constexpr auto Disabled_PremissionPlanning_LoadoutClass = 0x278; // UImage*
		constexpr auto Disabled_PremissionPlanning_LoadoutItem = 0x280; // UImage*
		constexpr auto Disabled_PremissionPlanning_LoadoutItemPreset = 0x288; // UImage*
		constexpr auto Disabled_Quartermaster = 0x290; // UImage*
		constexpr auto Disabled_ReadyUp = 0x298; // UImage*
		constexpr auto Disabled_Red = 0x2a0; // UImage*
		constexpr auto Disabled_Subcategory = 0x2a8; // UImage*
		constexpr auto Disabled_TabletTabButton = 0x2b0; // UImage*
		constexpr auto Down_Normal = 0x2b8; // UImage*
		constexpr auto Down_PremisisonPlanning_LoadoutCategory = 0x2c0; // UImage*
		constexpr auto Down_PremisisonPlanning_LoadoutClass = 0x2c8; // UImage*
		constexpr auto Down_PremisisonPlanning_LoadoutItem = 0x2d0; // UImage*
		constexpr auto Down_PremisisonPlanning_LoadoutItemPreset = 0x2d8; // UImage*
		constexpr auto Down_Quartermaster = 0x2e0; // UImage*
		constexpr auto Down_ReadyUp = 0x2e8; // UImage*
		constexpr auto Down_Red = 0x2f0; // UImage*
		constexpr auto Down_Subcategory = 0x2f8; // UImage*
		constexpr auto Down_TabletTabButton = 0x300; // UImage*
		constexpr auto Highlight_Normal = 0x308; // UImage*
		constexpr auto Highlight_PremissionPlanning_LoadoutCategory = 0x310; // UImage*
		constexpr auto Highlight_PremissionPlanning_LoadoutClass = 0x318; // UImage*
		constexpr auto Highlight_PremissionPlanning_LoadoutItem = 0x320; // UImage*
		constexpr auto Highlight_PremissionPlanning_LoadoutItemPreset = 0x328; // UImage*
		constexpr auto Highlight_Quartermaster = 0x330; // UImage*
		constexpr auto Highlight_ReadyUp = 0x338; // UImage*
		constexpr auto Highlight_Red = 0x340; // UImage*
		constexpr auto Highlight_Subcategory = 0x348; // UImage*
		constexpr auto Highlight_TabletTabButton = 0x350; // UImage*
		constexpr auto NormalStyle = 0x358; // UOverlay*
		constexpr auto PreMissionPlanningStyle_LoadoutCategory = 0x360; // UOverlay*
		constexpr auto PreMissionPlanningStyle_LoadoutClass = 0x368; // UOverlay*
		constexpr auto PreMissionPlanningStyle_LoadoutItem = 0x370; // UOverlay*
		constexpr auto PreMissionPlanningStyle_LoadoutItemPreset = 0x378; // UOverlay*
		constexpr auto QuartermasterStyle = 0x380; // UOverlay*
		constexpr auto ReadyUpStyle = 0x388; // UOverlay*
		constexpr auto RedStyle = 0x390; // UOverlay*
		constexpr auto Selected_Normal = 0x398; // UImage*
		constexpr auto Selected_PremissionPlanning_LoadoutCategory = 0x3a0; // UImage*
		constexpr auto Selected_PremissionPlanning_LoadoutClass = 0x3a8; // UImage*
		constexpr auto Selected_PremissionPlanning_LoadoutItem = 0x3b0; // UImage*
		constexpr auto Selected_PremissionPlanning_LoadoutItemPreset = 0x3b8; // UImage*
		constexpr auto Selected_Quartermaster = 0x3c0; // UImage*
		constexpr auto Selected_ReadyUp = 0x3c8; // UImage*
		constexpr auto Selected_Red = 0x3d0; // UImage*
		constexpr auto Selected_Subcategory = 0x3d8; // UImage*
		constexpr auto Selected_TabletTabButton = 0x3e0; // UImage*
		constexpr auto StandardColor_Normal = 0x3e8; // UImage*
		constexpr auto StandardColor_PremissionPlanning_LoadoutCategory = 0x3f0; // UImage*
		constexpr auto StandardColor_PremissionPlanning_LoadoutClass = 0x3f8; // UImage*
		constexpr auto StandardColor_PremissionPlanning_LoadoutItem = 0x400; // UImage*
		constexpr auto StandardColor_PremissionPlanning_LoadoutItemPreset = 0x408; // UImage*
		constexpr auto StandardColor_Quartermaster = 0x410; // UImage*
		constexpr auto StandardColor_ReadyUp = 0x418; // UImage*
		constexpr auto StandardColor_Red = 0x420; // UImage*
		constexpr auto StandardColor_Subcategory = 0x428; // UImage*
		constexpr auto StandardColor_TabletTabButton = 0x430; // UImage*
		constexpr auto StyleSwitcher = 0x438; // UWidgetSwitcher*
		constexpr auto SubcategoryStyle = 0x440; // UVerticalBox*
		constexpr auto TabletTabButtonStyle = 0x448; // UOverlay*
		constexpr auto Text = 0x450; // UTextBlock*
		constexpr auto TextBoxContainer = 0x458; // UScaleBox*
		constexpr auto TheButton = 0x460; // UButton*
		constexpr auto ThinRedLine = 0x468; // UImage*
		constexpr auto ButtonText = 0x470; // FText
		constexpr auto TextJustification = 0x488; // ETextJustify
		constexpr auto TextSize = 0x48c; // int32_t
		constexpr auto DescriptionWidget = 0x490; // UTextBlock*
		constexpr auto DescriptionText = 0x498; // FText
		constexpr auto Font = 0x4b0; // UFont*
		constexpr auto TextPadding = 0x4b8; // FMargin
		constexpr auto OnClicked = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x4e8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x508; // FMulticastInlineDelegate
		constexpr auto Typeface = 0x518; // FName
		constexpr auto bSelected = 0x520; // bool
		constexpr auto ButtonStyleOption = 0x524; // int32_t
		constexpr auto DisplayStyle = 0x528; // StandardButtonStyles
		constexpr auto ForceUppercaseButtonText = 0x529; // bool
		constexpr auto ForceUppercaseDescription = 0x52a; // bool
		constexpr auto TextColor = 0x530; // FSlateColor
		constexpr auto HoveredSound = 0x558; // UFMODEvent*
		constexpr auto ClickedSound = 0x560; // UFMODEvent*
		constexpr auto ExtraInt = 0x568; // int32_t
	}

	namespace n_UW_Scoreboard_V2_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BG_Footer_Image = 0x268; // UImage*
		constexpr auto BlueTeam_Box = 0x270; // UVerticalBox*
		constexpr auto BlueTeam_Entries = 0x278; // UVerticalBox*
		constexpr auto BlueTeamPlayerCount_Text = 0x280; // UTextBlock*
		constexpr auto BlueTeamText = 0x288; // UTextBlock*
		constexpr auto CurrentRound_Text = 0x290; // UTextBlock*
		constexpr auto MLO_Score_Text = 0x298; // UTextBlock*
		constexpr auto RedTeam_Box = 0x2a0; // UVerticalBox*
		constexpr auto RedTeam_Entries = 0x2a8; // UVerticalBox*
		constexpr auto RedTeamPlayerCount_Text = 0x2b0; // UTextBlock*
		constexpr auto RedTeamText = 0x2b8; // UTextBlock*
		constexpr auto SWAT_Score_Text = 0x2c0; // UTextBlock*
		constexpr auto TimeRemaining_Text = 0x2c8; // UTextBlock*
		constexpr auto W_ScoreboardEntry_2 = 0x2d0; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_3 = 0x2d8; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_4 = 0x2e0; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_5 = 0x2e8; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_6 = 0x2f0; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_7 = 0x2f8; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_8 = 0x300; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_9 = 0x308; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_10 = 0x310; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_11 = 0x318; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_12 = 0x320; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_13 = 0x328; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_14 = 0x330; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_15 = 0x338; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_16 = 0x340; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_17 = 0x348; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_18 = 0x350; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_19 = 0x358; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_20 = 0x360; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardEntry_130 = 0x368; // UW_ScoreboardEntry_C*
		constexpr auto W_ScoreboardHeader = 0x370; // UW_ScoreboardHeader_C*
		constexpr auto W_TeamStatus = 0x378; // UW_TeamStatus_C*
		constexpr auto W_TeamStatus_2 = 0x380; // UW_TeamStatus_C*
		constexpr auto BlueTeamEntryWidgets = 0x388; // TArray<UW_ScoreboardEntry_C*>
		constexpr auto RedTeamEntryWidgets = 0x398; // TArray<UW_ScoreboardEntry_C*>
		constexpr auto bPreviewMode = 0x3a8; // bool
	}

	namespace n_ASecondary_Tec9_C { // : ABaseMagazineWeapon
		constexpr auto UberGraphFrame = 0x1260; // FPointerToUberGraphFrame
		constexpr auto PointLight = 0x1268; // UPointLightComponent*
		constexpr auto SpotLight = 0x1270; // USpotLightComponent*
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UMagMaskingAnimNotify { // : UAnimNotify
		constexpr auto bIsFirstPerson = 0x38; // bool
		constexpr auto MaskMag = 0x39; // EMaskMag
		constexpr auto MagState = 0x3a; // EMaskMagState
		constexpr auto bDummyCopyMag02 = 0x3b; // bool
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UMedicalHealWidget { // : UBaseWidget
		constexpr auto CurrentHealth = 0x278; // float
		constexpr auto PrefixHealerString = 0x280; // FString
		constexpr auto PostfixHealeeString = 0x290; // FString
		constexpr auto PostfixHealeeMortallyWoundedString = 0x2a0; // FString
		constexpr auto PostfixNoBrokenLimbsString = 0x2b0; // FString
		constexpr auto HealerName = 0x2c0; // FName
		constexpr auto HealeeName = 0x2c8; // FName
		constexpr auto MinHealth = 0x2d0; // float
		constexpr auto MaxHealth = 0x2d4; // float
		constexpr auto HealingWidgetSwitcher = 0x2d8; // UWidgetSwitcher*
		constexpr auto HealingProgressBar_Healer = 0x2e0; // UProgressBar*
		constexpr auto HealingProgressBar_Healee = 0x2e8; // UProgressBar*
		constexpr auto HealerText = 0x2f0; // UTextBlock*
		constexpr auto HealeeText = 0x2f8; // UTextBlock*
		constexpr auto HealeeMortallyWoundedText = 0x300; // UTextBlock*
		constexpr auto HealeeNoBrokenLimbsText = 0x308; // UTextBlock*
		constexpr auto HealerHealthValueText = 0x310; // UTextBlock*
		constexpr auto HealeeHealthValueText = 0x318; // UTextBlock*
		constexpr auto HealeeMortallyWoundedHealthValueText = 0x320; // UTextBlock*
		constexpr auto FadeIn = 0x328; // UWidgetAnimation*
		constexpr auto FadeOut = 0x330; // UWidgetAnimation*
		constexpr auto HealComplete = 0x338; // UWidgetAnimation*
	}

	namespace n_ULODSyncComponent { // : UActorComponent
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_UPostProcessRequirement { // : UObject
		constexpr auto PlayerCharacter = 0x28; // APlayerCharacter*
		constexpr auto DamageCauser = 0x30; // AActor*
	}

	namespace n_UDynamicEntryBoxBase { // : UWidget
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UMRMeshComponent { // : UPrimitiveComponent
		constexpr auto Material = 0x460; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x468; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x470; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x471; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x472; // bool
		constexpr auto CachedBodySetup = 0x478; // UBodySetup*
		constexpr auto BodySetups = 0x480; // TArray<UBodySetup*>
	}

	namespace n_UARFaceComponent { // : UARComponent
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x220; // ULightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UANIMBP_AI_TempTest_C { // : URoNAnimInstance_PlayerTP
		constexpr auto UberGraphFrame = 0xe20; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0xe28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LegIK = 0xf80; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_Slot_7 = 0x1078; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x10c0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x1180; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x1360; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_PoseDriver_6 = 0x1540; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x16a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_24 = 0x1728; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RandomPlayer_8 = 0x17f0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_23 = 0x1868; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x1930; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x19b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x1a60; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x1bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x1c38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x1ce8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x1e40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x1ec0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x1fc8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x2120; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x2278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x22a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x22c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x22f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x2318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x23b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x23e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x2460; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x2490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x2510; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x2540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x25c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x25f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_22 = 0x2670; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2738; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x2760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x2788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x27b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_RandomPlayer_7 = 0x27d8; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_21 = 0x2850; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_18 = 0x2918; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_17 = 0x2968; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_16 = 0x29b8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x2a08; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_18 = 0x2ab8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_RandomPlayer_6 = 0x2ae8; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_20 = 0x2b60; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_15 = 0x2c28; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_14 = 0x2c78; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_13 = 0x2cc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x2d18; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_17 = 0x2dc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x2df8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x2e20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x2e48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x2ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x2f10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x2f38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x2f60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x2f88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x3008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_12 = 0x3038; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_15 = 0x3088; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x30b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_14 = 0x30e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x3110; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x31c0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_13 = 0x3288; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x32b8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_12 = 0x3368; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x3398; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x3418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x3448; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_19 = 0x34c8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x3590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x35b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x35e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x3608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_RandomPlayer_5 = 0x3630; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_18 = 0x36a8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_11 = 0x3770; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_10 = 0x37c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x3810; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x3860; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_10 = 0x3910; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x3940; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x3990; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x39e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x3a30; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x3af8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RandomPlayer_4 = 0x3ba8; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x3c20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x3c50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x3cf0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x3d18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x3d40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x3d68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x3d90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x3db8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x3de0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x3e08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_8 = 0x3e58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x3e88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_7 = 0x3ed8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x3f08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_6 = 0x3f30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x3f60; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x4010; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_5 = 0x40d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x4108; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_4 = 0x41b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x41e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x4298; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x43a0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x4468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x44e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x4568; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x4630; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x46d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x4770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x47f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0x4870; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x49c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x4ad0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x4bd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0x4ce0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x4e38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x4ee8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x4ff0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_9 = 0x5018; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x51a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x5300; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x53a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x53c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x5468; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x5490; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x55e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_8 = 0x5610; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x57a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x5840; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x5868; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_7 = 0x59c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x5b50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x5b78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x5ba0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x5bc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x5c68; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x5d28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x5d50; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x5e18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x5e40; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x5f98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x6038; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x6060; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseDriver_5 = 0x6088; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x61f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x62b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x62d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x63a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x64f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x6578; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x6618; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x6640; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x6748; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x6770; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x68c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x6968; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseDriver_4 = 0x6990; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_3 = 0x6af8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x6c60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x6c88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x6cb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x6d50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x6dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0x6e50; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RandomPlayer_3 = 0x6f18; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_RandomPlayer_2 = 0x6f90; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0x7008; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x70d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x7150; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x71c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_6 = 0x71f0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x7380; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x73a8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x7538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x7560; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x76f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x7848; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x79a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x7a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x7aa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x7b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x7ba0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x7cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x7d78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x7df8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x7e78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x7ef8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x8050; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x80d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x8150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x81d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x8250; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x83a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x8428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x84a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x8528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x85a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x8700; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x8890; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x8910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x8990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x8a10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x8a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x8be8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x8cb0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x8d00; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x8db0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x8e60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x8ee0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x8f60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x8fe0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x9060; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x9110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x9190; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x9210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x9290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x9310; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x93c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x9440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x94c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x9540; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x95c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x9670; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x9720; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x97a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x9820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x98a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x9920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x99a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x9a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x9aa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseDriver_2 = 0x9b20; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver = 0x9c88; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x9df0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x9e18; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x9ed8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0xa068; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0xa0e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0xa168; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0xa1e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0xa268; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0xa2e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0xa368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0xa3e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0xa468; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0xa508; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0xa5b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0xa638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0xa6b8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0xa780; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0xa7a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0xa848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0xa8c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_5 = 0xa948; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0xaa50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xab58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xac60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xad68; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0xae70; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0xaf38; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0xb000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0xb080; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0xb0a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0xb148; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0xb1c8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0xb290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0xb310; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0xb3b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0xb430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0xb4b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0xb550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_6 = 0xb5d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0xb618; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xb6b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0xb810; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0xb8c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0xb940; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0xb9c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0xba40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0xbac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0xbb40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0xbbc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0xbc40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0xbcc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0xbd88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xbdb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xbdd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0xbe00; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xbe28; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xbe50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0xbed0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0xbf00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_2 = 0xbf50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xbf80; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0xc000; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0xc030; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0xc0e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_5 = 0xc108; // FAnimNode_Slot
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0xc150; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xc2e0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0xc300; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0xc3b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0xc470; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xc510; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0xc590; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0xc610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0xc638; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xc660; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0xc7b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0xc7e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0xc808; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0xc8a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0xc968; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0xc990; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xca10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0xca90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_4 = 0xcb30; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0xcb78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xcc18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xcc98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xcd18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0xcd98; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0xce48; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0xcfa0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0xcfc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xd088; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator = 0xd0b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0xd100; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0xd1c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0xd260; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0xd2e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0xd3a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0xd3c8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xd490; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xd4b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SlopeWarping = 0xd4e0; // FAnimNode_SlopeWarping
		constexpr auto AnimGraphNode_Root = 0xd708; // FAnimNode_Root
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0xd738; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xd800; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xd8c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0xd8e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xd9b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0xd9d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0xda00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xdaa0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xdbf8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0xdc20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xdc48; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0xdc68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0xdd08; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xddb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0xde38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xdeb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xdf38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0xdfb8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0xe080; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0xe120; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0xe148; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0xe210; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0xe238; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0xe260; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0xe320; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseSnapshot = 0xe3c0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xe450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0xe4d0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xe580; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xe600; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0xe680; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend = 0xe720; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0xe7e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0xe8b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xe8d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0xe900; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xe9c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive = 0xe9e8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xeab0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xead8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0xeb00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xeba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_3 = 0xec20; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0xec68; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0xecb0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xecf8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose = 0xedb8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xef10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xef38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xef60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0xf000; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xf080; // FAnimNode_BlendListByBool
		constexpr auto AimDeltaRot = 0xf120; // FRotator
		constexpr auto LeanTransitionSpeeds = 0xf12c; // float
		constexpr auto DirectionBlendTime = 0xf130; // float
		constexpr auto WeaponUpBlendTime = 0xf134; // float
		constexpr auto AnimSpeedForward = 0xf138; // float
		constexpr auto AnimSpeedRight = 0xf13c; // float
		constexpr auto AnimWarpPlayrateThreshold = 0xf140; // float
		constexpr auto LeftJointLoc = 0xf144; // FVector
		constexpr auto RightJoinLoc = 0xf150; // FVector
		constexpr auto CharSpeed = 0xf15c; // float
		constexpr auto InputUpDown = 0xf160; // float
		constexpr auto DeathPose = 0xf168; // FPoseSnapshot
		constexpr auto TurnRemainingStartTime = 0xf1a0; // float
		constexpr auto SlopeWarpingAlpha = 0xf1a4; // float
		constexpr auto bIsVIP1911 = 0xf1a8; // bool
		constexpr auto bIsCustomizing = 0xf1a9; // bool
		constexpr auto bHoldingVIPWeapon = 0xf1aa; // bool
		constexpr auto bHoldingWeaponAsMLO = 0xf1ab; // bool
		constexpr auto bCanTurnInPlace = 0xf1ac; // bool
		constexpr auto IsItemOrPistolMotionBlock = 0xf1ad; // bool
		constexpr auto IsRifleMotionBlock = 0xf1ae; // bool
		constexpr auto bIsCrouchingWithShield = 0xf1af; // bool
		constexpr auto IsNotCustomizing_AsFloat = 0xf1b0; // float
		constexpr auto CrouchHighPoseAdditiveAlpha = 0xf1b4; // float
		constexpr auto StandHighPoseAdditiveAlpha = 0xf1b8; // float
		constexpr auto LeftHandIKAlpha_ItemBased = 0xf1bc; // float
		constexpr auto ZHeightLeanAdjustment = 0xf1c0; // FVector
		constexpr auto IsCrouchingWithShield_AsFloat = 0xf1cc; // float
		constexpr auto HandAdditiveLockOverride = 0xf1d0; // float
		constexpr auto LeftHandAdditiveOvrBlend = 0xf1d4; // float
	}

	namespace n_UFMODSnapshotReverb { // : UReverbEffect
		constexpr auto AssetGuid = 0x60; // FGuid
	}

	namespace n_UPlaneFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x220; // UGeometryCacheComponent*
	}

	namespace n_UConstantCameraShakePattern { // : USimpleCameraShakePattern
		constexpr auto LocationOffset = 0x38; // FVector
		constexpr auto RotationOffset = 0x44; // FRotator
	}

	namespace n_UMotivityTagAnimNotifyState { // : UAnimNotifyState
		constexpr auto TagName = 0x30; // FName
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_ULuminARCandidateImage { // : UARCandidateImage
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_ANiagaraPerfBaselineActor { // : AActor
		constexpr auto Controller = 0x220; // UNiagaraBaselineController*
		constexpr auto Label = 0x228; // UTextRenderComponent*
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UARLifeCycleComponent { // : USceneComponent
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UW_PlayerSpeedIndicator_V2_C { // : UPlayerSpeedIndicator_V2
		constexpr auto Image = 0x2f0; // UImage*
		constexpr auto Image_2 = 0x2f8; // UImage*
		constexpr auto Image_3 = 0x300; // UImage*
		constexpr auto Image_4 = 0x308; // UImage*
		constexpr auto Image_321 = 0x310; // UImage*
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x250; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x258; // UNetConnection*
		constexpr auto ConnectionState = 0x260; // EBeaconConnectionState
	}

	namespace n_UStreamableRenderAsset { // : UObject
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x90; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0xa0; // FGuid
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_ACoverGenerator { // : AActor
		constexpr auto ForceRefresh = 0x220; // bool
		constexpr auto bRegenerateAtBeginPlay = 0x221; // bool
		constexpr auto bRegenerateAtNavigationRebuilt = 0x222; // bool
		constexpr auto SegmentLength = 0x224; // float
		constexpr auto MaxSegDist = 0x228; // float
		constexpr auto CharHeight = 0x22c; // float
		constexpr auto StepDistTrace = 0x230; // float
		constexpr auto TraceLength = 0x234; // float
		constexpr auto MinSpaceBetweenValidPoints = 0x238; // float
		constexpr auto SphereSize = 0x23c; // float
		constexpr auto WidthMaxAgent = 0x240; // float
		constexpr auto HeightMaxCrouching = 0x244; // float
		constexpr auto HeightMaxStanding = 0x248; // float
		constexpr auto OffsetWhenLeaningSides = 0x24c; // float
		constexpr auto OffsetFrontAim = 0x250; // float
		constexpr auto bDraw1AllSegmentPointsTested = 0x254; // bool
		constexpr auto bDraw2SegmentPointsWithinBounds = 0x255; // bool
		constexpr auto bDraw3SimpleCoverGeometryTest = 0x256; // bool
		constexpr auto bDraw4SecondPassTracesSides = 0x257; // bool
		constexpr auto bDraw4SecondPassTracesSidesFrontAndBottom = 0x258; // bool
		constexpr auto bDraw5SecondPassArrows = 0x259; // bool
		constexpr auto DebugDrawAllPoints = 0x25a; // bool
		constexpr auto DebugDrawAllBusyPoints = 0x25b; // bool
		constexpr auto DebugDisplayLog = 0x25c; // bool
		constexpr auto DebugDistance = 0x260; // float
		constexpr auto bDrawOctreeBounds = 0x264; // bool
		constexpr auto AllCoverPoints = 0x270; // TArray<UCoverPoint*>
		constexpr auto CoverPointsCurrentlyUsed = 0x280; // TArray<UCoverPoint*>
	}

	namespace n_UNiagaraDataInterfaceIntRenderTarget2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto RenderTargetUserParameter = 0xe0; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x100; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch { // : UMaterialExpression
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_UEnvelopeFollowerListener { // : UActorComponent
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UMagicLeapPlanesComponent { // : USceneComponent
		constexpr auto QueryFlags = 0x1f8; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x208; // UBoxComponent*
		constexpr auto MaxResults = 0x210; // int32_t
		constexpr auto MinHolePerimeter = 0x214; // float
		constexpr auto MinPlaneArea = 0x218; // float
		constexpr auto QueryType = 0x21c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x220; // float
		constexpr auto OnPlanesQueryResult = 0x228; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x238; // FMulticastInlineDelegate
	}

	namespace n_AMusicSequencerBase { // : AActor
		constexpr auto Scene = 0x220; // USceneComponent*
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UAnimNotify_PlayMontage { // : UAnimNotify
		constexpr auto Montage = 0x38; // UAnimMontage*
	}

	namespace n_UPickupItemActivity { // : UBaseActivity
		constexpr auto SearchRadius = 0x1b0; // float
		constexpr auto bDebug = 0x1b4; // char : 1
		constexpr auto WeaponCacheActor = 0x1c0; // AWeaponCacheActor*
		constexpr auto PickupItem = 0x1d0; // ABaseItem*
	}

	namespace n_UMasterAudioSubmixCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UFootstepComponent { // : UActorComponent
		constexpr auto FootNames = 0xb0; // TArray<FName>
		constexpr auto bDebugFootstepTrace = 0xc0; // bool
		constexpr auto VelocityToMinVolume = 0xc4; // float
		constexpr auto VelocityMaxVolume = 0xc8; // float
		constexpr auto bShouldRattle = 0xcc; // bool
		constexpr auto FootstepVolumeMultiplier = 0xd0; // float
		constexpr auto DefaultFootstepSound = 0xd8; // USoundCue*
		constexpr auto FootstepAttenuation = 0xe0; // USoundAttenuation*
		constexpr auto FootstepConcurency = 0xe8; // USoundConcurrency*
		constexpr auto bAutoFootRotation = 0xf0; // bool
		constexpr auto bUseFootstepParticles = 0xf1; // bool
		constexpr auto bUseFootstepSounds = 0xf2; // bool
		constexpr auto FootstepTraceLength = 0xf4; // float
		constexpr auto FootstepThresholdTraceLength = 0xf8; // float
		constexpr auto bFootTraceComplex = 0xfc; // bool
		constexpr auto FootstepMinCycleInterval = 0x100; // float
		constexpr auto FootstepTraceLengthThreshold = 0x104; // float
		constexpr auto FootstepParticleScale = 0x108; // float
		constexpr auto FootstepSoundComponent = 0x128; // UAudioComponent*
	}

	namespace n_UAnimCompress { // : UAnimBoneCompressionCodec
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UPhononSourceComponent { // : USceneComponent
		constexpr auto BakingRadius = 0x1f8; // float
		constexpr auto UniqueIdentifier = 0x1fc; // FName
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UMoraleComponent { // : UActorComponent
		constexpr auto OwnerChar = 0xb8; // AReadyOrNotCharacter*
	}

	namespace n_UDatasmithCommonTessellationOptions { // : UDatasmithOptionsBase
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_ULiveLinkSubjectSettings { // : UObject
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection { // : UNiagaraDataInterfaceGrid3D
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x128; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x129; // char : 1
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UReadyOrNotGameInstance { // : UAdvancedFriendsGameInstance
		constexpr auto ReadyOrNotBackend = 0x238; // UReadyOrNotBackend*
		constexpr auto WeaponFOVMaterialCollection = 0x240; // UMaterialParameterCollection*
		constexpr auto SessionType = 0x249; // ESessionType
		constexpr auto LazyLoadedClasses = 0x250; // TArray<TSoftClassPtr<UObject>>
		constexpr auto LazyLoadedObjects = 0x260; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto SpawnWidgetOnLevelLoad = 0x278; // UUserWidget*
		constexpr auto OwnedDLCMap = 0x288; // TMap<int32_t, bool>
		constexpr auto OnConnectSteamServerByIP = 0x668; // FMulticastInlineDelegate
		constexpr auto bHostedGame = 0x6c8; // bool
		constexpr auto Saved_RoundTimerGameStart = 0x6cc; // float
		constexpr auto Saved_RoundTimerBetweenMaps = 0x6d0; // float
		constexpr auto Saved_ReinforcementTimer = 0x6d4; // float
		constexpr auto Saved_Timelimit = 0x6d8; // float
		constexpr auto Saved_RoundsPerMap = 0x6dc; // int32_t
		constexpr auto Saved_Scorelimit = 0x6e0; // int32_t
		constexpr auto Saved_AiEnabled = 0x6e4; // bool
		constexpr auto bIsSinglePlayerMode = 0x6e5; // bool
		constexpr auto ActivePauseConditions = 0x6e8; // TArray<FString>
		constexpr auto HostMigrationManager = 0x6f8; // UHostMigrationManager*
		constexpr auto NextLevel = 0x700; // FString
		constexpr auto MainMenuDisplayMessage = 0x710; // FString
		constexpr auto BuiltMapList = 0x728; // TArray<FString>
		constexpr auto bShowingFPS = 0x738; // bool
		constexpr auto ReplayNames = 0x740; // TArray<FString>
		constexpr auto OnFindReplaysComplete = 0x7a0; // FMulticastInlineDelegate
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x2c8; // UCameraAnim*
	}

	namespace n_APaperTerrainActor { // : AActor
		constexpr auto DummyRoot = 0x220; // USceneComponent*
		constexpr auto SplineComponent = 0x228; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x230; // UPaperTerrainComponent*
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x260; // FPostProcessSettings
		constexpr auto Priority = 0x7c0; // float
		constexpr auto BlendRadius = 0x7c4; // float
		constexpr auto BlendWeight = 0x7c8; // float
		constexpr auto bEnabled = 0x7cc; // char : 1
		constexpr auto bUnbound = 0x7cc; // char : 1
	}

	namespace n_UReadyOrNotSaveGame { // : USaveGame
		constexpr auto SaveSlotName = 0x28; // FString
		constexpr auto UserIndex = 0x38; // uint32_t
		constexpr auto Loadouts = 0x40; // TArray<FSavedLoadout>
		constexpr auto PlayerDetails = 0x50; // FPlayerDetails
		constexpr auto AttachmentSaveMap = 0x60; // TMap<ABaseItem*, FSavedWeaponAttachmentData>
		constexpr auto SkinSaveMap = 0xb0; // TMap<ETeamType, USkinComponent*>
		constexpr auto SavedWeaponClassOfTypeMap = 0x100; // TMap<EItemType, ABaseItem*>
		constexpr auto WeaponClassToDefaultFireModeMap = 0x150; // TMap<ABaseWeapon*, EFireMode>
		constexpr auto WeaponToWeaponPresetsMap = 0x1a0; // TMap<ABaseItem*, FSavedWeaponPreset>
		constexpr auto PCDO = 0x1f0; // int64_t
	}

	namespace n_APickupMagazineActor { // : APickupActor
		constexpr auto MagazineLabel = 0x288; // FName
		constexpr auto MinimumHitThreshold = 0x290; // float
		constexpr auto DroppedMagazineHitEvent = 0x298; // UFMODEvent*
		constexpr auto AmmoRemaining = 0x2a0; // float
		constexpr auto CameFromWeapon = 0x2a8; // ABaseMagazineWeapon*
	}

	namespace n_APingActor { // : AActor
		constexpr auto PingedActor = 0x220; // AActor*
		constexpr auto IconBrush = 0x228; // FSlateBrush
		constexpr auto PingText = 0x2b0; // FText
		constexpr auto ObjectiveMarkerComponent = 0x2c8; // UObjectiveMarkerComponent*
		constexpr auto MapActorComponent = 0x2d0; // UMapActorComponent*
	}

	namespace n_USteamRequestGroupOfficersCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UW_StandardModal_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ApplyButton = 0x268; // UW_StandardButton_C*
		constexpr auto ApplyButton2 = 0x270; // UW_Button_C*
		constexpr auto CancelButton = 0x278; // UW_StandardButton_C*
		constexpr auto CancelButton2 = 0x280; // UW_Button_C*
		constexpr auto ModalDescriptionWidget = 0x288; // UTextBlock*
		constexpr auto OkButton = 0x290; // UW_StandardButton_C*
		constexpr auto OkButton2 = 0x298; // UW_Button_C*
		constexpr auto ScrollBox_1 = 0x2a0; // UScrollBox*
		constexpr auto TitleBarTextWidget = 0x2a8; // UTextBlock*
		constexpr auto VerticalBox_104 = 0x2b0; // UVerticalBox*
		constexpr auto TitleBar = 0x2b8; // FText
		constexpr auto ModalDescription = 0x2d0; // FText
		constexpr auto ShowCancelButton = 0x2e8; // bool
		constexpr auto ShowOkButton = 0x2e9; // bool
		constexpr auto ShowApplyButton = 0x2ea; // bool
		constexpr auto OnOkClicked = 0x2f0; // FMulticastInlineDelegate
		constexpr auto OnCancelClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto OnApplyClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OkButtonText = 0x320; // FText
		constexpr auto Size = 0x338; // FVector2D
		constexpr auto CancelButtonText = 0x340; // FText
		constexpr auto RequireScrollToBottom = 0x358; // bool
		constexpr auto ScrolledToBottom = 0x359; // bool
	}

	namespace n_UBasicOverlays { // : UOverlays
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UBehaviourComponent { // : UActorComponent
		constexpr auto ActiveBehaviourMods = 0xc0; // TArray<EBehaviourMods>
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UDataDrivenConsoleVariableSettings { // : UDeveloperSettings
		constexpr auto CVarsArray = 0x50; // TArray<FDataDrivenConsoleVariable>
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x1c48; // bool
	}

	namespace n_UGizmoLocalFloatParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UListViewBase { // : UWidget
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UW_TutorialMessagePopup_C { // : UTutorialTextPrompt_Widget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InitMessageBox = 0x268; // UWidgetAnimation*
		constexpr auto Image_241 = 0x270; // UImage*
		constexpr auto MessageBox = 0x278; // UVerticalBox*
		constexpr auto MessageContentBox = 0x280; // UVerticalBox*
		constexpr auto MessageText = 0x288; // UTextBlock*
		constexpr auto TitleText = 0x290; // UTextBlock*
		constexpr auto WidgetMessageBox = 0x298; // UOverlay*
		constexpr auto PromptMessages = 0x2a0; // TArray<FPromptInfo>
		constexpr auto MessageFontInfo = 0x2b0; // FSlateFontInfo
		constexpr auto NewVar_2 = 0x308; // TArray<EActionMappingFilter>
		constexpr auto NewVar_3 = 0x318; // TArray<FVictoryInput>
		constexpr auto Active = 0x328; // TArray<UW_TutorialMessageEntry_C*>
		constexpr auto Displayed = 0x338; // bool
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ASWATManager { // : AInfo
		constexpr auto TaggedCharacters = 0x228; // TArray<AReadyOrNotCharacter*>
		constexpr auto SpeechCooldownMap = 0x240; // TMap<FString, float>
		constexpr auto TrackedSquadLeaderLocations = 0x290; // TArray<FVector>
		constexpr auto SwatAI = 0x2a0; // TArray<ASWATCharacter*>
		constexpr auto CommandDecals = 0x2b0; // TArray<ACommandDecal*>
		constexpr auto ActorsToIgnoreForCommandMarking = 0x2c0; // TArray<AActor*>
		constexpr auto AllSpawnedSWAT = 0x2d0; // TArray<ASWATCharacter*>
		constexpr auto LeadCharacter = 0x330; // AReadyOrNotCharacter*
		constexpr auto PotentialFocusActors = 0x338; // TArray<AActor*>
		constexpr auto KnownEnemies = 0x348; // TArray<AAICharacter*>
		constexpr auto PotentialClearPoints = 0x358; // TArray<AClearPoint*>
		constexpr auto HasEverSeenList = 0x368; // TArray<AAICharacter*>
		constexpr auto SquadLeader = 0x378; // AReadyOrNotCharacter*
		constexpr auto FocusedTargets = 0x388; // TArray<AReadyOrNotCharacter*>
		constexpr auto ChaseTargets = 0x398; // TArray<AReadyOrNotCharacter*>
		constexpr auto RequestOrders = 0x3a8; // TArray<FSWATRequestOrder>
		constexpr auto QueuedSwatCommandMap = 0x3b8; // TMap<ETeamType, FQueuedSwatCommand>
		constexpr auto CurrentDefaultCommand = 0x40c; // ESwatCommand
		constexpr auto SwatCommandPriority = 0x40d; // ESwatCommandPriority
		constexpr auto ActiveCommandTeam = 0x40e; // ETeamType
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAudioCaptureComponent { // : USynthComponent
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_UNavCollision { // : UNavCollisionBase
		constexpr auto CylinderCollision = 0xa8; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0xb8; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xc8; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xd0; // char : 1
		constexpr auto bCreateOnClient = 0xd0; // char : 1
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UDatasmithDecalComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_ABuildingTrigger { // : ATriggerBox
		constexpr auto NumberOfFloors = 0x228; // int32_t
		constexpr auto bAuto = 0x22c; // char : 1
		constexpr auto bUniformFloorSpacing = 0x22c; // char : 1
		constexpr auto SpacingBetweenFloors = 0x230; // float
		constexpr auto SpacingPerFloor = 0x238; // TArray<float>
		constexpr auto BuildingName = 0x248; // FText
		constexpr auto FloorNumberToFloorName = 0x260; // TMap<int32_t, FString>
		constexpr auto GeneratedFloors = 0x2b0; // TArray<FBuildingFloor>
	}

	namespace n_ACaptureTheFlagGS { // : AReadyOrNotGameState
		constexpr auto Flag = 0x6e0; // ACTF_Flag*
		constexpr auto FlagBearer = 0x6e8; // APlayerCharacter*
		constexpr auto FlagBearerTeam = 0x6f0; // ETeamType
		constexpr auto bFlagCaptured = 0x6f1; // char : 1
		constexpr auto bGameWon = 0x6f1; // char : 1
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UPaperTerrainComponent { // : UPrimitiveComponent
		constexpr auto TerrainMaterial = 0x450; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x458; // bool
		constexpr auto bFilledSpline = 0x459; // bool
		constexpr auto AssociatedSpline = 0x460; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x468; // int32_t
		constexpr auto SegmentOverlapAmount = 0x46c; // float
		constexpr auto TerrainColor = 0x470; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x480; // int32_t
		constexpr auto SpriteCollisionDomain = 0x484; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x488; // float
		constexpr auto CachedBodySetup = 0x490; // UBodySetup*
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x760; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x760; // char : 1
		constexpr auto MaxPortCountToTry = 0x764; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x774; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x778; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x77c; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x780; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x788; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x790; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x794; // float
	}

	namespace n_URadialFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UGoggles_Widget_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InvalidationBox_1 = 0x268; // UInvalidationBox*
		constexpr auto bBreathIn = 0x270; // bool
	}

	namespace n_ANavSystemConfigOverride { // : AActor
		constexpr auto NavigationSystemConfig = 0x220; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x228; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x229; // char : 1
	}

	namespace n_UAnimNotify_EquipLastItem { // : UAnimNotify
		constexpr auto bInstant = 0x38; // char : 1
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UJoinSessionCallbackProxyAdvanced { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x450; // FText
		constexpr auto TextMaterial = 0x468; // UMaterialInterface*
		constexpr auto Font = 0x470; // UFont*
		constexpr auto HorizontalAlignment = 0x478; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x479; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x47c; // FColor
		constexpr auto XScale = 0x480; // float
		constexpr auto YScale = 0x484; // float
		constexpr auto WorldSize = 0x488; // float
		constexpr auto InvDefaultSize = 0x48c; // float
		constexpr auto HorizSpacingAdjust = 0x490; // float
		constexpr auto VertSpacingAdjust = 0x494; // float
		constexpr auto bAlwaysRenderAsText = 0x498; // char : 1
	}

	namespace n_UW_PageHeader_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Refresh = 0x268; // UWidgetAnimation*
		constexpr auto Image_43 = 0x270; // UImage*
		constexpr auto PageContent = 0x278; // UNamedSlot*
		constexpr auto txt_HeaderText = 0x280; // UW_Text_C*
		constexpr auto txt_PageTagline = 0x288; // UW_Text_C*
		constexpr auto Tagline = 0x290; // FText
		constexpr auto HeaderText = 0x2a8; // FText
		constexpr auto DesignTime = 0x2c0; // bool
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UDLSSOverrideSettings { // : UObject
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_AFMODAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x220; // UFMODAudioComponent*
	}

	namespace n_UWeaponAttachment { // : USkeletalMeshComponent
		constexpr auto SkinMaterials = 0xec8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto WeaponAttachmentType = 0xed8; // EWeaponAttachmentType
		constexpr auto RemovesWeaponAttachmentTypes = 0xee0; // TArray<EWeaponAttachmentType>
		constexpr auto UnderbarrelAnimationType = 0xef0; // EWeaponUnderbarrelAnimationType
		constexpr auto bNeedNotAttach = 0xef1; // bool
		constexpr auto bNullAttachmentOnly = 0xef2; // bool
		constexpr auto SocketAttachment = 0xef4; // FName
		constexpr auto ItemName = 0xf00; // FText
		constexpr auto PointCost = 0xf18; // int32_t
		constexpr auto UIElements = 0xf20; // FAttachmentUIElements
		constexpr auto AdditionalAttachments = 0xf98; // TArray<EItemAttachment>
		constexpr auto AttachmentWeight = 0xfa8; // float
		constexpr auto VerticalRecoilMultiplier = 0xfac; // float
		constexpr auto HorizontalRecoilMultiplier = 0xfb0; // float
		constexpr auto SpreadMultiplier = 0xfb4; // float
		constexpr auto DeadzoneMultiplier = 0xfb8; // float
		constexpr auto MuzzleVelocityMultiplier = 0xfbc; // float
		constexpr auto LowReadyLengthMultiplier = 0xfc0; // float
		constexpr auto bShouldSupressWeapon = 0xfc4; // bool
		constexpr auto bHidesMuzzleFlash = 0xfc5; // bool
		constexpr auto bOverrideMuzzleFlash = 0xfc6; // bool
		constexpr auto MuzzleFlashParticle = 0xfc8; // UParticleSystem*
		constexpr auto MuzzleSmokeParticle = 0xfd0; // UParticleSystem*
		constexpr auto MagazineAmmoIncrease = 0xfdc; // int32_t
		constexpr auto HideBoneOnMesh = 0xfe0; // FName
		constexpr auto CameraBobAdditionFactor = 0xfe8; // float
		constexpr auto ADS_Speed_Multiplier = 0xfec; // float
		constexpr auto ToggleSound = 0xff0; // UFMODEvent*
	}

	namespace n_UMotoSynthPreset { // : UObject
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_ATaserReactionVolume { // : AActor
		constexpr auto Bounds = 0x220; // UBoxComponent*
	}

	namespace n_UInteractiveToolsContext { // : UObject
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UW_TutorialMessageEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_54 = 0x268; // UImage*
		constexpr auto MessageContent = 0x270; // UTextBlock*
		constexpr auto MessageContentText = 0x278; // FText
		constexpr auto FontInfo = 0x290; // FSlateFontInfo
	}

	namespace n_ABallisticsShield { // : ABaseDeployableGear
		constexpr auto GlassMaterialInstance = 0x958; // UMaterialInstanceDynamic*
		constexpr auto PistolEquippedWithShield = 0x960; // ABaseMagazineWeapon*
		constexpr auto ShieldHitEvent = 0x970; // UFMODEvent*
		constexpr auto ReloadAnim_1P = 0x978; // UAnimMontage*
		constexpr auto ReloadAnimEmpty_1P = 0x980; // UAnimMontage*
		constexpr auto ReloadAnim_3P = 0x988; // UAnimMontage*
		constexpr auto Damage = 0x990; // int32_t
		constexpr auto bLowered = 0x996; // bool
		constexpr auto ShieldHitCameraShake = 0x998; // UMatineeCameraShake*
	}

	namespace n_UANIMBP_Sequencer_Body_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x340; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseDriver_6 = 0x3e0; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_5 = 0x548; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_4 = 0x6b0; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_3 = 0x818; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_2 = 0x980; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver = 0xae8; // FAnimNode_PoseDriver
		constexpr auto bDontControlPose = 0xc50; // bool
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UMovieSceneEasingExternalCurve { // : UObject
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UPhononOcclusionSourceSettings { // : UOcclusionPluginSourceSettingsBase
		constexpr auto DirectOcclusionMode = 0x28; // EIplDirectOcclusionMode
		constexpr auto DirectOcclusionMethod = 0x29; // EIplDirectOcclusionMethod
		constexpr auto DirectOcclusionSourceRadius = 0x2c; // float
		constexpr auto DirectAttenuation = 0x30; // bool
		constexpr auto AirAbsorption = 0x31; // bool
	}

	namespace n_AReadyOrNotCharacter { // : ACharacter
		constexpr auto MeshGearSlot = 0x550; // USkeletalMeshComponent*
		constexpr auto ReplicatedControlRotation = 0x574; // FRotator
		constexpr auto LastPlayerStateForCharacter = 0x580; // APlayerState*
		constexpr auto OnPlayerKilled = 0x588; // FMulticastInlineDelegate
		constexpr auto OnCharacterKilled = 0x598; // FMulticastInlineDelegate
		constexpr auto OnWeaponFire = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnWeaponDryFire = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnPlayerDowned = 0x5c8; // FMulticastInlineDelegate
		constexpr auto OnGenericDamageReceived = 0x5d8; // FMulticastInlineDelegate
		constexpr auto OnPointDamageReceived = 0x5e8; // FMulticastInlineDelegate
		constexpr auto OnStunDamageReceived = 0x5f8; // FMulticastInlineDelegate
		constexpr auto OnPlayerFreed = 0x608; // FMulticastInlineDelegate
		constexpr auto OnPlayerHit = 0x618; // FMulticastInlineDelegate
		constexpr auto OnPlayerArmorHit = 0x628; // FMulticastInlineDelegate
		constexpr auto OnItemThrown_FromAnimNotify = 0x638; // FMulticastInlineDelegate
		constexpr auto OnDoorLockPickBegin_FromAnimNotify = 0x648; // FMulticastInlineDelegate
		constexpr auto OnDoorLockPickEnd_FromAnimNotify = 0x658; // FMulticastInlineDelegate
		constexpr auto OnDoorChecked_FromAnimNotify = 0x668; // FMulticastInlineDelegate
		constexpr auto OnC2Placed_FromAnimNotify = 0x678; // FMulticastInlineDelegate
		constexpr auto OnC2Detonate_FromAnimNotify = 0x688; // FMulticastInlineDelegate
		constexpr auto OnTrapDisarmBegin_FromAnimNotify = 0x698; // FMulticastInlineDelegate
		constexpr auto OnTrapDisarmEnd_FromAnimNotify = 0x6a8; // FMulticastInlineDelegate
		constexpr auto OnMirrorDoorStarted_FromAnimNotify = 0x6b8; // FMulticastInlineDelegate
		constexpr auto OnMirrorDoorFinished_FromAnimNotify = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnStartDoorWedgePlacement_FromAnimNotify = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnEndDoorWedgePlacement_FromAnimNotify = 0x6e8; // FMulticastInlineDelegate
		constexpr auto BloodImpactEffects = 0x6f8; // TArray<AImpactEffect*>
		constexpr auto BleedoutWounds = 0x718; // TArray<FBleedoutWound>
		constexpr auto bBulletForceTransferred = 0x72a; // bool
		constexpr auto MinimumBodyFallImpulse = 0x72c; // float
		constexpr auto BodyFallEvent = 0x730; // UFMODEvent*
		constexpr auto BlendInterpAmount = 0x744; // float
		constexpr auto TimeDowned = 0x754; // float
		constexpr auto FinalBlendInTime = 0x758; // float
		constexpr auto BlendInTime = 0x760; // float
		constexpr auto BlendInAfterStartOfAnim = 0x764; // float
		constexpr auto bIsPreviewCharacter = 0x768; // char : 1
		constexpr auto ArrestedBy = 0x770; // AReadyOrNotCharacter*
		constexpr auto KilledBy = 0x778; // AReadyOrNotCharacter*
		constexpr auto DeathReason = 0x780; // ECharacterDeathReason
		constexpr auto OnPlayerTakeDamage = 0x788; // FMulticastInlineDelegate
		constexpr auto OnPlayerAttacked = 0x798; // FMulticastInlineDelegate
		constexpr auto HeadBones = 0x7d8; // TArray<FName>
		constexpr auto UpperBody = 0x7e8; // TArray<FName>
		constexpr auto LowerBody = 0x808; // TArray<FName>
		constexpr auto R_Leg = 0x818; // TArray<FName>
		constexpr auto L_Leg = 0x828; // TArray<FName>
		constexpr auto L_Foot = 0x838; // TArray<FName>
		constexpr auto R_Foot = 0x848; // TArray<FName>
		constexpr auto L_Arm = 0x858; // TArray<FName>
		constexpr auto R_Arm = 0x868; // TArray<FName>
		constexpr auto L_Hand = 0x878; // TArray<FName>
		constexpr auto R_Hand = 0x888; // TArray<FName>
		constexpr auto bLowReadyPointUp = 0x898; // bool
		constexpr auto bLowReadyPointDown = 0x899; // bool
		constexpr auto LowReadyDistance = 0x89c; // float
		constexpr auto LowReadyIgnoredCapsules = 0x8a8; // TArray<UCapsuleComponent*>
		constexpr auto SquadPosition = 0x8b8; // ESquadPosition
		constexpr auto DefaultTeam = 0x8b9; // ETeamType
		constexpr auto FPMeleeImpactFMODEvent = 0x8c0; // UFMODEvent*
		constexpr auto TPMeleeImpactFMODEvent = 0x8c8; // UFMODEvent*
		constexpr auto MeleeImpactParticle = 0x8d0; // UParticleSystem*
		constexpr auto MeleeCameraShake = 0x8d8; // TSoftClassPtr<UObject>
		constexpr auto MeleeRange = 0x900; // float
		constexpr auto MeleeDamage = 0x904; // float
		constexpr auto MeleeDamageType = 0x908; // TSoftClassPtr<UObject>
		constexpr auto OnPlayerArrested = 0x930; // FMulticastInlineDelegate
		constexpr auto OnPlayerArrestStart = 0x940; // FMulticastInlineDelegate
		constexpr auto OnPlayerArrestedCanceled = 0x950; // FMulticastInlineDelegate
		constexpr auto bOrderedToRotateForArrest = 0x960; // char : 1
		constexpr auto PlacedZipcuffs = 0x968; // APlacedZipcuffs*
		constexpr auto SpawnedZipcuffsClass = 0x970; // APlacedZipcuffs*
		constexpr auto SpawnedFPZipcuffsClass = 0x978; // APlacedZipcuffs*
		constexpr auto ZipcuffBone = 0x980; // FName
		constexpr auto bIsBeingArrested = 0x988; // bool
		constexpr auto LastCharacterMakingArrest = 0x990; // AReadyOrNotCharacter*
		constexpr auto CurrentlyArresting = 0x998; // AReadyOrNotCharacter*
		constexpr auto bArrestComplete = 0x9a0; // bool
		constexpr auto bPrimed = 0x9a1; // bool
		constexpr auto bOverarmThrow = 0x9a2; // bool
		constexpr auto OnQuickThrowStart = 0x9a8; // FMulticastInlineDelegate
		constexpr auto OnQuickThrowEnd = 0x9b8; // FMulticastInlineDelegate
		constexpr auto AnimationData = 0x9c8; // UReadyOrNotCharacterAnimData*
		constexpr auto bIsStrafing = 0x9d1; // bool
		constexpr auto PlayedTableMontageMap3P = 0x9f8; // TMap<FString, UAnimMontage*>
		constexpr auto CharacterLookOverride = 0xab0; // FCharacterLookOverride
		constexpr auto Rep_CharacterLookOverride = 0xc20; // FString
		constexpr auto ArmorOverrideMapTP = 0xc30; // TMap<ABaseArmour*, USkeletalMesh*>
		constexpr auto Rep_BodyMesh = 0xc80; // USkeletalMesh*
		constexpr auto Rep_FaceMesh = 0xc88; // USkeletalMesh*
		constexpr auto Rep_FPMesh = 0xc90; // USkeletalMesh*
		constexpr auto AnimMontageCooldown = 0xc98; // TMap<UAnimMontage*, float>
		constexpr auto CurrentFaceROM = 0xce8; // UPoseAsset*
		constexpr auto TOCManager = 0xd08; // ATOCManager*
		constexpr auto ReportToTOC_PVP_CameraShake = 0xd10; // UMatineeCameraShake*
		constexpr auto bReportedToTOC_Killed_PVP = 0xd18; // char : 1
		constexpr auto bReportedToTOC_Arrested_PVP = 0xd18; // char : 1
		constexpr auto TOCLine = 0xd20; // FString
		constexpr auto SpeechCharacterName = 0xd30; // FString
		constexpr auto bHasBeenReported = 0xd48; // bool
		constexpr auto SpeakCooldown = 0xd4c; // float
		constexpr auto ReportPlayerDeadFMODEvent = 0xd50; // UFMODEvent*
		constexpr auto ReportPlayerArrestedFMODEvent = 0xd58; // UFMODEvent*
		constexpr auto ReportPlayerGeneralFMODEvent = 0xd60; // UFMODEvent*
		constexpr auto CooldownMap = 0xd78; // TMap<FString, float>
		constexpr auto FMODVoiceLine2D = 0xdc8; // UFMODEvent*
		constexpr auto FMODVoiceLineSpatalized = 0xdd0; // UFMODEvent*
		constexpr auto OnBoneDamaged = 0xdd8; // FMulticastInlineDelegate
		constexpr auto OnBodyPartDamaged = 0xde8; // FMulticastInlineDelegate
		constexpr auto bBodyHit = 0xdf8; // char : 1
		constexpr auto bRightFootHit = 0xdf8; // char : 1
		constexpr auto bLeftFootHit = 0xdf8; // char : 1
		constexpr auto bBlockedByBodyArmor = 0xdf8; // char : 1
		constexpr auto bBlockedByHeadArmor = 0xdf8; // char : 1
		constexpr auto GasDamageAccumulated = 0xe04; // float
		constexpr auto GasDamageDecay = 0xe08; // float
		constexpr auto SpawnedBloodComponents = 0xe10; // TArray<USceneComponent*>
		constexpr auto bGodMode = 0xe20; // bool
		constexpr auto bNoTarget = 0xe21; // bool
		constexpr auto ArmorImpactEffect = 0xe28; // UParticleSystem*
		constexpr auto Blood = 0xe30; // UBloodData*
		constexpr auto DamagedByCharacters = 0xe38; // TArray<AReadyOrNotCharacter*>
		constexpr auto DamagedByWeapons = 0xe48; // TArray<ABaseWeapon*>
		constexpr auto bRepStunned = 0xe60; // bool
		constexpr auto RepStunnedWith = 0xe61; // EStunType
		constexpr auto bHasEverBeenStunned = 0xeb8; // char : 1
		constexpr auto PendingEvidence = 0xec8; // AActor*
		constexpr auto bIsCollectingEvidence = 0xed0; // bool
		constexpr auto bCollectionAnimHasTriggered = 0xed1; // bool
		constexpr auto CollectingLoopAnim1P = 0xed8; // UAnimMontage*
		constexpr auto CollectingLoopAnim3P = 0xee0; // UAnimMontage*
		constexpr auto CollectedEvidenceClass = 0xee8; // ACollectedEvidenceActor*
		constexpr auto Reward = 0xef0; // UFMODEvent*
		constexpr auto bMovementLocked = 0xef8; // bool
		constexpr auto bAimLocked = 0xef9; // bool
		constexpr auto bActionsLocked = 0xefa; // bool
		constexpr auto QueuedDoorToOpen = 0xf00; // ADoor*
		constexpr auto QueuedDoorToClose = 0xf08; // ADoor*
		constexpr auto LastKickedDoor = 0xf10; // ADoor*
		constexpr auto DoorKickInteractionFront = 0xf18; // UInteractionsData*
		constexpr auto DoorKickInteractionBack = 0xf20; // UInteractionsData*
		constexpr auto DoorKickFailureInteractionFront = 0xf28; // UInteractionsData*
		constexpr auto DoorKickFailureInteractionBack = 0xf30; // UInteractionsData*
		constexpr auto DoorKickBreakInteractionFront = 0xf38; // UInteractionsData*
		constexpr auto DoorKickBreakInteractionBack = 0xf40; // UInteractionsData*
		constexpr auto bShouldPlayFootstepFoley = 0xf68; // bool
		constexpr auto bPlayEveryStep = 0xf69; // bool
		constexpr auto FootstepImpactEffectFast = 0xf70; // AImpactEffect*
		constexpr auto FootstepImpactEffectSlow = 0xf78; // AImpactEffect*
		constexpr auto CurrentFootstepFoleyEvent = 0xf80; // UFMODEvent*
		constexpr auto CurrentFootstepFoleyEventRemote = 0xf88; // UFMODEvent*
		constexpr auto FootstepsLocal = 0xf90; // UFMODEvent*
		constexpr auto FootstepsRemote = 0xf98; // UFMODEvent*
		constexpr auto DefaultRagdollPhysAsset = 0xfa0; // UPhysicsAsset*
		constexpr auto DefaultAlivePhysAsset = 0xfa8; // UPhysicsAsset*
		constexpr auto CuffedRagdollPhysAsset = 0xfb0; // UPhysicsAsset*
		constexpr auto Rep_ActiveRagdollPhysAsset = 0xfb8; // UPhysicsAsset*
		constexpr auto NeutralizeSuspectTag = 0xfd0; // ANeutralizeSuspectByTag*
		constexpr auto InventoryComp = 0xfd8; // UInventoryComponent*
		constexpr auto FMODAudioPropagationComp = 0xfe0; // UFMODAudioPropagationComponent*
		constexpr auto PrimaryItemVisualizationComponent = 0xfe8; // UItemVisualizationComponent*
		constexpr auto SecondaryItemVisualizationComponent = 0xff0; // UItemVisualizationComponent*
		constexpr auto LongTacticalVisualizationComponent = 0xff8; // UItemVisualizationComponent*
		constexpr auto HelmetVisualizationComponent = 0x1000; // UItemVisualizationComponent*
		constexpr auto EquippedItemVisualizationComponent = 0x1008; // UItemVisualizationComponent*
		constexpr auto CharacterHealth = 0x1010; // UCharacterHealthComponent*
		constexpr auto FaceMesh = 0x1018; // USkeletalMeshComponent*
		constexpr auto NoiseEmitter = 0x1020; // UPawnNoiseEmitterComponent*
		constexpr auto PerceptionStimuliComp = 0x1028; // UAIPerceptionStimuliSourceComponent*
		constexpr auto FMODFoleyComp = 0x1030; // UFMODAudioComponent*
		constexpr auto FMODVoiceAudioComp = 0x1038; // UFMODAudioComponent*
		constexpr auto InteractableComponent = 0x1040; // UInteractableComponent*
		constexpr auto PlayerMarkerComponent = 0x1048; // UObjectiveMarkerComponent*
		constexpr auto MapActorComponent = 0x1050; // UMapActorComponent*
		constexpr auto TorsoDeathAnims = 0x1058; // TArray<UAnimMontage*>
		constexpr auto HeadDeathAnims = 0x1068; // TArray<UAnimMontage*>
		constexpr auto LeftArmDeathAnims = 0x1078; // TArray<UAnimMontage*>
		constexpr auto RightArmDeathAnims = 0x1088; // TArray<UAnimMontage*>
		constexpr auto LeftLegDeathAnims = 0x1098; // TArray<UAnimMontage*>
		constexpr auto RightLegDeathAnims = 0x10a8; // TArray<UAnimMontage*>
		constexpr auto currentDeathMontage = 0x10b8; // UAnimMontage*
	}

	namespace n_ULuminApplicationLifecycleComponent { // : UApplicationLifecycleComponent
		constexpr auto DeviceHasReactivatedDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x180; // FMulticastInlineDelegate
	}

	namespace n_ATransformGizmoActor { // : AGizmoActor
		constexpr auto TranslateX = 0x220; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x248; // UPrimitiveComponent*
		constexpr auto RotateX = 0x250; // UPrimitiveComponent*
		constexpr auto RotateY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x260; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x268; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x280; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x298; // UPrimitiveComponent*
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCompiledDataManager { // : UObject
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UBleedComponent { // : UActorComponent
		constexpr auto BleedEvent = 0xb0; // UFMODEvent*
		constexpr auto bIsBleeding = 0xb8; // bool
		constexpr auto bTempStopBleeding = 0xc0; // bool
		constexpr auto HealCount = 0xc4; // int32_t
	}

	namespace n_APouch { // : ASkeletalMeshActor
		constexpr auto MagazineComponent = 0x2a8; // USkeletalMeshComponent*
		constexpr auto AttachToComp = 0x2b0; // USceneComponent*
		constexpr auto AttachToSocket = 0x2b8; // FName
		constexpr auto bShowMagazine = 0x2c0; // bool
		constexpr auto MagazineSocket = 0x2c4; // FName
		constexpr auto OpenPouch = 0x2d0; // UAnimSequence*
		constexpr auto ClosePouch = 0x2d8; // UAnimSequence*
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_AEvidenceExtractionDevice { // : AActor
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto InteractableComponent = 0x230; // UInteractableComponent*
		constexpr auto EvidenceExtractionTime = 0x238; // float
	}

	namespace n_UANIMBP_G36C_V2_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x328; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x430; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x538; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x640; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x660; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_2 = 0x720; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x768; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x790; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x7b8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x8a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x9f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0xa78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0xaf8; // FAnimNode_ModifyBone
		constexpr auto bIsSemi = 0xc00; // bool
		constexpr auto Mag01Alpha = 0xc04; // float
		constexpr auto ScopeAdjustAlpha = 0xc08; // float
	}

	namespace n_USubtitlesCache { // : UObject
		constexpr auto Data = 0x28; // TMap<FName, FLipSync_Pause>
	}

	namespace n_ULocationServicesImpl { // : UObject
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x230; // USceneCaptureComponentCube*
	}

	namespace n_UNiagaraDataInterfaceTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UFireOnDroppedAnimNotify { // : UAnimNotify
		constexpr auto ChanceToFire = 0x38; // float
		constexpr auto PlayerCharacter = 0x40; // APlayerCharacter*
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UARImageComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_Player_TP_V2_C { // : URoNAnimInstance_PlayerTP
		constexpr auto UberGraphFrame = 0xe20; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ModifyBone_12 = 0xe28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0xf30; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LegIK = 0x1038; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x1130; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x1238; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_7 = 0x1390; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x13d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x14e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x15e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x16f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x1718; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_24 = 0x1798; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RandomPlayer_8 = 0x1860; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_23 = 0x18d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x19a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_19 = 0x1a20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x1ad0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x1c28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_18 = 0x1ca8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x1d58; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x1eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x1f30; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x1fd0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0x2128; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x2280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x22a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x22d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x22f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x2320; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x2348; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x2370; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x2398; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x23c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x23e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x2468; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x2498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x2518; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x2548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x25c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x25f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_22 = 0x2678; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x2740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x2768; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x2790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x27b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_RandomPlayer_7 = 0x27e0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_21 = 0x2858; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_18 = 0x2920; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_17 = 0x2970; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_16 = 0x29c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_17 = 0x2a10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_18 = 0x2ac0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_RandomPlayer_6 = 0x2af0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_20 = 0x2b68; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_15 = 0x2c30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_14 = 0x2c80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_13 = 0x2cd0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_16 = 0x2d20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_17 = 0x2dd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x2e00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x2e28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x2e50; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x2ef0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x2f18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x2f40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x2f68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x2f90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x3010; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_12 = 0x3040; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_15 = 0x3090; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x30c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_14 = 0x30e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x3118; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x31c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_13 = 0x3290; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x32c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_12 = 0x3370; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x33a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x3420; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x3450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_19 = 0x34d0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x3598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x35c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x35e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x3610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_RandomPlayer_5 = 0x3638; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_18 = 0x36b0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_11 = 0x3778; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_10 = 0x37c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x3818; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_15 = 0x3868; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_10 = 0x3918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x3948; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x3998; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x39e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x3a38; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByEnum_14 = 0x3b00; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_RandomPlayer_4 = 0x3bb0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x3c28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x3c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x3c80; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x3d20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x3d48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x3de8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x3e10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x3eb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x3ed8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x3fa0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x3fc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x3ff0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x4018; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x4040; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x4068; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x4090; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_8 = 0x40e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x4110; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_7 = 0x4160; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x4190; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_6 = 0x41b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x41e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x4298; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_5 = 0x4360; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x4390; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_4 = 0x4440; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x4470; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x4520; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x45e0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x46a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x4728; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x47a8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x4870; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x4910; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x49b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x4a30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0x4ab0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x4c08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x4c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x4c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x4c80; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_13 = 0x4dd8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x4e88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x4eb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_9 = 0x4ed8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x5068; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x51c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x5260; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x5288; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x5328; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0x5480; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_8 = 0x54a8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x5638; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x56d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0x5778; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x57a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_7 = 0x58f8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0x5a88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0x5ab0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x5ad8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x5b00; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x5c58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x5d18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x5d40; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x5e08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x5e30; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x5f88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x6028; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x6050; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x6078; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x6138; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x6160; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x6228; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x6380; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x6400; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x64a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x64c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x65d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x6728; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x67d0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x69b0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_6 = 0x6b90; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x6d20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x6da0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0x6e20; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RandomPlayer_3 = 0x6ee8; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_RandomPlayer_2 = 0x6f60; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0x6fd8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x70a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x7120; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x7198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x71c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x7350; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x7378; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x7508; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x7530; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_PoseDriver_6 = 0x76c0; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x7828; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x79b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x7a38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x7ab8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x7b38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x7bb8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x7d10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x7db0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x7e30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x7eb0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x7f30; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x7fb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x8108; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x8210; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x8290; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x8310; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x8390; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x8410; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x8568; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x8670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x86f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x8770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x87f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x8870; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x89c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x8ad0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x8b50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x8bd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x8c50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x8cd0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x8e28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x8f30; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x8ff8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByEnum_12 = 0x9048; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_11 = 0x90f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x91a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x9228; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x92a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x9328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_10 = 0x93a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x9458; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x94d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x9558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x95d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x9658; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x9708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x9788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x9808; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x9888; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x9908; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x99b8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x9a68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x9ae8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x9b68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x9be8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x9c68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x9ce8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x9d68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x9de8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseDriver_5 = 0x9e68; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x9fd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseDriver_4 = 0x9ff8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_3 = 0xa160; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_2 = 0xa2c8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver = 0xa430; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0xa598; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0xa638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0xa6b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0xa738; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0xa7b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0xa838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0xa8b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0xa938; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0xa9b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0xaa38; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0xaae8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0xab68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0xabe8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0xacb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0xacd8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0xad78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0xadf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0xae78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_6 = 0xaf80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0xafc8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0xb018; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0xb0d8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0xb1a0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0xb268; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SlopeWarping = 0xb2e8; // FAnimNode_SlopeWarping
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0xb510; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0xb5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0xb630; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0xb6f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0xb778; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0xb818; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0xb898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0xb918; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0xb9b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_5 = 0xba38; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xba80; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xbaa0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0xbbf8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0xbca8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0xbd28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0xbda8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0xbe28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0xbea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0xbf28; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0xbfa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0xc028; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0xc0a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0xc170; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_4 = 0xc198; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0xc1c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0xc1e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xc210; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0xc238; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0xc2b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator = 0xc2e8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_2 = 0xc338; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0xc368; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0xc3e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0xc418; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0xc4c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xc4f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0xc518; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0xc6a8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0xc758; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0xc818; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0xc8b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0xc938; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0xc9b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0xc9e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0xca08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0xcb60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0xcb88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0xcbb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0xcc50; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0xcd10; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0xcd38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0xcdb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0xce38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_4 = 0xced8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0xcf20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0xcfc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0xd040; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0xd0c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0xd140; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0xd1f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0xd348; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0xd370; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xd430; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseSnapshot = 0xd458; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0xd4e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0xd588; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0xd628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0xd6a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0xd768; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0xd790; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0xd858; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0xd880; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0xd8a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0xd970; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0xda30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0xda58; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0xdb20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0xdb48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0xdb70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xdc10; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0xdd68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0xdd90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0xddb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0xde38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0xded8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0xdf88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0xe008; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0xe088; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0xe108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0xe188; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0xe250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0xe2f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0xe318; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0xe3e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0xe408; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0xe430; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0xe4f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0xe590; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xe630; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum = 0xe6b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xe760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xe7e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0xe860; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend = 0xe900; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0xe9c8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0xea90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xeab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0xeae0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xeba0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ApplyAdditive = 0xebc8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xec90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xecb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer = 0xece0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0xed60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xee00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xee28; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0xee50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0xefa8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_2 = 0xeff0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0xf038; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0xf080; // FAnimNode_LayeredBoneBlend
		constexpr auto AimDeltaRot = 0xf140; // FRotator
		constexpr auto LeanTransitionSpeeds = 0xf14c; // float
		constexpr auto DirectionBlendTime = 0xf150; // float
		constexpr auto WeaponUpBlendTime = 0xf154; // float
		constexpr auto AnimSpeedForward = 0xf158; // float
		constexpr auto AnimSpeedRight = 0xf15c; // float
		constexpr auto AnimWarpPlayrateThreshold = 0xf160; // float
		constexpr auto LeftJointLoc = 0xf164; // FVector
		constexpr auto RightJoinLoc = 0xf170; // FVector
		constexpr auto CharSpeed = 0xf17c; // float
		constexpr auto InputUpDown = 0xf180; // float
		constexpr auto DeathPose = 0xf188; // FPoseSnapshot
		constexpr auto TurnRemainingStartTime = 0xf1c0; // float
		constexpr auto SlopeWarpingAlpha = 0xf1c4; // float
		constexpr auto bIsVIP1911 = 0xf1c8; // bool
		constexpr auto bIsCustomizing = 0xf1c9; // bool
		constexpr auto bHoldingVIPWeapon = 0xf1ca; // bool
		constexpr auto bHoldingWeaponAsMLO = 0xf1cb; // bool
		constexpr auto bCanTurnInPlace = 0xf1cc; // bool
		constexpr auto IsItemOrPistolMotionBlock = 0xf1cd; // bool
		constexpr auto IsRifleMotionBlock = 0xf1ce; // bool
		constexpr auto bIsCrouchingWithShield = 0xf1cf; // bool
		constexpr auto IsNotCustomizing_AsFloat = 0xf1d0; // float
		constexpr auto CrouchHighPoseAdditiveAlpha = 0xf1d4; // float
		constexpr auto StandHighPoseAdditiveAlpha = 0xf1d8; // float
		constexpr auto LeftHandIKAlpha_ItemBased = 0xf1dc; // float
		constexpr auto ZHeightLeanAdjustment = 0xf1e0; // FVector
		constexpr auto IsCrouchingWithShield_AsFloat = 0xf1ec; // float
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_UCrowdManager { // : UCrowdManagerBase
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_ADoorwayWithoutDoor { // : AActor
		constexpr auto Doorway = 0x220; // UDoorwayComponent*
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_USynthComponentToneGenerator { // : USynthComponent
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_AReadyOrNotAudioVolume { // : AVolume
		constexpr auto BillboardComponent = 0x258; // UBillboardComponent*
		constexpr auto ReverbEvents = 0x260; // TArray<UFMODEvent*>
		constexpr auto EventInstances = 0x270; // TArray<FFMODEventInstance>
		constexpr auto bReverbActivated = 0x280; // bool
		constexpr auto AttachedAudioComponents = 0x288; // TArray<UFMODAudioComponent*>
	}

	namespace n_UVisualEffect { // : UBaseWidget
		constexpr auto Impact = 0x278; // float
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
		constexpr auto Hash = 0x68; // uint64_t
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UGeometryCacheTrackStreamable { // : UGeometryCacheTrack
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_ABaseItem { // : AActor
		constexpr auto FMODAudioComp = 0x260; // UFMODAudioComponent*
		constexpr auto InteractableComponent = 0x268; // UInteractableComponent*
		constexpr auto ScoringComponent = 0x270; // UScoringComponent*
		constexpr auto bDisableTickWhenNotEquipped = 0x278; // bool
		constexpr auto PhysicsImpact = 0x280; // UFMODEvent*
		constexpr auto ThrownItemClass = 0x290; // AThrownItem*
		constexpr auto ItemWeight = 0x2d0; // float
		constexpr auto bDisallowKicking = 0x2d6; // bool
		constexpr auto LookupTableIdx = 0x2d8; // FName
		constexpr auto Rep_CustomItemMeshFromAttachment = 0x2e8; // USkeletalMesh*
		constexpr auto bInInventory = 0x2f1; // bool
		constexpr auto bShouldTickAnimBPWhenNotEquipped = 0x2f2; // bool
		constexpr auto Server_ReplicatedPhysicsLocation = 0x2f4; // FVector
		constexpr auto OwnerName = 0x300; // FString
		constexpr auto ItemName = 0x310; // FString
		constexpr auto LockedToDLC = 0x320; // TArray<EDLC>
		constexpr auto ItemClass = 0x330; // EItemClass
		constexpr auto ItemDescription = 0x338; // FText
		constexpr auto ItemSelectorName = 0x350; // FString
		constexpr auto ItemSelectionSound = 0x360; // UFMODEvent*
		constexpr auto Visuals = 0x368; // FItemVisualData
		constexpr auto Tooltip = 0x3f8; // UTexture2D*
		constexpr auto HUDOutline = 0x400; // UTexture2D*
		constexpr auto bInterpToTargetScale = 0x408; // bool
		constexpr auto bFollowMasterPoseTP = 0x409; // bool
		constexpr auto TargetWorldScale = 0x40c; // FVector
		constexpr auto TargetWorldScaleInterpSpeed = 0x418; // float
		constexpr auto bStartAsEvidence = 0x41c; // bool
		constexpr auto bIsEvidence = 0x41d; // bool
		constexpr auto bIsClearable = 0x41e; // bool
		constexpr auto bHasBeenCleared = 0x41f; // bool
		constexpr auto BlockAnyDamageFrom = 0x420; // TArray<UDamageType*>
		constexpr auto BlockDirectHitsFrom = 0x430; // TArray<UDamageType*>
		constexpr auto bTaserDamageBlocked = 0x440; // bool
		constexpr auto MultiplyStunDamageFrom = 0x448; // TMap<UDamageType*, float>
		constexpr auto MultiplyStunDamageByWeight = 0x498; // TMap<UDamageType*, FWeightStunMultiplier>
		constexpr auto SceneComp = 0x4e8; // USceneComponent*
		constexpr auto ItemMesh = 0x4f0; // USkeletalMeshComponent*
		constexpr auto InteractionBox = 0x4f8; // UBoxComponent*
		constexpr auto Dynamic1PMaterialInstances = 0x500; // TArray<UMaterialInstanceDynamic*>
		constexpr auto DynamicWeaponFovMats = 0x518; // TArray<UMaterialInstanceDynamic*>
		constexpr auto FP_SkinMaterials = 0x530; // TArray<UMaterialInstanceDynamic*>
		constexpr auto TP_SkinMaterials = 0x540; // TArray<UMaterialInstanceDynamic*>
		constexpr auto MasterPoseRep = 0x550; // USkeletalMeshComponent*
		constexpr auto bShowStaticMeshOnBody = 0x558; // bool
		constexpr auto WeaponWheelCategoryName = 0x55c; // FName
		constexpr auto bForceInvisible = 0x564; // bool
		constexpr auto bForcedInvisible = 0x565; // bool
		constexpr auto bCanReloadSameMagazine = 0x570; // bool
		constexpr auto LastReloadAnim_3P = 0x578; // UAnimMontage*
		constexpr auto MovementSpeedMultiplier = 0x580; // float
		constexpr auto QuickLeanMultiplier = 0x584; // float
		constexpr auto FreeLeanMultiplier = 0x588; // float
		constexpr auto OnEvidenceCollected = 0x590; // FMulticastInlineDelegate
		constexpr auto WeaponType = 0x5a0; // EWeaponType
		constexpr auto OnAttachmentActivated = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnAttachmentDeactivated = 0x5b8; // FMulticastInlineDelegate
		constexpr auto Attachments = 0x5c8; // TArray<EItemAttachment>
		constexpr auto ActiveAttachments = 0x5d8; // TArray<EItemAttachment>
		constexpr auto bDisableMeshspaceMovement = 0x5e8; // bool
		constexpr auto MeshspaceTransform_Default = 0x5f0; // FTransform
		constexpr auto MeshspaceTransform_Aiming = 0x620; // FTransform
		constexpr auto MeshspaceTransform_Back = 0x650; // FTransform
		constexpr auto InertiaDragAimRotation = 0x680; // float
		constexpr auto InertiaDragAimLocation = 0x684; // float
		constexpr auto InertiaDragStrafeRotation = 0x688; // float
		constexpr auto InertiaDragStrafeLocation = 0x68c; // float
		constexpr auto MovementSpeedScale = 0x690; // FVector
		constexpr auto MovementSpeedRotationScalePitchYawRoll = 0x69c; // FRotator
		constexpr auto MeshSpaceAimInterp = 0x6a8; // float
		constexpr auto MeshspaceTransform_OnDraw = 0x6b0; // FTransform
		constexpr auto OnDrawMeshspaceInterp = 0x6e0; // float
		constexpr auto MeshspaceTransform_OnHolster = 0x6f0; // FTransform
		constexpr auto OnHolsterMeshspaceInterp = 0x720; // float
		constexpr auto BodySocket = 0x724; // FName
		constexpr auto HandsSocket = 0x72c; // FName
		constexpr auto AnimationIndex1P = 0x734; // int32_t
		constexpr auto AnimationIndex3P = 0x73c; // int32_t
		constexpr auto bDeployable = 0x744; // bool
		constexpr auto bShouldEquipToHands = 0x745; // bool
		constexpr auto ItemCategories = 0x748; // TArray<EItemCategory>
		constexpr auto Holster_PlayRate = 0x764; // float
		constexpr auto Draw_PlayRate = 0x768; // float
		constexpr auto Reload_CameraShake = 0x770; // UMatineeCameraShake*
		constexpr auto ReloadEmpty_CameraShake = 0x778; // UMatineeCameraShake*
		constexpr auto DrawCameraShake = 0x780; // UMatineeCameraShake*
		constexpr auto HolsterCameraShake = 0x788; // UMatineeCameraShake*
		constexpr auto LastFPAnimInstanceClass = 0x7c8; // UObject*
		constexpr auto LastTPAnimInstanceClass = 0x808; // UObject*
		constexpr auto ThrownEvidenceActor = 0x810; // AThrownEvidenceActor*
		constexpr auto bIsBeingCollected = 0x824; // bool
		constexpr auto CurrentCollectionTime = 0x828; // float
		constexpr auto MaxCollectionTime = 0x82c; // float
		constexpr auto CollectingCharacter = 0x830; // AReadyOrNotCharacter*
		constexpr auto bDropping = 0x838; // bool
		constexpr auto bDisableAnimInstanceWhenNotEquipped = 0x848; // bool
		constexpr auto AnimationData = 0x858; // UReadyOrNotWeaponAnimData*
		constexpr auto DefaultAnimationData = 0x860; // UReadyOrNotWeaponAnimData*
		constexpr auto GripAnimationData = 0x868; // UReadyOrNotWeaponAnimData*
		constexpr auto ShieldRaisedAnimationData = 0x870; // UReadyOrNotWeaponAnimData*
		constexpr auto ShieldLoweredAnimationData = 0x878; // UReadyOrNotWeaponAnimData*
		constexpr auto FreeAimLimit = 0x880; // float
		constexpr auto FreeAimLimitADS = 0x884; // float
		constexpr auto LazySpringStrength = 0x888; // float
		constexpr auto LazySpringStrengthADS = 0x88c; // float
		constexpr auto FreeAimInterpSpeed = 0x890; // float
		constexpr auto FreeAimInterpADSModifier = 0x894; // float
		constexpr auto FreeAimInterpHipModifier = 0x898; // float
		constexpr auto FreeAimSlowMoveModifier = 0x89c; // float
		constexpr auto FreeAimSlowMoveTolerance = 0x8a0; // float
		constexpr auto MeleeUserCameraShake = 0x8a8; // UMatineeCameraShake*
		constexpr auto bADSCountsAsAbuse = 0x8b0; // bool
		constexpr auto HesitationBoostMultiplier = 0x8b4; // float
		constexpr auto bIsAimingDownSights = 0x8b8; // bool
		constexpr auto bUseLowReady = 0x8b9; // bool
		constexpr auto PushbackRange = 0x8bc; // float
		constexpr auto LowReadyRange = 0x8c0; // float
		constexpr auto LowReadyRangeSightsModifier = 0x8c4; // float
		constexpr auto LowReadyPitchThreshold = 0x8c8; // float
		constexpr auto SoundData = 0x8d0; // UWeaponSound*
		constexpr auto bOverrideBreathingEvent = 0x8d8; // bool
		constexpr auto BreathingAudioOverride = 0x8e0; // UFMODEvent*
		constexpr auto bEasyPickup = 0x8e8; // bool
		constexpr auto bNoPickup = 0x8e9; // bool
		constexpr auto bScriptedFPHidden = 0x8ea; // bool
		constexpr auto ActiveMotionBlock = 0x8eb; // EMotionBlockType
		constexpr auto bIsOneHandedItem = 0x8ec; // bool
		constexpr auto FP_ADS_Motion_Weight = 0x8f0; // float
		constexpr auto bApplyLookupData = 0x8f8; // char : 1
		constexpr auto CameraBobScaleH = 0x8fc; // float
		constexpr auto CameraBobScaleV = 0x900; // float
		constexpr auto CameraBobSpeedScaleH = 0x904; // float
		constexpr auto CameraBobSpeedScaleV = 0x908; // float
		constexpr auto CameraBobAmplitudeBaseSpeed = 0x90c; // float
		constexpr auto CameraBobIntensitySprintScale = 0x910; // float
		constexpr auto CameraBobAmplitudeWalkScale = 0x914; // float
		constexpr auto CameraBobAmplitudeSprintScale = 0x918; // float
		constexpr auto WeaponBobScaleH = 0x91c; // float
		constexpr auto WeaponBobScaleV = 0x920; // float
		constexpr auto WeaponBobScaleInjured = 0x924; // float
		constexpr auto WeaponBobSpeedScaleH = 0x928; // float
		constexpr auto WeaponBobSpeedScaleV = 0x92c; // float
		constexpr auto WeaponBobSpeedScaleInjured = 0x930; // float
		constexpr auto WeaponBobCrouchModifier = 0x934; // float
		constexpr auto WeaponBobADSModifier = 0x938; // float
		constexpr auto WeaponBobRotPitchScale = 0x93c; // float
		constexpr auto WeaponBobRotRollScale = 0x940; // float
		constexpr auto WeaponBobRotPitchSpeed = 0x944; // float
		constexpr auto WeaponBobRotRollSpeed = 0x948; // float
		constexpr auto WeaponBobRotCrouchModifier = 0x94c; // float
		constexpr auto WeaponBobRotADSModifier = 0x950; // float
	}

	namespace n_UPlayerPaperdollWidget { // : UUserWidget
		constexpr auto StanceSwitcher = 0x260; // UWidgetSwitcher*
		constexpr auto Stand_Overlay = 0x268; // UOverlay*
		constexpr auto Crouch_Overlay = 0x270; // UOverlay*
		constexpr auto Outline_Image = 0x278; // UImage*
		constexpr auto Head_Image = 0x280; // UImage*
		constexpr auto Body_Image = 0x288; // UImage*
		constexpr auto RightArm_Image = 0x290; // UImage*
		constexpr auto LeftArm_Image = 0x298; // UImage*
		constexpr auto RightLeg_Image = 0x2a0; // UImage*
		constexpr auto LeftLeg_Image = 0x2a8; // UImage*
		constexpr auto Headwear_Image = 0x2b0; // UImage*
		constexpr auto BodyArmor_Image = 0x2b8; // UImage*
		constexpr auto Outline_Crouch_Image = 0x2c0; // UImage*
		constexpr auto Head_Crouch_Image = 0x2c8; // UImage*
		constexpr auto Body_Crouch_Image = 0x2d0; // UImage*
		constexpr auto RightArm_Crouch_Image = 0x2d8; // UImage*
		constexpr auto LeftArm_Crouch_Image = 0x2e0; // UImage*
		constexpr auto RightLeg_Crouch_Image = 0x2e8; // UImage*
		constexpr auto LeftLeg_Crouch_Image = 0x2f0; // UImage*
		constexpr auto Headwear_Crouch_Image = 0x2f8; // UImage*
		constexpr auto BodyArmor_Crouch_Image = 0x300; // UImage*
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UARPin { // : UObject
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_AReadyOrNotPlayerController { // : APlayerController
		constexpr auto ProgressionComp = 0x578; // UProgressionComponent*
		constexpr auto ServerSideChecksum = 0x584; // int32_t
		constexpr auto OnPawnPossessed = 0x598; // FMulticastInlineDelegate
		constexpr auto OnOutOfBoundsChanged = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnPreClientTravel = 0x5b8; // FMulticastInlineDelegate
		constexpr auto RespawnTimeLeft = 0x5d8; // float
		constexpr auto SpectateCamera = 0x5e0; // ACameraActor*
		constexpr auto StreamingLevels = 0x5e8; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevel = 0x5f8; // FString
		constexpr auto StreamingOptions = 0x608; // FString
		constexpr auto ReplicatedMapList = 0x638; // TArray<FString>
		constexpr auto OnMapListReplicated = 0x648; // FMulticastInlineDelegate
		constexpr auto VoteAntiSpamDebouncer = 0x658; // float
		constexpr auto MyVoteData = 0x660; // FVoteData
		constexpr auto bStatsProfiledQueued = 0x690; // bool
		constexpr auto ProtectedWidgetClasses = 0x698; // TArray<UUserWidget*>
		constexpr auto bCanOpenOptionsMenu = 0x6c0; // bool
		constexpr auto CreatedWidgetMap = 0x6c8; // TMap<FString, UUserWidget*>
		constexpr auto Rep_MatchmakingServerInfo = 0x728; // FZeuzMatchMakingServerInfo
		constexpr auto Rep_MatchmakingPartyInit = 0x7a0; // FZeuzMatchMakingPartyInit
		constexpr auto SwatAutomationManager = 0x850; // ASwatAutomationManager*
		constexpr auto DebugActorList = 0x860; // TMap<AActor*, float>
		constexpr auto OnVoiceChannelChanged = 0x8c0; // FMulticastInlineDelegate
		constexpr auto OnHudWidgetsClearedComplete = 0x8f0; // FMulticastInlineDelegate
		constexpr auto TestCube = 0x900; // USkeletalMesh*
		constexpr auto TestMaterial = 0x908; // UMaterialInterface*
		constexpr auto bStartedCoopAsSpectator = 0x918; // bool
		constexpr auto LastKilledCharacter = 0x920; // ACharacter*
		constexpr auto bIsReplaySpectator = 0x930; // bool
		constexpr auto OnRTXDMOChanged = 0x958; // FMulticastInlineDelegate
		constexpr auto ChatMessages = 0x968; // TArray<FRChatMessage>
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x468; // float
		constexpr auto CapsuleRadius = 0x46c; // float
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_AAISpawn { // : AActor
		constexpr auto SpawnData = 0x220; // FSpawnData
		constexpr auto RosterSpawnData = 0xd10; // TArray<FSpawnData>
		constexpr auto bIsRoamerSpawn = 0xd20; // bool
		constexpr auto DefaultScene = 0xd28; // USceneComponent*
		constexpr auto SpawnDirection = 0xd30; // UArrowComponent*
		constexpr auto SavedAIData = 0xd38; // FAIDataLookupTable
		constexpr auto SpawnedCharacterDeffered = 0xf78; // AAICharacter*
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UBaseWidget { // : UUserWidget
		constexpr auto MouseAxisDeltaThreshold = 0x260; // FVector2D
		constexpr auto GamepadAxisDeltaThreshold = 0x268; // FVector2D
		constexpr auto RONGS = 0x270; // AReadyOrNotGameState*
	}

	namespace n_UTexture2DArray { // : UTexture
		constexpr auto AddressX = 0x1d0; // TextureAddress
		constexpr auto AddressY = 0x1d1; // TextureAddress
		constexpr auto AddressZ = 0x1d2; // TextureAddress
	}

	namespace n_UAnimNotify_MirrorDoor { // : UAnimNotify
		constexpr auto bMirrorFinish = 0x38; // char : 1
	}

	namespace n_AReadyOrNotGameState { // : AGameStateBase
		constexpr auto NextHost = 0x278; // APlayerState*
		constexpr auto MigrationGUID = 0x280; // FString
		constexpr auto bHasHostFinishedLoading = 0x290; // bool
		constexpr auto LoadedDataTables = 0x298; // TArray<UDataTable*>
		constexpr auto ScoringManager = 0x2a8; // AScoringManager*
		constexpr auto SignificanceManager = 0x2b8; // AReadyOrNotSignificanceManager*
		constexpr auto Rep_GameModeSettings = 0x2c0; // FDataTableRowHandle
		constexpr auto TimeTillGameStartCountdown = 0x2d0; // float
		constexpr auto BadAIActionActors = 0x2e0; // TArray<ABadAIAction*>
		constexpr auto bHasLeftLoadOut = 0x2f0; // bool
		constexpr auto PreMissionStreamedLevel = 0x2f8; // ULevelStreaming*
		constexpr auto SubPreMissionPlanningLevel = 0x300; // TSoftObjectPtr<UWorld>
		constexpr auto ModeName = 0x330; // FText
		constexpr auto ModeRules = 0x348; // FText
		constexpr auto MissionObjectives = 0x360; // TArray<AObjective*>
		constexpr auto ObituaryData = 0x370; // UObituaryData*
		constexpr auto bAnnounceReinforcements = 0x378; // bool
		constexpr auto bRadioGlareEnabled = 0x379; // bool
		constexpr auto ReplenishAllAmmoSound = 0x380; // UFMODEvent*
		constexpr auto RedTeamPlayers = 0x388; // TArray<AReadyOrNotCharacter*>
		constexpr auto BlueTeamPlayers = 0x398; // TArray<AReadyOrNotCharacter*>
		constexpr auto AnnouncerAudioComponent = 0x3a8; // UFMODAudioComponent*
		constexpr auto TotalMissionAbuseCount = 0x3b0; // int32_t
		constexpr auto ArrestListeners = 0x3b8; // TArray<TScriptInterface<IListenForArrest>>
		constexpr auto DeathListeners = 0x3c8; // TArray<TScriptInterface<IListenForDeath>>
		constexpr auto IncapacitationListeners = 0x3d8; // TArray<TScriptInterface<IListenForIncapacitation>>
		constexpr auto InjuryListeners = 0x3e8; // TArray<TScriptInterface<IListenForInjury>>
		constexpr auto SpawnListeners = 0x3f8; // TArray<TScriptInterface<IListenForSpawn>>
		constexpr auto EvidenceListeners = 0x408; // TArray<TScriptInterface<IListenForPickup>>
		constexpr auto WeaponClearingListeners = 0x418; // TArray<TScriptInterface<IListenForWeaponClearing>>
		constexpr auto ReportListeners = 0x428; // TArray<TScriptInterface<IListenForReport>>
		constexpr auto GameStartListeners = 0x438; // TArray<TScriptInterface<IListenForGameStart>>
		constexpr auto GameEndListeners = 0x448; // TArray<TScriptInterface<IListenForGameEnd>>
		constexpr auto GamePreStartListeners = 0x458; // TArray<TScriptInterface<IListenForGamePreStart>>
		constexpr auto RoundEndListeners = 0x468; // TArray<TScriptInterface<IListenForRoundEnded>>
		constexpr auto YellListeners = 0x478; // TArray<TScriptInterface<IListenForYell>>
		constexpr auto UncuffedListeners = 0x488; // TArray<TScriptInterface<IListenForUncuffed>>
		constexpr auto bDisableEquipment = 0x498; // bool
		constexpr auto bEnableCommandChat = 0x499; // bool
		constexpr auto bUseReinforcements = 0x49a; // bool
		constexpr auto Reinforcements_TimeRemaining = 0x49c; // float
		constexpr auto bRunWarmup = 0x4a0; // bool
		constexpr auto SceneCapturePlayerCameraClass = 0x4a8; // AActor*
		constexpr auto bShowEnemiesAsSuspects = 0x4b0; // bool
		constexpr auto KillFeedData = 0x4b8; // TArray<FKillFeedData>
		constexpr auto OnUpdateKillFeed = 0x4c8; // FMulticastInlineDelegate
		constexpr auto GameRulesIntroAnnouncerRowName = 0x4e0; // FString
		constexpr auto bWaitingForPlayers = 0x4f0; // bool
		constexpr auto PlanningTimeLeft = 0x4f4; // float
		constexpr auto RedTeamWins = 0x4f8; // int32_t
		constexpr auto BlueTeamWins = 0x4fc; // int32_t
		constexpr auto OnWinsUpdated = 0x508; // FMulticastInlineDelegate
		constexpr auto EndPlayTimer = 0x518; // float
		constexpr auto RoundTimeRemaining = 0x51c; // float
		constexpr auto bUseTimelimit = 0x520; // bool
		constexpr auto Scorelimit = 0x524; // int32_t
		constexpr auto TimeSinceMatchStarted = 0x528; // float
		constexpr auto CurrentReferendum = 0x530; // AReferendum*
		constexpr auto MusicManager = 0x538; // AMusicManager*
		constexpr auto AllowedReferendumTypes = 0x540; // TArray<AReferendum*>
		constexpr auto bCanShowScoreboard = 0x550; // bool
		constexpr auto bUsePlanningUICamera = 0x551; // bool
		constexpr auto RoundTimeElapsed = 0x554; // float
		constexpr auto RoundsPlayed = 0x558; // int32_t
		constexpr auto RoundsToPlay = 0x55c; // int32_t
		constexpr auto RoundWinningTeam = 0x560; // ETeamType
		constexpr auto MatchWinningTeam = 0x561; // ETeamType
		constexpr auto RoundWinners = 0x568; // TArray<AReadyOrNotPlayerState*>
		constexpr auto OnChatMessageReceived = 0x578; // FMulticastInlineDelegate
		constexpr auto MissionName = 0x588; // FString
		constexpr auto MissionDescription = 0x598; // FText
		constexpr auto MatchState = 0x5b0; // EMatchState
		constexpr auto NextURLReplicated = 0x5b8; // FString
		constexpr auto OnSequenceStarted = 0x5c8; // FMulticastInlineDelegate
		constexpr auto WhitelistedLabels = 0x5d8; // TArray<FName>
		constexpr auto DebugDisplayWidget = 0x5e8; // UDebugDisplayWidget*
		constexpr auto ModeURL_Replicated = 0x5f0; // FString
		constexpr auto DrawingPointData = 0x600; // TArray<FFloorMapPointData>
		constexpr auto bPvPMode = 0x610; // bool
		constexpr auto bCanReportToTOC = 0x611; // bool
		constexpr auto GametypeDamageModifier = 0x614; // float
		constexpr auto HeadDamageModifier = 0x618; // float
		constexpr auto FootDamageModifier = 0x61c; // float
		constexpr auto LegDamageModifier = 0x620; // float
		constexpr auto ArmDamageModifier = 0x624; // float
		constexpr auto OtherLimbDamageModifier = 0x628; // float
		constexpr auto bFreeForAll = 0x62c; // bool
		constexpr auto bDisablePickups = 0x62d; // bool
		constexpr auto bRevivesAllowed = 0x62e; // char : 1
		constexpr auto SavedChatMessages = 0x630; // TArray<FRChatMessage>
		constexpr auto bBallisticsDebug = 0x640; // bool
		constexpr auto bDamageDebug = 0x641; // bool
		constexpr auto bSpeechRecognitionDebug = 0x642; // bool
		constexpr auto bGOAPDebug = 0x643; // bool
		constexpr auto bAnnounceTeamReinforcements = 0x644; // bool
		constexpr auto Msg_BothTeamsReinforced = 0x648; // FText
		constexpr auto Msg_RedTeamReinforced = 0x660; // FText
		constexpr auto Msg_BlueTeamReinforced = 0x678; // FText
		constexpr auto GameModeChallenges = 0x690; // TArray<UChallenge*>
		constexpr auto ChallengeManager = 0x6a0; // UChallengeManager*
		constexpr auto ChallengeManagerClass = 0x6a8; // UChallengeManager*
		constexpr auto bInPlanningMenu = 0x6b0; // char : 1
		constexpr auto CustomTimeDilationApplied = 0x6b4; // float
		constexpr auto AdminPlayerControllers = 0x6b8; // TArray<APlayerController*>
		constexpr auto TOCManager = 0x6d0; // ATOCManager*
		constexpr auto MotivityThreadManager = 0x6d8; // UMotivityThreadManager*
	}

	namespace n_ASplineTrigger { // : AActor
		constexpr auto Delegate_OnSplineEnclosureEntered = 0x220; // FMulticastInlineDelegate
		constexpr auto Delegate_OnSplineEnclosureExited = 0x230; // FMulticastInlineDelegate
		constexpr auto bEnabled = 0x240; // char : 1
		constexpr auto bDrawDebugElements = 0x240; // char : 1
		constexpr auto AverageSplinePointLocation = 0x244; // FVector
		constexpr auto bIsOutsideSplineEnclosure = 0x250; // char : 1
		constexpr auto SplineComponent = 0x258; // USplineComponent*
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x260; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x270; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x290; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x2a0; // FMulticastInlineDelegate
		constexpr auto Status = 0x2b0; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x2b4; // char : 1
		constexpr auto Sequence = 0x2b8; // UMovieSceneSequence*
		constexpr auto StartTime = 0x2c0; // FFrameNumber
		constexpr auto DurationFrames = 0x2c4; // int32_t
		constexpr auto DurationSubFrames = 0x2c8; // float
		constexpr auto CurrentNumLoops = 0x2cc; // int32_t
		constexpr auto PlaybackSettings = 0x2d0; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x2e8; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x438; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x448; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x458; // UMovieSceneSequenceTickManager*
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UMaterialExpressionVertexInterpolator { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x538; // FGuid
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_AAITest { // : AActor
		constexpr auto BillboardComponent = 0x220; // UBillboardComponent*
		constexpr auto TestCharacter = 0x228; // APlayerCharacter*
		constexpr auto GiveToNearestXAI = 0x230; // int32_t
	}

	namespace n_UMaterialExpressionHairColor { // : UMaterialExpression
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x228; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x230; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2a8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2a8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2a8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2a8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2a8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2a8; // char : 1
		constexpr auto RuntimeGeneration = 0x2ac; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2b0; // float
		constexpr auto DataVersion = 0x2b4; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_AMapReferendum { // : AReferendum
		constexpr auto MapURL = 0x2a8; // FString
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_ADrone { // : AUnmannedVehicle
		constexpr auto DroneWidgetClass = 0x2c8; // UUserWidget*
		constexpr auto FPCameraRotationCurve = 0x2d0; // UCurveFloat*
		constexpr auto FPCameraRotationResetSpeed = 0x2d8; // float
		constexpr auto FPDamageCurve = 0x2e0; // UCurveVector*
		constexpr auto FPDamageSpeed = 0x2e8; // float
		constexpr auto MaxPitchTilt = 0x2ec; // float
		constexpr auto MaxRollTilt = 0x2f0; // float
		constexpr auto MaxRPM = 0x2f4; // float
		constexpr auto IdleRPM = 0x2f8; // float
		constexpr auto RPMThrottleMultiplier = 0x2fc; // float
		constexpr auto ThrottleInterpSpeed = 0x300; // float
		constexpr auto RotationInterpSpeed = 0x304; // float
		constexpr auto TurnSpeed = 0x308; // float
		constexpr auto RotationInterpSpeedWhenSteady = 0x30c; // float
		constexpr auto TurnSpeedWhenSteady = 0x310; // float
		constexpr auto MinSpeed = 0x314; // float
		constexpr auto MaxSpeed = 0x318; // float
		constexpr auto SpeedIncrementRate = 0x31c; // float
		constexpr auto DroneSpeedToDamageValues = 0x320; // TMap<EDroneDamageSpeed, float>
		constexpr auto InvincibilityTimeAfterDamageApplied = 0x370; // float
		constexpr auto RotorRotation = 0x374; // FRotator
		constexpr auto RPM = 0x380; // float
		constexpr auto CurrentAltitude = 0x384; // float
		constexpr auto CurrentPilotDistance = 0x388; // float
		constexpr auto DroneTransform = 0x390; // FTransform
		constexpr auto TargetRotation = 0x3c0; // FRotator
		constexpr auto TargetSteadyCameraRotation = 0x3cc; // FRotator
		constexpr auto bApplyingInput = 0x3d8; // bool
		constexpr auto bSteadyDrone = 0x3d9; // bool
		constexpr auto bDroneThirdPerson = 0x3da; // bool
		constexpr auto World = 0x3e0; // UWorld*
		constexpr auto DroneController = 0x3e8; // AReadyOrNotPlayerController*
		constexpr auto OriginalController = 0x3f0; // AReadyOrNotPlayerController*
		constexpr auto FlightBox = 0x418; // UBoxComponent*
		constexpr auto Mesh = 0x420; // USkeletalMeshComponent*
		constexpr auto DetectionSphere = 0x428; // USphereComponent*
		constexpr auto FloatingMovementComponent = 0x430; // UFloatingPawnMovement*
		constexpr auto TPCameraArm = 0x438; // USpringArmComponent*
		constexpr auto TPCamera = 0x440; // UCameraComponent*
		constexpr auto Audio = 0x448; // UAudioComponent*
		constexpr auto FPCamera = 0x450; // UCameraComponent*
		constexpr auto DroneWidgetHUD = 0x458; // UUserWidget*
	}

	namespace n_URadialVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UScoringComponent { // : UActorComponent
		constexpr auto bEnabled = 0xb0; // char : 1
		constexpr auto ScoringData = 0xb8; // FScoreData
		constexpr auto ScoreGroup = 0xe8; // FDataTableRowHandle
		constexpr auto ScoreGroupName = 0xf8; // FString
		constexpr auto ObjectiveLevel = 0x108; // EObjectiveLevel
		constexpr auto bAutoAddToScorePool = 0x109; // char : 1
		constexpr auto ScoreGroupDataTable = 0x118; // UDataTable*
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTextureEnableAutoImport = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto HMDFixedFoveationLevel = 0x88; // EFixedFoveationLevels
		constexpr auto CustomDepthStencil = 0x89; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd4; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MaxSkinBones = 0xf0; // FPerPlatformInt
		constexpr auto MobilePlanarReflectionMode = 0xf4; // EMobilePlanarReflectionMode
		constexpr auto bMobileSupportsGen4TAA = 0xf8; // char : 1
		constexpr auto bStreamSkeletalMeshLODs = 0xfc; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xfd; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0x100; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x118; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x130; // FSoftObjectPath
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UReloadSafelyActivity { // : UBaseActivity
		constexpr auto CoverActors = 0x1c0; // TArray<ACoverActor*>
	}

	namespace n_UWidgetsData { // : UDataAsset
		constexpr auto MagCheckUI = 0x30; // UUserWidget*
		constexpr auto FireModeUI = 0x38; // TSoftClassPtr<UObject>
		constexpr auto StartupMenu = 0x60; // TSoftClassPtr<UObject>
		constexpr auto AuthenticationMenu = 0x88; // TSoftClassPtr<UObject>
		constexpr auto MainMenu = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto OptionsMenu = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto CustomizationMenu = 0x100; // TSoftClassPtr<UObject>
		constexpr auto ChatBox = 0x128; // TSoftClassPtr<UObject>
		constexpr auto Overlays = 0x150; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Scoreboard = 0x160; // TSoftClassPtr<UObject>
		constexpr auto LoadingScreen = 0x188; // UUserWidget*
		constexpr auto MessageDisplayBoxClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto Leaderboards = 0x1b8; // TSoftClassPtr<UObject>
		constexpr auto CrosshairOverlay = 0x1e0; // TSoftClassPtr<UObject>
		constexpr auto UISoundClasses = 0x208; // TArray<USoundBase*>
		constexpr auto EscapeMenu = 0x218; // TSoftClassPtr<UObject>
		constexpr auto TacticalAuthorityWidget = 0x240; // TSoftClassPtr<UObject>
		constexpr auto WeaponWheelWidget = 0x268; // UWeaponWheelWidget*
		constexpr auto ItemSelectionWidget = 0x270; // UBaseWidget*
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UW_COOPScorePopUp_C { // : UCOOPScorePopUp
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto ScoreNotify_Container = 0x270; // UVerticalBox*
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UPhononMaterialComponent { // : UActorComponent
		constexpr auto MaterialIndex = 0xb0; // int32_t
		constexpr auto MaterialPreset = 0xb4; // EPhononMaterial
		constexpr auto LowFreqAbsorption = 0xb8; // float
		constexpr auto MidFreqAbsorption = 0xbc; // float
		constexpr auto HighFreqAbsorption = 0xc0; // float
		constexpr auto LowFreqTransmission = 0xc4; // float
		constexpr auto MidFreqTransmission = 0xc8; // float
		constexpr auto HighFreqTransmission = 0xcc; // float
		constexpr auto Scattering = 0xd0; // float
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_ACaptureTheFlagGM { // : AReadyOrNotGameMode_PVP
		constexpr auto OnFlagCaptured = 0x718; // FMulticastInlineDelegate
		constexpr auto OnFlagDropped = 0x728; // FMulticastInlineDelegate
		constexpr auto FlagClassToSpawn = 0x738; // ACTF_Flag*
	}

	namespace n_AIncriminationGM { // : AReadyOrNotGameMode_PVP
		constexpr auto MaxCluesToFind = 0x718; // char
		constexpr auto ChosenSpawnGroup_BlueTeam = 0x720; // ASpawnGenerator*
		constexpr auto ChosenSpawnGroup_RedTeam = 0x728; // ASpawnGenerator*
	}

	namespace n_UW_MapFloors_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Floors_Box = 0x268; // UVerticalBox*
		constexpr auto FloorWidgets = 0x270; // TArray<UW_MapFloor_C*>
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_AVolumetricCloud { // : AInfo
		constexpr auto VolumetricCloudComponent = 0x220; // UVolumetricCloudComponent*
	}

	namespace n_AAICharacter { // : AReadyOrNotCharacter
		constexpr auto bDeactivated = 0x1be1; // bool
		constexpr auto RecentMeleeVictim = 0x1be8; // AReadyOrNotCharacter*
		constexpr auto bHasEverShot = 0x1bf0; // bool
		constexpr auto OnDoorShotgunBreach_FromAnimNotify = 0x1bf8; // FMulticastInlineDelegate
		constexpr auto OnDoorKickBreach_FromAnimNotify = 0x1c08; // FMulticastInlineDelegate
		constexpr auto OnPendingItemThrown_FromAnimNotify = 0x1c18; // FMulticastInlineDelegate
		constexpr auto PendingThrownItem = 0x1c28; // ABaseItem*
		constexpr auto OnAITakenDamage = 0x1c30; // FMulticastInlineDelegate
		constexpr auto OnAIFire = 0x1c40; // FMulticastInlineDelegate
		constexpr auto OnAIKilled = 0x1c50; // FMulticastInlineDelegate
		constexpr auto OnCollectPendingEvidenceBegin_FromAnimNotify = 0x1c60; // FMulticastInlineDelegate
		constexpr auto OnCollectPendingEvidenceEnd_FromAnimNotify = 0x1c70; // FMulticastInlineDelegate
		constexpr auto bSurrendered = 0x1c80; // bool
		constexpr auto bSurrenderComplete = 0x1ca4; // bool
		constexpr auto BeingRestrainedBy = 0x1cb0; // AAICharacter*
		constexpr auto ThrownWeapon = 0x1cb8; // ABaseItem*
		constexpr auto ScoringComponent = 0x1cc0; // UScoringComponent*
		constexpr auto PawnSensingComp = 0x1cc8; // UPawnSensingComponent*
		constexpr auto AssignedAIData = 0x1cd0; // FAIDataLookupTable
		constexpr auto SpawnedFromSpawner = 0x1f10; // AAISpawn*
		constexpr auto ActivityRouteCollection = 0x1f18; // FActivityRouteCollection
		constexpr auto Rep_FocalPoint = 0x1f38; // FVector
		constexpr auto Rep_HeadFocalPoint = 0x1f44; // FVector
		constexpr auto Rep_FocalActor = 0x1f50; // AActor*
		constexpr auto bHeardYellFromOfficer = 0x1f58; // char : 1
		constexpr auto ArrestedTime = 0x1f5c; // float
		constexpr auto bFemale = 0x1f60; // bool
		constexpr auto bChild = 0x1f61; // bool
		constexpr auto bHitOnceByBeanbag = 0x1f62; // bool
		constexpr auto bKnockoutFacingUp = 0x1f63; // bool
		constexpr auto bIsKnockedOut = 0x1f64; // bool
		constexpr auto GetBackupMontageName = 0x1f68; // FString
		constexpr auto bFinishedKnockout = 0x1f78; // bool
		constexpr auto bFinishedKnockoutMontage = 0x1f79; // bool
		constexpr auto Unarmed_Calm_AD = 0x1f90; // UReadyOrNotCharacterAnimData*
		constexpr auto Unarmed_Sr_AD = 0x1f98; // UReadyOrNotCharacterAnimData*
		constexpr auto Unarmed_Ar_AD = 0x1fa0; // UReadyOrNotCharacterAnimData*
		constexpr auto Unarmed_Ar_Crouch_AD = 0x1fa8; // UReadyOrNotCharacterAnimData*
		constexpr auto Unarmed_Alert_AD = 0x1fb0; // UReadyOrNotCharacterAnimData*
		constexpr auto Rifle_AD = 0x1fb8; // UReadyOrNotCharacterAnimData*
		constexpr auto Pistol_AD = 0x1fc0; // UReadyOrNotCharacterAnimData*
		constexpr auto Pistol_OneHanded_AD = 0x1fc8; // UReadyOrNotCharacterAnimData*
		constexpr auto CurActiveWeaponType = 0x1fd0; // EWeaponType
		constexpr auto DesiredPseudoSpeed = 0x1fd1; // EPseudoSpeedType
		constexpr auto MoveDataOverride = 0x1fd8; // FAIMoveDataBlock
		constexpr auto CurMoveDataBlock = 0x2070; // FAIMoveDataBlock
		constexpr auto TimeSinceLastShot = 0x210c; // float
		constexpr auto TimeSinceArrest = 0x2110; // float
		constexpr auto bHasPlayedSurrenderAnim = 0x2114; // bool
		constexpr auto bIsFakeSurrender = 0x2115; // bool
		constexpr auto bHasEverFakeSurrendered = 0x2116; // bool
		constexpr auto bFinishedEquippingLoadout = 0x2117; // bool
		constexpr auto bForceFiringEnabled = 0x2118; // bool
		constexpr auto CharacterMeshData = 0x2120; // FCharacterMesh
		constexpr auto OnAimedAt = 0x21c0; // FMulticastInlineDelegate
		constexpr auto bAimingAtTarget = 0x21d0; // char : 1
		constexpr auto bHasEverAimedAtTarget = 0x21d0; // char : 1
		constexpr auto bIsFleeing = 0x21d0; // char : 1
		constexpr auto bDrawingWeapon = 0x21d0; // char : 1
		constexpr auto bPickingUpWeapon = 0x21d0; // char : 1
		constexpr auto bHasDamagedSWATTeam = 0x21d0; // char : 1
		constexpr auto bHitScannedFriendly = 0x21d0; // char : 1
		constexpr auto DrawingWeaponTime = 0x21d4; // float
		constexpr auto PickingUpWeaponTime = 0x21d8; // float
		constexpr auto CachedHitScanResult = 0x21dc; // FHitResult
		constexpr auto Rep_WorldBuildingAnimState = 0x2268; // FWorldBuildingAnimState
		constexpr auto SuspectsAndCivilianManager = 0x2288; // ASuspectsAndCivilianManager*
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UMotivityTweakData { // : UObject
		constexpr auto PredictionData = 0x28; // FMotivityTimeData
		constexpr auto CalibrationData = 0x38; // FMotivityCalibrationData
	}

	namespace n_ARicochetImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UAREnvironmentProbeComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UAnimNotify_SpawnWeapon { // : UAnimNotify
		constexpr auto PotentialWeapons = 0x38; // TArray<ABaseMagazineWeapon*>
	}

	namespace n_AQuestManager { // : AInfo
		constexpr auto bIsQuestActive = 0x220; // bool
		constexpr auto QuestNodes = 0x228; // TArray<UBaseQuestNode*>
		constexpr auto ActiveQuestNode = 0x238; // UBaseQuestNode*
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x220; // TArray<AActor*>
	}

	namespace n_UBTTask_FinishWithResult { // : UBTTaskNode
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_AGrenadeLauncher { // : ABaseMagazineWeapon
		constexpr auto AppliedGrenadeProjectilePaths = 0x1260; // TArray<AGrenadeProjectile*>
		constexpr auto LastSimulatedGrenade = 0x1270; // AGrenadeProjectile*
		constexpr auto LaunchDistance = 0x1278; // float
		constexpr auto GrenadeBounciness = 0x127c; // float
		constexpr auto BounceParticleEffect = 0x1288; // UParticleSystem*
		constexpr auto BounceFMODEvent = 0x1290; // UFMODEvent*
		constexpr auto FirstBouncePath = 0x1298; // TArray<FVector>
		constexpr auto FirstBounceHit = 0x12a8; // FHitResult
		constexpr auto SecondBouncePath = 0x1338; // TArray<FVector>
		constexpr auto SecondBounceHit = 0x1348; // FHitResult
		constexpr auto ThirdBouncePath = 0x13d8; // TArray<FVector>
		constexpr auto ThirdBounceHit = 0x13e8; // FHitResult
		constexpr auto CompletePath = 0x1478; // TArray<FVector_NetQuantize>
		constexpr auto BouncePt1 = 0x1488; // int32_t
		constexpr auto BouncePt2 = 0x148c; // int32_t
		constexpr auto BouncePt3 = 0x1490; // int32_t
	}

	namespace n_UDisarmC2Activity { // : UBaseActivity
		constexpr auto PlacedC2 = 0x1b0; // APlacedC2Explosive*
	}

	namespace n_UFriendsList_Entry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Avatar = 0x268; // UImage*
		constexpr auto btn_Join = 0x270; // UW_Button_C*
		constexpr auto Status = 0x278; // UTextBlock*
		constexpr auto TextBlock_1 = 0x280; // UTextBlock*
		constexpr auto VerticalBox_2 = 0x288; // UVerticalBox*
		constexpr auto Friend = 0x290; // FFriend
		constexpr auto bFoundLobby = 0x2f0; // bool
		constexpr auto FriendSession = 0x2f8; // FBlueprintSessionResult
		constexpr auto StatusText = 0x400; // FText
		constexpr auto Modes = 0x418; // TArray<AReadyOrNotGameMode*>
		constexpr auto PlayingMode = 0x428; // AReadyOrNotGameMode*
		constexpr auto TimeUntilNextRefresh = 0x430; // float
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x258; // UProceduralFoliageComponent*
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack { // : UMovieSceneNiagaraParameterTrack
		constexpr auto ChannelsUsed = 0xc8; // int32_t
	}

	namespace n_USoundSubmixWithParentBase { // : USoundSubmixBase
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UDebugCameraControllerSettings { // : UDeveloperSettings
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UVOIPTalker { // : UActorComponent
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_ULiveLinkVirtualSubject { // : UObject
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto bRebroadcastSubject = 0x58; // bool
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x220; // ULightmassPortalComponent*
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UBrushStampIndicator { // : UInteractiveGizmo
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UNiagaraDataInterfaceRenderTargetCube { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // int32_t
		constexpr auto OverrideRenderTargetFormat = 0xdc; // ETextureRenderTargetFormat
		constexpr auto bInheritUserParameterSettings = 0xdd; // char : 1
		constexpr auto bOverrideFormat = 0xdd; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe0; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x100; // TMap<uint64_t, UTextureRenderTargetCube*>
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto MipMapGeneration = 0xe0; // ENiagaraMipMapGeneration
		constexpr auto OverrideRenderTargetFormat = 0xe1; // ETextureRenderTargetFormat
		constexpr auto bInheritUserParameterSettings = 0xe2; // char : 1
		constexpr auto bOverrideFormat = 0xe2; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x158; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto MaxSendRate = 0x2c; // float
		constexpr auto AutoRepairAttemptLimit = 0x30; // uint32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x34; // bool
		constexpr auto UnicastEndpoint = 0x38; // FString
		constexpr auto MulticastEndpoint = 0x48; // FString
		constexpr auto MessageFormat = 0x58; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x59; // char
		constexpr auto StaticEndpoints = 0x60; // TArray<FString>
		constexpr auto EnableTunnel = 0x70; // bool
		constexpr auto TunnelUnicastEndpoint = 0x78; // FString
		constexpr auto TunnelMulticastEndpoint = 0x88; // FString
		constexpr auto RemoteTunnelEndpoints = 0x98; // TArray<FString>
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UCursor_TextEntry_C { // : UCursorWidget
		constexpr auto Mouse = 0x260; // UImage*
	}

	namespace n_UNiagaraLightRendererProperties { // : UNiagaraRendererProperties
		constexpr auto bUseInverseSquaredFalloff = 0x78; // char : 1
		constexpr auto bAffectsTranslucency = 0x78; // char : 1
		constexpr auto bAlphaScalesBrightness = 0x78; // char : 1
		constexpr auto RadiusScale = 0x7c; // float
		constexpr auto DefaultExponent = 0x80; // float
		constexpr auto ColorAdd = 0x84; // FVector
		constexpr auto RendererVisibility = 0x90; // int32_t
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x2a8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UAssetManager { // : UObject
		constexpr auto ObjectReferenceList = 0x2e0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2f0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2f1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2f2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2f3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2f4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2f5; // bool
		constexpr auto bIsBulkScanning = 0x2f6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2f7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2f8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2f9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2fa; // bool
		constexpr auto bHasCompletedInitialScan = 0x2fb; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2fc; // int32_t
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UMainMenu { // : UUserWidget
		constexpr auto VersionPrefix = 0x260; // FString
		constexpr auto BackendConnectionStatus = 0x270; // TMap<ELoginState, FText>
		constexpr auto BackendConnectionStatusColor = 0x2c0; // TMap<ELoginState, FSlateColor>
		constexpr auto BackgroundCanvas = 0x310; // UCanvasPanel*
		constexpr auto PlayBtn = 0x318; // UUserWidget*
		constexpr auto FindSessionBtn = 0x320; // UUserWidget*
		constexpr auto OptionsBtn = 0x328; // UUserWidget*
		constexpr auto BugsBtn = 0x330; // UUserWidget*
		constexpr auto QuitBtn = 0x338; // UUserWidget*
		constexpr auto PlaySinglePlayerBtn = 0x340; // UUserWidget*
		constexpr auto PlayPublicLobbyBtn = 0x348; // UUserWidget*
		constexpr auto PlayFriendsOnlyBtn = 0x350; // UUserWidget*
		constexpr auto FindSessionCancelBtn = 0x358; // UUserWidget*
		constexpr auto Txt_BackEndConnection = 0x360; // UTextBlock*
		constexpr auto Txt_PublicLobbyCooldown = 0x368; // UTextBlock*
		constexpr auto bEnableFindSessionButton = 0x370; // char : 1
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto ShadowCascadeBiasDistribution = 0x328; // float
		constexpr auto bEnableLightShaftOcclusion = 0x32c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x330; // float
		constexpr auto OcclusionDepthRange = 0x334; // float
		constexpr auto LightShaftOverrideDirection = 0x338; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x344; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x348; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x34c; // float
		constexpr auto DynamicShadowCascades = 0x350; // int32_t
		constexpr auto CascadeDistributionExponent = 0x354; // float
		constexpr auto CascadeTransitionFraction = 0x358; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x35c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x360; // char : 1
		constexpr auto FarShadowCascadeCount = 0x364; // int32_t
		constexpr auto FarShadowDistance = 0x368; // float
		constexpr auto DistanceFieldShadowDistance = 0x36c; // float
		constexpr auto LightSourceAngle = 0x370; // float
		constexpr auto LightSourceSoftAngle = 0x374; // float
		constexpr auto ShadowSourceAngleFactor = 0x378; // float
		constexpr auto TraceDistance = 0x37c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x380; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x384; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x388; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x398; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x398; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x398; // char : 1
		constexpr auto bCastCloudShadows = 0x398; // char : 1
		constexpr auto CloudShadowStrength = 0x39c; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3a4; // float
		constexpr auto CloudShadowDepthBias = 0x3a8; // float
		constexpr auto CloudShadowExtent = 0x3ac; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3b4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3b8; // FLinearColor
		constexpr auto LightmassSettings = 0x3c8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3d8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3dc; // FColor
		constexpr auto ShadowAmount = 0x3e0; // float
	}

	namespace n_UANIMBP_Taser_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x3d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x4f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto Mag01Alpha = 0x518; // float
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UDoorBreachActivity { // : UDoorInteractionActivity
		constexpr auto OriginalLocation = 0x1d0; // FVector
	}

	namespace n_ALadder { // : AActor
		constexpr auto BoxCollision = 0x220; // UBoxComponent*
		constexpr auto LadderMesh = 0x228; // UStaticMeshComponent*
	}

	namespace n_UW_WeaponWheel_ItemStat_C { // : UWeaponWheel_ItemStat_Base
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Stat_Container = 0x268; // UHorizontalBox*
		constexpr auto StatName_Text = 0x270; // UW_StandardText_C*
		constexpr auto StatVisual_ProgressBar = 0x278; // UProgressBar*
		constexpr auto StatName = 0x280; // FText
		constexpr auto ProgressBarValue = 0x298; // float
		constexpr auto MaxStatValue = 0x29c; // float
		constexpr auto bIsAnimating = 0x2a0; // bool
		constexpr auto TimeElapsed = 0x2a4; // float
		constexpr auto FillSpeed = 0x2a8; // float
		constexpr auto TargetPercent = 0x2ac; // float
		constexpr auto EasingFunction = 0x2b0; // EEasingFunc
		constexpr auto ItemLookupTable = 0x2c0; // FItemLookupTable
		constexpr auto WheelSize = 0x860; // float
		constexpr auto MaxWheelSize = 0x864; // float
		constexpr auto WidgetSize = 0x868; // FVector2D
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UParticleSystem { // : UFXSystemAsset
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UMotivityProcessedData { // : UObject
		constexpr auto PoseInterval = 0x28; // float
		constexpr auto PoseCandidates = 0x30; // TArray<FMotionCandidate>
		constexpr auto IdlePoseCandidates = 0x40; // TArray<FMotionCandidate>
		constexpr auto ReferencedBones = 0x50; // TArray<FName>
		constexpr auto AnimationsInMemory = 0x60; // TArray<UAnimSequence*>
		constexpr auto IdleAnimationsInMemory = 0x70; // TArray<UAnimSequence*>
		constexpr auto ReferencedSkeleton = 0x80; // USkeleton*
		constexpr auto PredictionData = 0x88; // FMotivityTimeData
		constexpr auto CalibrationData = 0x98; // FMotivityCalibrationData
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UMovieSceneGeometryCollectionTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto Timelimit = 0x68; // float
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x220; // float
		constexpr auto bLockOrientationToRail = 0x224; // bool
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto RailSplineComponent = 0x230; // USplineComponent*
		constexpr auto RailCameraMount = 0x238; // USceneComponent*
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UBoundsCopyComponent { // : UActorComponent
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UGizmoCircleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x470; // FVector
		constexpr auto Radius = 0x47c; // float
		constexpr auto Thickness = 0x480; // float
		constexpr auto NumSides = 0x484; // int32_t
		constexpr auto bViewAligned = 0x488; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x489; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_UW_SettingsMenu_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AdvancedGraphicsHeader = 0x268; // UW_Header_C*
		constexpr auto AdvancedGraphicsSettings = 0x270; // UVerticalBox*
		constexpr auto AdvanceMirrorOptionsHeader = 0x278; // UW_Header_C*
		constexpr auto AdvanceMirrorOptionsHeader_2 = 0x280; // UW_Header_C*
		constexpr auto AdvanceOptiwandOptionsHeader = 0x288; // UW_Header_C*
		constexpr auto AdvGrahpics_Check_BounceLight = 0x290; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_DepthOfField = 0x298; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_FlashlightShadows = 0x2a0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_FrameLimit = 0x2a8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_MeshPainting = 0x2b0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_MotionBlurEnable = 0x2b8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_OptiwandFPSEnabled = 0x2c0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_Raytracing = 0x2c8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_RaytracingAmbientOcclusion = 0x2d0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_RaytracingGlobalIllumination = 0x2d8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_RaytracingReflections = 0x2e0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_RaytracingShadows = 0x2e8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_RaytracingTranslucency = 0x2f0; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Check_VSync = 0x2f8; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Checkbox_DecalsEnabled = 0x300; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Checkbox_MirrorAntiAlias = 0x308; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Checkbox_MirrorDecals = 0x310; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Checkbox_MirrorDynamicShadows = 0x318; // UW_StandardCheckbox_C*
		constexpr auto AdvGraphics_Slider_AAQuality = 0x320; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_DecalDensity = 0x328; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_DecalFadeScreenSize = 0x330; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_DLSSQuality = 0x338; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_EffectsQuality = 0x340; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_FrameLimiter = 0x348; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_FSRQuality = 0x350; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_MirrorFPS = 0x358; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_MirrorFPS_2 = 0x360; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_MirrorScale = 0x368; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_MotionBlurScale = 0x370; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_OptiwandFPS = 0x378; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_OptiwandScale = 0x380; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_PPQuality = 0x388; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_ShadowQuality = 0x390; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_TextureQuality = 0x398; // UW_StandardSlider_C*
		constexpr auto AdvGraphics_Slider_ViewDistance = 0x3a0; // UW_StandardSlider_C*
		constexpr auto ApplySettingsButton = 0x3a8; // UW_StandardButton_C*
		constexpr auto Audio_Slider_MasterVolume = 0x3b0; // UW_StandardSlider_C*
		constexpr auto Audio_Slider_MicGainVolume = 0x3b8; // UW_StandardSlider_C*
		constexpr auto Audio_Slider_MusicVolume = 0x3c0; // UW_StandardSlider_C*
		constexpr auto Audio_Slider_SFXVolume = 0x3c8; // UW_StandardSlider_C*
		constexpr auto Audio_Slider_UIVolume = 0x3d0; // UW_StandardSlider_C*
		constexpr auto Audio_Slider_VOIPVolume = 0x3d8; // UW_StandardSlider_C*
		constexpr auto AudioHeader = 0x3e0; // UW_Header_C*
		constexpr auto AudioOptionsButton = 0x3e8; // UW_StandardRadioButton_C*
		constexpr auto BasicGraphicsHeader = 0x3f0; // UW_Header_C*
		constexpr auto Blackout = 0x3f8; // UImage*
		constexpr auto btn_Apply = 0x400; // UW_Button_C*
		constexpr auto btn_AudioOptions = 0x408; // UW_Button_C*
		constexpr auto btn_ControlOptions = 0x410; // UW_Button_C*
		constexpr auto btn_ControlsEquipment = 0x418; // UW_Button_C*
		constexpr auto btn_ControlsInteraction = 0x420; // UW_Button_C*
		constexpr auto btn_ControlsMisc = 0x428; // UW_Button_C*
		constexpr auto btn_ControlsMovement = 0x430; // UW_Button_C*
		constexpr auto btn_ControlsTeamwork = 0x438; // UW_Button_C*
		constexpr auto btn_ControlsVehicle = 0x440; // UW_Button_C*
		constexpr auto btn_Exit = 0x448; // UW_Button_C*
		constexpr auto btn_GameOptions = 0x450; // UW_Button_C*
		constexpr auto btn_GraphicsOptions = 0x458; // UW_Button_C*
		constexpr auto btn_Reset = 0x460; // UW_Button_C*
		constexpr auto CommandHeader = 0x468; // UW_Header_C*
		constexpr auto ControlOptionsButton = 0x470; // UW_StandardRadioButton_C*
		constexpr auto Controls_Equipment = 0x478; // UW_StandardRadioButton_C*
		constexpr auto Controls_Equipment_Widget = 0x480; // UGridPanel*
		constexpr auto Controls_Interaction = 0x488; // UW_StandardRadioButton_C*
		constexpr auto Controls_Interaction_Widget = 0x490; // UGridPanel*
		constexpr auto Controls_Misc = 0x498; // UW_StandardRadioButton_C*
		constexpr auto Controls_Miscellaneous_Widget = 0x4a0; // UGridPanel*
		constexpr auto Controls_Movement = 0x4a8; // UW_StandardRadioButton_C*
		constexpr auto Controls_Movement_Widget = 0x4b0; // UGridPanel*
		constexpr auto Controls_Teamwork = 0x4b8; // UW_StandardRadioButton_C*
		constexpr auto Controls_Teamwork_Widget = 0x4c0; // UGridPanel*
		constexpr auto Controls_Vehicle_Widget = 0x4c8; // UGridPanel*
		constexpr auto Controls_Vehicles = 0x4d0; // UW_StandardRadioButton_C*
		constexpr auto ControlsWidgetSwitcher = 0x4d8; // UWidgetSwitcher*
		constexpr auto CopySupporterCode = 0x4e0; // UW_Button_C*
		constexpr auto DescriptionText = 0x4e8; // UTextBlock*
		constexpr auto DLSS_Header = 0x4f0; // UW_Header_C*
		constexpr auto DLSSQualityLabel = 0x4f8; // UW_SettingLabel_C*
		constexpr auto ExitSettingsMenu = 0x500; // UW_StandardButton_C*
		constexpr auto FSR_Header = 0x508; // UW_Header_C*
		constexpr auto FSRQualityLabel = 0x510; // UW_SettingLabel_C*
		constexpr auto GameOptionsButton = 0x518; // UW_StandardRadioButton_C*
		constexpr auto GraphicOptionsButton = 0x520; // UW_StandardRadioButton_C*
		constexpr auto GraphicOptionsSwitcher = 0x528; // UWidgetSwitcher*
		constexpr auto HighFOVWarning = 0x530; // UTextBlock*
		constexpr auto HudHeader = 0x538; // UW_Header_C*
		constexpr auto KeybindDescriptionText = 0x540; // UTextBlock*
		constexpr auto LanguageHeader = 0x548; // UW_Header_C*
		constexpr auto MirrorWarning = 0x550; // UTextBlock*
		constexpr auto MiscHeader = 0x558; // UW_Header_C*
		constexpr auto MouseHeader = 0x560; // UW_Header_C*
		constexpr auto Options_Checkbox_InvertMousePitch = 0x568; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_InvertMouseYaw = 0x570; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ServersideChecksum = 0x578; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowChat = 0x580; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowCommandContextHint = 0x588; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowCommandMarkers = 0x590; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowCompass = 0x598; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowFPS = 0x5a0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowHealthIcons = 0x5a8; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowHesitationBar = 0x5b0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowHotkeys = 0x5b8; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowHUD = 0x5c0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowIcons = 0x5c8; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowNames = 0x5d0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowPatches = 0x5d8; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_ShowTeamStatus = 0x5e0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_StaticReload = 0x5e8; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_SwayHUD = 0x5f0; // UW_StandardCheckbox_C*
		constexpr auto Options_Checkbox_TeamViewFPS = 0x5f8; // UW_StandardCheckbox_C*
		constexpr auto Options_Combo_CommandStyle = 0x600; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_DefaultOpenDoorCommand = 0x608; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_DefaultSurfaceCommand = 0x610; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_DefaultTargetCommand = 0x618; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_DefaultUnknownDoorCommand = 0x620; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_EmptyMagReloadStyle = 0x628; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_GrenadeStyle = 0x630; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_InputAudioDevice = 0x638; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_ItemSelectionStyle = 0x640; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_Language = 0x648; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_LockedDoorcommand = 0x650; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_OptiwandViewMode = 0x658; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_ScoreReadoutMode = 0x660; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_ShotgunReloadStyle = 0x668; // UW_StandardCombobox_New_C*
		constexpr auto Options_Combo_UnlockedDoorCommand = 0x670; // UW_StandardCombobox_New_C*
		constexpr auto Options_Image_PatchPreview = 0x678; // UImage*
		constexpr auto Options_Slider_FreelookSensitivity = 0x680; // UW_StandardSlider_C*
		constexpr auto Options_Slider_MouseSensitivity = 0x688; // UW_StandardSlider_C*
		constexpr auto Options_Slider_TeamView_PIP_FPS = 0x690; // UW_StandardSlider_C*
		constexpr auto Options_Text_PatchPreview = 0x698; // UTextBlock*
		constexpr auto Options_Textbox_OfficerName = 0x6a0; // UEditableTextBox*
		constexpr auto Options_Textbox_PatchURL = 0x6a8; // UEditableTextBox*
		constexpr auto PresetsHeader = 0x6b0; // UW_Header_C*
		constexpr auto ProfilingBtn = 0x6b8; // UW_Button_C*
		constexpr auto ProfilingHeader = 0x6c0; // UW_Header_C*
		constexpr auto ProfilingSubCategory = 0x6c8; // UVerticalBox*
		constexpr auto RaytracingAmbientOcclusion = 0x6d0; // UW_SettingLabel_C*
		constexpr auto RayTracingEnabledLabel = 0x6d8; // UW_SettingLabel_C*
		constexpr auto RayTracingHeader = 0x6e0; // UW_Header_C*
		constexpr auto RaytracingReflectionsLabel = 0x6e8; // UW_SettingLabel_C*
		constexpr auto RaytracingShadowsLabel = 0x6f0; // UW_SettingLabel_C*
		constexpr auto ResetKeybindsButton = 0x6f8; // UW_StandardButton_C*
		constexpr auto ServerHeader = 0x700; // UW_Header_C*
		constexpr auto ServerSubCategory = 0x708; // UVerticalBox*
		constexpr auto SettingsSwitcher = 0x710; // UWidgetSwitcher*
		constexpr auto SimpleGraphics_ADSZoom = 0x718; // UW_StandardCheckbox_C*
		constexpr auto SimpleGraphics_Combo_Preset = 0x720; // UW_StandardCombobox_New_C*
		constexpr auto SimpleGraphics_Combo_ScreenMode = 0x728; // UW_StandardCombobox_New_C*
		constexpr auto SimpleGraphics_MirrorEnabled = 0x730; // UW_StandardCheckbox_C*
		constexpr auto SimpleGraphics_Slider_FieldOfView = 0x738; // UW_StandardSlider_C*
		constexpr auto SimpleGraphics_Slider_Resolution = 0x740; // UW_StandardSlider_C*
		constexpr auto SimpleGraphics_Slider_ResolutionScale = 0x748; // UW_StandardSlider_C*
		constexpr auto SimpleGraphics_Slider_SafeZone_X = 0x750; // UW_StandardSlider_C*
		constexpr auto SimpleGraphics_Slider_SafeZone_Y = 0x758; // UW_StandardSlider_C*
		constexpr auto SimpleGraphicsSettings = 0x760; // UVerticalBox*
		constexpr auto Supporter_Header = 0x768; // UW_Header_C*
		constexpr auto SupporterSubCategory = 0x770; // UVerticalBox*
		constexpr auto Tab_AdvancedGraphicOptions = 0x778; // UW_StandardRadioButton_C*
		constexpr auto Tab_AdvancedGraphicsOptions = 0x780; // UW_Button_C*
		constexpr auto Tab_Audio = 0x788; // UScrollBox*
		constexpr auto Tab_BasicGraphicOptions = 0x790; // UW_StandardRadioButton_C*
		constexpr auto Tab_Controls = 0x798; // UVerticalBox*
		constexpr auto Tab_Game = 0x7a0; // UScrollBox*
		constexpr auto Tab_Graphics = 0x7a8; // UVerticalBox*
		constexpr auto Tab_SimpleGraphicsOptions = 0x7b0; // UW_Button_C*
		constexpr auto VideoOptionsModal = 0x7b8; // UW_StandardModal_C*
		constexpr auto W_PageHeader = 0x7c0; // UW_PageHeader_C*
		constexpr auto MovementControls = 0x7c8; // TArray<FSKeybinding>
		constexpr auto DroneControls = 0x7d8; // TArray<FSKeybinding>
		constexpr auto EquipmentControls = 0x7e8; // TArray<FSKeybinding>
		constexpr auto InteractionControls = 0x7f8; // TArray<FSKeybinding>
		constexpr auto TeamworkControls = 0x808; // TArray<FSKeybinding>
		constexpr auto MiscellaneousControls = 0x818; // TArray<FSKeybinding>
		constexpr auto Temp_FirstInput = 0x828; // UW_ControlsBind_C*
		constexpr auto Temp_SecondInput = 0x830; // UW_ControlsBind_C*
		constexpr auto BindNamePadding = 0x838; // FMargin
		constexpr auto Bind1Padding = 0x848; // FMargin
		constexpr auto Bind2Padding = 0x858; // FMargin
		constexpr auto BindResetPadding = 0x868; // FMargin
		constexpr auto VideoSettingsChanged = 0x878; // bool
		constexpr auto GraphicsPresets = 0x880; // TArray<FSGraphicPreset>
		constexpr auto StagedResolution = 0x890; // FString
		constexpr auto StagedResolutionScale = 0x8a0; // float
		constexpr auto StagedFOV = 0x8a4; // int32_t
		constexpr auto StagedGraphicsPreset = 0x8a8; // FSGraphicPreset
		constexpr auto StagedScreenMode = 0x8d4; // int32_t
		constexpr auto OnMenuExited = 0x8d8; // FMulticastInlineDelegate
		constexpr auto PatchPreviewURL = 0x8e8; // FString
		constexpr auto DefaultPatchPreviewBrush = 0x8f8; // FSlateBrush
		constexpr auto ListeningBinding = 0x980; // UW_ControlsBind_C*
		constexpr auto bShowBlackout = 0x988; // bool
		constexpr auto ConflictingBindPending = 0x990; // UW_ControlsBind_C*
		constexpr auto ConflictingBindFormat = 0x998; // FText
		constexpr auto IsAxis = 0x9b0; // bool
		constexpr auto CharacterControls = 0x9b8; // TArray<FSKeybinding>
		constexpr auto SharedControls = 0x9c8; // TArray<FSKeybinding>
		constexpr auto AxesControlBinds = 0x9d8; // TMap<UW_ControlsBind_C*, FAxisMappingStruct>
		constexpr auto ActionsControlBinds = 0xa28; // TMap<UW_ControlsBind_C*, FActionMappingStruct>
		constexpr auto UnbindableControls = 0xa78; // TArray<FSKeybinding>
		constexpr auto ConflictDetectedPopUp = 0xa88; // UW_BindConflictModal_C*
		constexpr auto IllegalKeyConflictDetectedPopUp = 0xa90; // UW_IllegalUnbindModal_C*
		constexpr auto BindConflictModalDetails = 0xa98; // FSStandardModalDetails
		constexpr auto IllegalKeyConflictModalDetails = 0xb10; // FSStandardModalDetails
		constexpr auto ActivePageButton = 0xb88; // UW_Button_C*
		constexpr auto ActiveControlTabButton = 0xb90; // UW_Button_C*
		constexpr auto ControlTabInit = 0xb98; // bool
		constexpr auto DecalsStateChanged = 0xb99; // bool
	}

	namespace n_ABasePlayer_Customization_C { // : AReadyOrNotCharacter
		constexpr auto CameraCapture = 0x10d0; // USceneCaptureComponent2D*
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x220; // UReflectionCaptureComponent*
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UPersonalizationWidget { // : UUserWidget
		constexpr auto SpawnedFromPortal = 0x260; // ACharacterCustomizationPortal*
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_USendFriendInviteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto BadPacketLossThreshold = 0x220; // float
		constexpr auto SeverePacketLossThreshold = 0x224; // float
		constexpr auto BadPingThreshold = 0x228; // int32_t
		constexpr auto SeverePingThreshold = 0x22c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x230; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x234; // float
		constexpr auto TotalNetBandwidth = 0x238; // int32_t
		constexpr auto MinDynamicBandwidth = 0x23c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x240; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x244; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x244; // char : 1
		constexpr auto StandbyRxCheatTime = 0x248; // float
		constexpr auto StandbyTxCheatTime = 0x24c; // float
		constexpr auto PercentMissingForRxStandby = 0x250; // float
		constexpr auto PercentMissingForTxStandby = 0x254; // float
		constexpr auto PercentForBadPing = 0x258; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x25c; // float
		constexpr auto MoveRepSize = 0x260; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x264; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x268; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x26c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x270; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x274; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x278; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x27c; // float
		constexpr auto MaxMoveDeltaTime = 0x280; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x284; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x288; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x290; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x294; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x298; // int32_t
		constexpr auto ClientAuthorativePosition = 0x29c; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2a4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2a8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2ac; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2ad; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2b4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2bc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c1; // bool
	}

	namespace n_URichTextBlockImageDecorator { // : URichTextBlockDecorator
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_AMotivityCharacter { // : ACharacter
		constexpr auto CameraBoom = 0x4b8; // USpringArmComponent*
		constexpr auto FollowCamera = 0x4c0; // UCameraComponent*
		constexpr auto BaseTurnRate = 0x4c8; // float
		constexpr auto BaseLookUpRate = 0x4cc; // float
		constexpr auto Goal = 0x4f0; // FTrajectoryData
		constexpr auto MaxSpeed = 0x578; // float
		constexpr auto CurInputVector = 0x5c8; // FVector
		constexpr auto SampleRate = 0x5e0; // float
		constexpr auto posBias = 0x5e4; // float
		constexpr auto dirBias = 0x5e8; // float
		constexpr auto posBiasMultiplier = 0x5ec; // float
		constexpr auto dirBiasMultiplier = 0x5f0; // float
		constexpr auto CurrentInputMode = 0x5f4; // EMotivityInputMode
		constexpr auto CurrentMovementMode = 0x5f6; // EMotivityMovementMode
		constexpr auto bIsStrafing = 0x5f7; // bool
		constexpr auto bIsMoving = 0x5f8; // bool
		constexpr auto bIsNearlyAtDestination = 0x600; // bool
		constexpr auto bUseDecoupling = 0x620; // bool
		constexpr auto maxDecouple = 0x63c; // float
		constexpr auto maxAngleDecouple = 0x640; // float
		constexpr auto LastInputVector_Replicated = 0x644; // FVector
		constexpr auto StickInput_Replicated = 0x650; // FVector
		constexpr auto CurrentMoveDatabase = 0x660; // UDataTable*
		constexpr auto DefaultMoveStyleIndex = 0x668; // int32_t
		constexpr auto CurrentMoveStyle = 0x670; // FMovementStyle
		constexpr auto CurMoveStyleIndex = 0x698; // int32_t
		constexpr auto CurrentGaitIndex = 0x69c; // int32_t
		constexpr auto bhasInputThisFrame = 0x6a0; // bool
		constexpr auto CurrentMotivityTag = 0x6a4; // FName
		constexpr auto TrajectoryGoalReachTolerance = 0x704; // float
		constexpr auto DestinationRotation_Replicated = 0x708; // float
		constexpr auto bHasOverridenGait = 0x70c; // bool
		constexpr auto bHasReachedLastPoint = 0x70d; // bool
		constexpr auto bEnableTrajErrorWarping = 0x70e; // bool
		constexpr auto WarpRate = 0x710; // float
		constexpr auto MinTrajectoryLength = 0x714; // float
		constexpr auto ErrorActivationRange = 0x718; // FVector2D
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceCubeTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTextureCube*
	}

	namespace n_UGizmoAxisRotationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpressionRerouteBase
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneCompiledData { // : UObject
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy { // : UClothPhysicalMeshDataBase_Legacy
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_ALadderSnapZone { // : AActor
		constexpr auto SelectionZone = 0x220; // UBoxComponent*
		constexpr auto GhostLadder = 0x228; // USkeletalMeshComponent*
		constexpr auto Collision = 0x230; // UBoxComponent*
		constexpr auto SceneRoot = 0x238; // USceneComponent*
		constexpr auto ValidPlacementMaterial = 0x240; // UMaterial*
		constexpr auto InvalidPlacementMaterial = 0x248; // UMaterial*
		constexpr auto MaxRetractedRungCount = 0x250; // float
		constexpr auto bHorizontal = 0x254; // bool
		constexpr auto AttachedLadder = 0x258; // ATelescopicLadder*
		constexpr auto bUnableToPlace = 0x260; // bool
		constexpr auto NumberOverlappers = 0x264; // int32_t
	}

	namespace n_UTakeHostageActivity { // : UBaseActivity
		constexpr auto Hostage = 0x1b0; // AAICharacter*
	}

	namespace n_UW_ReadyRoomWidget_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_158 = 0x268; // UImage*
		constexpr auto img_SelectedMissionImg = 0x270; // UImage*
		constexpr auto SelectedMissionPanel = 0x278; // UBorder*
		constexpr auto txt_readycount = 0x280; // UW_Text_C*
		constexpr auto txt_SelectedMissionDesignation = 0x288; // UW_Text_C*
		constexpr auto txt_SelectedMissionName = 0x290; // UW_Text_C*
		constexpr auto Opacity = 0x298; // float
		constexpr auto In Delta Time = 0x29c; // float
	}

	namespace n_UNiagaraDataInterfaceExport { // : UNiagaraDataInterface
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_USynth2DSlider { // : UWidget
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_MP5A2_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x3d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4d8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x4f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x518; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByEnum = 0x5d8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x708; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x808; // FAnimNode_SequencePlayer
		constexpr auto Mag01Alpha = 0x888; // float
		constexpr auto CurrentFireMode = 0x88c; // char
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto reflection = 0x54; // FExpressionInput
	}

	namespace n_ADatasmithSceneActor { // : AActor
		constexpr auto Scene = 0x220; // UDatasmithScene*
		constexpr auto RelatedActors = 0x228; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x238; // FVector
		constexpr auto FoliageVelocity = 0x244; // FVector
		constexpr auto FoliageForce = 0x250; // FVector
		constexpr auto FoliagePosition = 0x25c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x268; // float
		constexpr auto FoliageTouchImpulseScale = 0x26c; // float
		constexpr auto FoliageStiffness = 0x270; // float
		constexpr auto FoliageStiffnessQuadratic = 0x274; // float
		constexpr auto FoliageDamping = 0x278; // float
		constexpr auto MaxDamageImpulse = 0x27c; // float
		constexpr auto MaxTouchImpulse = 0x280; // float
		constexpr auto MaxForce = 0x284; // float
		constexpr auto Mass = 0x288; // float
	}

	namespace n_UFootstepFoleyComponent { // : UBoxComponent
		constexpr auto SetEventTo = 0x478; // UFMODEvent*
		constexpr auto SetEventToRemote = 0x480; // UFMODEvent*
		constexpr auto bPlayOnPlayer = 0x488; // bool
		constexpr auto bPlayEveryStep = 0x489; // bool
	}

	namespace n_UReadyOrNotGameUserSettings { // : UGameUserSettings
		constexpr auto MasterSoundVolume = 0x120; // float
		constexpr auto MusicSoundVolume = 0x124; // float
		constexpr auto UISoundVolume = 0x128; // float
		constexpr auto SFXSoundVolume = 0x12c; // float
		constexpr auto VOIPVolume = 0x130; // float
		constexpr auto bHitmarkerSfxEnabled = 0x134; // bool
		constexpr auto MouseSensitivity = 0x138; // float
		constexpr auto FreelookSensitivity = 0x13c; // float
		constexpr auto TargetLocale = 0x140; // FString
		constexpr auto FieldOfView = 0x150; // float
		constexpr auto LadderRollSensitivity = 0x154; // float
		constexpr auto bToggleADS = 0x158; // bool
		constexpr auto MaxShellsInWorld = 0x15c; // int32_t
		constexpr auto MaxShellLifeTime = 0x160; // float
		constexpr auto bUseMeshPainting = 0x164; // bool
		constexpr auto LastConnectedServerIP = 0x168; // FString
		constexpr auto IconScale = 0x178; // float
		constexpr auto QuickThrowScale = 0x17c; // float
		constexpr auto bWorldDecalsEnabled = 0x180; // bool
		constexpr auto WorldDecalScreenFadeSize = 0x184; // float
		constexpr auto WorldDecalDensity = 0x188; // float
		constexpr auto FireModeDisplayOption = 0x18c; // int32_t
		constexpr auto TeamViewFPS = 0x190; // int32_t
		constexpr auto bTeamViewFPSEnabled = 0x194; // bool
		constexpr auto bShowFPS = 0x195; // bool
		constexpr auto bShowHUD = 0x196; // bool
		constexpr auto bShowCompass = 0x197; // bool
		constexpr auto bShowWeaponHUD = 0x198; // bool
		constexpr auto bShowMagazineHUD = 0x199; // bool
		constexpr auto bShowChat = 0x19a; // bool
		constexpr auto bEnableHUDSwaying = 0x19b; // bool
		constexpr auto bShowHotkeyHints = 0x19c; // bool
		constexpr auto bShowHealthIcons = 0x19d; // bool
		constexpr auto bShowCommandContextHint = 0x19e; // bool
		constexpr auto bZoomADS = 0x19f; // bool
		constexpr auto ScoreReadoutMode = 0x1a0; // EScoreReadoutMode
		constexpr auto DefaultCommand = 0x1a1; // ESwatCommand
		constexpr auto DefaultDoorUnknownCommand = 0x1a2; // ESwatCommand
		constexpr auto DefaultDoorOpenCommand = 0x1a3; // ESwatCommand
		constexpr auto DefaultDoorLockedCommand = 0x1a4; // ESwatCommand
		constexpr auto DefaultDoorUnlockedCommand = 0x1a5; // ESwatCommand
		constexpr auto DefaultCommandOption = 0x1a8; // int32_t
		constexpr auto ViewDistanceQuality = 0x1ac; // int32_t
		constexpr auto AntiAliasingQuality = 0x1b0; // int32_t
		constexpr auto ShadowQuality = 0x1b4; // int32_t
		constexpr auto PostProcessQuality = 0x1b8; // int32_t
		constexpr auto TextureQuality = 0x1bc; // int32_t
		constexpr auto EffectsQuality = 0x1c0; // int32_t
		constexpr auto DefaultDoorUnknownCommandOption = 0x1c4; // int32_t
		constexpr auto DefaultDoorOpenCommandOption = 0x1c8; // int32_t
		constexpr auto DefaultDoorLockedCommandOption = 0x1cc; // int32_t
		constexpr auto DefaultDoorUnlockedCommandOption = 0x1d0; // int32_t
		constexpr auto bCurvedHUD = 0x1d4; // bool
		constexpr auto b2DReloadIcons = 0x1d5; // bool
		constexpr auto bShowPlayerNames = 0x1d6; // bool
		constexpr auto bShowPlayerIcon = 0x1d7; // bool
		constexpr auto bShowMultiplayerSpeeds = 0x1d8; // bool
		constexpr auto bShowCommandMarkers = 0x1d9; // bool
		constexpr auto bShowTeamStatus = 0x1da; // bool
		constexpr auto bMirrorReflectionEnabled = 0x1db; // bool
		constexpr auto MirrorFPS = 0x1dc; // float
		constexpr auto PiPFPS = 0x1e0; // float
		constexpr auto bPiPFPSEnabled = 0x1e4; // bool
		constexpr auto bDepthOfField = 0x1e5; // bool
		constexpr auto bMotionBlur = 0x1e6; // bool
		constexpr auto MotionBlurQuality = 0x1e8; // int32_t
		constexpr auto PiPResolutionScale = 0x1ec; // float
		constexpr auto SafeZoneX = 0x1f0; // float
		constexpr auto SafeZoneY = 0x1f4; // float
		constexpr auto GraphicsPresetIndex = 0x1f8; // int32_t
		constexpr auto bShowButtonPrompts = 0x1fc; // bool
		constexpr auto bInvertMousePitch = 0x1fd; // bool
		constexpr auto bInvertMouseYaw = 0x1fe; // bool
		constexpr auto bExperimentalFeatures = 0x1ff; // bool
		constexpr auto bShowControlsOnScreen = 0x200; // bool
		constexpr auto bShowHesitationBar = 0x201; // bool
		constexpr auto bRTXEnabled = 0x202; // bool
		constexpr auto bRTXReflectionsEnabled = 0x203; // bool
		constexpr auto bRTXShadowsEnabled = 0x204; // bool
		constexpr auto bRTXAmbientOcclusionEnabled = 0x205; // bool
		constexpr auto DlssQualitySetting = 0x208; // int32_t
		constexpr auto FSRQualitySetting = 0x20c; // int32_t
		constexpr auto MicInputGain = 0x210; // float
		constexpr auto InputAudioDevice = 0x218; // FString
		constexpr auto bFrameLimitEnabled = 0x228; // bool
		constexpr auto ItemSelectionInterface = 0x229; // EItemSelectionInterfaceType
		constexpr auto GrenadeThrowType = 0x22a; // EGrenadeThrowSettingType
		constexpr auto ShotgunLoadType = 0x22b; // EShotgunReloadType
		constexpr auto EmptyMagReloadType = 0x22c; // EEmptyMagReloadType
		constexpr auto OptiwandViewMode = 0x22d; // EOptiwandViewMode
		constexpr auto DMOAddress = 0x230; // FString
		constexpr auto DMOGameMode = 0x240; // FString
		constexpr auto DMOTeamType = 0x250; // ETeamType
		constexpr auto MirrorReflectionSettings = 0x254; // FMirrorReflectionSettings
		constexpr auto bBounceLightEnabled = 0x25c; // bool
		constexpr auto bFlashlightShadowsEnabled = 0x25d; // bool
		constexpr auto bServerSideChecksum = 0x25e; // bool
	}

	namespace n_URuntimeVirtualTexture { // : UObject
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UNiagaraDataInterfaceArrayQuat { // : UNiagaraDataInterfaceArray
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UNiagaraBaselineController_Basic { // : UNiagaraBaselineController
		constexpr auto NumInstances = 0x68; // int32_t
		constexpr auto SpawnedComponents = 0x70; // TArray<UNiagaraComponent*>
	}

	namespace n_UTextLipSync { // : UActorComponent
		constexpr auto MorphTargetsMap = 0xb0; // TMap<EPhoneme, FName>
		constexpr auto CompositePhonemeTargetsMap = 0x100; // TMap<FName, FLipSync_MorphPreset>
		constexpr auto EmotionTags = 0x150; // TMap<FName, FLipSync_MorphPreset>
		constexpr auto PauseFadeTime = 0x1a0; // float
		constexpr auto PhonemeFadeTime = 0x1a4; // float
		constexpr auto MorphLowerLimit = 0x1a8; // float
		constexpr auto MorphUpperLimit = 0x1ac; // float
		constexpr auto AudioMinTreshold = 0x1b0; // float
		constexpr auto PauseMultiplier = 0x1b4; // float
		constexpr auto DefaultOffsetFromDurationEnd = 0x1b8; // float
		constexpr auto DelayAtSentenceEnd = 0x1bc; // float
		constexpr auto DelayAtComma = 0x1c0; // float
		constexpr auto EnvelopeMultiplier = 0x1c4; // float
		constexpr auto MinimumPhonemesInterval = 0x1c8; // float
		constexpr auto EmotionBlendTime = 0x1cc; // float
		constexpr auto ShortEmotionHalfDuration = 0x1d0; // float
		constexpr auto bRealtimeTimingCorrection = 0x1d4; // bool
		constexpr auto bUseSubtitlesCacheSystem = 0x1d5; // bool
		constexpr auto bUsePhrasesTableSystem = 0x1d6; // bool
		constexpr auto bUseCompositeMorphTargets = 0x1d7; // bool
		constexpr auto AnimationType = 0x1d8; // ELipSyncAnimType
		constexpr auto OnNotifyExecuted = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnPlayingFinished = 0x1f0; // FMulticastInlineDelegate
		constexpr auto OnSpeakingPause = 0x200; // FMulticastInlineDelegate
		constexpr auto OnTimelineChanged = 0x210; // FMulticastInlineDelegate
		constexpr auto Speaker = 0x220; // UAudioComponent*
		constexpr auto ControlledMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto CurrentSound = 0x230; // USoundBase*
		constexpr auto MorphTargets = 0x238; // FName [0x11]
		constexpr auto MorphTargetRuntimeValue = 0x2c0; // TMap<FName, float>
		constexpr auto MorphTargetsList = 0x310; // TSet<FName>
		constexpr auto PhrasesList = 0x360; // UPhrasesList*
		constexpr auto SubtitlesCache = 0x368; // USubtitlesCache*
		constexpr auto bIsInitialized = 0x370; // bool
		constexpr auto bIsSpeaking = 0x371; // bool
		constexpr auto bIsSpeakingPhonemeInAudio = 0x372; // bool
		constexpr auto bSubtitleWasChanged = 0x373; // bool
		constexpr auto bSubtitleWasLoadedFromCache = 0x374; // bool
		constexpr auto PauseTime = 0x378; // float
		constexpr auto CurrentTime = 0x37c; // float
		constexpr auto EnvelopeVolumeMultiplier = 0x380; // float
		constexpr auto PhraseDuration = 0x384; // float
		constexpr auto NextPhonemeIndex = 0x388; // int32_t
		constexpr auto PrevPhonemeIndex = 0x38c; // int32_t
		constexpr auto NextNotifyIndex = 0x390; // int32_t
		constexpr auto PhraseData = 0x398; // TArray<FLipSync_TimedPhrase>
		constexpr auto PauseIndexes = 0x3a8; // TArray<int32_t>
		constexpr auto PhraseNotifies = 0x3b8; // TArray<FLipSync_TimedPhrase>
		constexpr auto CurrentIntervalDuration = 0x3c8; // float
		constexpr auto bTrial = 0x3cc; // bool
		constexpr auto TrialMonth = 0x3d0; // int32_t
		constexpr auto TrialYear = 0x3d4; // int32_t
		constexpr auto Emotion2Flag = 0x3d8; // TMap<FName, char>
		constexpr auto Flag2Emotion = 0x428; // TMap<char, FName>
		constexpr auto ActiveEmotions = 0x478; // TMap<char, float>
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect { // : UAnimNotifyState
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UNiagaraComponentPool { // : UObject
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_ABadAIAction { // : AActor
		constexpr auto Summary = 0x220; // FText
		constexpr auto Description = 0x238; // FText
		constexpr auto BillboardComponent = 0x258; // UBillboardComponent*
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UFMODAnimNotifyPlay { // : UAnimNotify
		constexpr auto bFollow = 0x38; // char : 1
		constexpr auto AttachName = 0x40; // FString
		constexpr auto Event = 0x50; // UFMODEvent*
	}

	namespace n_AReadyOrNotProjectile { // : AActor
		constexpr auto CollisionComp = 0x220; // USphereComponent*
		constexpr auto ProjectileMovement = 0x228; // UProjectileMovementComponent*
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UTestMovieSceneSubTrack { // : UMovieSceneSubTrack
		constexpr auto SectionArray = 0xa0; // TArray<UMovieSceneSection*>
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UTargetingComponent { // : UActorComponent
		constexpr auto LastKnownPositionActor = 0xb8; // ALastKnownPositionActor*
		constexpr auto KnownFriendlies = 0xc0; // TArray<AReadyOrNotCharacter*>
		constexpr auto KnownNeutrals = 0xd0; // TArray<AReadyOrNotCharacter*>
		constexpr auto KnownEnemies = 0xe0; // TArray<FTargetData>
		constexpr auto LastKnownEnemy = 0x108; // AReadyOrNotCharacter*
		constexpr auto TrackedTarget = 0x118; // AReadyOrNotCharacter*
		constexpr auto LastTrackedTarget = 0x120; // AReadyOrNotCharacter*
		constexpr auto FocalPointsOfInterest = 0x128; // TArray<FVector>
		constexpr auto LastTrackedDoor = 0x158; // ADoor*
		constexpr auto LastThreatAwarenessActor = 0x168; // AThreatAwarenessActor*
		constexpr auto NearestThreat = 0x2e0; // AThreatAwarenessActor*
		constexpr auto Threats = 0x2e8; // TArray<AThreatAwarenessActor*>
		constexpr auto WorldDataGenerator = 0x300; // AWorldDataGenerator*
		constexpr auto HasBeenNearThreat = 0x318; // TArray<AThreatAwarenessActor*>
		constexpr auto MontageFocalMap = 0x340; // TMap<UAnimMontage*, FVector>
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USoundData { // : UDataAsset
		constexpr auto SteamAudioComponent = 0x30; // USteamAudioComponent*
	}

	namespace n_UIconWidget { // : UUserWidget
		constexpr auto MainImage = 0x260; // UImage*
		constexpr auto ParentComponent = 0x268; // UInteractableComponent*
	}

	namespace n_UMaterialExpressionDistanceFieldsRenderingSwitch { // : UMaterialExpression
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_AVIPEscortGM { // : AReadyOrNotGameMode_PVP
		constexpr auto OnVIPKilled = 0x718; // FMulticastInlineDelegate
		constexpr auto OnVIPFreed = 0x728; // FMulticastInlineDelegate
		constexpr auto VIPPlayer = 0x738; // APlayerController*
		constexpr auto ChosenVIPSpawn = 0x740; // APlayerStart_VIP_Spawn*
		constexpr auto VIPCharacterClass = 0x748; // APlayerCharacter*
		constexpr auto VIPSpawnTag = 0x750; // FName
		constexpr auto TimeToDeliverVIP = 0x758; // float
		constexpr auto HostageHoldTime = 0x75c; // float
	}

	namespace n_UGizmoLocalVec2ParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_ASwitchActor { // : AActor
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto LastSelectedOption = 0x240; // int32_t
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UVariantSet { // : UObject
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x220; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x228; // char : 1
		constexpr auto bCurrentlyActive = 0x228; // char : 1
		constexpr auto OnParticleSpawn = 0x230; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x260; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_Head_Shared_Master_C { // : UReadyOrNotFaceAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2d8; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_PoseBlendNode = 0x4b0; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x550; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x610; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x690; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_2 = 0x730; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose = 0x778; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x7a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum = 0x8f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x9a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0xa28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0xaf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xb70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xbf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0xc70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend = 0xcf0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Root = 0xdb8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0xde8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xe30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LookAt_3 = 0xe50; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_LookAt_2 = 0x1000; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_LookAt = 0x11b0; // FAnimNode_LookAt
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1360; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x1380; // FAnimNode_LayeredBoneBlend
		constexpr auto IsPlayerDead = 0x1440; // bool
		constexpr auto Emotion = 0x1441; // EPlayerEmotion
		constexpr auto EmotionWeight = 0x1444; // float
		constexpr auto HeadLookRotation = 0x1448; // FRotator
		constexpr auto LookAtAlpha = 0x1454; // float
		constexpr auto LookAtLocation = 0x1458; // FVector
	}

	namespace n_UANIMBP_C2_Charge_C { // : UReadyOrNotAnimInstance
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x528; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x558; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x5a0; // FAnimNode_SequencePlayer
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UReportTargetActivity { // : UTeamBaseActivity
		constexpr auto ReportTarget = 0x1e0; // TScriptInterface<IReportable>
		constexpr auto ReportCharacterTarget = 0x1f0; // APlayerCharacter*
		constexpr auto ReportIncapacitatedTarget = 0x1f8; // AIncapacitatedHuman*
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UARTrackedQRCode { // : UARTrackedImage
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_ULoginUserCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UClothingAssetCommon { // : UClothingAssetBase
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto LODData = 0xa0; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xb0; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xc0; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xd0; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0xe0; // int32_t
		constexpr auto CustomData = 0xe8; // UClothingAssetCustomData*
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_ASniperSpawn { // : AActor
		constexpr auto SpawnLabel = 0x220; // FName
		constexpr auto bMovementLocked = 0x228; // bool
		constexpr auto bStartInADS = 0x229; // bool
		constexpr auto bLockADS = 0x22a; // bool
		constexpr auto SniperClass = 0x230; // ASniperCharacter*
		constexpr auto SpotterClass = 0x238; // ASniperCharacter*
		constexpr auto MarksmanClass = 0x240; // ASniperCharacter*
		constexpr auto SpawnDirection = 0x248; // UArrowComponent*
		constexpr auto RootSceneComponent = 0x250; // USceneComponent*
		constexpr auto bHasSniperSpawned = 0x258; // bool
		constexpr auto SpawnedSniper = 0x260; // ASniperCharacter*
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x98; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0xa8; // bool
		constexpr auto RootMotionParams = 0xb0; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xe0; // bool
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_AOutOfBoundsVolume { // : AActor
		constexpr auto Bounds = 0x220; // UBoxComponent*
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow { // : UAnimNotifyState
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_APatrolPoint { // : AActor
		constexpr auto SceneRoot = 0x220; // USceneComponent*
	}

	namespace n_UW_HealthStatus_C { // : UHealthStatusWidget
		constexpr auto UberGraphFrame = 0x3a0; // FPointerToUberGraphFrame
		constexpr auto Divider_Image = 0x3a8; // UImage*
		constexpr auto bShowDivider = 0x3b0; // bool
	}

	namespace n_UANIMBP_CSGAS_V2_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_APepperballImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack { // : UMovieSceneMaterialTrack
		constexpr auto MPC = 0xa8; // UMaterialParameterCollection*
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x468; // UBodySetup*
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UW_WeaponWheel_MultiItem_Selection_C { // : UUserWidget
		constexpr auto Dots_Container = 0x260; // UHorizontalBox*
		constexpr auto MultiItemVisual = 0x268; // UOverlay*
		constexpr auto NextItemIcon = 0x270; // UImage*
		constexpr auto PreviousItemIcon = 0x278; // UImage*
		constexpr auto Dots = 0x280; // TArray<UImage*>
		constexpr auto UnselectedColor = 0x290; // FLinearColor
		constexpr auto SelectedColor = 0x2a0; // FLinearColor
		constexpr auto Amount = 0x2b0; // int32_t
		constexpr auto ItemIndex = 0x2b4; // int32_t
		constexpr auto HighlightedIconColor = 0x2b8; // FLinearColor
		constexpr auto UnhighlightedIconColor = 0x2c8; // FLinearColor
	}

	namespace n_UW_Briefing_Objectives_List_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto txt_Count = 0x268; // UW_Text_C*
		constexpr auto VB_ObjectiveList = 0x270; // UVerticalBox*
		constexpr auto W_Header = 0x278; // UW_Header_C*
		constexpr auto bIsChallengeList = 0x280; // bool
		constexpr auto bSimplifiedObjectives = 0x281; // bool
		constexpr auto Objectives = 0x288; // UChallenge*
		constexpr auto TotalObjectives = 0x290; // int32_t
		constexpr auto CompletedObjectives = 0x294; // int32_t
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x4e0; // FGuid
		constexpr auto ProxyComponentBases = 0x4f0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x500; // int8_t
	}

	namespace n_AMainMenu_V2_C { // : AReadyOrNotLevelScript
		constexpr auto UberGraphFrame = 0xae8; // FPointerToUberGraphFrame
	}

	namespace n_UChallenge_ArrestSomeone_C { // : UChallenge
		constexpr auto UberGraphFrame = 0x70; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_USequenceCameraShakeSequencePlayer { // : UObject
		constexpr auto BoundObjectOverride = 0x2d0; // UObject*
		constexpr auto Sequence = 0x2d8; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x2e0; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UW_StandardText_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto TheText = 0x268; // UTextBlock*
		constexpr auto Text = 0x270; // FText
		constexpr auto FontSize = 0x288; // int32_t
		constexpr auto Font = 0x290; // UFont*
		constexpr auto Color = 0x298; // FSlateColor
		constexpr auto Typeface = 0x2c0; // FName
		constexpr auto Justification = 0x2c8; // ETextJustify
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UMovieSceneScriptingChannel { // : UObject
		constexpr auto ChannelName = 0x28; // FName
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UDoorSound { // : UDataAsset
		constexpr auto DoorClosed = 0x30; // UFMODEvent*
		constexpr auto DoorOpened = 0x38; // UFMODEvent*
		constexpr auto DoorStartManipulation = 0x40; // UFMODEvent*
		constexpr auto DoorStopManipulation = 0x48; // UFMODEvent*
		constexpr auto BrokenByC2 = 0x50; // UFMODEvent*
		constexpr auto BrokenByRam = 0x58; // UFMODEvent*
		constexpr auto BrokenByShotgun = 0x60; // UFMODEvent*
		constexpr auto KickedDown = 0x68; // UFMODEvent*
		constexpr auto KickedDownFailed = 0x70; // UFMODEvent*
		constexpr auto KickedDownBreak = 0x78; // UFMODEvent*
	}

	namespace n_UNiagaraSpriteRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x78; // UMaterialInterface*
		constexpr auto SourceMode = 0x80; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xa8; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xa9; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xac; // FVector2D
		constexpr auto SortMode = 0xb4; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xb8; // FVector2D
		constexpr auto bSubImageBlend = 0xc0; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc0; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc0; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc0; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xc4; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xc8; // float
		constexpr auto bEnableCameraDistanceCulling = 0xcc; // char : 1
		constexpr auto MinCameraDistance = 0xd0; // float
		constexpr auto MaxCameraDistance = 0xd4; // float
		constexpr auto RendererVisibility = 0xd8; // uint32_t
		constexpr auto PositionBinding = 0xe0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x138; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x190; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1e8; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x240; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x298; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f0; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x348; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x3f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x450; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4a8; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x500; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x558; // FNiagaraVariableAttributeBinding
		constexpr auto PivotOffsetBinding = 0x5b0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x608; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x660; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x6b8; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x710; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x768; // TArray<FNiagaraMaterialAttributeBinding>
		constexpr auto PrevPositionBinding = 0x778; // FNiagaraVariableAttributeBinding
		constexpr auto PrevVelocityBinding = 0x7d0; // FNiagaraVariableAttributeBinding
		constexpr auto PrevSpriteRotationBinding = 0x828; // FNiagaraVariableAttributeBinding
		constexpr auto PrevSpriteSizeBinding = 0x880; // FNiagaraVariableAttributeBinding
		constexpr auto PrevSpriteFacingBinding = 0x8d8; // FNiagaraVariableAttributeBinding
		constexpr auto PrevSpriteAlignmentBinding = 0x930; // FNiagaraVariableAttributeBinding
		constexpr auto PrevCameraOffsetBinding = 0x988; // FNiagaraVariableAttributeBinding
		constexpr auto PrevPivotOffsetBinding = 0x9e0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UInGameLogSubsystem { // : UWorldSubsystem
		constexpr auto OnLogMessageEnqueued = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLogMessageDequeued = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UWeaponSound { // : UDataAsset
		constexpr auto bPlayFMODFiringAudio = 0x30; // bool
		constexpr auto FMODGunShot1P = 0x38; // UFMODEvent*
		constexpr auto FMODGunShot3P = 0x40; // UFMODEvent*
		constexpr auto MagCheck_FullSeq = 0x48; // UFMODEvent*
		constexpr auto QuickReload_FullSeq = 0x50; // UFMODEvent*
		constexpr auto QuickReloadEmpty_FullSeq = 0x58; // UFMODEvent*
		constexpr auto Reload_FullSeq = 0x60; // UFMODEvent*
		constexpr auto ReloadEmpty_FullSeq = 0x68; // UFMODEvent*
		constexpr auto MagIn = 0x70; // UFMODEvent*
		constexpr auto MagOut = 0x78; // UFMODEvent*
		constexpr auto MagInQuick = 0x80; // UFMODEvent*
		constexpr auto MagOutQuick = 0x88; // UFMODEvent*
		constexpr auto MagDrop = 0x90; // UFMODEvent*
		constexpr auto MagDropQuick = 0x98; // UFMODEvent*
		constexpr auto WeaponDrop = 0xa0; // UFMODEvent*
		constexpr auto BoltClose = 0xa8; // UFMODEvent*
		constexpr auto BoltCloseQuick = 0xb0; // UFMODEvent*
		constexpr auto BoltOpen = 0xb8; // UFMODEvent*
		constexpr auto BoltOpenQuick = 0xc0; // UFMODEvent*
		constexpr auto OnADSSound = 0xc8; // UFMODEvent*
		constexpr auto OnEndADSSound = 0xd0; // UFMODEvent*
		constexpr auto NightvisionOn = 0xd8; // UFMODEvent*
		constexpr auto NightvisionOff = 0xe0; // UFMODEvent*
		constexpr auto Holster = 0xe8; // UFMODEvent*
		constexpr auto Draw = 0xf0; // UFMODEvent*
		constexpr auto DrawFirst = 0xf8; // UFMODEvent*
		constexpr auto SelectSemi = 0x100; // UFMODEvent*
		constexpr auto SelectBurst = 0x108; // UFMODEvent*
		constexpr auto SelectAuto = 0x110; // UFMODEvent*
		constexpr auto SelectSafe = 0x118; // UFMODEvent*
		constexpr auto Firing_Inside = 0x120; // FWeaponSoundData
		constexpr auto Firing_Outside = 0x140; // FWeaponSoundData
		constexpr auto DryFire = 0x160; // UFMODEvent*
		constexpr auto FireLast = 0x168; // UFMODEvent*
		constexpr auto bPlayBulletWhizz = 0x170; // bool
		constexpr auto BulletWhizzFar = 0x178; // UFMODEvent*
		constexpr auto HitMarker = 0x180; // UFMODEvent*
		constexpr auto HeadshotMarker = 0x188; // UFMODEvent*
		constexpr auto KillMarker = 0x190; // UFMODEvent*
		constexpr auto PhysicsImpact = 0x198; // UFMODEvent*
		constexpr auto PlayerImpact = 0x1a0; // UFMODEvent*
		constexpr auto PhysicsImpactMinimumVelocity = 0x1a8; // float
		constexpr auto MovementLayer = 0x1b0; // UFMODEvent*
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendoutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UW_StandardCheckbox_C { // : URealtimeWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CheckboxButton = 0x268; // UButton*
		constexpr auto CheckboxCheckedImage = 0x270; // UImage*
		constexpr auto Checked = 0x278; // UOverlay*
		constexpr auto Down = 0x280; // UImage*
		constexpr auto Highlight = 0x288; // UImage*
		constexpr auto Up = 0x290; // UImage*
		constexpr auto OnCheckStateChange = 0x298; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x2d8; // FMulticastInlineDelegate
		constexpr auto bChecked = 0x2e8; // bool
		constexpr auto DescriptionWidget = 0x2f0; // UTextBlock*
		constexpr auto DescriptionText = 0x2f8; // FText
		constexpr auto HoveredSound = 0x310; // UFMODEvent*
		constexpr auto CheckedSound = 0x318; // UFMODEvent*
		constexpr auto UncheckedSound = 0x320; // UFMODEvent*
		constexpr auto CheckBoxColor = 0x328; // FLinearColor
	}

	namespace n_UReadyOrNotWeaponAnimData { // : UDataAsset
		constexpr auto IdlePose_FP = 0x30; // UAnimSequenceBase*
		constexpr auto Idle_FP = 0x38; // UAnimSequenceBase*
		constexpr auto Run_FP = 0x40; // UAnimSequenceBase*
		constexpr auto Walk_FP = 0x48; // UAnimSequenceBase*
		constexpr auto Run_Limp_FP = 0x50; // UAnimSequenceBase*
		constexpr auto Walk_Limp_FP = 0x58; // UAnimSequenceBase*
		constexpr auto Look_BS_FP = 0x60; // UBlendSpaceBase*
		constexpr auto Lowered_Up_Pose_FP = 0x68; // UAnimSequenceBase*
		constexpr auto Lowered_Down_Pose_FP = 0x70; // UAnimSequenceBase*
		constexpr auto ADS_Run_FP = 0x78; // UAnimSequenceBase*
		constexpr auto ADS_Walk_FP = 0x80; // UAnimSequenceBase*
		constexpr auto ADS_Run_Limp_FP = 0x88; // UAnimSequenceBase*
		constexpr auto ADS_Walk_Limp_FP = 0x90; // UAnimSequenceBase*
		constexpr auto IdlePose_AFG_FP = 0x98; // UAnimSequenceBase*
		constexpr auto IdlePose_VFG_FP = 0xa0; // UAnimSequenceBase*
		constexpr auto IdlePose_HSTOP_FP = 0xa8; // UAnimSequenceBase*
		constexpr auto IdlePose_Low_TP = 0xb0; // UAnimSequenceBase*
		constexpr auto IdlePose_Up_TP = 0xb8; // UAnimSequenceBase*
		constexpr auto IdlePose_Shld_TP = 0xc0; // UAnimSequenceBase*
		constexpr auto IdlePose_Sights_TP = 0xc8; // UAnimSequenceBase*
		constexpr auto IdlePose_Ret_TP = 0xd0; // UAnimSequenceBase*
		constexpr auto IdlePose_Ovr_TP = 0xd8; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Low_TP = 0xe0; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Up_TP = 0xe8; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Shld_TP = 0xf0; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Sights_TP = 0xf8; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Ret_TP = 0x100; // UAnimSequenceBase*
		constexpr auto Crouch_IdlePose_Ovr_TP = 0x108; // UAnimSequenceBase*
		constexpr auto Reload = 0x110; // FWeaponAnim
		constexpr auto ReloadEmpty = 0x130; // FWeaponAnim
		constexpr auto Crouch_Reload = 0x150; // FWeaponAnim
		constexpr auto Crouch_ReloadEmpty = 0x170; // FWeaponAnim
		constexpr auto Tactical_Reload = 0x190; // FWeaponAnim
		constexpr auto Tactical_ReloadEmpty = 0x1b0; // FWeaponAnim
		constexpr auto ShellRack_Reload = 0x1d0; // TArray<FWeaponAnim>
		constexpr auto ShellRack_ReloadEmpty = 0x1e0; // TArray<FWeaponAnim>
		constexpr auto ShellRack_ReloadRack = 0x1f0; // TArray<FWeaponAnim>
		constexpr auto Tactical_Crouch_Reload = 0x200; // FWeaponAnim
		constexpr auto Tactical_Crouch_ReloadEmpty = 0x220; // FWeaponAnim
		constexpr auto MeleeHit = 0x240; // FWeaponAnim
		constexpr auto MeleeMiss = 0x260; // FWeaponAnim
		constexpr auto FireSelect_Auto = 0x280; // FWeaponAnim
		constexpr auto FireSelect_Burst = 0x2a0; // FWeaponAnim
		constexpr auto FireSelect_Semi = 0x2c0; // FWeaponAnim
		constexpr auto FireSelect_Safe = 0x2e0; // FWeaponAnim
		constexpr auto Crouch_FireSelect_Auto = 0x300; // FWeaponAnim
		constexpr auto Crouch_FireSelect_Burst = 0x320; // FWeaponAnim
		constexpr auto Crouch_FireSelect_Semi = 0x340; // FWeaponAnim
		constexpr auto Crouch_FireSelect_Safe = 0x360; // FWeaponAnim
		constexpr auto Reload_Start = 0x380; // FWeaponAnim
		constexpr auto Reload_Loop = 0x3a0; // FWeaponAnim
		constexpr auto Reload_End = 0x3c0; // FWeaponAnim
		constexpr auto Reload_Start_Empty = 0x3e0; // FWeaponAnim
		constexpr auto Reload_Loop_Empty = 0x400; // FWeaponAnim
		constexpr auto Reload_End_Empty = 0x420; // FWeaponAnim
		constexpr auto Crouch_Reload_Start = 0x440; // FWeaponAnim
		constexpr auto Crouch_Reload_Loop = 0x460; // FWeaponAnim
		constexpr auto Crouch_Reload_End = 0x480; // FWeaponAnim
		constexpr auto Crouch_Reload_Start_Empty = 0x4a0; // FWeaponAnim
		constexpr auto Crouch_Reload_Loop_Empty = 0x4c0; // FWeaponAnim
		constexpr auto Crouch_Reload_End_Empty = 0x4e0; // FWeaponAnim
		constexpr auto MagazineCheck = 0x500; // FWeaponAnim
		constexpr auto Crouch_MagazineCheck = 0x520; // FWeaponAnim
		constexpr auto MagazineCheckSights = 0x540; // FWeaponAnim
		constexpr auto Crouch_MagazineCheckSights = 0x560; // FWeaponAnim
		constexpr auto FireSingle = 0x580; // TArray<FWeaponAnim>
		constexpr auto FireSingleSights = 0x590; // TArray<FWeaponAnim>
		constexpr auto FireSingleLast = 0x5a0; // FWeaponAnim
		constexpr auto FireSingleSightsLast = 0x5c0; // FWeaponAnim
		constexpr auto DryFire = 0x5e0; // FWeaponAnim
		constexpr auto Crouch_FireSingle = 0x600; // TArray<FWeaponAnim>
		constexpr auto Crouch_FireSingleSights = 0x610; // TArray<FWeaponAnim>
		constexpr auto Crouch_FireSingleLast = 0x620; // FWeaponAnim
		constexpr auto Crouch_FireSingleSightsLast = 0x640; // FWeaponAnim
		constexpr auto Crouch_Dryfire = 0x660; // FWeaponAnim
		constexpr auto FireLoop = 0x680; // FWeaponAnim
		constexpr auto FireLoopEnd = 0x6a0; // FWeaponAnim
		constexpr auto FireLoopSights = 0x6c0; // FWeaponAnim
		constexpr auto FireLoopSightsEnd = 0x6e0; // FWeaponAnim
		constexpr auto Crouch_FireLoop = 0x700; // FWeaponAnim
		constexpr auto Crouch_FireLoopEnd = 0x720; // FWeaponAnim
		constexpr auto Crouch_FireLoopSights = 0x740; // FWeaponAnim
		constexpr auto Crouch_FireLoopSightsEnd = 0x760; // FWeaponAnim
		constexpr auto Draw = 0x780; // FWeaponAnim
		constexpr auto DrawFirst = 0x7a0; // FWeaponAnim
		constexpr auto Crouch_Draw = 0x7c0; // FWeaponAnim
		constexpr auto Crouch_DrawFirst = 0x7e0; // FWeaponAnim
		constexpr auto Holster = 0x800; // FWeaponAnim
		constexpr auto Crouch_Holster = 0x820; // FWeaponAnim
		constexpr auto PullPin = 0x840; // FWeaponAnim
		constexpr auto Throw = 0x860; // FWeaponAnim
		constexpr auto PullPinUnderarm = 0x880; // FWeaponAnim
		constexpr auto ThrowUnderarm = 0x8a0; // FWeaponAnim
		constexpr auto Crouch_PullPin = 0x8c0; // FWeaponAnim
		constexpr auto Crouch_Throw = 0x8e0; // FWeaponAnim
		constexpr auto Crouch_PullPinUnderarm = 0x900; // FWeaponAnim
		constexpr auto Crouch_ThrowUnderarm = 0x920; // FWeaponAnim
		constexpr auto QuickThrow_PinPull = 0x940; // FWeaponAnim
		constexpr auto Quickthrow_Throw = 0x960; // FWeaponAnim
		constexpr auto Crouch_QuickThrow_PinPull = 0x980; // FWeaponAnim
		constexpr auto Crouch_QuickThrow_Throw = 0x9a0; // FWeaponAnim
		constexpr auto QuickThrow_Fast = 0x9c0; // FWeaponAnim
		constexpr auto Crouch_QuickThrow_Fast = 0x9e0; // FWeaponAnim
		constexpr auto Multitool_Use = 0xa00; // FWeaponAnim
		constexpr auto Multitool_Use_End = 0xa20; // FWeaponAnim
		constexpr auto Multitool_Cutters_To_Lockpick = 0xa40; // FWeaponAnim
		constexpr auto Multitool_Cutters_To_Knife = 0xa60; // FWeaponAnim
		constexpr auto Multitool_Lockpick_To_Cutters = 0xa80; // FWeaponAnim
		constexpr auto Multitool_Lockpick_To_Knife = 0xaa0; // FWeaponAnim
		constexpr auto Multitool_Knife_To_Lockpick = 0xac0; // FWeaponAnim
		constexpr auto Multitool_Knife_To_Cutters = 0xae0; // FWeaponAnim
		constexpr auto Optiwand_Start_Screening = 0xb00; // FWeaponAnim
		constexpr auto Optiwand_End_Screening = 0xb20; // FWeaponAnim
		constexpr auto Charge_Valid_Plant_Start = 0xb40; // FWeaponAnim
		constexpr auto Charge_Valid_Plant_End = 0xb60; // FWeaponAnim
		constexpr auto PlantCharge = 0xb80; // FWeaponAnim
		constexpr auto DetonateCharge = 0xba0; // FWeaponAnim
		constexpr auto EnableNVG = 0xbc0; // FWeaponAnim
		constexpr auto DisableNVG = 0xbe0; // FWeaponAnim
		constexpr auto ShieldDownToUp = 0xc00; // FWeaponAnim
		constexpr auto ShieldUpToDown = 0xc20; // FWeaponAnim
		constexpr auto Crouch_ShieldDownToUp = 0xc40; // FWeaponAnim
		constexpr auto Crouch_ShieldUpToDown = 0xc60; // FWeaponAnim
		constexpr auto ShieldHit = 0xc80; // FWeaponAnim
		constexpr auto TabletDownToUp = 0xca0; // FWeaponAnim
		constexpr auto TabletUpToDown = 0xcc0; // FWeaponAnim
		constexpr auto TabletSwitchCameraDown = 0xce0; // FWeaponAnim
		constexpr auto TabletSwitchCameraUp = 0xd00; // FWeaponAnim
		constexpr auto EvidencePickup = 0xd20; // FWeaponAnim
		constexpr auto Yell = 0xd40; // FWeaponAnim
		constexpr auto RadioSelect = 0xd60; // FWeaponAnim
		constexpr auto bRadioUsesNotifies = 0xd80; // bool
		constexpr auto DoorPush = 0xd88; // FWeaponAnim
		constexpr auto ButtonPush = 0xda8; // FWeaponAnim
		constexpr auto WeaponClearing = 0xdc8; // FWeaponAnim
		constexpr auto ReactToSting = 0xde8; // FWeaponAnim
		constexpr auto ReactToFlash = 0xe08; // FWeaponAnim
		constexpr auto ReactToTaser = 0xe28; // FWeaponAnim
		constexpr auto ReactToGas = 0xe48; // FWeaponAnim
		constexpr auto ReactToPepperSpray = 0xe68; // FWeaponAnim
		constexpr auto ReactToSting_End = 0xe88; // FWeaponAnim
		constexpr auto ReactToFlash_End = 0xea8; // FWeaponAnim
		constexpr auto ReactToTaser_End = 0xec8; // FWeaponAnim
		constexpr auto ReactToGas_End = 0xee8; // FWeaponAnim
		constexpr auto ReactToPepperSpray_End = 0xf08; // FWeaponAnim
		constexpr auto Draw_Level_01 = 0xf28; // FWeaponAnim
		constexpr auto Draw_Level_02 = 0xf48; // FWeaponAnim
		constexpr auto Draw_Level_03 = 0xf68; // FWeaponAnim
		constexpr auto Holster_Level_01 = 0xf88; // FWeaponAnim
		constexpr auto Holster_Level_02 = 0xfa8; // FWeaponAnim
		constexpr auto Holster_Level_03 = 0xfc8; // FWeaponAnim
		constexpr auto Reload_Level_01 = 0xfe8; // FWeaponAnim
		constexpr auto Reload_Level_02 = 0x1008; // FWeaponAnim
		constexpr auto Reload_Level_03 = 0x1028; // FWeaponAnim
		constexpr auto Recoil_Level_01 = 0x1048; // FWeaponAnim
		constexpr auto Recoil_Level_02 = 0x1068; // FWeaponAnim
		constexpr auto Recoil_Level_03 = 0x1088; // FWeaponAnim
		constexpr auto Grip_VFG_Body_FP_Fire = 0x10a8; // UAnimMontage*
		constexpr auto Grip_VFG_Body_FP_Fire_Last = 0x10b0; // UAnimMontage*
		constexpr auto Grip_VFG_Body_FP_Fire_Aim = 0x10b8; // UAnimMontage*
		constexpr auto Grip_VFG_Body_FP_Fire_Aim_Last = 0x10c0; // UAnimMontage*
		constexpr auto Grip_AFG_Body_FP_Fire = 0x10c8; // UAnimMontage*
		constexpr auto Grip_AFG_Body_FP_Fire_Last = 0x10d0; // UAnimMontage*
		constexpr auto Grip_AFG_Body_FP_Fire_Aim = 0x10d8; // UAnimMontage*
		constexpr auto Grip_AFG_Body_FP_Fire_Aim_Last = 0x10e0; // UAnimMontage*
		constexpr auto Reload_FP_Ads = 0x10e8; // UAnimMontage*
		constexpr auto ReloadEmpty_FP_Ads = 0x10f0; // UAnimMontage*
		constexpr auto Tactical_Reload_FP_Ads = 0x10f8; // UAnimMontage*
		constexpr auto Tactical_ReloadEmpty_FP_Ads = 0x1100; // UAnimMontage*
		constexpr auto bEmptyReload = 0x1108; // bool
		constexpr auto bHasRetentionAdditives = 0x1109; // bool
		constexpr auto bHasLoweredAdditives = 0x110a; // bool
		constexpr auto bHasSightAdditives = 0x110b; // bool
		constexpr auto bOverrideFireAnimForGrip = 0x110c; // bool
	}

	namespace n_ASwatAutomationManager { // : AInfo
		constexpr auto Doors = 0x228; // TArray<ADoor*>
		constexpr auto BreachedDoors = 0x238; // TArray<ADoor*>
		constexpr auto SWATManager = 0x248; // ASWATManager*
		constexpr auto CurrentDoor = 0x250; // ADoor*
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader { // : UNiagaraDataInterfaceGrid2D
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UW_SubObjective_Entry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto div = 0x268; // UImage*
		constexpr auto ObjectiveNotice = 0x270; // UBorder*
		constexpr auto txt_Instruction = 0x278; // UW_Text_C*
		constexpr auto txt_ObjState = 0x280; // UW_Text_C*
		constexpr auto EntryData = 0x288; // FST_SubObjective_Entry
		constexpr auto Complete = 0x2a0; // bool
		constexpr auto Failed = 0x2a1; // bool
		constexpr auto LastEntry = 0x2a2; // bool
		constexpr auto bHideInstruction = 0x2a3; // bool
		constexpr auto CompletedIndent = 0x2a4; // float
		constexpr auto CompletedTextOpacity = 0x2a8; // float
		constexpr auto ObjectiveDescription = 0x2b0; // FText
		constexpr auto col_FontFailed = 0x2c8; // FLinearColor
		constexpr auto col_FontNormal = 0x2d8; // FLinearColor
		constexpr auto col_FontInProgress = 0x2e8; // FLinearColor
		constexpr auto col_FontComplete = 0x2f8; // FLinearColor
	}

	namespace n_UNiagaraDataInterfaceStaticMesh { // : UNiagaraDataInterface
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UNiagaraDataInterfaceVectorField { // : UNiagaraDataInterface
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UARTrackedPose { // : UARTrackedGeometry
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UW_PlayerActionText_C { // : UPlayerActionPromptWidget
		constexpr auto InvalidationBox_1 = 0x2a8; // UInvalidationBox*
		constexpr auto RedLine_Image = 0x2b0; // UImage*
		constexpr auto ActionPrompt = 0x2b8; // FPlayerActionPromptSlot
	}

	namespace n_UW_MapCell_C { // : UUserWidget
		constexpr auto Image = 0x260; // UImage*
		constexpr auto MapCellName = 0x268; // FText
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto Tooltip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UANIMBP_Colt1911_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone = 0x308; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x410; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Slot_2 = 0x430; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x478; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x518; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x618; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x770; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x830; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x878; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x8a0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x8c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x988; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByBool = 0x9a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xa48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0xac8; // FAnimNode_SequencePlayer
		constexpr auto Mag01Alpha = 0xb48; // float
		constexpr auto SlideAlpha = 0xb4c; // float
	}

	namespace n_UW_MapFloor_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Floor_Text = 0x268; // UTextBlock*
		constexpr auto Selected_Image = 0x270; // UImage*
		constexpr auto FloorText = 0x278; // FText
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa0; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb0; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc0; // USoundClass*
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UItemVisualizationComponent { // : USkeletalMeshComponent
		constexpr auto ItemVisualizationStatus = 0xec8; // EItemVisualizationStatus
		constexpr auto VisualizationType = 0xec9; // EItemVisualizationType
		constexpr auto BasedOfItem = 0xed0; // ABaseItem*
		constexpr auto MagazineComp = 0xed8; // UStaticMeshComponent*
		constexpr auto ScopeAttachment = 0xee0; // USkeletalMeshComponent*
		constexpr auto MuzzleAttachment = 0xee8; // USkeletalMeshComponent*
		constexpr auto UnderbarrelAttachment = 0xef0; // USkeletalMeshComponent*
		constexpr auto OverbarrelAttachment = 0xef8; // USkeletalMeshComponent*
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto paramName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x170; // int32_t
		constexpr auto StreamingPriority = 0x174; // int32_t
		constexpr auto SampleRateQuality = 0x178; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x17a; // ESoundGroup
		constexpr auto bLooping = 0x17b; // char : 1
		constexpr auto bStreaming = 0x17b; // char : 1
		constexpr auto bSeekableStreaming = 0x17b; // char : 1
		constexpr auto LoadingBehavior = 0x17c; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x17d; // char : 1
		constexpr auto bManualWordWrap = 0x17d; // char : 1
		constexpr auto bSingleLine = 0x17e; // char : 1
		constexpr auto bIsAmbisonics = 0x17e; // char : 1
		constexpr auto ModulationSettings = 0x180; // FSoundModulationDefaultRoutingSettings
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x258; // FNavAgentSelector
	}

	namespace n_ULocalizedOverlays { // : UOverlays
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UW_StandardCombobox_Option_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Option_Button = 0x268; // UButton*
		constexpr auto Option_Dn = 0x270; // UImage*
		constexpr auto Option_Hi = 0x278; // UImage*
		constexpr auto Option_Selected = 0x280; // UImage*
		constexpr auto OptionText = 0x288; // UTextBlock*
		constexpr auto OptionAsString = 0x290; // FString
		constexpr auto OptionAsText = 0x2a0; // FText
		constexpr auto Selected = 0x2b8; // bool
		constexpr auto ParentComboBox = 0x2c0; // UW_StandardCombobox_New_C*
		constexpr auto DescriptionText = 0x2c8; // FText
		constexpr auto FontSize = 0x2e0; // int32_t
		constexpr auto OptionHoveredSound = 0x2e8; // UFMODEvent*
	}

	namespace n_UAnimCurveCompressionSettings { // : UObject
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UClothingSimulationInteractor { // : UObject
		constexpr auto ClothingInteractors = 0x28; // TMap<FName, UClothingInteractor*>
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x2d8; // TArray<UObject*>
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UFMODBankLookup { // : UObject
		constexpr auto DataTable = 0x28; // UDataTable*
		constexpr auto MasterBankPath = 0x30; // FString
		constexpr auto MasterAssetsBankPath = 0x40; // FString
		constexpr auto MasterStringsBankPath = 0x50; // FString
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UW_ItemSelection_ItemList_C { // : UBaseWidget
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Anim_Focus = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Unfocus = 0x288; // UWidgetAnimation*
		constexpr auto Anim_FadeIn = 0x290; // UWidgetAnimation*
		constexpr auto Anim_FadeOut = 0x298; // UWidgetAnimation*
		constexpr auto GridPanel_Items = 0x2a0; // UGridPanel*
		constexpr auto ItemGroup = 0x2a8; // UW_ItemSelection_ItemGroup_C*
		constexpr auto VerticalBox_Items = 0x2b0; // UVerticalBox*
		constexpr auto VerticalBox_Main = 0x2b8; // UVerticalBox*
		constexpr auto WidgetSwitcher_Style = 0x2c0; // UWidgetSwitcher*
		constexpr auto Items = 0x2c8; // TArray<ABaseItem*>
		constexpr auto SelectionIndex = 0x2d8; // int32_t
		constexpr auto ItemWidgets = 0x2e0; // TArray<UW_ItemSelection_Item_C*>
		constexpr auto ItemGroupSetting = 0x2f0; // FItemSelectionPanelSetting_ItemGroup
		constexpr auto PlayerCharacter = 0x350; // ABasePlayer_C*
		constexpr auto bIsFocused = 0x358; // bool
		constexpr auto bCanNavigate = 0x359; // bool
		constexpr auto bEnteredOnce = 0x35a; // bool
		constexpr auto NudgeAmount = 0x35c; // FVector2D
		constexpr auto WorkingRenderOpacity = 0x364; // float
		constexpr auto DuplicateRow = 0x368; // int32_t
		constexpr auto bIsLastGroup = 0x36c; // bool
		constexpr auto bInOverviewMode = 0x36d; // bool
	}

	namespace n_UANIMBP_G19G5_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x308; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x410; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x430; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_2 = 0x4f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x538; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x560; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot = 0x588; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x5d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x670; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x7c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x848; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x8c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x8e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x908; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xa10; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto Mag01Alpha = 0xa30; // float
		constexpr auto ScopeAdjustAlpha = 0xa34; // float
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UARCandidateObject { // : UDataAsset
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UWaveOscillatorCameraShakePattern { // : USimpleCameraShakePattern
		constexpr auto LocationAmplitudeMultiplier = 0x38; // float
		constexpr auto LocationFrequencyMultiplier = 0x3c; // float
		constexpr auto X = 0x40; // FWaveOscillator
		constexpr auto Y = 0x4c; // FWaveOscillator
		constexpr auto Z = 0x58; // FWaveOscillator
		constexpr auto RotationAmplitudeMultiplier = 0x64; // float
		constexpr auto RotationFrequencyMultiplier = 0x68; // float
		constexpr auto Pitch = 0x6c; // FWaveOscillator
		constexpr auto Yaw = 0x78; // FWaveOscillator
		constexpr auto Roll = 0x84; // FWaveOscillator
		constexpr auto FOV = 0x90; // FWaveOscillator
	}

	namespace n_URadialIntMask { // : UFieldNodeInt
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UW_FireModes_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto FireMode_Auto = 0x270; // UW_FireMode_C*
		constexpr auto FireMode_Burst = 0x278; // UW_FireMode_C*
		constexpr auto FireMode_Safe = 0x280; // UW_FireMode_C*
		constexpr auto FireMode_Single = 0x288; // UW_FireMode_C*
		constexpr auto FireMode_StyleSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto FireMode_Text = 0x298; // UTextBlock*
		constexpr auto FireModeStates_Container = 0x2a0; // UVerticalBox*
		constexpr auto CurrentFireMode = 0x2a8; // EFireMode
		constexpr auto FadeOutTime = 0x2ac; // float
		constexpr auto TH_FadeOut = 0x2b0; // FTimerHandle
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_APickupActor { // : AActor
		constexpr auto OnActorPickedUp = 0x228; // FMulticastInlineDelegate
		constexpr auto OnActorPickedUp_NoParam = 0x238; // FMulticastInlineDelegate
		constexpr auto OnActorDropped = 0x248; // FMulticastInlineDelegate
		constexpr auto PickupName = 0x258; // FName
		constexpr auto SkeletalMesh = 0x260; // USkeletalMeshComponent*
		constexpr auto StaticMesh = 0x268; // UStaticMeshComponent*
		constexpr auto ObjectiveMarkerComponent = 0x270; // UObjectiveMarkerComponent*
		constexpr auto InteractableComponent = 0x278; // UInteractableComponent*
		constexpr auto PickupInstigator = 0x280; // AActor*
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_APaperCharacter { // : ACharacter
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UARComponent { // : USceneComponent
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto Score = 0x220; // float
		constexpr auto PlayerId = 0x224; // int32_t
		constexpr auto Ping = 0x228; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x22a; // char : 1
		constexpr auto bIsSpectator = 0x22a; // char : 1
		constexpr auto bOnlySpectator = 0x22a; // char : 1
		constexpr auto bIsABot = 0x22a; // char : 1
		constexpr auto bIsInactive = 0x22a; // char : 1
		constexpr auto bFromPreviousLevel = 0x22a; // char : 1
		constexpr auto StartTime = 0x22c; // int32_t
		constexpr auto EngineMessageClass = 0x230; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x240; // FString
		constexpr auto UniqueId = 0x250; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x280; // APawn*
		constexpr auto PlayerNamePrivate = 0x300; // FString
	}

	namespace n_AIncapacitatedHuman { // : AActor
		constexpr auto DefaultScene = 0x238; // USceneComponent*
		constexpr auto HumanMesh = 0x240; // USkeletalMeshComponent*
		constexpr auto HumanMeshFace = 0x248; // USkeletalMeshComponent*
		constexpr auto ReportInteractableComponent = 0x250; // UInteractableComponent*
		constexpr auto ScoringComponent = 0x258; // UScoringComponent*
		constexpr auto IncapacitatedAudioComponent = 0x260; // UFMODAudioComponent*
		constexpr auto RagdollPhysicsAsset = 0x268; // UPhysicsAsset*
		constexpr auto DyingMontage = 0x270; // UAnimMontage*
		constexpr auto FMODEventLoop = 0x278; // UFMODEvent*
		constexpr auto ShotParticleEffect = 0x280; // UParticleSystem*
		constexpr auto bStartDead = 0x288; // bool
		constexpr auto bCanEverDieByTime = 0x289; // bool
		constexpr auto TimeRemainingUntilDead = 0x28c; // float
		constexpr auto bIsInGroup = 0x290; // bool
		constexpr auto bIsMasterOfGroup = 0x291; // bool
		constexpr auto IncapacitatedHumansInGroup = 0x298; // TArray<AIncapacitatedHuman*>
		constexpr auto MasterHumanInGroup = 0x2a8; // AIncapacitatedHuman*
		constexpr auto bAttachReportInteractableToMesh = 0x2b0; // bool
		constexpr auto SocketToAttach = 0x2b4; // FName
		constexpr auto Team = 0x2bc; // ETeamType
		constexpr auto bIsDead = 0x2bd; // bool
		constexpr auto bHasBeenReported = 0x2be; // bool
	}

	namespace n_UMediaTimeStampInfo { // : UObject
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UZeuzConfig { // : UObject
		constexpr auto ProjectID = 0x28; // FString
		constexpr auto EnvironmentId = 0x38; // FString
		constexpr auto DevEnvironmentId = 0x48; // FString
		constexpr auto ApiKey = 0x58; // FString
		constexpr auto ApiPassword = 0x68; // FString
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto PlatformCrossplayRestrictions = 0x58; // TArray<FString>
		constexpr auto PlatformTypeMapping = 0x68; // TArray<FPartyBeaconCrossplayPlatformMapping>
		constexpr auto bEnableRemovalRequests = 0x78; // bool
		constexpr auto Reservations = 0x80; // TArray<FPartyReservation>
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 { // : UNiagaraDataInterfaceArray
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UCreateSessionCallbackProxyAdvanced { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UAnimatedIconWidget { // : UUserWidget
		constexpr auto IconImages = 0x260; // TArray<UImage*>
		constexpr auto CurrentIndex = 0x270; // int32_t
		constexpr auto ElapsedTime = 0x274; // float
		constexpr auto bPaused = 0x278; // char : 1
		constexpr auto InteractCircle_Overlay = 0x280; // UOverlay*
		constexpr auto InteractIcon_SizeBox = 0x288; // USizeBox*
		constexpr auto IconSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto ProgressCircle_Image = 0x298; // UImage*
		constexpr auto Anim_Interact = 0x2a0; // UWidgetAnimation*
		constexpr auto Anim_Focus = 0x2a8; // UWidgetAnimation*
		constexpr auto InteractionInvalidTintColor = 0x2b0; // FLinearColor
		constexpr auto ProgressCircleMaterial = 0x2c0; // UMaterialInterface*
		constexpr auto ProgressParamName = 0x2c8; // FName
		constexpr auto ParentComponent = 0x2d0; // UInteractableComponent*
		constexpr auto MID_ProgressCircle = 0x2d8; // UMaterialInstanceDynamic*
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceGrid3D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UHotkeysWidget { // : UBaseWidget
		constexpr auto Hotkeys_Overlay = 0x278; // UOverlay*
		constexpr auto Hotkeys_Container = 0x280; // UHorizontalBox*
		constexpr auto Hotkey_Grenade = 0x288; // UHotkeyWidget*
		constexpr auto Hotkey_Chemlight = 0x290; // UHotkeyWidget*
		constexpr auto Hotkey_NVG = 0x298; // UHotkeyWidget*
		constexpr auto Hotkey_Scope = 0x2a0; // UHotkeyWidget*
		constexpr auto IlluminatorAttachment_Switcher = 0x2a8; // UWidgetSwitcher*
		constexpr auto Hotkey_Laser = 0x2b0; // UHotkeyWidget*
		constexpr auto Hotkey_Flashlight = 0x2b8; // UHotkeyWidget*
		constexpr auto PlayerCharacter = 0x2c0; // APlayerCharacter*
	}

	namespace n_UGenlockedFixedRateCustomTimeStep { // : UGenlockedCustomTimeStep
		constexpr auto FrameRate = 0x28; // FFrameRate
	}

	namespace n_UARTrackedGeometry { // : UObject
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto SpatialMeshUsageFlags = 0xb9; // EARSpatialMeshUsageFlags
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UNiagaraDataInterfaceGrid2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UMagicLeapARPinSettings { // : UObject
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UFMODEventParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x258; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x278; // TArray<FName>
	}

	namespace n_UAIPerceptionSystem { // : UAISubsystem
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent { // : UVRNotificationsComponent
		constexpr auto OnHeadTrackingLost = 0x140; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x170; // FMulticastInlineDelegate
	}

	namespace n_UConversation { // : UObject
		constexpr auto ConversationData = 0x40; // TArray<FConversationData>
		constexpr auto OnConversationContinuing = 0x60; // FMulticastInlineDelegate
		constexpr auto OnEndConversation = 0x70; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UGranularSynth { // : USynthComponent
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UNiagaraDataInterfaceArrayFloat { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x220; // UShapeComponent*
	}

	namespace n_UTestMovieSceneEvalHookTrack { // : UMovieSceneTrack
		constexpr auto SectionArray = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_AAccuracyVolume { // : AVolume
		constexpr auto AccuracyNerfPercentage = 0x258; // float
		constexpr auto bAffectsSWAT = 0x25c; // char : 1
		constexpr auto bAffectsSuspects = 0x25c; // char : 1
	}

	namespace n_UOpenCommandMenuQuestNode { // : UBaseTeamQuestNode
		constexpr auto bInverse = 0x270; // bool
	}

	namespace n_AMagicLeapSharedWorldGameMode { // : AGameMode
		constexpr auto SharedWorldData = 0x308; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x318; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x328; // float
		constexpr auto ChosenOne = 0x3d0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UVirtualTexture2D { // : UTexture2D
		constexpr auto Settings = 0x1a0; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x1ac; // bool
		constexpr auto bSinglePhysicalSpace = 0x1ad; // bool
	}

	namespace n_UFriendsList { // : UUserWidget
		constexpr auto OnSuccess = 0x260; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x270; // FMulticastInlineDelegate
		constexpr auto FriendsList = 0x280; // TArray<FFriend>
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_AControlPointMeshActor { // : AActor
		constexpr auto ControlPointMeshComponent = 0x220; // UControlPointMeshComponent*
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto LevelIndex = 0x178; // int32_t
		constexpr auto FirstResourceMemMip = 0x17c; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0x180; // char : 1
		constexpr auto AddressX = 0x181; // TextureAddress
		constexpr auto AddressY = 0x182; // TextureAddress
		constexpr auto ImportedSize = 0x184; // FIntPoint
	}

	namespace n_ULandscapeSettings { // : UDeveloperSettings
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UW_ScoreboardEntry_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Arrested_Text = 0x268; // UTextBlock*
		constexpr auto Arrests_Text = 0x270; // UTextBlock*
		constexpr auto BG_Image = 0x278; // UImage*
		constexpr auto BoardRank_Text = 0x280; // UTextBlock*
		constexpr auto Damage_Text = 0x288; // UTextBlock*
		constexpr auto Deaths_Text = 0x290; // UTextBlock*
		constexpr auto HighlightSelf_Box = 0x298; // USizeBox*
		constexpr auto Incapacitations_Text = 0x2a0; // UTextBlock*
		constexpr auto Kills_Text = 0x2a8; // UTextBlock*
		constexpr auto Ping_Text = 0x2b0; // UTextBlock*
		constexpr auto PlayerName_Text = 0x2b8; // UTextBlock*
		constexpr auto PlayerRank_Text = 0x2c0; // UTextBlock*
		constexpr auto Score_Text = 0x2c8; // UTextBlock*
		constexpr auto Status_Text = 0x2d0; // UTextBlock*
		constexpr auto Team = 0x2d8; // ETeamType
		constexpr auto bSelf = 0x2d9; // bool
		constexpr auto BoardRank = 0x2dc; // int32_t
		constexpr auto PlayerRank = 0x2e0; // int32_t
		constexpr auto Name = 0x2e8; // FText
		constexpr auto Score = 0x300; // int32_t
		constexpr auto Damage = 0x304; // int32_t
		constexpr auto Kills = 0x308; // int32_t
		constexpr auto Deaths = 0x30c; // int32_t
		constexpr auto Arrests = 0x310; // int32_t
		constexpr auto Arrested = 0x314; // int32_t
		constexpr auto Incapacitations = 0x318; // int32_t
		constexpr auto Status = 0x31c; // EPlayerHealthStatus
		constexpr auto Ping = 0x320; // int32_t
		constexpr auto DefaultColor = 0x328; // FSlateColor
		constexpr auto SelfColor = 0x350; // FSlateColor
		constexpr auto PlayerState = 0x378; // AReadyOrNotPlayerState*
	}

	namespace n_ADestructibleVehicle { // : AActor
		constexpr auto CarBody = 0x220; // UStaticMeshComponent*
		constexpr auto FrontLeftDoor = 0x228; // UStaticMeshComponent*
		constexpr auto FrontRightDoor = 0x230; // UStaticMeshComponent*
		constexpr auto BackLeftDoor = 0x238; // UStaticMeshComponent*
		constexpr auto BackRightDoor = 0x240; // UStaticMeshComponent*
		constexpr auto RearWindshield = 0x248; // UDestructibleComponent*
		constexpr auto FrontWindshield = 0x250; // UDestructibleComponent*
		constexpr auto RearSideWindowLeft = 0x258; // UDestructibleComponent*
		constexpr auto RearSideWindowRight = 0x260; // UDestructibleComponent*
		constexpr auto RearDoorWindowLeft = 0x268; // UDestructibleComponent*
		constexpr auto RearDoorWindowRight = 0x270; // UDestructibleComponent*
		constexpr auto FrontDoorWindowLeft = 0x278; // UDestructibleComponent*
		constexpr auto FrontDoorWindowRight = 0x280; // UDestructibleComponent*
		constexpr auto Boot = 0x288; // UStaticMeshComponent*
		constexpr auto RearVisionMirror = 0x290; // UStaticMeshComponent*
		constexpr auto AirBag = 0x298; // UStaticMeshComponent*
		constexpr auto LeftSideMirror = 0x2a0; // UStaticMeshComponent*
		constexpr auto RightSideMirror = 0x2a8; // UStaticMeshComponent*
		constexpr auto FrontLeftTyre = 0x2b0; // UStaticMeshComponent*
		constexpr auto FrontRightTyre = 0x2b8; // UStaticMeshComponent*
		constexpr auto RearLeftTyre = 0x2c0; // UStaticMeshComponent*
		constexpr auto RearRightTyre = 0x2c8; // UStaticMeshComponent*
		constexpr auto LeftLightCollision = 0x2d0; // USphereComponent*
		constexpr auto RightLightCollision = 0x2d8; // USphereComponent*
		constexpr auto LeftHeadLight = 0x2e0; // USpotLightComponent*
		constexpr auto RightHeadLight = 0x2e8; // USpotLightComponent*
		constexpr auto CarAlarmAudio = 0x2f0; // UAudioComponent*
		constexpr auto bLightsOn = 0x2fa; // bool
		constexpr auto AlarmHeadLightsFlashInterval = 0x2fc; // float
		constexpr auto FrontLightsOnMaterial = 0x300; // UMaterialInstance*
		constexpr auto FrontLeftLightsMaterialIndex = 0x308; // int32_t
		constexpr auto FrontRightLightsMaterialIndex = 0x30c; // int32_t
		constexpr auto RearLightsOnMaterial = 0x310; // UMaterialInstance*
		constexpr auto FrontLightsOffMaterial = 0x318; // UMaterialInstance*
		constexpr auto RearLightsOffMaterial = 0x320; // UMaterialInstance*
		constexpr auto RearLeftLightsMaterialIndex = 0x328; // int32_t
		constexpr auto RearRightLightsMaterialIndex = 0x32c; // int32_t
		constexpr auto RollAmountOnTyreDamage = 0x330; // float
		constexpr auto PitchAmountOnTyreDamage = 0x334; // float
		constexpr auto SinkAmountOnTyreDamage = 0x338; // float
		constexpr auto AppliedRotation = 0x354; // FRotator
		constexpr auto bFrontLeftTyreDestroyed = 0x360; // bool
		constexpr auto bFrontRightTyreDestroyed = 0x361; // bool
		constexpr auto bRearLeftTyreDestroyed = 0x362; // bool
		constexpr auto bRearRightTyreDestroyed = 0x363; // bool
		constexpr auto bForceLightsOn = 0x364; // bool
		constexpr auto bLeftLightDestroyed = 0x365; // bool
		constexpr auto bRightLightDestroyed = 0x366; // bool
		constexpr auto FrontLeftDoorOpenAmount = 0x368; // float
		constexpr auto FrontRightDoorOpenAmount = 0x36c; // float
		constexpr auto BackLeftDoorOpenAmount = 0x370; // float
		constexpr auto BackRightDoorOpenAmount = 0x374; // float
		constexpr auto BootOpenAmount = 0x378; // float
		constexpr auto PlayerRotationMultiplier = 0x37c; // float
		constexpr auto ChanceToCauseAirbagToDeployOnDamage = 0x380; // float
		constexpr auto AirbagDeploySound = 0x388; // USoundCue*
		constexpr auto ChanceToCauseAlarmOnDamage = 0x390; // float
		constexpr auto AlarmPlayLength = 0x394; // float
		constexpr auto BootMaxOpen = 0x398; // float
		constexpr auto LeftDoorMaxOpen = 0x39c; // float
		constexpr auto RightDoorMaxOpen = 0x3a0; // float
		constexpr auto RandomShatteredGlassMaterial = 0x3a8; // TArray<UMaterialInstance*>
		constexpr auto OnApplyDamageToWindow = 0x3b8; // FMulticastInlineDelegate
	}

	namespace n_UW_MatchStatusCard_V2_C { // : UMatchStatusCardWidget
		constexpr auto BlueTeam_Progress = 0x288; // UW_TeamProgressScore_C*
		constexpr auto BlueTeam_Status = 0x290; // UW_TeamStatus_C*
		constexpr auto GameModeScoreTrackers_Switcher = 0x298; // UWidgetSwitcher*
		constexpr auto KingOfTheHill_Tracker = 0x2a0; // UW_KingOfTheHillMeter_Tracker_C*
		constexpr auto RedTeam_Progress = 0x2a8; // UW_TeamProgressScore_C*
		constexpr auto RedTeam_Status = 0x2b0; // UW_TeamStatus_C*
	}

	namespace n_UCursor_OpenHand_C { // : UCursorWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Cursor_Switcher = 0x268; // UWidgetSwitcher*
		constexpr auto Mouse_Free = 0x270; // UImage*
		constexpr auto Mouse_Pressed = 0x278; // UImage*
		constexpr auto MouseDown = 0x280; // bool
	}

	namespace n_AGrenadeProjectile { // : ABulletProjectile
		constexpr auto DetonationRadialForce = 0x398; // URadialForceComponent*
		constexpr auto DetonationTime = 0x3a0; // float
		constexpr auto DetonationBetweenTime = 0x3a4; // float
		constexpr auto ElapsedTime = 0x3a8; // float
		constexpr auto DetonationCount = 0x3ac; // int32_t
		constexpr auto DetonationMax = 0x3b0; // int32_t
		constexpr auto bTriggersActionMusic = 0x3b4; // bool
		constexpr auto GrenadeDamage = 0x3b8; // TArray<FGrenadeDamage>
		constexpr auto bIncreaseRadiusOverTime = 0x3c8; // bool
	}

	namespace n_UGizmoScaledTransformSource { // : UGizmoBaseTransformSource
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_ABaseArmour { // : ABaseItem
		constexpr auto LastSetMeshGearSlotMaterial = 0x9a8; // UMaterialInstance*
		constexpr auto ArmourType = 0x9b0; // EArmourType
		constexpr auto FrontPlateWeights = 0x9b8; // TArray<float>
		constexpr auto BackPlateWeights = 0x9c8; // TArray<float>
		constexpr auto SidePlateWeights = 0x9d8; // TArray<float>
		constexpr auto BlockHeadshotCount = 0x9e8; // int32_t
		constexpr auto bUnlockMoreSlots = 0x9ec; // bool
		constexpr auto bHalfStingerDuration = 0x9ed; // bool
		constexpr auto ScaleLensFlare = 0x9f0; // float
		constexpr auto Variations = 0x9f8; // TArray<TSoftObjectPtr<USkeletalMesh>>
		constexpr auto ArmourHitParticle = 0xa08; // UParticleSystem*
		constexpr auto ArmourHitSound = 0xa10; // UFMODEvent*
		constexpr auto PaperdollTexture = 0xa18; // TSoftObjectPtr<UTexture2D>
		constexpr auto PaperdollTexture_Crouch = 0xa40; // TSoftObjectPtr<UTexture2D>
		constexpr auto InterceptShakeFront = 0xa68; // UMatineeCameraShake*
		constexpr auto InterceptShakeBack = 0xa70; // UMatineeCameraShake*
		constexpr auto InterceptShakeLeft = 0xa78; // UMatineeCameraShake*
		constexpr auto InterceptShakeRight = 0xa80; // UMatineeCameraShake*
		constexpr auto bDebugArmorHitDebug = 0xa88; // bool
		constexpr auto bUseLightbar = 0xa89; // bool
		constexpr auto LeaderLightbarColour = 0xa8c; // FLinearColor
		constexpr auto RedTeamLightbarColour = 0xa9c; // FLinearColor
		constexpr auto BlueTeamLightbarColour = 0xaac; // FLinearColor
		constexpr auto LightbarIntensity = 0xabc; // float
		constexpr auto ArmourHealth = 0xac0; // UArmourResourceComponent*
		constexpr auto SpawnedCoverageLevel = 0xac8; // EArmourCoverage
		constexpr auto SpawnedArmourLevel = 0xac9; // EArmourLevel
		constexpr auto LastGeneratedMaterialsOnSkelMesh = 0xad0; // USkeletalMesh*
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bInheritUserParameterSettings = 0xe5; // char : 1
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto paramName = 0x58; // FName
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UW_ItemSelection_Item_C { // : UBaseWidget
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Anim_Focus = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Select = 0x288; // UWidgetAnimation*
		constexpr auto Anim_FadeOut = 0x290; // UWidgetAnimation*
		constexpr auto BG_Blur = 0x298; // UBackgroundBlur*
		constexpr auto BG_Image = 0x2a0; // UImage*
		constexpr auto CanvasPanel = 0x2a8; // UCanvasPanel*
		constexpr auto Icon_Image = 0x2b0; // UImage*
		constexpr auto Icon_Text = 0x2b8; // UTextBlock*
		constexpr auto IconStyle_Switcher = 0x2c0; // UWidgetSwitcher*
		constexpr auto Selected_Image = 0x2c8; // UImage*
		constexpr auto DefaultIcon = 0x2d0; // FSlateBrush
		constexpr auto ItemName = 0x358; // FText
		constexpr auto BackgroundColor = 0x370; // FSlateColor
		constexpr auto IconColor = 0x398; // FSlateColor
		constexpr auto bUseNameInPlaceOfIcon = 0x3c0; // bool
		constexpr auto bIsPirated = 0x3c1; // bool
		constexpr auto SelectedColor = 0x3c8; // FSlateColor
		constexpr auto ED_OnAnimFadeOutFinished = 0x3f0; // FMulticastInlineDelegate
		constexpr auto UnselectedColor = 0x400; // FSlateColor
		constexpr auto InDesignTime = 0x428; // bool
		constexpr auto ED_OnAnimSelectFinished = 0x430; // FMulticastInlineDelegate
	}

	namespace n_UVolumetricCloudComponent { // : USceneComponent
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
		constexpr auto StopTracingTransmittanceThreshold = 0x234; // float
	}

	namespace n_UNiagaraSystem { // : UFXSystemAsset
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x33; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto bNeedsGPUContextInitForDataInterfaces = 0x3b5; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_AMagicLeapARPinInfoActor_C { // : AMagicLeapARPinInfoActorBase
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Right = 0x240; // UStaticMeshComponent*
		constexpr auto Forward = 0x248; // UStaticMeshComponent*
		constexpr auto Up = 0x250; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x258; // USphereComponent*
		constexpr auto AxisRoot = 0x260; // USceneComponent*
		constexpr auto VisualizerRoot = 0x268; // USceneComponent*
		constexpr auto TypeValue = 0x270; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x278; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x280; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x288; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x290; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2a8; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b0; // USceneComponent*
		constexpr auto Root = 0x2b8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c0; // float
	}

	namespace n_UAudioImpulseResponse { // : UObject
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_ADeployableDepot { // : AActor
		constexpr auto SpawnedDeployableComponents = 0x220; // TArray<UDeployableSpawnComponent*>
		constexpr auto DepotLabel = 0x230; // FName
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x480; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x488; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x490; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x4a0; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x5a8; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5b0; // int32_t
		constexpr auto MinLodModel = 0x5b4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5c0; // float
		constexpr auto LODInfo = 0x5d0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x604; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x606; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x606; // char : 1
		constexpr auto bForceWireframe = 0x606; // char : 1
		constexpr auto bDisplayBones = 0x606; // char : 1
		constexpr auto bDisableMorphTarget = 0x606; // char : 1
		constexpr auto bHideSkin = 0x607; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x607; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x607; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x607; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x607; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x607; // char : 1
		constexpr auto bRecentlyRendered = 0x607; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x607; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x608; // char : 1
		constexpr auto bCPUSkinning = 0x608; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x608; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x608; // char : 1
		constexpr auto bRenderStatic = 0x608; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x608; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x609; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x609; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x60c; // float
		constexpr auto CachedWorldSpaceBounds = 0x620; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x640; // FMatrix
	}

	namespace n_UFieldSystemComponent { // : UPrimitiveComponent
		constexpr auto FieldSystem = 0x450; // UFieldSystem*
		constexpr auto bIsWorldField = 0x458; // bool
		constexpr auto bIsChaosField = 0x459; // bool
		constexpr auto SupportedSolvers = 0x460; // TArray<TSoftObjectPtr<AChaosSolverActor>>
		constexpr auto ConstructionCommands = 0x470; // FFieldObjectCommands
		constexpr auto BufferCommands = 0x4a0; // FFieldObjectCommands
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UW_Hotkeys_C { // : UHotkeysWidget
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
	}

	namespace n_ARectLight { // : ALight
		constexpr auto RectLightComponent = 0x230; // URectLightComponent*
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UGizmoAxisTranslationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UFlankingCombatMove { // : UBaseCombatMoveActivity
		constexpr auto FlankingAvoidanceVolume = 0x1d0; // AFlankingAvoidanceVolume*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack { // : UMovieScenePropertyTrack
		constexpr auto MaterialIndex = 0xc8; // int32_t
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xf0; // FMovieSceneIntegerChannel
	}

	namespace n_UHesitationBarWidget { // : UUserWidget
		constexpr auto HesitationBar_Image = 0x260; // UImage*
		constexpr auto BreakAnim = 0x268; // UWidgetAnimation*
		constexpr auto HesitationBarMaterial = 0x270; // UMaterialInterface*
		constexpr auto ProgressParamName = 0x278; // FName
		constexpr auto ComplianceStartParamName = 0x280; // FName
		constexpr auto ComplianceEndParamName = 0x288; // FName
		constexpr auto ComplianceColorParamName = 0x290; // FName
		constexpr auto DefianceStartParamName = 0x298; // FName
		constexpr auto DefianceEndParamName = 0x2a0; // FName
		constexpr auto DefianceColorParamName = 0x2a8; // FName
		constexpr auto PercentageFilled = 0x2b0; // float
		constexpr auto MID_HesitationBar = 0x2b8; // UMaterialInstanceDynamic*
	}

	namespace n_UClothLODDataCommon_Legacy { // : UObject
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_AHUD_COOP_C { // : APlayerHUD
		constexpr auto DefaultSceneRoot = 0x318; // USceneComponent*
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_ADebugDisplayActor { // : AActor
		constexpr auto SceneComponent = 0x228; // USceneComponent*
		constexpr auto WidgetComponent = 0x230; // UWidgetComponent*
		constexpr auto LifeSpan = 0x238; // float
		constexpr auto bBillboarding = 0x23c; // bool
		constexpr auto Velocity = 0x240; // FVector
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UPhrasesList { // : UObject
		constexpr auto Data = 0x28; // TMap<FName, FLipSync_Phrase>
	}

	namespace n_UMovieSceneObjectPropertySection { // : UMovieSceneSection
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UNiagaraComponent { // : UFXSystemComponent
		constexpr auto Asset = 0x450; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x458; // ENiagaraTickBehavior
		constexpr auto RandomSeedOffset = 0x45c; // int32_t
		constexpr auto OverrideParameters = 0x460; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x528; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x528; // char : 1
		constexpr auto bAutoDestroy = 0x558; // char : 1
		constexpr auto bRenderingEnabled = 0x558; // char : 1
		constexpr auto bAutoManageAttachment = 0x558; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x558; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x55c; // float
		constexpr auto EmitterMaterials = 0x560; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x578; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
	}

	namespace n_ASceneCapturePlayerCamera_C { // : ASceneCapture2D
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction { // : UNiagaraDataInterface
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UObjectiveWidget { // : UBaseWidget
		constexpr auto OwningComponent = 0x278; // UWidgetComponent*
		constexpr auto ObjectiveTeam = 0x280; // ETeamType
	}

	namespace n_ABandwidthTestActor { // : AActor
		constexpr auto BandwidthGenerator = 0x220; // FBandwidthTestGenerator
	}

	namespace n_ABP_Sky_Sphere_C { // : AActor
		constexpr auto SkySphereMesh = 0x220; // UStaticMeshComponent*
		constexpr auto Base = 0x228; // USceneComponent*
		constexpr auto Sky material = 0x230; // UMaterialInstanceDynamic*
		constexpr auto Refresh material = 0x238; // bool
		constexpr auto Directional light actor = 0x240; // ADirectionalLight*
		constexpr auto Colors determined by sun position = 0x248; // bool
		constexpr auto Sun height = 0x24c; // float
		constexpr auto Sun brightness = 0x250; // float
		constexpr auto Horizon falloff = 0x254; // float
		constexpr auto Zenith color = 0x258; // FLinearColor
		constexpr auto Horizon color = 0x268; // FLinearColor
		constexpr auto Cloud color = 0x278; // FLinearColor
		constexpr auto Overall color = 0x288; // FLinearColor
		constexpr auto Cloud speed = 0x298; // float
		constexpr auto Cloud opacity = 0x29c; // float
		constexpr auto Stars brightness = 0x2a0; // float
		constexpr auto Horizon color curve = 0x2a8; // UCurveLinearColor*
		constexpr auto Zenith color curve = 0x2b0; // UCurveLinearColor*
		constexpr auto Cloud color curve = 0x2b8; // UCurveLinearColor*
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_AMainMenuPawn_C { // : APawn
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Camera = 0x288; // UCameraComponent*
		constexpr auto Scene = 0x290; // USceneComponent*
		constexpr auto DefaultFOV = 0x298; // float
	}

	namespace n_UAnimNotify_ChangeCombatMove { // : UAnimNotify
		constexpr auto PossibleCombatMoves = 0x38; // TArray<UBaseCombatMoveActivity*>
	}

	namespace n_UMovieSceneGeometryCacheTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_APreviewCharacterTemplate_C { // : AActor
		constexpr auto NODs = 0x220; // USkeletalMeshComponent*
		constexpr auto Goggles = 0x228; // USkeletalMeshComponent*
		constexpr auto FShield = 0x230; // USkeletalMeshComponent*
		constexpr auto Gasmask = 0x238; // USkeletalMeshComponent*
		constexpr auto PistolMesh = 0x240; // USkeletalMeshComponent*
		constexpr auto BodyExtraMesh = 0x248; // USkeletalMeshComponent*
		constexpr auto HeadMesh = 0x250; // USkeletalMeshComponent*
		constexpr auto ItemMagMesh = 0x258; // UStaticMeshComponent*
		constexpr auto ItemMesh = 0x260; // USkeletalMeshComponent*
		constexpr auto BodyMesh = 0x268; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x270; // USceneComponent*
		constexpr auto FaceROMReference = 0x278; // UPoseAsset*
		constexpr auto PreviewSequence = 0x280; // UAnimSequence*
		constexpr auto FacePreviewSequence = 0x288; // UAnimSequence*
	}

	namespace n_UMaterialFunctionInstance { // : UMaterialFunctionInterface
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UTileView { // : UListView
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4e0; // float
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_AMagicLeapARPinRenderer { // : AActor
		constexpr auto bInfoActorsVisibilityOverride = 0x220; // bool
		constexpr auto AllInfoActors = 0x228; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x280; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_UMovieSceneMediaTrack { // : UMovieSceneNameableTrack
		constexpr auto MediaSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UAnimSharingAdditiveInstance { // : UAnimInstance
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UGizmoBaseComponent { // : UPrimitiveComponent
		constexpr auto Color = 0x450; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x460; // float
		constexpr auto PixelHitDistanceThreshold = 0x464; // float
	}

	namespace n_UW_StandardCombobox_New_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackGroundImg = 0x268; // UImage*
		constexpr auto ComboboxAnchor = 0x270; // UMenuAnchor*
		constexpr auto ComboboxButton = 0x278; // UButton*
		constexpr auto ComboButton_Dn = 0x280; // UImage*
		constexpr auto ComboButton_Hi = 0x288; // UImage*
		constexpr auto DropdownArrow = 0x290; // UImage*
		constexpr auto SelectedOptionTextWidget = 0x298; // UTextBlock*
		constexpr auto OptionsAsStrings = 0x2a0; // TArray<FString>
		constexpr auto OptionsAsText = 0x2b0; // TArray<FText>
		constexpr auto DefaultOptionSelected = 0x2c0; // int32_t
		constexpr auto OnOptionMenuOpened = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnOptionMenuClosed = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnNewOptionSelected = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x308; // FMulticastInlineDelegate
		constexpr auto DescriptionWidget = 0x318; // UTextBlock*
		constexpr auto DescriptionText = 0x320; // FText
		constexpr auto OnPressed = 0x338; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x348; // FMulticastInlineDelegate
		constexpr auto Opened = 0x358; // bool
		constexpr auto Hovered = 0x359; // bool
		constexpr auto Pressed = 0x35a; // bool
		constexpr auto OptionDescriptions = 0x360; // TArray<FText>
		constexpr auto CurrentlySelectedOption = 0x370; // int32_t
		constexpr auto OpenedSound = 0x378; // UFMODEvent*
		constexpr auto ClosedSound = 0x380; // UFMODEvent*
		constexpr auto OptionSelectedSound = 0x388; // UFMODEvent*
		constexpr auto ComboboxHoveredSound = 0x390; // UFMODEvent*
		constexpr auto ImageBackgroundColor = 0x398; // FLinearColor
		constexpr auto ItemBackgroundColor = 0x3a8; // FLinearColor
		constexpr auto HoveredItemBackgroundColor = 0x3b8; // FLinearColor
		constexpr auto FontSize = 0x3c8; // int32_t
	}

	namespace n_UParticleSystemComponent { // : UFXSystemComponent
		constexpr auto Template = 0x450; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x458; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x468; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x479; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x479; // char : 1
		constexpr auto bAllowRecycling = 0x479; // char : 1
		constexpr auto bAutoManageAttachment = 0x479; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x479; // char : 1
		constexpr auto bWarmingUp = 0x47a; // char : 1
		constexpr auto bOverrideLODMethod = 0x47a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x47a; // char : 1
		constexpr auto LODMethod = 0x485; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x486; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x488; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4c8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4d8; // bool
		constexpr auto OldPosition = 0x4dc; // FVector
		constexpr auto PartSysVelocity = 0x4e8; // FVector
		constexpr auto WarmupTime = 0x4f4; // float
		constexpr auto WarmupTickRate = 0x4f8; // float
		constexpr auto SecondsBeforeInactive = 0x500; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x508; // float
		constexpr auto ReplayClips = 0x528; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x540; // float
		constexpr auto AutoAttachParent = 0x598; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x5a0; // FName
		constexpr auto AutoAttachLocationRule = 0x5a8; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a9; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5aa; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5d8; // FMulticastInlineDelegate
	}

	namespace n_AReadyOrNotSignificanceManager { // : AInfo
		constexpr auto ActorsMadeIrrelevantThisFrame = 0x230; // TArray<AActor*>
		constexpr auto ActorsMadeRelevantThisFrame = 0x240; // TArray<AActor*>
		constexpr auto ActorsMadeIrrelevant = 0x250; // TArray<AActor*>
		constexpr auto ActorsRelevantToSignificance = 0x268; // TArray<AActor*>
		constexpr auto CharactersRelevantToSignificance = 0x278; // TArray<AReadyOrNotCharacter*>
		constexpr auto SkeletalMeshLookupMap = 0x288; // TMap<USkeletalMeshComponent*, USkeletalMesh*>
		constexpr auto SceneCompAttachmentData = 0x2d8; // TMap<USceneComponent*, FOptimizationAttachmentData>
		constexpr auto StaticMeshLookupMap = 0x328; // TMap<UStaticMeshComponent*, UStaticMesh*>
		constexpr auto IrrelevantPlayerCharacters = 0x378; // TArray<AReadyOrNotCharacter*>
		constexpr auto RelevantViewpoints = 0x408; // TArray<FTransform>
		constexpr auto PlayerViewTargets = 0x418; // TArray<AActor*>
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_APrimary_M14_C { // : ABaseMagazineWeapon
		constexpr auto UberGraphFrame = 0x1260; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ULevelSequenceAnimSequenceLink { // : UAssetUserData
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAssetManagerSettings { // : UDeveloperSettings
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UDestructibleComponent { // : USkinnedMeshComponent
		constexpr auto bFractureEffectOverride = 0x6a0; // char : 1
		constexpr auto FractureEffects = 0x6a8; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6b8; // bool
		constexpr auto LargeChunkThreshold = 0x6bc; // float
		constexpr auto OnComponentFracture = 0x6d0; // FMulticastInlineDelegate
	}

	namespace n_UDeployableSpawnComponent { // : USceneComponent
		constexpr auto ItemClass = 0x1f8; // AActor*
		constexpr auto DeployableLabel = 0x200; // FName
	}

	namespace n_UEditableMesh { // : UObject
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_UChaosClothConfig { // : UClothConfigCommon
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto TetherStiffness = 0x50; // FChaosClothWeightedValue
		constexpr auto LimitScale = 0x58; // float
		constexpr auto bUseGeodesicDistance = 0x5c; // bool
		constexpr auto ShapeTargetStiffness = 0x60; // float
		constexpr auto CollisionThickness = 0x64; // float
		constexpr auto FrictionCoefficient = 0x68; // float
		constexpr auto bUseCCD = 0x6c; // bool
		constexpr auto bUseSelfCollisions = 0x6d; // bool
		constexpr auto SelfCollisionThickness = 0x70; // float
		constexpr auto bUseLegacyBackstop = 0x74; // bool
		constexpr auto DampingCoefficient = 0x78; // float
		constexpr auto bUsePointBasedWindModel = 0x7c; // bool
		constexpr auto DragCoefficient = 0x80; // float
		constexpr auto LiftCoefficient = 0x84; // float
		constexpr auto bUseGravityOverride = 0x88; // bool
		constexpr auto GravityScale = 0x8c; // float
		constexpr auto Gravity = 0x90; // FVector
		constexpr auto AnimDriveStiffness = 0x9c; // FChaosClothWeightedValue
		constexpr auto AnimDriveDamping = 0xa4; // FChaosClothWeightedValue
		constexpr auto LinearVelocityScale = 0xac; // FVector
		constexpr auto AngularVelocityScale = 0xb8; // float
		constexpr auto FictitiousAngularScale = 0xbc; // float
		constexpr auto bUseTetrahedralConstraints = 0xc0; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xc1; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xc2; // bool
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UGeometryCollectionComponent { // : UMeshComponent
		constexpr auto ChaosSolverActor = 0x480; // AChaosSolverActor*
		constexpr auto RestCollection = 0x568; // UGeometryCollection*
		constexpr auto InitializationFields = 0x570; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x580; // bool
		constexpr auto ObjectType = 0x588; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x589; // bool
		constexpr auto ClusterGroupIndex = 0x58c; // int32_t
		constexpr auto MaxClusterLevel = 0x590; // int32_t
		constexpr auto DamageThreshold = 0x598; // TArray<float>
		constexpr auto ClusterConnectionType = 0x5a8; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x5ac; // int32_t
		constexpr auto CollisionSampleFraction = 0x5b0; // float
		constexpr auto LinearEtherDrag = 0x5b4; // float
		constexpr auto AngularEtherDrag = 0x5b8; // float
		constexpr auto PhysicalMaterial = 0x5c0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5c8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5cc; // FVector
		constexpr auto InitialAngularVelocity = 0x5d8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5e8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5f0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x650; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x678; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x688; // float
		constexpr auto CachePlayback = 0x68c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x690; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x6a0; // bool
		constexpr auto bNotifyCollisions = 0x6a1; // bool
		constexpr auto bEnableReplication = 0x6a2; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x6a3; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x6a4; // int32_t
		constexpr auto RepData = 0x6a8; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8d8; // UBodySetup*
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x228; // float
		constexpr auto MaxDrawDistance = 0x22c; // float
		constexpr auto MaxDistanceFadeRange = 0x230; // float
		constexpr auto bUseTemperature = 0x234; // char : 1
		constexpr auto ShadowMapChannel = 0x238; // int32_t
		constexpr auto MinRoughness = 0x240; // float
		constexpr auto SpecularScale = 0x244; // float
		constexpr auto ShadowResolutionScale = 0x248; // float
		constexpr auto ShadowBias = 0x24c; // float
		constexpr auto ShadowSlopeBias = 0x250; // float
		constexpr auto ShadowSharpen = 0x254; // float
		constexpr auto ContactShadowLength = 0x258; // float
		constexpr auto ContactShadowLengthInWS = 0x25c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x25c; // char : 1
		constexpr auto CastTranslucentShadows = 0x25c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x25c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x25c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x25c; // char : 1
		constexpr auto LightingChannels = 0x260; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x268; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x270; // FVector
		constexpr auto IESTexture = 0x280; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x288; // char : 1
		constexpr auto IESBrightnessScale = 0x28c; // float
		constexpr auto LightFunctionFadeDistance = 0x290; // float
		constexpr auto DisabledBrightness = 0x294; // float
		constexpr auto bEnableLightShaftBloom = 0x298; // char : 1
		constexpr auto BloomScale = 0x29c; // float
		constexpr auto BloomThreshold = 0x2a0; // float
		constexpr auto BloomMaxBrightness = 0x2a4; // float
		constexpr auto BloomTint = 0x2a8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2ac; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b0; // float
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UPaperTileLayer { // : UObject
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_ADetonator { // : ABaseItem
		constexpr auto PlacedCharges = 0x960; // TArray<APlacedC2Explosive*>
		constexpr auto PlacedChargesCount = 0x970; // int32_t
		constexpr auto MaxDetonationDistance = 0x974; // float
		constexpr auto DetonatorLightDynamicMaterial = 0x978; // UMaterialInstanceDynamic*
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UMapActorComponent { // : USceneComponent
		constexpr auto bCondition = 0x1f8; // char : 1
		constexpr auto bEnabled = 0x1f8; // char : 1
		constexpr auto MapActorWidgetClass = 0x200; // UMapActorWidget*
		constexpr auto IconText = 0x208; // FText
		constexpr auto IconTextColor = 0x220; // FLinearColor
		constexpr auto IconBrush = 0x230; // FSlateBrush
		constexpr auto IconColor = 0x2b8; // FLinearColor
		constexpr auto bUseActorRotation = 0x2c8; // char : 1
		constexpr auto RotationOffset = 0x2cc; // float
		constexpr auto bAddedToMap = 0x2d0; // bool
		constexpr auto MapIconWidget = 0x2d8; // UMapActorIconWidget*
	}

	namespace n_UANIMBP_Tec9_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_URadialWidgetThemeData { // : UDataAsset
		constexpr auto Name = 0x30; // FName
		constexpr auto Description = 0x38; // FText
		constexpr auto StartingSectorIndex = 0x50; // int32_t
		constexpr auto StartingSectorAngle = 0x54; // float
		constexpr auto IconSize = 0x58; // float
		constexpr auto IconPadding = 0x5c; // float
		constexpr auto SectorInnerRadius = 0x60; // float
		constexpr auto SectorOuterRadius = 0x64; // float
		constexpr auto GapSize = 0x68; // float
		constexpr auto WheelSize = 0x6c; // float
		constexpr auto WheelCursorDistanceFromCenterWheel = 0x70; // float
		constexpr auto bHideRadialWheelCursorOnMenuOpened = 0x74; // char : 1
		constexpr auto SelectedColor = 0x78; // FLinearColor
		constexpr auto UnselectedColor = 0x88; // FLinearColor
		constexpr auto UnselectableColor = 0x98; // FLinearColor
		constexpr auto Font = 0xa8; // UFont*
		constexpr auto SelectionSound = 0xb0; // UFMODEvent*
		constexpr auto MenuOpenSound = 0xb8; // UFMODEvent*
		constexpr auto MenuCloseSound = 0xc0; // UFMODEvent*
		constexpr auto MenuCloseSound_NoSelection = 0xc8; // UFMODEvent*
	}

	namespace n_ADoorRam { // : ABaseDeployableGear
		constexpr auto AcceptableHitWhitelist = 0x958; // TArray<AActor*>
		constexpr auto MaxHitDistance = 0x968; // float
		constexpr auto RamDamageTypeDefault = 0x970; // UDamageType*
		constexpr auto RamDamageTypeCrumble = 0x978; // UDamageType*
		constexpr auto RamDamageTypePlayer = 0x980; // UDamageType*
		constexpr auto StrikePlayerDamage = 0x988; // float
		constexpr auto LastGoodHit = 0x98c; // FHitResult
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter { // : UMaterialExpressionScalarParameter
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_ASpectatorBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FSpectatorReservation
		constexpr auto RequestType = 0x368; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x369; // bool
		constexpr auto bCancelReservation = 0x36a; // bool
	}

	namespace n_UDatasmithPostProcessVolumeTemplate { // : UDatasmithObjectTemplate
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UW_HumanCharacter_HUD_V2_C { // : UHumanCharacterHUD_V2
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto Anim_ShakeHUD_PlayerHit = 0x320; // UWidgetAnimation*
		constexpr auto Anim_ShakeHUD_TeamView = 0x328; // UWidgetAnimation*
		constexpr auto Anim_ShakeHUD_FireModes = 0x330; // UWidgetAnimation*
		constexpr auto Anim_FadeInHUD = 0x338; // UWidgetAnimation*
		constexpr auto BottomLeftUI_StyleSwitcher = 0x340; // UWidgetSwitcher*
		constexpr auto Chat = 0x348; // UW_RichChatBox_C*
		constexpr auto CommandContext_Container = 0x350; // UVerticalBox*
		constexpr auto CommandContextDoor_Image = 0x358; // UImage*
		constexpr auto CommandContextHuman_Image = 0x360; // UImage*
		constexpr auto CommandContextIcon_Switcher = 0x368; // UWidgetSwitcher*
		constexpr auto CommandReticle_Image = 0x370; // UImage*
		constexpr auto CommandTriggerKey_Text = 0x378; // UTextBlock*
		constexpr auto FireModes = 0x380; // UW_FireModes_C*
		constexpr auto Hotkeys = 0x388; // UW_Hotkeys_C*
		constexpr auto Incrimination_Extraction_HUD = 0x390; // UW_PVP_Extraction_HUD_C*
		constexpr auto ItemSelectionMenu = 0x398; // UW_ItemSelectionMenu_C*
		constexpr auto MagCheckOverview = 0x3a0; // UW_MagCheckOverview_C*
		constexpr auto MatchStartInformationWidget = 0x3a8; // UMatchStartInformationWidget_C*
		constexpr auto MatchStatusCard_V2 = 0x3b0; // UW_MatchStatusCard_V2_C*
		constexpr auto Paperdoll = 0x3b8; // UW_DamagePaperdoll_C*
		constexpr auto Paperdoll_Box = 0x3c0; // USizeBox*
		constexpr auto PlayerActions_Box = 0x3c8; // UVerticalBox*
		constexpr auto PlayerContext_Switcher = 0x3d0; // UWidgetSwitcher*
		constexpr auto PlayerHealthStatus = 0x3d8; // UW_PlayerHealthStatus_C*
		constexpr auto PVP_HUD_Switcher = 0x3e0; // UWidgetSwitcher*
		constexpr auto ReadyRoomWidget = 0x3e8; // UW_ReadyRoomWidget_C*
		constexpr auto ScorePopUp = 0x3f0; // UW_COOPScorePopUp_C*
		constexpr auto SWATTeamStatus = 0x3f8; // UW_SWATTeamStatus_C*
		constexpr auto TabletHUD = 0x400; // UW_TabletHUD_C*
		constexpr auto TeamView = 0x408; // UW_TeamView_C*
		constexpr auto TopSideUI_Container = 0x410; // UVerticalBox*
		constexpr auto TutorialMessagePopup = 0x418; // UW_TutorialMessagePopup_C*
		constexpr auto VotePopUp = 0x420; // UW_VotePopUp_C*
		constexpr auto W_Compass_V3 = 0x428; // UW_Compass_V3_C*
		constexpr auto W_Compass_V3_2 = 0x430; // UW_Compass_V3_C*
		constexpr auto W_LoudnessMeter_2 = 0x438; // UW_LoudnessMeter_C*
		constexpr auto DoorCommandBrush = 0x440; // FSlateBrush
		constexpr auto HumanCommandBrush = 0x4c8; // FSlateBrush
		constexpr auto TutorialOverview = 0x550; // UW_TutorialOverviewText_C*
		constexpr auto bDelegatesInitialized = 0x558; // bool
	}

	namespace n_APrimary_MP5A2_C { // : ABaseMagazineWeapon
		constexpr auto UberGraphFrame = 0x1260; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_ANiagaraPreviewGrid { // : AActor
		constexpr auto System = 0x220; // UNiagaraSystem*
		constexpr auto ResetMode = 0x228; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x230; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x240; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x248; // float
		constexpr auto SpacingY = 0x24c; // float
		constexpr auto NumX = 0x250; // int32_t
		constexpr auto NumY = 0x254; // int32_t
		constexpr auto PreviewComponents = 0x258; // TArray<UChildActorComponent*>
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0x178; // TextureAddress
		constexpr auto AddressY = 0x179; // TextureAddress
		constexpr auto AutoClear = 0x17a; // bool
		constexpr auto ClearColor = 0x17c; // FLinearColor
		constexpr auto EnableGenMips = 0x18c; // bool
		constexpr auto NumMips = 0x18d; // char
		constexpr auto NewStyleOutput = 0x18e; // bool
		constexpr auto OutputFormat = 0x18f; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0x190; // float
		constexpr auto CurrentOrientation = 0x194; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0x198; // UMediaPlayer*
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_ULoadingScreen { // : UUserWidget
		constexpr auto StreamedLevel = 0x268; // ULevelStreaming*
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_AASequenceInteraction { // : ALevelSequenceActor
		constexpr auto bAutoActivateInRange = 0x2b8; // bool
		constexpr auto ReferencedCharacterViewTarget = 0x2c0; // AActor*
		constexpr auto RadiusComp = 0x2c8; // UBoxComponent*
		constexpr auto LastPlayedSequencerCharacter = 0x2d0; // APlayerCharacter*
	}

	namespace n_UANIMBP_M92FS_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x308; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x328; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x430; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Slot_2 = 0x450; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x498; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose = 0x538; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x690; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x750; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x798; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x7c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x7e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x868; // FAnimNode_SequencePlayer
		constexpr auto Mag01Alpha = 0x8e8; // float
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UChaosDestructionListener { // : USceneComponent
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UCOOPScorePopUp { // : UUserWidget
		constexpr auto Reward = 0x260; // UFMODEvent*
	}

	namespace n_ULevelVariantSets { // : UObject
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_ABaseShell { // : AActor
		constexpr auto ShellMesh = 0x220; // UStaticMeshComponent*
		constexpr auto bPlayCue = 0x228; // bool
		constexpr auto ShellBounceCue = 0x230; // USoundCue*
		constexpr auto bPlayFMODAudio = 0x238; // bool
		constexpr auto FMODAudioComp = 0x240; // UFMODAudioComponent*
		constexpr auto ShellBounceFMODAudio = 0x248; // UFMODEvent*
		constexpr auto ShellNormalizeMax = 0x250; // float
		constexpr auto ShellNormalizeMin = 0x254; // float
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UPlayerActionPromptWidget { // : UBaseWidget
		constexpr auto ActionText = 0x278; // FText
		constexpr auto Action_RichText = 0x290; // URichTextBlock*
		constexpr auto Anim_OnShow = 0x298; // UWidgetAnimation*
		constexpr auto bInUse = 0x2a0; // char : 1
	}

	namespace n_UW_Combobox_Menu_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto OptionContainer = 0x268; // UVerticalBox*
		constexpr auto OptionsAsStrings = 0x270; // TArray<FString>
		constexpr auto OptionsAsText = 0x280; // TArray<FText>
		constexpr auto ParentComboBox = 0x290; // UW_StandardCombobox_New_C*
		constexpr auto DescriptionWidget = 0x298; // UTextBlock*
		constexpr auto Descriptions = 0x2a0; // TArray<FText>
		constexpr auto SelectedOption = 0x2b0; // int32_t
		constexpr auto Font Size = 0x2b4; // int32_t
	}

	namespace n_UTransformProxy { // : UObject
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UMovieSceneNiagaraParameterTrack { // : UMovieSceneNiagaraTrack
		constexpr auto Parameter = 0xa0; // FNiagaraVariable
	}

	namespace n_URadialWidgetBase { // : UBaseWidget
		constexpr auto OnRadialMenuOpened_Delegate = 0x278; // FMulticastInlineDelegate
		constexpr auto OnRadialMenuClosed_Delegate = 0x288; // FMulticastInlineDelegate
		constexpr auto CurrentSelectionIndex = 0x298; // int32_t
		constexpr auto PreviousSelectionIndex = 0x29c; // int32_t
		constexpr auto Angle = 0x2a0; // float
		constexpr auto AngleSpread = 0x2a4; // float
		constexpr auto PercentageWithoutGap = 0x2a8; // float
		constexpr auto PercentageWithGap = 0x2ac; // float
		constexpr auto bIsWheelCreated = 0x2b0; // char : 1
		constexpr auto bIsWheelRefreshed = 0x2b0; // char : 1
		constexpr auto bNavigatingWithGamepad = 0x2b0; // char : 1
		constexpr auto RadialCursorPosition = 0x2b4; // FVector2D
		constexpr auto Angles = 0x2c0; // TArray<float>
		constexpr auto Sectors = 0x2d0; // TArray<URadialSectorWidget*>
		constexpr auto RadialWheel = 0x2e0; // UPanelWidget*
		constexpr auto RadialWheelCursor = 0x2e8; // UImage*
		constexpr auto OwningPlayer = 0x2f0; // APlayerController*
		constexpr auto OwningPawn = 0x2f8; // APawn*
		constexpr auto OwningPlayerCharacter = 0x300; // APlayerCharacter*
		constexpr auto NumOfSectors = 0x308; // int32_t
		constexpr auto OpenDelay = 0x30c; // float
		constexpr auto CloseDelay = 0x310; // float
		constexpr auto MinWheelSize = 0x314; // float
		constexpr auto MaxWheelSize = 0x318; // float
		constexpr auto MinCursorAngle = 0x31c; // float
		constexpr auto MaxCursorAngle = 0x320; // float
		constexpr auto RadialCursorBehaviour = 0x324; // ERadialCursorBehaviour
		constexpr auto RadialSectorWidgetClass = 0x328; // URadialSectorWidget*
		constexpr auto bAlwaysHideRadialWheelCursor = 0x330; // char : 1
		constexpr auto bCanMoveWhileMenuIsOpened = 0x330; // char : 1
		constexpr auto bCanPerformActionsWhileMenuIsOpened = 0x330; // char : 1
		constexpr auto bCanAimWhileMenuIsOpened = 0x330; // char : 1
		constexpr auto bShowDebugMessages = 0x330; // char : 1
		constexpr auto bShowMouseCursor = 0x330; // char : 1
		constexpr auto StartingSectorIndex = 0x334; // int32_t
		constexpr auto StartingSectorAngle = 0x338; // float
		constexpr auto IconSize = 0x33c; // float
		constexpr auto IconPadding = 0x340; // float
		constexpr auto SectorInnerRadius = 0x344; // float
		constexpr auto SectorOuterRadius = 0x348; // float
		constexpr auto GapSize = 0x34c; // float
		constexpr auto WheelSize = 0x350; // float
		constexpr auto WheelCursorDistanceFromCenterWheel = 0x354; // float
		constexpr auto bHideRadialWheelCursorOnMenuOpened = 0x358; // char : 1
		constexpr auto SelectedColor = 0x35c; // FLinearColor
		constexpr auto UnselectedColor = 0x36c; // FLinearColor
		constexpr auto UnselectableColor = 0x37c; // FLinearColor
		constexpr auto Font = 0x390; // UFont*
		constexpr auto SelectionSound = 0x398; // UFMODEvent*
		constexpr auto MenuOpenSound = 0x3a0; // UFMODEvent*
		constexpr auto MenuCloseSound = 0x3a8; // UFMODEvent*
		constexpr auto MenuCloseSound_NoSelection = 0x3b0; // UFMODEvent*
		constexpr auto RadialWidgetTheme = 0x3b8; // URadialWidgetThemeData*
		constexpr auto MousePosition = 0x3c0; // FVector2D
		constexpr auto MouseAxisDelta = 0x3c8; // FVector2D
		constexpr auto MouseWheelDelta = 0x3d0; // float
		constexpr auto MouseAngle = 0x3d4; // float
		constexpr auto GamepadXAxis = 0x3d8; // float
		constexpr auto GamepadYAxis = 0x3dc; // float
		constexpr auto GamepadAngle = 0x3e0; // float
		constexpr auto GlobalTimeDilation = 0x3e4; // float
	}

	namespace n_UNiagaraSettings { // : UDeveloperSettings
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultRendererMotionVectorSetting = 0xb4; // ENiagaraDefaultRendererMotionVectorSetting
		constexpr auto NDISkelMesh_GpuMaxInfluences = 0xb8; // ENDISkelMesh_GpuMaxInfluences
		constexpr auto NDISkelMesh_GpuUniformSamplingFormat = 0xb9; // ENDISkelMesh_GpuUniformSamplingFormat
		constexpr auto NDISkelMesh_AdjacencyTriangleIndexFormat = 0xba; // ENDISkelMesh_AdjacencyTriangleIndexFormat
		constexpr auto DefaultEffectTypePtr = 0xc0; // UNiagaraEffectType*
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UIssueCommandQuestNode { // : UBaseTeamQuestNode
		constexpr auto SwatCommand = 0x270; // ESwatCommand
		constexpr auto TeamType = 0x271; // ETeamType
		constexpr auto bHasIssueCommand = 0x272; // bool
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x270; // FName
		constexpr auto PreviousMatchState = 0x278; // FName
		constexpr auto ElapsedTime = 0x280; // int32_t
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UNavigationSystemV1 { // : UNavigationSystemBase
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto DataGatheringMode = 0x70; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x74; // float
		constexpr auto SupportedAgents = 0x78; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x88; // FNavAgentSelector
		constexpr auto NavDataSet = 0x90; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa0; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1bc; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x15bc; // float
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x220; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto SolverType = 0x7c; // EPhysicsAssetSolverType
		constexpr auto bNotForDedicatedServer = 0x7d; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UStunDamage { // : UDamageType
		constexpr auto bProjectileStun = 0x40; // bool
		constexpr auto StunShake = 0x48; // UMatineeCameraShake*
		constexpr auto PostProcessSettings = 0x50; // FPostProcessSettings
		constexpr auto HitMontage_3P = 0x5b0; // UAnimMontage*
		constexpr auto CameraRotationOffset = 0x5b8; // FRotator
		constexpr auto AppliedSpeed = 0x5c4; // float
		constexpr auto MaxMovementSpeedWhenStunned = 0x5c8; // float
		constexpr auto DoorDamageMultiplier = 0x5cc; // float
		constexpr auto bDamageAllDoorPiecesAtOnce = 0x5d0; // bool
		constexpr auto bCanPushDoorWithForce = 0x5d1; // bool
		constexpr auto DoorPushScale = 0x5d4; // float
		constexpr auto ImpactSound = 0x5d8; // USoundCue*
		constexpr auto StunType = 0x5e0; // EStunType
		constexpr auto bPlayAudioWhenHit = 0x5e1; // bool
		constexpr auto StunSoundEffect = 0x5e8; // UFMODEvent*
		constexpr auto bCauseHealthDamage = 0x5f0; // bool
		constexpr auto bCausesSuppression = 0x5f1; // bool
		constexpr auto bBreaksDestructibles = 0x5f2; // bool
		constexpr auto SuppressionAmount = 0x5f4; // float
		constexpr auto SuppressionCameraShake = 0x5f8; // UMatineeCameraShake*
		constexpr auto bMustBeLookingAtDamageCauser = 0x600; // bool
		constexpr auto bStunLocksAim = 0x601; // bool
		constexpr auto StunSpeedMultiplier = 0x604; // float
		constexpr auto WeaponDownLengthOnStun = 0x608; // float
		constexpr auto bNonLethal = 0x60c; // bool
		constexpr auto LessThanLethalAmount = 0x610; // float
		constexpr auto AdditionalUpcloseDamageIncrease = 0x614; // float
		constexpr auto AdditionalHeadDamageIncrease = 0x618; // float
		constexpr auto bSwatAIIsAbuse = 0x61c; // bool
		constexpr auto bChildAIIsAbuse = 0x61d; // bool
		constexpr auto bCompliantIsAbuse = 0x61e; // bool
		constexpr auto bArrestedIsAbuse = 0x61f; // bool
	}

	namespace n_UMovieSceneCaptureProtocolBase { // : UObject
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_AReadyOrNotGameMode { // : AGameModeBase
		constexpr auto GameModeSettings = 0x318; // FDataTableRowHandle
		constexpr auto AbuseCountMap = 0x388; // TMap<AReadyOrNotCharacter*, int32_t>
		constexpr auto bIsCampaignTransitioning = 0x3d8; // bool
		constexpr auto Reinforcement_Handle = 0x3e0; // FTimerHandle
		constexpr auto bRunWarmup = 0x3e8; // bool
		constexpr auto bArrestSpectator = 0x3e9; // bool
		constexpr auto bAllowLoadouts = 0x3ea; // bool
		constexpr auto MaxPlayersAllowed = 0x3ec; // int32_t
		constexpr auto bEnabledForPlay = 0x3f0; // bool
		constexpr auto urlShortName = 0x3f8; // FString
		constexpr auto Password = 0x408; // FString
		constexpr auto PlayerStartClass = 0x418; // AActor*
		constexpr auto DeadSpectatorClass = 0x420; // ASpectatePawn*
		constexpr auto LobbyStartTag = 0x428; // FName
		constexpr auto RedCustomizationStartTag = 0x430; // FName
		constexpr auto BlueCustomizationStartTag = 0x438; // FName
		constexpr auto SWATBlueStartTag = 0x440; // FName
		constexpr auto SWATRedStartTag = 0x448; // FName
		constexpr auto SuspectStartTag = 0x450; // FName
		constexpr auto MaxTeamKillsBeforeAutoKick = 0x458; // int32_t
		constexpr auto bSpectateKillerOnDeath = 0x45c; // bool
		constexpr auto bInitialPlayerRespawn = 0x45d; // bool
		constexpr auto bLockRandomDoors = 0x45e; // bool
		constexpr auto bDrawPlayerCameraSphere = 0x45f; // char : 1
		constexpr auto OnMatchStarted = 0x460; // FMulticastInlineDelegate
		constexpr auto RespawnMode = 0x470; // ERespawnMode
		constexpr auto bTimelimitUsedInMode = 0x471; // bool
		constexpr auto CurrentMatchState = 0x472; // EMatchState
		constexpr auto OnMatchStateChanged = 0x478; // FMulticastInlineDelegate
		constexpr auto DefaultLoadoutIfNothingLoaded = 0x490; // FSavedLoadout
		constexpr auto ModeName = 0x5b8; // FText
		constexpr auto ModeDescription = 0x5d0; // FText
		constexpr auto bCanRespawn = 0x5e8; // bool
		constexpr auto MinimumPlayersToStart = 0x5ec; // int32_t
		constexpr auto MinimumPlayersForTimer = 0x5f0; // int32_t
		constexpr auto BlueCharacterClass = 0x5f8; // TSoftClassPtr<UObject>
		constexpr auto RedCharacterClass = 0x620; // TSoftClassPtr<UObject>
		constexpr auto DeadPlayers = 0x650; // TArray<APlayerController*>
		constexpr auto RespawnableDeadPlayers = 0x660; // TArray<APlayerController*>
		constexpr auto PlayerSpawnTag = 0x670; // FString
		constexpr auto OnPlayerRespawned = 0x680; // FMulticastInlineDelegate
		constexpr auto CharacterHUD = 0x690; // UUserWidget*
		constexpr auto bThrottleAI = 0x6a0; // bool
		constexpr auto MinThrottleRange = 0x6a4; // float
		constexpr auto MaxThrottleRange = 0x6a8; // float
		constexpr auto ThrottleMultiplier = 0x6ac; // float
		constexpr auto TOCManager = 0x6b0; // ATOCManager*
	}

	namespace n_ULuminARSessionConfig { // : UARSessionConfig
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UW_Objective_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto img_Complete = 0x268; // UImage*
		constexpr auto txt_ObjTitle = 0x270; // UW_Text_C*
		constexpr auto VB_SubObjectiveList = 0x278; // UVerticalBox*
		constexpr auto W_SubObjective_Entry_35 = 0x280; // UW_SubObjective_Entry_C*
		constexpr auto Objective = 0x288; // AObjective*
		constexpr auto CompleteText = 0x290; // FText
		constexpr auto FailedText = 0x2a8; // FText
		constexpr auto ObjectiveClass = 0x2c0; // AObjective*
		constexpr auto bSimplifiedObjectives = 0x2c8; // bool
		constexpr auto ObjectiveName = 0x2d0; // FText
		constexpr auto ObjectiveDescription = 0x2e8; // FText
		constexpr auto ObjectiveStatus = 0x300; // EObjectiveStatus
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x238; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x240; // char : 1
		constexpr auto NavAgentProps = 0x248; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x278; // FVector
		constexpr auto MyNavData = 0x288; // ANavigationData*
		constexpr auto ProjectedLocation = 0x290; // FVector
		constexpr auto bProjectedLocationValid = 0x29c; // char : 1
		constexpr auto bSearchStart = 0x29c; // char : 1
		constexpr auto CostLimitFactor = 0x2a0; // float
		constexpr auto MinimumCostLimit = 0x2a4; // float
		constexpr auto bBacktracking = 0x2a8; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2a8; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2a8; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2a8; // char : 1
		constexpr auto bShowNodePool = 0x2a8; // char : 1
		constexpr auto bShowBestPath = 0x2a8; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2a8; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2a8; // char : 1
		constexpr auto CostDisplayMode = 0x2ac; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b0; // FVector2D
		constexpr auto bPathExist = 0x2b8; // char : 1
		constexpr auto bPathIsPartial = 0x2b8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2b8; // char : 1
		constexpr auto PathfindingTime = 0x2bc; // float
		constexpr auto PathCost = 0x2c0; // float
		constexpr auto PathfindingSteps = 0x2c4; // int32_t
		constexpr auto OtherActor = 0x2c8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2d8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2dc; // float
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x220; // float
		constexpr auto CraneYaw = 0x224; // float
		constexpr auto CraneArmLength = 0x228; // float
		constexpr auto bLockMountPitch = 0x22c; // bool
		constexpr auto bLockMountYaw = 0x22d; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto CraneYawControl = 0x238; // USceneComponent*
		constexpr auto CranePitchControl = 0x240; // USceneComponent*
		constexpr auto CraneCameraMount = 0x248; // USceneComponent*
	}

	namespace n_AGeometryCollectionRenderLevelSetActor { // : AActor
		constexpr auto TargetVolumeTexture = 0x220; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x228; // UMaterial*
		constexpr auto SurfaceTolerance = 0x230; // float
		constexpr auto Isovalue = 0x234; // float
		constexpr auto Enabled = 0x238; // bool
		constexpr auto RenderVolumeBoundingBox = 0x239; // bool
	}

	namespace n_UANIMBP_AI_MoveStyle_Base_C { // : URoNAnimInstance_HumanBase
		constexpr auto UberGraphFrame = 0x15d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x15d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x15f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x1618; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x1640; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LegIK_6 = 0x1660; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_LegIK_5 = 0x1758; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_LegIK_4 = 0x1850; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x1948; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x1968; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x1990; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x1a30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_6 = 0x1a58; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x1aa0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x1b60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_7 = 0x1c00; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1d90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x1db8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_PoseSnapshot_2 = 0x1de0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_StateResult_8 = 0x1e70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x1ea0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x1ef0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x1f90; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_7 = 0x1fe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x2010; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_6 = 0x20c0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x2250; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x2358; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x2378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x2480; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x24a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x25a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_5 = 0x26b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x26f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x2740; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_5 = 0x2768; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_Slot_3 = 0x28f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x2940; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x2a00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x2a28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x2b80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x2bc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x2c88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x2cb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x2cd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x2d00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x2dc0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x2e08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_4 = 0x2f60; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x30f0; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x3280; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x32a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x32d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x32f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x3320; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_6 = 0x3348; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x3378; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x33f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x3428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x34a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x34d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x3558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3588; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x3638; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x3790; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x37b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x37e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x3808; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LegIK_3 = 0x3830; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x3928; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByInt_6 = 0x3a80; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_LegIK_2 = 0x3b20; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_LegIK = 0x3c18; // FAnimNode_LegIK
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x3d10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseSnapshot = 0x3db0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x3e40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x3e68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x3f08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x4060; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x4088; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_PoseDriver_6 = 0x40d8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver_5 = 0x4240; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x43a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x4500; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x4528; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x4550; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x46a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseDriver_4 = 0x4748; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x48b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_PoseDriver_3 = 0x48d8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x4a40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_PoseDriver_2 = 0x4a90; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_PoseDriver = 0x4bf8; // FAnimNode_PoseDriver
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x4d60; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x4eb8; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x5048; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x50c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x5188; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x5318; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x5338; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SlopeWarping = 0x5358; // FAnimNode_SlopeWarping
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x5580; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x55a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x55d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x5650; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x56d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x5750; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x57d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x5850; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x58d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_5 = 0x5950; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x59f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x5a70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x5af0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x5b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x5bf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x5c70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x5cf0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_4 = 0x5d70; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x5e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x5e90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x5f10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x5f90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x6010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x6090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x6110; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_3 = 0x6190; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x6230; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x62b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x6330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x63b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x6430; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x64b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x6530; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_9 = 0x65b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x6660; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x66e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x6760; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x67e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x6860; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x68e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x6960; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x69e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_8 = 0x6a60; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x6b10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x6b90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x6c10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x6c90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x6d10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x6d90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x6e10; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x6e90; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_7 = 0x6f10; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x6fc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x7040; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x70c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x7140; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x71c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x7240; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x72c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x7340; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_6 = 0x73c0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x7470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x74f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x7570; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x75f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x7670; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x76f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x7770; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x77f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_5 = 0x7870; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x7920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x79a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x7a20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x7aa0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x7b20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x7ba0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x7c20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x7ca0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_4 = 0x7d20; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x7dd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt_2 = 0x7e50; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x7ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x7f70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x7ff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x8070; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x80f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x8170; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x81f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByEnum_3 = 0x8270; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x8320; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x83a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x8440; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x8508; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_StateResult_2 = 0x85d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x8600; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x8680; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x8700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x8780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x8800; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x8880; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x8900; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x89a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x8a20; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x8a50; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x8b00; // FAnimNode_Root
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x8b30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x8b58; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x8c08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x8c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x8c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x8c80; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x8ca8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x8d48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByEnum = 0x8de8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x8e98; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x8ff0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x9018; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x9040; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive = 0x90c0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x9188; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x9208; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x9230; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer = 0x92f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x9370; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x9398; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x94f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x9648; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x9670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x9698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x96c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x9760; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x9788; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x97b0; // FAnimNode_UseCachedPose
		constexpr auto AnimInputCapsule = 0x97d8; // FAnimInput_CapsuleLocomotion
	}

	namespace n_ACameraShakeSourceActor { // : AActor
		constexpr auto CameraShakeSourceComponent = 0x220; // UCameraShakeSourceComponent*
	}

	namespace n_USoundEffectSourcePresetChain { // : UObject
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection { // : UNiagaraDataInterfaceGrid2D
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UDatasmithStaticMeshGLTFImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UW_TabScreen_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ObjectivesBox = 0x268; // USizeBox*
		constexpr auto PlayerListBox_2 = 0x270; // UVerticalBox*
		constexpr auto W_Briefing_Objectives = 0x278; // UW_Briefing_Objectives_C*
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UDatasmithStaticMeshComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UMaterialExpressionSign { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto NetworkMask = 0x118; // char
		constexpr auto SubSequence = 0x120; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x128; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x148; // FString
		constexpr auto TargetPathToRecordTo = 0x158; // FDirectoryPath
	}

	namespace n_UNiagaraRendererProperties { // : UNiagaraMergeable
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto MotionVectorSetting = 0x5c; // ENiagaraRendererMotionVectorSetting
		constexpr auto bIsEnabled = 0x60; // bool
		constexpr auto bMotionBlurEnabled = 0x61; // bool
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UAmmoComponent { // : UResourceComponent
		constexpr auto AmmoUsagePerSecond = 0x108; // float
	}

	namespace n_AReadyOrNotTriggerVolume { // : ATriggerBox
		constexpr auto OverlappingClasses = 0x228; // TArray<AActor*>
		constexpr auto TestActors = 0x238; // TArray<AActor*>
	}

	namespace n_APlayerHUD { // : AHUD
		constexpr auto PlayerHUD = 0x310; // UUserWidget*
	}

	namespace n_USkinComponent { // : UActorComponent
		constexpr auto Name = 0xb8; // FText
		constexpr auto Description = 0xd0; // FText
		constexpr auto Icon = 0xe8; // TSoftObjectPtr<UTexture2D>
		constexpr auto bRequiresDLC = 0x110; // bool
		constexpr auto Dlc = 0x111; // EDLC
		constexpr auto bResetsToFactorySkin = 0x112; // bool
		constexpr auto LockedToTeam = 0x113; // ETeamType
		constexpr auto LockedToBlueprint = 0x118; // TArray<AActor*>
		constexpr auto SkeletalMeshSkinMap = 0x128; // TMap<USkeletalMesh*, USkeletalMesh*>
		constexpr auto PreAppliedSkeletalMeshMap = 0x178; // TMap<USkeletalMeshComponent*, USkeletalMesh*>
		constexpr auto StaticMeshSkinMap = 0x1c8; // TMap<UStaticMesh*, UStaticMesh*>
		constexpr auto PreAppliedStaticMeshMap = 0x218; // TMap<UStaticMeshComponent*, UStaticMesh*>
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UW_RichChatBox_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x268; // UWidgetAnimation*
		constexpr auto Box = 0x270; // UVerticalBox*
		constexpr auto ChatArea = 0x278; // URichTextBlock*
		constexpr auto ChatEntry = 0x280; // UEditableTextBox*
		constexpr auto ScrollArea = 0x288; // UScrollBox*
		constexpr auto txt_ChatChannel = 0x290; // UW_Text_C*
		constexpr auto ChatAreaText = 0x298; // FString
		constexpr auto bPreplanning = 0x2a8; // bool
		constexpr auto ShowTimeLeft = 0x2ac; // float
		constexpr auto ShowTimeMax = 0x2b0; // float
		constexpr auto bTextFocused = 0x2b4; // bool
		constexpr auto bFadingOut = 0x2b5; // bool
		constexpr auto bTeamChat = 0x2b6; // bool
		constexpr auto RedTeamLabel = 0x2b8; // FText
		constexpr auto BlueTeamLabel = 0x2d0; // FText
		constexpr auto GoldTeamLabel = 0x2e8; // FText
		constexpr auto bAlwaysShowTextEntry = 0x300; // bool
		constexpr auto ChatboxEntryStyleAlwaysShown = 0x308; // FEditableTextBoxStyle
		constexpr auto ChatboxEntryStyleNotAlwaysShown = 0xb00; // FEditableTextBoxStyle
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UGizmoPlaneScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x348; // FVector2D
		constexpr auto LastLocalHitLocation = 0x350; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x358; // UWidgetComponent*
		constexpr auto LastHitResult = 0x360; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3e8; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3e9; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3ea; // bool
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_UNavArea { // : UNavAreaBase
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_AConversationManager { // : AInfo
		constexpr auto RunningConversations = 0x220; // TArray<UConversation*>
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x220; // UInterpData*
		constexpr auto MatineeControllerName = 0x228; // FName
		constexpr auto PlayRate = 0x230; // float
		constexpr auto bPlayOnLevelLoad = 0x234; // char : 1
		constexpr auto bForceStartPos = 0x234; // char : 1
		constexpr auto ForceStartPosition = 0x238; // float
		constexpr auto bLooping = 0x23c; // char : 1
		constexpr auto bRewindOnPlay = 0x23c; // char : 1
		constexpr auto bNoResetOnRewind = 0x23c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x23c; // char : 1
		constexpr auto bDisableRadioFilter = 0x23c; // char : 1
		constexpr auto bClientSideOnly = 0x23c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x23c; // char : 1
		constexpr auto bIsSkippable = 0x23c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x240; // int32_t
		constexpr auto bDisableMovementInput = 0x244; // char : 1
		constexpr auto bDisableLookAtInput = 0x244; // char : 1
		constexpr auto bHidePlayer = 0x244; // char : 1
		constexpr auto bHideHud = 0x244; // char : 1
		constexpr auto GroupActorInfos = 0x248; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x258; // char : 1
		constexpr auto GroupInst = 0x260; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x270; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x280; // char : 1
		constexpr auto bReversePlayback = 0x280; // char : 1
		constexpr auto bPaused = 0x280; // char : 1
		constexpr auto bPendingStop = 0x280; // char : 1
		constexpr auto InterpPosition = 0x284; // float
		constexpr auto ReplicationForceIsPlaying = 0x28c; // char
		constexpr auto OnPlay = 0x290; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0x180; // int32_t
		constexpr auto ClearColor = 0x184; // FLinearColor
		constexpr auto OverrideFormat = 0x194; // EPixelFormat
		constexpr auto bHDR = 0x195; // char : 1
		constexpr auto bForceLinearGamma = 0x195; // char : 1
	}

	namespace n_UReadyOrNotAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0xa0; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0xa0; // char : 1
		constexpr auto EventPosition = 0xa4; // EFireEventsAtPosition
		constexpr auto Sections = 0xa8; // TArray<UMovieSceneSection*>
	}

	namespace n_USystemTimeTimecodeProvider { // : UTimecodeProvider
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UCursor_Default_C { // : UCursorWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Cursor_Switcher = 0x268; // UWidgetSwitcher*
		constexpr auto DragNDrop = 0x270; // UImage*
		constexpr auto Mouse = 0x278; // UImage*
		constexpr auto HoldingDrag = 0x280; // bool
	}

	namespace n_UNiagaraRibbonRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x78; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x80; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa0; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xa4; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xc8; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xec; // ENiagaraRibbonDrawDirection
		constexpr auto Shape = 0xed; // ENiagaraRibbonShapeMode
		constexpr auto bEnableAccurateGeometry = 0xee; // bool
		constexpr auto WidthSegmentationCount = 0xf0; // int32_t
		constexpr auto MultiPlaneCount = 0xf4; // int32_t
		constexpr auto TubeSubdivisions = 0xf8; // int32_t
		constexpr auto CustomVertices = 0x100; // TArray<FNiagaraRibbonShapeCustomVertex>
		constexpr auto CurveTension = 0x110; // float
		constexpr auto TessellationMode = 0x114; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x118; // int32_t
		constexpr auto bUseConstantFactor = 0x11c; // bool
		constexpr auto TessellationAngle = 0x120; // float
		constexpr auto bScreenSpaceTessellation = 0x124; // bool
		constexpr auto PositionBinding = 0x128; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x180; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1d8; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x230; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x288; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2e0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x338; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x390; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3e8; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x440; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x498; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x548; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x5a0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonUVDistance = 0x5f8; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x650; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x6a8; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x700; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x758; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x7b0; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UPlayerPostProcessing { // : UPostProcessComponent
		constexpr auto DebugPPEffects = 0x770; // TArray<UPostProcessEffectData*>
		constexpr auto DebugPPEffects_MIDs = 0x780; // TArray<UMaterialInstanceDynamic*>
		constexpr auto PostProcessEffects = 0x7c8; // TArray<FPostProcessEffect>
		constexpr auto DevPostProcessMaterials = 0x7f0; // TArray<UMaterialInterface*>
		constexpr auto NVG_Settings = 0x800; // FNVGPostProcessSettings
		constexpr auto OwningCharacter = 0xdc0; // APlayerCharacter*
		constexpr auto RecentDamageCauser = 0xdc8; // AActor*
	}

	namespace n_AArrestAndRescueGM { // : AReadyOrNotGameMode_PVP
		constexpr auto bSuddenDeath = 0x718; // bool
		constexpr auto ArrestedBlueCharacters = 0x720; // TArray<APlayerCharacter*>
		constexpr auto ArrestedRedCharacters = 0x730; // TArray<APlayerCharacter*>
		constexpr auto VIPArrestedSound = 0x740; // UFMODEvent*
		constexpr auto VIPKilledSound = 0x748; // UFMODEvent*
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UEndSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AARSharedWorldGameMode { // : AGameMode
		constexpr auto BufferSizePerChunk = 0x308; // int32_t
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UFriendsList_C { // : UFriendsList
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto ScrollBox_1 = 0x2a8; // UScrollBox*
		constexpr auto LastScrolloffset = 0x2b0; // float
	}

	namespace n_UNiagaraDataInterfaceArrayBool { // : UNiagaraDataInterfaceArray
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_UAnimNotify_EquipItemOfClass { // : UAnimNotify
		constexpr auto ItemClass = 0x38; // ABaseItem*
		constexpr auto bInstant = 0x40; // char : 1
		constexpr auto bAIOnly = 0x40; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UW_FireMode_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FireMode_Icon_Image = 0x268; // UImage*
		constexpr auto FireMode_Text = 0x270; // UTextBlock*
		constexpr auto Icon = 0x278; // FSlateBrush
		constexpr auto SelectedColor = 0x300; // FLinearColor
		constexpr auto FireModeText = 0x310; // FText
	}

	namespace n_UW_RadialSelectionBase_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PlayerCharacter = 0x268; // ABasePlayer_C*
		constexpr auto CurrentSelectionIndex = 0x270; // int32_t
		constexpr auto PreviousSelectionIndex = 0x274; // int32_t
	}

	namespace n_UInteractiveToolPropertySet { // : UObject
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UMaterialExpressionSamplePhysicsVectorField { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
		constexpr auto FieldTarget = 0x54; // EFieldVectorType
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_AProjectile_Base_C { // : ABulletProjectile
		constexpr auto UberGraphFrame = 0x398; // FPointerToUberGraphFrame
		constexpr auto FMOD_Ricochet_Sound = 0x3a0; // UFMODAudioComponent*
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_APaperTileMapActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperTileMapComponent*
	}

	namespace n_ULiveLinkSourceSettings { // : UObject
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_AWorldBuildingPlacementActor { // : AActor
		constexpr auto DefaultScene = 0x220; // USceneComponent*
		constexpr auto Activity = 0x228; // UWorldBuildingActivity*
		constexpr auto bDropGunBeforeActivity = 0x230; // bool
		constexpr auto bReturnToOriginalSpot = 0x231; // bool
		constexpr auto LinkedToSpawner = 0x238; // AAISpawn*
		constexpr auto InUseByController = 0x240; // ACyberneticController*
	}

	namespace n_UPlayerDetailsWidget { // : UUserWidget
		constexpr auto PlayerState = 0x260; // AReadyOrNotPlayerState*
		constexpr auto PlayerCharacter = 0x268; // APlayerCharacter*
	}

	namespace n_ACTF_Flag { // : AActor
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto FlagMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto CaptureBoxComponent = 0x230; // UBoxComponent*
		constexpr auto ObjectiveMarkerComponent = 0x238; // UObjectiveMarkerComponent*
		constexpr auto BoneToAttach = 0x240; // FName
	}

	namespace n_UNiagaraDataInterfaceParticleRead { // : UNiagaraDataInterfaceRWBase
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x248; // FName
	}

	namespace n_UW_DevScoreDisplay_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ArrestedCivilianCount = 0x268; // UTextBlock*
		constexpr auto ArrestedSuspectCount = 0x270; // UTextBlock*
		constexpr auto EvidenceCollectedText = 0x278; // UTextBlock*
		constexpr auto KilledCivilianCount = 0x280; // UTextBlock*
		constexpr auto KilledSuspectCount = 0x288; // UTextBlock*
		constexpr auto MissionCompleteText = 0x290; // UTextBlock*
		constexpr auto MissionFailedText = 0x298; // UTextBlock*
		constexpr auto MissionSoftCompleteText = 0x2a0; // UTextBlock*
		constexpr auto RemainingEvidenceCount = 0x2a8; // UTextBlock*
		constexpr auto ReportedCivilianCount = 0x2b0; // UTextBlock*
		constexpr auto ReportedSuspectCount = 0x2b8; // UTextBlock*
		constexpr auto ReportsMadeText = 0x2c0; // UTextBlock*
		constexpr auto ReportsRemainingText = 0x2c8; // UTextBlock*
		constexpr auto ReportsTotal = 0x2d0; // UTextBlock*
		constexpr auto RetainerBox_1 = 0x2d8; // URetainerBox*
		constexpr auto RulesOfEngagementBrokenCount = 0x2e0; // UTextBlock*
		constexpr auto ScenarioText = 0x2e8; // UTextBlock*
		constexpr auto TotalCivilianCount = 0x2f0; // UTextBlock*
		constexpr auto TotalEvidence = 0x2f8; // UTextBlock*
		constexpr auto TotalSuspectCount = 0x300; // UTextBlock*
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x450; // TArray<FMaterialSpriteElement>
	}

	namespace n_USubmixEffectDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_ARoNMoveStyleCharacter { // : ACharacter
		constexpr auto CameraBoom = 0x4b8; // USpringArmComponent*
		constexpr auto FollowCamera = 0x4c0; // UCameraComponent*
		constexpr auto MoveStyle = 0x4c8; // URoNMoveStyleComponent*
		constexpr auto BaseTurnRate = 0x4d0; // float
		constexpr auto BaseLookUpRate = 0x4d4; // float
	}

	namespace n_USourceEffectFoldbackDistortionPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_ADoorJam { // : ABaseItem
		constexpr auto bSet = 0x960; // char : 1
		constexpr auto PlacedBy = 0x968; // AReadyOrNotCharacter*
		constexpr auto PendingPlacement = 0x970; // ADoor*
		constexpr auto JammedDoor = 0x978; // ADoor*
		constexpr auto DoorJamSocket = 0x980; // FName
		constexpr auto PlacedMesh = 0x988; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto PlacementTimer = 0x9b0; // float
		constexpr auto WedgeRemovalTime = 0x9b4; // float
	}

	namespace n_UGizmoConstantFrameAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_ADevice_C2_Placed_C { // : APlacedC2Explosive
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
		constexpr auto Box = 0x368; // UBoxComponent*
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UMovieSceneMediaPlayerPropertySection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UARPlaneGeometry { // : UARTrackedGeometry
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UDatasmithAssetUserData { // : UAssetUserData
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x570; // char : 1
		constexpr auto bIsFrozenRendering = 0x570; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x570; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x570; // char : 1
		constexpr auto bEnableBufferVisualization = 0x570; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x570; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x570; // char : 1
		constexpr auto bLastDisplayEnabled = 0x570; // char : 1
		constexpr auto DrawFrustum = 0x578; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x580; // AActor*
		constexpr auto SelectedComponent = 0x588; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x590; // FHitResult
		constexpr auto OriginalControllerRef = 0x618; // APlayerController*
		constexpr auto OriginalPlayer = 0x620; // UPlayer*
		constexpr auto SpeedScale = 0x628; // float
		constexpr auto InitialMaxSpeed = 0x62c; // float
		constexpr auto InitialAccel = 0x630; // float
		constexpr auto InitialDecel = 0x634; // float
	}

	namespace n_UChaosClothSharedSimConfig { // : UClothSharedConfigCommon
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto bUseLocalSpaceSimulation = 0x30; // bool
		constexpr auto bUseXPBDConstraints = 0x31; // bool
	}

	namespace n_UPropertyValue { // : UObject
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_ACommandDecal { // : ADecalActor
		constexpr auto AlphaPositionParticleComponent = 0x228; // UParticleSystemComponent*
		constexpr auto BetaPositionParticleComponent = 0x230; // UParticleSystemComponent*
		constexpr auto CharliePositionParticleComponent = 0x238; // UParticleSystemComponent*
		constexpr auto DeltaPositionParticleComponent = 0x240; // UParticleSystemComponent*
		constexpr auto CommandMarkerComponent = 0x248; // UObjectiveMarkerComponent*
		constexpr auto CommandTeam = 0x250; // ETeamType
		constexpr auto GoldTeamSquadPositionParticle = 0x258; // UParticleSystem*
		constexpr auto RedTeamSquadPositionParticle = 0x260; // UParticleSystem*
		constexpr auto BlueTeamSquadPositionParticle = 0x268; // UParticleSystem*
		constexpr auto GoldTeamDecalColor = 0x270; // FLinearColor
		constexpr auto RedTeamDecalColor = 0x280; // FLinearColor
		constexpr auto BlueTeamDecalColor = 0x290; // FLinearColor
		constexpr auto GoldTeamIconColor = 0x2a0; // FLinearColor
		constexpr auto RedTeamIconColor = 0x2b0; // FLinearColor
		constexpr auto BlueTeamIconColor = 0x2c0; // FLinearColor
		constexpr auto DecalColorParamName = 0x2d0; // FName
		constexpr auto OriginalDecalSize = 0x2d8; // FVector
		constexpr auto CommandDecalString = 0x2e8; // FString
		constexpr auto MID_CommandDecal = 0x300; // UMaterialInstanceDynamic*
	}

	namespace n_UPlanePositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_UActivityState { // : UObject
		constexpr auto Name = 0x58; // FString
		constexpr auto ID = 0x68; // int32_t
		constexpr auto Uptime = 0x6c; // float
		constexpr auto StateMachineOwner = 0x70; // UActivityFiniteStateMachine*
	}

	namespace n_UBaseQuestNode { // : USceneComponent
		constexpr auto QuestManager = 0x1f8; // AQuestManager*
		constexpr auto OnQuestNodeStarted = 0x200; // FMulticastInlineDelegate
		constexpr auto OnQuestNodeFinished = 0x210; // FMulticastInlineDelegate
		constexpr auto StartDelay = 0x22c; // float
		constexpr auto QuestVoiceLine = 0x230; // FString
		constexpr auto StartQuestMessageActor = 0x240; // AMessagePromptActor*
		constexpr auto OwningPlayer = 0x248; // APlayerCharacter*
	}

	namespace n_UBP_GameInstance_C { // : UReadyOrNotGameInstance
		constexpr auto UberGraphFrame = 0x7b0; // FPointerToUberGraphFrame
		constexpr auto StreamedLevels = 0x7b8; // TArray<FString>
		constexpr auto ModeURL = 0x7c8; // FString
	}

	namespace n_AChaosSolverActor { // : AActor
		constexpr auto Properties = 0x220; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x288; // float
		constexpr auto CollisionIterations = 0x28c; // int32_t
		constexpr auto PushOutIterations = 0x290; // int32_t
		constexpr auto PushOutPairIterations = 0x294; // int32_t
		constexpr auto ClusterConnectionFactor = 0x298; // float
		constexpr auto ClusterUnionConnectionType = 0x29c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x29d; // bool
		constexpr auto CollisionFilterSettings = 0x2a0; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b0; // bool
		constexpr auto BreakingFilterSettings = 0x2b4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2c4; // bool
		constexpr auto TrailingFilterSettings = 0x2c8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2d8; // float
		constexpr auto bGenerateContactGraph = 0x2dc; // bool
		constexpr auto bHasFloor = 0x2dd; // bool
		constexpr auto FloorHeight = 0x2e0; // float
		constexpr auto ChaosDebugSubstepControl = 0x2e4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x308; // UChaosGameplayEventDispatcher*
	}

	namespace n_UBloodData { // : UDataAsset
		constexpr auto MaxExitWoundDistance = 0x30; // float
		constexpr auto BloodDripClass = 0x38; // ABloodPool*
		constexpr auto BloodDripPitchLimit = 0x40; // float
		constexpr auto BloodDripPerpendicularYawLimit = 0x44; // float
		constexpr auto BloodDripNonPerpendicular = 0x48; // TArray<UMaterialInterface*>
		constexpr auto BloodDripNonPerpendicularSize = 0x58; // FVector
		constexpr auto BloodDripNonperpendicularYawLimit = 0x64; // float
		constexpr auto BloodDripExtremeNonPerpendicular = 0x68; // TArray<UMaterialInterface*>
		constexpr auto BloodDripExtremeNonPerpendicularSize = 0x78; // FVector
		constexpr auto BloodDripDistance = 0x84; // float
		constexpr auto BloodDripPitchVariance = 0x88; // float
		constexpr auto BloodDripYawVariance = 0x8c; // float
		constexpr auto BloodDripSpawnCount = 0x90; // int32_t
		constexpr auto BloodPoolClass = 0x98; // ABloodPool*
		constexpr auto BloodPoolSpawnDelay = 0xa0; // float
		constexpr auto BloodPoolSpawnBone = 0xa4; // FName
		constexpr auto BloodPoolZOffset = 0xac; // float
		constexpr auto Hit_EntryDecals = 0xb0; // TArray<UMaterialInstance*>
		constexpr auto HitEntryDecalSize = 0xc0; // FVector
		constexpr auto Hit_ExitDecals = 0xd0; // TArray<UMaterialInstance*>
		constexpr auto HitExitDecalSize = 0xe0; // FVector
		constexpr auto Hit_EntryParticles = 0xf0; // TArray<UParticleSystem*>
		constexpr auto Hit_ExitParticles = 0x100; // TArray<UParticleSystem*>
		constexpr auto Hit_HeadshotParticles = 0x110; // TArray<UParticleSystem*>
		constexpr auto EntryWoundBlood_Decals = 0x120; // TArray<UMaterialInstance*>
		constexpr auto EntryWoundBlood_DecalSize = 0x130; // FVector
		constexpr auto ExitWoundBlood_Decals = 0x140; // TArray<UMaterialInstance*>
		constexpr auto ExitWoundBlood_DecalSize = 0x150; // FVector
		constexpr auto HeadshotBlood_Decals = 0x160; // TArray<UMaterialInstance*>
		constexpr auto HeadshotBlood_DecalSize = 0x170; // FVector
		constexpr auto ArteryBones = 0x180; // TArray<FName>
		constexpr auto ArteryBleedoutParticles = 0x190; // TArray<UParticleSystem*>
		constexpr auto NormalBleedoutParticles = 0x1a0; // TArray<UParticleSystem*>
		constexpr auto ArteryBleedoutBlood_Decals = 0x1b0; // TArray<UMaterialInstance*>
		constexpr auto ArteryBleedoutBlood_DecalSize = 0x1c0; // FVector
		constexpr auto NormalBleedoutBlood_Decals = 0x1d0; // TArray<UMaterialInstance*>
		constexpr auto NormalBleedoutBlood_DecalSize = 0x1e0; // FVector
		constexpr auto BloodSplatterDecal = 0x1f0; // TArray<UMaterialInstance*>
		constexpr auto BloodSplatterMinSize = 0x200; // float
		constexpr auto BloodSplatterMaxSize = 0x204; // float
		constexpr auto BloodSplatterMaxDistance = 0x208; // float
		constexpr auto BloodSplatterParticle = 0x210; // TArray<UParticleSystem*>
		constexpr auto HitEvent = 0x220; // UFMODEvent*
		constexpr auto HeadHitEvent = 0x228; // UFMODEvent*
		constexpr auto DeadHitEvent = 0x230; // UFMODEvent*
		constexpr auto ArmorHitEvent = 0x238; // UFMODEvent*
		constexpr auto BleedoutEvent = 0x240; // UFMODEvent*
		constexpr auto ArteryBleedoutEvent = 0x248; // UFMODEvent*
		constexpr auto BleedoutSplashEvent = 0x250; // UFMODEvent*
	}

	namespace n_APVPTriggerBox { // : ATriggerBox
		constexpr auto TextRender = 0x228; // UTextRenderComponent*
		constexpr auto ObjectiveMarkerComponent = 0x230; // UObjectiveMarkerComponent*
		constexpr auto CharactersInTriggerBox = 0x238; // TArray<APlayerCharacter*>
		constexpr auto TimeElapsed = 0x248; // float
		constexpr auto PreviousTimeElapsed = 0x24c; // float
		constexpr auto bEntered = 0x250; // char : 1
		constexpr auto TimeNeededToStay_Editor = 0x254; // float
		constexpr auto TimeNeededToStay = 0x258; // float
		constexpr auto TimeNeededToStay_Active = 0x25c; // float
		constexpr auto OnlyAcceptTeams = 0x260; // TArray<ETeamType>
		constexpr auto OnlyAcceptActorsWithTags = 0x270; // TArray<FName>
		constexpr auto bLogDebugInfo = 0x280; // char : 1
		constexpr auto TH_TimerEventExpiry = 0x288; // FTimerHandle
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0xc0; // UEnum*
	}

	namespace n_ABaseWeapon { // : ABaseItem
		constexpr auto FiremodeBeforeSafe = 0x958; // EFireMode
		constexpr auto BulletSpawn = 0x960; // UArrowComponent*
		constexpr auto ShellSpawn = 0x968; // UArrowComponent*
		constexpr auto ShellParticle = 0x970; // UParticleSystemComponent*
		constexpr auto Flashlight = 0x978; // USpotLightComponent*
		constexpr auto ScopeAttachment = 0x980; // UScopedWeaponAttachment*
		constexpr auto MuzzleAttachment = 0x988; // UWeaponAttachment*
		constexpr auto UnderbarrelAttachment = 0x990; // UWeaponAttachment*
		constexpr auto OverbarrelAttachment = 0x998; // UWeaponAttachment*
		constexpr auto StockAttachment = 0x9a0; // UWeaponAttachment*
		constexpr auto GripAttachment = 0x9a8; // UWeaponAttachment*
		constexpr auto IlluminatorAttachment = 0x9b0; // UWeaponAttachment*
		constexpr auto AmmunitionAttachment = 0x9b8; // UWeaponAttachment*
		constexpr auto AttachmentPoints = 0x9c0; // int32_t
		constexpr auto bSupressed = 0x9c4; // bool
		constexpr auto OnFireModeChanged = 0x9d0; // FMulticastInlineDelegate
		constexpr auto CurrentFireMode = 0x9e0; // EFireMode
		constexpr auto DefaultFireMode = 0x9e1; // EFireMode
		constexpr auto AvailableFireModes = 0x9e8; // TArray<EFireMode>
		constexpr auto BurstBulletCount = 0x9f8; // float
		constexpr auto bHasSafeMode = 0x9fc; // bool
		constexpr auto AddedMagazineCountFromAttachments = 0xa00; // float
		constexpr auto Optics_UI_Socket = 0xa04; // FName
		constexpr auto Grip_UI_Socket = 0xa0c; // FName
		constexpr auto Muzzle_UI_Socket = 0xa14; // FName
		constexpr auto Stock_UI_Socket = 0xa1c; // FName
		constexpr auto Magazine_UI_Socket = 0xa24; // FName
		constexpr auto ADSZoom = 0xa2c; // float
		constexpr auto ADSZoomInSpeed = 0xa30; // float
		constexpr auto ADSZoomOutSpeed = 0xa34; // float
		constexpr auto DefaultDamageType = 0xa38; // UDamageType*
		constexpr auto DamageType = 0xa40; // UDamageType*
		constexpr auto FireCameraShake = 0xa48; // UMatineeCameraShake*
		constexpr auto DamageOverRange = 0xa50; // FRuntimeFloatCurve
		constexpr auto Damage = 0xad8; // float
		constexpr auto DamageSeverityMultiplier = 0xadc; // float
		constexpr auto DamageSeverityChance = 0xae0; // float
		constexpr auto BleedoutDamageMultiplier = 0xae4; // float
		constexpr auto BleedoutDamageChance = 0xae8; // float
		constexpr auto DefaultDamage = 0xaec; // float
		constexpr auto FireRate = 0xaf0; // float
		constexpr auto MinFireRateAI = 0xaf4; // float
		constexpr auto BulletsFiredUntilFullyAccurate = 0xaf8; // int32_t
		constexpr auto MaxFireRateAI = 0xafc; // float
		constexpr auto ProjectileMovementSpeed = 0xb00; // float
		constexpr auto bArmorPiercing = 0xb04; // bool
		constexpr auto ImpactEffects = 0xb08; // AImpactEffect*
		constexpr auto RicochetEffects = 0xb10; // AImpactEffect*
		constexpr auto ExitEffects = 0xb18; // AImpactEffect*
		constexpr auto Wobble = 0xb20; // float
		constexpr auto InitialWobbleDelay = 0xb24; // float
		constexpr auto bAttachBulletOnHit = 0xb28; // bool
		constexpr auto BulletPhysicsImpulseMultiplier = 0xb2c; // float
		constexpr auto bDestroyBulletOnHit = 0xb30; // bool
		constexpr auto BulletProjectileMesh = 0xb38; // USkeletalMesh*
		constexpr auto FakeProjectileMeshStatic = 0xb40; // UStaticMesh*
		constexpr auto BulletProjectileMeshStatic = 0xb48; // UStaticMesh*
		constexpr auto BulletProjectileScale = 0xb50; // FVector
		constexpr auto ShellClass = 0xb60; // ABaseShell*
		constexpr auto ShellMesh = 0xb68; // UStaticMesh*
		constexpr auto RecoilPattern = 0xb70; // TArray<FRotator>
		constexpr auto BulletDrag = 0xb84; // float
		constexpr auto RecoilInterpSpeed = 0xb88; // float
		constexpr auto ADSRecoilMultiplier = 0xb8c; // float
		constexpr auto ADSSpreadMultiplier = 0xb90; // float
		constexpr auto RecoilReturnRate = 0xb94; // float
		constexpr auto SpreadPattern = 0xb98; // FRotator
		constexpr auto SpreadReturnRate = 0xba8; // float
		constexpr auto PendingSpread = 0xbac; // FRotator
		constexpr auto bFireIfNoAmmo = 0xbb8; // bool
		constexpr auto fireDirection = 0xbbc; // FRotator
		constexpr auto GlimmerIntensity = 0xbc8; // float
		constexpr auto SpawnProjectileCount = 0xbcc; // int32_t
		constexpr auto FirstShotRecoil = 0xbd0; // float
		constexpr auto FirstShotSpread = 0xbd4; // float
		constexpr auto FirstShotResetTime = 0xbd8; // float
		constexpr auto VelocitySpreadMultiplier = 0xbdc; // float
		constexpr auto VelocityRecoilMultiplier = 0xbe0; // float
		constexpr auto RecoilMultiplierPitch = 0xbe4; // float
		constexpr auto RecoilMultiplierYaw = 0xbe8; // float
		constexpr auto RefireDelay = 0xbec; // float
		constexpr auto RecoilReturnPercentage = 0xbf0; // float
		constexpr auto RecoilReturnInterpSpeed = 0xbf4; // float
		constexpr auto bCalculateProcRecoil = 0xcb0; // bool
		constexpr auto RecoilDampStrength = 0xcb4; // float
		constexpr auto RecoilFireTime = 0xcb8; // float
		constexpr auto RecoilFireStrength = 0xcbc; // float
		constexpr auto RecoilFireStrengthFirst = 0xcc0; // float
		constexpr auto RecoilAngleStrength = 0xcc4; // float
		constexpr auto RecoilRandomness = 0xcc8; // float
		constexpr auto RecoilFireADSModifier = 0xccc; // float
		constexpr auto RecoilAngleADSModifier = 0xcd0; // float
		constexpr auto RecoilRotationBuildup = 0xcd4; // FRotator
		constexpr auto RecoilPositionBuildup = 0xce0; // FVector
		constexpr auto RecoilBuildupADSModifier = 0xcec; // float
		constexpr auto RecoilHasBuildup = 0xcf0; // bool
		constexpr auto RecoilBuildupDampStrength = 0xcf4; // float
		constexpr auto ProcRecoil_Trans = 0xd24; // FVector
		constexpr auto ProcRecoil_Rot = 0xd30; // FRotator
		constexpr auto ProcRecoil_Trans_Buildup = 0xd3c; // FVector
		constexpr auto ProcRecoil_Rot_Buildup = 0xd48; // FRotator
		constexpr auto CurrentHighTimer = 0xd54; // float
		constexpr auto ReloadHighTimer = 0xd58; // float
		constexpr auto FireHighTimer = 0xd5c; // float
		constexpr auto EquipHighTimer = 0xd60; // float
		constexpr auto bUseScopeMask = 0xd64; // bool
	}

	namespace n_AIntervalGizmoActor { // : AGizmoActor
		constexpr auto UpIntervalComponent = 0x220; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x230; // UGizmoLineHandleComponent*
	}

	namespace n_UAvfMediaSettings { // : UObject
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UNiagaraDataInterfaceVector4Curve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UPhysicalMaterialMask { // : UObject
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_AEvidenceExtractionDevice_Incrim { // : AEvidenceExtractionDevice
		constexpr auto ObjectiveMarkerComponent = 0x240; // UObjectiveMarkerComponent*
		constexpr auto ObjectiveMarkerComponent_WayPoint = 0x248; // UObjectiveMarkerComponent*
		constexpr auto MapActorComponent = 0x250; // UMapActorComponent*
		constexpr auto MapSectionName = 0x258; // FString
	}

	namespace n_USoundfieldEndpointSubmix { // : USoundSubmixBase
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_ATemplateSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x250; // FSoftObjectPath
		constexpr auto BindingOverride = 0x268; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UARTrackableNotifyComponent { // : UActorComponent
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto Space = 0x478; // EWidgetSpace
		constexpr auto TimingPolicy = 0x479; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x480; // UUserWidget*
		constexpr auto DrawSize = 0x488; // FIntPoint
		constexpr auto bManuallyRedraw = 0x490; // bool
		constexpr auto bRedrawRequested = 0x491; // bool
		constexpr auto RedrawTime = 0x494; // float
		constexpr auto CurrentDrawSize = 0x4a0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x4a8; // bool
		constexpr auto Pivot = 0x4ac; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4b4; // bool
		constexpr auto bWindowFocusable = 0x4b5; // bool
		constexpr auto WindowVisibility = 0x4b6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4b7; // bool
		constexpr auto OwnerPlayer = 0x4b8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4c0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4d0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4e0; // float
		constexpr auto BlendMode = 0x4e4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4e5; // bool
		constexpr auto TickWhenOffscreen = 0x4e6; // bool
		constexpr auto BodySetup = 0x4e8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x500; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x510; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x518; // UMaterialInterface*
		constexpr auto RenderTarget = 0x520; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x528; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x530; // bool
		constexpr auto bEditTimeUsable = 0x531; // bool
		constexpr auto SharedLayerName = 0x534; // FName
		constexpr auto LayerZOrder = 0x53c; // int32_t
		constexpr auto GeometryMode = 0x540; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x544; // float
		constexpr auto TickMode = 0x548; // ETickMode
		constexpr auto Widget = 0x570; // UUserWidget*
	}

	namespace n_AKilledSuspectNavigationAvoidanceShape_C { // : AActor
		constexpr auto Box = 0x220; // UBoxComponent*
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UNiagaraDataInterfaceCamera { // : UNiagaraDataInterface
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_AProjectile_Taser_C { // : ABulletProjectile
		constexpr auto UberGraphFrame = 0x398; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UGizmoComponentWorldTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UPhononReverbSourceSettings { // : UReverbPluginSourceSettingsBase
		constexpr auto SourceReverbSimulationType = 0x28; // EIplSimulationType
		constexpr auto SourceReverbContribution = 0x2c; // float
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_APlacedZipcuffs { // : AActor
		constexpr auto ZipcuffMesh = 0x220; // USkeletalMeshComponent*
	}

	namespace n_UANIMBP_NVG_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x340; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x448; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x550; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x570; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x590; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x5b0; // FAnimNode_ModifyBone
		constexpr auto bActive = 0x6b8; // bool
		constexpr auto bHideMesh = 0x6b9; // bool
		constexpr auto NVGTransformAlpha = 0x6bc; // float
		constexpr auto bIsThirdPersonMesh = 0x6c0; // bool
		constexpr auto NVG = 0x6c8; // ANightvisionGoggles*
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UGizmoComponentAxisSource { // : UObject
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x220; // EBrushType
		constexpr auto BrushColor = 0x224; // FColor
		constexpr auto PolyFlags = 0x228; // int32_t
		constexpr auto bColored = 0x22c; // char : 1
		constexpr auto bSolidWhenSelected = 0x22c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x22c; // char : 1
		constexpr auto bNotForClientOrServer = 0x22c; // char : 1
		constexpr auto Brush = 0x230; // UModel*
		constexpr auto BrushComponent = 0x238; // UBrushComponent*
		constexpr auto bInManipulation = 0x240; // char : 1
		constexpr auto SavedSelections = 0x248; // TArray<FGeomSelection>
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_UAnimNotifyState_HideBoneVis { // : UAnimNotifyState
		constexpr auto BoneNameToHide = 0x30; // FName
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_ACyberneticController { // : AAIController
		constexpr auto AIPerceptionComponent = 0x328; // UAIPerceptionComponent*
		constexpr auto SightConfig = 0x330; // UAISenseConfig_Sight*
		constexpr auto TouchConfig = 0x338; // UAISenseConfig_Touch*
		constexpr auto DamageConfig = 0x340; // UAISenseConfig_Damage*
		constexpr auto HearingConfig = 0x348; // UAISenseConfig_Hearing*
		constexpr auto MoraleComponent = 0x350; // UMoraleComponent*
		constexpr auto TargetingComponent = 0x358; // UTargetingComponent*
		constexpr auto BehaviourComponent = 0x360; // UBehaviourComponent*
		constexpr auto LastHeardActorTime = 0x370; // TMap<AActor*, float>
		constexpr auto SensingCharacter = 0x3c0; // APlayerCharacter*
		constexpr auto RecentlySeenSwat = 0x3e0; // TArray<AReadyOrNotCharacter*>
		constexpr auto RecentlySeenSuspects = 0x3f0; // TArray<AReadyOrNotCharacter*>
		constexpr auto RecentlySeenCivilians = 0x400; // TArray<AReadyOrNotCharacter*>
		constexpr auto DamagedBy = 0x428; // TMap<AReadyOrNotCharacter*, float>
		constexpr auto DamagedByLocation = 0x478; // TMap<AReadyOrNotCharacter*, FVector>
		constexpr auto bDummyController = 0x4e0; // bool
		constexpr auto TrackedDistractions = 0x538; // TArray<AActor*>
		constexpr auto CurrentActivity = 0x568; // UBaseActivity*
		constexpr auto ActivityQueue = 0x570; // TArray<UBaseActivity*>
		constexpr auto CallForHelpCoolDownDuration = 0x590; // float
		constexpr auto MaxHearingForHelpDistance = 0x594; // float
		constexpr auto FlashLightSeenCoolDownDuration = 0x59c; // float
		constexpr auto PotentialEnemies = 0x5a0; // TArray<AActor*>
		constexpr auto ActivityCooldownMap = 0x5b8; // TMap<UBaseActivity*, float>
		constexpr auto UnableToGetToCoverPoints = 0x610; // TArray<UCoverPoint*>
		constexpr auto PlayerCharacters = 0x620; // TArray<APlayerCharacter*>
		constexpr auto CombatActivity = 0x6b8; // UBaseCombatActivity*
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UW_ChatBox_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChatBox = 0x268; // UEditableTextBox*
		constexpr auto ScrollBox_166 = 0x270; // UScrollBox*
		constexpr auto bEditingChatbox = 0x278; // bool
		constexpr auto bTeamChat? = 0x279; // bool
		constexpr auto ChatToTeam = 0x27a; // ETeamType
		constexpr auto MouseCursorAfterChat = 0x27b; // bool
		constexpr auto PreplanningChat = 0x27c; // bool
		constexpr auto PostChatVisibility = 0x27d; // ESlateVisibility
		constexpr auto ChatVisibility = 0x27e; // ESlateVisibility
		constexpr auto NewVar_1 = 0x280; // TArray<FRChatMessage>
	}

	namespace n_ALevelSequenceMediaController { // : AActor
		constexpr auto Sequence = 0x228; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x230; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x238; // float
	}

	namespace n_AWoundMeshActor { // : AActor
		constexpr auto WoundStaticMesh = 0x220; // UStaticMeshComponent*
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D { // : UNiagaraDataInterfaceGrid3D
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UMotoSynthSource { // : UObject
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UGraphNodeContextMenuContext { // : UObject
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UWidget { // : UVisual
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_AKingOfTheHillGM { // : AReadyOrNotGameMode_PVP
		constexpr auto ArrestedBlueCharacters = 0x718; // TArray<APlayerCharacter*>
		constexpr auto ArrestedRedCharacters = 0x728; // TArray<APlayerCharacter*>
		constexpr auto TOWVictorySound = 0x738; // UFMODEvent*
		constexpr auto MatchLoopMusic = 0x740; // UFMODEvent*
		constexpr auto MatchStartMusic = 0x748; // UFMODEvent*
		constexpr auto MatchEndMusic = 0x750; // UFMODEvent*
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_ALobbyGS { // : AReadyOrNotGameState
		constexpr auto LobbyMusicEvent = 0x6e8; // UFMODEvent*
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x478; // UGeometryCache*
		constexpr auto bRunning = 0x480; // bool
		constexpr auto bLooping = 0x481; // bool
		constexpr auto bExtrapolateFrames = 0x482; // bool
		constexpr auto StartTimeOffset = 0x484; // float
		constexpr auto PlaybackSpeed = 0x488; // float
		constexpr auto MotionVectorScale = 0x48c; // float
		constexpr auto NumTracks = 0x490; // int32_t
		constexpr auto ElapsedTime = 0x494; // float
		constexpr auto Duration = 0x4cc; // float
		constexpr auto bManualTick = 0x4d0; // bool
	}

	namespace n_UW_BindConflictModal_C { // : UW_StandardModal_C
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
	}

	namespace n_UANIMBP_Zipcuffs_Placed_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x348; // FAnimNode_Root
	}

	namespace n_USlateAccessibleWidgetData { // : UObject
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UElevatorButtonComponent { // : UStaticMeshComponent
		constexpr auto bOverrideButtonPromptText = 0x4f0; // bool
		constexpr auto ButtonPromptText = 0x4f8; // FText
		constexpr auto OwningElevator = 0x510; // AElevator*
		constexpr auto bDoorButton = 0x518; // bool
		constexpr auto bDoorClose = 0x519; // bool
		constexpr auto Floor = 0x51c; // int32_t
	}

	namespace n_UMaterialExpressionSamplePhysicsScalarField { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
		constexpr auto FieldTarget = 0x54; // EFieldScalarType
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMaterialExpressionShadowReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UW_CurrentMatchRound_C { // : UCurrentMatchRoundWidget
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto StyleSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto Style = 0x298; // int32_t
	}

	namespace n_ASpectatePawn { // : ASpectatorPawn
		constexpr auto bDeadSpectatePawn = 0x2b0; // bool
		constexpr auto bBlendWithViewTarget = 0x2b2; // bool
		constexpr auto bPendingCenterprint = 0x2b3; // bool
		constexpr auto PendingCenterprintDuration = 0x2b4; // float
		constexpr auto PendingCenterprintType = 0x2b8; // FName
		constexpr auto PendingCenterprintOther = 0x2c0; // APlayerCharacter*
		constexpr auto HeadcamMaterial = 0x2c8; // UMaterial*
		constexpr auto HeadcamMaterialInstance = 0x2d0; // UMaterialInstanceDynamic*
		constexpr auto SpectateWidget = 0x2d8; // UUserWidget*
		constexpr auto SpectatorHUD = 0x2e0; // USpectatorCharacterHUD*
		constexpr auto bShouldShowViewTargetHUD = 0x2e8; // bool
		constexpr auto CurrentViewTarget = 0x2f0; // AActor*
		constexpr auto PotentialViewTargetCount = 0x2f8; // int32_t
		constexpr auto bHideWidgets = 0x2fc; // bool
		constexpr auto Killer = 0x300; // APlayerCharacter*
		constexpr auto KilledCharacter = 0x308; // APlayerCharacter*
	}

	namespace n_UPaperGroupedSpriteComponent { // : UMeshComponent
		constexpr auto InstanceMaterials = 0x478; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x488; // TArray<FSpriteInstanceData>
	}

	namespace n_ULevelSequenceProjectSettings { // : UDeveloperSettings
		constexpr auto bDefaultLockEngineToDisplayRate = 0x38; // bool
		constexpr auto DefaultDisplayRate = 0x40; // FString
		constexpr auto DefaultTickResolution = 0x50; // FString
		constexpr auto DefaultClockSource = 0x60; // EUpdateClockSource
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray { // : UNiagaraDataInterfaceRWBase
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bInheritUserParameterSettings = 0xe5; // char : 1
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x7d0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7dc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7e8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x800; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x858; // float
		constexpr auto CurrentAperture = 0x85c; // float
		constexpr auto CurrentFocusDistance = 0x860; // float
		constexpr auto FilmbackPresets = 0x870; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x880; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x890; // FString
		constexpr auto DefaultFilmbackPreset = 0x8a0; // FString
		constexpr auto DefaultLensPresetName = 0x8b0; // FString
		constexpr auto DefaultLensFocalLength = 0x8c0; // float
		constexpr auto DefaultLensFStop = 0x8c4; // float
	}

	namespace n_ASecondary_G19_V2_C { // : ABaseMagazineWeapon
		constexpr auto UberGraphFrame = 0x1260; // FPointerToUberGraphFrame
	}

	namespace n_ANotifyingRecastNavMesh { // : ARecastNavMesh
		constexpr auto bDrawCoverData = 0x4d8; // char : 1
		constexpr auto bDrawEdge = 0x4d8; // char : 1
		constexpr auto bDrawCoverTest = 0x4d8; // char : 1
		constexpr auto bDrawCoverPoints = 0x4d8; // char : 1
		constexpr auto bDrawCameraTest = 0x4d8; // char : 1
		constexpr auto bDrawCoverOctree = 0x4d8; // char : 1
		constexpr auto bLogNearestTiles = 0x4d8; // char : 1
		constexpr auto MinRange = 0x4dc; // float
		constexpr auto MaxRange = 0x4e0; // float
		constexpr auto MinCoverPointsPerEdge = 0x4e4; // int32_t
		constexpr auto MaxCoverPointsPerEdge = 0x4e8; // int32_t
	}

	namespace n_UPhononGeometryComponent { // : USceneComponent
		constexpr auto ExportAllChildren = 0x1f8; // bool
		constexpr auto NumVertices = 0x1fc; // uint32_t
		constexpr auto NumTriangles = 0x200; // uint32_t
	}

	namespace n_UAnimNotify_SetStrafe { // : UAnimNotify
		constexpr auto bSetStrafe = 0x38; // bool
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_ULandscapeWeightmapUsage { // : UObject
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto surfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UGizmoConstantAxisSource { // : UObject
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_ATablet { // : ABaseItem
		constexpr auto ViewfinderMesh = 0x958; // USkeletalMeshComponent*
		constexpr auto OverlayComp = 0x960; // UWidgetComponent*
		constexpr auto DefaultViewfinderMaterial = 0x968; // UMaterial*
		constexpr auto ViewfinderScreenMaterial = 0x970; // UMaterialInstanceDynamic*
		constexpr auto DisplayHUD = 0x978; // UTabletDisplay*
		constexpr auto bScreenOn = 0x980; // bool
		constexpr auto bInspecting = 0x981; // bool
	}

	namespace n_UProxyLODMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UNVG_Widget_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UW_ItemSelection_ItemGroup_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_FadeOut_Selected = 0x268; // UWidgetAnimation*
		constexpr auto Anim_FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto Anim_Unfocus = 0x278; // UWidgetAnimation*
		constexpr auto Anim_Select_Fail = 0x280; // UWidgetAnimation*
		constexpr auto Anim_Focus = 0x288; // UWidgetAnimation*
		constexpr auto Divider_Image = 0x290; // UImage*
		constexpr auto GroupOverlay = 0x298; // UOverlay*
		constexpr auto Icon_Image = 0x2a0; // UImage*
		constexpr auto Icon_NotAvailable_Image = 0x2a8; // UImage*
		constexpr auto Icon_Text = 0x2b0; // UTextBlock*
		constexpr auto IconStyle_Switcher = 0x2b8; // UWidgetSwitcher*
		constexpr auto Keybinding_Text = 0x2c0; // UTextBlock*
		constexpr auto ScrollHint_Box = 0x2c8; // UHorizontalBox*
		constexpr auto ScrollHint_Text = 0x2d0; // UTextBlock*
		constexpr auto Selected_Image = 0x2d8; // UImage*
		constexpr auto Item = 0x2e0; // ABaseItem*
		constexpr auto PlayerCharacter = 0x2e8; // ABasePlayer_C*
		constexpr auto NumOfItems = 0x2f0; // int32_t
		constexpr auto ItemClass = 0x2f8; // ABaseItem*
		constexpr auto bIsFocused = 0x300; // bool
		constexpr auto bContainsMultipleCategories = 0x301; // bool
		constexpr auto OnFadeOutSelectedFinished = 0x308; // FMulticastInlineDelegate
		constexpr auto OnFadeOutFinished = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection { // : UMovieSceneSection
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UDefaultLevelSequenceInstanceData { // : UObject
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UMaterialExpressionNamedRerouteUsage { // : UMaterialExpressionNamedRerouteBase
		constexpr auto Declaration = 0x40; // UMaterialExpressionNamedRerouteDeclaration*
		constexpr auto DeclarationGuid = 0x48; // FGuid
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0xc0; // int32_t
	}

	namespace n_AEvidenceSpawnPoint { // : AActorSpawnPoint
		constexpr auto EvidenceActorClass = 0x238; // AEvidenceActor*
		constexpr auto EvidenceSearchArea = 0x240; // ASplineTrigger_Incrimination*
		constexpr auto EvidenceBuilding = 0x248; // ABuildingTrigger_Incrimination*
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0xa8; // int32_t
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_AHelmet_BallisticMask_C { // : AHeadwear
		constexpr auto UberGraphFrame = 0x15f0; // FPointerToUberGraphFrame
		constexpr auto PlayerState = 0x15f8; // APlayerState*
	}

	namespace n_ALoadoutPortal { // : AActor
		constexpr auto BillboardComponent = 0x228; // UBillboardComponent*
		constexpr auto InteractableComponent = 0x230; // UInteractableComponent*
		constexpr auto CompsToOutline = 0x238; // TArray<UStaticMeshComponent*>
		constexpr auto LightsToEnable = 0x248; // TArray<ULightComponent*>
		constexpr auto LightActorsOfTag = 0x258; // FName
		constexpr auto bIsWeaponCustomizationOnly = 0x260; // bool
		constexpr auto WeaponCustomizationCamera = 0x268; // ACameraActor*
		constexpr auto PreMissionStreamedLevel = 0x288; // ULevelStreaming*
	}

	namespace n_UBodySetupCore { // : UObject
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UMagicLeapARPinContentBindings { // : USaveGame
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_ADeployableBag { // : ABaseDeployableGear
		constexpr auto PlacedBagClass = 0x958; // APlacedBag*
		constexpr auto MaxPlacementDistance = 0x960; // float
	}

	namespace n_UDestructibleFractureSettings { // : UObject
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UARSessionConfig { // : UDataAsset
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_ASuspectsAndCivilianManager { // : AInfo
		constexpr auto InvestigatedTrap = 0x238; // TArray<ATrapActor*>
		constexpr auto SpeechCooldownMap = 0x250; // TMap<FString, float>
	}

	namespace n_ATeamDeathmatchGM { // : AReadyOrNotGameMode_PVP
		constexpr auto bSuddenDeath = 0x718; // bool
		constexpr auto MatchLoopMusic = 0x720; // UFMODEvent*
		constexpr auto MatchStartMusic = 0x728; // UFMODEvent*
		constexpr auto MatchEndMusic = 0x730; // UFMODEvent*
	}

	namespace n_UFindFriendSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_Benelli_M4_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x4f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x648; // FAnimNode_UseCachedPose
	}

	namespace n_USynthKnob { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UTestMovieSceneSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto World = 0x1b8; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x1c0; // bool
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UAnimNotify_AIThrowPendingItem { // : UAnimNotify
		constexpr auto BoneToSpawnOn = 0x38; // FName
		constexpr auto RelativeTransform = 0x40; // FTransform
		constexpr auto bCustomThrowDirection = 0x70; // char : 1
		constexpr auto ThrowDirection = 0x74; // FRotator
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_ACyberneticCharacter { // : AAICharacter
		constexpr auto MoveStyle = 0x22b8; // URoNMoveStyleComponent*
		constexpr auto Rep_BehaviourMods = 0x22f8; // TArray<EBehaviourMods>
		constexpr auto VoiceLineEventMask = 0x2308; // UFMODEvent*
		constexpr auto SimulatingAttachedStaticMeshes = 0x2318; // TArray<UStaticMeshComponent*>
		constexpr auto AttachedMeshData = 0x2328; // TArray<FAttachedMeshData>
		constexpr auto AttachedSkeletalMeshData = 0x2338; // TArray<FAttachedSkeletalMeshData>
		constexpr auto bIsTrackingEnemy = 0x2348; // bool
		constexpr auto TimeSinceLastSeenEnemy = 0x234c; // uint32_t
		constexpr auto TimeSinceLastHeardAggresiveNoise = 0x2350; // uint32_t
		constexpr auto bIsMoving = 0x2354; // bool
		constexpr auto LastEquippedBreachItem = 0x2370; // ABaseItem*
		constexpr auto NoBuenoTextRender = 0x2388; // UTextRenderComponent*
		constexpr auto AbuseCount = 0x2390; // int32_t
		constexpr auto ReasonsToSprint = 0x2398; // TArray<FString>
		constexpr auto ReasonsToStandStill = 0x23a8; // TArray<FString>
		constexpr auto ReasonsToWalk = 0x23b8; // TArray<FString>
		constexpr auto ShootingYellCoolDownDuration = 0x23d8; // float
		constexpr auto KnockedOutPhysicsAsset = 0x23e0; // UPhysicsAsset*
		constexpr auto PickupRulesLVL1 = 0x23e8; // TArray<EItemClass>
		constexpr auto PickupRulesLVL2 = 0x23f8; // TArray<EItemClass>
		constexpr auto PickupRulesLVL3 = 0x2408; // TArray<EItemClass>
		constexpr auto bOrientated = 0x2418; // bool
		constexpr auto AimOffset = 0x241c; // FVector2D
		constexpr auto LeanAmount = 0x242c; // float
		constexpr auto bIsFollowing = 0x2430; // char : 1
		constexpr auto bCowering = 0x2448; // bool
		constexpr auto AILevelToLeanStrength = 0x2450; // TMap<ECyberneticsLevel, float>
		constexpr auto HostageTakingInteractionStart = 0x24a0; // UInteractionsData*
		constexpr auto HostageTakingInteractionIdle = 0x24a8; // UInteractionsData*
		constexpr auto HostageTakingInteractionEnd = 0x24b0; // UInteractionsData*
		constexpr auto CyberneticsLevel = 0x24b8; // ECyberneticsLevel
		constexpr auto TimeSurrendered = 0x24bc; // float
		constexpr auto bIsComplying = 0x24c0; // char : 1
		constexpr auto bIsWaiting = 0x24c0; // char : 1
		constexpr auto PepperSprayAbuseLevel = 0x24c4; // float
		constexpr auto TimeSinceLastTasered = 0x24c8; // float
		constexpr auto TimesTasered = 0x24cc; // int32_t
		constexpr auto CivilianCowerActivities = 0x24d8; // TArray<UWorldBuildingActivity*>
		constexpr auto CurrentCivilianCowerActivity = 0x24f0; // UWorldBuildingActivity*
		constexpr auto CivilianCowerActivityDuration = 0x24f8; // float
		constexpr auto DefaultUnarmedStyle = 0x2508; // FString
		constexpr auto DefaultUnarmedStyle_Female = 0x2518; // FString
		constexpr auto DefaultStunnedStyle = 0x2528; // FString
		constexpr auto DefaultLoweredTwoHandedStyle = 0x2538; // FString
		constexpr auto DefaultRaisedTwoHandedStyle = 0x2548; // FString
		constexpr auto DefaultArrestedStyle = 0x2558; // FString
		constexpr auto DefaultSurrenderedStyle = 0x2568; // FString
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UNiagaraDataInterfaceArrayColor { // : UNiagaraDataInterfaceArray
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_AIncriminationGS { // : AReadyOrNotGameState
		constexpr auto OnIntelStateChanged = 0x6e0; // FMulticastInlineDelegate
		constexpr auto OnIntelSearchAreaChosen = 0x6f0; // FMulticastInlineDelegate
		constexpr auto OnIntelBuildingChosen = 0x700; // FMulticastInlineDelegate
		constexpr auto OnActiveClueChanged = 0x710; // FMulticastInlineDelegate
		constexpr auto OnPreviousActiveClueChanged = 0x720; // FMulticastInlineDelegate
		constexpr auto OnCluesChanged = 0x730; // FMulticastInlineDelegate
		constexpr auto ChosenEvidenceSpawn = 0x740; // AEvidenceSpawnPoint*
		constexpr auto ChosenEvidenceActor = 0x748; // AEvidenceActor*
		constexpr auto ChosenExtractionDevice = 0x750; // AEvidenceExtractionDevice_Incrim*
		constexpr auto Clues = 0x758; // TArray<AIncriminationClue*>
		constexpr auto ClueSpawnPoints = 0x768; // TArray<AIncriminationClueSpawnPoint*>
		constexpr auto ActiveClue = 0x778; // AIncriminationClue*
		constexpr auto PreviousActiveClue = 0x780; // AIncriminationClue*
		constexpr auto ChosenEvidenceSearchArea = 0x788; // ASplineTrigger_Incrimination*
		constexpr auto ChosenEvidenceBuilding = 0x790; // ABuildingTrigger_Incrimination*
		constexpr auto NonMainIntelSearchZones = 0x798; // TArray<ASplineTrigger_Incrimination*>
		constexpr auto CurrentExtractionDevice = 0x7a8; // AEvidenceExtractionDevice*
		constexpr auto PickupTeam = 0x7b0; // ETeamType
		constexpr auto IntelState = 0x7b1; // EEvidenceActorState
		constexpr auto bIntelExtracted = 0x7b2; // bool
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UMatchStatusCardWidget { // : UBaseWidget
		constexpr auto MatchTimeRemaining = 0x278; // UMatchTimeRemainingWidget*
		constexpr auto CurrentMatchRound = 0x280; // UCurrentMatchRoundWidget*
	}

	namespace n_UPaperTileMapComponent { // : UMeshComponent
		constexpr auto MapWidth = 0x478; // int32_t
		constexpr auto MapHeight = 0x47c; // int32_t
		constexpr auto TileWidth = 0x480; // int32_t
		constexpr auto TileHeight = 0x484; // int32_t
		constexpr auto DefaultLayerTileSet = 0x488; // UPaperTileSet*
		constexpr auto Material = 0x490; // UMaterialInterface*
		constexpr auto TileLayers = 0x498; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x4a8; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4b8; // int32_t
		constexpr auto bUseSingleLayer = 0x4bc; // bool
		constexpr auto TileMap = 0x4c0; // UPaperTileMap*
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch { // : UMaterialExpression
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_ABP_RoNBloodPool_C { // : ABloodPool
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto Materials = 0x230; // TArray<UMaterialInstance*>
		constexpr auto RandomPick = 0x240; // int32_t
		constexpr auto DynamicMaterialInstance = 0x248; // UMaterialInstanceDynamic*
		constexpr auto BloodExpansionRate = 0x250; // float
		constexpr auto BloodExpansionCurrent = 0x254; // float
		constexpr auto bBleeding = 0x258; // bool
	}

	namespace n_UNavigationSystemConfig { // : UObject
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UPlayerDetailsWidgetComponent { // : UWidgetComponent
		constexpr auto OverriddenPlayerState = 0x5a0; // AReadyOrNotPlayerState*
		constexpr auto MaxDistance = 0x5a8; // float
	}

	namespace n_ASlowDownVolume { // : ATriggerBox
		constexpr auto SlowDownMultiplier = 0x228; // float
	}

	namespace n_UW_DebugInfoContainer_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BG_Blur = 0x268; // UBackgroundBlur*
		constexpr auto BG_Image = 0x270; // UImage*
		constexpr auto DebugInfo_Container = 0x278; // UVerticalBox*
		constexpr auto Title_Text = 0x280; // UTextBlock*
		constexpr auto TitleFont = 0x288; // FSlateFontInfo
		constexpr auto TitlePadding = 0x2e0; // FMargin
		constexpr auto TitleHorizontalAlignment = 0x2f0; // EHorizontalAlignment
		constexpr auto TitleVerticalAlignment = 0x2f1; // EVerticalAlignment
		constexpr auto DebugNameFont = 0x2f8; // FSlateFontInfo
		constexpr auto DebugValueFont = 0x350; // FSlateFontInfo
		constexpr auto bEnableBackgroundEffects = 0x3a8; // bool
		constexpr auto Title = 0x3b0; // FText
		constexpr auto DebugItems = 0x3c8; // TArray<FText>
		constexpr auto Spacing = 0x3d8; // TArray<float>
		constexpr auto bUseUniformSpacing = 0x3e8; // bool
		constexpr auto DefaultSpacing = 0x3ec; // float
		constexpr auto DebugInfoWidgets = 0x3f0; // TArray<UW_DebugInfo_C*>
	}

	namespace n_UPepperballDamageType { // : UStunDamage
		constexpr auto StunDurationHeadshot = 0x620; // float
		constexpr auto StunDurationLeg = 0x624; // float
	}

	namespace n_UImgMediaSource { // : UBaseMediaSource
		constexpr auto IsPathRelativeToProjectRoot = 0x88; // bool
		constexpr auto FrameRateOverride = 0x8c; // FFrameRate
		constexpr auto ProxyOverride = 0x98; // FString
		constexpr auto SequencePath = 0xa8; // FDirectoryPath
	}

	namespace n_UANIMBP_M590_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2f8; // FAnimNode_Slot
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x220; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x228; // AActor*
		constexpr auto ConstraintActor2 = 0x230; // AActor*
		constexpr auto bDisableCollision = 0x238; // char : 1
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto CoolDownTime = 0x68; // float
	}

	namespace n_UNetAnalyticsAggregatorConfig { // : UObject
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x228; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x230; // UBillboardComponent*
		constexpr auto BadSprite = 0x238; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x240; // char : 1
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x220; // UAtmosphericFogComponent*
	}

	namespace n_USourceEffectChorusPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_APlayerReferendum { // : AReferendum
		constexpr auto TargetPlayerState = 0x2a8; // AReadyOrNotPlayerState*
	}

	namespace n_UChaosSolverSettings { // : UDeveloperSettings
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UHostMigrationManager { // : UObject
		constexpr auto PlayerInformations = 0x38; // TArray<FHm_PlayerInformation>
		constexpr auto CyberneticsInformations = 0x48; // TArray<FHm_CyberneticsInformation>
		constexpr auto DoorInformations = 0x58; // TArray<FHm_DoorInformation>
		constexpr auto BombInformations = 0x68; // TArray<FHm_BombInformation>
		constexpr auto BaggedEvidenceInformations = 0x78; // TArray<FHm_BaggedEvidence>
		constexpr auto DroppedEvidenceInformations = 0x88; // TArray<FHm_DroppedEvidence>
		constexpr auto ActiveEvidence = 0x98; // TArray<FString>
		constexpr auto NextHost = 0xb8; // APlayerState*
		constexpr auto MigrationGUID = 0xc0; // FString
		constexpr auto MapName = 0xd8; // FString
		constexpr auto ModeName = 0xe8; // FString
		constexpr auto NextHostName = 0x100; // FString
		constexpr auto ExpectedPlayerCount = 0x110; // int32_t
	}

	namespace n_ULookupData { // : UDataAsset
		constexpr auto bToggleToDoAssetUpdate = 0x30; // bool
		constexpr auto Items = 0x38; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Weapons = 0x48; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Armour = 0x58; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Grenades = 0x68; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Shells = 0x78; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Projectiles = 0x88; // TArray<TSoftClassPtr<UObject>>
		constexpr auto Characters = 0x98; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AI = 0xa8; // TArray<TSoftClassPtr<UObject>>
		constexpr auto bAddSelectedBlueprintToItemData = 0xb8; // bool
		constexpr auto biClassArray = 0xc0; // TArray<ABaseItem*>
		constexpr auto ItemDataLookupTable = 0xd0; // UDataTable*
		constexpr auto bToggleForceLevelDataTable = 0xd8; // bool
		constexpr auto LevelDataLookupTable = 0xe0; // UDataTable*
		constexpr auto bToggleForceAIData = 0xe8; // bool
		constexpr auto AIDataLookupTable = 0xf0; // UDataTable*
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x858; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xa04; // float
		constexpr auto MulticastRecordOptions = 0xa28; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa38; // bool
		constexpr auto SpectatorControllers = 0xa40; // TArray<APlayerController*>
	}

	namespace n_UMovieSceneHookSection { // : UMovieSceneSection
		constexpr auto bRequiresRangedHook = 0xf8; // char : 1
		constexpr auto bRequiresTriggerHooks = 0xf8; // char : 1
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x220; // UPhysicsThrusterComponent*
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UBaseTeamQuestNode { // : UBaseQuestNode
		constexpr auto EnabledSwatCommands = 0x250; // TArray<ESwatCommand>
		constexpr auto bEnabledAllSwatCommands = 0x260; // bool
		constexpr auto SWATManager = 0x268; // ASWATManager*
	}

	namespace n_AReadyOrNotGameSession { // : AGameSession
		constexpr auto ServerName = 0x380; // FString
		constexpr auto MapList = 0x390; // TArray<FString>
		constexpr auto Password = 0x3a0; // FString
		constexpr auto MaxConnections = 0x3b0; // int32_t
		constexpr auto AdminPassword = 0x3b8; // FString
		constexpr auto LoggedInAdmins = 0x3c8; // TArray<FString>
		constexpr auto BanList = 0x3d8; // TArray<FString>
		constexpr auto RoundTimerGameStart = 0x3e8; // float
		constexpr auto RoundTimerBetweenMaps = 0x3ec; // float
		constexpr auto ReinforcementTimer = 0x3f0; // float
		constexpr auto RespawnTimer = 0x3f4; // float
		constexpr auto Timelimit = 0x3f8; // float
		constexpr auto Scorelimit = 0x3fc; // int32_t
		constexpr auto RoundsPerMap = 0x400; // int32_t
		constexpr auto bAiEnabled = 0x404; // bool
		constexpr auto EventId = 0x408; // int32_t
		constexpr auto ClientNetSpeed = 0x40c; // int32_t
	}

	namespace n_UCullingField { // : UFieldNodeBase
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_USpectatorBeaconState { // : UObject
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UPhysicsSettings { // : UPhysicsSettingsCore
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_USubmixEffectStereoDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_APopupTarget { // : AActor
		constexpr auto Mesh = 0x220; // USkeletalMeshComponent*
		constexpr auto MaxHealth = 0x228; // int32_t
		constexpr auto PopupTime = 0x22c; // float
		constexpr auto Health = 0x230; // float
		constexpr auto bFallDown = 0x240; // bool
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UModularSynthComponent { // : USynthComponent
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_UGeometryCacheCodecBase { // : UObject
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_USoundSimple { // : USoundBase
		constexpr auto Variations = 0x170; // TArray<FSoundVariation>
		constexpr auto SoundWave = 0x180; // USoundWave*
	}

	namespace n_AWorldDataGenerator { // : AInfo
		constexpr auto WorldBuildIgnoreActors = 0x220; // TArray<AActor*>
		constexpr auto DoorClass = 0x230; // ADoor*
		constexpr auto IgnoredExitThreats = 0x238; // TArray<AThreatAwarenessActor*>
		constexpr auto bDoorwaysBlocked = 0x248; // bool
		constexpr auto MaxRedBlueClearDistanceApart = 0x24c; // float
		constexpr auto OnlyOnMesh = 0x250; // FName
		constexpr auto CullDistanceMultiplier = 0x258; // float
		constexpr auto CullDistanceMaxBoundsMultiplier = 0x25c; // float
		constexpr auto CullDistanceSettingsSaveName = 0x260; // FString
		constexpr auto SavedCullDistanceSettings = 0x270; // TMap<FString, FSavedCullDistanceSettings>
		constexpr auto bHasWorldEverBeenGenerated = 0x2c4; // bool
		constexpr auto SpawnerSavedData = 0x2d8; // FSpawnerSavedData
	}

	namespace n_UDeployItemAtLocationActivity { // : UBaseActivity
		constexpr auto DeployItemClass = 0x1b0; // ABaseItem*
		constexpr auto DeployLocation = 0x1b8; // FVector
	}

	namespace n_ALensFlare { // : AActor
		constexpr auto Scene = 0x220; // USceneComponent*
		constexpr auto LensFlare = 0x228; // UMaterialBillboardComponent*
		constexpr auto OwningCharacter = 0x230; // AReadyOrNotCharacter*
		constexpr auto FlareMat = 0x238; // UMaterialInterface*
		constexpr auto BaseSize = 0x240; // FVector2D
		constexpr auto MinimumRotationDeltaToBeVisible = 0x248; // float
		constexpr auto GlobalBrightness = 0x25c; // float
		constexpr auto GhostsBrightness = 0x260; // float
		constexpr auto FlickerIntensity = 0x264; // float
		constexpr auto FlickerTime = 0x268; // float
		constexpr auto GlobalColor = 0x26c; // FLinearColor
		constexpr auto FadeDistance = 0x27c; // float
		constexpr auto bUseFadeDistance = 0x280; // bool
		constexpr auto IncreasingBloomByDistance = 0x284; // float
		constexpr auto bUseDistanceBloom = 0x288; // bool
		constexpr auto HaloOpacity = 0x28c; // float
		constexpr auto HaloInnerRadius = 0x290; // float
		constexpr auto HaloBrightness = 0x294; // float
		constexpr auto HaloOuterColor = 0x298; // FLinearColor
		constexpr auto HaloInnerColor = 0x2a8; // FLinearColor
		constexpr auto HaloTexture = 0x2b8; // UTexture*
		constexpr auto HaloTextureSize = 0x2c0; // float
		constexpr auto HaloContrast = 0x2c4; // float
		constexpr auto CentreFlareBrightness = 0x2c8; // float
		constexpr auto CentreFlareTexture = 0x2d0; // UTexture*
		constexpr auto CentreFlareColor = 0x2d8; // FLinearColor
		constexpr auto CentreFlareSize = 0x2e8; // float
		constexpr auto CentreFlareContrast = 0x2ec; // float
		constexpr auto MainFlareBrightness = 0x2f0; // float
		constexpr auto MainFlare = 0x2f8; // UTexture*
		constexpr auto MainFlareInnerRadius = 0x300; // float
		constexpr auto MainOuterColor = 0x304; // FLinearColor
		constexpr auto MainLensInnerColor = 0x314; // FLinearColor
		constexpr auto MainFlareSize = 0x324; // float
		constexpr auto MainFlareContrast = 0x328; // float
		constexpr auto ReflectionSize = 0x32c; // float
		constexpr auto ReflectionCentreTexture = 0x330; // UTexture*
		constexpr auto ReflectionColor = 0x338; // FLinearColor
		constexpr auto ReflectionBrightness = 0x348; // float
		constexpr auto ReflectionContrast = 0x34c; // float
		constexpr auto OppositeFlaresAxisProjection = 0x350; // float
		constexpr auto FlareOppositeSize01 = 0x354; // float
		constexpr auto FlareOppositeSize02 = 0x358; // float
		constexpr auto FlareOppositeColor01 = 0x35c; // FLinearColor
		constexpr auto FlareOppositeColor02 = 0x36c; // FLinearColor
		constexpr auto FlareOppositeBrightness01 = 0x37c; // float
		constexpr auto FlareOppositeBrightness02 = 0x380; // float
		constexpr auto FlareOppositeContrast01 = 0x384; // float
		constexpr auto FlareOppositeContrast02 = 0x388; // float
		constexpr auto FlareOpposite01 = 0x390; // UTexture*
		constexpr auto FlareOpposite02 = 0x398; // UTexture*
		constexpr auto FrontFlaresAxisProjection = 0x3a0; // float
		constexpr auto FlareFrontSize01 = 0x3a4; // float
		constexpr auto FlareFrontSize02 = 0x3a8; // float
		constexpr auto FlareFrontColor01 = 0x3ac; // FLinearColor
		constexpr auto FlareFrontColor02 = 0x3bc; // FLinearColor
		constexpr auto FlareFrontProximityCentre01 = 0x3cc; // float
		constexpr auto FlareFrontProximityCentre02 = 0x3d0; // float
		constexpr auto FlareFront01 = 0x3d8; // UTexture*
		constexpr auto FlareFront02 = 0x3e0; // UTexture*
		constexpr auto FlareFrontContrast01 = 0x3e8; // float
		constexpr auto FlareFrontContrast02 = 0x3ec; // float
		constexpr auto FlareFrontBrightness01 = 0x3f0; // float
		constexpr auto FlareFrontBrightness02 = 0x3f4; // float
		constexpr auto ReflectedFlareSize01 = 0x3f8; // float
		constexpr auto ReflectedFlareSize02 = 0x3fc; // float
		constexpr auto ReflectedFlareProximityCentre01 = 0x400; // float
		constexpr auto ReflectedFlareProximityCentre02 = 0x404; // float
		constexpr auto ReflectedFlare01 = 0x408; // UTexture*
		constexpr auto ReflectedFlare02 = 0x410; // UTexture*
		constexpr auto ReflectedFlareColor01 = 0x418; // FLinearColor
		constexpr auto ReflectedFlareColor02 = 0x428; // FLinearColor
		constexpr auto ReflectedFlareContrast01 = 0x438; // float
		constexpr auto ReflectedFlareContrast02 = 0x43c; // float
		constexpr auto ReflectedFlareBrightness01 = 0x440; // float
		constexpr auto ReflectedFlareBrightness02 = 0x444; // float
		constexpr auto MinorFlareProximityCentre01 = 0x448; // float
		constexpr auto MinorFlareSize01 = 0x44c; // float
		constexpr auto MinorFlareSizeRandom01 = 0x450; // float
		constexpr auto MinorFlare01 = 0x458; // UTexture*
		constexpr auto MinorFlareColor01 = 0x460; // FLinearColor
		constexpr auto MinorFlareContrast01 = 0x470; // float
		constexpr auto MinorFlareBrightness01 = 0x474; // float
		constexpr auto MinorFlareColor02 = 0x478; // FLinearColor
		constexpr auto MinorFlareContrast02 = 0x488; // float
		constexpr auto MinorFlareBrightness02 = 0x48c; // float
		constexpr auto MinorFlareProximityCentre02 = 0x490; // float
		constexpr auto MinorFlareSize02 = 0x494; // float
		constexpr auto MinorFlareSizeRandom02 = 0x498; // float
		constexpr auto MinorFlare02 = 0x4a0; // UTexture*
		constexpr auto Iris = 0x4a8; // UTexture*
		constexpr auto IrisSize = 0x4b0; // float
		constexpr auto IrisProximityCentre = 0x4b4; // float
		constexpr auto IrisBrightness = 0x4b8; // float
		constexpr auto IrisContrast = 0x4bc; // float
		constexpr auto IrisColor = 0x4c0; // FLinearColor
		constexpr auto AdditionalFlare = 0x4d0; // UTexture*
		constexpr auto AdditionalFlareSize = 0x4d8; // float
		constexpr auto AdditionalFlareContrast = 0x4dc; // float
		constexpr auto AdditionalFlareBrightness = 0x4e0; // float
		constexpr auto AdditionalFlareColor = 0x4e4; // FLinearColor
	}

	namespace n_ALobbyGM { // : AReadyOrNotGameMode
		constexpr auto InitalizedPlayerControllers = 0x6c0; // TArray<AReadyOrNotPlayerController*>
	}

	namespace n_UInputRouter { // : UObject
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UTextureRenderTarget2DArray { // : UTextureRenderTarget
		constexpr auto SizeX = 0x180; // int32_t
		constexpr auto SizeY = 0x184; // int32_t
		constexpr auto Slices = 0x188; // int32_t
		constexpr auto ClearColor = 0x18c; // FLinearColor
		constexpr auto OverrideFormat = 0x19c; // EPixelFormat
		constexpr auto bHDR = 0x19d; // char : 1
		constexpr auto bForceLinearGamma = 0x19d; // char : 1
	}

	namespace n_UARPoseComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UBaseRadialMenuScript { // : UObject
		constexpr auto RadialMenuIcon = 0x28; // TSoftObjectPtr<UTexture2D>
		constexpr auto RadialMenuOwner = 0x50; // URadialWidgetBase*
		constexpr auto Actor = 0x58; // AActor*
		constexpr auto World = 0x60; // UWorld*
	}

	namespace n_UNavCollisionBase { // : UObject
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UTemplateSequenceSection { // : UMovieSceneSubSection
		constexpr auto PropertyScales = 0x170; // TArray<FTemplateSectionPropertyScale>
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x220; // APlayerController*
		constexpr auto bLostFocusPaused = 0x228; // char : 1
		constexpr auto bShowHUD = 0x228; // char : 1
		constexpr auto bShowDebugInfo = 0x228; // char : 1
		constexpr auto CurrentTargetIndex = 0x22c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x230; // char : 1
		constexpr auto bShowOverlays = 0x230; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x230; // char : 1
		constexpr auto PostRenderedActors = 0x238; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x250; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x260; // TArray<FName>
		constexpr auto Canvas = 0x270; // UCanvas*
		constexpr auto DebugCanvas = 0x278; // UCanvas*
		constexpr auto DebugTextList = 0x280; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x290; // AActor*
		constexpr auto ShowDebugTargetActor = 0x298; // AActor*
	}

	namespace n_UDestroySessionCallbackProxyAdvanced { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_CollectEvidence { // : UAnimNotify
		constexpr auto bCollectFinished = 0x38; // char : 1
	}

	namespace n_AReadyOrNotGameMode_PVP { // : AReadyOrNotGameMode
		constexpr auto OnMatchStart = 0x6b8; // FMulticastInlineDelegate
		constexpr auto OnRoundWon = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnRoundStart = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnRoundEnd = 0x6e8; // FMulticastInlineDelegate
		constexpr auto RoundEndResetDelay = 0x6f8; // float
		constexpr auto MatchEndResetDelay = 0x6fc; // float
		constexpr auto RoundEndWidgetClass = 0x700; // URoundEndWidget_PVP*
		constexpr auto bIncrementedRoundCounterThisRound = 0x708; // char : 1
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x450; // FSplineCurves
		constexpr auto SplineInfo = 0x4c0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4d8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4f0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x508; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x520; // bool
		constexpr auto ReparamStepsPerSegment = 0x524; // int32_t
		constexpr auto Duration = 0x528; // float
		constexpr auto bStationaryEndpoints = 0x52c; // bool
		constexpr auto bSplineHasBeenEdited = 0x52d; // bool
		constexpr auto bModifiedByConstructionScript = 0x52e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x52f; // bool
		constexpr auto bDrawDebug = 0x530; // bool
		constexpr auto bClosedLoop = 0x531; // bool
		constexpr auto bLoopPositionOverride = 0x532; // bool
		constexpr auto LoopPosition = 0x534; // float
		constexpr auto DefaultUpVector = 0x538; // FVector
	}

	namespace n_UChallengeManager { // : UObject
		constexpr auto Challenges = 0x28; // TArray<UChallenge*>
		constexpr auto Profile = 0x38; // UReadyOrNotProfile*
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UReadyOrNotSingleplayerProfile { // : UReadyOrNotProfile
		constexpr auto CompletionCount = 0x138; // int32_t
	}

	namespace n_UAnimationSharingStateProcessor { // : UObject
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_ATugOfWarButton { // : AInteractionActor
		constexpr auto OnlyTeamUse = 0x278; // ETeamType
		constexpr auto Mover = 0x280; // ATugOfWarMover*
		constexpr auto CurrentUser = 0x288; // APlayerCharacter*
	}

	namespace n_UFXSystemAsset { // : UObject
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_ABP_MenuController_C { // : AReadyOrNotPlayerController
		constexpr auto UberGraphFrame = 0x980; // FPointerToUberGraphFrame
		constexpr auto UI_PartyPanel = 0x988; // UObject*
		constexpr auto ReplaySystemWidget = 0x990; // UUserWidget*
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent { // : UBlueprintAsyncActionBase
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UInteractionsData { // : UDataAsset
		constexpr auto InteractionName = 0x30; // FName
		constexpr auto bDoNotApplyRelativeOffset = 0x38; // char : 1
		constexpr auto RelativePosOffsetToDriver = 0x3c; // FVector
		constexpr auto RelativeRotOffsetToDriver = 0x48; // FRotator
		constexpr auto CancelDurationLength = 0x54; // float
		constexpr auto bHolsterItemBeforePlaying = 0x58; // char : 1
		constexpr auto bUpdateSlaveTransform = 0x58; // char : 1
		constexpr auto bUseDriverFPMotion = 0x58; // char : 1
		constexpr auto DriverMontage = 0x60; // UAnimMontage*
		constexpr auto DriverMontage_FP = 0x68; // UAnimMontage*
		constexpr auto TriggerTolerance = 0x70; // float
		constexpr auto DriverBlendDuration = 0x74; // float
		constexpr auto bUseSlaveFPMotion = 0x78; // char : 1
		constexpr auto SlaveMontage = 0x80; // UAnimMontage*
		constexpr auto SlaveMontage_FP = 0x88; // UAnimMontage*
		constexpr auto bMatchDriverYaw = 0x90; // char : 1
		constexpr auto MatchedYawOffset = 0x94; // float
		constexpr auto bHasSharedItemAnim = 0x98; // char : 1
		constexpr auto SharedItemMontage = 0xa0; // UAnimMontage*
	}

	namespace n_AAmmoRefillBox { // : AActor
		constexpr auto InteractableComponent = 0x228; // UInteractableComponent*
		constexpr auto RefillCharacter = 0x238; // AReadyOrNotCharacter*
	}

	namespace n_UAREnvironmentCaptureProbe { // : UARTrackedGeometry
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_USynthComponentMonoWaveTable { // : USynthComponent
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x230; // USceneCaptureComponent2D*
	}

	namespace n_AVIPEscortGS { // : AReadyOrNotGameState
		constexpr auto HoldVIP_TimeRemaining = 0x6e0; // float
		constexpr auto bVIPArrested = 0x6e4; // bool
		constexpr auto bCanKillVIP = 0x6e5; // bool
		constexpr auto VIPCharacter = 0x6e8; // APlayerCharacter*
		constexpr auto VIPPlayer = 0x6f0; // APlayerController*
		constexpr auto VIPPlayerState = 0x6f8; // AReadyOrNotPlayerState*
		constexpr auto LastWinningTeam = 0x700; // ETeamType
		constexpr auto bVIPSelected = 0x701; // bool
		constexpr auto bVIPKilled = 0x702; // bool
		constexpr auto CurrentVIPTeam = 0x703; // ETeamType
		constexpr auto RecentArrester = 0x708; // AReadyOrNotCharacter*
		constexpr auto RecentFreer = 0x710; // AReadyOrNotCharacter*
		constexpr auto RecentVIPKiller = 0x718; // AReadyOrNotCharacter*
		constexpr auto VIPRescueText = 0x720; // FText
		constexpr auto VIPExecuteText = 0x738; // FText
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_ASequencerCharacterTemplate_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto ArmorMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto HeadMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto ItemMagMesh = 0x238; // UStaticMeshComponent*
		constexpr auto ItemMesh = 0x240; // USkeletalMeshComponent*
		constexpr auto BodyMesh = 0x248; // USkeletalMeshComponent*
		constexpr auto DefaultSceneRoot = 0x250; // USceneComponent*
		constexpr auto FaceROMReference = 0x258; // UPoseAsset*
		constexpr auto RoNPlayerState = 0x260; // AReadyOrNotPlayerState*
	}

	namespace n_UMaterialExpressionSamplePhysicsIntegerField { // : UMaterialExpression
		constexpr auto WorldPosition = 0x40; // FExpressionInput
		constexpr auto FieldTarget = 0x54; // EFieldIntegerType
	}

	namespace n_UAnimSharingInstance { // : UObject
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UCursor_Hand_C { // : UCursorWidget
		constexpr auto Mouse = 0x260; // UImage*
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UObituaryData { // : UDataAsset
		constexpr auto PointDeathMessages = 0x30; // TMap<FName, FObituaryForBone>
		constexpr auto DefaultBulletDeathText = 0x80; // TArray<FText>
	}

	namespace n_UMagicLeapMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x200; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x210; // bool
		constexpr auto MeshType = 0x211; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x218; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x220; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x224; // float
		constexpr auto Planarize = 0x228; // bool
		constexpr auto DisconnectedSectionArea = 0x22c; // float
		constexpr auto RequestNormals = 0x230; // bool
		constexpr auto RequestVertexConfidence = 0x231; // bool
		constexpr auto VertexColorMode = 0x232; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x238; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x248; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x258; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x268; // bool
		constexpr auto MRMesh = 0x270; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x278; // int32_t
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UConstantQNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto DepthPriorityGroup = 0x20c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x20d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x20e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x20f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x210; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x210; // char : 1
		constexpr auto bNeverDistanceCull = 0x210; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x210; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x211; // char : 1
		constexpr auto bMultiBodyOverlap = 0x211; // char : 1
		constexpr auto bTraceComplexOnMove = 0x211; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x211; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x211; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x211; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x211; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x211; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x212; // char : 1
		constexpr auto bVisibleInRayTracing = 0x212; // char : 1
		constexpr auto bRenderInMainPass = 0x212; // char : 1
		constexpr auto bRenderInDepthPass = 0x212; // char : 1
		constexpr auto bReceivesDecals = 0x212; // char : 1
		constexpr auto bOwnerNoSee = 0x212; // char : 1
		constexpr auto bOnlyOwnerSee = 0x212; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x212; // char : 1
		constexpr auto bUseAsOccluder = 0x213; // char : 1
		constexpr auto bSelectable = 0x213; // char : 1
		constexpr auto bForceMipStreaming = 0x213; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x213; // char : 1
		constexpr auto CastShadow = 0x213; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x213; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x213; // char : 1
		constexpr auto bCastDynamicShadow = 0x213; // char : 1
		constexpr auto bCastStaticShadow = 0x214; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x214; // char : 1
		constexpr auto bCastContactShadow = 0x214; // char : 1
		constexpr auto bSelfShadowOnly = 0x214; // char : 1
		constexpr auto bCastFarShadow = 0x214; // char : 1
		constexpr auto bCastInsetShadow = 0x214; // char : 1
		constexpr auto bCastCinematicShadow = 0x214; // char : 1
		constexpr auto bCastHiddenShadow = 0x214; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x215; // char : 1
		constexpr auto bLightAsIfStatic = 0x215; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x215; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x215; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x215; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x215; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x215; // char : 1
		constexpr auto bIgnoreRadialForce = 0x215; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x216; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x216; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x216; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x216; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x216; // char : 1
		constexpr auto bUseEditorCompositing = 0x216; // char : 1
		constexpr auto bRenderCustomDepth = 0x216; // char : 1
		constexpr auto bVisibleInSceneCaptureOnly = 0x216; // char : 1
		constexpr auto bHiddenInSceneCapture = 0x217; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x218; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x21a; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x21b; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x21c; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x220; // int32_t
		constexpr auto CustomPrimitiveData = 0x228; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x238; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x250; // int32_t
		constexpr auto TranslucencySortDistanceOffset = 0x254; // float
		constexpr auto VisibilityId = 0x258; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x260; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x270; // int8_t
		constexpr auto VirtualTextureCullMips = 0x271; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x272; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x273; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x278; // float
		constexpr auto BoundsScale = 0x284; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x420; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x421; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x422; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x423; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x424; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x426; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x427; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x428; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x429; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x42a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x42b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x42c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x42d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x448; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionStep { // : UMaterialExpression
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_AAIController { // : AController
		constexpr auto bStartAILogicOnPossess = 0x2d0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d0; // char : 1
		constexpr auto bLOSflag = 0x2d0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d0; // char : 1
		constexpr auto bAllowStrafe = 0x2d0; // char : 1
		constexpr auto bWantsPlayerState = 0x2d0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d0; // char : 1
		constexpr auto PathFollowingComponent = 0x2d8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2e8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x2f8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x300; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x308; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x310; // FMulticastInlineDelegate
	}

	namespace n_USynthComponentMoto { // : USynthComponent
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_ACollectedEvidenceActor { // : AActor
		constexpr auto CollectionBagMesh = 0x220; // UStaticMeshComponent*
		constexpr auto Bag_Spawn_Sound = 0x228; // UFMODEvent*
	}

	namespace n_UMaterialExpressionShadingModel { // : UMaterialExpression
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UCursor_ClosedHand_C { // : UCursorWidget
		constexpr auto Mouse = 0x260; // UImage*
	}

	namespace n_ULuminRuntimeSettings { // : UObject
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_UW_VotePopUp_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image = 0x268; // UImage*
		constexpr auto Image_186 = 0x270; // UImage*
		constexpr auto NoVote_Box = 0x278; // UHorizontalBox*
		constexpr auto NoVoteDivider_Box = 0x280; // USizeBox*
		constexpr auto NoVoteScore_Text = 0x288; // UTextBlock*
		constexpr auto RootBox = 0x290; // UVerticalBox*
		constexpr auto TextBlock_5 = 0x298; // UTextBlock*
		constexpr auto TextBlock_8 = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_10 = 0x2a8; // UTextBlock*
		constexpr auto TextBlock_12 = 0x2b0; // UTextBlock*
		constexpr auto TextBlock_170 = 0x2b8; // UTextBlock*
		constexpr auto VoteState = 0x2c0; // int32_t
		constexpr auto Current Vote Reason = 0x2c8; // FText
		constexpr auto VoteEnabled = 0x2e0; // bool
		constexpr auto Yes Votes = 0x2e4; // int32_t
		constexpr auto No Votes = 0x2e8; // int32_t
		constexpr auto Vote_No_Enabled = 0x2ec; // bool
		constexpr auto WidgetActive = 0x2ed; // bool
		constexpr auto CurrentVoteQuestion = 0x2f0; // FText
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UW_PermanentOverlay_C { // : UBaseWidget
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto PerformanceProfileTxt = 0x280; // UTextBlock*
		constexpr auto TopRightText = 0x288; // UTextBlock*
		constexpr auto W_FPSCounter = 0x290; // UW_FPSCounter_C*
		constexpr auto W_NetworkStatusErrors = 0x298; // UW_NetworkStatusErrors_C*
		constexpr auto W_VOIPTalker = 0x2a0; // UW_VOIPTalker_C*
		constexpr auto WhiteSquare = 0x2a8; // UImage*
		constexpr auto bInitialized = 0x2b0; // bool
		constexpr auto CachedPlayer = 0x2b8; // APlayerCharacter*
	}

	namespace n_UANIMBP_Head_Smudge_C { // : UReadyOrNotAnimInstance
		constexpr auto UberGraphFrame = 0x520; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x528; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_PoseBlendNode = 0x700; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_Slot = 0x7a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x7e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose = 0x8a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0xa00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root = 0xa28; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0xa58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0xad8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0xb00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0xb28; // FAnimNode_BlendListByBool
		constexpr auto BodyMeshRef = 0xbc8; // USkeletalMeshComponent*
		constexpr auto IsPlayerDead = 0xbd0; // bool
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xd20; // float
		constexpr auto ServerFlushLogInterval = 0xd24; // float
		constexpr auto GameInstance = 0xd28; // UGameInstance*
	}

	namespace n_UCameraShakeBase { // : UObject
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto RootShakePattern = 0x30; // UCameraShakePattern*
		constexpr auto CameraManager = 0x38; // APlayerCameraManager*
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_ARuntimeVirtualTextureVolume { // : AActor
		constexpr auto VirtualTextureComponent = 0x220; // URuntimeVirtualTextureComponent*
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UBlendRagdollAnimNotifyState { // : UAnimNotifyState
		constexpr auto TotalBlendDuration = 0x30; // float
		constexpr auto CurrentBlendAmount = 0x34; // float
		constexpr auto AngularVelocityStrength = 0x38; // float
		constexpr auto VelocityStrength = 0x3c; // float
		constexpr auto OrientationStrength = 0x40; // float
		constexpr auto PositionStrength = 0x44; // float
		constexpr auto MaxAngularForce = 0x48; // float
		constexpr auto MaxLinearForce = 0x4c; // float
		constexpr auto bKillCharacterAtEnd = 0x50; // bool
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_UOpenDoorQuestNode { // : UCheckDoorQuestNode
		constexpr auto bMustBeFullyOpen = 0x278; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UTexture { // : UStreamableRenderAsset
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto sRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UBasePlayerEffect { // : UReadyOrNotGameplayEffect
		constexpr auto PlayerCharacter = 0x58; // APlayerCharacter*
	}

	namespace n_UGizmoLineHandleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x470; // FVector
		constexpr auto HandleSize = 0x47c; // float
		constexpr auto Thickness = 0x480; // float
		constexpr auto Direction = 0x484; // FVector
		constexpr auto Length = 0x490; // float
		constexpr auto bImageScale = 0x494; // bool
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UEndpointSubmix { // : USoundSubmixBase
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_AOptiwand { // : ABaseItem
		constexpr auto Montage_StartOptiwandADS = 0x958; // UAnimMontage*
		constexpr auto Montage_EndOptiwandADS = 0x960; // UAnimMontage*
		constexpr auto CollisionTraceDistance = 0x968; // float
		constexpr auto FMODOptiwandMove = 0x970; // UFMODEvent*
		constexpr auto FMODOptiwandEnterView = 0x978; // UFMODEvent*
		constexpr auto FMODOptiwandExitView = 0x980; // UFMODEvent*
		constexpr auto MI_AIOutline = 0x988; // UMaterialInstance*
		constexpr auto SceneCapture2D = 0x998; // USceneCaptureComponent2D*
		constexpr auto CameraRenderTarget = 0x9a0; // UTextureRenderTarget2D*
		constexpr auto CameraActor = 0x9a8; // ACameraActor*
		constexpr auto LookAtPosition = 0x9b0; // FVector
		constexpr auto LookAtRotation = 0x9bc; // FRotator
		constexpr auto OptiwandCaptureRotation = 0x9c8; // FRotator
		constexpr auto bMirorring = 0x9d4; // char : 1
		constexpr auto bRepMirroring = 0x9d5; // bool
		constexpr auto bInUse = 0x9d6; // char : 1
		constexpr auto LastUsedDoor = 0x9d8; // ADoor*
		constexpr auto FMODOptiwandMoveAudioComp = 0x9e0; // UFMODAudioComponent*
		constexpr auto FMODOptiwandEnterViewComp = 0x9e8; // UFMODAudioComponent*
		constexpr auto FMODOptiwandExitViewComp = 0x9f0; // UFMODAudioComponent*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_AShotDetectionVolume { // : AActor
		constexpr auto Bounds = 0x220; // UBoxComponent*
	}

	namespace n_UAnimNotify_ForceFireWeapon { // : UAnimNotify
		constexpr auto Chance = 0x38; // float
		constexpr auto bNoEnemyRequired = 0x3c; // bool
	}

	namespace n_USuspectCombatActivity { // : UBaseCombatActivity
		constexpr auto GroupLeader = 0x268; // ACyberneticCharacter*
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x258; // float
		constexpr auto Priority = 0x25c; // int32_t
		constexpr auto FluidFriction = 0x260; // float
		constexpr auto bWaterVolume = 0x264; // char : 1
		constexpr auto bPhysicsOnContact = 0x264; // char : 1
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0xc0; // bool
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UDoorInteractionActivity { // : UBaseActivity
		constexpr auto Door = 0x1b0; // ADoor*
		constexpr auto CommandLocation = 0x1b8; // FVector
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UMagicLeapTouchpadGesturesComponent { // : UActorComponent
		constexpr auto OnTouchpadGestureStart = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UMessageDisplayBox { // : UUserWidget
		constexpr auto MessageTxt = 0x260; // FString
		constexpr auto ButtonTxt = 0x270; // FString
		constexpr auto bShouldQuitOnButtonPress = 0x280; // bool
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x230; // UPointLightComponent*
	}

	namespace n_UDynamicEntryBox { // : UDynamicEntryBoxBase
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UVehicleAnimInstance { // : UAnimInstance
		constexpr auto WheeledVehicleMovementComponent = 0xa50; // UWheeledVehicleMovementComponent*
	}

	namespace n_UActivityManager { // : UObject
		constexpr auto GlobalStartDelay = 0x28; // float
	}

	namespace n_UW_ControlsResetBinding_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Disabled = 0x268; // UImage*
		constexpr auto Button_Dn = 0x270; // UImage*
		constexpr auto Button_Hi = 0x278; // UImage*
		constexpr auto Button_Up = 0x280; // UImage*
		constexpr auto ResetButton = 0x288; // UButton*
		constexpr auto BindName = 0x290; // FName
		constexpr auto OnResetClicked = 0x298; // FMulticastInlineDelegate
		constexpr auto OnResetHovered = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnResetUnhovered = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnResetPressed = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnResetReleased = 0x2d8; // FMulticastInlineDelegate
		constexpr auto bAxis = 0x2e8; // bool
		constexpr auto DescriptionText = 0x2f0; // UTextBlock*
		constexpr auto Description = 0x2f8; // FText
		constexpr auto BindingButtons = 0x310; // TArray<UW_ControlsBind_C*>
		constexpr auto ResetBindingClickedSound = 0x320; // UFMODEvent*
		constexpr auto ResetBindingHoveredSound = 0x328; // UFMODEvent*
		constexpr auto AxisMappings = 0x330; // TArray<FAxisMappingStruct>
		constexpr auto ActionMappings = 0x340; // TArray<FActionMappingStruct>
		constexpr auto TempRemoveAxisMappings = 0x350; // TArray<FAxisMappingStruct>
		constexpr auto TempRemoveActionMappings = 0x360; // TArray<FActionMappingStruct>
	}

	namespace n_USubmixEffectTapDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_AGameMode { // : AGameModeBase
		constexpr auto MatchState = 0x2c0; // FName
		constexpr auto bDelayedStart = 0x2c8; // char : 1
		constexpr auto NumSpectators = 0x2cc; // int32_t
		constexpr auto NumPlayers = 0x2d0; // int32_t
		constexpr auto NumBots = 0x2d4; // int32_t
		constexpr auto MinRespawnDelay = 0x2d8; // float
		constexpr auto NumTravellingPlayers = 0x2dc; // int32_t
		constexpr auto EngineMessageClass = 0x2e0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2e8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x2f8; // float
		constexpr auto MaxInactivePlayers = 0x2fc; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x300; // bool
	}

	namespace n_UNiagaraDataInterfaceColorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UMovieScenePrimitiveMaterialSection { // : UMovieSceneSection
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_ANiagaraActor { // : AActor
		constexpr auto NiagaraComponent = 0x220; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x228; // char : 1
	}

	namespace n_UARTrackedObject { // : UARTrackedGeometry
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_AThrownChemlight { // : AThrownItem
		constexpr auto LightSource = 0x458; // UPointLightComponent*
		constexpr auto FmodSteppedOnComponent = 0x460; // UFMODAudioComponent*
		constexpr auto ChemlightColor = 0x468; // FLinearColor
		constexpr auto LightSourcePos = 0x478; // FVector
		constexpr auto EmmisiveBrightness = 0x488; // float
		constexpr auto ChemlightMaterial = 0x490; // UMaterialInstance*
		constexpr auto Chemlight_ActivatedInst = 0x498; // UMaterialInstanceDynamic*
		constexpr auto InitialGlowSpeed = 0x4a4; // float
		constexpr auto GlowStartDieTime = 0x4a8; // float
		constexpr auto GlowLightDieSpeed = 0x4ac; // float
		constexpr auto GlowLightTotalLife = 0x4b0; // float
		constexpr auto CurrentLifeTime = 0x4b4; // float
		constexpr auto DecalMat = 0x4b8; // UMaterialInstance*
	}

	namespace n_USourceEffectMidSideSpreaderPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_ATOCManager { // : AInfo
		constexpr auto RootComp = 0x220; // USceneComponent*
		constexpr auto TocEvent = 0x228; // UFMODEvent*
		constexpr auto QueuedTOCData = 0x230; // TArray<UTOCData*>
		constexpr auto CurrentTOCData = 0x240; // UTOCData*
	}

	namespace n_UMaterialExpressionSpriteTextureSampler { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UCameraShakeSourceComponent { // : USceneComponent
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater { // : UMaterialExpression
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UMyPluginObject { // : UObject
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_UFMODSettings { // : UObject
		constexpr auto bLoadAllBanks = 0x28; // bool
		constexpr auto bLoadAllSampleData = 0x29; // bool
		constexpr auto bEnableLiveUpdate = 0x2a; // bool
		constexpr auto bEnableEditorLiveUpdate = 0x2b; // bool
		constexpr auto BankOutputDirectory = 0x30; // FDirectoryPath
		constexpr auto OutputFormat = 0x40; // EFMODSpeakerMode
		constexpr auto Locales = 0x48; // TArray<FFMODProjectLocale>
		constexpr auto bVol0Virtual = 0x58; // bool
		constexpr auto Vol0VirtualLevel = 0x5c; // float
		constexpr auto SampleRate = 0x60; // int32_t
		constexpr auto bMatchHardwareSampleRate = 0x64; // bool
		constexpr auto RealChannelCount = 0x68; // int32_t
		constexpr auto TotalChannelCount = 0x6c; // int32_t
		constexpr auto DSPBufferLength = 0x70; // int32_t
		constexpr auto DSPBufferCount = 0x74; // int32_t
		constexpr auto FileBufferSize = 0x78; // int32_t
		constexpr auto StudioUpdatePeriod = 0x7c; // int32_t
		constexpr auto InitialOutputDriverName = 0x80; // FString
		constexpr auto bLockAllBuses = 0x90; // bool
		constexpr auto MemoryPoolSizes = 0x94; // FCustomPoolSizes
		constexpr auto LiveUpdatePort = 0xa8; // int32_t
		constexpr auto EditorLiveUpdatePort = 0xac; // int32_t
		constexpr auto ReloadBanksDelay = 0xb0; // int32_t
		constexpr auto bEnableMemoryTracking = 0xb4; // bool
		constexpr auto PluginFiles = 0xb8; // TArray<FString>
		constexpr auto ContentBrowserPrefix = 0xc8; // FString
		constexpr auto ForcePlatformName = 0xd8; // FString
		constexpr auto MasterBankName = 0xe8; // FString
		constexpr auto SkipLoadBankName = 0xf8; // FString
		constexpr auto StudioBankKey = 0x108; // FString
		constexpr auto WavWriterPath = 0x118; // FString
		constexpr auto LoggingLevel = 0x128; // EFMODLogging
		constexpr auto OcclusionParameter = 0x130; // FString
		constexpr auto AmbientVolumeParameter = 0x140; // FString
		constexpr auto AmbientLPFParameter = 0x150; // FString
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x468; // FVector
		constexpr auto LineThickness = 0x474; // float
	}

	namespace n_APolicePresenceTestActor { // : AActor
		constexpr auto Scene = 0x220; // USceneComponent*
		constexpr auto Police = 0x228; // UBillboardComponent*
		constexpr auto Suspect = 0x230; // UBillboardComponent*
	}

	namespace n_UAsyncActionLoadPrimaryAssetList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_AFirefightGS { // : AReadyOrNotGameState
		constexpr auto FreeTextLocalized = 0x6e0; // FText
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UW_Briefing_Objectives_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ChallengesList = 0x268; // UW_Briefing_Objectives_List_C*
		constexpr auto ObjectivesList = 0x270; // UW_Briefing_Objectives_List_C*
	}

	namespace n_UFMODEventControlTrack { // : UMovieSceneNameableTrack
		constexpr auto ControlSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_ARescueCivilianByTag { // : AObjective
		constexpr auto CivilianTag = 0x2a8; // FName
		constexpr auto bAllowIncapacitation = 0x2b0; // bool
	}

	namespace n_AFootstepFoleyVolume { // : AActor
		constexpr auto SoundLocation = 0x220; // USceneComponent*
		constexpr auto Bounds = 0x228; // UFootstepFoleyComponent*
	}

	namespace n_UWeaponWheelScript { // : UBaseRadialMenuScript
		constexpr auto ItemName = 0x68; // FText
		constexpr auto ItemCategory = 0x80; // FText
		constexpr auto WeaponWheelOwner = 0x98; // UWeaponWheelWidget*
		constexpr auto PlayerCharacter = 0xa0; // APlayerCharacter*
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x220; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x228; // FGuid
		constexpr auto LandscapeSectionOffset = 0x238; // FIntPoint
		constexpr auto MaxLODLevel = 0x240; // int32_t
		constexpr auto LODDistanceFactor = 0x244; // float
		constexpr auto LODFalloff = 0x248; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x24c; // float
		constexpr auto LOD0ScreenSize = 0x250; // float
		constexpr auto LOD0DistributionSetting = 0x254; // float
		constexpr auto LODDistributionSetting = 0x258; // float
		constexpr auto TessellationComponentScreenSize = 0x25c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x260; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x264; // float
		constexpr auto OccluderGeometryLOD = 0x268; // int32_t
		constexpr auto StaticLightingLOD = 0x26c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x270; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x278; // float
		constexpr auto LandscapeMaterial = 0x280; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2a8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c0; // bool
		constexpr auto MeshHolesMaxLod = 0x2c1; // char
		constexpr auto RuntimeVirtualTextures = 0x2c8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2d8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2dc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2e4; // float
		constexpr auto PositiveZBoundsExtension = 0x2e8; // float
		constexpr auto LandscapeComponents = 0x2f0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x300; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x310; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x384; // bool
		constexpr auto StaticLightingResolution = 0x388; // float
		constexpr auto CastShadow = 0x38c; // char : 1
		constexpr auto bCastDynamicShadow = 0x38c; // char : 1
		constexpr auto bCastStaticShadow = 0x38c; // char : 1
		constexpr auto bCastFarShadow = 0x390; // char : 1
		constexpr auto bCastHiddenShadow = 0x394; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x398; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x39c; // char : 1
		constexpr auto LightingChannels = 0x39d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a0; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a0; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3a4; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x530; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x530; // char : 1
		constexpr auto ComponentSizeQuads = 0x534; // int32_t
		constexpr auto SubsectionSizeQuads = 0x538; // int32_t
		constexpr auto NumSubsections = 0x53c; // int32_t
		constexpr auto bUsedForNavigation = 0x540; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x540; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x544; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x545; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x546; // bool
		constexpr auto bHasLayersContent = 0x547; // bool
		constexpr auto WeightmapUsageMap = 0x548; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UDatasmithCineCameraActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UPreMissionPlanning { // : UBaseWidget
		constexpr auto bIsWeaponCustomization = 0x278; // bool
		constexpr auto CustomizeItemClass = 0x280; // ABaseItem*
		constexpr auto PreMissionStreamedLevel = 0x288; // ULevelStreaming*
		constexpr auto LoadoutMusic = 0x290; // UFMODEvent*
		constexpr auto PreviewPlayerState = 0x2a8; // AReadyOrNotPlayerState*
		constexpr auto EquippingSwatMember = 0x2b2; // EEquippingSwat
		constexpr auto LastSavedLoadout = 0x2b8; // TMap<EEquippingSwat, FSavedLoadout>
		constexpr auto bLoadedLoadout = 0x360; // bool
		constexpr auto ActiveLoadout = 0x368; // FSavedLoadout
		constexpr auto WeaponToWeaponPresetsMap = 0x490; // TMap<ABaseItem*, FSavedWeaponPreset>
		constexpr auto WeaponToAttachmentsMap = 0x4e0; // TMap<ABaseItem*, FSavedWeaponAttachmentData>
		constexpr auto WeaponClassToDefaultFireModeMap = 0x530; // TMap<ABaseWeapon*, EFireMode>
		constexpr auto OnRequestRefresh = 0x590; // FMulticastInlineDelegate
		constexpr auto RedTeamClass = 0x5a8; // TSoftClassPtr<UObject>
		constexpr auto BlueTeamClass = 0x5d0; // TSoftClassPtr<UObject>
		constexpr auto VIPClass = 0x5f8; // TSoftClassPtr<UObject>
		constexpr auto PlayerStatePreviewMap = 0x628; // TMap<AReadyOrNotCharacter*, AReadyOrNotPlayerState*>
		constexpr auto WorkBenchItemPtrMap = 0x750; // TMap<FName, ABaseItem*>
		constexpr auto LastSetItemType = 0x7a0; // EItemType
		constexpr auto LastSetItemClass = 0x7a1; // EItemClass
		constexpr auto LastSetItemObjectClass = 0x7a8; // ABaseItem*
		constexpr auto bCanUpdateWithUI = 0x7b1; // bool
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UMirrorZoneComponent { // : UBoxComponent
		constexpr auto bMustBeCrouching = 0x478; // bool
		constexpr auto ButtonPromptText = 0x480; // FText
	}

	namespace n_UAnimNotify_PlayMontageNotify { // : UAnimNotify
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UEngageTargetActivity { // : UFocusTargetActivity
		constexpr auto AvailableNonLethalItems = 0x210; // TArray<ABaseItem*>
		constexpr auto NonLethalItemChosen = 0x220; // ABaseItem*
	}

	namespace n_UAnimNotify_ItemSwitchSocket { // : UAnimNotify
		constexpr auto DesiredItemSocket = 0x38; // EItemSocket
	}

	namespace n_APepperballGun { // : ABaseMagazineWeapon
		constexpr auto ShootTrailComponent = 0x1260; // UParticleSystemComponent*
		constexpr auto ParticleShootTrail = 0x1268; // UParticleSystem*
		constexpr auto HeadshotsUntilAbuse = 0x1270; // int32_t
		constexpr auto CurrentHeadshotCounter = 0x1274; // int32_t
		constexpr auto StunShotsUntilAbuse = 0x1278; // int32_t
		constexpr auto CurrentStunShotCounter = 0x127c; // int32_t
		constexpr auto MaxBallsInHopper = 0x1280; // int32_t
		constexpr auto BallsInHopper = 0x1284; // int32_t
	}

	namespace n_ATelescopicLadder { // : ABaseDeployableGear
		constexpr auto LadderVerticalIconPoint = 0x958; // USceneComponent*
		constexpr auto LadderHorizontalIconPoint = 0x960; // USceneComponent*
		constexpr auto LadderBottomMountPoint = 0x968; // USceneComponent*
		constexpr auto LadderTopMountPoint = 0x970; // USceneComponent*
		constexpr auto LadderSnapZoneBP = 0x978; // ALadderSnapZone*
		constexpr auto bFreezeFrame = 0x980; // bool
		constexpr auto MaxRollDegreesBeforeUnwalkable = 0x984; // float
		constexpr auto FreezeTransform = 0xa20; // FTransform
		constexpr auto bShowGhostLadder = 0xa7c; // bool
		constexpr auto bShowCollapsedLadder = 0xa7d; // bool
		constexpr auto CollapsedLadderAnim = 0xa80; // UAnimSequence*
		constexpr auto LastTransform = 0xa90; // FTransform
		constexpr auto GhostLadderActor = 0xac0; // ASkeletalMeshActor*
		constexpr auto GhostLadderMaterial = 0xac8; // UMaterial*
		constexpr auto DroppedPhysics = 0xad0; // UPhysicsAsset*
		constexpr auto PlacedPhysics = 0xad8; // UPhysicsAsset*
		constexpr auto PlacementSoundEvent = 0xae0; // UFMODEvent*
		constexpr auto PickupSoundEvent = 0xae8; // UFMODEvent*
		constexpr auto CollideSoundEvent = 0xaf0; // UFMODEvent*
		constexpr auto bDeployed = 0xaf8; // bool
		constexpr auto bDeployedHorizontal = 0xaf9; // bool
		constexpr auto bMounted = 0xafa; // bool
		constexpr auto RetractedRungCount = 0xafc; // float
		constexpr auto CurrentSnapZone = 0xb00; // ALadderSnapZone*
		constexpr auto bWallFound = 0xb08; // bool
	}

	namespace n_UMonoWaveTableSynthPreset { // : UObject
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UBulletDamageType { // : UDamageType
		constexpr auto HitVisuals = 0x40; // UUserWidget*
		constexpr auto HitShake = 0x48; // UMatineeCameraShake*
		constexpr auto bArmorPiercing = 0x50; // bool
		constexpr auto bNonLethal = 0x51; // bool
		constexpr auto AggressionChangeInAI = 0x54; // float
		constexpr auto HeadDamageMultiplier = 0x58; // float
		constexpr auto UpperBodyDamageMultiplier = 0x5c; // float
		constexpr auto LowerBodyDamageMultiplier = 0x60; // float
		constexpr auto ArmDamageMultiplier = 0x64; // float
		constexpr auto LegDamageMultiplier = 0x68; // float
		constexpr auto FootDamageMultiplier = 0x6c; // float
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_AVolumetricLightmapDensityVolume { // : AVolume
		constexpr auto AllowedMipLevelRange = 0x258; // FInt32Interval
	}

	namespace n_UNiagaraScript { // : UNiagaraScriptBase
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageId = 0x2c; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1d8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x2c8; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2d8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UCancelFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ATugOfWarZone { // : AActor
		constexpr auto bZoneDisabled = 0x220; // bool
		constexpr auto Mover = 0x228; // ATugOfWarMover*
		constexpr auto Bounds = 0x230; // UBoxComponent*
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x228; // float
		constexpr auto BeaconConnectionTimeout = 0x22c; // float
		constexpr auto NetDriver = 0x230; // UNetDriver*
	}

	namespace n_AFirefightGM { // : AReadyOrNotGameMode_PVP
		constexpr auto bSuddenDeath = 0x718; // bool
		constexpr auto TeamKilledSound_SERT_RED = 0x720; // UFMODEvent*
		constexpr auto TeamKilledSound_SERT_BLUE = 0x728; // UFMODEvent*
		constexpr auto MatchLoopMusic = 0x730; // UFMODEvent*
		constexpr auto MatchStartMusic = 0x738; // UFMODEvent*
		constexpr auto MatchEndMusic = 0x740; // UFMODEvent*
		constexpr auto RandomLoadouts = 0x748; // TArray<FSavedLoadout>
		constexpr auto GeneratedLoadouts = 0x758; // TArray<FSavedLoadout>
		constexpr auto NumRedSpawned = 0x768; // int32_t
		constexpr auto NumBlueSpawned = 0x76c; // int32_t
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UWheeledVehicleMovementComponent4W { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_AStackUpActor { // : AActor
		constexpr auto DefaultScene = 0x220; // USceneComponent*
		constexpr auto StackUpPosition = 0x228; // ESquadPosition
		constexpr auto BreachLookAtPoint = 0x230; // AThreatAwarenessActor*
		constexpr auto StackupLookAtPoint = 0x238; // AThreatAwarenessActor*
		constexpr auto LinkedDoor = 0x240; // ADoor*
		constexpr auto OppositeStackUpActor = 0x248; // AStackUpActor*
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_APaperFlipbookActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperFlipbookComponent*
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x450; // UModel*
		constexpr auto BrushBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UAssetExportTask { // : UObject
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_USlider { // : UWidget
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_ABP_BaseController_C { // : AReadyOrNotPlayerController
		constexpr auto UberGraphFrame = 0x980; // FPointerToUberGraphFrame
		constexpr auto EscapeMenuRef = 0x988; // UW_PauseMenu_C*
		constexpr auto EscapeMenuOpen = 0x990; // bool
		constexpr auto CurrentFreeDrawColor = 0x991; // EFreeDrawColor
		constexpr auto MouseButtonDown = 0x992; // bool
		constexpr auto Slomo = 0x994; // float
		constexpr auto LastPawn = 0x998; // APawn*
		constexpr auto bFreeCamera = 0x9a0; // bool
		constexpr auto ReplaySystemWidget = 0x9a8; // UUserWidget*
		constexpr auto PawnBeforePremissionPlanning = 0x9b0; // APawn*
		constexpr auto Pop-UpWidget = 0x9b8; // UW_COOPScorePopUp_C*
		constexpr auto VoteWidget = 0x9c0; // UW_VotePopUp_C*
		constexpr auto TabWidget = 0x9c8; // UUserWidget*
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGetFriendsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithLandscapeTemplate { // : UDatasmithObjectTemplate
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_ABaseHostage_C { // : ABasePlayer_C
		constexpr auto UberGraphFrame = 0x2250; // FPointerToUberGraphFrame
		constexpr auto FollowActor = 0x2258; // APawn*
		constexpr auto CanFollowTeams = 0x2260; // TArray<ETeamType>
		constexpr auto bMoving = 0x2270; // bool
		constexpr auto DefaultRunSpeed = 0x2274; // float
		constexpr auto Rescued = 0x2278; // bool
		constexpr auto bStartSurrendered = 0x2279; // bool
	}

	namespace n_ULoudnessNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_URoundEndWidget_PVP { // : UBaseWidget
		constexpr auto Anim_FadeIn = 0x278; // UWidgetAnimation*
	}

	namespace n_UBallistic_Widget_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto bBreathIn = 0x268; // bool
	}

	namespace n_UReadyOrNotCharacterAnimData { // : UDataAsset
		constexpr auto Surrender = 0x30; // TArray<FCharacterTPAnim>
		constexpr auto FakeSurrender = 0x40; // TArray<FCharacterTPAnim>
		constexpr auto Spooked_Front = 0x50; // TArray<FCharacterTPAnim>
		constexpr auto Spooked_Right = 0x60; // TArray<FCharacterTPAnim>
		constexpr auto Spooked_Left = 0x70; // TArray<FCharacterTPAnim>
		constexpr auto Spooked_Back = 0x80; // TArray<FCharacterTPAnim>
		constexpr auto Arrested = 0x90; // TArray<FCharacterTPAnim>
		constexpr auto Decision = 0xa0; // TArray<FCharacterTPAnim>
		constexpr auto StandRelaxedFidget = 0xb0; // TArray<FCharacterTPAnim>
		constexpr auto StandAlertFidget = 0xc0; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_Head = 0xd0; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_UpperBody = 0xe0; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_LowerBody = 0xf0; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_LeftArm = 0x100; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_RightArm = 0x110; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_LeftLeg = 0x120; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_RightLeg = 0x130; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_LeftFoot = 0x140; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_RightFoot = 0x150; // TArray<FCharacterTPAnim>
		constexpr auto HitReaction_DropWeapon = 0x160; // TArray<FCharacterTPAnim>
		constexpr auto FireWeapon = 0x170; // FCharacterTPAnim
		constexpr auto DrawWeapon = 0x178; // FCharacterTPAnim
		constexpr auto HolsterWeapon = 0x180; // FCharacterTPAnim
		constexpr auto ReloadWeapon = 0x188; // FCharacterTPAnim
		constexpr auto Death_Head_Front = 0x190; // TArray<FCharacterTPAnim>
		constexpr auto Death_Head_Back = 0x1a0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Arm_Left_Front = 0x1b0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Arm_Left_Back = 0x1c0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Arm_Right_Front = 0x1d0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Arm_Right_Back = 0x1e0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Leg_Left_Front = 0x1f0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Leg_Left_Back = 0x200; // TArray<FCharacterTPAnim>
		constexpr auto Death_Leg_Right_Front = 0x210; // TArray<FCharacterTPAnim>
		constexpr auto Death_Leg_Right_Back = 0x220; // TArray<FCharacterTPAnim>
		constexpr auto Death_Front = 0x230; // TArray<FCharacterTPAnim>
		constexpr auto Death_Back = 0x240; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Head = 0x250; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Chest = 0x260; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Stomach = 0x270; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Left_Arm = 0x280; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Right_Arm = 0x290; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Left_Leg = 0x2a0; // TArray<FCharacterTPAnim>
		constexpr auto Death_Bleedout_Right_Leg = 0x2b0; // TArray<FCharacterTPAnim>
		constexpr auto Flashbanged = 0x2c0; // TArray<FCharacterTPAnim>
		constexpr auto Stingballed = 0x2d0; // TArray<FCharacterTPAnim>
		constexpr auto Gassed = 0x2e0; // TArray<FCharacterTPAnim>
		constexpr auto Sprayed = 0x2f0; // TArray<FCharacterTPAnim>
		constexpr auto Tasered = 0x300; // TArray<FCharacterTPAnim>
		constexpr auto Meleed = 0x310; // TArray<FCharacterTPAnim>
		constexpr auto OpenDoor = 0x320; // FCharacterTPAnim
		constexpr auto CloseDoor = 0x328; // FCharacterTPAnim
		constexpr auto Flinches = 0x330; // FCharacterTPAnim
		constexpr auto Calm_Turn90Left = 0x338; // UAnimSequence*
		constexpr auto Calm_Turn90Right = 0x340; // UAnimSequence*
		constexpr auto Calm_Turn180Left = 0x348; // UAnimSequence*
		constexpr auto Calm_Turn180Right = 0x350; // UAnimSequence*
		constexpr auto Alert_Turn90Left = 0x358; // UAnimSequence*
		constexpr auto Alert_Turn90Right = 0x360; // UAnimSequence*
		constexpr auto Alert_Turn180Left = 0x368; // UAnimSequence*
		constexpr auto Alert_Turn180Right = 0x370; // UAnimSequence*
		constexpr auto AllAnimsList = 0x378; // TArray<FCharacterTPAnim>
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UW_MainMenu_V2_C { // : UMainMenu
		constexpr auto UberGraphFrame = 0x378; // FPointerToUberGraphFrame
		constexpr auto FadeIn = 0x380; // UWidgetAnimation*
		constexpr auto AdminPasswordBox = 0x388; // UBorder*
		constexpr auto btn_ConfirmAdminPassword = 0x390; // UW_Button_C*
		constexpr auto BtnFindSession = 0x398; // UHorizontalBox*
		constexpr auto BtnPlayOptions = 0x3a0; // UHorizontalBox*
		constexpr auto ButtonDescription = 0x3a8; // UTextBlock*
		constexpr auto EditableText_1 = 0x3b0; // UEditableText*
		constexpr auto EscapeMenu = 0x3b8; // USizeBox*
		constexpr auto FriendsList = 0x3c0; // UFriendsList_C*
		constexpr auto Image_112 = 0x3c8; // UImage*
		constexpr auto SessionSearchText = 0x3d0; // UTextBlock*
		constexpr auto txt_Version = 0x3d8; // UW_Text_C*
	}

	namespace n_USlomoBarWidget { // : UBaseWidget
		constexpr auto OnProgressBarStarted = 0x278; // FMulticastInlineDelegate
		constexpr auto OnProgressBarFinished = 0x288; // FMulticastInlineDelegate
		constexpr auto AnimIn = 0x298; // UWidgetAnimation*
		constexpr auto AnimOut = 0x2a0; // UWidgetAnimation*
		constexpr auto ProgressBar = 0x2a8; // UWidgetAnimation*
		constexpr auto Duration = 0x2b0; // float
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x220; // UDecalComponent*
	}

	namespace n_UAnimSequenceLevelSequenceLink { // : UAssetUserData
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_AReportReportableByTag { // : AObjective
		constexpr auto ReportTag = 0x278; // FName
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
		constexpr auto RetargetSourceAssetReferencePose = 0x120; // TArray<FTransform>
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto RetargetSourceAssetReferencePose = 0x170; // TArray<FTransform>
		constexpr auto Interpolation = 0x180; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x181; // bool
		constexpr auto RootMotionRootLock = 0x182; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x183; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x184; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x185; // bool
		constexpr auto AuthoredSyncMarkers = 0x188; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1b0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendoutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UANIMBP_AK102_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x308; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x410; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x430; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot = 0x450; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer = 0x498; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x518; // FAnimNode_ModifyBone
		constexpr auto Mag01Alpha = 0x620; // float
		constexpr auto bIsSemi = 0x624; // bool
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_USoundfieldEffectBase { // : UObject
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UW_ItemSelectionMenu_C { // : UBaseWidget
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto SlideIn = 0x280; // UWidgetAnimation*
		constexpr auto FadeOut = 0x288; // UWidgetAnimation*
		constexpr auto DebugInfoContainer_Menu = 0x290; // UW_DebugInfoContainer_C*
		constexpr auto ItemGroupList = 0x298; // UW_ItemSelection_ItemGroupList_C*
		constexpr auto MouseWheelDelta = 0x2a0; // float
		constexpr auto OpeningMenuKey = 0x2a8; // FKey
		constexpr auto PreviousMenuTriggerKey = 0x2c0; // FKey
		constexpr auto MenuOpenKeyTriggers = 0x2d8; // TArray<FKey>
		constexpr auto ItemGroups = 0x2e8; // TArray<FItemSelectionPanelSetting_ItemGroup>
		constexpr auto bInitialized = 0x2f8; // bool
		constexpr auto SelectedColumn = 0x2fc; // int32_t
		constexpr auto bFadedOut = 0x300; // bool
		constexpr auto PlayerCharacter = 0x308; // APlayerCharacter*
		constexpr auto bIsActive = 0x310; // bool
		constexpr auto TH_FadeOut = 0x318; // FTimerHandle
		constexpr auto QueuedSelections = 0x320; // TMap<FKey, int32_t>
		constexpr auto OpenMenuTriggerCount = 0x370; // int32_t
		constexpr auto TH_FadeOutSelected = 0x378; // FTimerHandle
		constexpr auto OnMenuOpened = 0x380; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraEffectType { // : UObject
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
		constexpr auto PerformanceBaselineController = 0x70; // UNiagaraBaselineController*
		constexpr auto PerfBaselineStats = 0x78; // FNiagaraPerfBaselineStats
		constexpr auto PerfBaselineVersion = 0x88; // FGuid
	}

	namespace n_ULogoutUserCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UARPlaneComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_AWheeledVehicle { // : APawn
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x288; // UWheeledVehicleMovementComponent*
	}

	namespace n_AStaticReportable { // : AActor
		constexpr auto DesiredTocReport = 0x228; // FString
		constexpr auto bReportedToToc = 0x238; // bool
	}

	namespace n_UMaterialExpressionHairAttributes { // : UMaterialExpression
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_AActorSpawnPoint { // : AActor
		constexpr auto SceneComponent = 0x220; // USceneComponent*
		constexpr auto BillboardComponent = 0x228; // UBillboardComponent*
		constexpr auto bHasVisited = 0x230; // char : 1
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x4e0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4f0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4f8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x508; // int32_t
		constexpr auto InstanceStartCullDistance = 0x50c; // int32_t
		constexpr auto InstanceEndCullDistance = 0x510; // int32_t
		constexpr auto InstanceReorderTable = 0x518; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x570; // int32_t
		constexpr auto CachedMappings = 0x578; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_ACableActor { // : AActor
		constexpr auto CableComponent = 0x220; // UCableComponent*
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UNiagaraDebugHUDSettings { // : UObject
		constexpr auto Data = 0x48; // FNiagaraDebugHUDSettingsData
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_AGS_FreeMode_C { // : AReadyOrNotGameState
		constexpr auto DefaultSceneRoot = 0x6e0; // USceneComponent*
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UW_TutorialOverviewText_C { // : UTutorialTextPrompt_Widget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_105 = 0x268; // UButton*
		constexpr auto Image_287 = 0x270; // UImage*
		constexpr auto MessageContentBox = 0x278; // UScrollBox*
		constexpr auto TextContent = 0x280; // UTextBlock*
		constexpr auto TextTitle = 0x288; // UTextBlock*
		constexpr auto Title_Text = 0x290; // FText
		constexpr auto Content_Text = 0x2a8; // TArray<FText>
		constexpr auto MessageFontInfo = 0x2b8; // FSlateFontInfo
	}

	namespace n_AArrestAndRescueGS { // : AReadyOrNotGameState
		constexpr auto BlueRespawnWaves = 0x6e0; // int32_t
		constexpr auto RedRespawnWaves = 0x6e4; // int32_t
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_AFieldSystemActor { // : AActor
		constexpr auto FieldSystemComponent = 0x220; // UFieldSystemComponent*
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x450; // UVectorField*
		constexpr auto Intensity = 0x458; // float
		constexpr auto Tightness = 0x45c; // float
		constexpr auto bPreviewVectorField = 0x460; // char : 1
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UW_Text_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_163 = 0x268; // UBorder*
		constexpr auto LetterSpacingWrapBox = 0x270; // UWrapBox*
		constexpr auto RootCanvas = 0x278; // UCanvasPanel*
		constexpr auto SB_Text = 0x280; // USizeBox*
		constexpr auto txt_Debug = 0x288; // UTextBlock*
		constexpr auto txt_Debug_3 = 0x290; // UTextBlock*
		constexpr auto txt_Text = 0x298; // UTextBlock*
		constexpr auto Text = 0x2a0; // FText
		constexpr auto Color = 0x2b8; // FLinearColor
		constexpr auto Font = 0x2c8; // FSlateFontInfo
		constexpr auto ShadowOffset = 0x320; // FVector2D
		constexpr auto ShadowColor = 0x328; // FLinearColor
		constexpr auto AllCaps = 0x338; // bool
		constexpr auto AutoWrapText = 0x339; // bool
		constexpr auto Debug = 0x33a; // bool
		constexpr auto SubString = 0x33b; // bool
		constexpr auto SingleWord = 0x33c; // bool
		constexpr auto Multi-Line = 0x33d; // bool
		constexpr auto LetterSpacing = 0x340; // int32_t
		constexpr auto Truncate = 0x344; // bool
		constexpr auto CharacterLimit = 0x348; // int32_t
		constexpr auto TruncationCharacters = 0x350; // FString
		constexpr auto CalculatedSpacing = 0x360; // float
		constexpr auto Justification = 0x364; // ETextJustify
		constexpr auto CalculatedWidth = 0x368; // float
		constexpr auto CurrentLetterSpacing = 0x36c; // int32_t
		constexpr auto CharacterCount = 0x370; // int32_t
		constexpr auto CharacterArray = 0x378; // TArray<FString>
		constexpr auto SpacedCharacterElements = 0x388; // TMap<int32_t, UW_Text_C*>
		constexpr auto WordElements = 0x3d8; // TMap<UWrapBoxSlot*, UW_Text_C*>
		constexpr auto WordCount = 0x428; // int32_t
		constexpr auto HB_Substring = 0x430; // UHorizontalBox*
		constexpr auto HB_SingleLine = 0x438; // UHorizontalBox*
		constexpr auto CurrentText = 0x440; // FText
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_USourceEffectBitCrusherPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_USkeletalMesh { // : UStreamableRenderAsset
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto bSupportRayTracing = 0x188; // char : 1
		constexpr auto MorphTargets = 0x190; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x318; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x320; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x330; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x370; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x390; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UListView { // : UListViewBase
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UW_ControlsBind_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BindingText = 0x268; // UTextBlock*
		constexpr auto Button_Disabled = 0x270; // UImage*
		constexpr auto Button_Dn = 0x278; // UImage*
		constexpr auto Button_Hi = 0x280; // UImage*
		constexpr auto Button_Selected = 0x288; // UImage*
		constexpr auto Button_Up = 0x290; // UImage*
		constexpr auto KeybindButton = 0x298; // UButton*
		constexpr auto DescriptionWidget = 0x2a0; // UTextBlock*
		constexpr auto DescriptionText = 0x2a8; // FText
		constexpr auto ChangeBindFormat = 0x2c0; // FText
		constexpr auto ActionMappingData = 0x2d8; // FActionMappingStruct
		constexpr auto AxisMappingData = 0x300; // FAxisMappingStruct
		constexpr auto bIsAxis = 0x328; // bool
		constexpr auto BindIndex = 0x32c; // int32_t
		constexpr auto UnboundText = 0x330; // FText
		constexpr auto Key = 0x348; // FKey
		constexpr auto KeyModifiers = 0x360; // TArray<KeyModifiers>
		constexpr auto OnHovered = 0x370; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x380; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x390; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnBindingStarted = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnBindingCanceled = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnBindingCommitted = 0x3d0; // FMulticastInlineDelegate
		constexpr auto BindName = 0x3e0; // FName
		constexpr auto Mod_Shift = 0x3e8; // FText
		constexpr auto Mod_Ctrl = 0x400; // FText
		constexpr auto Mod_Alt = 0x418; // FText
		constexpr auto Mod_Cmd = 0x430; // FText
		constexpr auto bListeningForKeystrokes = 0x448; // bool
		constexpr auto BindFriendlyName = 0x450; // FText
		constexpr auto BindNotificationWidget = 0x468; // UTextBlock*
		constexpr auto AxisScale = 0x470; // float
		constexpr auto PairedKeybind = 0x478; // UW_ControlsBind_C*
		constexpr auto KeybindHoveredSoundEffect = 0x480; // UFMODEvent*
		constexpr auto KeybindStartBindingSoundEffect = 0x488; // UFMODEvent*
		constexpr auto OnConflictingBindDetected = 0x490; // FMulticastInlineDelegate
		constexpr auto PendingNewKey = 0x4a0; // FKey
		constexpr auto KeyCategory = 0x4b8; // EInputKeyCategory
		constexpr auto SettingsMenu = 0x4c0; // UW_SettingsMenu_C*
		constexpr auto ConflictBindFriendlyNamesList = 0x4c8; // TArray<FText>
		constexpr auto ConflictingAxes = 0x4d8; // TArray<FAxisMappingStruct>
		constexpr auto ConflictingActions = 0x4e8; // TArray<FActionMappingStruct>
		constexpr auto OnUnbindableKeyReboundAttempted = 0x4f8; // FMulticastInlineDelegate
		constexpr auto bIsReadOnly = 0x508; // bool
	}

	namespace n_AReadyOrNotAIController { // : AAIController
		constexpr auto AIPerceptionComponent = 0x328; // UAIPerceptionComponent*
		constexpr auto SightConfig = 0x330; // UAISenseConfig_Sight*
		constexpr auto TouchConfig = 0x338; // UAISenseConfig_Touch*
		constexpr auto DamageConfig = 0x340; // UAISenseConfig_Damage*
		constexpr auto HearingConfig = 0x348; // UAISenseConfig_Hearing*
		constexpr auto TargetEnemy = 0x360; // APlayerCharacter*
	}

	namespace n_AThrownEvidenceActor { // : AActor
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto Rep_Location = 0x228; // FVector
		constexpr auto Rep_Rotation = 0x234; // FRotator
	}

	namespace n_UAnimBoneCompressionSettings { // : UObject
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UBookMark { // : UBookmarkBase
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0x90; // UPawnAction*
		constexpr auto RecentActionCopy = 0x98; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa0; // EPawnActionFailHandling
	}

	namespace n_UHumanCharacterHUD { // : UBaseWidget
		constexpr auto LastImpulse = 0x278; // FVector2D
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UChaseTargetActivity { // : UTeamBaseActivity
		constexpr auto ChaseTarget = 0x1e0; // AReadyOrNotCharacter*
	}

	namespace n_APepperspray { // : ABaseItem
		constexpr auto SprayParticleComponent = 0x960; // UParticleSystemComponent*
		constexpr auto AmmoComponent = 0x968; // UAmmoComponent*
		constexpr auto ParticleStart = 0x970; // UParticleSystem*
		constexpr auto ParticleEnd = 0x978; // UParticleSystem*
		constexpr auto ParticleImpact = 0x980; // UParticleSystem*
		constexpr auto ParticleRunningOut = 0x988; // UParticleSystem*
		constexpr auto ParticleSprayLoop = 0x990; // UParticleSystem*
		constexpr auto ParticleSprayLoopComponent = 0x998; // UParticleSystemComponent*
		constexpr auto FMODSprayEvent = 0x9a0; // UFMODEvent*
		constexpr auto FMODSprayEmptyEvent = 0x9a8; // UFMODEvent*
		constexpr auto FMODImpactEvent = 0x9b0; // UFMODEvent*
		constexpr auto FMODSprayLowAmmoEvent = 0x9b8; // UFMODEvent*
		constexpr auto SprayDistance = 0x9c0; // float
		constexpr auto bSpraying = 0x9c4; // char : 1
		constexpr auto DurationFrontTorso = 0x9c8; // float
		constexpr auto DurationBackFace = 0x9cc; // float
		constexpr auto DurationFrontFace = 0x9d0; // float
		constexpr auto PepperSprayAbuseDebounce = 0x9d4; // float
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_APlacedBag { // : AActor
		constexpr auto IconBolt = 0x228; // USphereComponent*
		constexpr auto PlacementHit = 0x230; // FHitResult
		constexpr auto bOverrideUseText = 0x2b8; // bool
		constexpr auto OverrideText = 0x2c0; // FText
	}

	namespace n_UARMeshComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto OnInstanceTakePointDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x688; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x698; // FGuid
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_USkeletalMeshLODSettings { // : UDataAsset
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UTacticalAuthorityCommandWidget { // : UUserWidget
		constexpr auto SelectedVoiceLine = 0x260; // ETacticalAuthorityVoice
		constexpr auto ReportItem = 0x268; // AActor*
		constexpr auto CommandActor = 0x270; // AActor*
		constexpr auto CommandMoveToMesh = 0x278; // UStaticMesh*
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x258; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x268; // char : 1
		constexpr auto bDisabled = 0x268; // char : 1
		constexpr auto StreamingUsage = 0x26c; // EStreamingVolumeUsage
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_ABaseMagPouch { // : ABaseItem
		constexpr auto MagazineMesh = 0x958; // USkeletalMeshComponent*
		constexpr auto OpenPouchAnim = 0x960; // UAnimationAsset*
		constexpr auto ClosedPouchAnim = 0x968; // UAnimationAsset*
		constexpr auto MagSocket = 0x970; // FName
	}

	namespace n_UDropWeaponAnimNotify { // : UAnimNotify
		constexpr auto ThrowForce = 0x38; // float
		constexpr auto bEquipLastItem = 0x3c; // bool
		constexpr auto bFastHolster = 0x3d; // bool
		constexpr auto bMarkAsEvidence = 0x3e; // bool
	}

	namespace n_UMapActorWidget { // : UBaseWidget
		constexpr auto MapActor_Text = 0x278; // UTextBlock*
		constexpr auto ActorToTrack = 0x280; // AActor*
		constexpr auto bUseActorRotation = 0x288; // bool
		constexpr auto bUseLocation = 0x289; // bool
		constexpr auto LocationToTrack = 0x28c; // FVector
		constexpr auto RotationOffset = 0x298; // float
		constexpr auto MapSize = 0x29c; // float
		constexpr auto MapTextureSize = 0x2a0; // float
		constexpr auto MapOrigin = 0x2a4; // FVector2D
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_AArmor_Light_V2_C { // : ABaseBodyArmor_C
		constexpr auto Collision = 0xae0; // UCapsuleComponent*
	}

	namespace n_USourceEffectPhaserPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_UAnimationDataSourceRegistry { // : UObject
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UPlayableCharacterData { // : UDataAsset
		constexpr auto CharacterNameUI = 0x30; // FText
		constexpr auto CharacterName = 0x48; // FText
		constexpr auto CharacterRole = 0x60; // FText
		constexpr auto CharacterBio = 0x78; // FText
		constexpr auto CharacterRealName = 0x90; // FText
		constexpr auto CharacterYearsOfService = 0xa8; // FText
		constexpr auto CharacterDateOfBirth = 0xc0; // FText
		constexpr auto HandleName = 0xd8; // FName
		constexpr auto FaceMesh = 0xe0; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto FaceROM = 0x108; // TSoftObjectPtr<UPoseAsset>
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x220; // UTextRenderComponent*
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UMotivityPreprocessor { // : UObject
		constexpr auto TimeStep = 0x28; // float
		constexpr auto PredictionData = 0x30; // FMotivityTimeData
		constexpr auto Skeleton = 0x40; // USkeleton*
		constexpr auto MeshPreviewOverride = 0x48; // USkeletalMesh*
		constexpr auto ReferencedBones = 0x50; // TArray<FName>
		constexpr auto ReferencedAnimations = 0x60; // TArray<UAnimSequence*>
		constexpr auto ReferencedIdleAnimations = 0x70; // TArray<UAnimSequence*>
	}

	namespace n_APaperSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x220; // UPaperSpriteComponent*
	}

	namespace n_UPaperSpriteComponent { // : UMeshComponent
		constexpr auto SourceSprite = 0x478; // UPaperSprite*
		constexpr auto MaterialOverride = 0x480; // UMaterialInterface*
		constexpr auto SpriteColor = 0x488; // FLinearColor
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_AWeaponCacheActor { // : AActor
		constexpr auto AvailableWeapons = 0x220; // TArray<ABaseMagazineWeapon*>
		constexpr auto DefaultScene = 0x230; // USceneComponent*
		constexpr auto ArrowComponent = 0x238; // UArrowComponent*
	}

	namespace n_ADeadSpectator_C { // : ASpectatePawn
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_ULoudnessNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UGizmoBoxComponent { // : UGizmoBaseComponent
		constexpr auto Origin = 0x470; // FVector
		constexpr auto Rotation = 0x480; // FQuat
		constexpr auto Dimensions = 0x490; // FVector
		constexpr auto LineThickness = 0x49c; // float
		constexpr auto bRemoveHiddenLines = 0x4a0; // bool
		constexpr auto bEnableAxisFlip = 0x4a1; // bool
	}

	namespace n_UDatasmithStaticMeshTemplate { // : UDatasmithObjectTemplate
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UImgMediaPlaybackComponent { // : UActorComponent
		constexpr auto Width = 0xb0; // float
		constexpr auto LODBias = 0xb4; // float
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimBlueprintGeneratedClass = 0x6a0; // UObject*
		constexpr auto AnimClass = 0x6a8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6b0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6b8; // UAnimInstance*
		constexpr auto AnimationData = 0x6c0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6e8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6f4; // FVector
		constexpr auto LinkedInstances = 0x730; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x750; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8b0; // float
		constexpr auto KinematicBonesUpdateType = 0x8b4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8b5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8b7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8b9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8b9; // char : 1
		constexpr auto bHasValidBodies = 0x8b9; // char : 1
		constexpr auto bBlendPhysics = 0x8b9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8b9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8b9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8ba; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8c0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8c0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8c0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8c0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8c1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8c1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8c1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8c1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8c1; // char : 1
		constexpr auto bPauseAnims = 0x8c1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8c1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8c2; // char : 1
		constexpr auto bForceRefpose = 0x8c2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bOldForceRefPose = 0x8c2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8c2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8c2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8c2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8c3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8c3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8c3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8c3; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8c3; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8c3; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8c6; // uint16_t
		constexpr auto ClothBlendWeight = 0x8c8; // float
		constexpr auto bWaitForParallelClothTask = 0x8cc; // bool
		constexpr auto DisallowedAnimCurves = 0x8d0; // TArray<FName>
		constexpr auto BodySetup = 0x8e0; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x8f0; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x900; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x9d8; // float
		constexpr auto TeleportRotationThreshold = 0x9dc; // float
		constexpr auto LastPoseTickFrame = 0x9e8; // uint32_t
		constexpr auto ClothingInteractor = 0xa40; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb10; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithFBXSceneImportData { // : UDatasmithSceneImportData
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UDatasmithSceneComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UDataDrivenCVarEngineSubsystem { // : UEngineSubsystem
		constexpr auto OnDataDrivenCVarDelegate = 0x30; // FMulticastInlineDelegate
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x450; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x460; // int32_t
		constexpr auto SectionBaseY = 0x464; // int32_t
		constexpr auto CollisionSizeQuads = 0x468; // int32_t
		constexpr auto CollisionScale = 0x46c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x470; // int32_t
		constexpr auto CollisionQuadFlags = 0x478; // TArray<char>
		constexpr auto HeightfieldGuid = 0x488; // FGuid
		constexpr auto CachedLocalBox = 0x498; // FBox
		constexpr auto RenderComponent = 0x4b4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4e0; // TArray<UPhysicalMaterial*>
	}

	namespace n_APhononProbeVolume { // : AVolume
		constexpr auto PlacementStrategy = 0x258; // EPhononProbePlacementStrategy
		constexpr auto HorizontalSpacing = 0x25c; // float
		constexpr auto HeightAboveFloor = 0x260; // float
		constexpr auto NumProbes = 0x264; // int32_t
		constexpr auto ProbeDataSize = 0x268; // int32_t
		constexpr auto BakedDataInfo = 0x270; // TArray<FBakedDataInfo>
		constexpr auto PhononProbeComponent = 0x280; // UPhononProbeComponent*
		constexpr auto ProbeBoxFileName = 0x288; // FString
		constexpr auto ProbeBatchFileName = 0x298; // FString
	}

	namespace n_UTeamStatusWidget { // : UBaseWidget
		constexpr auto TeamEmblem_Image_LeftAligned = 0x278; // UImage*
		constexpr auto Teammates_Container_LeftAligned = 0x280; // UHorizontalBox*
		constexpr auto TeamEmblem_Image_RightAligned = 0x288; // UImage*
		constexpr auto Teammates_Container_RightAligned = 0x290; // UHorizontalBox*
		constexpr auto Alignment = 0x298; // EHorizontalAlignment
		constexpr auto TeamEmblemBrush = 0x2a0; // FSlateBrush
		constexpr auto Team = 0x328; // ETeamType
		constexpr auto PaperdollWidgetClass = 0x330; // UTeamPaperdollWidget*
		constexpr auto EmptyTeamText = 0x338; // FText
		constexpr auto EmptyTeamTextColor = 0x350; // FSlateColor
		constexpr auto EmptyTeamTextFont = 0x378; // FSlateFontInfo
		constexpr auto TeamPaperdolls = 0x3d0; // TArray<UTeamPaperdollWidget*>
		constexpr auto EmptyTeam_Text = 0x3e0; // UTextBlock*
	}

	namespace n_UTimecodeProvider { // : UObject
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto paramName = 0x90; // FName
	}

	namespace n_AMagicLeapSharedWorldGameState { // : AGameState
		constexpr auto SharedWorldData = 0x290; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UTakeCoverActivity { // : UBaseActivity
		constexpr auto MaxCoverFireCount = 0x1b0; // int32_t
		constexpr auto CoverFireTimeCooldown = 0x1b4; // float
		constexpr auto CoverFireWaitTimeCooldown = 0x1b8; // float
		constexpr auto CoverFireActor = 0x1c0; // AFirePointActor*
		constexpr auto InstigatorEnemy = 0x1c8; // AReadyOrNotCharacter*
	}

	namespace n_AAllImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UW_IllegalUnbindModal_C { // : UW_StandardModal_C
		constexpr auto UberGraphFrame = 0x360; // FPointerToUberGraphFrame
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UMaterialExpressionLogarithm10 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionNamedRerouteDeclaration { // : UMaterialExpressionNamedRerouteBase
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Name = 0x54; // FName
		constexpr auto VariableGuid = 0x5c; // FGuid
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_UMotivityAnimInstance { // : UAnimInstance
		constexpr auto CurrentCharacterInput = 0x2b8; // FTrajectoryData
		constexpr auto CurrentMoveStyleIndex = 0x2c8; // int32_t
		constexpr auto CurrentGaitIndex = 0x2cc; // int32_t
		constexpr auto bHasMovementInput = 0x2d0; // bool
		constexpr auto CurrentMotivityTag = 0x2d4; // FName
	}

	namespace n_UVirtualTexturePoolConfig { // : UObject
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UCameraShakeBase*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UDatasmithSpotLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_USignificanceManager { // : UObject
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UUniformScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_UReadyOrNotFaceAnimInstance { // : UAnimInstance
		constexpr auto BodyDriverMesh = 0x2b8; // USkeletalMeshComponent*
		constexpr auto DefaultFaceROMData = 0x2c0; // UPoseAsset*
	}

	namespace n_UW_Compass_V3_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CompassCircle = 0x268; // UCanvasPanel*
		constexpr auto img_Circle = 0x270; // UImage*
		constexpr auto img_Dir = 0x278; // UImage*
		constexpr auto lbl_E = 0x280; // UW_Text_C*
		constexpr auto lbl_N = 0x288; // UW_Text_C*
		constexpr auto lbl_S = 0x290; // UW_Text_C*
		constexpr auto lbl_W = 0x298; // UW_Text_C*
	}

	namespace n_UAdvancedFriendsGameInstance { // : UGameInstance
		constexpr auto bCallFriendInterfaceEventsOnPlayerControllers = 0x1a8; // bool
		constexpr auto bCallIdentityInterfaceEventsOnPlayerControllers = 0x1a9; // bool
		constexpr auto bCallVoiceInterfaceEventsOnPlayerControllers = 0x1aa; // bool
		constexpr auto bEnableTalkingStatusDelegate = 0x1ab; // bool
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UGetRecentPlayersCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x1a0; // float
		constexpr auto TextureMultiplier = 0x1a4; // float
	}

	namespace n_UObjectiveMarkerComponent { // : UWidgetComponent
		constexpr auto bEnabled = 0x5a0; // char : 1
		constexpr auto bStartHidden = 0x5a0; // char : 1
		constexpr auto bCustomLocation = 0x5a0; // char : 1
		constexpr auto bFadeOffscreen = 0x5a0; // char : 1
		constexpr auto bDistanceScaleIcon = 0x5a0; // char : 1
		constexpr auto bCompletelyFadeWhenOverlappingOtherWidgets = 0x5a0; // char : 1
		constexpr auto bCompletelyFadeWhenClose = 0x5a0; // char : 1
		constexpr auto FadeAtDistance_Close = 0x5a4; // float
		constexpr auto bCompletelyFadeWhenFar = 0x5a8; // char : 1
		constexpr auto FadeAtDistance_Far = 0x5ac; // float
		constexpr auto bHideDistanceInfo = 0x5b0; // char : 1
		constexpr auto HideDistanceInfoAtDistance = 0x5b4; // float
		constexpr auto bHideDirectionalArrow = 0x5b8; // char : 1
		constexpr auto bDisplayMarkerText = 0x5b8; // char : 1
		constexpr auto MarkerText = 0x5c0; // FText
		constexpr auto MarkerWidgetClass = 0x5d8; // UObjectiveMarkerWidget*
		constexpr auto IconBrush = 0x5e0; // FSlateBrush
		constexpr auto IconColorAndOpacity = 0x668; // FLinearColor
		constexpr auto IconSize = 0x678; // FVector2D
		constexpr auto bDebug = 0x680; // char : 1
		constexpr auto ObjectiveMarkerWidget_Offscreen = 0x688; // UObjectiveMarkerWidget*
		constexpr auto ObjectiveMarkerWidget_Onscreen = 0x690; // UObjectiveMarkerWidget*
		constexpr auto bIsOffscreen = 0x698; // bool
		constexpr auto bRequestingFadeOut = 0x699; // bool
	}

	namespace n_UW_DebugMenu_Tablet_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto DebugInfo_Player = 0x268; // UW_DebugInfoContainer_C*
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto paramName = 0xa0; // FName
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x220; // APlayerController*
		constexpr auto TransformComponent = 0x228; // USceneComponent*
		constexpr auto DefaultFOV = 0x238; // float
		constexpr auto DefaultOrthoWidth = 0x240; // float
		constexpr auto DefaultAspectRatio = 0x248; // float
		constexpr auto CameraCache = 0x290; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x890; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe90; // FTViewTarget
		constexpr auto PendingViewTarget = 0x14a0; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1ae0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x20e0; // FCameraCacheEntry
		constexpr auto ModifierList = 0x26e0; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x26f0; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x2700; // float
		constexpr auto FreeCamOffset = 0x2704; // FVector
		constexpr auto ViewTargetOffset = 0x2710; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x2720; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x2740; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2750; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2758; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2798; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x27b8; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x27c8; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x27d8; // ACameraActor*
		constexpr auto bIsOrthographic = 0x27e0; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x27e0; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x27e0; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x27e0; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x27e1; // char : 1
		constexpr auto ViewPitchMin = 0x27e4; // float
		constexpr auto ViewPitchMax = 0x27e8; // float
		constexpr auto ViewYawMin = 0x27ec; // float
		constexpr auto ViewYawMax = 0x27f0; // float
		constexpr auto ViewRollMin = 0x27f4; // float
		constexpr auto ViewRollMax = 0x27f8; // float
		constexpr auto ServerUpdateCameraTimeout = 0x2800; // float
	}

	namespace n_UReadyOrNotBackend { // : UObject
		constexpr auto SteamId = 0x38; // FString
		constexpr auto SteamName = 0x48; // FString
		constexpr auto Ticket = 0x58; // FString
		constexpr auto CachedDiscordOneTimeUseCode = 0x68; // FString
		constexpr auto rgchToken = 0x88; // char [0x400]
		constexpr auto LoginState = 0x48c; // ELoginState
		constexpr auto OnStatsStarted = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnStatsUploadProgress = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnStatsSaved = 0x4d8; // FMulticastInlineDelegate
		constexpr auto bProfileInProgress = 0x4e8; // bool
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UAnimationSharingSetup { // : UObject
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UMovieSceneMediaSection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UPlanningMapWidget { // : UUserWidget
		constexpr auto bDrawable = 0x260; // bool
		constexpr auto DrawPointData = 0x268; // TArray<FFloorMapPointData>
	}

	namespace n_AEnvironmentVolume { // : AActor
		constexpr auto Bounds = 0x220; // UBoxComponent*
		constexpr auto WetnessRate = 0x228; // float
	}

	namespace n_UInventoryComponent { // : UActorComponent
		constexpr auto OnEquippedItemChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnClientItemAddedToInventory = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnItemAddedToInventory = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnItemRemovedFromInventory = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnItemEquipped = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnItemHolstered = 0x108; // FMulticastInlineDelegate
		constexpr auto LatestItemChangeRequest = 0x120; // FItemChangeRequest
		constexpr auto LastReceivedItemChangeRequest = 0x148; // FItemChangeRequest
		constexpr auto QueuedItemSwap = 0x170; // ABaseItem*
		constexpr auto LastEquippedItem = 0x178; // ABaseItem*
		constexpr auto LastEquippedWeapon = 0x180; // ABaseWeapon*
		constexpr auto InventoryItems = 0x188; // TArray<ABaseItem*>
		constexpr auto RemovedInventoryItems = 0x198; // TArray<ABaseItem*>
		constexpr auto SpawnedGear = 0x1a8; // FSpawnedGear
		constexpr auto LastEquippedLoadout = 0x220; // FSavedLoadout
		constexpr auto SelectedDevice = 0x348; // ABaseItem*
	}

	namespace n_UBulletImpactDebug_C { // : UDebugDisplayWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto DebugTItle = 0x268; // UTextBlock*
		constexpr auto DetailsArea = 0x270; // UVerticalBox*
		constexpr auto LastUsedID = 0x278; // int32_t
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x220; // USkyLightComponent*
		constexpr auto bEnabled = 0x228; // char : 1
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_URoNAnimInstance_PlayerFP { // : UReadyOrNotAnimInstance
		constexpr auto LastWeaponAnimData = 0x520; // UReadyOrNotWeaponAnimData*
		constexpr auto EditorWeaponAnimData = 0x528; // UReadyOrNotWeaponAnimData*
		constexpr auto LeanAngleY = 0x530; // float
		constexpr auto LeanAngleZ = 0x534; // float
		constexpr auto MeshControlRotation = 0x538; // FRotator
		constexpr auto MeshPostureLeanOffset = 0x544; // FVector
		constexpr auto MeshWeaponOffset = 0x550; // FVector
		constexpr auto MeshWeaponRotation = 0x55c; // FRotator
		constexpr auto MeshWeaponFreeAimRotation = 0x568; // FRotator
		constexpr auto MeshWeaponLeanOffset = 0x574; // FVector
		constexpr auto MeshWeaponLeanRotation = 0x580; // FRotator
		constexpr auto TPMeshReference = 0x590; // USkeletalMeshComponent*
		constexpr auto LazySpringStrength = 0x598; // float
		constexpr auto ADS_Movement_Weight = 0x59c; // float
		constexpr auto InteractionSlotAlpha = 0x5a0; // float
		constexpr auto DefaultSlotAlpha = 0x5a4; // float
		constexpr auto RollMoveInput = 0x5a8; // float
		constexpr auto PelvisMovementBobAlpha = 0x5ac; // float
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy { // : UObject
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UW_DebugOverlay_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BlackText = 0x268; // UTextBlock*
		constexpr auto BounceVertical = 0x270; // UVerticalBox*
		constexpr auto BouncingTextContainer = 0x278; // UVerticalBox*
		constexpr auto DebugInfo = 0x280; // UW_DebugInfoContainer_C*
		constexpr auto DebugInfo_Score = 0x288; // UW_DebugInfoContainer_C*
		constexpr auto TextBlock_1 = 0x290; // UTextBlock*
		constexpr auto TextBlock_2 = 0x298; // UTextBlock*
		constexpr auto TextBlock_3 = 0x2a0; // UTextBlock*
		constexpr auto TextBlock_4 = 0x2a8; // UTextBlock*
		constexpr auto VeryHiddenID = 0x2b0; // UVerticalBox*
		constexpr auto W_DevScoreDisplay = 0x2b8; // UW_DevScoreDisplay_C*
		constexpr auto WhiteText = 0x2c0; // UTextBlock*
		constexpr auto bInitialized = 0x2c8; // bool
		constexpr auto CachedPlayer = 0x2d0; // APlayerCharacter*
		constexpr auto CachedActor = 0x2d8; // AActor*
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UCollectEvidenceActivity { // : UBaseActivity
		constexpr auto EvidenceItem = 0x1b0; // AActor*
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UScopedWeaponAttachment { // : UWeaponAttachment
		constexpr auto ScopeMods = 0xff8; // TArray<FScopeModifications>
		constexpr auto ZoomFOVAddition = 0x1008; // float
		constexpr auto ZoomInSpeed = 0x100c; // float
		constexpr auto ZoomOutSpeed = 0x1010; // float
		constexpr auto bSupportsCowitness = 0x1014; // bool
		constexpr auto bUseScopeEffect = 0x1015; // bool
		constexpr auto ScopeReticle = 0x1018; // TSoftObjectPtr<UTexture2D>
		constexpr auto bUsePipRendering = 0x1040; // bool
		constexpr auto CaptureSource = 0x1041; // ESceneCaptureSource
		constexpr auto bOverridePostProcessSettings = 0x1042; // bool
		constexpr auto bNeedInventoryUpdate = 0x1043; // bool
		constexpr auto OverridePostProcessSettings = 0x1050; // FPostProcessSettings
		constexpr auto PipMaterialIdx = 0x15b0; // int32_t
		constexpr auto PipFOV = 0x15b4; // float
		constexpr auto PlayerCameraFOVMultiplier = 0x15b8; // float
		constexpr auto PipRenderDynamicMaterial = 0x15c0; // UMaterialInstanceDynamic*
		constexpr auto PipSceneCapture = 0x15c8; // USceneCaptureComponent2D*
		constexpr auto PipRenderTarget = 0x15d0; // UTextureRenderTarget2D*
		constexpr auto PipResolution = 0x15d8; // FVector2D
	}

	namespace n_UFieldSystemMetaDataIteration { // : UFieldSystemMetaData
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_AVictoryISM { // : AActor
		constexpr auto Mesh = 0x220; // UInstancedStaticMeshComponent*
	}

	namespace n_UW_ScoreNotify_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_HideScore = 0x268; // UWidgetAnimation*
		constexpr auto Anim_ShowScore = 0x270; // UWidgetAnimation*
		constexpr auto RedLine_Image = 0x278; // UImage*
		constexpr auto Score_Text = 0x280; // UTextBlock*
		constexpr auto Score_Value = 0x288; // UTextBlock*
		constexpr auto ScoreText = 0x290; // FText
		constexpr auto CalculatedScore = 0x2a8; // int32_t
		constexpr auto bGive = 0x2ac; // bool
		constexpr auto ElapsedTime = 0x2b0; // float
		constexpr auto ScoreCounterSpeed = 0x2b4; // float
		constexpr auto FinalString = 0x2b8; // FString
		constexpr auto bTextAnimationFinished = 0x2c8; // bool
		constexpr auto Iterator = 0x2cc; // int32_t
		constexpr auto Chars = 0x2d0; // TArray<FString>
		constexpr auto CurrentDelay = 0x2e0; // float
		constexpr auto DelayBetweenLetters = 0x2e4; // float
		constexpr auto DelayBetweenWords = 0x2e8; // float
		constexpr auto EndString = 0x2f0; // FString
		constexpr auto bFadeOut = 0x300; // bool
		constexpr auto TotalScore = 0x304; // int32_t
		constexpr auto ElapsedTime_Text = 0x308; // float
		constexpr auto FMOD_ScoreCounterInstance = 0x310; // FFMODEventInstance
		constexpr auto FMOD_ScoreNotifyInstance = 0x318; // FFMODEventInstance
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UCompositeCameraShakePattern { // : UCameraShakePattern
		constexpr auto ChildPatterns = 0x28; // TArray<UCameraShakePattern*>
	}

	namespace n_UW_LoudnessMeter_C { // : ULoudnessMeterWidget
		constexpr auto OneBar_Image = 0x290; // UImage*
		constexpr auto ThreeBar_Image = 0x298; // UImage*
		constexpr auto TwoBar_Image = 0x2a0; // UImage*
	}

	namespace n_USwatCommandWidget { // : UUserWidget
		constexpr auto LastSubCommandPageIndex = 0x270; // int32_t
		constexpr auto ActiveCommandPage = 0x278; // TArray<FSwatCommand>
		constexpr auto PreviousActiveCommandPage = 0x288; // TArray<FSwatCommand>
		constexpr auto CommandCombo = 0x298; // TArray<FKey>
		constexpr auto ActiveTeamType = 0x2a8; // ETeamType
		constexpr auto ExecutionTeamType = 0x2a9; // ETeamType
		constexpr auto DefaultCommand = 0x2aa; // ESwatCommand
		constexpr auto DefaultDoorOpenCommand = 0x2ab; // ESwatCommand
		constexpr auto DefaultDoorUnknownCommand = 0x2ac; // ESwatCommand
		constexpr auto DefaultCheckDoorCommand = 0x2ad; // ESwatCommand
		constexpr auto DefaultDoorLockedCommand = 0x2ae; // ESwatCommand
		constexpr auto DefaultDoorUnlockedCommand = 0x2af; // ESwatCommand
		constexpr auto SWATManager = 0x338; // ASWATManager*
		constexpr auto ContextualData = 0x340; // FHitResult
		constexpr auto LastExecutedCommandContextualData = 0x3c8; // FHitResult
		constexpr auto OpenMenuEvent = 0x450; // UFMODEvent*
		constexpr auto OpenSubCommandMenuEvent = 0x458; // UFMODEvent*
		constexpr auto ExecuteCommandEvent = 0x460; // UFMODEvent*
		constexpr auto Flashbang = 0x468; // ABaseGrenade*
		constexpr auto Stinger = 0x470; // ABaseGrenade*
		constexpr auto CSGas = 0x478; // ABaseGrenade*
		constexpr auto bHoldingQueueCommandKey = 0x488; // char : 1
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto VisibilityCellSize = 0x228; // int32_t
		constexpr auto VisibilityAggressiveness = 0x22c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x22d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x22d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x22d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x22d; // char : 1
		constexpr auto bEnableAISystem = 0x22d; // char : 1
		constexpr auto bEnableWorldComposition = 0x22d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x22d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x22d; // char : 1
		constexpr auto bWorldGravitySet = 0x22e; // char : 1
		constexpr auto bGlobalGravitySet = 0x22e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x22e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x22e; // char : 1
		constexpr auto bHighPriorityLoading = 0x22e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x22e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x22e; // char : 1
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x238; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x240; // float
		constexpr auto KillZ = 0x244; // float
		constexpr auto KillZDamageType = 0x248; // UDamageType*
		constexpr auto WorldGravityZ = 0x250; // float
		constexpr auto GlobalGravityZ = 0x254; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x258; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x260; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x268; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x270; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x278; // int32_t
		constexpr auto DefaultColorScale = 0x27c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x288; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x28c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x290; // float
		constexpr auto DefaultReverbSettings = 0x298; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2b8; // FInteriorSettings
		constexpr auto DefaultBaseSoundMix = 0x2e0; // USoundMix*
		constexpr auto TimeDilation = 0x2e8; // float
		constexpr auto MatineeTimeDilation = 0x2ec; // float
		constexpr auto DemoPlayTimeDilation = 0x2f0; // float
		constexpr auto MinGlobalTimeDilation = 0x2f4; // float
		constexpr auto MaxGlobalTimeDilation = 0x2f8; // float
		constexpr auto MinUndilatedFrameTime = 0x2fc; // float
		constexpr auto MaxUndilatedFrameTime = 0x300; // float
		constexpr auto BroadphaseSettings = 0x304; // FBroadphaseSettings
		constexpr auto Pauser = 0x348; // APlayerState*
		constexpr auto ReplicationViewers = 0x350; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x370; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x378; // int32_t
		constexpr auto DefaultBookmarkClass = 0x380; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x388; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x398; // UBookmarkBase*
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UDataSingleton { // : UObject
		constexpr auto LookupData = 0x28; // ULookupData*
		constexpr auto bDrawBulletDebug = 0x30; // bool
		constexpr auto bDrawNoNameplates = 0x31; // bool
		constexpr auto LoadingScreen_Tips = 0x38; // TArray<FText>
		constexpr auto YouKilledFormat = 0x48; // FText
		constexpr auto KillfeedFormatRandom = 0x60; // TArray<FText>
		constexpr auto ArrestfeedFormatRandom = 0x70; // TArray<FText>
		constexpr auto FreefeedFormatRandom = 0x80; // TArray<FText>
		constexpr auto TeamkillfeedFormatRandom = 0x90; // TArray<FText>
		constexpr auto KillfeedWithA = 0xa0; // FText
		constexpr auto bShowGrenadeDamage = 0xb8; // bool
		constexpr auto ItemData = 0xc0; // TSoftObjectPtr<UItemData>
		constexpr auto WidgetData = 0xe8; // TSoftObjectPtr<UWidgetsData>
		constexpr auto PenetrationData = 0x110; // TSoftObjectPtr<UPenetrationData>
		constexpr auto ItemDataLookupTable = 0x138; // TSoftObjectPtr<UDataTable>
		constexpr auto AIDataLookupTable = 0x160; // TSoftObjectPtr<UDataTable>
		constexpr auto LevelDataLookupTable = 0x188; // TSoftObjectPtr<UDataTable>
		constexpr auto AnimationDataLookupTable = 0x1b0; // TSoftObjectPtr<UDataTable>
		constexpr auto AnimatedIconLookupTable = 0x1d8; // TSoftObjectPtr<UDataTable>
		constexpr auto DoorDataLookupTable = 0x200; // TSoftObjectPtr<UDataTable>
		constexpr auto TrapDataLookupTable = 0x228; // TSoftObjectPtr<UDataTable>
		constexpr auto ConversationLookupTable = 0x250; // TSoftObjectPtr<UDataTable>
		constexpr auto GameSettingsLookupTable = 0x278; // TSoftObjectPtr<UDataTable>
		constexpr auto CharacterLookOverrideTable = 0x2a0; // TSoftObjectPtr<UDataTable>
		constexpr auto RonInputKeyTable = 0x2c8; // TSoftObjectPtr<UDataTable>
		constexpr auto SpeechDataLookupTable = 0x2f0; // TMap<FString, TSoftObjectPtr<UDataTable>>
		constexpr auto WidgetDataLookupTable = 0x340; // TSoftObjectPtr<UDataTable>
		constexpr auto CustomizationCharacterLevel = 0x368; // FName
		constexpr auto CustomizationMenuLevel = 0x370; // FName
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_USpawnStaticMeshAnimNotifyState { // : UAnimNotifyState
		constexpr auto StaticMeshToSpawn = 0x30; // UStaticMesh*
		constexpr auto BoneToSpawnOn = 0x38; // FName
		constexpr auto bOnlyOwnerSee = 0x50; // bool
		constexpr auto bOwnerNoSee = 0x51; // bool
		constexpr auto bDestroyAtEnd = 0x52; // bool
		constexpr auto bSimulatePhysicsAtEnd = 0x53; // bool
		constexpr auto ForceVector = 0x54; // FVector
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UTireConfig { // : UDataAsset
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UNavigationSystemModuleConfig { // : UNavigationSystemConfig
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UARCandidateImage { // : UDataAsset
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_ABP_ClueFlare_C { // : AActor
		constexpr auto UberGraphFrame = 0x220; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem = 0x228; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto Timeline_0_ActorScale_3ED612744AC2F4DC5419BE9C0B125823 = 0x238; // FVector
		constexpr auto Timeline_0_DeltaLocation_3ED612744AC2F4DC5419BE9C0B125823 = 0x244; // FVector
		constexpr auto Timeline_0_FlareIntensity_3ED612744AC2F4DC5419BE9C0B125823 = 0x250; // float
		constexpr auto Timeline_0__Direction_3ED612744AC2F4DC5419BE9C0B125823 = 0x254; // ETimelineDirection
		constexpr auto Timeline_1 = 0x258; // UTimelineComponent*
		constexpr auto MID_FlareLight = 0x260; // UMaterialInstanceDynamic*
		constexpr auto FlareFireSound = 0x268; // UFMODEvent*
	}

	namespace n_UGeometryCollection { // : UObject
		constexpr auto EnableClustering = 0x30; // bool
		constexpr auto ClusterGroupIndex = 0x34; // int32_t
		constexpr auto MaxClusterLevel = 0x38; // int32_t
		constexpr auto DamageThreshold = 0x40; // TArray<float>
		constexpr auto ClusterConnectionType = 0x50; // EClusterConnectionTypeEnum
		constexpr auto GeometrySource = 0x58; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x68; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x78; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x79; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x7c; // int32_t
		constexpr auto MaxLevelSetResolution = 0x80; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x84; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x88; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x8c; // float
		constexpr auto bMassAsDensity = 0x90; // bool
		constexpr auto Mass = 0x94; // float
		constexpr auto MinimumMassClamp = 0x98; // float
		constexpr auto CollisionParticlesFraction = 0x9c; // float
		constexpr auto MaximumCollisionParticles = 0xa0; // int32_t
		constexpr auto SizeSpecificData = 0xa8; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0xb8; // bool
		constexpr auto RemoveOnFractureMaterials = 0xc0; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xd0; // FGuid
		constexpr auto StateGuid = 0xe0; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xf0; // int32_t
	}

	namespace n_UARTrackedImage { // : UARTrackedGeometry
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UAnimNotify_DisarmTrap { // : UAnimNotify
		constexpr auto bDisarmFinished = 0x38; // char : 1
	}

	namespace n_AGS_COOP_C { // : ACoopGS
		constexpr auto UberGraphFrame = 0x7d8; // FPointerToUberGraphFrame
		constexpr auto NewVar_1 = 0x7e0; // AActor*
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_USourceEffectEnvelopeFollowerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x7b0; // FCameraLookatTrackingSettings
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto BaseDefaultSubmix = 0xc8; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xe0; // FSoftObjectPath
		constexpr auto EQSubmix = 0xf8; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0x110; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0x114; // float
		constexpr auto MaximumConcurrentStreams = 0x118; // int32_t
		constexpr auto GlobalMinPitchScale = 0x11c; // float
		constexpr auto GlobalMaxPitchScale = 0x120; // float
		constexpr auto QualityLevels = 0x128; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x138; // char : 1
		constexpr auto bDisableMasterEQ = 0x138; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x138; // char : 1
		constexpr auto NumStoppingSources = 0x13c; // uint32_t
		constexpr auto PanningMethod = 0x140; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x141; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x148; // FString
		constexpr auto DebugSounds = 0x158; // TArray<FSoundDebugEntry>
		constexpr auto DefaultAudioBuses = 0x168; // TArray<FDefaultAudioBusSettings>
		constexpr auto DefaultSoundClass = 0x178; // USoundClass*
		constexpr auto DefaultMediaSoundClass = 0x180; // USoundClass*
		constexpr auto DefaultSoundConcurrency = 0x188; // USoundConcurrency*
	}

	namespace n_UAnimNotifyState_SpawnLight { // : UAnimNotifyState
		constexpr auto LightColor = 0x30; // FLinearColor
		constexpr auto StartIntensity = 0x40; // float
		constexpr auto MiddleIntensity = 0x44; // float
		constexpr auto EndIntensity = 0x48; // float
		constexpr auto InterpSpeed = 0x4c; // float
		constexpr auto PointLight = 0x50; // APointLight*
		constexpr auto MaxDuration = 0x58; // float
		constexpr auto CurrentDuration = 0x5c; // float
		constexpr auto SocketName = 0x60; // FName
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UNiagaraPrecompileContainer { // : UObject
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto PhysicsField = 0x1f8; // UPhysicsFieldComponent*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x200; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x250; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x260; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5e0; // UWorldComposition*
		constexpr auto PSCPool = 0x678; // FWorldPSCPool
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UW_Map_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Main_Overlay = 0x268; // UOverlay*
		constexpr auto Map_Overlay = 0x270; // UOverlay*
		constexpr auto MapActors_Overlay = 0x278; // UOverlay*
		constexpr auto MapFloors = 0x280; // UW_MapFloors_C*
		constexpr auto MapName_Text = 0x288; // UTextBlock*
		constexpr auto MapOverview_Image = 0x290; // UImage*
		constexpr auto MapActorWidgets = 0x298; // TArray<UMapActorWidget*>
		constexpr auto IncrimGS = 0x2a8; // AIncriminationGS*
		constexpr auto MapOrigin = 0x2b0; // FVector2D
		constexpr auto MapSize = 0x2b8; // float
		constexpr auto MapCells = 0x2c0; // TArray<UW_MapCell_C*>
		constexpr auto Actors = 0x2d0; // TArray<AActor*>
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UVehicleWheel { // : UObject
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_AUnmannedVehicle { // : APawn
		constexpr auto Pilot = 0x288; // APlayerCharacter*
		constexpr auto Health = 0x290; // float
		constexpr auto bDead = 0x294; // bool
		constexpr auto MaxHealth = 0x298; // float
		constexpr auto VehicleTabletName = 0x2a0; // FText
		constexpr auto PreviousHUD = 0x2b8; // AHUD*
		constexpr auto VehicleHUD = 0x2c0; // AHUD*
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto BoxComponent = 0x220; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x228; // bool
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x598; // LazyObjectProperty
	}

	namespace n_USourceEffectPannerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x38; // float
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UANIMBP_Mirrorgun_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x3d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x4d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x4f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer = 0x518; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x598; // FAnimNode_BlendListByBool
		constexpr auto bEquipped = 0x638; // bool
	}

	namespace n_UW_StandardRadioButton_C { // : UW_StandardButton_C
		constexpr auto UberGraphFrame = 0x570; // FPointerToUberGraphFrame
		constexpr auto ParentContainer = 0x578; // UW_RadioContainer_C*
		constexpr auto TabControlIndex = 0x580; // int32_t
	}

	namespace n_UStaticMesh { // : UStreamableRenderAsset
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bSupportRayTracing = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb5; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_ACoverActor { // : AActor
		constexpr auto CoverForThreatAngle = 0x220; // AThreatAwarenessActor*
		constexpr auto bIsSwatCover = 0x228; // bool
		constexpr auto bIsCrouchingCover = 0x229; // bool
		constexpr auto CoverInUseByPlayer = 0x230; // APlayerCharacter*
		constexpr auto DefaultScene = 0x238; // USceneComponent*
	}

	namespace n_USoundSourceBus { // : USoundWave
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UMoveIntoLOSActivity { // : UBaseActivity
		constexpr auto LOSActor = 0x1b0; // AActor*
	}

	namespace n_UDatasmithSkyLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_ADefaultImpactEffects_C { // : AImpactEffect
		constexpr auto DefaultSceneRoot = 0x12d0; // USceneComponent*
	}

	namespace n_UW_SettingLabel_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Hi_Image = 0x268; // UImage*
		constexpr auto HighlightButton = 0x270; // UButton*
		constexpr auto txt_BindName = 0x278; // UW_Text_C*
		constexpr auto BindText = 0x280; // FText
		constexpr auto DescriptionTextWidget = 0x298; // UTextBlock*
		constexpr auto Description = 0x2a0; // FText
		constexpr auto OnLabelHovered = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnLabelUnhovered = 0x2c8; // FMulticastInlineDelegate
		constexpr auto CopyDescriptionFromCheckbox = 0x2d8; // UW_StandardCheckbox_C*
		constexpr auto CopyDescriptionFromSlider = 0x2e0; // UW_StandardSlider_C*
		constexpr auto CopyDescriptionFromCombobox = 0x2e8; // UW_StandardCombobox_New_C*
		constexpr auto SettingLabelHoveredSound = 0x2f0; // UFMODEvent*
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UFoliageType_Actor { // : UFoliageType
		constexpr auto ActorClass = 0x3b0; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b8; // bool
	}

	namespace n_URectLightComponent { // : ULocalLightComponent
		constexpr auto SourceWidth = 0x340; // float
		constexpr auto SourceHeight = 0x344; // float
		constexpr auto BarnDoorAngle = 0x348; // float
		constexpr auto BarnDoorLength = 0x34c; // float
		constexpr auto SourceTexture = 0x350; // UTexture*
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer { // : UNiagaraDataInterface
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_AProjectile { // : AActor
		constexpr auto CollisionComp = 0x220; // USphereComponent*
		constexpr auto MovementComp = 0x228; // UProjectileMovementComponent*
		constexpr auto StartPos = 0x234; // FVector
		constexpr auto bSpawnedImpactEffects = 0x240; // bool
		constexpr auto ImpactEffectsClass = 0x248; // AImpactEffect*
		constexpr auto Mesh = 0x250; // USkeletalMesh*
		constexpr auto StaticMesh = 0x258; // UStaticMesh*
	}

	namespace n_UDoorPointComponent { // : UBillboardComponent
		constexpr auto bFront = 0x470; // bool
		constexpr auto bPIEMidLocation = 0x471; // bool
		constexpr auto bPIEEndLocation = 0x472; // bool
		constexpr auto bStackUp = 0x473; // bool
		constexpr auto bClear = 0x474; // bool
		constexpr auto bMidpoint = 0x475; // bool
		constexpr auto Position = 0x478; // int32_t
		constexpr auto bAlternate = 0x47c; // bool
		constexpr auto bGrenadeLauncher = 0x47d; // bool
		constexpr auto bGrenadeThrow = 0x47e; // bool
		constexpr auto bDoorInteractionPoint = 0x47f; // bool
	}

	namespace n_UCurrentMatchRoundWidget { // : UBaseWidget
		constexpr auto CurrentRound_Text = 0x278; // UTextBlock*
		constexpr auto CurrentRound_Text_Style2 = 0x280; // UTextBlock*
	}

	namespace n_UOnsetNRT { // : UAudioSynesthesiaNRT
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UChaosPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UVideoCaptureProtocol { // : UFrameGrabberProtocol
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UMovieSceneNiagaraTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x90; // TArray<UMovieSceneSection*>
	}

	namespace n_APrimary_S590_Beanbag_V2_C { // : AShotgun
		constexpr auto UberGraphFrame = 0x12c0; // FPointerToUberGraphFrame
		constexpr auto PointLight = 0x12c8; // UPointLightComponent*
		constexpr auto PointLight1 = 0x12d0; // USpotLightComponent*
		constexpr auto LightToggle1P = 0x12d8; // UAnimMontage*
	}

	namespace n_AMagicLeapARPinInfoActorBase { // : AActor
		constexpr auto PinId = 0x220; // FGuid
		constexpr auto bVisibilityOverride = 0x230; // bool
	}

	namespace n_UOnsetNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_UInteractiveTool { // : UObject
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UPrimaryAssetLabel { // : UPrimaryDataAsset
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_URoNWeaponAnimInstance { // : UAnimInstance
		constexpr auto AmmoRemaining = 0x2b8; // float
		constexpr auto OptiwandBoneModify = 0x2bc; // FRotator
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_UGizmoArrowComponent { // : UGizmoBaseComponent
		constexpr auto Direction = 0x470; // FVector
		constexpr auto Gap = 0x47c; // float
		constexpr auto Length = 0x480; // float
		constexpr auto Thickness = 0x484; // float
	}

	namespace n_UFieldSystemMetaDataFilter { // : UFieldSystemMetaData
		constexpr auto FilterType = 0xb0; // EFieldFilterType
	}

	namespace n_ULocalLightComponent { // : ULightComponent
		constexpr auto IntensityUnits = 0x328; // ELightUnits
		constexpr auto Radius = 0x32c; // float
		constexpr auto AttenuationRadius = 0x330; // float
		constexpr auto LightmassSettings = 0x334; // FLightmassPointLightSettings
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UTimeSynchronizableMediaSource { // : UBaseMediaSource
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UCombinedCombatActivity { // : UBaseCombatActivity
		constexpr auto CombatState = 0x248; // ECombatState
		constexpr auto LastTrackedEnemyInDangerousState = 0x260; // AReadyOrNotCharacter*
		constexpr auto FleeingCombatMove = 0x270; // UFleeingCombatMove*
		constexpr auto TargetedCivilian = 0x288; // ACyberneticCharacter*
		constexpr auto UnpathableCivilians = 0x290; // TArray<ACyberneticCharacter*>
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UMovieSceneEntitySystem { // : UObject
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UMovieSceneEventTriggerSection { // : UMovieSceneEventSectionBase
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UNiagaraDataInterfaceArray { // : UNiagaraDataInterface
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_AFlankingAvoidanceVolume { // : AActor
		constexpr auto Bounds = 0x220; // UBoxComponent*
	}

	namespace n_UAnimNotify_PlayPostProcessEffect { // : UAnimNotify
		constexpr auto PostProcessEffectName = 0x38; // FName
	}

	namespace n_APickupEvidenceByTag { // : AObjective
		constexpr auto EvidenceTag = 0x278; // FName
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x220; // UVectorFieldComponent*
	}

	namespace n_UReadyOrNotGameplayEffect { // : UObject
		constexpr auto OnGameplayEffectExpired = 0x28; // FMulticastInlineDelegate
		constexpr auto Actor = 0x38; // AActor*
		constexpr auto World = 0x40; // UWorld*
	}

	namespace n_UMoveAndClearQuestNode { // : UBaseTeamQuestNode
		constexpr auto SWATNeededToPass = 0x270; // int32_t
		constexpr auto ClearTriggerVolume = 0x278; // AReadyOrNotTriggerVolume*
		constexpr auto SWATCleared = 0x280; // TSet<ASWATCharacter*>
	}

	namespace n_UARPointComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x220; // FString
		constexpr auto ClientBeaconActorClass = 0x230; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x238; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bForwardBlendsSkyLightCubemaps = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto WriteDepthToTranslucentMaterial = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_ADatasmithImportedSequencesActor { // : AActor
		constexpr auto ImportedSequences = 0x220; // TArray<ULevelSequence*>
	}

	namespace n_UNiagaraDataInterfacePlatformSet { // : UNiagaraDataInterface
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1f0; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x200; // FConstraintProfileProperties
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0xa8; // TArray<FName>
		constexpr auto TrackName = 0xb8; // FName
	}

	namespace n_UNiagaraDataInterfaceCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_AElevator { // : AActor
		constexpr auto ElevatorPath = 0x220; // USplineComponent*
		constexpr auto bMoveElevator = 0x228; // bool
		constexpr auto bCloseDoors = 0x229; // bool
		constexpr auto ElevatorMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto DestinationReachedSound = 0x238; // UFMODAudioComponent*
		constexpr auto FloorReachedSound = 0x240; // UFMODAudioComponent*
		constexpr auto DoorOpenSoundFMOD = 0x248; // UFMODAudioComponent*
		constexpr auto DoorCloseSoundFMOD = 0x250; // UFMODAudioComponent*
		constexpr auto DefaultElevatorLoc = 0x258; // FVector
		constexpr auto Floors = 0x264; // int32_t
		constexpr auto ElevatorSpeed = 0x268; // float
		constexpr auto CurrentFloor = 0x26c; // int32_t
		constexpr auto MoveElevatorDelay = 0x270; // float
		constexpr auto MoveElevatorDelay_Handle = 0x278; // FTimerHandle
		constexpr auto SelectedFloor = 0x280; // int32_t
	}

	namespace n_UANIMBP_Flashbang_V2_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x308; // FAnimNode_Slot
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_USkyAtmosphereComponent { // : USceneComponent
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UW_Header_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AugmentSlot = 0x268; // UNamedSlot*
		constexpr auto btn_Header = 0x270; // UW_Button_C*
		constexpr auto HB_Header = 0x278; // UHorizontalBox*
		constexpr auto txt_Label = 0x280; // UW_Text_C*
		constexpr auto LabelText = 0x288; // FText
		constexpr auto bIsButton = 0x2a0; // bool
		constexpr auto Layout = 0x2a1; // ETextFlowDirection
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0x178; // float
	}

	namespace n_UFMODAsset { // : UObject
		constexpr auto AssetGuid = 0x28; // FGuid
	}

	namespace n_UVariant { // : UObject
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_ABP_ReplayController_C { // : ABP_BaseController_C
		constexpr auto UberGraphFrame = 0x9d0; // FPointerToUberGraphFrame
		constexpr auto ReplayControls = 0x9d8; // UW_ReplayControls_C*
		constexpr auto bRemoveReplayControls = 0x9e0; // bool
		constexpr auto bSetInitialPosition = 0x9e1; // bool
		constexpr auto bSprintHeld = 0x9e2; // bool
		constexpr auto bCrouchHeld = 0x9e3; // bool
		constexpr auto bFollowLocalPlayer = 0x9e4; // bool
		constexpr auto LocalPlayer = 0x9e8; // AReadyOrNotCharacter*
		constexpr auto DeltaSeconds = 0x9f0; // float
		constexpr auto ignoredActors = 0x9f8; // TArray<ABaseItem*>
		constexpr auto MouseRightPressed = 0xa08; // bool
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto paramName = 0xa0; // FName
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UW_WeaponWheel_RadialSelection_C { // : UW_RadialSelectionBase_C
		constexpr auto UberGraphFrame = 0x278; // FPointerToUberGraphFrame
		constexpr auto Anim_Expand = 0x280; // UWidgetAnimation*
		constexpr auto Item_Icon = 0x288; // UImage*
		constexpr auto MainArea = 0x290; // UVerticalBox*
		constexpr auto MainArea_Overlay = 0x298; // UOverlay*
		constexpr auto RootWidget = 0x2a0; // UHorizontalBox*
		constexpr auto Spacer_421 = 0x2a8; // USpacer*
		constexpr auto WeaponWheel_MagazineDisplay = 0x2b0; // UW_WeaponWheel_MagazineDisplay_C*
		constexpr auto Item = 0x2b8; // ABaseItem*
		constexpr auto ItemIconSize = 0x2c0; // float
		constexpr auto CategoryIndex = 0x2c4; // int32_t
		constexpr auto ItemCategory = 0x2c8; // FText
		constexpr auto Items = 0x2e0; // TArray<ABaseItem*>
		constexpr auto ExecutableItems = 0x2f0; // TArray<UWeaponWheelScript*>
		constexpr auto AllItems = 0x300; // TArray<UObject*>
		constexpr auto WheelSize = 0x310; // float
		constexpr auto MaxWheelSize = 0x314; // float
		constexpr auto Icons = 0x318; // TArray<UImage*>
		constexpr auto StackedItems = 0x328; // TArray<UImage*>
	}

	namespace n_UGeometryCollectionCache { // : UObject
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_ACoverFireVolume { // : AVolume
		constexpr auto FirePoints = 0x258; // TArray<AFirePointActor*>
		constexpr auto BlacklistedSuspects = 0x268; // TArray<ASuspectCharacter*>
		constexpr auto CachedSuspects = 0x278; // TArray<ASuspectCharacter*>
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionPerInstanceCustomData { // : UMaterialExpression
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UW_TabletHUD_C { // : UTabletDisplay
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Briefing_Menu = 0x270; // UOverlay*
		constexpr auto Control_1_Divider_Image = 0x278; // UImage*
		constexpr auto Debug = 0x280; // UW_DebugMenu_Tablet_C*
		constexpr auto Image = 0x288; // UImage*
		constexpr auto Image_439 = 0x290; // UImage*
		constexpr auto Map = 0x298; // UW_Map_C*
		constexpr auto MenuSwitcher = 0x2a0; // UWidgetSwitcher*
		constexpr auto Scoreboard = 0x2a8; // UW_Scoreboard_V2_C*
		constexpr auto Tab_Briefing = 0x2b0; // UW_Tablet_TabButton_C*
		constexpr auto Tab_Debug = 0x2b8; // UW_Tablet_TabButton_C*
		constexpr auto Tab_Map = 0x2c0; // UW_Tablet_TabButton_C*
		constexpr auto Tab_Scoreboard = 0x2c8; // UW_Tablet_TabButton_C*
		constexpr auto TabletGraphic_Image = 0x2d0; // UImage*
		constexpr auto TabMenuBorder_Image = 0x2d8; // UImage*
		constexpr auto TabMenus = 0x2e0; // UHorizontalBox*
		constexpr auto SniperText = 0x2e8; // FText
		constexpr auto AlphaText = 0x300; // FText
		constexpr auto OfficerText = 0x318; // FText
		constexpr auto BetaText = 0x330; // FText
		constexpr auto CharlieText = 0x348; // FText
		constexpr auto DeltaText = 0x360; // FText
		constexpr auto FoxtrotText = 0x378; // FText
		constexpr auto AlphaPivot = 0x390; // bool
		constexpr auto bShowDebugTabMenu = 0x391; // bool
		constexpr auto MenuIndex = 0x394; // int32_t
	}

	namespace n_UAnimNotify_ChangeBodySocket { // : UAnimNotify
		constexpr auto ItemCategory = 0x38; // EItemCategory
		constexpr auto Socket = 0x3c; // FName
	}

	namespace n_AHighgroundVolume { // : AActor
		constexpr auto AudioDebounce = 0x228; // float
		constexpr auto Bounds = 0x230; // UBoxComponent*
		constexpr auto AudioComp = 0x238; // UAudioComponent*
		constexpr auto bWatching = 0x240; // bool
		constexpr auto SierraDesignation = 0x244; // int32_t
		constexpr auto VolumeLabel = 0x248; // FName
		constexpr auto ContactEnteredVolumeAudio = 0x250; // TArray<USoundBase*>
		constexpr auto ContactExitedVolumeAudio = 0x260; // TArray<USoundBase*>
		constexpr auto SwatEnteredVolumeAudio = 0x270; // TArray<USoundBase*>
		constexpr auto SwatExitedVolumeAudio = 0x280; // TArray<USoundBase*>
	}

	namespace n_UReadyOrNotCoverData { // : UDataAsset
		constexpr auto CoverData = 0x30; // FCoverDataMain
	}

	namespace n_UZeuzMatchmakingWidget { // : UUserWidget
		constexpr auto MatchmakingStatus = 0x2a8; // EMatchmakingStatus
		constexpr auto ZeuzMatchMakingStatus = 0x2b0; // FZeuzMatchMakingStatus
	}

	namespace n_UMaterialExpressionShaderStageSwitch { // : UMaterialExpression
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0x90; // AActor*
		constexpr auto GoalLocation = 0x98; // FVector
		constexpr auto AcceptableRadius = 0xa4; // float
		constexpr auto FilterClass = 0xa8; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb0; // char : 1
		constexpr auto bFinishOnOverlap = 0xb0; // char : 1
		constexpr auto bUsePathfinding = 0xb0; // char : 1
		constexpr auto bAllowPartialPath = 0xb0; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb0; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb0; // char : 1
	}

	namespace n_UMovieScenePropertySystem { // : UMovieSceneEntitySystem
		constexpr auto InstantiatorSystem = 0x50; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_APlayerViewActor { // : AActor
		constexpr auto bShouldCaptureScene = 0x220; // char : 1
		constexpr auto SceneComponent = 0x228; // USceneComponent*
		constexpr auto CameraCaptureComponent = 0x230; // USceneCaptureComponent2D*
		constexpr auto SwitchViewEffects = 0x238; // FPostProcessEffect
		constexpr auto SwitchViewEvent = 0x260; // UFMODEvent*
		constexpr auto DeathViewTime = 0x268; // float
		constexpr auto DeathViewEvent = 0x270; // UFMODEvent*
		constexpr auto CloseViewEvent = 0x278; // UFMODEvent*
		constexpr auto CameraRenderTarget = 0x280; // UTextureRenderTarget2D*
		constexpr auto OwningPlayerCharacter = 0x288; // APlayerCharacter*
		constexpr auto ViewCharacter = 0x290; // AReadyOrNotCharacter*
		constexpr auto TargetLocation = 0x298; // FVector
		constexpr auto TargetRotation = 0x2a4; // FRotator
		constexpr auto MI_PostProcess_Greyscale = 0x2b0; // UMaterialInstance*
		constexpr auto MI_PostProcess_Bump = 0x2b8; // UMaterialInstance*
		constexpr auto MI_PostProcess_Glitch = 0x2c0; // UMaterialInstance*
		constexpr auto bDeathEffectsApplied = 0x2c8; // char : 1
		constexpr auto bSwitchViewEffectsApplied = 0x2c8; // char : 1
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto RowsDisabled = 0x58; // TArray<int32_t>
		constexpr auto EvaluationFieldGuid = 0x6c; // FGuid
		constexpr auto EvaluationField = 0x80; // FMovieSceneTrackEvaluationField
	}

	namespace n_ABaseMagazineWeapon { // : ABaseWeapon
		constexpr auto MuzzleFlashParticleComponent = 0xd68; // UParticleSystemComponent*
		constexpr auto MuzzleSmokeParticleComponent = 0xd70; // UParticleSystemComponent*
		constexpr auto HeatSmokeParticleComponent = 0xd78; // UParticleSystemComponent*
		constexpr auto CartridgeText = 0xd80; // FText
		constexpr auto RPMText = 0xd98; // FText
		constexpr auto BarrelLengthText = 0xdb0; // FText
		constexpr auto CapacityText = 0xdc8; // FText
		constexpr auto MuzzleVelocityText = 0xde0; // FText
		constexpr auto SupressionStrength = 0xdf8; // float
		constexpr auto SupressionCameraShake = 0xe00; // UMatineeCameraShake*
		constexpr auto bSpawnNoTrail = 0xe08; // bool
		constexpr auto BulletTracers = 0xe10; // TArray<ABulletTracer*>
		constexpr auto SpawnedShells = 0xe20; // TArray<ABaseShell*>
		constexpr auto OnWeaponFire = 0xe30; // FMulticastInlineDelegate
		constexpr auto OnWeaponDryFire = 0xe40; // FMulticastInlineDelegate
		constexpr auto FiringAudioComp = 0xe70; // UFMODAudioComponent*
		constexpr auto bReloading = 0xe81; // bool
		constexpr auto bCancelReloading = 0xe82; // bool
		constexpr auto MuzzleFlashParticleSocket = 0xe8c; // FName
		constexpr auto MuzzleSmokeParticleSocket = 0xe94; // FName
		constexpr auto GunTails_Handle = 0xea0; // FTimerHandle
		constexpr auto bShowParticlesWhenFiring = 0xea8; // bool
		constexpr auto ArmorPiercingDamageType = 0xeb0; // UDamageType*
		constexpr auto ProjectileAttachedParticle = 0xeb8; // UParticleSystem*
		constexpr auto bDrawBlood = 0xec0; // bool
		constexpr auto FakeBulletProjectile = 0xec8; // ABulletProjectile*
		constexpr auto BulletProjectile = 0xed0; // ABulletProjectile*
		constexpr auto ArmorPiercingBulletProjectile = 0xed8; // ABulletProjectile*
		constexpr auto PenetrationDistance = 0xee0; // float
		constexpr auto BreachShell = 0xee8; // UStaticMesh*
		constexpr auto BeanbagShell = 0xef0; // UStaticMesh*
		constexpr auto BuckShotShell = 0xef8; // UStaticMesh*
		constexpr auto SlugShell = 0xf00; // UStaticMesh*
		constexpr auto MagazineSocket = 0xf08; // FName
		constexpr auto Magazines = 0xf10; // TArray<float>
		constexpr auto MagIndex = 0xf20; // int32_t
		constexpr auto NextMagIndex = 0xf24; // int32_t
		constexpr auto bBulletInChamberOnReload = 0xf28; // bool
		constexpr auto bTacReloadWhenEmpty = 0xf29; // bool
		constexpr auto AmmoMax = 0xf2c; // float
		constexpr auto LockIntegrityMinDamage = 0xf30; // float
		constexpr auto LockIntegrityMaxDamage = 0xf34; // float
		constexpr auto bLoseMagOnReload = 0xf38; // bool
		constexpr auto bSpawnShell = 0xf39; // bool
		constexpr auto SpawnShellDelay = 0xf3c; // float
		constexpr auto ShellBounceFMODAudio = 0xf40; // UFMODEvent*
		constexpr auto ImpactDecalScale = 0xf5c; // float
		constexpr auto ImpactEffects_Instance = 0xf60; // AImpactEffect*
		constexpr auto SpawnedImpactEffects = 0xf68; // TArray<AImpactEffect*>
		constexpr auto Magazine_HandSocket = 0xf78; // FName
		constexpr auto AmmoType = 0xf80; // EAmmoType
		constexpr auto CompatibleAmmoTypes = 0xf88; // TArray<EAmmoType>
		constexpr auto MoraleHighReloadTableOverride = 0xfa0; // FString
		constexpr auto MoraleMediumReloadTableOverride = 0xfb0; // FString
		constexpr auto MoraleLowReloadTableOverride = 0xfc0; // FString
		constexpr auto LastSpawnedProjectile = 0xfe8; // ABulletProjectile*
		constexpr auto Mag_01_Socket = 0xff8; // FName
		constexpr auto Mag_01_Bullets_Socket = 0x1000; // FName
		constexpr auto Mag_01_Extra_Socket = 0x1008; // FName
		constexpr auto Mag_01_Comp = 0x1010; // UStaticMeshComponent*
		constexpr auto Mag_01_Comp_TPOnly = 0x1018; // UStaticMeshComponent*
		constexpr auto bShowBulletsWhenEmpty = 0x1020; // bool
		constexpr auto Mag_01_Bullets_Comp = 0x1028; // UStaticMeshComponent*
		constexpr auto Mag_01_Extra_Comp = 0x1030; // UStaticMeshComponent*
		constexpr auto Mag_ReloadInterpFix_Comp = 0x1038; // UStaticMeshComponent*
		constexpr auto Mag_01_Static = 0x1078; // UStaticMesh*
		constexpr auto Mag_01_FMJ_Bullets_Static = 0x1080; // UStaticMesh*
		constexpr auto Mag_01_HP_Bullets_Static = 0x1088; // UStaticMesh*
		constexpr auto Mag_01_Extra_Static = 0x1090; // UStaticMesh*
		constexpr auto Mag_02_Socket = 0x1098; // FName
		constexpr auto Mag_02_Bullets_Socket = 0x10a0; // FName
		constexpr auto Mag_02_Extra_Socket = 0x10a8; // FName
		constexpr auto Mag_02_Comp = 0x10b0; // UStaticMeshComponent*
		constexpr auto Mag_02_Bullets_Comp = 0x10b8; // UStaticMeshComponent*
		constexpr auto Mag_02_Extra_Comp = 0x10c0; // UStaticMeshComponent*
		constexpr auto Mag_02_Static = 0x10c8; // UStaticMesh*
		constexpr auto Mag_02_FMJ_Bullets_Static = 0x10d0; // UStaticMesh*
		constexpr auto Mag_02_HP_Bullets_Static = 0x10d8; // UStaticMesh*
		constexpr auto Mag_02_Extra_Static = 0x10e0; // UStaticMesh*
		constexpr auto bUseFireLoopAnims = 0x10e8; // bool
		constexpr auto MagCheckIcon_Empty = 0x10f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagCheckIcon_NearEmpty = 0x1118; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagCheckIcon_NearFull = 0x1140; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagCheckIcon_Full = 0x1168; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagPickup_Frame0 = 0x1190; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagPickup_Frame1 = 0x11b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto MagPickup_Frame2 = 0x11e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DroppedMagazineHitEvent = 0x1208; // UFMODEvent*
		constexpr auto HeatPerShot = 0x1210; // float
		constexpr auto HeatThreshold = 0x1214; // float
		constexpr auto HeatMax = 0x1218; // float
		constexpr auto HeatDissipation = 0x121c; // float
		constexpr auto CurrentHeat = 0x1220; // float
		constexpr auto HeatMinimumTime = 0x1224; // float
		constexpr auto HeatTime = 0x1228; // float
		constexpr auto bHeatEffectPlayed = 0x122c; // bool
		constexpr auto MagazineWeightFull = 0x1230; // float
		constexpr auto MagazineWeightEmpty = 0x1234; // float
		constexpr auto MagazineCountDefault = 0x1238; // int32_t
		constexpr auto MagazineCountMin = 0x123c; // int32_t
		constexpr auto MagazineCountMax = 0x1240; // int32_t
		constexpr auto MagazineLabel = 0x1244; // FName
		constexpr auto bHasBeenDisassembled = 0x124c; // bool
		constexpr auto ShootingYellBias = 0x1250; // float
		constexpr auto bTwoHandedPistol = 0x1254; // bool
		constexpr auto bHeavyRifle = 0x1255; // bool
		constexpr auto RagdollImpulseMultiplier = 0x1258; // float
	}

	namespace n_UW_PauseMenu_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto AdminPasswordBox = 0x268; // UBorder*
		constexpr auto BackgroundCanvas = 0x270; // UCanvasPanel*
		constexpr auto btn_Admin = 0x278; // UW_Button_C*
		constexpr auto btn_Bug = 0x280; // UW_Button_C*
		constexpr auto btn_ConfirmAdminPassword = 0x288; // UW_Button_C*
		constexpr auto btn_Invite = 0x290; // UW_Button_C*
		constexpr auto btn_Lobby = 0x298; // UW_Button_C*
		constexpr auto btn_Options = 0x2a0; // UW_Button_C*
		constexpr auto btn_Quit = 0x2a8; // UW_Button_C*
		constexpr auto btn_Replay = 0x2b0; // UW_Button_C*
		constexpr auto btn_Resume = 0x2b8; // UW_Button_C*
		constexpr auto btn_Vote = 0x2c0; // UW_Button_C*
		constexpr auto ButtonDescription = 0x2c8; // UTextBlock*
		constexpr auto EditableText_1 = 0x2d0; // UEditableText*
		constexpr auto EscapeMenu = 0x2d8; // USizeBox*
		constexpr auto ObjectivesBox = 0x2e0; // USizeBox*
		constexpr auto PublicLobbyWarning = 0x2e8; // UTextBlock*
		constexpr auto txt_Version = 0x2f0; // UW_Text_C*
		constexpr auto W_Briefing_Objectives = 0x2f8; // UW_Briefing_Objectives_C*
		constexpr auto WasShowingMouse = 0x300; // bool
		constexpr auto SettingsMenu = 0x308; // UW_SettingsMenu_C*
		constexpr auto CallVoteMenu = 0x310; // UObject*
	}

	namespace n_ADoor { // : ADoorwayWithoutDoor
		constexpr auto DoorBlockerActor = 0x268; // AActor*
		constexpr auto DoorBlockerActorInst = 0x270; // AActor*
		constexpr auto CurrentTeamBreachActivity = 0x2a0; // UTeamBreachAndClearActivity*
		constexpr auto OnDoorOpened = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnSubDoorOpened = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnDoorClosed = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnDoorBroken = 0x2d8; // FMulticastInlineDelegate
		constexpr auto FrontThreatAwarenessPoints = 0x2e8; // TArray<AThreatAwarenessActor*>
		constexpr auto BackThreatAwarenessPoints = 0x2f8; // TArray<AThreatAwarenessActor*>
		constexpr auto FrontLeftStackUpPoints = 0x308; // TArray<AStackUpActor*>
		constexpr auto FrontRightStackUpPoints = 0x318; // TArray<AStackUpActor*>
		constexpr auto BackLeftStackUpPoints = 0x328; // TArray<AStackUpActor*>
		constexpr auto BackRightStackUpPoints = 0x338; // TArray<AStackUpActor*>
		constexpr auto RedTeamFrontClearPoints = 0x348; // TArray<AThreatAwarenessActor*>
		constexpr auto BlueTeamFrontClearPoints = 0x358; // TArray<AThreatAwarenessActor*>
		constexpr auto RedTeamBackClearPoints = 0x368; // TArray<AThreatAwarenessActor*>
		constexpr auto BlueTeamBackClearPoints = 0x378; // TArray<AThreatAwarenessActor*>
		constexpr auto bDoorJammed = 0x388; // char : 1
		constexpr auto DestroyedChunkIdxs = 0x390; // TArray<int32_t>
		constexpr auto StackupGenType = 0x3a0; // EStackupGenType
		constexpr auto StackupGenArea = 0x3a1; // EStackupGenArea
		constexpr auto bShouldInvertTrap = 0x3ac; // bool
		constexpr auto RootScene = 0x3c0; // USceneComponent*
		constexpr auto DoorStatic = 0x3c8; // UStaticMeshComponent*
		constexpr auto DoorHandleFront = 0x3d0; // UStaticMeshComponent*
		constexpr auto DoorHandleBack = 0x3d8; // UStaticMeshComponent*
		constexpr auto FrontMirrorPoint = 0x3e0; // UMirrorPortalComponent*
		constexpr auto BackMirrorPoint = 0x3e8; // UMirrorPortalComponent*
		constexpr auto DoorChunk0 = 0x3f0; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk1 = 0x3f8; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk2 = 0x400; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk3 = 0x408; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk4 = 0x410; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk5 = 0x418; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk6 = 0x420; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk7 = 0x428; // UDestructibleDoorChunkComponent*
		constexpr auto DoorChunk8 = 0x430; // UDestructibleDoorChunkComponent*
		constexpr auto DoorOpenInteractableComp = 0x438; // UInteractableComponent*
		constexpr auto DoorSublinkOpenInteractableComp = 0x440; // UInteractableComponent*
		constexpr auto DoorSublinkPushInteractableComp = 0x448; // UInteractableComponent*
		constexpr auto DoorPushInteractableComp = 0x450; // UInteractableComponent*
		constexpr auto DoorKickInteractableComp = 0x458; // UInteractableComponent*
		constexpr auto DoorSublinkKickInteractableComp = 0x460; // UInteractableComponent*
		constexpr auto LockpickInteractableComponent = 0x468; // UInteractableComponent*
		constexpr auto C2InteractableComponent = 0x470; // UInteractableComponent*
		constexpr auto WedgeInteractableComponent = 0x478; // UInteractableComponent*
		constexpr auto OptiwandInteractableComponent = 0x480; // UInteractableComponent*
		constexpr auto BSGInteractableComponent = 0x488; // UInteractableComponent*
		constexpr auto BSGInteractableComponent_3 = 0x490; // UInteractableComponent*
		constexpr auto DoorRamInteractableComponent = 0x498; // UInteractableComponent*
		constexpr auto FMODAudioPropagationComp = 0x4a0; // UFMODAudioPropagationComponent*
		constexpr auto NavLinkProxy = 0x4a8; // ANavLinkProxy*
		constexpr auto LockpickArea = 0x4b0; // USceneComponent*
		constexpr auto DoorArea = 0x4b8; // USceneComponent*
		constexpr auto C2Area = 0x4c0; // USceneComponent*
		constexpr auto BSGArea = 0x4c8; // USceneComponent*
		constexpr auto MirrorgunArea = 0x4d0; // USceneComponent*
		constexpr auto WedgeArea = 0x4d8; // USceneComponent*
		constexpr auto BatteringRamArea = 0x4e0; // USceneComponent*
		constexpr auto bHasEverBeenOpenedBySwat = 0x4e8; // char : 1
		constexpr auto bEnabled = 0x4e8; // char : 1
		constexpr auto TypeOfDoor = 0x4f0; // FDataTableRowHandle
		constexpr auto TypeOfTrap = 0x500; // FDataTableRowHandle
		constexpr auto TrapSetup = 0x510; // ETrapSetup
		constexpr auto bNoSpawnTrap = 0x511; // char : 1
		constexpr auto DoorName = 0x514; // FName
		constexpr auto bOneWay = 0x51c; // char : 1
		constexpr auto bCanOpenFromOppositeSide = 0x51c; // char : 1
		constexpr auto bCanPlayerInteract = 0x51c; // char : 1
		constexpr auto bCanMirrorGun = 0x51c; // char : 1
		constexpr auto DoorKillDistance = 0x520; // TMap<EDoorDamageType, float>
		constexpr auto DoorStunDistance = 0x570; // TMap<EDoorDamageType, float>
		constexpr auto MaxOpenClose = 0x5c0; // float
		constexpr auto OpenThreshold = 0x5c4; // float
		constexpr auto CloseThreshold = 0x5c8; // float
		constexpr auto IncrementAngle = 0x5cc; // float
		constexpr auto MultitoolUseTime = 0x5d0; // float
		constexpr auto GrenadeDamageToBreakDoor = 0x5d4; // float
		constexpr auto MoveAndClearRequiredAmount = 0x5d8; // float
		constexpr auto PhysicalPushAmount = 0x5dc; // float
		constexpr auto bCanIssueOrdersOnFrontSide = 0x5e0; // bool
		constexpr auto bCanIssueOrdersOnBackSide = 0x5e1; // bool
		constexpr auto PingData = 0x5e8; // FPingData
		constexpr auto DriveSubDoor = 0x690; // ADoor*
		constexpr auto MatchOpenCloseDoor = 0x698; // ADoor*
		constexpr auto bMainSubDoor = 0x6a0; // char : 1
		constexpr auto bKickAlwaysFails = 0x6a0; // char : 1
		constexpr auto DoorKickSuccessChance = 0x6a4; // float
		constexpr auto NumSuccessfulKicksToBreakDown = 0x6a8; // int32_t
		constexpr auto C2ExplosionDecal = 0x6b0; // UMaterialInterface*
		constexpr auto bDisableStackUpOnFront = 0x6b8; // bool
		constexpr auto bDisableStackUpOnBack = 0x6b9; // bool
		constexpr auto LockedChance = 0x6bc; // float
		constexpr auto DoorPushCurve = 0x6c0; // UCurveFloat*
		constexpr auto DoorOpenCurve = 0x6c8; // UCurveFloat*
		constexpr auto DoorCloseCurve = 0x6d0; // UCurveFloat*
		constexpr auto DoorKickSuccessCurve = 0x6d8; // UCurveFloat*
		constexpr auto DoorKickFailCurve = 0x6e0; // UCurveFloat*
		constexpr auto DoorLockedCurve = 0x6e8; // UCurveFloat*
		constexpr auto DoorRamCurve = 0x6f0; // UCurveFloat*
		constexpr auto DoorExplodeCurve = 0x6f8; // UCurveFloat*
		constexpr auto DoorBreachCurve = 0x700; // UCurveFloat*
		constexpr auto DoorHandleOpenCurve = 0x708; // UCurveFloat*
		constexpr auto DoorHandlePushCurve = 0x710; // UCurveFloat*
		constexpr auto DoorHandleLockedCurve = 0x718; // UCurveFloat*
		constexpr auto PlacedC2 = 0x720; // APlacedC2Explosive*
		constexpr auto ChunkComponents = 0x728; // TArray<UDestructibleDoorChunkComponent*>
		constexpr auto bPendingSubDoorKick = 0x738; // char : 1
		constexpr auto LastDoorUser = 0x740; // AReadyOrNotCharacter*
		constexpr auto LastDoorDamage = 0x748; // EDoorDamageType
		constexpr auto AttachedTrap = 0x750; // ATrapActorAttachedToDoor*
		constexpr auto AttachedWedge = 0x758; // ADoorJam*
		constexpr auto OpenCloseAmount = 0x760; // float
		constexpr auto DoorHandlePitchAmount = 0x764; // float
		constexpr auto bC2Placed = 0x768; // char : 1
		constexpr auto bSWATKnowsLockState = 0x768; // char : 1
		constexpr auto bSuspectKnowsLockState = 0x768; // char : 1
		constexpr auto bSWATKnowsTrapState = 0x768; // char : 1
		constexpr auto bSuspectKnowsTrapState = 0x768; // char : 1
		constexpr auto Blocked = 0x768; // char : 1
		constexpr auto bDoorBroken = 0x768; // char : 1
		constexpr auto bTrapInFront = 0x768; // char : 1
		constexpr auto bClientReset = 0x769; // char : 1
		constexpr auto bDoorHandlesBroken = 0x769; // char : 1
		constexpr auto CharactersOverlappingDoor = 0x1028; // TArray<AReadyOrNotCharacter*>
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMagicLeapLightingTrackingComponent { // : UActorComponent
		constexpr auto UseGlobalAmbience = 0xb0; // bool
		constexpr auto UseColorTemp = 0xb1; // bool
	}

	namespace n_USoundfieldSubmix { // : USoundSubmixWithParentBase
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_ATaser { // : ABaseMagazineWeapon
		constexpr auto TaserLightDynamicMaterial = 0x1260; // UMaterialInstanceDynamic*
		constexpr auto ProjectileHitResult = 0x1268; // FHitResult
		constexpr auto StartingCartridges = 0x12f0; // int32_t
		constexpr auto SweepForReactionVolumeSize = 0x12f4; // float
		constexpr auto CartridgeWeight = 0x12f8; // float
		constexpr auto bFiredCartridge = 0x12fc; // bool
		constexpr auto bDetachedProbes = 0x12fd; // bool
		constexpr auto BlinkTime = 0x1300; // float
		constexpr auto bBlinkState = 0x1304; // bool
		constexpr auto MaxBatteryLevel = 0x1308; // float
		constexpr auto MinCableLength = 0x130c; // float
		constexpr auto MaxCableLength = 0x1310; // float
		constexpr auto CableGainRate = 0x1314; // float
		constexpr auto ProbeMaxDistance = 0x1318; // float
		constexpr auto DetachSoundEffect = 0x1320; // USoundBase*
		constexpr auto DetachSoundEffectFMOD = 0x1328; // UFMODEvent*
		constexpr auto PingStunDuration = 0x1330; // float
		constexpr auto StunDurationRemaining = 0x1334; // float
		constexpr auto bStartedStun = 0x1338; // bool
		constexpr auto CrackleSoundEffect = 0x1340; // USoundBase*
		constexpr auto CrackleSoundEffectFMOD = 0x1348; // UFMODEvent*
		constexpr auto TaserHitEffectFMOD = 0x1350; // UFMODEvent*
		constexpr auto LeftProjectile = 0x1358; // ABulletProjectile*
		constexpr auto RightProjectile = 0x1360; // ABulletProjectile*
		constexpr auto TaserImpactParticle_Start = 0x1370; // UParticleSystem*
		constexpr auto TaserImpactParticleComp_Start = 0x1378; // UParticleSystemComponent*
		constexpr auto TaserImpactParticle_Loop = 0x1380; // UParticleSystem*
		constexpr auto TaserImpactParticleComp_LoopLeft = 0x1388; // UParticleSystemComponent*
		constexpr auto TaserImpactParticleComp_LoopRight = 0x1390; // UParticleSystemComponent*
		constexpr auto DoorBlowOutForce = 0x1424; // float
		constexpr auto LeftCableAttachActor = 0x1428; // AActor*
		constexpr auto RightCableAttachActor = 0x1430; // AActor*
		constexpr auto TaserFireLoop1P = 0x1438; // UAnimMontage*
		constexpr auto TaserFireLoop3P = 0x1440; // UAnimMontage*
		constexpr auto TaserFireLoopCameraShake = 0x1448; // UMatineeCameraShake*
		constexpr auto TopCable = 0x1458; // UCableComponent*
		constexpr auto BottomCable = 0x1460; // UCableComponent*
		constexpr auto LeftDoor = 0x1468; // USkeletalMeshComponent*
		constexpr auto RightDoor = 0x1470; // USkeletalMeshComponent*
		constexpr auto CrackleSoundGenerator = 0x1478; // UAudioComponent*
		constexpr auto CrackleSoundGeneratorFMOD = 0x1480; // UFMODAudioComponent*
		constexpr auto LaserAttachmentClass = 0x1488; // ULaserAttachment*
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_ULuminARLightEstimate { // : UARBasicLightEstimate
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UARBasicLightEstimate { // : UARLightEstimate
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UW_MagCheckOverview_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_OnMagCheck = 0x268; // UWidgetAnimation*
		constexpr auto Mags_Container = 0x270; // UHorizontalBox*
		constexpr auto MagCheckStatusWidgets = 0x278; // TArray<UW_MagCheck_MagStatus_C*>
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UTOCData { // : UObject
		constexpr auto TOCLine = 0x28; // FString
		constexpr auto bIsNetworked = 0x38; // bool
		constexpr auto QueuePriority = 0x39; // ETOCPriority
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UEditableStaticMeshAdapter { // : UEditableMeshAdapter
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UW_WeaponWheel_MagazineDisplay_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Container_MagSlot = 0x268; // UVerticalBox*
		constexpr auto Mags = 0x270; // TArray<UImage*>
		constexpr auto MagazineWeapon = 0x280; // ABaseMagazineWeapon*
		constexpr auto TotalMags = 0x288; // int32_t
		constexpr auto MaxAmmo = 0x28c; // float
		constexpr auto EmptyMags = 0x290; // int32_t
		constexpr auto IconSize = 0x294; // float
		constexpr auto MagSlots = 0x298; // TArray<UW_WeaponWheel_MagazineSlot_C*>
		constexpr auto bOnlyShowOneSlot = 0x2a8; // bool
		constexpr auto MaxMagsPerSlot = 0x2ac; // int32_t
		constexpr auto SlotIndexToMags = 0x2b0; // TMap<int32_t, int32_t>
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UCharacterHealthComponent { // : UHealthComponent
		constexpr auto OnLimbFullHealth = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLimbLowHealth = 0x118; // FMulticastInlineDelegate
		constexpr auto OnLimbNoHealth = 0x128; // FMulticastInlineDelegate
		constexpr auto OnLimbBroken = 0x138; // FMulticastInlineDelegate
		constexpr auto OnLimbFullTickets = 0x148; // FMulticastInlineDelegate
		constexpr auto OnLimbNoTickets = 0x158; // FMulticastInlineDelegate
		constexpr auto HealthStatus = 0x168; // EPlayerHealthStatus
		constexpr auto RightLeg = 0x16c; // FLimbHealthData
		constexpr auto LeftLeg = 0x1a0; // FLimbHealthData
		constexpr auto RightArm = 0x1d4; // FLimbHealthData
		constexpr auto LeftArm = 0x208; // FLimbHealthData
		constexpr auto Head = 0x23c; // FLimbHealthData
		constexpr auto bUnlimitedRevives = 0x270; // char : 1
		constexpr auto MaxRevives = 0x274; // int32_t
		constexpr auto ReviveTime = 0x278; // float
		constexpr auto ReviveTimeDecrement = 0x27c; // float
		constexpr auto ReviveOperatingTime = 0x280; // float
		constexpr auto MaxReviveHealth = 0x284; // float
		constexpr auto RemainingRevives = 0x288; // int32_t
		constexpr auto RemainingReviveTime = 0x28c; // float
		constexpr auto RemainingReviveHealth = 0x290; // float
	}

	namespace n_ATutorialGS { // : ACoopGS
		constexpr auto CurrentTutorialData = 0x7d8; // FTutorialMissionData
		constexpr auto TutorialMenuLevel = 0x918; // TSoftObjectPtr<UWorld>
		constexpr auto TutorialMenuStreamedLevel = 0x940; // ULevelStreaming*
		constexpr auto CurrentTutorialStreamedLevel = 0x948; // ULevelStreaming*
		constexpr auto ShootingRangeLevel = 0x950; // TSoftObjectPtr<UWorld>
		constexpr auto KillHouseLevel = 0x978; // TSoftObjectPtr<UWorld>
		constexpr auto BasicControlsLevel = 0x9a0; // TSoftObjectPtr<UWorld>
		constexpr auto MirrorgunLevel = 0x9c8; // TSoftObjectPtr<UWorld>
		constexpr auto StackUpLevel = 0x9f0; // TSoftObjectPtr<UWorld>
		constexpr auto ArrestLevel = 0xa18; // TSoftObjectPtr<UWorld>
		constexpr auto GrenadesLevel = 0xa40; // TSoftObjectPtr<UWorld>
		constexpr auto MovementLevel = 0xa68; // TSoftObjectPtr<UWorld>
		constexpr auto bFinishedUsingTutorialMenu = 0xa92; // bool
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ABombActor { // : AActor
		constexpr auto StaticMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto InteractableComponent = 0x238; // UInteractableComponent*
		constexpr auto ExplosionParticleComponent = 0x240; // UParticleSystemComponent*
		constexpr auto MultitoolUseTime = 0x248; // float
		constexpr auto BombState = 0x24c; // EBombState
		constexpr auto TimeUntilExplodes = 0x250; // float
		constexpr auto BombTickEvent = 0x258; // UFMODEvent*
		constexpr auto BombExplodeEvent = 0x260; // UFMODEvent*
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionChannelMaskParameter { // : UMaterialExpressionVectorParameter
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_URoNAnimInstance_HumanBase { // : UAnimInstance
		constexpr auto MoveStyleComponent = 0x2b8; // URoNMoveStyleComponent*
		constexpr auto bIsStrafing = 0x2d4; // bool
		constexpr auto Slot0 = 0x2d8; // FRoNStyleSlotData
		constexpr auto Slot1 = 0x518; // FRoNStyleSlotData
		constexpr auto Slot2 = 0x758; // FRoNStyleSlotData
		constexpr auto Slot3 = 0x998; // FRoNStyleSlotData
		constexpr auto Slot4 = 0xbd8; // FRoNStyleSlotData
		constexpr auto Slot5 = 0xe18; // FRoNStyleSlotData
		constexpr auto Slot6 = 0x1058; // FRoNStyleSlotData
		constexpr auto IdleData_Default = 0x1298; // FRoNStyleIdleData
		constexpr auto TurnData_Default = 0x12a8; // FRoNStyleTurnData
		constexpr auto TransitionData_Default = 0x12f0; // FRoNGaitTransitionData
		constexpr auto LocomotionData_Default = 0x1410; // FRoNGaitLocomotionData
		constexpr auto SlotBlendTime = 0x14d0; // float
		constexpr auto AimOffsetAlpha = 0x14d4; // float
		constexpr auto StrafeBlendTime = 0x14d8; // float
		constexpr auto SlopeWarpingAlpha = 0x14dc; // float
		constexpr auto bIsMoveStyleSlotBActive = 0x14e0; // bool
		constexpr auto SlotIdx = 0x14e4; // int32_t
		constexpr auto Lean = 0x14f4; // float
		constexpr auto LeanFactor = 0x14f8; // float
		constexpr auto LeanInterpSpeed = 0x14fc; // float
		constexpr auto AdjustedPlayrate = 0x1500; // float
		constexpr auto PlayrateClampMax = 0x1504; // float
		constexpr auto CurrentIdleIndex = 0x1508; // int32_t
		constexpr auto CurrentStrafeDirection = 0x150c; // EStrafeDirection
		constexpr auto StrafeDirectionAngle = 0x1514; // float
		constexpr auto AimOffsetInterpolated = 0x1518; // FVector2D
		constexpr auto bIsKnockedOut = 0x1520; // bool
		constexpr auto bFinishedKnockout = 0x1521; // bool
		constexpr auto bIsDead = 0x1522; // bool
		constexpr auto DeathPose = 0x1528; // FPoseSnapshot
		constexpr auto WorldBuildingAnimState = 0x1560; // FWorldBuildingAnimState
		constexpr auto CurWeaponType = 0x1580; // EAnimWeaponType
		constexpr auto bIsArrested = 0x1581; // bool
		constexpr auto bSurrendered = 0x1582; // bool
		constexpr auto bIsGetUpPlaying = 0x1583; // bool
		constexpr auto bEnableIKProcess = 0x1585; // bool
		constexpr auto bIsFemale = 0x1586; // bool
		constexpr auto bIsUnarmed = 0x1587; // bool
		constexpr auto bIsSWAT = 0x1588; // bool
		constexpr auto LeftArmIKAlpha = 0x158c; // float
		constexpr auto RightArmIKAlpha = 0x1590; // float
		constexpr auto ArmsOnlySlotAlpha = 0x1594; // float
		constexpr auto LeftArmOnlySlotAlpha = 0x1598; // float
		constexpr auto HandAdditiveLockOverride = 0x159c; // float
		constexpr auto bWeaponDown = 0x15a0; // bool
		constexpr auto bIsPistolAndWeaponDown = 0x15a1; // bool
		constexpr auto bIsPistol = 0x15a2; // bool
		constexpr auto Add_Lowered_Override = 0x15a8; // UAnimSequenceBase*
		constexpr auto Add_Shouldered_Override = 0x15b0; // UAnimSequenceBase*
		constexpr auto bIsReloading = 0x15b8; // bool
		constexpr auto FinalAimOffsetAlpha = 0x15bc; // float
		constexpr auto bAnyMontageIsActive = 0x15c0; // bool
		constexpr auto bFullBodyMontagePlaying = 0x15c1; // bool
		constexpr auto bUpperBodyMontagePlaying = 0x15c2; // bool
		constexpr auto bInteractionMontagePlaying = 0x15c3; // bool
		constexpr auto bFullOrInteractionMontagePlaying = 0x15c4; // bool
		constexpr auto CurOverrideRule = 0x15c5; // EItemOverrideRule
		constexpr auto bIsLoweredSet = 0x15c6; // bool
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x450; // FColor
		constexpr auto ArrowSize = 0x454; // float
		constexpr auto ArrowLength = 0x458; // float
		constexpr auto ScreenSize = 0x45c; // float
		constexpr auto bIsScreenSizeScaled = 0x460; // char : 1
		constexpr auto bTreatAsASprite = 0x460; // char : 1
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UGizmoUniformScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UHesitationBarComponent { // : UWidgetComponent
		constexpr auto GlobalZoneTimeBoost = 0x5a0; // float
		constexpr auto GlobalActionUseCount = 0x5a4; // int32_t
		constexpr auto FillRate = 0x5a8; // float
		constexpr auto BoostTargetFillPercentage = 0x5ac; // float
		constexpr auto PausedFillPercentage = 0x5b0; // float
		constexpr auto FillPercentage = 0x5b4; // float
		constexpr auto bShowBar = 0x5b8; // char : 1
		constexpr auto bPauseHesitation = 0x5b8; // char : 1
		constexpr auto bHesitationSuccess = 0x5b8; // char : 1
		constexpr auto bHesitationFakeSuccess = 0x5b8; // char : 1
		constexpr auto bStartingSurrenderExit = 0x5b8; // char : 1
		constexpr auto HesitationBarWidget = 0x718; // UHesitationBarWidget*
		constexpr auto HesitationBarWidgetClass = 0x720; // UUserWidget*
		constexpr auto LastLookedAtBy = 0x728; // APlayerCharacter*
		constexpr auto HesitationTweakables_Replicated = 0x738; // FHesitationData
	}

	namespace n_UW_ReplaySystem_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto CircularThrobber_599 = 0x268; // UCircularThrobber*
		constexpr auto CloseButton = 0x270; // UButton*
		constexpr auto EditableText_306 = 0x278; // UEditableText*
		constexpr auto LoadingReplays = 0x280; // UHorizontalBox*
		constexpr auto ReplayList = 0x288; // UScrollBox*
		constexpr auto LoadedReplays = 0x290; // TArray<FS_ReplayInfo>
	}

	namespace n_UW_KingOfTheHillMeter_Tracker_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BlueTeamMeter = 0x268; // UW_KingOfTheHillMeter_V2_C*
		constexpr auto MeterLeft_Spacer = 0x270; // USpacer*
		constexpr auto MeterRight_Spacer = 0x278; // USpacer*
		constexpr auto MoverHead_Image = 0x280; // UImage*
		constexpr auto RedTeamMeter = 0x288; // UW_KingOfTheHillMeter_V2_C*
		constexpr auto KOTH_GS = 0x290; // AKingOfTheHillGS*
		constexpr auto LastValue = 0x298; // int32_t
	}

	namespace n_ALuminAROrigin { // : AAROriginActor
		constexpr auto MRMeshComponent = 0x220; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x228; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x230; // UMaterialInterface*
	}

	namespace n_UImgMediaSettings { // : UObject
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_ACoopGM { // : AReadyOrNotGameMode
		constexpr auto SWATManager = 0x6c0; // ASWATManager*
		constexpr auto SuspectsAndCivilianManager = 0x6c8; // ASuspectsAndCivilianManager*
		constexpr auto GameplayManager = 0x6d0; // AGameplayManager*
		constexpr auto Mode = 0x6d9; // ECOOPMode
		constexpr auto AvoidanceManager = 0x6e0; // AReadyOrNotAvoidanceManager*
		constexpr auto KilledSuspectAvoidanceShape = 0x710; // AActor*
		constexpr auto bNegotiatorActive = 0x718; // bool
		constexpr auto bAIEquipSameLoadoutAsPlayer = 0x719; // bool
		constexpr auto MaxHostagesKilledBeforeMissionFailed = 0x71c; // int32_t
		constexpr auto MaxTeamKillsBeforeAIRetaliates = 0x720; // int32_t
		constexpr auto CommandDecalClass = 0x728; // ACommandDecal*
		constexpr auto SwatAlphaClass = 0x730; // AAICharacter*
		constexpr auto SwatBetaClass = 0x738; // AAICharacter*
		constexpr auto SwatCharlieClass = 0x740; // AAICharacter*
		constexpr auto SwatDeltaClass = 0x748; // AAICharacter*
		constexpr auto FriendlyAIController = 0x750; // AAIController*
		constexpr auto FriendlyAILoadout = 0x758; // FSavedLoadout
		constexpr auto EvidenceClass = 0x880; // AEvidenceActor*
		constexpr auto OnMissionEnded = 0x888; // FMulticastInlineDelegate
		constexpr auto GameStartedWidget = 0x898; // UUserWidget*
		constexpr auto AI_SpawnTag = 0x8a0; // FName
		constexpr auto FriendlySwatKilledCountMap = 0x8a8; // TMap<APlayerCharacter*, int32_t>
		constexpr auto RemainingAICharacters = 0x900; // TArray<AAICharacter*>
		constexpr auto EvidenceInWorld = 0x910; // TArray<AEvidenceActor*>
		constexpr auto NextHighgroundDesignation = 0x920; // int32_t
		constexpr auto Highground = 0x928; // TArray<AHighgroundVolume*>
		constexpr auto bUniqueOfficerSoundsets = 0x938; // bool
		constexpr auto NumPickedOfficerSoundsets = 0x93c; // int32_t
		constexpr auto PickedOfficerSoundsets = 0x940; // int32_t
		constexpr auto SpawnedSWATAI = 0x948; // TArray<ASWATCharacter*>
		constexpr auto SpawnedCommandDecals = 0x958; // TArray<ACommandDecal*>
		constexpr auto SpawnLaterSpawns = 0x968; // TArray<AAISpawn*>
		constexpr auto AISpawnDistance = 0x980; // float
		constexpr auto NegFeedback = 0x988; // USoundCue*
		constexpr auto PosFeedBack = 0x990; // USoundCue*
		constexpr auto KickedDoorsTriggeredMoraleChange = 0x998; // TArray<ADoor*>
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x458; // TArray<FNavigationLink>
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x270; // float
		constexpr auto CaptureDistanceScale = 0x274; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
	}

	namespace n_ATrapActivatee { // : AActor
		constexpr auto bDisarmed = 0x220; // bool
	}

	namespace n_AShell_Base_C { // : AProjectile
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto StaticMesh1 = 0x270; // UStaticMeshComponent*
		constexpr auto Arrow = 0x278; // UArrowComponent*
		constexpr auto ShellMesh = 0x280; // USkeletalMesh*
		constexpr auto InitialSpeed = 0x288; // float
		constexpr auto SoundPlayed = 0x28c; // bool
		constexpr auto RightVectorMultiplier = 0x290; // float
		constexpr auto UpVectorMultiplier = 0x294; // float
		constexpr auto ForwardVectorMultiplier = 0x298; // float
		constexpr auto ShellActors = 0x2a0; // TArray<AActor*>
	}

	namespace n_UAudioAnalyzerNRT { // : UAudioAnalyzerAsset
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_USoundSubmix { // : USoundSubmixWithParentBase
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OutputVolumeModulation = 0x78; // FSoundModulationDestinationSettings
		constexpr auto WetLevelModulation = 0x88; // FSoundModulationDestinationSettings
		constexpr auto DryLevelModulation = 0x98; // FSoundModulationDestinationSettings
		constexpr auto OnSubmixRecordedFileDone = 0xa8; // FMulticastInlineDelegate
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBookMark2D { // : UBookmarkBase
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_AArchVisCharacter { // : ACharacter
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UMockDataMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_UInteractableComponent { // : UWidgetComponent
		constexpr auto bEnabled = 0x5a0; // char : 1
		constexpr auto AnimatedIconName = 0x5a4; // FName
		constexpr auto bShowIconWhenActionsLocked = 0x5ac; // char : 1
		constexpr auto ActionSlot1 = 0x5b0; // FPlayerActionPromptSlot
		constexpr auto ActionSlot2 = 0x640; // FPlayerActionPromptSlot
		constexpr auto ActionSlot3 = 0x6d0; // FPlayerActionPromptSlot
		constexpr auto ActionSlot4 = 0x760; // FPlayerActionPromptSlot
		constexpr auto MinShowPromptAtDistance = 0x7f0; // float
		constexpr auto ShowPromptAtDistance = 0x7f4; // float
		constexpr auto RequiredLookAtPercentage = 0x7f8; // float
		constexpr auto InteractCircleSize = 0x7fc; // float
		constexpr auto InteractIconSize = 0x800; // float
		constexpr auto bMustBeLookingAt = 0x804; // char : 1
		constexpr auto bDistanceFadeIcon = 0x804; // char : 1
		constexpr auto bHideUponInteraction = 0x804; // char : 1
		constexpr auto bHideUponPlayerMovement = 0x804; // char : 1
		constexpr auto bImprintIconOnHUDUponInteraction = 0x804; // char : 1
		constexpr auto DisallowedPlayerControllers = 0x808; // TArray<APlayerController*>
		constexpr auto IgnoreInteractionBlockingActors = 0x818; // TArray<AActor*>
		constexpr auto CurrentProgress = 0x828; // float
		constexpr auto AnimatedIcon = 0x830; // FAnimatedIcon
		constexpr auto UseActor = 0x848; // AActor*
		constexpr auto bClientInteract = 0x850; // bool
		constexpr auto CachedWidgetClass = 0x858; // UUserWidget*
		constexpr auto IconWidget = 0x860; // UAnimatedIconWidget*
		constexpr auto ImprintIconWidgetClass = 0x868; // UUserWidget*
		constexpr auto IconWidget_Imprint = 0x870; // UAnimatedIconWidget_Imprint*
		constexpr auto AnimatedIconMap = 0x878; // TMap<FName, FAnimatedIcon>
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UMaterialFunctionInterface { // : UObject
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UW_MagCheck_MagStatus_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_Highlight = 0x268; // UWidgetAnimation*
		constexpr auto Highlight_Bar_Image = 0x270; // UImage*
		constexpr auto MagIcon_Image = 0x278; // UImage*
		constexpr auto MID_MagIcon = 0x280; // UMaterialInstanceDynamic*
		constexpr auto MagIndex = 0x288; // int32_t
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
		constexpr auto CheatManagerExtensions = 0x78; // TArray<UCheatManagerExtension*>
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_ABP_Helmet_Pumpkin_C { // : AHeadwear
		constexpr auto UberGraphFrame = 0x15f0; // FPointerToUberGraphFrame
		constexpr auto PlayerState = 0x15f8; // APlayerState*
	}

	namespace n_UTimeSynchronizationSource { // : UObject
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UMaterialExpressionShadingPathSwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UMovieSceneGeometryCollectionSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UAnimatedIconWidget_Imprint { // : UUserWidget
		constexpr auto Icon_Image = 0x260; // UImage*
	}

	namespace n_UBaseCombatActivity { // : UBaseActivity
		constexpr auto CurrentTarget = 0x1b8; // AReadyOrNotCharacter*
		constexpr auto CurrentScriptedFireAt = 0x1c0; // FScriptedFireAt
		constexpr auto CombatMoveActivity = 0x1d8; // UBaseCombatMoveActivity*
		constexpr auto CoverEvaluationCooldown = 0x1f4; // float
		constexpr auto LastTrackedEnemy = 0x1f8; // AReadyOrNotCharacter*
		constexpr auto OnTrackNewEnemy = 0x218; // FMulticastInlineDelegate
	}

	namespace n_UNodeMappingContainer { // : UObject
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_UInputBehaviorSet { // : UObject
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_USynthSound { // : USoundWaveProcedural
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_USequenceCameraShakeCameraStandIn { // : UObject
		constexpr auto FieldOfView = 0x30; // float
		constexpr auto bConstrainAspectRatio = 0x34; // char : 1
		constexpr auto AspectRatio = 0x38; // float
		constexpr auto PostProcessSettings = 0x40; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x5a0; // float
		constexpr auto Filmback = 0x5a4; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x5b0; // FCameraLensSettings
		constexpr auto FocusSettings = 0x5c8; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x620; // float
		constexpr auto CurrentAperture = 0x624; // float
		constexpr auto CurrentFocusDistance = 0x628; // float
	}

	namespace n_UMagicLeapSettings { // : UObject
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_UPacketHandlerProfileConfig { // : UObject
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_ADamageProjectile { // : AProjectile
		constexpr auto Damage = 0x274; // float
		constexpr auto DamageType = 0x278; // UDamageType*
		constexpr auto HitMarker = 0x280; // UFMODEvent*
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_UReadyOrNotPathFollowingComp { // : UCrowdFollowingComponent
		constexpr auto TimeSinceLastOpenedDoor = 0x2a0; // TMap<ADoor*, float>
		constexpr auto TimeSinceLastClosedDoor = 0x2f0; // TMap<ADoor*, float>
		constexpr auto LastUsedDoorLink = 0x348; // ADoor*
		constexpr auto LastUsedDoorLinkComp = 0x350; // UNavLinkCustomComponent*
		constexpr auto MoveRequestId = 0x380; // TMap<ADoor*, FAIRequestID>
	}

	namespace n_ALOBBY_START_Blueprint_C { // : ADefaultPlayerStart_C
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
	}

	namespace n_UARObjectComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UMaterialExpressionSobol { // : UMaterialExpression
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_USoundSubmixBase { // : UObject
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x258; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x268; // char : 1
	}

	namespace n_UCoverComponent { // : UActorComponent
		constexpr auto bDrawDebugCover = 0xb0; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase { // : UNiagaraPreviewAxis
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UW_RadioContainer_C { // : UOverlay
		constexpr auto RadioChildren = 0x130; // TArray<TScriptInterface<IIRadioWidget_C>>
		constexpr auto SelectedChild = 0x140; // TScriptInterface<IIRadioWidget_C>
	}

	namespace n_UTemplateSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UArchVisCharMovementComponent { // : UCharacterMovementComponent
		constexpr auto RotationalAcceleration = 0xaf0; // FRotator
		constexpr auto RotationalDeceleration = 0xafc; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb08; // FRotator
		constexpr auto MinPitch = 0xb14; // float
		constexpr auto MaxPitch = 0xb18; // float
		constexpr auto WalkingFriction = 0xb1c; // float
		constexpr auto WalkingSpeed = 0xb20; // float
		constexpr auto WalkingAcceleration = 0xb24; // float
	}

	namespace n_UAsyncActionHandleSaveGame { // : UBlueprintAsyncActionBase
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_AReferendum { // : AActor
		constexpr auto ReferendumName = 0x220; // FText
		constexpr auto ReferendumDescription = 0x238; // FText
		constexpr auto ReferendumTime = 0x250; // float
		constexpr auto ReferendumHoldingTime = 0x254; // float
		constexpr auto YesVotes = 0x258; // int32_t
		constexpr auto NoVotes = 0x25c; // int32_t
		constexpr auto ReferendumTimeRemaining = 0x260; // float
		constexpr auto ReferendumHoldingTimeRemaining = 0x264; // float
		constexpr auto bReferendumRunning = 0x268; // bool
		constexpr auto bReferendumWaitingToTakeEffect = 0x269; // bool
		constexpr auto ReferendumCaller = 0x270; // AReadyOrNotPlayerState*
		constexpr auto YesVoters = 0x278; // TArray<AReadyOrNotPlayerController*>
		constexpr auto NoVoters = 0x288; // TArray<AReadyOrNotPlayerController*>
		constexpr auto EligibleVoters = 0x298; // TArray<AReadyOrNotPlayerController*>
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_USetControlRotationToCamBoneAnimNotify { // : UAnimNotify
		constexpr auto CameraBoneName = 0x38; // FName
	}

	namespace n_UANIMBP_TAC700_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose = 0x4f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x648; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x708; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x750; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x778; // FAnimNode_UseCachedPose
	}

	namespace n_UW_PVP_Extraction_HUD_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Anim_FadeIn = 0x268; // UWidgetAnimation*
		constexpr auto CountdownText = 0x270; // UTextBlock*
		constexpr auto Message_Text = 0x278; // UTextBlock*
		constexpr auto Ribbon_Image = 0x280; // UImage*
		constexpr auto TimeRemaining = 0x288; // float
		constexpr auto MaxTime = 0x28c; // float
	}

	namespace n_UPerlinNoiseCameraShakePattern { // : USimpleCameraShakePattern
		constexpr auto LocationAmplitudeMultiplier = 0x38; // float
		constexpr auto LocationFrequencyMultiplier = 0x3c; // float
		constexpr auto X = 0x40; // FPerlinNoiseShaker
		constexpr auto Y = 0x48; // FPerlinNoiseShaker
		constexpr auto Z = 0x50; // FPerlinNoiseShaker
		constexpr auto RotationAmplitudeMultiplier = 0x58; // float
		constexpr auto RotationFrequencyMultiplier = 0x5c; // float
		constexpr auto Pitch = 0x60; // FPerlinNoiseShaker
		constexpr auto Yaw = 0x68; // FPerlinNoiseShaker
		constexpr auto Roll = 0x70; // FPerlinNoiseShaker
		constexpr auto FOV = 0x78; // FPerlinNoiseShaker
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMatchStartInformationWidget_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutEverything = 0x268; // UWidgetAnimation*
		constexpr auto FadeInEverything = 0x270; // UWidgetAnimation*
		constexpr auto Image_278 = 0x278; // UImage*
		constexpr auto RoundCount = 0x280; // UTextBlock*
		constexpr auto TextBlock_46 = 0x288; // UTextBlock*
		constexpr auto TextBlock_360 = 0x290; // UTextBlock*
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xf0; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x370; // int32_t
	}

	namespace n_UTransformGizmo { // : UInteractiveGizmo
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAnimNotify_SpawnThrownItem { // : UAnimNotify
		constexpr auto ItemClass = 0x38; // ABaseItem*
		constexpr auto bLocalOnly = 0x40; // char : 1
		constexpr auto bNonLocalOnly = 0x40; // char : 1
		constexpr auto BoneToSpawnOn = 0x44; // FName
		constexpr auto bCustomThrowDirection = 0x4c; // char : 1
		constexpr auto ThrowDirection = 0x50; // FRotator
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x450; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x458; // char : 1
		constexpr auto ScreenSize = 0x45c; // float
		constexpr auto U = 0x460; // float
		constexpr auto UL = 0x464; // float
		constexpr auto V = 0x468; // float
		constexpr auto VL = 0x46c; // float
	}

	namespace n_APlayerStart_VIP_Spawn { // : APlayerStart
		constexpr auto bHasVisited = 0x250; // char : 1
		constexpr auto VIPSpawnDescriptor = 0x258; // FText
		constexpr auto SuffixNumber = 0x270; // int32_t
		constexpr auto SpawnBox = 0x278; // UBoxComponent*
		constexpr auto TextRender = 0x280; // UTextRenderComponent*
		constexpr auto SpawnDirection = 0x288; // UArrowComponent*
	}

	namespace n_UGizmoAxisIntervalParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UCurveLinearColorAtlas { // : UTexture2D
		constexpr auto TextureSize = 0x1a0; // uint32_t
		constexpr auto bSquareResolution = 0x1a4; // char : 1
		constexpr auto TextureHeight = 0x1a8; // uint32_t
		constexpr auto GradientCurves = 0x1b0; // TArray<UCurveLinearColor*>
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers { // : UMaterialExpression
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_UAxisPositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_USourceEffectWaveShaperPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_ANeutralizeSuspectByTag { // : AObjective
		constexpr auto SuspectTag = 0x278; // FName
		constexpr auto bRequireArrest = 0x280; // bool
		constexpr auto bAllowIncapacitation = 0x281; // bool
	}

	namespace n_USynthSamplePlayer { // : USynthComponent
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UANIMBP_Preview_Char_Head_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseBlendNode = 0x378; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x418; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x5f0; // FAnimNode_LayeredBoneBlend
		constexpr auto FaceRomRef = 0x6b0; // UPoseAsset*
		constexpr auto FaceSequenceRef = 0x6b8; // UAnimSequence*
		constexpr auto Bodyref = 0x6c0; // USkeletalMeshComponent*
	}

	namespace n_UARGeoAnchorComponent { // : UARComponent
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_ULightMapVirtualTexture2D { // : UTexture2D
		constexpr auto TypeToLayer = 0x1a0; // TArray<int8_t>
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x270; // float
		constexpr auto PreviewInfluenceRadius = 0x278; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UHealthStatusWidget { // : UUserWidget
		constexpr auto Icon_Image = 0x260; // UImage*
		constexpr auto Percentage_Text = 0x268; // UTextBlock*
		constexpr auto HealthIconBrush = 0x270; // FSlateBrush
		constexpr auto EmptyHealthIconBrush = 0x2f8; // FSlateBrush
		constexpr auto ZeroPercentColor = 0x380; // FLinearColor
		constexpr auto OneHundredPercentColor = 0x390; // FLinearColor
	}

	namespace n_ABaseGrenade { // : ABaseItem
		constexpr auto DetonationLight = 0x958; // UPointLightComponent*
		constexpr auto DetonationRadialForce = 0x960; // URadialForceComponent*
		constexpr auto FMODBounceSoundComponent = 0x968; // UFMODAudioComponent*
		constexpr auto DetonationStimuliComp = 0x970; // UAIPerceptionStimuliSourceComponent*
		constexpr auto GrenadeBounciness = 0x978; // float
		constexpr auto bDetonationTriggersStimuli = 0x97c; // bool
		constexpr auto DetonationSoundMaxRange = 0x980; // float
		constexpr auto DetonationLoudness = 0x984; // float
		constexpr auto DetonationTag = 0x988; // FName
		constexpr auto ThrownTag = 0x990; // FName
		constexpr auto Thrown = 0x9a0; // AThrownGrenade*
		constexpr auto FirstBouncePath = 0x9a8; // TArray<FVector>
		constexpr auto FirstBounceHit = 0x9b8; // FHitResult
		constexpr auto SecondBouncePath = 0xa48; // TArray<FVector>
		constexpr auto SecondBounceHit = 0xa58; // FHitResult
		constexpr auto ThirdBouncePath = 0xae8; // TArray<FVector>
		constexpr auto ThirdBounceHit = 0xaf8; // FHitResult
		constexpr auto CompletePath = 0xb88; // TArray<FVector_NetQuantize>
		constexpr auto BouncePt1 = 0xba4; // int32_t
		constexpr auto BouncePt2 = 0xba8; // int32_t
		constexpr auto BouncePt3 = 0xbac; // int32_t
		constexpr auto DeployGrenadeVoiceLine = 0xbb8; // FString
		constexpr auto GrenadeSpeed = 0xbc8; // float
		constexpr auto BounceSoundMinImpulse = 0xbd4; // float
		constexpr auto BounceSoundEffects = 0xbd8; // TArray<USoundBase*>
		constexpr auto ActivationEffect = 0xbe8; // UParticleSystemComponent*
		constexpr auto GrenadeBounceEffect = 0xbf0; // UParticleSystem*
		constexpr auto ActivationSound = 0xbf8; // UFMODEvent*
		constexpr auto ActivationTime = 0xc00; // float
		constexpr auto ActivationElapsedTime = 0xc04; // float
		constexpr auto bActivated = 0xc08; // bool
		constexpr auto bPlayDetonationEffectsExactlyOnce = 0xc09; // bool
		constexpr auto Rep_InterpedPosition = 0xc18; // FVector
		constexpr auto DrawDebugType = 0xc29; // EDrawDebugTrace
		constexpr auto bThrowAsQuickThrow = 0xc2a; // bool
		constexpr auto bFastThrowOnceEquipped = 0xc2b; // bool
		constexpr auto bFastThrowing = 0xc2c; // bool
		constexpr auto GrenadeLocation = 0xc30; // FVector_NetQuantize
		constexpr auto bGrenadeReleased = 0xc3c; // bool
		constexpr auto bTriggersActionMusic = 0xc44; // bool
		constexpr auto bCanThrowGrenade = 0xc45; // bool
		constexpr auto DetonationTime = 0xc48; // float
		constexpr auto bIncreaseDamageRadiusOverTime = 0xc4c; // bool
		constexpr auto UnderarmForceScale = 0xc54; // float
		constexpr auto Drag = 0xc58; // float
		constexpr auto DragAppliedPerBounce = 0xc5c; // float
		constexpr auto DetonationFlashIntensitiy = 0xc60; // float
		constexpr auto DetonationFlashInterp = 0xc64; // float
		constexpr auto ReDetonationTime = 0xc68; // float
		constexpr auto bTriggerSFXOnRedetonate = 0xc6c; // bool
		constexpr auto Server_GrenadeLocation = 0xc70; // FVector
		constexpr auto ThrowDistance = 0xc7c; // float
		constexpr auto RedotonateCount = 0xc80; // float
		constexpr auto ListenerTriggerDistance = 0xc84; // float
		constexpr auto MaxRandomizedForceOnDetonation = 0xc94; // FVector
		constexpr auto FixedForceOnDetonation = 0xca0; // FVector
		constexpr auto DetonationParticles = 0xcb0; // TArray<UParticleSystem*>
		constexpr auto SpawnedParticles = 0xcc0; // TArray<UParticleSystemComponent*>
		constexpr auto ParticleSpawnRotation = 0xcd0; // FRotator
		constexpr auto DetonationFMODEvent = 0xce0; // UFMODEvent*
		constexpr auto DetonationEvent = 0xce8; // USoundCue*
		constexpr auto bHideGrenadeOnDetonate = 0xcf0; // bool
		constexpr auto OnGrenadeDetonated = 0xcf8; // FMulticastInlineDelegate
		constexpr auto OnGrenadeThrown = 0xd08; // FMulticastInlineDelegate
		constexpr auto RedrawDelayAfterThrow = 0xd18; // float
		constexpr auto bUsed = 0xd1c; // bool
		constexpr auto DetonationDamage = 0xd28; // TArray<FGrenadeDamage>
		constexpr auto bUseScreenShake = 0xd38; // bool
		constexpr auto ExplosionScreenShake = 0xd40; // UMatineeCameraShake*
		constexpr auto CameraShakeRadius = 0xd48; // float
		constexpr auto bUseDetonationDecal = 0xd4c; // bool
		constexpr auto DetonationDecalTraceDistance = 0xd50; // float
		constexpr auto DetonationDecal = 0xd58; // UMaterialInterface*
		constexpr auto DetonationDecalSize = 0xd60; // FVector
		constexpr auto GrenadeThrowerInstigator = 0xd70; // AController*
		constexpr auto HideBonesOnUsed = 0xd78; // TArray<FName>
		constexpr auto BounceActivationRadius = 0xd88; // float
		constexpr auto FMODGrenadeBounce = 0xd90; // UFMODEvent*
	}

	namespace n_UDeployableData { // : UDataAsset
		constexpr auto DeployableName = 0x30; // FText
		constexpr auto DeployableShortName = 0x48; // FText
		constexpr auto DeployableDescription = 0x60; // FText
		constexpr auto DeployableTexture = 0x78; // TSoftObjectPtr<UTexture2D>
		constexpr auto DeployableLabel = 0xa0; // FName
	}

	namespace n_UW_KeyDisplay_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto keyDisplayName = 0x268; // UTextBlock*
		constexpr auto KeyName = 0x270; // UTextBlock*
		constexpr auto InputEntry = 0x278; // FInputEntry
	}

	namespace n_UGE_PlayerNerf_IncreaseRecoil_C { // : UPlayerEffect_ModifyRecoil
		constexpr auto UberGraphFrame = 0x110; // FPointerToUberGraphFrame
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UConstantQNRTSettings { // : UAudioSynesthesiaNRTSettings
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UMatchTimeRemainingWidget { // : UBaseWidget
		constexpr auto MatchTimeRemaining_Text = 0x278; // UTextBlock*
		constexpr auto RoundTimeRemaining = 0x280; // float
	}

	namespace n_UMovieSceneBuiltInEasingFunction { // : UObject
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UDestructibleMesh { // : USkeletalMesh
		constexpr auto DefaultDestructibleParameters = 0x3a0; // FDestructibleParameters
		constexpr auto FractureEffects = 0x428; // TArray<FFractureEffect>
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x468; // float
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UMaterialExpressionSmoothStep { // : UMaterialExpression
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UAnimNotify_LockPickDoor { // : UAnimNotify
		constexpr auto bLockPickFinished = 0x38; // char : 1
	}

	namespace n_UW_Button_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Btn = 0x268; // UButton*
		constexpr auto ContentSwitcher = 0x270; // UWidgetSwitcher*
		constexpr auto CustomContents = 0x278; // UNamedSlot*
		constexpr auto txt_ButtonLabel = 0x280; // UW_Text_C*
		constexpr auto ButtonLabelText = 0x288; // FText
		constexpr auto ButtonStyle = 0x2a0; // E_Style_Buttons
		constexpr auto UseCustomStyle = 0x2a1; // bool
		constexpr auto CustomStyle = 0x2a8; // FST_Style_Buttons
		constexpr auto FontStyleNormal = 0x768; // FST_Style_Text
		constexpr auto FontStyleHovered = 0x7f8; // FST_Style_Text
		constexpr auto FontStylePressed = 0x888; // FST_Style_Text
		constexpr auto FontStyleDisabled = 0x918; // FST_Style_Text
		constexpr auto StyleGuide = 0x9a8; // UDataTable*
		constexpr auto bHovered = 0x9b0; // bool
		constexpr auto Clicked = 0x9b8; // FMulticastInlineDelegate
		constexpr auto Hovered = 0x9c8; // FMulticastInlineDelegate
		constexpr auto Unhovered = 0x9d8; // FMulticastInlineDelegate
		constexpr auto Pressed = 0x9e8; // FMulticastInlineDelegate
		constexpr auto Released = 0x9f8; // FMulticastInlineDelegate
		constexpr auto DoubleClicked = 0xa08; // FMulticastInlineDelegate
		constexpr auto DoubleClickTimer = 0xa18; // float
		constexpr auto FontSizeOverride = 0xa1c; // int32_t
		constexpr auto ActiveStyle = 0xa20; // E_Style_Buttons
		constexpr auto DescriptionWidget = 0xa28; // UTextBlock*
		constexpr auto ForceUppercaseDescription = 0xa30; // bool
		constexpr auto DescriptionText = 0xa38; // FText
		constexpr auto HoveredSound = 0xa50; // UFMODEvent*
		constexpr auto ClickedSound = 0xa58; // UFMODEvent*
		constexpr auto StartActive = 0xa60; // bool
		constexpr auto StartActiveDisabled = 0xa61; // bool
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UNiagaraDataInterfaceRWBase { // : UNiagaraDataInterface
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_UGizmoAxisScaleParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UBaseBrushTool { // : UMeshSurfacePointTool
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x188; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b0; // UBrushStampIndicator*
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_AARSkyLight { // : ASkyLight
		constexpr auto CaptureProbe = 0x230; // UAREnvironmentCaptureProbe*
	}

	namespace n_UNiagaraDataInterface2DArrayTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh { // : UNiagaraDataInterface
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto UvSetIndex = 0xbc; // int32_t
		constexpr auto bRequireCurrentFrameData = 0xc0; // bool
	}

	namespace n_USubmixEffectFlexiverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_USourceEffectRingModulationPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UUnlockDoorQuestNode { // : UBaseQuestNode
		constexpr auto TargetDoor = 0x250; // ADoor*
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x220; // ULandscapeMeshProxyComponent*
	}

	namespace n_AArrestXSuspects { // : AObjective
		constexpr auto RequiredArrests = 0x278; // int32_t
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UDatasmithDeltaGenSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UARTextureCameraDepth { // : UARTexture
		constexpr auto DepthQuality = 0x198; // EARDepthQuality
		constexpr auto DepthAccuracy = 0x199; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0x19a; // bool
	}

	namespace n_UDatasmithCineCameraComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UStereoLayerShapeEquirect { // : UStereoLayerShape
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_USteamAudioSettings { // : UObject
		constexpr auto OutputSubmix = 0x28; // FSoftObjectPath
		constexpr auto AudioEngine = 0x40; // EIplAudioEngine
		constexpr auto RayTracer = 0x41; // EIplRayTracerType
		constexpr auto ConvolutionType = 0x42; // EIplConvolutionType
		constexpr auto ExportBSPGeometry = 0x43; // bool
		constexpr auto ExportLandscapeGeometry = 0x44; // bool
		constexpr auto StaticMeshMaterialPreset = 0x45; // EPhononMaterial
		constexpr auto StaticMeshLowFreqAbsorption = 0x48; // float
		constexpr auto StaticMeshMidFreqAbsorption = 0x4c; // float
		constexpr auto StaticMeshHighFreqAbsorption = 0x50; // float
		constexpr auto StaticMeshLowFreqTransmission = 0x54; // float
		constexpr auto StaticMeshMidFreqTransmission = 0x58; // float
		constexpr auto StaticMeshHighFreqTransmission = 0x5c; // float
		constexpr auto StaticMeshScattering = 0x60; // float
		constexpr auto BSPMaterialPreset = 0x64; // EPhononMaterial
		constexpr auto BSPLowFreqAbsorption = 0x68; // float
		constexpr auto BSPMidFreqAbsorption = 0x6c; // float
		constexpr auto BSPHighFreqAbsorption = 0x70; // float
		constexpr auto BSPLowFreqTransmission = 0x74; // float
		constexpr auto BSPMidFreqTransmission = 0x78; // float
		constexpr auto BSPHighFreqTransmission = 0x7c; // float
		constexpr auto BSPScattering = 0x80; // float
		constexpr auto LandscapeMaterialPreset = 0x84; // EPhononMaterial
		constexpr auto LandscapeLowFreqAbsorption = 0x88; // float
		constexpr auto LandscapeMidFreqAbsorption = 0x8c; // float
		constexpr auto LandscapeHighFreqAbsorption = 0x90; // float
		constexpr auto LandscapeLowFreqTransmission = 0x94; // float
		constexpr auto LandscapeMidFreqTransmission = 0x98; // float
		constexpr auto LandscapeHighFreqTransmission = 0x9c; // float
		constexpr auto LandscapeScattering = 0xa0; // float
		constexpr auto OcclusionSampleCount = 0xa4; // int32_t
		constexpr auto ListenerReverbSimulationType = 0xa8; // EIplSimulationType
		constexpr auto ListenerReverbContribution = 0xac; // float
		constexpr auto IndirectImpulseResponseOrder = 0xb0; // int32_t
		constexpr auto IndirectImpulseResponseDuration = 0xb4; // float
		constexpr auto IndirectSpatializationMethod = 0xb8; // EIplSpatializationMethod
		constexpr auto IrradianceMinDistance = 0xbc; // float
		constexpr auto MaxSources = 0xc0; // uint32_t
		constexpr auto RealtimeQualityPreset = 0xc4; // EQualitySettings
		constexpr auto RealTimeCPUCoresPercentage = 0xc8; // int32_t
		constexpr auto RealtimeBounces = 0xcc; // int32_t
		constexpr auto RealtimeRays = 0xd0; // int32_t
		constexpr auto RealtimeSecondaryRays = 0xd4; // int32_t
		constexpr auto BakedQualityPreset = 0xd8; // EQualitySettings
		constexpr auto BakingCPUCoresPercentage = 0xdc; // int32_t
		constexpr auto BakedBounces = 0xe0; // int32_t
		constexpr auto BakedRays = 0xe4; // int32_t
		constexpr auto BakedSecondaryRays = 0xe8; // int32_t
		constexpr auto MaxComputeUnits = 0xec; // int32_t
		constexpr auto FractionComputeUnitsForIRUpdate = 0xf0; // float
		constexpr auto TANIndirectImpulseResponseOrder = 0xf4; // int32_t
		constexpr auto TANIndirectImpulseResponseDuration = 0xf8; // float
		constexpr auto TANMaxSources = 0xfc; // uint32_t
		constexpr auto RadeonRaysBakingBatchSize = 0x100; // int32_t
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_ASniperCharacter { // : APlayerCharacter
		constexpr auto Designation = 0x21c0; // int32_t
		constexpr auto bADSLocked = 0x21c4; // bool
		constexpr auto ExitControlHandle = 0x21c8; // FTimerHandle
		constexpr auto PrimaryScopeAttachment = 0x21d0; // UScopedWeaponAttachment*
		constexpr auto PrimaryMuzzleAttachment = 0x21d8; // UWeaponAttachment*
		constexpr auto PrimaryUnderbarrelAttachment = 0x21e0; // UWeaponAttachment*
		constexpr auto SecondaryScopeAttachment = 0x21e8; // UScopedWeaponAttachment*
		constexpr auto SecondaryMuzzleAttachment = 0x21f0; // UWeaponAttachment*
		constexpr auto SecondaryUnderbarrelAttachment = 0x21f8; // UWeaponAttachment*
	}

	namespace n_USwatDuelingCombatMove { // : UBaseCombatMoveActivity
		constexpr auto LeaderCombatMove = 0x1e0; // USwatDuelingCombatMove*
	}

	namespace n_UTeamBreachAndClearActivity { // : UTeamStackUpActivity
		constexpr auto UsedClearPoint = 0x220; // AThreatAwarenessActor*
		constexpr auto LeaderLastEquippedGrenade = 0x230; // ABaseGrenade*
		constexpr auto ThrownGrenade = 0x238; // ABaseGrenade*
		constexpr auto BreachStartDelay = 0x24c; // float
		constexpr auto ClearStartDelay = 0x250; // float
		constexpr auto DoorUser = 0x258; // ACyberneticCharacter*
		constexpr auto DoorBreacher = 0x260; // ACyberneticCharacter*
		constexpr auto DoorBreachItemClass = 0x268; // ABaseItem*
		constexpr auto DoorUseItemClass = 0x270; // ABaseItem*
		constexpr auto DoorUseActivity = 0x280; // UDoorBreachActivity*
		constexpr auto DoorBreachActivity = 0x290; // UDoorBreachActivity*
		constexpr auto ClearWaitTime = 0x29c; // float
		constexpr auto CustomDoorUseActivityClass = 0x2a0; // UCustomDoorBreachActivity*
	}

	namespace n_UTrapDamage { // : UDamageType
		constexpr auto bDestroyAllDoorChunks = 0x40; // char : 1
	}

	namespace n_UClickDragInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_UVirtualTextureBuilder { // : UObject
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterialMask = 0x310; // UPhysicalMaterialMask*
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x280; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x288; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x290; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x298; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2c8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x2f8; // float
		constexpr auto BaseTranslationOffset = 0x2fc; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_USkeletalMeshSimulationComponent { // : UActorComponent
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UW_WeaponWheel_C { // : UWeaponWheelWidget
		constexpr auto UberGraphFrame = 0x410; // FPointerToUberGraphFrame
		constexpr auto BackgroundBlur = 0x418; // UBackgroundBlur*
		constexpr auto Controls_Container = 0x420; // UHorizontalBox*
		constexpr auto DebugInfoContainer_Items = 0x428; // UW_DebugInfoContainer_C*
		constexpr auto DebugInfoContainer_Logic = 0x430; // UW_DebugInfoContainer_C*
		constexpr auto DebugInfoContainer_Settings = 0x438; // UW_DebugInfoContainer_C*
		constexpr auto Image_251 = 0x440; // UImage*
		constexpr auto TestSmoothCursor = 0x448; // UOverlay*
		constexpr auto WeaponStat_Category_Text = 0x450; // UTextBlock*
		constexpr auto WeaponStat_ItemName_Text = 0x458; // UTextBlock*
		constexpr auto WeaponWheel_Background = 0x460; // UImage*
		constexpr auto WeaponWheel_InnerBorder = 0x468; // UImage*
		constexpr auto WeaponWheel_ItemInfo_Container = 0x470; // UVerticalBox*
		constexpr auto WeaponWheel_ItemStats_Container = 0x478; // UVerticalBox*
		constexpr auto WeaponWheel_MultiItem_Selection = 0x480; // UW_WeaponWheel_MultiItem_Selection_C*
		constexpr auto WeaponWheel_OuterBorder = 0x488; // UImage*
		constexpr auto WeaponWheelArea = 0x490; // UCanvasPanel*
		constexpr auto WheelCategoryToRadialSelectionWidget = 0x498; // TMap<FName, UW_WeaponWheel_RadialSelection_C*>
		constexpr auto ItemStats = 0x4e8; // TArray<UW_WeaponWheel_ItemStat_C*>
		constexpr auto WeaponWheelCategories = 0x4f8; // TArray<UW_WeaponWheel_RadialSelection_C*>
		constexpr auto ItemCategories = 0x508; // TArray<ABaseItem*>
		constexpr auto StatGrowthEffect = 0x518; // EEasingFunc
		constexpr auto StatGrowthSpeed = 0x51c; // float
		constexpr auto CategoryTextFontSize = 0x520; // int32_t
		constexpr auto ItemTextFontSize = 0x524; // int32_t
		constexpr auto Primary Weapons = 0x528; // TArray<ABaseItem*>
		constexpr auto Secondary Weapons = 0x538; // TArray<ABaseItem*>
		constexpr auto Grenades = 0x548; // TArray<ABaseItem*>
		constexpr auto Assistants = 0x558; // TArray<ABaseItem*>
		constexpr auto Tactical Devices = 0x568; // TArray<ABaseItem*>
		constexpr auto TabletDevices = 0x578; // TArray<ABaseItem*>
		constexpr auto CurrentSelectedRadialWidget = 0x588; // UW_WeaponWheel_RadialSelection_C*
		constexpr auto PreviousSelectedRadialWidget = 0x590; // UW_WeaponWheel_RadialSelection_C*
		constexpr auto CategoryDeselected = 0x598; // FMulticastInlineDelegate
		constexpr auto CategorySelected = 0x5a8; // FMulticastInlineDelegate
		constexpr auto ItemSelected = 0x5b8; // FMulticastInlineDelegate
		constexpr auto ItemDeselected = 0x5c8; // FMulticastInlineDelegate
		constexpr auto MaxItemStats = 0x5d8; // int32_t
		constexpr auto ItemExecutables = 0x5e0; // TArray<UWeaponWheelScript*>
		constexpr auto ItemExecutableScripts = 0x5f0; // TArray<UWeaponWheelScript*>
	}

	namespace n_ADynamicReportable { // : ADynamicWorldActor
		constexpr auto DesiredTocReport = 0x238; // FString
		constexpr auto bReportedToToc = 0x248; // bool
	}

	namespace n_ATrapActorAttachedToDoor { // : ATrapActor
		constexpr auto AttachedToDoor = 0x2e0; // ADoor*
		constexpr auto WireYPosition = 0x2e8; // float
		constexpr auto CableTransform = 0x2f0; // FTransform
		constexpr auto CableMeshComponents = 0x320; // TArray<USplineMeshComponent*>
		constexpr auto CurveStrength = 0x330; // float
		constexpr auto MappedSplineLocation = 0x334; // float
		constexpr auto bChunk1Destroyed = 0x338; // char : 1
		constexpr auto bChunk2Destroyed = 0x338; // char : 1
		constexpr auto bSubdoorChunk1Destroyed = 0x338; // char : 1
		constexpr auto bSubdoorChunk2Destroyed = 0x338; // char : 1
	}

	namespace n_UForceAimAtActivity { // : UBaseActivity
		constexpr auto bForceNoShoot = 0x1b0; // bool
		constexpr auto bForceAimAt = 0x1b1; // bool
		constexpr auto bForceNoMove = 0x1b2; // bool
		constexpr auto ForcedTarget = 0x1b8; // APlayerCharacter*
		constexpr auto bCanFinishActivity = 0x1c0; // bool
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x450; // FColor
		constexpr auto FrustumAngle = 0x454; // float
		constexpr auto FrustumAspectRatio = 0x458; // float
		constexpr auto FrustumStartDist = 0x45c; // float
		constexpr auto FrustumEndDist = 0x460; // float
		constexpr auto Texture = 0x468; // UTexture*
	}

	namespace n_AArmor_Heavy_V2_C { // : ABaseBodyArmor_C
		constexpr auto Collision = 0xae0; // UCapsuleComponent*
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x230; // USpotLightComponent*
	}

	namespace n_UTeamActivityProxy { // : UBaseActivityProxy
		constexpr auto CommandTeam = 0x38; // ETeamType
		constexpr auto CommandLocation = 0x3c; // FVector
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 { // : UNiagaraDataInterfaceArray
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_AReadyOrNotLevelScript { // : ALevelScriptActor
		constexpr auto WorldGenerationType = 0x228; // EGenerationType
		constexpr auto TAASharpenFilter = 0x230; // UMaterial*
		constexpr auto SpawnedFromNotifyActors = 0x238; // TArray<AActor*>
		constexpr auto CoverGenerator = 0x248; // ACoverGenerator*
		constexpr auto FlashlightIntensity = 0x250; // float
		constexpr auto BlockingVolumesInLevel = 0x258; // TArray<ABlockingVolume*>
		constexpr auto OneWayBlockingVolumesInLevel = 0x268; // TArray<AOneWayBlockingVolume*>
		constexpr auto ConversationManager = 0x278; // AConversationManager*
		constexpr auto LightingScenarios = 0x280; // TMap<ELightType, FName>
		constexpr auto LightingType = 0x2d0; // ELightType
		constexpr auto bDrawCoverDebug = 0x2d1; // bool
		constexpr auto LevelData = 0x2d8; // FLevelDataLookupTable
		constexpr auto MusicData = 0xa48; // UMusicData*
		constexpr auto ItemData = 0xa50; // UItemData*
		constexpr auto SoundData = 0xa58; // USoundData*
		constexpr auto Delegate_OnOutOfBoundsTimeLimitEnded = 0xa60; // FMulticastInlineDelegate
		constexpr auto OutOfBounds_MaxTimeLimit = 0xa70; // float
		constexpr auto OutOfBoundsTimeRemaining = 0xa74; // float
		constexpr auto AudioSourcesInLevel = 0xa80; // TArray<AAmbientSound*>
		constexpr auto FMODAudioSourcesInLevel = 0xa90; // TArray<AFMODAmbientSound*>
		constexpr auto bUseDarkness = 0xab0; // bool
		constexpr auto MinimumLightIntensityForSource = 0xab4; // float
		constexpr auto DarknessSightRangeMultiplier = 0xab8; // float
		constexpr auto bIncludeWorldLightsAsSources = 0xabc; // bool
		constexpr auto bRaining = 0xabd; // bool
		constexpr auto bSpawnOfficerAI = 0xabe; // bool
		constexpr auto LevelSequenceMVP = 0xac0; // ULevelSequence*
		constexpr auto LevelSequenceTeam = 0xac8; // ULevelSequence*
		constexpr auto LastPlayedSequence = 0xad0; // ULevelSequencePlayer*
	}

	namespace n_UW_NetworkStatusErrors_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_50 = 0x268; // UImage*
		constexpr auto Image_77 = 0x270; // UImage*
		constexpr auto InvalidationBox_1 = 0x278; // UInvalidationBox*
		constexpr auto InvalidationBox_2 = 0x280; // UInvalidationBox*
		constexpr auto txt_ConnectionError = 0x288; // UW_Text_C*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UPlayerEffect_ModifyRecoil { // : UBasePlayerEffect
		constexpr auto ModificationOption = 0x60; // ERecoilModifierOption
		constexpr auto WeaponFilter = 0x68; // TArray<EItemClass>
		constexpr auto RecoilFireStrength = 0x78; // float
		constexpr auto RecoilFireStrengthFirst = 0x7c; // float
		constexpr auto RecoilDampStrength = 0x80; // float
		constexpr auto RecoilAngleStrength = 0x84; // float
		constexpr auto RecoilRandomness = 0x88; // float
		constexpr auto RecoilFireADSModifier = 0x8c; // float
		constexpr auto RecoilBuildupADSModifier = 0x90; // float
		constexpr auto RecoilAngleADSModifier = 0x94; // float
		constexpr auto RecoilBuildupDampStrength = 0x98; // float
		constexpr auto bApplySpecific = 0x9c; // char : 1
		constexpr auto SpecificWeaponRecoilMods = 0xa0; // TArray<FSpecificWeaponRecoilMod>
		constexpr auto OriginalRecoilValues = 0xb0; // TMap<ABaseMagazineWeapon*, FSpecificWeaponRecoilMod>
		constexpr auto AffectedWeapons = 0x100; // TArray<ABaseMagazineWeapon*>
	}

	namespace n_ADynamicWorldItem { // : AActor
		constexpr auto ItemMesh = 0x220; // UStaticMeshComponent*
		constexpr auto ImpactParticle = 0x228; // UParticleSystemComponent*
		constexpr auto ImpactAudio = 0x230; // UAudioComponent*
		constexpr auto ImpactAudioFMOD = 0x238; // UFMODAudioComponent*
		constexpr auto PostImpactMesh = 0x240; // UStaticMesh*
		constexpr auto bFirstImpact = 0x248; // bool
		constexpr auto bHasBeenImpacted = 0x249; // bool
		constexpr auto PhysicsImpactDecal = 0x250; // UMaterialInterface*
		constexpr auto PhysicsImpactDecalScale = 0x258; // float
	}

	namespace n_UAxisAngleGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTemporalSobol { // : UMaterialExpression
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UGeometryCollectionDebugDrawComponent { // : UActorComponent
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_ATugOfWarMover { // : AActor
		constexpr auto MoverPath = 0x220; // USplineComponent*
		constexpr auto MoverMesh = 0x228; // USkeletalMeshComponent*
		constexpr auto MoverSpeed = 0x240; // float
		constexpr auto bInvertVictoryPositions = 0x244; // bool
		constexpr auto bMoverForward = 0x245; // bool
		constexpr auto bMoverMoving = 0x246; // bool
		constexpr auto MoverStartingPosition = 0x248; // float
		constexpr auto MoverCurrentPosition = 0x24c; // float
		constexpr auto bContested = 0x250; // bool
		constexpr auto Influencers = 0x258; // TArray<APlayerCharacter*>
	}

	namespace n_UW_SWATTeamStatus_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SWAT_Alpha_Status = 0x268; // UW_SWATCommandStatus_C*
		constexpr auto SWAT_Beta_Status = 0x270; // UW_SWATCommandStatus_C*
		constexpr auto SWAT_Charlie_Status = 0x278; // UW_SWATCommandStatus_C*
		constexpr auto SWAT_Delta_Status = 0x280; // UW_SWATCommandStatus_C*
		constexpr auto SWAT_Lead_Status = 0x288; // UW_SWATCommandStatus_C*
		constexpr auto SWAT_Status_Container = 0x290; // UVerticalBox*
		constexpr auto CachedAlphaActivity = 0x298; // UBaseActivity*
		constexpr auto CachedBetaActivity = 0x2a0; // UBaseActivity*
		constexpr auto CachedCharlieActivity = 0x2a8; // UBaseActivity*
		constexpr auto CachedDeltaActivity = 0x2b0; // UBaseActivity*
		constexpr auto CachedFoxtrotActivity = 0x2b8; // UBaseActivity*
	}

	namespace n_URButton_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Border_1 = 0x268; // UBorder*
		constexpr auto Btn = 0x270; // UButton*
		constexpr auto ScaleBox_1 = 0x278; // UScaleBox*
		constexpr auto TextBlock_69 = 0x280; // UTextBlock*
		constexpr auto ButtonText = 0x288; // FText
		constexpr auto SelectedColor = 0x2a0; // FLinearColor
		constexpr auto DefaultColor = 0x2b0; // FLinearColor
		constexpr auto ButtonImage = 0x2c0; // UTexture2D*
		constexpr auto ButtonAlpha = 0x2c8; // float
		constexpr auto TextHoveredColor = 0x2cc; // FLinearColor
		constexpr auto TextUnhoveredColor = 0x2dc; // FLinearColor
		constexpr auto TextJustification = 0x2ec; // ETextJustify
		constexpr auto TextScale = 0x2ed; // EStretch
		constexpr auto TextStretchDirection = 0x2ee; // EStretchDirection
		constexpr auto HoveredText = 0x2f0; // FText
		constexpr auto InvertHoverColors = 0x308; // bool
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UCoverPoint { // : UObject
		constexpr auto Location = 0x28; // FVector
		constexpr auto _DirectionToWall = 0x34; // FVector
		constexpr auto RotatorXToWall = 0x40; // FRotator
		constexpr auto bLeftCoverStanding = 0x4c; // bool
		constexpr auto bRightCoverStanding = 0x4d; // bool
		constexpr auto bLeftCoverCrouched = 0x4e; // bool
		constexpr auto bRightCoverCrouched = 0x4f; // bool
		constexpr auto bFrontCoverCrouched = 0x50; // bool
		constexpr auto bCrouchedCover = 0x51; // bool
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x220; // URadialForceComponent*
	}

	namespace n_UEditableGeometryCollectionAdapter { // : UEditableMeshAdapter
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UDatasmithMaterialInstanceTemplate { // : UDatasmithObjectTemplate
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xf0; // FMovieSceneByteChannel
	}

	namespace n_UNiagaraBaselineController { // : UObject
		constexpr auto TestDuration = 0x28; // float
		constexpr auto EffectType = 0x30; // UNiagaraEffectType*
		constexpr auto Owner = 0x38; // ANiagaraPerfBaselineActor*
		constexpr auto System = 0x40; // TSoftObjectPtr<UNiagaraSystem>
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2e0; // FString
		constexpr auto PendingReservation = 0x2f0; // FPartyReservation
		constexpr auto RequestType = 0x340; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x341; // bool
		constexpr auto bCancelReservation = 0x342; // bool
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UFMODEventControlSection { // : UMovieSceneSection
		constexpr auto ControlKeys = 0xe8; // FFMODEventControlChannel
	}

	namespace n_UW_Objectives_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PopulateBox = 0x268; // UVerticalBox*
		constexpr auto ObjectiveMargins = 0x270; // FMargin
		constexpr auto PreviewObjectives = 0x280; // TArray<AObjective*>
	}

	namespace n_UANIMBP_M14_C { // : URoNWeaponAnimInstance
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2d8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_2 = 0x308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool = 0x350; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x470; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone = 0x4f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x5f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x618; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x638; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot = 0x6f8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x740; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x898; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x8c0; // FAnimNode_UseCachedPose
		constexpr auto Mag01Alpha = 0x8e8; // float
	}

	namespace n_UW_ScoreboardHeader_C { // : UUserWidget
		constexpr auto Arrested_Text = 0x260; // UTextBlock*
		constexpr auto Arrests_Text = 0x268; // UTextBlock*
		constexpr auto BG_Image = 0x270; // UImage*
		constexpr auto BoardRank_Text = 0x278; // UTextBlock*
		constexpr auto Damage_Text = 0x280; // UTextBlock*
		constexpr auto Deaths_Text = 0x288; // UTextBlock*
		constexpr auto Incapacitations_Text = 0x290; // UTextBlock*
		constexpr auto Kills_Text = 0x298; // UTextBlock*
		constexpr auto Ping_Text = 0x2a0; // UTextBlock*
		constexpr auto PlayerName_Text = 0x2a8; // UTextBlock*
		constexpr auto PlayerRank_Text = 0x2b0; // UTextBlock*
		constexpr auto Score_Text = 0x2b8; // UTextBlock*
		constexpr auto Status_Text = 0x2c0; // UTextBlock*
	}

	namespace n_UAnimBoneCompressionCodec { // : UObject
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UReadyOrNotMetaProfile { // : USaveGame
		constexpr auto SaveSlotName = 0x28; // FString
		constexpr auto UserIndex = 0x38; // uint32_t
		constexpr auto SingleplayerProfiles = 0x40; // TArray<FString>
		constexpr auto CurrentProfile = 0x50; // FString
	}

	namespace n_AInteractionActor { // : AActor
		constexpr auto SceneRoot = 0x228; // USceneComponent*
		constexpr auto UseIconRadius = 0x230; // USphereComponent*
		constexpr auto Mesh_Static = 0x238; // UStaticMeshComponent*
		constexpr auto Mesh_Skeletal = 0x240; // USkeletalMeshComponent*
		constexpr auto bCanUseNow = 0x248; // bool
		constexpr auto bAvailableForUse = 0x249; // bool
		constexpr auto bCompleteIcon = 0x24a; // bool
		constexpr auto bButtonPushAnimation = 0x24b; // bool
		constexpr auto bHoldButtonPrompt = 0x24c; // bool
		constexpr auto bOverrideButtonPrompt = 0x24d; // bool
		constexpr auto OverrideButtonPromptText = 0x250; // FText
	}

	namespace n_UHierarchicalLODSetup { // : UObject
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UShellRackShellComponent { // : UStaticMeshComponent
		constexpr auto ShellNumber = 0x4e0; // int32_t
	}

	namespace n_USubtitlesFileSave { // : USaveGame
		constexpr auto Data = 0x28; // TMap<FName, FLipSync_Pause>
	}

	namespace n_UInteractiveGizmoManager { // : UObject
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_ADroneVehicle { // : AUnmannedVehicle
		constexpr auto FlightBox = 0x2c8; // UBoxComponent*
		constexpr auto Mesh = 0x2d0; // USkeletalMeshComponent*
		constexpr auto Audio = 0x2d8; // UAudioComponent*
		constexpr auto FirstPersonCamera = 0x2e0; // UCameraComponent*
		constexpr auto ThirdPersonSpringArm = 0x2e8; // USpringArmComponent*
		constexpr auto ThirdPersonCamera = 0x2f0; // UCameraComponent*
		constexpr auto FloatingMovementComponent = 0x2f8; // UFloatingPawnMovement*
		constexpr auto MaxTilt = 0x300; // float
		constexpr auto MaxRPM = 0x304; // float
		constexpr auto IdleRPM = 0x308; // float
		constexpr auto RPMForceScale = 0x30c; // float
		constexpr auto RPMThrottleMultiplier = 0x310; // float
		constexpr auto ThrottleInterpSpeed = 0x314; // float
		constexpr auto RotationInterpSpeed = 0x318; // float
		constexpr auto TurnSpeed = 0x31c; // float
		constexpr auto RotationInterpSpeedWhenSteady = 0x320; // float
		constexpr auto TurnSpeedWhenSteady = 0x324; // float
		constexpr auto MinSpeed = 0x328; // float
		constexpr auto MaxSpeed = 0x32c; // float
		constexpr auto SpeedIncrementRate = 0x330; // float
		constexpr auto InvincibilityTimeAfterDamageApplied = 0x334; // float
		constexpr auto RPM = 0x338; // float
		constexpr auto RotorRotation = 0x33c; // FRotator
		constexpr auto CurrentAltitude = 0x348; // float
		constexpr auto CurrentPilotDistance = 0x34c; // float
		constexpr auto DroneTransform = 0x350; // FTransform
		constexpr auto TargetRotation = 0x380; // FRotator
		constexpr auto bApplyingInput = 0x3c0; // bool
		constexpr auto bSteadyDrone = 0x3c1; // bool
		constexpr auto DroneOwner = 0x3e8; // APlayerCharacter*
		constexpr auto World = 0x3f0; // UWorld*
	}

	namespace n_UInAppPurchaseCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AController { // : AActor
		constexpr auto PlayerState = 0x228; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x238; // FMulticastInlineDelegate
		constexpr auto StateName = 0x248; // FName
		constexpr auto Pawn = 0x250; // APawn*
		constexpr auto Character = 0x260; // ACharacter*
		constexpr auto TransformComponent = 0x268; // USceneComponent*
		constexpr auto ControlRotation = 0x288; // FRotator
		constexpr auto bAttachToPawn = 0x294; // char : 1
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_AC2Explosive { // : ABaseItem
		constexpr auto bIsValidPlacement = 0x958; // bool
		constexpr auto LastGoodPlacement = 0x95c; // FHitResult
		constexpr auto LastPlacedC2Explosive = 0x9e8; // APlacedC2Explosive*
		constexpr auto MaxPlacementDistance = 0x9f0; // float
		constexpr auto CurrentActorPlacement = 0x9f8; // AActor*
		constexpr auto PlacedC2Class = 0xa00; // APlacedC2Explosive*
	}

	namespace n_AKingOfTheHostageGM { // : AReadyOrNotGameMode_PVP
		constexpr auto SpawnedHostages = 0x718; // TArray<APawn*>
		constexpr auto Start_RoundTime = 0x738; // float
		constexpr auto bBlueTeamOnAttack = 0x73c; // bool
	}

	namespace n_AActivityRouteActor { // : AActor
		constexpr auto ActivityRoute = 0x220; // TArray<FActivityRoute>
		constexpr auto PathColor = 0x230; // FColor
		constexpr auto ActivityIdx = 0x234; // int32_t
	}

	namespace n_AImpactEffect { // : AActor
		constexpr auto SpawnedParticles = 0x220; // TArray<UParticleSystemComponent*>
		constexpr auto bPlayDefaultIfNull = 0x340; // bool
		constexpr auto DecalScale = 0x344; // float
		constexpr auto DecalMinSize = 0x350; // float
		constexpr auto DecalMaxSize = 0x354; // float
		constexpr auto FMODSoundFx = 0x358; // UFMODEvent*
		constexpr auto FMODHitmarker = 0x360; // UFMODEvent*
		constexpr auto DecalMeshScaleMultiplier = 0x368; // float
		constexpr auto bBulletGoneThroughPlayer = 0x36c; // bool
		constexpr auto bArmorImpact = 0x36d; // bool
		constexpr auto BloodExitDecals = 0x370; // TArray<UMaterialInterface*>
		constexpr auto DefaultImpactFx = 0x380; // FImpactFx
		constexpr auto RON_Aluminium = 0x3d0; // FImpactFx
		constexpr auto RON_Asphalt = 0x420; // FImpactFx
		constexpr auto RON_Brick = 0x470; // FImpactFx
		constexpr auto RON_CarbonFibre = 0x4c0; // FImpactFx
		constexpr auto RON_Cardboard = 0x510; // FImpactFx
		constexpr auto RON_Ceramic = 0x560; // FImpactFx
		constexpr auto RON_ConcreteSoft = 0x5b0; // FImpactFx
		constexpr auto RON_ConcreteStrong = 0x600; // FImpactFx
		constexpr auto RON_Dirt = 0x650; // FImpactFx
		constexpr auto RON_Drywall = 0x6a0; // FImpactFx
		constexpr auto RON_Electrical = 0x6f0; // FImpactFx
		constexpr auto RON_EnergyShield = 0x740; // FImpactFx
		constexpr auto RON_Fabric_Carpet = 0x790; // FImpactFx
		constexpr auto RON_Fabric_Stuffing = 0x7e0; // FImpactFx
		constexpr auto RON_Fabric_Thin = 0x830; // FImpactFx
		constexpr auto RON_Flesh = 0x880; // FImpactFx
		constexpr auto RON_Galvanized = 0x8d0; // FImpactFx
		constexpr auto RON_Glass_Plate = 0x920; // FImpactFx
		constexpr auto RON_Glass_Windshield = 0x970; // FImpactFx
		constexpr auto RON_Grass = 0x9c0; // FImpactFx
		constexpr auto RON_Gravel = 0xa10; // FImpactFx
		constexpr auto RON_Ice = 0xa60; // FImpactFx
		constexpr auto RON_Lava = 0xab0; // FImpactFx
		constexpr auto RON_Lead = 0xb00; // FImpactFx
		constexpr auto RON_Leaves = 0xb50; // FImpactFx
		constexpr auto RON_Limestone = 0xba0; // FImpactFx
		constexpr auto RON_Mahogany = 0xbf0; // FImpactFx
		constexpr auto RON_Marble_Coated = 0xc40; // FImpactFx
		constexpr auto RON_Marble_Thick = 0xc90; // FImpactFx
		constexpr auto RON_Mud = 0xce0; // FImpactFx
		constexpr auto RON_Oil = 0xd30; // FImpactFx
		constexpr auto RON_Paper = 0xd80; // FImpactFx
		constexpr auto RON_Pine = 0xdd0; // FImpactFx
		constexpr auto RON_Plaster = 0xe20; // FImpactFx
		constexpr auto RON_Plastic = 0xe70; // FImpactFx
		constexpr auto RON_Plywood = 0xec0; // FImpactFx
		constexpr auto RON_Polystyrene = 0xf10; // FImpactFx
		constexpr auto RON_Powder = 0xf60; // FImpactFx
		constexpr auto RON_Rock = 0xfb0; // FImpactFx
		constexpr auto RON_Rubber = 0x1000; // FImpactFx
		constexpr auto RON_Sand = 0x1050; // FImpactFx
		constexpr auto RON_Snow = 0x10a0; // FImpactFx
		constexpr auto RON_Soil = 0x10f0; // FImpactFx
		constexpr auto RON_Steel = 0x1140; // FImpactFx
		constexpr auto RON_Tin = 0x1190; // FImpactFx
		constexpr auto RON_Treewood = 0x11e0; // FImpactFx
		constexpr auto RON_Wallpaper = 0x1230; // FImpactFx
		constexpr auto RON_Water = 0x1280; // FImpactFx
	}

	namespace n_UHLODProxy { // : UObject
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x700; // UReplicationDriver*
	}

	namespace n_UARFaceGeometry { // : UARTrackedGeometry
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_AEvidenceActor { // : APickupActor
		constexpr auto ScoringComponent = 0x298; // UScoringComponent*
		constexpr auto EvidenceName = 0x2a0; // FString
		constexpr auto bEvidenceExtracted = 0x2b0; // char : 1
		constexpr auto PreviousEvidenceState = 0x2b1; // EEvidenceActorState
		constexpr auto EvidenceState = 0x2b2; // EEvidenceActorState
		constexpr auto bIsBeingCollected = 0x2b3; // bool
		constexpr auto CurrentCollectionTime = 0x2b4; // float
		constexpr auto MaxCollectionTime = 0x2b8; // float
		constexpr auto bInteractHeld = 0x2bc; // char : 1
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x260; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x270; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UReplaySubsystem { // : UGameInstanceSubsystem
		constexpr auto bLoadDefaultMapOnStop = 0x30; // bool
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bEnableBusSends = 0x38; // char : 1
		constexpr auto bEnableBaseSubmix = 0x38; // char : 1
		constexpr auto bEnableSubmixSends = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto SoundSubmixObject = 0x120; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x128; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x138; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x140; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x150; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x160; // TArray<UAssetUserData*>
	}

	namespace n_UGizmoRectangleComponent { // : UGizmoBaseComponent
		constexpr auto DirectionX = 0x470; // FVector
		constexpr auto DirectionY = 0x47c; // FVector
		constexpr auto OffsetX = 0x488; // float
		constexpr auto OffsetY = 0x48c; // float
		constexpr auto LengthX = 0x490; // float
		constexpr auto LengthY = 0x494; // float
		constexpr auto Thickness = 0x498; // float
		constexpr auto SegmentFlags = 0x49c; // char
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto SectionToKey = 0x90; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x98; // FMovieScenePropertyBinding
		constexpr auto Sections = 0xb0; // TArray<UMovieSceneSection*>
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1510; // TArray<UChannel*>
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xf0; // FMovieSceneByteChannel
	}

	namespace n_ADatasmithAreaLightActor { // : AActor
		constexpr auto Mobility = 0x220; // EComponentMobility
		constexpr auto LightType = 0x221; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x222; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x224; // FVector2D
		constexpr auto Intensity = 0x22c; // float
		constexpr auto IntensityUnits = 0x230; // ELightUnits
		constexpr auto Color = 0x234; // FLinearColor
		constexpr auto Temperature = 0x244; // float
		constexpr auto IESTexture = 0x248; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x250; // bool
		constexpr auto IESBrightnessScale = 0x254; // float
		constexpr auto Rotation = 0x258; // FRotator
		constexpr auto SourceRadius = 0x264; // float
		constexpr auto SourceLength = 0x268; // float
		constexpr auto AttenuationRadius = 0x26c; // float
		constexpr auto SpotlightInnerAngle = 0x270; // float
		constexpr auto SpotlightOuterAngle = 0x274; // float
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_UW_TeamStatus_C { // : UTeamStatusWidget
		constexpr auto UberGraphFrame = 0x3e8; // FPointerToUberGraphFrame
		constexpr auto LeftAligned_HorizontalBox = 0x3f0; // UHorizontalBox*
		constexpr auto RightAligned_HorizontalBox = 0x3f8; // UHorizontalBox*
		constexpr auto StyleSwitcher = 0x400; // UWidgetSwitcher*
	}

	namespace n_UW_ReplayControls_C { // : UReplayControls
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto BackButton = 0x268; // UButton*
		constexpr auto CurrentTime = 0x270; // UTextBlock*
		constexpr auto FollowLocalPlayerCheck = 0x278; // UCheckBox*
		constexpr auto FollowSelection = 0x280; // UComboBoxString*
		constexpr auto FOVSlider = 0x288; // USlider*
		constexpr auto MaxTime = 0x290; // UTextBlock*
		constexpr auto ReplayTimeSet = 0x298; // USlider*
		constexpr auto SelectNewReplayButton = 0x2a0; // UButton*
		constexpr auto TimeDilationSlider = 0x2a8; // USlider*
		constexpr auto ViewTarget = 0x2b0; // APlayerCharacter*
		constexpr auto bPaused = 0x2b8; // bool
		constexpr auto PlayRate = 0x2bc; // float
		constexpr auto FOV = 0x2c0; // float
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_AGeometryCollectionActor { // : AActor
		constexpr auto GeometryCollectionComponent = 0x220; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x228; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UPostProcessEffectData { // : UDataAsset
		constexpr auto PostProcess_Material = 0x30; // UMaterialInterface*
		constexpr auto ScalarParameters = 0x38; // TArray<FPostProcessSetting_FloatParam>
		constexpr auto VectorParameters = 0x48; // TArray<FPostProcessSetting_VectorParam>
		constexpr auto bDebug = 0x58; // char : 1
		constexpr auto Note = 0x60; // FText
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_ABuildingTrigger_Incrimination { // : ABuildingTrigger
		constexpr auto ClueSpawnPoints = 0x2c0; // TArray<AIncriminationClueSpawnPoint*>
	}

	namespace n_AQuadrotorPawn { // : APawn
		constexpr auto FlightBox = 0x280; // UBoxComponent*
		constexpr auto DroneMesh = 0x288; // USkeletalMeshComponent*
		constexpr auto FirstPersonCamera = 0x290; // UCameraComponent*
		constexpr auto RPM = 0x298; // float
		constexpr auto RPMThrottleMultiplier = 0x29c; // float
		constexpr auto bApplyingInput = 0x2a0; // bool
		constexpr auto MaxRPM = 0x2a4; // float
		constexpr auto IdleRPM = 0x2a8; // float
		constexpr auto RPMForceScale = 0x2ac; // float
		constexpr auto MaximumTilt = 0x2b0; // float
		constexpr auto MaxVelocity = 0x2b4; // float
		constexpr auto bEngineOn = 0x2b8; // bool
		constexpr auto RotorRotation = 0x2bc; // FRotator
		constexpr auto DroneTransform = 0x2d0; // FTransform
		constexpr auto TargetRotation = 0x300; // FRotator
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UCompositionGraphCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto bCanBlend = 0x90; // bool
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_ASWATCharacter { // : ACyberneticCharacter
		constexpr auto LastSetBestFocus = 0x2588; // AActor*
		constexpr auto SquadLeader = 0x25d0; // APlayerCharacter*
		constexpr auto MaxGestureCooldownTime = 0x2600; // float
		constexpr auto MinGestureCooldownTime = 0x2604; // float
	}

	namespace n_UPlayerHealthStatusWidget { // : UUserWidget
		constexpr auto Health = 0x260; // UHealthStatusWidget*
		constexpr auto Armor = 0x268; // UHealthStatusWidget*
		constexpr auto Helmet = 0x270; // UHealthStatusWidget*
		constexpr auto PlayerCharacter = 0x278; // APlayerCharacter*
	}

	namespace n_UW_BugReporterMenu_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto btn_Cancel = 0x268; // UW_Button_C*
		constexpr auto btn_Submit = 0x270; // UW_Button_C*
		constexpr auto BugCategory = 0x278; // UW_StandardCombobox_New_C*
		constexpr auto BugDescriptionText = 0x280; // UMultiLineEditableTextBox*
		constexpr auto BugSummaryText = 0x288; // UMultiLineEditableTextBox*
		constexpr auto lbl_Category = 0x290; // UW_Text_C*
		constexpr auto lbl_Description = 0x298; // UW_Text_C*
		constexpr auto lbl_Subject = 0x2a0; // UW_Text_C*
		constexpr auto lbl_Title = 0x2a8; // UW_Text_C*
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UGizmoPlaneTranslationParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UW_TeamProgressScore_C { // : UTeamProgressScoreWidget
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto CurrentScore_Overlay = 0x2a8; // UOverlay*
		constexpr auto CurrentScore_Overlay_Right = 0x2b0; // UOverlay*
		constexpr auto LeftAligned_HorizontalBox = 0x2b8; // UHorizontalBox*
		constexpr auto ProgressBar_Overlay = 0x2c0; // UOverlay*
		constexpr auto ProgressBar_Overlay_Right = 0x2c8; // UOverlay*
		constexpr auto RightAligned_HorizontalBox = 0x2d0; // UHorizontalBox*
		constexpr auto StyleSwitcher = 0x2d8; // UWidgetSwitcher*
		constexpr auto Alignment = 0x2e0; // EHorizontalAlignment
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x220; // UAudioComponent*
	}

	namespace n_AVote_EndRound_C { // : AReferendum
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x2b0; // USceneComponent*
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UClothConfigNv { // : UClothConfigCommon
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto ComponentSizeQuads = 0x458; // int32_t
		constexpr auto SubsectionSizeQuads = 0x45c; // int32_t
		constexpr auto NumSubsections = 0x460; // int32_t
		constexpr auto OverrideMaterial = 0x468; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x470; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x478; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x488; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x498; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x4a8; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4b8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4c8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4d0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4e0; // float
		constexpr auto HeightmapScaleBias = 0x4f0; // FVector4
		constexpr auto CachedLocalBox = 0x500; // FBox
		constexpr auto CollisionComponent = 0x51c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x538; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x540; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x550; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x560; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x568; // FGuid
		constexpr auto IrrelevantLights = 0x578; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x588; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x58c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x590; // float
		constexpr auto PositiveZBoundsExtension = 0x594; // float
		constexpr auto StaticLightingResolution = 0x598; // float
		constexpr auto ForcedLOD = 0x59c; // int32_t
		constexpr auto LODBias = 0x5a0; // int32_t
		constexpr auto StateId = 0x5a4; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5b4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5c8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5d0; // char
		constexpr auto MobileMaterialInterface = 0x5d8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5e0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5f0; // TArray<UTexture2D*>
	}

	namespace n_APrimary_Benelli_M4_C { // : AShotgun
		constexpr auto UberGraphFrame = 0x12c0; // FPointerToUberGraphFrame
		constexpr auto Shell6 = 0x12c8; // UShellRackShellComponent*
		constexpr auto Shell5 = 0x12d0; // UShellRackShellComponent*
		constexpr auto Shell4 = 0x12d8; // UShellRackShellComponent*
		constexpr auto Shell3 = 0x12e0; // UShellRackShellComponent*
		constexpr auto Shell2 = 0x12e8; // UShellRackShellComponent*
		constexpr auto Shell1 = 0x12f0; // UShellRackShellComponent*
		constexpr auto Shell0 = 0x12f8; // UShellRackShellComponent*
		constexpr auto LightToggle1P = 0x1300; // UAnimMontage*
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_ADestructableGlassActor { // : AActor
		constexpr auto ProceduralMesh = 0x220; // UProceduralMeshComponent*
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_UMirrorUnderDoorActivity { // : UDoorInteractionActivity
		constexpr auto MirrorContactType = 0x1d0; // EMirrorContactType
		constexpr auto SpottedCharacters = 0x1d8; // TArray<AAICharacter*>
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UChaosGameplayEventDispatcher { // : UChaosEventListenerComponent
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_APlacedC2Explosive { // : AActor
		constexpr auto ExplosionComp = 0x228; // UParticleSystemComponent*
		constexpr auto AudioComp = 0x230; // UFMODAudioComponent*
		constexpr auto MeshComp = 0x238; // USkeletalMeshComponent*
		constexpr auto C2InteractableComponent = 0x240; // UInteractableComponent*
		constexpr auto PerceptionStimuliComp = 0x248; // UAIPerceptionStimuliSourceComponent*
		constexpr auto ConnectedC2Explosive = 0x250; // AC2Explosive*
		constexpr auto PlacedByController = 0x258; // AController*
		constexpr auto DamageToInflict = 0x260; // float
		constexpr auto MinDamageToInflict = 0x264; // float
		constexpr auto DamageType = 0x268; // UDamageType*
		constexpr auto DamageInnerRadius = 0x270; // float
		constexpr auto DamageOuterRadius = 0x274; // float
		constexpr auto ExplosionPostKillTime = 0x278; // float
		constexpr auto bDetonated = 0x27c; // bool
		constexpr auto DoorIntegrityDamage = 0x280; // float
		constexpr auto TargetItem = 0x288; // AActor*
		constexpr auto FMODC2ExplosionAudio = 0x290; // UFMODEvent*
		constexpr auto PlacementHit = 0x298; // FHitResult
		constexpr auto bUseScreenShake = 0x320; // bool
		constexpr auto ExplosionScreenShake = 0x328; // UMatineeCameraShake*
		constexpr auto CameraShakeRadius = 0x330; // float
		constexpr auto StunDamageType = 0x338; // UStunDamage*
		constexpr auto bRemovedViaMultitool = 0x340; // bool
		constexpr auto bIsBeingRemoved = 0x350; // bool
		constexpr auto IsBeingRemovedBy = 0x358; // AReadyOrNotCharacter*
	}

	namespace n_UPointLightComponent { // : ULocalLightComponent
		constexpr auto bUseInverseSquaredFalloff = 0x340; // char : 1
		constexpr auto LightFalloffExponent = 0x344; // float
		constexpr auto SourceRadius = 0x348; // float
		constexpr auto SoftSourceRadius = 0x34c; // float
		constexpr auto SourceLength = 0x350; // float
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x358; // float
		constexpr auto OuterConeAngle = 0x35c; // float
	}

	namespace n_UMagicLeapARPinSaveGame { // : USaveGame
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UBoxFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UVariantObjectBinding { // : UObject
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_AIncriminationClue { // : APickupActor
		constexpr auto Delegate_OnClueFound = 0x288; // FMulticastInlineDelegate
		constexpr auto MapActorComponent = 0x298; // UMapActorComponent*
		constexpr auto ClueNumber = 0x2a0; // char
		constexpr auto ShowObjectiveMarkerIn = 0x2a4; // float
		constexpr auto NextClue = 0x2a8; // AIncriminationClue*
		constexpr auto ClueName = 0x2b0; // FText
		constexpr auto ClueFoundMessage = 0x2c8; // FText
		constexpr auto SpawnPointOwner = 0x2e0; // AIncriminationClueSpawnPoint*
		constexpr auto bClueFound = 0x2e8; // char : 1
		constexpr auto bClueTimerExpired = 0x2e8; // char : 1
		constexpr auto ClueState = 0x2e9; // EClueState
	}

	namespace n_URoNMoveStyleComponent { // : UActorComponent
		constexpr auto MoveStyleDatabase = 0xb0; // UDataTable*
		constexpr auto DefaultMoveStyleName = 0xb8; // FString
		constexpr auto DefaulGaitName = 0xc8; // FString
		constexpr auto ActiveMoveStyle = 0xd8; // FRoNMovementStyle
		constexpr auto Rep_MoveStyleName = 0x160; // FString
		constexpr auto ActiveGaitIndex = 0x170; // int32_t
		constexpr auto ActiveGaitName = 0x178; // FString
		constexpr auto bIsStrafing = 0x188; // bool
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto TimelineTickGroup = 0x90; // ETickingGroup
		constexpr auto VariableName = 0x94; // FName
		constexpr auto DirectionPropertyName = 0x9c; // FName
		constexpr auto UpdateFunctionName = 0xa4; // FName
		constexpr auto FinishedFunctionName = 0xac; // FName
	}

	namespace n_UPhononProbeComponent { // : USceneComponent
		constexpr auto ProbeLocations = 0x1f8; // TArray<FVector>
	}

	namespace n_UPhononSpatializationSourceSettings { // : USpatializationPluginSourceSettingsBase
		constexpr auto SpatializationMethod = 0x28; // EIplSpatializationMethod
		constexpr auto HrtfInterpolationMethod = 0x29; // EIplHrtfInterpolationMethod
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x220; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x228; // USceneComponent*
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x1a0; // EShadowMapFlags
	}

	namespace n_UToIntegerField { // : UFieldNodeInt
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_AShotgun { // : ABaseMagazineWeapon
		constexpr auto MaxShells = 0x1260; // int32_t
		constexpr auto TotalShells = 0x1264; // int32_t
		constexpr auto ShellsInWeapon = 0x1268; // int32_t
		constexpr auto MaxShellsInWeapon = 0x126c; // int32_t
		constexpr auto ShellWeight = 0x1270; // float
		constexpr auto bUseShellRack = 0x1274; // bool
		constexpr auto bRefreshingShellRack = 0x1275; // bool
		constexpr auto bReloadRack = 0x1276; // bool
		constexpr auto bVelcroRack = 0x1277; // bool
		constexpr auto bTapReload = 0x1278; // bool
		constexpr auto ShellsInRack = 0x127c; // int32_t
		constexpr auto MaxShellsInRack = 0x1280; // int32_t
		constexpr auto ShellMeshComponents = 0x1288; // TArray<UShellRackShellComponent*>
		constexpr auto ShotgunVisuals = 0x1298; // FShotgunVisuals
		constexpr auto ShellRackSockets = 0x12a8; // TArray<FName>
		constexpr auto bBlockingFireAnimation = 0x12b8; // bool
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV { // : UMaterialExpression
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UAnimSharingTransitionInstance { // : UAnimInstance
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto bRealTimeCapture = 0x228; // bool
		constexpr auto SourceType = 0x229; // ESkyLightSourceType
		constexpr auto Cubemap = 0x230; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x238; // float
		constexpr auto CubemapResolution = 0x23c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x240; // float
		constexpr auto bCaptureEmissiveOnly = 0x244; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x245; // bool
		constexpr auto LowerHemisphereColor = 0x248; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x258; // float
		constexpr auto Contrast = 0x25c; // float
		constexpr auto OcclusionExponent = 0x260; // float
		constexpr auto MinOcclusion = 0x264; // float
		constexpr auto OcclusionTint = 0x268; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x26c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x270; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x274; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x278; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x27c; // float
		constexpr auto OcclusionCombineMode = 0x280; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x328; // UTextureCube*
	}

	namespace n_UDebugLogLibrarySettings { // : UObject
		constexpr auto bUseTwosComplimentForDecimalToHexConversionOnNegativeNumbers = 0x28; // char : 1
		constexpr auto bCrashGameInShippingBuildConfiguration = 0x28; // char : 1
		constexpr auto bSaveLogMessagesToCustomLogFile = 0x28; // char : 1
		constexpr auto InfoColor = 0x2c; // FColor
		constexpr auto ErrorColor = 0x30; // FColor
		constexpr auto WarningColor = 0x34; // FColor
		constexpr auto SuccessColor = 0x38; // FColor
		constexpr auto ViewportLogKeys = 0x40; // TMap<FName, int32_t>
		constexpr auto bEnableSpecifiers = 0x90; // char : 1
		constexpr auto DisplaySpecifiersIn = 0x91; // ELoggingOptions
		constexpr auto LogCategorySpecifiers = 0x98; // TMap<EDebugLogType, FString>
		constexpr auto bLogContext = 0xe8; // char : 1
		constexpr auto DisplayContextIn = 0xe9; // ELoggingOptions
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UUserDefinedCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution { // : UFieldSystemMetaData
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_ULevelStreamingDynamic { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x68; // AActor*
		constexpr auto CreateSubObjects = 0x158; // TArray<UObject*>
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UWaveScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto Wavelength = 0xc0; // float
		constexpr auto Period = 0xc4; // float
		constexpr auto Function = 0xc8; // EWaveFunctionType
		constexpr auto Falloff = 0xc9; // EFieldFalloffType
	}

	namespace n_UMovieSceneTrackInstance { // : UObject
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_AFirePointActor { // : AActor
		constexpr auto CustomFireArray = 0x220; // TArray<FString>
		constexpr auto CoverType = 0x230; // ECoverFireType
		constexpr auto bIsCrouchCover = 0x231; // char : 1
		constexpr auto InUseByController = 0x238; // ACyberneticController*
		constexpr auto DefaultScene = 0x240; // USceneComponent*
	}

	namespace n_UFMODAudioPropagationComponent { // : UFMODAudioComponent
		constexpr auto AudioPlayLocation = 0x390; // FVector
		constexpr auto volumeToSet = 0x39c; // float
		constexpr auto silentDistance = 0x3a0; // float
		constexpr auto OcclusionAmount = 0x3a4; // float
		constexpr auto tickRate = 0x3a8; // float
		constexpr auto minDistance = 0x3ac; // float
		constexpr auto bPlayPropagation = 0x3b0; // bool
	}

	namespace n_UANIMBP_Zipcuffs_Placed_FP_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root = 0x348; // FAnimNode_Root
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x230; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x238; // bool
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0x160; // TMap<FName, FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x230; // TArray<UDataTable*>
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x1ba8; // UNetConnection*
	}

	namespace n_UQuartzClockHandle { // : UObject
		constexpr auto QuartzSubsystem = 0x168; // UQuartzSubsystem*
		constexpr auto WorldPtr = 0x188; // UWorld*
	}

	namespace n_ALevelVariantSetsActor { // : AActor
		constexpr auto LevelVariantSets = 0x220; // FSoftObjectPath
		constexpr auto DirectorInstances = 0x238; // TMap<UObject*, ULevelVariantSetsFunctionDirector*>
	}

	namespace n_UAnimNotify_FMODPlayEvent_C { // : UAnimNotify
		constexpr auto bFollow = 0x38; // bool
		constexpr auto AttachName = 0x40; // FString
		constexpr auto Event = 0x50; // UFMODEvent*
	}

	namespace n_UAnimNotify_WedgeDoor { // : UAnimNotify
		constexpr auto bWedgeDeployFinished = 0x38; // char : 1
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xf0; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x190; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x230; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2d0; // FMovieSceneFloatChannel
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5c0; // float
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_ULaserAttachment { // : UWeaponAttachment
		constexpr auto LaserParticleComponent = 0xff8; // UParticleSystemComponent*
		constexpr auto LaserBeamEndComponent = 0x1000; // UParticleSystemComponent*
		constexpr auto LaserParticle = 0x1008; // UParticleSystem*
		constexpr auto LaserBeamEnd = 0x1010; // UParticleSystem*
		constexpr auto BeamEndHitLocation = 0x1018; // FVector
		constexpr auto BeamEndHitNormal = 0x1024; // FVector
		constexpr auto BeamDistance = 0x1030; // float
		constexpr auto bRepOn = 0x1034; // bool
		constexpr auto LensFlareClass = 0x1038; // ALensFlare*
		constexpr auto SpawnedLensFlare = 0x1040; // ALensFlare*
		constexpr auto bRequireNVG = 0x1048; // bool
		constexpr auto bLaserOffDueToNotBeingEquipped = 0x1049; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_USourceEffectSimpleDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UArrestTargetActivity { // : UBaseActivity
		constexpr auto ArrestTarget = 0x1b0; // AReadyOrNotCharacter*
		constexpr auto ArrestInteraction = 0x1b8; // UInteractionsData*
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UMovieSceneEntitySystemLinker { // : UObject
		constexpr auto SystemGraph = 0x298; // FMovieSceneEntitySystemGraph
	}

	namespace n_UW_WeaponWheel_MagazineSlot_C { // : UUserWidget
		constexpr auto Mags_Container = 0x260; // UHorizontalBox*
		constexpr auto MagsOutline_Container = 0x268; // UHorizontalBox*
		constexpr auto Mags = 0x270; // TArray<UImage*>
	}

	namespace n_UNiagaraDataInterfaceSpline { // : UNiagaraDataInterface
		constexpr auto Source = 0x38; // AActor*
		constexpr auto SplineUserParameter = 0x40; // FNiagaraUserParameterBinding
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_AGeometryCollectionDebugDrawActor { // : AActor
		constexpr auto WarningMessage = 0x220; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x228; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x240; // bool
		constexpr auto bDebugDrawHierarchy = 0x241; // bool
		constexpr auto bDebugDrawClustering = 0x242; // bool
		constexpr auto HideGeometry = 0x243; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x244; // bool
		constexpr auto bShowRigidBodyCollision = 0x245; // bool
		constexpr auto bCollisionAtOrigin = 0x246; // bool
		constexpr auto bShowRigidBodyTransform = 0x247; // bool
		constexpr auto bShowRigidBodyInertia = 0x248; // bool
		constexpr auto bShowRigidBodyVelocity = 0x249; // bool
		constexpr auto bShowRigidBodyForce = 0x24a; // bool
		constexpr auto bShowRigidBodyInfos = 0x24b; // bool
		constexpr auto bShowTransformIndex = 0x24c; // bool
		constexpr auto bShowTransform = 0x24d; // bool
		constexpr auto bShowParent = 0x24e; // bool
		constexpr auto bShowLevel = 0x24f; // bool
		constexpr auto bShowConnectivityEdges = 0x250; // bool
		constexpr auto bShowGeometryIndex = 0x251; // bool
		constexpr auto bShowGeometryTransform = 0x252; // bool
		constexpr auto bShowBoundingBox = 0x253; // bool
		constexpr auto bShowFaces = 0x254; // bool
		constexpr auto bShowFaceIndices = 0x255; // bool
		constexpr auto bShowFaceNormals = 0x256; // bool
		constexpr auto bShowSingleFace = 0x257; // bool
		constexpr auto SingleFaceIndex = 0x258; // int32_t
		constexpr auto bShowVertices = 0x25c; // bool
		constexpr auto bShowVertexIndices = 0x25d; // bool
		constexpr auto bShowVertexNormals = 0x25e; // bool
		constexpr auto bUseActiveVisualization = 0x25f; // bool
		constexpr auto PointThickness = 0x260; // float
		constexpr auto LineThickness = 0x264; // float
		constexpr auto bTextShadow = 0x268; // bool
		constexpr auto TextScale = 0x26c; // float
		constexpr auto NormalScale = 0x270; // float
		constexpr auto AxisScale = 0x274; // float
		constexpr auto ArrowScale = 0x278; // float
		constexpr auto RigidBodyIdColor = 0x27c; // FColor
		constexpr auto RigidBodyTransformScale = 0x280; // float
		constexpr auto RigidBodyCollisionColor = 0x284; // FColor
		constexpr auto RigidBodyInertiaColor = 0x288; // FColor
		constexpr auto RigidBodyVelocityColor = 0x28c; // FColor
		constexpr auto RigidBodyForceColor = 0x290; // FColor
		constexpr auto RigidBodyInfoColor = 0x294; // FColor
		constexpr auto TransformIndexColor = 0x298; // FColor
		constexpr auto TransformScale = 0x29c; // float
		constexpr auto LevelColor = 0x2a0; // FColor
		constexpr auto ParentColor = 0x2a4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2a8; // float
		constexpr auto GeometryIndexColor = 0x2ac; // FColor
		constexpr auto GeometryTransformScale = 0x2b0; // float
		constexpr auto BoundingBoxColor = 0x2b4; // FColor
		constexpr auto FaceColor = 0x2b8; // FColor
		constexpr auto FaceIndexColor = 0x2bc; // FColor
		constexpr auto FaceNormalColor = 0x2c0; // FColor
		constexpr auto SingleFaceColor = 0x2c4; // FColor
		constexpr auto VertexColor = 0x2c8; // FColor
		constexpr auto VertexIndexColor = 0x2cc; // FColor
		constexpr auto VertexNormalColor = 0x2d0; // FColor
		constexpr auto SpriteComponent = 0x2d8; // UBillboardComponent*
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x40; // FLinearColor
	}

}