namespace off {
	constexpr auto GNames = 0x54c6cc0;
	constexpr auto GObjects = 0x54df468;
	constexpr auto GWorld = 0x5618fc0;

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UTBP_ContextualHelp_TeammateRevive_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAkMarkerCallbackInfo {
		constexpr auto Identifier = 0x38; // int32_t
		constexpr auto Position = 0x3c; // int32_t
		constexpr auto Label = 0x40; // FString
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6c0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6c8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6d8; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_ATigerScreenshotMapBuilder {
		constexpr auto PlayerController = 0x228; // ATigerPlayerController*
		constexpr auto CameraComponent = 0x230; // UCameraComponent*
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x450; // int32_t
		constexpr auto Hand = 0x454; // EControllerHand
		constexpr auto MotionSource = 0x458; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x460; // char : 1
		constexpr auto CurrentTrackingStatus = 0x464; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x465; // bool
		constexpr auto DisplayModelSource = 0x468; // FName
		constexpr auto CustomDisplayMesh = 0x470; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x478; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4f0; // UPrimitiveComponent*
	}

	namespace n_UTigerNearbySoundCueComponent {
		constexpr auto DistanceToPlaySoundOnSquared = 0xb0; // float
		constexpr auto DistanceToStopSoundOnSquared = 0xb4; // float
		constexpr auto PlayEvent = 0xb8; // UAkAudioEvent*
		constexpr auto StopEvent = 0xc0; // UAkAudioEvent*
		constexpr auto bDisableOcclusion = 0xc8; // bool
		constexpr auto CharacterOwner = 0xd0; // ATigerCharacter*
		constexpr auto AkComponent = 0xd8; // UAkComponent*
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x1f8; // float
		constexpr auto SpringDamping = 0x1fc; // float
		constexpr auto SpringLengthAtRest = 0x200; // float
		constexpr auto SpringRadius = 0x204; // float
		constexpr auto SpringChannel = 0x208; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x209; // bool
		constexpr auto SpringCompression = 0x20c; // float
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x238; // USceneCaptureComponentCube*
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_UTigerTraversalStateAirDashConfig {
		constexpr auto bResetOnWallJump = 0x50; // bool
		constexpr auto JumpVerticalVelocity = 0x54; // float
		constexpr auto PostJumpClimbInteractionDelay = 0x58; // float
		constexpr auto JumpCoolDownTime = 0x5c; // float
		constexpr auto bPreventFallingSlide = 0x60; // bool
		constexpr auto bResetAimGlideOnDoubleJump = 0x61; // bool
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UAkCallbackInfo {
		constexpr auto AkComponent = 0x28; // UAkComponent*
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_UTigerCharacterEyewearCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
		constexpr auto Mesh = 0x148; // TSoftObjectPtr<USkeletalMesh>
	}

	namespace n_UTigerAnimNotify_Discipline {
		constexpr auto Discipline = 0x38; // ETigerDisciplinesEnum
		constexpr auto DisciplineEvent = 0x39; // ETigerDisciplineEvent
	}

	namespace n_UTigerUserInputBinding {
		constexpr auto OnPresetChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto OnSettingChangedFromPreset = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInputBindingsReset = 0x48; // FMulticastInlineDelegate
		constexpr auto OnInputBindingChanged = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAxisInputBindingChanged = 0x68; // FMulticastInlineDelegate
		constexpr auto UserInputs = 0xf8; // FTigerInputBindings
		constexpr auto DefaultInputs = 0x138; // FTigerInputBindings
		constexpr auto DebugMappings = 0x178; // TArray<FInputActionKeyMapping>
		constexpr auto DebugAxisMappings = 0x188; // TArray<FInputAxisKeyMapping>
		constexpr auto ConsoleShippingDebugMappings = 0x198; // TArray<FInputActionKeyMapping>
		constexpr auto ConsoleShippingDebugAxisMappings = 0x1a8; // TArray<FInputAxisKeyMapping>
		constexpr auto WeaponCycleStyles = 0x1b8; // TArray<UTigerWeaponCycleStyle*>
		constexpr auto WeaponCycleStylesGamepad = 0x1c8; // TArray<UTigerWeaponCycleStyle*>
		constexpr auto BoundConsoleCommand = 0x1d8; // FString
		constexpr auto SensitivityCurve = 0x1e8; // UCurveFloat*
		constexpr auto SensitivityCurveGamepad = 0x1f0; // UCurveFloat*
		constexpr auto InputSettings = 0x1f8; // FTigerInputSettings
		constexpr auto DefaultInputSettings = 0x23c; // FTigerInputSettings
		constexpr auto CustomizableKeybindsDataAsset = 0x280; // UTigerCustomizableKeybindsDataAsset*
		constexpr auto InputPresetData = 0x288; // UTigerInputPresetDataAsset*
		constexpr auto UsedInputPreset = 0x290; // FName
		constexpr auto NameOfCustomPreset = 0x298; // FName
		constexpr auto DefaultWeaponCycleStyle = 0x2a0; // UTigerWeaponCycleStyle*
		constexpr auto bIsSwitchingPreset = 0x2a8; // bool
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
	}

	namespace n_UTigerAIPlayerPickUpItemTask {
		constexpr auto MaximumLootingDistance = 0x98; // float
	}

	namespace n_UTigerFleshOfMarbleConfig {
		constexpr auto BuffType = 0x160; // UTigerBuff*
		constexpr auto Montage = 0x168; // UAnimMontage*
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UTigerInWorldWidget {
		constexpr auto WorldLocation = 0x280; // FVector
		constexpr auto ComponentOffset = 0x28c; // FVector
		constexpr auto ViewportPosition = 0x298; // FVector2D
		constexpr auto InnerWidget = 0x2a0; // UTigerInWorldWidget*
		constexpr auto ComponentToFollow = 0x2a8; // TWeakObjectPtr<USceneComponent>
		constexpr auto PlayerDistanceScalingWidgets = 0x2b0; // TArray<UWidget*>
		constexpr auto bWasOnScreen = 0x2c0; // bool
		constexpr auto bLimitRotationAngleToSides = 0x2c1; // bool
		constexpr auto bSupportsHover = 0x2c2; // bool
		constexpr auto bShowDistanceMarker = 0x2c3; // bool
	}

	namespace n_UTBP_UI_TransitionHeader_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InAnimation = 0x268; // UWidgetAnimation*
		constexpr auto BackgroundImage = 0x270; // UImage*
		constexpr auto TextEffectWidget = 0x278; // URichTextBlock*
		constexpr auto TextWidget = 0x280; // URichTextBlock*
		constexpr auto Text = 0x288; // FText
		constexpr auto AnimationDelay = 0x2a0; // float
		constexpr auto EffectSizeMultiplier = 0x2a4; // float
		constexpr auto bHasInitializedEffect = 0x2a8; // bool
		constexpr auto HeaderType = 0x2a9; // ETigerHeaderType
		constexpr auto OnInAnimationFinished = 0x2b0; // FMulticastInlineDelegate
		constexpr auto StyleColor = 0x2c0; // ENUM_TextStyleColor
		constexpr auto HorizontalAlignment = 0x2c1; // EHorizontalAlignment
	}

	namespace n_UTigerDisciplineScouts {
		constexpr auto Server_PassiveComponent = 0xf0; // UTigerFamiliarScoutPassive*
		constexpr auto Server_SpawnedFamiliar = 0xf8; // ATigerFamiliarScout*
		constexpr auto Config = 0x100; // UTigerScoutsConfig*
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPlaneUpdatePayload
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_UAkPortalComponent {
		constexpr auto bDynamic = 0x1f8; // bool
		constexpr auto InitialState = 0x1f9; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x1fc; // float
		constexpr auto ObstructionUpdateThresholdDistance2DSqrd = 0x200; // float
		constexpr auto ObstructionDistantRefreshInterval = 0x204; // float
		constexpr auto ObstructionCollisionChannel = 0x208; // ECollisionChannel
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6c0; // USoundWave*
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x1f8; // UMaterialInterface*
		constexpr auto SortOrder = 0x200; // int32_t
		constexpr auto FadeScreenSize = 0x204; // float
		constexpr auto FadeStartDelay = 0x208; // float
		constexpr auto FadeDuration = 0x20c; // float
		constexpr auto FadeInDuration = 0x210; // float
		constexpr auto FadeInStartDelay = 0x214; // float
		constexpr auto bDestroyOwnerAfterFade = 0x218; // char : 1
		constexpr auto DecalSize = 0x21c; // FVector
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UInterpTrackInstAkAudioRTPC {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UTigerAIPlayerMoveToTask {
		constexpr auto ClimbTask = 0xb8; // UTigerAIPlayerClimbIfPossibleTask*
		constexpr auto SlideTask = 0xc0; // UTigerAIPlayerSlideIfPossibleTask*
		constexpr auto WallGrindTask = 0xc8; // UTigerAIPlayerWallGrindTask*
		constexpr auto CheckStuckDelay = 0xd0; // float
		constexpr auto CheckClimbTaskTransitionsDelay = 0xd8; // float
		constexpr auto CheckSlideTaskTransitionsDelay = 0xe0; // float
		constexpr auto JumpGapTransitionsDelay = 0xe8; // float
		constexpr auto LocalAIController = 0xf0; // ATigerLocalAIControllerBase*
		constexpr auto CurrentTigerPlayer = 0xf8; // ATigerPlayer*
	}

	namespace n_ATigerClientInteractiveSpawner {
		constexpr auto PendingCreationQueue = 0x2d8; // TMap<uint32_t, FClientSpawnData>
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x208; // FMulticastInlineDelegate
	}

	namespace n_UTBP_BestialTrailPart_SplineMesh_C {
		constexpr auto UberGraphFrame = 0x580; // FPointerToUberGraphFrame
		constexpr auto Visualizer = 0x588; // ATigerBestialTrailVisualizer*
	}

	namespace n_UABP_VMP_BRU_M_HAIR_07_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xba0; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_ATBP_ProjectionDash_TargetIndicator_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto PointLight = 0x230; // UPointLightComponent*
		constexpr auto StaticMesh = 0x238; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
	}

	namespace n_UTigerGameSingleton {
		constexpr auto GeneratedMontages = 0x28; // TMap<UAnimSequence*, UAnimMontage*>
	}

	namespace n_UTigerArchetypeSelectElysiumUI {
		constexpr auto PlayerCharacters = 0x3b0; // TArray<FTigerPersistentPlayerCharacter>
		constexpr auto AdditionalCharacterSlotItem = 0x3c0; // FTigerItemId
		constexpr auto NumCharacterSlots = 0x3c8; // char
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_UTigerItemDatabase {
		constexpr auto ItemsByCategory = 0x28; // TMap<FName, FTigerItemDatabaseCategory>
	}

	namespace n_AAkAcousticPortal {
		constexpr auto Portal = 0x260; // UAkPortalComponent*
		constexpr auto InitialState = 0x268; // AkAcousticPortalState
		constexpr auto bRequiresStateMigration = 0x269; // bool
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x348; // char : 1
		constexpr auto LightFalloffExponent = 0x34c; // float
		constexpr auto SourceRadius = 0x350; // float
		constexpr auto SoftSourceRadius = 0x354; // float
		constexpr auto SourceLength = 0x358; // float
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_ATigerBuildingSystem {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto SplineLeft = 0x230; // USplineComponent*
		constexpr auto SplineRight = 0x238; // USplineComponent*
		constexpr auto PoseableCornerFrontComponents = 0x240; // TArray<FTigerBuildingSystemTransformableCorner>
		constexpr auto PoseableCornerLeftComponents = 0x250; // TArray<FTigerBuildingSystemTransformableCorner>
		constexpr auto PoseableCornerBackComponents = 0x260; // TArray<FTigerBuildingSystemTransformableCorner>
		constexpr auto PoseableCornerRightComponents = 0x270; // TArray<FTigerBuildingSystemTransformableCorner>
		constexpr auto WallPieceInstancingDatas = 0x280; // FTigerBuildingSystemWallPieceInstancingData
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xb0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xb8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Jump_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UTigerMenuWidget {
		constexpr auto SharedMouseCursor = 0x280; // UTigerSharedMouseCursor*
		constexpr auto bStopPlayerInteractionsOnOpen = 0x288; // bool
		constexpr auto bShouldCloseOtherMenusOnOpen = 0x28a; // bool
	}

	namespace n_UTigerLinearColorSetAsset {
		constexpr auto ColorSets = 0x30; // TMap<FName, FLinearColor>
		constexpr auto ScalarParameters = 0x80; // TMap<FName, float>
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UTigerCombatComponent {
		constexpr auto DefaultUnarmedWeaponClass = 0xb0; // UTigerWeapon*
		constexpr auto DefaultMeleeItemAsset = 0xb8; // UTigerItemAsset*
		constexpr auto DefaultRangedItemAsset = 0xc0; // UTigerItemAsset*
		constexpr auto DefaultRangedStartingAmmo = 0xc8; // uint32_t
		constexpr auto OnEnterCombat = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnLeaveCombat = 0xe0; // FMulticastInlineDelegate
		constexpr auto CurrentWeaponClass = 0xf0; // UTigerWeapon*
		constexpr auto CurrentMeleeWeaponClass = 0xf8; // UTigerMeleeWeapon*
		constexpr auto CurrentVisibleWeaponClass = 0x100; // UTigerWeapon*
		constexpr auto OutOfCombatTime = 0x108; // float
		constexpr auto EntityDetectionSphere = 0x118; // float
		constexpr auto CombatState = 0x124; // char
	}

	namespace n_UTBP_UI_Quest_Marker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto IconCanvas = 0x2c0; // UCanvasPanel*
		constexpr auto QuestMarkerImage = 0x2c8; // UImage*
	}

	namespace n_UTigerSceneBackgroundUI {
		constexpr auto DefaultSubLevel = 0x2b8; // TSoftObjectPtr<UWorld>
		constexpr auto SubLevelList = 0x2e8; // UTigerSubLevelList*
		constexpr auto DefaultCameraTag = 0x2f0; // FName
		constexpr auto SpawnLocationTag = 0x2f8; // FName
		constexpr auto CameraTransitionParams = 0x300; // FViewTargetTransitionParams
		constexpr auto ItemPreviews = 0x310; // TSoftObjectPtr<UTigerItemPreviewAsset>
		constexpr auto ItemParentTag = 0x338; // FName
		constexpr auto ItemParentActor = 0x340; // ATigerSingleChildActor*
		constexpr auto CurrentPreviewItem = 0x348; // TSoftClassPtr<UObject>
		constexpr auto CinematicCameras = 0x370; // TArray<ACineCameraActor*>
		constexpr auto OnBackgroundShown = 0x3a0; // FMulticastInlineDelegate
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ArchetypePower_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_UTBP_Buff_KindredCharm_Player_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CooldownTime = 0x68; // float
	}

	namespace n_ATigerApartmentArchetype {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto Min = 0x230; // USceneComponent*
		constexpr auto Max = 0x238; // USceneComponent*
		constexpr auto PossibleWallpapers = 0x240; // TArray<UMaterialInterface*>
	}

	namespace n_UTBP_UI_MenuButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto SmallButton_OnIdle = 0x268; // UWidgetAnimation*
		constexpr auto SmallButton_OnReleased = 0x270; // UWidgetAnimation*
		constexpr auto SmallButton_OnPressed = 0x278; // UWidgetAnimation*
		constexpr auto SmallButton_OnClick = 0x280; // UWidgetAnimation*
		constexpr auto SmallButton_OnHover = 0x288; // UWidgetAnimation*
		constexpr auto Button = 0x290; // UButton*
		constexpr auto ButtonBackground = 0x298; // UImage*
		constexpr auto ButtonSelectionBorder = 0x2a0; // UTBP_UI_Box_C*
		constexpr auto ContentOverride = 0x2a8; // UNamedSlot*
		constexpr auto Image = 0x2b0; // UImage*
		constexpr auto Image_686 = 0x2b8; // UImage*
		constexpr auto ScalePanel = 0x2c0; // UCanvasPanel*
		constexpr auto SingleScalingButtonFill = 0x2c8; // UImage*
		constexpr auto SmallButton_Base = 0x2d0; // UImage*
		constexpr auto SmallButton_Border = 0x2d8; // UImage*
		constexpr auto SmallButton_Dot_Bottom = 0x2e0; // UImage*
		constexpr auto SmallButton_Dot_Top = 0x2e8; // UImage*
		constexpr auto SmallButton_Ornament_Bottom = 0x2f0; // UImage*
		constexpr auto SmallButton_Ornament_Top = 0x2f8; // UImage*
		constexpr auto SmallButton_SizeBox = 0x300; // USizeBox*
		constexpr auto SmallButtonTextWidget = 0x308; // UTigerStyledRichTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x310; // UWidgetSwitcher*
		constexpr auto OnClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BorderOpacity = 0x328; // float
		constexpr auto ButtonText = 0x330; // FText
		constexpr auto BorderOpacityTarget = 0x348; // float
		constexpr auto BorderOpacitySpeed = 0x34c; // float
		constexpr auto OnHovered = 0x350; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x360; // FMulticastInlineDelegate
		constexpr auto PressedColor = 0x370; // FLinearColor
		constexpr auto HoveredColor = 0x380; // FLinearColor
		constexpr auto NormalColor = 0x390; // FLinearColor
		constexpr auto BorderPressedColor = 0x3a0; // FLinearColor
		constexpr auto BorderHoveredColor = 0x3b0; // FLinearColor
		constexpr auto BorderNormalColor = 0x3c0; // FLinearColor
		constexpr auto RichTextFont = 0x3d0; // FDataTableRowHandle
		constexpr auto Hovered = 0x3e0; // bool
		constexpr auto Pressed = 0x3e1; // bool
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UTigerNpcDialogueList {
		constexpr auto DialogueIdBase = 0x30; // FString
		constexpr auto DialogueLines = 0x40; // TMap<FString, FTigerNpcDialogue>
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_AMagicLeapARPinRenderer {
		constexpr auto bInfoActorsVisibilityOverride = 0x228; // bool
		constexpr auto AllInfoActors = 0x230; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x288; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_UTigerBuffSingleSwingInstance {
		constexpr auto Player = 0x88; // ATigerPlayer*
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_ATBP_Enraged_C {
		constexpr auto UberGraphFrame = 0x230; // FPointerToUberGraphFrame
		constexpr auto RegeneratingEmitter = 0x238; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
		constexpr auto EnrageAkEventID = 0x248; // int32_t
	}

	namespace n_UAkAudioBank {
		constexpr auto AutoLoad = 0x50; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x58; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto LinkedAkEvents = 0xa8; // TSet<TSoftObjectPtr<UAkAudioEvent>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0xf8; // UAkAssetPlatformData*
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_UTigerEmoteWheelWidget {
		constexpr auto Player = 0x2a0; // ATigerPlayer*
		constexpr auto EmoteController = 0x2a8; // UTigerEmoteControllerComponent*
	}

	namespace n_UTigerGameFlowStateMap {
		constexpr auto FlowStateMap = 0x30; // TMap<UTigerGameFlowState*, UTigerGameFlowState*>
	}

	namespace n_UTBP_EyewearCustomization_Master_C {
		constexpr auto VisiblePiercingsFilter = 0x170; // TMap<ENUM_PiercingNames, bool>
	}

	namespace n_ATigerAICAP {
		constexpr auto Commands = 0x258; // TArray<UTigerAICommandBase*>
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x228; // APlayerController*
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto DefaultFOV = 0x240; // float
		constexpr auto DefaultOrthoWidth = 0x248; // float
		constexpr auto DefaultAspectRatio = 0x250; // float
		constexpr auto CameraCache = 0x2a0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x890; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe80; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1480; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1ab0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x20a0; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2690; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x26a0; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x26b0; // float
		constexpr auto FreeCamOffset = 0x26b4; // FVector
		constexpr auto ViewTargetOffset = 0x26c0; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x26d0; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x26f0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2700; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2708; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2748; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x2768; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2778; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2788; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2790; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2790; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2790; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2790; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2791; // char : 1
		constexpr auto ViewPitchMin = 0x2794; // float
		constexpr auto ViewPitchMax = 0x2798; // float
		constexpr auto ViewYawMin = 0x279c; // float
		constexpr auto ViewYawMax = 0x27a0; // float
		constexpr auto ViewRollMin = 0x27a4; // float
		constexpr auto ViewRollMax = 0x27a8; // float
		constexpr auto ServerUpdateCameraTimeout = 0x27b0; // float
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_UTigerJudgeCombatState {
		constexpr auto AttackTypes = 0x60; // TArray<UTigerJudgeBaseAttackState*>
		constexpr auto AvailableAttacks = 0x70; // TArray<UTigerJudgeBaseAttackState*>
		constexpr auto TimeWithoutSeeingBloodhuntedPlayers = 0x80; // float
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UTigerBuffAnarchHuntingKnifeInstance {
		constexpr auto HuntingKnifeBuff = 0x88; // UTigerBuffAnarchHuntingKnife*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x470; // FVector
		constexpr auto HandleSize = 0x47c; // float
		constexpr auto Thickness = 0x480; // float
		constexpr auto Direction = 0x484; // FVector
		constexpr auto Length = 0x490; // float
		constexpr auto bImageScale = 0x494; // bool
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UTigerCharacterIconCustomization {
		constexpr auto CharacterIcon = 0x110; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UTBP_Ping_Bark_Masquerade_C {
		constexpr auto DescriptionNotBloodhunted = 0x128; // FText
		constexpr auto MasqueradeIntactVO = 0x140; // UAkAudioEvent*
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UTigerVoipTalkerState {
		constexpr auto InputDeviceChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto OutputDeviceChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto PlayerTalkingStates = 0x90; // TArray<FTalkingState>
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x230; // char : 1
		constexpr auto bWakeOnLevelStart = 0x230; // char : 1
		constexpr auto SkeletalMeshComponent = 0x238; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x240; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x248; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x250; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x258; // UMaterialInterface*
	}

	namespace n_UTigerBuffMeleeCharge {
		constexpr auto TimeRunningBeforeBuffIsActive = 0x248; // float
		constexpr auto MaxDeviationAllowedInDegrees = 0x24c; // float
		constexpr auto AttackBuff = 0x250; // UTigerBuff*
	}

	namespace n_UTigerCustomMontageListClanAndGender {
		constexpr auto MontagesByClan = 0x28; // FTigerPlayerMontageByClan [0x2]
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UABP_VMP_TOR_M_HAIR_04_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_16 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3ec0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4300; // FAnimNode_AnimDynamics
	}

	namespace n_UTigerClientRewardTrackSeasonalChallenges {
		constexpr auto UnlockDate = 0x48; // FDateTime
		constexpr auto LockDate = 0x50; // FDateTime
		constexpr auto ChallengeInstanceIDs = 0x58; // TArray<FTigerChallengeInstanceID>
		constexpr auto RewardIdForSpecificChallenge = 0x68; // TArray<FTigerItemId>
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UTigerDisciplineAnimTriggered {
		constexpr auto AnimConfig = 0x78; // UTigerDisciplineAnimTriggeredConfig*
		constexpr auto LastPlayingMontage = 0x90; // UAnimMontage*
		constexpr auto TriggerTimes = 0x98; // TMap<UAnimMontage*, float>
	}

	namespace n_UTigerCharacterCardBackgroundCustomization {
		constexpr auto CardBackground = 0x110; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UTigerBuffingConsumableAsset {
		constexpr auto BuffToApply = 0x170; // UTigerBuff*
	}

	namespace n_UABP_VMP_TOR_M_HAIR_06_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_ATigerBuffPostProcess {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto PostProcess = 0x230; // UPostProcessComponent*
	}

	namespace n_UTigerBloodResonanceAsset {
		constexpr auto ResonanceName = 0x30; // FText
		constexpr auto InventoryLevel1Description = 0x48; // FText
		constexpr auto InventoryLevel2Description = 0x60; // FText
		constexpr auto InventoryLevel3Description = 0x78; // FText
		constexpr auto FeedRewardLevel1Description = 0x90; // FText
		constexpr auto FeedRewardLevel2Description = 0xa8; // FText
		constexpr auto FeedRewardLevel3Description = 0xc0; // FText
		constexpr auto ResonanceColor = 0xd8; // FColor
		constexpr auto ResonanceLevel1 = 0xe0; // TSoftObjectPtr<UTexture2D>
		constexpr auto ResonanceLevel2 = 0x108; // TSoftObjectPtr<UTexture2D>
		constexpr auto ResonanceLevel3 = 0x130; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotLevel1 = 0x158; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotLevel2 = 0x180; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotLevel3 = 0x1a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ResonanceVfx = 0x1d0; // TSoftObjectPtr<UMaterial>
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UTigerPassiveColossalStrength {
		constexpr auto UnarmedDamageMultiplier = 0x118; // float
	}

	namespace n_UTigerBuffUnseenPresence {
		constexpr auto BuffInstanceClass = 0x248; // UTigerBuffUnseenPresenceInstance*
		constexpr auto NearbySound = 0x250; // UAkAudioEvent*
		constexpr auto NearbySoundPlayDistanceSquared = 0x258; // float
	}

	namespace n_UTBP_ContextualHelp_MasqueradeDiscipline_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xb0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xd8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xd9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xda; // bool
		constexpr auto PostTransform = 0xe0; // FTransform
		constexpr auto bCopyXBounds = 0x110; // bool
		constexpr auto bCopyYBounds = 0x111; // bool
		constexpr auto bCopyZBounds = 0x112; // bool
	}

	namespace n_UABP_VMP_BRU_M_HAIR_13_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0xb50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0xf90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x13d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x1810; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1840; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1c80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x20c0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2500; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2520; // FAnimNode_ConvertLocalToComponentSpace
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x1f8; // float
		constexpr auto OrthoWidth = 0x1fc; // float
		constexpr auto OrthoNearClipPlane = 0x200; // float
		constexpr auto OrthoFarClipPlane = 0x204; // float
		constexpr auto AspectRatio = 0x208; // float
		constexpr auto bConstrainAspectRatio = 0x20c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x20c; // char : 1
		constexpr auto bLockToHmd = 0x20c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x20c; // char : 1
		constexpr auto ProjectionMode = 0x20d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x240; // float
		constexpr auto PostProcessSettings = 0x270; // FPostProcessSettings
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UTigerMajestyBuff {
		constexpr auto NPCDuration = 0x248; // float
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x230; // bool
		constexpr auto SourceType = 0x231; // ESkyLightSourceType
		constexpr auto Cubemap = 0x238; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x240; // float
		constexpr auto CubemapResolution = 0x244; // int32_t
		constexpr auto SkyDistanceThreshold = 0x248; // float
		constexpr auto bCaptureEmissiveOnly = 0x24c; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x24d; // bool
		constexpr auto LowerHemisphereColor = 0x250; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x260; // float
		constexpr auto Contrast = 0x264; // float
		constexpr auto OcclusionExponent = 0x268; // float
		constexpr auto MinOcclusion = 0x26c; // float
		constexpr auto OcclusionTint = 0x270; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x274; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x278; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x27c; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x280; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x284; // float
		constexpr auto OcclusionCombineMode = 0x288; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x348; // UTextureCube*
	}

	namespace n_UTigerJudgeSwordComponent {
		constexpr auto CharacterHitEffect = 0x4e0; // UParticleSystem*
		constexpr auto CharacterHitSound = 0x4e8; // UAkAudioEvent*
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x1f8; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x1f9; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x1fa; // char : 1
		constexpr auto bCaptureOnMovement = 0x1fa; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x1fb; // bool
		constexpr auto HiddenComponents = 0x200; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x210; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x220; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x230; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x240; // float
		constexpr auto MaxViewDistanceOverride = 0x244; // float
		constexpr auto CaptureSortPriority = 0x248; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x24c; // bool
		constexpr auto ShowFlagSettings = 0x250; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x290; // FString
	}

	namespace n_UTigerChallengePlayGames {
		constexpr auto RequiredClanCondition = 0xb0; // FTigerChallengeRequirementClan
		constexpr auto RequiredGameModeCondition = 0xc0; // FTigerChallengeRequirementGameMode
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UTigerChallengeHitBullets {
		constexpr auto RequiredWeaponConstraint = 0xb0; // FTigerChallengeRequirementWeaponType
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x460; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x468; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x470; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x471; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x472; // bool
		constexpr auto CachedBodySetup = 0x478; // UBodySetup*
		constexpr auto BodySetups = 0x480; // TArray<UBodySetup*>
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UTigerBlindingBeautyConfig {
		constexpr auto Montage = 0x160; // UAnimMontage*
		constexpr auto BlueprintActor = 0x168; // ATigerBlindingBeautyEffectActor*
		constexpr auto BlueprintActorLifetime = 0x170; // float
		constexpr auto BlindingDebuff = 0x178; // UTigerBuff*
		constexpr auto CharmDebuffPlayer = 0x180; // UTigerBuff*
		constexpr auto CharmDebuffNpc = 0x188; // UTigerBuff*
		constexpr auto BlindDuration = 0x190; // TArray<float>
		constexpr auto CharmPlayerDuration = 0x1a0; // float
		constexpr auto CharmNpcDuration = 0x1a4; // float
		constexpr auto TriggerTime = 0x1a8; // float
		constexpr auto ActiveTimeAfterTrigger = 0x1ac; // float
		constexpr auto GuaranteedBlindRange = 0x1b0; // float
		constexpr auto LookBlindRange = 0x1b4; // float
		constexpr auto LookDotProductHitThreshold = 0x1b8; // float
		constexpr auto BlindDamage = 0x1c0; // TArray<float>
		constexpr auto bShouldDamageCivilians = 0x1d0; // bool
		constexpr auto bUseCameraAsLookDirection = 0x1d1; // bool
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xb8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xc8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd0; // bool
		constexpr auto bNotifyCollisions = 0xd1; // bool
		constexpr auto ObjectType = 0xd2; // EObjectStateTypeEnum
		constexpr auto Density = 0xd4; // float
		constexpr auto MinMass = 0xd8; // float
		constexpr auto MaxMass = 0xdc; // float
		constexpr auto CollisionType = 0xe0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xe4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xe8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xec; // int32_t
		constexpr auto MinLevelSetResolution = 0xf0; // int32_t
		constexpr auto MaxLevelSetResolution = 0xf4; // int32_t
		constexpr auto CollisionGroup = 0xf8; // int32_t
		constexpr auto InitialVelocityType = 0xfc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x100; // FVector
		constexpr auto InitialAngularVelocity = 0x10c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackAkAudioRTPC {
		constexpr auto Param = 0x90; // FString
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UTBP_UI_ArchetypeInfo_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ChangedClan = 0x288; // UWidgetAnimation*
		constexpr auto FadeOutOverlay = 0x290; // UImage*
		constexpr auto LoadingSwitcher = 0x298; // UWidgetSwitcher*
		constexpr auto PowersWithVideoPreviews = 0x2a0; // UTBP_ArchetypeSelect_PowersWithVideoPreviews_C*
		constexpr auto Media Player = 0x2a8; // UMediaPlayer*
		constexpr auto ClanData = 0x2b0; // UTigerPlayerClanData*
		constexpr auto ArchetypeData = 0x2b8; // UTigerPowerKit*
		constexpr auto OnVideoStarted = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnVideoEnded = 0x2d0; // FMulticastInlineDelegate
	}

	namespace n_UTBP_ContextualHelp_RangedWeapon_SwitchWeaponInputReminder_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x230; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x240; // FMulticastInlineDelegate
		constexpr auto StateName = 0x250; // FName
		constexpr auto Pawn = 0x258; // APawn*
		constexpr auto Character = 0x268; // ACharacter*
		constexpr auto TransformComponent = 0x270; // USceneComponent*
		constexpr auto ControlRotation = 0x290; // FRotator
		constexpr auto bAttachToPawn = 0x29c; // char : 1
	}

	namespace n_UTigerCustomBlendSpace1DListClanAndGender {
		constexpr auto BlendSpacesByClan = 0x28; // FTigerPlayerBlendSpace1DByClan [0x2]
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UTigerAnimNotifyState_CameraPresetOverride {
		constexpr auto CameraPreset = 0x30; // UTigerCameraPreset*
	}

	namespace n_UTigerAICommandComponent {
		constexpr auto PermanentCap = 0xf0; // ATigerAiPermanentCap*
		constexpr auto Owner = 0xf8; // ATigerNPC*
		constexpr auto ActiveCommand = 0x100; // UTigerAICommandBase*
		constexpr auto LastPlayedCapMontage = 0x108; // UAnimMontage*
		constexpr auto CommandQueue = 0x110; // FTigerCommandQueue
		constexpr auto ContextBaseIdle = 0x120; // FName
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_UTigerHealingConsumableAsset {
		constexpr auto HealAmount = 0x170; // float
	}

	namespace n_UTigerEmoteControllerComponent {
		constexpr auto SelectableEmoteCount = 0xb0; // char
		constexpr auto PlayerController = 0xb8; // ATigerPlayerController*
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UTigerSpawnMechanicBattleRoyaleMapSelection {
		constexpr auto DesiredSpawnLocations = 0x50; // TArray<FTigerDesiredSpawnLocation>
	}

	namespace n_ATigerSplatmap {
		constexpr auto SplatmapParameterCollection = 0x228; // UMaterialParameterCollection*
		constexpr auto SplatTextureRenderTarget = 0x230; // UTextureRenderTarget2D*
		constexpr auto SplatmapCellReadMaterial = 0x238; // UMaterial*
		constexpr auto SplatmapCellReadMaterialInstance = 0x240; // UMaterialInstanceDynamic*
		constexpr auto BoundsSize = 0x248; // float
		constexpr auto CurrentGenerationSettings = 0x250; // UTigerSplatmapGenerationSettings*
		constexpr auto SplatmapCells = 0x258; // TArray<TWeakObjectPtr<ATigerSplatmapCell>>
		constexpr auto Root = 0x268; // USceneComponent*
		constexpr auto CellOwner = 0x270; // AActor*
		constexpr auto TickInterval = 0x278; // float
		constexpr auto MinRerenderDistance = 0x27c; // float
	}

	namespace n_ATigerJudge {
		constexpr auto JudgeShieldComponent = 0x988; // UTigerJudgeShieldComponent*
		constexpr auto JudgeSwordComponent = 0x990; // UTigerJudgeSwordComponent*
		constexpr auto FeedEvent = 0x998; // UTigerExperienceEvent*
		constexpr auto WorldMarkerComponent = 0x9a0; // UTigerWorldMarkerComponent*
		constexpr auto CurrentJudgeState = 0x9a8; // UTigerJudgeBaseState*
		constexpr auto FeedingPlayer = 0x9b8; // ATigerPlayer*
		constexpr auto HelicopterClass = 0x9c0; // ATigerEntityJudgeHelicopter*
		constexpr auto Helicopter = 0x9c8; // TWeakObjectPtr<ATigerEntityJudgeHelicopter>
		constexpr auto CurrentRotationSettings = 0x9d0; // FTigerJudgeRotationSettings
		constexpr auto CurrentPrimaryTarget = 0x9d8; // ATigerPlayer*
		constexpr auto DamageCauserCutoffDistanceSq = 0x9e0; // float
		constexpr auto AnimationTriggerWrapper = 0x9e8; // FTigerTimedAnimationTriggerWrapper
		constexpr auto PlayerDamageCollection = 0xa00; // TArray<FTigerJudgePlayerDamage>
	}

	namespace n_UTigerAiCheckIsTargetDowned {
		constexpr auto bConditionInvertedOnTick = 0x68; // bool
	}

	namespace n_UTigerHolyIncenseWaveComponent {
		constexpr auto OnWaveStartMovement = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnWaveStopped = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnWaveRevealed = 0xd0; // FMulticastInlineDelegate
		constexpr auto FallbackSeed = 0xe0; // int32_t
		constexpr auto FallbackHavenSeed = 0xe4; // int32_t
		constexpr auto bTestFallbackSeed = 0xe8; // bool
		constexpr auto WaveDataTables = 0xf0; // TArray<UDataTable*>
		constexpr auto WaveProgressSmoothingCurve = 0x100; // UCurveFloat*
		constexpr auto NumAvoidancePoints = 0x108; // int32_t
		constexpr auto bRetraceInnerAndOuterMapPaths = 0x10c; // bool
		constexpr auto MapGradientThickness = 0x110; // float
		constexpr auto TickCollisionAndMapTextureInterval = 0x114; // float
		constexpr auto CircumferenceKmForMinimumCollisionVertices = 0x118; // float
		constexpr auto CircumferenceKmForMaximumCollisionVertices = 0x11c; // float
		constexpr auto MinimumCollisionVertices = 0x120; // int32_t
		constexpr auto MaximumCollisionVertices = 0x124; // int32_t
		constexpr auto bUseInteriorTriangulation = 0x128; // bool
		constexpr auto bUseFallbackTriangulation = 0x129; // bool
		constexpr auto RedGasParameterCollection = 0x130; // UMaterialParameterCollection*
		constexpr auto MinimumSimulatedVertices = 0x138; // int32_t
		constexpr auto MaximumSimulatedVertices = 0x13c; // int32_t
		constexpr auto bRedistributeVertices = 0x140; // bool
		constexpr auto bOutputWaveGeneration = 0x141; // bool
		constexpr auto RepeatWaveGeneration = 0x144; // int32_t
		constexpr auto Waves = 0x148; // TArray<FTigerWaveData>
		constexpr auto Settings = 0x158; // FTigerHolyIncenseSettings
		constexpr auto RevealedWaves = 0x160; // TArray<FTigerRevealedWave>
		constexpr auto MaterialInstance = 0x170; // UMaterialInstanceDynamic*
		constexpr auto HolyIncense = 0x178; // ATigerHolyIncense*
		constexpr auto AssaultStartTime = 0x184; // float
		constexpr auto DefaultOverlapToleranceCm = 0x1d0; // float
		constexpr auto OverlapToleranceFailureIncrementCm = 0x1d4; // float
		constexpr auto OverlapToleranceFailuresBeforeIncrement = 0x1d8; // int32_t
		constexpr auto OverlapTestingPerformanceVertexCount = 0x1dc; // int32_t
		constexpr auto OverlapInterpStepDistanceCm = 0x1e0; // float
		constexpr auto OverlapMaximumInterpSteps = 0x1e4; // float
	}

	namespace n_UTBP_UI_TextButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PressedAnimation = 0x268; // UWidgetAnimation*
		constexpr auto Button = 0x270; // UButton*
		constexpr auto CustomText = 0x278; // UTigerStyledRichTextBlock*
		constexpr auto OnClicked = 0x280; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x290; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x2a0; // FMulticastInlineDelegate
		constexpr auto Text = 0x2b0; // FText
		constexpr auto TextNeutralStyle = 0x2c8; // FDataTableRowHandle
		constexpr auto TextHoveredStyle = 0x2d8; // FDataTableRowHandle
		constexpr auto IsPressed = 0x2e8; // bool
		constexpr auto TextNeutralOpacity = 0x2ec; // float
		constexpr auto TextHoveredOpacity = 0x2f0; // float
		constexpr auto bIsHovered = 0x2f4; // bool
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UTigerActionBuffer {
		constexpr auto BufferTimes = 0x28; // float [0x11]
		constexpr auto MaxNumberOfBufferedActions = 0x6c; // char
		constexpr auto BufferedActions = 0x70; // TArray<UTigerBufferedAction*>
		constexpr auto QueuedActions = 0x80; // TArray<UTigerBufferedAction*>
		constexpr auto Owner = 0x90; // TWeakObjectPtr<ATigerPlayerController>
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UTigerArtifactPickedupPrompt {
		constexpr auto ArtifactAsset = 0x2a8; // UTigerArtifactAsset*
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_ATigerGrimoireCard {
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
		constexpr auto FrontTexture = 0x230; // UTexture*
		constexpr auto BackfaceTextureDMNR = 0x238; // UTexture*
		constexpr auto bIsFloating = 0x240; // bool
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x480; // AChaosSolverActor*
		constexpr auto RestCollection = 0x568; // UGeometryCollection*
		constexpr auto InitializationFields = 0x570; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x580; // bool
		constexpr auto ObjectType = 0x588; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x589; // bool
		constexpr auto ClusterGroupIndex = 0x58c; // int32_t
		constexpr auto MaxClusterLevel = 0x590; // int32_t
		constexpr auto DamageThreshold = 0x598; // TArray<float>
		constexpr auto ClusterConnectionType = 0x5a8; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x5ac; // int32_t
		constexpr auto CollisionSampleFraction = 0x5b0; // float
		constexpr auto LinearEtherDrag = 0x5b4; // float
		constexpr auto AngularEtherDrag = 0x5b8; // float
		constexpr auto PhysicalMaterial = 0x5c0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5c8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5cc; // FVector
		constexpr auto InitialAngularVelocity = 0x5d8; // FVector
		constexpr auto PhysicalMaterialOverride = 0x5e8; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x5f0; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x640; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x650; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x678; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x688; // float
		constexpr auto CachePlayback = 0x68c; // bool
		constexpr auto OnChaosPhysicsCollision = 0x690; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x6a0; // bool
		constexpr auto bNotifyCollisions = 0x6a1; // bool
		constexpr auto bEnableReplication = 0x6a2; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x6a3; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x6a4; // int32_t
		constexpr auto RepData = 0x6a8; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x8d8; // UBodySetup*
	}

	namespace n_UTigerAnimNotify_CameraShake {
		constexpr auto ShakeType = 0x38; // UMatineeCameraShake*
		constexpr auto ShakeScale = 0x40; // float
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x110; // TArray<int8_t>
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UTigerAiIsHeightElevationBlockingVision {
		constexpr auto TargetLocationKey = 0x68; // FBlackboardKeySelector
		constexpr auto bCanSeeTargetKey = 0x90; // FBlackboardKeySelector
		constexpr auto MaxVerticalAngleToTarget = 0xb8; // float
		constexpr auto LargeEnoughHeightDifference = 0xbc; // float
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UTigerMontageList {
		constexpr auto MontageList = 0x28; // TArray<UAnimMontage*>
	}

	namespace n_UTigerIncitePainConfig {
		constexpr auto DamageAmount = 0x170; // float
		constexpr auto Radius = 0x174; // float
		constexpr auto Reach = 0x178; // float
		constexpr auto bDebugDraw = 0x17c; // bool
	}

	namespace n_UTigerPlayerDataService {
		constexpr auto TigerRequestUtility = 0x50; // UTigerRequestUtility*
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x278; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x280; // UParticleSystem*
		constexpr auto BaseCamera = 0x288; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x290; // FTransform
		constexpr auto BaseFOV = 0x2c0; // float
		constexpr auto bAllowMultipleInstances = 0x2c4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2c4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2c8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2d8; // float
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x478; // bool
		constexpr auto bAttachEnd = 0x479; // bool
		constexpr auto AttachEndTo = 0x480; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x4a8; // FName
		constexpr auto EndLocation = 0x4b0; // FVector
		constexpr auto CableLength = 0x4bc; // float
		constexpr auto NumSegments = 0x4c0; // int32_t
		constexpr auto SubstepTime = 0x4c4; // float
		constexpr auto SolverIterations = 0x4c8; // int32_t
		constexpr auto bEnableStiffness = 0x4cc; // bool
		constexpr auto bUseSubstepping = 0x4cd; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x4ce; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x4cf; // bool
		constexpr auto bEnableCollision = 0x4d0; // bool
		constexpr auto CollisionFriction = 0x4d4; // float
		constexpr auto CableForce = 0x4d8; // FVector
		constexpr auto CableGravityScale = 0x4e4; // float
		constexpr auto CableWidth = 0x4e8; // float
		constexpr auto NumSides = 0x4ec; // int32_t
		constexpr auto TileMaterial = 0x4f0; // float
	}

	namespace n_UTBP_ContextualHelp_Consumable_LowHPReminder_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto LowHealthTriggerLimit = 0xf8; // float
	}

	namespace n_UABP_VMP_NOS_M_HAIR_02_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x318; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x340; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x1cc0; // FAnimNode_AnimDynamics
	}

	namespace n_UTBP_ContextualHelp_Tutorial_SlideJump_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_UTigerCharacterPoseableMesh {
		constexpr auto Mesh = 0x28; // USkeletalMesh*
		constexpr auto AnimClass = 0x30; // UTigerCharacterPoseableMeshAnimInstance*
	}

	namespace n_UTigerCrosshairWidget {
		constexpr auto PreviousInteraction = 0x280; // ETargetInteraction
		constexpr auto PreviousInteractionObject = 0x288; // UObject*
		constexpr auto PreviousInteractionCharacter = 0x290; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto Inventory = 0x298; // UTigerInventoryComponent*
		constexpr auto ProgressBarMaterial = 0x2a0; // UMaterialInstanceDynamic*
		constexpr auto RootPanel = 0x2a8; // UCanvasPanel*
		constexpr auto TigerPlayer = 0x2b0; // ATigerPlayer*
		constexpr auto CurrentWeaponCrosshair = 0x2b8; // UTigerWeaponCrosshairWidget*
		constexpr auto PreviousWeaponCrosshairs = 0x2c0; // TArray<UTigerWeaponCrosshairWidget*>
		constexpr auto ProgressValue = 0x2d0; // float
		constexpr auto CurrentProgressBarColor = 0x2d4; // ETigerUIColor
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_UTigerSpawnMechanicRandomPlayerStart {
		constexpr auto GameMode = 0x28; // ATigerGameMode*
		constexpr auto AllPlayerStarts = 0x30; // TArray<AActor*>
		constexpr auto UnusedPlayerStarts = 0x40; // TArray<AActor*>
	}

	namespace n_UTigerAICommandAbandonCAP {
		constexpr auto ChanceToAbandonCAP = 0x40; // float
		constexpr auto bShouldFindSpline = 0x44; // bool
	}

	namespace n_UTBP_UI_PromotionalPopup_C {
		constexpr auto UberGraphFrame = 0x300; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x308; // UWidgetAnimation*
		constexpr auto CloseButton = 0x310; // UTBP_UI_MenuButton_C*
		constexpr auto CloseImage = 0x318; // UImage*
		constexpr auto CornerCloseButton = 0x320; // UButton*
		constexpr auto DescriptionWidget = 0x328; // UTigerStyledRichTextBlock*
		constexpr auto GoToStoreButton = 0x330; // UTBP_UI_MenuButton_C*
		constexpr auto HeaderWidget = 0x338; // UTigerStyledRichTextBlock*
		constexpr auto Image_104 = 0x340; // UImage*
		constexpr auto PromoImageWidget = 0x348; // UImage*
		constexpr auto TBP_UI_Divider = 0x350; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_2 = 0x358; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Gradient = 0x360; // UTBP_UI_Gradient_C*
		constexpr auto EF_TextFormatting = 0x368; // FString
		constexpr auto Bold_TextFormating = 0x378; // FString
		constexpr auto UL_TextFormatting = 0x388; // FString
		constexpr auto Subtitle_TextFormatting = 0x398; // FString
		constexpr auto Subheader_TextFormatting = 0x3a8; // FString
		constexpr auto BR_TextFormatting = 0x3b8; // FText
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x110; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x140; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x170; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f0; // FMulticastInlineDelegate
	}

	namespace n_UTigerDisciplineLaceratingThrow {
		constexpr auto Config = 0xf0; // UTigerLaceratingThrowConfig*
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UTBP_UI_Scrollbox_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ScrollBoxSlot = 0x268; // UNamedSlot*
		constexpr auto bEnabled = 0x270; // bool
		constexpr auto ScrollBoxRef = 0x278; // UScrollBox*
		constexpr auto UserScrolledWithAnalogStick = 0x280; // FMulticastInlineDelegate
		constexpr auto ScrollOverTimeModifier = 0x290; // float
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UTigerAiBarkTask {
		constexpr auto BarkToPlay = 0x70; // FTigerNpcVoCategory
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_ATigerMusicManager {
		constexpr auto AudioComponent = 0x228; // UAudioComponent*
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UTigerHitVerificationSettings {
		constexpr auto bEnableVerification = 0x38; // bool
		constexpr auto MaxEndPointDistance = 0x3c; // float
		constexpr auto MaxStartingPointDistance = 0x40; // float
		constexpr auto SkipSimulatePathDistanceSquared = 0x44; // float
		constexpr auto MaxAngleDeviationFromPredictedPath = 0x48; // float
		constexpr auto MaxDistanceFromProjectilePath = 0x4c; // float
		constexpr auto MinPathCountForLOSSubdivideCheck = 0x50; // int32_t
		constexpr auto MinPathCountForComplexLOSCheck = 0x54; // int32_t
		constexpr auto MaxComplexLOSChecks = 0x58; // int32_t
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UTBP_UI_Crosshair_SingleShort_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UTigerMapUi {
		constexpr auto GasOverlayWorldTimeSeconds = 0x280; // FName
		constexpr auto GasOverlayWaveRevealTime = 0x288; // FName
	}

	namespace n_UTigerAIPetStoreValidMasterPos {
		constexpr auto MasterPlayer = 0x70; // FBlackboardKeySelector
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UTigerNpcPropComponent {
		constexpr auto OwnerMeshComp = 0xb0; // USkeletalMeshComponent*
		constexpr auto AttachedProps = 0xb8; // TArray<FTigerPropAttachment>
		constexpr auto FreeProps = 0xc8; // TArray<TScriptInterface<ITigerPropCompInterface>>
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UTigerPingControllerComponent {
		constexpr auto OnPingUsedInTutorial = 0xb0; // FMulticastInlineDelegate
		constexpr auto MaxTraceLength = 0xc0; // float
		constexpr auto WheelHoldTime = 0xc4; // float
		constexpr auto DoublePressTimeout = 0xc8; // float
		constexpr auto PingHeightOffset = 0xcc; // float
		constexpr auto PingSpamPreventionTime = 0xd0; // float
		constexpr auto OwningController = 0xd8; // ATigerPlayerController*
		constexpr auto PingCoordinator = 0xe0; // UTigerPingCoordinator*
		constexpr auto WorldIconController = 0xe8; // UTigerInWorldIconController*
		constexpr auto ActivePings = 0xf0; // TArray<FTigerPingWrapper>
		constexpr auto ReusablePings = 0x100; // TArray<FTigerPingWrapper>
		constexpr auto UnresolvedActors = 0x110; // TArray<UTigerPingClientData*>
		constexpr auto PingSetup = 0x120; // UTigerPingSetupAsset*
		constexpr auto SoftPingSetupPtr = 0x128; // TSoftObjectPtr<UTigerPingSetupAsset>
		constexpr auto bEnablePingsInTutorial = 0x239; // bool
		constexpr auto HitItemSphereRadius = 0x23c; // float
		constexpr auto VehicleHitForwardDot = 0x240; // float
	}

	namespace n_UTigerPerformanceIndicatorSettings {
		constexpr auto bEnablePerformanceIndicators = 0x38; // bool
		constexpr auto WarmupTimer = 0x3c; // float
		constexpr auto CooldownTimer = 0x40; // float
		constexpr auto WarningFPS = 0x44; // float
		constexpr auto SevereFPS = 0x48; // float
		constexpr auto WarningServerFPS = 0x4c; // float
		constexpr auto SevereServerFPS = 0x50; // float
		constexpr auto WarningLatency = 0x54; // float
		constexpr auto SevereLatency = 0x58; // float
		constexpr auto WarningLatencyVariation = 0x5c; // float
		constexpr auto SevereLatencyVariation = 0x60; // float
		constexpr auto WarningPacketLoss = 0x64; // float
		constexpr auto SeverePacketLoss = 0x68; // float
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_UTigerAiBenchmarkDisciplineTask {
		constexpr auto AIControllerBase = 0x98; // ATigerLocalAIControllerBase*
		constexpr auto TigerPlayerController = 0xa0; // ATigerPlayerController*
		constexpr auto AiTigerCharacter = 0xa8; // ATigerCharacter*
		constexpr auto TigerPlayer = 0xb0; // ATigerPlayer*
		constexpr auto DisciplineComponent = 0xb8; // UTigerDisciplineComponent*
		constexpr auto CurrentDisciplineBase = 0xc0; // UTigerDisciplineBase*
	}

	namespace n_UTigerDialogueCondition_DialogueRead {
		constexpr auto ListId = 0x30; // FString
		constexpr auto DialogueId = 0x40; // FString
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x228; // UDecalComponent*
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_ATigerAiBaseController {
		constexpr auto SpawnPoint = 0x330; // FVector
		constexpr auto SightConfigAsset = 0x340; // UTigerSightConfigAsset*
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UTigerAIBenchmarkFindPlayerTask {
		constexpr auto bUseHeightenedSensesSearchRadius = 0x98; // bool
		constexpr auto CustomSearchSphereRadius = 0x9c; // float
		constexpr auto bDrawSearchSphere = 0xa0; // bool
		constexpr auto MaxVerticalPositionOffset = 0xa4; // float
		constexpr auto RaycastDistance = 0xa8; // float
		constexpr auto SearchLowLevelThreshold = 0xac; // int32_t
		constexpr auto SearchLowHealthPercentageThreshold = 0xb0; // float
	}

	namespace n_UTigerAnimNotifyState_WallGrindFX {
		constexpr auto SocketsToUse = 0x30; // TArray<FName>
	}

	namespace n_UTigerBloodTrackPassiveConfig {
		constexpr auto Category = 0x118; // ETigerBloodTrackPassiveCategory
		constexpr auto bCanBeMoved = 0x119; // bool
	}

	namespace n_UTigerLocalThrallData {
		constexpr auto BaseData = 0x28; // UTigerBaseThrallData*
		constexpr auto PersistentData = 0x30; // FTigerPersistentThrallData
	}

	namespace n_UTigerRewardsPopup {
		constexpr auto ZValue = 0x2a0; // int32_t
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UTigerSplatmapPaintingSettings {
		constexpr auto Stamp = 0x28; // TWeakObjectPtr<UTexture2D>
		constexpr auto Channels = 0x30; // TArray<bool>
		constexpr auto Opacity = 0x40; // float
		constexpr auto StampWorldSize = 0x44; // float
	}

	namespace n_AAkSpatialAudioVolume {
		constexpr auto SurfaceReflectorSet = 0x260; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x268; // UAkLateReverbComponent*
		constexpr auto Room = 0x270; // UAkRoomComponent*
		constexpr auto EnableSurfaceReflectorSets = 0x278; // bool
	}

	namespace n_UPostEventAtLocationAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xb0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc0; // UAISense*
		constexpr auto AIOwner = 0xd8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x160; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UTigerAiPlayerUseWeaponPower {
		constexpr auto LocalAIController = 0x80; // ATigerLocalAIControllerBase*
		constexpr auto PlayerController = 0x88; // ATigerPlayerController*
		constexpr auto WeaponAbility = 0x90; // UTigerDisciplineBase*
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UTigerAiPlayerDiablerizeTask {
		constexpr auto MaximumDiablerizeDistance = 0x98; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UTigerBuffShieldBase {
		constexpr auto MaxShield = 0x248; // float
		constexpr auto InitialShield = 0x24c; // float
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UTigerDisciplinePassion {
		constexpr auto Config = 0x78; // UTigerPassionConfig*
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UTigerThrallSystemSettings {
		constexpr auto AbilitiesTable = 0x38; // TSoftObjectPtr<UDataTable>
		constexpr auto BaseThrallsTable = 0x60; // TSoftObjectPtr<UDataTable>
		constexpr auto StatModifiersTable = 0x88; // TSoftObjectPtr<UDataTable>
		constexpr auto ThrallMissionsTable = 0xb0; // TSoftObjectPtr<UDataTable>
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UTBP_UI_PingLocation_C {
		constexpr auto UberGraphFrame = 0x2d8; // FPointerToUberGraphFrame
		constexpr auto Outline_Pulse_Anim = 0x2e0; // UWidgetAnimation*
		constexpr auto OnLocPingAnim = 0x2e8; // UWidgetAnimation*
		constexpr auto BG_Dot_Border = 0x2f0; // UImage*
		constexpr auto BG_Dot_Dark = 0x2f8; // UImage*
		constexpr auto DiamondBG = 0x300; // UImage*
		constexpr auto DiamondBG_Animated = 0x308; // UImage*
		constexpr auto DiamondBG_Animated_Pulse = 0x310; // UImage*
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UTBP_HairColorCustomization_Master_C {
		constexpr auto UberGraphFrame = 0x148; // FPointerToUberGraphFrame
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_ATigerLootBoxSpawner {
		constexpr auto LootBoxClass = 0x268; // ATigerLootBox*
		constexpr auto MinimumNumberOfItems = 0x270; // int32_t
		constexpr auto MaximumNumberOfItems = 0x274; // int32_t
		constexpr auto TelemetryIDSource = 0x27c; // ETigerTelemetryItemSourceID
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UTigerThrallMapUI {
		constexpr auto SubLevelName = 0x3b0; // FName
		constexpr auto SubLevelCamName = 0x3b8; // FName
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UTigerDisciplinesUi {
		constexpr auto DisciplineComponent = 0x280; // UTigerDisciplineComponent*
		constexpr auto FeedingComponent = 0x288; // UTigerFeedingComponent*
		constexpr auto DisciplineForSlot = 0x290; // UTigerDisciplineBase* [0x3]
		constexpr auto DisciplineTypeForSlot = 0x2a8; // ETigerDisciplinesEnum [0x3]
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UTigerPowerKit {
		constexpr auto ArchetypeType = 0x30; // ETigerPowerKitType
		constexpr auto DISPLAYNAME = 0x38; // FText
		constexpr auto ArchetypeKeywordsText = 0x50; // FText
		constexpr auto FormattedDescription = 0x68; // FText
		constexpr auto ArchetypeColor = 0x80; // FColor
		constexpr auto ArchetypeSelectTexture = 0x88; // TSoftObjectPtr<UTexture2D>
		constexpr auto ArchetypeHighlightMaterial = 0xb0; // TSoftObjectPtr<UMaterial>
		constexpr auto ArchetypeBackgroundTexture = 0xd8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ArchetypeIcon = 0x100; // TSoftObjectPtr<UTexture2D>
		constexpr auto ArchetypeSelectCinematic = 0x128; // UMediaSource*
		constexpr auto DefaultBloodTrack = 0x130; // UTigerBloodTrackPreset*
		constexpr auto BloodTrackPassives = 0x138; // TArray<UTigerBloodTrackPassiveConfig*>
		constexpr auto Passives = 0x148; // TArray<UTigerPassiveConfig*>
		constexpr auto Stats = 0x158; // FTigerCharacterStatModification
		constexpr auto LeftDiscipline = 0x1e8; // ETigerDisciplinesEnum
		constexpr auto RightDiscipline = 0x1e9; // ETigerDisciplinesEnum
		constexpr auto DefaultCharacterPreset = 0x1f0; // TSoftObjectPtr<UTigerCharacterPreset>
		constexpr auto FirstTimeCharacterPreset = 0x218; // TSoftObjectPtr<UTigerCharacterPreset>
		constexpr auto BotOutfitPresets = 0x240; // TSoftObjectPtr<UTigerCharacterPreset> [0x2]
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x468; // float
		constexpr auto CapsuleRadius = 0x46c; // float
	}

	namespace n_UTigerAIPlayerFindClosestItemTask {
		constexpr auto MaxVerticalPositionOffset = 0x98; // float
		constexpr auto RaycastDistance = 0x9c; // float
		constexpr auto SearchSphereRadius = 0xa0; // float
	}

	namespace n_UTigerBuffInAirMomentumLoss {
		constexpr auto MinimumHorizontalSpeed = 0x248; // float
		constexpr auto TimeToDecelerate = 0x24c; // float
	}

	namespace n_UTigerChallengeDrainNpc {
		constexpr auto bSpecificNPCType = 0xb0; // bool
		constexpr auto TargetNPCType = 0xb1; // ETigerNPCType
		constexpr auto MinimumPotency = 0xb2; // ETigerBloodPotency
	}

	namespace n_UTBP_UI_LoginScreen_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto FadeOut = 0x298; // UWidgetAnimation*
		constexpr auto FadeIn = 0x2a0; // UWidgetAnimation*
		constexpr auto BlackFade = 0x2a8; // UImage*
		constexpr auto ErrorMessage = 0x2b0; // UTextBlock*
		constexpr auto ExportGateDeniedPopup = 0x2b8; // UTBP_UI_LicenseAgreement_Popup_C*
		constexpr auto ExportGatePopup = 0x2c0; // UTBP_UI_LicenseAgreement_Popup_C*
		constexpr auto GetDevTicketSection = 0x2c8; // UTBP_UI_GetDevTicketSection_C*
		constexpr auto LoginQueueSection = 0x2d0; // UTBP_UI_LoginQueueSection_C*
		constexpr auto LoginSection = 0x2d8; // UTBP_UI_LoginSection_C*
		constexpr auto RegistrationSection = 0x2e0; // UTBP_UI_RegistrationSection_C*
		constexpr auto SectionSwitcher = 0x2e8; // UWidgetSwitcher*
		constexpr auto StatusSwitcher = 0x2f0; // UWidgetSwitcher*
		constexpr auto TBP_UI_Loading_Throbber = 0x2f8; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TigerSafeZoneWidget_1 = 0x300; // UTigerSafeZoneWidget*
		constexpr auto Vein1 = 0x308; // UImage*
		constexpr auto Vein2 = 0x310; // UImage*
		constexpr auto Vein3 = 0x318; // UImage*
		constexpr auto VerificationSection = 0x320; // UTBP_UI_VerificationSection_C*
		constexpr auto WorkThrobber = 0x328; // USizeBox*
		constexpr auto LoginSucceeded = 0x330; // FMulticastInlineDelegate
		constexpr auto OnValidVersionDispatch = 0x340; // FMulticastInlineDelegate
		constexpr auto OnInvalidVersionDispatch = 0x350; // FMulticastInlineDelegate
		constexpr auto LoginQueueToken = 0x360; // FTigerLoginQueueToken
		constexpr auto AccountLicenseAgreementTitle = 0x370; // FText
		constexpr auto AccountLicenseAgreementText = 0x388; // FText
		constexpr auto EnableLicenseAgreement = 0x3a0; // bool
		constexpr auto ThirdPartyErrorsBoxMapping = 0x3a8; // TMap<int32_t, int32_t>
		constexpr auto ThirdPartyErrorCodes = 0x3f8; // TMap<int32_t, FText>
		constexpr auto ErrorBoxIndex = 0x448; // int32_t
		constexpr auto AccountExportGateTitle = 0x450; // FText
		constexpr auto AccountExportGateText = 0x468; // FText
		constexpr auto Subheader_TextFormatting = 0x480; // FString
		constexpr auto Subtitle_TextFormatting = 0x490; // FString
		constexpr auto UL_TextFormatting = 0x4a0; // FString
		constexpr auto Bold_TextFormating = 0x4b0; // FString
		constexpr auto EL_TextFormatting = 0x4c0; // FString
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x230; // int32_t
		constexpr auto VisibilityAggressiveness = 0x234; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x235; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x235; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x235; // char : 1
		constexpr auto bEnableNavigationSystem = 0x235; // char : 1
		constexpr auto bEnableAISystem = 0x235; // char : 1
		constexpr auto bEnableWorldComposition = 0x235; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x235; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x235; // char : 1
		constexpr auto bWorldGravitySet = 0x236; // char : 1
		constexpr auto bGlobalGravitySet = 0x236; // char : 1
		constexpr auto bMinimizeBSPSections = 0x236; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x236; // char : 1
		constexpr auto bHighPriorityLoading = 0x236; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x236; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x236; // char : 1
		constexpr auto NavigationSystemConfig = 0x238; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x240; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x248; // float
		constexpr auto KillZ = 0x24c; // float
		constexpr auto KillZDamageType = 0x250; // UDamageType*
		constexpr auto WorldGravityZ = 0x258; // float
		constexpr auto GlobalGravityZ = 0x25c; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x260; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x268; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x270; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x278; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x280; // int32_t
		constexpr auto DefaultColorScale = 0x284; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x290; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x294; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x298; // float
		constexpr auto DefaultReverbSettings = 0x2a0; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2c0; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2e4; // float
		constexpr auto DefaultBaseSoundMix = 0x2e8; // USoundMix*
		constexpr auto TimeDilation = 0x2f0; // float
		constexpr auto MatineeTimeDilation = 0x2f4; // float
		constexpr auto DemoPlayTimeDilation = 0x2f8; // float
		constexpr auto MinGlobalTimeDilation = 0x2fc; // float
		constexpr auto MaxGlobalTimeDilation = 0x300; // float
		constexpr auto MinUndilatedFrameTime = 0x304; // float
		constexpr auto MaxUndilatedFrameTime = 0x308; // float
		constexpr auto BroadphaseSettings = 0x30c; // FBroadphaseSettings
		constexpr auto Pauser = 0x350; // APlayerState*
		constexpr auto ReplicationViewers = 0x358; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x368; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x378; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x380; // int32_t
		constexpr auto DefaultBookmarkClass = 0x388; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x390; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x3a0; // UBookmarkBase*
	}

	namespace n_UTigerChallengeHeadshots {
		constexpr auto RequiredWeaponConstraint = 0xb0; // FTigerChallengeRequirementWeaponType
	}

	namespace n_UTigerMasqueradeStatusWidget {
		constexpr auto PlayerVisibilityToNPC = 0x340; // char
		constexpr auto bIsHunted = 0x341; // bool
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UTigerBuffBlindingBeauty {
		constexpr auto BlockJumpDuration = 0x248; // float
		constexpr auto TurnRateCap = 0x24c; // float
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto CloseSightRadius = 0x5c; // float
		constexpr auto CloseLoseSightRadius = 0x60; // float
		constexpr auto ClosePeripheralVisionAngleDegrees = 0x64; // float
		constexpr auto HeightDifference = 0x68; // float
		constexpr auto DetectionByAffiliation = 0x6c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x70; // float
		constexpr auto PointOfViewBackwardOffset = 0x74; // float
		constexpr auto NearClippingRadius = 0x78; // float
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x450; // UVectorField*
		constexpr auto Intensity = 0x458; // float
		constexpr auto Tightness = 0x45c; // float
		constexpr auto bPreviewVectorField = 0x460; // char : 1
	}

	namespace n_UTBP_ContextualHelp_Ammo_Magazine_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x4e8; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x540; // FVector
		constexpr auto SplineBoundaryMin = 0x54c; // float
		constexpr auto CachedMeshBodySetupGuid = 0x550; // FGuid
		constexpr auto BodySetup = 0x560; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x568; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x56c; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x56c; // char : 1
		constexpr auto bMeshDirty = 0x56c; // char : 1
		constexpr auto ForwardAxis = 0x56d; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x570; // float
	}

	namespace n_UTigerBrujahBaneRecklessnessLogic {
		constexpr auto Config = 0xc0; // UTigerBrujahBaneRecklessness*
		constexpr auto Player = 0xc8; // ATigerPlayer*
	}

	namespace n_UTigerAIGetSuspectTargetService {
		constexpr auto SuspectPosition = 0x70; // FBlackboardKeySelector
		constexpr auto CurrentSuspectTarget = 0x98; // FBlackboardKeySelector
		constexpr auto bShowDebugFeatures = 0xc0; // bool
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x478; // int32_t
		constexpr auto PreviousLODLevel = 0x47c; // int32_t
		constexpr auto MinLOD = 0x480; // int32_t
		constexpr auto SubDivisionStepSize = 0x484; // int32_t
		constexpr auto StaticMesh = 0x488; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x490; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x494; // char : 1
		constexpr auto bOverrideWireframeColor = 0x494; // char : 1
		constexpr auto bOverrideMinLod = 0x494; // char : 1
		constexpr auto bOverrideNavigationExport = 0x494; // char : 1
		constexpr auto bForceNavigationObstacle = 0x494; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x494; // char : 1
		constexpr auto bAutomaticallyCreateRenderState = 0x494; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x495; // char : 1
		constexpr auto bOverrideLightMapRes = 0x495; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x495; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x495; // char : 1
		constexpr auto bUseSubDivisions = 0x495; // char : 1
		constexpr auto bUseDefaultCollision = 0x495; // char : 1
		constexpr auto bReverseCulling = 0x495; // char : 1
		constexpr auto OverriddenLightMapRes = 0x498; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x49c; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x4a0; // float
		constexpr auto StreamingDistanceMultiplier = 0x4a4; // float
		constexpr auto LODData = 0x4a8; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4b8; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4c8; // FLightmassPrimitiveSettings
	}

	namespace n_ATigerAiSpawningCap {
		constexpr auto SceneComp = 0x258; // USceneComponent*
		constexpr auto NPCSpawner = 0x260; // UChildActorComponent*
		constexpr auto SpawningGroup = 0x268; // FName
		constexpr auto SpawnedNpcMovementGroup = 0x270; // FName
		constexpr auto SpawningSubGroupId = 0x278; // FGuid
	}

	namespace n_UTigerFlowerOfDeathConfig {
		constexpr auto ShowDebugCapsule = 0x160; // bool
		constexpr auto TargetRadius = 0x164; // float
		constexpr auto OverrideDuration = 0x168; // float
		constexpr auto Damage = 0x16c; // float
		constexpr auto EffectBlueprint = 0x170; // UObject*
		constexpr auto AttackerAnimation = 0x178; // UAnimMontage*
		constexpr auto ActivationSound = 0x180; // USoundBase*
		constexpr auto SpeedBuff = 0x188; // UTigerBuff*
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UShMidasAdapter {
		constexpr auto OnMidasPremiumCurrencyPacksChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto Settings = 0x90; // UShMidasPaymentSettings*
	}

	namespace n_UTBP_UI_MasqueradeMarker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto ScaleUp = 0x2c0; // UWidgetAnimation*
		constexpr auto RadiusImage = 0x2c8; // UImage*
		constexpr auto MasqueradeMarkerProxy = 0x2d0; // UTigerMasqueradeMarkerProxy*
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UAkItemProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x1f8; // FGuid
		constexpr auto bUseDefaultReplication = 0x238; // bool
		constexpr auto DefaultMeshMaterial = 0x240; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x248; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x250; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x258; // UARTrackedGeometry*
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xb0; // float
		constexpr auto TileRemovalRadius = 0xb4; // float
	}

	namespace n_UTigerGasOverlay {
		constexpr auto WaveTextureBrush = 0x108; // FSlateBrush
		constexpr auto TargetTextureBrush = 0x190; // FSlateBrush
		constexpr auto WavePolyTextureBrush = 0x218; // FSlateBrush
		constexpr auto TargetPolyTextureBrush = 0x2a0; // FSlateBrush
		constexpr auto PlayerController = 0x328; // ATigerPlayerController*
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ClanPower_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_ATigerModelViewerItem {
		constexpr auto Mesh = 0x228; // UStaticMeshComponent*
		constexpr auto DesiredScreenSize = 0x230; // float
		constexpr auto CurrentScreenSize = 0x234; // float
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x478; // int32_t
		constexpr auto MapHeight = 0x47c; // int32_t
		constexpr auto TileWidth = 0x480; // int32_t
		constexpr auto TileHeight = 0x484; // int32_t
		constexpr auto DefaultLayerTileSet = 0x488; // UPaperTileSet*
		constexpr auto Material = 0x490; // UMaterialInterface*
		constexpr auto TileLayers = 0x498; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x4a8; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4b8; // int32_t
		constexpr auto bUseSingleLayer = 0x4bc; // bool
		constexpr auto TileMap = 0x4c0; // UPaperTileMap*
	}

	namespace n_UTigerRichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto Font = 0x150; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x1a8; // FLinearColor
		constexpr auto Decorators = 0x1b8; // TArray<UTigerRichTextBlockDecorator*>
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_ATBP_VFX_GroundSlam_Impact_C {
		constexpr auto Impact Particle = 0x228; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
	}

	namespace n_UTBP_UI_BaseRangedCrosshair_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto CanvasParent = 0x2c0; // UCanvasPanel*
		constexpr auto ScopeVignetteImage = 0x2c8; // UImage*
		constexpr auto Crosshairs = 0x2d0; // TArray<UTBP_UI_Image_C*>
		constexpr auto ScopeVignette = 0x2e0; // FSlateBrush
		constexpr auto bShouldShowScopeVignette = 0x368; // bool
		constexpr auto ScalingCrosshairs = 0x370; // TArray<UTBP_UI_Image_C*>
	}

	namespace n_ATigerDynamicObject {
		constexpr auto MeshComponentRef = 0x228; // FComponentReference
		constexpr auto PlayerImpactMultiplier = 0x250; // float
	}

	namespace n_UTBP_ContextualHelp_Diablerie_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_ATigerLootBundleSpawner {
		constexpr auto bLooted = 0x228; // bool
	}

	namespace n_UTigerPassiveHideousConfig {
		constexpr auto TimeUntilMasqueradeTicks = 0x118; // float
		constexpr auto HideousReachDistance = 0x11c; // float
		constexpr auto ScaleCurve = 0x120; // UCurveFloat*
	}

	namespace n_UTigerCustomSequenceListGender {
		constexpr auto Sequences = 0x28; // UAnimSequence* [0x2]
	}

	namespace n_UAkSettingsPerUser {
		constexpr auto WwiseWindowsInstallationPath = 0x28; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x38; // FFilePath
		constexpr auto EnableAutomaticAssetSynchronization = 0x48; // bool
		constexpr auto WaapiIPAddress = 0x50; // FString
		constexpr auto WaapiPort = 0x60; // uint32_t
		constexpr auto bAutoConnectToWAAPI = 0x64; // bool
		constexpr auto AutoSyncSelection = 0x65; // bool
		constexpr auto SuppressWwiseProjectPathWarnings = 0x66; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x67; // bool
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UTigerCustomizableKeybindsDataAsset {
		constexpr auto KeybindData = 0x30; // TMap<FName, FTigerCustomizableKeybindData>
		constexpr auto AxisKeybindData = 0x80; // TMap<FName, FTigerCustomizableAxisKeybindData>
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Aim_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x450; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x458; // char : 1
		constexpr auto ScreenSize = 0x45c; // float
		constexpr auto U = 0x460; // float
		constexpr auto UL = 0x464; // float
		constexpr auto V = 0x468; // float
		constexpr auto VL = 0x46c; // float
	}

	namespace n_UTigerInteractionControllerComponent {
		constexpr auto OnTargetInteractionChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto DiablerizeDotProductCutOff = 0xc0; // float
		constexpr auto HeldInputInteractionTime = 0xc4; // float
		constexpr auto InteractionLineTraceLength = 0xc8; // float
		constexpr auto InteractionLineTraceThickness = 0xcc; // float
		constexpr auto AllowAutomaticPickUpBehindPlayer = 0xd0; // bool
		constexpr auto AutoPickUpCoolDown = 0xd4; // float
		constexpr auto AutoPickUpBoxVolumeExtents = 0xd8; // FVector
		constexpr auto TigerPC = 0xe8; // ATigerPlayerController*
		constexpr auto TigerPlayerPawn = 0xf0; // ATigerPlayer*
		constexpr auto TargetCharacter = 0x108; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto TrainerTarget = 0x110; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto InteractionItem = 0x118; // TWeakObjectPtr<ATigerItemWorldRepresentation>
		constexpr auto LastAutoPickupItem = 0x120; // TWeakObjectPtr<ATigerItemWorldRepresentation>
		constexpr auto TargetInteractiveObject = 0x128; // TWeakObjectPtr<ATigerInteractiveObject>
		constexpr auto PotentialFeedingTarget = 0x130; // ATigerBaseNPC*
		constexpr auto TriggerVolumeOverlaps = 0x148; // TArray<FOverlapResult>
		constexpr auto InteractionSweepResults = 0x168; // TArray<FHitResult>
		constexpr auto InteractionTraceResults = 0x188; // TArray<FHitResult>
		constexpr auto AutoPickUpInteractionOverlaps = 0x1a8; // TArray<FOverlapResult>
		constexpr auto CachedVendor = 0x1c8; // TWeakObjectPtr<ATigerBaseNPC>
	}

	namespace n_UTigerAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UTigerAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto CloseSightRadius = 0x5c; // float
		constexpr auto CloseLoseSightRadius = 0x60; // float
		constexpr auto ClosePeripheralVisionAngleDegrees = 0x64; // float
		constexpr auto HeightDifference = 0x68; // float
		constexpr auto DetectionByAffiliation = 0x6c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x70; // float
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UTigerWorldCompositionSettings {
		constexpr auto StreamedLevelDirectory = 0x38; // FDirectoryPath
		constexpr auto ProxyGenerationMode = 0x48; // ETigerWorldCompositionProxyMode
		constexpr auto ActorSortingCellSizeIncrementCount = 0x4c; // int32_t
		constexpr auto ActorSortingCellSizeIncrementAmount = 0x50; // float
		constexpr auto ProxyMeshMergeSettings = 0x54; // FMeshMergingSettings
		constexpr auto bDoSecondProxyGenStage = 0xf4; // bool
		constexpr auto ProxySettings = 0xf8; // FMeshProxySettings
		constexpr auto LodBuildSettings = 0x1a0; // FMeshBuildSettings
		constexpr auto LodScreenSizes = 0x1d0; // TArray<FPerPlatformFloat>
		constexpr auto bEnableLodDitheringOnProxyMeshes = 0x1e0; // bool
		constexpr auto ProxySizeRequirement = 0x1e4; // float
		constexpr auto bForceLoadAllCellLevels = 0x1e8; // bool
		constexpr auto bBlockOnLoad = 0x1e9; // bool
		constexpr auto bEnablePreSpawnLoading = 0x1ea; // bool
		constexpr auto bTriggerGarbageCollectionOnUnload = 0x1eb; // bool
		constexpr auto ProxyTypeBlacklistSoft = 0x1f0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto StreamingTypeBlacklistSoft = 0x200; // TArray<TSoftClassPtr<UObject>>
		constexpr auto LevelClusterBlacklistSoft = 0x210; // TArray<TSoftClassPtr<UObject>>
		constexpr auto DebugVisualizationMaterialNotInFilter = 0x220; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTBP_ContextualHelp_Consumable_Prevented_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto ArmorContext = 0xf8; // FText
		constexpr auto BloodBagContext = 0x110; // FText
		constexpr auto DefaultContext = 0x128; // FText
	}

	namespace n_UTBP_MightyLeap_C {
		constexpr auto UberGraphFrame = 0x158; // FPointerToUberGraphFrame
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x228; // UCameraShakeSourceComponent*
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UTigerMapMarkerProxy {
		constexpr auto OnUpdated = 0x28; // FMulticastInlineDelegate
		constexpr auto MarkerId = 0x38; // int32_t
		constexpr auto WidgetType = 0x58; // UUserWidget*
	}

	namespace n_UTigerNpcAccuracyComponent {
		constexpr auto TimeToReachMaxAccuracy = 0xb0; // float
		constexpr auto TimeToReachMaxInaccuracy = 0xb4; // float
		constexpr auto MaxAccuracyConeRadius = 0xb8; // float
		constexpr auto MinAccuracyConeRadius = 0xbc; // float
		constexpr auto AccuracyDistance = 0xc0; // float
		constexpr auto MovingTargetAccuracyPenaltyPercentage = 0xc4; // float
		constexpr auto MinSwooshByAccuracyConeRadius = 0xc8; // float
		constexpr auto MaxSwooshByAccuracyConeRadius = 0xcc; // float
		constexpr auto MinSwooshByAccuracyDistance = 0xd0; // float
		constexpr auto bShouldKeepAccuracyWhenSwitchingToTargetsAlly = 0xd4; // bool
		constexpr auto bShouldDebugDraw = 0xd5; // bool
		constexpr auto bShouldMissEveryBurst = 0xd6; // bool
		constexpr auto Owner = 0xe0; // ATigerNPC*
	}

	namespace n_UTigerStaggerComponent {
		constexpr auto CurrentStaggerAnimation = 0xb0; // UAnimMontage*
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x228; // UFieldSystemComponent*
	}

	namespace n_UTBP_UI_Line_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Left = 0x268; // UImage*
		constexpr auto Middle = 0x270; // UImage*
		constexpr auto Right = 0x278; // UImage*
		constexpr auto SizeContainer = 0x280; // USizeBox*
		constexpr auto LeftTexture = 0x288; // UTexture2D*
		constexpr auto RightTexture = 0x290; // UTexture2D*
		constexpr auto Texture = 0x298; // UTexture2D*
		constexpr auto MarginPixels = 0x2a0; // FVector2D
		constexpr auto OverrideMiddleWidth = 0x2a8; // float
		constexpr auto OverrideMiddleHeight = 0x2ac; // float
		constexpr auto FlipRight = 0x2b0; // bool
		constexpr auto FlipLeft = 0x2b1; // bool
	}

	namespace n_UTigerAiHasCurrentSquadOrder {
		constexpr auto SquadOrderToCompare = 0x68; // ETigerNpcSquadOrder
	}

	namespace n_UTBP_ContextualHelp_RedGas_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x4e0; // FGuid
		constexpr auto ProxyComponentBases = 0x4f0; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x500; // int8_t
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x680; // FMulticastInlineDelegate
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UTBP_WallClimbEffect_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x278; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x279; // bool
		constexpr auto bFaceOutOfScreen = 0x27a; // bool
		constexpr auto ReplicatedPayload = 0x280; // FARFaceUpdatePayload
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_UTigerAIPlayerUseHealingItem {
		constexpr auto LocalAIController = 0x80; // ATigerLocalAIControllerBase*
		constexpr auto PlayerController = 0x88; // ATigerPlayerController*
	}

	namespace n_UTBP_ContextualHelp_Consumable_Cancel_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneAkAudioRTPCSection {
		constexpr auto RTPC = 0xe8; // UAkRtpc*
		constexpr auto Name = 0xf0; // FString
		constexpr auto FloatCurve = 0x100; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x180; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1b0; // FMovieSceneFloatChannel
	}

	namespace n_UTigerAiDisciplineTaskBase {
		constexpr auto LocalAIController = 0x98; // ATigerLocalAIController*
		constexpr auto AiTigerCharacter = 0xa0; // ATigerCharacter*
		constexpr auto DisciplineComponent = 0xa8; // UTigerDisciplineComponent*
		constexpr auto CurrentDisciplineBase = 0xb0; // UTigerDisciplineBase*
	}

	namespace n_ATigerPlayerStart {
		constexpr auto GameTypeSpawnFlags = 0x258; // char
	}

	namespace n_ATigerGeneratedStaticMeshActor {
		constexpr auto MeshComponent = 0x228; // UStaticMeshComponent*
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UTigerDisciplineFOTT {
		constexpr auto Config = 0x78; // UTigerFOTTConfig*
		constexpr auto PlayerChargeupParticles = 0xb0; // UParticleSystemComponent*
		constexpr auto PlayerAttackParticles = 0xb8; // UParticleSystemComponent*
		constexpr auto PlayerAttackEndParticles = 0xc0; // UParticleSystemComponent*
	}

	namespace n_UTigerDsPresenceSubsystem {
		constexpr auto PresenceService = 0x30; // UTigerPresenceService*
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x230; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x238; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x240; // float
	}

	namespace n_UTBP_ContextualHelp_Discipline_Archetype_UnlockInputReminderPad_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UTigerMasqueradeConsequenceCompassMarkerSyncInstance {
		constexpr auto CompassMarkerClass = 0x58; // UTigerCompassMarkerWidget*
		constexpr auto CompassMarkerTexture = 0x60; // UTexture2D*
		constexpr auto CompassMarker = 0x68; // UTigerCompassMarkerWidget*
	}

	namespace n_UTigerBodyPartProjectileDamageModifiersAsset {
		constexpr auto BonesToBodyParts = 0x30; // TMap<FName, EBodyPart>
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_UTigerBuffMeleeChargeAttackInstance {
		constexpr auto MeleeChargeAttackBuff = 0x88; // UTigerBuffMeleeChargeAttack*
		constexpr auto Player = 0x90; // ATigerPlayer*
		constexpr auto ActiveAttackParticles = 0x98; // UParticleSystemComponent*
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UTBP_PoseableMesh_Master_C {
		constexpr auto BoneMappings = 0x38; // TMap<FName, ENUM_PiercingNames>
	}

	namespace n_UTigerTooltipKeyPromptWidget {
		constexpr auto OnPromptPressed = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPromptHeld = 0x290; // FMulticastInlineDelegate
		constexpr auto bHasHoldAction = 0x2c0; // bool
	}

	namespace n_UTigerVoipTencentBackendSettings {
		constexpr auto GMEAppId = 0x38; // FString
		constexpr auto GMEAppKey = 0x48; // FString
	}

	namespace n_UTigerAiShouldReportNewThreatDecorator {
		constexpr auto PlayerToReportKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x1f8; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x200; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x201; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x208; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x210; // float
		constexpr auto Brightness = 0x214; // float
		constexpr auto bModifyMaxValueRGBM = 0x218; // bool
		constexpr auto MaxValueRGBM = 0x21c; // float
		constexpr auto CaptureOffset = 0x220; // FVector
		constexpr auto MapBuildDataId = 0x22c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x250; // UTextureCube*
	}

	namespace n_UTigerJudgeBaseAttackState {
		constexpr auto HitCharacters = 0x60; // TArray<ATigerCharacter*>
		constexpr auto Cooldown = 0x70; // float
		constexpr auto AttackFailSafeDuration = 0x74; // float
		constexpr auto AttackMinRange = 0x78; // float
		constexpr auto AttackMaxRange = 0x7c; // float
		constexpr auto bUseAttackRangeHorizontally = 0x80; // bool
		constexpr auto MaxHeightDiff = 0x84; // float
		constexpr auto PreviousState = 0x88; // UTigerJudgeBaseState*
		constexpr auto SwingData = 0x90; // UTigerJudgeSwingData*
		constexpr auto bJudgeSwordActiveStatus = 0x98; // bool
		constexpr auto bIsCheckingAttackCollisionData = 0x99; // bool
		constexpr auto SwordHitBox = 0x9c; // FVector
		constexpr auto SwordLengthCurve = 0xa8; // UCurveFloat*
	}

	namespace n_ATigerRejuvenatingVoiceEffectActor {
		constexpr auto Player = 0x228; // ATigerPlayer*
		constexpr auto HealAmount = 0x230; // float
	}

	namespace n_UTBP_UI_CharacterCard_Info_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto BackgroundImage = 0x290; // UImage*
		constexpr auto CardBorder = 0x298; // UBorder*
		constexpr auto CardShapeMask = 0x2a0; // URetainerBox*
		constexpr auto PlayerIcon = 0x2a8; // UImage*
		constexpr auto PlayerIconBorder = 0x2b0; // UImage*
		constexpr auto PlayerIconBorderMask = 0x2b8; // URetainerBox*
		constexpr auto PlayerIconMask = 0x2c0; // URetainerBox*
		constexpr auto PlayerNameText = 0x2c8; // UTigerStyledRichTextBlock*
		constexpr auto SpeakerIcon = 0x2d0; // UImage*
		constexpr auto TBP_UI_MaskedCardBorder_C_1 = 0x2d8; // UTBP_UI_MaskedCardBorder_C*
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x238; // USceneCaptureComponent2D*
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UTigerAnimNotifyState_DamageImmunity {
		constexpr auto ImmunityTo = 0x30; // TArray<UDamageType*>
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UPostEventAsync {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_ATigerBuildingWallPreviewer {
		constexpr auto Preset = 0x228; // UTigerBuildingWallPreset*
	}

	namespace n_UTigerTutorialTrainerAsset {
		constexpr auto Controller = 0x30; // AAIController*
		constexpr auto NPC = 0x38; // ATigerTutorialTrainer*
		constexpr auto VisualData = 0x40; // TArray<FTigerPreviewerData>
		constexpr auto WeaponClass = 0x50; // UTigerWeapon*
		constexpr auto bShouldBeFriendlyWithPlayer = 0x58; // bool
		constexpr auto bShouldReviveInsteadOfDiablerize = 0x59; // bool
	}

	namespace n_UTigerStunConfig {
		constexpr auto StunTime = 0x160; // float
		constexpr auto StunRadius = 0x164; // float
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerCustomBlendSpaceListClan {
		constexpr auto BlendSpaces = 0x28; // UBlendSpace* [0x4]
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x480; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x488; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x490; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x4a0; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x5a8; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5b0; // int32_t
		constexpr auto MinLodModel = 0x5b4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x5c0; // float
		constexpr auto LODInfo = 0x5d0; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x604; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x606; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x606; // char : 1
		constexpr auto bForceWireframe = 0x606; // char : 1
		constexpr auto bDisplayBones = 0x606; // char : 1
		constexpr auto bDisableMorphTarget = 0x606; // char : 1
		constexpr auto bHideSkin = 0x607; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x607; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x607; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x607; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x607; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x607; // char : 1
		constexpr auto bRecentlyRendered = 0x607; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x607; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x608; // char : 1
		constexpr auto bCPUSkinning = 0x608; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x608; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x608; // char : 1
		constexpr auto bRenderStatic = 0x608; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x608; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x609; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x609; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x60c; // float
		constexpr auto CachedWorldSpaceBounds = 0x620; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x640; // FMatrix
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_UTigerWorldCompositionCellComponent {
		constexpr auto ShapeComponent = 0x1f8; // UShapeComponent*
		constexpr auto SubCellComponents = 0x200; // TArray<UTigerWorldCompositionCellComponent*>
		constexpr auto WorldGrid = 0x210; // ATigerWorldCompositionGrid*
		constexpr auto StreamLevelPath = 0x218; // FName
	}

	namespace n_UTBP_Ping_Civilian_C {
		constexpr auto civilianPingVO = 0x128; // UAkAudioEvent*
		constexpr auto civilianPingText = 0x130; // FText
		constexpr auto civilianPingIcon = 0x148; // UTexture2D*
		constexpr auto BloodAsset_Choleric = 0x150; // UTigerBloodResonanceAsset*
		constexpr auto BloodAsset_Melancholic = 0x158; // UTigerBloodResonanceAsset*
		constexpr auto BloodAsset_Phlegmatic = 0x160; // UTigerBloodResonanceAsset*
		constexpr auto BloodAsset_Sanguine = 0x168; // UTigerBloodResonanceAsset*
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UAkXboxOneGDKInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneGDKApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneGDKAdvancedInitializationSettings
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UAkXboxOneInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x88; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_UTigerAiIsInMovementRestrictionBoundsArea {
		constexpr auto AreaToCompare = 0x68; // ETigerNpcMovementRestrictionBoundsArea
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_ATigerMatchGameMode {
		constexpr auto OnPlayerDeathEvent = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnGameModeVariationsSetEvent = 0x4d8; // FMulticastInlineDelegate
		constexpr auto SHPBCoordinator = 0x520; // UTigerSHPBCoordinator*
		constexpr auto HeatmapCollector = 0x528; // UTigerHeatmapCollector*
		constexpr auto ReadyToPlayStates = 0x530; // TArray<FTigerReadyToPlayState>
		constexpr auto MatchStateManager = 0x578; // UTigerMatchStateComponent*
		constexpr auto AllHavens = 0x580; // TArray<ATigerHaven*>
		constexpr auto MatchReporter = 0x590; // UTigerMatchGameModeReporter*
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UAkAndroidInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_ATigerBloodVeinBranch {
		constexpr auto OnReachedEndOfBloodVeinBranch = 0x228; // FMulticastInlineDelegate
		constexpr auto VeinSplineMesh = 0x238; // UStaticMesh*
		constexpr auto ControllingPawn = 0x240; // ATigerBloodVeinPawn*
		constexpr auto CurrentPlayerSpot = 0x248; // USceneComponent*
		constexpr auto LandSoundEventTimeOffset = 0x250; // float
		constexpr auto SplineMeshDistance = 0x254; // float
		constexpr auto SplineScale = 0x258; // float
		constexpr auto GeneratedSplineMeshes = 0x260; // TArray<USplineMeshComponent*>
		constexpr auto MovementComponent = 0x270; // UTigerBloodVeinBranchMovementComponent*
	}

	namespace n_UTigerEntityCheckpointActorSpawner {
		constexpr auto ActorToSpawn = 0x1f8; // AActor*
	}

	namespace n_UTBP_UI_PingMapTooltip_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ShowTooltip = 0x268; // UWidgetAnimation*
		constexpr auto FadeIn = 0x270; // UWidgetAnimation*
		constexpr auto OnScreen = 0x278; // UCanvasPanel*
		constexpr auto OnScreenMeterText = 0x280; // UTigerStyledRichTextBlock*
		constexpr auto OnScreenTextBlock = 0x288; // UTigerStyledRichTextBlock*
		constexpr auto ScreenTextSizeBox = 0x290; // USizeBox*
		constexpr auto TextContainer = 0x298; // UCanvasPanel*
		constexpr auto ToolTip = 0x2a0; // UTBP_UI_InputPromptCombined_C*
	}

	namespace n_UTigerCharacterMovementComponent {
		constexpr auto FiniteStateMachine = 0xb00; // UTigerTraversalFiniteStateMachine*
		constexpr auto MaxSprintSpeed = 0xb20; // float
		constexpr auto SprintSpeedMultiplier = 0xb24; // float
		constexpr auto ForwardAngleThreshold = 0xb2c; // float
		constexpr auto SprintConfig = 0xb38; // UTigerSprintConfig*
		constexpr auto MaxJumpHeight = 0xb40; // float
		constexpr auto bPreventFallingSlide = 0xb44; // bool
		constexpr auto DownedMaxSpeed = 0xb48; // float
		constexpr auto OnDodge = 0xb50; // FMulticastInlineDelegate
		constexpr auto WallClimbCombineThresholdSquared = 0xb60; // float
		constexpr auto ImpendingCollisionCalculator = 0xb68; // UTigerImpendingCollisionCalculator*
		constexpr auto TimeUntilCollision = 0xb70; // float
		constexpr auto AngleToImpendingCollisionWithClimbableSurface = 0xb74; // float
		constexpr auto CharacterAngleToImpendingCollisionWithClimbableSurface = 0xb78; // float
		constexpr auto bAboutToCollideWithClimbableSurface = 0xb7c; // bool
		constexpr auto ElysiumBlockedTraversalStates = 0xb94; // uint32_t
		constexpr auto bEnableRestrictedElysiumMobility = 0xb98; // bool
		constexpr auto bIsInLedgeGrab = 0xb99; // bool
		constexpr auto bContinueToUseClimbCameraDuringLedgeGrab = 0xb9a; // bool
		constexpr auto bWasLastLandingHard = 0xb9b; // bool
		constexpr auto RightHandBoneName = 0xba4; // FName
		constexpr auto LeftHandBoneName = 0xbac; // FName
		constexpr auto RightFootBoneName = 0xbb4; // FName
		constexpr auto LeftFootBoneName = 0xbbc; // FName
		constexpr auto JumpCapsuleHeightReduction = 0xbc4; // float
		constexpr auto CurrentDeltaCorrectedAnimationData = 0xc10; // FTigerDeltaCorrectionData
		constexpr auto bUseCustomCurvesExclusivelyForInclineSpeedModification = 0xc50; // bool
		constexpr auto InclineMovementMultiplierCurve = 0xc58; // UCurveFloat*
		constexpr auto DeclineMovementMultiplierCurve = 0xc60; // UCurveFloat*
		constexpr auto BackwardsMovementMultiplierCurve = 0xc68; // UCurveFloat*
		constexpr auto BackwardsAngleThreshold = 0xc70; // float
		constexpr auto SprintConfigClass = 0xc88; // UTigerSprintConfig*
		constexpr auto AimGlideProgressCurve = 0xc90; // UCurveFloat*
		constexpr auto AimGlideDragOverVelocityCurve = 0xc98; // UCurveFloat*
		constexpr auto AimGlideLateralDragCurve = 0xca0; // UCurveFloat*
		constexpr auto AimGlideAirControlCurve = 0xca8; // UCurveFloat*
		constexpr auto bResetAimGlideOnDoubleJump = 0xcb0; // bool
		constexpr auto PendingPreMovementMontage = 0xcb8; // UAnimMontage*
		constexpr auto LastWallJumpedNormal = 0xd00; // FVector
	}

	namespace n_UTigerAIWithinMovementBoundsServices {
		constexpr auto TargetLocationKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UAnimNotify_AkEvent_C {
		constexpr auto Attach Name = 0x38; // FString
		constexpr auto Event = 0x48; // UAkAudioEvent*
		constexpr auto Follow = 0x50; // bool
		constexpr auto EventName = 0x58; // FString
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_UTigerInputPresetDataAsset {
		constexpr auto InputPresets = 0x30; // TMap<FName, FTigerInputPresetData>
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UTigerChallengeKillPlayers {
		constexpr auto RequiredWeaponConstraint = 0xb0; // FTigerChallengeRequirementWeaponType
		constexpr auto bInOneGame = 0xc8; // bool
	}

	namespace n_UTigerGameInstance {
		constexpr auto MusicPlayAkEvent = 0x1a8; // UAkAudioEvent*
		constexpr auto OnTitleScreenClosed = 0x1b0; // FMulticastInlineDelegate
		constexpr auto JoinErrorString = 0x1c0; // FString
		constexpr auto DisciplineConfigsClassPtr = 0x1d0; // TSoftClassPtr<UObject>
		constexpr auto DisciplineConfigsClass = 0x1f8; // UObject*
		constexpr auto AvailablePlayerClans = 0x200; // TArray<UTigerPlayerClanData*>
		constexpr auto SeasonExpRequirements = 0x210; // UTigerExpRequirements*
		constexpr auto ArchetypeExpRequirements = 0x218; // UTigerExpRequirements*
		constexpr auto TitleList = 0x220; // UTigerTitleListAsset*
		constexpr auto OnlineStatusMessagesClass = 0x228; // UTigerOnlineStatusMessages*
		constexpr auto CurrentSaveGame = 0x230; // UTigerSaveGame*
		constexpr auto PreloadedNiagaraSystems = 0x238; // UTigerPreloadedNiagaraSystems*
		constexpr auto LoadingScreen = 0x240; // UTigerLoadingScreenUI*
		constexpr auto BotCharacterPresets = 0x298; // TArray<UTigerCharacterPreset*>
		constexpr auto bBotsIgnorePlayer = 0x2a8; // bool
		constexpr auto bEnableBotsAsClients = 0x2a9; // bool
		constexpr auto bOnlyBotsAliveEndsMatch = 0x2aa; // bool
		constexpr auto bIsJoiningMatch = 0x2ab; // bool
		constexpr auto bHasShownTitleScreen = 0x2ac; // bool
		constexpr auto bIsRetryingTutorial = 0x2ad; // bool
		constexpr auto BotAutoJoinServer = 0x2b0; // FString
		constexpr auto LoadingScreenZValue = 0x2c0; // int32_t
		constexpr auto GameModeLoadingScreens = 0x2c8; // UTigerGameModeLoadingScreens*
		constexpr auto SoftCurrencies = 0x2d0; // UDataTable*
		constexpr auto OnFindMatchFailed = 0x2d8; // FMulticastInlineDelegate
		constexpr auto GeneralUserSettingsClass = 0x2e8; // UTigerGeneralUserSettings*
		constexpr auto GeneralUserSettings = 0x2f0; // UTigerGeneralUserSettings*
		constexpr auto QuestCollection = 0x2f8; // UTigerQuestCollection*
		constexpr auto MasteryChallenges = 0x300; // UTigerMasterChallengesConfigAsset*
		constexpr auto PartyService = 0x308; // UTigerPartyService*
		constexpr auto PlayerDataService = 0x310; // UTigerPlayerDataService*
		constexpr auto StoreService = 0x318; // UTigerStoreService*
		constexpr auto MidasAdapter = 0x320; // UShMidasAdapter*
		constexpr auto FetchPremiumCurrencyManager = 0x328; // UTigerFetchPremiumCurrencyManager*
		constexpr auto SoftwareCursor = 0x330; // TWeakObjectPtr<UTigerWidget>
		constexpr auto PartyManager = 0x338; // UTigerPartyManager*
		constexpr auto AuthenticationManager = 0x340; // UTigerAuthenticationManager*
		constexpr auto TelemetryEventHandler = 0x348; // UTigerTelemetryEventHandler*
		constexpr auto StatisticsGatherer = 0x350; // ATigerStatisticsGatherer*
		constexpr auto PushConnectionManager = 0x358; // UTigerPushConnectionManager*
		constexpr auto PreloadedClasses = 0x448; // UTigerPreloadedClasses*
		constexpr auto BloodTrackPassiveToEncodedId = 0x450; // TMap<UTigerBloodTrackPassiveConfig*, FString>
		constexpr auto EncodedIdToBloodTrackPassive = 0x4a0; // TMap<FString, UTigerBloodTrackPassiveConfig*>
		constexpr auto LastSelectedGroupingMode = 0x4f0; // ETigerGroupingMode
		constexpr auto BotNameTable = 0x4f8; // UDataTable*
		constexpr auto DsBackendAgent = 0x510; // UTigerDsBackendAgent*
		constexpr auto AccountSystem = 0x518; // USharkAccounts*
		constexpr auto AmmoPickupItems = 0x520; // TArray<UTigerAmmoAsset*>
		constexpr auto ClientSeasonConfig = 0x530; // FTigerSeasonConfig
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UAkAssetDataSwitchContainerData {
		constexpr auto GroupValue = 0x28; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto DefaultGroupValue = 0x50; // UAkGroupValue*
		constexpr auto MediaList = 0x58; // TArray<UAkMediaAsset*>
		constexpr auto Children = 0x68; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UTigerTraversalStateJumpConfig {
		constexpr auto MaxJumpIndexForDiminishingReturnsCurve = 0x50; // int32_t
		constexpr auto TimeToReduceDiminishingReturnsCount = 0x54; // float
		constexpr auto JumpForgivenessDistance = 0x58; // float
		constexpr auto InitialJumpZVelocity = 0x5c; // float
		constexpr auto PostJumpClimbInteractionDelay = 0x60; // float
		constexpr auto JumpCoolDownTime = 0x64; // float
		constexpr auto bCancelJumpOnHeadImpact = 0x68; // bool
		constexpr auto DiminishingReturnsCurve = 0x70; // UCurveFloat*
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xb0; // UFieldNodeBase*
		constexpr auto Field = 0xb8; // UFieldNodeBase*
		constexpr auto Operation = 0xc0; // EFieldCullingOperationType
	}

	namespace n_UTigerUtilityPowerHSenseComponent {
		constexpr auto OnHeightenedSensesUsed = 0xb0; // FMulticastInlineDelegate
		constexpr auto NPCMasqueradeStates = 0xc0; // TArray<FTigerNPCMasqueradeStateMessage>
		constexpr auto ActiveHeightenedSenseObjects = 0xd0; // TArray<AActor*>
		constexpr auto HeightenedSensesDirectLosExtent = 0xe0; // float
		constexpr auto HeightenedSensesIndirectLosExtent = 0xe4; // float
		constexpr auto MaxFadeInTimer = 0xe8; // float
		constexpr auto MaxFadeOutTimer = 0xec; // float
		constexpr auto PulseDuration = 0xf0; // float
		constexpr auto CooldownTimeAfterActivation = 0xf4; // float
		constexpr auto MovementMultiplierWhenActive = 0xf8; // float
		constexpr auto CurrentFadeInTimer = 0xfc; // float
		constexpr auto CurrentFadeOutTimer = 0x100; // float
		constexpr auto CooldownEndTime = 0x104; // float
		constexpr auto PulseTimeLeft = 0x108; // float
		constexpr auto FailedUseAudioEvent = 0x110; // UAkAudioEvent*
		constexpr auto CancellingActions = 0x118; // int32_t
		constexpr auto ActivateHeightenedSensesStartupFinished = 0x11c; // bool
		constexpr auto DeactivateHeightenedSensesStartupFinished = 0x11d; // bool
		constexpr auto bShouldStopSprintingWhenActive = 0x11e; // bool
		constexpr auto bShouldPulse = 0x11f; // bool
		constexpr auto bIsHeightenedSensesActive = 0x120; // bool
		constexpr auto DisabledHeightenedSensesActors = 0x128; // TArray<FTigerDisableHSenseTarget>
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x1f8; // float
		constexpr auto LayerHeight = 0x1fc; // float
		constexpr auto TracingStartMaxDistance = 0x200; // float
		constexpr auto TracingMaxDistance = 0x204; // float
		constexpr auto PlanetRadius = 0x208; // float
		constexpr auto GroundAlbedo = 0x20c; // FColor
		constexpr auto Material = 0x210; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x218; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x21c; // float
		constexpr auto ViewSampleCountScale = 0x220; // float
		constexpr auto ReflectionSampleCountScale = 0x224; // float
		constexpr auto ShadowViewSampleCountScale = 0x228; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x22c; // float
		constexpr auto ShadowTracingDistance = 0x230; // float
	}

	namespace n_UTigerTelemetryEventHandler {
		constexpr auto SharkTelemetry = 0x28; // USharkTelemetry*
		constexpr auto GameInstance = 0x30; // UTigerGameInstance*
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UTBP_LoadingToolTip_C {
		constexpr auto LoadingTips = 0x30; // TArray<FTS_LoadingTip>
		constexpr auto SecondsBetweenLoadingTips = 0x40; // int32_t
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_ATigerHaven {
		constexpr auto OverrideFinalHavenIdentifier = 0x228; // FString
		constexpr auto HolyIncenseOuterSpline = 0x238; // USplineComponent*
		constexpr auto HolyIncenseInnerSpline = 0x240; // USplineComponent*
		constexpr auto bUseInnerHolyIncenseSpline = 0x248; // bool
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x260; // FNavAgentSelector
	}

	namespace n_ATBP_ShockwaveWallTrail_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto ParticleSystem trail = 0x230; // UParticleSystemComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
	}

	namespace n_UTigerPingWorldInstanceUI {
		constexpr auto PingData = 0x2c8; // UTigerPingClientData*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UTBP_PiercingSetCustomization_Master_C {
		constexpr auto Piercings = 0x110; // TMap<ENUM_PiercingNames, UStaticMesh*>
		constexpr auto PoseablePiercings = 0x160; // TArray<UTBP_PoseableMesh_Master_C*>
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_ATigerPropDummy {
		constexpr auto PropComponent = 0x4b8; // UTigerNpcPropComponent*
		constexpr auto Attachments = 0x4c0; // TArray<FTigerDummyPropAttachment>
	}

	namespace n_UABP_VMP_BRU_M_HAIR_01_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UTigerEnteringNewAreaPrompt {
		constexpr auto SubText = 0x2a8; // FText
		constexpr auto TextBackground = 0x2c0; // UTexture2D*
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UTigerDialogueCondition_Clan {
		constexpr auto ClanEquality = 0x30; // ETigerDialogueClanRequirementSpecifier
		constexpr auto ClanRequirement = 0x31; // ETigerClan
	}

	namespace n_UTigerAIAwayFromSuspiciousService {
		constexpr auto SearchFleeSpotBox = 0x70; // FBox
		constexpr auto FleePoint = 0x90; // FBlackboardKeySelector
		constexpr auto CurrentMasqueradeTarget = 0xb8; // FBlackboardKeySelector
		constexpr auto WantsToReportPlayer = 0xe0; // FBlackboardKeySelector
		constexpr auto KeepFleeingFromSpecificPlayerRadiusSquared = 0x108; // float
		constexpr auto BoxCenterDistanceFromNPCPosition = 0x10c; // float
		constexpr auto NumberOfTimesToRandomForAFleeSpot = 0x110; // uint32_t
		constexpr auto bShowDebugFeatures = 0x114; // bool
		constexpr auto PlayerFleeingFrom = 0x118; // TWeakObjectPtr<ATigerPlayer>
	}

	namespace n_ATigerNpcMovementRestrictionBounds {
		constexpr auto InnerSpline = 0x228; // USplineComponent*
		constexpr auto OuterSpline = 0x230; // USplineComponent*
	}

	namespace n_UAkAssetPlatformData {
		constexpr auto CurrentAssetData = 0x28; // UAkAssetData*
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UTigerSharknetAgent {
		constexpr auto DsVersion = 0x50; // FString
		constexpr auto MaxRegisterRetryDelaySeconds = 0x108; // float
	}

	namespace n_UTBP_UI_Gradient_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Gradient_image = 0x268; // UImage*
		constexpr auto Gradient_Material_Instance = 0x270; // UMaterialInstanceDynamic*
		constexpr auto Is Horizontal = 0x278; // bool
		constexpr auto GradientMultiplier = 0x27c; // float
		constexpr auto GradientRotation = 0x280; // float
		constexpr auto Horizontal_Gradient_Texture = 0x288; // UTexture2D*
		constexpr auto Gradient Scale = 0x290; // float
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerCharacterPoseableMeshAnimInstance {
		constexpr auto MeshManager = 0x2b8; // UTigerCharacterMeshManager*
		constexpr auto NameToDataLut = 0x2c0; // TMap<FName, FTigerCharacterPoseableMeshBoneData>
	}

	namespace n_UTigerOnlineStatusMessages {
		constexpr auto DefaultMessage = 0x28; // FText
		constexpr auto DefaultAccountMessage = 0x40; // FText
		constexpr auto DefaultSystemMessage = 0x58; // FText
		constexpr auto DefaultServerMessage = 0x70; // FText
		constexpr auto Messages = 0x88; // TArray<FTigerOnlineStatusMessageEntry>
		constexpr auto ErrorCategoryTitles = 0x98; // TMap<ETigerOnlineErrorCategory, FText>
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UAkTVOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UTigerChallenge {
		constexpr auto OnValueChangedEvent = 0x30; // FMulticastInlineDelegate
		constexpr auto OnChallengeCompletedEvent = 0x40; // FMulticastInlineDelegate
		constexpr auto World = 0x50; // UWorld*
		constexpr auto OwningPlayerController = 0x58; // ATigerPlayerController*
		constexpr auto TargetValue = 0x60; // int32_t
		constexpr auto PreSessionValue = 0x64; // int32_t
		constexpr auto ChallengeDisplayName = 0x68; // FText
		constexpr auto DefaultTargetValue = 0x80; // int32_t
		constexpr auto Description = 0x88; // FText
		constexpr auto ChallengeTypeTelemetryID = 0xa0; // uint64_t
		constexpr auto bChallengeCompleteEventRaised = 0xa8; // bool
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UTigerAnimNotify_SetCapContext {
		constexpr auto ContextName = 0x38; // FName
	}

	namespace n_UABP_VMP_TOR_M_HAIR_03_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x730; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0xb70; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xfb0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x13f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1420; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto DurationSubFrames = 0x478; // float
		constexpr auto CurrentNumLoops = 0x47c; // int32_t
		constexpr auto PlaybackSettings = 0x480; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x498; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5e8; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x5f8; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x608; // UMovieSceneSequenceTickManager*
	}

	namespace n_UTigerBuffReposition {
		constexpr auto NoiseNotifyEventRange = 0x248; // float
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x228; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x230; // AGameModeBase*
		constexpr auto SpectatorClass = 0x238; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x240; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x250; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x254; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x258; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x25c; // float
	}

	namespace n_ATigerSafeHavenVolume {
		constexpr auto AssignedHaven = 0x260; // ATigerHaven*
	}

	namespace n_UTigerBuffDOT {
		constexpr auto DamageType = 0x248; // UDamageType*
		constexpr auto DamagePerTick = 0x250; // float
		constexpr auto bPlayHitAnimation = 0x254; // bool
		constexpr auto bSpawnBloodDecals = 0x255; // bool
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UTigerOnlineError {
		constexpr auto Message = 0x28; // FText
		constexpr auto Title = 0x40; // FText
		constexpr auto ErrorCodeString = 0x58; // FString
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UTigerPhysicalInteractionAnimationAsset {
		constexpr auto FeedingDataByVampireGender = 0x30; // FTigerPhysicalInteractionMontages [0x2]
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UTigerAIBenchmarkDiablerizeTask {
		constexpr auto MaximumDiablerizeDistance = 0x98; // float
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xe8; // TextureAddress
		constexpr auto AddressY = 0xe9; // TextureAddress
		constexpr auto AutoClear = 0xea; // bool
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto EnableGenMips = 0xfc; // bool
		constexpr auto NumMips = 0xfd; // char
		constexpr auto NewStyleOutput = 0xfe; // bool
		constexpr auto OutputFormat = 0xff; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0x100; // float
		constexpr auto CurrentOrientation = 0x104; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0x108; // UMediaPlayer*
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UTigerJoinSessionAsync {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UTigerEquippedModModifierValues {
		constexpr auto ExtendedMagazineLevel = 0x28; // UTigerMaxIntAggregator*
		constexpr auto ReloadSpeed = 0x30; // UTigerFloatMultiplierAggregator*
		constexpr auto RecoilMultiplier = 0x38; // UTigerFloatMultiplierAggregator*
		constexpr auto SpreadMultiplier = 0x40; // UTigerFloatMultiplierAggregator*
		constexpr auto SwapSpeedMultiplier = 0x48; // UTigerFloatMultiplierAggregator*
		constexpr auto SpreadDecreaseMultiplier = 0x50; // UTigerFloatMultiplierAggregator*
		constexpr auto ModdedFOV = 0x58; // UTigerFloatMinAggregator*
		constexpr auto AimedSpreadMultiplier = 0x60; // UTigerFloatCurveMultiplierAggregator*
		constexpr auto IsScoped = 0x68; // UTigerBoolAnyAggregator*
		constexpr auto CanSwitchFireMode = 0x70; // UTigerBoolAnyAggregator*
		constexpr auto CrossHairWidget = 0x78; // UTigerWeaponCrosshairWidget*
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UTigerPassiveComponent {
		constexpr auto PlayerOwner = 0xb0; // ATigerPlayer*
		constexpr auto PassiveWidget = 0xb8; // UTigerWidget*
	}

	namespace n_UTigerPassiveArchetypeLogic {
		constexpr auto PowerLevelStatChanges = 0xc0; // FTigerCharacterStatModification
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Climb_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6c0; // float
		constexpr auto Volume = 0x6c4; // float
	}

	namespace n_UTigerWeaponAbilityHook {
		constexpr auto Config = 0x78; // UTigerHookConfig*
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UTigerContextualHelp {
		constexpr auto LifeTimeInSeconds = 0x28; // float
		constexpr auto HeaderText = 0x30; // FText
		constexpr auto DescriptionText = 0x48; // FText
		constexpr auto InputAction = 0x60; // FName
		constexpr auto bShouldHideOnInput = 0x68; // bool
		constexpr auto Icon = 0x70; // TSoftObjectPtr<UTexture2D>
		constexpr auto MatchesPlayedLimit = 0x98; // int32_t
		constexpr auto bWantsToShow = 0x9c; // bool
		constexpr auto CooldownInSeconds = 0xa0; // float
		constexpr auto ContextualHelpType = 0xa4; // ETigerContextualHelpType
		constexpr auto ShouldShowInGameMode = 0xa5; // ETigerContextualHelpShouldShowInGameMode
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x290; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x330; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x34c; // float
		constexpr auto TransmissionSetup = 0x350; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x380; // FRuntimeFloatCurve
	}

	namespace n_UABP_PoseableMesh_C_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x348; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x358; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x480; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x588; // FAnimNode_ModifyBone
	}

	namespace n_UTBP_UnseenPresenceBuff_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x228; // EBrushType
		constexpr auto BrushColor = 0x22c; // FColor
		constexpr auto PolyFlags = 0x230; // int32_t
		constexpr auto bColored = 0x234; // char : 1
		constexpr auto bSolidWhenSelected = 0x234; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x234; // char : 1
		constexpr auto bNotForClientOrServer = 0x234; // char : 1
		constexpr auto Brush = 0x238; // UModel*
		constexpr auto BrushComponent = 0x240; // UBrushComponent*
		constexpr auto bInManipulation = 0x248; // char : 1
		constexpr auto SavedSelections = 0x250; // TArray<FGeomSelection>
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerCharacterEyebrowCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_ATigerPlayer {
		constexpr auto PlayerVisibilityToNPC = 0x770; // char
		constexpr auto CurrentTraversalState = 0x771; // ETigerTraversalState
		constexpr auto GunOffset = 0x774; // FVector
		constexpr auto SpringArm = 0x780; // UTigerSpringArmComponent*
		constexpr auto InventoryComponent = 0x788; // UTigerInventoryComponent*
		constexpr auto ConsumablesComponent = 0x790; // UTigerConsumablesComponent*
		constexpr auto AudioVisualizationComponent = 0x798; // UTigerAudioVisualizationSpawnerComponent*
		constexpr auto InteractionVolumeComponent = 0x7b8; // UShapeComponent*
		constexpr auto TriggerVolumeComponent = 0x7c0; // UShapeComponent*
		constexpr auto FullscreenPostProcessComponent = 0x7c8; // UPostProcessComponent*
		constexpr auto DistrictComponent = 0x7d0; // UTigerDistrictComponent*
		constexpr auto CrowdAgentComponent = 0x7d8; // UTigerCrowdAgentComponent*
		constexpr auto BloodResonanceComponent = 0x7e0; // UTigerBloodResonanceComponent*
		constexpr auto EmotePlayerComponent = 0x7e8; // UTigerEmotePlayerComponent*
		constexpr auto HSenseComponent = 0x7f0; // UTigerUtilityPowerHSenseComponent*
		constexpr auto HSenseClass = 0x7f8; // UTigerUtilityPowerHSenseComponent*
		constexpr auto UtilityPowerComp = 0x800; // UTigerUtilityPowerBaseComponent*
		constexpr auto DisciplineComponent = 0x808; // UTigerDisciplineComponent*
		constexpr auto LevelComponent = 0x810; // UTigerLevelComponent*
		constexpr auto CharacterCustomizationComponent = 0x818; // UTigerCharCustomizationComponent*
		constexpr auto PlayerClan = 0x828; // UTigerPlayerClanData*
		constexpr auto OnBloodTrackUpdatedEvent = 0x830; // FMulticastInlineDelegate
		constexpr auto BloodTrack = 0x840; // TArray<UTigerBloodTrackPassiveConfig*>
		constexpr auto InitialProjectileReserveCount = 0x850; // TMap<ATigerProjectile*, int8_t>
		constexpr auto DefaultReservedProjectileCount = 0x8a0; // int8_t
		constexpr auto LastAirStartTime = 0x8a4; // float
		constexpr auto LastAirEndTime = 0x8a8; // float
		constexpr auto OnGasDamageTaken = 0x8b0; // FMulticastInlineDelegate
		constexpr auto OnSelfReviveBlockedByRedGas = 0x8c0; // FMulticastInlineDelegate
		constexpr auto OnShieldBroken = 0x8d0; // FMulticastInlineDelegate
		constexpr auto OnDiablerizeStateChanged = 0x8f8; // FMulticastInlineDelegate
		constexpr auto OnReviveStateChanged = 0x908; // FMulticastInlineDelegate
		constexpr auto OnPlayerEvent = 0x918; // FMulticastInlineDelegate
		constexpr auto OnDamageDealt = 0x928; // FMulticastInlineDelegate
		constexpr auto OnHealthChanged = 0x938; // FMulticastInlineDelegate
		constexpr auto OnTraversalAction = 0x948; // FMulticastInlineDelegate
		constexpr auto OnLifeStatusChanged = 0x958; // FMulticastInlineDelegate
		constexpr auto OnUpdateArchetypePassiveActiveState = 0x998; // FMulticastInlineDelegate
		constexpr auto OnBeginPlay = 0x9a8; // FMulticastInlineDelegate
		constexpr auto OnGroupMemberDied = 0x9b8; // FMulticastInlineDelegate
		constexpr auto bExposePlayersInHeightenedSense = 0x9c8; // bool
		constexpr auto DiablerizeInteractionClass = 0x9d0; // UTigerPhysicalInteraction*
		constexpr auto ReviveInteractionClass = 0x9d8; // UTigerPhysicalInteraction*
		constexpr auto LoopSectionName = 0x9e0; // FName
		constexpr auto EndSectionName = 0x9e8; // FName
		constexpr auto InterruptedSectionName = 0x9f0; // FName
		constexpr auto SavedLocationAdded = 0x9f8; // FMulticastInlineDelegate
		constexpr auto OnKilledBy = 0xa08; // FMulticastInlineDelegate
		constexpr auto LeaveGameDestroyDelay = 0xa18; // float
		constexpr auto bControllerDisconnected = 0xa1c; // bool
		constexpr auto bAllowCollisionWithPlayersInElysium = 0xa1e; // bool
		constexpr auto PowerKit = 0xa20; // UTigerPowerKit*
		constexpr auto RecentDamageTaken = 0xa28; // float
		constexpr auto RecentDamageDecayWaitDuration = 0xa30; // float
		constexpr auto RecentDamageDecayInitialWaitDuration = 0xa34; // float
		constexpr auto RecentDamageDecayRate = 0xa38; // float
		constexpr auto InvulnerabilityDurationDowned = 0xa44; // float
		constexpr auto InvulnerabilityDurationRegenerated = 0xa48; // float
		constexpr auto InvulnerabilityDurationRevived = 0xa4c; // float
		constexpr auto LocationHistorySaveDistanceSquared = 0xa60; // float
		constexpr auto LocationHistoryDurationSeconds = 0xa64; // float
		constexpr auto bIsInvisibleByDodge = 0xa68; // bool
		constexpr auto bIsRecoveringFromDodge = 0xa69; // bool
		constexpr auto ArmorDurability = 0xa6c; // float
		constexpr auto ArmorRarity = 0xa70; // ETigerItemRarity
		constexpr auto ProjectileSpawnRootRef = 0xa78; // USceneComponent*
		constexpr auto Camera = 0xa80; // UCameraComponent*
		constexpr auto HolsteredWeaponMeshRef = 0xa88; // USkeletalMeshComponent*
		constexpr auto SecondaryHolsteredWeaponMeshRef = 0xa90; // USkeletalMeshComponent*
		constexpr auto CompressedCameraRotation = 0xa99; // FTigerCompressedRotation
		constexpr auto NpcThatCanSeePlayerServer = 0xaa8; // TArray<FTigerNpcThatCanSeePlayerWrapper>
		constexpr auto NpcThatCanSeePlayerClient = 0xab8; // TArray<FTigerNpcThatCanSeePlayerWrapper_Client>
		constexpr auto LastNpcsThatCantSeePlayerSent = 0xac8; // TArray<FTigerNpcThatCanSeePlayerWrapper_Client>
		constexpr auto LastNpcThatCanSeePlayerSyncTime = 0xae0; // float
		constexpr auto PhysicalInteractionObject = 0xae8; // UTigerPhysicalInteraction*
		constexpr auto OtherPhysicalInteractionPlayer = 0xaf0; // TWeakObjectPtr<ATigerPlayer>
		constexpr auto PassiveComponents = 0xaf8; // TArray<UTigerPassiveComponent*>
		constexpr auto ClanPassivesMap = 0xb08; // TMap<UObject*, FTigerClanPassiveAndDefault>
		constexpr auto CombinedPassiveStatChanges = 0xb58; // FTigerCharacterStatModification
		constexpr auto InvisibilityMaterial = 0xbe8; // UMaterialInterface*
		constexpr auto InvisibilityMaterialInstance = 0xbf0; // UMaterialInstanceDynamic*
		constexpr auto InWorldHealthBar = 0xbf8; // UTigerUIEnemyHealthBar*
		constexpr auto AirTimeRequiredForSuspiciousLanding = 0xc00; // float
		constexpr auto GroundBelowDeathLocation = 0xc04; // FVector
		constexpr auto bWasDiablerized = 0xc10; // bool
		constexpr auto DiablerizeAnimationName = 0xc14; // FName
		constexpr auto GetDiablerizedAnimationName = 0xc1c; // FName
		constexpr auto ReviveTeammateAnimationName = 0xc24; // FName
		constexpr auto GettingRevivedAnimationName = 0xc2c; // FName
		constexpr auto EnhancedReviveParticleEffect = 0xc38; // UParticleSystem*
		constexpr auto RegenerateComponent = 0xc40; // UParticleSystemComponent*
		constexpr auto RegenerateSpawnRateParam = 0xc48; // FName
		constexpr auto RegenerateRemainingDownTimeMultiplier = 0xc50; // float
		constexpr auto EnhancedReviveParticleEffectLength = 0xc54; // float
		constexpr auto TimeToGetInPositionForPhysicalInteraction = 0xc5c; // float
		constexpr auto ReviveHealthPercentage = 0xc60; // float
		constexpr auto ReviveHealth = 0xc64; // float
		constexpr auto bUsePercentReviveHealth = 0xc68; // bool
		constexpr auto PhysicalInteractionTimeLeft = 0xc6c; // float
		constexpr auto RevivedAudioEvent = 0xc78; // UAkAudioEvent*
		constexpr auto RegeneratingDoneAnimationName = 0xc80; // FName
		constexpr auto DamageDurationForInterrupt = 0xc88; // float
		constexpr auto InterruptDamageLimits = 0xc8c; // float [0x2]
		constexpr auto EnabledInterruptDamageLimits = 0xc94; // char
		constexpr auto DownedRangedDamageTakenMultiplier = 0xc98; // float
		constexpr auto DownedMeleeDamageTakenMultiplier = 0xc9c; // float
		constexpr auto DownedDisciplineDamageTakenMultiplier = 0xca0; // float
		constexpr auto DownedRegenRatePerSecond = 0xca4; // float
		constexpr auto DownedRegenRateReviveMultiplier = 0xca8; // float
		constexpr auto DownedBaseHealth = 0xcac; // float
		constexpr auto DownedRegenValue = 0xcb0; // float
		constexpr auto bDownedRegenShouldTickInsideHolyIncense = 0xcb8; // bool
		constexpr auto bCanRegenerateInsideHolyIncense = 0xcb9; // bool
		constexpr auto EffectUpdateTimeAfterInsideHolyIncense = 0xcbc; // float
		constexpr auto HardLandingSpeed = 0xcc0; // float
		constexpr auto OverlappingSuspiciousGuardVolumeCount = 0xcc4; // int32_t
		constexpr auto OverlappingThreatGuardVolumeCount = 0xcc8; // int32_t
		constexpr auto IsInCloseQuartersCombatCooldownTime = 0xd00; // float
		constexpr auto EnemyOutlineDistanceSquared = 0xd04; // float
		constexpr auto EnemyOutlineCombatDistanceSquared = 0xd08; // float
		constexpr auto ApproximateDownedHeightOffset = 0xd0c; // float
		constexpr auto FallStartedAudioEvent = 0xd28; // UAkAudioEvent*
		constexpr auto FallEndedAudioEvent = 0xd30; // UAkAudioEvent*
		constexpr auto HitEnemyAudioEvent = 0xd38; // UAkAudioEvent*
		constexpr auto HitEnemyHeadAudioEvent = 0xd40; // UAkAudioEvent*
		constexpr auto ExtraHealthHitAudioEvent = 0xd48; // UAkAudioEvent*
		constexpr auto PickUpRangedWeaponAudioEvent = 0xd50; // UAkAudioEvent*
		constexpr auto PickUpMeleeWeaponAudioEvent = 0xd58; // UAkAudioEvent*
		constexpr auto PickUpAmmoAudioEvent = 0xd60; // UAkAudioEvent*
		constexpr auto PickUpConsumableAudioEvent = 0xd68; // UAkAudioEvent*
		constexpr auto PickUpCollectibleAudioEvent = 0xd70; // UAkAudioEvent*
		constexpr auto PickupArmorAudioEvent = 0xd78; // UAkAudioEvent*
		constexpr auto StartCrouchAudioEvent = 0xd80; // UAkAudioEvent*
		constexpr auto EndCrouchAudioEvent = 0xd88; // UAkAudioEvent*
		constexpr auto HalfHealthBreakAudioEvent = 0xd90; // UAkAudioEvent*
		constexpr auto bOrientCharacterRotationToMovement = 0xd98; // bool
		constexpr auto bRotateCharacterWithMeleeWeapon = 0xd99; // bool
		constexpr auto PhysicalInteractionClass = 0xda0; // UTigerPhysicalInteraction*
		constexpr auto JudgeFeedTarget = 0xda8; // TWeakObjectPtr<ATigerJudge>
		constexpr auto JudgeFeedTimeSeconds = 0xdb0; // float
		constexpr auto RangedHitMontageNames = 0xdb8; // TArray<FName>
		constexpr auto TransitionParameterName = 0xdc8; // FName
		constexpr auto TempProp = 0xdd0; // UStaticMeshComponent*
		constexpr auto CharmedCharacters = 0xdd8; // TSet<ATigerCharacter*>
		constexpr auto bIsDowned = 0xe28; // bool
		constexpr auto bIsInGhostMode = 0xe8c; // bool
		constexpr auto bIsScouted = 0xec8; // bool
		constexpr auto bIsInAssaultedArea = 0xec9; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x268; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x270; // bool
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_UTBP_UI_StyledComboBoxRow_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_1 = 0x268; // UButton*
		constexpr auto TextBlock = 0x270; // UTigerStyledRichTextBlock*
		constexpr auto IsSelected = 0x278; // bool
		constexpr auto ParentBox = 0x280; // UTBP_UI_StyledComboBox_C*
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xbc; // char : 1
		constexpr auto SimulatedTasks = 0xc0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf0; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xb0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xb8; // TArray<UAISense*>
	}

	namespace n_UShAccountSettings {
		constexpr auto AccountChannel = 0x38; // EShAccountChannel
		constexpr auto PlatformChannel = 0x39; // EShAccountChannel
		constexpr auto LogEnabled = 0x3a; // bool
		constexpr auto SandboxUrl = 0x40; // FString
		constexpr auto ProductionUrl = 0x50; // FString
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UTBP_UI_PingInstance_Inner_C {
		constexpr auto CONFIG_OffscreenIconOffset = 0x2d0; // float
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UTigerConsumableWheelWidget {
		constexpr auto Player = 0x2a0; // ATigerPlayer*
		constexpr auto ConsumablesComponent = 0x2a8; // UTigerConsumablesComponent*
		constexpr auto InventoryComponent = 0x2b0; // UTigerInventoryComponent*
		constexpr auto DefaultSortOrder = 0x2b8; // TArray<UTigerConsumableAsset*>
		constexpr auto DefaultSortOrderMap = 0x2c8; // TMap<UTigerConsumableAsset*, int32_t>
		constexpr auto SortedMenuItems = 0x318; // TArray<UTigerConsumableAsset*>
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerGrimoireDialogueWrapper {
		constexpr auto DialogueList = 0x28; // UTigerNpcDialogueList*
		constexpr auto DialogueKey = 0x30; // FString
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant {
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_ATigerLootContainer {
		constexpr auto bDoorIsOpen = 0x288; // bool
		constexpr auto LootSpawnerComponent = 0x290; // UTigerBlueprintLootComponent*
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x208; // bool
		constexpr auto RequestNormals = 0x209; // bool
		constexpr auto RequestVertexConfidence = 0x20a; // bool
		constexpr auto VertexColorMode = 0x20b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x210; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x220; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x230; // FLinearColor
		constexpr auto UpdateInterval = 0x240; // float
		constexpr auto MRMesh = 0x248; // UMRMeshComponent*
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UTBP_WEP_Ability_Dash_C {
		constexpr auto UberGraphFrame = 0xc8; // FPointerToUberGraphFrame
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UTigerPassiveKindredCharmConfig {
		constexpr auto EffectActor = 0x118; // ATigerKindredCharmEffectActor*
		constexpr auto EffectSocketR = 0x120; // FName
		constexpr auto EffectSocketL = 0x128; // FName
		constexpr auto CharmCountCooldownSpeed = 0x130; // TArray<float>
		constexpr auto MaxCharmedCharacterCount = 0x140; // int32_t
		constexpr auto CharmBuff = 0x148; // UTigerBuffKindredCharm*
		constexpr auto PlayerPulseRange = 0x150; // float
		constexpr auto PlayerPulseInterval = 0x154; // float
		constexpr auto BuffDuration = 0x158; // float
		constexpr auto NpcDamageBreakCharmRadius = 0x15c; // float
		constexpr auto NpcDamageBreakCharmThreshold = 0x160; // float
		constexpr auto NpcDamageBreakCharmImmunityTime = 0x164; // float
		constexpr auto CharmedFeedingSpeedMultiplier = 0x168; // float
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xb0; // float
		constexpr auto LOSHearingThreshold = 0xb4; // float
		constexpr auto SightRadius = 0xb8; // float
		constexpr auto SensingInterval = 0xbc; // float
		constexpr auto HearingMaxSoundAge = 0xc0; // float
		constexpr auto bEnableSensingUpdates = 0xc4; // char : 1
		constexpr auto bOnlySensePlayers = 0xc4; // char : 1
		constexpr auto bSeePawns = 0xc4; // char : 1
		constexpr auto bHearNoises = 0xc4; // char : 1
		constexpr auto OnSeePawn = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf0; // float
		constexpr auto PeripheralVisionCosine = 0xf4; // float
	}

	namespace n_UTigerNPCCheatCommandsAsset {
		constexpr auto Commands = 0x30; // TMap<FName, UTigerNPCAsset*>
	}

	namespace n_UTigerDisciplineFrenzy {
		constexpr auto Config = 0x88; // UTigerFrenzyConfig*
	}

	namespace n_UTigerPassiveHideousLogic {
		constexpr auto Config = 0xc0; // UTigerPassiveHideousConfig*
		constexpr auto TimingData = 0xc8; // TMap<ATigerBaseNPC*, FHideousTimingData>
		constexpr auto Player = 0x118; // ATigerPlayer*
	}

	namespace n_ATBP_MovieSound_C {
		constexpr auto MediaSound = 0x228; // UMediaSoundComponent*
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x228; // float
		constexpr auto SeverePacketLossThreshold = 0x22c; // float
		constexpr auto BadPingThreshold = 0x230; // int32_t
		constexpr auto SeverePingThreshold = 0x234; // int32_t
		constexpr auto AdjustedNetSpeed = 0x238; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x23c; // float
		constexpr auto TotalNetBandwidth = 0x240; // int32_t
		constexpr auto MinDynamicBandwidth = 0x244; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x248; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x24c; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x24c; // char : 1
		constexpr auto StandbyRxCheatTime = 0x250; // float
		constexpr auto StandbyTxCheatTime = 0x254; // float
		constexpr auto PercentMissingForRxStandby = 0x258; // float
		constexpr auto PercentMissingForTxStandby = 0x25c; // float
		constexpr auto PercentForBadPing = 0x260; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x264; // float
		constexpr auto MoveRepSize = 0x268; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x26c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x270; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x274; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x278; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x27c; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x280; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x284; // float
		constexpr auto MaxMoveDeltaTime = 0x288; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x28c; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x290; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x294; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x298; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x29c; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x2a0; // int32_t
		constexpr auto ClientAuthorativePosition = 0x2a4; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2a8; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2ac; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2b0; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2b4; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2b5; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2b8; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2bc; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2c0; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2c4; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2c8; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2c9; // bool
	}

	namespace n_UTigerBuffStunBaton {
		constexpr auto StunBonusDamage = 0x248; // float
		constexpr auto ChargeGainedOnHit = 0x24c; // float
		constexpr auto ChargeGainedPerUpdate = 0x250; // float
		constexpr auto PassiveChargeRate = 0x254; // float
		constexpr auto bRegisterMultipleHitsOnChargeUp = 0x258; // bool
		constexpr auto bRegisterMultipleHitsOnStun = 0x259; // bool
		constexpr auto TBPInstanceBuff = 0x260; // UTigerBuffInstance*
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x578; // char : 1
		constexpr auto bIsFrozenRendering = 0x578; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x578; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x578; // char : 1
		constexpr auto bEnableBufferVisualization = 0x578; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x578; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x578; // char : 1
		constexpr auto bLastDisplayEnabled = 0x578; // char : 1
		constexpr auto DrawFrustum = 0x580; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x588; // AActor*
		constexpr auto SelectedComponent = 0x590; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x598; // FHitResult
		constexpr auto OriginalControllerRef = 0x628; // APlayerController*
		constexpr auto OriginalPlayer = 0x630; // UPlayer*
		constexpr auto SpeedScale = 0x638; // float
		constexpr auto InitialMaxSpeed = 0x63c; // float
		constexpr auto InitialAccel = 0x640; // float
		constexpr auto InitialDecel = 0x644; // float
	}

	namespace n_UTigerAIPlayerWallGrindTask {
		constexpr auto LocalAIController = 0x78; // ATigerLocalAIController*
		constexpr auto PlayerController = 0x80; // ATigerPlayerController*
		constexpr auto CurrentPawn = 0x88; // ATigerPlayer*
		constexpr auto PlayerMovementComponent = 0x90; // UTigerCharacterMovementComponent*
		constexpr auto GrindState = 0x98; // UTigerTraversalWallGrindState*
	}

	namespace n_UTigerMeleeWeapon {
		constexpr auto HorizontalFlinchCurve = 0xa8; // UCurveFloat*
		constexpr auto VerticalFlinchCurve = 0xb0; // UCurveFloat*
		constexpr auto DamageMultiplier = 0xb8; // float
		constexpr auto RootMotionAttacksStopDistance = 0xbc; // float
		constexpr auto RootMotionAttacksStopDistanceAboveOrBelow = 0xc0; // float
		constexpr auto bIsUnarmedWeapon = 0xc4; // bool
		constexpr auto AimAssistBehavior = 0xc8; // UTigerMeleeAimAssistBehavior*
		constexpr auto AimAssistPredictionTime = 0xd0; // float
		constexpr auto Attacks = 0xd8; // TArray<FTigerMeleeAttack>
		constexpr auto HeavyAttackChargeUpMontageName = 0xe8; // FName
		constexpr auto WeaponAbility = 0xf0; // ETigerDisciplinesEnum
		constexpr auto HitAkEvent = 0xf8; // UAkAudioEvent*
		constexpr auto HeavyHitAkEvent = 0x100; // UAkAudioEvent*
		constexpr auto HitEffect = 0x108; // UParticleSystem*
		constexpr auto HitEffectClass = 0x110; // AActor*
		constexpr auto TargetHitForceFeedback = 0x118; // UForceFeedbackEffect*
		constexpr auto AttackBlockedForceFeedback = 0x120; // UForceFeedbackEffect*
		constexpr auto SuccesfullyBlockedForceFeedback = 0x128; // UForceFeedbackEffect*
		constexpr auto BlockBlendSpaceName = 0x130; // FName
		constexpr auto BlockStanceActivatedAkEvent = 0x138; // UAkAudioEvent*
		constexpr auto StartBlockingTransitionTime = 0x140; // float
		constexpr auto BlockMovementMultiplier = 0x144; // float
		constexpr auto BlockStunTime = 0x148; // float
		constexpr auto DiminishingReturnBlockStunMultiplierReduction = 0x14c; // float
		constexpr auto BlockHitAkEvent = 0x150; // UAkAudioEvent*
		constexpr auto BlockEffect = 0x158; // UParticleSystem*
		constexpr auto BlockHitMontageName = 0x160; // FName
		constexpr auto BlockKnockbackMontageName = 0x168; // FName
		constexpr auto BlockImpulseStrength = 0x170; // float
		constexpr auto BlockMoveDistance = 0x174; // float
		constexpr auto BlockMoveDuration = 0x178; // float
		constexpr auto BlockMoveExitVelocityScale = 0x17c; // float
		constexpr auto BlockAttackDamageMultiplier = 0x180; // float
		constexpr auto BlockHeavyAttackDamageMultiplier = 0x184; // float
		constexpr auto WeaponTrailConfigClass = 0x188; // UTigerMeleeWeaponTrailConfig*
		constexpr auto MasqueradeNoiseEventRadius = 0x190; // float
		constexpr auto MeleeWeaponIdentifier = 0x194; // ETigerMeleeWeaponIdentifier
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_ATigerElysiumHUD {
		constexpr auto DialogueInteractionWidget = 0x3f8; // UTigerDialogueInteractionScreen*
		constexpr auto SoftPromotionalUiClass = 0x400; // TSoftClassPtr<UObject>
		constexpr auto PromotionalUi = 0x428; // UTigerPromotionalUI*
		constexpr auto SoftRewardsPopupClass = 0x430; // TSoftClassPtr<UObject>
		constexpr auto RewardsPopup = 0x458; // UTigerRewardsPopup*
		constexpr auto CurrentVendorUI = 0x460; // UTigerDialogueInteractionScreen*
		constexpr auto DialogueInteractionCameraPreset = 0x468; // TSoftClassPtr<UObject>
		constexpr auto ElysiumPlayerInfoUI = 0x490; // UTigerWidget*
		constexpr auto InGameQueueIndicatorUI = 0x498; // UTigerWidget*
		constexpr auto Watermark = 0x4a0; // UTigerWidget*
		constexpr auto ProgressHUD = 0x4a8; // UTigerWidget*
		constexpr auto SettingsMenuUi = 0x4b0; // UTigerInputMenuUI*
		constexpr auto OpenMenuHiddenWidgets = 0x4b8; // TArray<FAutoInitializedWidget>
		constexpr auto OpenMenuWidgetIgnoreList = 0x4c8; // TArray<UTigerWidget*>
		constexpr auto HiddenTigerWidgets = 0x4d8; // TArray<TWeakObjectPtr<UTigerWidget>>
		constexpr auto VendorUIZOrder = 0x4e8; // int32_t
		constexpr auto OnPreloadingDone = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPromotionalPopupClosed = 0x508; // FMulticastInlineDelegate
		constexpr auto TimeSpentPerMenu = 0x530; // TMap<FString, int32_t>
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UTBP_UI_BasicMenu_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Image_1 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto MenuHeader = 0x278; // UTextBlock*
		constexpr auto PutMenuContentHere = 0x280; // UNamedSlot*
		constexpr auto TBP_UI_Box = 0x288; // UTBP_UI_Box_C*
		constexpr auto TBP_UI_Line = 0x290; // UTBP_UI_Line_C*
		constexpr auto MenuTitle = 0x298; // FText
	}

	namespace n_UTigerBrujahTraitMomentum {
		constexpr auto MomentumActiveTimer = 0x118; // float
		constexpr auto GroundSlamRadiusMultiplier = 0x11c; // float
		constexpr auto MightyLeapVelocityMultiplier = 0x120; // float
		constexpr auto FOTTKnockbackDistanceMultiplier = 0x124; // float
		constexpr auto FOTTWallImpactDamageMultiplier = 0x128; // float
		constexpr auto MomentumStartedAudioEvent = 0x130; // UAkAudioEvent*
	}

	namespace n_UTigerActiveDisciplineConfig {
		constexpr auto MaxLevel = 0xe8; // int32_t
		constexpr auto CooldownText = 0xf0; // FText
		constexpr auto CooldownSuffix = 0x108; // FText
		constexpr auto MaxCharges = 0x120; // int32_t
		constexpr auto RechargeTimes = 0x128; // TArray<float>
		constexpr auto CooldownTimes = 0x138; // TArray<float>
		constexpr auto bShouldRotateTowardsCameraOnActivation = 0x148; // bool
		constexpr auto bShouldRotateTowardsCameraOnRelease = 0x149; // bool
		constexpr auto MovementMultiplier = 0x14c; // float
		constexpr auto GravityMultiplier = 0x150; // float
		constexpr auto PrimaryAINoiseEventRange = 0x154; // float
		constexpr auto SecondaryAINoiseEventRange = 0x158; // float
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x110; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x11c; // bool
		constexpr auto bSinglePhysicalSpace = 0x11d; // bool
	}

	namespace n_UTigerBuffArtifactFeedingBonus {
		constexpr auto FeedBonusHealthMultiplier = 0x248; // float
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_UTigerCameraBehavior {
		constexpr auto CameraPreset = 0x28; // UTigerCameraPreset*
	}

	namespace n_UTigerBuffClanReducesCooldown {
		constexpr auto AbilityCooldownReduction = 0x248; // float
	}

	namespace n_UTigerBuffPreventMasqueradeBreak {
		constexpr auto ArtifactBreakAudioEvent = 0x248; // UAkAudioEvent*
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UTigerPassionConfig {
		constexpr auto ProjectileMinLengthScale = 0x160; // float
		constexpr auto ProjectileMaxLengthScale = 0x164; // float
		constexpr auto ProjectileMinWidthScale = 0x168; // float
		constexpr auto ProjectileMaxWidthScale = 0x16c; // float
		constexpr auto ProjectileMinHeightScale = 0x170; // float
		constexpr auto ProjectileMaxHeightScale = 0x174; // float
		constexpr auto ProjectileMinSpeed = 0x178; // float
		constexpr auto ProjectileMaxSpeed = 0x17c; // float
		constexpr auto ProjectileMinRange = 0x180; // float
		constexpr auto ProjectileMaxRange = 0x184; // float
		constexpr auto PanicMinDuration = 0x188; // float
		constexpr auto PanicMaxDuration = 0x18c; // float
		constexpr auto ApathyMinDuration = 0x190; // float
		constexpr auto ApathyMaxDuration = 0x194; // float
		constexpr auto ApathyStartSlowMultiplier = 0x198; // float
		constexpr auto ApathyEndSlowMultiplier = 0x19c; // float
		constexpr auto WrathMinDuration = 0x1a0; // float
		constexpr auto WrathMaxDuration = 0x1a4; // float
		constexpr auto WrathMinAdditionalDamageMultiplier = 0x1a8; // float
		constexpr auto WrathMaxAdditionalDamageMultiplier = 0x1ac; // float
		constexpr auto ChooseEffectAnimation = 0x1b0; // UAnimMontage*
		constexpr auto ChargeEffectAnimation = 0x1b8; // UAnimMontage*
		constexpr auto ReleaseEffectAnimation = 0x1c0; // UAnimMontage*
		constexpr auto EffectBuffs = 0x1c8; // TMap<ETigerPassionEffect, UTigerBuff*>
		constexpr auto ProjectileParticles = 0x218; // TMap<ETigerPassionEffect, UParticleSystem*>
		constexpr auto ProjectileActor = 0x268; // ATigerPassionProjectile*
		constexpr auto TimeBetweenEffectChange = 0x270; // float
		constexpr auto ChooseEffectTimeOut = 0x274; // float
		constexpr auto MaxChargeTime = 0x278; // float
		constexpr auto UsageCooldown = 0x27c; // float
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UTigerEditorGameSettings {
		constexpr auto bMatchWaitsForMultipleGroupsInEditor = 0x38; // bool
		constexpr auto bMatchWaitsForReadyStatesInEditor = 0x39; // bool
		constexpr auto bEnableSpawnCountdownInEditor = 0x3a; // bool
		constexpr auto bEnableNpcSpawningInEditor = 0x3b; // bool
		constexpr auto bUseLocalVendorCategories = 0x3c; // bool
		constexpr auto SeasonConfigOverride = 0x40; // TSoftObjectPtr<UTigerSeasonConfigAsset>
		constexpr auto bShowGeneratedMeshActorsInOutliner = 0x68; // bool
		constexpr auto bSimulateParticlesInEditor = 0x69; // bool
		constexpr auto PreviewerClass = 0x70; // TSoftClassPtr<UObject>
		constexpr auto IndoorVolumeColor = 0x98; // FColor
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xb0; // int32_t
		constexpr auto ForcedLOD = 0xb4; // int32_t
		constexpr auto ComponentsToSync = 0xb8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xc8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x118; // int32_t
		constexpr auto CurrentNumLODs = 0x11c; // int32_t
		constexpr auto DriveComponents = 0x120; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x280; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UAkSettings {
		constexpr auto MaxSimultaneousReverbVolumes = 0x28; // char
		constexpr auto WwiseProjectPath = 0x30; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x40; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x50; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x51; // ECollisionChannel
		constexpr auto DefaultFitToGeometryCollisionChannel = 0x52; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x58; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto GlobalDecayAbsorption = 0xa8; // float
		constexpr auto DefaultReverbAuxBus = 0xb0; // TSoftObjectPtr<UAkAuxBus>
		constexpr auto EnvironmentDecayAuxBusMap = 0xd8; // TMap<float, TSoftObjectPtr<UAkAuxBus>>
		constexpr auto HFDampingName = 0x128; // FString
		constexpr auto DecayEstimateName = 0x138; // FString
		constexpr auto TimeToFirstReflectionName = 0x148; // FString
		constexpr auto HFDampingRTPC = 0x158; // TSoftObjectPtr<UAkRtpc>
		constexpr auto DecayEstimateRTPC = 0x180; // TSoftObjectPtr<UAkRtpc>
		constexpr auto TimeToFirstReflectionRTPC = 0x1a8; // TSoftObjectPtr<UAkRtpc>
		constexpr auto AcousticTextureParamsMap = 0x1d0; // TMap<FGuid, FAkAcousticTextureParams>
		constexpr auto SplitSwitchContainerMedia = 0x220; // bool
		constexpr auto SplitMediaPerFolder = 0x221; // bool
		constexpr auto UseEventBasedPackaging = 0x222; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0x223; // bool
		constexpr auto CommandletCommitMessage = 0x228; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0x238; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x288; // bool
		constexpr auto bEnableMultiCoreRendering = 0x289; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x28a; // bool
		constexpr auto FixupRedirectorsDuringMigration = 0x28b; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x290; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x2a0; // FFilePath
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xb0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xb8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto KeyInstances = 0xe8; // TArray<UBlackboardKeyType*>
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x228; // USceneComponent*
		constexpr auto SplineComponent = 0x230; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x238; // UPaperTerrainComponent*
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UTigerBalconyVolumeDefaultValues {
		constexpr auto DefaultBalconyVolumeSets = 0x30; // TArray<FTigerBuildingSystemBalconyVolumeDefaults>
	}

	namespace n_UTBP_UI_TitleScreen_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto OutAnimation = 0x288; // UWidgetAnimation*
		constexpr auto Loop_Text_Animation = 0x290; // UWidgetAnimation*
		constexpr auto InAnimation = 0x298; // UWidgetAnimation*
		constexpr auto ActiveBuildText = 0x2a0; // UTigerStyledRichTextBlock*
		constexpr auto BackgroundScaleBox = 0x2a8; // UScaleBox*
		constexpr auto BackgroundVideoWidget = 0x2b0; // UImage*
		constexpr auto BlackScreen = 0x2b8; // UImage*
		constexpr auto ErrorSubscreen = 0x2c0; // UTBP_UI_TitleError_C*
		constexpr auto Image_547 = 0x2c8; // UImage*
		constexpr auto Message = 0x2d0; // UTigerStyledRichTextBlock*
		constexpr auto PressAnyKeyText = 0x2d8; // UTigerStyledRichTextBlock*
		constexpr auto Season_Logo = 0x2e0; // UImage*
		constexpr auto Title_Logo = 0x2e8; // UImage*
		constexpr auto Vein1 = 0x2f0; // UImage*
		constexpr auto Vein2 = 0x2f8; // UImage*
		constexpr auto Vein3 = 0x300; // UImage*
		constexpr auto MediaPlayer = 0x308; // UMediaPlayer*
		constexpr auto OnLandingPageClosed = 0x310; // FMulticastInlineDelegate
		constexpr auto Is Playing Out Animation = 0x320; // bool
		constexpr auto OnLandingPageFadeOutStarted = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UTigerGrimoireEntry {
		constexpr auto Name = 0x30; // FText
		constexpr auto GameplayText = 0x48; // FText
		constexpr auto Heading = 0x60; // FText
		constexpr auto Description = 0x78; // FText
		constexpr auto Dialogue = 0x90; // UTigerGrimoireDialogueWrapper*
		constexpr auto Summary = 0x98; // FText
		constexpr auto UnlockSummary = 0xb0; // FText
		constexpr auto MediaDisplayMode = 0xc8; // ETigerGrimoireEntryMediaDisplayMode
		constexpr auto Image = 0xd0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BackgroundImage = 0xf8; // TSoftObjectPtr<UTexture2D>
		constexpr auto Mesh = 0x120; // TSoftObjectPtr<UStaticMesh>
		constexpr auto Video = 0x148; // UFileMediaSource*
		constexpr auto DefaultState = 0x150; // ETigerGrimoireEntryState
		constexpr auto TextContinuationMethod = 0x151; // ETigerGrimoireContinuationMethod
		constexpr auto GrimoireCardPreset = 0x158; // UGrimoireCardMaterialPreset*
		constexpr auto CardQualityRow = 0x160; // FDataTableRowHandle
		constexpr auto CardBorderRow = 0x170; // FDataTableRowHandle
		constexpr auto FrontCardTexture = 0x180; // TSoftObjectPtr<UTexture>
		constexpr auto DefaultOrderValue = 0x1a8; // float
		constexpr auto MeshScaleMultiplier = 0x1ac; // float
		constexpr auto EntryIdAsString = 0x1b8; // FString
		constexpr auto bHideEntry = 0x1c8; // bool
		constexpr auto ParentEntry = 0x1d0; // UTigerGrimoireEntry*
	}

	namespace n_AMagicLeapARPinInfoActor_C {
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto Right = 0x248; // UStaticMeshComponent*
		constexpr auto Forward = 0x250; // UStaticMeshComponent*
		constexpr auto Up = 0x258; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x260; // USphereComponent*
		constexpr auto AxisRoot = 0x268; // USceneComponent*
		constexpr auto VisualizerRoot = 0x270; // USceneComponent*
		constexpr auto TypeValue = 0x278; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x280; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x288; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x290; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x298; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x2a0; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x2a8; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x2b0; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x2b8; // USceneComponent*
		constexpr auto Root = 0x2c0; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x2c8; // float
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UTBP_UI_Menu_Button_Prompt_Footer_C {
		constexpr auto LeftBox_Prompts = 0x260; // UNamedSlot*
		constexpr auto MidBox_Prompts = 0x268; // UNamedSlot*
		constexpr auto RightBox_Prompts = 0x270; // UNamedSlot*
		constexpr auto TBP_UI_Divider = 0x278; // UTBP_UI_Divider_C*
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x360; // float
		constexpr auto OuterConeAngle = 0x364; // float
	}

	namespace n_UTigerWeaponCrosshairWidget {
		constexpr auto WeaponSpread = 0x280; // float
		constexpr auto PlayerMovementVelocity = 0x284; // FVector
		constexpr auto bIsAiming = 0x290; // bool
		constexpr auto PreviewWeaponSpread = 0x294; // float
		constexpr auto CrosshairImages = 0x298; // TArray<FTigerWeaponCrosshairSlot>
		constexpr auto CrosshairScalingImages = 0x2a8; // TArray<FTigerWeaponScalingCrosshairSlot>
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UAkRoomComponent {
		constexpr auto bEnable = 0x218; // char : 1
		constexpr auto bDynamic = 0x21c; // bool
		constexpr auto Priority = 0x220; // float
		constexpr auto WallOcclusion = 0x224; // float
		constexpr auto AuxSendLevel = 0x228; // float
		constexpr auto AutoPost = 0x22c; // bool
		constexpr auto GeometryComponent = 0x238; // UAkAcousticTextureSetComponent*
	}

	namespace n_UTigerTeamViewUI {
		constexpr auto OtherGroupMembers = 0x280; // TArray<ATigerPlayerState*>
		constexpr auto PreMatchPaperDollComp = 0x290; // UTigerPreMatchPaperDollComponent*
		constexpr auto PreHighlightTag = 0x298; // FString
		constexpr auto GroupMemberPaperDollTags = 0x2a8; // TArray<FName>
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x260; // float
		constexpr auto bEnabled = 0x264; // char : 1
		constexpr auto Settings = 0x268; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x288; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x2b0; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x2c0; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x6e8; // UReplicationDriver*
	}

	namespace n_UTigerIngameSubmenuWidget {
		constexpr auto MenuName = 0x290; // FText
		constexpr auto MenuContainer = 0x2a8; // UTigerIngameMenuWidget*
		constexpr auto InGameMenuEnabled = 0x2b0; // bool
		constexpr auto NewNotificationMenuOption = 0x2b1; // ETigerNewNotificationMenuOptions
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xb0; // float
		constexpr auto SkeletalMeshComponent = 0xb8; // USkeletalMeshComponent*
	}

	namespace n_UTigerQueueForLogin {
		constexpr auto ReadyForLogin = 0x30; // FMulticastInlineDelegate
		constexpr auto WaitTimeUpdated = 0x40; // FMulticastInlineDelegate
		constexpr auto Error = 0x50; // FMulticastInlineDelegate
		constexpr auto LoginQueueService = 0x68; // UTigerLoginQueueService*
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UTBP_UI_PingResponse_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InAnimation = 0x268; // UWidgetAnimation*
		constexpr auto WrapperImage = 0x270; // UImage*
		constexpr auto OnAnimationDone = 0x278; // FMulticastInlineDelegate
		constexpr auto bIsShown = 0x288; // bool
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x110; // EShadowMapFlags
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UTigerHighTierLootGroup {
		constexpr auto TextColor = 0x28; // FLinearColor
	}

	namespace n_UTigerNosferatuPassiveBestialLogic {
		constexpr auto RevealedPlayers = 0x158; // TMap<int32_t, FTigerTrackedPlayerData>
		constexpr auto Config = 0x1a8; // UTigerNosferatuPassiveBestialConfig*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UABP_VMP_NOS_F_HAIR_01_Skeleton_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_18 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_17 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_16 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xfe0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3ec0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x4300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x4740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4b80; // FAnimNode_AnimDynamics
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6c0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6c8; // float
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UTigerCameraPreset {
		constexpr auto FOV = 0x28; // float
		constexpr auto SpringArmLength = 0x2c; // float
		constexpr auto CameraOffset = 0x30; // FVector
		constexpr auto TargetOffset = 0x3c; // FVector
		constexpr auto TransitionCurveIn = 0x48; // UCurveFloat*
		constexpr auto TransitionCurveOutOverride = 0x50; // UCurveFloat*
		constexpr auto RotatePawnTransition = 0x58; // UCurveFloat*
		constexpr auto SidewaysCameraMirrorTime = 0x60; // float
		constexpr auto CameraLagSpeed = 0x64; // FVector
		constexpr auto CameraLagMaxDistance = 0x70; // FVector
		constexpr auto CameraRotationLagSpeed = 0x7c; // float
		constexpr auto CameraSensitivityModifier = 0x80; // float
		constexpr auto bUseCameraSensitivtyModifierDuringFade = 0x84; // bool
		constexpr auto CameraBehavior = 0x88; // UTigerCameraBehavior*
		constexpr auto CameraShakeBehaviour = 0x90; // UMatineeCameraShake*
		constexpr auto bShortenSpringArmWhenLookingUp = 0x98; // bool
		constexpr auto ViewPitchMax = 0x9c; // float
		constexpr auto ArmLengthInterpSpeed = 0xa0; // float
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UTigerIngameMenuWidget {
		constexpr auto SubmenuClasses = 0x290; // TArray<UTigerIngameSubmenuWidget*>
		constexpr auto SubmenuWidgets = 0x2a0; // TArray<UTigerIngameSubmenuWidget*>
		constexpr auto ActiveMenuIndex = 0x2b0; // int32_t
		constexpr auto SelectedMenu = 0x2b8; // UTigerIngameSubmenuWidget*
		constexpr auto bShouldShowPlayerCurrency = 0x2c0; // bool
	}

	namespace n_UABP_VMP_BRU_M_HAIR_11_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_19 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_18 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_17 = 0xb80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xfc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_16 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1ca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x20e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2520; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3ec0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x4300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x4740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x4b80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4fc0; // FAnimNode_AnimDynamics
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto RenderResolution = 0xd1; // EParticleResolutionMode
		constexpr auto BoundingMode = 0xd2; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd3; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UTigerAnimNotifyState_HideWeapon {
		constexpr auto WeaponAppearanceUpdate = 0x30; // ETigerTriggerUpdateWpnAppearance
	}

	namespace n_UTigerCharacterSkinToneCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
		constexpr auto LightColor = 0x148; // FLinearColor
		constexpr auto LightIntensity = 0x158; // float
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_ATigerKindredCharmEffectActor {
		constexpr auto KindredCharmPercent = 0x228; // float
	}

	namespace n_UTigerGrimoireCategory {
		constexpr auto Title = 0x30; // FText
		constexpr auto Description = 0x48; // FText
		constexpr auto Entries = 0x60; // UDataTable*
		constexpr auto SubCategories = 0x68; // TArray<UTigerGrimoireCategory*>
		constexpr auto ParentCategory = 0x78; // UTigerGrimoireCategory*
		constexpr auto bHideCategory = 0x80; // bool
		constexpr auto NewNotificationCategory = 0x81; // ETigerNewNotificationMenuOptions
		constexpr auto BackfaceTextureDMNR = 0x88; // TSoftObjectPtr<UTexture>
		constexpr auto DefaultOrderValue = 0xb0; // float
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_UTigerBuildingWallPreset {
		constexpr auto Meshes = 0x28; // TArray<TSoftObjectPtr<UStaticMesh>>
	}

	namespace n_ATigerLaceratingThrowProjectile {
		constexpr auto ConfigType = 0x228; // UTigerLaceratingThrowConfig*
		constexpr auto TargetLocation = 0x230; // FVector
		constexpr auto ArrivalTimerHandle = 0x240; // FTimerHandle
		constexpr auto bIsMoving = 0x248; // bool
		constexpr auto rank = 0x24c; // int32_t
		constexpr auto bTargetIsOnWall = 0x25c; // bool
	}

	namespace n_USharkAccounts {
		constexpr auto Settings = 0x90; // UShAccountSettings*
	}

	namespace n_UABP_VMP_BRU_M_HAIR_12_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x320; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xbc0; // FAnimNode_AnimDynamics
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UTigerAiCalculateFiringLocationsScoreService {
		constexpr auto TargetKey = 0x70; // FBlackboardKeySelector
		constexpr auto bDebugDrawLocations = 0x98; // bool
		constexpr auto bDebugDrawSweepChecks = 0x99; // bool
		constexpr auto bDebugDrawInvalidLocationReason = 0x9a; // bool
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UTBP_UI_LoginSection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CTA_SignIn = 0x268; // UTBP_UI_Button_CTA_C*
		constexpr auto EmailTextBoxLogin = 0x270; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto PasswordTextBoxLogin = 0x278; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto SignInText = 0x280; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_Divider = 0x288; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_5 = 0x290; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Loading_Throbber_SignIn = 0x298; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TBP_UI_SmallErrorMessage_Login = 0x2a0; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_LoginEmail = 0x2a8; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_LoginPassword = 0x2b0; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_TextButton_CreateAnAccount = 0x2b8; // UTBP_UI_TextButton_C*
		constexpr auto TBP_UI_TextButton_ExitGame = 0x2c0; // UTBP_UI_TextButton_C*
		constexpr auto TBP_UI_TextButton_LostPassword = 0x2c8; // UTBP_UI_TextButton_C*
		constexpr auto CreateAccount = 0x2d0; // FMulticastInlineDelegate
		constexpr auto SignIn = 0x2e0; // FMulticastInlineDelegate
		constexpr auto ExitGame = 0x2f0; // FMulticastInlineDelegate
		constexpr auto RecoverPassword = 0x300; // FMulticastInlineDelegate
		constexpr auto bEmailEnteredCorrectly = 0x310; // bool
		constexpr auto bPasswordEnteredCorrectly = 0x311; // bool
		constexpr auto LoginScreen = 0x318; // UTBP_UI_LoginScreen_C*
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UTigerNPCFacePoseMap {
		constexpr auto HeadMeshsPoseAssets = 0x28; // TArray<FTigerFacePoseData>
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UTigerCollectibleSystemSettings {
		constexpr auto CollectiblesTable = 0x38; // TSoftObjectPtr<UDataTable>
	}

	namespace n_UTigerMeleeWeaponComponent {
		constexpr auto OnAttack = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnQuickAttack = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnAttackHit = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnSuccessfulBlock = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnHeavyAttackChargeBegin = 0x100; // FMulticastInlineDelegate
		constexpr auto OnHeavyAttackChargeEnd = 0x110; // FMulticastInlineDelegate
		constexpr auto DebugDrawTime = 0x120; // float
		constexpr auto SwingCollisionData = 0x148; // UTigerSwingCollisionData*
		constexpr auto OnHeavyAttackReachedMinimumCharge = 0x150; // FMulticastInlineDelegate
		constexpr auto OnMeleeWeaponEquipped = 0x160; // FMulticastInlineDelegate
		constexpr auto bHeavyAttackEnabled = 0x170; // bool
		constexpr auto bBlockingEnabled = 0x171; // bool
		constexpr auto bAttackingViaQuickAttackEnabled = 0x172; // bool
		constexpr auto CurrentAttackIdentifier = 0x173; // FTigerMeleeWeaponAttackIdentifier
		constexpr auto MeleeAttacksDatabase = 0x180; // UDataTable*
		constexpr auto EquippedWeaponType = 0x188; // UTigerMeleeWeapon*
		constexpr auto CurrentAimAssistBehavior = 0x190; // UTigerMeleeAimAssistBehavior*
		constexpr auto BlockCooldown = 0x198; // float
		constexpr auto MaxBlockAttackAngle = 0x19c; // float
		constexpr auto AttackQueueCooldown = 0x1a0; // float
		constexpr auto AirAttackRequiredDistanceToGround = 0x1a4; // float
		constexpr auto HitEffectRadiusOffset = 0x1a8; // float
		constexpr auto HitEffectHeightOffset = 0x1ac; // float
		constexpr auto RootMotionAnimationHeightThreshold = 0x1b0; // float
		constexpr auto BlockBuffOnAttacker = 0x1b8; // UTigerBuff*
		constexpr auto DiminishingReturnCooldown = 0x1c0; // float
		constexpr auto DiminishingReturnMultiplierRegenerationRate = 0x1c4; // float
		constexpr auto bCanMoveDuringMeleeAttacks = 0x200; // bool
		constexpr auto HitFeedbackTargets = 0x210; // TArray<ATigerCharacter*>
		constexpr auto HitCharactersOnCurrentSwing = 0x288; // TArray<AActor*>
		constexpr auto HitWorldStaticsOnCurrentSwing = 0x298; // TArray<AActor*>
		constexpr auto CurrentSwingAnimation = 0x2b0; // UAnimMontage*
		constexpr auto LockOnTarget = 0x2b8; // AActor*
		constexpr auto MaxLockOnDistance = 0x2c0; // float
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x228; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x230; // UCameraComponent*
		constexpr auto SceneComponent = 0x238; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x248; // char : 1
		constexpr auto AspectRatio = 0x24c; // float
		constexpr auto FOVAngle = 0x250; // float
		constexpr auto PostProcessBlendWeight = 0x254; // float
		constexpr auto PostProcessSettings = 0x260; // FPostProcessSettings
	}

	namespace n_UGrimoireCardMaterialPreset {
		constexpr auto Roughness = 0x30; // float
		constexpr auto Damage = 0x34; // float
		constexpr auto ExtraDamage = 0x38; // float
		constexpr auto ExtraDamageOnEdges = 0x3c; // float
		constexpr auto ExtraDamageMoveScale = 0x40; // FVector
		constexpr auto BorderRoughnessSpecularity = 0x4c; // FVector
		constexpr auto BorderAmount = 0x58; // float
		constexpr auto BorderColor = 0x5c; // FColor
		constexpr auto BorderRaisedAmount = 0x60; // float
		constexpr auto BorderRoughnessSpecularityMetalic = 0x64; // FVector
		constexpr auto DirtMaps = 0x70; // FVector
		constexpr auto DirtColor = 0x7c; // FColor
		constexpr auto DirtMoveXYScale = 0x80; // FVector
		constexpr auto DirtHardness = 0x8c; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UTigerAnimNotifyState_OverrideCanInteractInDodge {
		constexpr auto RequiredWeapon = 0x30; // UTigerMeleeWeapon*
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0xf0; // FRotator
		constexpr auto PivotTranslation = 0xfc; // FVector
		constexpr auto bRotationInLocalSpace = 0x108; // char : 1
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1c8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x218; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UTBP_ContextualHelp_Tutorial_SwapWeapons_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_ATBP_Trap_Aim_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto TrapLightTop = 0x230; // USpotLightComponent*
		constexpr auto StaticMesh = 0x238; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
	}

	namespace n_UTBP_RejuvenatingVoice_C {
		constexpr auto UberGraphFrame = 0x138; // FPointerToUberGraphFrame
		constexpr auto HealRadius = 0x140; // float
	}

	namespace n_UTBP_UI_Crosshair_SingleLong_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UTigerAiSquadFormationService {
		constexpr auto FormationLocationKey = 0x70; // FBlackboardKeySelector
		constexpr auto bDebugDraw = 0x98; // bool
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x130; // APawn*
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UTBP_UI_TailorStore_Marker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_2 = 0x2c0; // UCanvasPanel*
		constexpr auto JudgeMarkerImage = 0x2c8; // UImage*
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3a8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3b0; // bool
	}

	namespace n_UTBP_RangedWeapon_Shotgun_Master_C {
		constexpr auto SpreadOfCurrentShot_1 = 0x204; // FVector
		constexpr auto ShotIndex = 0x210; // int32_t
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UTBP_UI_AssaultCrosshair_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UTigerAiReportNewThreatTask {
		constexpr auto PlayerToReportKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UTigerAiPlayerCombatService {
		constexpr auto WeaponRanges = 0x70; // TMap<ETigerWeaponType, FWeaponDistanceDesc>
		constexpr auto LocalAIController = 0xc0; // ATigerLocalAIController*
		constexpr auto CurrentLureTarget = 0xc8; // AActor*
	}

	namespace n_UTBP_FlowBoot_C {
		constexpr auto UberGraphFrame = 0x80; // FPointerToUberGraphFrame
		constexpr auto FirstTimeArchetypeSelectionUI = 0x88; // UTBP_UI_FirstTimeArchetypeSelection_C*
		constexpr auto bIsFirstBlackScreenLaunch = 0x90; // bool
		constexpr auto TitleScreenUI = 0x98; // UTBP_UI_TitleScreen_C*
		constexpr auto ElysiumRef = 0xa0; // UObject*
		constexpr auto InvalidClientUI = 0xa8; // UTBP_UI_InvalidGameClient_C*
		constexpr auto PsoCacheUI = 0xb0; // UTigerPsoCacheUI*
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x480; // bool
		constexpr auto bUseAsyncCooking = 0x481; // bool
		constexpr auto ProcMeshBodySetup = 0x488; // UBodySetup*
		constexpr auto ProcMeshSections = 0x490; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x4a0; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4b0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4d0; // TArray<UBodySetup*>
	}

	namespace n_UTigerPersistentPlayerState {
		constexpr auto OnDailyChallengesInitializedEvent = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnRewardsLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnClientTransactionalPlayerDataChangedEvent = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnClientPlayerInventoryChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnSelectedCharacterChanged = 0x118; // FMulticastInlineDelegate
		constexpr auto OnChallengeProgressUpdated = 0x128; // FMulticastInlineDelegate
		constexpr auto OnSeasonLevelGained = 0x180; // FMulticastInlineDelegate
		constexpr auto PlayerThrallSystem = 0x190; // UTigerThrallSystem*
		constexpr auto PlayerCollectibleSystem = 0x198; // UTigerCollectibleSystem*
		constexpr auto ServerCallbacks = 0x1b0; // UObject*
		constexpr auto SharkmobUserId = 0x1d8; // FSharkUserId
		constexpr auto PersistentPlayerID = 0x1e8; // FTigerPersistentPlayerID
		constexpr auto AccountChannel = 0x1f8; // EShAccountChannel
		constexpr auto CachedPlayerCharacters = 0x350; // TArray<FTigerPersistentPlayerCharacter>
		constexpr auto ActiveQuests = 0x360; // TMap<FString, UTigerQuestline*>
		constexpr auto CompletedQuests = 0x3b0; // TMap<FString, UTigerQuestline*>
		constexpr auto DailyChallenges = 0x4b0; // TMap<FTigerChallengeTypeID, UTigerChallenge*>
		constexpr auto SeasonalChallenges = 0x500; // TMap<FTigerChallengeInstanceID, UTigerChallenge*>
		constexpr auto PendingWeeklyChallengeUpdates = 0x550; // TMap<FTigerChallengeInstanceID, int32_t>
		constexpr auto MasteryChallenges = 0x5a0; // TMap<FTigerChallengeInstanceID, UTigerChallenge*>
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTBP_UI_RegistrationSection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CTA_RegisterButton = 0x268; // UTBP_UI_Button_CTA_C*
		constexpr auto CountrySpecificExtras = 0x270; // UVerticalBox*
		constexpr auto DateofBirth_Text = 0x278; // UTigerStyledRichTextBlock*
		constexpr auto EmailBoxRegistration = 0x280; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto KoreaCheckbox1 = 0x288; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto KoreaCheckbox2 = 0x290; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto KoreaCheckbox3 = 0x298; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto KoreaCheckbox4 = 0x2a0; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto PasswordBoxRegistration = 0x2a8; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto Regitster_Text = 0x2b0; // UTigerStyledRichTextBlock*
		constexpr auto RepeatPasswordBoxRegistration = 0x2b8; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto TBP_UI_Divider = 0x2c0; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_6 = 0x2c8; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Loading_Throbber_Email = 0x2d0; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TBP_UI_Loading_Throbber_Registration = 0x2d8; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TBP_UI_Loading_Throbber_Username = 0x2e0; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TBP_UI_Registration_Checkbox_Newsletter = 0x2e8; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto TBP_UI_Registration_Checkbox_PrivacyPolicy = 0x2f0; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto TBP_UI_Registration_Checkbox_TermsOfService = 0x2f8; // UTBP_UI_CheckboxWithClickabelText_C*
		constexpr auto TBP_UI_SmallErrorMessage_Agreement = 0x300; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_Country = 0x308; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_Date = 0x310; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_EmailRegistration = 0x318; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_KoreaExtras_2 = 0x320; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_KoreaExtras_3 = 0x328; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_KoreaExtras_4 = 0x330; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_KoreaExtras_5 = 0x338; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_PasswordRegistration = 0x340; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_Register = 0x348; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_UsernameRegistration = 0x350; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_StyledComboBox_Country = 0x358; // UTBP_UI_StyledComboBox_C*
		constexpr auto TBP_UI_StyledComboBox_Day = 0x360; // UTBP_UI_StyledComboBox_C*
		constexpr auto TBP_UI_StyledComboBox_Month = 0x368; // UTBP_UI_StyledComboBox_C*
		constexpr auto TBP_UI_StyledComboBox_Year = 0x370; // UTBP_UI_StyledComboBox_C*
		constexpr auto TBP_UI_TextButton_ExitGame = 0x378; // UTBP_UI_TextButton_C*
		constexpr auto TBP_UI_TextButton_SignIn = 0x380; // UTBP_UI_TextButton_C*
		constexpr auto TBP_UI_TOS_PP_Popup = 0x388; // UTBP_UI_TOS_PP_Popup_C*
		constexpr auto UsernameBoxRegistration = 0x390; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto CreateAccount = 0x398; // FMulticastInlineDelegate
		constexpr auto Back = 0x3a8; // FMulticastInlineDelegate
		constexpr auto bYearSelected = 0x3b8; // bool
		constexpr auto bMonthSelected = 0x3b9; // bool
		constexpr auto bCountrySelected = 0x3ba; // bool
		constexpr auto bDaySelected = 0x3bb; // bool
		constexpr auto Countries = 0x3c0; // TArray<FText>
		constexpr auto RegionId = 0x3d0; // int32_t
		constexpr auto EmailUserChangeRevision = 0x3d8; // FText
		constexpr auto UsernameUserChangeRevision = 0x3f0; // FText
		constexpr auto bUsernameAvailable = 0x408; // bool
		constexpr auto bEmailAvailable = 0x409; // bool
		constexpr auto bPasswordEnteredCorrectly = 0x40a; // bool
		constexpr auto bDateEnteredCorrectly = 0x40b; // bool
		constexpr auto CachedEmailResponses = 0x410; // TMap<FString, bool>
		constexpr auto CachedUsernameResponses = 0x460; // TMap<FString, bool>
		constexpr auto LoginScreen = 0x4b0; // UTBP_UI_LoginScreen_C*
		constexpr auto CountryDropDownKeyIndices = 0x4b8; // TMap<FString, int32_t>
		constexpr auto CurrentKeyIndex = 0x508; // int32_t
		constexpr auto ExitGame = 0x510; // FMulticastInlineDelegate
		constexpr auto bTermsOfServiceAccepted = 0x520; // bool
		constexpr auto bPrivacyPolicyAccepted = 0x521; // bool
		constexpr auto bNewsletterAccepted = 0x522; // bool
		constexpr auto bKoreaCheckbox1Accepted = 0x523; // bool
		constexpr auto bKoreaCheckbox2Accepted = 0x524; // bool
		constexpr auto bKoreaCheckbox3Accepted = 0x525; // bool
		constexpr auto bKoreaCheckbox4Accepted = 0x526; // bool
		constexpr auto Subheader_TextFormatting = 0x528; // FString
		constexpr auto Subtitle_TextFormatting = 0x538; // FString
		constexpr auto UL_TextFormatting = 0x548; // FString
		constexpr auto Bold_TextFormating = 0x558; // FString
		constexpr auto EL_TextFormatting = 0x568; // FString
		constexpr auto TimeoutTimerHandle = 0x578; // FTimerHandle
		constexpr auto bCountrySelectedKorea = 0x580; // bool
		constexpr auto CachedUsernameResponsesProfanity = 0x588; // TMap<FString, int32_t>
		constexpr auto UsernameTimeoutTimerHandle = 0x5d8; // FTimerHandle
	}

	namespace n_UTBP_UI_TransitionLinesImage_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ImageWidget = 0x268; // UImage*
		constexpr auto TransitionWidget = 0x270; // UTBP_UI_TransitionWidget_C*
		constexpr auto Brush = 0x278; // FSlateBrush
		constexpr auto AnimationDelay = 0x300; // float
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARGeoAnchorUpdatePayload
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x140; // EARTextureType
		constexpr auto Timestamp = 0x144; // float
		constexpr auto ExternalTextureGuid = 0x148; // FGuid
		constexpr auto Size = 0x158; // FVector2D
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UTigerHorizontalArchetypeSelectorUI {
		constexpr auto TigerGameInstance = 0x280; // UTigerGameInstance*
	}

	namespace n_UTigerPoiMarkerProxy {
		constexpr auto PointOfInterest = 0x68; // FPointOfInterest
	}

	namespace n_UTigerBuffSharkInstance {
		constexpr auto SharkBuff = 0x88; // UTigerBuffShark*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UTigerBuffThornsInstance {
		constexpr auto ThornsBuff = 0x98; // UTigerBuffThorns*
	}

	namespace n_UTigerResourceBarUI {
		constexpr auto OnHealthChanged = 0x280; // FMulticastInlineDelegate
		constexpr auto TigerCharacterOwner = 0x290; // ATigerCharacter*
		constexpr auto HealthBarSegments = 0x298; // TArray<UTigerResourceBarSegmentUI*>
		constexpr auto FilledColor = 0x2a8; // FLinearColor
		constexpr auto EmptyColor = 0x2b8; // FLinearColor
		constexpr auto LockedColor = 0x2c8; // FLinearColor
		constexpr auto NumberOfSegments = 0x2d8; // int32_t
		constexpr auto bShouldShowLostHealth = 0x2dc; // bool
		constexpr auto LostHealthDelay = 0x2e0; // float
		constexpr auto LostHealthBarSpeed = 0x2e4; // float
		constexpr auto LostHealthPercentage = 0x2e8; // float
		constexpr auto bShouldShowGainedResources = 0x2ec; // bool
		constexpr auto GainedResourceDelay = 0x2f0; // float
		constexpr auto GainedResourceBarSpeed = 0x2f4; // float
		constexpr auto GainedResourcePercentage = 0x2f8; // float
		constexpr auto TheoreticalMaxResources = 0x2fc; // float
		constexpr auto WidthBetweenSegments = 0x300; // float
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTigerWorldMarkerComponent {
		constexpr auto WorldMarkerActorType = 0xb0; // ATigerWorldMarker*
		constexpr auto WorldMarkerChild = 0xb8; // ATigerWorldMarker*
	}

	namespace n_UTigerEntityCombatComponent {
		constexpr auto TimeBeforeAttackingNewPlayer = 0xb0; // float
		constexpr auto ClosestAllowedDistanceToBeSprinting = 0xb4; // float
		constexpr auto SprintingCooldownDuration = 0xb8; // float
		constexpr auto MaxLaserLength = 0xbc; // float
		constexpr auto MaxAngleFromOriginalWeapon = 0xc0; // float
		constexpr auto LaserInterpolateSpeed = 0xc4; // float
		constexpr auto LaserInterpolateRuberbandSpeedMultiplier = 0xc8; // float
		constexpr auto MaterialScaleName = 0xcc; // FName
		constexpr auto MaterialFadeLaserName = 0xd4; // FName
		constexpr auto bHideLaserDuringReload = 0xdc; // bool
		constexpr auto NotInCombatFadedLaserLength = 0xe0; // float
		constexpr auto ReloadingFadedLaserLength = 0xe4; // float
		constexpr auto NpcOwner = 0xe8; // ATigerNPC*
		constexpr auto LaserPointer = 0x100; // UStaticMeshComponent*
		constexpr auto LaserPointerOriginGlowParticleSystem = 0x108; // UParticleSystemComponent*
	}

	namespace n_UTBP_Headgear_Customization_Master_C {
		constexpr auto VisiblePiercingsFilter = 0x180; // TMap<ENUM_PiercingNames, bool>
	}

	namespace n_UTigerGrimoireLandingUi {
		constexpr auto CachedUnlockedEntries = 0x290; // TArray<UTigerGrimoireEntry*>
		constexpr auto CachedReadEntries = 0x2a0; // TArray<UTigerGrimoireEntry*>
		constexpr auto CachedSuggestedArticlesData = 0x2b0; // FTigerSuggestedArticlesData
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x2d8; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2d8; // char : 1
		constexpr auto bLOSflag = 0x2d8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2d8; // char : 1
		constexpr auto bAllowStrafe = 0x2d8; // char : 1
		constexpr auto bWantsPlayerState = 0x2d8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2d8; // char : 1
		constexpr auto PathFollowingComponent = 0x2e0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2e8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x2f0; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x2f8; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x300; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x308; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x310; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UTigerSpawnMechanicBattleRoyaleRandomStart {
		constexpr auto TestSpawnPointsMapMarkerClass = 0x50; // ATigerWorldMarker*
		constexpr auto GroupSpawnLocations = 0x58; // TArray<FVector2D>
		constexpr auto FakeGroupIds = 0xb8; // TMap<ATigerPlayerState*, FTigerGroupId>
		constexpr auto GroupCoordinator = 0x108; // UTigerGroupCoordinator*
		constexpr auto MinimumDistanceBetweenGroups = 0x110; // float
		constexpr auto DistanceBetweenGroupsFalloffLength = 0x114; // float
	}

	namespace n_ATigerGrimoireUnlockPickup {
		constexpr auto PickupMesh = 0x280; // UStaticMeshComponent*
		constexpr auto EntryToUnlock = 0x288; // UTigerGrimoireEntry*
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_ATigerAISplinePath {
		constexpr auto PathData = 0x228; // FTigerAISplinePathData
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UTigerDisciplineTankyCharge {
		constexpr auto PreviouslyHitCharacters = 0x78; // TArray<AActor*>
		constexpr auto TargetLocation = 0x88; // FVector
	}

	namespace n_UTigerBuffHealthRegenBaseInstance {
		constexpr auto HealthRegenBuff = 0x88; // UTigerBuffHealthRegenBase*
	}

	namespace n_ATigerEmptyActorWithChild {
		constexpr auto ChildActorComponent = 0x228; // UChildActorComponent*
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UTigerSHPBCoordinator {
		constexpr auto SHPBNPCAsset = 0xb0; // UTigerNPCAsset*
		constexpr auto SHPBWorldMarker = 0xb8; // ATigerSHPBMarker*
		constexpr auto WaypointKeyName = 0xc0; // FName
		constexpr auto WaypointIndexKeyName = 0xc8; // FName
		constexpr auto bIsEnabled = 0xd0; // bool
		constexpr auto ActiveSHPB = 0xd8; // TArray<ATigerNPC*>
		constexpr auto Settings = 0xe8; // FTigerSHPBSettings
		constexpr auto SHPBSpawner = 0x108; // ATigerNPCInstantSpawner*
		constexpr auto MatchGameMode = 0x110; // ATigerMatchGameMode*
		constexpr auto MatchGameState = 0x118; // ATigerMatchGameState*
	}

	namespace n_UTBP_UI_TextBoxWrapper_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto EmailTextBox = 0x268; // UEditableTextBox*
		constexpr auto Focus Lost = 0x270; // FMulticastInlineDelegate
		constexpr auto Focus Received = 0x280; // FMulticastInlineDelegate
		constexpr auto PreviousFocus = 0x290; // bool
		constexpr auto Text Settled = 0x298; // FMulticastInlineDelegate
		constexpr auto Text Settle Timer Handle = 0x2a8; // FTimerHandle
		constexpr auto Text Settle Time = 0x2b0; // float
		constexpr auto Default Style = 0x2b8; // FEditableTextBoxStyle
		constexpr auto Error Style = 0xab0; // FEditableTextBoxStyle
		constexpr auto NewVar_1 = 0x12a8; // UEditableTextBox*
		constexpr auto Text Changed = 0x12b0; // FMulticastInlineDelegate
	}

	namespace n_ATigerWorldMarker {
		constexpr auto MarkerClass = 0x228; // UUserWidget*
		constexpr auto bAutoCreateMapMarker = 0x230; // bool
		constexpr auto bWaitForMapData = 0x231; // bool
		constexpr auto MapMarkerProxy = 0x238; // UTigerMapMarkerProxy*
		constexpr auto MarkerRoot = 0x240; // USceneComponent*
	}

	namespace n_UTBP_UI_CompassObject_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto CompassMarker = 0x2a0; // UCanvasPanel*
		constexpr auto CompassMarkerImage = 0x2a8; // UImage*
		constexpr auto CompassMarkerMaterial = 0x2b0; // UMaterialInstanceDynamic*
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UTigerTransitionWidget {
		constexpr auto AnimationDelay = 0x260; // float
		constexpr auto AnimationSpeed = 0x264; // float
		constexpr auto OnTransitionStarted = 0x268; // FMulticastInlineDelegate
		constexpr auto OnTransitionFinished = 0x278; // FMulticastInlineDelegate
		constexpr auto Progress = 0x288; // float
		constexpr auto EffectMaterialInstance = 0x290; // UMaterialInstanceDynamic*
	}

	namespace n_UTigerFOTTConfig {
		constexpr auto bDebugHitboxVisualization = 0x160; // bool
		constexpr auto bDebugWallhitAngle = 0x161; // bool
		constexpr auto HitBoxExtents = 0x164; // FVector
		constexpr auto HitBoxOffset = 0x170; // FVector
		constexpr auto KnockbackDistanceText = 0x180; // FText
		constexpr auto KnockbackDistanceTooltipValues = 0x198; // TArray<float>
		constexpr auto KnockbackDistanceSuffix = 0x1a8; // FText
		constexpr auto KnockbackTime = 0x1c0; // float
		constexpr auto TimeBeforeRagdollOnDeadNPCs = 0x1c4; // float
		constexpr auto RagdollKnockbackForceMultiplier = 0x1c8; // float
		constexpr auto KnockbackStunDuration = 0x1cc; // float
		constexpr auto KnockbackAngle = 0x1d0; // float
		constexpr auto MaxChargeDuration = 0x1d4; // float
		constexpr auto AttackDuration = 0x1d8; // float
		constexpr auto MaxWallStunAnglePitchDiff = 0x1dc; // float
		constexpr auto MaxWallStunAngleYawDiff = 0x1e0; // float
		constexpr auto MinimumChargeupTime = 0x1e4; // float
		constexpr auto EndOfAttackPercentageSpeedKept = 0x1e8; // float
		constexpr auto HitTargetsPercentageSpeedKept = 0x1ec; // float
		constexpr auto SelfbuffWhileCharging = 0x1f0; // UTigerBuff*
		constexpr auto TargetKnockedIntoWallBuff = 0x1f8; // UTigerBuff*
		constexpr auto TravelDistance = 0x200; // UCurveFloat*
		constexpr auto KnockbackDistance = 0x208; // TArray<UCurveFloat*>
		constexpr auto FistDamage = 0x218; // UCurveFloat*
		constexpr auto TargetWallHitDamage = 0x220; // UCurveFloat*
		constexpr auto TargetWallHitStun = 0x228; // UCurveFloat*
		constexpr auto WallEffectRadius = 0x230; // float
		constexpr auto WallEffectStayTime = 0x234; // float
		constexpr auto WallEffectFadeTime = 0x238; // float
		constexpr auto ChargeupBlendspaceAnimationSet = 0x240; // UTigerAnimationSetAsset*
		constexpr auto TargetKnockbackAnimation = 0x248; // UAnimMontage*
		constexpr auto KnockbackAnimationPlayrate = 0x250; // UCurveFloat*
		constexpr auto ChargeupAnimation = 0x258; // UAnimMontage*
		constexpr auto ChargeupAnimationAir = 0x260; // UAnimMontage*
		constexpr auto ChargeupAnimationSpeed = 0x268; // float
		constexpr auto FullyChargedSectionName = 0x26c; // FName
		constexpr auto AttackerAnimation = 0x278; // UAnimMontage*
		constexpr auto AttackerAnimationAir = 0x280; // UAnimMontage*
		constexpr auto AttackAnimationSpeed = 0x288; // float
		constexpr auto RecoverAnimation = 0x290; // UAnimMontage*
		constexpr auto RecoverAnimationAir = 0x298; // UAnimMontage*
		constexpr auto WallHitStunAnimation = 0x2a0; // UAnimMontage*
		constexpr auto WallHitAudioEvent = 0x2a8; // UAkAudioEvent*
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_UTigerItemCheatCommandsAsset {
		constexpr auto Commands = 0x30; // TMap<FString, UTigerItemAsset*>
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UTBP_UI_PingIcon_C {
		constexpr auto UberGraphFrame = 0x2d8; // FPointerToUberGraphFrame
		constexpr auto OnPingAnim = 0x2e0; // UWidgetAnimation*
		constexpr auto BG_Dot_Border = 0x2e8; // UImage*
		constexpr auto BG_Dot_Dark = 0x2f0; // UImage*
		constexpr auto Icon_Overlay = 0x2f8; // UOverlay*
		constexpr auto IconWidget = 0x300; // UImage*
		constexpr auto IconWidget_Animated = 0x308; // UImage*
		constexpr auto ImageSizeMultiplier = 0x310; // FVector2D
	}

	namespace n_ATigerBuildingSystemWallStreamer {
		constexpr auto StreamableBuildingParts = 0x228; // TArray<FTigerStreamableBuildingSides>
		constexpr auto ComponentsToCreateRenderstateOn = 0x238; // TArray<UStaticMeshComponent*>
	}

	namespace n_UTigerPlayerMasqueradeConsequenceHsRevealSyncInstance {
		constexpr auto bOnlyVisibleInHeightenedsSenses = 0x58; // bool
		constexpr auto bAffectedPlayerIsWithinLocalHsArea = 0x59; // bool
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UTigerTraversalBaseFiniteState {
		constexpr auto TigerCharacterMovementComponent = 0x28; // UTigerCharacterMovementComponent*
		constexpr auto BaseConfig = 0x30; // UTigerTraversalStateConfigBase*
		constexpr auto OwningStateMachine = 0x38; // UTigerTraversalFiniteStateMachine*
	}

	namespace n_UTigerUser {
		constexpr auto DISPLAYNAME = 0x28; // FString
		constexpr auto ID = 0x38; // FTigerPersistentPlayerID
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UTigerSwingCollisionData {
		constexpr auto SwingCollisionInfos = 0x30; // TMap<FName, FTigerSwingCollisionInfo>
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x238; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x240; // bool
	}

	namespace n_UTigerBodyArmorAsset {
		constexpr auto Durability = 0x128; // int32_t
		constexpr auto StatChanges = 0x12c; // FTigerCharacterStatModification
	}

	namespace n_UTigerNPCSpawningCoordinator {
		constexpr auto JudgeNpcAsset = 0xb0; // UTigerNPCAsset*
		constexpr auto NpcSpawningGroupBudget = 0xb8; // UDataTable*
		constexpr auto JudgeSpawnTime = 0xc0; // float
		constexpr auto bShouldSpawnJudge = 0xc4; // bool
	}

	namespace n_UTigerPassiveAHuntForPleasure {
		constexpr auto MinEffectDistance = 0x118; // float
		constexpr auto MaxEffectDistance = 0x11c; // float
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UABP_VMP_BRU_F_HAIR_10_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1420; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UTigerProjectilePoolingSettings {
		constexpr auto bUsingProjectilePooling = 0x38; // bool
	}

	namespace n_UTigerSightConfigAsset {
		constexpr auto SightData = 0x30; // TMap<ETigerNPCType, FTigerSightConfigData>
	}

	namespace n_AAkReverbVolume {
		constexpr auto bEnabled = 0x260; // char : 1
		constexpr auto AuxBus = 0x268; // UAkAuxBus*
		constexpr auto AuxBusName = 0x270; // FString
		constexpr auto SendLevel = 0x280; // float
		constexpr auto FadeRate = 0x284; // float
		constexpr auto Priority = 0x288; // float
		constexpr auto LateReverbComponent = 0x290; // UAkLateReverbComponent*
	}

	namespace n_UTBP_UI_FullScreen_PopUp_Base_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutAnimation = 0x268; // UWidgetAnimation*
		constexpr auto InAnimation = 0x270; // UWidgetAnimation*
		constexpr auto InformationWidgetBorder = 0x278; // UTBP_UI_Box_C*
		constexpr auto InformationWidgetSlot = 0x280; // UNamedSlot*
		constexpr auto RootCanvas = 0x288; // UCanvasPanel*
		constexpr auto TitleText = 0x290; // UTBP_UI_Text_C*
		constexpr auto Title = 0x298; // FText
		constexpr auto OnClose = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnFadeOutFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UTigerMeleeWeaponTrailConfig {
		constexpr auto ScalarParameters = 0x28; // TArray<FScalarParameterValue>
		constexpr auto VectorParameters = 0x38; // TArray<FVectorParameterValue>
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerSafeZoneSettings {
		constexpr auto SafeZoneRelativeScreenSpaceDimensions = 0x38; // FVector2D
		constexpr auto UIZoneAspectRatio = 0x40; // float
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UTigerCharacterCardShapeCustomization {
		constexpr auto CardShapeMask = 0x110; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0xf0; // float
		constexpr auto MaxSpeed = 0xf4; // float
		constexpr auto bRotationFollowsVelocity = 0xf8; // char : 1
		constexpr auto bRotationRemainsVertical = 0xf8; // char : 1
		constexpr auto bShouldBounce = 0xf8; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0xf8; // char : 1
		constexpr auto bForceSubStepping = 0xf8; // char : 1
		constexpr auto bSimulationEnabled = 0xf8; // char : 1
		constexpr auto bSweepCollision = 0xf8; // char : 1
		constexpr auto bIsHomingProjectile = 0xf8; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0xf9; // char : 1
		constexpr auto bIsSliding = 0xf9; // char : 1
		constexpr auto bInterpMovement = 0xf9; // char : 1
		constexpr auto bInterpRotation = 0xf9; // char : 1
		constexpr auto PreviousHitTime = 0xfc; // float
		constexpr auto PreviousHitNormal = 0x100; // FVector
		constexpr auto ProjectileGravityScale = 0x10c; // float
		constexpr auto Buoyancy = 0x110; // float
		constexpr auto Bounciness = 0x114; // float
		constexpr auto Friction = 0x118; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x11c; // float
		constexpr auto MinFrictionFraction = 0x120; // float
		constexpr auto OnProjectileBounce = 0x128; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x138; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x148; // float
		constexpr auto HomingTargetComponent = 0x14c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x154; // float
		constexpr auto MaxSimulationIterations = 0x158; // int32_t
		constexpr auto BounceAdditionalIterations = 0x15c; // int32_t
		constexpr auto InterpLocationTime = 0x160; // float
		constexpr auto InterpRotationTime = 0x164; // float
		constexpr auto InterpLocationMaxLagDistance = 0x168; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x16c; // float
	}

	namespace n_ATigerPlayerCameraManager {
		constexpr auto MinSpringArmLengthWhenLookingUp = 0x27c0; // float
		constexpr auto BaseTurnRate = 0x27c4; // float
		constexpr auto BaseLookUpRate = 0x27c8; // float
		constexpr auto CameraPresetsAdditive = 0x27d0; // UTigerCameraPreset* [0x4]
		constexpr auto AdditiveCameraShakeInstances = 0x27f0; // UMatineeCameraShake* [0x4]
		constexpr auto CurrentPresetShakeBehaviour = 0x2810; // UMatineeCameraShake*
		constexpr auto FullscreenFXManager = 0x2818; // UTigerFullscreenFXManager*
		constexpr auto RecoilResetCurve = 0x2820; // UCurveFloat*
		constexpr auto RecoilResetSpeedCurve = 0x2828; // UCurveFloat*
		constexpr auto TimeBeforeRecoilReset = 0x2830; // float
		constexpr auto VerticalRecoilCurve = 0x2838; // UCurveFloat*
		constexpr auto HorizontalRecoilCurve = 0x2840; // UCurveFloat*
		constexpr auto TigerPlayer = 0x2848; // ATigerPlayer*
		constexpr auto BloodVeinPawn = 0x2850; // ATigerBloodVeinPawn*
		constexpr auto TigerPlayerController = 0x2858; // ATigerPlayerController*
		constexpr auto DefaultTransitionCurve = 0x2868; // UCurveFloat*
		constexpr auto CameraPresetOverride = 0x2870; // UTigerCameraPreset*
		constexpr auto CameraPresetIndoorOverride = 0x2878; // UTigerCameraPreset*
		constexpr auto CurrentSpringArm = 0x2880; // UTigerSpringArmComponent*
		constexpr auto CurrentCameraBehavior = 0x2888; // UTigerCameraBehavior*
		constexpr auto PreviousCameraPreset = 0x2890; // UTigerCameraPreset*
		constexpr auto CachedCameraBehaviors = 0x28d0; // TArray<UTigerCameraBehavior*>
		constexpr auto AdditiveCameraBehaviors = 0x28e0; // TArray<UTigerAdditiveCameraBehavior*>
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_ATigerBootGameMode {
		constexpr auto SessionTraveledFrom = 0x2c8; // ESessionType
		constexpr auto GameFlowStateMap = 0x2d0; // UTigerGameFlowStateMap*
		constexpr auto BotGameFlowStateMap = 0x2d8; // UTigerGameFlowStateMap*
		constexpr auto PromotionalUiClass = 0x2e0; // UTigerPromotionalUI*
		constexpr auto PromotionalUi = 0x2e8; // UTigerPromotionalUI*
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ArchetypePower_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_ATigerRoofSystem {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto Width = 0x230; // float
		constexpr auto Depth = 0x234; // float
	}

	namespace n_UTigerDisciplineShackles {
		constexpr auto Config = 0x80; // UTigerShacklesConfig*
		constexpr auto ClientAimDecal = 0x88; // ADecalActor*
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolume = 0x260; // AProceduralFoliageVolume*
	}

	namespace n_UTigerFriendInvite {
		constexpr auto DISPLAYNAME = 0x28; // FString
		constexpr auto PlayerId = 0x38; // FTigerPersistentPlayerID
		constexpr auto SharkmobUserId = 0x48; // FSharkUserId
		constexpr auto PlatformUserId = 0x58; // FString
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x868; // FName
		constexpr auto CurveSyncOffset = 0x870; // float
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UTigerExperienceEvent {
		constexpr auto BaseExperienceGain = 0x28; // int32_t [0x2]
		constexpr auto EventIcon = 0x30; // UTexture2D*
		constexpr auto Description = 0x38; // FText
	}

	namespace n_UAkIOSInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x90; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa0; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc8; // FAkAdvancedInitializationSettings
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UTigerDialogueCondition_MatchStats {
		constexpr auto StatType = 0x30; // ETigerSeasonMatchStatType
		constexpr auto StatEquality = 0x31; // ETigerDialogueEqualitySpecifier
		constexpr auto StatValue = 0x34; // int32_t
	}

	namespace n_UTigerCustomBlendSpace1DListClan {
		constexpr auto BlendSpaces = 0x28; // UBlendSpace1D* [0x4]
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UTigerBuffInstance {
		constexpr auto BuffReplicatedInstanceData = 0x28; // FTigerBuffReplicatedInstanceData
		constexpr auto OwnerCharacter = 0x48; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto Buff = 0x50; // UTigerBuff*
		constexpr auto ActiveBuffParticles = 0x68; // UParticleSystemComponent*
		constexpr auto ActiveNiagaraParticles = 0x70; // UNiagaraComponent*
		constexpr auto AdditionalActiveNiagaraParticles = 0x78; // TArray<UNiagaraComponent*>
	}

	namespace n_UTBP_LoadingScreen_Simple_C {
		constexpr auto Tooltips = 0x78; // TSoftObjectPtr<UTBP_LoadingToolTip_C>
		constexpr auto BackgroundMaterial = 0xa0; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x228; // TArray<ULevelSequence*>
	}

	namespace n_UTigerCustomSequenceListClanAndGender {
		constexpr auto SequencesByClan = 0x28; // FTigerPlayerSequenceByClan [0x2]
	}

	namespace n_UTigerAiTargetOutOfBounds {
		constexpr auto IsTargetOutOfBoundsKey = 0x68; // FBlackboardKeySelector
		constexpr auto HasPathToTargetKey = 0x90; // FBlackboardKeySelector
		constexpr auto IsPathOutOfBoundsKey = 0xb8; // FBlackboardKeySelector
	}

	namespace n_UTigerTeleportConfig {
		constexpr auto TeleportDistance = 0x160; // float
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x450; // FColor
		constexpr auto ArrowSize = 0x454; // float
		constexpr auto ArrowLength = 0x458; // float
		constexpr auto ScreenSize = 0x45c; // float
		constexpr auto bIsScreenSizeScaled = 0x460; // char : 1
		constexpr auto bTreatAsASprite = 0x460; // char : 1
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_UTBP_ContextualHelp_Tutorial_HSense_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UTigerDisciplineBlindingBeauty {
		constexpr auto Config = 0x78; // UTigerBlindingBeautyConfig*
		constexpr auto BlueprintActor = 0x80; // ATigerBlindingBeautyEffectActor*
	}

	namespace n_UTigerMasqueradeConsequenceTrailSyncInstance {
		constexpr auto bOnlyVisibleInHeightenedsSenses = 0x58; // bool
		constexpr auto bAffectedPlayerIsWithinLocalHsArea = 0x59; // bool
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UINTLLoginCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UTigerCharacterBeardColorCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x450; // FText
		constexpr auto TextMaterial = 0x468; // UMaterialInterface*
		constexpr auto Font = 0x470; // UFont*
		constexpr auto HorizontalAlignment = 0x478; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x479; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x47c; // FColor
		constexpr auto XScale = 0x480; // float
		constexpr auto YScale = 0x484; // float
		constexpr auto WorldSize = 0x488; // float
		constexpr auto InvDefaultSize = 0x48c; // float
		constexpr auto HorizSpacingAdjust = 0x490; // float
		constexpr auto VertSpacingAdjust = 0x494; // float
		constexpr auto bAlwaysRenderAsText = 0x498; // char : 1
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x250; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b8; // bool
		constexpr auto SessionTimeoutSecs = 0x2bc; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2c0; // float
	}

	namespace n_UTigerPassiveEnragedConfig {
		constexpr auto ActivationMontage = 0x118; // UAnimMontage*
		constexpr auto EffectActor = 0x120; // ATigerEnragedEffectActor*
		constexpr auto EffectActorDestructionDelay = 0x128; // float
		constexpr auto OnHitBuff = 0x130; // UTigerBuff*
		constexpr auto DisciplineDamageMultiplier = 0x138; // float
		constexpr auto RegenSpeed = 0x13c; // float
		constexpr auto RegenDelay = 0x140; // float
		constexpr auto HealthPercentThreshold = 0x144; // float
		constexpr auto bUseBaseHealthPercent = 0x148; // bool
		constexpr auto bDamageMultiplierOneTimeUse = 0x149; // bool
	}

	namespace n_ATigerStatisticsGatherer {
		constexpr auto AnimationSequences = 0x228; // TMap<FString, float>
		constexpr auto ProcessingCullDistance = 0x278; // float
		constexpr auto MaxComponentProcessingCountPerFrame = 0x27c; // int32_t
		constexpr auto bVisualizeProcessedComponents = 0x280; // bool
	}

	namespace n_UTigerTraversalStateWallGrindConfig {
		constexpr auto ColliderOffset = 0x50; // FVector
		constexpr auto SphereColliderRadius = 0x5c; // float
		constexpr auto WallGrindCancelInputHalfAngle = 0x60; // float
		constexpr auto WallGrindCancelInputDelayTime = 0x64; // float
		constexpr auto WallGrindVelocityRemapDeadZone = 0x68; // float
		constexpr auto WallGrindMaxHorizontalSpeed = 0x6c; // float
		constexpr auto WallGrindBufferDistance = 0x70; // float
		constexpr auto WallGrindBufferAdjustmentSpeed = 0x74; // float
		constexpr auto RequiredSuccessfulSimulationTime = 0x78; // float
		constexpr auto MinRequiredAngleBetweenStartingNormalAndPathDir = 0x7c; // float
		constexpr auto WallGrindPossibleStartAngleThreshold = 0x80; // float
		constexpr auto WallGrindSimulationSharpAngleThreshold = 0x84; // float
		constexpr auto NumberofSimulationChecksPerSecond = 0x88; // int8_t
		constexpr auto WallGrindFallVelocitySpeedUp = 0x90; // UCurveFloat*
		constexpr auto WallGrindFallVelocitySlowDown = 0x98; // UCurveFloat*
		constexpr auto WallGrindStartingHorizontalSpeedMultipler = 0xa0; // UCurveFloat*
		constexpr auto bOnlyAdjustFallSpeedWhenFallingTooFast = 0xa8; // bool
		constexpr auto bShouldBlockWallGrindingWhenHoldingCancelInput = 0xa9; // bool
		constexpr auto bShouldClampHorizontalSpeed = 0xaa; // bool
		constexpr auto bWallGrindShouldBufferDistanceToWall = 0xab; // bool
		constexpr auto bValidateWallgrindByCheckingPathAverageToWall = 0xac; // bool
		constexpr auto bDrawOutWallNormalsUsedInAWallGrind = 0xad; // bool
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto BodyInstance = 0x158; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2b0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2b1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2b4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2b8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2bc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2c0; // int32_t
		constexpr auto CollisionRadius = 0x2c4; // float
		constexpr auto ShadeRadius = 0x2c8; // float
		constexpr auto NumSteps = 0x2cc; // int32_t
		constexpr auto InitialSeedDensity = 0x2d0; // float
		constexpr auto AverageSpreadDistance = 0x2d4; // float
		constexpr auto SpreadVariance = 0x2d8; // float
		constexpr auto SeedsPerStep = 0x2dc; // int32_t
		constexpr auto DistributionSeed = 0x2e0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2e4; // float
		constexpr auto bCanGrowInShade = 0x2e8; // bool
		constexpr auto bSpawnsInShade = 0x2e9; // bool
		constexpr auto MaxInitialAge = 0x2ec; // float
		constexpr auto MaxAge = 0x2f0; // float
		constexpr auto OverlapPriority = 0x2f4; // float
		constexpr auto ProceduralScale = 0x2f8; // FFloatInterval
		constexpr auto ScaleCurve = 0x300; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x388; // int32_t
		constexpr auto ReapplyDensity = 0x38c; // char : 1
		constexpr auto ReapplyRadius = 0x38c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x38c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x38c; // char : 1
		constexpr auto ReapplyScaling = 0x38c; // char : 1
		constexpr auto ReapplyScaleX = 0x38c; // char : 1
		constexpr auto ReapplyScaleY = 0x38c; // char : 1
		constexpr auto ReapplyScaleZ = 0x38c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x38d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x38d; // char : 1
		constexpr auto ReapplyHeight = 0x38d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x38d; // char : 1
		constexpr auto ReapplyZOffset = 0x38d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x38d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x38d; // char : 1
		constexpr auto bEnableDensityScaling = 0x38d; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x38e; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x390; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3a0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3a4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UTigerPassiveConfig {
		constexpr auto Name = 0x30; // FText
		constexpr auto Description = 0x48; // FText
		constexpr auto Icon = 0x60; // UTexture2D*
		constexpr auto PreviewVideo = 0x68; // UMediaSource*
		constexpr auto CustomWidget = 0x70; // UTigerWidget*
		constexpr auto LogicComponent = 0x78; // UTigerPassiveComponent*
		constexpr auto PassiveStatChanges = 0x80; // FTigerCharacterStatModification
		constexpr auto PowerIncrease = 0x110; // char
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UTigerAIFleeFromThreatService {
		constexpr auto SearchFleeSpotBox = 0x70; // FBox
		constexpr auto FleePoint = 0x90; // FBlackboardKeySelector
		constexpr auto ClosestThreatPosition = 0xb8; // FBlackboardKeySelector
		constexpr auto CurrentMasqueradeTarget = 0xe0; // FBlackboardKeySelector
		constexpr auto KeepFleeingFromSpecificPlayerRadiusSquared = 0x108; // float
		constexpr auto BoxCenterDistanceFromNPCPosition = 0x10c; // float
		constexpr auto bShowDebugFeatures = 0x110; // bool
		constexpr auto PlayerFleeingFrom = 0x114; // TWeakObjectPtr<ATigerPlayer>
	}

	namespace n_UABP_VMP_NOS_F_HAIR_02_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UTigerAiFindFiringLocation {
		constexpr auto TargetKey = 0x70; // FBlackboardKeySelector
		constexpr auto FiringLocationKey = 0x98; // FBlackboardKeySelector
		constexpr auto FiringLocationIndexKey = 0xc0; // FBlackboardKeySelector
		constexpr auto bCanShootKey = 0xe8; // FBlackboardKeySelector
		constexpr auto ClaimedLocationDuration = 0x110; // float
		constexpr auto bDebugDraw = 0x114; // bool
	}

	namespace n_UTigerStoreEntryWidget {
		constexpr auto RepresentedStoreEntry = 0x280; // FTigerMetaStoreEntry
	}

	namespace n_UAkInitBankAssetData {
		constexpr auto PluginInfos = 0x78; // TArray<FAkPluginInfo>
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UTigerFearValueAsset {
		constexpr auto FearValueThresholds = 0x30; // TMap<ETigerAIMasqueradeState, float>
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_UTigerInteractiveNpcComponent {
		constexpr auto OverheadWidget = 0xb0; // UTigerElysiumNpcNameplateWidget*
		constexpr auto DialogueList = 0xb8; // UTigerNpcDialogueList*
		constexpr auto DelayBetweenInteractions = 0xc0; // float
		constexpr auto DialogueManager = 0xc8; // UTigerDialogueManager*
		constexpr auto NpcName = 0xd0; // FText
		constexpr auto NpcTitle = 0xe8; // FText
		constexpr auto NpcIcon = 0x100; // UTexture2D*
		constexpr auto NpcClan = 0x108; // ETigerClan
		constexpr auto ConnectedInteractionCamera = 0x10c; // TWeakObjectPtr<ACameraActor>
	}

	namespace n_UTigerPresenceSubsystem {
		constexpr auto OnPlayerPresenceChange = 0x30; // FMulticastInlineDelegate
		constexpr auto OnPlayersPresenceChange = 0x40; // FMulticastInlineDelegate
		constexpr auto PresenceService = 0x50; // UTigerPresenceService*
		constexpr auto HeartbeatIntervalInSeconds = 0x58; // int32_t
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UTigerAIPlayerFindCivilianTask {
		constexpr auto bUseHeightenedSensesSearchRadius = 0x98; // bool
		constexpr auto CustomSearchSphereRadius = 0x9c; // float
		constexpr auto bDrawSearchSphere = 0xa0; // bool
		constexpr auto MaxVerticalPositionOffset = 0xa4; // float
		constexpr auto RaycastDistance = 0xa8; // float
		constexpr auto SearchLowResonanceThreshold = 0xac; // int32_t
		constexpr auto SearchLowHealthPercentageThreshold = 0xb0; // float
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UTigerCharmConfig {
		constexpr auto Damage = 0x170; // float
		constexpr auto BondMaxDistance = 0x174; // float
		constexpr auto BackgroundFindTargetInterval = 0x178; // float
		constexpr auto BondPlayerDuration = 0x17c; // float
		constexpr auto BondNPCDuration = 0x180; // float
		constexpr auto CharmedBuff = 0x188; // TArray<UTigerMajestyBuff*>
		constexpr auto BondingBuff = 0x198; // TArray<UTigerBondingBuff*>
		constexpr auto OnHitEffect = 0x1a8; // UTigerCharacterEffect*
		constexpr auto ThornsBuff = 0x1b0; // UTigerBuff*
		constexpr auto bShowDebugInfo = 0x1b8; // bool
		constexpr auto MaxDistance = 0x1bc; // float
		constexpr auto MinDistance = 0x1c0; // float
		constexpr auto PlayerTargetMultiplier = 0x1c4; // float
		constexpr auto AimAxisValueCurve = 0x1c8; // UCurveFloat*
		constexpr auto DistanceFromUseValueCurve = 0x1d0; // UCurveFloat*
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UTigerDashConfig {
		constexpr auto HitBoxExtents = 0x170; // FVector
		constexpr auto HitBoxOffset = 0x17c; // FVector
		constexpr auto DashDistance = 0x188; // float
		constexpr auto DashDuration = 0x18c; // float
		constexpr auto Damage = 0x190; // float
		constexpr auto DashExitVelocity = 0x194; // float
		constexpr auto SurfaceStopThreshold = 0x198; // float
		constexpr auto RecoveryMontage = 0x1a0; // UAnimMontage*
		constexpr auto RecoveryMontageInAir = 0x1a8; // UAnimMontage*
		constexpr auto RecoveryCancelledBlendOut = 0x1b0; // float
		constexpr auto RecoveryCancelledBlendOutInAir = 0x1b4; // float
		constexpr auto DashPSTemplate = 0x1b8; // UParticleSystem*
		constexpr auto AirDashMontage = 0x1c0; // UAnimMontage*
		constexpr auto PlayAirAnimAngleToSurfaceThreshold = 0x1c8; // float
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_UTBP_PingBase_C {
		constexpr auto PingCancelText = 0xf0; // FText
		constexpr auto PingVoiceInterested = 0x108; // UAkAudioEvent*
		constexpr auto PingVoiceNotInterested = 0x110; // UAkAudioEvent*
		constexpr auto PingVoiceCancel = 0x118; // UAkAudioEvent*
		constexpr auto bShouldDisplayCancelNotification = 0x120; // bool
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x310; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x320; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x330; // float
		constexpr auto ChosenOne = 0x3d8; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_ATigerPlayerController {
		constexpr auto OnPersistentPlayerInitialisedEvent = 0x578; // FMulticastInlineDelegate
		constexpr auto OnGhostModeSet = 0x588; // FMulticastInlineDelegate
		constexpr auto OnBeginPlay = 0x598; // FMulticastInlineDelegate
		constexpr auto OnPlayerStateCreated = 0x5a8; // FMulticastInlineDelegate
		constexpr auto OnClientDownedEnemyPlayer = 0x5b8; // FMulticastInlineDelegate
		constexpr auto OnCancelPsoCaching = 0x5c8; // FMulticastInlineDelegate
		constexpr auto LocalAIController = 0x608; // ATigerLocalAIController*
		constexpr auto LocalAIControllerClass = 0x610; // ATigerLocalAIController*
		constexpr auto GameplayBenchmarkController = 0x618; // ATigerLocalAIControllerBase*
		constexpr auto GameplayBenchmarkControllerClass = 0x620; // ATigerLocalAIControllerBase*
		constexpr auto UserInputBindings = 0x640; // UTigerUserInputBinding*
		constexpr auto OnUseGamepadChanged = 0x648; // FMulticastInlineDelegate
		constexpr auto bSilentMusic = 0x658; // bool
		constexpr auto RedGasAkEventID = 0x65c; // int32_t
		constexpr auto CloseToRedGasAkEventID = 0x660; // int32_t
		constexpr auto OnItemPickedUp = 0x668; // FMulticastInlineDelegate
		constexpr auto OnInventoryToggle = 0x678; // FMulticastInlineDelegate
		constexpr auto OnInitialLevelStreamingCompletedDelegate = 0x688; // FMulticastInlineDelegate
		constexpr auto ResurrectComponent = 0x698; // UTigerResurrectComponent*
		constexpr auto ClientSpawner = 0x6a0; // ATigerClientInteractiveSpawner*
		constexpr auto PerformanceStates = 0x6a8; // FTigerPerformanceStates
		constexpr auto SpectatingClass = 0x708; // ASpectatorPawn*
		constexpr auto MapInfoAsset = 0x710; // UTigerMapInfoDataAsset*
		constexpr auto PlayerMapMarkerClass = 0x718; // UUserWidget*
		constexpr auto UserInputSettingsClass = 0x720; // UTigerUserInputBinding*
		constexpr auto RevealedItemMapMarkerWidgetClass = 0x728; // UUserWidget*
		constexpr auto RevealedItemCompassObjectWidgetClass = 0x730; // UUserWidget*
		constexpr auto QuestMapMarkerClass = 0x738; // ATigerWorldMarker*
		constexpr auto ControlRotationSpeedStandingStill = 0x740; // float
		constexpr auto ControlRotationSpeedMovingCurve = 0x748; // UCurveFloat*
		constexpr auto ControlRotationSpeedMoving = 0x750; // float
		constexpr auto MinControlRotationSpeedMoving = 0x754; // float
		constexpr auto InstantControlRotationTimeThreshold = 0x758; // float
		constexpr auto CycleWeaponsHolsterHoldTime = 0x75c; // float
		constexpr auto SprintCancelTimeOnGamepad = 0x760; // float
		constexpr auto SprintGamepadInputLimit = 0x764; // float
		constexpr auto SprintGamepadInputAngle = 0x768; // float
		constexpr auto RandomizedDamageScale = 0x770; // float
		constexpr auto MouseScrollWeaponChangeCooldown = 0x774; // float
		constexpr auto TigerStuckTriggerZ = 0x77c; // float
		constexpr auto ClimbingInputZCutOff = 0x780; // float
		constexpr auto MinimumUpwardClimbAngle = 0x784; // float
		constexpr auto MaximumSidewaysClimbDeviation = 0x788; // float
		constexpr auto ClimbingOverHangZCutOff = 0x78c; // float
		constexpr auto ClimbingHalfAngleInputDifferenceAllowed = 0x790; // float
		constexpr auto bOnlyStartClimbIfLookingAtWall = 0x794; // bool
		constexpr auto TargetDownedAudioEvent = 0x798; // UAkAudioEvent*
		constexpr auto PlayerDownedAudioEvent = 0x7a0; // UAkAudioEvent*
		constexpr auto GuidingAudioEvent = 0x7a8; // UAkAudioEvent*
		constexpr auto GuidingAudioCooldown = 0x7b0; // float
		constexpr auto AimAtEnemyGamepadRotationMultiplierCurve = 0x7b8; // UCurveFloat*
		constexpr auto AimAtEnemyGamepadRotationMultiplierCurveAiming = 0x7c0; // UCurveFloat*
		constexpr auto GamepadCameraYawStrengthCurve = 0x7c8; // UCurveFloat*
		constexpr auto GamepadCameraPitchStrengthCurve = 0x7d0; // UCurveFloat*
		constexpr auto GamepadRangedCameraYawStrengthCurve = 0x7d8; // UCurveFloat*
		constexpr auto GamepadRangedCameraPitchStrengthCurve = 0x7e0; // UCurveFloat*
		constexpr auto GamepadAimingCameraYawStrengthCurve = 0x7e8; // UCurveFloat*
		constexpr auto GamepadAimingCameraPitchStrengthCurve = 0x7f0; // UCurveFloat*
		constexpr auto GamepadCameraYawAccelerationCurve = 0x7f8; // UCurveFloat*
		constexpr auto GamepadCameraPitchAccelerationCurve = 0x800; // UCurveFloat*
		constexpr auto GamepadRangedCameraYawAccelerationCurve = 0x808; // UCurveFloat*
		constexpr auto GamepadRangedCameraPitchAccelerationCurve = 0x810; // UCurveFloat*
		constexpr auto GamepadAimingCameraYawAccelerationCurve = 0x818; // UCurveFloat*
		constexpr auto GamepadAimingCameraPitchAccelerationCurve = 0x820; // UCurveFloat*
		constexpr auto DisciplineWeaponAbilityTriggerWindow = 0x828; // float
		constexpr auto HeightenedSensesPadTriggerwindow = 0x82c; // float
		constexpr auto ConsumableWheelTriggerWindow = 0x830; // float
		constexpr auto DamageTakenForceFeedback = 0x838; // UForceFeedbackEffect*
		constexpr auto DamageTakenForceFeedbackCooldown = 0x840; // float
		constexpr auto DeathForceFeedback = 0x848; // UForceFeedbackEffect*
		constexpr auto DownedForceFeedback = 0x850; // UForceFeedbackEffect*
		constexpr auto SoftLandingForceFeedback = 0x858; // UForceFeedbackEffect*
		constexpr auto HeavyLandingForceFeedback = 0x860; // UForceFeedbackEffect*
		constexpr auto TigerSpectatorPawn = 0x868; // ATigerSpectatorPawn*
		constexpr auto HeavyAttackTriggerTime = 0x870; // float
		constexpr auto HeavyAttackTriggerTimeGamepad = 0x874; // float
		constexpr auto MusicAudioState = 0x878; // ETigerMusicAudioState
		constexpr auto BlindedAudioState = 0x879; // ETigerBlindedAudioState
		constexpr auto IndoorAudioState = 0x87a; // ETigerIndoorAudioState
		constexpr auto MainMenuAudioState = 0x87b; // ETigerMainMenuAudioState
		constexpr auto AmbienceAudioState = 0x87c; // ETigerAmbienceAudioState
		constexpr auto CombatAudioState = 0x87d; // ETigerCombatAudioState
		constexpr auto FeedingAudioState = 0x87e; // ETigerFeedingAudioState
		constexpr auto AssaultBorderMusicDistance = 0x880; // float
		constexpr auto RedGasLastWaveAssaultBorderMusicDistance = 0x884; // float
		constexpr auto RedGasLastStageAssaultBorderMusicDistance = 0x888; // float
		constexpr auto AmbientMusicTimer = 0x88c; // float
		constexpr auto NoAmbientMusicTimer = 0x890; // float
		constexpr auto NoAmbienceMusicTimerInterval = 0x894; // float
		constexpr auto AmbientMusicTimerInterval = 0x898; // float
		constexpr auto PaperDoll = 0x89c; // TWeakObjectPtr<ATigerPaperDoll>
		constexpr auto InteractionControllerComponent = 0x8a8; // UTigerInteractionControllerComponent*
		constexpr auto ClientSeasonalRewardCollection = 0x8b0; // UTigerClientSeasonalRewardCollection*
		constexpr auto ClientChallengesCollection = 0x8b8; // UTigerClientChallengesCollection*
		constexpr auto ThrallComponent = 0x8c0; // UTigerThrallSystem*
		constexpr auto CollectibleComponent = 0x8c8; // UTigerCollectibleSystem*
		constexpr auto QuestComponent = 0x8d0; // UTigerQuestSystem*
		constexpr auto AntiCheatTssComponent = 0x8d8; // UTSSClientComponent*
		constexpr auto OverrideMusicAudioState = 0x8e0; // ETigerMusicAudioState
		constexpr auto ActionBufferClass = 0x8e8; // UTigerActionBuffer*
		constexpr auto ActionBuffer = 0x8f0; // UTigerActionBuffer*
		constexpr auto TigerPlayerPawn = 0x908; // ATigerPlayer*
		constexpr auto TigerBloodVeinPawn = 0x918; // ATigerBloodVeinPawn*
		constexpr auto MapGameData = 0x928; // UTigerMapGameData*
		constexpr auto InWorldIconController = 0x930; // UTigerInWorldIconController*
		constexpr auto PingControllerComponent = 0x938; // UTigerPingControllerComponent*
		constexpr auto ContextualHelpComponent = 0x940; // UTigerContextualHelpComponent*
		constexpr auto EmoteControllerComponent = 0x948; // UTigerEmoteControllerComponent*
		constexpr auto ChatComponent = 0x950; // UTigerChatComponent*
		constexpr auto PlayerMapMarkerProxy = 0x9d8; // UTigerMapMarkerProxy*
		constexpr auto GhostInputComponent = 0x9e8; // UInputComponent*
		constexpr auto SpectateInputComponent = 0x9f0; // UInputComponent*
		constexpr auto HUDInputComponent = 0x9f8; // UInputComponent*
		constexpr auto StreamingGrid = 0xa00; // ATigerWorldCompositionGrid*
		constexpr auto PreviouslyEquippedRangedSlot = 0xa0a; // ETigerWeaponSlot
		constexpr auto MouseSidewaysSprintSafetyAngle = 0xa4c; // float
		constexpr auto PitchSensitivityModifier = 0xa50; // float
		constexpr auto YawSensitivityModifier = 0xa54; // float
		constexpr auto PitchAccelerationDeadZone = 0xa58; // float
		constexpr auto YawAccelerationDeadZone = 0xa5c; // float
		constexpr auto PitchRangedAccelerationDeadZone = 0xa60; // float
		constexpr auto YawRangedAccelerationDeadZone = 0xa64; // float
		constexpr auto bUndoAccelerationInDeadZone = 0xa68; // bool
		constexpr auto NPCCheatCommandsAsset = 0xa70; // TSoftObjectPtr<UTigerNPCCheatCommandsAsset>
		constexpr auto NPCCheatCommands = 0xa98; // UTigerNPCCheatCommandsAsset*
		constexpr auto ItemCheatCommandsAsset = 0xaa0; // TSoftObjectPtr<UTigerItemCheatCommandsAsset>
		constexpr auto ItemCheatCommands = 0xac8; // UTigerItemCheatCommandsAsset*
		constexpr auto NpcCheatSpawner = 0xad0; // ATigerNPCInstantSpawner*
		constexpr auto CurrentWheelWidget = 0xad8; // UTigerWheelWidget*
		constexpr auto ElysiumVendorComponent = 0xae0; // UTigerVendorComponent*
		constexpr auto bPawnRotatesWithCameraWhileIdle = 0xb48; // bool
		constexpr auto bUseTurnInPlace = 0xb49; // bool
		constexpr auto bPrintRightGamepadAxis = 0xb4a; // bool
		constexpr auto KilledBloodHuntedPlayerText = 0xb68; // FText
		constexpr auto TimeUntilKeyIsHeld = 0xb8c; // float
		constexpr auto DiscoveredSHPBMarkers = 0xba8; // TArray<TWeakObjectPtr<ATigerSHPBMarker>>
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UTigerDisciplineConfigBase {
		constexpr auto UIIcon = 0x30; // UTexture2D*
		constexpr auto DisciplineName = 0x38; // FText
		constexpr auto DisciplineDescription = 0x50; // FText
		constexpr auto bIsClanAbility = 0x68; // bool
		constexpr auto bEnablesGroupMemberHealthBars = 0x69; // bool
		constexpr auto ActivationActionReported = 0x6a; // ETigerAIPlayerAction
		constexpr auto DisciplineClass = 0x70; // UTigerDisciplineBase*
		constexpr auto AllowedActions = 0x78; // ETigerActionAllowed [0xe]
		constexpr auto ActionsThatShouldCancelDiscipline = 0xb0; // uint16_t
		constexpr auto bShouldAutomaticallyUseCameraPreset = 0xb2; // bool
		constexpr auto PreparationCameraPreset = 0xb8; // UTigerCameraPreset*
		constexpr auto CameraPreset = 0xc0; // UTigerCameraPreset*
		constexpr auto CameraPresetIndoor = 0xc8; // UTigerCameraPreset*
		constexpr auto Crosshair = 0xd0; // UTigerWeaponCrosshairWidget*
		constexpr auto PreviewVideo = 0xd8; // UMediaSource*
		constexpr auto PersistentTelemetryID = 0xe0; // uint64_t
	}

	namespace n_UTigerLevelComponent {
		constexpr auto OnLevelChangedEvent = 0xb0; // FMulticastInlineDelegate
		constexpr auto LevelCap = 0xc0; // char
		constexpr auto CurrentLevel = 0xc1; // char
		constexpr auto CurrentExperience = 0xc4; // int32_t
		constexpr auto PlayerEventMappings = 0xc8; // TMap<ETigerPlayerEvent, UTigerExperienceEvent*>
		constexpr auto ExperienceCurve = 0x118; // UCurveFloat*
		constexpr auto HealthMultiplierCurve = 0x120; // UCurveFloat*
		constexpr auto DamageMultiplierCurve = 0x128; // UCurveFloat*
		constexpr auto CooldownMultiplierCurve = 0x130; // UCurveFloat*
		constexpr auto bShowAllLevelPopupNotifications = 0x138; // bool
		constexpr auto OnExperienceAdded = 0x140; // FMulticastInlineDelegate
		constexpr auto Player = 0x150; // ATigerPlayer*
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xb4; // FVector
		constexpr auto NoiseLifetime = 0xc0; // float
		constexpr auto LastRemoteNoiseVolume = 0xc4; // float
		constexpr auto LastRemoteNoiseTime = 0xc8; // float
		constexpr auto LastLocalNoiseVolume = 0xcc; // float
		constexpr auto LastLocalNoiseTime = 0xd0; // float
	}

	namespace n_UTigerTelemetryDataDefinitions {
		constexpr auto ArchetypeDefinitions = 0x28; // ETigerPowerKitType
		constexpr auto ClanDefinitions = 0x29; // ETigerClan
		constexpr auto DamageSourceIdentifiers = 0x2a; // ETigerTelemetryDamageCauser
		constexpr auto ExperienceSources = 0x2b; // ETigerTelemetryExpSource
		constexpr auto DamageTypes = 0x2c; // ETigerTelemetryDamageType
		constexpr auto Disciplines = 0x2d; // ETigerDisciplinesEnum
		constexpr auto MatchmakingCancelReasons = 0x2e; // ETigerTelemetryMatchmackingCancelReason
		constexpr auto CauseOfPingRemoval = 0x2f; // ETigerTelemetryCauseOfPingRemoval
		constexpr auto DeviceTypes = 0x30; // ETigerTelemetryDeviceType
		constexpr auto PlatformTypes = 0x31; // ETigerTelemetryPlatformType
		constexpr auto MapIds = 0x32; // ETigerTelemetryMapIds
		constexpr auto RankedModes = 0x33; // ETigerTelemetryRankedMode
		constexpr auto GameplayModes = 0x34; // ETigerTelemetryGameplayMode
		constexpr auto ChallengeTypes = 0x35; // ETigerTelemetryChallengeType
		constexpr auto TelemetrySourceID = 0x36; // ETigerTelemetryItemSourceID
		constexpr auto BattlepassTypes = 0x37; // ETigerTelemetryBattlepassType
		constexpr auto HardCurrencyReceiveMethod = 0x38; // ETigerTelemetryHardCurrencyRecieveMethod
		constexpr auto NetworkTypes = 0x39; // ETigerTelemetryNetworkType
		constexpr auto NetworkIPType = 0x3a; // ETigerTelemetryNetworkIpType
		constexpr auto RebirthType = 0x3b; // ETigerTelemetryAceRebirthType
		constexpr auto MetaItemSourceType = 0x3c; // ETigerTelemetryMetaItemSourceType
		constexpr auto DeathType = 0x40; // ETigerTelemetryAceDeathType
	}

	namespace n_ATigerGameState {
		constexpr auto OnWeatherScenarioChangedEvent = 0x278; // FMulticastInlineDelegate
		constexpr auto bIsFakeMatchmakingDelayActive = 0x288; // char [0x2]
		constexpr auto MatchID = 0x2a8; // FGuid
		constexpr auto HolyIncense = 0x2b8; // TWeakObjectPtr<ATigerHolyIncense>
		constexpr auto SynchronizedTime = 0x2c4; // float
		constexpr auto WeatherScenarioClass = 0x2d8; // UTigerWeatherScenarioData*
		constexpr auto WeatherScenario = 0x2e0; // UTigerWeatherScenarioData*
		constexpr auto ServerId = 0x308; // FString
		constexpr auto CurrentScalabilityTarget = 0x318; // ETigerServerScalabilityTarget
	}

	namespace n_UTigerAiJudgeSmComponent {
		constexpr auto CurrentlyPerceivedPlayersBySight = 0xb0; // TArray<ATigerPlayer*>
		constexpr auto BloodhuntedPlayersWithinCombatRadius = 0xc0; // TArray<ATigerPlayer*>
		constexpr auto StartingState = 0xd0; // UTigerJudgeBaseState*
		constexpr auto DownedState = 0xd8; // UTigerJudgeBaseState*
		constexpr auto FeedingState = 0xe0; // UTigerJudgeBaseState*
		constexpr auto ActiveState = 0xe8; // UTigerJudgeBaseState*
		constexpr auto InstancedStates = 0xf0; // TMap<UTigerJudgeBaseState*, UTigerJudgeBaseState*>
		constexpr auto CombatRadiusSq = 0x140; // float
		constexpr auto bIsSeeingAnyBloodhuntedPlayer = 0x144; // bool
	}

	namespace n_UAkAudioEvent {
		constexpr auto LocalizedPlatformAssetDataMap = 0x50; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xa0; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb0; // UAkAssetPlatformData*
		constexpr auto MaxAttenuationRadius = 0xb8; // float
		constexpr auto IsInfinite = 0xbc; // bool
		constexpr auto MinimumDuration = 0xc0; // float
		constexpr auto MaximumDuration = 0xc4; // float
	}

	namespace n_UShMidasPaymentSettings {
		constexpr auto IdcInfo = 0x38; // FString
		constexpr auto OfferId = 0x48; // FString
		constexpr auto ZoneId = 0x58; // FString
		constexpr auto GoodsZoneId = 0x68; // FString
		constexpr auto PaymentChannel = 0x78; // FString
		constexpr auto ProvideType = 0x88; // FString
		constexpr auto MidasLogEnabled = 0x98; // bool
	}

	namespace n_UABP_VMP_TOR_F_HAIR_03_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_16 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3ec0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4300; // FAnimNode_AnimDynamics
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UAkLinuxInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x228; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x248; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x250; // UPrimitiveComponent*
		constexpr auto RotateX = 0x258; // UPrimitiveComponent*
		constexpr auto RotateY = 0x260; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x268; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x270; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x280; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x288; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x298; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x2a0; // UPrimitiveComponent*
	}

	namespace n_UAkGeometryComponent {
		constexpr auto MeshType = 0x210; // AkMeshType
		constexpr auto LOD = 0x214; // int32_t
		constexpr auto WeldingThreshold = 0x218; // float
		constexpr auto StaticMeshSurfaceOverride = 0x220; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x270; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x288; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x288; // char : 1
		constexpr auto AssociatedRoom = 0x290; // AActor*
		constexpr auto GeometryData = 0x2a8; // FAkGeometryData
		constexpr auto SurfaceAreas = 0x2f8; // TMap<int32_t, float>
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto ScreenSizeCullingDefaultSize = 0x58; // FPerPlatformFloat
		constexpr auto bTextureStreaming = 0x5c; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x5c; // char : 1
		constexpr auto bVirtualTextures = 0x5c; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x5c; // char : 1
		constexpr auto VirtualTextureTileSize = 0x60; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x64; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x68; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x6c; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x6c; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x6c; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x70; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x74; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x74; // char : 1
		constexpr auto bForwardShading = 0x74; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x74; // char : 1
		constexpr auto bAllowStaticLighting = 0x74; // char : 1
		constexpr auto bAllowPrecomputedShadows = 0x74; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x74; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x74; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x75; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x75; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x75; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x78; // float
		constexpr auto bSeparateTranslucency = 0x7c; // char : 1
		constexpr auto TranslucentSortPolicy = 0x80; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x84; // FVector
		constexpr auto CustomDepthStencil = 0x90; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x94; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x98; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x9c; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x9c; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x9c; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x9c; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0xa0; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0xa4; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa8; // char : 1
		constexpr auto bUsePreExposure = 0xa8; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa8; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa8; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa8; // char : 1
		constexpr auto bTemporalUpsampling = 0xa8; // char : 1
		constexpr auto bSSGI = 0xa8; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xac; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xad; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xae; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xb0; // char : 1
		constexpr auto bStencilForLODDither = 0xb0; // char : 1
		constexpr auto EarlyZPass = 0xb4; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb8; // char : 1
		constexpr auto bDBuffer = 0xb8; // char : 1
		constexpr auto ClearSceneMethod = 0xbc; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xc0; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xc0; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xc0; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xc0; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xc4; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc8; // int32_t
		constexpr auto bGlobalClipPlane = 0xcc; // char : 1
		constexpr auto GBufferFormat = 0xd0; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xd4; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xd4; // char : 1
		constexpr auto bMultiView = 0xd4; // char : 1
		constexpr auto bMobilePostProcessing = 0xd4; // char : 1
		constexpr auto bMobileMultiView = 0xd4; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xd4; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xd4; // char : 1
		constexpr auto bODSCapture = 0xd4; // char : 1
		constexpr auto bMeshStreaming = 0xd5; // char : 1
		constexpr auto WireframeCullThreshold = 0xd8; // float
		constexpr auto bEnableRayTracing = 0xdc; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xdc; // char : 1
		constexpr auto bSupportStationarySkylight = 0xdc; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xdc; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xdc; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xdc; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xdc; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xdc; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xdd; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xe0; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xe4; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe8; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe8; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe8; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xec; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xf0; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xf0; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xf0; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xf0; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xf0; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xf0; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xf0; // char : 1
		constexpr auto bLPV = 0xf0; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xf1; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xf1; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xf4; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf8; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf9; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xfa; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0x100; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x118; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x130; // FSoftObjectPath
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UTigerCustomBlendSpaceListGender {
		constexpr auto BlendSpaces = 0x28; // UBlendSpace* [0x2]
	}

	namespace n_UTigerWidget {
		constexpr auto TigerTooltipWidget = 0x268; // UTigerTooltipWidget*
		constexpr auto TooltipActions = 0x270; // TArray<FTigerTooltipAction>
	}

	namespace n_UTigerDsBackendAgent {
		constexpr auto DsAgentType = 0x28; // FString
		constexpr auto HeartbeatIntervalSeconds = 0x38; // float
	}

	namespace n_UTigerGameFlowStateBoot {
		constexpr auto OnLaunchTutorial = 0x40; // FMulticastInlineDelegate
		constexpr auto OnEnterElysiumFirstTime = 0x50; // FMulticastInlineDelegate
		constexpr auto OnEnterElysium = 0x60; // FMulticastInlineDelegate
		constexpr auto OnPreloadingDone = 0x70; // FMulticastInlineDelegate
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xb0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xb8; // UMediaPlayer*
	}

	namespace n_UTigerRevealItemConsumableAsset {
		constexpr auto MaxDistanceToItem = 0x170; // float
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_ATigerMusicVolume {
		constexpr auto MusicAsset = 0x260; // UTigerMusicAsset*
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2b8; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c0; // FDelegate
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6c0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6c4; // bool
		constexpr auto RateAdjustmentFactor = 0x6c8; // float
		constexpr auto RateAdjustmentRange = 0x6cc; // FFloatRange
		constexpr auto MediaPlayer = 0x6e0; // UMediaPlayer*
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x260; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x270; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x280; // TArray<FName>
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UTigerBloodResonanceComponent {
		constexpr auto OnBloodResonanceBlockedByCap = 0xb0; // FMulticastInlineDelegate
		constexpr auto BloodCapIncreasePerEvent = 0xc0; // float [0x1d]
		constexpr auto BloodResonanceBuffs = 0x138; // FTigerBloodResonanceBuffs [0x4]
		constexpr auto StartingBloodCap = 0x178; // int32_t
		constexpr auto BloodTypeCap = 0x17c; // int32_t
		constexpr auto MaxBloodCap = 0x180; // int32_t
		constexpr auto CurrentBloodCap = 0x184; // int32_t
		constexpr auto OnBloodCapChanged = 0x188; // FMulticastInlineDelegate
		constexpr auto OnBloodResonanceAdded = 0x198; // FMulticastInlineDelegate
		constexpr auto CurrentBloodResonance = 0x1a8; // TArray<ETigerBloodType>
		constexpr auto BloodResonanceLevels = 0x1b8; // int32_t [0x4]
		constexpr auto OldBloodResonanceLevels = 0x1c8; // int32_t [0x4]
		constexpr auto CurrentBloodSlotsIncrease = 0x1e8; // float
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_ATigerAIController {
		constexpr auto LureTargetKeyName = 0x3b0; // FName
		constexpr auto CurrentMasqueradeTargetKeyName = 0x3b8; // FName
		constexpr auto TargetPositionKeyName = 0x3c0; // FName
		constexpr auto MasqueradeBreachTargetKey = 0x3c8; // FName
		constexpr auto BehaviorIsActiveKeyName = 0x3d0; // FName
		constexpr auto SpawnPointKeyName = 0x3d8; // FName
		constexpr auto ActiveCAPKeyName = 0x3e0; // FName
		constexpr auto LureBehaviorTree = 0x3e8; // UBehaviorTree*
		constexpr auto BloodDrainedBehaviorTree = 0x3f0; // UBehaviorTree*
		constexpr auto EmptyBehaviorTree = 0x3f8; // UBehaviorTree*
		constexpr auto FearValueAsset = 0x400; // UTigerFearValueAsset*
		constexpr auto OutOfCombatHealthRegenerationDelay = 0x408; // float
		constexpr auto OutOfCombatHealthRegenerationTickInterval = 0x40c; // float
		constexpr auto OutOfCombatTickHealthPercentage = 0x410; // float
		constexpr auto TimeWhenEnteredBloodDrainedState = 0x414; // float
		constexpr auto CheckForPlayerWeaponsInterval = 0x418; // float
		constexpr auto CheckForPlayerWeaponsDeviation = 0x41c; // float
		constexpr auto BaseThreatRadiusForEquippedRanged = 0x420; // float
		constexpr auto BaseThreatRadiusForEquippedMelee = 0x424; // float
		constexpr auto FearValue = 0x428; // float
		constexpr auto MaxFearValue = 0x42c; // float
		constexpr auto MinCrouchDistanceFromPlayer = 0x430; // float
		constexpr auto ChanceToFleeWhenEnteringThreatenedState = 0x434; // float
		constexpr auto MovementRestrictionBoundsData = 0x468; // UTigerNpcMovementRestrictionBoundsData*
		constexpr auto TargetMovementRestrictionBoundsData = 0x470; // UTigerNpcMovementRestrictionBoundsData*
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UTigerPreMatchPaperDollComponent {
		constexpr auto PaperDollByTagNames = 0xb0; // TMap<FName, ATigerPaperDoll*>
		constexpr auto PaperDollHighlightComponents = 0x100; // TMap<ATigerPaperDoll*, FTigerPaperDollHighlightComponents>
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UABP_VMP_NOS_F_HAIR_04_TEMP_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xb50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xb70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0xb90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0xfd0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1410; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1850; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x1c90; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3a80; // FAnimNode_AnimDynamics
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x228; // APlayerController*
		constexpr auto bLostFocusPaused = 0x230; // char : 1
		constexpr auto bShowHUD = 0x230; // char : 1
		constexpr auto bShowDebugInfo = 0x230; // char : 1
		constexpr auto CurrentTargetIndex = 0x234; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x238; // char : 1
		constexpr auto bShowOverlays = 0x238; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x238; // char : 1
		constexpr auto PostRenderedActors = 0x240; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x258; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x268; // TArray<FName>
		constexpr auto Canvas = 0x278; // UCanvas*
		constexpr auto DebugCanvas = 0x280; // UCanvas*
		constexpr auto DebugTextList = 0x288; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x298; // AActor*
		constexpr auto ShowDebugTargetActor = 0x2a0; // AActor*
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_UTigerConsumablesComponent {
		constexpr auto OnUseConsumableFinished = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnUseConsumableStarted = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnUseConsumableCancelled = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnUseConsumablePrevented = 0xe0; // FMulticastInlineDelegate
		constexpr auto FallbackUseMontage = 0xf0; // UAnimMontage*
		constexpr auto QuickUseConsumable = 0xf8; // UTigerConsumableAsset*
		constexpr auto MovableBuffClass = 0x100; // UTigerBuff*
		constexpr auto CancelConsumableUseOnTraversalAction = 0x108; // int32_t
		constexpr auto Player = 0x110; // ATigerPlayer*
		constexpr auto CurrentMontage = 0x118; // UAnimMontage*
		constexpr auto CurrentConsumable = 0x120; // UTigerConsumableAsset*
		constexpr auto QuickConsumables = 0x128; // UTigerConsumableAsset* [0x6]
	}

	namespace n_UTigerStyledRichTextBlock {
		constexpr auto TextStyleRow = 0x678; // FDataTableRowHandle
	}

	namespace n_ATigerSupplyDrop {
		constexpr auto BoxRoot = 0x2f0; // UBoxComponent*
		constexpr auto FinalTransform = 0x300; // FTransform
		constexpr auto LootTable = 0x330; // UTigerItemLootTable*
		constexpr auto MinNumItems = 0x338; // int32_t
		constexpr auto MaxNumItems = 0x33c; // int32_t
		constexpr auto MaxFallSpeed = 0x340; // float
	}

	namespace n_UTBP_UI_Divider_Vertical_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Decoration = 0x268; // UImage*
		constexpr auto Left_Line = 0x270; // UImage*
		constexpr auto LeftArrow_2 = 0x278; // UImage*
		constexpr auto Line_2 = 0x280; // UImage*
		constexpr auto Line_Overlay = 0x288; // UOverlay*
		constexpr auto LineStyleIndex = 0x290; // UWidgetSwitcher*
		constexpr auto RightArrow_2 = 0x298; // UImage*
		constexpr auto RightLine = 0x2a0; // UImage*
		constexpr auto SizeBox_Override = 0x2a8; // USizeBox*
		constexpr auto ArrowSize = 0x2b0; // float
		constexpr auto EnableMiddleDecoration = 0x2b4; // bool
		constexpr auto ArrowTexture = 0x2b8; // UTexture2D*
		constexpr auto LineThickness = 0x2c0; // float
	}

	namespace n_UTigerAIUpdateWaypoint {
		constexpr auto Index = 0x70; // FBlackboardKeySelector
		constexpr auto Waypoint = 0x98; // FBlackboardKeySelector
		constexpr auto bWaypointDirectionIsForward = 0xc0; // FBlackboardKeySelector
		constexpr auto Distance = 0xe8; // float
	}

	namespace n_UTigerMasqueradeConsequenceSyncInstance {
		constexpr auto bShouldBeActiveForAffectedPlayer = 0x28; // bool
		constexpr auto AffectedPlayerState = 0x30; // ATigerPlayerState*
		constexpr auto LocalPlayerController = 0x38; // ATigerPlayerController*
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x270; // FPostProcessSettings
		constexpr auto Priority = 0x7c0; // float
		constexpr auto BlendRadius = 0x7c4; // float
		constexpr auto BlendWeight = 0x7c8; // float
		constexpr auto bEnabled = 0x7cc; // char : 1
		constexpr auto bUnbound = 0x7cc; // char : 1
	}

	namespace n_UTigerCharacterCustomizablePreviewThumbnailUI {
		constexpr auto ThumbnailActorType = 0x280; // ATigerThumbnailActor*
		constexpr auto bIsRealtime = 0x288; // bool
		constexpr auto PostRenderMaterial = 0x290; // UMaterialInterface*
		constexpr auto ThumbnailActor = 0x2d8; // ATigerThumbnailActor*
		constexpr auto FOV = 0x2e0; // float
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x230; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x238; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2b8; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2b8; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2b8; // char : 1
		constexpr auto bCanBeMainNavData = 0x2b8; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2b8; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2b8; // char : 1
		constexpr auto RuntimeGeneration = 0x2bc; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2c0; // float
		constexpr auto DataVersion = 0x2c4; // uint32_t
		constexpr auto SupportedAreas = 0x3d0; // TArray<FSupportedAreaData>
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTigerVoSubsystem {
		constexpr auto AudioEvent = 0x30; // UAkAudioEvent*
		constexpr auto VoEvents = 0xd8; // TArray<FTigerVoEvent>
	}

	namespace n_ATigerWorldCompositionGrid {
		constexpr auto OnCellStartedLoadingEvent = 0x228; // FMulticastInlineDelegate
		constexpr auto OnCellFinishedLoadingEvent = 0x238; // FMulticastInlineDelegate
		constexpr auto OnCellStartedUnloadingEvent = 0x248; // FMulticastInlineDelegate
		constexpr auto OnCellFinishedUnloadingEvent = 0x258; // FMulticastInlineDelegate
		constexpr auto OnPrespawnStreamingFinishedEvent = 0x268; // FMulticastInlineDelegate
		constexpr auto Layout = 0x278; // ETigerWorldCompositionGridLayout
		constexpr auto GridExtent = 0x27c; // FVector
		constexpr auto LevelDepth = 0x288; // int32_t
		constexpr auto CellTriggerSizeBias = 0x28c; // float
		constexpr auto BlackListedLevels = 0x290; // TArray<TSoftObjectPtr<UWorld>>
		constexpr auto AdditionalLevels = 0x2a0; // TArray<TSoftObjectPtr<UWorld>>
		constexpr auto AlwaysLoadedLevels = 0x2b0; // TArray<TSoftObjectPtr<UWorld>>
		constexpr auto RootCellComponent = 0x2c0; // UTigerWorldCompositionCellComponent*
		constexpr auto LoadingCells = 0x2c8; // TArray<UTigerWorldCompositionCellComponent*>
		constexpr auto LoadedCells = 0x2d8; // TArray<UTigerWorldCompositionCellComponent*>
		constexpr auto UnloadingCells = 0x2e8; // TArray<UTigerWorldCompositionCellComponent*>
		constexpr auto RecentlyLoadedCells = 0x2f8; // TArray<FTigerRecentlyStreamedCellEntries>
		constexpr auto RecentlyUnloadedCells = 0x308; // TArray<FTigerRecentlyStreamedCellEntries>
		constexpr auto StreamingPlayers = 0x318; // TArray<FTigerStreamingPlayer>
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTBP_UI_MatchMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto LeaveContainer = 0x298; // UVerticalBox*
		constexpr auto LeaveLeaveButton = 0x2a0; // UTBP_UI_MenuButton_C*
		constexpr auto LeaveReturnButton = 0x2a8; // UTBP_UI_MenuButton_C*
		constexpr auto LeaveSessionButton = 0x2b0; // UTBP_UI_MenuButton_C*
		constexpr auto LeaveTutorialButton = 0x2b8; // UTBP_UI_MenuButton_C*
		constexpr auto LeaveTutorialContainer = 0x2c0; // UVerticalBox*
		constexpr auto LeaveTutorialLeaveButton = 0x2c8; // UTBP_UI_MenuButton_C*
		constexpr auto LeaveTutorialReturnButton = 0x2d0; // UTBP_UI_MenuButton_C*
		constexpr auto MenuContainer = 0x2d8; // UVerticalBox*
		constexpr auto QuitContainer = 0x2e0; // UVerticalBox*
		constexpr auto QuitGameButton = 0x2e8; // UTBP_UI_MenuButton_C*
		constexpr auto QuitQuitButton = 0x2f0; // UTBP_UI_MenuButton_C*
		constexpr auto QuitReturnButton = 0x2f8; // UTBP_UI_MenuButton_C*
		constexpr auto ReturnButton = 0x300; // UTBP_UI_MenuButton_C*
		constexpr auto SettingsButton = 0x308; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_Popup_Base = 0x310; // UTBP_UI_Popup_Base_C*
		constexpr auto TigerStyledRichTextBlock = 0x318; // UTigerStyledRichTextBlock*
		constexpr auto TigerStyledRichTextBlock_2 = 0x320; // UTigerStyledRichTextBlock*
		constexpr auto TigerStyledRichTextBlock_154 = 0x328; // UTigerStyledRichTextBlock*
		constexpr auto WidgetSwitcher_1 = 0x330; // UWidgetSwitcher*
		constexpr auto ConfirmLeave = 0x338; // bool
		constexpr auto ConfirmQuit = 0x339; // bool
		constexpr auto WaitCount = 0x33c; // int32_t
		constexpr auto bIsOpen = 0x340; // bool
		constexpr auto bLeaveParty = 0x341; // bool
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UTigerEarthshockConfig {
		constexpr auto EffectRadiusText = 0x160; // FText
		constexpr auto EffectRadiusSuffix = 0x178; // FText
		constexpr auto SurfaceAngleThreshold = 0x190; // float
		constexpr auto KnockupInitialVelocity = 0x194; // float
		constexpr auto HitboxConeHalfAngleInDegrees = 0x198; // float
		constexpr auto TerrainBlockTraceHeightGrace = 0x19c; // float
		constexpr auto ConeDamageRadius = 0x1a0; // float
		constexpr auto InnerHitSphereRadius = 0x1a4; // float
		constexpr auto ConeForwardOffset = 0x1a8; // float
		constexpr auto SphereTraceRadius = 0x1ac; // float
		constexpr auto MaxRangeAngleDeviationThreshold = 0x1b0; // float
		constexpr auto MinRangeAngleDeviationThreshold = 0x1b4; // float
		constexpr auto MinimumRange = 0x1b8; // float
		constexpr auto MaximumRange = 0x1bc; // float
		constexpr auto MaximumHeight = 0x1c0; // float
		constexpr auto DownTraceLength = 0x1c4; // float
		constexpr auto InitialJumpApexHeight = 0x1c8; // float
		constexpr auto bUseSurfaceProjectedForward = 0x1cc; // bool
		constexpr auto AirAttackSpeed = 0x1d0; // float
		constexpr auto MaxTargetEffectDistanceUp = 0x1d4; // float
		constexpr auto MaxTargetEffectDistanceDown = 0x1d8; // float
		constexpr auto StunTime = 0x1dc; // float
		constexpr auto TravelDistanceDamageMultiplierCurve = 0x1e0; // UCurveFloat*
		constexpr auto Damage = 0x1e8; // float
		constexpr auto WallAngleLandingAnimationThreshold = 0x1ec; // float
		constexpr auto StartLandingAnimationOffsetGround = 0x1f0; // float
		constexpr auto StartLandingAnimationOffsetWall = 0x1f4; // float
		constexpr auto AirAttackAnimationJump = 0x1f8; // UAnimMontage*
		constexpr auto AirAttackAnimationMidAir = 0x200; // UAnimMontage*
		constexpr auto AirAttackAnimationLandGround = 0x208; // UAnimMontage*
		constexpr auto AirAttackAnimationLandWall = 0x210; // UAnimMontage*
		constexpr auto TakeOffAudioEvent = 0x218; // UAkAudioEvent*
		constexpr auto LaunchAudioEvent = 0x220; // UAkAudioEvent*
		constexpr auto HitGroundSound = 0x228; // UAkAudioEvent*
		constexpr auto ImpactWarningSound = 0x230; // UAkAudioEvent*
		constexpr auto CameraShakeBoundaryHeight = 0x238; // float
		constexpr auto CameraLowEffectShake = 0x240; // UMatineeCameraShake*
		constexpr auto CameraHighEffectShake = 0x248; // UMatineeCameraShake*
		constexpr auto CameraAirEffectShake = 0x250; // UMatineeCameraShake*
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UAkInitBank {
		constexpr auto AvailableAudioCultures = 0x50; // TArray<FString>
		constexpr auto DefaultLanguage = 0x60; // FString
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_UTigerDisciplineSwiftStrike {
		constexpr auto Config = 0x78; // UTigerSwiftStrikeConfig*
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UTigerSaveGame {
		constexpr auto LastUsedCharacterId = 0x28; // FTigerPersistentCharacterID
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xb0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xc8; // UActorSequence*
		constexpr auto SequencePlayer = 0xd0; // UActorSequencePlayer*
	}

	namespace n_UTigerUiNewNotificationHandler {
		constexpr auto OnNewItemStatus = 0x30; // FMulticastInlineDelegate
		constexpr auto NodeMap = 0x40; // TMap<ETigerNewNotificationMenuOptions, UTigerUiNewNotificationNode*>
	}

	namespace n_UTigerGuardBreakConfig {
		constexpr auto DashDistance = 0x160; // float
		constexpr auto StartupTime = 0x164; // float
		constexpr auto DashTime = 0x168; // float
		constexpr auto StrikeDelay = 0x16c; // float
		constexpr auto StrikeDuration = 0x170; // float
		constexpr auto OnHitDamage = 0x174; // float
		constexpr auto BlockedOnHitDamage = 0x178; // float
		constexpr auto OnHitDebuff = 0x180; // UTigerBuff*
		constexpr auto HitBoxSize = 0x188; // FVector
		constexpr auto DrawDebugInfo = 0x194; // bool
	}

	namespace n_UTigerPromotionalUI {
		constexpr auto bIsPreviewWidget = 0x2a0; // bool
		constexpr auto ZValue = 0x2a4; // int32_t
		constexpr auto FirstTimeWelcomeTexturePath = 0x2a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto FirstTimeWelcomeTitleText = 0x2d0; // FText
		constexpr auto FirstTimeWelcomeDescriptionText = 0x2e8; // FText
	}

	namespace n_UTigerCustomMontageListGender {
		constexpr auto Montages = 0x28; // UAnimMontage* [0x2]
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTigerCharacterEyeColorCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UTigerInventoryComponent {
		constexpr auto MaxItemsPerCategory = 0xb0; // int32_t
		constexpr auto AmmoStackDistance = 0xb4; // int32_t
		constexpr auto MaxConsumables = 0xb8; // int32_t
		constexpr auto DropItemLaunchSpeed = 0xbc; // FSharkRandomDeviation
		constexpr auto SlotColumnCount = 0xc4; // char
		constexpr auto Player = 0x108; // ATigerPlayer*
		constexpr auto UnarmedItemAsset = 0x110; // UTigerItemAsset*
		constexpr auto Weapons = 0x118; // FTigerInventoryWeapon [0x4]
		constexpr auto Items = 0x138; // FTigerItemData [0xc]
		constexpr auto AmmoPickupItems = 0x1f8; // TArray<UTigerAmmoAsset*>
		constexpr auto Slots = 0x208; // TArray<FTigerInventorySlotContent>
		constexpr auto Artifact = 0x2b8; // FTigerItemData
	}

	namespace n_UTBP_UI_TransitionMenuButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Deselected = 0x268; // UWidgetAnimation*
		constexpr auto Pressed = 0x270; // UWidgetAnimation*
		constexpr auto Hover = 0x278; // UWidgetAnimation*
		constexpr auto FadeIn = 0x280; // UWidgetAnimation*
		constexpr auto BG_Solid = 0x288; // UImage*
		constexpr auto Border_Outline = 0x290; // UBorder*
		constexpr auto Button = 0x298; // UButton*
		constexpr auto ButtonSelectionBorder = 0x2a0; // UTBP_UI_Box_C*
		constexpr auto CloudWidget = 0x2a8; // UImage*
		constexpr auto ContentOverride = 0x2b0; // UNamedSlot*
		constexpr auto FadedBgWidget = 0x2b8; // UImage*
		constexpr auto FlashOverlay = 0x2c0; // UImage*
		constexpr auto InnerTransitionWidget = 0x2c8; // UTBP_UI_TransitionWidget_C*
		constexpr auto OnClicked = 0x2d0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x2e0; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x2f0; // FMulticastInlineDelegate
		constexpr auto AnimationDelay = 0x300; // float
		constexpr auto BorderOpacityTarget = 0x304; // float
		constexpr auto BorderOpacity = 0x308; // float
		constexpr auto BorderOpacitySpeed = 0x30c; // float
		constexpr auto bBoldBorder = 0x310; // bool
		constexpr auto LastPressedPlayMode = 0x311; // EUMGSequencePlayMode
		constexpr auto IsSelectable = 0x312; // bool
		constexpr auto BorderMaterial = 0x318; // UMaterialInstanceDynamic*
		constexpr auto bShowHoverBorder = 0x320; // bool
		constexpr auto BackgroundColor = 0x324; // FLinearColor
		constexpr auto UnhoveredBorderColor = 0x334; // FLinearColor
		constexpr auto HoveredBorderColor = 0x344; // FLinearColor
		constexpr auto bEnableClouds = 0x354; // bool
		constexpr auto ContentFadeInDelay = 0x358; // float
		constexpr auto bIsSelected = 0x35c; // bool
		constexpr auto bIsWaitingForFadeIn = 0x35d; // bool
		constexpr auto CloudTintColor = 0x360; // FSlateColor
	}

	namespace n_ATBP_QuestMarker_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x228; // UTextRenderComponent*
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection {
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UTigerPlayerMasqueradeComponent {
		constexpr auto OnBloodHuntStateChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnBloodHuntStateUpdated = 0xc0; // FMulticastInlineDelegate
		constexpr auto PossibleMasqueradeConsequences = 0xd0; // TArray<UTigerMasqueradeConsequence*>
		constexpr auto SyncedMasqueradeConsequenceInstances = 0xe0; // TArray<UTigerMasqueradeConsequenceSyncInstance*>
		constexpr auto OnMasqueradeConsequenceInstancedAdded = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnMasqueradeConsequenceInstancedRemoved = 0x100; // FMulticastInlineDelegate
		constexpr auto ConsequenceBroadcastSlotCount = 0x110; // uint32_t
		constexpr auto ActiveConsequences = 0x118; // TArray<UTigerMasqueradeConsequence*>
		constexpr auto ReplicatedConsequences = 0x128; // TArray<FTigerConsequenceData>
	}

	namespace n_UTBP_AnimMetaData_WeaponIK_C {
		constexpr auto LeftHandIK_Enum = 0x28; // ENUM_WeaponIKOverride
		constexpr auto RightHandIK_Enum = 0x29; // ENUM_WeaponIKOverride
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_UTBP_UI_Image_C {
		constexpr auto WrappedImage = 0x280; // UImage*
	}

	namespace n_UTigerDisciplineProjectionDash {
		constexpr auto DashStartLocation = 0xf0; // FVector
		constexpr auto DashEnterLocation = 0xfc; // FVector
		constexpr auto DashExitLocation = 0x108; // FVector
		constexpr auto DashEndLocation = 0x114; // FVector
		constexpr auto Config = 0x120; // UTigerProjectionDashConfig*
		constexpr auto SpawnedProjection = 0x128; // ATigerProjectionDashProjectile*
		constexpr auto TargetIndicator = 0x148; // AActor*
	}

	namespace n_UTigerBuffMeleeChargeInstance {
		constexpr auto MeleeChargeBuff = 0x88; // UTigerBuffMeleeCharge*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UAkWwiseTree {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UTigerAICommandContextualAction {
		constexpr auto ContextualAnimations = 0x40; // TArray<FTigerContextualAnimationWrapper>
		constexpr auto WaitTimeBefore = 0x50; // float
		constexpr auto WaitTimeBeforeRandomDeviation = 0x54; // float
		constexpr auto WaitTimeAfter = 0x58; // float
		constexpr auto WaitTimeAfterRandomDeviation = 0x5c; // float
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x1f8; // float
		constexpr auto FogMultiplier = 0x1fc; // float
		constexpr auto DensityMultiplier = 0x200; // float
		constexpr auto DensityOffset = 0x204; // float
		constexpr auto DistanceScale = 0x208; // float
		constexpr auto AltitudeScale = 0x20c; // float
		constexpr auto DistanceOffset = 0x210; // float
		constexpr auto GroundOffset = 0x214; // float
		constexpr auto StartDistance = 0x218; // float
		constexpr auto SunDiscScale = 0x21c; // float
		constexpr auto DefaultBrightness = 0x220; // float
		constexpr auto DefaultLightColor = 0x224; // FColor
		constexpr auto bDisableSunDisk = 0x228; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x228; // char : 1
		constexpr auto bDisableGroundScattering = 0x228; // char : 1
		constexpr auto PrecomputeParams = 0x22c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x258; // UTexture2D*
		constexpr auto IrradianceTexture = 0x260; // UTexture2D*
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UABP_PoseableMesh_D_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x348; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x358; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x480; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x588; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x690; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x798; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x8a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x9a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xab0; // FAnimNode_ModifyBone
	}

	namespace n_ATigerNPCSpawningSpline {
		constexpr auto Spline = 0x260; // USplineComponent*
		constexpr auto NPCAsset = 0x268; // UTigerNPCAsset*
		constexpr auto PathData = 0x270; // FTigerAISplinePathData
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_ATigerHook {
		constexpr auto HookTrigger = 0x228; // USphereComponent*
		constexpr auto HookLocation = 0x230; // FVector
		constexpr auto TargetLocation = 0x23c; // FVector
		constexpr auto StartLocation = 0x248; // FVector
		constexpr auto HookState = 0x254; // ETigerHookState
		constexpr auto Config = 0x258; // UTigerHookConfig*
		constexpr auto CurrentThrowTime = 0x260; // float
		constexpr auto HookingBuffID = 0x264; // int32_t
		constexpr auto HitCharacter = 0x268; // ATigerCharacter*
		constexpr auto PullBackStartAtLocation = 0x270; // FVector
		constexpr auto PullBackStopAtLocation = 0x27c; // FVector
		constexpr auto TimeUntilPulledBack = 0x288; // float
		constexpr auto CurrentTimeLeftUntilPulledBack = 0x28c; // float
		constexpr auto HitCharacterCameraRotateCurrentTime = 0x290; // float
		constexpr auto HitCharacterCameraRotationStart = 0x294; // FRotator
		constexpr auto HitCharacterRotationStart = 0x2a0; // FRotator
		constexpr auto HitCharacterCameraRotationEnd = 0x2ac; // FRotator
		constexpr auto OriginalVelocity = 0x2b8; // FVector
		constexpr auto CharacterVelocityCutoffCurrentTime = 0x2c4; // float
		constexpr auto ThrowMontage = 0x2c8; // UAnimMontage*
		constexpr auto ReelMontage = 0x2d0; // UAnimMontage*
		constexpr auto PreReelTimerHandle = 0x2d8; // FTimerHandle
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UAkComponent {
		constexpr auto bUseSpatialAudio = 0x218; // bool
		constexpr auto OcclusionCollisionChannel = 0x220; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x224; // char : 1
		constexpr auto OuterRadius = 0x228; // float
		constexpr auto InnerRadius = 0x22c; // float
		constexpr auto EarlyReflectionAuxBus = 0x230; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x238; // FString
		constexpr auto EarlyReflectionOrder = 0x248; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x24c; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x250; // float
		constexpr auto roomReverbAuxBusGain = 0x254; // float
		constexpr auto diffractionMaxEdges = 0x258; // int32_t
		constexpr auto diffractionMaxPaths = 0x25c; // int32_t
		constexpr auto diffractionMaxPathLength = 0x260; // float
		constexpr auto DrawFirstOrderReflections = 0x264; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x264; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x264; // char : 1
		constexpr auto DrawDiffraction = 0x264; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x268; // bool
		constexpr auto AttenuationScalingFactor = 0x26c; // float
		constexpr auto OcclusionRefreshInterval = 0x270; // float
		constexpr auto bUseReverbVolumes = 0x274; // bool
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
	}

	namespace n_UABP_VMP_BRU_F_HAIR_02_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_19 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_18 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_17 = 0xb80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xfc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_16 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x1ca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x20e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2520; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3ec0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x4300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x4740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x4b80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x4fc0; // FAnimNode_AnimDynamics
	}

	namespace n_UTBP_UI_PlayerMarker_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto CrossToRed = 0x2b8; // UWidgetAnimation*
		constexpr auto PlayerCross = 0x2c0; // UCanvasPanel*
		constexpr auto PlayerMarkerImage = 0x2c8; // UImage*
		constexpr auto GroupPlayerIndex = 0x2d0; // char
		constexpr auto PlayerMasqueradeComponent = 0x2d8; // UTigerPlayerMasqueradeComponent*
		constexpr auto MasqueradeBreached = 0x2e0; // bool
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0xf0; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x120; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x124; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x124; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x124; // char : 1
		constexpr auto MovementState = 0x125; // FMovementProperties
		constexpr auto PathFollowingComp = 0x128; // UObject*
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x450; // FSplineCurves
		constexpr auto SplineInfo = 0x4c0; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4d8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4f0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x508; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x520; // bool
		constexpr auto ReparamStepsPerSegment = 0x524; // int32_t
		constexpr auto Duration = 0x528; // float
		constexpr auto bStationaryEndpoints = 0x52c; // bool
		constexpr auto bSplineHasBeenEdited = 0x52d; // bool
		constexpr auto bModifiedByConstructionScript = 0x52e; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x52f; // bool
		constexpr auto bDrawDebug = 0x530; // bool
		constexpr auto bClosedLoop = 0x531; // bool
		constexpr auto bLoopPositionOverride = 0x532; // bool
		constexpr auto LoopPosition = 0x534; // float
		constexpr auto DefaultUpVector = 0x538; // FVector
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UTigerAiMoveToTask {
		constexpr auto bResetMoveTargetOnEnd = 0xb0; // bool
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xe8; // uint32_t
		constexpr auto EnabledAreaClass = 0xf0; // UNavArea*
		constexpr auto DisabledAreaClass = 0xf8; // UNavArea*
		constexpr auto SupportedAgents = 0x100; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x104; // FVector
		constexpr auto LinkRelativeEnd = 0x110; // FVector
		constexpr auto LinkDirection = 0x11c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x120; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x120; // char : 1
		constexpr auto bCreateBoxObstacle = 0x120; // char : 1
		constexpr auto ObstacleOffset = 0x124; // FVector
		constexpr auto ObstacleExtent = 0x130; // FVector
		constexpr auto ObstacleAreaClass = 0x140; // UNavArea*
		constexpr auto BroadcastRadius = 0x148; // float
		constexpr auto BroadcastInterval = 0x14c; // float
		constexpr auto BroadcastChannel = 0x150; // ECollisionChannel
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xb0; // FVoiceSettings
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UTigerItemPreviewInputComponent {
		constexpr auto CameraSensitivityTurnMultiplier = 0x138; // float
		constexpr auto CameraSensitivityTurnAtRateMultiplier = 0x13c; // float
		constexpr auto CameraSensitivityVerticalMovementMultiplier = 0x140; // float
		constexpr auto ItemActor = 0x148; // ATigerBattlepassRewardPreview*
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UTigerCustomBlendSpaceListClanAndGender {
		constexpr auto BlendSpacesByClan = 0x28; // FTigerPlayerBlendSpaceByClan [0x2]
	}

	namespace n_UTigerPassiveAdrenalineRushLogicComponent {
		constexpr auto PassiveConfig = 0x158; // UTigerPassiveAdrenalineRushConfig*
	}

	namespace n_UTigerAiMoveAsyncTask {
		constexpr auto AcceptableRadiusSq = 0x98; // float
		constexpr auto ObservedBlackboardValueToleranceSq = 0x9c; // float
	}

	namespace n_UTigerAnimNotify_CameraAnimation {
		constexpr auto CameraAnimation = 0x38; // UCameraAnim*
		constexpr auto AnimationRate = 0x40; // float
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto RenderResolution = 0x5c; // ENiagaraParticleResolutionMode
		constexpr auto bIsEnabled = 0x5d; // bool
		constexpr auto bMotionBlurEnabled = 0x5e; // bool
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_UTigerPassiveVentrueOneLogic {
		constexpr auto Config = 0xc0; // UTigerPassiveVentrueOneConfig*
		constexpr auto Player = 0xc8; // ATigerPlayer*
		constexpr auto RadiusComponent = 0xd0; // USphereComponent*
		constexpr auto CharactersInShockwaveRange = 0xd8; // TArray<ATigerCharacter*>
	}

	namespace n_ATigerPrimogenNPC {
		constexpr auto CharacterPresetPath = 0xae8; // FSoftObjectPath
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x118; // FMulticastInlineDelegate
		constexpr auto World = 0x128; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x130; // bool
	}

	namespace n_UTBP_UI_MapPingMarker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto RootCanvas = 0x2c0; // UCanvasPanel*
		constexpr auto TBP_UI_PingInstanceBase = 0x2c8; // UTBP_UI_PingInstanceBase_C*
		constexpr auto PingWidget = 0x2d0; // UTigerPingWorldInstanceUI*
		constexpr auto InWorldController = 0x2d8; // UTigerInWorldIconController*
		constexpr auto bShouldDisplayCancelNotification = 0x2e0; // bool
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UTBP_UnseenPresenceBuffInstance_C {
		constexpr auto UberGraphFrame = 0x98; // FPointerToUberGraphFrame
		constexpr auto CurrentOpacity = 0xa0; // float
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x4e0; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4f0; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x4f8; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x508; // int32_t
		constexpr auto InstanceStartCullDistance = 0x50c; // int32_t
		constexpr auto InstanceEndCullDistance = 0x510; // int32_t
		constexpr auto InstanceReorderTable = 0x518; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x570; // int32_t
		constexpr auto CachedMappings = 0x578; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UTigerSubLevelList {
		constexpr auto SubLevels = 0x30; // TArray<FTigerSubLevelBackground>
	}

	namespace n_UTBP_FlowBoot_Bot_C {
		constexpr auto UberGraphFrame = 0x80; // FPointerToUberGraphFrame
		constexpr auto BackgroundSceneClasses = 0x88; // TArray<UObject*>
		constexpr auto FirstTimeArchetypeSelectionUI = 0x98; // UTBP_UI_FirstTimeArchetypeSelection_C*
		constexpr auto StartupEvent = 0xa0; // UAkAudioEvent*
		constexpr auto bIsFirstTime = 0xa8; // bool
		constexpr auto LandingPageUI = 0xb0; // UTBP_UI_TitleScreen_C*
		constexpr auto ElysiumRef = 0xb8; // UObject*
		constexpr auto InvalidClientUI = 0xc0; // UTBP_UI_InvalidGameClient_C*
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x228; // ULightComponent*
		constexpr auto bEnabled = 0x230; // char : 1
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UTigerMusicAsset {
		constexpr auto SoundCue = 0x30; // USoundCue*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UABP_Melee_Weapon_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x2f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x400; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x420; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x528; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x550; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_BlendListByEnum = 0x570; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x620; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot = 0x778; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x7c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x7e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x810; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x838; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x990; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x9b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0xb10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0xb60; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xbb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0xd08; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0xd58; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SaveCachedPose = 0xda8; // FAnimNode_SaveCachedPose
		constexpr auto BodyType = 0xf00; // ETigerGender
		constexpr auto IsSecondaryWeapon = 0xf01; // bool
		constexpr auto IsPlayingAsFemaleBool = 0xf02; // bool
		constexpr auto IsPlayingAsFemaleFloat = 0xf04; // float
		constexpr auto RootJointOffset = 0xf08; // FVector
		constexpr auto LeftHandIKOffset = 0xf14; // FVector
		constexpr auto CurrentMeleeWeapon = 0xf20; // ENUM_MeleeWeaponCategories
		constexpr auto RootJointOffsetMap = 0xf28; // TMap<ENUM_MeleeWeaponCategories, FVector>
		constexpr auto LeftHandOffsetMap = 0xf78; // TMap<ENUM_MeleeWeaponCategories, FVector>
		constexpr auto Anim Instance = 0xfc8; // UABP_Player_C*
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_ATigerPlayerAppearanceCache {
		constexpr auto CharacterCustomizationComponent = 0x228; // UTigerCharCustomizationComponent*
		constexpr auto MeshManager = 0x230; // UTigerCharacterMeshManager*
		constexpr auto MeshComponents = 0x238; // USkeletalMeshComponent* [0xb]
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x1f8; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x218; // int32_t
		constexpr auto PointerIndex = 0x21c; // int32_t
		constexpr auto TraceChannel = 0x220; // ECollisionChannel
		constexpr auto InteractionDistance = 0x224; // float
		constexpr auto InteractionSource = 0x228; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x229; // bool
		constexpr auto bShowDebug = 0x22a; // bool
		constexpr auto DebugSphereLineThickness = 0x22c; // float
		constexpr auto DebugLineThickness = 0x230; // float
		constexpr auto DebugColor = 0x234; // FLinearColor
		constexpr auto CustomHitResult = 0x2c0; // FHitResult
		constexpr auto LocalHitLocation = 0x34c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x354; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x360; // UWidgetComponent*
		constexpr auto LastHitResult = 0x368; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x3f4; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x3f5; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x3f6; // bool
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x288; // float
		constexpr auto BaseLookUpRate = 0x28c; // float
		constexpr auto MovementComponent = 0x290; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x298; // USphereComponent*
		constexpr auto MeshComponent = 0x2a0; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2a8; // char : 1
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UTigerAnimationSetCollection {
		constexpr auto ResultSet = 0x28; // UTigerAnimationSet*
		constexpr auto AnimationSets = 0x30; // TArray<UTigerAnimationSet*>
	}

	namespace n_UTigerUtilityPowerBaseComponent {
		constexpr auto UtilityName = 0xb0; // FText
		constexpr auto UtilityDescription = 0xc8; // FText
		constexpr auto bUseClientBackgroundUpdate = 0xe0; // bool
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xe0; // UNavArea*
		constexpr auto FailsafeExtent = 0xe8; // FVector
		constexpr auto bIncludeAgentHeight = 0xf4; // char : 1
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto WorldPositionOffset = 0x15c; // FVectorMaterialInput
		constexpr auto Refraction = 0x170; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x184; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x19c; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b0; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c4; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c4; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c4; // char : 1
		constexpr auto bContactShadows = 0x1c4; // char : 1
		constexpr auto TwoSided = 0x1c4; // char : 1
		constexpr auto DitheredLODTransition = 0x1c4; // char : 1
		constexpr auto DitherOpacityMask = 0x1c4; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c4; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c5; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1c6; // char : 1
		constexpr auto NumCustomizedUVs = 0x1c8; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1cc; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d0; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1dc; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e0; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e4; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f4; // float
		constexpr auto bDisableDepthTest = 0x1f8; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1f8; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1f8; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1f8; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1f8; // char : 1
		constexpr auto bBlockGI = 0x1f8; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1f8; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1f8; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1f9; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1f9; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1f9; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1f9; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1f9; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fa; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fa; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fa; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fa; // char : 1
		constexpr auto bUsesDistortion = 0x1fa; // char : 1
		constexpr auto bUsedWithClothing = 0x1fa; // char : 1
		constexpr auto bUsedWithWater = 0x1fc; // char : 1
		constexpr auto bUsedWithHairStrands = 0x1fc; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x1fc; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithUI = 0x200; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x200; // char : 1
		constexpr auto bFullyRough = 0x200; // char : 1
		constexpr auto bUseFullPrecision = 0x200; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x200; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x200; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x204; // char : 1
		constexpr auto bUseHQForwardReflections = 0x208; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x208; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x208; // char : 1
		constexpr auto D3D11TessellationMode = 0x209; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20a; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20a; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20a; // char : 1
		constexpr auto Wireframe = 0x20a; // char : 1
		constexpr auto ShadingRate = 0x20b; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x20c; // char : 1
		constexpr auto bIsMasked = 0x20c; // char : 1
		constexpr auto bIsPreviewMaterial = 0x20c; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x20c; // char : 1
		constexpr auto bUseMaterialAttributes = 0x20c; // char : 1
		constexpr auto bCastRayTracedShadows = 0x20c; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x20c; // char : 1
		constexpr auto bApplyCloudFogging = 0x20c; // char : 1
		constexpr auto bIsSky = 0x20d; // char : 1
		constexpr auto bComputeFogPerPixel = 0x20d; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x20d; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x20d; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x20d; // char : 1
		constexpr auto BlendableLocation = 0x20e; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x20f; // char : 1
		constexpr auto bEnableStencilTest = 0x20f; // char : 1
		constexpr auto StencilCompare = 0x210; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x211; // char
		constexpr auto RefractionMode = 0x212; // ERefractionMode
		constexpr auto BlendablePriority = 0x214; // int32_t
		constexpr auto bIsBlendable = 0x218; // char : 1
		constexpr auto UsageFlagWarnings = 0x21c; // uint32_t
		constexpr auto RefractionDepthBias = 0x220; // float
		constexpr auto StateId = 0x224; // FGuid
		constexpr auto MaxDisplacement = 0x234; // float
		constexpr auto CachedExpressionData = 0x268; // FMaterialCachedExpressionData
	}

	namespace n_UTBP_ContextualHelp_Tutorial_EndEntity_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x228; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x230; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_UTigerAnimNotify_SpawnMesh {
		constexpr auto MeshToSpawn = 0x38; // UStaticMesh*
		constexpr auto SocketToSpawnFrom = 0x40; // FName
		constexpr auto Direction = 0x48; // FVector [0x2]
		constexpr auto Speed = 0x60; // float [0x2]
		constexpr auto RandomAngularImpulseStrength = 0x68; // float
		constexpr auto bShowInEditor = 0x6c; // bool
	}

	namespace n_UTigerOutlineComponent {
		constexpr auto CurrentMode = 0xb0; // ETigerOutlineMode
		constexpr auto StencilValue = 0xb4; // int32_t
		constexpr auto LocalPlayerStencilValue = 0xb8; // int32_t
		constexpr auto OnOutlineModeRefreshed = 0xc0; // FMulticastInlineDelegate
		constexpr auto OutlineMeshes = 0xd0; // TArray<UMeshComponent*>
		constexpr auto OutlinesToPauseWhenHidden = 0xe0; // uint16_t
		constexpr auto OutlinesToPauseWhenBehindTrapGas = 0xe2; // uint16_t
	}

	namespace n_UTigerRangedWeapon {
		constexpr auto WeaponName = 0xa8; // FName
		constexpr auto WeaponType = 0xb0; // ETigerWeaponType
		constexpr auto CharacterReloadAnimationName = 0xb4; // FName
		constexpr auto FireAnimations = 0xc0; // TArray<FName>
		constexpr auto TimeAfterFireBeforePrimingIsAllowed = 0xd0; // float
		constexpr auto CharacterPrimingAnimation = 0xd4; // FName
		constexpr auto WeaponPrimingAnimation = 0xe0; // UAnimMontage*
		constexpr auto RecoilNoiseBlendspace = 0xe8; // FName
		constexpr auto GunReload = 0xf0; // UAnimMontage*
		constexpr auto GunFireAnimation = 0xf8; // UAnimMontage*
		constexpr auto VerticalRecoilCurve = 0x100; // UCurveFloat*
		constexpr auto HorizontalRecoilCurve = 0x108; // UCurveFloat*
		constexpr auto VerticalRecoilMultiplierCurveOverRecoil = 0x110; // UCurveFloat*
		constexpr auto HorizontalRecoilMultiplierCurveOverRecoil = 0x118; // UCurveFloat*
		constexpr auto ProjectileClass = 0x120; // ATigerProjectile*
		constexpr auto StartAimingSound = 0x128; // UAkAudioEvent*
		constexpr auto StopAimingSound = 0x130; // UAkAudioEvent*
		constexpr auto HitWallSound = 0x138; // UAkAudioEvent*
		constexpr auto FireSound = 0x140; // UAkAudioEvent*
		constexpr auto LoopFireAfterFireRateMultiplier = 0x148; // float
		constexpr auto LowAmmoSound = 0x150; // UAkAudioEvent*
		constexpr auto OutOfAmmoSound = 0x158; // UAkAudioEvent*
		constexpr auto CoolDownAudioEvent = 0x160; // UAkAudioEvent*
		constexpr auto AmountOfProjectilesFiredBeforeCooldown = 0x168; // int32_t
		constexpr auto LowAmmoThresholdPercent = 0x16c; // float
		constexpr auto CameraShake = 0x170; // UMatineeCameraShake*
		constexpr auto CameraShakeAimed = 0x178; // UMatineeCameraShake*
		constexpr auto FireForceFeedback = 0x180; // UForceFeedbackEffect*
		constexpr auto ShotsPerTrail = 0x188; // int32_t
		constexpr auto AimedFov = 0x18c; // int32_t
		constexpr auto bShotsArePiercing = 0x190; // bool
		constexpr auto AmmoType = 0x191; // ETigerWeaponAmmoType
		constexpr auto DamageDropOffCurve = 0x198; // UCurveFloat*
		constexpr auto CameraPreset = 0x1a0; // UTigerCameraPreset*
		constexpr auto CrosshairsByFireMode = 0x1a8; // UTigerWeaponCrosshairWidget* [0x3]
		constexpr auto AimingCrossHair = 0x1c0; // UTigerWeaponCrosshairWidget*
		constexpr auto SecondaryFireAnimations = 0x1c8; // TArray<FName>
		constexpr auto MuzzleSocket = 0x1d8; // FName
		constexpr auto TracerActor = 0x1e0; // AActor*
	}

	namespace n_UTigerPassiveVoiceOfInspirationLogic {
		constexpr auto ActiveBuff = 0x158; // UTigerBuff*
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_UInterpTrackAkAudioEvent {
		constexpr auto Events = 0x90; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa0; // char : 1
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UTigerElysiumNpcNameplateWidget {
		constexpr auto InteractiveNpcComponent = 0x280; // TWeakObjectPtr<UTigerInteractiveNpcComponent>
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x200; // FPostProcessSettings
		constexpr auto Priority = 0x750; // float
		constexpr auto BlendRadius = 0x754; // float
		constexpr auto BlendWeight = 0x758; // float
		constexpr auto bEnabled = 0x75c; // char : 1
		constexpr auto bUnbound = 0x75c; // char : 1
	}

	namespace n_UTigerInputPrompt {
		constexpr auto PrefixText = 0x280; // FText
		constexpr auto PostfixText = 0x298; // FText
		constexpr auto bUseKey = 0x2b0; // bool
		constexpr auto bUseAction = 0x2b1; // bool
		constexpr auto InputAction = 0x2b4; // FName
		constexpr auto InputAxis = 0x2bc; // FName
		constexpr auto InputKey = 0x2c8; // FKey
		constexpr auto bToggleVisibilityOnGamepadChanged = 0x2e0; // bool
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2c8; // float
		constexpr auto bBlendBool = 0x2cc; // bool
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UTigerCharacterTattooCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_ATigerStore {
		constexpr auto LootConfiguration = 0x228; // UTigerBlueprintLootLocationComponent*
		constexpr auto bHasAlarmedTriggered = 0x230; // bool
	}

	namespace n_ATigerRatSpawnpoint {
		constexpr auto NumRatsToSpawn = 0x228; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UTBP_ContextualHelp_Discipline_Clan_UnlockInputReminder_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2b8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c0; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2c8; // float
		constexpr auto bStateBool = 0x2cc; // bool
	}

	namespace n_UTigerAnimNotify_PlayCharEffect {
		constexpr auto Effect = 0x38; // UTigerCharacterEffect*
		constexpr auto SocketToUse = 0x40; // FName
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UTigerRatSpawnpointActorSpawner {
		constexpr auto ActorToSpawn = 0x1f8; // ATigerRat*
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_UTigerDisciplineParticleStrategy {
		constexpr auto StandardColorOverride = 0x28; // FLinearColor
		constexpr auto EnemyColorOverride = 0x38; // FLinearColor
		constexpr auto ColorOverrideMode = 0x48; // ETigerDisciplineParticleStrategyColorModes
		constexpr auto ColorParameterName = 0x4c; // FName
	}

	namespace n_UABP_PoseableMesh_E_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x348; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x358; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x480; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x588; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x690; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x798; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x8a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x9a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0xab0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0xbb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0xcc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0xdc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xed0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xfd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x10e0; // FAnimNode_ModifyBone
	}

	namespace n_ATBP_BulletProjectile_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto Decal_Concrete = 0x2d8; // UMaterialInstanceDynamic*
		constexpr auto StartPosition = 0x2e0; // FVector
		constexpr auto NiagaraTrailPath = 0x2f0; // FSoftObjectPath
		constexpr auto RemoteNiagaraTrailPath = 0x308; // FSoftObjectPath
		constexpr auto CachedTrailEffect = 0x320; // UNiagaraSystem*
		constexpr auto StartVelocity = 0x328; // FVector
		constexpr auto LastTraceLocation = 0x334; // FVector
		constexpr auto TotalTraces = 0x340; // int32_t
		constexpr auto TraceEndLocation = 0x344; // FVector
		constexpr auto TraceColor = 0x350; // FLinearColor
		constexpr auto SmokeWidth = 0x360; // float
		constexpr auto SmokeLifetime = 0x364; // float
		constexpr auto SmokeVisibility = 0x368; // float
		constexpr auto DotSize = 0x36c; // float
		constexpr auto SmokeCurlAmount = 0x370; // float
		constexpr auto SurfaceToAudioName = 0x378; // TMap<EPhysicalSurface, FName>
		constexpr auto TraceLifetime = 0x3c8; // float
		constexpr auto TraceWidth = 0x3cc; // float
		constexpr auto FlyByAkEventID = 0x3d0; // int32_t
		constexpr auto HasSmokeTrail = 0x3d4; // bool
		constexpr auto RangedWeaponToAudioSwitch = 0x3d8; // FName
	}

	namespace n_UTigerDisciplineRejuvenatingVoice {
		constexpr auto Config = 0xf0; // UTigerRejuvenatingVoiceConfig*
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x140; // TextureAddress
		constexpr auto AddressY = 0x141; // TextureAddress
		constexpr auto AddressZ = 0x142; // TextureAddress
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerAnimNotify_NiagaraEffect {
		constexpr auto NiagaraPath = 0x38; // FSoftObjectPath
		constexpr auto CachedNiagaraEffect = 0x50; // UNiagaraSystem*
		constexpr auto AttachPointName = 0x58; // FName
		constexpr auto EffectLocation = 0x60; // FVector
		constexpr auto EffectRotation = 0x6c; // FRotator
		constexpr auto AttachLocationRule = 0x78; // EAttachLocation
		constexpr auto bOnlySpawnOnLocalPlayer = 0x79; // bool
	}

	namespace n_UTBP_UI_Crosshair_Burst_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UABP_VMP_VEN_M_HAIR_06_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0xb80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xfc0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1ca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x20e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3640; // FAnimNode_AnimDynamics
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xb8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc0; // AAIController*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UTigerInventoryItemBase {
		constexpr auto UiName = 0x30; // FText
		constexpr auto UIDescription = 0x48; // FText
		constexpr auto TemporaryVs2CategoryName = 0x60; // FText
		constexpr auto UITexture = 0x78; // TSoftObjectPtr<UTexture2D>
		constexpr auto UiBackgroundTexture = 0xa0; // TSoftObjectPtr<UTexture2D>
		constexpr auto TintColor = 0xc8; // FLinearColor
		constexpr auto bForceToFrontWhenSorted = 0xd8; // bool
		constexpr auto Rarity = 0xd9; // ETigerItemRarity
		constexpr auto bIsAvailableForEveryone = 0xda; // bool
		constexpr auto PossibleOwners = 0xe0; // TArray<FTigerInventoryItemOwnerType>
		constexpr auto CameraTag = 0xf0; // FString
		constexpr auto PersistentID = 0x100; // int32_t
		constexpr auto TelemetryID = 0x108; // uint64_t
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x140; // char : 1
		constexpr auto bReverseAsBrake = 0x140; // char : 1
		constexpr auto bUseRVOAvoidance = 0x140; // char : 1
		constexpr auto bRawHandbrakeInput = 0x140; // char : 1
		constexpr auto bRawGearUpInput = 0x140; // char : 1
		constexpr auto bRawGearDownInput = 0x140; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x144; // char : 1
		constexpr auto Mass = 0x148; // float
		constexpr auto WheelSetups = 0x150; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x160; // float
		constexpr auto ChassisWidth = 0x164; // float
		constexpr auto ChassisHeight = 0x168; // float
		constexpr auto DragArea = 0x16c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x170; // float
		constexpr auto MaxEngineRPM = 0x174; // float
		constexpr auto DebugDragMagnitude = 0x178; // float
		constexpr auto InertiaTensorScale = 0x17c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x188; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x18c; // float
		constexpr auto MaxNormalizedTireLoad = 0x190; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x194; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x198; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x19c; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1a0; // int32_t
		constexpr auto Wheels = 0x1a8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1d0; // float
		constexpr auto RVOAvoidanceHeight = 0x1d4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1d8; // float
		constexpr auto RVOSteeringStep = 0x1dc; // float
		constexpr auto RVOThrottleStep = 0x1e0; // float
		constexpr auto AvoidanceUID = 0x1e4; // int32_t
		constexpr auto AvoidanceGroup = 0x1e8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1ec; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x1f0; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x1f4; // float
		constexpr auto PendingLaunchVelocity = 0x1f8; // FVector
		constexpr auto ReplicatedState = 0x204; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x21c; // float
		constexpr auto RawThrottleInput = 0x220; // float
		constexpr auto RawBrakeInput = 0x224; // float
		constexpr auto SteeringInput = 0x228; // float
		constexpr auto ThrottleInput = 0x22c; // float
		constexpr auto BrakeInput = 0x230; // float
		constexpr auto HandbrakeInput = 0x234; // float
		constexpr auto IdleBrakeInput = 0x238; // float
		constexpr auto StopThreshold = 0x23c; // float
		constexpr auto WrongDirectionThreshold = 0x240; // float
		constexpr auto ThrottleInputRate = 0x244; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x24c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x254; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x25c; // FVehicleInputRate
		constexpr auto OverrideController = 0x288; // AController*
	}

	namespace n_UTigerCharacterHairStyleCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
		constexpr auto SplitMesh = 0x148; // FTigerLodSplitMesh
		constexpr auto Animation = 0x1c0; // UAnimInstance*
		constexpr auto SocketAttachments = 0x1c8; // FName [0x2]
		constexpr auto Mesh = 0x1d8; // TSoftObjectPtr<USkeletalMesh>
	}

	namespace n_UTigerCharCustomizationComponent {
		constexpr auto OnAppearanceChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto MeshManager = 0xd0; // UTigerCharacterMeshManager*
		constexpr auto CustomizationOptions = 0xd8; // UTigerClanCustomizationOptions*
		constexpr auto AdditionalParametersToApply = 0xe0; // TArray<FTigerCharacterCustomizationParameters>
		constexpr auto MeshQuality = 0x101; // ETigerLodSplitMeshQuality
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xb0; // UFieldNodeInt*
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xf0; // int32_t
		constexpr auto ClearColor = 0xf4; // FLinearColor
		constexpr auto OverrideFormat = 0x104; // EPixelFormat
		constexpr auto bHDR = 0x105; // char : 1
		constexpr auto bForceLinearGamma = 0x105; // char : 1
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x228; // UAtmosphericFogComponent*
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x128; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x278; // UBehaviorTree*
	}

	namespace n_UTigerJudgePatrollingState {
		constexpr auto IndexKeyName = 0x60; // FName
		constexpr auto WaypointKeyName = 0x68; // FName
		constexpr auto DirectionKeyName = 0x70; // FName
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UTigerMasqueradeConsequenceMapMarkerSyncInstance {
		constexpr auto MapMarkerClass = 0x58; // UUserWidget*
		constexpr auto MapMarkerProxy = 0x60; // UTigerMapMarkerProxy*
	}

	namespace n_UTBP_ContextualHelp_Consumable_InputReminderOnPickup_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UTigerMasterChallengesConfigAsset {
		constexpr auto Config = 0x30; // FTigerMasteryChallengesConfig
	}

	namespace n_UTigerSessionSettings {
		constexpr auto bFindOnlyLocalSessions = 0x38; // bool
		constexpr auto GroupSize = 0x3c; // int32_t
		constexpr auto bEnableFakeMatchmakingDelayInElysium = 0x40; // bool
		constexpr auto FakeMatchmakingDelayJoinWindowSeconds = 0x44; // int32_t
		constexpr auto bEnableCloudSessions = 0x48; // bool
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_ATigerResurrectAltar {
		constexpr auto ResurrectingPlayerController = 0x288; // ATigerPlayerController*
		constexpr auto RespawnDelay = 0x290; // float
		constexpr auto ShouldDisableAfterSingleUse = 0x294; // bool
		constexpr auto HolyIncenseInteractionType = 0x295; // ETigerResurrectHolyIncenseInteractionType
		constexpr auto HolyIncensePositionCheckRate = 0x298; // float
		constexpr auto AltarDestroyDelay = 0x29c; // float
		constexpr auto RespawnPoints = 0x2a0; // TArray<USceneComponent*>
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x228; // UDatasmithScene*
		constexpr auto RelatedActors = 0x230; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UTigerAiMovementBudgetAsset {
		constexpr auto MovementBudgets = 0x30; // TMap<FName, FTigerAiMovementBudget>
	}

	namespace n_UTBP_UI_InputPromptCombined_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Button = 0x288; // UButton*
		constexpr auto InputSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto TBP_UI_InputPrompt_Gamepad = 0x298; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto TBP_UI_InputPrompt_Keyboard = 0x2a0; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto PrefixText = 0x2a8; // FText
		constexpr auto PostfixText = 0x2c0; // FText
		constexpr auto Action = 0x2d8; // FName
		constexpr auto IsAxis = 0x2e0; // bool
		constexpr auto FontInfo = 0x2e8; // FDataTableRowHandle
		constexpr auto OnClicked = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x308; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x318; // FMulticastInlineDelegate
		constexpr auto IsClickable = 0x328; // bool
	}

	namespace n_UTigerKeyTextureMapping {
		constexpr auto KeyTextures = 0x30; // TMap<FKey, UTexture2D*>
	}

	namespace n_UTigerPingWheelWidget {
		constexpr auto CurrentPingTypeItems = 0x2a0; // TArray<FTigerPingWorldNetData>
		constexpr auto CurrentPingResponseData = 0x2b0; // UTigerPingClientData*
		constexpr auto PingController = 0x2b8; // UTigerPingControllerComponent*
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UTBP_UI_InputPrompt_Gamepad_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto PostFixTextBlock = 0x2f0; // UTigerStyledRichTextBlock*
		constexpr auto PrefixTextBlock = 0x2f8; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_XboxIcon = 0x300; // UTBP_UI_XboxIcon_C*
		constexpr auto FontInfo = 0x308; // FSlateFontInfo
		constexpr auto CustomPadding = 0x360; // FMargin
		constexpr auto Font = 0x370; // FDataTableRowHandle
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6c0; // int32_t
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xb0; // float
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x228; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x230; // char : 1
	}

	namespace n_ATigerNPCPointSpawner {
		constexpr auto SpawningPoints = 0x260; // TArray<FTigerNPCSpawningPoint>
		constexpr auto MaxNPCsToSpawn = 0x270; // int32_t
		constexpr auto MinNPCsToSpawn = 0x274; // int32_t
		constexpr auto MaxNPCsToSpawnGroup = 0x278; // int32_t
		constexpr auto MinNPCsToSpawnGroup = 0x27c; // int32_t
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SESSIONTYPE = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto ScreenCullSize = 0xd8; // FPerPlatformFloat
		constexpr auto Materials = 0xe0; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xf0; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0x100; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x160; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x164; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x165; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x166; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x167; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x167; // char : 1
		constexpr auto bHasBeenSimplified = 0x167; // char : 1
		constexpr auto bHasVertexColors = 0x167; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x167; // char : 1
		constexpr auto BodySetup = 0x168; // UBodySetup*
		constexpr auto PhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x178; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x180; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x190; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x318; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x320; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x330; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x370; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x390; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UTBP_UI_EntityCheckpointMarker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto EntityIconGlow = 0x2c0; // UImage*
		constexpr auto EntityIconImage = 0x2c8; // UImage*
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_UTigerGeneralUserSettings {
		constexpr auto EnableAtmosMixEvent = 0x28; // UAkAudioEvent*
		constexpr auto EnableHeadphonesEvent = 0x30; // UAkAudioEvent*
		constexpr auto OnQualityOptionChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto OnDisplaySettingsApplied = 0x48; // FMulticastInlineDelegate
		constexpr auto OnGraphicsSettingsApplied = 0x58; // FMulticastInlineDelegate
		constexpr auto OnLanguageTextSettingChanged = 0x68; // FMulticastInlineDelegate
		constexpr auto UserStreamerModeSettings = 0x80; // FTigerStreamerModeSettings
		constexpr auto DefaultStreamerModeSettings = 0x8c; // FTigerStreamerModeSettings
		constexpr auto UserAudioSettings = 0x98; // FTigerAudioSettings
		constexpr auto DefaultAudioSettings = 0xe8; // FTigerAudioSettings
		constexpr auto UserLanguageSettings = 0x138; // FTigerLanguageSettings
		constexpr auto DefaultLanguageSettings = 0x160; // FTigerLanguageSettings
		constexpr auto UserGameplaySettings = 0x188; // FTigerGameplaySettings
		constexpr auto DefaultGameplaySettings = 0x190; // FTigerGameplaySettings
		constexpr auto AvailableAudioLanguages = 0x198; // TArray<FString>
		constexpr auto LanguageDisplayName = 0x1a8; // TMap<FString, FString>
		constexpr auto TempDisplaySettings = 0x208; // FTigerDisplaySettings
		constexpr auto UserDisplaySettings = 0x230; // FTigerDisplaySettings
		constexpr auto DefaultDisplaySettings = 0x258; // FTigerDisplaySettings
		constexpr auto TempGraphicsSettings = 0x2b8; // FTigerGraphicsSettings
		constexpr auto UserGraphicsSettings = 0x304; // FTigerGraphicsSettings
		constexpr auto DefaultGraphicsSettings = 0x350; // FTigerGraphicsSettings
		constexpr auto TempGraphicsSettingsPS5 = 0x39c; // FTigerGraphicsSettingsPS5
		constexpr auto UserGraphicsSettingsPS5 = 0x3ac; // FTigerGraphicsSettingsPS5
		constexpr auto DefaultGraphicsSettingsPS5 = 0x3bc; // FTigerGraphicsSettingsPS5
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_UTigerPlayerBotSubsystemSettings {
		constexpr auto bUseSplitscreen = 0x38; // bool
		constexpr auto BotDifficulty = 0x3c; // float
		constexpr auto JumpingSpamDifficultyThreshold = 0x40; // float
		constexpr auto SlidingDifficultyThreshold = 0x44; // float
		constexpr auto ClanPowerDifficultyThreshold = 0x48; // float
		constexpr auto ArchetypePowerDifficultyThreshold = 0x4c; // float
		constexpr auto BotCombatTransitionDelayMin = 0x50; // float
		constexpr auto BotCombatTransitionDelayMax = 0x54; // float
		constexpr auto BotAccuracyMin = 0x58; // float
		constexpr auto BotAccuracyMax = 0x5c; // float
	}

	namespace n_UTigerAnimationFilter {
		constexpr auto BonesToFilter = 0x30; // TArray<FName>
		constexpr auto BlendShapesToFilter = 0x40; // TArray<FName>
		constexpr auto Skeleton = 0x50; // USkeleton*
		constexpr auto CurveIdsToFilter = 0x58; // TArray<int32_t>
		constexpr auto BoneIdsToFilter = 0x68; // TArray<bool>
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UTigerAIPlayerFeeding {
		constexpr auto MaximumFeedingDistance = 0x98; // float
	}

	namespace n_ATBP_BuffPostProcess_BlindingBeauty_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto FlashCurve = 0x270; // UCurveFloat*
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UDefaultCycleStyle_C {
		constexpr auto DirectionInt = 0x48; // int32_t
		constexpr auto OutSlot = 0x4c; // int32_t
		constexpr auto PlayerController = 0x50; // ATigerPlayerController*
	}

	namespace n_UTigerBuffFrenzy {
		constexpr auto HPRegenPercentPerSecond = 0x248; // float
		constexpr auto WeaponClassToEquip = 0x250; // UTigerWeapon*
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_ATigerRat {
		constexpr auto LocalHandOffset = 0x288; // FVector
		constexpr auto LocalHandRotation = 0x294; // FRotator
		constexpr auto Montage = 0x2a0; // UAnimMontage*
		constexpr auto CurrentInteractingPlayerController = 0x2a8; // TWeakObjectPtr<ATigerPlayerController>
		constexpr auto FeedTickTime = 0x2b0; // float
		constexpr auto FeedHealthAmount = 0x2b4; // float
		constexpr auto MoveSpeed = 0x2b8; // float
		constexpr auto RotationSpeed = 0x2bc; // float
		constexpr auto MaxWaitTime = 0x2c0; // float
		constexpr auto MinWaitTime = 0x2c4; // float
		constexpr auto RatMesh = 0x2c8; // USkeletalMeshComponent*
		constexpr auto bShouldMove = 0x2d0; // bool
		constexpr auto PickUpSqueekEvent = 0x2d8; // UAkAudioEvent*
		constexpr auto bIsEaten = 0x308; // bool
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UNetReplicationGraphConnection {
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x170; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x188; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x1a0; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x1b0; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UTigerWheelInterfaceWidget {
		constexpr auto OnAlternateActionTriggered = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPrimaryActionTriggered = 0x290; // FMulticastInlineDelegate
		constexpr auto bCursorCanBeOutside = 0x2a0; // bool
		constexpr auto NumItems = 0x2a4; // int32_t
		constexpr auto MinimumSupportedItems = 0x2a8; // int32_t
		constexpr auto MaximumSupportedItems = 0x2ac; // int32_t
		constexpr auto MiddleRadius = 0x2b0; // float
		constexpr auto OutsideRadius = 0x2b4; // float
		constexpr auto GamepadDeadZone = 0x2b8; // float
		constexpr auto DeselectionGraceTime = 0x2bc; // float
		constexpr auto HoveredIndex = 0x2c4; // int32_t
	}

	namespace n_ATigerVehicle {
		constexpr auto LootableDoorSpawner = 0x278; // ATigerLootableVehicleDoorSpawner*
		constexpr auto LootContainer = 0x280; // ATigerLootContainer*
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Ping_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto shadow = 0x54; // FExpressionInput
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5d8; // UWorldComposition*
		constexpr auto PSCPool = 0x698; // FWorldPSCPool
	}

	namespace n_UTigerPreloadedNiagaraSystems {
		constexpr auto OnLoadedAllAssetsEvent = 0x30; // FMulticastInlineDelegate
		constexpr auto Systems = 0x40; // TArray<TSoftObjectPtr<UNiagaraSystem>>
	}

	namespace n_UTigerMatchStateComponent {
		constexpr auto MatchGameMode = 0xb0; // ATigerMatchGameMode*
		constexpr auto MatchGameState = 0xb8; // ATigerMatchGameState*
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UTBP_UI_FirstTimeArchetypeSelection_C {
		constexpr auto UberGraphFrame = 0x470; // FPointerToUberGraphFrame
		constexpr auto HighlightElysiumButton = 0x478; // UWidgetAnimation*
		constexpr auto OnVideoDone = 0x480; // UWidgetAnimation*
		constexpr auto OnVideoShown = 0x488; // UWidgetAnimation*
		constexpr auto FadeOutToCharacterCreate = 0x490; // UWidgetAnimation*
		constexpr auto InAnimation = 0x498; // UWidgetAnimation*
		constexpr auto ArchetypeDescription = 0x4a0; // UTBP_UI_ArchetypeDescription_C*
		constexpr auto ArchetypeInfo = 0x4a8; // UTBP_UI_ArchetypeInfo_C*
		constexpr auto ConfirmQuitPopup = 0x4b0; // UTBP_UI_ConfirmMenu_C*
		constexpr auto ExitGameInputPrompt = 0x4b8; // UTBP_UI_InputMenuPrompt_C*
		constexpr auto HorizontalArchetypeSelector = 0x4c0; // UTBP_UI_HorizontalArchetypeSelector_Default_C*
		constexpr auto JoinErrorMessage = 0x4c8; // UTBP_UI_ConfirmMenu_C*
		constexpr auto PlAYCINEMATIC = 0x4d0; // UTigerStyledRichTextBlock*
		constexpr auto PlayCinematicButton = 0x4d8; // UTBP_UI_TransitionMenuButton_C*
		constexpr auto PlayTutorialInputPrompt = 0x4e0; // UTBP_UI_InputMenuPrompt_C*
		constexpr auto PlayVideoIcon = 0x4e8; // UImage*
		constexpr auto ShowCinematicKeyPrompt = 0x4f0; // UTBP_UI_InputPromptCombined_C*
		constexpr auto StartGameUIButton = 0x4f8; // UTBP_UI_ElysiumButton_C*
		constexpr auto TBP_UI_Divider = 0x500; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Menu_Button_Prompt_Footer = 0x508; // UTBP_UI_Menu_Button_Prompt_Footer_C*
		constexpr auto Text = 0x510; // UTigerStyledRichTextBlock*
		constexpr auto TigerSafeZoneWidget_1 = 0x518; // UTigerSafeZoneWidget*
		constexpr auto EnterElysium = 0x520; // FMulticastInlineDelegate
		constexpr auto LoadTutorial = 0x530; // FMulticastInlineDelegate
		constexpr auto JoinElysiumErrorText = 0x540; // FText
		constexpr auto MoviePlayerUI = 0x558; // UTBP_UI_MoviePlayer_C*
		constexpr auto ShowCinematicActionName = 0x560; // FName
		constexpr auto bIsPlayingPowerVideo = 0x568; // bool
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto ProjectID = 0x98; // FGuid
		constexpr auto ProjectName = 0xa8; // FString
		constexpr auto ProjectVersion = 0xb8; // FString
		constexpr auto SupportContact = 0xc8; // FString
		constexpr auto ProjectDisplayedTitle = 0xd8; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf0; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x108; // bool
		constexpr auto bUseBorderlessWindow = 0x109; // bool
		constexpr auto bStartInVR = 0x10a; // bool
		constexpr auto bAllowWindowResize = 0x10b; // bool
		constexpr auto bAllowClose = 0x10c; // bool
		constexpr auto bAllowMaximize = 0x10d; // bool
		constexpr auto bAllowMinimize = 0x10e; // bool
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x228; // UGeometryCacheComponent*
	}

	namespace n_UTigerDisciplineReposition {
		constexpr auto Config = 0x78; // UTigerRepositionConfig*
	}

	namespace n_UTigerThrallMissionMapMarkerData {
		constexpr auto MissionMarker = 0x30; // FTigerThrallMissionMapMarker
	}

	namespace n_ATigerInteractiveQuestItem {
		constexpr auto QuestMesh = 0x290; // UStaticMeshComponent*
		constexpr auto QuestSoundEffect = 0x298; // UAkAudioEvent*
		constexpr auto GrimoireEntryToUnlock = 0x2a0; // UTigerGrimoireEntry*
		constexpr auto QuestParticleSystem = 0x2d8; // UParticleSystemComponent*
	}

	namespace n_UABP_VMP_TOR_M_HAIR_05_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0xb50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xf90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0xfb0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x13f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1830; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x1850; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1c90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x20d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2510; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x2950; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x2d90; // FAnimNode_Root
	}

	namespace n_UTBP_ContextualHelp_MasqueradeWeaponFired_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UAkFolder {
		constexpr auto UnrealFolderPath = 0x40; // FString
		constexpr auto WwiseFolderPath = 0x50; // FString
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_UTigerHSensesTargetComponent {
		constexpr auto HeartAnimTime = 0xb0; // float
		constexpr auto HeartRate = 0xb4; // float
		constexpr auto HeartRateTarget = 0xb8; // float
		constexpr auto HeartRateNone = 0xbc; // float
		constexpr auto HeartRateSuspicious = 0xc0; // float
		constexpr auto HeartRateThreatened = 0xc4; // float
		constexpr auto HeartRateVariance = 0xc8; // float
		constexpr auto HeartRateChangeRate = 0xcc; // float
		constexpr auto HeartAnimRateCurve = 0xd0; // UCurveFloat*
	}

	namespace n_UTigerPingClientData {
		constexpr auto PingClass = 0x38; // UTigerPingBase*
		constexpr auto OwningPlayerState = 0x40; // ATigerPlayerState*
		constexpr auto Context = 0x48; // FTigerPingContext
		constexpr auto WorldLocation = 0x64; // FVector
		constexpr auto bIsLocalPlayerInterested = 0x70; // bool
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UTigerHighTierLootComponent {
		constexpr auto HighTierLootGroup = 0xb0; // TSoftClassPtr<UObject>
	}

	namespace n_UTigerFindSessionAsync {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_UAkAssetDataSwitchContainer {
		constexpr auto SwitchContainers = 0x78; // TArray<UAkAssetDataSwitchContainerData*>
		constexpr auto DefaultGroupValue = 0x88; // UAkGroupValue*
	}

	namespace n_UTigerTraversalStateWallHangConfig {
		constexpr auto OffsetDistanceForFutureWallHangPosition = 0x50; // float
		constexpr auto bShouldBlockWallHangIfLikelyToSlideOff = 0x54; // bool
		constexpr auto bShouldAllowPlayerToSlideoffHorizontallyDuringDeceleration = 0x55; // bool
		constexpr auto VerticalVelocitySlowDownRate = 0x58; // UCurveFloat*
		constexpr auto HorizontalVelocitySlowDownRate = 0x60; // UCurveFloat*
	}

	namespace n_UTigerFullscreenFXManager {
		constexpr auto Controller = 0xb0; // ATigerPlayerController*
		constexpr auto TimedPostFXMaterial = 0xc0; // UMaterial*
		constexpr auto TimedPostFXCollection = 0xc8; // UMaterialParameterCollection*
		constexpr auto TimedPostFXCollectionName = 0xd0; // FName
	}

	namespace n_UTigerPushConnectionManager {
		constexpr auto GameInstance = 0x28; // UTigerGameInstance*
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x228; // float
		constexpr auto PlayerId = 0x22c; // int32_t
		constexpr auto Ping = 0x230; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x232; // char : 1
		constexpr auto bIsSpectator = 0x232; // char : 1
		constexpr auto bOnlySpectator = 0x232; // char : 1
		constexpr auto bIsABot = 0x232; // char : 1
		constexpr auto bIsInactive = 0x232; // char : 1
		constexpr auto bFromPreviousLevel = 0x232; // char : 1
		constexpr auto StartTime = 0x234; // int32_t
		constexpr auto EngineMessageClass = 0x238; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x248; // FString
		constexpr auto UniqueID = 0x258; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x288; // APawn*
		constexpr auto PlayerNamePrivate = 0x308; // FString
	}

	namespace n_UTigerBloodVeinBranchMovementComponent {
		constexpr auto PlayerPawn = 0xc0; // ACharacter*
		constexpr auto GameState = 0xc8; // ATigerGameState*
		constexpr auto MovementTargets = 0xd0; // TArray<FVector>
		constexpr auto StartSimulationTime = 0xe0; // float
		constexpr auto bHitGround = 0xe4; // bool
		constexpr auto SecondsPerStep = 0xe8; // float
		constexpr auto PrimaryMovementSettings = 0xec; // FTigerBloodVeinBranchMovementSettings
		constexpr auto SecondaryMovementSettings = 0x110; // FTigerBloodVeinBranchMovementSettings
		constexpr auto Branch = 0x140; // ATigerBloodVeinBranch*
		constexpr auto HolyIncense = 0x148; // ATigerHolyIncense*
	}

	namespace n_ATBP_BuffPostProcess_ProjectionDash_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
		constexpr auto Material = 0x270; // UMaterialInterface*
		constexpr auto Color = 0x278; // FLinearColor
		constexpr auto Tick = 0x288; // FMulticastInlineDelegate
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_ATBP_BootGameMode_C {
		constexpr auto UberGraphFrame = 0x2f0; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x2f8; // USceneComponent*
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x1f8; // UBoxComponent*
	}

	namespace n_UTigerAiPathToTargetService {
		constexpr auto TargetLocationKey = 0x70; // FBlackboardKeySelector
		constexpr auto SuitableEdgeLocationKey = 0x98; // FBlackboardKeySelector
		constexpr auto IsTargetOutOfBoundsKey = 0xc0; // FBlackboardKeySelector
		constexpr auto HasPathToTargetKey = 0xe8; // FBlackboardKeySelector
		constexpr auto IsPathOutOfBoundsKey = 0x110; // FBlackboardKeySelector
		constexpr auto OutOfBoundsDistance = 0x138; // float
		constexpr auto HeightDifferenceOutOfBounds = 0x13c; // float
		constexpr auto bDebugDraw = 0x140; // bool
	}

	namespace n_UTigerTitleListAsset {
		constexpr auto TitlesByLevel = 0x30; // TArray<FText>
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x230; // float
		constexpr auto BeaconConnectionTimeout = 0x234; // float
		constexpr auto NetDriver = 0x238; // UNetDriver*
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UTBP_UI_ArchetypeSelect_Archetype_Default_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto OnSelect = 0x268; // UWidgetAnimation*
		constexpr auto OnDisable = 0x270; // UWidgetAnimation*
		constexpr auto OnHover = 0x278; // UWidgetAnimation*
		constexpr auto ArchetypeBackground = 0x280; // UImage*
		constexpr auto ArchetypeBeam = 0x288; // UImage*
		constexpr auto ArchetypeGlow = 0x290; // UImage*
		constexpr auto ArchetypeIcon = 0x298; // UImage*
		constexpr auto ArchetypeNameDefault_Text = 0x2a0; // UTigerStyledRichTextBlock*
		constexpr auto ArchetypeNameSelected_Text = 0x2a8; // UTigerStyledRichTextBlock*
		constexpr auto Background = 0x2b0; // UImage*
		constexpr auto CardButton = 0x2b8; // UButton*
		constexpr auto DefaultBorder = 0x2c0; // UImage*
		constexpr auto DisabledIcon = 0x2c8; // UImage*
		constexpr auto HoverGlow = 0x2d0; // UImage*
		constexpr auto SelectBorder = 0x2d8; // UImage*
		constexpr auto SelectedGlow = 0x2e0; // UImage*
		constexpr auto SelectedIcon = 0x2e8; // UImage*
		constexpr auto SelectionDoneDeco = 0x2f0; // UCanvasPanel*
		constexpr auto ArchetypeData = 0x2f8; // UTigerPowerKit*
		constexpr auto OnSelected = 0x300; // FMulticastInlineDelegate
		constexpr auto IsSelected = 0x310; // bool
		constexpr auto IsDisabled = 0x311; // bool
		constexpr auto IsHoverable = 0x312; // bool
		constexpr auto NewVar_1 = 0x313; // bool
	}

	namespace n_UTBP_ScoutingFamiliarPassive_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto Scout = 0xf0; // ATigerFamiliarScout*
		constexpr auto Replicated Passive Activated = 0xf8; // bool
		constexpr auto TimeStart = 0xfc; // float
		constexpr auto bParticleVisibility = 0x100; // bool
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UTigerAnimNotifyStateAttachMesh {
		constexpr auto MeshToSpawn = 0x30; // UStaticMesh*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto bShowInEditor = 0x40; // bool
		constexpr auto PropTimeout = 0x44; // float
	}

	namespace n_UTigerRangedModItemAsset {
		constexpr auto ModEffects = 0x128; // TArray<UTigerRangedWeaponModModifier*>
		constexpr auto ModEquipPriority = 0x138; // int32_t
		constexpr auto ModType = 0x13c; // ERangedWeaponModType
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARImageUpdatePayload
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_UAkWinGDKInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWinGDKAdvancedInitializationSettings
	}

	namespace n_UTigerMasqueradeConsequenceBloodHuntedSyncInstance {
		constexpr auto MapMarkerClass = 0x58; // UUserWidget*
		constexpr auto CompassMarkerClass = 0x60; // UTigerCompassMarkerWidget*
		constexpr auto CompassMarkerTexture = 0x68; // UTexture2D*
		constexpr auto Marker = 0x70; // FBloodHuntMarker
	}

	namespace n_UTigerChallengeDealDamage {
		constexpr auto bNeedsToDamagePlayer = 0xb0; // bool
		constexpr auto RequiredWeaponConstraint = 0xb8; // FTigerChallengeRequirementWeaponType
	}

	namespace n_UTigerWeaponAbilityAxeThrow {
		constexpr auto Config = 0xf0; // UTigerThrowingAxeConfig*
		constexpr auto Player = 0xf8; // ATigerPlayer*
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UAkGameObject {
		constexpr auto AkAudioEvent = 0x1f8; // UAkAudioEvent*
		constexpr auto EventName = 0x200; // FString
	}

	namespace n_UTigerTypeAndRarityData {
		constexpr auto ItemTypeNames = 0x30; // TMap<ETigerInventoryItemType, FText>
		constexpr auto ShortItemTypeNames = 0x80; // TMap<ETigerInventoryItemType, FText>
		constexpr auto AmmoTypeNames = 0xd0; // TMap<ETigerWeaponAmmoType, FText>
		constexpr auto ShortWeaponTypeNames = 0x120; // TMap<ETigerWeaponType, FText>
		constexpr auto LootCategoryNames = 0x170; // TMap<ETigerLootCategory, FText>
		constexpr auto ItemRarityNames = 0x1c0; // TMap<ETigerItemRarity, FText>
		constexpr auto ItemRarityColors = 0x210; // TMap<ETigerItemRarity, ETigerUIColor>
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x450; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x468; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UTigerArchetypeLevelWidget {
		constexpr auto ArchetypeLevel = 0x280; // int32_t
		constexpr auto RepresentedPlayer = 0x284; // TWeakObjectPtr<ATigerPlayer>
	}

	namespace n_UTigerBuffArtifactFeedingBonusInstance {
		constexpr auto ArtifactFeedingBonusBuff = 0x88; // UTigerBuffArtifactFeedingBonus*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_UTigerAnimIKWindow {
		constexpr auto SocketName = 0x30; // FName
		constexpr auto SocketToLineTraceFrom = 0x38; // FName
		constexpr auto IKSearchDirection = 0x40; // ETigerIKDirection
		constexpr auto TargetJoint = 0x44; // FName
		constexpr auto TargetJointVerticalOffsetAmount = 0x4c; // float
		constexpr auto TargetJointHorizontalOffsetAmount = 0x50; // float
		constexpr auto TargetJointDepthOffsetAmount = 0x54; // float
		constexpr auto IKResultVerticalAdjustment = 0x58; // float
		constexpr auto IKResultHorizontalAdjustment = 0x5c; // float
		constexpr auto IKResultDepthAdjustment = 0x60; // float
		constexpr auto IKResultAlpha = 0x64; // float
		constexpr auto bIKShouldRemainActiveWhenAnimationLoops = 0x68; // bool
		constexpr auto InOutBlendSpeed = 0x6c; // float
		constexpr auto bShouldBlendInAndOut = 0x70; // bool
	}

	namespace n_UTigerBuffFOTTKnockbackWallStun {
		constexpr auto WallStunnedTimer = 0x248; // float
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_ATigerBelowBalconyEntryTrigger {
		constexpr auto EnterBalconyFromBelowAnimName = 0x260; // FName
	}

	namespace n_UTBP_UI_TOS_PP_Popup_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FulFixAnimation = 0x268; // UWidgetAnimation*
		constexpr auto ShowAgreeButton = 0x270; // UWidgetAnimation*
		constexpr auto ReadArrowFlash = 0x278; // UWidgetAnimation*
		constexpr auto AgreeButton = 0x280; // UTBP_UI_MenuButton_C*
		constexpr auto CloseButton = 0x288; // UTBP_UI_MenuButton_C*
		constexpr auto CloseButton_2 = 0x290; // UTBP_UI_MenuButton_C*
		constexpr auto DeniedText = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto DeniedTitleText = 0x2a0; // UTigerStyledRichTextBlock*
		constexpr auto DisagreeButton = 0x2a8; // UTBP_UI_MenuButton_C*
		constexpr auto DisagreePopup = 0x2b0; // UTBP_UI_Popup_Base_C*
		constexpr auto Image_144 = 0x2b8; // UImage*
		constexpr auto License_Text_Newsletter = 0x2c0; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_PP = 0x2c8; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_Special1 = 0x2d0; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_Special2 = 0x2d8; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_Special3 = 0x2e0; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_Special4 = 0x2e8; // UTigerStyledRichTextBlock*
		constexpr auto License_Text_TOS = 0x2f0; // UTigerStyledRichTextBlock*
		constexpr auto ReadArrowContainer = 0x2f8; // UOverlay*
		constexpr auto ReadArrowShadow = 0x300; // UImage*
		constexpr auto ScrollBox_1 = 0x308; // UScrollBox*
		constexpr auto TBP_UI_Divider = 0x310; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_2 = 0x318; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_3 = 0x320; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_4 = 0x328; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Popup_Base = 0x330; // UTBP_UI_Popup_Base_C*
		constexpr auto TBP_UI_Scrollbox = 0x338; // UTBP_UI_Scrollbox_C*
		constexpr auto Title_Text_Newsletter = 0x340; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_PP = 0x348; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_Special1 = 0x350; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_Special2 = 0x358; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_Special3 = 0x360; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_Special4 = 0x368; // UTigerStyledRichTextBlock*
		constexpr auto Title_Text_TOS = 0x370; // UTigerStyledRichTextBlock*
		constexpr auto WidgetSwitcher_License = 0x378; // UWidgetSwitcher*
		constexpr auto WidgetSwitcher_Title = 0x380; // UWidgetSwitcher*
		constexpr auto OnDecisionMade = 0x388; // FMulticastInlineDelegate
		constexpr auto Bold_TextFormating = 0x398; // FString
		constexpr auto EL_TextFormatting = 0x3a8; // FString
		constexpr auto UL_TextFormatting = 0x3b8; // FString
		constexpr auto Subtitle_TextFormatting = 0x3c8; // FString
		constexpr auto Subheader_TextFormatting = 0x3d8; // FString
		constexpr auto Agreed = 0x3e8; // bool
		constexpr auto ScrolledFinished = 0x3e9; // bool
		constexpr auto bShouldForceToAccept = 0x3ea; // bool
		constexpr auto CurrentClickableCheckboxCallerRef = 0x3f0; // UTBP_UI_CheckboxWithClickabelText_C*
	}

	namespace n_UTigerPingMarkerProxy {
		constexpr auto PingData = 0x68; // UTigerPingClientData*
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3a8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3b0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3c0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UTigerAnimNotify_Melee {
		constexpr auto EventName = 0x38; // FName
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x228; // FSoftObjectPath
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UTigerExpRequirements {
		constexpr auto ExpLevelRequirements = 0x28; // FTigerExpLevelRequirements
	}

	namespace n_UTigerPlayerBeingLoggedInToServer {
		constexpr auto GroupCoordinator = 0x28; // UTigerGroupCoordinator*
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x288; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x290; // UWheeledVehicleMovementComponent*
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_UTigerBuffVanish {
		constexpr auto TimeReductionPerMeterMoved = 0x248; // float
		constexpr auto NoiseNotifyEventRange = 0x24c; // float
		constexpr auto MaterialTransitionIntoCurve = 0x250; // UCurveFloat*
		constexpr auto MaterialTransitionOutFromCurve = 0x258; // UCurveFloat*
		constexpr auto BlendOutParticles = 0x260; // UParticleSystem*
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_ATBP_Katana_Reflector_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto Null = 0x230; // USceneComponent*
		constexpr auto Scene = 0x238; // USceneComponent*
		constexpr auto StaticMesh = 0x240; // UStaticMeshComponent*
		constexpr auto Null3 = 0x248; // USceneComponent*
		constexpr auto Null2 = 0x250; // USceneComponent*
		constexpr auto ReflectedProjectile = 0x258; // AActor*
		constexpr auto Start_time2 = 0x260; // float
		constexpr auto niagaravar = 0x268; // UNiagaraComponent*
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UTigerOnlineSettings {
		constexpr auto bResetPlayerDataInEditor = 0x38; // bool
		constexpr auto OnlineServicesBaseUrlDev = 0x40; // FString
		constexpr auto OnlineServicesBaseUrlUatRelease = 0x50; // FString
		constexpr auto OnlineServicesBaseUrlUatMain = 0x60; // FString
		constexpr auto OnlineServicesBaseUrlUatPs5 = 0x70; // FString
		constexpr auto OnlineServicesBaseUrlUatStaging = 0x80; // FString
		constexpr auto OnlineServicesBaseUrlProd = 0x90; // FString
		constexpr auto OnlineServicesBaseUrlLocal = 0xa0; // FString
		constexpr auto OnlineServicesPushBaseUrlDev = 0xb0; // FString
		constexpr auto OnlineServicesPushBaseUrlUatRelease = 0xc0; // FString
		constexpr auto OnlineServicesPushBaseUrlUatMain = 0xd0; // FString
		constexpr auto OnlineServicesPushBaseUrlUatPs5 = 0xe0; // FString
		constexpr auto OnlineServicesPushBaseUrlUatStaging = 0xf0; // FString
		constexpr auto OnlineServicesPushBaseUrlProd = 0x100; // FString
		constexpr auto OnlineServicesPushBaseUrlLocal = 0x110; // FString
		constexpr auto CdnBaseUrlDev = 0x120; // FString
		constexpr auto CdnBaseUrlUat = 0x130; // FString
		constexpr auto CdnBaseUrlProd = 0x140; // FString
		constexpr auto PlayerDataServiceUri = 0x150; // FString
		constexpr auto SessionServiceUri = 0x160; // FString
		constexpr auto PushServiceUri = 0x170; // FString
		constexpr auto PartyServiceUri = 0x180; // FString
		constexpr auto FriendServiceUri = 0x190; // FString
		constexpr auto PresenceServiceUri = 0x1a0; // FString
		constexpr auto LoginQueueServiceUri = 0x1b0; // FString
		constexpr auto StoreServiceUri = 0x1c0; // FString
	}

	namespace n_UTigerTraversalJumpState {
		constexpr auto JumpConfig = 0x40; // UTigerTraversalStateJumpConfig*
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UChooseNextWaypoint {
		constexpr auto Index = 0x70; // FBlackboardKeySelector
		constexpr auto Waypoint = 0x98; // FBlackboardKeySelector
		constexpr auto bWaypointDirectionIsForward = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UTigerThrallSystem {
		constexpr auto PlayerThralls = 0xc8; // TArray<UTigerLocalThrallData*>
		constexpr auto LocalActiveMissions = 0xe0; // TMap<int32_t, UTigerLocalThrallMissionData*>
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UTigerAICommandMoveTo {
		constexpr auto MoveToData = 0x40; // FTigerAIMoveToLocationData
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UAkMediaAsset {
		constexpr auto ID = 0x28; // uint32_t
		constexpr auto AutoLoad = 0x2c; // bool
		constexpr auto UserData = 0x30; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x40; // UAkMediaAssetData*
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x238; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x248; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x258; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x260; // bool
		constexpr auto OnSmartLinkReached = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UTigerJumpConfig {
		constexpr auto bDebugJumpline = 0x170; // bool
		constexpr auto bDebugBlockJump = 0x171; // bool
		constexpr auto JumpVelocity = 0x174; // float
		constexpr auto bAllowDoublejumpAfterDiscipline = 0x178; // bool
		constexpr auto bShouldDelayJumpInAir = 0x179; // bool
		constexpr auto LaunchMontage = 0x180; // UAnimMontage*
		constexpr auto GroundAnticipationMontage = 0x188; // UAnimMontage*
		constexpr auto CameraPresetDuration = 0x190; // float
		constexpr auto JumpFullscreenPostFX = 0x198; // UMaterial*
		constexpr auto JumpPostFXCollection = 0x1a0; // UMaterialParameterCollection*
		constexpr auto JumpPostFXStrengthParameterName = 0x1a8; // FName
		constexpr auto JumpPostFXMaxStrength = 0x1b0; // float
		constexpr auto JumpEffectsDuration = 0x1b4; // float
		constexpr auto JumpEffectsLerpInTime = 0x1b8; // float
		constexpr auto JumpEffectsLerpOutTime = 0x1bc; // float
		constexpr auto LeapStartedAudio = 0x1c0; // UAkAudioEvent*
		constexpr auto FeetObstacleOffset = 0x1c8; // FVector
		constexpr auto ObstacleDistanceCheck = 0x1d4; // float
		constexpr auto PartiallyBlockedJumpModifier = 0x1d8; // float
		constexpr auto BackLeapPitch = 0x1dc; // float
		constexpr auto LeapPitchCurve = 0x1e0; // UCurveFloat*
		constexpr auto bCanLeapBackward = 0x1e8; // bool
		constexpr auto AnimationBlendoutTime = 0x1ec; // float
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x2c8; // FName
		constexpr auto bDelayedStart = 0x2d0; // char : 1
		constexpr auto NumSpectators = 0x2d4; // int32_t
		constexpr auto NumPlayers = 0x2d8; // int32_t
		constexpr auto NumBots = 0x2dc; // int32_t
		constexpr auto MinRespawnDelay = 0x2e0; // float
		constexpr auto NumTravellingPlayers = 0x2e4; // int32_t
		constexpr auto EngineMessageClass = 0x2e8; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x2f0; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x300; // float
		constexpr auto MaxInactivePlayers = 0x304; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x308; // bool
	}

	namespace n_UTigerBaseThrallData {
		constexpr auto ThrallId = 0x30; // ETigerThrallId
		constexpr auto ThrallName = 0x38; // FText
		constexpr auto ThrallDescription = 0x50; // FText
		constexpr auto ThrallHintText = 0x68; // FText
		constexpr auto ThrallPortraits = 0x80; // TArray<UTexture2D*>
		constexpr auto ThrallKeepsakeName = 0x90; // FText
		constexpr auto ThrallKeepsakePortrait = 0xa8; // UTexture2D*
		constexpr auto StartingStats = 0xb0; // FTigerThrallStats
		constexpr auto GrimoireEntry = 0xc0; // UTigerGrimoireEntry*
	}

	namespace n_UTigerReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto LastViewer = 0x68; // AActor*
		constexpr auto LastViewTarget = 0x70; // AActor*
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UTigerDialogueCondition_SeasonLevel {
		constexpr auto RequiredSeasonLevel = 0x30; // int32_t
		constexpr auto SeasonEquality = 0x34; // ETigerDialogueEqualitySpecifier
	}

	namespace n_UTigerResurrectComponent {
		constexpr auto TokenCount = 0xb0; // int32_t
		constexpr auto MyPawnToResurrect = 0xc8; // ATigerPlayer*
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_UTBP_ContextualHelp_Ping_TipsOnSpawn_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UTigerAIUpdateBloodDrainedService {
		constexpr auto MaxTimeInBloodDrainedState = 0x70; // float
	}

	namespace n_UTigerGroupCoordinator {
		constexpr auto Groups = 0xb8; // TArray<UTigerPlayerGroup*>
	}

	namespace n_ATigerSingleItemSpawner {
		constexpr auto TelemetryIDSource = 0x268; // ETigerTelemetryItemSourceID
	}

	namespace n_UTigerFirstTimeArchetypeSelectionUI {
		constexpr auto OnPreloadingDone = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnSelectedArchetypeChanged = 0x3c0; // FMulticastInlineDelegate
		constexpr auto CameraSocketName = 0x3d0; // FName
		constexpr auto AnimationSequenceName = 0x3d8; // FName
		constexpr auto CharacterSelectedAudioEvent = 0x3e0; // UAkAudioEvent*
		constexpr auto CharacterHoveredAudioEvent = 0x3e8; // UAkAudioEvent*
		constexpr auto EnterElysiumAudioEvent = 0x3f0; // UAkAudioEvent*
		constexpr auto DefaultSelectedArchetype = 0x3f8; // ETigerPowerKitType
		constexpr auto PaperDollClass = 0x400; // TSoftClassPtr<UObject>
		constexpr auto CachedPaperDollClass = 0x428; // ATigerPaperDoll*
		constexpr auto PaperDoll = 0x430; // ATigerPaperDoll*
		constexpr auto SelectedAppearanceIndex = 0x438; // int32_t
		constexpr auto SelectedArchetypeType = 0x43c; // ETigerPowerKitType
		constexpr auto CurrentClanData = 0x440; // UTigerPlayerClanData*
		constexpr auto ArchetypeApperances = 0x448; // TArray<FTigerCharacterAppearance>
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x228; // UPhysicsThrusterComponent*
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UTigerAIReportSuspciousPlayer {
		constexpr auto PoliceTarget = 0x70; // FBlackboardKeySelector
		constexpr auto CurrentMasqueradeTarget = 0x98; // FBlackboardKeySelector
		constexpr auto PlayerNeedsToBeReported = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UTigerAICoordinator {
		constexpr auto SprintTimeUntilReport = 0xb0; // float
		constexpr auto ClimbTimeUntilReport = 0xb4; // float
		constexpr auto AirTimeUntilReport = 0xb8; // float
		constexpr auto SuspicionStateTime = 0xbc; // float
		constexpr auto ThreatStateTime = 0xc0; // float
		constexpr auto SuspiciousStateEscapeRadiusSquared = 0xc4; // float
		constexpr auto ThreatenedStateEscapeRadiusSquared = 0xc8; // float
		constexpr auto MakeNearbyNPCsSuspiciousRadius = 0xcc; // float
		constexpr auto FearValueDecreasePerSecond = 0xd0; // float
		constexpr auto CrimeActionCooldownDistance = 0xd4; // float
		constexpr auto CrimeActionMasqueradePointThreshold = 0xdc; // float
		constexpr auto PatrollingHelicopterEventRadius = 0xe0; // float
		constexpr auto PatrollingHelicopterLowestResponseHeight = 0xe4; // float
		constexpr auto PatrollingHelicopterEventTimeOut = 0xe8; // float
		constexpr auto PatrollingHelicopterTimeBetweenGunfireEventPositionUpdate = 0xec; // float
		constexpr auto TimeInSmokeUntilRemoval = 0xf0; // float
		constexpr auto bUseMovementTickets = 0xf4; // bool
		constexpr auto MovementBudgetAsset = 0xf8; // UTigerAiMovementBudgetAsset*
		constexpr auto bPatrollingHelicotpersAreActive = 0x100; // bool
		constexpr auto EntityPatrollingHelicopters = 0x198; // TArray<ATigerEntityPatrollingHelicopter*>
		constexpr auto EntityPlatoons = 0x228; // TArray<UTigerAiEntityPlatoon*>
		constexpr auto Squads = 0x238; // TArray<UTigerAiSquad*>
		constexpr auto PlayerGrid = 0x2e8; // ATigerPlayerGrid*
		constexpr auto DelayedPlayerActionProcesses = 0x3b8; // TArray<FTigerPlayerActionProcessData>
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x270; // char : 1
		constexpr auto DamagePerSec = 0x274; // float
		constexpr auto DamageType = 0x278; // UDamageType*
		constexpr auto PainInterval = 0x280; // float
		constexpr auto bEntryPain = 0x284; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x284; // char : 1
		constexpr auto DamageInstigator = 0x288; // AController*
	}

	namespace n_UTigerItemAsset {
		constexpr auto StaticMesh = 0x38; // UStaticMesh*
		constexpr auto ItemType = 0x40; // ETigerInventoryItemType
		constexpr auto ItemRarity = 0x41; // ETigerItemRarity
		constexpr auto Name = 0x48; // FText
		constexpr auto ShortName = 0x60; // FText
		constexpr auto MaxStackSize = 0x78; // int32_t
		constexpr auto DropFromStackCount = 0x7c; // int32_t
		constexpr auto Description = 0x80; // FText
		constexpr auto LowerRarity = 0x98; // UTigerItemAsset*
		constexpr auto SortWithinCategoryAscending = 0xa0; // int32_t
		constexpr auto TooltipItemType = 0xa8; // FText
		constexpr auto UIIcon = 0xc0; // UTexture2D*
		constexpr auto HUDIcon = 0xc8; // UTexture2D*
		constexpr auto WeaponClass = 0xd0; // UTigerWeapon*
		constexpr auto ItemBuff = 0xd8; // UTigerBuff*
		constexpr auto bShouldAutoPickUpItem = 0xe0; // bool
		constexpr auto bTriggerBuffOnItemPickup = 0xe1; // bool
		constexpr auto bRemoveBuffOnItemDropped = 0xe2; // bool
		constexpr auto PingWantVoiceAudioEvent = 0xe8; // UAkAudioEvent*
		constexpr auto PingHaveVoiceAudioEvent = 0xf0; // UAkAudioEvent*
		constexpr auto PingHereVoiceAudioEvent = 0xf8; // UAkAudioEvent*
		constexpr auto PickUpAudioEvent = 0x100; // UAkAudioEvent*
		constexpr auto PersistentTelemetryID = 0x108; // uint64_t
		constexpr auto EntryToUnlock = 0x110; // UTigerGrimoireEntry*
		constexpr auto EntryId = 0x118; // FString
	}

	namespace n_UTBP_ANS_UseVDM_C {
		constexpr auto Type = 0x30; // int32_t
		constexpr auto DetachMethod = 0x34; // ETigerDetachMethod
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_UABP_PoseableMesh_F_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x348; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x358; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x480; // FAnimNode_ModifyBone
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xb0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xc0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xc0; // char : 1
		constexpr auto bInterpolateTarget = 0xc0; // char : 1
		constexpr auto LinearDamping = 0xc4; // float
		constexpr auto LinearStiffness = 0xc8; // float
		constexpr auto AngularDamping = 0xcc; // float
		constexpr auto AngularStiffness = 0xd0; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerBuff {
		constexpr auto StatModification = 0x30; // FTigerCharacterStatModification
		constexpr auto StatusEffect = 0xc0; // FTigerStatusEffect
		constexpr auto Duration = 0xcc; // float
		constexpr auto bDoesTick = 0xd0; // bool
		constexpr auto TimeBetweenTicks = 0xd4; // float
		constexpr auto ActivatedNiagaraAttachment = 0xd8; // FTigerNiagaraAttachment
		constexpr auto NiagaraAttachment = 0x120; // FTigerNiagaraAttachment
		constexpr auto AdditionalNiagaraAttachments = 0x168; // TArray<FTigerNiagaraAttachment>
		constexpr auto DeactivatedNiagaraAttachment = 0x178; // FTigerNiagaraAttachment
		constexpr auto bOnlySpawnBuffParticleOnLocalPlayer = 0x1c0; // bool
		constexpr auto bAttachToMesh = 0x1c1; // bool
		constexpr auto AttachPoint = 0x1c4; // FName
		constexpr auto bBuffParticleTypeAbsoluteRotation = 0x1cc; // bool
		constexpr auto BuffParticleType = 0x1d0; // UParticleSystem*
		constexpr auto bOnlySpawnActivatedParticleOnLocalPlayer = 0x1d8; // bool
		constexpr auto bAttachActivatedParticle = 0x1d9; // bool
		constexpr auto bActivatedParticleTypeAbsoluteRotation = 0x1da; // bool
		constexpr auto ActivatedParticleType = 0x1e0; // UParticleSystem*
		constexpr auto bOnlySpawnDeactivatedParticleOnLocalPlayer = 0x1e8; // bool
		constexpr auto bAttachDeactivatedParticle = 0x1e9; // bool
		constexpr auto bDeactivatedParticleTypeAbsoluteRotation = 0x1ea; // bool
		constexpr auto DeactivatedParticleType = 0x1f0; // UParticleSystem*
		constexpr auto ActivationMontageName = 0x1f8; // FName
		constexpr auto ActivatedSFX = 0x200; // UAkAudioEvent*
		constexpr auto DeactivatedSFX = 0x208; // UAkAudioEvent*
		constexpr auto bStacks = 0x210; // bool
		constexpr auto bOnlyStackWithDifferentCasters = 0x211; // bool
		constexpr auto MaxStacks = 0x214; // int32_t
		constexpr auto bKeepAfterDeath = 0x218; // bool
		constexpr auto RemoveBuffOnActions = 0x21c; // int32_t
		constexpr auto bShowOnUI = 0x220; // bool
		constexpr auto StatusImage = 0x228; // UTexture2D*
		constexpr auto StatusType = 0x230; // ETigerBuffStatusType
		constexpr auto ProgressType = 0x231; // ETigerBuffProgressType
		constexpr auto PostProcessEffect = 0x238; // ATigerBuffPostProcess*
		constexpr auto PersistentTelemetryID = 0x240; // uint64_t
	}

	namespace n_UTigerBuffFrenzyInstance {
		constexpr auto FrenzyBuff = 0x88; // UTigerBuffFrenzy*
	}

	namespace n_ATigerInteractiveGrimoireProp {
		constexpr auto ItemMesh = 0x280; // UStaticMeshComponent*
		constexpr auto EntryToUnlock = 0x288; // UTigerGrimoireEntry*
		constexpr auto GrimoireSubmenu = 0x290; // UTigerIngameSubmenuWidget*
		constexpr auto CustomStencilGroup = 0x298; // char
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x458; // TArray<FNavigationLink>
	}

	namespace n_UTigerSignificanceSettings {
		constexpr auto Budgets = 0x38; // FTigerSignificanceBudget [0x2]
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_AMagicLeapARPinInfoActorBase {
		constexpr auto PinId = 0x228; // FGuid
		constexpr auto bVisibilityOverride = 0x238; // bool
	}

	namespace n_UTigerDistrictComponent {
		constexpr auto bIsInsideHolyIncense = 0xc0; // bool
		constexpr auto bIsOutOfBounds = 0xc1; // bool
		constexpr auto DistanceToHolyIncense = 0xc4; // float
		constexpr auto ClosestGasLocation = 0xc8; // FVector2D
		constexpr auto ClosestGasNormal = 0xd0; // FVector2D
		constexpr auto OutOfBoundsDamagePerTick = 0xd8; // float
		constexpr auto OutOfBoundsDamageTickInterval = 0xdc; // float
		constexpr auto EffectStrengthScaling = 0xe8; // UCurveFloat*
		constexpr auto bDebugEffectStrength = 0xf0; // bool
		constexpr auto TigerCharacter = 0xf8; // ATigerCharacter*
		constexpr auto TigerLevelScriptActor = 0x100; // ATigerLevelScriptActor*
		constexpr auto DamageTimerHandle = 0x108; // FTimerHandle
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x228; // int32_t
		constexpr auto MaxPlayers = 0x22c; // int32_t
		constexpr auto MaxPartySize = 0x230; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x234; // char
		constexpr auto bRequiresPushToTalk = 0x235; // bool
		constexpr auto SessionName = 0x238; // FName
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x228; // URadialForceComponent*
	}

	namespace n_UTigerCharacterHeadConfiguration {
		constexpr auto SplitMesh = 0x110; // FTigerLodSplitMesh
		constexpr auto FacePostAsset = 0x188; // TSoftObjectPtr<UPoseAsset>
		constexpr auto FacePoseSourceAnimation = 0x1b0; // TSoftObjectPtr<UAnimSequence>
		constexpr auto BodySkinMaterials = 0x1d8; // TArray<TSoftObjectPtr<UMaterialInterface>>
		constexpr auto SkinTones = 0x1e8; // TArray<TSoftClassPtr<UObject>>
		constexpr auto HeadgearMaleSocket = 0x1f8; // FName
		constexpr auto HeadgearFemaleSocket = 0x200; // FName
		constexpr auto HeadgearOffsetSocketName = 0x208; // FName
		constexpr auto HeadgearOffsetLocator = 0x210; // FName
		constexpr auto HeadgearOffset = 0x218; // FTigerCharacterHeadHeadgearOffset
		constexpr auto EyewearSocket = 0x230; // FName
		constexpr auto Mesh = 0x238; // TSoftObjectPtr<USkeletalMesh>
	}

	namespace n_UTigerMultiplayRegionCache {
		constexpr auto RefreshRegionsIntervalSeconds = 0x40; // float
		constexpr auto MaxWaitTimeSecondsAfterRegionDetermination = 0x44; // float
		constexpr auto PingerSettings = 0x48; // FTigerRegionPingerSettings
		constexpr auto MinimumMeasurementTime = 0x98; // float
		constexpr auto DesiredMeasuredRegions = 0x9c; // int32_t
	}

	namespace n_UTBP_AN_AttachProp_C {
		constexpr auto AttachIdentifier = 0x38; // FName
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x4b8; // UPaperFlipbookComponent*
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UTigerQuestObjective {
		constexpr auto Description = 0x28; // FText
		constexpr auto FlavourText = 0x40; // FText
		constexpr auto Objective = 0x58; // UTigerChallenge*
		constexpr auto bComplete = 0x60; // bool
		constexpr auto FollowOnObjectives = 0x68; // TArray<UTigerQuestObjective*>
		constexpr auto ID = 0x78; // FGuid
		constexpr auto ParentQuest = 0x88; // UTigerQuest*
		constexpr auto ParentObjective = 0x90; // UTigerQuestObjective*
		constexpr auto OwningPlayerController = 0x98; // ATigerPlayerController*
	}

	namespace n_ATBP_StakeProjectile_C {
		constexpr auto UberGraphFrame = 0x3e0; // FPointerToUberGraphFrame
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4e0; // float
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x228; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x230; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x248; // bool
		constexpr auto bDebugDrawHierarchy = 0x249; // bool
		constexpr auto bDebugDrawClustering = 0x24a; // bool
		constexpr auto HideGeometry = 0x24b; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x24c; // bool
		constexpr auto bShowRigidBodyCollision = 0x24d; // bool
		constexpr auto bCollisionAtOrigin = 0x24e; // bool
		constexpr auto bShowRigidBodyTransform = 0x24f; // bool
		constexpr auto bShowRigidBodyInertia = 0x250; // bool
		constexpr auto bShowRigidBodyVelocity = 0x251; // bool
		constexpr auto bShowRigidBodyForce = 0x252; // bool
		constexpr auto bShowRigidBodyInfos = 0x253; // bool
		constexpr auto bShowTransformIndex = 0x254; // bool
		constexpr auto bShowTransform = 0x255; // bool
		constexpr auto bShowParent = 0x256; // bool
		constexpr auto bShowLevel = 0x257; // bool
		constexpr auto bShowConnectivityEdges = 0x258; // bool
		constexpr auto bShowGeometryIndex = 0x259; // bool
		constexpr auto bShowGeometryTransform = 0x25a; // bool
		constexpr auto bShowBoundingBox = 0x25b; // bool
		constexpr auto bShowFaces = 0x25c; // bool
		constexpr auto bShowFaceIndices = 0x25d; // bool
		constexpr auto bShowFaceNormals = 0x25e; // bool
		constexpr auto bShowSingleFace = 0x25f; // bool
		constexpr auto SingleFaceIndex = 0x260; // int32_t
		constexpr auto bShowVertices = 0x264; // bool
		constexpr auto bShowVertexIndices = 0x265; // bool
		constexpr auto bShowVertexNormals = 0x266; // bool
		constexpr auto bUseActiveVisualization = 0x267; // bool
		constexpr auto PointThickness = 0x268; // float
		constexpr auto LineThickness = 0x26c; // float
		constexpr auto bTextShadow = 0x270; // bool
		constexpr auto TextScale = 0x274; // float
		constexpr auto NormalScale = 0x278; // float
		constexpr auto AxisScale = 0x27c; // float
		constexpr auto ArrowScale = 0x280; // float
		constexpr auto RigidBodyIdColor = 0x284; // FColor
		constexpr auto RigidBodyTransformScale = 0x288; // float
		constexpr auto RigidBodyCollisionColor = 0x28c; // FColor
		constexpr auto RigidBodyInertiaColor = 0x290; // FColor
		constexpr auto RigidBodyVelocityColor = 0x294; // FColor
		constexpr auto RigidBodyForceColor = 0x298; // FColor
		constexpr auto RigidBodyInfoColor = 0x29c; // FColor
		constexpr auto TransformIndexColor = 0x2a0; // FColor
		constexpr auto TransformScale = 0x2a4; // float
		constexpr auto LevelColor = 0x2a8; // FColor
		constexpr auto ParentColor = 0x2ac; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2b0; // float
		constexpr auto GeometryIndexColor = 0x2b4; // FColor
		constexpr auto GeometryTransformScale = 0x2b8; // float
		constexpr auto BoundingBoxColor = 0x2bc; // FColor
		constexpr auto FaceColor = 0x2c0; // FColor
		constexpr auto FaceIndexColor = 0x2c4; // FColor
		constexpr auto FaceNormalColor = 0x2c8; // FColor
		constexpr auto SingleFaceColor = 0x2cc; // FColor
		constexpr auto VertexColor = 0x2d0; // FColor
		constexpr auto VertexIndexColor = 0x2d4; // FColor
		constexpr auto VertexNormalColor = 0x2d8; // FColor
		constexpr auto SpriteComponent = 0x2e0; // UBillboardComponent*
	}

	namespace n_UMovieSceneAkAudioEventSection {
		constexpr auto Event = 0x128; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x130; // bool
		constexpr auto ScrubTailLengthMs = 0x134; // int32_t
		constexpr auto StopAtSectionEnd = 0x138; // bool
		constexpr auto EventName = 0x140; // FString
		constexpr auto MaxSourceDuration = 0x170; // float
		constexpr auto MaxDurationSourceID = 0x178; // FString
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x468; // FVector
		constexpr auto LineThickness = 0x474; // float
	}

	namespace n_ATigerBloodVein {
		constexpr auto OnEndOfVeinReached = 0x228; // FMulticastInlineDelegate
		constexpr auto Spline = 0x238; // USplineComponent*
		constexpr auto CurrentPlayerSpot = 0x240; // USceneComponent*
		constexpr auto EarliestDisconnectPoint = 0x248; // float
		constexpr auto LatestDisconnectPoint = 0x24c; // float
		constexpr auto VeinMovementSpeed = 0x250; // float
		constexpr auto bIsVeinActive = 0x254; // bool
		constexpr auto HolyIncense = 0x258; // ATigerHolyIncense*
		constexpr auto StartSynchronizedTime = 0x26c; // float
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x450; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x458; // bool
		constexpr auto bFilledSpline = 0x459; // bool
		constexpr auto AssociatedSpline = 0x460; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x468; // int32_t
		constexpr auto SegmentOverlapAmount = 0x46c; // float
		constexpr auto TerrainColor = 0x470; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x480; // int32_t
		constexpr auto SpriteCollisionDomain = 0x484; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x488; // float
		constexpr auto CachedBodySetup = 0x490; // UBodySetup*
	}

	namespace n_UTigerTraversalStateWallJumpConfig {
		constexpr auto DefaultWallJumpBlendBundle = 0x50; // FTigerWallJumpBlendBundle
		constexpr auto WallJumpBlendBundleFromClimb = 0x60; // FTigerWallJumpBlendBundle
		constexpr auto WallJumpColliderOffset = 0x70; // FVector
		constexpr auto PostJumpClimbInteractionDelay = 0x7c; // float
		constexpr auto JumpCoolDownTime = 0x80; // float
		constexpr auto WallJumpSphereColliderRadius = 0x84; // float
		constexpr auto SecondaryWallSweepRadius = 0x88; // float
		constexpr auto MaximumHorizontalJumpVelocity = 0x8c; // float
		constexpr auto MinimumHorizontalJumpVelocity = 0x90; // float
		constexpr auto WallJumpZVelocity = 0x94; // float
		constexpr auto WallJumpInputDirectionCutOffAngle = 0x98; // float
		constexpr auto MaxWallJumpStateDuration = 0x9c; // float
		constexpr auto WallJumpDownwardWallNormalCutOffAngle = 0xa0; // float
		constexpr auto WallJumpRequiredHalfAngleFromWallWhenHoldingForward = 0xa4; // float
		constexpr auto WallJumpDeadzoneHalfAngle = 0xa8; // float
		constexpr auto WallJumpMaxAllowedHalfAngleBeforeClamping = 0xac; // float
		constexpr auto bShouldCapNumberOfWallJumpsFromSimilarWalls = 0xb0; // bool
		constexpr auto ConsecutiveWallJumpNormalLikenessThreshold = 0xb4; // float
		constexpr auto WallJumpDelayTime = 0xb8; // float
		constexpr auto WallJumpDownwardSpeedGainInSeconds = 0xbc; // float
		constexpr auto WallJumpSlideSpeedScale = 0xc0; // float
		constexpr auto WallJumpMinimumWallSlideSpeed = 0xc4; // float
		constexpr auto WallJumpMaximumWallSlideSpeed = 0xc8; // float
		constexpr auto WallJumpForwardHalfAngleAnimationCutOff = 0xcc; // float
		constexpr auto WallJumpInputOption = 0xd0; // ETigerWallJumpInputOption
		constexpr auto MaximumNumberOfWallJumpsFromSimilarWall = 0xd1; // char
		constexpr auto NumberOfWallJumpsToRestoreOnDoubleJump = 0xd2; // char
		constexpr auto bShouldApplyDownwardForceDuringWallJumpDelay = 0xd3; // bool
		constexpr auto AdjustWallJumpSlideSpeedOnInputAngle = 0xd4; // bool
		constexpr auto bShouldValidateDownwardAngleOfHitResult = 0xd5; // bool
		constexpr auto WallJumpDelaySpeedCurve = 0xd8; // UCurveFloat*
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x278; // FARPointUpdatePayload
	}

	namespace n_UTigerDialogueCondition_Quest {
		constexpr auto Requirement = 0x30; // ETigerDialogueQuestRequirementSpecifier
		constexpr auto questIdToCheck = 0x38; // FTigerQuestIdentifier
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_ATBP_BlindingBeauty_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto PostProcess = 0x240; // UPostProcessComponent*
		constexpr auto Sphere = 0x248; // USphereComponent*
		constexpr auto DefaultSceneRoot = 0x250; // USceneComponent*
		constexpr auto UpdateAnticipationVisibility_NewTrack_0_F0F03A1D44C8206BF3C18B8D5DDCCB03 = 0x258; // float
		constexpr auto UpdateAnticipationVisibility__Direction_F0F03A1D44C8206BF3C18B8D5DDCCB03 = 0x25c; // ETimelineDirection
		constexpr auto UpdateAnticipationVisibility = 0x260; // UTimelineComponent*
		constexpr auto Timeline_0_NewTrack_0_975FED8B458A734F1FB99DAE89CB25E3 = 0x268; // float
		constexpr auto Timeline_0__Direction_975FED8B458A734F1FB99DAE89CB25E3 = 0x26c; // ETimelineDirection
		constexpr auto Timeline_1 = 0x270; // UTimelineComponent*
		constexpr auto GlowCurve_NewTrack_0_50A9B99C47A6E2549D5E76977AAB52D1 = 0x278; // float
		constexpr auto GlowCurve__Direction_50A9B99C47A6E2549D5E76977AAB52D1 = 0x27c; // ETimelineDirection
		constexpr auto GlowCurve = 0x280; // UTimelineComponent*
		constexpr auto AreaSize = 0x288; // FVector
		constexpr auto IsInDash = 0x294; // bool
		constexpr auto NewVar_1 = 0x298; // UParticleSystemComponent*
		constexpr auto AnticipationPhase = 0x2a0; // bool
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x230; // UDrawSphereComponent*
	}

	namespace n_UTigerAnimMetaDataAsset {
		constexpr auto AnimMetaData = 0x30; // TMap<FName, UAnimMetaData*>
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UTBP_EyebrowColorCustomization_Master_C {
		constexpr auto UberGraphFrame = 0x148; // FPointerToUberGraphFrame
	}

	namespace n_UABP_VMP_NOS_M_HAIR_03_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x1f8; // USoundBase*
		constexpr auto InstanceParameters = 0x200; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x210; // USoundClass*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x218; // char : 1
		constexpr auto bAllowSpatialization = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x218; // char : 1
		constexpr auto bIsUISound = 0x218; // char : 1
		constexpr auto bEnableLowPassFilter = 0x218; // char : 1
		constexpr auto bOverridePriority = 0x219; // char : 1
		constexpr auto bSuppressSubtitles = 0x219; // char : 1
		constexpr auto bAutoManageAttachment = 0x21a; // char : 1
		constexpr auto AudioComponentUserID = 0x220; // FName
		constexpr auto PitchModulationMin = 0x228; // float
		constexpr auto PitchModulationMax = 0x22c; // float
		constexpr auto VolumeModulationMin = 0x230; // float
		constexpr auto VolumeModulationMax = 0x234; // float
		constexpr auto VolumeMultiplier = 0x238; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x23c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x240; // int32_t
		constexpr auto Priority = 0x244; // float
		constexpr auto SubtitlePriority = 0x248; // float
		constexpr auto SourceEffectChain = 0x250; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x258; // float
		constexpr auto LowPassFilterFrequency = 0x25c; // float
		constexpr auto AttenuationSettings = 0x268; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x270; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x610; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x618; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x674; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x675; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x676; // EAttachmentRule
		constexpr auto ModulationRouting = 0x678; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x710; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x738; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x760; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x788; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7b0; // FDelegate
		constexpr auto AutoAttachParent = 0x7c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7c8; // FName
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x438; // char : 1
		constexpr auto bDrawPolyEdges = 0x438; // char : 1
		constexpr auto bDrawFilledPolys = 0x438; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x438; // char : 1
		constexpr auto bDrawTileBounds = 0x438; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x438; // char : 1
		constexpr auto bDrawTileLabels = 0x438; // char : 1
		constexpr auto bDrawPolygonLabels = 0x438; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x439; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x439; // char : 1
		constexpr auto bDrawNavLinks = 0x439; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x439; // char : 1
		constexpr auto bDrawClusters = 0x439; // char : 1
		constexpr auto bDrawOctree = 0x439; // char : 1
		constexpr auto bDrawOctreeDetails = 0x439; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x439; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x43a; // char : 1
		constexpr auto DrawOffset = 0x43c; // float
		constexpr auto bFixedTilePoolSize = 0x440; // char : 1
		constexpr auto TilePoolSize = 0x444; // int32_t
		constexpr auto TileSizeUU = 0x448; // float
		constexpr auto CellSize = 0x44c; // float
		constexpr auto CellHeight = 0x450; // float
		constexpr auto AgentRadius = 0x454; // float
		constexpr auto AgentHeight = 0x458; // float
		constexpr auto AgentMaxSlope = 0x45c; // float
		constexpr auto AgentMaxStepHeight = 0x460; // float
		constexpr auto MinRegionArea = 0x464; // float
		constexpr auto MergeRegionSize = 0x468; // float
		constexpr auto MaxSimplificationError = 0x46c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x470; // int32_t
		constexpr auto TileNumberHardLimit = 0x474; // int32_t
		constexpr auto PolyRefTileBits = 0x478; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x47c; // int32_t
		constexpr auto PolyRefSaltBits = 0x480; // int32_t
		constexpr auto NavMeshOriginOffset = 0x484; // FVector
		constexpr auto DefaultDrawDistance = 0x490; // float
		constexpr auto DefaultMaxSearchNodes = 0x494; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x498; // float
		constexpr auto RegionPartitioning = 0x49c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x49d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x4a0; // int32_t
		constexpr auto LayerChunkSplits = 0x4a4; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x4a8; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x4a8; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x4a8; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x4a8; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x4a8; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x4a8; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x4a8; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x4a8; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x4a9; // char : 1
		constexpr auto bUseVirtualFilters = 0x4a9; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x4a9; // char : 1
		constexpr auto bUseVoxelCache = 0x4a9; // char : 1
		constexpr auto TileSetUpdateInterval = 0x4ac; // float
		constexpr auto HeuristicScale = 0x4b0; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4b4; // float
	}

	namespace n_UTigerDisciplineTeleport {
		constexpr auto Config = 0x78; // UTigerTeleportConfig*
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a0; // bool
		constexpr auto PhysicalAnimationData = 0x2a8; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xf0; // EPixelFormat
	}

	namespace n_UTigerChallengeDownPlayer {
		constexpr auto RequiredWeaponConstraint = 0xb0; // FTigerChallengeRequirementWeaponType
	}

	namespace n_UTigerAnimNotifyState_CancelReactionIfThreatened {
		constexpr auto StateToCancelFor = 0x30; // ETigerAIAnimationMode
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x450; // UModel*
		constexpr auto BrushBodySetup = 0x458; // UBodySetup*
	}

	namespace n_UTigerHealingBuff {
		constexpr auto FlatHealPerSecond = 0x248; // float
		constexpr auto PercentageHealPerSecond = 0x24c; // float
		constexpr auto HealEffect = 0x250; // UTigerCharacterEffect*
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x258; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x260; // UNetConnection*
		constexpr auto ConnectionState = 0x268; // EBeaconConnectionState
	}

	namespace n_UTigerBuffVanishInstance {
		constexpr auto VanishBuff = 0x88; // UTigerBuffVanish*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x1f8; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x1fc; // float
		constexpr auto GroundAlbedo = 0x200; // FColor
		constexpr auto AtmosphereHeight = 0x204; // float
		constexpr auto MultiScatteringFactor = 0x208; // float
		constexpr auto TraceSampleCountScale = 0x20c; // float
		constexpr auto RayleighScatteringScale = 0x210; // float
		constexpr auto RayleighScattering = 0x214; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x224; // float
		constexpr auto MieScatteringScale = 0x228; // float
		constexpr auto MieScattering = 0x22c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x23c; // float
		constexpr auto MieAbsorption = 0x240; // FLinearColor
		constexpr auto MieAnisotropy = 0x250; // float
		constexpr auto MieExponentialDistribution = 0x254; // float
		constexpr auto OtherAbsorptionScale = 0x258; // float
		constexpr auto OtherAbsorption = 0x25c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x26c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x278; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x288; // float
		constexpr auto HeightFogContribution = 0x28c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x290; // float
		constexpr auto AerialPerspectiveStartDepth = 0x294; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2bc; // FGuid
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x288; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x290; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x298; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x2a0; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2d0; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x300; // float
		constexpr auto BaseTranslationOffset = 0x304; // FVector
		constexpr auto BaseRotationOffset = 0x310; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x320; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x324; // float
		constexpr auto ReplicatedMovementMode = 0x328; // char
		constexpr auto bInBaseReplication = 0x329; // bool
		constexpr auto CrouchedEyeHeight = 0x32c; // float
		constexpr auto bIsCrouched = 0x330; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x330; // char : 1
		constexpr auto bPressedJump = 0x330; // char : 1
		constexpr auto bClientUpdating = 0x330; // char : 1
		constexpr auto bClientWasFalling = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x330; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x330; // char : 1
		constexpr auto bSimGravityDisabled = 0x330; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x331; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x331; // char : 1
		constexpr auto bWasJumping = 0x331; // char : 1
		constexpr auto JumpKeyHoldTime = 0x334; // float
		constexpr auto JumpForceTimeRemaining = 0x338; // float
		constexpr auto ProxyJumpForceStartedTime = 0x33c; // float
		constexpr auto JumpMaxHoldTime = 0x340; // float
		constexpr auto JumpMaxCount = 0x344; // int32_t
		constexpr auto JumpCurrentCount = 0x348; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x34c; // int32_t
		constexpr auto OnReachedJumpApex = 0x358; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x378; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x388; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x398; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3d0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x410; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x420; // FRepRootMotionMontage
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_UTigerDialogueCondition_MatchCount {
		constexpr auto RequiredMatches = 0x30; // int32_t
		constexpr auto MatchEquality = 0x34; // ETigerDialogueEqualitySpecifier
	}

	namespace n_ATigerSharkDeathTriggerVolume {
		constexpr auto Shark = 0x260; // AActor*
		constexpr auto SharkRotation = 0x268; // FRotator
		constexpr auto SharkSpawnLocationOffset = 0x274; // FVector
		constexpr auto KillDelay = 0x280; // float
		constexpr auto SavedVictims = 0x288; // TArray<ATigerCharacter*>
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x230; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x230; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x230; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x230; // char : 1
		constexpr auto BaseEyeHeight = 0x234; // float
		constexpr auto AutoPossessPlayer = 0x238; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x239; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x23a; // char
		constexpr auto AIControllerClass = 0x240; // AController*
		constexpr auto PlayerState = 0x248; // APlayerState*
		constexpr auto LastHitBy = 0x258; // AController*
		constexpr auto Controller = 0x260; // AController*
		constexpr auto ControlInputVector = 0x26c; // FVector
		constexpr auto LastControlInputVector = 0x278; // FVector
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_USharkRenderingSettings {
		constexpr auto CustomPrimitiveFloatDataNameMapping = 0x38; // int32_t [0x3a]
		constexpr auto CustomPrimitiveVector2DataNameMapping = 0x120; // int32_t [0x13]
		constexpr auto CustomPrimitiveVector3DataNameMapping = 0x16c; // int32_t [0x19]
		constexpr auto CustomPrimitiveVector4DataNameMapping = 0x1d0; // int32_t [0x9]
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARMeshUpdatePayload
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueID = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UTBP_ProjectionDash_C {
		constexpr auto UberGraphFrame = 0x168; // FPointerToUberGraphFrame
		constexpr auto FullscreenFurthestFocusPoint = 0x170; // float
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UTBP_UI_ArchetypeSelect_Clan_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto ArchetypeHorizontalBox = 0x268; // UHorizontalBox*
		constexpr auto ClanImageWidget = 0x270; // UImage*
		constexpr auto ClanNameWidget = 0x278; // UTextBlock*
		constexpr auto ClanData = 0x280; // UTigerPlayerClanData*
		constexpr auto ArchetypeWidgets = 0x288; // TArray<UUserWidget*>
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x2e8; // FString
		constexpr auto PendingReservation = 0x2f8; // FPartyReservation
		constexpr auto RequestType = 0x348; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x349; // bool
		constexpr auto bCancelReservation = 0x34a; // bool
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x238; // UPointLightComponent*
	}

	namespace n_UTigerBloodPotencyComponent {
		constexpr auto BloodTypeWeights = 0xb0; // float [0x4]
		constexpr auto bEnableBloodTypeEffects = 0xc0; // bool
		constexpr auto CurrentHeightenedSensesConfig = 0xc8; // UTigerBloodPotencyVisualizationConfig*
		constexpr auto CurrentInWorldConfig = 0xd0; // UTigerBloodPotencyVisualizationConfig*
		constexpr auto HeightenedSensesVisualConfiguration = 0xd8; // UTigerBloodPotencyVisualizationConfig* [0x4]
		constexpr auto HeightenedSensesVisualConfigurationByBloodType = 0xf8; // UTigerBloodPotencyVisualizationConfig* [0x4]
		constexpr auto InWorldVisualConfiguration = 0x118; // UTigerBloodPotencyVisualizationConfig* [0x4]
		constexpr auto InWorldVisualConfigurationByBloodType = 0x138; // UTigerBloodPotencyVisualizationConfig* [0x4]
		constexpr auto HeartMeshMaximumVisibilityDistanceName = 0x158; // FName
		constexpr auto HsMeshPreviousMaterials = 0x160; // TArray<UMaterialInstance*>
		constexpr auto HsMeshTargetMaterials = 0x170; // TArray<UMaterialInstance*>
		constexpr auto HsMeshCurrentMaterials = 0x180; // TArray<UMaterialInstanceDynamic*>
		constexpr auto HsSkeletalMeshComponent = 0x190; // USkeletalMeshComponent*
		constexpr auto HsParticleSystemComponent = 0x198; // UParticleSystemComponent*
		constexpr auto HsNiagaraComponent = 0x1a0; // UNiagaraComponent*
		constexpr auto InWorldMeshPreviousMaterials = 0x1a8; // TArray<UMaterialInstance*>
		constexpr auto InWorldMeshTargetMaterials = 0x1b8; // TArray<UMaterialInstance*>
		constexpr auto InWorldMeshCurrentMaterials = 0x1c8; // TArray<UMaterialInstanceDynamic*>
		constexpr auto InWorldSkeletalMeshComponent = 0x1d8; // USkeletalMeshComponent*
		constexpr auto InWorldParticleSystemComponent = 0x1e0; // UParticleSystemComponent*
		constexpr auto InWorldNiagaraComponent = 0x1e8; // UNiagaraComponent*
		constexpr auto NpcOwner = 0x1f0; // ATigerBaseNPC*
		constexpr auto MaterialInterpolationDuration = 0x208; // float
	}

	namespace n_ATigerInteractiveCollectible {
		constexpr auto Collectible = 0x290; // UTigerCollectibleData*
		constexpr auto CollectibleMesh = 0x298; // UStaticMeshComponent*
		constexpr auto CollectibleSoundEffect = 0x2a0; // UAkAudioEvent*
		constexpr auto CollectibleParticleSystem = 0x2a8; // UParticleSystemComponent*
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x1f8; // float
		constexpr auto FogHeightFalloff = 0x1fc; // float
		constexpr auto SecondFogData = 0x200; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x20c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x220; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x228; // float
		constexpr auto InscatteringTextureTint = 0x22c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x23c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x240; // float
		constexpr auto DirectionalInscatteringExponent = 0x244; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x248; // float
		constexpr auto DirectionalInscatteringColor = 0x24c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x25c; // float
		constexpr auto StartDistance = 0x260; // float
		constexpr auto FogCutoffDistance = 0x264; // float
		constexpr auto bEnableVolumetricFog = 0x268; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x26c; // float
		constexpr auto VolumetricFogAlbedo = 0x270; // FColor
		constexpr auto VolumetricFogEmissive = 0x274; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x284; // float
		constexpr auto VolumetricFogDistance = 0x288; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x28c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x290; // bool
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_UTigerAICommandPlayerProximityWait {
		constexpr auto SquaredPlayerProximityRadiusRequired = 0x40; // float
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto Position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_UTigerDialogueInteractionScreen {
		constexpr auto TransitionTime = 0x290; // float
		constexpr auto VendorNPC = 0x294; // TWeakObjectPtr<ATigerBaseNPC>
		constexpr auto TargetAnimationInstance = 0x29c; // TWeakObjectPtr<UTigerAnimInstance>
		constexpr auto InteractiveNpcComponent = 0x2a4; // TWeakObjectPtr<UTigerInteractiveNpcComponent>
	}

	namespace n_UTigerOutfitVendorUI {
		constexpr auto VendorComponent = 0x3b0; // UTigerVendorComponent*
		constexpr auto CurrentCategory = 0x3b8; // UTigerVendorStoreCategory*
	}

	namespace n_UTigerBuffThorns {
		constexpr auto HealInterval = 0x258; // float
		constexpr auto HealPercentage = 0x25c; // float
		constexpr auto HealEffect = 0x260; // UTigerCharacterEffect*
		constexpr auto DOTTriggerEvent = 0x268; // UAkAudioEvent*
	}

	namespace n_UTigerPassiveCollectorConfig {
		constexpr auto CarryCapacityMultiplier = 0x118; // float
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x310; // int32_t
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x7b0; // FCameraLookatTrackingSettings
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UTBP_UI_JoinElysiumScreen_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto ExitButton = 0x298; // UTBP_UI_MenuButton_C*
		constexpr auto LoadingThrobber = 0x2a0; // UThrobber*
		constexpr auto TBP_UI_BasicMenu = 0x2a8; // UTBP_UI_BasicMenu_C*
		constexpr auto TryAgainButton = 0x2b0; // UTBP_UI_MenuButton_C*
		constexpr auto GameInstanceRef = 0x2b8; // UTBP_TigerGameInstance_C*
		constexpr auto FoundSessions = 0x2c0; // TArray<FBlueprintSessionResult>
		constexpr auto ThrobberVisibility = 0x2d0; // ESlateVisibility
		constexpr auto TitleText = 0x2d8; // FText
		constexpr auto ButtonVisibility = 0x2f0; // ESlateVisibility
		constexpr auto OnFailed = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnSuccess = 0x308; // FMulticastInlineDelegate
		constexpr auto SelectedSession = 0x318; // FTigerBpFindSessionSelectedSession
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UTigerAiTryFindLocationAgainstElevatedTarget {
		constexpr auto TargetLocationKey = 0x70; // FBlackboardKeySelector
		constexpr auto SuggestedLocationKey = 0x98; // FBlackboardKeySelector
		constexpr auto MaxStepbackDistance = 0xc0; // float
		constexpr auto MinStepbackDistance = 0xc4; // float
		constexpr auto DesiredMaxVerticalAngle = 0xc8; // float
	}

	namespace n_UTBP_Buff_Syringe_C {
		constexpr auto UberGraphFrame = 0x258; // FPointerToUberGraphFrame
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UTigerAnimNotify_Ragdoll {
		constexpr auto RagdollOnlyBelowBone = 0x38; // FName
		constexpr auto bIncludeNamedBone = 0x40; // bool
		constexpr auto VelocityScale = 0x44; // float
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_UTigerNpcPropAsset {
		constexpr auto TagsToAddToNpc = 0x30; // TArray<FName>
		constexpr auto PropAnimationSet = 0x40; // UTigerAnimationSetAsset*
		constexpr auto HeldPropAttachments = 0x48; // TArray<FName>
	}

	namespace n_UTigerPlayerServerLoginProcess {
		constexpr auto playersBeingLoggedInToServerByUniqueLoginId = 0x28; // TMap<FString, UTigerPlayerBeingLoggedInToServer*>
		constexpr auto GroupCoordinator = 0x78; // UTigerGroupCoordinator*
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_UTigerAuthenticationManager {
		constexpr auto bEnableSharkmobAccountLogin = 0x68; // bool
		constexpr auto GameInstance = 0x70; // UTigerGameInstance*
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x228; // float
		constexpr auto bLockOrientationToRail = 0x22c; // bool
		constexpr auto TransformComponent = 0x230; // USceneComponent*
		constexpr auto RailSplineComponent = 0x238; // USplineComponent*
		constexpr auto RailCameraMount = 0x240; // USceneComponent*
	}

	namespace n_UTBP_UI_Divider_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Decoration = 0x268; // UImage*
		constexpr auto Left_Line = 0x270; // UImage*
		constexpr auto LeftArrow_2 = 0x278; // UImage*
		constexpr auto Line_2 = 0x280; // UImage*
		constexpr auto Line_Overlay = 0x288; // UOverlay*
		constexpr auto LineStyleIndex = 0x290; // UWidgetSwitcher*
		constexpr auto RightArrow_2 = 0x298; // UImage*
		constexpr auto RightLine = 0x2a0; // UImage*
		constexpr auto SizeBox_Override = 0x2a8; // USizeBox*
		constexpr auto ArrowSize = 0x2b0; // float
		constexpr auto EnableMiddleDecoration = 0x2b4; // bool
		constexpr auto ArrowTexture = 0x2b8; // UTexture2D*
		constexpr auto LineThickness = 0x2c0; // float
		constexpr auto LineTint = 0x2c8; // FSlateColor
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto RightField = 0xb8; // UFieldNodeBase*
		constexpr auto LeftField = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldOperationType
	}

	namespace n_UTigerSplatmapGenerationSettings {
		constexpr auto CellBounds = 0x28; // float
		constexpr auto CellCount = 0x2c; // FIntPoint
		constexpr auto CellTextureDimensions = 0x34; // FIntPoint
		constexpr auto CenterLocation = 0x3c; // FVector
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x238; // UBillboardComponent*
		constexpr auto BadSprite = 0x240; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x248; // char : 1
	}

	namespace n_ATeleportMarker_C {
		constexpr auto StaticMesh1 = 0x238; // UStaticMeshComponent*
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UTigerBloodTrackPassiveList {
		constexpr auto PassivesAvailableToAll = 0x30; // TArray<UTigerBloodTrackPassiveConfig*>
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UTigerBlueprintLootLocationComponent {
		constexpr auto Configuration = 0xb0; // UTigerLootLocationConfiguration*
		constexpr auto GameTypeFilter = 0xb8; // char
	}

	namespace n_UTBP_UI_VerificationSection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CTA_SignInButton = 0x268; // UTBP_UI_Button_CTA_C*
		constexpr auto CheckMailText = 0x270; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_Divider = 0x278; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_2 = 0x280; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Loading_Throbber_Verification = 0x288; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TBP_UI_SmallErrorMessage_Code = 0x290; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_SmallErrorMessage_Verification = 0x298; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_TextButton_Back = 0x2a0; // UTBP_UI_TextButton_C*
		constexpr auto TBP_UI_TextButton_NoEmail = 0x2a8; // UTBP_UI_TextButton_C*
		constexpr auto VerificationCodeBox = 0x2b0; // UTBP_UI_AdvancedTextBox_C*
		constexpr auto VerificationCodeToText = 0x2b8; // UTigerStyledRichTextBlock*
		constexpr auto DescriptionFormat = 0x2c0; // FText
		constexpr auto RegisterAction = 0x2d8; // FMulticastInlineDelegate
		constexpr auto BackAction = 0x2e8; // FMulticastInlineDelegate
		constexpr auto LoginScreen = 0x2f8; // UTBP_UI_LoginScreen_C*
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xb0; // APawn*
		constexpr auto ActionStacks = 0xb8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xc8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xd8; // UPawnAction*
	}

	namespace n_UTigerRepositionConfig {
		constexpr auto TracerActor = 0x160; // ATigerRepositionTracer*
		constexpr auto RewindBuff = 0x168; // UTigerBuffReposition*
		constexpr auto RewindTimeSeconds = 0x170; // float
		constexpr auto SampleRate = 0x174; // float
		constexpr auto RewindSpeed = 0x178; // float
		constexpr auto RewindPlaybackTimeMin = 0x17c; // float
		constexpr auto RewindPlaybackTimeMax = 0x180; // float
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x228; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x230; // FGuid
		constexpr auto LandscapeSectionOffset = 0x240; // FIntPoint
		constexpr auto MaxLODLevel = 0x248; // int32_t
		constexpr auto LODDistanceFactor = 0x24c; // float
		constexpr auto LODFalloff = 0x250; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x254; // float
		constexpr auto LOD0ScreenSize = 0x258; // float
		constexpr auto LOD0DistributionSetting = 0x25c; // float
		constexpr auto LODDistributionSetting = 0x260; // float
		constexpr auto TessellationComponentScreenSize = 0x264; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x268; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x26c; // float
		constexpr auto OccluderGeometryLOD = 0x270; // int32_t
		constexpr auto StaticLightingLOD = 0x274; // int32_t
		constexpr auto DefaultPhysMaterial = 0x278; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x280; // float
		constexpr auto LandscapeMaterial = 0x288; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2b0; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2b8; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2c8; // bool
		constexpr auto MeshHolesMaxLod = 0x2c9; // char
		constexpr auto RuntimeVirtualTextures = 0x2d0; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2e0; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2e4; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2e8; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2ec; // float
		constexpr auto PositiveZBoundsExtension = 0x2f0; // float
		constexpr auto LandscapeComponents = 0x2f8; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x308; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x318; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x38c; // bool
		constexpr auto StaticLightingResolution = 0x390; // float
		constexpr auto CastShadow = 0x394; // char : 1
		constexpr auto bCastDynamicShadow = 0x394; // char : 1
		constexpr auto bCastStaticShadow = 0x394; // char : 1
		constexpr auto bCastFarShadow = 0x398; // char : 1
		constexpr auto bCastHiddenShadow = 0x39c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x3a0; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x3a4; // char : 1
		constexpr auto LightingChannels = 0x3a5; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a8; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a8; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x3ac; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x3b0; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3b4; // float
		constexpr auto LightmassSettings = 0x3b8; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3d0; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3d4; // int32_t
		constexpr auto CollisionThickness = 0x3d8; // float
		constexpr auto BodyInstance = 0x3e0; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x538; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x538; // char : 1
		constexpr auto ComponentSizeQuads = 0x53c; // int32_t
		constexpr auto SubsectionSizeQuads = 0x540; // int32_t
		constexpr auto NumSubsections = 0x544; // int32_t
		constexpr auto bUsedForNavigation = 0x548; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x548; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x54c; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x54d; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x54e; // bool
		constexpr auto bHasLayersContent = 0x54f; // bool
		constexpr auto WeightmapUsageMap = 0x550; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UTigerChallengeTypeDatabase {
		constexpr auto bFirstDailyChallengeIsPersistent = 0x28; // bool
		constexpr auto SeasonalChallengeCollections = 0x30; // TArray<UTigerChallengeCollection*>
		constexpr auto DailyChallengeCollections = 0x40; // TArray<UTigerChallengeCollection*>
		constexpr auto MasteryChallengeCollections = 0x50; // TArray<UTigerChallengeCollection*>
	}

	namespace n_UTigerNosferatuPassiveBestialConfig {
		constexpr auto TrailVisualizationActor = 0x118; // ATigerBestialTrailVisualizer*
		constexpr auto TrackedBuffType = 0x120; // UTigerTrackedBuff*
		constexpr auto RevealDistanceSquared = 0x128; // float
		constexpr auto LoseDistanceSquared = 0x12c; // float
		constexpr auto RevealHealthThreshold = 0x130; // TArray<float>
		constexpr auto TrackingTimeSeconds = 0x140; // float
		constexpr auto bEnableTrackingFeedback = 0x144; // bool
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto bFinishedLoading = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x268; // AWorldSettings*
		constexpr auto AssetUserData = 0x278; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x298; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x228; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x230; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x230; // char : 1
		constexpr auto bCurrentlyActive = 0x230; // char : 1
		constexpr auto OnParticleSpawn = 0x238; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x248; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x258; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_ATigerBaseNPC {
		constexpr auto HeightenedSensesTargetComponent = 0x778; // UTigerHSensesTargetComponent*
		constexpr auto NPCAsset = 0x780; // UTigerNPCAsset*
		constexpr auto BloodPotencyComponent = 0x788; // UTigerBloodPotencyComponent*
		constexpr auto VisualAsset = 0x790; // UTigerNPCVisualAsset*
		constexpr auto PropAsset = 0x798; // UTigerNpcPropAsset*
		constexpr auto MasqueradeActionResponse = 0x7a0; // UTigerMasqueradeActionResponse*
		constexpr auto HeadMeshsPoseAssetsClass = 0x7a8; // UTigerNPCFacePoseMap*
		constexpr auto NPCType = 0x7b0; // ETigerNPCType
		constexpr auto InteractiveNpcComponent = 0x7b8; // UTigerInteractiveNpcComponent*
		constexpr auto ReplicatedMeshCollection = 0x7c0; // FTigerMeshCollection
		constexpr auto ReplicatedAnimationInstanceClass = 0x8b0; // UObject*
		constexpr auto ActiveSplinePath = 0x8b8; // ATigerAISplinePath*
		constexpr auto Spawner = 0x8c0; // ATigerNPCSpawningBase*
		constexpr auto HeightenedSensesHeartMesh = 0x8c8; // USkeletalMeshComponent*
		constexpr auto InWorldHeartMesh = 0x8d0; // USkeletalMeshComponent*
		constexpr auto LastTimeReactingToLocalPlayerAction = 0x8d8; // float
		constexpr auto LastPlayedVoEventId = 0x8dc; // int32_t
		constexpr auto bHasSightOfLocalPlayer = 0x8e0; // bool
		constexpr auto BloodType = 0x8e8; // ETigerBloodType
		constexpr auto BloodPotency = 0x8e9; // ETigerBloodPotency
		constexpr auto StoredSplines = 0x8f0; // TArray<ATigerAISplinePath*>
		constexpr auto StreamingGrid = 0x900; // ATigerWorldCompositionGrid*
	}

	namespace n_UTigerChallengeTopPlayer {
		constexpr auto TopPlacementRequirement = 0xb0; // int32_t
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x280; // float
		constexpr auto CaptureDistanceScale = 0x284; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x6a0; // UObject*
		constexpr auto AnimClass = 0x6a8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6b0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6b8; // UAnimInstance*
		constexpr auto AnimationData = 0x6c0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x6e8; // FVector
		constexpr auto LineCheckBoundsScale = 0x6f4; // FVector
		constexpr auto LinkedInstances = 0x730; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x740; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x750; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8b0; // float
		constexpr auto KinematicBonesUpdateType = 0x8b4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8b5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8b8; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8ba; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8ba; // char : 1
		constexpr auto bHasValidBodies = 0x8ba; // char : 1
		constexpr auto bBlendPhysics = 0x8ba; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8ba; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8ba; // char : 1
		constexpr auto bDisableClothSimulation = 0x8bb; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8c0; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8c0; // char : 1
		constexpr auto bDisableAnimCurves = 0x8c0; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8c0; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8c1; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8c1; // char : 1
		constexpr auto bResetAfterTeleport = 0x8c1; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8c1; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8c1; // char : 1
		constexpr auto bPauseAnims = 0x8c1; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8c1; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8c2; // char : 1
		constexpr auto bForceRefpose = 0x8c2; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8c2; // char : 1
		constexpr auto bOldForceRefPose = 0x8c2; // char : 1
		constexpr auto bShowPrePhysBones = 0x8c2; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8c2; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8c2; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8c3; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8c3; // char : 1
		constexpr auto bUseBendingElements = 0x8c3; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8c3; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8c3; // char : 1
		constexpr auto bUseSelfCollisions = 0x8c3; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8c3; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8c3; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8c4; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8c4; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8c4; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x8c6; // uint16_t
		constexpr auto MassMode = 0x8c8; // EClothMassMode
		constexpr auto UniformMass = 0x8cc; // float
		constexpr auto TotalMass = 0x8d0; // float
		constexpr auto Density = 0x8d4; // float
		constexpr auto MinPerParticleMass = 0x8d8; // float
		constexpr auto ClothBlendWeight = 0x8dc; // float
		constexpr auto EdgeStiffness = 0x8e0; // float
		constexpr auto BendingStiffness = 0x8e4; // float
		constexpr auto AreaStiffness = 0x8e8; // float
		constexpr auto VolumeStiffness = 0x8ec; // float
		constexpr auto StrainLimitingStiffness = 0x8f0; // float
		constexpr auto ShapeTargetStiffness = 0x8f4; // float
		constexpr auto bWaitForParallelClothTask = 0x8f8; // bool
		constexpr auto DisallowedAnimCurves = 0x900; // TArray<FName>
		constexpr auto BodySetup = 0x910; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x920; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x930; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0xa08; // float
		constexpr auto TeleportRotationThreshold = 0xa0c; // float
		constexpr auto LastPoseTickFrame = 0xa18; // uint32_t
		constexpr auto ClothingInteractor = 0xa70; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb40; // FMulticastInlineDelegate
	}

	namespace n_UTBP_ArchetypeSelect_PowersWithVideoPreviews_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto VideoStopped = 0x268; // UWidgetAnimation*
		constexpr auto VideoStarted = 0x270; // UWidgetAnimation*
		constexpr auto CloseButton = 0x278; // UButton*
		constexpr auto CloseButtonBG = 0x280; // UImage*
		constexpr auto ClosebuttonCross = 0x288; // UImage*
		constexpr auto SkillSummary = 0x290; // UTBP_ArchetypeSelect_SkillsSummary_C*
		constexpr auto TBP_UI_HorizontalFadeSlot = 0x298; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto VideoCanvas = 0x2a0; // UOverlay*
		constexpr auto VideoPlaybackBar = 0x2a8; // UProgressBar*
		constexpr auto VideoWidget = 0x2b0; // UImage*
		constexpr auto MediaPlayer = 0x2b8; // UMediaPlayer*
		constexpr auto OnVideoStarted = 0x2c0; // FMulticastInlineDelegate
		constexpr auto OnVideoEnded = 0x2d0; // FMulticastInlineDelegate
		constexpr auto Right Discipline Video Source = 0x2e0; // UMediaSource*
		constexpr auto Left Discipline Video Source = 0x2e8; // UMediaSource*
		constexpr auto Passive Video Source = 0x2f0; // UMediaSource*
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x238; // URectLightComponent*
	}

	namespace n_UTigerAnimNotifyState_WeaponTrail {
		constexpr auto WeaponIndex = 0x30; // int32_t
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto FirstSocketName = 0x40; // FName
		constexpr auto SecondSocketName = 0x48; // FName
		constexpr auto WidthScaleMode = 0x50; // ETrailWidthMode
		constexpr auto WidthScale = 0x54; // float
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x110; // uint32_t
		constexpr auto GradientCurves = 0x118; // TArray<UCurveLinearColor*>
	}

	namespace n_UTigerAnimNotify_Footstep {
		constexpr auto bIsLeftFoot = 0x38; // bool
		constexpr auto FootstepDuration = 0x3c; // float
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UTigerBuffPreventMasqueradeBreakInstance {
		constexpr auto PreventMasqueradeBreakBuff = 0x88; // UTigerBuffPreventMasqueradeBreak*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_UTigerPassiveAdrenalineRushConfig {
		constexpr auto OnEnemyWithinRadiusBuff = 0x118; // UTigerBuffAdrenalineRush*
		constexpr auto RadiusInUnits = 0x120; // float
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x298; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2a8; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UAkEventCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto EventId = 0x34; // int32_t
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x840; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0x9ec; // float
		constexpr auto MulticastRecordOptions = 0xa10; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa20; // bool
		constexpr auto SpectatorControllers = 0xa28; // TArray<APlayerController*>
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_UTBP_ContextualHelp_Tutorial_SlideJump_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UTigerSceneRenderItemWidget {
		constexpr auto OnItemSpawned = 0x280; // FMulticastInlineDelegate
		constexpr auto ItemSpawnLocation = 0x290; // FVector
		constexpr auto DefaultItemClass = 0x2a0; // TSoftClassPtr<UObject>
		constexpr auto RenderTargetMaterial = 0x2c8; // UMaterialInterface*
		constexpr auto bOverrideItemRenderTarget = 0x2d0; // bool
		constexpr auto SpawnedItem = 0x2d8; // AActor*
	}

	namespace n_UTigerDisciplineBase {
		constexpr auto Owner = 0x28; // ATigerCharacter*
		constexpr auto DisciplineComponent = 0x30; // UTigerDisciplineComponent*
		constexpr auto BaseConfig = 0x38; // UTigerActiveDisciplineConfig*
		constexpr auto PowerLevel = 0x58; // int32_t
		constexpr auto AIUseDuration = 0x64; // float
		constexpr auto AIMinCooldownDuration = 0x68; // float
		constexpr auto AIMaxCooldownDuration = 0x6c; // float
	}

	namespace n_UTigerJudgeBaseState {
		constexpr auto JudgePawn = 0x28; // ATigerJudge*
		constexpr auto JudgeAiController = 0x30; // ATigerAiJudgeController*
		constexpr auto JudgeStateMachineComp = 0x38; // UTigerAiJudgeSmComponent*
		constexpr auto MovementSpeed = 0x40; // float
		constexpr auto TurnSpeed = 0x44; // float
		constexpr auto StateEntryTime = 0x48; // float
		constexpr auto JudgeDefaultRotationSpeed = 0x4c; // float [0x4]
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_UTigerRadarChart {
		constexpr auto GraphImage = 0x108; // FSlateBrush
		constexpr auto FillColor = 0x190; // FColor
		constexpr auto Points = 0x194; // int32_t
		constexpr auto Radius = 0x198; // float
		constexpr auto Tilt = 0x19c; // float
		constexpr auto Offset = 0x1a0; // FVector2D
		constexpr auto ValueMaximum = 0x1a8; // int32_t
		constexpr auto ValueMinimum = 0x1ac; // int32_t
		constexpr auto Values = 0x1b0; // TArray<int32_t>
	}

	namespace n_USharkOnlineSettings {
		constexpr auto OnlineServicesEnv = 0x38; // FString
		constexpr auto MaximumRetryDelaySeconds = 0x48; // float
		constexpr auto AccountRecoverUriProd = 0x50; // FString
		constexpr auto AccountRecoverUriUat = 0x60; // FString
		constexpr auto AccountRecoverUriDev = 0x70; // FString
		constexpr auto MinimumAccountCreationAge = 0x80; // int32_t
		constexpr auto PartyMaintenancePollIntervalSeconds = 0x84; // int32_t
	}

	namespace n_UABP_VMP_TOR_F_HAIR_04_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x730; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0xb70; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xfb0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x13f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1420; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UTigerSpawnMechanicBloodVein {
		constexpr auto StartBloodVein = 0x28; // ATigerBloodVein*
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x450; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x458; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x468; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x479; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x479; // char : 1
		constexpr auto bAllowRecycling = 0x479; // char : 1
		constexpr auto bAutoManageAttachment = 0x479; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x479; // char : 1
		constexpr auto bWarmingUp = 0x47a; // char : 1
		constexpr auto bOverrideLODMethod = 0x47a; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x47a; // char : 1
		constexpr auto LODMethod = 0x485; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x486; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x488; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4c8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4d8; // bool
		constexpr auto OldPosition = 0x4dc; // FVector
		constexpr auto PartSysVelocity = 0x4e8; // FVector
		constexpr auto WarmupTime = 0x4f4; // float
		constexpr auto WarmupTickRate = 0x4f8; // float
		constexpr auto SecondsBeforeInactive = 0x500; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x508; // float
		constexpr auto ReplayClips = 0x528; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x540; // float
		constexpr auto AutoAttachParent = 0x598; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x5a0; // FName
		constexpr auto AutoAttachLocationRule = 0x5a8; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a9; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5aa; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5d8; // FMulticastInlineDelegate
	}

	namespace n_UTigerUiNewNotificationNode {
		constexpr auto ParentNode = 0x28; // UTigerUiNewNotificationNode*
		constexpr auto ChildNodes = 0x30; // TArray<UTigerUiNewNotificationNode*>
		constexpr auto NewNotificationHandler = 0x40; // UTigerUiNewNotificationHandler*
		constexpr auto bHasNewEntry = 0x48; // bool
		constexpr auto bIsDirty = 0x49; // bool
		constexpr auto NewIds = 0x50; // TArray<uint64_t>
		constexpr auto bShouldPersistBetweenSessions = 0x60; // bool
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UTigerCharacterHeadgearCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
		constexpr auto Mesh = 0x148; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto AnimationFilter = 0x170; // UTigerAnimationFilter*
		constexpr auto bHideBeard = 0x178; // bool
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UAkDurationCallbackInfo {
		constexpr auto Duration = 0x38; // float
		constexpr auto EstimatedDuration = 0x3c; // float
		constexpr auto AudioNodeID = 0x40; // int32_t
		constexpr auto MediaID = 0x44; // int32_t
		constexpr auto bStreaming = 0x48; // bool
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_UTBP_AnimMetaData_StartIsActive_C {
		constexpr auto LeftHandIK_Enum = 0x28; // ENUM_WeaponIKOverride
		constexpr auto RightHandIK_Enum = 0x29; // ENUM_WeaponIKOverride
	}

	namespace n_UTigerCharacterHairColorCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UTBP_BeardCustomization_Master_C {
		constexpr auto PoseableMesh = 0x148; // UTBP_PoseableMesh_Master_C*
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UTBP_UI_Box_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto Bottom = 0x270; // UImage*
		constexpr auto BottomLeft = 0x278; // UImage*
		constexpr auto BottomRight = 0x280; // UImage*
		constexpr auto Content = 0x288; // UNamedSlot*
		constexpr auto ContentCanvas = 0x290; // UCanvasPanel*
		constexpr auto Left = 0x298; // UImage*
		constexpr auto Right = 0x2a0; // UImage*
		constexpr auto Top = 0x2a8; // UImage*
		constexpr auto TopLeft = 0x2b0; // UImage*
		constexpr auto TopRight = 0x2b8; // UImage*
		constexpr auto TopLeftTexture = 0x2c0; // UTexture2D*
		constexpr auto TopRightTexture = 0x2c8; // UTexture2D*
		constexpr auto TopTexture = 0x2d0; // UTexture2D*
		constexpr auto LeftTexture = 0x2d8; // UTexture2D*
		constexpr auto RightTexture = 0x2e0; // UTexture2D*
		constexpr auto BottomLeftTexture = 0x2e8; // UTexture2D*
		constexpr auto BottomRightTexture = 0x2f0; // UTexture2D*
		constexpr auto BottomTexture = 0x2f8; // UTexture2D*
		constexpr auto MarginPixels = 0x300; // FMargin
		constexpr auto PaddingPercent = 0x310; // FVector2D
		constexpr auto BackgroundBrush = 0x318; // FSlateBrush
		constexpr auto OverrideSize = 0x3a0; // FVector2D
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UTigerWeapon {
		constexpr auto RarityMaterial = 0x30; // UMaterialInterface*
		constexpr auto Rarity = 0x38; // ETigerItemRarity
		constexpr auto SkeletalMesh = 0x40; // USkeletalMesh*
		constexpr auto OffhandSkeletalMesh = 0x48; // USkeletalMesh*
		constexpr auto AnimClass = 0x50; // UAnimInstance*
		constexpr auto Crosshair = 0x58; // UTigerWeaponCrosshairWidget*
		constexpr auto HUDIcon = 0x60; // UTexture2D*
		constexpr auto RarityDamageMultiplierCurve = 0x68; // UCurveFloat*
		constexpr auto WeaponUnequipAnimation = 0x70; // FName
		constexpr auto WeaponEquipAnimation = 0x78; // FName
		constexpr auto PrimaryAttachPoint = 0x80; // FName
		constexpr auto SecondaryAttachPoint = 0x88; // FName
		constexpr auto FearValueMultiplier = 0x90; // float
		constexpr auto FearDistanceMultiplier = 0x94; // float
		constexpr auto bIsDualWeapon = 0x98; // bool
		constexpr auto PersistentTelemetryID = 0xa0; // uint64_t
	}

	namespace n_UTigerAIPlayerPickPriorityTask {
		constexpr auto MaxVerticalPositionOffset = 0x98; // float
		constexpr auto RaycastDistance = 0x9c; // float
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UABP_Eyewear_C {
		constexpr auto UberGraphFrame = 0x450; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x458; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x560; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_MeshRefPose = 0x668; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x678; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone = 0x698; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Root = 0x7a0; // FAnimNode_Root
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ClanPower_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UTigerJudgeShieldComponent {
		constexpr auto DeflectEffectOffset = 0xee0; // FVector
		constexpr auto DeflectEffect = 0xef0; // UParticleSystem*
		constexpr auto DeflectSound = 0xef8; // UAkAudioEvent*
		constexpr auto BlockingHalfAngle = 0xf00; // float
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UTigerVendorComponent {
		constexpr auto DynamicCategories = 0xb0; // TArray<UTigerVendorStoreCategory*>
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_UTBP_UI_GroupInvitation_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto TBP_UI_ConfirmMenu = 0x288; // UTBP_UI_ConfirmMenu_C*
		constexpr auto Invite = 0x290; // FTigerGroupInvitation
		constexpr auto Inviter = 0x2a0; // ATigerPlayerState*
		constexpr auto HasHandledInvite = 0x2a8; // bool
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UAkAuxBus {
		constexpr auto RequiredBank = 0x50; // UAkAudioBank*
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UTigerFeedingComponent {
		constexpr auto bIsBloodDrained = 0xb0; // bool
		constexpr auto bIsBeingFedOn = 0xb1; // bool
		constexpr auto bDidAttackEndFeed = 0xb2; // bool
		constexpr auto OnStoppedFeeding = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnFeedingDoneEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnStartedFeedingApproach = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnStartedFeeding = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnFeedingApproachDone = 0xf8; // FMulticastInlineDelegate
		constexpr auto MaximumFeedingDistance = 0x108; // float
		constexpr auto MaxFeedingTicks = 0x10c; // int32_t
		constexpr auto FeedTickTime = 0x110; // float
		constexpr auto PartRequiredForBloodDrainedState = 0x114; // float
		constexpr auto FeedHealthAmount = 0x118; // float
		constexpr auto TravelSpeed = 0x11c; // float
		constexpr auto FeedingTicksLeft = 0x120; // int32_t
		constexpr auto CurrentFeedingTicksLeft = 0x124; // int32_t
		constexpr auto DesiredFeedingTarget = 0x128; // TWeakObjectPtr<ATigerNPC>
		constexpr auto CurrentTarget = 0x130; // TWeakObjectPtr<ATigerNPC>
		constexpr auto FeedingCameraShake = 0x138; // UMatineeCameraShake*
		constexpr auto FeedingAnimationAsset = 0x140; // UTigerFeedingAnimationAsset*
		constexpr auto FeedingCameraDecoupleDelay = 0x148; // float
		constexpr auto ApproachUIProgress = 0x14c; // float
		constexpr auto CapsuleDistanceCompensator = 0x150; // float
		constexpr auto bFeedingDebug = 0x154; // bool
		constexpr auto FedOnApproachAnim = 0x1d0; // UAnimMontage*
		constexpr auto FedOnFeedingAnim = 0x1d8; // UAnimMontage*
		constexpr auto FedOnDecoupleAnim = 0x1e0; // UAnimMontage*
		constexpr auto DecoupleTimerCamera = 0x1e8; // FTimerHandle
	}

	namespace n_UTigerGameGCClusterSubSystem {
		constexpr auto CurrentActorsToProcess = 0x38; // TArray<AActor*>
	}

	namespace n_UTigerNpcAnimInstance {
		constexpr auto AnimationMode = 0x3b8; // ETigerAIAnimationMode
		constexpr auto PropDummyClass = 0x3c0; // ATigerPropDummy*
		constexpr auto bIsReadyToFireWeapon = 0x3c8; // bool
		constexpr auto TimeAnimModeChanged = 0x3cc; // float
		constexpr auto bIsBurstFiring = 0x3d0; // bool
		constexpr auto bIsBeingFedOn = 0x3d1; // bool
		constexpr auto bCanSeeLocalPlayer = 0x3d2; // bool
		constexpr auto bIsLookingAtLocalPlayer = 0x3d3; // bool
		constexpr auto AimDirection = 0x3d4; // FVector
		constexpr auto StrafeDirection = 0x3e0; // FVector
		constexpr auto LocalPlayerLookAtPitch = 0x3ec; // float
		constexpr auto LocalPlayerLookAtYaw = 0x3f0; // float
		constexpr auto LocalPlayerLookAtDistance = 0x3f4; // float
		constexpr auto LocalPlayerLookAtActivationDistance = 0x3f8; // float
		constexpr auto LocalPlayerLookAtDeactivationDistance = 0x3fc; // float
		constexpr auto LocalPlayerLookAtDuration = 0x400; // FSharkRandomDeviation
		constexpr auto LocalPlayerLookAtAgainCooldown = 0x408; // FSharkRandomDeviation
		constexpr auto DeathDirection = 0x410; // float
		constexpr auto ReactionCooldown = 0x414; // float
		constexpr auto TurnCooldownTime = 0x418; // float
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x238; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x240; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x248; // char : 1
		constexpr auto NavAgentProps = 0x250; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x280; // FVector
		constexpr auto MyNavData = 0x290; // ANavigationData*
		constexpr auto ProjectedLocation = 0x298; // FVector
		constexpr auto bProjectedLocationValid = 0x2a4; // char : 1
		constexpr auto bSearchStart = 0x2a4; // char : 1
		constexpr auto CostLimitFactor = 0x2a8; // float
		constexpr auto MinimumCostLimit = 0x2ac; // float
		constexpr auto bBacktracking = 0x2b0; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2b0; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2b0; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2b0; // char : 1
		constexpr auto bShowNodePool = 0x2b0; // char : 1
		constexpr auto bShowBestPath = 0x2b0; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2b0; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2b0; // char : 1
		constexpr auto CostDisplayMode = 0x2b4; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2b8; // FVector2D
		constexpr auto bPathExist = 0x2c0; // char : 1
		constexpr auto bPathIsPartial = 0x2c0; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2c0; // char : 1
		constexpr auto PathfindingTime = 0x2c4; // float
		constexpr auto PathCost = 0x2c8; // float
		constexpr auto PathfindingSteps = 0x2cc; // int32_t
		constexpr auto OtherActor = 0x2d0; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2d8; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2e0; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2e4; // float
	}

	namespace n_ATigerElysiumPlayerState {
		constexpr auto OnIsInPartyChanged = 0x568; // FMulticastInlineDelegate
		constexpr auto OnPartySizeChanged = 0x578; // FMulticastInlineDelegate
		constexpr auto OnAppearanceChanged = 0x588; // FMulticastInlineDelegate
		constexpr auto bIsInParty = 0x598; // bool
		constexpr auto PartySize = 0x599; // int8_t
		constexpr auto bIsReadyForMatchmaking = 0x59a; // bool
		constexpr auto OnGroupReadyStateChanged = 0x5a0; // FMulticastInlineDelegate
		constexpr auto OnLocalPlayerReadyStateChanged = 0x5b0; // FMulticastInlineDelegate
		constexpr auto TrainingVideoGrimoireEntry = 0x5c0; // UTigerGrimoireEntry*
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x1f8; // float
		constexpr auto SocketOffset = 0x1fc; // FVector
		constexpr auto TargetOffset = 0x208; // FVector
		constexpr auto ProbeSize = 0x214; // float
		constexpr auto ProbeChannel = 0x218; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto bInheritPitch = 0x21c; // char : 1
		constexpr auto bInheritYaw = 0x21c; // char : 1
		constexpr auto bInheritRoll = 0x21c; // char : 1
		constexpr auto bEnableCameraLag = 0x21c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x21c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x21c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x21d; // char : 1
		constexpr auto CameraLagSpeed = 0x220; // float
		constexpr auto CameraRotationLagSpeed = 0x224; // float
		constexpr auto CameraLagMaxTimeStep = 0x228; // float
		constexpr auto CameraLagMaxDistance = 0x22c; // float
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UTigerLootLocationConfiguration {
		constexpr auto LocationEntries = 0x30; // TArray<FTigerLootLocationEntry>
	}

	namespace n_UTigerThrallMenu {
		constexpr auto ThrallSlots = 0x3b0; // TArray<UTigerLocalThrallData*>
		constexpr auto CurrentThrall = 0x3c0; // UTigerLocalThrallData*
		constexpr auto ThrallMenuIndex = 0x3c8; // ETigerThrallMenu
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x228; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x230; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x231; // char : 1
	}

	namespace n_UTigerPlayerMeshManager {
		constexpr auto MaterialData = 0x1e0; // FTigerPlayerMeshMaterialData [0xb]
		constexpr auto StaticMeshMaterialData = 0x290; // TArray<FTigerPlayerMeshMaterialData>
		constexpr auto PoseableMeshMaterialData = 0x2a0; // TArray<FTigerPlayerMeshMaterialData>
		constexpr auto CurrentOverrideMaterial = 0x2b0; // UMaterialInterface*
	}

	namespace n_UTBP_UI_MapMarker_C {
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
	}

	namespace n_UTBP_Buff_Shield50_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
	}

	namespace n_UTigerClientSeasonalRewardTier {
		constexpr auto FreeRewardIds = 0x28; // TArray<FTigerItemId>
		constexpr auto PremiumRewardIds = 0x38; // TArray<FTigerItemId>
	}

	namespace n_UTigerMapMarkerOverlay {
		constexpr auto PlayerMarkerPtr = 0x280; // UTigerPlayerMarkerWidget*
	}

	namespace n_UTBP_UI_Cursor_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Cursor_Gamepad = 0x288; // UImage*
		constexpr auto Cursor_Mouse = 0x290; // UImage*
		constexpr auto PreviousViewportScale = 0x298; // float
		constexpr auto Starting_Size = 0x29c; // FVector2D
		constexpr auto HasBound = 0x2a4; // bool
	}

	namespace n_ATigerDoor {
		constexpr auto DoorMesh = 0x280; // UStaticMeshComponent*
		constexpr auto InteractingPlayer = 0x288; // ATigerPlayer*
	}

	namespace n_UTigerPlayerClanData {
		constexpr auto DISPLAYNAME = 0x30; // FText
		constexpr auto ClanType = 0x48; // ETigerClan
		constexpr auto IconTexture = 0x50; // UTexture2D*
		constexpr auto LargeIconTexture = 0x58; // UTexture2D*
		constexpr auto CharacterCreationStartingOutfitPath = 0x60; // TSoftClassPtr<UObject> [0x2]
		constexpr auto BodyTypeItems = 0xb0; // TArray<UTigerCharacterBodyTypeCustomization*>
		constexpr auto PowerKits = 0xc0; // TArray<UTigerPowerKit*>
		constexpr auto UtilityPower = 0xd0; // UTigerUtilityPowerBaseComponent*
		constexpr auto UtilityPowerIcon = 0xd8; // UTexture2D*
		constexpr auto StaggeredByAttackSound = 0xe0; // USoundBase*
		constexpr auto FallShakeLowDrop = 0xe8; // UMatineeCameraShake*
		constexpr auto FallShakeHighDrop = 0xf0; // UMatineeCameraShake*
		constexpr auto ClanAnimationSet = 0xf8; // UTigerAnimationSetAsset* [0x2]
		constexpr auto bBloodDropGlows = 0x108; // bool
		constexpr auto ClanSpecificDiablerizeOffsets = 0x10c; // float [0x4]
		constexpr auto AdditionalAnimationSets = 0x120; // TArray<UTigerAnimationSetAsset*>
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto Position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UTigerAIPlayerClimbIfPossibleTask {
		constexpr auto LocalAIController = 0x70; // ATigerLocalAIControllerBase*
		constexpr auto PlayerController = 0x78; // ATigerPlayerController*
		constexpr auto PlayerCamera = 0x80; // ATigerPlayerCameraManager*
		constexpr auto CurrentPawn = 0x88; // ATigerPlayer*
		constexpr auto PlayerMovementComponent = 0x90; // UTigerCharacterMovementComponent*
		constexpr auto ClimbState = 0x98; // UTigerTraversalClimbState*
		constexpr auto ClimbConfig = 0xa0; // UTigerTraversalStateClimbingConfig*
		constexpr auto AngleFromForward = 0xa8; // float
	}

	namespace n_UTigerBloodTrackPreset {
		constexpr auto BloodTrack = 0x30; // FTigerBloodTrack
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x238; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x240; // FVector
		constexpr auto FoliageVelocity = 0x24c; // FVector
		constexpr auto FoliageForce = 0x258; // FVector
		constexpr auto FoliagePosition = 0x264; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x270; // float
		constexpr auto FoliageTouchImpulseScale = 0x274; // float
		constexpr auto FoliageStiffness = 0x278; // float
		constexpr auto FoliageStiffnessQuadratic = 0x27c; // float
		constexpr auto FoliageDamping = 0x280; // float
		constexpr auto MaxDamageImpulse = 0x284; // float
		constexpr auto MaxTouchImpulse = 0x288; // float
		constexpr auto MaxForce = 0x28c; // float
		constexpr auto Mass = 0x290; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x228; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x290; // float
		constexpr auto CollisionIterations = 0x294; // int32_t
		constexpr auto PushOutIterations = 0x298; // int32_t
		constexpr auto PushOutPairIterations = 0x29c; // int32_t
		constexpr auto ClusterConnectionFactor = 0x2a0; // float
		constexpr auto ClusterUnionConnectionType = 0x2a4; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x2a5; // bool
		constexpr auto CollisionFilterSettings = 0x2a8; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x2b8; // bool
		constexpr auto BreakingFilterSettings = 0x2bc; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x2cc; // bool
		constexpr auto TrailingFilterSettings = 0x2d0; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x2e0; // float
		constexpr auto bGenerateContactGraph = 0x2e4; // bool
		constexpr auto bHasFloor = 0x2e5; // bool
		constexpr auto FloorHeight = 0x2e8; // float
		constexpr auto ChaosDebugSubstepControl = 0x2ec; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x2f0; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x310; // UChaosGameplayEventDispatcher*
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xb0; // UFieldNodeFloat*
	}

	namespace n_UTBP_ContextualHelp_Feeding_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto LowHealthTriggerLimit = 0xf8; // float
		constexpr auto TigerPlayer = 0x100; // ATigerPlayer*
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UTigerWeaponCycleStyle {
		constexpr auto WeaponSlotsToCycle = 0x28; // int32_t
		constexpr auto UiName = 0x30; // FText
	}

	namespace n_ATigerProjectionDashProjectile {
		constexpr auto MovementSpeed = 0x228; // float
		constexpr auto Duration = 0x22c; // float
		constexpr auto TargetPosition = 0x230; // FVector
		constexpr auto StartingPosition = 0x23c; // FVector
		constexpr auto LastValidPosition = 0x254; // FVector
		constexpr auto SphereCollider = 0x268; // USphereComponent*
		constexpr auto ThornsBuff = 0x270; // UTigerBuff*
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UTBP_ContextualHelp_MeleeWeapon_Ability_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UTBP_ContextualHelp_Downed_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UABP_VMP_BRU_M_HAIR_14_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3ec0; // FAnimNode_AnimDynamics
	}

	namespace n_ATBP_SpectatorPawn_C {
		constexpr auto UberGraphFrame = 0x308; // FPointerToUberGraphFrame
		constexpr auto Listener Component = 0x310; // USceneComponent*
		constexpr auto Camera = 0x318; // UCameraComponent*
	}

	namespace n_UTigerLootDropComponent {
		constexpr auto DropChance = 0xb0; // int32_t
		constexpr auto LootAssets = 0xb8; // TArray<FTigerLootItemType>
		constexpr auto TelemetryIDSource = 0xc8; // ETigerTelemetryItemSourceID
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UTigerWheelWidget {
		constexpr auto LockCameraForGamepadAfterUseTime = 0x290; // float
		constexpr auto bShouldSetMouseLocation = 0x294; // bool
		constexpr auto Interface = 0x298; // UTigerWheelInterfaceWidget*
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x1f8; // FString
		constexpr auto UserIndex = 0x208; // int32_t
		constexpr auto AutoPinType = 0x20c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x20d; // bool
		constexpr auto PinDataClass = 0x210; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x218; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x268; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x270; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x290; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2a0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2b0; // USceneComponent*
		constexpr auto PinData = 0x2b8; // UMagicLeapARPinSaveGame*
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UTigerQuestline {
		constexpr auto Title = 0x28; // FText
		constexpr auto Quests = 0x40; // TMap<FString, UTigerQuest*>
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x228; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x230; // USceneComponent*
	}

	namespace n_UTigerPromptCollectionWidget {
		constexpr auto MasqueradeBreachedPrompt = 0x280; // UTigerSimpleTextPrompt*
		constexpr auto MasqueradeBreachedByNpcKillPrompt = 0x288; // UTigerSimpleTextPrompt*
		constexpr auto MasqueradeBreachedByNpcFeedingPrompt = 0x290; // UTigerSimpleTextPrompt*
		constexpr auto MasqueradeRestoredPrompt = 0x298; // UTigerSimpleTextPrompt*
		constexpr auto IntroPrompt = 0x2a0; // UTigerSimpleTextPrompt*
		constexpr auto FirstGasPrompt = 0x2a8; // UTigerSimpleTextPrompt*
		constexpr auto SubsequentGasPrompt = 0x2b0; // UTigerSimpleTextPrompt*
		constexpr auto GasStartedMovingPrompt = 0x2b8; // UTigerSimpleTextPrompt*
		constexpr auto JudgeSpawnedPrompt = 0x2c0; // UTigerSimpleTextPrompt*
		constexpr auto JudgeSlainPrompt = 0x2c8; // UTigerSimpleTextPrompt*
		constexpr auto SupplyDropPrompt = 0x2d0; // UTigerSimpleTextPrompt*
		constexpr auto SuperHighPotentNearbyPrompt = 0x2d8; // UTigerSimpleTextPrompt*
		constexpr auto LevelUpPrompt = 0x2e0; // UTigerSimpleTextPrompt*
		constexpr auto GameModeInteractionPrompt = 0x2e8; // UTigerSimpleTextPrompt*
		constexpr auto EliminatedPlayerPrompt = 0x2f0; // UTigerSimpleTextPrompt*
		constexpr auto DownedPlayerPrompt = 0x2f8; // UTigerSimpleTextPrompt*
		constexpr auto EnteringNewAreaPrompt = 0x300; // UTigerEnteringNewAreaPrompt*
		constexpr auto ArtifactPickedUpPrompt = 0x308; // UTigerSimpleTextPrompt*
		constexpr auto TextPromptQueue = 0x310; // TArray<FTigerQueuedTextPrompt>
		constexpr auto Prompts = 0x320; // TArray<FTigerQueuedTextPromptPriorityEntry>
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UTigerCustomSequenceListClan {
		constexpr auto Sequences = 0x28; // UAnimSequence* [0x4]
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x1f8; // FGuid
		constexpr auto Brightness = 0x208; // float
		constexpr auto Intensity = 0x20c; // float
		constexpr auto LightColor = 0x210; // FColor
		constexpr auto bAffectsWorld = 0x214; // char : 1
		constexpr auto CastShadows = 0x214; // char : 1
		constexpr auto CastStaticShadows = 0x214; // char : 1
		constexpr auto CastDynamicShadows = 0x214; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x214; // char : 1
		constexpr auto bTransmission = 0x214; // char : 1
		constexpr auto bCastVolumetricShadow = 0x214; // char : 1
		constexpr auto bCastDeepShadow = 0x214; // char : 1
		constexpr auto bCastRaytracedShadow = 0x215; // char : 1
		constexpr auto bAffectReflection = 0x215; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x215; // char : 1
		constexpr auto bAffectStaticIndirectLighting = 0x215; // char : 1
		constexpr auto ShadowDetailMode = 0x218; // EShadowDetailMode
		constexpr auto DeepShadowLayerDistribution = 0x21c; // float
		constexpr auto IndirectLightingIntensity = 0x220; // float
		constexpr auto VolumetricScatteringIntensity = 0x224; // float
		constexpr auto SamplesPerPixel = 0x228; // int32_t
	}

	namespace n_UTigerBuffShacklesInstance {
		constexpr auto ShacklesBuff = 0x88; // UTigerBuffShackles*
	}

	namespace n_UTigerThrallMapData {
		constexpr auto Map = 0x30; // UTexture2D*
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UTBP_UI_TitleError_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto ErrorCodeBlock = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto MessageTextBlock = 0x2a0; // UTigerStyledRichTextBlock*
		constexpr auto RetryDelayBox = 0x2a8; // UHorizontalBox*
		constexpr auto RetryDelayDurationText = 0x2b0; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_MenuButton_Exit = 0x2b8; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_MenuButton_Retry = 0x2c0; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_Popup_Base = 0x2c8; // UTBP_UI_Popup_Base_C*
		constexpr auto TitleTextBlock = 0x2d0; // UTigerStyledRichTextBlock*
		constexpr auto OnRetry = 0x2d8; // FMulticastInlineDelegate
		constexpr auto RetryDelayTimerHandle = 0x2e8; // FTimerHandle
	}

	namespace n_UTigerClientRewardTrackDailyChallenges {
		constexpr auto DailyChallengeIDs = 0x48; // TArray<FTigerChallengeTypeID>
		constexpr auto DailyChallengeExpReward = 0x58; // FTigerItemId
		constexpr auto PersistentDailyChallengeTokenReward = 0x60; // FTigerItemId
		constexpr auto bIsFirstChallengePersistent = 0x68; // bool
	}

	namespace n_UTBP_AnAcquiredTaste_C {
		constexpr auto UberGraphFrame = 0xc0; // FPointerToUberGraphFrame
		constexpr auto Stacks = 0xc8; // int32_t
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x450; // int32_t
		constexpr auto SectionBaseY = 0x454; // int32_t
		constexpr auto ComponentSizeQuads = 0x458; // int32_t
		constexpr auto SubsectionSizeQuads = 0x45c; // int32_t
		constexpr auto NumSubsections = 0x460; // int32_t
		constexpr auto OverrideMaterial = 0x468; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x470; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x478; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x488; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x498; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x4a8; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4b8; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4c8; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4d0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4e0; // float
		constexpr auto HeightmapScaleBias = 0x4f0; // FVector4
		constexpr auto CachedLocalBox = 0x500; // FBox
		constexpr auto CollisionComponent = 0x51c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x538; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x540; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x550; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x560; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x568; // FGuid
		constexpr auto IrrelevantLights = 0x578; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x588; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x58c; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x590; // float
		constexpr auto PositiveZBoundsExtension = 0x594; // float
		constexpr auto StaticLightingResolution = 0x598; // float
		constexpr auto ForcedLOD = 0x59c; // int32_t
		constexpr auto LODBias = 0x5a0; // int32_t
		constexpr auto StateId = 0x5a4; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5b4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5c8; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5d0; // char
		constexpr auto MobileMaterialInterface = 0x5d8; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5e0; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5f0; // TArray<UTexture2D*>
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x238; // USpotLightComponent*
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UABP_VMP_NOS_F_HAIR_03_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0x310; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x750; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0xb90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xfd0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1410; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1850; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1c90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x20d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x2510; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3640; // FAnimNode_AnimDynamics
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_UTigerDisciplineStun {
		constexpr auto Config = 0x78; // UTigerStunConfig*
	}

	namespace n_UTigerPassiveNightstalkerConfig {
		constexpr auto CrouchedTimeUntilUnseen = 0x118; // float
		constexpr auto CrouchedTimePerAdditionalPowerLevel = 0x11c; // float
		constexpr auto InvisibilityBuff = 0x120; // TArray<UTigerBuffUnseenPresence*>
		constexpr auto OverrideSightProperties = 0x130; // FTigerSightConfigProperties
	}

	namespace n_ATigerElysiumGameState {
		constexpr auto FlashStoreStoreEntries = 0x380; // FTigerMetaStoreEntriesKeeper
		constexpr auto BattlepassStoreEntries = 0x3d0; // FTigerMetaStoreEntriesKeeper
		constexpr auto RankSkipStoreEntries = 0x410; // FTigerMetaStoreEntriesKeeper
		constexpr auto PartyMaintenanceMode = 0x450; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x4c0; // UEnvQuery*
		constexpr auto QueryParams = 0x4c8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4d8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x4e8; // float
		constexpr auto StepToDebugDraw = 0x4ec; // int32_t
		constexpr auto HighlightMode = 0x4f0; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x4f4; // char : 1
		constexpr auto bDrawFailedItems = 0x4f4; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x4f4; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x4f4; // char : 1
		constexpr auto bTickDuringGame = 0x4f4; // char : 1
		constexpr auto QueryingMode = 0x4f8; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x500; // FNavAgentProperties
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UTigerCollectibleData {
		constexpr auto CollectibleId = 0x30; // uint32_t
		constexpr auto CollectibleName = 0x38; // FText
		constexpr auto CollectibleDescription = 0x50; // FText
		constexpr auto TotalRequired = 0x68; // int32_t
		constexpr auto GrimoireEntryToUnlock = 0x70; // UTigerGrimoireEntry*
		constexpr auto GrimoireEntrySet = 0x78; // UTigerCollectibleGrimoireEntrySet*
		constexpr auto RewardIds = 0x80; // TArray<FTigerItemId>
	}

	namespace n_UTigerDisciplineIncitePain {
		constexpr auto Config = 0xf0; // UTigerIncitePainConfig*
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UTigerTraversalStateSlidingConfig {
		constexpr auto SlideGravityMultiplier = 0x50; // float
		constexpr auto SlideTerminalSpeed = 0x54; // float
		constexpr auto BrakingDecelerationSliding = 0x58; // float
		constexpr auto BrakingDecelerationSlidingStop = 0x5c; // float
		constexpr auto RequiredVelocityForSlideStart = 0x60; // float
		constexpr auto RequiredFallingVelocityForSlideStart = 0x64; // float
		constexpr auto HorizontalSpeedForFallingSlide = 0x68; // float
		constexpr auto ThresholdVelocityForSlideStop = 0x6c; // float
		constexpr auto SlideVelocityBoostMultiplier = 0x70; // float
		constexpr auto SlideFallingHorizontalBoostMultiplier = 0x74; // float
		constexpr auto SlideFallingVerticalBoostMultiplier = 0x78; // float
		constexpr auto SlideAirGraceTime = 0x7c; // float
		constexpr auto SlideBoostDecayRecoverySpeed = 0x80; // float
		constexpr auto SlideControllerRotationTime = 0x84; // float
		constexpr auto SlidingWallCollisionCutOffHalfAngle = 0x88; // float
		constexpr auto SlidingWallCollisionSweepRadius = 0x8c; // float
		constexpr auto SlidingWallCollisionZecondaryCheckZOffset = 0x90; // float
		constexpr auto SlideTimeBeforeJumpIsAllowed = 0x94; // float
		constexpr auto TimeOfForcedSliding = 0x98; // float
		constexpr auto SlideBoostDecayCurve = 0xa0; // UCurveFloat*
		constexpr auto SlideGravityCurve = 0xa8; // UCurveFloat*
		constexpr auto HorizontalSpeedForFallingSlideCurve = 0xb0; // UCurveFloat*
		constexpr auto DownwardsAngleDifferenceMultiplierCurve = 0xb8; // UCurveFloat*
		constexpr auto DecelerationCurve = 0xc0; // UCurveFloat*
		constexpr auto bUseSlideAlongSurfaceLogic = 0xc8; // bool
		constexpr auto bPrintVariablesOnFallSlide = 0xc9; // bool
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_UTigerDisciplineDisplacement {
		constexpr auto TargetMarker = 0xf0; // UTigerWidget*
		constexpr auto Config = 0xf8; // UTigerDisplacementConfig*
		constexpr auto ClientSidePotentialTarget = 0x110; // ATigerCharacter*
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x228; // UPaperFlipbookComponent*
	}

	namespace n_UTigerChallengeDiablerize {
		constexpr auto TargetRequiredClan = 0xb0; // FTigerChallengeRequirementClan
	}

	namespace n_UTigerConsumableAsset {
		constexpr auto Montage = 0x128; // UAnimMontage*
		constexpr auto bCanBeUsedWhileMoving = 0x130; // bool
		constexpr auto UseTime = 0x134; // float
		constexpr auto MaxStack = 0x138; // int32_t
		constexpr auto BeginUseAudioEvent = 0x140; // UAkAudioEvent*
		constexpr auto UseSuccessfulAudioEvent = 0x148; // UAkAudioEvent*
		constexpr auto UseFailedAudioEvent = 0x150; // UAkAudioEvent*
		constexpr auto SuccessfulUseCharacterEffect = 0x158; // UTigerCharacterEffect*
		constexpr auto BeginUsePostProcess = 0x160; // ATigerBuffPostProcess*
		constexpr auto SuccessfulBuffPostProcess = 0x168; // ATigerBuffPostProcess*
	}

	namespace n_ATigerGuardVolume {
		constexpr auto bTriggerThreatState = 0x228; // bool
		constexpr auto Colliders = 0x230; // TArray<UShapeComponent*>
	}

	namespace n_UTigerTraversalStateLowVaultConfig {
		constexpr auto LowVaultAnimationName = 0x50; // FName
		constexpr auto LowVaultLowerBodyVolumeExtent = 0x58; // FVector
		constexpr auto LowVaultCheckOffset = 0x64; // FVector
		constexpr auto LowVaultMaximumCameraAngleDifference = 0x70; // float
		constexpr auto AnimationBlendoutStartDelay = 0x74; // float
		constexpr auto LowVaultPositionVerticalOffset = 0x78; // float
		constexpr auto HorizontalEndPositionOffset = 0x7c; // float
		constexpr auto bShouldAdjustLowVaultAnimationPlayRate = 0x80; // bool
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x470; // FVector
		constexpr auto Rotation = 0x480; // FQuat
		constexpr auto Dimensions = 0x490; // FVector
		constexpr auto LineThickness = 0x49c; // float
		constexpr auto bRemoveHiddenLines = 0x4a0; // bool
		constexpr auto bEnableAxisFlip = 0x4a1; // bool
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Climb_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARObjectUpdatePayload
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_ATigerPassionProjectile {
		constexpr auto TargetLocation = 0x228; // FVector
		constexpr auto Velocity = 0x234; // FVector
		constexpr auto ScaledSpeedValue = 0x240; // float
		constexpr auto BuffDuration = 0x244; // float
		constexpr auto BuffStrength = 0x248; // float
		constexpr auto TimeUntilParticleFadeTiemout = 0x24c; // float
		constexpr auto TimerHandle = 0x250; // FTimerHandle
		constexpr auto Effect = 0x258; // char
		constexpr auto bIsMoving = 0x259; // bool
		constexpr auto bTurnOnCollision = 0x25a; // bool
		constexpr auto TigerCharacterOwner = 0x260; // ATigerCharacter*
		constexpr auto PassionDiscipline = 0x268; // UTigerDisciplinePassion*
		constexpr auto ConfigType = 0x270; // UTigerPassionConfig*
		constexpr auto Box = 0x278; // UBoxComponent*
		constexpr auto ParticleComp = 0x280; // UParticleSystemComponent*
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARPoseUpdatePayload
	}

	namespace n_UTigerGrimoireSeasonDatabase {
		constexpr auto Seasons = 0x28; // TArray<UTigerGrimoireSeasonData*>
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UTigerCharacterPaperDollWidget {
		constexpr auto Apperance = 0x2f0; // FTigerCharacterAppearance
		constexpr auto ClanData = 0x370; // UTigerPlayerClanData*
		constexpr auto bUseSharedPaperDoll = 0x378; // bool
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_UTigerFrenzyConfig {
		constexpr auto RoarRadius = 0x160; // float
		constexpr auto RoarDamage = 0x164; // float
		constexpr auto GroundedTime = 0x168; // float
		constexpr auto ImmobilizeTime = 0x16c; // float
		constexpr auto DelayBeforeRoarEffect = 0x170; // float
		constexpr auto FrenzyBuff = 0x178; // UTigerBuff*
		constexpr auto RoarAnimation = 0x180; // UAnimMontage*
		constexpr auto RoarSound = 0x188; // USoundBase*
		constexpr auto BuffActiveSound = 0x190; // USoundBase*
		constexpr auto RoarParticles = 0x198; // UParticleSystem*
	}

	namespace n_UTigerDisplacementConfig {
		constexpr auto bShowDebugInfo = 0x170; // bool
		constexpr auto AttackingRange = 0x174; // float
		constexpr auto AttackingRadius = 0x178; // float
		constexpr auto PlayerTargetMultiplier = 0x17c; // float
		constexpr auto MeleeAreaMultiplier = 0x180; // float
		constexpr auto AimAxisValueCurve = 0x188; // UCurveFloat*
		constexpr auto DistanceFromUseValueCurve = 0x190; // UCurveFloat*
		constexpr auto Damage = 0x198; // float
		constexpr auto BackgroundFindTargetInterval = 0x19c; // float
		constexpr auto PlayerToScoutedTargetDotProductCutoff = 0x1a0; // float
		constexpr auto ActivationSound = 0x1a8; // USoundBase*
		constexpr auto DOTToApply = 0x1b0; // UTigerBuffDOT*
		constexpr auto BuffToApplyOnCasterWhenTeleporting = 0x1b8; // UTigerBuff*
		constexpr auto TargetMarkerWidgetClass = 0x1c0; // UTigerWidget*
		constexpr auto AirMontage = 0x1c8; // UAnimMontage*
		constexpr auto bInterruptClimbOnTarget = 0x1d0; // bool
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_ATigerEnragedEffectActor {
		constexpr auto bIsActive = 0x228; // bool
		constexpr auto bHasDamageBuff = 0x229; // bool
		constexpr auto bIsRegenerating = 0x22a; // bool
	}

	namespace n_UABP_VMP_BRU_F_HAIR_08_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2f8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x320; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xbc0; // FAnimNode_AnimDynamics
	}

	namespace n_UTBP_UI_KeyboardIcon_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto IconImage = 0x288; // UImage*
		constexpr auto KeyTextureMapping = 0x290; // UTigerKeyTextureMapping*
		constexpr auto MatchSize = 0x298; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6c0; // int32_t
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UTigerAISense_Masquerade {
		constexpr auto MasqueradeEvents = 0x80; // TArray<FTigerAIMasqueradeEvent>
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_ATBP_PlayerController_C {
		constexpr auto UberGraphFrame = 0xbe0; // FPointerToUberGraphFrame
		constexpr auto TBP_ChatComponent = 0xbe8; // UTBP_ChatComponent_C*
		constexpr auto TBP_ContextualHelpComponent = 0xbf0; // UTBP_ContextualHelpComponent_C*
		constexpr auto TBP_PingControllerComponent = 0xbf8; // UTBP_PingControllerComponent_C*
		constexpr auto TBP_EmoteControllerComponent = 0xc00; // UTBP_EmoteControllerComponent_C*
		constexpr auto ArchetypeHelpUI = 0xc08; // UTigerMenuWidget*
		constexpr auto ArchtypeHelpClass = 0xc10; // UObject*
		constexpr auto Axis X = 0xc18; // float
		constexpr auto Axis Y = 0xc1c; // float
		constexpr auto Axis Triggers = 0xc20; // float
	}

	namespace n_UTBP_UI_AdvancedTextBox_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto MoveHint = 0x268; // UWidgetAnimation*
		constexpr auto HintText = 0x270; // UTigerStyledRichTextBlock*
		constexpr auto Image = 0x278; // UImage*
		constexpr auto WrappedTextBox = 0x280; // UTBP_UI_TextBoxWrapper_C*
		constexpr auto Hint Text = 0x288; // FText
		constexpr auto Is Password = 0x2a0; // bool
		constexpr auto On Text Settled = 0x2a8; // FMulticastInlineDelegate
		constexpr auto On Text Changed = 0x2b8; // FMulticastInlineDelegate
		constexpr auto CharCap = 0x2c8; // int32_t
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UTigerResourceBarSegmentUI {
		constexpr auto SegmentMaterial = 0x280; // UMaterialInstanceDynamic*
		constexpr auto MinResource = 0x288; // float
		constexpr auto MaxResource = 0x28c; // float
	}

	namespace n_UABP_VMP_BRU_F_HAIR_01_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0xb50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0xf90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x13d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1810; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1c50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x2090; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x24d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Root = 0x24f0; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2520; // FAnimNode_ConvertLocalToComponentSpace
	}

	namespace n_UTBP_UI_PingInstanceBase_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto Fade_In_Pillar = 0x2d8; // UWidgetAnimation*
		constexpr auto Pillar_Within_Range_Anim = 0x2e0; // UWidgetAnimation*
		constexpr auto Offscreen_PulseAnim = 0x2e8; // UWidgetAnimation*
		constexpr auto PingFade = 0x2f0; // UWidgetAnimation*
		constexpr auto OffscreenAnimation = 0x2f8; // UWidgetAnimation*
		constexpr auto ContentCanvas = 0x300; // UCanvasPanel*
		constexpr auto ContentCanvas_Pulse = 0x308; // UOverlay*
		constexpr auto MapTooltip = 0x310; // UTBP_UI_PingMapTooltip_C*
		constexpr auto OffScreenDirectionIndicator = 0x318; // UImage*
		constexpr auto OffscreenParent = 0x320; // UCanvasPanel*
		constexpr auto OnScreen = 0x328; // UCanvasPanel*
		constexpr auto Pillar_container = 0x330; // UVerticalBox*
		constexpr auto Pillar_Head = 0x338; // UImage*
		constexpr auto Pillar_Leg = 0x340; // UImage*
		constexpr auto Ping_Image_Pulse = 0x348; // UImage*
		constexpr auto Visual_Widget_Slot = 0x350; // UOverlay*
		constexpr auto bIsOnScreen = 0x358; // bool
		constexpr auto CONFIG_VisualMaxResponses = 0x35c; // int32_t
		constexpr auto CONFIG_StartRotationPercentage = 0x360; // float
		constexpr auto CONFIG_ResponseOffset = 0x364; // float
		constexpr auto PingResponseUIs = 0x368; // TArray<UTBP_UI_PingResponse_C*>
		constexpr auto bIsTooltipShowing = 0x378; // bool
		constexpr auto CONFIG_bShowDistance = 0x379; // bool
		constexpr auto VisualWidget = 0x380; // UTigerPingWorldInstanceUI*
		constexpr auto CONFIG_TooltipOffset = 0x388; // FVector2D
		constexpr auto bIsAiming = 0x390; // bool
		constexpr auto PingEventDispatcher = 0x398; // FMulticastInlineDelegate
		constexpr auto PlayerDistance = 0x3a8; // float
		constexpr auto bPingIsFaded = 0x3ac; // bool
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x230; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x280; // UHLODProxy*
		constexpr auto Key = 0x288; // FName
		constexpr auto LODDrawDistance = 0x290; // float
		constexpr auto LODLevel = 0x294; // int32_t
		constexpr auto SubActors = 0x298; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2a8; // char
	}

	namespace n_UTigerInventoryItemPack {
		constexpr auto ItemId = 0x118; // FTigerItemId
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UTigerBuffAnarchHuntingKnifeStackInstance {
		constexpr auto Player = 0x88; // ATigerPlayer*
	}

	namespace n_UTigerTraversalFiniteStateMachine {
		constexpr auto TigerCharacterMovement = 0xb8; // UTigerCharacterMovementComponent*
		constexpr auto ActiveState = 0xc0; // UTigerTraversalBaseFiniteState*
		constexpr auto TraversalList = 0xc8; // UTigerTraversalBaseFiniteState* [0xf]
		constexpr auto Configs = 0x140; // UTigerTraversalStateConfigBase* [0xf]
		constexpr auto OnTraversalStateChanged = 0x1b8; // FMulticastInlineDelegate
	}

	namespace n_UTigerJudgeFedOnState {
		constexpr auto FeedingOffset = 0x60; // float
		constexpr auto FeedingAnimationName = 0x64; // FName
	}

	namespace n_UTBP_GroupMemberMapMarkerWidget_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto PlayerImage = 0x2c0; // UImage*
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UTBP_UI_TutorialMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto QuitButton = 0x298; // UTBP_UI_MenuButton_C*
		constexpr auto ResumeButton = 0x2a0; // UTBP_UI_MenuButton_C*
		constexpr auto ReturnButton = 0x2a8; // UTBP_UI_MenuButton_C*
		constexpr auto SelectionMenu = 0x2b0; // UTBP_UI_BasicMenu_C*
		constexpr auto TBP_UI_ConfirmMenu = 0x2b8; // UTBP_UI_ConfirmMenu_C*
		constexpr auto TBP_UI_InputPrompt_Gamepad_Quit = 0x2c0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto TBP_UI_InputPrompt_Gamepad_Resume = 0x2c8; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto TBP_UI_InputPrompt_Gamepad_Return = 0x2d0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto TBP_UI_InputPrompt_Keyboard_Quit = 0x2d8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto TBP_UI_InputPrompt_Keyboard_Resume = 0x2e0; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto TBP_UI_InputPrompt_Keyboard_Return = 0x2e8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto GameInstanceRef = 0x2f0; // UTBP_TigerGameInstance_C*
		constexpr auto ConfirmLeave = 0x2f8; // bool
		constexpr auto ConfirmQuit = 0x2f9; // bool
		constexpr auto WaitCount = 0x2fc; // int32_t
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UTigerBlueprintLootComponent {
		constexpr auto LootTable = 0xb0; // UTigerItemLootTable*
		constexpr auto SpawnedItemActors = 0xb8; // TArray<AActor*>
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UTBP_UI_Discipline_Scout_WorldMarker_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto DownArrowFadeOut = 0x328; // UWidgetAnimation*
		constexpr auto OffScreenState = 0x330; // UWidgetAnimation*
		constexpr auto DetectedText_FadeOut = 0x338; // UWidgetAnimation*
		constexpr auto DownArrow_Movement = 0x340; // UWidgetAnimation*
		constexpr auto Composite_DetectedAnimationOut = 0x348; // UWidgetAnimation*
		constexpr auto Composite_DetectedAnimationIn = 0x350; // UWidgetAnimation*
		constexpr auto DefaultBat_OutAnimation = 0x358; // UWidgetAnimation*
		constexpr auto DefaultBat_InAnimation = 0x360; // UWidgetAnimation*
		constexpr auto AnimatedDetectedText = 0x368; // UTBP_UI_TransitionHeader_C*
		constexpr auto BatDefaultImage = 0x370; // UImage*
		constexpr auto BatDetectedImage = 0x378; // UImage*
		constexpr auto DownArrowImage = 0x380; // UImage*
		constexpr auto RootCanvas = 0x388; // UCanvasPanel*
		constexpr auto bShouldDetectionWidgetsPlayHide = 0x390; // bool
		constexpr auto OnScreenRootTransform = 0x394; // FWidgetTransform
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Slide_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2b0; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b8; // bool
		constexpr auto TextureTargetLeft = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2d0; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d8; // float
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_UTigerSprintConfig {
		constexpr auto MinimumForwardInput = 0x28; // float
		constexpr auto SprintDelay = 0x30; // float
		constexpr auto MoveComp = 0x38; // UTigerCharacterMovementComponent*
		constexpr auto LedgeGrabReductionMultiplier = 0x4c; // float
		constexpr auto MeleeAttackReductionMultiplier = 0x50; // float [0x8]
		constexpr auto DisciplineUseReductionMultiplier = 0x70; // float [0x22]
		constexpr auto DodgeReductionMultiplier = 0xf8; // TArray<float>
		constexpr auto JumpReductionMultiplier = 0x108; // float
		constexpr auto DoubleJumpReductionMultiplier = 0x10c; // float
		constexpr auto SprintBuildUpDecayDuration = 0x110; // float
		constexpr auto SprintBuildUpDecayDelay = 0x114; // float
		constexpr auto SprintBuildUpCurve = 0x118; // UCurveFloat*
	}

	namespace n_ATigerEntityCheckpointSupplyDropLocation {
		constexpr auto SupplyRoot = 0x228; // USceneComponent*
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Radius = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Falloff = 0xd0; // EFieldFalloffType
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x30; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x60; // TArray<FName>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x84; // int32_t
		constexpr auto bNetAddressable = 0x88; // char : 1
		constexpr auto bReplicates = 0x88; // char : 1
		constexpr auto bAutoActivate = 0x89; // char : 1
		constexpr auto bIsActive = 0x8a; // char : 1
		constexpr auto bEditableWhenInherited = 0x8a; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x8a; // char : 1
		constexpr auto bIsEditorOnly = 0x8a; // char : 1
		constexpr auto CreationMethod = 0x8c; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x8d; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x8e; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x90; // TArray<FSimpleMemberReference>
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_UTigerHealingBuffInstance {
		constexpr auto BuffConfig = 0x88; // UTigerHealingBuff*
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UTigerPhysicalInteraction {
		constexpr auto OtherPlayer = 0x38; // TWeakObjectPtr<ATigerPlayer>
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x228; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x230; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x238; // UGizmoLineHandleComponent*
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UTigerAIPetPreparePathContinuing {
		constexpr auto MasterPlayer = 0x70; // FBlackboardKeySelector
	}

	namespace n_UABP_VMP_BRU_F_HAIR_09_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x2980; // FAnimNode_AnimDynamics
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ATigerPlayerGrid {
		constexpr auto Cells = 0x228; // TArray<FTigerPlayerGridCell>
		constexpr auto GridSize = 0x238; // FVector2D
		constexpr auto GridRows = 0x240; // int32_t
		constexpr auto GridColumns = 0x244; // int32_t
		constexpr auto CellDirectNeighborsToCheck = 0x248; // int32_t
		constexpr auto GridBoxComponent = 0x250; // UBoxComponent*
		constexpr auto bShowGrid = 0x258; // bool
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xb0; // float
		constexpr auto Position = 0xb4; // FVector
		constexpr auto InteriorValue = 0xc0; // int32_t
		constexpr auto ExteriorValue = 0xc4; // int32_t
		constexpr auto SetMaskCondition = 0xc8; // ESetMaskConditionType
	}

	namespace n_UTBP_ContextualHelp_Tutorial_SwapWeapons_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UABP_VMP_VEN_M_HAIR_09_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xba0; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UTigerNearCameraFadeMaterialDb {
		constexpr auto OriginalMaterialToFadingMaterialLut = 0x30; // TMap<TSoftObjectPtr<UMaterialInterface>, TSoftObjectPtr<UMaterialInterface>>
		constexpr auto FadingMaterialToOriginalMaterialLut = 0x80; // TMap<TSoftObjectPtr<UMaterialInterface>, TSoftObjectPtr<UMaterialInterface>>
	}

	namespace n_UTBP_Buff_RejuvenatingVoice_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
	}

	namespace n_UTigerAISenseConfig_Masquerade {
		constexpr auto Implementation = 0x48; // UTigerAISense_Masquerade*
	}

	namespace n_UTigerDisciplineMetaData {
		constexpr auto DisicplineType = 0x28; // ETigerDisciplinesEnum
		constexpr auto bAllowRotationLerp = 0x29; // bool
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UTigerAnimNotify_ParticleEffect {
		constexpr auto IndoorPSTemplate = 0x90; // UParticleSystem*
		constexpr auto OutdoorPSTemplate = 0x98; // UParticleSystem*
		constexpr auto PlayOnClients = 0xa0; // ETigerPlayOnClients
		constexpr auto ChooseParticleSystemOverride = 0xc0; // UTigerParticleStrategyChooseSystem*
		constexpr auto ParticlePostSpawnModification = 0xc8; // UTigerParticleStrategyPostSpawn*
	}

	namespace n_UTigerTraversalClimbState {
		constexpr auto ClimbingConfig = 0x40; // UTigerTraversalStateClimbingConfig*
	}

	namespace n_AReplicationGraphDebugActor {
		constexpr auto ReplicationGraph = 0x228; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x230; // UNetReplicationGraphConnection*
	}

	namespace n_UTigerSpawnPointSelectionUi {
		constexpr auto CurrentCanvasSize = 0x290; // FVector2D
		constexpr auto PreGameStateEndTime = 0x298; // int32_t
		constexpr auto CurrentPreMatchState = 0x29c; // ETigerPreMatchState
		constexpr auto CurrentSpawnSelectionInfo = 0x2a0; // TArray<FTigerClientSpawnLocationInfo>
		constexpr auto GroupSpawnLocationWidgets = 0x2b0; // TMap<int32_t, UTigerWidget*>
		constexpr auto CanvasSizeWidget = 0x300; // UWidget*
		constexpr auto bAllowOutOfBoundsSelection = 0x31c; // bool
		constexpr auto EnemySpawnLocationWidgets = 0x320; // TArray<UTigerWidget*>
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerAIThreateningTargetService {
		constexpr auto ThreatPosition = 0x70; // FBlackboardKeySelector
		constexpr auto CurrentThreatTarget = 0x98; // FBlackboardKeySelector
		constexpr auto SuggestedNonObstructedPosition = 0xc0; // FBlackboardKeySelector
		constexpr auto bIsAllowedToChaseKey = 0xe8; // FBlackboardKeySelector
		constexpr auto bCanShoot = 0x110; // FBlackboardKeySelector
		constexpr auto bUseAttackPermissions = 0x138; // bool
		constexpr auto bShowDebugFeatures = 0x139; // bool
	}

	namespace n_UReplicationGraph {
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0x98; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xa8; // TArray<UReplicationGraphNode*>
	}

	namespace n_ATBP_ShockwaveWall_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto PS_Vfx_ShockwavePunch = 0x2c8; // UParticleSystemComponent*
		constexpr auto KnockbackPitchOffsetInDegrees = 0x2d0; // float
		constexpr auto KnockbackForce = 0x2d4; // float
		constexpr auto bShouldDrawHitboxes = 0x2d8; // bool
		constexpr auto ShockwaveWallAkEventID = 0x2dc; // int32_t
		constexpr auto TrailActor = 0x2e0; // ATBP_ShockwaveWallTrail_C*
		constexpr auto ShockTrailParticleRate = 0x2e8; // float
		constexpr auto KnockbackCurve = 0x2f0; // UCurveFloat*
		constexpr auto ForceOnDynamicObjects = 0x2f8; // float
		constexpr auto DistancePercentTravelled = 0x2fc; // float
		constexpr auto DamageCurve = 0x300; // UCurveFloat*
		constexpr auto Shockwave Damage = 0x308; // float
	}

	namespace n_UTigerThrallMission {
		constexpr auto MissionId = 0x30; // int32_t
		constexpr auto MissionName = 0x34; // FName
		constexpr auto MissionObjective = 0x40; // FTigerThrallMissionObjective
		constexpr auto MissionMarkers = 0x78; // UTigerThrallMissionMapMarkerData*
		constexpr auto MissionStatRequirements = 0x80; // FThrallMissionRequirements
		constexpr auto MissionRewards = 0x98; // FTigerThrallMissionReward
		constexpr auto MissionLength = 0xb0; // int32_t
	}

	namespace n_UABP_VMP_BRU_F_HAIR_03_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xbc0; // FAnimNode_AnimDynamics
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x1f8; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x220; // bool
		constexpr auto bSnapBoundsToLandscape = 0x221; // bool
		constexpr auto VirtualTexture = 0x228; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x230; // bool
		constexpr auto ScalabilityGroup = 0x234; // uint32_t
		constexpr auto bHidePrimitives = 0x238; // bool
		constexpr auto StreamingTexture = 0x240; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x248; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x24c; // bool
		constexpr auto bEnableCompressCrunch = 0x24d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x24e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x24f; // bool
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UTigerGroupMemberMarkerProxy {
		constexpr auto PlayerIndex = 0x68; // char
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
		constexpr auto bNetTemporary = 0x58; // char : 1
		constexpr auto bNetStartup = 0x58; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
		constexpr auto bAlwaysRelevant = 0x58; // char : 1
		constexpr auto bReplicateMovement = 0x58; // char : 1
		constexpr auto bHidden = 0x58; // char : 1
		constexpr auto bTearOff = 0x58; // char : 1
		constexpr auto bExchangedRoles = 0x58; // char : 1
		constexpr auto bNetLoadOnClient = 0x59; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
		constexpr auto bReplayRewindable = 0x59; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x59; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x59; // char : 1
		constexpr auto bCanBeDamaged = 0x59; // char : 1
		constexpr auto bBlockInput = 0x5a; // char : 1
		constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x5a; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x5a; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x5a; // char : 1
		constexpr auto bReplicates = 0x5b; // char : 1
		constexpr auto bCanBeInCluster = 0x5b; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
		constexpr auto bActorEnableCollision = 0x5c; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5d; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x5f; // ENetRole
		constexpr auto ReplicatedMovement = 0x60; // FRepMovement
		constexpr auto InitialLifeSpan = 0x94; // float
		constexpr auto CustomTimeDilation = 0x98; // float
		constexpr auto AttachmentReplication = 0xa0; // FRepAttachment
		constexpr auto Owner = 0xe0; // AActor*
		constexpr auto CachedStreamingPriority = 0xe8; // int32_t
		constexpr auto NetDriverName = 0xec; // FName
		constexpr auto Role = 0xf4; // ENetRole
		constexpr auto NetDormancy = 0xf5; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xf6; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xf7; // EAutoReceiveInput
		constexpr auto InputPriority = 0xf8; // int32_t
		constexpr auto InputComponent = 0x100; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x108; // float
		constexpr auto NetTag = 0x10c; // int32_t
		constexpr auto NetUpdateFrequency = 0x110; // float
		constexpr auto MinNetUpdateFrequency = 0x114; // float
		constexpr auto NetPriority = 0x118; // float
		constexpr auto Instigator = 0x120; // APawn*
		constexpr auto Children = 0x128; // TArray<AActor*>
		constexpr auto RootComponent = 0x138; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x140; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x158; // TArray<FName>
		constexpr auto ParentComponent = 0x16c; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x178; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x188; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x189; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x18a; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x18b; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x18c; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x18d; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x18e; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x18f; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x190; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x191; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x192; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x193; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x194; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x195; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x196; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x197; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x1f8; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x208; // TArray<UActorComponent*>
	}

	namespace n_ATigerShockwaveWall {
		constexpr auto EffectBoxComponent = 0x230; // UBoxComponent*
		constexpr auto ShockwaveData = 0x238; // FTigerShockwaveWallData
		constexpr auto TargetLocation = 0x298; // FVector
		constexpr auto TigerInstigator = 0x2a4; // TWeakObjectPtr<ATigerPlayer>
		constexpr auto CurrentLifetime = 0x2ac; // float
		constexpr auto PowerLevel = 0x2b0; // int32_t
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x228; // ULandscapeMeshProxyComponent*
	}

	namespace n_UTigerPlayerGroup {
		constexpr auto Members = 0x58; // TArray<TWeakObjectPtr<ATigerPlayerState>>
		constexpr auto Invitations = 0x78; // TArray<TWeakObjectPtr<ATigerPlayerState>>
		constexpr auto PingCoordinator = 0x88; // UTigerPingCoordinator*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xb0; // EFieldResolutionType
	}

	namespace n_USharkTelemetry {
		constexpr auto TelemetryApplicationSettings = 0x28; // FSharkTelemetrySettings
		constexpr auto BufferedEvents = 0x90; // TArray<FSharkTelemtryEventData>
		constexpr auto GameInstance = 0xf0; // UGameInstance*
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xb0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x148; // char : 1
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x110; // float
		constexpr auto TextureMultiplier = 0x114; // float
	}

	namespace n_UTigerOnlineSubsystemSettings {
		constexpr auto OnlineServicesEnv = 0x38; // FString
		constexpr auto OnlineServicesBaseUrlDev = 0x48; // FString
		constexpr auto OnlineServicesBaseUrlUatMain = 0x58; // FString
		constexpr auto OnlineServicesBaseUrlUatRelease = 0x68; // FString
		constexpr auto OnlineServicesBaseUrlUatPs5 = 0x78; // FString
		constexpr auto OnlineServicesBaseUrlUatStaging = 0x88; // FString
		constexpr auto OnlineServicesBaseUrlProd = 0x98; // FString
		constexpr auto OnlineServicesBaseUrlLocal = 0xa8; // FString
		constexpr auto SessionServiceUri = 0xb8; // FString
		constexpr auto MaxRequestRetries = 0xc8; // int32_t
		constexpr auto MatchmakingTimeoutSeconds = 0xcc; // int32_t
		constexpr auto DsVersion = 0xd0; // FString
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_ATigerHolyIncense {
		constexpr auto OnAssaultFinished = 0x228; // FMulticastInlineDelegate
		constexpr auto Texture = 0x238; // UTigerScriptedTexture*
		constexpr auto SlateGasOverlay = 0x240; // UTigerGasOverlay*
		constexpr auto ProceduralMesh = 0x248; // UProceduralMeshComponent*
		constexpr auto WaveComponent = 0x250; // UTigerHolyIncenseWaveComponent*
		constexpr auto LevelBorder = 0x258; // USplineComponent*
		constexpr auto WallMinHeight = 0x260; // float
		constexpr auto WallMaxHeight = 0x264; // float
		constexpr auto PreviewMesh = 0x270; // UProceduralMeshComponent*
		constexpr auto GasMaterial = 0x278; // UMaterialInterface*
		constexpr auto MaterialInstance = 0x280; // UMaterialInstanceDynamic*
		constexpr auto InitialVertices = 0x288; // TArray<FVector2D>
		constexpr auto FinalHaven = 0x298; // ATigerHaven*
		constexpr auto NumVerticesPerKilometer = 0x2a0; // float
		constexpr auto ValidForGameType = 0x2a4; // ETigerGameType
		constexpr auto InitialArea = 0x2a8; // float
		constexpr auto InitialCircumference = 0x2ac; // float
	}

	namespace n_AAkAmbientSound {
		constexpr auto AkAudioEvent = 0x228; // UAkAudioEvent*
		constexpr auto AkComponent = 0x230; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x238; // bool
		constexpr auto AutoPost = 0x239; // bool
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UTigerBuffShieldAdrenalineRush {
		constexpr auto TimeBeforeDecay = 0x250; // float
		constexpr auto DecayPerSecond = 0x254; // float
		constexpr auto DamageToShieldScale = 0x258; // float
	}

	namespace n_UTigerSeasonConfigAsset {
		constexpr auto Config = 0x30; // FTigerSeasonConfig
	}

	namespace n_UTBP_EarthShock_C {
		constexpr auto UberGraphFrame = 0x178; // FPointerToUberGraphFrame
		constexpr auto Indicator = 0x180; // UDecalComponent*
		constexpr auto IndicatorOffset = 0x188; // float
		constexpr auto AudioComponent = 0x190; // UAkComponent*
		constexpr auto AimingAkEventID = 0x198; // int32_t
		constexpr auto LeapTimeCurve = 0x1a0; // UCurveFloat*
		constexpr auto IndicatorMesh = 0x1a8; // UStaticMeshComponent*
		constexpr auto Indicator Actor = 0x1b0; // ATBP_Vfx_GroundSlam_Marker_C*
		constexpr auto Target Is Wall = 0x1b8; // bool
		constexpr auto Impact VFX Actor = 0x1c0; // ATBP_VFX_GroundSlam_Impact_C*
		constexpr auto Calculated Rotation = 0x1c8; // FRotator
		constexpr auto Calculated Position = 0x1d4; // FVector
		constexpr auto Base Position = 0x1e0; // FVector
	}

	namespace n_UTigerAiPlayerUseWeapon {
		constexpr auto LocalAIController = 0x80; // ATigerLocalAIControllerBase*
		constexpr auto PlayerController = 0x88; // ATigerPlayerController*
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xf0; // int32_t
		constexpr auto SizeY = 0xf4; // int32_t
		constexpr auto ClearColor = 0xf8; // FLinearColor
		constexpr auto AddressX = 0x108; // TextureAddress
		constexpr auto AddressY = 0x109; // TextureAddress
		constexpr auto bForceLinearGamma = 0x10a; // char : 1
		constexpr auto bHDR = 0x10a; // char : 1
		constexpr auto bGPUSharedFlag = 0x10a; // char : 1
		constexpr auto RenderTargetFormat = 0x10b; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0x10c; // char : 1
		constexpr auto MipsSamplerFilter = 0x10d; // TextureFilter
		constexpr auto MipsAddressU = 0x10e; // TextureAddress
		constexpr auto MipsAddressV = 0x10f; // TextureAddress
		constexpr auto OverrideFormat = 0x110; // EPixelFormat
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_ATigerMasqueradeActionMarker {
		constexpr auto bOnlyVisibleInHeightenedSenses = 0x230; // bool
	}

	namespace n_UTigerSpawnMechanicBattleRoyaleBase {
		constexpr auto GameMode = 0x28; // ATigerMatchGameMode*
		constexpr auto AllPlayerStarts = 0x30; // TArray<AActor*>
		constexpr auto UnusedPlayerStarts = 0x40; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UTigerWardrobeUI {
		constexpr auto VendorComponent = 0x3b0; // UTigerVendorComponent*
		constexpr auto InventoryCategories = 0x3b8; // TArray<UTigerVendorStoreCategory*>
		constexpr auto CurrentCategory = 0x3c8; // UTigerVendorStoreCategory*
	}

	namespace n_UABP_VMP_VEN_M_HAIR_05_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UTigerGrimoireRichBlockDecorator {
		constexpr auto SummaryBackground = 0x28; // FSlateBrush
		constexpr auto GrimoireUI = 0xb0; // UTigerGrimoireUi*
		constexpr auto ButtonStyle = 0xb8; // FButtonStyle
		constexpr auto UnlockedEntryTextStyle = 0x330; // FTextBlockStyle
		constexpr auto LockedEntryTextStyle = 0x5a0; // FTextBlockStyle
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x1f8; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x1fc; // float
		constexpr auto OuterAttenuationRadius = 0x200; // float
		constexpr auto CameraShake = 0x208; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x210; // bool
	}

	namespace n_UAkAssetDataWithMedia {
		constexpr auto MediaList = 0x68; // TArray<UAkMediaAsset*>
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_ATigerEntityPatrollingHelicopter {
		constexpr auto PathData = 0x2e0; // FTigerAISplinePathData
		constexpr auto GeneratedCirclularPath = 0x380; // TArray<FVector>
		constexpr auto SpotlightColours = 0x390; // TMap<ETigerPatrollingHelicopterSpotlightState, FColor>
		constexpr auto CurrentTrackingFlightTarget = 0x3e0; // FVector
		constexpr auto NumberOfPointsInCirclularPath = 0x404; // int32_t
		constexpr auto CurrentSplineWaypointIndex = 0x408; // int32_t
		constexpr auto CurrentTrackingIndex = 0x40c; // int32_t
		constexpr auto IdleRotationSpeed = 0x414; // float
		constexpr auto HoverRotationSpeed = 0x418; // float
		constexpr auto IdleFlightSpeed = 0x41c; // float
		constexpr auto HoverFlightSpeed = 0x420; // float
		constexpr auto LostPlayerStateNewSpotlightTargetRadius = 0x424; // float
		constexpr auto MaxTimeToSearchForLostPlayer = 0x428; // float
		constexpr auto CurrentTimeUntilReturnToPatrol = 0x42c; // float
		constexpr auto MasqueradePointGainFromSpotlightPerSecond = 0x430; // float
		constexpr auto SpaceBetweenMeshes = 0x434; // float
		constexpr auto MovementDistanceThresholdSquared = 0x438; // float
		constexpr auto BelowRoofHeightCutOffTime = 0x43c; // float
		constexpr auto TimeCurrentTargetWasBelowRoofHeight = 0x440; // float
		constexpr auto TargetedPlayerHoverCircleRadius = 0x444; // float
		constexpr auto LostPlayerHoverCircleRadius = 0x448; // float
		constexpr auto CircleGrowthRate = 0x450; // float
		constexpr auto MaxTimeToFindGunFireEventCulprit = 0x454; // float
		constexpr auto TimeToLoseInvisibleBloodhuntTarget = 0x46c; // float
		constexpr auto DelayUntilPlayTargetSpottingSounds = 0x470; // float
		constexpr auto CurrentState = 0x474; // ETigerPatrollingHelicopterState
		constexpr auto CurrentSpotlightState = 0x475; // ETigerPatrollingHelicopterSpotlightState
		constexpr auto bHasReachedTarget = 0x476; // bool
		constexpr auto bNeedToCalculateEntryVectorForTracking = 0x477; // bool
		constexpr auto bWasLastTargetedPlayerBloodHunted = 0x478; // bool
		constexpr auto bHasActiveTask = 0x479; // bool
		constexpr auto bIsFiring = 0x47a; // bool
		constexpr auto AICoordinator = 0x480; // UTigerAICoordinator*
		constexpr auto Spline = 0x488; // USplineComponent*
	}

	namespace n_UTigerCharacterPreset {
		constexpr auto PreviewerData = 0x28; // FTigerPreviewerData
		constexpr auto BodyType = 0x2d8; // ETigerGender
	}

	namespace n_UTigerDisciplineEarthshock {
		constexpr auto EarthshockUseData = 0x78; // FEarthshockUseDataNetworked
		constexpr auto EarthshockConfig = 0xb0; // UTigerEarthshockConfig*
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_ATigerGrimoireUnlockTriggerVolume {
		constexpr auto EntryToUnlock = 0x260; // UTigerGrimoireEntry*
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xf0; // int32_t
		constexpr auto SizeY = 0xf4; // int32_t
		constexpr auto Slices = 0xf8; // int32_t
		constexpr auto ClearColor = 0xfc; // FLinearColor
		constexpr auto OverrideFormat = 0x10c; // EPixelFormat
		constexpr auto bHDR = 0x10d; // char : 1
		constexpr auto bForceLinearGamma = 0x10d; // char : 1
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_UTigerHealthBarUI {
		constexpr auto OnHealthChanged = 0x260; // FMulticastInlineDelegate
		constexpr auto TigerCharacterOwner = 0x270; // ATigerCharacter*
		constexpr auto HealthBarMaterial = 0x278; // UMaterialInstanceDynamic*
		constexpr auto LostHealthDelay = 0x280; // float
		constexpr auto LostHealthBarSpeed = 0x284; // float
		constexpr auto HealthAmountPerBar = 0x288; // float
		constexpr auto WidthBetweenSegments = 0x28c; // float
		constexpr auto LostHealthPercentage = 0x290; // float
		constexpr auto DefaultHealthAmount = 0x2a4; // float
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_UTBP_BeardColorCustomization_Master_C {
		constexpr auto UberGraphFrame = 0x148; // FPointerToUberGraphFrame
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UTigerMasqueradeMarker {
		constexpr auto MarkerRadius = 0x2b0; // float
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UTigerNPCVisualAsset {
		constexpr auto MainTag = 0x30; // FName
		constexpr auto AdditionalTags = 0x38; // TArray<FName>
		constexpr auto SkeletalMesh = 0x48; // USkeletalMesh*
		constexpr auto HeadSkeletalMeshes = 0x50; // TArray<USkeletalMesh*>
		constexpr auto HairSkeletalMeshes = 0x60; // TArray<USkeletalMesh*>
		constexpr auto ColorSetAssets = 0x70; // TArray<UTigerColorSetAsset*>
		constexpr auto HairColorSetAssets = 0x80; // TArray<UTigerLinearColorSetAsset*>
		constexpr auto DefaultMaterial = 0x90; // UMaterialInstance*
		constexpr auto bShowHeart = 0x98; // bool
		constexpr auto Gender = 0x99; // ETigerGender
		constexpr auto HairAnimationBlueprint = 0xa0; // UAnimInstance*
		constexpr auto bUseCharacterPreset = 0xa8; // bool
		constexpr auto CharacterPreset = 0xb0; // TSoftObjectPtr<UTigerCharacterPreset>
		constexpr auto AnimationInstanceClass = 0xd8; // UAnimInstance*
		constexpr auto EmotionalState = 0xe0; // ETigerCivilianEmotionalState
		constexpr auto ChanceForProp = 0xe4; // float
		constexpr auto PossibleNpcProps = 0xe8; // TMap<UTigerNpcPropAsset*, float>
		constexpr auto WalkSpeed = 0x138; // float
		constexpr auto WalkTurnSpeed = 0x13c; // float
		constexpr auto SprintSpeed = 0x140; // float
		constexpr auto SprintTurnSpeed = 0x144; // float
		constexpr auto StrafeSpeed = 0x148; // float
		constexpr auto StrafeTurnSpeed = 0x14c; // float
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UTigerVendorUI {
		constexpr auto VendorNPC = 0x290; // TWeakObjectPtr<ATigerNPC>
		constexpr auto InteractiveNpcComponent = 0x298; // TWeakObjectPtr<UTigerInteractiveNpcComponent>
		constexpr auto SharedVendorUI = 0x2a0; // UTigerSharedVendorUI*
		constexpr auto bHideMouseCusorAtDescruction = 0x2a8; // bool
		constexpr auto bUseTransitions = 0x2aa; // bool
	}

	namespace n_UTigerPingBase {
		constexpr auto MaxConcurrentPings = 0x30; // int32_t
		constexpr auto bBecomesPermanentOnInterest = 0x34; // bool
		constexpr auto bInstanceSupportsHover = 0x35; // bool
		constexpr auto LifeTimeInSeconds = 0x38; // float
		constexpr auto MaxDistance = 0x3c; // float
		constexpr auto MaxActorDistanceFromMarker = 0x40; // float
		constexpr auto WidgetClass = 0x48; // UTigerPingWorldInstanceUI*
		constexpr auto ExclusiveWithPingClasses = 0x50; // TArray<UTigerPingBase*>
		constexpr auto Icon = 0x60; // UTexture2D*
		constexpr auto InterestedResponseIcon = 0x68; // UTexture2D*
		constexpr auto NotInterestedResponseIcon = 0x70; // UTexture2D*
		constexpr auto Name = 0x78; // FText
		constexpr auto Description = 0x90; // FText
		constexpr auto InterestedResponse = 0xa8; // FText
		constexpr auto NotInterestedResponse = 0xc0; // FText
		constexpr auto NotificationAudioEvent = 0xd8; // UAkAudioEvent*
		constexpr auto VoiceAudioEvent = 0xe0; // UAkAudioEvent*
		constexpr auto bCanBeInCluster = 0xe8; // bool
	}

	namespace n_UInterpTrackInstAkAudioEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UTigerAnimInstance {
		constexpr auto EquippedWeaponType = 0x2b8; // ETigerEquippedWeaponType
		constexpr auto bOwnerIsLocked = 0x2b9; // bool
		constexpr auto FacePoseAsset = 0x2c0; // UPoseAsset*
		constexpr auto FacePoseAnimation = 0x2c8; // UAnimSequence*
		constexpr auto BlockStanceBlendSpace = 0x2d0; // UBlendSpace*
		constexpr auto DefaultAnimationSet = 0x328; // UTigerAnimationSetAsset*
		constexpr auto FaceCurvesAnimationMap = 0x330; // UTigerFaceCurvesAnimationMap*
		constexpr auto AvailableFaceCurves = 0x338; // TArray<FName>
		constexpr auto FacialAnimationFilter = 0x348; // UTigerAnimationFilter*
		constexpr auto AnimationSetCollection = 0x350; // UTigerAnimationSetCollection*
		constexpr auto PreviousAnimationSetCollection = 0x358; // UTigerAnimationSetCollection*
		constexpr auto LatestFacialAnim = 0x360; // UAnimMontage*
		constexpr auto Velocity = 0x368; // FVector
		constexpr auto PreviousVelocity = 0x374; // FVector
		constexpr auto Speed = 0x380; // float
		constexpr auto Direction = 0x384; // float
		constexpr auto AimAnglePitch = 0x388; // float
		constexpr auto AimAngleYaw = 0x38c; // float
		constexpr auto bIsDead = 0x394; // bool
		constexpr auto bShooting = 0x395; // bool
		constexpr auto bIsBlocking = 0x396; // bool
		constexpr auto bIsMontagePlaying = 0x397; // bool
		constexpr auto MaxRootYawOffset = 0x39c; // float
		constexpr auto MaxAimingRootYawOffset = 0x3a0; // float
		constexpr auto RootYawOffset = 0x3a4; // float
		constexpr auto SmoothCharacterYaw = 0x3a8; // float
		constexpr auto CharacterYawLastTick = 0x3ac; // float
		constexpr auto CharacterYawChangeOverFrame = 0x3b0; // float
		constexpr auto CharacterDeltaYawSmooth = 0x3b4; // float
	}

	namespace n_UTigerChallengeCollection {
		constexpr auto Challenges = 0x30; // TArray<FTigerChallengeCollectionEntry>
	}

	namespace n_UTigerTraversalWallGrindState {
		constexpr auto WallGrindConfig = 0x140; // UTigerTraversalStateWallGrindConfig*
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x228; // UPaperGroupedSpriteComponent*
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_ATigerRoofSystemFreeTransformable {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto SplineComponent = 0x230; // USplineComponent*
		constexpr auto Corners = 0x238; // TArray<FTigerRoofSystemFreeTransformableCorner>
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UTBP_UI_PsoCachingDX12_C {
		constexpr auto UberGraphFrame = 0x2a0; // FPointerToUberGraphFrame
		constexpr auto BackgroundScaleBox = 0x2a8; // UScaleBox*
		constexpr auto BackgroundVideoWidget = 0x2b0; // UImage*
		constexpr auto Image_547 = 0x2b8; // UImage*
		constexpr auto ProgressBar = 0x2c0; // UProgressBar*
		constexpr auto SkipButton = 0x2c8; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_Loading_Throbber = 0x2d0; // UTBP_UI_Loading_Throbber_C*
		constexpr auto Vein1 = 0x2d8; // UImage*
		constexpr auto Vein2 = 0x2e0; // UImage*
		constexpr auto Vein3 = 0x2e8; // UImage*
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x478; // UGeometryCache*
		constexpr auto bRunning = 0x480; // bool
		constexpr auto bLooping = 0x481; // bool
		constexpr auto StartTimeOffset = 0x484; // float
		constexpr auto PlayBackSpeed = 0x488; // float
		constexpr auto NumTracks = 0x48c; // int32_t
		constexpr auto ElapsedTime = 0x490; // float
		constexpr auto Duration = 0x4c4; // float
		constexpr auto bManualTick = 0x4c8; // bool
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_UAkHololensInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UTBP_UI_ConfirmMenu_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ConfirmWidget = 0x288; // UTBP_UI_InputMenuPrompt_C*
		constexpr auto DeclineWidget = 0x290; // UTBP_UI_InputMenuPrompt_C*
		constexpr auto InnerCountdownWidget = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto InnerTitleWidget = 0x2a0; // UTigerStyledRichTextBlock*
		constexpr auto PopUpWidget = 0x2a8; // UTBP_UI_FullScreen_PopUp_Base_C*
		constexpr auto Confirm = 0x2b0; // FMulticastInlineDelegate
		constexpr auto Decline = 0x2c0; // FMulticastInlineDelegate
		constexpr auto AcceptText = 0x2d0; // FText
		constexpr auto DeclineText = 0x2e8; // FText
		constexpr auto ConfirmAudioEvent = 0x300; // UAkAudioEvent*
		constexpr auto DeclineAudioEvent = 0x308; // UAkAudioEvent*
		constexpr auto QuestionText = 0x310; // FText
		constexpr auto bFadeOut = 0x328; // bool
		constexpr auto CountdownFinished = 0x330; // FMulticastInlineDelegate
		constexpr auto CountdownTime = 0x340; // int32_t
		constexpr auto ContinueCountdown = 0x344; // bool
	}

	namespace n_UTigerDisciplineVanish {
		constexpr auto Config = 0x78; // UTigerVanishConfig*
	}

	namespace n_UAkMacInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x288; // FVector
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_ATigerProjectile {
		constexpr auto CollisionComp = 0x228; // USphereComponent*
		constexpr auto ProjectileMovement = 0x230; // UProjectileMovementComponent*
		constexpr auto BulletTrail = 0x238; // UParticleSystemComponent*
		constexpr auto ProjectileMesh = 0x240; // UStaticMeshComponent*
		constexpr auto RangedWeaponType = 0x248; // UTigerRangedWeapon*
		constexpr auto HitAudioEnum = 0x258; // EHitAudio
		constexpr auto bDoProjectileCollision = 0x259; // bool
		constexpr auto bIsKilled = 0x25a; // bool
		constexpr auto bWillBeReflected = 0x25b; // bool
		constexpr auto bIsReflected = 0x25c; // bool
		constexpr auto bWasHeadShot = 0x25d; // bool
		constexpr auto bIsPooled = 0x25e; // bool
		constexpr auto HomeProjectilePool = 0x260; // UTigerProjectilePool*
		constexpr auto TraceNiagaraComponent = 0x268; // UNiagaraComponent*
		constexpr auto PiercedCharacters = 0x2a0; // TArray<FTigerRangedHitInfo>
		constexpr auto HitCharacters = 0x2b0; // TArray<ATigerCharacter*>
	}

	namespace n_ATigerSplatmapCell {
		constexpr auto TextureResource = 0x228; // UTexture2D*
		constexpr auto DrawMaterial = 0x230; // UMaterialInterface*
		constexpr auto BoundsSize = 0x238; // float
	}

	namespace n_UTigerTraversalLowVaultState {
		constexpr auto ActiveLowVaultMontage = 0x48; // UAnimMontage*
	}

	namespace n_UABP_SKM_VMP_BRU_F_HAIR_14_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UTigerNPCBehaviorAsset {
		constexpr auto NPCBlueprint = 0x30; // ATigerBaseNPC*
		constexpr auto MasqueradeActionResponseClass = 0x38; // UTigerMasqueradeActionResponse*
		constexpr auto DefaultBehaviorTree = 0x40; // UBehaviorTree*
		constexpr auto BehaviorTrees = 0x48; // TMap<ETigerAIMasqueradeState, UBehaviorTree*>
		constexpr auto AdditionalComponentClasses = 0x98; // TArray<UActorComponent*>
		constexpr auto WeaponClass = 0xa8; // UTigerWeapon*
		constexpr auto NPCType = 0xb0; // ETigerNPCType
		constexpr auto AnimationMode = 0xb1; // ETigerAIAnimationMode
		constexpr auto BaseStatModifications = 0xb4; // FTigerCharacterStatModification
		constexpr auto BaseGroupStatModifications = 0x144; // FTigerCharacterStatModification
		constexpr auto bUseGroupStats = 0x1d4; // bool
		constexpr auto OverrideBaseMaxHealth = 0x1d8; // float
	}

	namespace n_UTigerBuildingWallStreamingSettings {
		constexpr auto WallsToStreamPerFrame = 0x38; // int32_t
		constexpr auto bLoggingEnabled = 0x3c; // bool
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_UTigerAnimNotify_Recklessness {
		constexpr auto bActivate = 0x38; // bool
	}

	namespace n_UTigerCharacterEmoteCustomization {
		constexpr auto EmoteMontage = 0x110; // UAnimMontage*
		constexpr auto bStopsMovement = 0x118; // bool
		constexpr auto ThumbnailPoseTime = 0x11c; // float
	}

	namespace n_UTigerMasqueradeActionResponse {
		constexpr auto MinFearScaleDistance = 0x28; // float
		constexpr auto MinFearScaleValue = 0x2c; // float
		constexpr auto MinMasqueradeScaleDistance = 0x30; // float
		constexpr auto MinMasqueradeScaleValue = 0x34; // float
		constexpr auto bIsDummy = 0x38; // bool
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UTigerThumbnailCameraComponent {
		constexpr auto CameraTag = 0x1f8; // FString
	}

	namespace n_UABP_Ranged_Weapon_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByEnum = 0x2f8; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0x3a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x500; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x658; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x680; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x6a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x800; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x828; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x930; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0xa88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0xab0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xbb8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xbd8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xbf8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequenceEvaluator_57 = 0xd00; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_56 = 0xd50; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_55 = 0xda0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0xdf0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0xe90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_15 = 0xf30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_15 = 0xf60; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1010; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequenceEvaluator_54 = 0x1118; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_53 = 0x1168; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x11b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_52 = 0x1258; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_51 = 0x12a8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x12f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x1398; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_14 = 0x1438; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_14 = 0x1468; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x1518; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x15b8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x1710; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_50 = 0x1738; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_49 = 0x1788; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x17d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_48 = 0x1878; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_47 = 0x18c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x1918; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0x19b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_13 = 0x1a58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_13 = 0x1a88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_5 = 0x1b38; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_4 = 0x1b80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x1bc8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x1bf0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x1d48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x1d70; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x1ec8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x1ef0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x2048; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_46 = 0x2070; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_12 = 0x20c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_12 = 0x20f0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x21a0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x22f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x2320; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_45 = 0x23e0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_44 = 0x2430; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_43 = 0x2480; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_42 = 0x24d0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_41 = 0x2520; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x2570; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x2610; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x26b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0x2750; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_11 = 0x2780; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequenceEvaluator_40 = 0x2830; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_39 = 0x2880; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x28d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_38 = 0x2970; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_37 = 0x29c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x2a10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x2ab0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_10 = 0x2b50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_10 = 0x2b80; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequenceEvaluator_36 = 0x2c30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_35 = 0x2c80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x2cd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_34 = 0x2d70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_33 = 0x2dc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x2e10; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x2eb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_9 = 0x2f50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0x2f80; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x3030; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x3188; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_32 = 0x31b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_31 = 0x3200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x3250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_30 = 0x32f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x3340; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x33e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_29 = 0x3480; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_StateResult_8 = 0x34d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0x3500; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x35b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x3708; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x3730; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_3 = 0x37d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x3818; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x3840; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x3900; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x3a58; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x3aa0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x3ac8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_28 = 0x3af0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_27 = 0x3b40; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x3b90; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_26 = 0x3c30; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_25 = 0x3c80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x3cd0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x3d70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_7 = 0x3e10; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0x3e40; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x3ef0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x4048; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_24 = 0x4070; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_23 = 0x40c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x4110; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_22 = 0x41b0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_21 = 0x4200; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x4250; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x42f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_6 = 0x4390; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x43c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x4470; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x45c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_20 = 0x45f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_19 = 0x4640; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x4690; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_18 = 0x4730; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_17 = 0x4780; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x47d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x4870; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_5 = 0x4910; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x4940; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x49f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x4b48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x4b70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot = 0x4c10; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x4c58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_16 = 0x4c80; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_15 = 0x4cd0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x4d20; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_14 = 0x4dc0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_13 = 0x4e10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x4e60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x4f00; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_4 = 0x4fa0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x4fd0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x5080; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x51d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x5200; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone = 0x5228; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x5330; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x5350; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x5370; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_12 = 0x54c8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_11 = 0x5518; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x5568; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_10 = 0x5608; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x5658; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x56a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x5748; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_3 = 0x57e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x5818; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose = 0x58c8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x5a20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x5a48; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x5a98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x5ae8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x5b88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0x5bd8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x5c28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x5cc8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_2 = 0x5d68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x5d98; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0x5e48; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0x5e98; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x5ee8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x5f88; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x5fd8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x6028; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x60c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x6168; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x6198; // FAnimNode_StateMachine
		constexpr auto CurrentRangedWeapon = 0x6248; // ENUM_RangedWeaponCategories
		constexpr auto IsAimingWeapon = 0x6249; // bool
		constexpr auto IsHipFiring = 0x624a; // bool
		constexpr auto FireWeaponBlendInTime = 0x624c; // float
		constexpr auto IsCrouching = 0x6250; // bool
		constexpr auto HipOrAimFiring = 0x6251; // bool
		constexpr auto RootJointOffset = 0x6254; // FVector
		constexpr auto LeftHandIKOffset = 0x6260; // FVector
		constexpr auto IsPlayingAsFemaleFloat = 0x626c; // float
		constexpr auto IsMovingOnGround = 0x6270; // bool
		constexpr auto ShouldOffsetLeftElbow = 0x6278; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto ShouldUseLeftElbowOffsetAlpha = 0x6288; // float
		constexpr auto LeftElbowOffset = 0x628c; // FVector
		constexpr auto WallJumpIsAvailable = 0x6298; // bool
		constexpr auto RootJointOffsetMap = 0x62a0; // TMap<ENUM_RangedWeaponCategories, FVector>
		constexpr auto LeftHandOffsetMap = 0x62f0; // TMap<ENUM_RangedWeaponCategories, FVector>
		constexpr auto WeaponScaleAlpha = 0x6340; // float
		constexpr auto WeaponScaleVector = 0x6344; // FVector
		constexpr auto BodyType = 0x6350; // ETigerGender
		constexpr auto WeaponScaleMap = 0x6358; // TMap<ENUM_RangedWeaponCategories, float>
		constexpr auto IsPlayingAsFemaleBool = 0x63a8; // bool
		constexpr auto IsSecondaryWeapon = 0x63a9; // bool
		constexpr auto Anim Instance = 0x63b0; // UABP_Player_C*
		constexpr auto AimSweepFloat = 0x63b8; // float
		constexpr auto Player = 0x63c0; // ATigerPlayer*
		constexpr auto Is in Reload = 0x63c8; // bool
		constexpr auto MagazineRotationAmount = 0x63cc; // FRotator
		constexpr auto RotatingMagazine = 0x63d8; // bool
		constexpr auto Alpha = 0x63dc; // float
		constexpr auto Is Sprinting = 0x63e0; // bool
	}

	namespace n_UTBP_RangedWeapon_Master_C {
		constexpr auto CrouchingAimingCameraPreset = 0x1e8; // UTigerCameraPreset*
		constexpr auto SpreadOfCurrentShot = 0x1f0; // FVector
		constexpr auto Slowed Time = 0x1fc; // float
		constexpr auto AnimRangedWeaponCategory = 0x200; // ENUM_RangedWeaponCategories
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightmapType = 0xa0; // ELightmapType
		constexpr auto DetailMode = 0xa1; // EDetailMode
		constexpr auto LightMapCoordinateIndex = 0xa4; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa8; // float
		constexpr auto BodySetup = 0xb0; // UBodySetup*
		constexpr auto LODForCollision = 0xb8; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xbc; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xbc; // char : 1
		constexpr auto bHasNavigationData = 0xbc; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xbc; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xbc; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xbc; // char : 1
		constexpr auto bAllowCPUAccess = 0xbc; // char : 1
		constexpr auto ScreenCullSize = 0xc0; // FPerPlatformFloat
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xc4; // char : 1
		constexpr auto Sockets = 0xe8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0x108; // FVector
		constexpr auto NegativeBoundsExtension = 0x114; // FVector
		constexpr auto ExtendedBounds = 0x120; // FBoxSphereBounds
		constexpr auto StreamingPriority = 0x13c; // EActorStreamingPriorityTiers
		constexpr auto ElementToIgnoreForTexFactor = 0x140; // int32_t
		constexpr auto AssetUserData = 0x148; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x158; // UObject*
		constexpr auto NavCollision = 0x160; // UNavCollisionBase*
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_UTigerPassiveUnbridledRageLogic {
		constexpr auto Config = 0xc0; // UTigerPassiveUnbridledRageConfig*
		constexpr auto Player = 0xc8; // ATigerPlayer*
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_UABP_VMP_VEN_F_HAIR_01_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xba0; // FAnimNode_ConvertComponentToLocalSpace
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UTigerGroupStateComponent {
		constexpr auto OnGroupMembersChanged = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnPlayerIndexChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OtherGroupMembers = 0xd0; // TArray<TWeakObjectPtr<ATigerPlayerState>>
		constexpr auto OnMarkedAsGroupMember = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnRemoveMarkedAsGroupMember = 0x108; // FMulticastInlineDelegate
		constexpr auto CompassComponent = 0x118; // UTigerCompassMarkerComponent*
		constexpr auto LocalPlayerController = 0x120; // ATigerPlayerController*
		constexpr auto GroupMemberMapMarkerProxy = 0x128; // UTigerGroupMemberMarkerProxy*
		constexpr auto GroupMemberId = 0x130; // char
	}

	namespace n_UABP_Player_C {
		constexpr auto UberGraphFrame = 0x500; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SaveCachedPose_47 = 0x508; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_MakeDynamicAdditive_10 = 0x660; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_36 = 0x698; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_Slot_37 = 0x760; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_36 = 0x7a8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_69 = 0x7f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_46 = 0x8b0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_117 = 0xa08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_45 = 0xa30; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_116 = 0xb88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_44 = 0xbb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_115 = 0xd08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_114 = 0xd30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_68 = 0xd58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_113 = 0xe18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_88 = 0xe40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_87 = 0xee0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_67 = 0xf80; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_43 = 0x1040; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_112 = 0x1198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_111 = 0x11c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_110 = 0x11e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_109 = 0x1210; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_108 = 0x1238; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_107 = 0x1260; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_106 = 0x1288; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_11 = 0x12b0; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_8 = 0x12e0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_ModifyBone_181 = 0x13f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_56 = 0x1500; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_56 = 0x1520; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_180 = 0x1540; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_179 = 0x1648; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_178 = 0x1750; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_177 = 0x1858; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_176 = 0x1960; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Root_10 = 0x1a68; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_7 = 0x1a98; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SaveCachedPose_42 = 0x1bb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_86 = 0x1d08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_105 = 0x1da8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_104 = 0x1dd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_41 = 0x1df8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_103 = 0x1f50; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_35 = 0x1f78; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_34 = 0x1fc0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_33 = 0x2008; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Root_9 = 0x2050; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_32 = 0x2080; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LinkedInputPose_6 = 0x20c8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SaveCachedPose_40 = 0x21e0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_102 = 0x2338; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_101 = 0x2360; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_39 = 0x2388; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_85 = 0x24e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_3 = 0x2580; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_84 = 0x2710; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_100 = 0x27b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_34 = 0x27d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_66 = 0x28a0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_99 = 0x2960; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_65 = 0x2988; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_98 = 0x2a48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_97 = 0x2a70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_96 = 0x2a98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_8 = 0x2ac0; // FAnimNode_Root
		constexpr auto AnimGraphNode_ApplyAdditive_35 = 0x2af0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_155 = 0x2bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseBlendNode = 0x2c38; // FAnimNode_PoseBlendNode
		constexpr auto AnimGraphNode_LinkedInputPose_5 = 0x2cd8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SequencePlayer_154 = 0x2df0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_33 = 0x2e70; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_153 = 0x2f38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_152 = 0x2fb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_151 = 0x3038; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_150 = 0x30b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_32 = 0x3138; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_31 = 0x3200; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_30 = 0x32c8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Root_7 = 0x3390; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_185 = 0x33c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_184 = 0x33e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_183 = 0x3410; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_182 = 0x3438; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_181 = 0x3460; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_180 = 0x3488; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_179 = 0x34b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_178 = 0x34d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_177 = 0x3500; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_176 = 0x3528; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_175 = 0x3550; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_174 = 0x3578; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_173 = 0x35a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_172 = 0x35c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_171 = 0x35f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_170 = 0x3618; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_149 = 0x3640; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_83 = 0x36c0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_148 = 0x36f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_82 = 0x3770; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_147 = 0x37a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_81 = 0x3820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_100 = 0x3850; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_80 = 0x3938; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_146 = 0x3968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_79 = 0x39e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_145 = 0x3a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_83 = 0x3a98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_144 = 0x3b38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_78 = 0x3bb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace_55 = 0x3be8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_55 = 0x3c08; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_175 = 0x3c28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_99 = 0x3d30; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_77 = 0x3e18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_20 = 0x3e48; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_143 = 0x3ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_82 = 0x3f78; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RotateRootBone_43 = 0x4018; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_64 = 0x40b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_38 = 0x4178; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_95 = 0x42d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_94 = 0x42f8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_31 = 0x4320; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Root_6 = 0x4368; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_4 = 0x4398; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_Slot_30 = 0x44b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_63 = 0x44f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_93 = 0x45b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_81 = 0x45e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_37 = 0x4680; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_92 = 0x47d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_91 = 0x4800; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_29 = 0x4828; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_36 = 0x48f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_90 = 0x4a48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_89 = 0x4a70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_5 = 0x4a98; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_3 = 0x4ac8; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_Slot_29 = 0x4be0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_62 = 0x4c28; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_35 = 0x4ce8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_88 = 0x4e40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_34 = 0x4e68; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_87 = 0x4fc0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_86 = 0x4fe8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_85 = 0x5010; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_80 = 0x5038; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_61 = 0x50d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_84 = 0x5198; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_4 = 0x51c0; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose_2 = 0x51f0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SaveCachedPose_33 = 0x5308; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_28 = 0x5460; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_60 = 0x54a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace_2 = 0x5568; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_59 = 0x56f8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_79 = 0x57b8; // FAnimNode_BlendListByBool
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_14 = 0x5858; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_RotationOffsetBlendSpace = 0x5908; // FAnimNode_RotationOffsetBlendSpace
		constexpr auto AnimGraphNode_BlendListByBool_78 = 0x5a98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_32 = 0x5b38; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_83 = 0x5c90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_82 = 0x5cb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_81 = 0x5ce0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_80 = 0x5d08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_169 = 0x5d30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_168 = 0x5d58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_167 = 0x5d80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_166 = 0x5da8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_165 = 0x5dd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_142 = 0x5df8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_76 = 0x5e78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_141 = 0x5ea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_75 = 0x5f28; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_74 = 0x5f58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_19 = 0x5f88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_14 = 0x6038; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_58 = 0x6108; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_79 = 0x61c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_57 = 0x61f0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_78 = 0x62b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_56 = 0x62d8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_77 = 0x6398; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_77 = 0x63c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_55 = 0x6460; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_76 = 0x6520; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_76 = 0x6548; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_75 = 0x65e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_74 = 0x6610; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_73 = 0x6638; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_72 = 0x6660; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_71 = 0x6688; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_3 = 0x66b0; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose = 0x66e0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_SaveCachedPose_31 = 0x67f8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_70 = 0x6950; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_27 = 0x6978; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_26 = 0x69c0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_30 = 0x6a08; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_75 = 0x6b60; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_54 = 0x6c00; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_29 = 0x6cc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_28 = 0x6e18; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_74 = 0x6f70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_73 = 0x7010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_69 = 0x70b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_68 = 0x70d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_67 = 0x7100; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_66 = 0x7128; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_53 = 0x7150; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_72 = 0x7210; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_52 = 0x72b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_71 = 0x7370; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_13 = 0x7410; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_12 = 0x74e0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_TransitionResult_164 = 0x75b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_163 = 0x75d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_162 = 0x7600; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_140 = 0x7628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_73 = 0x76a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_139 = 0x76d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_72 = 0x7758; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_71 = 0x7788; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_18 = 0x77b8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_11 = 0x7868; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_27 = 0x7938; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_65 = 0x7a90; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_64 = 0x7ab8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_25 = 0x7ae0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_24 = 0x7b28; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ApplyAdditive_34 = 0x7b70; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_138 = 0x7c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_137 = 0x7cb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_63 = 0x7d38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_62 = 0x7d60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_23 = 0x7d88; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_51 = 0x7dd0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_26 = 0x7e90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_61 = 0x7fe8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_70 = 0x8010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_60 = 0x80b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_59 = 0x80d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_58 = 0x8100; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_57 = 0x8128; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend_28 = 0x8150; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_25 = 0x8218; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_56 = 0x8370; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_55 = 0x8398; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_54 = 0x83c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_53 = 0x83e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_24 = 0x8410; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_52 = 0x8568; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_51 = 0x8590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_50 = 0x85b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequenceEvaluator_9 = 0x8678; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MakeDynamicAdditive_9 = 0x86c8; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_8 = 0x8700; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_10 = 0x8750; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool_69 = 0x8820; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequenceEvaluator_7 = 0x88c0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_MakeDynamicAdditive_8 = 0x8910; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SequenceEvaluator_6 = 0x8948; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_UseCachedPose_50 = 0x8998; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_23 = 0x89c0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_49 = 0x8b18; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_68 = 0x8b40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_48 = 0x8be0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_47 = 0x8c08; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_46 = 0x8c30; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_49 = 0x8c58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_67 = 0x8d18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_48 = 0x8db8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_27 = 0x8e78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SaveCachedPose_22 = 0x8f40; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_45 = 0x9098; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_44 = 0x90c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_22 = 0x90e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_21 = 0x9130; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_136 = 0x9178; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_135 = 0x91f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_54 = 0x9278; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_54 = 0x9298; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_174 = 0x92b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_173 = 0x93c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_172 = 0x94c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_171 = 0x95d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_170 = 0x96d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_169 = 0x97e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_66 = 0x98e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_70 = 0x9988; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_17 = 0x99b8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_UseCachedPose_43 = 0x9a68; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_21 = 0x9a90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_98 = 0x9be8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_97 = 0x9cd0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_65 = 0x9db8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_96 = 0x9e58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_95 = 0x9f40; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_64 = 0xa028; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_63 = 0xa0c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_69 = 0xa168; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_16 = 0xa198; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_9 = 0xa248; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendListByBool_62 = 0xa318; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_134 = 0xa3b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root_2 = 0xa438; // FAnimNode_Root
		constexpr auto AnimGraphNode_LocalToComponentSpace_53 = 0xa468; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_168 = 0xa488; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_167 = 0xa590; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_166 = 0xa698; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_53 = 0xa7a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_TwoBoneIK_18 = 0xa7c0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK_17 = 0xa9a0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_165 = 0xab80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_164 = 0xac88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_20 = 0xad90; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_61 = 0xaee8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_42 = 0xaf88; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_41 = 0xafb0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_161 = 0xafd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_160 = 0xb000; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_159 = 0xb028; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_68 = 0xb050; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_94 = 0xb080; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_60 = 0xb168; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_93 = 0xb208; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_67 = 0xb2f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_92 = 0xb320; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_91 = 0xb408; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_59 = 0xb4f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_66 = 0xb590; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_15 = 0xb5c0; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SaveCachedPose_19 = 0xb670; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_40 = 0xb7c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_39 = 0xb7f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_18 = 0xb818; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_58 = 0xb970; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_PoseSnapshot = 0xba10; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_LinkedAnimLayer_8 = 0xbaa0; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_TransitionResult_158 = 0xbb50; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_157 = 0xbb78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_156 = 0xbba0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_155 = 0xbbc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_154 = 0xbbf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_153 = 0xbc18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_152 = 0xbc40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_151 = 0xbc68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_150 = 0xbc90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_149 = 0xbcb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_148 = 0xbce0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_147 = 0xbd08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_146 = 0xbd30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_145 = 0xbd58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_144 = 0xbd80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_143 = 0xbda8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_142 = 0xbdd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_141 = 0xbdf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_140 = 0xbe20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_139 = 0xbe48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_138 = 0xbe70; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_137 = 0xbe98; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_136 = 0xbec0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_135 = 0xbee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_134 = 0xbf10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_133 = 0xbf38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_132 = 0xbf60; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_131 = 0xbf88; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_130 = 0xbfb0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_129 = 0xbfd8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_128 = 0xc000; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_127 = 0xc028; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_126 = 0xc050; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_125 = 0xc078; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_124 = 0xc0a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_123 = 0xc0c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_122 = 0xc0f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_121 = 0xc118; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_120 = 0xc140; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_119 = 0xc168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_RotateRootBone_42 = 0xc190; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ModifyBone_163 = 0xc230; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_162 = 0xc338; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_161 = 0xc440; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_160 = 0xc548; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_159 = 0xc650; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_52 = 0xc758; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_52 = 0xc778; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_158 = 0xc798; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TransitionResult_118 = 0xc8a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_117 = 0xc8c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_116 = 0xc8f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_65 = 0xc918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_133 = 0xc948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_41 = 0xc9c8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_64 = 0xca68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_57 = 0xca98; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_132 = 0xcb38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_131 = 0xcbb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_56 = 0xcc38; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_130 = 0xccd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_63 = 0xcd58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_14 = 0xcd88; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_62 = 0xce38; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_129 = 0xce68; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_47 = 0xcee8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_20 = 0xcfa8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SequencePlayer_128 = 0xcff0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_26 = 0xd070; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_127 = 0xd138; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_55 = 0xd1b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_90 = 0xd258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_89 = 0xd340; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_40 = 0xd428; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_46 = 0xd4c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_StateResult_61 = 0xd588; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_13 = 0xd5b8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_60 = 0xd668; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_115 = 0xd698; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_114 = 0xd6c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_113 = 0xd6e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_112 = 0xd710; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_111 = 0xd738; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_110 = 0xd760; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_109 = 0xd788; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_108 = 0xd7b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_107 = 0xd7d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_106 = 0xd800; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_105 = 0xd828; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_104 = 0xd850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_103 = 0xd878; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_102 = 0xd8a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_101 = 0xd8c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_100 = 0xd8f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_99 = 0xd918; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_98 = 0xd940; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_97 = 0xd968; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_96 = 0xd990; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_95 = 0xd9b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_94 = 0xd9e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_93 = 0xda08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_92 = 0xda30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_91 = 0xda58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_90 = 0xda80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_89 = 0xdaa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_88 = 0xdad0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_87 = 0xdaf8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_86 = 0xdb20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_85 = 0xdb48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_88 = 0xdb70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_39 = 0xdc58; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequenceEvaluator_5 = 0xdcf8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_33 = 0xdd48; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_7 = 0xde10; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SequencePlayer_126 = 0xde48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_157 = 0xdec8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_51 = 0xdfd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_51 = 0xdff0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_156 = 0xe010; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_155 = 0xe118; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_59 = 0xe220; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_87 = 0xe250; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_38 = 0xe338; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequenceEvaluator_4 = 0xe3d8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_32 = 0xe428; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_6 = 0xe4f0; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_SequencePlayer_125 = 0xe528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_154 = 0xe5a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_50 = 0xe6b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_50 = 0xe6d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_153 = 0xe6f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_152 = 0xe7f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_58 = 0xe900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_86 = 0xe930; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_37 = 0xea18; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequenceEvaluator_3 = 0xeab8; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_31 = 0xeb08; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_5 = 0xebd0; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_ModifyBone_151 = 0xec08; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_49 = 0xed10; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_49 = 0xed30; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_150 = 0xed50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_149 = 0xee58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_124 = 0xef60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_57 = 0xefe0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_148 = 0xf010; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_147 = 0xf118; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_146 = 0xf220; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_145 = 0xf328; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_144 = 0xf430; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_143 = 0xf538; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_142 = 0xf640; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_16 = 0xf750; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_48 = 0xf930; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_48 = 0xf950; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_15 = 0xf970; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_123 = 0xfb50; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_36 = 0xfbd0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_56 = 0xfc70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_141 = 0xfca0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_140 = 0xfda8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_139 = 0xfeb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_138 = 0xffb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_137 = 0x100c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_136 = 0x101c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_135 = 0x102d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_14 = 0x103e0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ComponentToLocalSpace_47 = 0x105c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_47 = 0x105e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_13 = 0x10600; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_122 = 0x107e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_35 = 0x10860; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_55 = 0x10900; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_134 = 0x10930; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_133 = 0x10a38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_132 = 0x10b40; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_131 = 0x10c48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_46 = 0x10d50; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_130 = 0x10d70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_46 = 0x10e78; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_12 = 0x10ea0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_121 = 0x11080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_34 = 0x11100; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_54 = 0x111a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_129 = 0x111d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_128 = 0x112d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_45 = 0x113e0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_127 = 0x11400; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_126 = 0x11508; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_125 = 0x11610; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_11 = 0x11720; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_45 = 0x11900; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_120 = 0x11920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_33 = 0x119a0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_53 = 0x11a40; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_124 = 0x11a70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_123 = 0x11b78; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_122 = 0x11c80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_121 = 0x11d88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_44 = 0x11e90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_120 = 0x11eb0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_10 = 0x11fc0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_44 = 0x121a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SequencePlayer_119 = 0x121c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_32 = 0x12240; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_52 = 0x122e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_119 = 0x12310; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_118 = 0x12418; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_117 = 0x12520; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_116 = 0x12628; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_43 = 0x12730; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_115 = 0x12750; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_43 = 0x12858; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_9 = 0x12880; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_SequencePlayer_118 = 0x12a60; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_31 = 0x12ae0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_51 = 0x12b80; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_50 = 0x12bb0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_84 = 0x12be0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_83 = 0x12c08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_82 = 0x12c30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyBone_114 = 0x12c58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_113 = 0x12d60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_42 = 0x12e68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_112 = 0x12e88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_111 = 0x12f90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_19 = 0x13098; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_110 = 0x130e0; // FAnimNode_ModifyBone
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_13 = 0x131e8; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_LocalToComponentSpace_42 = 0x13298; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_54 = 0x132b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_117 = 0x13358; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_53 = 0x133d8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_116 = 0x13478; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_52 = 0x134f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_115 = 0x13598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_30 = 0x13618; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_114 = 0x136e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_85 = 0x13760; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_84 = 0x13848; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_83 = 0x13930; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_29 = 0x13a18; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotateRootBone_30 = 0x13ae0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_49 = 0x13b80; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_12 = 0x13bb0; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ModifyBone_109 = 0x13c60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_108 = 0x13d68; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_41 = 0x13e70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_107 = 0x13e90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_106 = 0x13f98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_18 = 0x140a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_105 = 0x140e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoBoneIK_8 = 0x141f0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_41 = 0x143d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_51 = 0x143f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_113 = 0x14490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_50 = 0x14510; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_112 = 0x145b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_49 = 0x14630; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_111 = 0x146d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_28 = 0x14750; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_110 = 0x14818; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_82 = 0x14898; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_81 = 0x14980; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_80 = 0x14a68; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_27 = 0x14b50; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotateRootBone_29 = 0x14c18; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_48 = 0x14cb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_12 = 0x14ce8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_47 = 0x14d98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_81 = 0x14dc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_80 = 0x14df0; // FAnimNode_TransitionResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_11 = 0x14e18; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ComponentToLocalSpace_40 = 0x14ec8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_104 = 0x14ee8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_103 = 0x14ff0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_102 = 0x150f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_101 = 0x15200; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_17 = 0x15308; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_100 = 0x15350; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_40 = 0x15458; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_7 = 0x15480; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_48 = 0x15660; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_109 = 0x15700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_108 = 0x15780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_47 = 0x15800; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_26 = 0x158a0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_46 = 0x15968; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_25 = 0x15a08; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_79 = 0x15ad0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_107 = 0x15bb8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_106 = 0x15c38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_78 = 0x15cb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_77 = 0x15da0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_28 = 0x15e88; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_46 = 0x15f28; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_10 = 0x15f58; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ComponentToLocalSpace_39 = 0x16008; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_99 = 0x16028; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_98 = 0x16130; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_97 = 0x16238; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_96 = 0x16340; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_Slot_16 = 0x16448; // FAnimNode_Slot
		constexpr auto AnimGraphNode_ModifyBone_95 = 0x16490; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_39 = 0x16598; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_6 = 0x165c0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_45 = 0x167a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_105 = 0x16840; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_104 = 0x168c0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_44 = 0x16940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_24 = 0x169e0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendListByBool_43 = 0x16aa8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_23 = 0x16b48; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_76 = 0x16c10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_103 = 0x16cf8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_102 = 0x16d78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_75 = 0x16df8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_74 = 0x16ee0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_27 = 0x16fc8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_45 = 0x17068; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_11 = 0x17098; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_44 = 0x17148; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_79 = 0x17178; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_78 = 0x171a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_77 = 0x171c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x171f0; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x17240; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_22 = 0x17290; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_4 = 0x17358; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_ModifyBone_94 = 0x17390; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_38 = 0x17498; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_38 = 0x174b8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_93 = 0x174d8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_92 = 0x175e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_101 = 0x176e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_43 = 0x17768; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ModifyBone_91 = 0x17798; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_90 = 0x178a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_37 = 0x179a8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_89 = 0x179c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_88 = 0x17ad0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_87 = 0x17bd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_86 = 0x17ce0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_85 = 0x17de8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_100 = 0x17ef0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_42 = 0x17f70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_41 = 0x18010; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_99 = 0x180b0; // FAnimNode_SequencePlayer
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_9 = 0x18130; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_Slot_15 = 0x181e0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace_37 = 0x18228; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_5 = 0x18250; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_40 = 0x18430; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_21 = 0x184d0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_98 = 0x18598; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_97 = 0x18618; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_73 = 0x18698; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_72 = 0x18780; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_71 = 0x18868; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_20 = 0x18950; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotateRootBone_26 = 0x18a18; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_42 = 0x18ab8; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_8 = 0x18ae8; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ModifyBone_84 = 0x18b98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_83 = 0x18ca0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_36 = 0x18da8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_82 = 0x18dc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_81 = 0x18ed0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_80 = 0x18fd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_79 = 0x190e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_78 = 0x191e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_96 = 0x192f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_39 = 0x19370; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_38 = 0x19410; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_95 = 0x194b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoBoneIK_4 = 0x19530; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_Slot_14 = 0x19710; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LocalToComponentSpace_36 = 0x19758; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_TwoBoneIK_3 = 0x19780; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_BlendListByBool_37 = 0x19960; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyAdditive_19 = 0x19a00; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_94 = 0x19ac8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_93 = 0x19b48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_70 = 0x19bc8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_69 = 0x19cb0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_68 = 0x19d98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_18 = 0x19e80; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotateRootBone_25 = 0x19f48; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_41 = 0x19fe8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_10 = 0x1a018; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_40 = 0x1a0c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_9 = 0x1a0f8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_92 = 0x1a1a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_45 = 0x1a228; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_77 = 0x1a2e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_76 = 0x1a3f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_35 = 0x1a4f8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_35 = 0x1a518; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_StateResult_39 = 0x1a538; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_RotateRootBone_24 = 0x1a568; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ModifyBone_75 = 0x1a608; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_74 = 0x1a710; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_73 = 0x1a818; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_72 = 0x1a920; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_71 = 0x1aa28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_34 = 0x1ab30; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_34 = 0x1ab50; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_70 = 0x1ab70; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TransitionResult_76 = 0x1ac78; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_75 = 0x1aca0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_74 = 0x1acc8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_73 = 0x1acf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_72 = 0x1ad18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_91 = 0x1ad40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_90 = 0x1adc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_89 = 0x1ae40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_88 = 0x1aec0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_33 = 0x1af40; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_33 = 0x1af60; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_69 = 0x1af80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_23 = 0x1b088; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendListByEnum_2 = 0x1b128; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_38 = 0x1b1d8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateResult_37 = 0x1b208; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_67 = 0x1b238; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_44 = 0x1b320; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_25 = 0x1b3e0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_66 = 0x1b4a8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_65 = 0x1b590; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_43 = 0x1b678; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_64 = 0x1b738; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_36 = 0x1b820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_71 = 0x1b850; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateMachine_8 = 0x1b878; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_35 = 0x1b928; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Slot_13 = 0x1b958; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_12 = 0x1b9a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_11 = 0x1b9e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_70 = 0x1ba30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyBone_68 = 0x1ba58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_32 = 0x1bb60; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_32 = 0x1bb80; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_67 = 0x1bba0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_22 = 0x1bca8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_SequencePlayer_87 = 0x1bd48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_34 = 0x1bdc8; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_7 = 0x1bdf8; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_SequencePlayer_86 = 0x1bea8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_66 = 0x1bf28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_31 = 0x1c030; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_31 = 0x1c050; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_65 = 0x1c070; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_3 = 0x1c178; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_LayeredBoneBlend_42 = 0x1c268; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpaceEvaluator_2 = 0x1c328; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_BlendSpaceEvaluator = 0x1c418; // FAnimNode_BlendSpaceEvaluator
		constexpr auto AnimGraphNode_ApplyAdditive_17 = 0x1c508; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_85 = 0x1c5d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_16 = 0x1c650; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_RotateRootBone_21 = 0x1c718; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_33 = 0x1c7b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_7 = 0x1c7e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_32 = 0x1c898; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool_36 = 0x1c8c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_84 = 0x1c968; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_63 = 0x1c9e8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_62 = 0x1cad0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_61 = 0x1cbb8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_60 = 0x1cca0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_83 = 0x1cd88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_35 = 0x1ce08; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_34 = 0x1cea8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_33 = 0x1cf48; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool_32 = 0x1cfe8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_31 = 0x1d088; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_82 = 0x1d0b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_41 = 0x1d138; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_81 = 0x1d1f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_80 = 0x1d278; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_59 = 0x1d2f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_58 = 0x1d3e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_30 = 0x1d4c8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_30 = 0x1d4e8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_64 = 0x1d508; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_20 = 0x1d610; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendListByEnum = 0x1d6b0; // FAnimNode_BlendListByEnum
		constexpr auto AnimGraphNode_StateResult_30 = 0x1d760; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_69 = 0x1d790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_68 = 0x1d7b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_79 = 0x1d7e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_40 = 0x1d860; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_78 = 0x1d920; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_29 = 0x1d9a0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x1d9d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x1d9f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x1da20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x1da48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_77 = 0x1da70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_28 = 0x1daf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_76 = 0x1db20; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_27 = 0x1dba0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_75 = 0x1dbd0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_26 = 0x1dc50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_6 = 0x1dc80; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LayeredBoneBlend_39 = 0x1dd30; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x1ddf0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x1de18; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x1de40; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x1de68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x1de90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x1deb8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x1dee0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x1df08; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x1df30; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x1df58; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x1df80; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x1dfa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x1dfd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x1dff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x1e020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x1e048; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x1e070; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x1e098; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x1e0c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x1e0e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x1e110; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x1e138; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x1e160; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x1e188; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x1e1b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x1e1d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x1e200; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x1e228; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x1e250; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x1e278; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendListByBool_31 = 0x1e2a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendSpacePlayer_57 = 0x1e340; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_74 = 0x1e428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_38 = 0x1e4a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_37 = 0x1e568; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_73 = 0x1e628; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_24 = 0x1e6a8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_23 = 0x1e770; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_72 = 0x1e838; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_71 = 0x1e8b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_70 = 0x1e938; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_19 = 0x1e9b8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_StateResult_25 = 0x1ea58; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_36 = 0x1ea88; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ApplyAdditive_15 = 0x1eb48; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_ApplyAdditive_14 = 0x1ec10; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_69 = 0x1ecd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_68 = 0x1ed58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_67 = 0x1edd8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_66 = 0x1ee58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_MakeDynamicAdditive_3 = 0x1eed8; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_MakeDynamicAdditive_2 = 0x1ef10; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_TwoWayBlend_22 = 0x1ef48; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_65 = 0x1f010; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_64 = 0x1f090; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_21 = 0x1f110; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_63 = 0x1f1d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_62 = 0x1f258; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_20 = 0x1f2d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_61 = 0x1f3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_35 = 0x1f420; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_60 = 0x1f4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_59 = 0x1f560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_58 = 0x1f5e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_29 = 0x1f660; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_29 = 0x1f680; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_63 = 0x1f6a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_18 = 0x1f7a8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ModifyBone_62 = 0x1f848; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_28 = 0x1f950; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_28 = 0x1f970; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_61 = 0x1f990; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_17 = 0x1fa98; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ApplyAdditive_13 = 0x1fb38; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_56 = 0x1fc00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_24 = 0x1fce8; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_6 = 0x1fd18; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ComponentToLocalSpace_27 = 0x1fdc8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_60 = 0x1fde8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_27 = 0x1fef0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_34 = 0x1ff10; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ComponentToLocalSpace_26 = 0x1ffd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_26 = 0x1fff0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_59 = 0x20010; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_25 = 0x20118; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_25 = 0x20138; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_58 = 0x20158; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ApplyAdditive_12 = 0x20260; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_55 = 0x20328; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_57 = 0x20410; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_56 = 0x20490; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_33 = 0x20510; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_55 = 0x205d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_32 = 0x20650; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_54 = 0x20710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_8 = 0x20790; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_31 = 0x20860; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_30 = 0x20920; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_7 = 0x209c0; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_RotateRootBone_16 = 0x20a90; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_RotateRootBone_15 = 0x20b30; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_TwoWayBlend_19 = 0x20bd0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_53 = 0x20c98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_52 = 0x20d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_54 = 0x20d98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_18 = 0x20e80; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_51 = 0x20f48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_50 = 0x20fc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_53 = 0x21048; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_11 = 0x21130; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_52 = 0x211f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ModifyBone_57 = 0x212e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_24 = 0x213e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_24 = 0x21408; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_56 = 0x21428; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_55 = 0x21530; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_23 = 0x21638; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_23 = 0x21658; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_54 = 0x21678; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_53 = 0x21780; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_22 = 0x21888; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_22 = 0x218a8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_52 = 0x218c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_51 = 0x219d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_21 = 0x21ad8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_21 = 0x21af8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_50 = 0x21b18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoWayBlend_17 = 0x21c20; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_16 = 0x21ce8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_51 = 0x21db0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_50 = 0x21e98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_49 = 0x21f80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_48 = 0x22068; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_49 = 0x22150; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_47 = 0x221d0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_6 = 0x222b8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_46 = 0x22388; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_14 = 0x22470; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendListByBool_29 = 0x22510; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_30 = 0x225b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_29 = 0x22670; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_48 = 0x22730; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_13 = 0x227b0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_5 = 0x22850; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_45 = 0x22920; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_44 = 0x22a08; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ModifyBone_49 = 0x22af0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_20 = 0x22bf8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_20 = 0x22c18; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_48 = 0x22c38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_23 = 0x22d40; // FAnimNode_StateResult
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_5 = 0x22d70; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ComponentToLocalSpace_19 = 0x22e20; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_19 = 0x22e40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_47 = 0x22e60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_18 = 0x22f68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_18 = 0x22f88; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_46 = 0x22fa8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_17 = 0x230b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_17 = 0x230d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_45 = 0x230f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ApplyAdditive_10 = 0x231f8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_43 = 0x232c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_47 = 0x233a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_46 = 0x23428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_28 = 0x234a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_45 = 0x23568; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_27 = 0x235e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_44 = 0x236a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ModifyBone_44 = 0x23728; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_16 = 0x23830; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_16 = 0x23850; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_43 = 0x23870; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_42 = 0x23978; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_15 = 0x23a80; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_15 = 0x23aa0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_41 = 0x23ac0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_40 = 0x23bc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_14 = 0x23cd0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_14 = 0x23cf0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_39 = 0x23d10; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_38 = 0x23e18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_13 = 0x23f20; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_13 = 0x23f40; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_37 = 0x23f60; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoWayBlend_15 = 0x24068; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_14 = 0x24130; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_42 = 0x241f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_41 = 0x242e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_40 = 0x243c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_39 = 0x244b0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_12 = 0x24598; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_RotateRootBone_11 = 0x24638; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_TwoWayBlend_13 = 0x246d8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_43 = 0x247a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_42 = 0x24820; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_38 = 0x248a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_4 = 0x24988; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_LayeredBoneBlend_26 = 0x24a58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_28 = 0x24b18; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_25 = 0x24bb8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_12 = 0x24c78; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_41 = 0x24d40; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_40 = 0x24dc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_3 = 0x24e40; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_37 = 0x24f10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyAdditive_9 = 0x24ff8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_36 = 0x250c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SequencePlayer_39 = 0x251a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_35 = 0x25228; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive_2 = 0x25310; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_34 = 0x253e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_RotateRootBone_10 = 0x254c8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendListByBool_27 = 0x25568; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_24 = 0x25608; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_23 = 0x256c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_38 = 0x25788; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RotateRootBone_9 = 0x25808; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_ApplyMeshSpaceAdditive = 0x258a8; // FAnimNode_ApplyMeshSpaceAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_33 = 0x25978; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_32 = 0x25a60; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ModifyBone_36 = 0x25b48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_12 = 0x25c50; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_12 = 0x25c70; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_35 = 0x25c90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_22 = 0x25d98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_5 = 0x25dc8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_21 = 0x25e78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x25ea8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x25ed0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TwoWayBlend_11 = 0x25ef8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_37 = 0x25fc0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_10 = 0x26040; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_36 = 0x26108; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_22 = 0x26188; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_35 = 0x26248; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_34 = 0x262c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_21 = 0x26348; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x26408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x26430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x26458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x26480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x264a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x264d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x264f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x26520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x26548; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x26570; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x26598; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x265c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x265e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x26610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x26638; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x26660; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x26688; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ApplyAdditive_8 = 0x266b0; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_31 = 0x26778; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_30 = 0x26860; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_26 = 0x26948; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ComponentToLocalSpace_11 = 0x269e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_11 = 0x26a08; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_34 = 0x26a28; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_33 = 0x26b30; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_32 = 0x26c38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_8 = 0x26d40; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_29 = 0x26de0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_28 = 0x26ec8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_25 = 0x26fb0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_20 = 0x27050; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_33 = 0x27080; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_20 = 0x27100; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_27 = 0x271c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_24 = 0x272a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_9 = 0x27348; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_8 = 0x27410; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_32 = 0x274d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_31 = 0x27558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_30 = 0x275d8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x27658; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_29 = 0x27688; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_19 = 0x27708; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_26 = 0x277c8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_23 = 0x278b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_7 = 0x27950; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_28 = 0x27a18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_27 = 0x27a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x27b18; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_26 = 0x27b48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_18 = 0x27bc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_25 = 0x27c88; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_22 = 0x27d70; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0x27e10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_25 = 0x27ed8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_24 = 0x27f58; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_17 = 0x27fd8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_23 = 0x28008; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_17 = 0x28088; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_24 = 0x28148; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_21 = 0x28230; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x282d0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x28398; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_22 = 0x28460; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_21 = 0x284e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_20 = 0x28560; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x285e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x28610; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ApplyAdditive_7 = 0x28638; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_23 = 0x28700; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_10 = 0x287e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_10 = 0x28808; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_31 = 0x28828; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_30 = 0x28930; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_29 = 0x28a38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_7 = 0x28b40; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_22 = 0x28be0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_21 = 0x28cc8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_20 = 0x28db0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_15 = 0x28e50; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_6 = 0x28e80; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_20 = 0x28f48; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_9 = 0x29030; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_9 = 0x29050; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_28 = 0x29070; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_27 = 0x29178; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_26 = 0x29280; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_6 = 0x29388; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_19 = 0x29428; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_18 = 0x29510; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_19 = 0x295f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_14 = 0x29698; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_5 = 0x296c8; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_17 = 0x29790; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_8 = 0x29878; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_8 = 0x29898; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_25 = 0x298b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_24 = 0x299c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_23 = 0x29ac8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_5 = 0x29bd0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_16 = 0x29c70; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_15 = 0x29d58; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_18 = 0x29e40; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_13 = 0x29ee0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_4 = 0x29f10; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_14 = 0x29fd8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_7 = 0x2a0c0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_7 = 0x2a0e0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_22 = 0x2a100; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x2a208; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x2a310; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_4 = 0x2a418; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x2a4b8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x2a5a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_17 = 0x2a688; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_12 = 0x2a728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ApplyAdditive_3 = 0x2a758; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x2a820; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x2a908; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x2a928; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x2a948; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x2aa50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x2ab58; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_RotateRootBone_3 = 0x2ac60; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x2ad00; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x2ade8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_16 = 0x2aed0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_11 = 0x2af70; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x2afa0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_10 = 0x2afc8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_4 = 0x2aff8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_9 = 0x2b0a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x2b0d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x2b100; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_19 = 0x2b128; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_16 = 0x2b1a8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x2b268; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_18 = 0x2b330; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_17 = 0x2b3b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_15 = 0x2b430; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x2b4f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x2b518; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x2b540; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x2b568; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2b590; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2b5b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2b5e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2b608; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2b630; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x2b658; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x2b740; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_15 = 0x2b828; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_8 = 0x2b8c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x2b8f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x2b9e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_14 = 0x2bac8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_7 = 0x2bb68; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x2bb98; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x2bc80; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_13 = 0x2bd68; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_6 = 0x2be08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x2be38; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x2bf20; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendListByBool_12 = 0x2c008; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_5 = 0x2c0a8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2c0d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_StateResult_4 = 0x2c100; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x2c130; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_3 = 0x2c1e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x2c210; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x2c230; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x2c338; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_16 = 0x2c400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x2c480; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_4 = 0x2c4a0; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_3 = 0x2c550; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_ApplyAdditive_2 = 0x2c600; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x2c6c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x2c748; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_14 = 0x2c7c8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_11 = 0x2c888; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_13 = 0x2c928; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend_12 = 0x2c9e8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x2caa8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_10 = 0x2cb28; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x2cbc8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x2cc48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_11 = 0x2ccc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x2cd88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x2ce08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x2ce88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x2cf08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x2cf88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x2d008; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x2d038; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_10 = 0x2d0e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_StateResult = 0x2d130; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x2d160; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_9 = 0x2d210; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LayeredBoneBlend_10 = 0x2d2b0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2d370; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2d3f0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_UseCachedPose_38 = 0x2d470; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_9 = 0x2d498; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_17 = 0x2d558; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_9 = 0x2d6b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Root = 0x2d6f8; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_8 = 0x2d728; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_37 = 0x2d7c8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_7 = 0x2d7f0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x2d890; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_36 = 0x2d998; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotateRootBone_2 = 0x2d9c0; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_UseCachedPose_35 = 0x2da60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x2da88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x2db90; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_34 = 0x2dc98; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x2dcc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x2ddc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x2ded0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_33 = 0x2def0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x2df18; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x2e020; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_16 = 0x2e040; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_15 = 0x2e198; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TwoWayBlend = 0x2e2f0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose_32 = 0x2e3b8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_31 = 0x2e3e0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_8 = 0x2e408; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_14 = 0x2e450; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_30 = 0x2e5a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_29 = 0x2e5d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_RotateRootBone = 0x2e5f8; // FAnimNode_RotateRootBone
		constexpr auto AnimGraphNode_Slot_7 = 0x2e698; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_8 = 0x2e6e0; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x2e7a0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x2e980; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x2ea88; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x2eaa8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot_6 = 0x2eac8; // FAnimNode_Slot
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle_2 = 0x2eb10; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto TigerAnimGraphNode_BlendByBoolWSettle = 0x2ebc0; // FTigerAnimNode_BlendByBoolWSettle
		constexpr auto AnimGraphNode_UseCachedPose_28 = 0x2ec70; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x2ec98; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x2eda0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_13 = 0x2edc0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x2ef18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x2ef38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x2f040; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x2f148; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_UseCachedPose_27 = 0x2f250; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_12 = 0x2f278; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_26 = 0x2f3d0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x2f3f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x2f500; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_Slot_5 = 0x2f5a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_11 = 0x2f5e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_25 = 0x2f740; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_24 = 0x2f768; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_7 = 0x2f790; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SaveCachedPose_10 = 0x2f850; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x2f9a8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_23 = 0x2fa48; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TwoBoneIK = 0x2fa70; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x2fc50; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LayeredBoneBlend_6 = 0x2fd58; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2fe18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend_5 = 0x2fe98; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_22 = 0x2ff58; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_4 = 0x2ff80; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x2ffc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x30088; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_9 = 0x30190; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_7 = 0x302e8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_Slot_3 = 0x30398; // FAnimNode_Slot
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x303e0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_21 = 0x30480; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_20 = 0x304a8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x304d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x30550; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_2 = 0x305d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x30618; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_MakeDynamicAdditive = 0x306d8; // FAnimNode_MakeDynamicAdditive
		constexpr auto AnimGraphNode_ApplyAdditive = 0x30710; // FAnimNode_ApplyAdditive
		constexpr auto AnimGraphNode_SaveCachedPose_8 = 0x307d8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot = 0x30930; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_7 = 0x30978; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_19 = 0x30ad0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_18 = 0x30af8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_17 = 0x30b20; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone = 0x30b48; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SaveCachedPose_6 = 0x30c50; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_16 = 0x30da8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_15 = 0x30dd0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x30df8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x30e18; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_UseCachedPose_14 = 0x30e38; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_13 = 0x30e60; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x30e88; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x30f28; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x31080; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_12 = 0x31140; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x31168; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x31190; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x31230; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x31388; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x313b0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x313d8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x31400; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x314c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x314e8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_6 = 0x31510; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x315c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_5 = 0x315e8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x31698; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x316c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer_4 = 0x316e8; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x31798; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x318f0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x31918; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x31940; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LinkedAnimLayer_3 = 0x319e0; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_LinkedAnimLayer_2 = 0x31a90; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x31b40; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x31c98; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_LinkedAnimLayer = 0x31df0; // FAnimNode_LinkedAnimLayer
		constexpr auto ChangedSetTime = 0x31ea0; // float
		constexpr auto RecentlyChangedSet = 0x31ea4; // bool
		constexpr auto PoseInitialized = 0x31ea5; // bool
		constexpr auto DeltaTimeX = 0x31ea8; // float
		constexpr auto RotationLastTick = 0x31eac; // FRotator
		constexpr auto YawDelta = 0x31eb8; // float
		constexpr auto CameraRollDelta = 0x31ebc; // float
		constexpr auto CameraPitchDelta = 0x31ec0; // float
		constexpr auto CameraYawDelta = 0x31ec4; // float
		constexpr auto VelocityUpDown = 0x31ec8; // float
		constexpr auto VelocityLeftRight = 0x31ecc; // float
		constexpr auto VelocityFrontBack = 0x31ed0; // float
		constexpr auto bIsUsingRangedWeapon = 0x31ed4; // bool
		constexpr auto bWasGettingDiablerized = 0x31ed5; // bool
		constexpr auto FaceAnimSlotName_00 = 0x31ed8; // FName
		constexpr auto FaceAnimSlotName_01 = 0x31ee0; // FName
		constexpr auto FaceAnimSlotName_02 = 0x31ee8; // FName
		constexpr auto FaceAnimSlotName_03 = 0x31ef0; // FName
		constexpr auto IsMovingOnGround = 0x31ef8; // bool
		constexpr auto IsAimingWeapon = 0x31ef9; // bool
		constexpr auto LeftHandWeaponTranslation = 0x31efc; // FVector
		constexpr auto LeftFootBoneName = 0x31f08; // FName
		constexpr auto RightFootBoneName = 0x31f10; // FName
		constexpr auto ShowTraces = 0x31f18; // bool
		constexpr auto TraceLengthAboveFoot = 0x31f1c; // float
		constexpr auto TraceLengthBelowFoot = 0x31f20; // float
		constexpr auto MinLimits_Standing = 0x31f24; // FVector
		constexpr auto MaxLimits_Standing = 0x31f30; // FVector
		constexpr auto MinLimits_Crouching = 0x31f3c; // FVector
		constexpr auto MaxLimits_Crouching = 0x31f48; // FVector
		constexpr auto RightFootOffsetTraTarget = 0x31f54; // FVector
		constexpr auto RightFootOffsetRotTarget = 0x31f60; // FRotator
		constexpr auto LeftFootOffsetTraTarget = 0x31f6c; // FVector
		constexpr auto LeftFootOffsetRotTarget = 0x31f78; // FRotator
		constexpr auto LeftFootOffsetsTra = 0x31f84; // FVector
		constexpr auto LeftFootOffsetsRot = 0x31f90; // FRotator
		constexpr auto RightFootOffsetsTra = 0x31f9c; // FVector
		constexpr auto RotationOffsetInterpSpeed = 0x31fa8; // float
		constexpr auto ZOffsetInterpSpeed = 0x31fac; // float
		constexpr auto IsStandingOnGround = 0x31fb0; // bool
		constexpr auto LeftElbowWeaponTranslation = 0x31fb4; // FVector
		constexpr auto LeftHandWeaponRotation = 0x31fc0; // FRotator
		constexpr auto RightHandWeaponTranslation = 0x31fcc; // FVector
		constexpr auto RightElbowWeaponTranslation = 0x31fd8; // FVector
		constexpr auto RightHandWeaponRotation = 0x31fe4; // FRotator
		constexpr auto IsInMeleeSwing = 0x31ff0; // bool
		constexpr auto CurrentRangedWeapon = 0x31ff1; // ENUM_RangedWeaponCategories
		constexpr auto CurrentMeleeWeapon = 0x31ff2; // ENUM_MeleeWeaponCategories
		constexpr auto ShouldUseFootIk = 0x31ff3; // bool
		constexpr auto bIsDedicatedServer = 0x31ff4; // bool
		constexpr auto IsMale = 0x31ff5; // bool
		constexpr auto HasMovementInput = 0x31ff6; // bool
		constexpr auto MovementMode = 0x31ff7; // ENUM_MovementMode
		constexpr auto PrevMovementMode = 0x31ff8; // ENUM_MovementMode
		constexpr auto JumpMode = 0x31ff9; // ENUM_JumpState
		constexpr auto PrevJumpMode = 0x31ffa; // ENUM_JumpState
		constexpr auto DirectionHor = 0x31ffc; // float
		constexpr auto DirectionVer = 0x32000; // float
		constexpr auto IsFiringWeapon = 0x32004; // bool
		constexpr auto bIsUsingMeleeWeapon = 0x32005; // bool
		constexpr auto PlayerDesiredMovementDirection = 0x32008; // FVector
		constexpr auto SlideSurfacePitch = 0x32014; // float
		constexpr auto FireReadyTimeStamp = 0x32018; // float
		constexpr auto FireWeaponBlendInTime = 0x3201c; // float
		constexpr auto IsInElysium = 0x32020; // bool
		constexpr auto LastPlayerDesiredMovementDirection = 0x32024; // FVector
		constexpr auto StrafeRotationOffset = 0x32030; // float
		constexpr auto IsStrafingBackwards = 0x32034; // bool
		constexpr auto StrafeForwardDirection = 0x32038; // float
		constexpr auto StrafeForwardDirectionSmooth = 0x3203c; // float
		constexpr auto StrafeBackwardsDirection = 0x32040; // float
		constexpr auto StrafeBackwardsDirectionSmooth = 0x32044; // float
		constexpr auto ActivateNewStrafe = 0x32048; // bool
		constexpr auto CurrentPlayerIntendedVelocity = 0x3204c; // FVector
		constexpr auto PlayerIntendedVelocityLean = 0x32058; // FVector
		constexpr auto PlayerIntendedVelocityLeanSlow = 0x32064; // FVector
		constexpr auto ActivateVelocityLean = 0x32070; // bool
		constexpr auto ActivateVelocityLeanBlendFloat = 0x32074; // float
		constexpr auto StrafeLeanRootRotSetting = 0x32078; // float
		constexpr auto StrafeLeanRootRotCurrent = 0x3207c; // FVector
		constexpr auto StrafeLeanRootTransSetting = 0x32088; // float
		constexpr auto StrafeLeanRootTransCurrent = 0x3208c; // FVector
		constexpr auto StrafeLeanSpineSetting = 0x32098; // float
		constexpr auto StrafeLeanSpineCurrent = 0x3209c; // FRotator
		constexpr auto StrafeLeanHeadCounterCurrent = 0x320a8; // FRotator
		constexpr auto LegCrossClearance = 0x320b4; // bool
		constexpr auto YawDeltaSmooth = 0x320b8; // float
		constexpr auto LastPowerAimOffset = 0x320c0; // UBlendSpaceBase*
		constexpr auto PowerAimOffsetAlpha = 0x320c8; // float
		constexpr auto bHasValidPowerAimOffset = 0x320cc; // bool
		constexpr auto IsMoving = 0x320cd; // bool
		constexpr auto IsHipFiring = 0x320ce; // bool
		constexpr auto IsSimulatedProxy = 0x320cf; // bool
		constexpr auto WasSliding = 0x320d0; // bool
		constexpr auto InAirLeaning = 0x320d4; // FVector
		constexpr auto InAirLeaningHeightReverser = 0x320e0; // float
		constexpr auto TimeSinceLastPlayerInput = 0x320e4; // float
		constexpr auto SmoothSpeed = 0x320e8; // float
		constexpr auto HasValidRangedAimOffsets = 0x320ec; // bool
		constexpr auto LeftHandIK = 0x320f0; // float
		constexpr auto SmoothSpeedSlow = 0x320f4; // float
		constexpr auto RightHandIK = 0x320f8; // float
		constexpr auto Weapon - Dual = 0x32100; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto CurrentWallSlideWallSide = 0x32110; // ENUM_WallSlideDirection
		constexpr auto CharacterDeltaYawSmoothWallSlide = 0x32114; // float
		constexpr auto WallJumpWasAvailable = 0x32118; // bool
		constexpr auto SprintAngle = 0x3211c; // float
		constexpr auto LookAtVertical = 0x32120; // float
		constexpr auto LookAtHorizontal = 0x32124; // float
		constexpr auto LookAtHorizontalSlow = 0x32128; // float
		constexpr auto LookAtInRange = 0x3212c; // bool
		constexpr auto LookAtHeadTiltAmount = 0x32130; // float
		constexpr auto SprintAngleWide = 0x32134; // float
		constexpr auto SptintAngleSlow = 0x32138; // float
		constexpr auto CameraYawDeltaSlideSlow = 0x3213c; // float
		constexpr auto SprintAngleWideSlow = 0x32140; // float
		constexpr auto PlayerDesiredStartDirection = 0x32144; // FVector
		constexpr auto PlayerDesiredStartDirectionWhole90 = 0x32150; // float
		constexpr auto PlayerDesiredStartDirectionDegrees = 0x32154; // float
		constexpr auto PlayerDesiredStartDirectionRotOffsetDegree = 0x32158; // float
		constexpr auto PlayerDesiredStartDirectionRotOffset = 0x3215c; // FRotator
		constexpr auto PlayerDesiredStopDirection = 0x32168; // FVector
		constexpr auto ShouldLeaveStart = 0x32174; // bool
		constexpr auto ShouldLeaveStop = 0x32175; // bool
		constexpr auto ActivateStartStop = 0x32176; // bool
		constexpr auto WallSlideVelocity = 0x32178; // FVector
		constexpr auto TimeSinceWallSlideStateEntered = 0x32184; // float
		constexpr auto WallSlideDirectionAttatchInverser = 0x32188; // float
		constexpr auto IsDualHandRangedWeapon = 0x32190; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto ActivateTurnStarts = 0x321a0; // bool
		constexpr auto TurnStartAngle = 0x321a4; // float
		constexpr auto WasClimbing = 0x321a8; // bool
		constexpr auto TurnInPlaceAmount = 0x321ac; // float
		constexpr auto TriggerTurnInPlace = 0x321b0; // bool
		constexpr auto CanEnterTurnInPlace = 0x321b1; // bool
		constexpr auto ActivateRootTurnInPlace = 0x321b2; // bool
		constexpr auto Rotate_L = 0x321b3; // bool
		constexpr auto Rotate_R = 0x321b4; // bool
		constexpr auto ADSYawRotationDelta = 0x321b8; // float
		constexpr auto ADSYawRotation = 0x321bc; // float
		constexpr auto ADSYawRotationLastTick = 0x321c0; // float
		constexpr auto TurnInPlaceLookMovements = 0x321c8; // TArray<FVector>
		constexpr auto TurnInPlaceMaxDot = 0x321d8; // float
		constexpr auto WPN Melee - Single = 0x321e0; // TArray<ENUM_MeleeWeaponCategories>
		constexpr auto WPN Range - Single = 0x321f0; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto IsFeeding = 0x32200; // bool
		constexpr auto TimeSprinting = 0x32204; // float
		constexpr auto IsBlinded = 0x32208; // bool
		constexpr auto isBlindedWeight = 0x3220c; // float
		constexpr auto RotateInPlaceAlpha = 0x32210; // float
		constexpr auto RotateInPlacePlayRate = 0x32214; // float
		constexpr auto CurrentCameraWorldRotation = 0x32218; // FRotator
		constexpr auto StartCameraWorldRotation = 0x32224; // FRotator
		constexpr auto ActivateSprintTransitions = 0x32230; // bool
		constexpr auto TimeMoving = 0x32234; // float
		constexpr auto CurrentPlayerClan = 0x32238; // ETigerClan
		constexpr auto ShouldPlaySoftStop = 0x32239; // bool
		constexpr auto SurfaceToAudioName = 0x32240; // TMap<EPhysicalSurface, FName>
		constexpr auto WallGrind_Remap = 0x32290; // UCurveFloat*
		constexpr auto WallGrindAimOffset = 0x32298; // float
		constexpr auto In Air Jump Lean = 0x3229c; // float
		constexpr auto ShouldUseLookAt = 0x322a0; // bool
		constexpr auto StopCrouchState = 0x322a1; // bool
		constexpr auto StartCrouchState = 0x322a2; // bool
		constexpr auto Player - Clan = 0x322a8; // TArray<ETigerClan>
		constexpr auto TimeFalling = 0x322b8; // float
		constexpr auto RecentlyLeftWallSlide = 0x322bc; // bool
		constexpr auto LastWallSlideWallSide = 0x322bd; // ENUM_WallSlideDirection
		constexpr auto ActivateWallSlideDetatch = 0x322be; // bool
		constexpr auto LookAtWallSlide = 0x322c0; // FVector
		constexpr auto amInTurnStart = 0x322cc; // bool
		constexpr auto SprintAccelTimer = 0x322d0; // float
		constexpr auto StrafeStepFrequencyMod = 0x322d4; // float
		constexpr auto Player = 0x322d8; // ATigerPlayer*
		constexpr auto RootBoneDeltaSmoother = 0x322e0; // float
		constexpr auto RightFootOffsetsRot = 0x322e4; // FRotator
		constexpr auto FootIKPelvisOffsetTra = 0x322f0; // FVector
		constexpr auto IsSoaringLeap = 0x322fc; // bool
		constexpr auto SoaringLeapLeaning_PelvisTrans = 0x32300; // FVector
		constexpr auto SoaringLeapLeaning_PelvisRot = 0x3230c; // FRotator
		constexpr auto SoaringLeapLeaning_SpineRot = 0x32318; // FRotator
		constexpr auto SoaringLeapLeaning_HeadRot = 0x32324; // FRotator
		constexpr auto StrafeLeanSpineCurrentThird = 0x32330; // FRotator
		constexpr auto IsAnyPowerActive = 0x3233c; // bool
		constexpr auto UpperbodyWeight = 0x32340; // float
		constexpr auto RangedWpnCacheFalseBlendTime = 0x32344; // float
		constexpr auto RangedWpnCacheBlend = 0x32348; // bool
		constexpr auto SettleEventEnum_Aim = 0x32349; // ENUM_SettleType
		constexpr auto LookAtHeadRotator = 0x3234c; // FRotator
		constexpr auto LookAtSpineRotator = 0x32358; // FRotator
		constexpr auto LookAtSpineOnOff = 0x32364; // float
		constexpr auto SettleEventEnum_Crouch = 0x32368; // ENUM_SettleType
		constexpr auto OverrideRightHand = 0x3236c; // float
		constexpr auto OverrideLeftHand = 0x32370; // float
		constexpr auto ModifiedStrafePlayrate = 0x32374; // float
		constexpr auto WalkSpeed = 0x32378; // float
		constexpr auto MinWalkSpeed = 0x3237c; // float
		constexpr auto MaxWalkSpeed = 0x32380; // float
		constexpr auto RunSpeed = 0x32384; // float
		constexpr auto MinRunSpeed = 0x32388; // float
		constexpr auto MaxRunSpeed = 0x3238c; // float
		constexpr auto StrafeWalkRunBlend = 0x32390; // float
		constexpr auto WalkStrafePlayrate = 0x32394; // float
		constexpr auto RunStrafePlayrate = 0x32398; // float
		constexpr auto StepLengthModWalk = 0x3239c; // float
		constexpr auto StepLengthModWalkFwd = 0x323a0; // float
		constexpr auto StepLengthModWalkBwd = 0x323a4; // float
		constexpr auto StepLengthModRun = 0x323a8; // float
		constexpr auto StepLengthModRunFwd = 0x323ac; // float
		constexpr auto StepLengthModRunBwd = 0x323b0; // float
		constexpr auto ActivateNewStrafeScaler = 0x323b4; // bool
		constexpr auto ClimbAngle = 0x323b8; // float
		constexpr auto ShouldReturnToDownedIntro = 0x323bc; // bool
		constexpr auto ActivateBackFlip = 0x323bd; // bool
		constexpr auto FallVerticalValue = 0x323c0; // float
		constexpr auto TimeUntilCollision = 0x323c4; // float
		constexpr auto AboutToCollideWithClimbableSurface = 0x323c8; // bool
		constexpr auto NewStartAnimationAllowed = 0x323c9; // bool
		constexpr auto StartIsActive = 0x323ca; // bool
		constexpr auto StartIsActiveTime = 0x323cc; // float
		constexpr auto NewStopAnimationAllowed = 0x323d0; // bool
		constexpr auto StopIsActive = 0x323d1; // bool
		constexpr auto StopIsActiveTime = 0x323d4; // float
		constexpr auto IsFalling = 0x323d8; // bool
		constexpr auto FootIKPelvisOffsetTraCrouchSlope = 0x323dc; // FVector
		constexpr auto FootIKPelvisOffsetTraCrouchSlopeActivate = 0x323e8; // bool
		constexpr auto ActivateSlideSettles = 0x323e9; // bool
		constexpr auto R = 0x323ea; // bool
		constexpr auto TimeSinceLastJump = 0x323ec; // float
		constexpr auto StartAngle = 0x323f0; // float
		constexpr auto SprintTime = 0x323f4; // bool
		constexpr auto SlideAngle = 0x323f8; // float
		constexpr auto LookAtRightSide = 0x323fc; // bool
		constexpr auto Weapon - Rifle = 0x32400; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto Override Right Hand Null = 0x32410; // float
		constexpr auto Override Left Hand Null = 0x32414; // float
		constexpr auto IsInLowVault = 0x32418; // bool
		constexpr auto ToClimbBlendTime = 0x3241c; // float
		constexpr auto AllowSprintToRun = 0x32420; // bool
		constexpr auto RightHandIK_Wall = 0x32424; // FVector
		constexpr auto SettleEventEnum_HideWeapon = 0x32430; // ENUM_SettleType
		constexpr auto LeftHandIK_Wall = 0x32434; // FVector
		constexpr auto RightHand_WallIK_Dist = 0x32440; // float
		constexpr auto LeftHandIK_TraceSuccessful = 0x32444; // bool
		constexpr auto RightHandIK_TraceSuccessful = 0x32445; // bool
		constexpr auto WallCollisionAngle = 0x32448; // float
		constexpr auto LeftHand_WallIK_Dist = 0x3244c; // float
		constexpr auto LeftHandIK_Wall_Soft = 0x32450; // FVector
		constexpr auto RightHandIK_Wall_Soft = 0x3245c; // FVector
		constexpr auto WallSlide_IK_Offset_RightHand = 0x32468; // FVector
		constexpr auto WallSlide_IK_Offset_LeftHand = 0x32474; // FVector
		constexpr auto WallSlide_RotationOffset_RightHand = 0x32480; // FRotator
		constexpr auto WallSlide_RotationOffset_LeftHand = 0x3248c; // FRotator
		constexpr auto WPN Melee - 2H = 0x32498; // TArray<ENUM_MeleeWeaponCategories>
		constexpr auto RecentlyChangedSetSingleFrameCheck = 0x324a8; // bool
		constexpr auto PelvisReloadOffset = 0x324ac; // FVector
		constexpr auto IsInReload = 0x324b8; // bool
		constexpr auto IsInReloadAlpha = 0x324bc; // float
		constexpr auto UseAlternativeGrip = 0x324c0; // bool
		constexpr auto WalkStrafeScaled = 0x324c4; // float
		constexpr auto RunStrafeScaled = 0x324c8; // float
		constexpr auto OneHandedHipWeaponsMovingList = 0x324d0; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto CameraRollDeltaSmooth = 0x324e0; // float
		constexpr auto CameraPitchDeltaSmooth = 0x324e4; // float
		constexpr auto CameraYawDeltaSmooth = 0x324e8; // float
		constexpr auto CurrentCameraWorldRotationLastTick = 0x324ec; // FRotator
		constexpr auto SlidingReload = 0x324f8; // bool
		constexpr auto (Fp)LowerBodyLayering = 0x324f9; // bool
		constexpr auto (Fp)OneHandedHipWeaponsMoving = 0x324fa; // bool
		constexpr auto (Fp)ShouldUseADDLocomotion = 0x324fb; // bool
		constexpr auto RecoilPushbackAmount = 0x324fc; // float
		constexpr auto IsInPrimingAnimation = 0x32500; // bool
		constexpr auto RotateInPlacePowersArray = 0x32508; // TArray<ETigerDisciplinesEnum>
		constexpr auto Has Input? (before setting var) = 0x32518; // bool
		constexpr auto RecoilShakeAlphaTarget = 0x3251c; // float
		constexpr auto RecoilKickAlpha = 0x32520; // float
		constexpr auto AimSweepFloat = 0x32524; // float
		constexpr auto IsSecondMagazine = 0x32528; // bool
		constexpr auto DynamicADDReloadAlpha = 0x3252c; // float
		constexpr auto (Fp)OneHandedHipWeapons = 0x32530; // bool
		constexpr auto OneHandedHipWeaponsList = 0x32538; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto RecoilShakeAlphaAddMap = 0x32548; // TMap<ENUM_RangedWeaponCategories, float>
		constexpr auto RecoilShakeWeaponsMap = 0x32598; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto ADSRecoilKickAlpha = 0x325a8; // TMap<ENUM_RangedWeaponCategories, float>
		constexpr auto ShouldUseAnimatedIK = 0x325f8; // bool
		constexpr auto MagazineRotationAmount = 0x325fc; // FRotator
		constexpr auto NewVar_2 = 0x32608; // TArray<ENUM_RangedWeaponCategories>
		constexpr auto NewVar_4 = 0x32618; // TArray<ENUM_MeleeWeaponCategories>
		constexpr auto ShouldMagazineMoveWhileShooting = 0x32628; // bool
		constexpr auto DistanceToWallCompensation = 0x3262c; // FVector
		constexpr auto ProxyRotationCompensation = 0x32638; // float
		constexpr auto WeaponArmPoseAlpha = 0x3263c; // float
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UTigerAiPerfBenchUseWeapon {
		constexpr auto LocalAIController = 0x80; // ATigerLocalAIControllerBase*
		constexpr auto PlayerController = 0x88; // ATigerPlayerController*
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UTigerMapGameData {
		constexpr auto OnMapMarkerAdded = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMapMarkerRemoved = 0x38; // FMulticastInlineDelegate
		constexpr auto MapMarkerProxies = 0x48; // TArray<UTigerMapMarkerProxy*>
		constexpr auto MapInfoAsset = 0x58; // UTigerMapInfoDataAsset*
	}

	namespace n_ATigerAiSplinePathHub {
		constexpr auto SplineConnections = 0x228; // TArray<FTigerAISplinePathConnection>
		constexpr auto ConnectionRadius = 0x238; // float
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xb0; // FMulticastInlineDelegate
	}

	namespace n_UTigerClanCustomizationOptions {
		constexpr auto Outfits = 0x28; // TArray<FTigerCharacterCustomizationOutfitData>
		constexpr auto Heads = 0x38; // TArray<FTigerCharacterCustomizationHeadData>
		constexpr auto Hairs = 0x48; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto HairColors = 0x58; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto EyeColors = 0x68; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Tattoos = 0x78; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto FacePaints = 0x88; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto PiercingSets = 0x98; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Headgears = 0xa8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Eyewears = 0xb8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Eyebrows = 0xc8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto EyebrowColors = 0xd8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Beards = 0xe8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto BeardColors = 0xf8; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto CharacterIcons = 0x108; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto CharacterCardShapes = 0x118; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto CharacterCardTextures = 0x128; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto Emotes = 0x138; // TArray<FTigerCharacterCustomizationItem>
		constexpr auto CombinedItems = 0x148; // TMap<ETigerCustomizationType, FTigerCombinedItemCustomizations>
		constexpr auto PersistentIdTicker = 0x198; // int32_t
		constexpr auto IdToItemLut = 0x1a0; // TMap<int32_t, TSoftClassPtr<UObject>>
		constexpr auto ItemToIdLut = 0x1f0; // TMap<TSoftClassPtr<UObject>, int32_t>
		constexpr auto IdToIndexLut = 0x240; // TMap<int32_t, int32_t>
		constexpr auto DefaultPlayerCard = 0x290; // FTigerCharacterCardData
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x450; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x460; // int32_t
		constexpr auto SectionBaseY = 0x464; // int32_t
		constexpr auto CollisionSizeQuads = 0x468; // int32_t
		constexpr auto CollisionScale = 0x46c; // float
		constexpr auto SimpleCollisionSizeQuads = 0x470; // int32_t
		constexpr auto CollisionQuadFlags = 0x478; // TArray<char>
		constexpr auto HeightfieldGuid = 0x488; // FGuid
		constexpr auto CachedLocalBox = 0x498; // FBox
		constexpr auto RenderComponent = 0x4b4; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4e0; // TArray<UPhysicalMaterial*>
	}

	namespace n_UABP_VMP_BRU_F_HAIR_07_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2c8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2e8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Root = 0x308; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x340; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0xbc0; // FAnimNode_AnimDynamics
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UTigerCharacterBodyTypeCustomization {
		constexpr auto CharacterPreset = 0x110; // TSoftObjectPtr<UTigerCharacterPreset>
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x260; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x270; // char : 1
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UTigerJudgeSwingData {
		constexpr auto SwingCollisionInfos = 0x30; // TMap<FName, FTigerJudgeSwingCollisionInfo>
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UTigerAICanInvestigateDecorator {
		constexpr auto CurrentSuspiciousTarget = 0x68; // FBlackboardKeySelector
	}

	namespace n_ATigerLootSpawner {
		constexpr auto LootTable = 0x228; // UTigerItemLootTable*
		constexpr auto GameTypeFilter = 0x230; // char
		constexpr auto bShouldReceiveItemsFromLootLocation = 0x231; // bool
		constexpr auto AssignedLoot = 0x238; // TArray<FTigerRandomizedLootResult>
		constexpr auto LootLocationCollider = 0x248; // USphereComponent*
		constexpr auto AssignedLootLocation = 0x250; // ATigerLootLocation*
		constexpr auto SpawnedItems = 0x258; // TArray<ATigerItemWorldRepresentation*>
	}

	namespace n_UTigerUtilityPowerLureComponent {
		constexpr auto TimeToLure = 0xe8; // float
		constexpr auto LureAnimation = 0xf0; // UAnimMontage*
		constexpr auto LureWhistleSound = 0xf8; // USoundBase*
		constexpr auto ClientFeedbackUpdateTickInterval = 0x100; // float
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x228; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x230; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x231; // ENavDataGatheringMode
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_ATigerElysiumNpcBase {
		constexpr auto bAllowCollision = 0x228; // bool
		constexpr auto CapsuleComponent = 0x230; // UCapsuleComponent*
		constexpr auto BodyMesh = 0x238; // USkeletalMeshComponent*
		constexpr auto HeadMesh = 0x240; // USkeletalMeshComponent*
		constexpr auto HairMesh = 0x248; // USkeletalMeshComponent*
		constexpr auto HoodieMesh = 0x250; // USkeletalMeshComponent*
		constexpr auto NpcData = 0x260; // FTigerElysiumNpcData
		constexpr auto FirstPropSm = 0x430; // UStaticMeshComponent*
		constexpr auto FirstPropSk = 0x438; // USkeletalMeshComponent*
		constexpr auto FirstPropBp = 0x440; // UChildActorComponent*
		constexpr auto SecondPropSm = 0x448; // UStaticMeshComponent*
		constexpr auto SecondPropSk = 0x450; // USkeletalMeshComponent*
		constexpr auto SecondPropBp = 0x458; // UChildActorComponent*
	}

	namespace n_UTigerFriendSubsystem {
		constexpr auto Friends = 0x30; // TArray<UTigerFriend*>
		constexpr auto Invites = 0x40; // TArray<UTigerFriendInvite*>
		constexpr auto ServiceStatus = 0x50; // ETigerOnlineServiceStatus
		constexpr auto PresenceSubsystem = 0x130; // UTigerPresenceSubsystem*
		constexpr auto FriendSubsystemType = 0x148; // FString
		constexpr auto Impl = 0x158; // UTigerFriendSubsystemImpl*
	}

	namespace n_UTigerShockwavePunchConfig {
		constexpr auto PunchMontages = 0x170; // TArray<UAnimMontage*>
		constexpr auto ShockwaveActorToSpawn = 0x180; // TArray<ATigerShockwaveWall*>
		constexpr auto ShockwaveWallData = 0x190; // FTigerShockwaveWallData
	}

	namespace n_UTBP_UI_MoviePlayer_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto BlackBackground = 0x288; // UImage*
		constexpr auto MovieTexture = 0x290; // UImage*
		constexpr auto AnimaticPlayer = 0x298; // UMediaPlayer*
		constexpr auto MovieFile = 0x2a0; // UFileMediaSource*
		constexpr auto PlayImmediately = 0x2a8; // bool
		constexpr auto OnClosed = 0x2b0; // FMulticastInlineDelegate
		constexpr auto SoundActor = 0x2c0; // ATBP_MovieSound_C*
		constexpr auto Playlist = 0x2c8; // UMediaPlaylist*
		constexpr auto bCanSkipMovies = 0x2d0; // bool
		constexpr auto CancelKeys = 0x2d8; // TArray<FKey>
		constexpr auto WaitingForRelease = 0x2e8; // TArray<FKey>
		constexpr auto WasMouseCursorShown = 0x2f8; // bool
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UTssSDKSettings {
		constexpr auto GameID = 0x38; // uint32_t
		constexpr auto AuthToken = 0x40; // FString
	}

	namespace n_UTigerMeleeCrosshairWidget {
		constexpr auto OwnerMelee = 0x2b8; // UTigerMeleeWeaponComponent*
		constexpr auto CrosshairImage = 0x2c0; // UImage*
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x228; // char : 1
	}

	namespace n_UTigerEyewearAnimInstance {
		constexpr auto NoseTransform = 0x3c0; // FTransform
		constexpr auto EarRightTransform = 0x3f0; // FTransform
		constexpr auto EarLeftTransform = 0x420; // FTransform
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x228; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x230; // AActor*
		constexpr auto ConstraintActor2 = 0x238; // AActor*
		constexpr auto bDisableCollision = 0x240; // char : 1
	}

	namespace n_UTigerConsumableInventoryItemBase {
		constexpr auto Count = 0x110; // int32_t
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTigerPiercingPhysicsAssetUserData {
		constexpr auto Mass = 0x28; // float
		constexpr auto ForceAmount = 0x2c; // float
		constexpr auto AnglePitchLimit = 0x30; // float
		constexpr auto AngleRollLimit = 0x34; // float
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UTigerWorldCompositionLevel {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UTBP_UI_SmallErrorMessage_C {
		constexpr auto Background = 0x260; // UImage*
		constexpr auto Border = 0x268; // UImage*
		constexpr auto ErrorImage = 0x270; // UImage*
		constexpr auto ErrorText = 0x278; // UTigerStyledRichTextBlock*
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UTigerFriend {
		constexpr auto OnOnlineStatusChanged = 0x28; // FMulticastInlineDelegate
		constexpr auto OnLocationChanged = 0x38; // FMulticastInlineDelegate
		constexpr auto DISPLAYNAME = 0x48; // FString
		constexpr auto PlayerId = 0x58; // FTigerPersistentPlayerID
		constexpr auto SharkmobUserId = 0x68; // FSharkUserId
		constexpr auto PlatformUesrId = 0x78; // FString
		constexpr auto Location = 0x90; // FString
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_UTigerDisciplineConfigs {
		constexpr auto Configs = 0x28; // TMap<ETigerDisciplinesEnum, UTigerActiveDisciplineConfig*>
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_ATigerBloodVeinPawn {
		constexpr auto OnIsCoterieNavigatorChanged = 0x288; // FMulticastInlineDelegate
		constexpr auto BloodVein = 0x298; // ATigerBloodVein*
		constexpr auto bIsCoterieNavigator = 0x2a0; // bool
		constexpr auto bWantsToLaunchSolo = 0x2a1; // bool
		constexpr auto StaticMesh = 0x2a8; // UStaticMeshComponent*
		constexpr auto SpringArm = 0x2b0; // UTigerSpringArmComponent*
		constexpr auto Camera = 0x2b8; // UCameraComponent*
		constexpr auto AlternateAction = 0x2c0; // ETigerBloodVeinAlternateAction
		constexpr auto BranchClass = 0x2d8; // ATigerBloodVeinBranch*
		constexpr auto AlternateActionHoldTime = 0x2e0; // float
	}

	namespace n_UTigerCustomMontageListClan {
		constexpr auto Montages = 0x28; // UAnimMontage* [0x4]
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x228; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x230; // char : 1
	}

	namespace n_UTigerBuffFOTTKnockbackWallStunInstance {
		constexpr auto FOTTKnockbackWallStun = 0x88; // UTigerBuffFOTTKnockbackWallStun*
		constexpr auto Target = 0x98; // ATigerCharacter*
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_AAkSpotReflector {
		constexpr auto EarlyReflectionAuxBus = 0x228; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x230; // FString
		constexpr auto AcousticTexture = 0x240; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x248; // float
		constexpr auto Level = 0x24c; // float
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x478; // UPaperFlipbook*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto PlayRate = 0x488; // float
		constexpr auto bLooping = 0x48c; // char : 1
		constexpr auto bReversePlayback = 0x48c; // char : 1
		constexpr auto bPlaying = 0x48c; // char : 1
		constexpr auto AccumulatedTime = 0x490; // float
		constexpr auto CachedFrameIndex = 0x494; // int32_t
		constexpr auto SpriteColor = 0x498; // FLinearColor
		constexpr auto CachedBodySetup = 0x4a8; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4b0; // FMulticastInlineDelegate
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UTBP_UI_XboxIcon_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto IconImage = 0x288; // UImage*
		constexpr auto KeyTextureMapping = 0x290; // UTigerKeyTextureMapping*
		constexpr auto NewVar_1 = 0x298; // bool
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UTigerNPCAsset {
		constexpr auto NormalizedVisualAssets = 0x30; // TArray<FTigerRandomVisualAsset>
		constexpr auto BehaviorAsset = 0x40; // UTigerNPCBehaviorAsset*
		constexpr auto GrimoireEntry = 0x48; // UTigerGrimoireEntry*
	}

	namespace n_UTBP_UI_LoginQueueSection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CTA_Retry = 0x268; // UTBP_UI_Button_CTA_C*
		constexpr auto EstimatedWaitTimeValue = 0x270; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_TextButton_ExitGame = 0x278; // UTBP_UI_TextButton_C*
		constexpr auto TigerStyledRichTextBlock_91 = 0x280; // UTigerStyledRichTextBlock*
		constexpr auto WaitingPanel = 0x288; // UVerticalBox*
		constexpr auto ExitGame = 0x290; // FMulticastInlineDelegate
		constexpr auto EstimatedWaitTimeSeconds = 0x2a0; // float
		constexpr auto UpdateWaitTimeTimerHandle = 0x2a8; // FTimerHandle
		constexpr auto Retry = 0x2b0; // FMulticastInlineDelegate
		constexpr auto EstimatedWaitTimeSetAtRealTimeSeconds = 0x2c0; // float
	}

	namespace n_ATigerHUD {
		constexpr auto OnInGameMenuToggled = 0x318; // FMulticastInlineDelegate
		constexpr auto OnMenuOpened = 0x328; // FMulticastInlineDelegate
		constexpr auto IngameMenuUI = 0x338; // UTigerIngameMenuWidget*
		constexpr auto GroupStatus = 0x340; // UTigerGroupUIWidget*
		constexpr auto EmoteWheel = 0x348; // UTigerEmoteWheelWidget*
		constexpr auto NotificationsUI = 0x350; // UTigerNotificationsUI*
		constexpr auto ContextualHelpUI = 0x358; // UTigerContextualHelpUI*
		constexpr auto TigerPlayerController = 0x378; // ATigerPlayerController*
		constexpr auto Crosshair = 0x380; // UTigerCrosshairWidget*
		constexpr auto AutoInitializedWidgets = 0x388; // TArray<FAutoInitializedWidget>
		constexpr auto CurrentlyOpenMenu = 0x3a8; // UTigerMenuWidget*
		constexpr auto HiddenWidgets = 0x3c0; // TArray<UUserWidget*>
		constexpr auto HiddenWidgetComponents = 0x3d0; // TArray<TWeakObjectPtr<UWidgetComponent>>
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UAkAudioEventData {
		constexpr auto MaxAttenuationRadius = 0x90; // float
		constexpr auto IsInfinite = 0x94; // bool
		constexpr auto MinimumDuration = 0x98; // float
		constexpr auto MaximumDuration = 0x9c; // float
		constexpr auto LocalizedMedia = 0xa0; // TMap<FString, UAkAssetDataSwitchContainer*>
		constexpr auto PostedEvents = 0xf0; // TSet<UAkAudioEvent*>
		constexpr auto UserDefinedSends = 0x140; // TSet<UAkAuxBus*>
		constexpr auto PostedTriggers = 0x190; // TSet<UAkTrigger*>
		constexpr auto GroupValues = 0x1e0; // TSet<UAkGroupValue*>
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_UTigerAIPlayerTravelBloodVeinTask {
		constexpr auto JumpProbabilityDistribution = 0x98; // UCurveFloat*
		constexpr auto JumpDistributionType = 0xa8; // ETigerJumpDistribution
	}

	namespace n_UTigerClientRewardTrackChallenges {
		constexpr auto RewardIds = 0x28; // TArray<FTigerItemId>
		constexpr auto RewardHighlightIndex = 0x38; // int32_t
		constexpr auto PersistentPlayerState = 0x40; // UTigerPersistentPlayerState*
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UTigerAnimNotifyState_LockOwner {
		constexpr auto bStopActiveMovement = 0x30; // bool
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x228; // float
		constexpr auto CraneYaw = 0x22c; // float
		constexpr auto CraneArmLength = 0x230; // float
		constexpr auto bLockMountPitch = 0x234; // bool
		constexpr auto bLockMountYaw = 0x235; // bool
		constexpr auto TransformComponent = 0x238; // USceneComponent*
		constexpr auto CraneYawControl = 0x240; // USceneComponent*
		constexpr auto CranePitchControl = 0x248; // USceneComponent*
		constexpr auto CraneCameraMount = 0x250; // USceneComponent*
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UTBP_UI_PointOfInterestMarker_C {
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto HighTierLoot_Text = 0x2d0; // UTextBlock*
		constexpr auto IB_POI_Marker = 0x2d8; // UInvalidationBox*
		constexpr auto PoiIcon = 0x2e0; // UImage*
		constexpr auto PoiText = 0x2e8; // UTigerStyledRichTextBlock*
		constexpr auto PoiTextBorder = 0x2f0; // UBorder*
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UTigerGroupSettings {
		constexpr auto GroupSettingsData = 0x38; // FTigerGroupSettingsData
	}

	namespace n_UTBP_UI_StyledComboBox_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ExpandDropDown = 0x288; // UWidgetAnimation*
		constexpr auto ButtonBorder = 0x290; // UBorder*
		constexpr auto ButtonTextBlock = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto DropDownBackground = 0x2a0; // UBorder*
		constexpr auto DropDownBorder = 0x2a8; // UBorder*
		constexpr auto DropDownButton = 0x2b0; // UButton*
		constexpr auto DropDownImage = 0x2b8; // UImage*
		constexpr auto DropDownList = 0x2c0; // UVerticalBox*
		constexpr auto ScrollBox_1 = 0x2c8; // UScrollBox*
		constexpr auto OnSelectionChanged = 0x2d0; // FMulticastInlineDelegate
		constexpr auto TextStyle = 0x2e0; // FDataTableRowHandle
		constexpr auto HintText = 0x2f0; // FText
		constexpr auto HintTextOpacity = 0x308; // float
		constexpr auto Options = 0x310; // TArray<FText>
		constexpr auto CurrentlySelectedIndex = 0x320; // int32_t
		constexpr auto Expanded = 0x324; // bool
		constexpr auto DefaultBorderColor = 0x328; // FLinearColor
		constexpr auto HoveredBorderColor = 0x338; // FLinearColor
		constexpr auto ActiveBorderColor = 0x348; // FLinearColor
		constexpr auto ErrorBorderColor = 0x358; // FLinearColor
		constexpr auto BackgroundColor = 0x368; // FLinearColor
		constexpr auto Hovered = 0x378; // bool
		constexpr auto IsError = 0x379; // bool
		constexpr auto ScrollSpeedModifier = 0x37c; // float
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UTigerDisciplineJump {
		constexpr auto Config = 0xf8; // UTigerJumpConfig*
		constexpr auto CapsuleOverlapComponent = 0x100; // UCapsuleComponent*
		constexpr auto ActorsThatOverlapped = 0x148; // TArray<AActor*>
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb0; // char : 1
	}

	namespace n_ATigerPaperDoll {
		constexpr auto MeshManager = 0x228; // UTigerCharacterMeshManager*
		constexpr auto TigerPlayerState = 0x230; // TWeakObjectPtr<ATigerPlayerState>
		constexpr auto PropComponent = 0x238; // UTigerNpcPropComponent*
		constexpr auto PlayerAttachment = 0x240; // USceneComponent*
		constexpr auto BodySkelMesh = 0x248; // USkeletalMeshComponent*
		constexpr auto HeadSkelMesh = 0x250; // USkeletalMeshComponent*
		constexpr auto HoodieSkelMesh = 0x258; // USkeletalMeshComponent*
		constexpr auto HairSkelMesh = 0x260; // USkeletalMeshComponent*
		constexpr auto HeadgearMesh = 0x268; // USkeletalMeshComponent*
		constexpr auto EyewearMesh = 0x270; // USkeletalMeshComponent*
		constexpr auto BeardSkelMesh = 0x278; // USkeletalMeshComponent*
		constexpr auto BodyAdditionalMesh = 0x280; // USkeletalMeshComponent*
		constexpr auto StartupAppearance = 0x288; // FTigerPreviewerData
		constexpr auto bRegisterWithPlayerController = 0x538; // bool
		constexpr auto CharacterCustomization = 0x540; // UTigerCharCustomizationComponent*
		constexpr auto PlayerClan = 0x548; // UTigerPlayerClanData*
		constexpr auto CameraComponent = 0x550; // UCameraComponent*
		constexpr auto PlayerAnimInstanceClass = 0x558; // UAnimInstance*
		constexpr auto SceneCapture = 0x560; // USceneCaptureComponent2D*
		constexpr auto CameraManager = 0x568; // ATigerPlayerCameraManager*
		constexpr auto bUseFreeCam = 0x570; // bool
		constexpr auto DefaultCameraLerpSpeed = 0x574; // float
		constexpr auto CamerasOffset = 0x578; // FVector [0xb]
		constexpr auto CameraTargetOffset = 0x5fc; // FVector
		constexpr auto OnStartupAppearanceApplied = 0x608; // FMulticastInlineDelegate
	}

	namespace n_UTBP_UI_InWorldProjectionDashBase_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto DistanceToPlayer = 0x328; // float
		constexpr auto bIsFadingOut = 0x32c; // bool
		constexpr auto bUpdateOnScreenOffset = 0x32d; // bool
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x150; // char : 1
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x298; // TArray<char>
		constexpr auto ARWorldData = 0x2a8; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2b8; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2bc; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2c0; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2c4; // int32_t
	}

	namespace n_UAkMusicSyncCallbackInfo {
		constexpr auto PlayingID = 0x30; // int32_t
		constexpr auto SegmentInfo = 0x34; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x58; // EAkCallbackType
		constexpr auto UserCueName = 0x60; // FString
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_ATigerNpcCapSpawner {
		constexpr auto OwningSpawningCap = 0x260; // ATigerAiSpawningCap*
	}

	namespace n_ATigerSpotLight {
		constexpr auto SpotLightComponent = 0x238; // UTigerSpotLightComponent*
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x330; // float
		constexpr auto bEnableLightShaftOcclusion = 0x334; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x338; // float
		constexpr auto OcclusionDepthRange = 0x33c; // float
		constexpr auto LightShaftOverrideDirection = 0x340; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x34c; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x350; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x354; // float
		constexpr auto DynamicShadowCascades = 0x358; // int32_t
		constexpr auto CascadeDistributionExponent = 0x35c; // float
		constexpr auto CascadeTransitionFraction = 0x360; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x364; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x368; // char : 1
		constexpr auto FarShadowCascadeCount = 0x36c; // int32_t
		constexpr auto FarShadowDistance = 0x370; // float
		constexpr auto DistanceFieldShadowDistance = 0x374; // float
		constexpr auto LightSourceAngle = 0x378; // float
		constexpr auto LightSourceSoftAngle = 0x37c; // float
		constexpr auto ShadowSourceAngleFactor = 0x380; // float
		constexpr auto TraceDistance = 0x384; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x388; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x38c; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x390; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x3a0; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x3a0; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x3a0; // char : 1
		constexpr auto bCastCloudShadows = 0x3a0; // char : 1
		constexpr auto CloudShadowStrength = 0x3a4; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3a8; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3ac; // float
		constexpr auto CloudShadowDepthBias = 0x3b0; // float
		constexpr auto CloudShadowExtent = 0x3b4; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3b8; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3bc; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3c0; // FLinearColor
		constexpr auto LightmassSettings = 0x3d0; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3e0; // char : 1
		constexpr auto ModulatedShadowColor = 0x3e4; // FColor
		constexpr auto ShadowAmount = 0x3e8; // float
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UTigerThrallMissionDetailsUi {
		constexpr auto MissionName = 0x260; // FText
		constexpr auto MissionObjective = 0x278; // FText
		constexpr auto MissionStatRequirements = 0x290; // FText
		constexpr auto MissionRewardXp = 0x2a8; // int32_t
		constexpr auto MissionRewardItems = 0x2b0; // FText
		constexpr auto MissionTurnsLeft = 0x2c8; // int32_t
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x228; // UWindDirectionalSourceComponent*
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UTBP_ContextualHelp_HSense_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto RetriggerTime = 0xf8; // float
		constexpr auto DelayTimer = 0x100; // FTimerHandle
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x4b8; // FString
		constexpr auto LookUpAtRateAxisName = 0x4c8; // FString
		constexpr auto TurnAxisName = 0x4d8; // FString
		constexpr auto TurnAtRateAxisName = 0x4e8; // FString
		constexpr auto MoveForwardAxisName = 0x4f8; // FString
		constexpr auto MoveRightAxisName = 0x508; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x518; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x51c; // float
	}

	namespace n_UTigerAiShouldUseArchDiscipline {
		constexpr auto ShockwavePunchMinimumTargetDistance = 0x98; // float
		constexpr auto EarthshockUseWithoutJumpChance = 0x9c; // float
		constexpr auto TrapsAndScoutsUseNearLootDistance = 0xa0; // float
		constexpr auto ScoutsRedeployChance = 0xa4; // float
		constexpr auto RejuvenatingVoiceLowHealthPercentage = 0xa8; // float
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UTigerGrimoireTree {
		constexpr auto Categories = 0x28; // TArray<UTigerGrimoireCategory*>
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_UTBP_UI_ShotgunCrosshair_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UTigerEmotePlayerComponent {
		constexpr auto PlayingEmote = 0xb0; // FTigerPlayingEmote
		constexpr auto Player = 0xc0; // ATigerPlayer*
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x228; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x230; // bool
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UTigerWeaponMetaData_C {
		constexpr auto ShouldUseWeaponAO = 0x28; // bool
	}

	namespace n_UTigerAmmoAsset {
		constexpr auto AmmoType = 0x128; // ETigerWeaponAmmoType
		constexpr auto AmmoColor = 0x130; // FSlateColor
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UTigerSimpleTextPrompt {
		constexpr auto DisplayText = 0x280; // FText
		constexpr auto PromptLifetimeFailsafe = 0x298; // float
		constexpr auto bIsVisible = 0x29c; // bool
	}

	namespace n_UTigerArtifactAsset {
		constexpr auto ArtifactAbility = 0x128; // ETigerArtifactAbility
	}

	namespace n_UTBP_ContextualHelp_MasqueradeBroken_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_ATigerMatchGameState {
		constexpr auto OnPreMatchStateChanged = 0x320; // FMulticastInlineDelegate
		constexpr auto OnMatchStateChanged = 0x330; // FMulticastInlineDelegate
		constexpr auto OnNumberOfPlayersAttachedToBloodVeinUpdated = 0x340; // FMulticastInlineDelegate
		constexpr auto HighTierLootLocationsChanged = 0x350; // FMulticastInlineDelegate
		constexpr auto NextWaveRevealGameTime = 0x360; // float
		constexpr auto MatchTimePassed = 0x364; // float
		constexpr auto ReplicatedMatchTimePassed = 0x368; // float
		constexpr auto NumPlayersAlive = 0x36c; // int32_t
		constexpr auto NumGroupsAlive = 0x370; // int32_t
		constexpr auto GroupSize = 0x374; // int32_t
		constexpr auto NumPlayersConnected = 0x378; // int32_t
		constexpr auto RandomizedWeatherValue = 0x37c; // int32_t
		constexpr auto PreMatchState = 0x380; // FTigerPreMatchStateInfo
		constexpr auto TigerMatchState = 0x388; // ETigerMatchState
		constexpr auto BalanceMode = 0x389; // EMatchBalanceMode
		constexpr auto MatchSettingsVariationElectedConfig = 0x38c; // FTigerMatchSettingsVariationElectedConfig
		constexpr auto EntityCheckpointMarkerClass = 0x3b8; // ATigerWorldMarker*
		constexpr auto NumberOfPawnsAttachedToBloodVein = 0x3c0; // char
		constexpr auto OnSpawnMechanicReceived = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnGameModeVariationsReceived = 0x3d8; // FMulticastInlineDelegate
		constexpr auto SpawnMechanicClass = 0x3e8; // UTigerSpawnMechanic*
		constexpr auto ActiveHighTierLootGroups = 0x3f0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto JudgeSlainText = 0x400; // FText
		constexpr auto MatchType = 0x418; // ETigerMatchType
		constexpr auto EntityCheckpointLocations = 0x420; // TArray<FVector2D>
		constexpr auto EntityCheckpointMarkers = 0x430; // TArray<ATigerWorldMarker*>
		constexpr auto bGameModeVariationSet = 0x454; // bool
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x258; // int32_t
		constexpr auto ClientActors = 0x260; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x450; // TArray<FMaterialSpriteElement>
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_UTigerCharacterCardBase {
		constexpr auto RepresentedPlayer = 0x280; // TWeakObjectPtr<ATigerPlayerState>
	}

	namespace n_UTigerPropEffectsComponent {
		constexpr auto Particles = 0x4e8; // UParticleSystem*
		constexpr auto AttachPoint = 0x4f0; // FName
		constexpr auto ParticlesSystemComponent = 0x4f8; // UParticleSystemComponent*
		constexpr auto bActivateEffectOnAttach = 0x500; // bool
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x260; // FInt32Interval
	}

	namespace n_UTigerMatchGameModeSettings {
		constexpr auto RangedWeaponsDatatable = 0x38; // TSoftObjectPtr<UDataTable>
		constexpr auto BloodTrackPassiveList = 0x60; // TSoftObjectPtr<UTigerBloodTrackPassiveList>
		constexpr auto HighPotenceBloodTransferTime = 0x88; // float
		constexpr auto SpawnCountdownTime = 0x8c; // int32_t
		constexpr auto MatchStartTimeOutSeconds = 0x90; // int32_t
		constexpr auto PlayerConnectionTimeOutSeconds = 0x94; // int32_t
		constexpr auto PlayerConnectionMinimumWaitTimeSeconds = 0x98; // int32_t
		constexpr auto SecondsOfNetworkInactivityAllowedBeforeForcingReady = 0x9c; // int32_t
		constexpr auto MinPlayersToStartMatch = 0xa0; // int32_t
		constexpr auto bEnableSpawnCountdown = 0xa4; // bool
		constexpr auto bEnableWinningCondition = 0xa5; // bool
		constexpr auto bRespawnPlayerOnDeath = 0xa6; // bool
		constexpr auto bReturnPlayersToElysiumOnFinish = 0xa7; // bool
		constexpr auto bRebootServerOnFinish = 0xa8; // bool
		constexpr auto bEnableAssaults = 0xa9; // bool
		constexpr auto bEnableGroupFill = 0xaa; // bool
		constexpr auto bLogTickRate = 0xab; // bool
		constexpr auto bAutoSpectateOnDeath = 0xac; // bool
		constexpr auto bAllowSpectateNonTeamMembersInGroupMode = 0xad; // bool
		constexpr auto EntityCheckpointsSettings = 0xb0; // FTigerEntityCheckpointsSettings [0x2]
		constexpr auto RatSpawnpointSettings = 0xd0; // FTigerRatSpawnpointSettings [0x2]
		constexpr auto SHPBSettings = 0xe0; // FTigerSHPBSettings [0x2]
		constexpr auto CapturePointSettings = 0x118; // FTigerHavenCapturePointSettings [0x2]
		constexpr auto BattleRoyalePlayerSpawnSettings = 0x158; // FTigerBattleRoyalePlayerSpawnSettings
		constexpr auto PreSpawnSettings = 0x160; // FTigerPreSpawnSettings
		constexpr auto HighTierLootSettings = 0x188; // FTigerHighTierLootSettings
		constexpr auto DownedRegenDuration = 0x1b8; // float [0x2]
		constexpr auto AssistDamageTreshold = 0x1c0; // int32_t
		constexpr auto AssistDuration = 0x1c4; // float
		constexpr auto EnvironmentalKillStealDuration = 0x1c8; // float
	}

	namespace n_UTigerBuffStunBatonInstance {
		constexpr auto StunBatonBuff = 0x88; // UTigerBuffStunBaton*
		constexpr auto Player = 0xa0; // ATigerPlayer*
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x280; // float
		constexpr auto PreviewInfluenceBox = 0x288; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x748; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x748; // char : 1
		constexpr auto MaxPortCountToTry = 0x74c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x75c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x760; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x764; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x768; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x770; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x778; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x77c; // float
	}

	namespace n_UTigerShacklesConfig {
		constexpr auto ShacklesAimingDecal = 0x160; // UMaterialInterface*
		constexpr auto MaxRange = 0x168; // float
		constexpr auto ShacklesAoeSize = 0x16c; // float
		constexpr auto ExplosionDepth = 0x170; // float
		constexpr auto ExplosionDamage = 0x178; // TArray<float>
		constexpr auto ShackleMine = 0x188; // ATigerShacklesMine*
		constexpr auto MineLifeTime = 0x190; // float
		constexpr auto DelayBeforeShackleActivation = 0x194; // float
		constexpr auto CastAnimationName = 0x198; // FName
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto Position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x228; // bool
		constexpr auto bOverwriteClientStats = 0x229; // bool
		constexpr auto Channels = 0x22c; // uint32_t
		constexpr auto InRate = 0x230; // uint32_t
		constexpr auto OutRate = 0x234; // uint32_t
		constexpr auto MaxPacketOverhead = 0x23c; // uint32_t
		constexpr auto InRateClientMax = 0x240; // uint32_t
		constexpr auto InRateClientMin = 0x244; // uint32_t
		constexpr auto InRateClientAvg = 0x248; // uint32_t
		constexpr auto InPacketsClientMax = 0x24c; // uint32_t
		constexpr auto InPacketsClientMin = 0x250; // uint32_t
		constexpr auto InPacketsClientAvg = 0x254; // uint32_t
		constexpr auto OutRateClientMax = 0x258; // uint32_t
		constexpr auto OutRateClientMin = 0x25c; // uint32_t
		constexpr auto OutRateClientAvg = 0x260; // uint32_t
		constexpr auto OutPacketsClientMax = 0x264; // uint32_t
		constexpr auto OutPacketsClientMin = 0x268; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x26c; // uint32_t
		constexpr auto NetNumClients = 0x270; // uint32_t
		constexpr auto InPackets = 0x274; // uint32_t
		constexpr auto OutPackets = 0x278; // uint32_t
		constexpr auto InBunches = 0x27c; // uint32_t
		constexpr auto OutBunches = 0x280; // uint32_t
		constexpr auto OutLoss = 0x284; // uint32_t
		constexpr auto InLoss = 0x288; // uint32_t
		constexpr auto VoiceBytesSent = 0x28c; // uint32_t
		constexpr auto VoiceBytesRecv = 0x290; // uint32_t
		constexpr auto VoicePacketsSent = 0x294; // uint32_t
		constexpr auto VoicePacketsRecv = 0x298; // uint32_t
		constexpr auto PercentInVoice = 0x29c; // uint32_t
		constexpr auto PercentOutVoice = 0x2a0; // uint32_t
		constexpr auto NumActorChannels = 0x2a4; // uint32_t
		constexpr auto NumConsideredActors = 0x2a8; // uint32_t
		constexpr auto PrioritizedActors = 0x2ac; // uint32_t
		constexpr auto NumRelevantActors = 0x2b0; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2b4; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2b8; // uint32_t
		constexpr auto NumReplicatedActors = 0x2bc; // uint32_t
		constexpr auto NumActors = 0x2c0; // uint32_t
		constexpr auto NumNetActors = 0x2c4; // uint32_t
		constexpr auto NumDormantActors = 0x2c8; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2cc; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2d0; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2d4; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2d8; // uint32_t
		constexpr auto ObjPathBytes = 0x2dc; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2e0; // uint32_t
		constexpr auto NetGUIDInRate = 0x2e4; // uint32_t
		constexpr auto NetSaturated = 0x2e8; // uint32_t
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x1f8; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x1f8; // char : 1
		constexpr auto bAllowSpatialization = 0x1f8; // char : 1
		constexpr auto bOverrideAttenuation = 0x1f8; // char : 1
		constexpr auto bOutputToBusOnly = 0x1fc; // char : 1
		constexpr auto AttenuationSettings = 0x200; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x208; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5a8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5b0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x600; // USoundClass*
		constexpr auto SourceEffectChain = 0x608; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x610; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x618; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x628; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x648; // char : 1
		constexpr auto bIsPreviewSound = 0x648; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x64c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x650; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x658; // FMulticastInlineDelegate
		constexpr auto Synth = 0x688; // USynthSound*
		constexpr auto AudioComponent = 0x690; // UAudioComponent*
	}

	namespace n_UTigerFaceCurvesAnimationMap {
		constexpr auto CurveAnimations = 0x28; // TMap<FName, UAnimSequence*>
		constexpr auto FaceMontages = 0x78; // TMap<FName, UAnimMontage*>
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x3c; // FName
		constexpr auto CrowdManagerClass = 0x48; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x70; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x70; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x70; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x70; // char : 1
		constexpr auto bTickWhilePaused = 0x70; // char : 1
		constexpr auto bSupportRebuilding = 0x70; // char : 1
		constexpr auto bInitialBuildingLocked = 0x70; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x71; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x71; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x74; // float
		constexpr auto DataGatheringMode = 0x78; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x7c; // float
		constexpr auto SupportedAgents = 0x80; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x90; // FNavAgentSelector
		constexpr auto NavDataSet = 0x98; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa8; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd8; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1c4; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x1604; // float
	}

	namespace n_UTBP_UI_HorizontalFadeSlot_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Background = 0x268; // UImage*
		constexpr auto LeftFade = 0x270; // UImage*
		constexpr auto NamedSlot_1 = 0x278; // UNamedSlot*
		constexpr auto RightFade = 0x280; // UImage*
		constexpr auto LeftFadeWidth = 0x288; // float
		constexpr auto RightFadeWidth = 0x28c; // float
	}

	namespace n_UTigerLaceratingThrowConfig {
		constexpr auto KnifeActor = 0x170; // ATigerLaceratingThrowProjectile*
		constexpr auto BuffToApplyOnHit = 0x178; // TArray<UTigerBuff*>
		constexpr auto ProjectileSpeed = 0x188; // float
		constexpr auto DamageOnHit = 0x18c; // float
		constexpr auto Reach = 0x190; // float
		constexpr auto SlowText = 0x198; // FText
		constexpr auto SlowSuffix = 0x1b0; // FText
	}

	namespace n_UTBP_VanishBuff_Master_C {
		constexpr auto UberGraphFrame = 0x268; // FPointerToUberGraphFrame
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x130; // FMulticastInlineDelegate
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xe8; // UNavMovementComponent*
		constexpr auto MyNavData = 0xf8; // ANavigationData*
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x228; // USplineMeshComponent*
	}

	namespace n_UTigerBufferedAction {
		constexpr auto OwnerPlayerController = 0x28; // ATigerPlayerController*
		constexpr auto OwnerActionBuffer = 0x30; // UTigerActionBuffer*
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x228; // UPaperTileMapComponent*
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerGrimoireSeasonData {
		constexpr auto SeasonId = 0x30; // int32_t
		constexpr auto StartDate = 0x38; // FDateTime
		constexpr auto EndDate = 0x40; // FDateTime
		constexpr auto Entries = 0x48; // TArray<UTigerGrimoireEntry*>
	}

	namespace n_UTigerTraversalLedgeGrabState {
		constexpr auto LedgeGrabConfig = 0x40; // UTigerTraversalStateLedgeGrabConfig*
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x598; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5a8; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5b0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5cc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5e8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x5f8; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x600; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x604; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x620; // bool
		constexpr auto InstanceCountToRender = 0x624; // int32_t
	}

	namespace n_UTBP_ChatComponent_C {
		constexpr auto UberGraphFrame = 0xe8; // FPointerToUberGraphFrame
		constexpr auto ChatWindow = 0xf0; // UUserWidget*
		constexpr auto bPreventMessages = 0xf8; // bool
		constexpr auto bIsSoloMatch = 0xf9; // bool
	}

	namespace n_UTigerSplatmapSettings {
		constexpr auto bRenderSplatmap = 0x38; // bool
		constexpr auto DefaultStamp = 0x40; // TSoftObjectPtr<UTexture2D>
		constexpr auto TimeBetweenAutoExportInSeconds = 0x68; // float
		constexpr auto bUseCtrlToDraw = 0x6c; // bool
		constexpr auto DrawMaterialMaster = 0x70; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto DrawMaterialTextureParamName = 0x98; // FName
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x260; // UProceduralFoliageComponent*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UTigerAIPlayAnimationTask {
		constexpr auto AnimationToPlay = 0x70; // UAnimMontage*
		constexpr auto ContextualActionPointKey = 0x78; // FBlackboardKeySelector
		constexpr auto MyOwnerComp = 0xa0; // UBehaviorTreeComponent*
	}

	namespace n_UTigerDisciplineComponent {
		constexpr auto DisciplineConfigs = 0xb0; // UTigerDisciplineConfigs*
		constexpr auto DisciplineFailSound = 0xb8; // USoundBase*
		constexpr auto OnDisciplineUsedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnActivatedDisciplineDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnDeactivatedDisciplineDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnDisciplineUnlocked = 0xf0; // FMulticastInlineDelegate
		constexpr auto ScouterCharacterData = 0x100; // FTigerScouterCharacterData
		constexpr auto PrimaryShacklesBuff = 0x130; // UTigerBuffShackles*
		constexpr auto SecondaryShacklesBuff = 0x138; // UTigerBuff*
		constexpr auto WeaponRarityDamageMultipliers = 0x140; // float [0x5]
		constexpr auto Player = 0x158; // ATigerPlayer*
		constexpr auto Disciplines = 0x1e8; // TMap<ETigerDisciplinesEnum, UTigerDisciplineBase*>
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x1f8; // char : 1
		constexpr auto bSupportsDepth = 0x1f8; // char : 1
		constexpr auto bNoAlphaChannel = 0x1f8; // char : 1
		constexpr auto Texture = 0x200; // UTexture*
		constexpr auto LeftTexture = 0x208; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x210; // char : 1
		constexpr auto QuadSize = 0x214; // FVector2D
		constexpr auto UVRect = 0x21c; // FBox2D
		constexpr auto CylinderRadius = 0x230; // float
		constexpr auto CylinderOverlayArc = 0x234; // float
		constexpr auto CylinderHeight = 0x238; // int32_t
		constexpr auto EquirectProps = 0x23c; // FEquirectProps
		constexpr auto StereoLayerType = 0x284; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x285; // EStereoLayerShape
		constexpr auto Shape = 0x288; // UStereoLayerShape*
		constexpr auto Priority = 0x290; // int32_t
	}

	namespace n_UTigerPassiveEnragedLogic {
		constexpr auto Config = 0xc0; // UTigerPassiveEnragedConfig*
		constexpr auto EffectActor = 0xc8; // ATigerEnragedEffectActor*
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_UTBP_UI_LoadingScreen_Simple_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto MoveText = 0x2a0; // UWidgetAnimation*
		constexpr auto FadeOutAnimation = 0x2a8; // UWidgetAnimation*
		constexpr auto FadeInAnimation = 0x2b0; // UWidgetAnimation*
		constexpr auto BackgroundWidget = 0x2b8; // UImage*
		constexpr auto DestinationText = 0x2c0; // UTigerStyledRichTextBlock*
		constexpr auto Image_119 = 0x2c8; // UImage*
		constexpr auto LoadingScreenWarning = 0x2d0; // UTextBlock*
		constexpr auto MovingTextAnim = 0x2d8; // UTextBlock*
		constexpr auto RootLayout = 0x2e0; // UCanvasPanel*
		constexpr auto TBP_UI_Divider = 0x2e8; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Gradient = 0x2f0; // UTBP_UI_Gradient_C*
		constexpr auto TBP_UI_Loading_Throbber = 0x2f8; // UTBP_UI_Loading_Throbber_C*
		constexpr auto TickMovingText = 0x300; // UTextBlock*
		constexpr auto TigerSafeZoneWidget_9 = 0x308; // UTigerSafeZoneWidget*
		constexpr auto TipDescriptionText = 0x310; // UTigerStyledRichTextBlock*
		constexpr auto TipTitleText = 0x318; // UTigerStyledRichTextBlock*
		constexpr auto PlayngId = 0x320; // int32_t
		constexpr auto DebugPingPongSign = 0x324; // float
		constexpr auto LoadingTipsAsset = 0x328; // UTBP_LoadingToolTip_C*
		constexpr auto LastLoadingTipUpdatedTime = 0x330; // int32_t
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Feed_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UTigerMajestyConfig {
		constexpr auto Montage = 0x160; // UAnimMontage*
		constexpr auto ApplyEffectTime = 0x168; // float
		constexpr auto CharmDurationText = 0x170; // FText
		constexpr auto CharmDurationSuffix = 0x188; // FText
		constexpr auto CharmedBuff = 0x1a0; // TArray<UTigerMajestyBuff*>
		constexpr auto bDoFacingCheckOnNPCs = 0x1b0; // bool
		constexpr auto bIsEntityImmune = 0x1b1; // bool
		constexpr auto bRequireLineOfSight = 0x1b2; // bool
		constexpr auto Radius = 0x1b4; // float
		constexpr auto FacingAllowedYawDifference = 0x1b8; // float
		constexpr auto bDebugDraw = 0x1bc; // bool
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x228; // UVectorFieldComponent*
	}

	namespace n_UDA_WeatherScenario_C {
		constexpr auto WindStrength = 0x38; // float
		constexpr auto WindSpeed = 0x3c; // float
		constexpr auto RainRate = 0x40; // float
		constexpr auto PuddlesAmount = 0x44; // float
		constexpr auto PuddlesRingsIntensity = 0x48; // float
		constexpr auto PuddlesWindTiling = 0x4c; // float
		constexpr auto AIPerception = 0x50; // float
		constexpr auto RainAudioMin = 0x54; // float
		constexpr auto ThunderAudioMin = 0x58; // float
		constexpr auto WindAudioMin = 0x5c; // float
		constexpr auto ExponensialHeightFog = 0x60; // int32_t
		constexpr auto RainAudioMax = 0x64; // float
		constexpr auto ThunderAudioMax = 0x68; // float
		constexpr auto WindAudioMax = 0x6c; // float
	}

	namespace n_UTigerChallengeVisitLocation {
		constexpr auto TriggerVolume = 0xb0; // TSoftObjectPtr<ATigerVisitLocationTriggerVolume>
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_ATBP_BestialTrailVisualizer_DebugLines_C {
		constexpr auto UberGraphFrame = 0x240; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto PreviousPoint = 0x250; // FTigerPlayerSavedLocation
		constexpr auto SecondLocation = 0x260; // FTigerPlayerSavedLocation
		constexpr auto Config = 0x270; // UTigerNosferatuPassiveBestialConfig*
		constexpr auto Latest Part = 0x278; // UTBP_BestialTrailPart_SplineMesh_C*
		constexpr auto Number of Received Points = 0x280; // int32_t
		constexpr auto NewVar_1 = 0x288; // UNiagaraComponent*
		constexpr auto 3rdPos = 0x290; // FVector
		constexpr auto PreviousNiagaraBeam = 0x2a0; // UNiagaraComponent*
		constexpr auto PreviousSpawnTime = 0x2a8; // float
		constexpr auto PreviousPointNumber = 0x2ac; // float
		constexpr auto NiagaraPath = 0x2b0; // FSoftObjectPath
		constexpr auto Passive Component = 0x2c8; // UTBP_AnAcquiredTaste_C*
	}

	namespace n_UTigerFeedingAnimationAsset {
		constexpr auto FeedingDataByClan = 0x30; // FTigerFeedingDataByGender [0x4]
	}

	namespace n_UTBP_UI_TransitionWidget_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto Content = 0x2a0; // UNamedSlot*
		constexpr auto TransitionRetainerBox = 0x2a8; // UTBP_UI_TransitionRetainerBox_C*
	}

	namespace n_UTigerSessionSeeker {
		constexpr auto OnSessionFound = 0x28; // FMulticastInlineDelegate
		constexpr auto OnCouldNotFindSession = 0x38; // FMulticastInlineDelegate
		constexpr auto OnJoiningSession = 0x48; // FMulticastInlineDelegate
		constexpr auto OnCouldNotJoinSession = 0x58; // FMulticastInlineDelegate
		constexpr auto WorldContextObject = 0x68; // UObject*
		constexpr auto GameInstance = 0x70; // UTigerGameInstance*
		constexpr auto PlayerController = 0x78; // ATigerPlayerController*
		constexpr auto SelectedSession = 0x80; // FTigerBpFindSessionSelectedSession
		constexpr auto Status = 0x190; // ETigerSessionSearchStatus
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_ATigerLootBox {
		constexpr auto PickupItemClass = 0x288; // ATigerItemWorldRepresentation*
		constexpr auto StartInteractSound = 0x290; // UAkAudioEvent*
		constexpr auto StopInteractSound = 0x298; // UAkAudioEvent*
		constexpr auto CurrentHighestRarity = 0x2a0; // ETigerItemRarity
		constexpr auto ItemList = 0x2a8; // TArray<FTigerItemData>
		constexpr auto bWasSpawnedOnPlayerDeath = 0x2b8; // bool
		constexpr auto bHasBeenPreviouslyOpened = 0x2b9; // bool
		constexpr auto CurrentInteractingPlayerController = 0x2bc; // TWeakObjectPtr<ATigerPlayerController>
		constexpr auto CancelInteractionVolume = 0x2c8; // UBoxComponent*
		constexpr auto TelemetrySourceID = 0x2e8; // ETigerTelemetryItemSourceID
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UTigerAIPlayerSlideIfPossibleTask {
		constexpr auto MinimumSlideDistanceSqrd = 0x70; // float
		constexpr auto LocalAIController = 0x78; // ATigerLocalAIController*
		constexpr auto PlayerController = 0x80; // ATigerPlayerController*
		constexpr auto CurrentPawn = 0x88; // ATigerPlayer*
		constexpr auto PlayerMovementComponent = 0x90; // UTigerCharacterMovementComponent*
		constexpr auto SlideState = 0x98; // UTigerTraversalSlideState*
	}

	namespace n_ATigerEntityCheckpoint {
		constexpr auto EntityLeader = 0x288; // ATigerBaseNPC*
		constexpr auto SupplyDropLocation = 0x290; // AActor*
		constexpr auto SupplyDropConsumable = 0x298; // UTigerSupplyDropConsumableAsset*
		constexpr auto SupplyDropComponent = 0x2a0; // UActorComponent*
		constexpr auto bIsAcknowledged = 0x2a8; // bool
	}

	namespace n_UTigerNotificationsUI {
		constexpr auto HolyIncenseImminentTime = 0x280; // float
	}

	namespace n_UTigerRichTextBlockDecorator {
		constexpr auto bReveal = 0x28; // bool
		constexpr auto RevealedIndex = 0x2c; // int32_t
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UTigerPassiveUnbridledRageConfig {
		constexpr auto MinimumLoudnessMultiplier = 0x118; // float
		constexpr auto MaximumLoudnessMultiplier = 0x11c; // float
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UStaticPiercingPhysics {
		constexpr auto SimulatedPhysicsStaticPiercings = 0x28; // TArray<FStaticPhysicsPiercingData>
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UAkCheckBox {
		constexpr auto CheckedState = 0x4b8; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4bc; // FDelegate
		constexpr auto WidgetStyle = 0x4d0; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xa50; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xa51; // bool
		constexpr auto ThePropertyToControl = 0xa58; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xa68; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xaa8; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xab8; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xac8; // FMulticastInlineDelegate
	}

	namespace n_UTigerContextualHelpComponent {
		constexpr auto TigerPlayerController = 0xb0; // ATigerPlayerController*
		constexpr auto ContextualHelpUI = 0xb8; // UTigerContextualHelpUI*
		constexpr auto ActiveContextualHelps = 0xc0; // TArray<FTigerCurrentContextualHelp>
		constexpr auto ContextualHelpCandidates = 0xd0; // TArray<UTigerContextualHelp*>
		constexpr auto ContextualHelpTypes = 0xe0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto CooldownTime = 0xf0; // float
		constexpr auto MinimumDisplayTime = 0xf4; // float
	}

	namespace n_UTBP_UI_GroupInvitationList_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto InvitationQueue = 0x298; // UWidgetSwitcher*
		constexpr auto GameInstance = 0x2a0; // UTBP_TigerGameInstance_C*
	}

	namespace n_UAkSwitchInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xb8; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UTigerWeaponAbilityReflect {
		constexpr auto Config = 0x88; // UTigerReflectConfig*
		constexpr auto Player = 0x90; // ATigerPlayer*
		constexpr auto ReflectorActor = 0x98; // AActor*
	}

	namespace n_ATBP_PoisonProjectile_C {
		constexpr auto UberGraphFrame = 0x3e0; // FPointerToUberGraphFrame
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x230; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x248; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x250; // FSoftObjectPath
		constexpr auto BindingOverride = 0x268; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UTigerTraversalStateSlideJumpConfig {
		constexpr auto JumpCoolDownTime = 0x50; // float
		constexpr auto PostJumpClimbInteractionDelay = 0x54; // float
		constexpr auto SlideHorizontalDirectionInfluenceThreshold = 0x58; // float
		constexpr auto SlideJumpDecayRecoverySpeed = 0x5c; // float
		constexpr auto JumpZVelocityOverSlideSpeed = 0x60; // UCurveFloat*
		constexpr auto SlideJumpHorizontalMultiplierOverVelocity = 0x68; // UCurveFloat*
		constexpr auto SlideJumpDecayCurve = 0x70; // UCurveFloat*
	}

	namespace n_UShOnlineServerSettings {
		constexpr auto ServerSecretDev = 0x38; // FString
		constexpr auto ServerSecretUat = 0x48; // FString
		constexpr auto ServerSecretProd = 0x58; // FString
		constexpr auto ServerSecretLocal = 0x68; // FString
	}

	namespace n_UTigerCustomMontageListMeleeWeapon {
		constexpr auto Montages = 0x28; // TMap<UTigerMeleeWeapon*, UAnimMontage*>
	}

	namespace n_UTBP_UI_Crosshair_AutoLong_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UAkAssetBase {
		constexpr auto PlatformAssetData = 0x40; // UAkAssetPlatformData*
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UTigerClientRewardTrackMasteryChallenges {
		constexpr auto ChallengeInstanceIDs = 0x48; // TArray<FTigerChallengeInstanceID>
		constexpr auto RewardIdForSpecificChallenge = 0x58; // TArray<FTigerItemId>
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UTigerDeathScreen {
		constexpr auto KillerTypeNames = 0x298; // TMap<ETigerKillerType, FText>
	}

	namespace n_UTigerLocalThrallMissionData {
		constexpr auto OnMissionProgression = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMissionComplete = 0x38; // FMulticastInlineDelegate
		constexpr auto BaseMissionData = 0x48; // UTigerThrallMission*
		constexpr auto ThrallSystem = 0x50; // UTigerThrallSystem*
		constexpr auto PersistentMissionData = 0x58; // FTigerPersistentMissionData
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xb0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xc4; // FVector
		constexpr auto PlaneConstraintNormal = 0xd0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xdc; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xe8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xe8; // char : 1
		constexpr auto bTickBeforeOwner = 0xe8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xe8; // char : 1
		constexpr auto bConstrainToPlane = 0xe8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xe8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xe8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xe8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xeb; // EPlaneConstraintAxisSetting
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UTBP_UI_FindGameFailedMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto TBP_UI_BasicMenu = 0x298; // UTBP_UI_BasicMenu_C*
		constexpr auto TBP_UI_MenuButton = 0x2a0; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_MenuButton_C_1 = 0x2a8; // UTBP_UI_MenuButton_C*
		constexpr auto Throbber_1 = 0x2b0; // UThrobber*
		constexpr auto GameInstanceRef = 0x2b8; // UTBP_TigerGameInstance_C*
		constexpr auto FoundSessions = 0x2c0; // TArray<FBlueprintSessionResult>
		constexpr auto SessionFound? = 0x2d0; // bool
		constexpr auto AvailableSession = 0x2d8; // FBlueprintSessionResult
		constexpr auto SearchButtonEnabled? = 0x3e0; // bool
		constexpr auto ThrobberVisibility = 0x3e1; // ESlateVisibility
		constexpr auto ButtonVisibility = 0x3e2; // ESlateVisibility
	}

	namespace n_UTigerDialogueCondition_Outfit {
		constexpr auto OutfitRequirement = 0x30; // ETigerDialogueOutfitRequirementSpecifier
		constexpr auto Clan = 0x31; // ETigerClan
		constexpr auto Gender = 0x32; // ETigerGender
		constexpr auto OutfitAssetName = 0x38; // FString
	}

	namespace n_ATigerActivatedObject {
		constexpr auto BaseMesh = 0x240; // UStaticMeshComponent*
		constexpr auto ActivationAudioEvent = 0x248; // UAkAudioEvent*
		constexpr auto bActivationAudioShouldPlay = 0x250; // bool
		constexpr auto bTriggerOnlyOnPlayers = 0x251; // bool
		constexpr auto bUseAudioActivationRadius = 0x252; // bool
		constexpr auto ActivationRadius = 0x254; // float
		constexpr auto AudioFadeOutDuration = 0x258; // float
		constexpr auto WeakCharacterTrigger = 0x25c; // TWeakObjectPtr<UShapeComponent>
	}

	namespace n_UTigerPartyInvite {
		constexpr auto ID = 0x28; // FTigerInviteId
		constexpr auto HostId = 0x38; // FTigerPersistentPlayerID
		constexpr auto HostDisplayName = 0x48; // FString
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UTigerTraversalStateLedgeGrabConfig {
		constexpr auto LedgeGrabAnimationName = 0x50; // FName
		constexpr auto FallbackLedgeGrabAnimationName = 0x58; // FName
		constexpr auto LedgeGrabUpperBodyVolumeExtent = 0x60; // FVector
		constexpr auto LedgeGrabClearanceCheckExtent = 0x6c; // FVector
		constexpr auto LedgeGrabUpperBodyVolumeCheckPosition = 0x78; // FVector
		constexpr auto AnimationBlendoutStartDelay = 0x84; // float
		constexpr auto LedgeGrabAnimationTriggerMaxDistance = 0x88; // float
		constexpr auto MaximumLedgeWallHeight = 0x8c; // float
		constexpr auto MaximumLedgeOverHangDepth = 0x90; // float
		constexpr auto LedgeGrabUpperBodyVolumeForwardOffset = 0x94; // float
		constexpr auto LedgeGrabMaximumCameraAngleDifference = 0x98; // float
		constexpr auto LedgeGrabForwardSearchDepth = 0x9c; // float
		constexpr auto LedgeGrabBackwardSearchDepth = 0xa0; // float
		constexpr auto LedgeGrabPositionSweepRadius = 0xa4; // float
		constexpr auto LedgeGrabPositionHorizontalEdgeOffset = 0xa8; // float
		constexpr auto LedgeGrabPositionVerticalOffset = 0xac; // float
		constexpr auto StartingRotationSpeedForBringingCharacterBackToCameraFacing = 0xb0; // float
		constexpr auto RotationSpeedGainPerSecond = 0xb4; // float
		constexpr auto MaxTimeToFixCharacterRotation = 0xb8; // float
		constexpr auto bShouldAdjustLedgeGrabAnimationPlayRate = 0xbc; // bool
		constexpr auto bShouldUseExitLedgeGrabRotationInterpolation = 0xbd; // bool
	}

	namespace n_UTigerWeaponAnimInstance {
		constexpr auto bShowWeaponTrails = 0x2b8; // bool
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FARQRCodeUpdatePayload
	}

	namespace n_ATigerItemCluster {
		constexpr auto ItemActorClass = 0x228; // ATigerItemWorldRepresentation*
		constexpr auto Items = 0x230; // FItemClusterArray
		constexpr auto ItemActors = 0x350; // TArray<ATigerItemWorldRepresentation*>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x228; // URuntimeVirtualTextureComponent*
	}

	namespace n_UBasicReplicationGraph {
		constexpr auto GridNode = 0x498; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4a0; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x4a8; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x4b8; // TArray<AActor*>
	}

	namespace n_UTBP_ArchetypeSelect_SkillsSummary_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto ArchetpeSkill_Button = 0x288; // UButton*
		constexpr auto ArchetypeName = 0x290; // UTigerStyledRichTextBlock*
		constexpr auto ArchetypeSkill_Arrow = 0x298; // UImage*
		constexpr auto ArchetypeSkill_BG = 0x2a0; // UImage*
		constexpr auto ArchetypeSkill_Icon = 0x2a8; // UImage*
		constexpr auto ArchetypeSkill_Outline = 0x2b0; // UImage*
		constexpr auto ArchetypeTag = 0x2b8; // UTigerStyledRichTextBlock*
		constexpr auto MoveSkill_Arrow = 0x2c0; // UImage*
		constexpr auto MoveSkill_BG = 0x2c8; // UImage*
		constexpr auto MoveSkill_Button = 0x2d0; // UButton*
		constexpr auto MoveSkill_Icon = 0x2d8; // UImage*
		constexpr auto MoveSkill_Outline = 0x2e0; // UImage*
		constexpr auto PassiveSkill_Arrow = 0x2e8; // UImage*
		constexpr auto PassiveSkill_BG = 0x2f0; // UImage*
		constexpr auto PassiveSkill_Button = 0x2f8; // UButton*
		constexpr auto PassiveSkill_Icon = 0x300; // UImage*
		constexpr auto PassiveSkill_Outline = 0x308; // UImage*
		constexpr auto PlayVideoIcon = 0x310; // UImage*
		constexpr auto PowerDescription = 0x318; // UTigerStyledRichTextBlock*
		constexpr auto PowerName = 0x320; // UTigerStyledRichTextBlock*
		constexpr auto PowerType_Text = 0x328; // UTigerStyledRichTextBlock*
		constexpr auto Prompt_ViewVideo = 0x330; // UTBP_UI_InputPromptCombined_C*
		constexpr auto PromptBox = 0x338; // UHorizontalBox*
		constexpr auto TBP_UI_Divider = 0x340; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_MaskedCardBorder_C_1 = 0x348; // UTBP_UI_MaskedCardBorder_C*
		constexpr auto TextBG = 0x350; // UImage*
		constexpr auto VideoButton = 0x358; // UButton*
		constexpr auto ArchetypeCONFIG = 0x360; // UTBP_DisciplineConfigs_C*
		constexpr auto SelectedPower = 0x368; // int32_t
		constexpr auto Selected Archetype = 0x370; // UTigerPowerKit*
		constexpr auto Skill Icons = 0x378; // TArray<UImage*>
		constexpr auto Outlines = 0x388; // TArray<UImage*>
		constexpr auto Clicked_MoveSkill = 0x398; // FMulticastInlineDelegate
		constexpr auto Clicked_PassiveSkill = 0x3a8; // FMulticastInlineDelegate
		constexpr auto Clicked_ArchetypeSkill = 0x3b8; // FMulticastInlineDelegate
		constexpr auto Hovered_MoveSkill = 0x3c8; // FMulticastInlineDelegate
		constexpr auto Hovered_PassiveSkill = 0x3d8; // FMulticastInlineDelegate
		constexpr auto Hovered_ArchetypeSkill = 0x3e8; // FMulticastInlineDelegate
		constexpr auto Powers Header Text = 0x3f8; // FText
		constexpr auto Backgrounds = 0x410; // TArray<UImage*>
		constexpr auto Arrows = 0x420; // TArray<UImage*>
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x228; // TArray<AActor*>
	}

	namespace n_UTigerPassiveNightstalkerLogic {
		constexpr auto Config = 0x158; // UTigerPassiveNightstalkerConfig*
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_ATigerItemWorldRepresentation {
		constexpr auto CompassMarker = 0x230; // UTigerCompassMarkerWidget*
		constexpr auto ItemType = 0x240; // UTigerItemAsset*
		constexpr auto RangedWeaponsDatatable = 0x248; // UDataTable*
		constexpr auto ItemCount = 0x268; // int32_t
		constexpr auto Mesh = 0x270; // UStaticMeshComponent*
		constexpr auto ItemCluster = 0x278; // ATigerItemCluster*
		constexpr auto LootSpawner = 0x280; // ATigerLootSpawner*
		constexpr auto ItemClusterUID = 0x288; // uint32_t
		constexpr auto ItemSourceID = 0x28c; // ETigerTelemetryItemSourceID
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UTigerGrimoireUi {
		constexpr auto bNotificationIdsSetup = 0x3b0; // bool
		constexpr auto GrimoireItem = 0x3b8; // ATigerModelViewerItem*
		constexpr auto GrimoireCard = 0x3c0; // ATigerGrimoireCard*
		constexpr auto ModelCam = 0x3c8; // AActor*
		constexpr auto CloseModelCam = 0x3d0; // AActor*
		constexpr auto ItemRotationNodeTag = 0x3d8; // FName
		constexpr auto CloseViewerCamName = 0x3e0; // FName
		constexpr auto ViewerCamName = 0x3e8; // FName
		constexpr auto ExaminablePropsLevelName = 0x3f0; // FName
		constexpr auto ItemRotationNode = 0x3f8; // AActor*
		constexpr auto LightingSubLevelName = 0x400; // FName
	}

	namespace n_UTigerTrapsConfig {
		constexpr auto ThrowAudioEvent = 0x170; // UAkAudioEvent*
		constexpr auto LandAudioEvent = 0x178; // UAkAudioEvent*
		constexpr auto ArmingAudioEvent = 0x180; // UAkAudioEvent*
		constexpr auto ExplosionAudioEvent = 0x188; // UAkAudioEvent*
		constexpr auto FizzleAudioEvent = 0x190; // UAkAudioEvent*
		constexpr auto StartGasAudioEvent = 0x198; // UAkAudioEvent*
		constexpr auto StopGasAudioEvent = 0x1a0; // UAkAudioEvent*
		constexpr auto PitchCurve = 0x1a8; // UCurveFloat*
		constexpr auto EmissiveCurve = 0x1b0; // UCurveFloat*
		constexpr auto EmissiveCurveLoopTime = 0x1b8; // float
		constexpr auto AllyStatusColor = 0x1bc; // FLinearColor
		constexpr auto EnemyStatusColor = 0x1cc; // FLinearColor
		constexpr auto MaxEmissiveBoost = 0x1dc; // float
		constexpr auto DecalMaterial = 0x1e0; // UMaterialInterface*
		constexpr auto AimMontage = 0x1e8; // UAnimMontage*
		constexpr auto AimTrapSpawnSocket = 0x1f0; // FName
		constexpr auto AimTrapType = 0x1f8; // AActor*
		constexpr auto TrapType = 0x200; // ATigerTrap*
		constexpr auto GasBuff = 0x208; // TArray<UTigerBuff*>
		constexpr auto MaxTrapsActive = 0x218; // TArray<int32_t>
		constexpr auto SpawnOffset = 0x228; // FVector
		constexpr auto TerminalVelocity = 0x234; // float
		constexpr auto GravitationalPull = 0x238; // float
		constexpr auto AirFriction = 0x23c; // float
		constexpr auto ThrowForce = 0x240; // float
		constexpr auto ThrowMaxForce = 0x244; // float
		constexpr auto ThrowPlayerVelocityForceScale = 0x248; // float
		constexpr auto ThrowPitchOffset = 0x24c; // float
		constexpr auto ThrowMinPitch = 0x250; // float
		constexpr auto ThrowMaxPitch = 0x254; // float
		constexpr auto LifeTime = 0x258; // float
		constexpr auto TriggerDelay = 0x25c; // float
		constexpr auto ReleaseDelay = 0x260; // float
		constexpr auto DecalFadeDuration = 0x264; // float
		constexpr auto ArmingDuration = 0x268; // float
		constexpr auto GasDuration = 0x270; // TArray<float>
		constexpr auto TriggerRadius = 0x280; // TArray<float>
		constexpr auto ExplosionRadius = 0x290; // TArray<float>
		constexpr auto GasRadius = 0x2a0; // TArray<float>
		constexpr auto DecalTriggerRadiusScale = 0x2b0; // float
		constexpr auto AreaEffectScale = 0x2b8; // TArray<float>
		constexpr auto ExplosionEffectScale = 0x2c8; // TArray<float>
		constexpr auto GasEffectScale = 0x2d8; // TArray<float>
		constexpr auto ExplosionDamage = 0x2e8; // TArray<float>
		constexpr auto bHostileNpcTriggersTrap = 0x2f8; // bool
		constexpr auto bAllyAreaVisible = 0x2f9; // bool
		constexpr auto bAllyImmunityExplosion = 0x2fa; // bool
		constexpr auto bAllyImmunityGas = 0x2fb; // bool
		constexpr auto bClearGasBuffOnExit = 0x2fc; // bool
		constexpr auto bDrawDebugSpheres = 0x2fd; // bool
	}

	namespace n_UTigerItemPreviewAsset {
		constexpr auto ItemPreviews = 0x30; // TArray<FTigerItemPreviewData>
	}

	namespace n_UTBP_UI_CheckboxWithClickabelText_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Checkbox_button = 0x268; // UButton*
		constexpr auto CheckboxBorder_default_image = 0x270; // UImage*
		constexpr auto CheckboxBorder_selected_image = 0x278; // UImage*
		constexpr auto CheckboxCheck_image = 0x280; // UImage*
		constexpr auto Image_135 = 0x288; // UImage*
		constexpr auto TextButton = 0x290; // UTBP_UI_TextButton_C*
		constexpr auto TextNormal = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto OnChecked_true = 0x2a0; // FMulticastInlineDelegate
		constexpr auto Text = 0x2b0; // FText
		constexpr auto IsClickable = 0x2c8; // bool
		constexpr auto OnChecked_false = 0x2d0; // FMulticastInlineDelegate
		constexpr auto OnClickedText = 0x2e0; // FMulticastInlineDelegate
		constexpr auto ShouldAutoWrapText = 0x2f0; // bool
		constexpr auto WrapTextAt = 0x2f4; // float
		constexpr auto bMustReadPopupBeforeAccepting = 0x2f8; // bool
		constexpr auto OnClickedPopupRequirement = 0x300; // FMulticastInlineDelegate
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UTBP_UI_Tutorial_IntroText_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FadeOutSimpleText = 0x268; // UWidgetAnimation*
		constexpr auto FadeOutLoreText = 0x270; // UWidgetAnimation*
		constexpr auto FadeInSimpleText = 0x278; // UWidgetAnimation*
		constexpr auto FadeInLoreText = 0x280; // UWidgetAnimation*
		constexpr auto FadeOutScreen = 0x288; // UWidgetAnimation*
		constexpr auto FadeInScreen = 0x290; // UWidgetAnimation*
		constexpr auto Background = 0x298; // UImage*
		constexpr auto IntroScreen = 0x2a0; // UCanvasPanel*
		constexpr auto LoreBox = 0x2a8; // UCanvasPanel*
		constexpr auto LoreParagraphText = 0x2b0; // UTigerStyledRichTextBlock*
		constexpr auto LoreSubheaderText = 0x2b8; // UTigerStyledRichTextBlock*
		constexpr auto LoreTitleText = 0x2c0; // UTigerStyledRichTextBlock*
		constexpr auto SimpleBox = 0x2c8; // UCanvasPanel*
		constexpr auto SimpleText = 0x2d0; // UTigerStyledRichTextBlock*
		constexpr auto FadeOutSimpleBox = 0x2d8; // bool
		constexpr auto FadeOutLoreBox = 0x2d9; // bool
		constexpr auto OnIntroComplete = 0x2e0; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xb0; // int32_t
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5b0; // float
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x228; // UReflectionCaptureComponent*
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_UTigerFriendSubsystemSharknetImpl {
		constexpr auto FriendService = 0x38; // UTigerFriendService*
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x470; // FVector
		constexpr auto Gap = 0x47c; // float
		constexpr auto Length = 0x480; // float
		constexpr auto Thickness = 0x484; // float
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UABP_VMP_NOS_M_HAIR_04_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3ec0; // FAnimNode_AnimDynamics
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UABP_Civilian_C {
		constexpr auto UberGraphFrame = 0x430; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_LayeredBoneBlend_4 = 0x438; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x4f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x520; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_15 = 0x548; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_13 = 0x5c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_14 = 0x5f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_12 = 0x678; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_13 = 0x6a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x728; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x758; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x808; // FAnimNode_BlendListByBool
		constexpr auto TigerAnimGraphNode_FilteredLayeredBlending = 0x8a8; // FTigerFilteredLayeredBlend
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x970; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_6 = 0x998; // FAnimNode_Slot
		constexpr auto TigerAnimGraphNode_RandomPlayer = 0x9e0; // FTigerAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0xa78; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0xaa0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Root = 0xbf8; // FAnimNode_Root
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0xc28; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0xcf0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0xed0; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_LocalToComponentSpace_6 = 0x10b0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_6 = 0x10d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Slot_5 = 0x10f0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x1138; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x1160; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x12b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x1358; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SequencePlayer_12 = 0x1380; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Slot_4 = 0x1400; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x1448; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_3 = 0x15a0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x15e8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x1740; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x1768; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x18c0; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x18e8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x1930; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x1958; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x1980; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x19a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x19d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_11 = 0x1ad8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace_5 = 0x1b58; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace_5 = 0x1b78; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_StateResult_10 = 0x1b98; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1bc8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_10 = 0x1c88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x1d08; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x1d88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x1db8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x1e78; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x1ef8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x1f78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x1fa8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x1fd0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x1ff8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2020; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2048; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2070; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2098; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x20c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x20e8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_4 = 0x2168; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_4 = 0x2188; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x21a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x22b0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x23b8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x24c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x25c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_7 = 0x26d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x2700; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_3 = 0x2780; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_3 = 0x27a0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x27c0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0x28c8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0x29d0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_12 = 0x2ad8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0x2be0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_6 = 0x2ce8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2d18; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x2d98; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x2db8; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_10 = 0x2dd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0x2ee0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x2fe8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x30f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x31f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_StateResult_5 = 0x3300; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3330; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3350; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x3370; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x3478; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x3580; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x3688; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x3790; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3898; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x3918; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x3948; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x39c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendListByBool = 0x39f8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x3a98; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_PoseSnapshot = 0x3b18; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_Slot = 0x3ba8; // FAnimNode_Slot
		constexpr auto AnimGraphNode_StateResult_2 = 0x3bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x3c20; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult = 0x3cd0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3d00; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_UseCachedPose = 0x3db0; // FAnimNode_UseCachedPose
		constexpr auto bIsDedicatedServer = 0x3dd8; // bool
		constexpr auto LeftFootstepPosition = 0x3ddc; // FVector
		constexpr auto LeftFootstepTime = 0x3de8; // float
		constexpr auto RightFootstepTime = 0x3dec; // float
		constexpr auto RightFootstepPosition = 0x3df0; // FVector
		constexpr auto CharacterRotation = 0x3dfc; // FRotator
		constexpr auto YawDelta = 0x3e08; // float
		constexpr auto DeltaX = 0x3e0c; // float
		constexpr auto YawDeltaSmooth = 0x3e10; // float
		constexpr auto IsBeingFeedOn = 0x3e14; // bool
		constexpr auto IsRecovering = 0x3e15; // bool
		constexpr auto FullyRecoverd = 0x3e16; // bool
		constexpr auto InContextIdle = 0x3e17; // bool
		constexpr auto CachedContextBasedIdle = 0x3e18; // FName
		constexpr auto IsHoldingProp = 0x3e20; // bool
		constexpr auto FaceAnimSlotName_00 = 0x3e24; // FName
		constexpr auto FaceAnimSlotName_01 = 0x3e2c; // FName
		constexpr auto FaceAnimSlotName_02 = 0x3e34; // FName
		constexpr auto FaceAnimSlotName_03 = 0x3e3c; // FName
		constexpr auto LookAtSpineRotator = 0x3e44; // FRotator
		constexpr auto LookAtHeadRotator = 0x3e50; // FRotator
		constexpr auto LookAtVertical = 0x3e5c; // float
		constexpr auto LookAtHorizontal = 0x3e60; // float
		constexpr auto LookAtHorizontalSlow = 0x3e64; // float
		constexpr auto AimYawDelta = 0x3e68; // float
		constexpr auto Speed_Smooth = 0x3e6c; // float
		constexpr auto React Montage = 0x3e70; // TArray<UAnimMontage*>
	}

	namespace n_UTigerPlayerAnimInstance {
		constexpr auto CurrentDownedMontage = 0x3b8; // UAnimMontage*
		constexpr auto HandIkTraceDataWhenWallHanging = 0x3c0; // FTigerHandIkWallTraceData
		constexpr auto CurrentMontageMetaData = 0x418; // TArray<FTigerAnimMetaData>
		constexpr auto CurrentAnimNodeMetaData = 0x428; // TArray<UAnimMetaData*>
		constexpr auto CurrentMetaDataFromProxy = 0x438; // TArray<UAnimMetaData*>
		constexpr auto CurrentTurnStartCurve = 0x448; // UCurveFloat*
		constexpr auto bIsEmoting = 0x450; // bool
		constexpr auto bIsJumping = 0x451; // bool
		constexpr auto bIsCrouching = 0x452; // bool
		constexpr auto bIsClimbing = 0x453; // bool
		constexpr auto bIsFalling = 0x454; // bool
		constexpr auto bIsSliding = 0x455; // bool
		constexpr auto bIsSprinting = 0x456; // bool
		constexpr auto bIsLedgeGrabbing = 0x457; // bool
		constexpr auto bWasSprintingWhenStartingJump = 0x458; // bool
		constexpr auto SprintMultiplier = 0x45c; // float
		constexpr auto ClimbPitch = 0x460; // float
		constexpr auto bWasLastLandingHard = 0x464; // bool
		constexpr auto bMeleeSwingRecoveryHasDisabledRootMotion = 0x465; // bool
		constexpr auto bIsOnGroundDuringAerialAttack = 0x466; // bool
		constexpr auto Acceleration = 0x468; // float
		constexpr auto FloorHeightSensitivty = 0x46c; // float
		constexpr auto bIsProbablyTouchingFloor = 0x474; // bool
		constexpr auto bHasVanishBuff = 0x475; // bool
		constexpr auto bIsInCombat = 0x476; // bool
		constexpr auto bIsDowned = 0x477; // bool
		constexpr auto bIsInWallJump = 0x478; // bool
		constexpr auto bWallJumpIsAvailable = 0x479; // bool
		constexpr auto ActiveMontageDisciplineType = 0x47a; // ETigerDisciplinesEnum
		constexpr auto bAllowRotationLerpDuringDisciplineMontage = 0x47b; // bool
		constexpr auto CurrentJumpCount = 0x47c; // int32_t
		constexpr auto DownedMontageNames = 0x480; // FName [0x4]
		constexpr auto StaticEntryToDownedMontageName = 0x4a0; // FName
		constexpr auto AirDashDirection = 0x4a8; // ESharkFourWayDirection
		constexpr auto WallJumpDirection = 0x4a9; // ESharkFourWayDirection
		constexpr auto WallJumpAnticipationDirection = 0x4aa; // ESharkFourWayDirection
		constexpr auto WallGrindRotationFromWallInDegrees = 0x4ac; // float
		constexpr auto CameraRelativeWallJumpCosineAngle = 0x4b0; // float
		constexpr auto WallJumpPlayerFacingYaw = 0x4b4; // float
		constexpr auto AirDashAngleInDegrees = 0x4b8; // float
		constexpr auto WallJumpAnimationState = 0x4bc; // ETigerWallJumpAnimationState
		constexpr auto bIsInTurnStart = 0x4bd; // bool
		constexpr auto bTurnStartIsOnCooldown = 0x4be; // bool
		constexpr auto bAdjustClimbSpeedByAnimation = 0x4bf; // bool
		constexpr auto SurfaceCompensationInterpSpeed = 0x4c0; // float
		constexpr auto SurfaceCompensationPitch = 0x4c4; // float
		constexpr auto SurfaceCompensationRoll = 0x4c8; // float
		constexpr auto CurrentLodLevel = 0x4cc; // int32_t
	}

	namespace n_UTigerCharacterOutfitConfiguration {
		constexpr auto SplitMesh = 0x110; // FTigerLodSplitMesh
		constexpr auto AdditionalMesh = 0x188; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto HoodieVariations = 0x1b0; // TArray<FTigerCharacterOutfitHoodieVariation>
		constexpr auto Materials = 0x1c0; // TMap<int32_t, TSoftObjectPtr<UMaterialInterface>>
		constexpr auto HolsteredWeaponsTransforms = 0x210; // FTigerCharacterHolsteredWeaponTransforms
		constexpr auto bHoodieUpOnThumbnail = 0x270; // bool
		constexpr auto Mesh = 0x278; // TSoftObjectPtr<USkeletalMesh>
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerMacroExperienceAsset {
		constexpr auto EventMacroExperience = 0x30; // TMap<ETigerPlayerEvent, int32_t>
	}

	namespace n_UTigerClientSeasonalRewardCollection {
		constexpr auto Tiers = 0x28; // TArray<UTigerClientSeasonalRewardTier*>
		constexpr auto BattlePassPrice = 0x38; // int32_t
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x228; // FString
		constexpr auto GameSessionClass = 0x238; // AGameSession*
		constexpr auto GameStateClass = 0x240; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x248; // APlayerController*
		constexpr auto PlayerStateClass = 0x250; // APlayerState*
		constexpr auto HUDClass = 0x258; // AHUD*
		constexpr auto DefaultPawnClass = 0x260; // APawn*
		constexpr auto SpectatorClass = 0x268; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x270; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x278; // AServerStatReplicator*
		constexpr auto GameSession = 0x280; // AGameSession*
		constexpr auto GameState = 0x288; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x290; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x298; // FText
		constexpr auto bUseSeamlessTravel = 0x2b0; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2b0; // char : 1
		constexpr auto bPauseable = 0x2b0; // char : 1
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UTigerTraversalStateClimbingConfig {
		constexpr auto CameraClimbingSocketName = 0x50; // FName
		constexpr auto ClimbingSpeedAnimationCurveName = 0x58; // FName
		constexpr auto ClimbingBlendSpaceName = 0x60; // FName
		constexpr auto ClimbStartBlendSpaceName = 0x68; // FName
		constexpr auto ClimbingCameraInterpSpeed = 0x70; // float
		constexpr auto ClimbingCameraInterpDelay = 0x74; // float
		constexpr auto ClimbablePrimaryAngleCheckOffset = 0x78; // float
		constexpr auto ClimbableFeetCheckOffset = 0x7c; // float
		constexpr auto ClimbableOffset = 0x80; // float
		constexpr auto ClimbableExtraSearchDepth = 0x84; // float
		constexpr auto StartingClimbDepth = 0x88; // float
		constexpr auto ClimbHorizontalAdjustmentSpeed = 0x8c; // float
		constexpr auto ClimbLowHorizontalAdjustmentSpeed = 0x90; // float
		constexpr auto IndoorClimbRadiusScale = 0x94; // float
		constexpr auto IndoorClimbVerticalOffset = 0x98; // float
		constexpr auto IndoorClimbBackwardOffset = 0x9c; // float
		constexpr auto IndoorClimbIndoorUpsideDownDeadzoneHalfAngle = 0xa0; // float
		constexpr auto DistanceToCheckForClimbingOverhangs = 0xa4; // float
		constexpr auto MaximumOverhangAdjustmentLength = 0xa8; // float
		constexpr auto ClimbingOverHangCheckSweepRadius = 0xac; // float
		constexpr auto MinimumOverHangLeadUpBufferPercentage = 0xb0; // float
		constexpr auto ClimbingInputZCutOff = 0xb4; // float
		constexpr auto MinimumUpwardClimbAngle = 0xb8; // float
		constexpr auto MaximumSidewaysClimbDeviation = 0xbc; // float
		constexpr auto ClimbingOverHangZCutOff = 0xc0; // float
		constexpr auto StartClimbInAirAllowedAngleDifference = 0xc4; // float
		constexpr auto StartClimbOnGroundAllowedAngleDifference = 0xc8; // float
		constexpr auto StartClimbInAirAllowedAngleDifferenceGamepad = 0xcc; // float
		constexpr auto StartClimbOnGroundAllowedAngleDifferenceGamepad = 0xd0; // float
		constexpr auto ClimbCooldown = 0xd4; // float
		constexpr auto IndoorClimbingCooldown = 0xd8; // float
		constexpr auto VerticalClimbSpeed = 0xdc; // float
		constexpr auto HorizontalClimbSpeed = 0xe0; // float
		constexpr auto MaximumAllowedAngleDifferenceBetweenClimbTargets = 0xe4; // float
		constexpr auto bShouldReadClimbSpeedFromAnimationCurve = 0xe8; // bool
		constexpr auto bResetIndoorClimbCooldownWhenOutside = 0xe9; // bool
		constexpr auto bResetIndoorClimbCooldownOnLanding = 0xea; // bool
		constexpr auto bShouldAvoidOverhangsDuringClimb = 0xeb; // bool
		constexpr auto bOnlyStartClimbIfLookingAtWall = 0xec; // bool
		constexpr auto bUseSocketForNonLinearCameraWhenClimbing = 0xed; // bool
		constexpr auto bShouldInterpClimbingCamera = 0xee; // bool
	}

	namespace n_UTigerNearCameraFadeSettings {
		constexpr auto bEnableNearCameraFade = 0x38; // bool
		constexpr auto CollisionProfileChangesWhenTogglingFade = 0x40; // TMap<FName, FName>
		constexpr auto MaterialDatabase = 0x90; // UTigerNearCameraFadeMaterialDb*
		constexpr auto FadeLength = 0x98; // float
		constexpr auto MasterMaterialDatas = 0xa0; // TArray<FTigerNearCameraFadeMaterialMasterData>
		constexpr auto DebugData = 0xb0; // FTigerNearCameraFadeDebugData
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UTigerMapInfoDataAsset {
		constexpr auto MapInfoList = 0x30; // TArray<FTigerMapInfo>
		constexpr auto DefaultMapInfo = 0x40; // FTigerMapInfo
		constexpr auto PointOfInterestWidgetType = 0xf8; // UUserWidget*
	}

	namespace n_UABP_VMP_TOR_F_HAIR_07_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0xb80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0xfc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x1400; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1840; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1ca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x20e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2520; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x2540; // FAnimNode_AnimDynamics
	}

	namespace n_UAkWindowsInitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UTBP_UI_InputPrompt_Keyboard_C {
		constexpr auto UberGraphFrame = 0x2e8; // FPointerToUberGraphFrame
		constexpr auto PostFixTextBlock = 0x2f0; // UTigerStyledRichTextBlock*
		constexpr auto PrefixTextBlock = 0x2f8; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_KeyboardIcon = 0x300; // UTBP_UI_KeyboardIcon_C*
		constexpr auto bHasValidIcon = 0x308; // bool
		constexpr auto FontInfo = 0x310; // FSlateFontInfo
		constexpr auto CustomPadding = 0x368; // FMargin
		constexpr auto Font = 0x378; // FDataTableRowHandle
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UTigerWeaponAbilityDash {
		constexpr auto AbilityConfig = 0x78; // UTigerDashConfig*
		constexpr auto CastDirection = 0x80; // FVector
		constexpr auto CastLocation = 0x8c; // FVector
	}

	namespace n_UTBP_Ping_LootVan_C {
		constexpr auto ContextArgument = 0x124; // int32_t
		constexpr auto PoliceVanAudioEvent = 0x128; // UAkAudioEvent*
		constexpr auto DeliveryVanAudioEvent = 0x130; // UAkAudioEvent*
		constexpr auto AmbulanceAudioEvent = 0x138; // UAkAudioEvent*
		constexpr auto VanName = 0x140; // FText
		constexpr auto VanPingEnum = 0x158; // ENUM_TelemetryPingType
	}

	namespace n_UTigerAudioVisualizationSpawnerComponent {
		constexpr auto ParticleSystemToSpawn = 0xb0; // UParticleSystem*
		constexpr auto MaxSimultaneousVisualizations = 0xb8; // int32_t
		constexpr auto ActiveVisualizations = 0xc0; // TArray<FTigerHeightenedSensesAudioVisualization>
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_ATigerGameMode {
		constexpr auto OnRestartPlayer = 0x2d8; // FMulticastInlineDelegate
		constexpr auto GroupCoordinator = 0x2e8; // UTigerGroupCoordinator*
		constexpr auto MasqueradeCoordinator = 0x2f8; // UTigerMasqueradeCoordinator*
		constexpr auto SpawnMechanicClass = 0x370; // TSoftClassPtr<UObject>
		constexpr auto AICoordinator = 0x398; // UTigerAICoordinator*
		constexpr auto NPCSpawner = 0x3a0; // UTigerNPCSpawningCoordinator*
		constexpr auto SessionTraveledFrom = 0x3a8; // ESessionType
		constexpr auto GameType = 0x3a9; // ETigerGameType
		constexpr auto SpawnMechanic = 0x408; // UTigerSpawnMechanic*
		constexpr auto TigerSessionService = 0x410; // UTigerSessionService*
		constexpr auto ItemClusterClass = 0x468; // ATigerItemCluster*
		constexpr auto ServerLoadScalabilityUpdateFrequency = 0x474; // float
		constexpr auto ServerLoadScalability30HzTarget = 0x478; // float
		constexpr auto ServerLoadScalability20HzTarget = 0x47c; // float
		constexpr auto ServerLoadScalabilityEnabled = 0x480; // bool
		constexpr auto PlayerServerLoginProcess = 0x4a0; // UTigerPlayerServerLoginProcess*
		constexpr auto NetworkProfileOnPlayerConnectionDuration = 0x4c0; // float
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x450; // UBodySetup*
		constexpr auto AreaClass = 0x458; // UNavAreaBase*
		constexpr auto ShapeColor = 0x460; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x464; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x464; // char : 1
		constexpr auto bDynamicObstacle = 0x464; // char : 1
	}

	namespace n_UTigerDialogueCondition_GrimoireEntry {
		constexpr auto RequiredEntry = 0x30; // UTigerGrimoireEntry*
	}

	namespace n_UABP_PoseableMesh_B_C {
		constexpr auto UberGraphFrame = 0x310; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x318; // FAnimNode_Root
		constexpr auto AnimGraphNode_MeshRefPose = 0x348; // FAnimNode_MeshSpaceRefPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x358; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_ModifyBone_21 = 0x378; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_20 = 0x480; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_19 = 0x588; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_18 = 0x690; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_17 = 0x798; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_16 = 0x8a0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_15 = 0x9a8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_14 = 0xab0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_13 = 0xbb8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_12 = 0xcc0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_11 = 0xdc8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_10 = 0xed0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_9 = 0xfd8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_8 = 0x10e0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_7 = 0x11e8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_6 = 0x12f0; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x13f8; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x1500; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0x1608; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1710; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x1818; // FAnimNode_ModifyBone
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x200; // float
		constexpr auto LDMaxDrawDistance = 0x204; // float
		constexpr auto CachedMaxDrawDistance = 0x208; // float
		constexpr auto ScreenCullSizeOverride = 0x20c; // float
		constexpr auto CachedScreenCullSize = 0x210; // float
		constexpr auto DepthPriorityGroup = 0x214; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x215; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x216; // EIndirectLightingCacheQuality
		constexpr auto StreamingPriorityOverride = 0x21c; // EActorStreamingPriorityTiers
		constexpr auto LightmapType = 0x21d; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x21e; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x21e; // char : 1
		constexpr auto bNeverDistanceCull = 0x21e; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x21e; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x21f; // char : 1
		constexpr auto bMultiBodyOverlap = 0x21f; // char : 1
		constexpr auto bTraceComplexOnMove = 0x21f; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x21f; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x21f; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x21f; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x21f; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x21f; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x220; // char : 1
		constexpr auto bVisibleInRayTracing = 0x220; // char : 1
		constexpr auto bRenderInMainPass = 0x220; // char : 1
		constexpr auto bRenderInDepthPass = 0x220; // char : 1
		constexpr auto bReceivesDecals = 0x220; // char : 1
		constexpr auto bOwnerNoSee = 0x220; // char : 1
		constexpr auto bOnlyOwnerSee = 0x220; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x220; // char : 1
		constexpr auto bUseAsOccluder = 0x221; // char : 1
		constexpr auto bOnlyRenderDepth = 0x221; // char : 1
		constexpr auto bSelectable = 0x221; // char : 1
		constexpr auto bForceMipStreaming = 0x221; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x221; // char : 1
		constexpr auto CastShadow = 0x221; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x221; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x221; // char : 1
		constexpr auto bCastDynamicShadow = 0x222; // char : 1
		constexpr auto bCastStaticShadow = 0x222; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x222; // char : 1
		constexpr auto bCastContactShadow = 0x222; // char : 1
		constexpr auto bSelfShadowOnly = 0x222; // char : 1
		constexpr auto bCastFarShadow = 0x222; // char : 1
		constexpr auto bCastInsetShadow = 0x222; // char : 1
		constexpr auto bCastCinematicShadow = 0x222; // char : 1
		constexpr auto bCastHiddenShadow = 0x223; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x223; // char : 1
		constexpr auto bLightAsIfStatic = 0x223; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x223; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x223; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x223; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x223; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x223; // char : 1
		constexpr auto bIgnoreRadialForce = 0x224; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x224; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x224; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x224; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x224; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x224; // char : 1
		constexpr auto bUseEditorCompositing = 0x224; // char : 1
		constexpr auto bRenderCustomDepth = 0x224; // char : 1
		constexpr auto bCullCustomDepth = 0x225; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x226; // EHasCustomNavigableGeometry
		constexpr auto ShadowDetailMode = 0x227; // EShadowDetailMode
		constexpr auto CanCharacterStepUpOn = 0x229; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x22a; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x22b; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x22c; // int32_t
		constexpr auto CustomPrimitiveData = 0x230; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x240; // FCustomPrimitiveData
		constexpr auto SortPriority = 0x258; // int32_t
		constexpr auto VisibilityId = 0x25c; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x260; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x270; // int8_t
		constexpr auto VirtualTextureCullMips = 0x271; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x272; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x273; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x278; // float
		constexpr auto BoundsScale = 0x284; // float
		constexpr auto MoveIgnoreActors = 0x298; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2a8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2c8; // FBodyInstance
		constexpr auto OnComponentHit = 0x420; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x421; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x422; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x423; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x424; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x426; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x427; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x428; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x429; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x42a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x42b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x42c; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x42d; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x448; // UPrimitiveComponent*
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UTigerHeatmapCollector {
		constexpr auto CampingData = 0xe8; // TMap<ATigerCharacter*, FTigerCampingData>
		constexpr auto CharacterMovementTimerHandle = 0x138; // FTimerHandle
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x2a0; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2a8; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2b0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2b8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2c0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2c8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2d0; // bool
		constexpr auto TargetViewRotation = 0x2d4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2ec; // float
		constexpr auto HiddenActors = 0x2f8; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x308; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x31c; // float
		constexpr auto LastSpectatorSyncLocation = 0x320; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x32c; // FRotator
		constexpr auto ClientCap = 0x338; // int32_t
		constexpr auto CheatManager = 0x340; // UCheatManager*
		constexpr auto CheatClass = 0x348; // UCheatManager*
		constexpr auto PlayerInput = 0x350; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x358; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3d8; // char : 1
		constexpr auto NetPlayerIndex = 0x3dc; // char
		constexpr auto PendingSwapConnection = 0x418; // UNetConnection*
		constexpr auto NetConnection = 0x420; // UNetConnection*
		constexpr auto InputYawScale = 0x434; // float
		constexpr auto InputPitchScale = 0x438; // float
		constexpr auto InputRollScale = 0x43c; // float
		constexpr auto bShowMouseCursor = 0x440; // char : 1
		constexpr auto bEnableClickEvents = 0x440; // char : 1
		constexpr auto bEnableTouchEvents = 0x440; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x440; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x440; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x440; // char : 1
		constexpr auto ForceFeedbackScale = 0x444; // float
		constexpr auto ClickEventKeys = 0x448; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x458; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x459; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x45a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x45b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x45c; // float
		constexpr auto SeamlessTravelCount = 0x460; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x462; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4d8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4e0; // char : 1
		constexpr auto CurrentTouchInterface = 0x4f8; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x550; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x55c; // bool
		constexpr auto SpawnLocation = 0x560; // FVector
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieSceneAkTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x88; // char : 1
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UTigerRangedWeaponComponent {
		constexpr auto OnShowCrosshairAmmoState = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnReloadStart = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnReloadFinished = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnReloadAborted = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnBurstCompleted = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnLowAmmo = 0x100; // FMulticastInlineDelegate
		constexpr auto OnRangedWeaponEquipped = 0x110; // FMulticastInlineDelegate
		constexpr auto OnAimChanged = 0x120; // FMulticastInlineDelegate
		constexpr auto BodyPartDamageModifiersAsset = 0x130; // UTigerBodyPartProjectileDamageModifiersAsset*
		constexpr auto TigerPlayer = 0x148; // ATigerPlayer*
		constexpr auto RangedWeaponsDatatable = 0x150; // UDataTable*
		constexpr auto ImpactHelperMesh = 0x158; // UStaticMesh*
		constexpr auto GotHitEvent = 0x160; // UAkAudioEvent*
		constexpr auto FireModeSwitchEvent = 0x168; // UAkAudioEvent*
		constexpr auto EquippedWeaponType = 0x170; // UTigerRangedWeapon*
		constexpr auto LastFireAnimationMontage = 0x178; // UAnimMontage*
		constexpr auto ReloadWeaponTimerHandle = 0x1e0; // FTimerHandle
		constexpr auto bIsFiring = 0x1ea; // bool
		constexpr auto bWantsToFire = 0x1eb; // bool
		constexpr auto bIsAiming = 0x1ec; // bool
		constexpr auto ImpactHelperMeshComp = 0x210; // UStaticMeshComponent*
		constexpr auto CoolDownOutOfAmmoAudioEvent = 0x244; // float
		constexpr auto AICoordinator = 0x270; // UTigerAICoordinator*
		constexpr auto ProjectilePoolMap = 0x278; // TMap<ATigerProjectile*, UTigerProjectilePool*>
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2b0; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2b4; // float
		constexpr auto OrthoWidth = 0x2b8; // float
		constexpr auto TextureTarget = 0x2c0; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c8; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x820; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x824; // char : 1
		constexpr auto CustomNearClippingPlane = 0x828; // float
		constexpr auto bUseCustomProjectionMatrix = 0x82c; // bool
		constexpr auto CustomProjectionMatrix = 0x830; // FMatrix
		constexpr auto bEnableClipPlane = 0x870; // bool
		constexpr auto ClipPlaneBase = 0x874; // FVector
		constexpr auto ClipPlaneNormal = 0x880; // FVector
		constexpr auto bCameraCutThisFrame = 0x88c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x88c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x890; // bool
	}

	namespace n_UTigerQuest {
		constexpr auto OnProgressChangedEvent = 0x28; // FMulticastInlineDelegate
		constexpr auto OnQuestCompletedEvent = 0x38; // FMulticastInlineDelegate
		constexpr auto OnQuestObjectiveCompletedEvent = 0x48; // FMulticastInlineDelegate
		constexpr auto QuestName = 0x58; // FText
		constexpr auto QuestSubheading = 0x70; // FText
		constexpr auto FlavourText = 0x88; // FText
		constexpr auto Objectives = 0xa0; // TArray<UTigerQuestObjective*>
		constexpr auto RewardIds = 0xb0; // TArray<FTigerItemId>
		constexpr auto GrimoireEntryToUnlock = 0xc0; // UTigerGrimoireEntry*
		constexpr auto bStartsNextQuest = 0xc8; // bool
		constexpr auto NextQuestLineId = 0xd0; // FString
		constexpr auto NextQuestId = 0xe0; // FString
		constexpr auto bRemoveAfterLockDate = 0xf0; // bool
		constexpr auto LockDate = 0xf8; // FDateTime
		constexpr auto QuestLookupIdentifier = 0x100; // FTigerQuestIdentifier
	}

	namespace n_UTigerDisciplineTraps {
		constexpr auto Config = 0xf0; // UTigerTrapsConfig*
		constexpr auto AimTrapActor = 0xf8; // AActor*
		constexpr auto CurrentTraps = 0x100; // TArray<ATigerTrap*>
		constexpr auto FreeTrapIndices = 0x110; // TArray<int32_t>
	}

	namespace n_UTigerItemLootTable {
		constexpr auto Items = 0x30; // TArray<FTigerItemLootEntry>
		constexpr auto SubLootTables = 0x40; // TArray<FTigerSubItemLootTable>
		constexpr auto GeneratedSubsets = 0x50; // TMap<FTigerLootTableKey, FTigerGeneratedLootTable>
		constexpr auto EntireLootTable = 0xa0; // FTigerGeneratedLootTable
		constexpr auto bIsLootBuilt = 0xb9; // bool
	}

	namespace n_UTigerUtilityPowerRoar {
		constexpr auto DurationAIAreAffected = 0xe8; // float
		constexpr auto ConeEffectLength = 0xec; // float
		constexpr auto SphereEffectRadius = 0xf0; // float
		constexpr auto ConeWidthAngle = 0xf4; // float
		constexpr auto Cooldown = 0xf8; // float
		constexpr auto RoarStaggerAnimation = 0x100; // UAnimMontage*
		constexpr auto RoarAnimation = 0x108; // UAnimMontage*
		constexpr auto RoarSoundEvent = 0x110; // UAkAudioEvent*
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x470; // FVector
		constexpr auto DirectionY = 0x47c; // FVector
		constexpr auto OffsetX = 0x488; // float
		constexpr auto OffsetY = 0x48c; // float
		constexpr auto LengthX = 0x490; // float
		constexpr auto LengthY = 0x494; // float
		constexpr auto Thickness = 0x498; // float
		constexpr auto SegmentFlags = 0x49c; // char
	}

	namespace n_UAkAudioType {
		constexpr auto ShortID = 0x28; // uint32_t
		constexpr auto UserData = 0x30; // TArray<UObject*>
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x240; // USceneComponent*
		constexpr auto LastSelectedOption = 0x248; // int32_t
	}

	namespace n_UTigerAnimNotify_PlayVoEvent {
		constexpr auto VoCategory = 0x38; // FTigerNpcVoCategory
	}

	namespace n_ATigerFamiliarScout {
		constexpr auto MoveSpeed = 0x22c; // float
		constexpr auto RecallMoveSpeed = 0x230; // float
		constexpr auto TargetLocation = 0x234; // FVector
		constexpr auto ArrivalTimerHandle = 0x240; // FTimerHandle
		constexpr auto bReturnToOwner = 0x248; // bool
		constexpr auto ManuallyScoutAtLocation = 0x24c; // FVector
		constexpr auto rank = 0x258; // int32_t
		constexpr auto bIsMoving = 0x27c; // bool
		constexpr auto Velocity = 0x280; // FVector
		constexpr auto ScoutTimeToReachTarget = 0x28c; // float
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ShootEntity_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UTigerRevivingStatusUI {
		constexpr auto RegeneratingStatusText = 0x280; // FText
		constexpr auto DiablerizingStatusText = 0x298; // FText
		constexpr auto BeingRevivedStatusText = 0x2b0; // FText
		constexpr auto PhysicalInteractionStatus = 0x2c8; // ETigerPhysicalInteraction
		constexpr auto bShouldUpdateTimer = 0x2c9; // bool
		constexpr auto TimeLeft = 0x2cc; // float
		constexpr auto PercentageLeft = 0x2d0; // float
		constexpr auto ShowPrompt = 0x2dc; // bool
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UTigerBuffRepositionInstance {
		constexpr auto Root = 0x88; // UPrimitiveComponent*
	}

	namespace n_UTigerDestroySessionAsync {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerMeleeAimAssistBehavior {
		constexpr auto AimAssistMinRadius = 0x28; // float
		constexpr auto AimAssistMaxRadius = 0x2c; // float
		constexpr auto MaxTargetHeightDiff = 0x30; // float
		constexpr auto DebugDrawTime = 0x34; // float
		constexpr auto bPredictCandidateLocationsBeforeEvaluation = 0x38; // bool
		constexpr auto TigerOwner = 0x40; // ATigerCharacter*
		constexpr auto EquippedWeapon = 0x48; // UTigerMeleeWeapon*
		constexpr auto TigerOwnerLocation = 0x50; // FVector
		constexpr auto FinalTargetCharacter = 0x5c; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto FinalAttackIdentifier = 0x64; // FTigerMeleeWeaponAttackIdentifier
		constexpr auto AimAssistMinRadiusSquared = 0x68; // float
		constexpr auto AimAssistMaxRadiusSquared = 0x6c; // float
		constexpr auto AimAssistTravelTime = 0x70; // float
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UTigerBuffHealthRegenBase {
		constexpr auto HealthToHeal = 0x248; // float
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UTBP_PlayerSaveGame_C {
		constexpr auto S_PlayerInfo = 0x30; // FTS_PlayerInfo
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x348; // float
		constexpr auto SourceHeight = 0x34c; // float
		constexpr auto BarnDoorAngle = 0x350; // float
		constexpr auto BarnDoorLength = 0x354; // float
		constexpr auto SourceTexture = 0x358; // UTexture*
	}

	namespace n_UTBP_UI_InputFormattedRichText_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto Text = 0x288; // URichTextBlock*
		constexpr auto FormatedText = 0x290; // FText
		constexpr auto TextStyle = 0x2a8; // FText
		constexpr auto ActionBindingToEmbed = 0x2c0; // FName
		constexpr auto ActionBindingGamepadOverride = 0x2c8; // FName
		constexpr auto bHasAdditionalKeyboardInputRequirement = 0x2d0; // bool
		constexpr auto AdditionalKeyboardInputRequirements = 0x2d8; // FKey
		constexpr auto bHasAdditionalGamepadInputRequirement = 0x2f0; // bool
		constexpr auto AdditionalGamepadInputRequirements = 0x2f8; // FKey
		constexpr auto bHasMultipleBindings = 0x310; // bool
		constexpr auto bShouldUpdateRuntime = 0x311; // bool
		constexpr auto Justification = 0x312; // ETextJustify
		constexpr auto UseTextStyle = 0x313; // bool
		constexpr auto Override Image = 0x314; // bool
		constexpr auto ImageToOverride = 0x318; // FName
		constexpr auto GamepadImageToOverride = 0x320; // FName
		constexpr auto StretchMode = 0x328; // FText
		constexpr auto ValidIcon = 0x340; // bool
		constexpr auto DefaultImageText = 0x348; // FText
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto Position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UTigerChallengeUseDiscipline {
		constexpr auto DisciplineSlotRequirement = 0xb0; // FTigerChallengeRequirementDisciplineSlot
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x1f8; // float
		constexpr auto Speed = 0x1fc; // float
		constexpr auto MinGustAmount = 0x200; // float
		constexpr auto MaxGustAmount = 0x204; // float
		constexpr auto Radius = 0x208; // float
		constexpr auto bPointWind = 0x20c; // char : 1
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_UTBP_ContextualHelp_Discipline_Clan_UnlockInputReminderPad_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UTBP_UI_SmgCrosshair_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UTigerBuffAnarchHuntingKnife {
		constexpr auto EffectStrengthBasedOnDistance = 0x248; // UCurveFloat*
		constexpr auto EffectStrengthBasedOnKills = 0x250; // UCurveFloat*
		constexpr auto DamageBasedOnEnemiesKilled = 0x258; // UCurveFloat*
		constexpr auto MaxDistanceToCheckForEnemies = 0x260; // float
	}

	namespace n_UTigerPsoCacheUI {
		constexpr auto OnCachingDone = 0x280; // FMulticastInlineDelegate
		constexpr auto SharedMouseCursor = 0x290; // UTigerSharedMouseCursor*
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UTBP_UI_HorizontalArchetypeSelector_C {
		constexpr auto UberGraphFrame = 0x288; // FPointerToUberGraphFrame
		constexpr auto RootHorizontalBox = 0x290; // UHorizontalBox*
		constexpr auto OnArchetypeSelected = 0x298; // FMulticastInlineDelegate
		constexpr auto ArchetypeButtons = 0x2a8; // TMap<ETigerPowerKitType, TScriptInterface<II_ArchetypeSelectButton_C>>
		constexpr auto UsePragueVisuals = 0x2f8; // bool
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_UTBP_UI_AntiqueStore_Marker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_2 = 0x2c0; // UCanvasPanel*
		constexpr auto JudgeMarkerImage = 0x2c8; // UImage*
	}

	namespace n_UTigerScreenTransition {
		constexpr auto ScreenTransitionCurveIn = 0x280; // UCurveFloat*
		constexpr auto ScreenTransitionCurveOut = 0x288; // UCurveFloat*
		constexpr auto OnTransitionInFinished = 0x290; // FMulticastInlineDelegate
		constexpr auto OnTransitionOutFinished = 0x2a0; // FMulticastInlineDelegate
		constexpr auto CurrentTransitionState = 0x2b0; // EScreenTransitionState
	}

	namespace n_UTigerThrowingAxeConfig {
		constexpr auto StartAimingPoseMontage = 0x170; // UAnimMontage*
		constexpr auto ReadyAxeMontage = 0x178; // UAnimMontage*
		constexpr auto bDebugInfiniteAxes = 0x180; // bool
		constexpr auto bDebugDrawPredictedProjectilePath = 0x181; // bool
		constexpr auto CastAnimationName = 0x184; // FName
		constexpr auto ThrowingAxeProjectile = 0x190; // AActor*
		constexpr auto AxeItem = 0x198; // UTigerItemAsset*
		constexpr auto AxeSpawnSocket = 0x1a0; // FName
		constexpr auto ForwardOffset = 0x1a8; // float
		constexpr auto AxeSpawnRotationOffset = 0x1ac; // FRotator
		constexpr auto ProjectileDamage = 0x1b8; // float
		constexpr auto ProjectileStartSpeed = 0x1bc; // float
		constexpr auto ProjectileMaxSpeed = 0x1c0; // float
		constexpr auto ProjectileMassInKg = 0x1c4; // float
		constexpr auto ProjectileRotationPerSecond = 0x1c8; // FRotator
		constexpr auto ProjectileGravityScale = 0x1d4; // float
		constexpr auto MovementMultiplierAimState = 0x1d8; // float
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_UTBP_ContextualHelpBase_C {
		constexpr auto UberGraphFrame = 0xb0; // FPointerToUberGraphFrame
		constexpr auto ShowCountRemaining = 0xb8; // int32_t
		constexpr auto Additional Input = 0xbc; // FName
		constexpr auto Additional Icon = 0xc8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UTigerAnimNotify_AddProps {
		constexpr auto PropDummyClass = 0x38; // ATigerPropDummy*
		constexpr auto PropsToSpawn = 0x40; // TArray<FName>
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x228; // UInterpData*
		constexpr auto MatineeControllerName = 0x230; // FName
		constexpr auto PlayRate = 0x238; // float
		constexpr auto bPlayOnLevelLoad = 0x23c; // char : 1
		constexpr auto bForceStartPos = 0x23c; // char : 1
		constexpr auto ForceStartPosition = 0x240; // float
		constexpr auto bLooping = 0x244; // char : 1
		constexpr auto bRewindOnPlay = 0x244; // char : 1
		constexpr auto bNoResetOnRewind = 0x244; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x244; // char : 1
		constexpr auto bDisableRadioFilter = 0x244; // char : 1
		constexpr auto bClientSideOnly = 0x244; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x244; // char : 1
		constexpr auto bIsSkippable = 0x244; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x248; // int32_t
		constexpr auto bDisableMovementInput = 0x24c; // char : 1
		constexpr auto bDisableLookAtInput = 0x24c; // char : 1
		constexpr auto bHidePlayer = 0x24c; // char : 1
		constexpr auto bHideHud = 0x24c; // char : 1
		constexpr auto GroupActorInfos = 0x250; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x260; // char : 1
		constexpr auto GroupInst = 0x268; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x278; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x288; // char : 1
		constexpr auto bReversePlayback = 0x288; // char : 1
		constexpr auto bPaused = 0x288; // char : 1
		constexpr auto bPendingStop = 0x288; // char : 1
		constexpr auto InterpPosition = 0x28c; // float
		constexpr auto ReplicationForceIsPlaying = 0x294; // char
		constexpr auto OnPlay = 0x298; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2b8; // FMulticastInlineDelegate
	}

	namespace n_UTigerBuffShackles {
		constexpr auto ActiveEffect = 0x248; // UTigerCharacterEffect*
		constexpr auto ShacklesStaggerAnimationName = 0x250; // FName
		constexpr auto DamageToDeal = 0x258; // float
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UTigerSpectateCameraBehavior {
		constexpr auto FollowCameraDelay = 0x128; // float
		constexpr auto CameraFollowSpeedMultiplier = 0x12c; // float
		constexpr auto ConstantAddedCameraFollowSpeed = 0x130; // float
		constexpr auto NewFollowPointOffsetMultiplier = 0x134; // float
		constexpr auto SpectatorPawn = 0x138; // ATigerSpectatorPawn*
	}

	namespace n_UTigerPartyManager {
		constexpr auto OnInviteReceived = 0x28; // FMulticastInlineDelegate
		constexpr auto OnInviteRemoved = 0x38; // FMulticastInlineDelegate
		constexpr auto OnJoinedParty = 0x48; // FMulticastInlineDelegate
		constexpr auto OnLeftParty = 0x58; // FMulticastInlineDelegate
		constexpr auto OnMemberJoinedParty = 0x68; // FMulticastInlineDelegate
		constexpr auto OnMemberLeftParty = 0x78; // FMulticastInlineDelegate
		constexpr auto OnLeaderChanged = 0x88; // FMulticastInlineDelegate
		constexpr auto OnInviteAccepted = 0x98; // FMulticastInlineDelegate
		constexpr auto OnInviteDeclined = 0xa8; // FMulticastInlineDelegate
		constexpr auto OnPartyUpdated = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnInviteFailed = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnAcceptInviteFailed = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnSessionAvailable = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnCreateGameSessionFailed = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnPartyMaxMemberSizeUpdated = 0x108; // FMulticastInlineDelegate
		constexpr auto GameInstance = 0x128; // TWeakObjectPtr<UTigerGameInstance>
		constexpr auto PartyMembers = 0x130; // TArray<UTigerUser*>
		constexpr auto Invites = 0x140; // TArray<UTigerPartyInvite*>
		constexpr auto TravelTimeoutSeconds = 0x150; // float
		constexpr auto MaxInviteAgeSeconds = 0x154; // float
		constexpr auto MaxInvites = 0x158; // int32_t
		constexpr auto PartyService = 0x168; // UTigerPartyService*
		constexpr auto LatestInviteAttemptTimestamps = 0x208; // TMap<FString, double>
		constexpr auto DefaultInviteCooldown = 0x258; // float
		constexpr auto DeclinedInviteCooldown = 0x25c; // float
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_UTBP_Ping_Storefront_C {
		constexpr auto AudioEvents = 0x128; // TMap<ENUM_TelemetryPingType, UAkAudioEvent*>
	}

	namespace n_UTBP_UI_WinScreen_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Victory_VFX = 0x268; // UWidgetAnimation*
		constexpr auto Victory_FadeOut = 0x270; // UWidgetAnimation*
		constexpr auto Victory_FadeIn = 0x278; // UWidgetAnimation*
		constexpr auto AnarchsText = 0x280; // UTigerRichTextBlock*
		constexpr auto Bottom_Curve_Left = 0x288; // UImage*
		constexpr auto Bottom_Curve_Right = 0x290; // UImage*
		constexpr auto CanvasPanel_Win = 0x298; // UCanvasPanel*
		constexpr auto Dot_Left = 0x2a0; // UImage*
		constexpr auto Dot_Left_GLOW = 0x2a8; // UImage*
		constexpr auto Dot_Right = 0x2b0; // UImage*
		constexpr auto Dot_Right_GLOW = 0x2b8; // UImage*
		constexpr auto Flashbang_01 = 0x2c0; // UImage*
		constexpr auto Flashbang_02 = 0x2c8; // UImage*
		constexpr auto Inner_Arch_Left = 0x2d0; // UImage*
		constexpr auto Inner_Arch_Right = 0x2d8; // UImage*
		constexpr auto Left_StandardArrow = 0x2e0; // UImage*
		constexpr auto Lower_Diamond = 0x2e8; // UImage*
		constexpr auto Middle_LowerArrow = 0x2f0; // UImage*
		constexpr auto Middle_StandardArrow = 0x2f8; // UImage*
		constexpr auto Right_StandardArrow = 0x300; // UImage*
		constexpr auto Side_Arrow_Left = 0x308; // UImage*
		constexpr auto Side_Arrow_Right = 0x310; // UImage*
		constexpr auto TBP_UI_HorizontalFadeSlot = 0x318; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto Top_Arch = 0x320; // UImage*
		constexpr auto Top_Arrow = 0x328; // UImage*
		constexpr auto Top_Curve_Left = 0x330; // UImage*
		constexpr auto Top_Curve_Right = 0x338; // UImage*
		constexpr auto Top_StandardArrow = 0x340; // UImage*
		constexpr auto VictoryText = 0x348; // UTigerRichTextBlock*
		constexpr auto Win_Flash_VFX = 0x350; // UImage*
		constexpr auto Win_VFX = 0x358; // UImage*
		constexpr auto Timer = 0x360; // float
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_ATigerAiJudgeController {
		constexpr auto JudgeStateMachineComp = 0x3b0; // UTigerAiJudgeSmComponent*
		constexpr auto StandardSightProperties = 0x3b8; // FTigerSightConfigProperties
		constexpr auto CombatSightProperties = 0x3d4; // FTigerSightConfigProperties
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x530; // FGuid
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_ATigerSingleChildActor {
		constexpr auto ChildActor = 0x228; // AActor*
	}

	namespace n_ATigerSHPBMarker {
		constexpr auto FollowingNPC = 0x248; // ATigerNPC*
		constexpr auto NPCLocation = 0x250; // FVector
		constexpr auto PerceivedBy = 0x260; // TSet<TWeakObjectPtr<AActor>>
	}

	namespace n_ATigerSpectatorPawn {
		constexpr auto SpringArm = 0x2b0; // UTigerSpringArmComponent*
		constexpr auto OnSpectateeChanged = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnEnoughStreamingDoneToSpectate = 0x2c8; // FMulticastInlineDelegate
		constexpr auto CurrentSpectatee = 0x2d8; // ATigerPlayerState*
		constexpr auto CurrentSpectateePlayer = 0x2e0; // TWeakObjectPtr<ATigerPlayer>
		constexpr auto bIsWaitingForStreaming = 0x2e8; // bool
		constexpr auto LastSpectateeSwitchTime = 0x2ec; // float
		constexpr auto MaxLoadingScreenTime = 0x2f0; // float
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_ATBP_ScoutingFamiliar_C {
		constexpr auto UberGraphFrame = 0x2a8; // FPointerToUberGraphFrame
		constexpr auto BatProjectileUpgrade = 0x2b0; // UParticleSystemComponent*
		constexpr auto ScanSphere = 0x2b8; // USphereComponent*
		constexpr auto Scene = 0x2c0; // USceneComponent*
		constexpr auto BatProjectile = 0x2c8; // UParticleSystemComponent*
		constexpr auto RevealedCharacters = 0x2d0; // TArray<ATigerCharacter*>
		constexpr auto AKEvent_StartScanning = 0x2e0; // UAkAudioEvent*
		constexpr auto ScoutEchoLocationSphereEffect = 0x2e8; // UParticleSystemComponent*
		constexpr auto ForwardVector = 0x2f0; // FVector
		constexpr auto AKEvent_StopScanning = 0x300; // UAkAudioEvent*
		constexpr auto ScoutBatEffect = 0x308; // UParticleSystemComponent*
		constexpr auto Projectile Smoke Trail = 0x310; // UParticleSystemComponent*
		constexpr auto ScanEffectAkEventID = 0x318; // int32_t
		constexpr auto NiagaraParticlePath = 0x320; // FSoftObjectPath
		constexpr auto CachedEffect = 0x338; // UNiagaraSystem*
		constexpr auto NiagaraBats = 0x340; // UNiagaraComponent*
		constexpr auto WorldMarkerWidget = 0x348; // UTBP_UI_Discipline_Scout_WorldMarker_C*
		constexpr auto CachedPlayer = 0x350; // ATigerPlayer*
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_ATigerNPC {
		constexpr auto OnAnimationModeChanged = 0x988; // FMulticastInlineDelegate
		constexpr auto AICommandComponent = 0x998; // UTigerAICommandComponent*
		constexpr auto AccuracyComponent = 0x9a0; // UTigerNpcAccuracyComponent*
		constexpr auto EntityCombatComponent = 0x9a8; // UTigerEntityCombatComponent*
		constexpr auto NpcAwarenessComponent = 0x9b0; // UParticleSystemComponent*
		constexpr auto CurrentTarget = 0x9b8; // TWeakObjectPtr<ATigerCharacter>
		constexpr auto CurrentTargetLocation = 0x9c0; // FVector_NetQuantize
		constexpr auto TargetToShoot = 0x9d0; // ATigerCharacter*
		constexpr auto AnimationMode = 0x9d8; // ETigerAIAnimationMode
		constexpr auto EmotionalState = 0x9d9; // ETigerCivilianEmotionalState
		constexpr auto EmotionalStateRandomPot = 0x9dc; // int32_t [0x6]
		constexpr auto LuredCancelAnim = 0x9f8; // UAnimMontage*
		constexpr auto NpcPropComponent = 0xa00; // UTigerNpcPropComponent*
		constexpr auto BumpTimeInterval = 0xa28; // float
		constexpr auto HighPotenceBloodChange = 0xa2c; // float
		constexpr auto EarliestHighPotenceBloodTime = 0xa30; // float
		constexpr auto LastHighPotenceBloodTime = 0xa34; // float
		constexpr auto PreferedMinimumDistanceBetweenPotent = 0xa38; // float
		constexpr auto RagdollImpulse = 0xa3c; // FVector_NetQuantize
		constexpr auto ReactionData = 0xa48; // FTigerNpcReactionData
		constexpr auto MaxYawAngleToShoot = 0xa58; // float
		constexpr auto MinTargetIsInfrontDotAngle = 0xa5c; // float
		constexpr auto DownedStateDuration = 0xa60; // FSharkRandomDeviation
		constexpr auto HeartRateParam = 0xa68; // FName
		constexpr auto BloodAmountParam = 0xa70; // FName
		constexpr auto HeartSocketName = 0xa78; // FName
		constexpr auto HeartLocationParam = 0xa80; // FName
		constexpr auto HeartLocationUpdateTime = 0xa88; // float
		constexpr auto LastDamageSource = 0xa90; // UDamageType*
	}

	namespace n_UTigerPingSetupAsset {
		constexpr auto MapMarkerClass = 0x30; // UUserWidget*
		constexpr auto WidgetClass = 0x38; // UTigerPingWorldInstanceUI*
		constexpr auto WorldPingTypes = 0x40; // TArray<UTigerPingBase*>
		constexpr auto DoublePressPingClass = 0x50; // UTigerPingBase*
		constexpr auto DistanceFallbackPingClass = 0x58; // UTigerPingBase*
		constexpr auto InGamePingTypes = 0x60; // TArray<UTigerPingBase*>
		constexpr auto PingBarkTypes = 0x70; // TArray<UTigerPingBase*>
		constexpr auto PingBarkDowned = 0x80; // UTigerPingBase*
		constexpr auto PingBarkFullHealth = 0x88; // UTigerPingBase*
		constexpr auto PingBarkNeedHealing = 0x90; // UTigerPingBase*
		constexpr auto PingBarkMasquerade = 0x98; // UTigerPingBase*
		constexpr auto PingInventoryWantsMeleeWeapon = 0xa0; // UTigerPingBase*
		constexpr auto PingInventoryWantsRangedWeapon = 0xa8; // UTigerPingBase*
		constexpr auto PingInventoryWantsItem = 0xb0; // UTigerPingBase*
		constexpr auto PingLocation = 0xb8; // UTigerPingBase*
		constexpr auto PingEnemy = 0xc0; // UTigerPingBase*
		constexpr auto ClosestActorOverrides = 0xc8; // UTigerPingBase*
	}

	namespace n_ATigerAreaEffect {
		constexpr auto StartParticleType = 0x228; // UParticleSystem*
		constexpr auto LoopedParticleType = 0x230; // UParticleSystem*
		constexpr auto EndParticleType = 0x238; // UParticleSystem*
		constexpr auto DamageType = 0x240; // UDamageType*
		constexpr auto DamageCauserType = 0x248; // ETigerDamageCauser
		constexpr auto TimeDamageModifierCurve = 0x250; // FRuntimeFloatCurve
		constexpr auto RangeDamageModifierCurve = 0x2d8; // FRuntimeFloatCurve
		constexpr auto TimeHealingModifierCurve = 0x360; // FRuntimeFloatCurve
		constexpr auto RangeHealingModifierCurve = 0x3e8; // FRuntimeFloatCurve
		constexpr auto Range = 0x470; // float
		constexpr auto InitialDamageAmount = 0x474; // float
		constexpr auto DamageAmount = 0x478; // float
		constexpr auto InitialHealAmount = 0x47c; // float
		constexpr auto HealAmount = 0x480; // float
		constexpr auto TickRate = 0x484; // float
		constexpr auto Duration = 0x488; // float
		constexpr auto Delay = 0x48c; // float
		constexpr auto bShouldAffectCivilians = 0x490; // bool
		constexpr auto LoopedParticleComponent = 0x498; // UParticleSystemComponent*
	}

	namespace n_ATigerCharacter {
		constexpr auto MeshManager = 0x4c0; // UTigerCharacterMeshManager*
		constexpr auto RangedWeaponComponent = 0x4c8; // UTigerRangedWeaponComponent*
		constexpr auto MeleeWeaponComponent = 0x4d0; // UTigerMeleeWeaponComponent*
		constexpr auto CombatComponent = 0x4d8; // UTigerCombatComponent*
		constexpr auto FeedingComponent = 0x4e0; // UTigerFeedingComponent*
		constexpr auto BuffComponent = 0x4e8; // UTigerBuffComponent*
		constexpr auto OutlineComponent = 0x4f0; // UTigerOutlineComponent*
		constexpr auto AudioComponent = 0x4f8; // UAkComponent*
		constexpr auto NonOccludedAudioComponent = 0x500; // UAkComponent*
		constexpr auto AdditionalMeshes = 0x508; // USceneComponent*
		constexpr auto HeadMesh = 0x510; // USkeletalMeshComponent*
		constexpr auto HoodieMesh = 0x518; // USkeletalMeshComponent*
		constexpr auto HairMesh = 0x520; // USkeletalMeshComponent*
		constexpr auto HeadgearMesh = 0x528; // USkeletalMeshComponent*
		constexpr auto EyewearMesh = 0x530; // USkeletalMeshComponent*
		constexpr auto BodyAdditionalMesh = 0x538; // USkeletalMeshComponent*
		constexpr auto OnCharacterAction = 0x558; // FMulticastInlineDelegate
		constexpr auto bIsRootMotionDisabled = 0x568; // bool
		constexpr auto BaseMaxHealth = 0x56c; // float
		constexpr auto ThirdPersonWeaponMeshRef = 0x570; // USkeletalMeshComponent*
		constexpr auto SecondaryWeaponMeshRef = 0x578; // USkeletalMeshComponent*
		constexpr auto ProjectileSpawnRef = 0x580; // USceneComponent*
		constexpr auto SecondaryProjectileSpawnRef = 0x588; // USceneComponent*
		constexpr auto ReplicatedCharacterStats = 0x590; // FTigerReplicatedCharacterStats
		constexpr auto bBlueprintReferencesSetup = 0x620; // bool
		constexpr auto bShouldRestrictOffensiveActionsInElysium = 0x621; // bool
		constexpr auto OnCharacterDeath = 0x628; // FMulticastInlineDelegate
		constexpr auto CurrentHealth = 0x668; // float
		constexpr auto OnMaxShieldReplicated = 0x670; // FMulticastInlineDelegate
		constexpr auto MaxShield = 0x680; // uint16_t
		constexpr auto CurrentShield = 0x682; // uint16_t
		constexpr auto LowHealthThreshold = 0x684; // float
		constexpr auto HitAnimationInterval = 0x68c; // float
		constexpr auto HealthBarOffset = 0x69c; // FVector
		constexpr auto BodyType = 0x6a8; // ETigerGender
		constexpr auto bIsKindred = 0x6a9; // bool
		constexpr auto CharacterType = 0x6aa; // ETigerCharacterType
		constexpr auto RangedHitAnimationListName = 0x6ac; // FName
		constexpr auto MeleeHitAnimationListName = 0x6b4; // FName
		constexpr auto HitboxPhysicsAsset = 0x6c0; // UPhysicsAsset*
		constexpr auto RagdollPhysicsAsset = 0x6c8; // UPhysicsAsset*
		constexpr auto RagdollTimer = 0x6e0; // FTimerHandle
		constexpr auto TimedMontageLoop = 0x6e8; // UAnimMontage*
		constexpr auto TimedMontageLoopTimer = 0x6f0; // FTimerHandle
		constexpr auto CharmedByCharacters = 0x708; // TArray<TWeakObjectPtr<ATigerCharacter>>
		constexpr auto bIsDodging = 0x718; // bool
		constexpr auto SmoothYawInterpSpeed = 0x720; // float
		constexpr auto HealthBarComponent = 0x728; // UWidgetComponent*
		constexpr auto WidgetSocket = 0x730; // USkeletalMeshSocket*
	}

	namespace n_ATigerBestialTrailVisualizer {
		constexpr auto LocationHistory = 0x228; // TArray<FTigerPlayerSavedLocation>
		constexpr auto GameState = 0x238; // ATigerGameState*
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x228; // UControlPointMeshComponent*
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x2b8; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c0; // float
		constexpr auto PlayRate = 0x2c4; // float
		constexpr auto bStateBool = 0x2c8; // bool
		constexpr auto Instance = 0x2d0; // UAnimSharingInstance*
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_ATigerThrowingAxe {
		constexpr auto bHasBeenReflected = 0x244; // bool
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UTigerDisciplineMajesty {
		constexpr auto Config = 0x78; // UTigerMajestyConfig*
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x228; // USkyAtmosphereComponent*
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_ATigerBuildingSystemDepricated {
		constexpr auto Front_00 = 0x290; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_01 = 0x298; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_02 = 0x2a0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_03 = 0x2a8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_04 = 0x2b0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_05 = 0x2b8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_06 = 0x2c0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Front_07 = 0x2c8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_00 = 0x2d0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_01 = 0x2d8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_02 = 0x2e0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_03 = 0x2e8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_04 = 0x2f0; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_05 = 0x2f8; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_06 = 0x300; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Left_07 = 0x308; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_00 = 0x310; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_01 = 0x318; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_02 = 0x320; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_03 = 0x328; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_04 = 0x330; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_05 = 0x338; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_06 = 0x340; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Back_07 = 0x348; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_00 = 0x350; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_01 = 0x358; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_02 = 0x360; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_03 = 0x368; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_04 = 0x370; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_05 = 0x378; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_06 = 0x380; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto Right_07 = 0x388; // UHierarchicalInstancedStaticMeshComponent*
		constexpr auto CornerFL_00 = 0x390; // UStaticMeshComponent*
		constexpr auto CornerFL_01 = 0x398; // UStaticMeshComponent*
		constexpr auto CornerFL_02 = 0x3a0; // UStaticMeshComponent*
		constexpr auto CornerFL_03 = 0x3a8; // UStaticMeshComponent*
		constexpr auto CornerFL_04 = 0x3b0; // UStaticMeshComponent*
		constexpr auto CornerFL_05 = 0x3b8; // UStaticMeshComponent*
		constexpr auto CornerFL_06 = 0x3c0; // UStaticMeshComponent*
		constexpr auto CornerFL_07 = 0x3c8; // UStaticMeshComponent*
		constexpr auto CornerLB_00 = 0x3d0; // UStaticMeshComponent*
		constexpr auto CornerLB_01 = 0x3d8; // UStaticMeshComponent*
		constexpr auto CornerLB_02 = 0x3e0; // UStaticMeshComponent*
		constexpr auto CornerLB_03 = 0x3e8; // UStaticMeshComponent*
		constexpr auto CornerLB_04 = 0x3f0; // UStaticMeshComponent*
		constexpr auto CornerLB_05 = 0x3f8; // UStaticMeshComponent*
		constexpr auto CornerLB_06 = 0x400; // UStaticMeshComponent*
		constexpr auto CornerLB_07 = 0x408; // UStaticMeshComponent*
		constexpr auto CornerBR_00 = 0x410; // UStaticMeshComponent*
		constexpr auto CornerBR_01 = 0x418; // UStaticMeshComponent*
		constexpr auto CornerBR_02 = 0x420; // UStaticMeshComponent*
		constexpr auto CornerBR_03 = 0x428; // UStaticMeshComponent*
		constexpr auto CornerBR_04 = 0x430; // UStaticMeshComponent*
		constexpr auto CornerBR_05 = 0x438; // UStaticMeshComponent*
		constexpr auto CornerBR_06 = 0x440; // UStaticMeshComponent*
		constexpr auto CornerBR_07 = 0x448; // UStaticMeshComponent*
		constexpr auto CornerRF_00 = 0x450; // UStaticMeshComponent*
		constexpr auto CornerRF_01 = 0x458; // UStaticMeshComponent*
		constexpr auto CornerRF_02 = 0x460; // UStaticMeshComponent*
		constexpr auto CornerRF_03 = 0x468; // UStaticMeshComponent*
		constexpr auto CornerRF_04 = 0x470; // UStaticMeshComponent*
		constexpr auto CornerRF_05 = 0x478; // UStaticMeshComponent*
		constexpr auto CornerRF_06 = 0x480; // UStaticMeshComponent*
		constexpr auto CornerRF_07 = 0x488; // UStaticMeshComponent*
	}

	namespace n_UTigerQuestCollection {
		constexpr auto questLines = 0x30; // TMap<FString, UTigerQuestline*>
	}

	namespace n_UTigerWeatherScenarioData {
		constexpr auto DebugName = 0x30; // FName
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xb8; // bool
		constexpr auto bNotifyCollisions = 0xb9; // bool
		constexpr auto ObjectType = 0xba; // EObjectStateTypeEnum
		constexpr auto Mass = 0xbc; // float
		constexpr auto CollisionType = 0xc0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xc4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xc8; // int32_t
		constexpr auto InitialVelocityType = 0xcc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd0; // FVector
		constexpr auto InitialAngularVelocity = 0xdc; // FVector
		constexpr auto DamageThreshold = 0xe8; // float
		constexpr auto PhysicalMaterial = 0xf0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xf8; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x100; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x120; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTigerAiCheckCanDiablerize {
		constexpr auto bConditionInvertedOnTick = 0x68; // bool
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb00; // FRotator
		constexpr auto RotationalDeceleration = 0xb0c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb18; // FRotator
		constexpr auto MinPitch = 0xb24; // float
		constexpr auto MaxPitch = 0xb28; // float
		constexpr auto WalkingFriction = 0xb2c; // float
		constexpr auto WalkingSpeed = 0xb30; // float
		constexpr auto WalkingAcceleration = 0xb34; // float
	}

	namespace n_UTigerUIColorSet {
		constexpr auto ColorArray = 0x30; // FLinearColor [0x24]
	}

	namespace n_UTBP_UI_InWorldIconBase_C {
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto OffscreenAnimation = 0x2d0; // UWidgetAnimation*
		constexpr auto ContentCanvas = 0x2d8; // UCanvasPanel*
		constexpr auto OffScreenDirectionIndicator = 0x2e0; // UImage*
		constexpr auto OffscreenDirectionParent = 0x2e8; // UCanvasPanel*
		constexpr auto OffScreenMeterText = 0x2f0; // UTextBlock*
		constexpr auto OnScreen = 0x2f8; // UCanvasPanel*
		constexpr auto CONFIG_OffscreenIconOffset = 0x300; // float
		constexpr auto CONFIG_DistanceScaling = 0x304; // FTS_InWorldIconDistanceScaling
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x450; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x460; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x470; // TArray<UMeshComponent*>
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UTigerBrujahBaneRecklessness {
		constexpr auto DamageTakenMultiplier = 0x118; // float
		constexpr auto AutoDeactivateTimer = 0x11c; // float
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x1f8; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x1fc; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x214; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x22c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x248; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x298; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UTigerSpringArmComponent {
		constexpr auto HideCharacterBelowLength = 0x2c0; // float
		constexpr auto SpringArmShortenSpeed = 0x2c4; // float
		constexpr auto SpringArmLengthenSpeed = 0x2c8; // float
		constexpr auto StepUpOffsetLerpSpeed = 0x2cc; // float
		constexpr auto CurrentNearObjectFadeToggledObjects = 0x340; // TArray<TWeakObjectPtr<UStaticMeshComponent>>
	}

	namespace n_UAkMediaAssetData {
		constexpr auto IsStreamed = 0x28; // bool
		constexpr auto UseDeviceMemory = 0x29; // bool
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_UTigerSupplyDropConsumableAsset {
		constexpr auto SupplyDropFlare = 0x170; // AActor*
		constexpr auto SupplyDropHelicopterActor = 0x178; // AActor*
		constexpr auto DistanceFromPlayer = 0x180; // float
		constexpr auto Height = 0x184; // float
	}

	namespace n_UTigerPaperDollAnimInstance {
		constexpr auto DefaultSequenceName = 0x3b8; // FName
	}

	namespace n_UTigerCharacterMeshManager {
		constexpr auto StaticMeshes = 0xb0; // TArray<FTigerStaticMeshData>
		constexpr auto PoseableMeshes = 0xc0; // TArray<FTigerPoseableMeshData>
		constexpr auto Mesh = 0xd0; // FTigerCharacterMeshData [0xb]
		constexpr auto StaticPiercingPhysics = 0x1d8; // UStaticPiercingPhysics*
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x228; // FBandwidthTestGenerator
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x278; // FName
		constexpr auto PreviousMatchState = 0x280; // FName
		constexpr auto ElapsedTime = 0x288; // int32_t
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x2d0; // UCameraAnim*
	}

	namespace n_UTigerDisciplineGuardBreak {
		constexpr auto Config = 0x78; // UTigerGuardBreakConfig*
	}

	namespace n_UTigerPassiveKindredCharmLogic {
		constexpr auto Config = 0xc0; // UTigerPassiveKindredCharmConfig*
		constexpr auto Player = 0xc8; // ATigerPlayer*
		constexpr auto EffectActorR = 0xd0; // ATigerKindredCharmEffectActor*
		constexpr auto EffectActorL = 0xd8; // ATigerKindredCharmEffectActor*
	}

	namespace n_UTigerProjectionDashConfig {
		constexpr auto DownedMontage = 0x170; // UAnimMontage*
		constexpr auto DashStartMontage = 0x178; // UAnimMontage*
		constexpr auto DashEnterMontage = 0x180; // UAnimMontage*
		constexpr auto DashExitMontage = 0x188; // UAnimMontage*
		constexpr auto DashIcon = 0x190; // UTexture2D*
		constexpr auto DashBuff = 0x198; // UTigerBuff*
		constexpr auto ThornsBuff = 0x1a0; // UTigerBuff*
		constexpr auto ProjectionActor = 0x1a8; // ATigerProjectionDashProjectile*
		constexpr auto TargetIndicatorActor = 0x1b0; // AActor*
		constexpr auto TargetingRayStartOffset = 0x1b8; // FVector
		constexpr auto DelayBeforeDashIsPossible = 0x1c4; // float
		constexpr auto DashSpeed = 0x1c8; // float
		constexpr auto DashExitVelocityScale = 0x1cc; // float
		constexpr auto DashEnterDuration = 0x1d0; // float
		constexpr auto DashExitDuration = 0x1d4; // float
		constexpr auto ProjectionMaxDistance = 0x1d8; // float
		constexpr auto ProjectionAutoDespawnDistance = 0x1dc; // float
		constexpr auto ProjectionSpeed = 0x1e0; // float
		constexpr auto ProjectionStoppedLifetime = 0x1e4; // float
		constexpr auto TargetIndicatorLerpSpeed = 0x1e8; // float
		constexpr auto bDashMoveToExit = 0x1ec; // bool
		constexpr auto CooldownStart = 0x1ed; // ETigerProjectionDashCooldownStart
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x228; // UVolumetricCloudComponent*
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x228; // UCableComponent*
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xb0; // int32_t
	}

	namespace n_UTigerCharacterFacePaintCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UTBP_WallJumpEffect_C {
		constexpr auto UberGraphFrame = 0x28; // FPointerToUberGraphFrame
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Distance = 0xc0; // float
		constexpr auto Position = 0xc4; // FVector
		constexpr auto Normal = 0xd0; // FVector
		constexpr auto Falloff = 0xdc; // EFieldFalloffType
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_ATigerAISpawner {
		constexpr auto NPCAsset = 0x260; // UTigerNPCAsset*
	}

	namespace n_UTigerSocialUI {
		constexpr auto CurrentSubscreen = 0x3b0; // UTigerSocialSubscreenUI*
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UTBP_UI_PharmacyStore_Marker1_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_2 = 0x2c0; // UCanvasPanel*
		constexpr auto JudgeMarkerImage = 0x2c8; // UImage*
	}

	namespace n_UABP_VMP_NOS_M_HAIR_06_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x780; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xbc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1000; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1440; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1880; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x330; // ELightUnits
		constexpr auto Radius = 0x334; // float
		constexpr auto AttenuationRadius = 0x338; // float
		constexpr auto LightmassSettings = 0x33c; // FLightmassPointLightSettings
	}

	namespace n_UTigerCharacterBeardCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // float
	}

	namespace n_UTBP_ContextualHelp_Discipline_Archetype_UnlockInputReminder_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UTBP_UI_MaskedCardBorder_C {
		constexpr auto UberGraphFrame = 0x150; // FPointerToUberGraphFrame
		constexpr auto InitialCornerRadius = 0x158; // float
		constexpr auto InitialBorderWidth = 0x15c; // float
		constexpr auto InitialBorderColor = 0x160; // FLinearColor
		constexpr auto InitialWeatheringTexture = 0x170; // UTexture2D*
		constexpr auto InitialWeatheringOpacity = 0x178; // float
		constexpr auto InitialWeatheringWidth = 0x17c; // float
		constexpr auto InitialWeatheringFadeWidth = 0x180; // float
		constexpr auto InitialWeatheringScale = 0x184; // float
		constexpr auto InitialWeatheringOffset = 0x188; // FVector2D
		constexpr auto bRandomizeInitialWeatheringOffset = 0x190; // bool
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UMagicLeapARPinContentBindings {
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTBP_UI_Text_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto TextWidget = 0x288; // UTextBlock*
		constexpr auto Text = 0x290; // FText
		constexpr auto Size = 0x2a8; // int32_t
	}

	namespace n_UABP_VMP_VEN_F_HAIR_13_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3200; // FAnimNode_AnimDynamics
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x2e8; // FString
		constexpr auto PendingReservation = 0x2f8; // FSpectatorReservation
		constexpr auto RequestType = 0x370; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x371; // bool
		constexpr auto bCancelReservation = 0x372; // bool
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UTigerAiSetCrouchedTask {
		constexpr auto bShouldCrouch = 0x70; // bool
	}

	namespace n_UTBP_UI_Crosshair_AutoShort_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UTigerArchetypeSelectPragueUI {
		constexpr auto GroupSize = 0x290; // int32_t
		constexpr auto PreGameStateEndTime = 0x294; // int32_t
		constexpr auto PreHighlightTag = 0x298; // FString
		constexpr auto TimeLeftUntilStateChange = 0x2a8; // float
		constexpr auto UiState = 0x2ac; // ETigerArchetypeSelectUiState
		constexpr auto PlayerCharacters = 0x2b0; // TArray<FTigerPersistentPlayerCharacter>
		constexpr auto SelectedArchetypeType = 0x2c0; // ETigerPowerKitType
		constexpr auto PreMatchPaperDollComp = 0x2c8; // UTigerPreMatchPaperDollComponent*
	}

	namespace n_ATigerPlayerState {
		constexpr auto bGhostModeOnInit = 0x328; // bool
		constexpr auto bIsGroupLeader = 0x329; // bool
		constexpr auto GroupStateComponent = 0x330; // UTigerGroupStateComponent*
		constexpr auto PlayerMasqueradeComponent = 0x338; // UTigerPlayerMasqueradeComponent*
		constexpr auto bIsGroupFull = 0x340; // bool
		constexpr auto PersistentPlayerState = 0x348; // UTigerPersistentPlayerState*
		constexpr auto OnGroupChangedDelegate = 0x350; // FMulticastInlineDelegate
		constexpr auto OnGroupFullnessChangedDelegate = 0x360; // FMulticastInlineDelegate
		constexpr auto OnNameChangedDelegate = 0x370; // FMulticastInlineDelegate
		constexpr auto OnApperanceChanged = 0x380; // FMulticastInlineDelegate
		constexpr auto OnPlayerCardLoaded = 0x390; // FMulticastInlineDelegate
		constexpr auto ArchetypeType = 0x3a0; // ETigerPowerKitType
		constexpr auto GROUPINGMODE = 0x3a1; // ETigerGroupingMode
		constexpr auto OnPawnChanged = 0x3a8; // FMulticastInlineDelegate
		constexpr auto OnArchetypeChanged = 0x3b8; // FMulticastInlineDelegate
		constexpr auto OnSeasonLevelChanged = 0x3c8; // FMulticastInlineDelegate
		constexpr auto CollectibleProgressCache = 0x3d8; // UTigerCollectibleProgressCache*
		constexpr auto GroupID = 0x3e0; // FTigerGroupId
		constexpr auto CurrentSpectatorCount = 0x3f0; // int32_t
		constexpr auto CurrentSeasonLevel = 0x3f4; // int32_t
		constexpr auto CharacterAppearance = 0x3f8; // FTigerCharacterAppearance
		constexpr auto bHasLoadedAppearance = 0x478; // bool
		constexpr auto PlayerCardData = 0x47c; // FTigerPersistentPlayerCardData
		constexpr auto bHasLoadedPlayerCard = 0x4a8; // bool
		constexpr auto OwningPawn = 0x52c; // TWeakObjectPtr<APawn>
		constexpr auto AppearanceCache = 0x538; // ATigerPlayerAppearanceCache*
		constexpr auto Killer = 0x540; // AActor*
		constexpr auto bIsVoipInputDeviceEnabled = 0x555; // bool
	}

	namespace n_UTigerUISettings {
		constexpr auto DefaultTextStyle = 0x38; // FDataTableRowHandle
		constexpr auto DefaultTextStyleSet = 0x48; // TSoftObjectPtr<UDataTable>
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UTigerAiIsMovingOutOfBounds {
		constexpr auto TargetPositionKey = 0x68; // FBlackboardKeySelector
		constexpr auto OutOfBoundsDistance = 0x90; // float
	}

	namespace n_UTigerAiShouldUseDisciplineBase {
		constexpr auto LowHealthPercentage = 0x68; // float
		constexpr auto LocalAIController = 0x70; // ATigerLocalAIController*
		constexpr auto LocalAiPlayerController = 0x78; // ATigerPlayerController*
		constexpr auto AiTigerPlayer = 0x80; // ATigerPlayer*
		constexpr auto DisciplineComponent = 0x88; // UTigerDisciplineComponent*
		constexpr auto AiTigerCharacter = 0x90; // ATigerCharacter*
	}

	namespace n_UTigerDisciplineCharm {
		constexpr auto Config = 0x108; // UTigerCharmConfig*
	}

	namespace n_UTigerBuffFOTTChargeupInstance {
		constexpr auto FOTTChargeupBuff = 0x88; // UTigerBuffFOTTChargeup*
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x1f8; // AActor*
		constexpr auto ComponentName1 = 0x200; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x208; // AActor*
		constexpr auto ComponentName2 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x228; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x230; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x240; // FConstraintInstance
	}

	namespace n_UTigerJudgeAnimInstance {
		constexpr auto CurrentJudgeState = 0x3b8; // UTigerJudgeBaseState*
		constexpr auto OldJudgeState = 0x3c0; // UTigerJudgeBaseState*
	}

	namespace n_UTigerSharedVendorUI {
		constexpr auto OnShortcutHeaderClicked = 0x280; // FMulticastInlineDelegate
		constexpr auto OnMainHeaderClicked = 0x290; // FMulticastInlineDelegate
		constexpr auto VendorPaperDoll = 0x2a0; // TWeakObjectPtr<ATigerPaperDoll>
		constexpr auto PaperDollClass = 0x2a8; // ATigerPaperDoll*
		constexpr auto VendorName = 0x2b8; // FText
		constexpr auto VendorPurpose = 0x2d0; // FText
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UTigerPingCoordinator {
		constexpr auto ActivePings = 0x28; // TArray<FTigerPingCoordinatorEntry>
		constexpr auto GroupMemberPingControllers = 0x38; // TArray<UTigerPingControllerComponent*>
	}

	namespace n_UAkGroupValue {
		constexpr auto MediaDependencies = 0x40; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto GroupShortID = 0x50; // uint32_t
	}

	namespace n_UTigerChallengeQuestItemPickup {
		constexpr auto QuestItem = 0xb0; // TSoftObjectPtr<ATigerInteractiveQuestItem>
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xb0; // float
		constexpr auto MinRange = 0xb4; // float
		constexpr auto MaxRange = 0xb8; // float
		constexpr auto Default = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
		constexpr auto Falloff = 0xf0; // EFieldFalloffType
	}

	namespace n_UTigerAIPlayerFindNewPointTask {
		constexpr auto NavigablePointRadius = 0x98; // float
		constexpr auto MaxCenterDistance = 0x9c; // float
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UTigerBuffClanReducesCooldownInstance {
		constexpr auto ClanReduceCooldownBuff = 0x88; // UTigerBuffClanReducesCooldown*
		constexpr auto Player = 0x90; // ATigerPlayer*
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UTBP_UI_Black_C {
		constexpr auto UberGraphFrame = 0x298; // FPointerToUberGraphFrame
		constexpr auto FadeInThrobber = 0x2a0; // UWidgetAnimation*
		constexpr auto FadeOutAnim = 0x2a8; // UWidgetAnimation*
		constexpr auto TBP_UI_Loading_Throbber = 0x2b0; // UTBP_UI_Loading_Throbber_C*
		constexpr auto ThrobberVisibilityReferenceTime = 0x2b8; // int32_t
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x5a0; // LazyObjectProperty
	}

	namespace n_UTigerGameModeLoadingScreens {
		constexpr auto LoadingScreenAssets = 0x30; // TMap<TSoftClassPtr<UObject>, UTigerLoadingScreenAsset*>
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x250; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2b8; // bool
		constexpr auto SessionTimeoutSecs = 0x2bc; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2c0; // float
	}

	namespace n_UTBP_UI_Discipline_ProjectionDash_WorldMarker_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto OffScreenState = 0x328; // UWidgetAnimation*
		constexpr auto DownArrow_FadeOut = 0x330; // UWidgetAnimation*
		constexpr auto FadeOutAnimation = 0x338; // UWidgetAnimation*
		constexpr auto FadeInAnimation = 0x340; // UWidgetAnimation*
		constexpr auto DownArrow_Movement = 0x348; // UWidgetAnimation*
		constexpr auto DistanceText = 0x350; // UTextBlock*
		constexpr auto DownArrowImage = 0x358; // UImage*
		constexpr auto IconWidget = 0x360; // UImage*
		constexpr auto RootCanvas = 0x368; // UCanvasPanel*
		constexpr auto ProjectionDashDiscipline = 0x370; // UTigerDisciplineProjectionDash*
		constexpr auto OnScreenRootTransform = 0x378; // FWidgetTransform
	}

	namespace n_UTigerAIPetFindEndOfMastersPath {
		constexpr auto MasterPlayer = 0x70; // FBlackboardKeySelector
	}

	namespace n_UTigerInWorldIconController {
		constexpr auto RootCanvas = 0xb0; // UCanvasPanel*
		constexpr auto Widgets = 0xb8; // TArray<UTigerInWorldWidget*>
		constexpr auto ExplicitFocusWidget = 0xc8; // UTigerInWorldWidget*
		constexpr auto MaxFocusDistanceFromCrosshair = 0xd8; // float
		constexpr auto ScreenMargins = 0xdc; // FBox2D
	}

	namespace n_ATBP_VFX_BloodDecal_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto StaticMesh = 0x230; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
		constexpr auto FadeInTimeline_AlphaScaleTrack_588AF71A4B6DB400A9724382318A5E98 = 0x240; // float
		constexpr auto FadeInTimeline__Direction_588AF71A4B6DB400A9724382318A5E98 = 0x244; // ETimelineDirection
		constexpr auto FadeInTimeline = 0x248; // UTimelineComponent*
		constexpr auto FadeOutTimeline_AlphaScaleTrack_FADD48494D9CA4FF7946218963114C70 = 0x250; // float
		constexpr auto FadeOutTimeline__Direction_FADD48494D9CA4FF7946218963114C70 = 0x254; // ETimelineDirection
		constexpr auto FadeOutTimeline = 0x258; // UTimelineComponent*
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x468; // float
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UReplicationGraphNode_GridCell {
		constexpr auto DynamicNode = 0x140; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x148; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DISPLAYNAME = 0x170; // FText
	}

	namespace n_UTigerAiCanCrouch {
		constexpr auto MinCrouchDistanceBuffer = 0x68; // float
	}

	namespace n_ATigerAICAPBase {
		constexpr auto NPCUsingCAP = 0x228; // TArray<ATigerNPC*>
		constexpr auto Colliders = 0x238; // TArray<UShapeComponent*>
		constexpr auto Cooldown = 0x248; // float
		constexpr auto NumberOfSlots = 0x24c; // int32_t
		constexpr auto bShouldAdjustTransform = 0x250; // bool
		constexpr auto bAllowExternalProps = 0x251; // bool
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UTigerAnimNotifyState_AbortAnimationOnInput {
		constexpr auto BlendOutTime = 0x30; // float
		constexpr auto bShouldAbortOnMovement = 0x34; // bool
		constexpr auto bShouldAbortOnHeldBlock = 0x35; // bool
	}

	namespace n_UTigerBattlepassItem {
		constexpr auto SeasonId = 0x110; // int32_t
	}

	namespace n_UAkWwiseTreeSelector {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UTigerTraversalStateDownedConfig {
		constexpr auto DownedMaxSpeed = 0x50; // float
	}

	namespace n_UTigerChatComponent {
		constexpr auto ClientMessageTokenBucket = 0xb0; // FSharkTokenBucket
		constexpr auto ServerMessageTokenBucket = 0xbc; // FSharkTokenBucket
		constexpr auto bIsChatBanned = 0xc8; // bool
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UTigerFetchPremiumCurrencyManager {
		constexpr auto MidasAdapter = 0x28; // UShMidasAdapter*
		constexpr auto StoreService = 0x30; // UTigerStoreService*
		constexpr auto GameInstance = 0x38; // TWeakObjectPtr<UTigerGameInstance>
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_ATigerAiPermanentCap {
		constexpr auto Commands = 0x290; // TArray<UTigerAICommandBase*>
		constexpr auto EmotionalState = 0x2a0; // ETigerCivilianEmotionalState
		constexpr auto CapContextBase = 0x2a4; // FName
		constexpr auto CapContextStartingIndex = 0x2ac; // int32_t
		constexpr auto NpcAssetToSpawn = 0x2b0; // UTigerNPCAsset*
		constexpr auto LoopingStartIndex = 0x2b8; // int32_t
		constexpr auto PermanentNpc = 0x2bc; // TWeakObjectPtr<ATigerNPC>
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x238; // UAREnvironmentCaptureProbe*
	}

	namespace n_ATigerTutorialTrainer {
		constexpr auto OnReviveEnded = 0x790; // FMulticastInlineDelegate
		constexpr auto OnTutorialTrainerDowned = 0x7a0; // FMulticastInlineDelegate
		constexpr auto OnTutorialTrainerDiablerized = 0x7b0; // FMulticastInlineDelegate
		constexpr auto DiablerizeData = 0x7c0; // FTutorialTrainerDiablerizeData
		constexpr auto ReviveData = 0x7e0; // FTutorialTrainerReviveData
		constexpr auto HealthOnEnteringDownedState = 0x7f8; // float
		constexpr auto DiablerizeOffsetDistance = 0x7fc; // float
		constexpr auto MaxDownedTime = 0x800; // float
		constexpr auto RemainingDownedTime = 0x804; // float
		constexpr auto bShouldBeFriendlyWithPlayer = 0x808; // bool
		constexpr auto bCanBeDiablerized = 0x809; // bool
		constexpr auto bWantsToShoot = 0x80a; // bool
		constexpr auto bIsDowned = 0x80b; // bool
		constexpr auto bIsInvulnerableWhenDowned = 0x80c; // bool
		constexpr auto CurrentlyAimedAtCharacter = 0x810; // ATigerCharacter*
		constexpr auto VisualAsset = 0x818; // UTigerNPCVisualAsset*
		constexpr auto HeadMeshsPoseAssetsClass = 0x820; // UTigerNPCFacePoseMap*
		constexpr auto DiablerizeAnimationSetAsset = 0x828; // UTigerPhysicalInteractionAnimationAsset*
		constexpr auto TimeInEnterState = 0x830; // float
		constexpr auto TimeInDrainState = 0x834; // float
		constexpr auto TimeInLeaveState = 0x838; // float
		constexpr auto DownedMontageNames = 0x83c; // FName [0x4]
		constexpr auto StaticEntryToDownedMontageName = 0x85c; // FName
		constexpr auto InterruptSectionName = 0x864; // FName
		constexpr auto EndSectionName = 0x86c; // FName
		constexpr auto DodgeOnGroundBlendSpaceName = 0x874; // FName
		constexpr auto DodgeInAirBlendSpaceName = 0x87c; // FName
		constexpr auto DiablerizeAnimationName = 0x884; // FName
		constexpr auto GetDiablerizedAnimationName = 0x88c; // FName
		constexpr auto ExitDownedStateAnimationName = 0x894; // FName
		constexpr auto CurrentTrainerDiablerizeMontage = 0x8a8; // UAnimMontage*
		constexpr auto CurrentPlayerDiablerizeMontage = 0x8b0; // UAnimMontage*
	}

	namespace n_ATBP_ProjectionDashProjectile_C {
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto IconRoot = 0x288; // USceneComponent*
		constexpr auto Trail = 0x290; // UParticleSystemComponent*
		constexpr auto Size = 0x298; // float
		constexpr auto Archetype = 0x29c; // bool
		constexpr auto ProjectionDashSirenAkEventID = 0x2a0; // int32_t
		constexpr auto ProjectionDashLoopAkEventID = 0x2a4; // int32_t
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x450; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x470; // char : 1
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2b0; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b8; // float
		constexpr auto PrefilterRoughness = 0x2bc; // float
		constexpr auto PrefilterRoughnessDistance = 0x2c0; // float
		constexpr auto ScreenPercentage = 0x2c4; // int32_t
		constexpr auto ExtraFOV = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2d0; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2d4; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d8; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2dc; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2e0; // float
		constexpr auto bShowPreviewPlane = 0x2e4; // bool
		constexpr auto bRenderSceneTwoSided = 0x2e5; // bool
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x1f8; // float
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x1f8; // AActor*
		constexpr auto ChildActor = 0x200; // AActor*
		constexpr auto ChildActorTemplate = 0x208; // AActor*
	}

	namespace n_UTigerTraversalSlideState {
		constexpr auto Slidingconfig = 0x78; // UTigerTraversalStateSlidingConfig*
	}

	namespace n_UTigerAiRequestOutOfBoundsPursuitSquad {
		constexpr auto TargetPlayer = 0x70; // FBlackboardKeySelector
		constexpr auto NearbySquadDistance = 0x98; // float
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UTBP_UI_Crosshair_Empty_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_ATBP_Vfx_GroundSlam_Marker_C {
		constexpr auto UberGraphFrame = 0x228; // FPointerToUberGraphFrame
		constexpr auto Marker = 0x230; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x238; // USceneComponent*
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UAkSurfaceReflectorSetComponent {
		constexpr auto bEnableSurfaceReflectors = 0x210; // char : 1
		constexpr auto AcousticPolys = 0x218; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x228; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x228; // char : 1
		constexpr auto AssociatedRoom = 0x230; // AActor*
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xe8; // float
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x470; // FVector
		constexpr auto Radius = 0x47c; // float
		constexpr auto Thickness = 0x480; // float
		constexpr auto NumSides = 0x484; // int32_t
		constexpr auto bViewAligned = 0x488; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x489; // bool
	}

	namespace n_ATigerSidewalkSpline {
		constexpr auto OrderedComponentsToMerge = 0x240; // TArray<UPrimitiveComponent*>
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xb8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc0; // USceneComponent*
		constexpr auto AttachSocketName = 0xc8; // FName
		constexpr auto AttachChildren = 0xd0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x11c; // FVector
		constexpr auto RelativeRotation = 0x128; // FRotator
		constexpr auto RelativeScale3D = 0x134; // FVector
		constexpr auto ComponentVelocity = 0x140; // FVector
		constexpr auto bComponentToWorldUpdated = 0x14c; // char : 1
		constexpr auto bAbsoluteLocation = 0x14c; // char : 1
		constexpr auto bAbsoluteRotation = 0x14c; // char : 1
		constexpr auto bAbsoluteScale = 0x14c; // char : 1
		constexpr auto bVisible = 0x14c; // char : 1
		constexpr auto bShouldBeAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x14c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x14d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x14d; // char : 1
		constexpr auto bHiddenInGame = 0x14d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x14d; // char : 1
		constexpr auto bUseAttachParentBound = 0x14d; // char : 1
		constexpr auto Mobility = 0x14f; // EComponentMobility
		constexpr auto DetailMode = 0x150; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x151; // FMulticastSparseDelegate
	}

	namespace n_UTigerAiEntityMovementModeService {
		constexpr auto TargetLocationKey = 0x70; // FBlackboardKeySelector
		constexpr auto bCanShootKey = 0x98; // FBlackboardKeySelector
		constexpr auto StartSprintDistanceBuffer = 0xc0; // float
	}

	namespace n_UTigerAnimationSetAsset {
		constexpr auto Set = 0x30; // UTigerAnimationSet*
	}

	namespace n_UTigerColorSetAsset {
		constexpr auto ColorSets = 0x30; // TMap<FName, FColor>
		constexpr auto ScalarParameters = 0x80; // TMap<FName, float>
	}

	namespace n_ATigerLootableVehicleDoorSpawner {
		constexpr auto VehicleBody = 0x280; // ATigerVehicle*
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UAkPS4InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UTigerBattlepassUI {
		constexpr auto MaxPageItems = 0x3b0; // int32_t
		constexpr auto PageSizes = 0x3b8; // TArray<int32_t>
		constexpr auto CurrentPageIndex = 0x3c8; // int32_t
		constexpr auto RewardTiers = 0x3d0; // TArray<UTigerClientSeasonalRewardTier*>
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xe8; // EARTextureType
		constexpr auto Timestamp = 0xec; // float
		constexpr auto ExternalTextureGuid = 0xf0; // FGuid
		constexpr auto Size = 0x100; // FVector2D
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x228; // USkyLightComponent*
		constexpr auto bEnabled = 0x230; // char : 1
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UTigerAiShouldReloadDecorator {
		constexpr auto bBaseUponFullAmmoPercentage = 0x68; // bool
		constexpr auto ReloadAmmoPercentage = 0x6c; // float
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UTigerChallengeReachLevel {
		constexpr auto LevelToReach = 0xb0; // int32_t
	}

	namespace n_UTigerOnlineStatusSubsystem {
		constexpr auto OnlineStatusMessages = 0x40; // UTigerOnlineStatusMessages*
	}

	namespace n_UTBP_UI_BloodHuntMarker_C {
		constexpr auto UberGraphFrame = 0x2b8; // FPointerToUberGraphFrame
		constexpr auto PulseAnim_Beat = 0x2c0; // UWidgetAnimation*
		constexpr auto PulseAnim = 0x2c8; // UWidgetAnimation*
		constexpr auto BloodDot = 0x2d0; // UWidgetAnimation*
		constexpr auto BloodHuntImage = 0x2d8; // UImage*
		constexpr auto Image_57 = 0x2e0; // UImage*
		constexpr auto Pulse = 0x2e8; // UImage*
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_ATigerBattlepassRewardPreview {
		constexpr auto PreviewItem = 0x228; // UTigerInventoryItemBase*
		constexpr auto bIsZoomEnabled = 0x230; // bool
		constexpr auto CameraTags = 0x238; // TArray<FName>
		constexpr auto Cameras = 0x248; // TArray<FTigerItemPreviewCamera>
		constexpr auto CameraTransitionParams = 0x258; // FViewTargetTransitionParams
		constexpr auto CameraRadius = 0x268; // float
		constexpr auto CameraMoveSpeed = 0x26c; // float
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto MaxListHeight = 0xcf0; // float
		constexpr auto HasDownArrow = 0xcf4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xcf5; // bool
		constexpr auto Font = 0xcf8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd50; // FSlateColor
		constexpr auto bIsFocusable = 0xd78; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd7c; // FDelegate
		constexpr auto OnSelectionChanged = 0xd90; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xda0; // FMulticastInlineDelegate
	}

	namespace n_UABP_VMP_BRU_F_HAIR_04_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_15 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_14 = 0x760; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_13 = 0xba0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0xfe0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x1420; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1ca0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x2540; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2dc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x3200; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x3640; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3a80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3ec0; // FAnimNode_AnimDynamics
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UTigerCapturePointProgressUI {
		constexpr auto YouCapturingStatusText = 0x280; // FText
		constexpr auto EnemyCapturingStatusText = 0x298; // FText
		constexpr auto ContestedStatusText = 0x2b0; // FText
		constexpr auto CaptureStatus = 0x2c8; // ETigerCapturePointStatus
		constexpr auto PercentageLeft = 0x2cc; // float
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x228; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x229; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x22c; // FVector2D
		constexpr auto Intensity = 0x234; // float
		constexpr auto IntensityUnits = 0x238; // ELightUnits
		constexpr auto Color = 0x23c; // FLinearColor
		constexpr auto Temperature = 0x24c; // float
		constexpr auto IESTexture = 0x250; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x258; // bool
		constexpr auto IESBrightnessScale = 0x25c; // float
		constexpr auto Rotation = 0x260; // FRotator
		constexpr auto SourceRadius = 0x26c; // float
		constexpr auto SourceLength = 0x270; // float
		constexpr auto AttenuationRadius = 0x274; // float
		constexpr auto SpotlightInnerAngle = 0x278; // float
		constexpr auto SpotlightOuterAngle = 0x27c; // float
	}

	namespace n_UTigerDodgeBuffInstance {
		constexpr auto BuffClassDefaultObject = 0x88; // UTigerDodgeBuff*
	}

	namespace n_UTigerGameSettings {
		constexpr auto QuestCollection = 0x38; // FSoftObjectPath
		constexpr auto bEnableNpcSpawning = 0x50; // bool
		constexpr auto NpcLocationCorrectionInterval = 0x54; // float
		constexpr auto ItemClusterSize = 0x58; // float
		constexpr auto ItemClusterExtraReplicationRange = 0x5c; // float
		constexpr auto BuildingSystemVersion = 0x60; // int32_t
		constexpr auto RoofSystemVersion = 0x64; // int32_t
		constexpr auto RoofSystemFreeTransformableVersion = 0x68; // int32_t
		constexpr auto SideVolumeExtents = 0x6c; // FVector
		constexpr auto BelowSideMargin = 0x78; // float
		constexpr auto BelowDepthMargin = 0x7c; // float
		constexpr auto BelowVolumeHeight = 0x80; // float
		constexpr auto ShallowBalconyDepth = 0x84; // float
		constexpr auto bEnableApartments = 0x88; // bool
		constexpr auto BuildingWallPreviewerClass = 0x90; // ATigerBuildingWallPreviewer*
		constexpr auto bEnableStatisticsGathering = 0x98; // bool
		constexpr auto bEnableLandingPage = 0x99; // bool
		constexpr auto bEnableIntro = 0x9a; // bool
		constexpr auto TutorialLevel = 0xa0; // FSoftObjectPath
		constexpr auto TransferFromMatchLevel = 0xb8; // FSoftObjectPath
		constexpr auto CustomizationOptions = 0xd0; // TSoftClassPtr<UObject>
		constexpr auto ItemsDatabase = 0xf8; // TSoftClassPtr<UObject>
		constexpr auto GrimoireTree = 0x120; // TSoftClassPtr<UObject>
		constexpr auto GrimoireSeasonDatabase = 0x148; // TSoftClassPtr<UObject>
		constexpr auto TrainingVideoGrimoireEntry = 0x170; // TSoftObjectPtr<UTigerGrimoireEntry>
		constexpr auto ChallengeDatabase = 0x198; // TSoftClassPtr<UObject>
		constexpr auto MasteryChallenges = 0x1c0; // FSoftObjectPath
		constexpr auto PromotionalPopupConfigUrl = 0x1d8; // FString
		constexpr auto AssetStatusDoNotUseMaterial = 0x1e8; // TSoftObjectPtr<UMaterial>
		constexpr auto bLogNetworkMovementFlagsOnServer = 0x210; // bool
		constexpr auto SavedPlayerRotation = 0x214; // FRotator
		constexpr auto SavedPlayerLocation = 0x220; // FVector
	}

	namespace n_UTigerTankyChargeConfig {
		constexpr auto Montage = 0x160; // UAnimMontage*
		constexpr auto DashDistance = 0x168; // float
		constexpr auto DashDuration = 0x16c; // float
		constexpr auto DashExitVelocity = 0x170; // float
		constexpr auto DashHitboxExtents = 0x174; // FVector
		constexpr auto EndHitRadius = 0x180; // float
		constexpr auto HitDamage = 0x184; // float
		constexpr auto KnockbackForce = 0x188; // float
	}

	namespace n_UTigerPostMatchScreenUI {
		constexpr auto OnReadyToTravel = 0x298; // FMulticastInlineDelegate
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7c0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7cc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7d8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x7f0; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x848; // float
		constexpr auto CurrentAperture = 0x84c; // float
		constexpr auto CurrentFocusDistance = 0x850; // float
		constexpr auto FilmbackPresets = 0x860; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x870; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x880; // FString
		constexpr auto DefaultFilmbackPreset = 0x890; // FString
		constexpr auto DefaultLensPresetName = 0x8a0; // FString
		constexpr auto DefaultLensFocalLength = 0x8b0; // float
		constexpr auto DefaultLensFStop = 0x8b4; // float
	}

	namespace n_UTigerCustomBlendSpace1DListGender {
		constexpr auto BlendSpaces = 0x28; // UBlendSpace1D* [0x2]
	}

	namespace n_UTBP_UI_JoinPartyElysiumScreen_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto ExitButton = 0x298; // UTBP_UI_MenuButton_C*
		constexpr auto LoadingThrobber = 0x2a0; // UThrobber*
		constexpr auto TBP_UI_BasicMenu = 0x2a8; // UTBP_UI_BasicMenu_C*
		constexpr auto TryAgainButton = 0x2b0; // UTBP_UI_MenuButton_C*
		constexpr auto GameInstanceRef = 0x2b8; // UTBP_TigerGameInstance_C*
		constexpr auto FoundSessions = 0x2c0; // TArray<FBlueprintSessionResult>
		constexpr auto ThrobberVisibility = 0x2d0; // ESlateVisibility
		constexpr auto TitleText = 0x2d8; // FText
		constexpr auto ButtonVisibility = 0x2f0; // ESlateVisibility
		constexpr auto OnFailed = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnSuccess = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UTBP_ContextualHelp_Shield_Break_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UTBP_TigerGameInstance_C {
		constexpr auto UberGraphFrame = 0x798; // FPointerToUberGraphFrame
		constexpr auto JoinElysiumScreenWB = 0x7a0; // UTBP_UI_JoinElysiumScreen_C*
		constexpr auto LobbyMenuWB = 0x7a8; // UTBP_UI_LobbyMenu_C*
		constexpr auto HostMenuWB = 0x7b0; // UTBP_UI_HostMenu_C*
		constexpr auto FindGameFailedMenuWB = 0x7b8; // UTBP_UI_FindGameFailedMenu_C*
		constexpr auto MaxPlayers = 0x7c0; // int32_t
		constexpr auto ServerName = 0x7c8; // FText
		constexpr auto MatchMenuWB = 0x7e0; // UTBP_UI_MatchMenu_C*
		constexpr auto PlayerSettingsSave = 0x7e8; // FString
		constexpr auto bMainMenuIsOpen = 0x7f8; // bool
		constexpr auto JoinGameMenuWB = 0x800; // UTBP_UI_JoinGameMenu_C*
		constexpr auto InvitationListWB = 0x808; // UTBP_UI_GroupInvitationList_C*
		constexpr auto WinScreenWB = 0x810; // UTBP_UI_WinScreen_C*
		constexpr auto ServerSelectionMenuWB = 0x818; // UTBP_UI_ServerSelection_C*
		constexpr auto OnLoadingScreenFullyOpaque = 0x820; // FMulticastInlineDelegate
		constexpr auto OnJoinGameCountdownBegin = 0x830; // FMulticastInlineDelegate
		constexpr auto TutorialMenuWB = 0x840; // UTBP_UI_TutorialMenu_C*
		constexpr auto JoinPartyElysiumScreenWB = 0x848; // UTBP_UI_JoinPartyElysiumScreen_C*
		constexpr auto ErrorStringTable = 0x850; // TSoftObjectPtr<UObject>
		constexpr auto TraveledFrom = 0x878; // FString
		constexpr auto SelectedSession = 0x888; // FTigerBpFindSessionSelectedSession
		constexpr auto MenuMusicEvent = 0x998; // UAkAudioEvent*
		constexpr auto TutorialIntroWB = 0x9a0; // UTBP_UI_Tutorial_IntroText_C*
		constexpr auto OnTitleScreenFadeOutStarted = 0x9a8; // FMulticastInlineDelegate
	}

	namespace n_UABP_VMP_TOR_F_HAIR_02_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0xb50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xf90; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xfb0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0xfd0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1410; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1850; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x1c90; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1cc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x2100; // FAnimNode_AnimDynamics
	}

	namespace n_ATigerLootLocation {
		constexpr auto Configuration = 0x260; // UTigerLootLocationConfiguration*
		constexpr auto EnteringAreaMainText = 0x268; // FText
		constexpr auto EnteringAreaSubText = 0x280; // FText
		constexpr auto EnteringAreaTextBackground = 0x298; // UTexture2D*
		constexpr auto OverlappingLootSpawners = 0x2a0; // TArray<ATigerLootSpawner*>
		constexpr auto AlwaysOverlappingLootSpawner = 0x2b0; // TArray<ATigerLootSpawner*>
		constexpr auto GameTypeFilter = 0x2c0; // char
		constexpr auto EnteringPromptCooldown = 0x2cc; // float
	}

	namespace n_UTigerScreenshotMapGenerationSettings {
		constexpr auto Width = 0x38; // float
		constexpr auto Resolution = 0x3c; // int32_t
		constexpr auto Start = 0x40; // FVector2D
		constexpr auto End = 0x48; // FVector2D
		constexpr auto Height = 0x50; // float
		constexpr auto PostProcessSetup = 0x58; // FTigerPostProcessSettingsSetup
	}

	namespace n_UDirectionalStyle_C {
		constexpr auto OutWeaponSlot = 0x48; // ETigerWeaponSlot
	}

	namespace n_UTigerReplicationGraph {
		constexpr auto GridNode = 0x498; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto PlayerSpawnedGridNode = 0x4a0; // UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned*
		constexpr auto AlwaysRelevantNode = 0x4a8; // UReplicationGraphNode_ActorList*
		constexpr auto OwnerRelevantNode = 0x4b0; // UTigerReplicationGraphNode_OwnerRelevant*
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UTigerBuffMeleeChargeAttack {
		constexpr auto AttackParticleEffect = 0x248; // UParticleSystem*
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UTigerDialogueCondition {
		constexpr auto bFalseCondition = 0x28; // bool
	}

	namespace n_ATigerNPCSpawningBase {
		constexpr auto AISplinePath = 0x228; // ATigerAISplinePath*
		constexpr auto SpawningGroup = 0x230; // FName
		constexpr auto SpawnAmount = 0x238; // int32_t
		constexpr auto SpawningSubGroupId = 0x23c; // FGuid
		constexpr auto Prio = 0x24c; // float
		constexpr auto bShouldBeManuallyActivated = 0x250; // bool
		constexpr auto MovementGroup = 0x254; // FName
	}

	namespace n_UTBP_UI_GetDevTicketSection_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_CTA_SignInButton = 0x268; // UTBP_UI_Button_CTA_C*
		constexpr auto DevelopmentLogInText = 0x270; // UTigerStyledRichTextBlock*
		constexpr auto TBP_UI_Divider_2 = 0x278; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_SmallErrorMessage_Development = 0x280; // UTBP_UI_SmallErrorMessage_C*
		constexpr auto TBP_UI_TextButton_ExitGame = 0x288; // UTBP_UI_TextButton_C*
		constexpr auto SignIn = 0x290; // FMulticastInlineDelegate
		constexpr auto ExitGame = 0x2a0; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UTigerMasqueradeConsequenceMapAreaMarkerSyncInstance {
		constexpr auto AreaMarkerClass = 0x58; // UTigerMasqueradeMarker*
		constexpr auto AreaRadius = 0x60; // float
		constexpr auto MapMarkerProxy = 0x68; // UTigerMasqueradeMarkerProxy*
	}

	namespace n_ATigerLocalAIControllerBase {
		constexpr auto BehaviorTree = 0x330; // UBehaviorTree*
		constexpr auto InteractionControllerComponent = 0x338; // UTigerInteractionControllerComponent*
		constexpr auto LowShieldThreshold = 0x340; // float
		constexpr auto LocalPlayerController = 0x348; // ATigerPlayerController*
		constexpr auto SightRange = 0x350; // float
		constexpr auto LoseSightModifier = 0x354; // float
		constexpr auto VisionAngleDegrees = 0x358; // float
		constexpr auto AimOffsetAmount = 0x35c; // float
		constexpr auto AimAccuracy = 0x360; // float
		constexpr auto MinimumAcceptableDamageMultiplier = 0x364; // float
		constexpr auto TigerPlayerCameraManager = 0x368; // ATigerPlayerCameraManager*
		constexpr auto BehaviorComp = 0x370; // UBehaviorTreeComponent*
		constexpr auto AIPerceptionComp = 0x378; // UAIPerceptionComponent*
		constexpr auto BlackboardComp = 0x380; // UBlackboardComponent*
		constexpr auto playerMovComp = 0x388; // UMovementComponent*
		constexpr auto PathFollowingComp = 0x390; // UPathFollowingComponent*
		constexpr auto LocalPawn = 0x398; // APawn*
		constexpr auto PlayerPawn = 0x3a0; // ATigerPlayer*
		constexpr auto TemporaryIgnoredTargets = 0x3d0; // TMap<AActor*, float>
		constexpr auto FocusCharacter = 0x430; // ATigerCharacter*
		constexpr auto LowHealthThreshold = 0x45c; // float
		constexpr auto BotDifficulty = 0x474; // float
	}

	namespace n_ATigerThrallTable {
		constexpr auto TigerThrallMapUI = 0x280; // UTigerThrallMapUI*
		constexpr auto bIsThrallMapUIOpened = 0x288; // bool
		constexpr auto Camera = 0x290; // UCameraComponent*
		constexpr auto TimeToTransition = 0x298; // float
		constexpr auto CameraExponent = 0x29c; // float
		constexpr auto TableMesh = 0x2a0; // UStaticMeshComponent*
		constexpr auto InteractingPlayer = 0x2a8; // ATigerPlayer*
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6c0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6d0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6e0; // UMonoWaveTableSynthPreset*
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UABP_VMP_TOR_F_HAIR_05_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0x2d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x710; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0xb50; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xf90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0xfb0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x13f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1830; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x1850; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1c90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x20d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2510; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_Root = 0x2950; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics = 0x2980; // FAnimNode_AnimDynamics
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_ATigerBloodVeinTooltipLocation {
		constexpr auto MaximumDistance = 0x228; // float
		constexpr auto bIsVisible = 0x22c; // bool
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UTigerCollectibleSystem {
		constexpr auto CollectiblePickupExpEvent = 0xb0; // UTigerExperienceEvent*
		constexpr auto GenericCollectibleItemAsset = 0xb8; // UTigerItemAsset*
	}

	namespace n_UTigerCompassMarkerWidget {
		constexpr auto MarkerWorldLocation = 0x280; // FVector
		constexpr auto MarkerTexture = 0x290; // UTexture2D*
	}

	namespace n_UTigerHUDSettings {
		constexpr auto DamageNumberAmountSetting = 0x38; // ETigerDamageNumberAmount
	}

	namespace n_UTBP_UI_InvalidGameClient_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto DeveloperButton = 0x298; // UButton*
		constexpr auto TBP_UI_ConfirmMenu = 0x2a0; // UTBP_UI_ConfirmMenu_C*
		constexpr auto OnExited = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnIgnored_Dispatch = 0x2b8; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x450; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x458; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x460; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x528; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x528; // char : 1
		constexpr auto bAutoDestroy = 0x554; // char : 1
		constexpr auto bRenderingEnabled = 0x554; // char : 1
		constexpr auto bAutoManageAttachment = 0x554; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x554; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x558; // float
		constexpr auto EmitterMaterials = 0x560; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x578; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x598; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x599; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59a; // EAttachmentRule
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x260; // float
		constexpr auto Priority = 0x264; // int32_t
		constexpr auto FluidFriction = 0x268; // float
		constexpr auto bWaterVolume = 0x26c; // char : 1
		constexpr auto bPhysicsOnContact = 0x26c; // char : 1
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xe8; // int32_t
		constexpr auto FirstResourceMemMip = 0xec; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xf0; // char : 1
		constexpr auto AddressX = 0xf1; // TextureAddress
		constexpr auto AddressY = 0xf2; // TextureAddress
		constexpr auto ImportedSize = 0xf4; // FIntPoint
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xac; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xac; // char : 1
		constexpr auto bStopOnOverlap = 0xac; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xad; // char : 1
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UTigerCharacterCombinedItemConfiguration {
		constexpr auto CombinedItemClassType = 0x110; // TSoftClassPtr<UObject>
		constexpr auto Items = 0x138; // TArray<FTigerInventoryCombinedItemValue>
	}

	namespace n_UTigerSwiftStrikeConfig {
		constexpr auto DashDistance = 0x160; // float
		constexpr auto StartupTime = 0x164; // float
		constexpr auto DashTime = 0x168; // float
		constexpr auto DashDamage = 0x16c; // float
		constexpr auto DashHitBoxSize = 0x170; // FVector2D
		constexpr auto StrikeDelay = 0x178; // float
		constexpr auto StrikeDuration = 0x17c; // float
		constexpr auto StrikeDamage = 0x180; // float
		constexpr auto StrikeDebuff = 0x188; // UTigerBuff*
		constexpr auto StrikeHitBoxSize = 0x190; // FVector
		constexpr auto DrawDebugInfo = 0x19c; // bool
	}

	namespace n_UTigerMasqueradeConsequenceActionWorldMaker {
		constexpr auto MarkerClass = 0x60; // ATigerMasqueradeActionMarker*
	}

	namespace n_UTigerRenderingSettings {
		constexpr auto MaxSpotLightShadowCasters = 0x38; // int32_t
		constexpr auto LastLodMaterialMaster = 0x40; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto LastLodExtractionParameters = 0x68; // TArray<FName>
		constexpr auto MaterialsToExclude = 0x78; // TArray<TSoftObjectPtr<UMaterialInterface>>
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Slide_Gamepad_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UTBP_ContextualHelp_Tutorial_PassivePower_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x228; // UAudioComponent*
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x138; // float
		constexpr auto Acceleration = 0x13c; // float
		constexpr auto Deceleration = 0x140; // float
		constexpr auto TurningBoost = 0x144; // float
		constexpr auto bPositionCorrected = 0x148; // char : 1
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x478; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x488; // TArray<FSpriteInstanceData>
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x230; // float
		constexpr auto MaxDrawDistance = 0x234; // float
		constexpr auto MaxDistanceFadeRange = 0x238; // float
		constexpr auto bUseTemperature = 0x23c; // char : 1
		constexpr auto ShadowMapChannel = 0x240; // int32_t
		constexpr auto MinRoughness = 0x248; // float
		constexpr auto SpecularScale = 0x24c; // float
		constexpr auto ShadowResolutionScale = 0x250; // float
		constexpr auto ShadowBias = 0x254; // float
		constexpr auto ShadowSlopeBias = 0x258; // float
		constexpr auto ShadowSharpen = 0x25c; // float
		constexpr auto ContactShadowLength = 0x260; // float
		constexpr auto ContactShadowLengthInWS = 0x264; // char : 1
		constexpr auto InverseSquaredFalloff = 0x264; // char : 1
		constexpr auto CastTranslucentShadows = 0x264; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x264; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x264; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x264; // char : 1
		constexpr auto LightingChannels = 0x268; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x270; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x278; // FVector
		constexpr auto IESTexture = 0x288; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x290; // char : 1
		constexpr auto IESBrightnessScale = 0x294; // float
		constexpr auto LightFunctionFadeDistance = 0x298; // float
		constexpr auto DisabledBrightness = 0x29c; // float
		constexpr auto bEnableLightShaftBloom = 0x2a0; // char : 1
		constexpr auto BloomScale = 0x2a4; // float
		constexpr auto BloomThreshold = 0x2a8; // float
		constexpr auto BloomMaxBrightness = 0x2ac; // float
		constexpr auto BloomTint = 0x2b0; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2b4; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2b8; // float
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UTigerDisciplineAnimTriggeredConfig {
		constexpr auto Montage = 0x160; // UAnimMontage*
		constexpr auto DisciplineType = 0x168; // ETigerDisciplinesEnum
		constexpr auto ActiveTimeAfterTrigger = 0x16c; // float
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UTigerDistrictData {
		constexpr auto MapTexture = 0x30; // UTexture2D*
		constexpr auto FirstAnchor = 0x38; // FDistrictDataAnchor
		constexpr auto SecondAnchor = 0x48; // FDistrictDataAnchor
		constexpr auto bSpawnHighPotenceBlood = 0x58; // bool
		constexpr auto bSpawnSuperHighPotenceBlood = 0x59; // bool
	}

	namespace n_UTBP_UI_ServerSelection_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto CancelButton = 0x298; // UTBP_UI_MenuButton_C*
		constexpr auto ContinueButton = 0x2a0; // UTBP_UI_MenuButton_C*
		constexpr auto ServerComboBox = 0x2a8; // UComboBoxString*
		constexpr auto TBP_UI_BasicMenu = 0x2b0; // UTBP_UI_BasicMenu_C*
		constexpr auto Sessions = 0x2b8; // FTigerBpFindSessionResultList
		constexpr auto OnServerSelected = 0x2e0; // FMulticastInlineDelegate
		constexpr auto OnCancel = 0x2f0; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_ATBP_Trap_C {
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto TrapLightBottom = 0x330; // USpotLightComponent*
		constexpr auto IconLocation = 0x338; // USceneComponent*
		constexpr auto IconRoot = 0x340; // USceneComponent*
		constexpr auto TrapLightTop = 0x348; // USpotLightComponent*
		constexpr auto Dyn material = 0x350; // UMaterialInstanceDynamic*
		constexpr auto Curve = 0x358; // UCurveFloat*
		constexpr auto TrapConfig = 0x360; // UTigerTrapsConfig*
		constexpr auto InWorldWidget = 0x368; // UTigerInWorldWidget*
	}

	namespace n_UTigerAnimNotifyState_TimedIndoorOutDoorParticleEffect {
		constexpr auto IndoorPSTemplate = 0x30; // UParticleSystem*
		constexpr auto OutdoorPSTemplate = 0x38; // UParticleSystem*
		constexpr auto PlayOnClients = 0x40; // ETigerPlayOnClients
		constexpr auto SocketName = 0x44; // FName
		constexpr auto LocationOffset = 0x4c; // FVector
		constexpr auto RotationOffset = 0x58; // FRotator
		constexpr auto bDestroyAtEnd = 0x64; // bool
		constexpr auto ChooseParticleSystemOverride = 0x68; // UTigerParticleStrategyChooseSystem*
		constexpr auto ParticlePostSpawnModification = 0x70; // UTigerParticleStrategyPostSpawn*
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UTigerAiPlayerMainStateService {
		constexpr auto LocalAIController = 0x78; // ATigerLocalAIController*
		constexpr auto AiPlayer = 0x80; // ATigerPlayer*
		constexpr auto TargetCharacter = 0x88; // ATigerCharacter*
		constexpr auto LocalAiInventory = 0x90; // UTigerInventoryComponent*
		constexpr auto CharacterFromWhichFleeing = 0x98; // ATigerCharacter*
		constexpr auto FleeAttackDistance = 0xd0; // float
	}

	namespace n_ATigerBlindingBeautyEffectActor {
		constexpr auto Player = 0x228; // ATigerPlayer*
		constexpr auto TriggerTime = 0x230; // float
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x250; // UNavLocalGridManager*
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UTigerLoadingScreenAsset {
		constexpr auto StartAudioEvent = 0x28; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto LoadingScreenWidget = 0x50; // TSoftClassPtr<UObject>
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTigerTitleErrorUI {
		constexpr auto OnlineError = 0x280; // UTigerOnlineError*
		constexpr auto bIsOpen = 0x288; // bool
	}

	namespace n_UTigerVendorStoreCategory {
		constexpr auto CachedItems = 0x28; // TArray<FTigerVendorStoreCategoryItem>
		constexpr auto ItemDefinitions = 0x38; // TArray<FTigerPersistentItemDefinition>
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UTBP_ContextualHelp_Tutorial_Inventory_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UTigerAnimationSet {
		constexpr auto ParentSets = 0x28; // TArray<UTigerAnimationSetAsset*>
		constexpr auto Sequences = 0x38; // TMap<FName, UAnimSequence*>
		constexpr auto Montages = 0x88; // TMap<FName, UAnimMontage*>
		constexpr auto MontageLists = 0xd8; // TMap<FName, UTigerMontageList*>
		constexpr auto BlendSpaces = 0x128; // TMap<FName, UBlendSpace*>
		constexpr auto BlendSpaces1D = 0x178; // TMap<FName, UBlendSpace1D*>
		constexpr auto RandomSequenceLists = 0x1c8; // TMap<FName, UTigerRandomSequenceList*>
		constexpr auto CustomSequences = 0x218; // TMap<FName, UTigerCustomSequenceList*>
		constexpr auto CustomMontages = 0x268; // TMap<FName, UTigerCustomMontageList*>
		constexpr auto CustomBlendSpaces = 0x2b8; // TMap<FName, UTigerCustomBlendSpaceList*>
		constexpr auto CustomBlendSpaces1D = 0x308; // TMap<FName, UTigerCustomBlendSpace1DList*>
		constexpr auto Priority = 0x358; // int32_t
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bDistanceField = 0x85; // char : 1
		constexpr auto bMultiChannelDistanceField = 0x85; // char : 1
		constexpr auto DistanceFieldTargetResolution = 0x88; // int32_t
		constexpr auto DistanceFieldScanRadius = 0x8c; // float
		constexpr auto bNoTiling = 0x90; // char : 1
		constexpr auto VirtualTextureStreaming = 0x90; // char : 1
		constexpr auto CompressionYCoCg = 0x90; // char : 1
		constexpr auto bNotOfflineProcessed = 0x90; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x90; // char : 1
		constexpr auto AssetUserData = 0x98; // TArray<UAssetUserData*>
	}

	namespace n_UTBP_UI_InputMenuPrompt_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto InputPrompt_Gamepad = 0x268; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Keyboard = 0x270; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto TransitionMenuButton = 0x278; // UTBP_UI_TransitionMenuButton_C*
		constexpr auto PrefixText = 0x280; // FText
		constexpr auto PostfixTest = 0x298; // FText
		constexpr auto InputAction = 0x2b0; // FName
		constexpr auto bListenForInput = 0x2b8; // bool
		constexpr auto OnInputPressed = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UAkItemBoolProperties {
		constexpr auto OnSelectionChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UAkPS5InitializationSettings {
		constexpr auto CommonSettings = 0x28; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x88; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb0; // FAkPS5AdvancedInitializationSettings
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UTigerCharacterEyebrowColorCustomization {
		constexpr auto AdditionalParameters = 0x110; // FTigerCharacterCustomizationParameters
	}

	namespace n_ATigerShacklesMine {
		constexpr auto ThornsBuff = 0x228; // UTigerBuff*
		constexpr auto ShacklesBuff = 0x230; // UTigerBuff*
		constexpr auto Root = 0x238; // USceneComponent*
		constexpr auto IndicatorAnchor = 0x240; // USceneComponent*
	}

	namespace n_UTigerLoadingScreenUI {
		constexpr auto OnFadeInCompleteEvent = 0x260; // FMulticastInlineDelegate
		constexpr auto OnFadeOutCompleteEvent = 0x270; // FMulticastInlineDelegate
		constexpr auto FadeInTime = 0x280; // float
		constexpr auto LoadingScreenAsset = 0x288; // UTigerLoadingScreenAsset*
		constexpr auto AkPlayingId = 0x290; // int32_t
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x450; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x460; // float
		constexpr auto PixelHitDistanceThreshold = 0x464; // float
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x280; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_UTigerAiCanUseWeaponPowerDecorator {
		constexpr auto bConditionInvertedOnTick = 0x68; // bool
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x1f8; // float
		constexpr auto Falloff = 0x1fc; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x200; // float
		constexpr auto bImpulseVelChange = 0x204; // char : 1
		constexpr auto bIgnoreOwningActor = 0x204; // char : 1
		constexpr auto ForceStrength = 0x208; // float
		constexpr auto DestructibleDamage = 0x20c; // float
		constexpr auto ObjectTypesToAffect = 0x210; // TArray<EObjectTypeQuery>
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_UTigerBrujahTraitMomentumLogic {
		constexpr auto Config = 0xc0; // UTigerBrujahTraitMomentum*
		constexpr auto Player = 0xc8; // ATigerPlayer*
	}

	namespace n_UAkLateReverbComponent {
		constexpr auto bEnable = 0x1f8; // char : 1
		constexpr auto SendLevel = 0x1fc; // float
		constexpr auto FadeRate = 0x200; // float
		constexpr auto Priority = 0x204; // float
		constexpr auto AutoAssignAuxBus = 0x208; // bool
		constexpr auto AuxBus = 0x210; // UAkAuxBus*
		constexpr auto AuxBusName = 0x218; // FString
		constexpr auto AuxBusManual = 0x230; // UAkAuxBus*
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x250; // FName
	}

	namespace n_UTigerWorldCompositionHexGridCellComponent {
		constexpr auto HexCellRadius = 0x230; // float
	}

	namespace n_UTBP_UI_Button_CTA_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto OnClick = 0x268; // UWidgetAnimation*
		constexpr auto OnHover = 0x270; // UWidgetAnimation*
		constexpr auto Arrow_Left = 0x278; // UImage*
		constexpr auto Arrow_Right = 0x280; // UImage*
		constexpr auto Base = 0x288; // UImage*
		constexpr auto Base_Click = 0x290; // UImage*
		constexpr auto Border = 0x298; // UImage*
		constexpr auto Corner_Left = 0x2a0; // UImage*
		constexpr auto Corner_Right = 0x2a8; // UImage*
		constexpr auto Dot_Bottom = 0x2b0; // UImage*
		constexpr auto Dot_Left = 0x2b8; // UImage*
		constexpr auto Dot_Right = 0x2c0; // UImage*
		constexpr auto Dot_Top = 0x2c8; // UImage*
		constexpr auto Horn_Bottom = 0x2d0; // UImage*
		constexpr auto Horn_Top = 0x2d8; // UImage*
		constexpr auto Ornament_Bottom = 0x2e0; // UImage*
		constexpr auto Ornament_Left = 0x2e8; // UImage*
		constexpr auto Ornament_Right = 0x2f0; // UImage*
		constexpr auto Ornament_Top = 0x2f8; // UImage*
		constexpr auto StartGameUIButton = 0x300; // UTBP_UI_TransitionMenuButton_C*
		constexpr auto Text = 0x308; // UTigerStyledRichTextBlock*
		constexpr auto OnClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x320; // FMulticastInlineDelegate
		constexpr auto ButtonText = 0x330; // FText
		constexpr auto TextStyle = 0x348; // FDataTableRowHandle
		constexpr auto EnableSmoke = 0x358; // bool
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x1f8; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x210; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x218; // UNavigationGraphNodeComponent*
	}

	namespace n_UTBP_ContextualHelp_DownedRedGas_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_UTigerAIFireAtActorTask {
		constexpr auto TargetToShootActorKey = 0x98; // FBlackboardKeySelector
		constexpr auto CanShootKey = 0xc0; // FBlackboardKeySelector
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UTigerCollectibleItemAsset {
		constexpr auto Collectible = 0x128; // UTigerCollectibleData*
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_USharkPlatformSettings {
		constexpr auto PlatformType = 0x38; // ESharkPlatformType
	}

	namespace n_UTigerScriptedTexture {
		constexpr auto ScriptedTexture = 0x280; // UTextureRenderTarget2D*
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto Position = 0x40; // FExpressionInput
	}

	namespace n_UTigerDialogueCondition_FinishedCertainGame {
		constexpr auto ModeFinished = 0x30; // ETigerGroupingMode
	}

	namespace n_UTigerVoSettings {
		constexpr auto AudioEvent = 0x38; // TSoftObjectPtr<UAkAudioEvent>
		constexpr auto CategoryData = 0x60; // TMap<FName, FTigerVoCategoryData>
	}

	namespace n_USharkRoundRobinSettings {
		constexpr auto bEnabled = 0x38; // bool
		constexpr auto GroupSettings = 0x40; // TArray<FSharkRoundRobinClassSettings>
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UTBP_UI_ElysiumButton_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HoverAnimation = 0x268; // UWidgetAnimation*
		constexpr auto LoopingAnimation = 0x270; // UWidgetAnimation*
		constexpr auto InAnimation = 0x278; // UWidgetAnimation*
		constexpr auto ArrowDown = 0x280; // UImage*
		constexpr auto ArrowUp = 0x288; // UImage*
		constexpr auto Border = 0x290; // UImage*
		constexpr auto Darken_Hover = 0x298; // UImage*
		constexpr auto DiamondLeft = 0x2a0; // UImage*
		constexpr auto DiamondRight = 0x2a8; // UImage*
		constexpr auto InputPrompt_Gamepad = 0x2b0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Keyboard = 0x2b8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto SmokeClipBox = 0x2c0; // UCanvasPanel*
		constexpr auto StartGameUIButton = 0x2c8; // UTBP_UI_TransitionMenuButton_C*
		constexpr auto OnClicked = 0x2d0; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x2e0; // FMulticastInlineDelegate
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x228; // ULightmassPortalComponent*
	}

	namespace n_UTBP_ContextualHelp_RangedWeapon_FireMode_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_ATigerRebuildableActor {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto BuildCreatedComponents = 0x230; // TArray<USceneComponent*>
	}

	namespace n_UTigerCompassMarkerComponent {
		constexpr auto CompassMarkerWidget = 0xb0; // UTigerCompassMarkerWidget*
		constexpr auto MarkerTexture = 0xb8; // UTexture2D*
		constexpr auto bShouldShowByDefault = 0xc0; // bool
	}

	namespace n_UTigerWeatherSettings {
		constexpr auto WeatherScenarioAliases = 0x38; // TMap<FName, UTigerWeatherScenarioData*>
		constexpr auto WeatherScenarioProbabilityRatios = 0x88; // TMap<UTigerWeatherScenarioData*, float>
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UTBP_Buff_BlindingBeauty_C {
		constexpr auto UberGraphFrame = 0x250; // FPointerToUberGraphFrame
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xf0; // int32_t
		constexpr auto SizeY = 0xf4; // int32_t
		constexpr auto SizeZ = 0xf8; // int32_t
		constexpr auto ClearColor = 0xfc; // FLinearColor
		constexpr auto OverrideFormat = 0x10c; // EPixelFormat
		constexpr auto bHDR = 0x10d; // char : 1
		constexpr auto bForceLinearGamma = 0x10d; // char : 1
	}

	namespace n_UTigerClientChallengesCollection {
		constexpr auto WeeklyChallenges = 0x28; // TArray<UTigerClientRewardTrackSeasonalChallenges*>
		constexpr auto DailyChallenges = 0x38; // UTigerClientRewardTrackDailyChallenges*
		constexpr auto MasteryChallenges = 0x40; // TArray<UTigerClientRewardTrackMasteryChallenges*>
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UTBP_UI_LicenseAgreement_Popup_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto FulFixAnimation = 0x268; // UWidgetAnimation*
		constexpr auto ShowAgreeButton = 0x270; // UWidgetAnimation*
		constexpr auto ReadArrowFlash = 0x278; // UWidgetAnimation*
		constexpr auto AgreeButton = 0x280; // UTBP_UI_MenuButton_C*
		constexpr auto CancelButton = 0x288; // UTBP_UI_MenuButton_C*
		constexpr auto Image_144 = 0x290; // UImage*
		constexpr auto License_Text = 0x298; // UTigerStyledRichTextBlock*
		constexpr auto ReadArrowContainer = 0x2a0; // UOverlay*
		constexpr auto ReadArrowShadow = 0x2a8; // UImage*
		constexpr auto ScrollBox_1 = 0x2b0; // UScrollBox*
		constexpr auto TBP_UI_Divider = 0x2b8; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Divider_2 = 0x2c0; // UTBP_UI_Divider_C*
		constexpr auto TBP_UI_Popup_Base = 0x2c8; // UTBP_UI_Popup_Base_C*
		constexpr auto TBP_UI_Scrollbox = 0x2d0; // UTBP_UI_Scrollbox_C*
		constexpr auto Title_Text = 0x2d8; // UTigerStyledRichTextBlock*
		constexpr auto OnDecisionMade = 0x2e0; // FMulticastInlineDelegate
		constexpr auto Agreed = 0x2f0; // bool
		constexpr auto ScrolledFinished = 0x2f1; // bool
		constexpr auto Subtitle_TextFormatting = 0x2f8; // FString
		constexpr auto Subheader_TextFormatting = 0x308; // FString
		constexpr auto UL_TextFormatting = 0x318; // FString
		constexpr auto Bold_TextFormating = 0x328; // FString
		constexpr auto EL_TextFormatting = 0x338; // FString
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x260; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x270; // char : 1
		constexpr auto bDisabled = 0x270; // char : 1
		constexpr auto StreamingUsage = 0x274; // EStreamingVolumeUsage
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0xf0; // float
		constexpr auto bPauseOnImpact = 0xf4; // char : 1
		constexpr auto bSweep = 0xf8; // bool
		constexpr auto TeleportType = 0xf9; // ETeleportType
		constexpr auto BehaviourType = 0xfa; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0xfb; // bool
		constexpr auto bForceSubStepping = 0xfc; // char : 1
		constexpr auto OnInterpToReverse = 0x100; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x110; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x150; // float
		constexpr auto MaxSimulationIterations = 0x154; // int32_t
		constexpr auto ControlPoints = 0x158; // TArray<FInterpControlPoint>
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_ATigerInteractiveObject {
		constexpr auto bHasInteractionTrigger = 0x228; // bool
		constexpr auto bHasEnterVolumeTrigger = 0x229; // bool
		constexpr auto bHasShootingTrigger = 0x22a; // bool
		constexpr auto InteractionText = 0x230; // FText
		constexpr auto InteractionVolume = 0x248; // UBoxComponent*
		constexpr auto EnterVolume = 0x250; // UBoxComponent*
		constexpr auto ShootingVolume = 0x258; // UBoxComponent*
		constexpr auto InteractionTime = 0x260; // float
		constexpr auto bIsInteractibleFromBehind = 0x264; // bool
		constexpr auto SceneRoot = 0x268; // USceneComponent*
		constexpr auto InteractionState = 0x278; // EInteractiveObjectState
		constexpr auto CurrentInteractionTimeLeft = 0x27c; // float
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0x108; // EARDepthQuality
		constexpr auto DepthAccuracy = 0x109; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0x10a; // bool
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x238; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x250; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x258; // FSoftObjectPath
		constexpr auto CameraSettings = 0x270; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x278; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x280; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x288; // char : 1
		constexpr auto bOverrideInstanceData = 0x288; // char : 1
		constexpr auto bReplicatePlayback = 0x288; // char : 1
		constexpr auto DefaultInstanceData = 0x290; // UObject*
		constexpr auto BurnInInstance = 0x298; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2a0; // bool
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_UTigerAiShouldUseClanDiscipline {
		constexpr auto SoaringLeapRayClearance = 0x98; // float
		constexpr auto VanishCombatUseChance = 0x9c; // float
		constexpr auto ProjectionDashUseDistance = 0xa0; // float
	}

	namespace n_UTigerPassiveMomentumLogicComponent {
		constexpr auto CoolDownReduction = 0xc0; // float
		constexpr auto PassiveCoolDown = 0xc4; // float
		constexpr auto Player = 0xc8; // ATigerPlayer*
		constexpr auto EndTime = 0xd0; // float
		constexpr auto bIsInCooldown = 0xd4; // bool
	}

	namespace n_UTBP_HeadConfiguration_Master_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto PiercingOffsets = 0x268; // TMap<ENUM_PiercingNames, FTigerCharacterHeadPiercingSocket>
		constexpr auto PiercingNameMappings = 0x2b8; // TMap<ENUM_PiercingNames, FName>
		constexpr auto EyewearOffset_Nose = 0x308; // FTigerCharacterHeadEyewearOffset
		constexpr auto EyewearOffset_EarLeft = 0x320; // FTigerCharacterHeadEyewearOffset
		constexpr auto EyewearOffset_EarRight = 0x338; // FTigerCharacterHeadEyewearOffset
	}

	namespace n_UTigerRichTextBlockIconDecorator {
		constexpr auto bUsingGamePad = 0x28; // bool
		constexpr auto PlayerControllerRef = 0x30; // ATigerPlayerController*
		constexpr auto IconImages = 0x40; // UDataTable*
		constexpr auto KeyTextureMapping = 0x48; // UTigerKeyTextureMapping*
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xd4; // char : 1
		constexpr auto CachedNavParent = 0xd8; // UObject*
	}

	namespace n_UTBP_ANS_HeavyAttackRange_C {
		constexpr auto ChargingParticles = 0x30; // TArray<UParticleSystemComponent*>
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb4; // int32_t
		constexpr auto StreamingPriority = 0xb8; // int32_t
		constexpr auto bShouldBeVisible = 0xbe; // char : 1
		constexpr auto bShouldBeLoaded = 0xbe; // char : 1
		constexpr auto bLocked = 0xbe; // char : 1
		constexpr auto bIsStatic = 0xbf; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xbf; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbf; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbf; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbf; // char : 1
		constexpr auto LevelColor = 0xc0; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_ATigerHavenCapturePoint {
		constexpr auto PointActivatedText = 0x228; // FText
		constexpr auto HavenMarkerHeightOffset = 0x240; // float
		constexpr auto AssignedHaven = 0x248; // ATigerHaven*
		constexpr auto bRevealedEveryone = 0x2cc; // bool
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UTigerAimingCameraBehavior {
		constexpr auto MaxWorldDistanceForFindingTarget = 0x140; // float
		constexpr auto AimAssistStrengthMultiplier = 0x144; // float
		constexpr auto PassiveAimAssistStrength = 0x148; // float
		constexpr auto YawRotationMultiplier = 0x14c; // float
		constexpr auto PitchRotationMultiplier = 0x150; // float
		constexpr auto MaximumFollowDegrees = 0x154; // float
		constexpr auto AimAssistTargetLeadAmount = 0x158; // float
		constexpr auto AimAssistStrengthByVelocityMultiplier = 0x15c; // float
	}

	namespace n_ATigerEntityHelicopter {
		constexpr auto PreparingToFireSound = 0x228; // UAkAudioEvent*
		constexpr auto TargetEnteredSpotlightSound = 0x230; // UAkAudioEvent*
		constexpr auto TargetLeftSpotlightSound = 0x238; // UAkAudioEvent*
		constexpr auto ProjectileClass = 0x240; // ATigerProjectile*
		constexpr auto WeaponType = 0x248; // UTigerRangedWeapon*
		constexpr auto Weapon = 0x250; // UTigerRangedWeapon*
		constexpr auto RangedWeaponsDatatable = 0x258; // UDataTable*
		constexpr auto TargetedPlayer = 0x268; // TWeakObjectPtr<ATigerPlayer>
		constexpr auto LineOfSightStart = 0x270; // USceneComponent*
		constexpr auto SpotlightEndTarget = 0x284; // FVector_NetQuantize10
		constexpr auto SceneRoot = 0x290; // USceneComponent*
		constexpr auto HelicopterChildActor = 0x298; // UChildActorComponent*
		constexpr auto SpotlightMovementSpeed = 0x2a0; // float
		constexpr auto TargetSpottedDelayBeforeFiring = 0x2b8; // float
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_ATBP_TigerPlayerCameraManager_C {
		constexpr auto HighSpeedCameraTreshold = 0x2900; // float
		constexpr auto MinMoveSpeedForMeleeCamera = 0x2904; // float
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UTigerChallengeBreakMasquerade {
		constexpr auto bOncePerMatch = 0xb0; // bool
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UTBP_Buff_KindredCharm_Npc_C {
		constexpr auto UberGraphFrame = 0x248; // FPointerToUberGraphFrame
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_ATigerTrap {
		constexpr auto OnTriggered = 0x230; // FMulticastInlineDelegate
		constexpr auto Root = 0x240; // USceneComponent*
		constexpr auto TrapMesh = 0x248; // UStaticMeshComponent*
		constexpr auto ShootingVolume = 0x250; // UBoxComponent*
		constexpr auto TriggerVolume = 0x258; // USphereComponent*
		constexpr auto ExplosionVolume = 0x260; // USphereComponent*
		constexpr auto GasVolume = 0x268; // USphereComponent*
		constexpr auto ArmedParticle = 0x270; // UParticleSystemComponent*
		constexpr auto AreaParticle = 0x278; // UParticleSystemComponent*
		constexpr auto ExplosionParticle = 0x280; // UParticleSystemComponent*
		constexpr auto GasParticle = 0x288; // UParticleSystemComponent*
		constexpr auto Config = 0x290; // UTigerTrapsConfig*
		constexpr auto RawConfig = 0x298; // UTigerTrapsConfig*
		constexpr auto GasBuff = 0x2a0; // UTigerBuff*
		constexpr auto Decal = 0x2a8; // UDecalComponent*
		constexpr auto OwnerPersistentId = 0x2b0; // FTigerPersistentPlayerID
		constexpr auto PowerLevel = 0x2cc; // int32_t
		constexpr auto bIsPlaced = 0x2d0; // bool
		constexpr auto bIsArmed = 0x2d1; // bool
		constexpr auto bTriggered = 0x2d3; // bool
		constexpr auto ForwardDirection = 0x2e8; // FVector
		constexpr auto Velocity = 0x2f4; // FVector
		constexpr auto TrapMaterialInstance = 0x318; // UMaterialInstanceDynamic*
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_ATigerEntityJudgeHelicopter {
		constexpr auto Judge = 0x2e0; // ATigerJudge*
		constexpr auto DesiredForwardOffsetFromJudge = 0x2f0; // float
		constexpr auto DesiredHeight = 0x2f4; // float
		constexpr auto MaxSpeed = 0x2f8; // float
		constexpr auto MaxTargetDistance2DFromJudge = 0x2fc; // float
		constexpr auto MinimumTargetHeight = 0x300; // float
		constexpr auto MinimumHeightOverJudge = 0x304; // float
		constexpr auto LoseTargetTime = 0x308; // float
		constexpr auto KillSelfHandle = 0x310; // FTimerHandle
		constexpr auto CurrentSpotlightState = 0x318; // ETigerJudgeHelicopterSpotlightState
	}

	namespace n_ATigerTutorialNpcSpawner {
		constexpr auto DataAsset = 0x228; // UTigerTutorialTrainerAsset*
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UTBP_UI_ArchetypeDescription_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto HideDetailsAnim = 0x268; // UWidgetAnimation*
		constexpr auto ShowDetailsAnim = 0x270; // UWidgetAnimation*
		constexpr auto ArchetypeDescriptionWidget = 0x278; // UTigerStyledRichTextBlock*
		constexpr auto ArchetypeHeader = 0x280; // UTigerStyledRichTextBlock*
		constexpr auto ArchetypeKeywordsWidget = 0x288; // UTigerStyledRichTextBlock*
		constexpr auto ClanHeader = 0x290; // UTigerStyledRichTextBlock*
		constexpr auto ClanData = 0x298; // UTigerPlayerClanData*
		constexpr auto ArchetypeData = 0x2a0; // UTigerPowerKit*
		constexpr auto bHideDetails = 0x2a8; // bool
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x228; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x230; // UMaterial*
		constexpr auto SurfaceTolerance = 0x238; // float
		constexpr auto Isovalue = 0x23c; // float
		constexpr auto Enabled = 0x240; // bool
		constexpr auto RenderVolumeBoundingBox = 0x241; // bool
	}

	namespace n_UTigerVanishConfig {
		constexpr auto VanishBuff = 0x160; // TArray<UTigerBuff*>
		constexpr auto MovementSpeedText = 0x170; // FText
		constexpr auto MovementSpeedSuffix = 0x188; // FText
	}

	namespace n_UTigerDisciplineShockwavePunch {
		constexpr auto DisciplineConfig = 0x110; // UTigerShockwavePunchConfig*
		constexpr auto PickedMontage = 0x118; // UAnimMontage*
	}

	namespace n_ATigerDamageTriggerVolume {
		constexpr auto DamagePerSecond = 0x260; // float
		constexpr auto bOnlyDamageKindred = 0x264; // bool
		constexpr auto bDoNotDamageDowned = 0x265; // bool
		constexpr auto DamageRate = 0x268; // float
		constexpr auto bEnableDamage = 0x26c; // bool
		constexpr auto OverlappingCharacters = 0x270; // TArray<FDamageTriggerOverlapData>
	}

	namespace n_UTigerAnimNotifyState_EnableWeaponHitbox {
		constexpr auto pitchOffsetCurve = 0x40; // UCurveFloat*
		constexpr auto WeaponIndex = 0x48; // int32_t
	}

	namespace n_UTigerNotificationsUIStacker {
		constexpr auto ShownItemWidgets = 0x280; // TArray<FDisplayedItemWidget>
		constexpr auto MaxDisplayedItems = 0x290; // int32_t
		constexpr auto ItemMargin = 0x294; // float
		constexpr auto ItemDisplayTime = 0x298; // float
		constexpr auto ItemMoveTime = 0x29c; // float
		constexpr auto ItemFadeOffsetX = 0x2a0; // float
		constexpr auto WaitingItems = 0x2a8; // TArray<UUserWidget*>
		constexpr auto ItemWidgetFadingIn = 0x2b8; // UUserWidget*
		constexpr auto ItemWidgetFadingOut = 0x2c0; // UUserWidget*
		constexpr auto ItemCanvasWidget = 0x2c8; // UCanvasPanel*
	}

	namespace n_UTigerBuffComponent {
		constexpr auto OnBuffAdded = 0xb0; // FMulticastInlineDelegate
		constexpr auto OnBuffRemoved = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnBuffRefreshed = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnClientBuffIdUpdated = 0xe0; // FMulticastInlineDelegate
		constexpr auto bDrawDebugString = 0xf0; // bool
		constexpr auto BuffInstances = 0xf8; // TArray<UTigerBuffInstance*>
		constexpr auto NonVerifiedBuffInstances = 0x108; // TArray<UTigerBuffInstance*>
		constexpr auto DeferredBuffs = 0x118; // TArray<FTigerDeferredBuffInstantiation>
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_ATBP_LocalAI_Controller_C {
		constexpr auto AIPerception = 0x560; // UAIPerceptionComponent*
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x478; // EWidgetSpace
		constexpr auto TimingPolicy = 0x479; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x480; // UUserWidget*
		constexpr auto DrawSize = 0x488; // FIntPoint
		constexpr auto bManuallyRedraw = 0x490; // bool
		constexpr auto bRedrawRequested = 0x491; // bool
		constexpr auto RedrawTime = 0x494; // float
		constexpr auto CurrentDrawSize = 0x4a0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x4a8; // bool
		constexpr auto Pivot = 0x4ac; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4b4; // bool
		constexpr auto bWindowFocusable = 0x4b5; // bool
		constexpr auto WindowVisibility = 0x4b6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4b7; // bool
		constexpr auto OwnerPlayer = 0x4b8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4c0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4d0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4e0; // float
		constexpr auto BlendMode = 0x4e4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4e5; // bool
		constexpr auto TickWhenOffscreen = 0x4e6; // bool
		constexpr auto BodySetup = 0x4e8; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x4f8; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x500; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x508; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x510; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x518; // UMaterialInterface*
		constexpr auto RenderTarget = 0x520; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x528; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x530; // bool
		constexpr auto bEditTimeUsable = 0x531; // bool
		constexpr auto SharedLayerName = 0x534; // FName
		constexpr auto LayerZOrder = 0x53c; // int32_t
		constexpr auto GeometryMode = 0x540; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x544; // float
		constexpr auto TickMode = 0x548; // ETickMode
		constexpr auto Widget = 0x570; // UUserWidget*
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xb0; // float
		constexpr auto MaxRange = 0xb4; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UTigerAIEntityReactPlayersService {
		constexpr auto SuspiciousTarget = 0x70; // FBlackboardKeySelector
		constexpr auto ThresholdDistanceSquared = 0x98; // float
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x110; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UTigerAsyncChooseNextWaypoint {
		constexpr auto Index = 0x70; // FBlackboardKeySelector
		constexpr auto Waypoint = 0x98; // FBlackboardKeySelector
		constexpr auto bWaypointDirectionIsForward = 0xc0; // FBlackboardKeySelector
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_UAkAssetData {
		constexpr auto CachedHash = 0x28; // uint32_t
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_ATBP_BuildingWallPresetTester_C {
		constexpr auto DefaultSceneRoot = 0x230; // USceneComponent*
		constexpr auto SegmentsHorizontal = 0x238; // int32_t
		constexpr auto SegmentsVertical = 0x23c; // int32_t
	}

	namespace n_UTBP_UI_HostMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto BackButton = 0x298; // UButton*
		constexpr auto LaunchButton = 0x2a0; // UButton*
		constexpr auto UserServerName = 0x2a8; // UEditableTextBox*
		constexpr auto GameInstanceRef = 0x2b0; // UTBP_TigerGameInstance_C*
		constexpr auto ServerNameText = 0x2b8; // FText
		constexpr auto LaunchIsEnabled? = 0x2d0; // bool
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x1f8; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x200; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x200; // char : 1
		constexpr auto bLooping = 0x200; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x200; // char : 1
		constexpr auto bOverrideAttenuation = 0x200; // char : 1
		constexpr auto IntensityMultiplier = 0x204; // float
		constexpr auto AttenuationSettings = 0x208; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x210; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2c0; // FMulticastInlineDelegate
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x268; // FVector
	}

	namespace n_ATBP_BuffPostProcess_Master_C {
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto VisibilityCurve = 0x240; // UCurveFloat*
		constexpr auto CurrentDuration = 0x248; // float
		constexpr auto TotalDuration = 0x24c; // float
		constexpr auto CurrentHideDuration = 0x250; // float
		constexpr auto TotalHideDuration = 0x254; // float
		constexpr auto CurrentlyShownID = 0x258; // int32_t
		constexpr auto AdditionalDuration = 0x25c; // float
		constexpr auto UseHideDuration = 0x260; // bool
	}

	namespace n_UTBP_UI_Discipline_Trap_WorldMarker_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto OffScreenState = 0x328; // UWidgetAnimation*
		constexpr auto DownArrow_FadeOut = 0x330; // UWidgetAnimation*
		constexpr auto DetectedText_FadeOut = 0x338; // UWidgetAnimation*
		constexpr auto DownArrow_Movement = 0x340; // UWidgetAnimation*
		constexpr auto Composite_DetectedAnimationOut = 0x348; // UWidgetAnimation*
		constexpr auto Composite_DetectedAnimationIn = 0x350; // UWidgetAnimation*
		constexpr auto DefaultBat_OutAnimation = 0x358; // UWidgetAnimation*
		constexpr auto DefaultBat_InAnimation = 0x360; // UWidgetAnimation*
		constexpr auto AnimatedDetectedText = 0x368; // UTBP_UI_TransitionHeader_C*
		constexpr auto DownArrowImage = 0x370; // UImage*
		constexpr auto RootCanvas = 0x378; // UCanvasPanel*
		constexpr auto TrapDefaultImage = 0x380; // UImage*
		constexpr auto TrapDetectedImage = 0x388; // UImage*
		constexpr auto bShouldDetectionWidgetsPlayHide = 0x390; // bool
		constexpr auto OnScreenRootTransform = 0x394; // FWidgetTransform
	}

	namespace n_UTigerCollectibleGrimoireEntrySet {
		constexpr auto Set = 0x30; // TArray<UTigerGrimoireEntry*>
	}

	namespace n_UTigerMasqueradeMarkerProxy {
		constexpr auto bIsMarkingFriendlyOrLocalPlayer = 0x68; // bool
		constexpr auto MarkerRadius = 0x6c; // float
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x678; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x688; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x698; // FGuid
	}

	namespace n_UTigerRandomSequenceList {
		constexpr auto RandomSequenceList = 0x28; // TArray<FRandomPlayerSequenceEntry>
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppId = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UTigerFamiliarScoutPassive {
		constexpr auto OverlappingCharacters = 0xb0; // TArray<ATigerCharacter*>
		constexpr auto OrbitingParticles = 0xc0; // UParticleSystemComponent*
		constexpr auto ScanSphere = 0xc8; // USphereComponent*
		constexpr auto Player = 0xd0; // ATigerPlayer*
		constexpr auto Config = 0xd8; // UTigerScoutsConfig*
		constexpr auto bIsPassiveActivated = 0xe0; // bool
		constexpr auto bPlayerIsVisible = 0xe1; // bool
	}

	namespace n_UTBP_UI_LobbyMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto HostButton = 0x298; // UButton*
		constexpr auto InputPrompt_Gamepad_LeaveGroup = 0x2a0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Gamepad_PlayerList = 0x2a8; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Gamepad_Quit = 0x2b0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Gamepad_Resume = 0x2b8; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Gamepad_SelectCharacter = 0x2c0; // UTBP_UI_InputPrompt_Gamepad_C*
		constexpr auto InputPrompt_Keyboard_LeaveGroup = 0x2c8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto InputPrompt_Keyboard_PlayerList = 0x2d0; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto InputPrompt_Keyboard_Quit = 0x2d8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto InputPrompt_Keyboard_Resume = 0x2e0; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto InputPrompt_Keyboard_SelectCharacter = 0x2e8; // UTBP_UI_InputPrompt_Keyboard_C*
		constexpr auto LeaveGroupButton = 0x2f0; // UTBP_UI_MenuButton_C*
		constexpr auto PlayerListButton = 0x2f8; // UTBP_UI_MenuButton_C*
		constexpr auto QuitConfirmation = 0x300; // UTBP_UI_ConfirmMenu_C*
		constexpr auto QuitGameButton = 0x308; // UTBP_UI_MenuButton_C*
		constexpr auto ResumeButton = 0x310; // UTBP_UI_MenuButton_C*
		constexpr auto SelectCharacterButton = 0x318; // UTBP_UI_MenuButton_C*
		constexpr auto TBP_UI_BasicMenu = 0x320; // UTBP_UI_BasicMenu_C*
		constexpr auto GameInstanceRef = 0x328; // UTBP_TigerGameInstance_C*
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x228; // UShapeComponent*
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UTigerBuffDOTInstance {
		constexpr auto BuffDOT = 0x88; // UTigerBuffDOT*
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UTBP_ContextualHelp_Ammo_Reserves_C {
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x450; // FColor
		constexpr auto FrustumAngle = 0x454; // float
		constexpr auto FrustumAspectRatio = 0x458; // float
		constexpr auto FrustumStartDist = 0x45c; // float
		constexpr auto FrustumEndDist = 0x460; // float
		constexpr auto Texture = 0x468; // UTexture*
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x468; // UBodySetup*
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x228; // FString
		constexpr auto ClientBeaconActorClass = 0x238; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x240; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_ATigerAIGroupCAP {
		constexpr auto CapSlots = 0x290; // TArray<FTigerAiGroupCapSlot>
	}

	namespace n_UABP_VMP_TOR_M_HAIR_01_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x300; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x740; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0xb80; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0xfc0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x1400; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1840; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1860; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1ca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x20e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2520; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x2540; // FAnimNode_AnimDynamics
	}

	namespace n_UTigerAiShouldRequestOutOfBoundsPursuitSquad {
		constexpr auto CurrentTargetKey = 0x68; // FBlackboardKeySelector
		constexpr auto MaxDistanceFromCurrentSquad = 0x90; // float
	}

	namespace n_UAkSlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSliderStyle
		constexpr auto Orientation = 0x460; // EOrientation
		constexpr auto SliderBarColor = 0x464; // FLinearColor
		constexpr auto SliderHandleColor = 0x474; // FLinearColor
		constexpr auto IndentHandle = 0x484; // bool
		constexpr auto Locked = 0x485; // bool
		constexpr auto StepSize = 0x488; // float
		constexpr auto IsFocusable = 0x48c; // bool
		constexpr auto ThePropertyToControl = 0x490; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4a0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x500; // FMulticastInlineDelegate
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_ATigerTutorialGameMode {
		constexpr auto OnTutorialStart = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnTutorialBeat01Complete = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnTutorialBeat02Complete = 0x4e8; // FMulticastInlineDelegate
		constexpr auto OnTutorialBeat03Complete = 0x4f8; // FMulticastInlineDelegate
		constexpr auto bHasTutorialStarted = 0x508; // bool
		constexpr auto PlayerAppearance = 0x510; // FTigerPreviewerData
		constexpr auto TutorialPlayerArchetype = 0x7c0; // UTigerPowerKit*
		constexpr auto TutorialBloodTrackPreset = 0x7c8; // UTigerBloodTrackPreset*
		constexpr auto CurrentDialogueEvent = 0x7d0; // UAkAudioEvent*
		constexpr auto Beat03Consumable = 0x7d8; // ATigerItemWorldRepresentation*
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_UTigerAIThreateningTargetEntityService {
		constexpr auto MasqueradeBreachTargetKey = 0x148; // FBlackboardKeySelector
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UTBP_UI_JoinGameMenu_C {
		constexpr auto UberGraphFrame = 0x290; // FPointerToUberGraphFrame
		constexpr auto CountdownAnimation = 0x298; // UWidgetAnimation*
		constexpr auto BackButton = 0x2a0; // UButton*
		constexpr auto Countdown = 0x2a8; // URichTextBlock*
		constexpr auto LoadingThrobber = 0x2b0; // UThrobber*
		constexpr auto PopupRoot = 0x2b8; // UBorder*
		constexpr auto RootWidget = 0x2c0; // UCanvasPanel*
		constexpr auto TextBlock_1 = 0x2c8; // UTextBlock*
		constexpr auto TryAgainButton = 0x2d0; // UButton*
		constexpr auto GameInstanceRef = 0x2d8; // UTBP_TigerGameInstance_C*
		constexpr auto ThrobberVisibility = 0x2e0; // ESlateVisibility
		constexpr auto TitleText = 0x2e8; // FText
		constexpr auto ButtonVisibility = 0x300; // ESlateVisibility
		constexpr auto CountdownValueLeft = 0x304; // int32_t
		constexpr auto SessionToJoin = 0x308; // FTigerBpFindSessionSelectedSession
		constexpr auto bIsFadingOut = 0x418; // bool
		constexpr auto SessionURL = 0x420; // FString
		constexpr auto bJoinThroughUrl = 0x430; // bool
		constexpr auto SESSIONTYPE = 0x431; // ESessionType
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_UTigerDisciplineFlowerOfDeath {
		constexpr auto Config = 0x78; // UTigerFlowerOfDeathConfig*
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_ATigerThumbnailActor {
		constexpr auto Root = 0x228; // USceneComponent*
		constexpr auto ViewOrientation = 0x230; // USceneComponent*
		constexpr auto IconWidth = 0x238; // int32_t
		constexpr auto IconHeight = 0x23c; // int32_t
		constexpr auto bIsRealtime = 0x240; // bool
		constexpr auto FOV = 0x244; // float
		constexpr auto Cubemap = 0x248; // TSoftObjectPtr<UTextureCube>
		constexpr auto CubemapIntensity = 0x270; // float
		constexpr auto bShouldGenerateImage = 0x274; // bool
		constexpr auto ItemPaths = 0x278; // TArray<FSoftClassPath>
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UTBP_UI_Loading_Throbber_C {
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Loop = 0x268; // UWidgetAnimation*
		constexpr auto Loading_Throbber_Image_Bot = 0x270; // UImage*
		constexpr auto Loading_Throbber_Image_Mid = 0x278; // UImage*
		constexpr auto Loading_Throbber_Image_Top = 0x280; // UImage*
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UTBP_UI_Popup_Base_C {
		constexpr auto CloseAnimation = 0x260; // UWidgetAnimation*
		constexpr auto OpenAnimation = 0x268; // UWidgetAnimation*
		constexpr auto Backdrop = 0x270; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto Background = 0x278; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto Background_conatiner = 0x280; // UOverlay*
		constexpr auto BorderBot = 0x288; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto BorderTop = 0x290; // UTBP_UI_HorizontalFadeSlot_C*
		constexpr auto Content = 0x298; // UNamedSlot*
	}

	namespace n_UTigerTraversalStateConfigBase {
		constexpr auto bStateIsDisabled = 0x28; // bool
		constexpr auto PossibleOutTransitions = 0x30; // TArray<ETigerTraversalState>
		constexpr auto TraversalState = 0x40; // UTigerTraversalBaseFiniteState*
		constexpr auto TimeOutSeconds = 0x48; // float
		constexpr auto TimeOutInto = 0x4c; // ETigerTraversalState
		constexpr auto bJumpCooldownAllowedToTick = 0x4d; // bool
		constexpr auto bJumpDiminishingReturnsCountdownCanTick = 0x4e; // bool
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x148; // ACharacter*
		constexpr auto GravityScale = 0x150; // float
		constexpr auto MaxStepHeight = 0x154; // float
		constexpr auto JumpZVelocity = 0x158; // float
		constexpr auto JumpOffJumpZFactor = 0x15c; // float
		constexpr auto WalkableFloorAngle = 0x160; // float
		constexpr auto WalkableFloorZ = 0x164; // float
		constexpr auto MovementMode = 0x168; // EMovementMode
		constexpr auto CustomMovementMode = 0x169; // char
		constexpr auto NetworkSmoothingMode = 0x16a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x16c; // float
		constexpr auto MaxWalkSpeed = 0x18c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x190; // float
		constexpr auto MaxSwimSpeed = 0x194; // float
		constexpr auto MaxFlySpeed = 0x198; // float
		constexpr auto MaxCustomMovementSpeed = 0x19c; // float
		constexpr auto MaxAcceleration = 0x1a0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1a4; // float
		constexpr auto BrakingFrictionFactor = 0x1a8; // float
		constexpr auto BrakingFriction = 0x1ac; // float
		constexpr auto BrakingSubStepTime = 0x1b0; // float
		constexpr auto BrakingDecelerationWalking = 0x1b4; // float
		constexpr auto BrakingDecelerationFalling = 0x1b8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1bc; // float
		constexpr auto BrakingDecelerationFlying = 0x1c0; // float
		constexpr auto AirControl = 0x1c4; // float
		constexpr auto AirControlBoostMultiplier = 0x1c8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1cc; // float
		constexpr auto FallingLateralFriction = 0x1d0; // float
		constexpr auto CrouchedHalfHeight = 0x1d4; // float
		constexpr auto Buoyancy = 0x1d8; // float
		constexpr auto PerchRadiusThreshold = 0x1dc; // float
		constexpr auto PerchAdditionalHeight = 0x1e0; // float
		constexpr auto RotationRate = 0x1e4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x1f0; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x1f0; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x1f0; // char : 1
		constexpr auto bOrientRotationToMovement = 0x1f0; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x1f0; // char : 1
		constexpr auto bMovementInProgress = 0x1f0; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x1f0; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x1f1; // char : 1
		constexpr auto bForceMaxAccel = 0x1f1; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x1f1; // char : 1
		constexpr auto bForceNextFloorCheck = 0x1f1; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedges = 0x1f1; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x1f1; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x1f2; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x1f2; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x1f2; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x1f2; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceScaledToMass = 0x1f2; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x1f2; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x1f3; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x1f8; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x200; // float
		constexpr auto OutofWaterZ = 0x204; // float
		constexpr auto Mass = 0x208; // float
		constexpr auto StandingDownwardForceScale = 0x20c; // float
		constexpr auto InitialPushForceFactor = 0x210; // float
		constexpr auto PushForceFactor = 0x214; // float
		constexpr auto PushForcePointZOffsetFactor = 0x218; // float
		constexpr auto TouchForceFactor = 0x21c; // float
		constexpr auto MinTouchForce = 0x220; // float
		constexpr auto MaxTouchForce = 0x224; // float
		constexpr auto RepulsionForce = 0x228; // float
		constexpr auto Acceleration = 0x22c; // FVector
		constexpr auto LastUpdateRotation = 0x240; // FQuat
		constexpr auto LastUpdateLocation = 0x250; // FVector
		constexpr auto LastUpdateVelocity = 0x25c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x268; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x26c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x270; // float
		constexpr auto PendingImpulseToApply = 0x274; // FVector
		constexpr auto PendingForceToApply = 0x280; // FVector
		constexpr auto AnalogInputModifier = 0x28c; // float
		constexpr auto MaxSimulationTimeStep = 0x29c; // float
		constexpr auto MaxSimulationIterations = 0x2a0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2a4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2a8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2ac; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2b0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2b4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2b8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2bc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2c0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2c4; // float
		constexpr auto NetProxyShrinkRadius = 0x2c8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2cc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2d0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2d4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2d8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2dc; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2e0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2e4; // float
		constexpr auto LedgeCheckThreshold = 0x2e8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2ec; // float
		constexpr auto CurrentFloor = 0x2f0; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x388; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x389; // EMovementMode
		constexpr auto GroundMovementMode = 0x38a; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x38b; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x38b; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x38b; // char : 1
		constexpr auto bJustTeleported = 0x38b; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x38b; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x38b; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x38c; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x38c; // char : 1
		constexpr auto bNotifyApex = 0x38c; // char : 1
		constexpr auto bCheatFlying = 0x38c; // char : 1
		constexpr auto bWantsToCrouch = 0x38c; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x38c; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x38c; // char : 1
		constexpr auto bFastAttachedMove = 0x38c; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x38d; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x38d; // char : 1
		constexpr auto bPerformingJumpOff = 0x38d; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x38d; // char : 1
		constexpr auto bUseRVOAvoidance = 0x38d; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x38d; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x38d; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x38e; // char : 1
		constexpr auto bHasRequestedVelocity = 0x38e; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x38e; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x38e; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x38e; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x38e; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3a0; // float
		constexpr auto RequestedVelocity = 0x3a4; // FVector
		constexpr auto AvoidanceUID = 0x3b0; // int32_t
		constexpr auto AvoidanceGroup = 0x3b4; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3b8; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3bc; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3c0; // float
		constexpr auto PendingLaunchVelocity = 0x3c4; // FVector
		constexpr auto NavMeshProjectionInterval = 0x474; // float
		constexpr auto NavMeshProjectionTimer = 0x478; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x47c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x480; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x484; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x488; // float
		constexpr auto PostPhysicsTickFunction = 0x490; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4d8; // float
		constexpr auto CurrentRootMotion = 0x988; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0x9c0; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xa90; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xad0; // FVector
	}

	namespace n_UReplicationGraphNode {
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UTigerBloodPotencyVisualizationConfig {
		constexpr auto HeartMeshMaterialTarget = 0x30; // TArray<UMaterialInstance*>
		constexpr auto NiagaraPath = 0x40; // TSoftObjectPtr<UNiagaraSystem>
		constexpr auto ParticleSystem = 0x68; // UParticleSystem*
		constexpr auto ParticleSystemAttachmentSocket = 0x70; // FName
		constexpr auto bParticleSystemAbsoluteRotation = 0x78; // bool
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_UTigerScoutsConfig {
		constexpr auto ScoutActor = 0x170; // ATigerFamiliarScout*
		constexpr auto PassiveClass = 0x178; // UTigerFamiliarScoutPassive*
		constexpr auto RevealDuration = 0x180; // float
		constexpr auto PassiveScanRadius = 0x184; // float
		constexpr auto ActiveScanRadius = 0x188; // float
		constexpr auto ScoutDespawnDistance = 0x18c; // float
		constexpr auto ScoutLifetime = 0x190; // float
		constexpr auto Reach = 0x194; // float
		constexpr auto ScoutingMaxDistanceFromOwner = 0x198; // float
		constexpr auto TargetLocationNormalOffset = 0x19c; // float
		constexpr auto AirMontage = 0x1a0; // UAnimMontage*
		constexpr auto RevealedCharacterAudioEvent = 0x1a8; // UAkAudioEvent*
		constexpr auto BoneToSpawnFrom = 0x1b0; // FName
		constexpr auto bShouldAlwaysStartFromPlayer = 0x1b8; // bool
	}

	namespace n_ATigerLocalAIController {
		constexpr auto FleeMaxDistanceSquared = 0x498; // float
		constexpr auto FacingConeHalfAngle = 0x49c; // float
		constexpr auto MinimumAcceptableHeadshotDamageMultiplier = 0x4a0; // float
		constexpr auto HeadshotChance = 0x4a4; // float
		constexpr auto BuffsOnSelfToIgnoreTargetsList = 0x4a8; // TArray<UTigerBuff*>
		constexpr auto BuffsOnTargetsToIgnoreList = 0x4b8; // TArray<UTigerBuff*>
		constexpr auto TigerPlayerState = 0x4d0; // ATigerPlayerState*
	}

	namespace n_UTigerStaticMeshUserData {
		constexpr auto StaticMeshType = 0x28; // ETigerStaticMeshType
		constexpr auto bIsClimbable = 0x29; // bool
		constexpr auto bIsWallJumpable = 0x2a; // bool
		constexpr auto bFadeWhenNearToCamera = 0x2b; // bool
		constexpr auto bForceHorizontalVelocityOnFallingImpact = 0x2c; // bool
	}

	namespace n_UTigerAiGiveOrderToSquad {
		constexpr auto OrderToGive = 0x70; // ETigerNpcSquadOrder
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x228; // UPaperSpriteComponent*
	}

	namespace n_UTigerHookConfig {
		constexpr auto MaxThrowDistance = 0x160; // float
		constexpr auto StopPullDistance = 0x164; // float
		constexpr auto TimeUntilReachMaxThrowDistance = 0x168; // float
		constexpr auto TimeUntilReturn = 0x16c; // float
		constexpr auto FastReelTime = 0x170; // float
		constexpr auto RotateTime = 0x174; // float
		constexpr auto TimeBeforeReel = 0x178; // float
		constexpr auto TimeUntilCutoffVelocity = 0x17c; // float
		constexpr auto TimeLeftWhenToAllowHookingPlayerActions = 0x180; // float
		constexpr auto HookDamage = 0x184; // float
		constexpr auto StunDurationPostHook = 0x188; // float
		constexpr auto HookType = 0x190; // ATigerHook*
		constexpr auto HookedBuffType = 0x198; // UTigerHookedBuff*
		constexpr auto HookingBuffType = 0x1a0; // UTigerHookingBuff*
		constexpr auto ThrowAnimation = 0x1a8; // UAnimMontage*
		constexpr auto ReelAnimation = 0x1b0; // UAnimMontage*
		constexpr auto AirThrowAnimation = 0x1b8; // UAnimMontage*
		constexpr auto AirReelAnimation = 0x1c0; // UAnimMontage*
		constexpr auto HookedReactionAnimation = 0x1c8; // UAnimMontage*
		constexpr auto HookedReelAnimation = 0x1d0; // UAnimMontage*
		constexpr auto HookedPostReelAnimation = 0x1d8; // UAnimMontage*
		constexpr auto bUseForcedMove = 0x1e0; // bool
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UTigerDodgeBuff {
		constexpr auto MaxSpeedCurve = 0x248; // UCurveFloat*
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UTigerMasqueradeConsequence {
		constexpr auto SyncInstanceClass = 0x28; // UTigerMasqueradeConsequenceSyncInstance*
		constexpr auto ActionsThatCanActivateConsequence = 0x30; // TArray<ETigerAIPlayerAction>
		constexpr auto PlayerOwner = 0x40; // ATigerPlayer*
		constexpr auto ConsequenceName = 0x48; // FName
		constexpr auto Duration = 0x50; // float
		constexpr auto bShouldRefresh = 0x54; // bool
	}

	namespace n_UTBP_ContextualHelp_Tutorial_ShootEntity_C {
		constexpr auto RetriggerTime = 0xf0; // float
		constexpr auto DelayTimer = 0xf8; // FTimerHandle
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UTigerEngineSettings {
		constexpr auto bVerifyGc = 0x38; // bool
		constexpr auto bCreateGameInstanceGcCluster = 0x39; // bool
		constexpr auto AcousticPortalAutoCloseDistance = 0x3c; // float
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_ATigerMatchHUD {
		constexpr auto PromptCollection = 0x3f8; // UTigerPromptCollectionWidget*
		constexpr auto MusicManager = 0x400; // ATigerMusicManager*
		constexpr auto CompassUI = 0x408; // UTigerCompassUI*
		constexpr auto MasqueradeStatus = 0x410; // UTigerMasqueradeStatusWidget*
		constexpr auto ChallengeList = 0x418; // UTigerWidget*
		constexpr auto BloodResonanceUi = 0x420; // UTigerWidget*
		constexpr auto RevivingStatusUI = 0x428; // UTigerRevivingStatusUI*
		constexpr auto ConsumableWheel = 0x430; // UTigerConsumableWheelWidget*
		constexpr auto ClimbPrompt = 0x438; // UTigerWidget*
		constexpr auto LevelOverlay = 0x440; // UTigerWidget*
		constexpr auto YouAreDownedPrompt = 0x448; // UTigerWidget*
		constexpr auto Minimap = 0x450; // UTigerWidget*
		constexpr auto StatusMessage = 0x458; // UTigerWidget*
		constexpr auto InputTray = 0x460; // UTigerWidget*
		constexpr auto OnDropItemAction = 0x468; // FMulticastInlineDelegate
		constexpr auto Disciplines = 0x478; // UTigerDisciplinesUi*
		constexpr auto CapturePointProgressUI = 0x480; // UTigerCapturePointProgressUI*
		constexpr auto WeaponAmmo = 0x488; // UTigerWeaponAmmoWidget*
		constexpr auto PingWheelWidget = 0x490; // UTigerPingWheelWidget*
		constexpr auto Watermark = 0x498; // UTigerWidget*
		constexpr auto SpawnSelectionUi = 0x4a0; // UTigerSpawnPointSelectionUi*
		constexpr auto ArchetypeSelectUi = 0x4a8; // UTigerArchetypeSelectPragueUI*
		constexpr auto PreMatchMapWidget = 0x4b0; // UTigerWidget*
		constexpr auto DeathScreenClass = 0x4b8; // UTigerDeathScreen*
		constexpr auto DeathScreen = 0x4c0; // UTigerDeathScreen*
		constexpr auto InventoryUi = 0x4c8; // UTigerInventoryUI*
		constexpr auto MapUi = 0x4d0; // UTigerMapSubMenu*
		constexpr auto SettingsMenuUi = 0x4d8; // UTigerInputMenuUI*
		constexpr auto PerformanceIndicatorUi = 0x4e0; // UTigerWidget*
		constexpr auto HealthBar = 0x4e8; // UTigerWidget*
		constexpr auto PreMatchUiClasses = 0x4f0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto PreMatchWidgets = 0x510; // TArray<UTigerWidget*>
		constexpr auto PreMatchPaperDollComponent = 0x520; // UTigerPreMatchPaperDollComponent*
	}

	namespace n_UTigerAICommandBase {
		constexpr auto Owner = 0x28; // ATigerAIController*
		constexpr auto WorldReferenceActor = 0x30; // AActor*
		constexpr auto FailSafeMaxTime = 0x38; // float
	}

	namespace n_UTigerReflectConfig {
		constexpr auto ReflectBehaviors = 0x160; // ETigerReflectBehaviour [0x5]
		constexpr auto DamageLetThroughModifier = 0x168; // float
		constexpr auto ReflectSpread = 0x16c; // float
		constexpr auto MaxDuration = 0x170; // float
		constexpr auto BulletReflector = 0x178; // AActor*
		constexpr auto ReflectorRadius = 0x180; // float
		constexpr auto ReflectorHalfHeight = 0x184; // float
		constexpr auto ReflectorCoverageRange = 0x188; // float
		constexpr auto PoseSwapDelay = 0x18c; // float
		constexpr auto ReflectMontageNames = 0x190; // TArray<FName>
		constexpr auto ReflectEndMontageName = 0x1a0; // FName
		constexpr auto bDrawReflectedBulletLines = 0x1a8; // bool
	}

	namespace n_UTigerTooltipWidget {
		constexpr auto OwningWidget = 0x280; // UTigerWidget*
	}

	namespace n_UTigerMapMarkerWidget {
		constexpr auto bShouldUseCustomZOrder = 0x280; // bool
		constexpr auto CustomZOrder = 0x284; // int32_t
		constexpr auto MarkerId = 0x288; // int32_t
		constexpr auto bIsOnMinimap = 0x28c; // bool
		constexpr auto MapMarkerProxy = 0x290; // TWeakObjectPtr<UTigerMapMarkerProxy>
		constexpr auto bStartHidden = 0x2a0; // bool
		constexpr auto CurrentOpacity = 0x2a4; // float
		constexpr auto FadeSpeed = 0x2a8; // float
	}

	namespace n_UTBP_UI_ShotgunCrosshair_2_C {
		constexpr auto UberGraphFrame = 0x380; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_UTigerMapIncenseLine {
		constexpr auto LineLengthParam = 0x260; // FName
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_UTigerPhysicalInteractionDiablerize {
		constexpr auto DiablerizeTime = 0x40; // float
		constexpr auto bInstantInterrupt = 0x44; // bool
		constexpr auto DiablerizeAnimationAsset = 0x48; // UTigerPhysicalInteractionAnimationAsset*
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x228; // UNiagaraSystem*
		constexpr auto ResetMode = 0x230; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x238; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x240; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x248; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x250; // float
		constexpr auto SpacingY = 0x254; // float
		constexpr auto NumX = 0x258; // int32_t
		constexpr auto NumY = 0x25c; // int32_t
		constexpr auto PreviewComponents = 0x260; // TArray<UChildActorComponent*>
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_UTigerAiPlayerAtWpRangeDecorator {
		constexpr auto bConditionInvertedOnTick = 0x68; // bool
	}

	namespace n_UTigerAiSetMovementMode {
		constexpr auto MovementMode = 0x70; // ETigerAIAnimationMode
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x478; // UPaperSprite*
		constexpr auto MaterialOverride = 0x480; // UMaterialInterface*
		constexpr auto SpriteColor = 0x488; // FLinearColor
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UTigerPassiveVentrueOneConfig {
		constexpr auto BuffTypeToApply = 0x118; // UTigerBuff*
		constexpr auto ShockwaveRadius = 0x120; // float
		constexpr auto ShockwaveDamage = 0x124; // float
		constexpr auto CooldownReductionPerPointOfDamage = 0x128; // float
		constexpr auto UsePercentReduction = 0x12c; // bool
		constexpr auto TriggerOnSelfHarm = 0x12d; // bool
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xb0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xb8; // float
		constexpr auto SpawningVolume = 0xc0; // AVolume*
		constexpr auto ProceduralGuid = 0xc8; // FGuid
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x120; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UTigerRejuvenatingVoiceConfig {
		constexpr auto DownedMontage = 0x170; // UAnimMontage*
		constexpr auto DownedCancelMontage = 0x178; // UAnimMontage*
		constexpr auto DownedInterruptMontage = 0x180; // UAnimMontage*
		constexpr auto CancelMontage = 0x188; // UAnimMontage*
		constexpr auto InterruptMontage = 0x190; // UAnimMontage*
		constexpr auto HealingBuff = 0x198; // UTigerBuff*
		constexpr auto ReceivedDamageThreshold = 0x1a0; // float
		constexpr auto CasterHealRange = 0x1a4; // float
		constexpr auto ProjectionHealRange = 0x1a8; // float
		constexpr auto ProjectionHealMultiplier = 0x1ac; // float
		constexpr auto FirstHealMultiplier = 0x1b0; // float
		constexpr auto SelfHealFlat = 0x1b4; // float
		constexpr auto SelfHealPercent = 0x1b8; // float
		constexpr auto TeamHealFlat = 0x1bc; // float
		constexpr auto TeamHealPercent = 0x1c0; // float
		constexpr auto HealTickRate = 0x1c4; // float
		constexpr auto bOnlyHealRecentDamage = 0x1c8; // bool
		constexpr auto bRecentDamageVisibleForGroup = 0x1c9; // bool
		constexpr auto bShouldGlideWhenActive = 0x1ca; // bool
	}

}