// Created by BlueFire1337
// Updated 2022-01-25
// Generated 2022-02-02

namespace off {
	constexpr auto GNames = 0xa19de40;
	constexpr auto GObjects = 0xa1e9c20;
	constexpr auto GWorld = 0xa36d8e0;

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto Animation = 0x38; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x40; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x70; // char : 1
	}

	namespace n_UBP_MainCursor_C { // : UCoreCursor
		constexpr auto Image_80 = 0x268; // UImage*
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x30; // UInterpGroup*
		constexpr auto GroupActor = 0x38; // AActor*
		constexpr auto TrackInst = 0x40; // TArray<UInterpTrackInst*>
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb0; // char : 1
	}

	namespace n_UAB_Menu_Slasher06_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x328; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UBreathingSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isDead = 0x4f0; // bool
		constexpr auto _breathing = 0x4f8; // UAnimSequence*
	}

	namespace n_UAISkill_InteractionTarget_DashAttack { // : UAISkill_InteractionTarget_Dash
		constexpr auto DashAttackUnderMaxRange = 0x220; // float
		constexpr auto DashAttackUnderMaxHalfAngle = 0x224; // float
		constexpr auto ExpectedAttackType = 0x228; // EAttackType
	}

	namespace n_UOpenChestInteraction { // : USearchChestInteractionBase
		constexpr auto _camperSearchablePercentTag = 0x700; // FGameplayTag
		constexpr auto _successExitTimeAnimSequenceReference = 0x710; // UAnimSequence*
		constexpr auto _startTime = 0x718; // float
	}

	namespace n_UBakeTransformTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0x98; // UBakeTransformToolProperties*
	}

	namespace n_UK26CooldownInteractionDefinition { // : UInteractionDefinition
		constexpr auto _cooldownTime = 0x5b0; // FTunableStat
	}

	namespace n_UParticleModuleSizeScaleBySpeed { // : UParticleModuleSizeBase
		constexpr auto SpeedScale = 0x38; // FVector2D
		constexpr auto MaxScale = 0x40; // FVector2D
	}

	namespace n_UPlayerInput { // : UObject
		constexpr auto DebugExecBindings = 0x128; // TArray<FKeyBind>
		constexpr auto ActionMappings = 0x148; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x158; // TArray<FInputAxisKeyMapping>
		constexpr auto InvertedAxis = 0x168; // TArray<FName>
	}

	namespace n_UMagicLeapSettings { // : UObject
		constexpr auto bEnableZI = 0x30; // bool
		constexpr auto bUseVulkanForZI = 0x31; // bool
		constexpr auto bUseMLAudioForZI = 0x32; // bool
	}

	namespace n_UArmIKSensorComponent { // : UActorComponent
		constexpr auto _mesh = 0xb8; // USkeletalMeshComponent*
		constexpr auto _arms = 0xc0; // TMap<EArm, FArmIKSensorDatum>
		constexpr auto _capsuleRadius = 0x110; // float
		constexpr auto _capsuleHalfHeight = 0x114; // float
		constexpr auto _traceLength = 0x118; // float
		constexpr auto _owningCamera = 0x120; // UCameraComponent*
	}

	namespace n_UPolyEditExtrudeProperties { // : UInteractiveToolPropertySet
		constexpr auto Direction = 0x58; // EPolyEditExtrudeDirection
	}

	namespace n_UDoctorPowerAnimStateComponent { // : UActorComponent
		constexpr auto _abilityType = 0xb8; // EDoctorAbilityType
		constexpr auto _abilityPhase = 0xb9; // EDoctorAbilityPhase
	}

	namespace n_UUMGHudEditorVersionWidget { // : UUserWidget
		constexpr auto VersionButton = 0x260; // UButton*
		constexpr auto _onEditWidget = 0x268; // UUMGDragWidget_HudEditor*
	}

	namespace n_UUMGTallyScoreboardWidget { // : UUMGTallyListElementWidget
		constexpr auto OnTallyScoreboardAddFriendEvent = 0x310; // FMulticastInlineDelegate
		constexpr auto OnTallyScoreboardReportEvent = 0x320; // FMulticastInlineDelegate
		constexpr auto LabelTextRank = 0x330; // FText
		constexpr auto LabelTextScore = 0x348; // FText
		constexpr auto LabelTextStatus = 0x360; // FText
		constexpr auto KillerWidget = 0x378; // UUMGTallyScoreboardPlayerInfoWidget*
		constexpr auto FirstSurvivorWidget = 0x380; // UUMGTallyScoreboardPlayerInfoWidget*
		constexpr auto SecondSurvivorWidget = 0x388; // UUMGTallyScoreboardPlayerInfoWidget*
		constexpr auto ThirdSurvivorWidget = 0x390; // UUMGTallyScoreboardPlayerInfoWidget*
		constexpr auto FourthSurvivorWidget = 0x398; // UUMGTallyScoreboardPlayerInfoWidget*
		constexpr auto SurvivorWidgets = 0x3a0; // TArray<UUMGTallyScoreboardPlayerInfoWidget*>
	}

	namespace n_UBrushRemeshProperties { // : URemeshProperties
		constexpr auto bEnableRemeshing = 0x68; // bool
		constexpr auto TriangleSize = 0x6c; // int32_t
		constexpr auto PreserveDetail = 0x70; // int32_t
	}

	namespace n_UBloodEcho { // : UPerk
		constexpr auto _statusEffectDurationTag = 0x3d0; // FGameplayTag
		constexpr auto _cooldownDuration = 0x3dc; // float [0x3]
	}

	namespace n_UCamperMovementComponent { // : UDBDCharacterMovementComponent
		constexpr auto MaxCrawlSpeed = 0x8f0; // float
		constexpr auto MaxRunSpeed = 0x8f4; // float
		constexpr auto _defaultRotationRate = 0x8f8; // FRotator
		constexpr auto _rotationRateWhileCrawling = 0x904; // FRotator
	}

	namespace n_UK25ChainStrikeState_ShootControlledProjectile { // : UK25ChainStrikeBaseState
		constexpr auto _minimumThrottleTimeForInputServerCall = 0xc8; // float
		constexpr auto _inputResetSpeed = 0xcc; // float
	}

	namespace n_UGFxEngine { // : UObject
		constexpr auto GCReferences = 0x30; // TArray<FGCReference>
		constexpr auto RefCount = 0x40; // int32_t
	}

	namespace n_UFootGroundDetectorComponent { // : UBaseGroundDetectorComponent
		constexpr auto _hipTransformName = 0x1d0; // FName
		constexpr auto _slopeStartOffset = 0x1dc; // FVector
		constexpr auto _footLength = 0x1e8; // float
		constexpr auto _traceRadius = 0x1ec; // float
		constexpr auto _maxWalkableSlopeAngle = 0x1f0; // float
		constexpr auto _movementComp = 0x1f8; // UCharacterMovementComponent*
	}

	namespace n_AARSharedWorldGameState { // : AGameState
		constexpr auto PreviewImageData = 0x2a8; // TArray<char>
		constexpr auto ARWorldData = 0x2b8; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x2c8; // int32_t
		constexpr auto ARWorldBytesTotal = 0x2cc; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x2d0; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x2d4; // int32_t
	}

	namespace n_UBaseMediaSource { // : UMediaSource
		constexpr auto playerName = 0x88; // FName
	}

	namespace n_UButtonStyleAsset { // : UObject
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0x98; // EInterpMoveAxis
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
	}

	namespace n_UMaterialExpressionBlackBody { // : UMaterialExpression
		constexpr auto TEMP = 0x48; // FExpressionInput
	}

	namespace n_UAnimClassData { // : UObject
		constexpr auto BakedStateMachines = 0x38; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x48; // USkeleton*
		constexpr auto AnimNotifies = 0x50; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x60; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xb0; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xc0; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xd0; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xf0; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x110; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x130; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x150; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x170; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x190; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1b0; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x200; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x210; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x220; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_UDatasmithPointLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto IntensityUnits = 0x38; // ELightUnits
		constexpr auto SourceRadius = 0x3c; // float
		constexpr auto SourceLength = 0x40; // float
		constexpr auto AttenuationRadius = 0x44; // float
	}

	namespace n_UNiagaraDataInterfaceParticleRead { // : UNiagaraDataInterface
		constexpr auto EmitterName = 0x38; // FString
	}

	namespace n_UDBDAggregateParticleSystemComponent { // : UParticleSystemComponent
		constexpr auto CullAngle = 0x6a8; // float
		constexpr auto EndFadeDistance = 0x6ac; // float
		constexpr auto LocatorComponentCache = 0x6b0; // TSet<USceneComponent*>
		constexpr auto PendingReset = 0x700; // bool
	}

	namespace n_UNiagaraDataInterfaceVectorField { // : UNiagaraDataInterface
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UGlyphNavMovementComponent { // : UNavMovementComponent
		constexpr auto _glyphOwner = 0x140; // AActor*
		constexpr auto _pathFollowingComponent = 0x148; // UPathFollowingComponent*
		constexpr auto bPositionCorrected = 0x150; // char : 1
		constexpr auto _maxSpeed = 0x154; // float
		constexpr auto _acceleration = 0x158; // float
		constexpr auto _deceleration = 0x15c; // float
		constexpr auto _brakingDeceleration = 0x160; // float
	}

	namespace n_UPhaseWalkingComponent { // : UActorComponent
		constexpr auto OnPhaseWalkInfoReceived = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnGameEndedVFX = 0xc8; // FMulticastInlineDelegate
		constexpr auto TriggerSurvivorVisibilityVFX = 0xd8; // FMulticastInlineDelegate
		constexpr auto TriggerKillerVisibilityVFX = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnMaxActivePhaseWalkCharges = 0xf8; // FMulticastInlineDelegate
		constexpr auto _huskClass = 0x108; // AActor*
		constexpr auto _isActivePhaseWalking = 0x110; // FTagStateBool
		constexpr auto _isPassivePhaseWalking = 0x140; // FTagStateBool
		constexpr auto _isInteractionPhaseWalking = 0x170; // bool
		constexpr auto _husk = 0x178; // AActor*
		constexpr auto _activePhaseWalkCharges = 0x180; // FDBDBidirectionalTimer
		constexpr auto _survivorsAreVisible = 0x1d0; // bool
		constexpr auto _passivePhaseWalkHusksCount = 0x208; // int32_t
		constexpr auto _activePhaseWalkChargeGainRate = 0x210; // FTunableStat
		constexpr auto _passivePhaseWalkDuration = 0x290; // FTunableStat
		constexpr auto _passivePhaseWalkFirstCooldownDuration = 0x310; // FDBDTunableRowHandle
		constexpr auto _passivePhaseWalkCooldownDurationMin = 0x338; // FTunableStat
		constexpr auto _passivePhaseWalkCooldownDurationMax = 0x3b8; // FTunableStat
		constexpr auto _activePhaseWalkMaxCharge = 0x438; // FTunableStat
		constexpr auto _activePhaseWalkMaxAcceleration = 0x4b8; // FDBDTunableRowHandle
		constexpr auto _defaultMaxAcceleration = 0x4e0; // FDBDTunableRowHandle
	}

	namespace n_UUMGTallyEmblemMarker { // : UMobileBaseUserWidget
		constexpr auto QualityImage = 0x300; // UImage*
		constexpr auto _qualityImages = 0x308; // TMap<EEmblemQuality, FEmblemQualityImages>
	}

	namespace n_ULuckyBreak { // : UPerk
		constexpr auto _activationTime = 0x3d0; // float [0x3]
	}

	namespace n_UHexBloodFavor { // : UHexPerk
		constexpr auto _palletInRange = 0x440; // float [0x3]
		constexpr auto _palletPulldownBlockTime = 0x44c; // float [0x3]
	}

	namespace n_UExistingMeshMaterialProperties { // : UInteractiveToolPropertySet
		constexpr auto MaterialMode = 0x58; // ESetMeshMaterialMode
		constexpr auto CheckerDensity = 0x5c; // float
		constexpr auto OverrideMaterial = 0x60; // UMaterialInterface*
		constexpr auto CheckerMaterial = 0x68; // UMaterialInstanceDynamic*
	}

	namespace n_UActorSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x350; // UMovieScene*
		constexpr auto ObjectReferences = 0x358; // FActorSequenceObjectReferenceMap
	}

	namespace n_UModularSynthPresetBank { // : UObject
		constexpr auto Presets = 0x30; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UDBDPersistentData { // : UObject
		constexpr auto _gamePersistentData = 0x30; // FGamePersistentData
		constexpr auto _keepDataIDs = 0x130; // TArray<FString>
		constexpr auto _playerIdToPersistentDataMap = 0x140; // TMap<FString, FPlayerPersistentData>
		constexpr auto _localPlayerPersistentData = 0x190; // FPlayerPersistentData
		constexpr auto _cloudInventory = 0x930; // TArray<FCloudInventoryItem>
	}

	namespace n_UUMGAtlantaDailyRewardsScreen { // : UMobileBaseUserWidget
		constexpr auto DailyRewardWidgetsGrid = 0x310; // UUMGAtlantaDailyRewardsGrid*
		constexpr auto ContinueButtonPanel = 0x318; // UCanvasPanel*
		constexpr auto ContinueButton = 0x320; // UUMGPopupButton*
		constexpr auto RemainingTimeTextBlock = 0x328; // UTextBlock*
		constexpr auto NormalColor = 0x330; // FSlateColor
		constexpr auto WarningColor = 0x358; // FSlateColor
	}

	namespace n_UUMGRewardSlotTutorialPopupRewardWidget { // : UMobileBaseUserWidget
		constexpr auto RewardText = 0x300; // UTextBlock*
		constexpr auto RewardPicture = 0x308; // UImage*
		constexpr auto UnlockedPanel = 0x310; // UWidget*
		constexpr auto MissedRewardPanel = 0x318; // UWidget*
		constexpr auto RewardUnlockedTextOpacity = 0x320; // float
		constexpr auto RewardToBeMissedTextOpacity = 0x324; // float
	}

	namespace n_UWidgetInteractionComponent { // : USceneComponent
		constexpr auto OnHoveredWidgetChanged = 0x210; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x230; // int32_t
		constexpr auto PointerIndex = 0x234; // float
		constexpr auto TraceChannel = 0x238; // ECollisionChannel
		constexpr auto InteractionDistance = 0x23c; // float
		constexpr auto InteractionSource = 0x240; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x241; // bool
		constexpr auto bShowDebug = 0x242; // bool
		constexpr auto DebugColor = 0x244; // FLinearColor
		constexpr auto CustomHitResult = 0x2d0; // FHitResult
		constexpr auto LocalHitLocation = 0x360; // FVector2D
		constexpr auto LastLocalHitLocation = 0x368; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x370; // UWidgetComponent*
		constexpr auto LastHitResult = 0x378; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x408; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x409; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x40a; // bool
	}

	namespace n_UUMGStorefrontCustomizationWidget { // : UUMGPromoPackItemWidget
		constexpr auto CustomizationQuantityText = 0x468; // UTextBlock*
		constexpr auto CustomizationQuantityPanel = 0x470; // UCanvasPanel*
	}

	namespace n_UBTService_BlueprintBase { // : UBTService
		constexpr auto AIOwner = 0x78; // AAIController*
		constexpr auto ActorOwner = 0x80; // AActor*
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bShowEventDetails = 0x98; // char : 1
	}

	namespace n_UActorDetectorComponent { // : UActorComponent
		constexpr auto OnActorDetected = 0xb8; // FMulticastInlineDelegate
		constexpr auto CollectedTypes = 0xc8; // TArray<UObject*>
		constexpr auto _primitive = 0xd8; // UPrimitiveComponent*
	}

	namespace n_UChargeTwinJumpInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chargeJumpMaxCharge = 0x720; // FDBDTunableRowHandle
		constexpr auto _interactionViewPitchMax = 0x748; // FDBDTunableRowHandle
		constexpr auto _interactionViewPitchMin = 0x770; // FDBDTunableRowHandle
		constexpr auto _cancelCooldownTime = 0x7c0; // FDBDTunableRowHandle
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x30; // float
	}

	namespace n_AWheeledVehicle { // : APawn
		constexpr auto Mesh = 0x290; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x298; // UWheeledVehicleMovementComponent*
	}

	namespace n_UUMGCustomizationItemBuyButton { // : UUMGCustomizationItemPriceWidget
		constexpr auto CurrencyColorStripe = 0x410; // UImage*
		constexpr auto _currencyStripeColors = 0x418; // TMap<ECurrencyType, FColor>
		constexpr auto _disabledOpacity = 0x468; // FLinearColor
		constexpr auto _enabledOpacity = 0x478; // FLinearColor
	}

	namespace n_UBP_Audio_KLR_Base_C { // : UKillerAudioHandlerComponent
		constexpr auto UberGraphFrame = 0xb8; // FPointerToUberGraphFrame
		constexpr auto _killerAudioBank = 0xc0; // UAkAudioBank*
		constexpr auto _defaultAudioStatusStartEvent = 0xc8; // UAkAudioEvent*
		constexpr auto _audioComponent = 0xd0; // UAkComponent*
		constexpr auto _isInMenu = 0xd8; // bool
		constexpr auto _audioCharacterName = 0xdc; // FName
		constexpr auto _audioStartEvent = 0xe8; // UAkAudioEvent*
	}

	namespace n_UUMGReceivedFriendRequestListElement { // : UUMGBaseFriendListElement
		constexpr auto FriendRequestStatusRichText = 0x3c0; // URichTextBlock*
	}

	namespace n_ULockerFakeEnterInteraction { // : UInteractionDefinition
		constexpr auto _lockerInteractionBlockTime = 0x5b0; // float
		constexpr auto _owningLocker = 0x5b8; // ALocker*
		constexpr auto _fakeEnterLoudNoiseRange = 0x5c0; // FDBDTunableRowHandle
	}

	namespace n_UCoreScreenIndicatorWidget { // : UCoreBaseUserWidget
		constexpr auto InactiveTime = 0x2d8; // float
		constexpr auto IndicatorPadding = 0x2dc; // FVector2D
		constexpr auto DistanceClamping = 0x2e4; // FVector2D
		constexpr auto MinDistanceRatio = 0x2ec; // float
		constexpr auto MinDistanceAlpha = 0x2f0; // float
	}

	namespace n_ULevelSequenceDirector { // : UObject
		constexpr auto Player = 0x30; // ULevelSequencePlayer*
	}

	namespace n_UBTDecorator_TimeLimit { // : UBTDecorator
		constexpr auto TimeLimit = 0x70; // float
	}

	namespace n_UUMGTallyEmblemWidget { // : UMobileBaseUserWidget
		constexpr auto _emblemBackgrounds = 0x300; // TMap<EEmblemQuality, UTexture2D*>
		constexpr auto BackgroundImage = 0x350; // UImage*
		constexpr auto IconImage = 0x358; // UImage*
	}

	namespace n_ULocomotionSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isRecoveringWhileCrawling = 0x4f0; // bool
		constexpr auto _isTenacityPerkActive = 0x4f1; // bool
		constexpr auto _wasStandingResetTime = 0x4f4; // float
		constexpr auto _wasRunningResetTime = 0x4f8; // float
		constexpr auto _wasCrouchingResetTime = 0x4fc; // float
		constexpr auto _wasMovingResetTime = 0x500; // float
		constexpr auto _isIdle = 0x504; // bool
		constexpr auto _recentlyIdleCooldownTime = 0x508; // float
		constexpr auto _recentlyNotIdleCooldownTime = 0x50c; // float
		constexpr auto _wasIdleRecently = 0x510; // bool
		constexpr auto _idleInterupt = 0x511; // bool
		constexpr auto _isAgainstSmallKiller = 0x512; // bool
		constexpr auto _isMoving = 0x513; // bool
		constexpr auto _wasRunning = 0x514; // bool
		constexpr auto _isRunning = 0x515; // bool
		constexpr auto _wasCrouching = 0x516; // bool
		constexpr auto _isCrouching = 0x517; // bool
		constexpr auto _wasStanding = 0x518; // bool
		constexpr auto _isStanding = 0x519; // bool
		constexpr auto _isCrawling = 0x51a; // bool
		constexpr auto _isDead = 0x51b; // bool
		constexpr auto _walkAnimSpeed = 0x51c; // float
		constexpr auto _walkAnimStartOffset = 0x520; // float
		constexpr auto _walkAnimPlayRateMultiplier = 0x524; // float
		constexpr auto _wasLastDamageSourceDeepWounds = 0x528; // bool
		constexpr auto _isStrafing = 0x529; // bool
		constexpr auto _isUsingDeadHard = 0x52a; // bool
		constexpr auto _direction = 0x52c; // float
		constexpr auto _isUsingAimItem = 0x530; // bool
		constexpr auto _isBeingCarried = 0x531; // bool
		constexpr auto _isInDeathBed = 0x532; // bool
		constexpr auto _aimOffsetPitch = 0x534; // float
		constexpr auto _turn180Active = 0x538; // bool
		constexpr auto _turningRight = 0x539; // bool
		constexpr auto _start180Active = 0x53a; // bool
		constexpr auto _aimOffsetYawInterpolated = 0x53c; // float
		constexpr auto _allowLookAt = 0x540; // bool
		constexpr auto _isDrasticAimOffsetYawChangeDetected = 0x541; // bool
		constexpr auto _aimOffsetYawClampValue = 0x544; // float
		constexpr auto _maxParadiseWalkCycleOffSet = 0x548; // float
		constexpr auto _minParadiseWalkPlayRateMultiplier = 0x550; // float
		constexpr auto _turn180DetectionPrecision = 0x558; // float
		constexpr auto _turn180DetectionDeadZone = 0x55c; // float
		constexpr auto _turn180PrevVelocitiesCacheDuration = 0x560; // float
		constexpr auto _minDurationBetweenTurn180Detection = 0x564; // float
		constexpr auto _start180DetectionPrecision = 0x568; // float
		constexpr auto _idleDurationFor180StartDetection = 0x56c; // float
		constexpr auto _durationBeforeStart180Reset = 0x570; // float
	}

	namespace n_UKillerConditionalSpeedCurveEffect { // : UStatusEffect
		constexpr auto _speedCurve = 0x350; // UCurveFloat*
	}

	namespace n_USoundSubmix { // : USoundSubmixWithParentBase
		constexpr auto bMuteWhenBackgrounded = 0x48; // char : 1
		constexpr auto SubmixEffectChain = 0x50; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x60; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x68; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x6c; // int32_t
		constexpr auto OutputVolume = 0x70; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UAB_Menu_Slasher08_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
		constexpr auto Hatchet = 0x648; // UStaticMesh*
	}

	namespace n_APaperGroupedSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x230; // UPaperGroupedSpriteComponent*
	}

	namespace n_UAkSwitchInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithCommSelection
		constexpr auto AdvancedSettings = 0xc0; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UK24AnimInstance { // : UKillerAnimInstance
		constexpr auto _isInPowerMode = 0x5a8; // bool
		constexpr auto _isChargingPower = 0x5a9; // bool
		constexpr auto _isK24PowerAttacking = 0x5aa; // bool
		constexpr auto _isRequestingPowerAttack = 0x5ab; // bool
		constexpr auto _powerLevel = 0x5ac; // int32_t
	}

	namespace n_UAnniversary2021EventComponent { // : URespawningEventComponent
		constexpr auto _interactionRespawnableTrigger = 0xc8; // UInteractionRespawnableTrigger*
		constexpr auto _timedRespawnableTrigger = 0xd0; // UTimedRespawnableTrigger*
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x58; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UBlendSpace1D { // : UBlendSpaceBase
		constexpr auto bScaleAnimation = 0x150; // bool
	}

	namespace n_UUMGPromoPackItemWidget { // : UUMGBaseButtonWidget
		constexpr auto SelectedPanel = 0x430; // UCanvasPanel*
		constexpr auto BackgroundPanel = 0x438; // UCanvasPanel*
		constexpr auto AmountPanel = 0x440; // UCanvasPanel*
	}

	namespace n_UUMGFriendListTabWidget { // : UUMGFriendBaseTabListWidget
		constexpr auto SentInviteToParty = 0x300; // UUMGExpandableListWidget*
		constexpr auto ConnectedFriendsExpandableList = 0x308; // UUMGExpandableListWidget*
		constexpr auto DisconnectedFriendsExpandableList = 0x310; // UUMGExpandableListWidget*
	}

	namespace n_UDemogorgonHuskAnimInstance { // : UAnimInstance
		constexpr auto _teleportDuration = 0x270; // float
		constexpr auto _teleportExitPlayRate = 0x274; // float
		constexpr auto _isSlowerExit = 0x278; // bool
		constexpr auto _huskPortalSlowerExit = 0x280; // UAnimSequence*
		constexpr auto _huskPortalExit = 0x288; // UAnimSequence*
		constexpr auto _demogorgonPortalExit = 0x290; // UAnimMontage*
		constexpr auto _demogorgonPortalEntry = 0x298; // UAnimMontage*
		constexpr auto _owningPawn = 0x2a0; // APawn*
		constexpr auto _demogorgonPortalPlacerState = 0x2a8; // TWeakObjectPtr<UPortalPlacerStateComponent>
	}

	namespace n_AFoliageDensityContainer { // : AActor
		constexpr auto _foliageActors = 0x230; // TMap<FName, AFoliageActor*>
		constexpr auto _foliageHISMs = 0x280; // TMap<FName, UFoliageDensityHISM*>
		constexpr auto _mapFoliageDensityTunables = 0x320; // UDBDMapFoliageDensityTunables*
	}

	namespace n_UDatasmithFBXSceneImportData { // : UDatasmithSceneImportData
		constexpr auto bGenerateLightmapUVs = 0x30; // bool
		constexpr auto TexturesDir = 0x38; // FString
		constexpr auto IntermediateSerialization = 0x48; // char
		constexpr auto bColorizeMaterials = 0x49; // bool
	}

	namespace n_UK26IsSurvivorInRangeOfAnyIdleCrow { // : UEventDrivenModifierCondition
		constexpr auto OnIsTrueChanged = 0xe8; // FMulticastInlineDelegate
	}

	namespace n_UMediaPlayer { // : UObject
		constexpr auto OnEndReached = 0x30; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x40; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x50; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x60; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x80; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x90; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0xa0; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xb0; // FTimespan
		constexpr auto CacheBehind = 0xb8; // FTimespan
		constexpr auto CacheBehindGame = 0xc0; // FTimespan
		constexpr auto NativeAudioOut = 0xc8; // bool
		constexpr auto PlayOnOpen = 0xc9; // bool
		constexpr auto Shuffle = 0xcc; // char : 1
		constexpr auto Loop = 0xcc; // char : 1
		constexpr auto Playlist = 0xd0; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd8; // int32_t
		constexpr auto TimeDelay = 0xe0; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe8; // float
		constexpr auto VerticalFieldOfView = 0xec; // float
		constexpr auto ViewRotation = 0xf0; // FRotator
		constexpr auto PlayerGuid = 0x128; // FGuid
	}

	namespace n_UWheeledVehicleMovementComponent4W { // : UWheeledVehicleMovementComponent
		constexpr auto EngineSetup = 0x2a0; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x340; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x35c; // float
		constexpr auto TransmissionSetup = 0x360; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x390; // FRuntimeFloatCurve
	}

	namespace n_UVehicleAnimInstance { // : UAnimInstance
		constexpr auto WheeledVehicleMovementComponent = 0x970; // UWheeledVehicleMovementComponent*
	}

	namespace n_ASearchable { // : AInteractable
		constexpr auto Weight = 0x338; // float
		constexpr auto ItemRarity = 0x33c; // EItemRarity
		constexpr auto OnSearchedChanged = 0x340; // FMulticastInlineDelegate
		constexpr auto _searchableSpawnPoint = 0x350; // USearchableSpawnPoint*
		constexpr auto _itemIdToSpawn = 0x358; // FName
		constexpr auto _hasBeenSearched = 0x364; // bool
		constexpr auto _itemInsideSearchable = 0x368; // ACollectable*
		constexpr auto _numberOfSearchesWhileOpenPerPlayer = 0x370; // TMap<ADBDPlayer*, char>
	}

	namespace n_UMagicLeapARPinSettings { // : UObject
		constexpr auto UpdateCheckFrequency = 0x30; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x34; // FMagicLeapARPinState
	}

	namespace n_UDisciplineEffect { // : UStatusEffect
		constexpr auto _deactivationDelay = 0x350; // float
	}

	namespace n_AIntervalGizmoActor { // : AGizmoActor
		constexpr auto UpIntervalComponent = 0x230; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x238; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x240; // UGizmoLineHandleComponent*
	}

	namespace n_UAB_Menu_Slasher10_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UQosRegionManager { // : UObject
		constexpr auto NumTestsPerRegion = 0x30; // int32_t
		constexpr auto PingTimeout = 0x34; // float
		constexpr auto RegionDefinitions = 0x38; // TArray<FQosRegionInfo>
		constexpr auto DatacenterDefinitions = 0x48; // TArray<FQosDatacenterInfo>
		constexpr auto LastCheckTimestamp = 0x58; // FDateTime
		constexpr auto Evaluator = 0x60; // UQosEvaluator*
		constexpr auto QosEvalResult = 0x68; // EQosCompletionResult
		constexpr auto RegionOptions = 0x70; // TArray<FRegionQosInstance>
		constexpr auto ForceRegionId = 0x80; // FString
		constexpr auto bRegionForcedViaCommandline = 0x90; // bool
		constexpr auto SelectedRegionId = 0x98; // FString
	}

	namespace n_UBloodOrbStateMonitorComponent { // : UActorComponent
		constexpr auto OnBloodOrbAbsorbedCosmetic = 0xb8; // FMulticastInlineDelegate
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x30; // UInterpGroup*
		constexpr auto AnimLength = 0x38; // float
		constexpr auto BoundingBox = 0x3c; // FBox
		constexpr auto bRelativeToInitialTransform = 0x58; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x58; // char : 1
		constexpr auto BaseFOV = 0x5c; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5a0; // float
	}

	namespace n_UPoised { // : UPerk
		constexpr auto _activationTime = 0x3d0; // float [0x3]
	}

	namespace n_UGeneratorToolboxRepairInteraction { // : UGeneratorRepairInteraction
		constexpr auto _interactionTextWhenEmpty = 0x758; // FText
		constexpr auto _repairSkillCheckDurationWhenEmpty = 0x770; // FDBDTunableRowHandle
		constexpr auto _repairSkillCheckChanceWhenEmpty = 0x798; // FDBDTunableRowHandle
	}

	namespace n_UChaosSolverSettings { // : UDeveloperSettings
		constexpr auto DefaultChaosSolverActorClass = 0x50; // FSoftClassPath
	}

	namespace n_UBlessedStatusEffect { // : UStatusEffect
		constexpr auto _vignetteControllerBlueprint = 0x358; // UBlessedVignetteController*
	}

	namespace n_UAISubsystem { // : UObject
		constexpr auto AISystem = 0x38; // UAISystem*
	}

	namespace n_UCheckBoxStyleAsset { // : UObject
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UAkLateReverbComponent { // : USceneComponent
		constexpr auto bEnable = 0x210; // char : 1
		constexpr auto AuxBus = 0x218; // UAkAuxBus*
		constexpr auto AuxBusName = 0x220; // FString
		constexpr auto SendLevel = 0x230; // float
		constexpr auto FadeRate = 0x234; // float
		constexpr auto Priority = 0x238; // float
		constexpr auto NextLowerPriorityComponent = 0x240; // UAkLateReverbComponent*
	}

	namespace n_UTileBank { // : UObject
		constexpr auto _allTileBlueprints = 0x120; // TArray<ATile*>
	}

	namespace n_UBlastMineTrapComponent { // : UActorComponent
		constexpr auto _isTrapActive = 0xb8; // bool
	}

	namespace n_UBTTask_MoveDirectlyToward { // : UBTTask_MoveTo
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xc0; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xc0; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xc0; // char : 1
	}

	namespace n_AK25UncontrolledProjectile { // : AK25Projectile
		constexpr auto OnAcquiredChanged = 0x438; // FMulticastInlineDelegate
		constexpr auto _minimumTimeBeforeProjectileLaunch = 0x448; // FDBDTunableRowHandle
		constexpr auto _maximumTimeBeforeProjectileLaunch = 0x470; // FDBDTunableRowHandle
		constexpr auto _projectileSpeed = 0x498; // FDBDTunableRowHandle
		constexpr auto _projectileMaximumTravelDistance = 0x4c0; // FDBDTunableRowHandle
		constexpr auto _isAcquiredFromPool = 0x4e8; // bool
		constexpr auto _targetSurvivor = 0x520; // ACamperPlayer*
	}

	namespace n_UCamperHealthComponent { // : UActorComponent
		constexpr auto OnHealedDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnInjuredBleedoutStarted = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnInjuredBleedoutEnded = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnInjuredBleedoutKO = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnDamageStateChanged = 0x128; // FMulticastInlineDelegate
		constexpr auto OnDamageStateChangedCosmetic = 0x138; // FMulticastInlineDelegate
		constexpr auto _bleedoutBaseDuration = 0x148; // FDBDTunableRowHandle
		constexpr auto _inInjuredBleedOut = 0x170; // FTagStateBool
		constexpr auto _bleedOutTimer = 0x1a0; // FDBDTimer
		constexpr auto _canBleedout = 0x1c8; // bool
		constexpr auto _pauseInjuredBleedoutTimerInteractions = 0x1d0; // TArray<UInteractionDefinition*>
		constexpr auto _currentHealthStateCount = 0x1e0; // int32_t
		constexpr auto _numHealthyHeals = 0x1e8; // int32_t
		constexpr auto _dyingTimer = 0x1f0; // FDBDTimer
		constexpr auto _healFromDyingChargeable = 0x220; // UChargeableComponent*
		constexpr auto _healFromInjuredChargeable = 0x228; // UChargeableComponent*
		constexpr auto _mendChargeable = 0x230; // UChargeableComponent*
		constexpr auto _injuredBleedoutInstigator = 0x238; // ADBDPlayer*
	}

	namespace n_UDBDAggregateParticleLocatorComponent { // : UDBDLocatorComponent
		constexpr auto Template = 0x210; // UParticleSystem*
		constexpr auto _particleComponent = 0x218; // UParticleSystemComponent*
	}

	namespace n_UVaultableOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto _canBeRevealedToLocalPlayer = 0x130; // bool
	}

	namespace n_UBTTask_WaitBlackboardTime { // : UBTTask_Wait
		constexpr auto BlackboardKey = 0x80; // FBlackboardKeySelector
	}

	namespace n_URootContainer { // : UUIComponent
		constexpr auto RootWidgetClass = 0xb8; // UUserWidget*
		constexpr auto UnfocusedOpacity = 0xc0; // float
		constexpr auto _rootWidget = 0xc8; // UUserWidget*
	}

	namespace n_UAkMediaAssetData { // : UObject
		constexpr auto IsStreamed = 0x30; // bool
		constexpr auto UseDeviceMemory = 0x31; // bool
	}

	namespace n_UDBDPrimaryDataAsset { // : UPrimaryDataAsset
		constexpr auto AssetType = 0x38; // FPrimaryAssetType
	}

	namespace n_UAchievementQueryCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UBTService_StateMonitor { // : UBTService
		constexpr auto BBIsIntroCompleted = 0x78; // FBlackboardKeySelector
		constexpr auto BBDifficultyLevel = 0xa8; // FBlackboardKeySelector
	}

	namespace n_ATormentAttackTrailPoint { // : ABaseTormentTrailPoint
		constexpr auto _attackPointDelayToEnableCollision = 0x360; // FDBDTunableRowHandle
	}

	namespace n_ALevelBounds { // : AActor
		constexpr auto BoxComponent = 0x230; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x238; // bool
	}

	namespace n_UVirtualKeyboardManager { // : UObject
		constexpr auto _virtualKeyboard = 0x30; // UVirtualKeyboard*
	}

	namespace n_UGMAdaptiveShadowMapSource { // : UObject
		constexpr auto _atlas = 0x30; // UGMAdaptiveShadowMapAtlas*
		constexpr auto _lightComponent = 0x38; // ULightComponent*
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x48; // char : 1
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent { // : UVRNotificationsComponent
		constexpr auto OnHeadTrackingLost = 0x148; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x158; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x168; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x178; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithCineCameraActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LookatTrackingSettings = 0x38; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto Material = 0x30; // UMaterial*
		constexpr auto Function = 0x38; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x40; // char : 1
	}

	namespace n_UMovieSceneAkTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
		constexpr auto bIsAMasterTrack = 0x70; // char : 1
	}

	namespace n_UPawnSensingComponent { // : UActorComponent
		constexpr auto HearingThreshold = 0xb8; // float
		constexpr auto LOSHearingThreshold = 0xbc; // float
		constexpr auto SightRadius = 0xc0; // float
		constexpr auto SensingInterval = 0xc4; // float
		constexpr auto HearingMaxSoundAge = 0xc8; // float
		constexpr auto bEnableSensingUpdates = 0xcc; // char : 1
		constexpr auto bOnlySensePlayers = 0xcc; // char : 1
		constexpr auto bSeePawns = 0xcc; // char : 1
		constexpr auto bHearNoises = 0xcc; // char : 1
		constexpr auto OnSeePawn = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xe8; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0xf8; // float
		constexpr auto PeripheralVisionCosine = 0xfc; // float
	}

	namespace n_AConjoinedTwinInteractable { // : APlayerInteractable
		constexpr auto _possessKillerChargeable = 0x348; // UChargeableComponent*
		constexpr auto _chargeTwinJumpChargeable = 0x350; // UChargeableComponent*
		constexpr auto _removeTwinChargeable = 0x358; // UChargeableComponent*
		constexpr auto _destroyTwinChargeable = 0x360; // UChargeableComponent*
	}

	namespace n_AAudioVolume { // : AVolume
		constexpr auto Priority = 0x268; // float
		constexpr auto bEnabled = 0x26c; // char : 1
		constexpr auto Settings = 0x270; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x290; // FInteriorSettings
	}

	namespace n_UPathStrategySelector { // : UObject
		constexpr auto _aiOwner = 0x38; // ADBDAIBTController*
		constexpr auto _activePathStrategies = 0x40; // TArray<UPathStrategy*>
		constexpr auto _nextPathStrategies = 0x50; // TArray<UPathStrategy*>
	}

	namespace n_UDBDSpringArmComponent { // : USpringArmComponent
		constexpr auto bEnableComponentwiseCameraLag = 0x2a0; // char : 1
		constexpr auto ComponenwiseCameraLagSpeed = 0x2a4; // FVector
		constexpr auto TargetArmMinLength = 0x2b0; // float
		constexpr auto bEnableDistanceCameraLag = 0x2b4; // char : 1
		constexpr auto CameraDistanceLagSpeed = 0x2b8; // float
		constexpr auto bDrawDebugTraceMarkers = 0x2c0; // char : 1
		constexpr auto ignoreActors = 0x2c8; // TArray<TWeakObjectPtr<AActor>>
	}

	namespace n_UPanelSlot { // : UVisual
		constexpr auto Parent = 0x30; // UPanelWidget*
		constexpr auto Content = 0x38; // UWidget*
	}

	namespace n_UAtlantaRoleSelectionScreen { // : UScreenBase
		constexpr auto _umgScreen = 0x120; // UUMGRoleSelectionScreen*
	}

	namespace n_UMaterialExpressionReroute { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto ResetVector = 0x60; // FVector
	}

	namespace n_UQosEvaluator { // : UObject
		constexpr auto bInProgress = 0x50; // bool
		constexpr auto bCancelOperation = 0x51; // bool
		constexpr auto Datacenters = 0x58; // TArray<FDatacenterQosInstance>
	}

	namespace n_UWalesCypherParameters { // : UDataAsset
		constexpr auto AUDIO_EVENT = 0x38; // FString
		constexpr auto SLASHER_INDEX = 0x48; // int32_t
		constexpr auto CAMPER_INDEX = 0x4c; // int32_t
	}

	namespace n_USurvivorAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto CamperPlayer = 0x4f0; // ACamperPlayer*
		constexpr auto IsHooked = 0x4f8; // bool
		constexpr auto IsSacrificeStruggling = 0x4f9; // bool
		constexpr auto MontageMadnessTierUp = 0x500; // UAnimMontage*
		constexpr auto ArrayCarryAttackMontage = 0x508; // TArray<UAnimCompositeBase*>
		constexpr auto _isFrightScreaming = 0x518; // bool
		constexpr auto IsBeingCarried = 0x519; // bool
		constexpr auto IsBeingPutOnHook = 0x51a; // bool
		constexpr auto isCrouched = 0x51b; // bool
		constexpr auto GuidedAction = 0x51c; // ECamperGuidedAction
		constexpr auto IsTrapped = 0x51d; // bool
		constexpr auto IsCrawling = 0x51e; // bool
		constexpr auto IsDead = 0x51f; // bool
		constexpr auto MaxSpeed = 0x520; // float
		constexpr auto IsInsideCloset = 0x524; // bool
		constexpr auto IsPlayingMadnessTierUpWeight = 0x528; // float
		constexpr auto IsBeingKilled = 0x52c; // bool
		constexpr auto IsCarryAttackSucess = 0x52d; // bool
		constexpr auto IsUsingAimItem = 0x52e; // bool
		constexpr auto IsHoldingAimItem = 0x52f; // bool
		constexpr auto AllowLookAt = 0x530; // bool
		constexpr auto DropStaggerTimeLeft = 0x534; // float
		constexpr auto RightArmIKAlpha = 0x538; // float
		constexpr auto RightHandIKTransform = 0x540; // FTransform
		constexpr auto Strafe = 0x570; // bool
		constexpr auto IsInteracting = 0x571; // bool
		constexpr auto Injured = 0x572; // bool
		constexpr auto interactionType = 0x573; // EInteractionAnimation
		constexpr auto PreviousInteractionType = 0x574; // EInteractionAnimation
		constexpr auto IsSlasherInFPV = 0x575; // bool
		constexpr auto CarriedAlpha = 0x578; // float
		constexpr auto IsHoldingHandleItem = 0x57c; // bool
		constexpr auto IsHoldingSmallItem = 0x57d; // bool
		constexpr auto IsHoldingFirecracker = 0x57e; // bool
		constexpr auto IsHoldingFlashbang = 0x57f; // bool
		constexpr auto IsHoldingVaccine = 0x580; // bool
		constexpr auto IsHoldingAnyItem = 0x581; // bool
		constexpr auto IsHoldingLamentConfiguration = 0x582; // bool
		constexpr auto IsHoldingFragileObject = 0x583; // bool
		constexpr auto IsArmOverrideDisabled = 0x584; // bool
		constexpr auto InAir = 0x585; // bool
		constexpr auto _walkAnimSpeed = 0x588; // float
		constexpr auto Direction = 0x58c; // float
		constexpr auto Pitch = 0x590; // float
		constexpr auto Yaw = 0x594; // float
		constexpr auto RightFootEffectorLocation = 0x598; // FVector
		constexpr auto LeftFootEffectorLocation = 0x5a4; // FVector
		constexpr auto Idle = 0x5b0; // bool
		constexpr auto MyTime = 0x5b4; // float
		constexpr auto HasAnyMontagePlaying = 0x5b8; // bool
		constexpr auto CurrentlyPlayerMontageId = 0x5bc; // FName
		constexpr auto IsBeingCarriedByTheSpirit = 0x5c8; // bool
		constexpr auto IsBeingCarriedByTheNightmare = 0x5c9; // bool
		constexpr auto IsBeingCarriedByThePig = 0x5ca; // bool
		constexpr auto IsBeingCarriedByTheHag = 0x5cb; // bool
		constexpr auto IsBeingCarriedByTheLegion = 0x5cc; // bool
		constexpr auto IsBeingCarriedByTheGhostFace = 0x5cd; // bool
		constexpr auto IsUsingDeadHard = 0x5ce; // bool
		constexpr auto IsPlayingWakeUpOther = 0x5cf; // bool
		constexpr auto IsPlayingFreddyMori = 0x5d0; // bool
		constexpr auto IsHealingKOCamper = 0x5d1; // bool
		constexpr auto HasLinkInput = 0x5d2; // bool
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xe8; // FParticleRandomSeedInfo
	}

	namespace n_UHudPresenter { // : UPresenter
		constexpr auto _presentedCharacter = 0xe0; // ADBDPlayer*
		constexpr auto _pendingCharacter = 0xe8; // ADBDPlayer*
		constexpr auto _spectatorPawn = 0xf0; // ADBDSpectator*
	}

	namespace n_UUMGBloodStoreArrayWidget { // : UMobileBaseUserWidget
		constexpr auto FirstBloodStoreRowWidget = 0x310; // UUMGBloodStoreRowWidget*
		constexpr auto SecondBloodStoreRowWidget = 0x318; // UUMGBloodStoreRowWidget*
		constexpr auto ThirdBloodStoreRowWidget = 0x320; // UUMGBloodStoreRowWidget*
		constexpr auto FourthBloodStoreRowWidget = 0x328; // UUMGBloodStoreRowWidget*
		constexpr auto FifthBloodStoreRowWidget = 0x330; // UUMGBloodStoreRowWidget*
	}

	namespace n_USignificanceManager { // : UObject
		constexpr auto SignificanceManagerClassName = 0x110; // FSoftClassPath
	}

	namespace n_UNatObjectRandomizer { // : UObjectRandomizer
		constexpr auto PotentialRandomizableSpawnerPools = 0x228; // TArray<FPotentialRandomizableSpawnerPool>
	}

	namespace n_ADBDAIBTController { // : ADBDAIController
		constexpr auto BehaviorTree = 0x5d8; // UBehaviorTree*
		constexpr auto BaseSkills = 0x5e0; // TArray<UAISkill*>
		constexpr auto RoleSkills = 0x5f0; // TArray<UAISkill*>
		constexpr auto PerkSkills = 0x600; // TArray<FAISkillPerk>
		constexpr auto ListenToAttackEvents = 0x610; // bool
		constexpr auto _dbdPerception = 0x618; // UDBDAIPerceptionComponent*
		constexpr auto _dbdBlackboard = 0x620; // UDBDBlackboardComponent*
		constexpr auto _dbdPathFollowing = 0x628; // UDBDPathFollowingComponent*
		constexpr auto _dbdBehaviorTree = 0x630; // UDBDBehaviorTreeComponent*
		constexpr auto _navMeshExplorer = 0x638; // UDBDNavMeshExplorerComponent*
		constexpr auto _aiState = 0x640; // UDBDAIStateComponent*
		constexpr auto _aiGoal = 0x648; // UDBDAIGoalComponent*
		constexpr auto _setDynamicSubtrees = 0x660; // TMap<FGameplayTag, UBehaviorTree*>
		constexpr auto _aiSkills = 0x6b0; // TArray<UAISkill*>
	}

	namespace n_UNavigationSystemV1 { // : UNavigationSystemBase
		constexpr auto MainNavData = 0x30; // ANavigationData*
		constexpr auto AbstractNavData = 0x38; // ANavigationData*
		constexpr auto DefaultAgentName = 0x40; // FName
		constexpr auto CrowdManagerClass = 0x50; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x80; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x80; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x80; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x80; // char : 1
		constexpr auto bTickWhilePaused = 0x80; // char : 1
		constexpr auto bSupportRebuilding = 0x80; // char : 1
		constexpr auto bInitialBuildingLocked = 0x80; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x81; // char : 1
		constexpr auto DataGatheringMode = 0x84; // ENavDataGatheringModeConfig
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x88; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x8c; // float
		constexpr auto SupportedAgents = 0x90; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0xa0; // FNavAgentSelector
		constexpr auto NavDataSet = 0xa8; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xb8; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xe8; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x1e0; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x53c; // float
	}

	namespace n_UActorClipperComponent { // : UActorComponent
		constexpr auto Shape = 0xb8; // USphereComponent*
		constexpr auto _clippedActors = 0xc0; // TMap<AActor*, FClippedActor>
		constexpr auto _clippables = 0x110; // TWeakObjectPtr<UPrimitiveCollection>
	}

	namespace n_UWidget { // : UVisual
		constexpr auto Slot = 0x30; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x38; // FDelegate
		constexpr auto ToolTipText = 0x50; // FText
		constexpr auto ToolTipTextDelegate = 0x68; // FDelegate
		constexpr auto ToolTipWidget = 0x80; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x88; // FDelegate
		constexpr auto VisibilityDelegate = 0x9c; // FDelegate
		constexpr auto RenderTransform = 0xb0; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xcc; // FVector2D
		constexpr auto bIsVariable = 0xd4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xd4; // char : 1
		constexpr auto bIsEnabled = 0xd4; // char : 1
		constexpr auto bOverride_Cursor = 0xd4; // char : 1
		constexpr auto AccessibleWidgetData = 0xd8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xe0; // char : 1
		constexpr auto Cursor = 0xe1; // EMouseCursor
		constexpr auto Clipping = 0xe2; // EWidgetClipping
		constexpr auto Visibility = 0xe3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xe4; // float
		constexpr auto Navigation = 0xe8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xf0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0x118; // TArray<UPropertyBinding*>
	}

	namespace n_USaboteur { // : UPerk
		constexpr auto _cooldownDuration = 0x3d0; // float [0x3]
		constexpr auto _revealHookDistance = 0x3dc; // float [0x3]
		constexpr auto _revealedMeatHooksOultineStrategy = 0x3e8; // TArray<UMeatHookOutlineUpdateStrategy*>
	}

	namespace n_ABaseVFX { // : AActor
		constexpr auto _shouldLoadOnServer = 0x230; // bool
	}

	namespace n_UARTrackedObject { // : UARTrackedGeometry
		constexpr auto DetectedObject = 0xf0; // UARCandidateObject*
	}

	namespace n_UAkHololensInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkHololensAdvancedInitializationSettings
	}

	namespace n_UAB_Menu_Slasher01_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x2f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x750; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0xbb0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1010; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x1470; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x18d0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x1970; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x19e8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x1a88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x1b00; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x1b78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1bb0; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x1c60; // bool
		constexpr auto Is Online = 0x1c61; // bool
	}

	namespace n_USharedAuthenticationMigrateComponent { // : UObject
		constexpr auto _worldContextObject = 0x30; // UObject*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_ADBDInGameHud { // : ADBDBaseHud
		constexpr auto _debugFontObj = 0x330; // UFont*
		constexpr auto _competenceDebugger = 0x350; // UCompetenceDebugger*
	}

	namespace n_UOnlineEngineInterfaceImpl { // : UOnlineEngineInterface
		constexpr auto VoiceSubsystemNameOverride = 0x30; // FName
	}

	namespace n_UMovieSceneSequencePlayer { // : UObject
		constexpr auto OnPlay = 0x410; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x420; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x430; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x440; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x450; // FMulticastInlineDelegate
		constexpr auto Status = 0x460; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x464; // char : 1
		constexpr auto Sequence = 0x468; // UMovieSceneSequence*
		constexpr auto StartTime = 0x470; // FFrameNumber
		constexpr auto DurationFrames = 0x474; // int32_t
		constexpr auto CurrentNumLoops = 0x478; // int32_t
		constexpr auto PlaybackSettings = 0x490; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a8; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x830; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x840; // TScriptInterface<IMovieScenePlaybackClient>
	}

	namespace n_UWheeledVehicleMovementComponent { // : UPawnMovementComponent
		constexpr auto bDeprecatedSpringOffsetMode = 0x150; // char : 1
		constexpr auto bReverseAsBrake = 0x150; // char : 1
		constexpr auto bUseRVOAvoidance = 0x150; // char : 1
		constexpr auto bRawHandbrakeInput = 0x150; // char : 1
		constexpr auto bRawGearUpInput = 0x150; // char : 1
		constexpr auto bRawGearDownInput = 0x150; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x154; // char : 1
		constexpr auto Mass = 0x158; // float
		constexpr auto WheelSetups = 0x160; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x170; // float
		constexpr auto ChassisWidth = 0x174; // float
		constexpr auto ChassisHeight = 0x178; // float
		constexpr auto DragArea = 0x17c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x180; // float
		constexpr auto MaxEngineRPM = 0x184; // float
		constexpr auto DebugDragMagnitude = 0x188; // float
		constexpr auto InertiaTensorScale = 0x18c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x198; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x19c; // float
		constexpr auto MaxNormalizedTireLoad = 0x1a0; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1a4; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1a8; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1ac; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1b0; // int32_t
		constexpr auto Wheels = 0x1b8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1e0; // float
		constexpr auto RVOAvoidanceHeight = 0x1e4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1e8; // float
		constexpr auto RVOSteeringStep = 0x1ec; // float
		constexpr auto RVOThrottleStep = 0x1f0; // float
		constexpr auto AvoidanceUID = 0x1f4; // int32_t
		constexpr auto AvoidanceGroup = 0x1f8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1fc; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x200; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x204; // float
		constexpr auto PendingLaunchVelocity = 0x208; // FVector
		constexpr auto ReplicatedState = 0x214; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x22c; // float
		constexpr auto RawThrottleInput = 0x230; // float
		constexpr auto RawBrakeInput = 0x234; // float
		constexpr auto SteeringInput = 0x238; // float
		constexpr auto ThrottleInput = 0x23c; // float
		constexpr auto BrakeInput = 0x240; // float
		constexpr auto HandbrakeInput = 0x244; // float
		constexpr auto IdleBrakeInput = 0x248; // float
		constexpr auto StopThreshold = 0x24c; // float
		constexpr auto WrongDirectionThreshold = 0x250; // float
		constexpr auto ThrottleInputRate = 0x254; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x25c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x264; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x26c; // FVehicleInputRate
		constexpr auto OverrideController = 0x298; // AController*
	}

	namespace n_UTriplanarDecalComponent { // : USceneComponent
		constexpr auto MinHeight = 0x210; // float
		constexpr auto Height = 0x214; // float
		constexpr auto MaskIntensity = 0x218; // float
		constexpr auto TopTexture = 0x220; // UTexture2D*
		constexpr auto BottomTexture = 0x228; // UTexture2D*
		constexpr auto MaskTexture = 0x230; // UTexture2D*
		constexpr auto MinQualitySetting = 0x238; // EDetailMode
		constexpr auto _triPlanarDecal = 0x240; // UDecalComponent*
		constexpr auto _triPlanarDecalClass = 0x248; // UObject*
		constexpr auto _decalMaterial = 0x250; // UMaterial*
	}

	namespace n_UStaticMesh { // : UStreamableRenderAsset
		constexpr auto MinLOD = 0x68; // FPerPlatformInt
		constexpr auto bLimitLODRangeForShadow = 0x6c; // bool
		constexpr auto ShadowMinLOD = 0x70; // FBHVRPerDetailModeInt
		constexpr auto ShadowMaxLOD = 0x110; // FBHVRPerDetailModeInt
		constexpr auto LpvBiasMultiplier = 0x1b0; // float
		constexpr auto StaticMaterials = 0x1b8; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x1c8; // float
		constexpr auto LightMapResolution = 0x1cc; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x1d0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0x1d4; // float
		constexpr auto bOverrideComponentDetailMode = 0x1d8; // bool
		constexpr auto DetailMode = 0x1d9; // EDetailMode
		constexpr auto DetailModeBitMask = 0x1dc; // int32_t
		constexpr auto bOverrideReceivesDecals = 0x1e0; // bool
		constexpr auto bReceivesDecals = 0x1e1; // bool
		constexpr auto LightmapGenerationMode = 0x1e2; // ELightmapGenerationMode
		constexpr auto DefaultLDMaxDrawDistance = 0x1e4; // FPerPlatformFloat
		constexpr auto BodySetup = 0x1e8; // UBodySetup*
		constexpr auto LODForCollision = 0x1f0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0x1f4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0x1f4; // char : 1
		constexpr auto bHasNavigationData = 0x1f4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0x1f4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0x1f4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0x1f4; // char : 1
		constexpr auto BatchingMode = 0x1f5; // EBatchingMode
		constexpr auto BatchingDiameter = 0x1f8; // int32_t
		constexpr auto bAllowCPUAccess = 0x1fc; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0x1fc; // char : 1
		constexpr auto Sockets = 0x220; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0x240; // FVector
		constexpr auto NegativeBoundsExtension = 0x24c; // FVector
		constexpr auto ExtendedBounds = 0x258; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x274; // int32_t
		constexpr auto AssetUserData = 0x278; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x290; // UObject*
		constexpr auto NavCollision = 0x298; // UNavCollisionBase*
	}

	namespace n_UUMGMenuEventsBanner { // : UUMGMenuBaseBanner
		constexpr auto EventsIcon = 0x470; // UImage*
		constexpr auto FallbackTitle = 0x478; // UTextBlock*
	}

	namespace n_UActivePhaseWalkInteraction { // : UChargeableInteractionDefinition
		constexpr auto _fullyChargedSpeed = 0x6d8; // FTunableStat
		constexpr auto _chargingSpeedCurve = 0x758; // UCurveFloat*
		constexpr auto _phaseWalkPenaltyThreshold = 0x760; // FDBDTunableRowHandle
		constexpr auto _phaseWalkPenaltyValue = 0x788; // FDBDTunableRowHandle
		constexpr auto _activePhaseWalkChargeDuration = 0x7b8; // FTunableStat
		constexpr auto _activePhaseWalkChargingMontage = 0x838; // UAnimMontage*
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x38; // ETrail2SourceMethod
		constexpr auto SourceName = 0x3c; // FName
		constexpr auto SourceStrength = 0x48; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x78; // char : 1
		constexpr auto SourceOffsetCount = 0x7c; // int32_t
		constexpr auto SourceOffsetDefaults = 0x80; // TArray<FVector>
		constexpr auto SelectionMethod = 0x90; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x94; // char : 1
	}

	namespace n_UInputRouter { // : UObject
		constexpr auto bAutoInvalidateOnHover = 0x30; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x31; // bool
		constexpr auto ActiveInputBehaviors = 0x40; // UInputBehaviorSet*
	}

	namespace n_UDBDGameUserSettings { // : UGameUserSettings
		constexpr auto ActionMappings = 0x128; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x138; // TArray<FInputAxisKeyMapping>
		constexpr auto OnSetCustomizedHudsTimestamp = 0x148; // FMulticastInlineDelegate
		constexpr auto DeviceLoginTokenID = 0x158; // FString
		constexpr auto ScalabilityLevel = 0x168; // int32_t
		constexpr auto AutoScalabilitySet = 0x16c; // bool
		constexpr auto AutoAdjust = 0x16d; // bool
		constexpr auto ScreenResolution = 0x170; // int32_t
		constexpr auto FullScreen = 0x174; // bool
		constexpr auto MenuScaleFactor = 0x178; // int32_t
		constexpr auto HudScaleFactor = 0x17c; // int32_t
		constexpr auto SkillCheckScaleFactor = 0x180; // int32_t
		constexpr auto LargeText = 0x184; // bool
		constexpr auto HUDPlayerNamesVisibility = 0x185; // bool
		constexpr auto HUDKillerHookCountVisibility = 0x186; // bool
		constexpr auto HUDScoreEventsVisibility = 0x187; // bool
		constexpr auto FPSLimit = 0x188; // uint32_t
		constexpr auto MainVolume = 0x18c; // int32_t
		constexpr auto MainVolumeOn = 0x190; // bool
		constexpr auto MenuMusicVolume = 0x194; // int32_t
		constexpr auto MenuMusicVolumeOn = 0x198; // bool
		constexpr auto UseHeadphones = 0x199; // bool
		constexpr auto MuteOnFocusLost = 0x19a; // bool
		constexpr auto KillerCameraSensitivity = 0x19c; // int32_t
		constexpr auto SurvivorCameraSensitivity = 0x1a0; // int32_t
		constexpr auto KillerMouseSensitivity = 0x1a4; // int32_t
		constexpr auto SurvivorMouseSensitivity = 0x1a8; // int32_t
		constexpr auto KillerControllerSensitivity = 0x1ac; // int32_t
		constexpr auto SurvivorControllerSensitivity = 0x1b0; // int32_t
		constexpr auto AimAssist = 0x1b4; // bool
		constexpr auto ControlType = 0x1b8; // int32_t
		constexpr auto InvertY = 0x1bc; // bool
		constexpr auto SurvivorInvertY = 0x1bd; // bool
		constexpr auto KillerToggleInteractions = 0x1be; // bool
		constexpr auto SurvivorToggleInteractions = 0x1bf; // bool
		constexpr auto SprintToCancel = 0x1c0; // bool
		constexpr auto Language = 0x1c8; // FString
		constexpr auto LanguageIsDefinedByPlayer = 0x1d8; // bool
		constexpr auto HighestWeightSeenNews = 0x1dc; // int32_t
		constexpr auto SharedLoginInformation = 0x1e0; // FSharedAuthenticationTokenInformation
		constexpr auto LastPanelContextId = 0x210; // uint32_t
		constexpr auto ArchivesAutoPlayVoiceOver = 0x214; // bool
		constexpr auto HasAcceptedCrossplayPopup = 0x215; // bool
		constexpr auto HasAcceptedCrossProgressionPopup = 0x216; // bool
		constexpr auto UseAtlantaCustomizedHuds = 0x217; // bool
		constexpr auto UseAtlantaSurvivorQuickTurn = 0x218; // bool
		constexpr auto UseAtlantaKillerQuickTurn = 0x219; // bool
		constexpr auto AtlantaCustomizedHuds = 0x220; // TArray<FAtlantaCustomizedHudSettings>
		constexpr auto ShowPortraitBorder = 0x238; // bool
		constexpr auto PartyPrivacyState = 0x240; // FString
		constexpr auto ColorBlindMode = 0x298; // int32_t
		constexpr auto ColorBlindModeIntensity = 0x29c; // int32_t
		constexpr auto BeginnerMode = 0x2a0; // bool
		constexpr auto Subtitles = 0x2a1; // bool
		constexpr auto SubtitlesBackgroundOpacity = 0x2a4; // int32_t
		constexpr auto SubtitlesSize = 0x2f0; // int32_t
	}

	namespace n_UK26PowerChargePresentationPowerFadeComponent { // : UPresentationPowerFadeComponent
		constexpr auto _ammoHandler = 0xb8; // UK26AmmoHandlerComponent*
	}

	namespace n_UBTDecorator_IsGameState { // : UBTDecorator_TickableBase
		constexpr auto RemainingObjectiveOp = 0x70; // EArithmeticKeyOperation
		constexpr auto NbRemainingObjectives = 0x74; // int32_t
		constexpr auto SurvivorsLeftOp = 0x78; // EArithmeticKeyOperation
		constexpr auto NbSurvivorsLeft = 0x7c; // int32_t
	}

	namespace n_AChaosSolverActor { // : AActor
		constexpr auto TimeStepMultiplier = 0x230; // float
		constexpr auto CollisionIterations = 0x234; // int32_t
		constexpr auto PushOutIterations = 0x238; // int32_t
		constexpr auto PushOutPairIterations = 0x23c; // int32_t
		constexpr auto ClusterConnectionFactor = 0x240; // float
		constexpr auto ClusterUnionConnectionType = 0x244; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x245; // bool
		constexpr auto CollisionFilterSettings = 0x248; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x258; // bool
		constexpr auto BreakingFilterSettings = 0x25c; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x26c; // bool
		constexpr auto TrailingFilterSettings = 0x270; // FSolverTrailingFilterSettings
		constexpr auto bHasFloor = 0x280; // bool
		constexpr auto FloorHeight = 0x284; // float
		constexpr auto MassScale = 0x288; // float
		constexpr auto bGenerateContactGraph = 0x28c; // bool
		constexpr auto ChaosDebugSubstepControl = 0x28d; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x290; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x2b0; // UChaosGameplayEventDispatcher*
	}

	namespace n_UPathStrategy { // : UObject
		constexpr auto DefaultPathBuilders = 0x40; // TArray<UPathBuilder*>
		constexpr auto RefreshPartialPathDelay = 0x50; // float
		constexpr auto StartNextBranchBuildDelay = 0x54; // float
		constexpr auto _aiOwner = 0x58; // ADBDAIBTController*
		constexpr auto _pathBuilders = 0x60; // TArray<UPathBuilder*>
	}

	namespace n_UAkAudioType { // : UObject
		constexpr auto ShortID = 0x30; // uint32_t
		constexpr auto UserData = 0x38; // TArray<UObject*>
	}

	namespace n_USoundfieldEffectBase { // : UObject
		constexpr auto Settings = 0x30; // USoundfieldEffectSettingsBase*
	}

	namespace n_UBTTask_ExtWait { // : UBTTask_Wait
		constexpr auto WaitTimeInterval = 0x80; // FAITunableParameter
		constexpr auto WaitRandomDeviation = 0x90; // FAITunableParameter
	}

	namespace n_UMovieSceneParticleTrack { // : UMovieSceneNameableTrack
		constexpr auto ParticleSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UPowerButton { // : UMobileBaseUserWidget
		constexpr auto Button = 0x300; // UActionButton*
		constexpr auto SwitchIcon = 0x308; // UCanvasPanel*
		constexpr auto CountContainer = 0x310; // UCanvasPanel*
		constexpr auto RadialProgressBarContainer = 0x318; // UCanvasPanel*
		constexpr auto CountLabel = 0x320; // UTextBlock*
		constexpr auto TierImage = 0x328; // UImage*
		constexpr auto AddonsContainer = 0x330; // UCanvasPanel*
		constexpr auto FirstAddonSlot = 0x338; // UUMGInventoryItemButton*
		constexpr auto SecondAddonSlot = 0x340; // UUMGInventoryItemButton*
		constexpr auto FillPowerChargeProgression = 0x348; // UProgressBar*
		constexpr auto DisabledOpacity = 0x350; // float
		constexpr auto EnabledOpacity = 0x354; // float
		constexpr auto EnabledLongPressed = 0x358; // bool
		constexpr auto _itemCount = 0x35c; // int32_t
	}

	namespace n_UCoreButtonPromptWidget { // : UCoreBaseUserWidget
		constexpr auto CursorOverSfx = 0x2d8; // UAkAudioEvent*
		constexpr auto CursorPressSfx = 0x2e0; // UAkAudioEvent*
		constexpr auto CursorReleaseSfx = 0x2e8; // UAkAudioEvent*
		constexpr auto _inputPromptText = 0x2f0; // UCoreInputPromptTextWidget*
		constexpr auto _buttonTextField = 0x2f8; // UTextBlock*
		constexpr auto _buttonPromptTriggeredDelegate = 0x300; // FMulticastInlineDelegate
	}

	namespace n_UMontagePlayer { // : UActorComponent
		constexpr auto OnMontageStarted = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x110; // FMulticastInlineDelegate
		constexpr auto _animationMappingsTable = 0x180; // UDataTable*
		constexpr auto _playerSpecificMappingsTable = 0x188; // UDataTable*
		constexpr auto _currentlyPlayingMontage = 0x190; // UAnimMontage*
		constexpr auto _activeMontagesInfo = 0x1b0; // TArray<FMontageInstanceInfo>
		constexpr auto _outSectionName = 0x1c0; // FName
		constexpr auto _timeBeforeOut = 0x1cc; // float
		constexpr auto _skeletalMeshComponent = 0x1d0; // USkeletalMeshComponent*
		constexpr auto _montageToNameMap = 0x200; // TMap<UAnimMontage*, FName>
	}

	namespace n_UWidgetBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto WidgetTree = 0x338; // UWidgetTree*
		constexpr auto bAllowTemplate = 0x340; // char : 1
		constexpr auto bAllowDynamicCreation = 0x340; // char : 1
		constexpr auto bValidTemplate = 0x340; // char : 1
		constexpr auto bTemplateInitialized = 0x340; // char : 1
		constexpr auto bCookedTemplate = 0x340; // char : 1
		constexpr auto bClassRequiresNativeTick = 0x340; // char : 1
		constexpr auto Bindings = 0x348; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x358; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x368; // TArray<FName>
		constexpr auto TemplateAsset = 0x378; // TSoftObjectPtr<UUserWidget>
		constexpr auto Template = 0x3a8; // UUserWidget*
	}

	namespace n_UDBDAtlantaStructuredData { // : UObject
		constexpr auto AtlantaHeartbeatActor = 0x30; // TSoftClassPtr<UObject>
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x38; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x80; // float
		constexpr auto DistributeThreshold = 0x84; // float
	}

	namespace n_UPaperTerrainComponent { // : UPrimitiveComponent
		constexpr auto TerrainMaterial = 0x428; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x430; // bool
		constexpr auto bFilledSpline = 0x431; // bool
		constexpr auto AssociatedSpline = 0x438; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x440; // int32_t
		constexpr auto SegmentOverlapAmount = 0x444; // float
		constexpr auto TerrainColor = 0x448; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x458; // int32_t
		constexpr auto SpriteCollisionDomain = 0x45c; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x460; // float
		constexpr auto CachedBodySetup = 0x468; // UBodySetup*
	}

	namespace n_UCanvasPanelSlot { // : UPanelSlot
		constexpr auto LayoutData = 0x40; // FAnchorData
		constexpr auto bAutoSize = 0x68; // bool
		constexpr auto ZOrder = 0x6c; // int32_t
	}

	namespace n_UAnimSharingStateInstance { // : UAnimInstance
		constexpr auto AnimationToPlay = 0x270; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x278; // float
		constexpr auto PlayRate = 0x27c; // float
		constexpr auto bStateBool = 0x280; // bool
		constexpr auto Instance = 0x288; // UAnimSharingInstance*
	}

	namespace n_UPlayerLevelTooltipWidget { // : UBaseTooltipWidget
		constexpr auto PlayerLevelContent = 0x338; // UUMGTooltipContentPlayerLevelWidget*
	}

	namespace n_AVideoThumbnailPlayer { // : AActor
		constexpr auto MediaPlayer = 0x250; // UMediaPlayer*
		constexpr auto SoundComponent = 0x258; // UMediaSoundComponent*
		constexpr auto VideoPlayerWidget = 0x260; // UUserWidget*
		constexpr auto _audioComponent = 0x268; // UAudioComponent*
		constexpr auto _source = 0x288; // TSoftObjectPtr<UMediaSource>
	}

	namespace n_UAISkill_FindCollectable_Searchable { // : UAISkill_FindCollectable
		constexpr auto SearchIntervalAfterOpenSearchable = 0x120; // float
		constexpr auto OpenSearchableRelevancyDuration = 0x124; // float
		constexpr auto _relevantSearchable = 0x130; // ASearchable*
	}

	namespace n_UGameEventTracker { // : UObject
		constexpr auto OnGameplayEvent = 0x30; // FMulticastInlineDelegate
		constexpr auto OnGameflowEvent = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bCausedByWorld = 0x30; // char : 1
		constexpr auto bScaleMomentumByMass = 0x30; // char : 1
		constexpr auto bRadialDamageVelChange = 0x30; // char : 1
		constexpr auto DamageImpulse = 0x34; // float
		constexpr auto DestructibleImpulse = 0x38; // float
		constexpr auto DestructibleDamageSpreadScale = 0x3c; // float
		constexpr auto DamageFalloff = 0x40; // float
	}

	namespace n_UBuildPatchManifest { // : UObject
		constexpr auto ManifestFileVersion = 0x30; // char
		constexpr auto bIsFileData = 0x31; // bool
		constexpr auto AppID = 0x34; // uint32_t
		constexpr auto AppName = 0x38; // FString
		constexpr auto BuildVersion = 0x48; // FString
		constexpr auto LaunchExe = 0x58; // FString
		constexpr auto LaunchCommand = 0x68; // FString
		constexpr auto PrereqIds = 0x78; // TSet<FString>
		constexpr auto PrereqName = 0xc8; // FString
		constexpr auto PrereqPath = 0xd8; // FString
		constexpr auto PrereqArgs = 0xe8; // FString
		constexpr auto FileManifestList = 0xf8; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x108; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x118; // TArray<FCustomFieldData>
	}

	namespace n_AMagicLeapSharedWorldGameState { // : AGameState
		constexpr auto SharedWorldData = 0x2a8; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x2b8; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x2d8; // FMulticastInlineDelegate
	}

	namespace n_USpectatorBeaconState { // : UObject
		constexpr auto SessionName = 0x30; // FName
		constexpr auto NumConsumedReservations = 0x3c; // int32_t
		constexpr auto MaxReservations = 0x40; // int32_t
		constexpr auto bRestrictCrossConsole = 0x44; // bool
		constexpr auto Reservations = 0x48; // TArray<FSpectatorReservation>
	}

	namespace n_UAB_Menu_Slasher18_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_UUMGCharacterScrollingInfoWidget { // : UMobileBaseUserWidget
		constexpr auto FirstTeachablePerk = 0x300; // UUMGTeachablePerkButton*
		constexpr auto SecondTeachablePerk = 0x308; // UUMGTeachablePerkButton*
		constexpr auto ThirdTeachablePerk = 0x310; // UUMGTeachablePerkButton*
		constexpr auto KillerInfoPanel = 0x318; // UCanvasPanel*
		constexpr auto KillerPower = 0x320; // UUMGInventoryItemButton*
		constexpr auto CharacterBackstoryBox = 0x328; // UUMGHtmlRichText*
		constexpr auto _killerPowerName = 0x330; // FText
		constexpr auto _killerSpeedText = 0x348; // FText
		constexpr auto _killerTerrorRadiusText = 0x360; // FText
		constexpr auto _killerHeightText = 0x378; // FText
		constexpr auto _perksTitle = 0x390; // FText
		constexpr auto _teachablesTitle = 0x3a8; // FText
		constexpr auto _powerTitle = 0x3c0; // FText
		constexpr auto _attributesTitle = 0x3d8; // FText
		constexpr auto FirstTeachablePerkText = 0x3f0; // UTextBlock*
		constexpr auto SecondTeachablePerkText = 0x3f8; // UTextBlock*
		constexpr auto ThirdTeachablePerkText = 0x400; // UTextBlock*
		constexpr auto _backStoryTitle = 0x408; // FText
		constexpr auto _onTeachableTooltipTriggeredEvent = 0x440; // FMulticastInlineDelegate
		constexpr auto _onPowerButtonTooltipLongPressEvent = 0x450; // FMulticastInlineDelegate
	}

	namespace n_AK26PathPart { // : AActor
		constexpr auto _mesh = 0x230; // UStaticMeshComponent*
		constexpr auto _outlineComponent = 0x238; // UDBDOutlineComponent*
		constexpr auto _visualEffectKiller = 0x240; // UNiagaraComponent*
		constexpr auto _visualEffectSurvivor = 0x248; // UNiagaraComponent*
		constexpr auto _outlineUpdateStrategy = 0x250; // UK26PowerOutlineUpdateStrategy*
		constexpr auto _rootComponent = 0x258; // USceneComponent*
		constexpr auto _isVisibleForSurvivor = 0x260; // bool
		constexpr auto _isVisibleForKiller = 0x261; // bool
	}

	namespace n_ABP_Menu_Slasher16_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_17 = 0x698; // UBP_Audio_KLR_16_C*
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x38; // FRawDistributionFloat
	}

	namespace n_URenderingFeaturesSequencer { // : UObject
		constexpr auto _aggregateCullDistanceVolumes = 0x40; // ADBDAggregateCullDistanceVolumes*
		constexpr auto _world = 0x48; // UWorld*
	}

	namespace n_UCurrencyProgressionTooltipWidget { // : UCoreBaseUserWidget
		constexpr auto CurrencyTB = 0x2d8; // UDBDTextBlock*
		constexpr auto CurrencyTitleTB = 0x2e0; // UDBDTextBlock*
		constexpr auto CurrencyDescriptionRTB = 0x2e8; // UDBDRichTextBlock*
		constexpr auto TitleBgIMG = 0x2f0; // UDBDImage*
	}

	namespace n_UUMGSettingSubscriptionStatus { // : UUserWidget
		constexpr auto SubscriptionStatusText = 0x260; // FText
		constexpr auto StatusText = 0x278; // FText
		constexpr auto InactiveStatusText = 0x290; // FText
		constexpr auto EndText = 0x2a8; // FText
		constexpr auto TypeSwitcher = 0x2c0; // UWidgetSwitcher*
		constexpr auto ActiveWidget = 0x2c8; // UHorizontalBox*
		constexpr auto InactiveWidget = 0x2d0; // UOverlay*
		constexpr auto TitleText = 0x2d8; // UTextBlock*
		constexpr auto DisplayName = 0x2e0; // UTextBlock*
		constexpr auto Status = 0x2e8; // UTextBlock*
		constexpr auto StatusInactive = 0x2f0; // UTextBlock*
		constexpr auto End = 0x2f8; // UTextBlock*
		constexpr auto EndDate = 0x300; // UTextBlock*
	}

	namespace n_USourceEffectBitCrusherPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x78; // FSourceEffectBitCrusherSettings
	}

	namespace n_UUMGMainMenuMonthlyPassButton { // : UMobileBaseUserWidget
		constexpr auto ButtonSwitcher = 0x300; // UWidgetSwitcher*
		constexpr auto ActiveButton = 0x308; // UButton*
		constexpr auto NonActiveButton = 0x310; // UButton*
		constexpr auto playerName = 0x318; // FText
		constexpr auto OnClickSound = 0x330; // UAkAudioEvent*
	}

	namespace n_UTriggerTimerOnLacerationAlmostFullEffect { // : UStatusEffect
		constexpr auto _lacerationComponent = 0x350; // ULacerationComponent*
		constexpr auto _duration = 0x358; // float
	}

	namespace n_UAICharacterBehaviourInteractWithActorData { // : UAICharacterBehaviourData
		constexpr auto TargetActor = 0x30; // AActor*
		constexpr auto characterMovementType = 0x48; // ECharacterMovementTypes
		constexpr auto usePathfinding = 0x49; // bool
	}

	namespace n_UPaperFlipbook { // : UObject
		constexpr auto FramesPerSecond = 0x30; // float
		constexpr auto KeyFrames = 0x38; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x48; // UMaterialInterface*
		constexpr auto CollisionSource = 0x50; // EFlipbookCollisionMode
	}

	namespace n_UAnimSequenceBase { // : UAnimationAsset
		constexpr auto Notifies = 0x88; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x98; // float
		constexpr auto RateScale = 0x9c; // float
		constexpr auto RawCurveData = 0xa0; // FRawCurveTracks
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0x48; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x58; // FGuid
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0x98; // FName
	}

	namespace n_UAssetLibrary { // : UObject
		constexpr auto _objectLibrary = 0x38; // UObjectLibrary*
		constexpr auto SecondsDelayBetweenBatch = 0xa4; // float
	}

	namespace n_UPrisonChainAddon { // : UItemAddon
		constexpr auto _maxTensionCharge = 0x298; // FDBDTunableRowHandle
		constexpr auto _tensionChargeModifier = 0x2c0; // float
	}

	namespace n_ABP_Menu_Slasher20_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_21 = 0x698; // UBP_Audio_KLR_20_C*
	}

	namespace n_ARespawnableInteractable { // : AInteractable
		constexpr auto OnInteractionEnded = 0x328; // FMulticastInlineDelegate
		constexpr auto OnIsInteractingChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto _isHidden = 0x348; // bool
	}

	namespace n_UImage { // : UWidget
		constexpr auto Brush = 0x128; // FSlateBrush
		constexpr auto BrushDelegate = 0x1b8; // FDelegate
		constexpr auto ColorAndOpacity = 0x1cc; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1dc; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1f0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1f4; // FDelegate
	}

	namespace n_UReverbEffect { // : UObject
		constexpr auto Density = 0x30; // float
		constexpr auto Diffusion = 0x34; // float
		constexpr auto Gain = 0x38; // float
		constexpr auto GainHF = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto DecayHFRatio = 0x44; // float
		constexpr auto ReflectionsGain = 0x48; // float
		constexpr auto ReflectionsDelay = 0x4c; // float
		constexpr auto LateGain = 0x50; // float
		constexpr auto LateDelay = 0x54; // float
		constexpr auto AirAbsorptionGainHF = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0x48; // FExpressionInput
		constexpr auto SceneTextureId = 0x64; // ESceneTextureId
		constexpr auto bFiltered = 0x65; // bool
	}

	namespace n_UBP_Audio_KLR_01_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAB_Menu_Slasher24_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x440; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x4b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
		constexpr auto _interrupt02 = 0x642; // bool
		constexpr auto _animSwitch = 0x644; // int32_t
	}

	namespace n_UAB_Menu_Camper_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x328; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_7 = 0x358; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_9 = 0x390; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_6 = 0x408; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_8 = 0x4a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x520; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_7 = 0x558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x5d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_5 = 0x648; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult_5 = 0x6e8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x720; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x7d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x848; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x880; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_4 = 0x930; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x9d0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0xa48; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0xac0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0xb38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0xbb0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_TransitionResult_2 = 0xc68; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0xc90; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0xcb8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult_3 = 0xce8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0xd20; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0xd40; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0xd70; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0xd90; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_SpringBone = 0x11f0; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_StateResult_2 = 0x1328; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x1360; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_StateResult = 0x1390; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x13c8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_BlendListByBool_3 = 0x1478; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x1518; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_SaveCachedPose = 0x1548; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose = 0x1600; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_ModifyBone = 0x1630; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1740; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x1760; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1780; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x1840; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x1900; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x19a0; // FAnimNode_BlendListByBool
		constexpr auto Hand Position = 0x1a40; // EItemHandPosition
		constexpr auto SelectedIdleIndex = 0x1a44; // int32_t
		constexpr auto Role Selected = 0x1a48; // bool
		constexpr auto Dynamic_Override = 0x1a49; // bool
		constexpr auto Override_nea = 0x1a4a; // bool
		constexpr auto Override_Jane = 0x1a4b; // bool
		constexpr auto _weaponRT_adjustment = 0x1a4c; // bool
		constexpr auto MenuInterrupt = 0x1a4d; // bool
		constexpr auto DBDMenuPlayer = 0x1a50; // ADBDMenuPlayer*
		constexpr auto Hand Position_1 = 0x1a58; // EItemHandPosition
	}

	namespace n_USceneCaptureComponent2D { // : USceneCaptureComponent
		constexpr auto ProjectionType = 0x2a8; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2ac; // float
		constexpr auto OrthoWidth = 0x2b0; // float
		constexpr auto TextureTarget = 0x2b8; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2c0; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2d0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x810; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x814; // char : 1
		constexpr auto CustomNearClippingPlane = 0x818; // float
		constexpr auto bUseCustomProjectionMatrix = 0x81c; // bool
		constexpr auto CustomProjectionMatrix = 0x820; // FMatrix
		constexpr auto bEnableClipPlane = 0x860; // bool
		constexpr auto ClipPlaneBase = 0x864; // FVector
		constexpr auto ClipPlaneNormal = 0x870; // FVector
		constexpr auto bCameraCutThisFrame = 0x87c; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x87c; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x880; // bool
	}

	namespace n_UGameplayTask_TimeLimitedExecution { // : UGameplayTask
		constexpr auto OnFinished = 0x70; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_PlayAnimation { // : UBTTaskNode
		constexpr auto AnimationToPlay = 0x78; // UAnimationAsset*
		constexpr auto bLooping = 0x80; // char : 1
		constexpr auto bNonBlocking = 0x80; // char : 1
		constexpr auto MyOwnerComp = 0x88; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x90; // USkeletalMeshComponent*
	}

	namespace n_UBP_Audio_KLR_26_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
	}

	namespace n_UDefaultOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _revealedColorToSurvivor = 0xc0; // FLinearColor
		constexpr auto _revealedColorToKiller = 0xd0; // FLinearColor
	}

	namespace n_UResetBearTrapInteraction { // : UChargeableInteractionDefinition
		constexpr auto _enterMontageIDForBeartrap = 0x6d8; // FName
		constexpr auto _udpateMontageIDForBeartrap = 0x6e4; // FName
		constexpr auto _updateSequenceForBeartrap = 0x6f0; // UAnimSequence*
		constexpr auto _exitMontageForIDBeartrap = 0x6f8; // FName
		constexpr auto _cancelExitMontage = 0x704; // FName
	}

	namespace n_UCircularThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x128; // int32_t
		constexpr auto Period = 0x12c; // float
		constexpr auto Radius = 0x130; // float
		constexpr auto PieceImage = 0x138; // USlateBrushAsset*
		constexpr auto Image = 0x140; // FSlateBrush
		constexpr auto bEnableRadius = 0x1d0; // bool
	}

	namespace n_ADBDBasePlayer { // : ACharacter
		constexpr auto OnCustomizationChanged = 0x4d0; // FMulticastInlineDelegate
		constexpr auto _semanticGameplayTags = 0x4e0; // FGameplayTagContainer
		constexpr auto _leftFootGroundDetector = 0x500; // UBaseGroundDetectorComponent*
		constexpr auto _rightFootGroundDetector = 0x508; // UBaseGroundDetectorComponent*
		constexpr auto _characterIndex = 0x518; // int32_t
	}

	namespace n_UInteractiveGizmoManager { // : UObject
		constexpr auto ActiveGizmos = 0x38; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x60; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_ADBDMenuPlayer { // : ADBDBasePlayer
		constexpr auto RoleSelected = 0x588; // bool
		constexpr auto IsOnline = 0x589; // bool
		constexpr auto OnItemEquipped = 0x590; // FMulticastInlineDelegate
		constexpr auto DarkMaterial = 0x5a0; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto _handPosition = 0x5d0; // EItemHandPosition
		constexpr auto ItemMesh = 0x5d8; // USkeletalMeshComponent*
		constexpr auto MaterialHelper = 0x5e0; // UMaterialHelper*
		constexpr auto _equippedItemName = 0x5e8; // FName
	}

	namespace n_AGameSession { // : AInfo
		constexpr auto MaxSpectators = 0x230; // int32_t
		constexpr auto MaxPlayers = 0x234; // int32_t
		constexpr auto MaxPartySize = 0x238; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x23c; // char
		constexpr auto bRequiresPushToTalk = 0x23d; // bool
		constexpr auto SessionName = 0x240; // FName
	}

	namespace n_AAtlantaHeartbeatActor { // : AActor
		constexpr auto IsHeartbeatShown = 0x230; // bool
	}

	namespace n_UK24CheatComponent { // : UActorComponent
		constexpr auto _zombieManagementClass = 0xb8; // AZombiesManagement*
		constexpr auto _zombiesManagement = 0xc0; // AZombiesManagement*
	}

	namespace n_UDBDEmblem_SurvivorUnbroken { // : UDBDEmblem
		constexpr auto _pointsForTimeAlive = 0x118; // UCurveFloat*
		constexpr auto _rankTunablesClass = 0x130; // UDBDRankDesignTunables*
	}

	namespace n_UBlightedSerumAddon { // : UItemAddon
		constexpr auto _blightedSerumCollectable = 0x298; // ACollectable*
		constexpr auto _dashInteraction = 0x2a0; // UBlightedSerumDashInteraction*
		constexpr auto _theBlightExtraTokens = 0x2a8; // int32_t
		constexpr auto _numberOfDashesPerEvent = 0x2ac; // int32_t
	}

	namespace n_UPositionPlaneGizmo { // : UInteractiveGizmo
		constexpr auto CenterBallShape = 0x88; // UPreviewMesh*
		constexpr auto CenterBallMaterial = 0x90; // UMaterialInstance*
	}

	namespace n_UBTService_FindInteractor_Camper { // : UBTService_FindInteractor
		constexpr auto StatusFilter = 0x218; // EFindInteractableCamperFilter
		constexpr auto AllyDangerStateGoalWeight = 0x21c; // FAITunableParameter
		constexpr auto IncapacitatedAlliesGoalWeight = 0x22c; // FAITunableParameter
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x98; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0xa0; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xe0; // FScalarMaterialInput
		constexpr auto Specular = 0xfc; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x118; // FScalarMaterialInput
		constexpr auto Normal = 0x134; // FVectorMaterialInput
		constexpr auto Tangent = 0x150; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x16c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x188; // EMaterialDomain
		constexpr auto BlendMode = 0x189; // EBlendMode
		constexpr auto DecalBlendMode = 0x18a; // EDecalBlendMode
		constexpr auto CustomDecalBlendModeChannels = 0x18c; // int32_t
		constexpr auto MaterialDecalResponse = 0x190; // EMaterialDecalResponse
		constexpr auto bIsDenseGeometryBHVR = 0x194; // char : 1
		constexpr auto ShadingModel = 0x198; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x199; // char : 1
		constexpr auto CastMaskedMaterialShadow = 0x19c; // char : 1
		constexpr auto ShadingModels = 0x1a0; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x1a4; // float
		constexpr auto WorldPositionOffset = 0x1a8; // FVectorMaterialInput
		constexpr auto Refraction = 0x1c4; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x1e0; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x200; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x21c; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x238; // char : 1
		constexpr auto bEnableResponsiveAA = 0x238; // char : 1
		constexpr auto bScreenSpaceReflections = 0x238; // char : 1
		constexpr auto bContactShadows = 0x238; // char : 1
		constexpr auto TwoSided = 0x238; // char : 1
		constexpr auto DitheredLODTransition = 0x238; // char : 1
		constexpr auto DitherOpacityMask = 0x238; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x238; // char : 1
		constexpr auto TranslucencyLightingMode = 0x239; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x23a; // char : 1
		constexpr auto NumCustomizedUVs = 0x23c; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x240; // float
		constexpr auto TranslucentShadowDensityScale = 0x244; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x248; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x24c; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x250; // float
		constexpr auto TranslucentBackscatteringExponent = 0x254; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x258; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x268; // float
		constexpr auto bDisableDepthTest = 0x26c; // char : 1
		constexpr auto bRenderFragmentOnce = 0x270; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x274; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x274; // char : 1
		constexpr auto bTangentSpaceNormal = 0x274; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x274; // char : 1
		constexpr auto bBlockGI = 0x274; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x274; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x274; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x274; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x275; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x275; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x275; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x275; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x275; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x275; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x275; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x275; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x276; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x276; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x276; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x276; // char : 1
		constexpr auto bUsesDistortion = 0x276; // char : 1
		constexpr auto bUsedWithClothing = 0x276; // char : 1
		constexpr auto bUsedWithWater = 0x278; // char : 1
		constexpr auto bUsedWithHairStrands = 0x278; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x278; // char : 1
		constexpr auto bUsedWithUI = 0x27c; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x27c; // char : 1
		constexpr auto bFullyRough = 0x27c; // char : 1
		constexpr auto bUseFullPrecision = 0x27c; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x27c; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x280; // char : 1
		constexpr auto bUseHQForwardReflections = 0x284; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x284; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x284; // char : 1
		constexpr auto D3D11TessellationMode = 0x285; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x286; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x286; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x286; // char : 1
		constexpr auto Wireframe = 0x286; // char : 1
		constexpr auto ShadingRate = 0x287; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x288; // char : 1
		constexpr auto bIsMasked = 0x288; // char : 1
		constexpr auto bIsPreviewMaterial = 0x288; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x288; // char : 1
		constexpr auto bUseMaterialAttributes = 0x288; // char : 1
		constexpr auto bCastRayTracedShadows = 0x288; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x288; // char : 1
		constexpr auto bIsSky = 0x288; // char : 1
		constexpr auto bUseTranslucencyVolumetricFog = 0x28c; // char : 1
		constexpr auto bComputeFogPerPixel = 0x290; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x290; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x290; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x290; // char : 1
		constexpr auto BlendableLocation = 0x291; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x292; // char : 1
		constexpr auto bEnableStencilTest = 0x292; // char : 1
		constexpr auto StencilCompare = 0x293; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x294; // char
		constexpr auto RefractionMode = 0x295; // ERefractionMode
		constexpr auto BlendablePriority = 0x298; // int32_t
		constexpr auto bIsBlendable = 0x29c; // char : 1
		constexpr auto UsageFlagWarnings = 0x2a0; // uint32_t
		constexpr auto RefractionDepthBias = 0x2a4; // float
		constexpr auto StateId = 0x2a8; // FGuid
		constexpr auto MaxDisplacement = 0x2b8; // float
		constexpr auto CachedExpressionData = 0x348; // FMaterialCachedExpressionData
	}

	namespace n_UScreenBase { // : UObject
		constexpr auto isAnimationDone = 0x30; // bool
		constexpr auto ScreenObject = 0x38; // UGFxObject*
		constexpr auto _screenController = 0x40; // UScreenController*
	}

	namespace n_UUMGTallyEmblemProgressBar { // : UMobileBaseUserWidget
		constexpr auto ProgressBar = 0x300; // UProgressBar*
		constexpr auto QualityContainer = 0x308; // UCanvasPanel*
		constexpr auto EmblemQualityClass = 0x310; // TSoftClassPtr<UObject>
		constexpr auto _emblemQualityAlignment = 0x340; // FVector2D
		constexpr auto _qualityFillImages = 0x348; // TMap<EEmblemQuality, FSlateBrush>
	}

	namespace n_UOpenHatchInteraction { // : UChargeableInteractionDefinition
		constexpr auto SnapToEscapeLocationDuration = 0x6d8; // float
		constexpr auto InteractionStoppedMontage = 0x6e0; // FAnimationMontageDescriptor
		constexpr auto InteractionSucceedMontage = 0x700; // FAnimationMontageDescriptor
	}

	namespace n_UImgMediaSource { // : UBaseMediaSource
		constexpr auto FrameRateOverride = 0x98; // FFrameRate
		constexpr auto ProxyOverride = 0xa0; // FString
		constexpr auto SequencePath = 0xb0; // FDirectoryPath
	}

	namespace n_USimpleConstructionScript { // : UObject
		constexpr auto RootNodes = 0x30; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x40; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x50; // USCS_Node*
	}

	namespace n_UBlightPowerStateAdjusting { // : UBlightPowerState
		constexpr auto _adjustRotationOnCollision = 0x180; // bool
		constexpr auto _bounceAwayFromCollision = 0x181; // bool
		constexpr auto _allowNavigation = 0x182; // bool
		constexpr auto _smashBreakables = 0x183; // bool
		constexpr auto _maxDistanceForSurvivorFacing = 0x188; // FDBDTunableRowHandle
	}

	namespace n_USoundNodeDialoguePlayer { // : USoundNode
		constexpr auto DialogueWaveParameter = 0x50; // FDialogueWaveParameter
		constexpr auto bLooping = 0x70; // char : 1
	}

	namespace n_ULiveLinkSourceSettings { // : UObject
		constexpr auto Mode = 0x30; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x38; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_APumpkin { // : ASpecialBehaviourInteractable
		constexpr auto _specialBehaviourId = 0x330; // FName
		constexpr auto _pumpkinType = 0x33c; // EPumpkinType
		constexpr auto _pumpkinInteraction = 0x340; // UPumpkinInteraction*
		constexpr auto _pumpkinInteractionKiller = 0x348; // UPumpkinInteraction*
		constexpr auto _pumpkinInteractionChargeable = 0x350; // UChargeableComponent*
		constexpr auto _pumpkinInteractionChargeableKiller = 0x358; // UChargeableComponent*
		constexpr auto _pumpkinInteractor = 0x360; // UInteractor*
		constexpr auto _pumpkinInteractionZone = 0x368; // UPrimitiveComponent*
		constexpr auto _outlineComponent = 0x370; // UDBDOutlineComponent*
		constexpr auto _pumpkinSkeletalMesh = 0x378; // USkeletalMeshComponent*
		constexpr auto _pumpkinInteractionSecondsToCharge = 0x380; // FDBDTunableRowHandle
		constexpr auto _pumpkinInteractionSecondsToChargeKiller = 0x3a8; // FDBDTunableRowHandle
		constexpr auto _auraColorWhileInteracting = 0x3d0; // FLinearColor
		constexpr auto _pumpkinTreatChance = 0x3e0; // FDBDTunableRowHandle
		constexpr auto _pumpkinTrickChance = 0x408; // FDBDTunableRowHandle
		constexpr auto _pumpkinTreatDuration = 0x430; // FDBDTunableRowHandle
		constexpr auto _pumpkinTrickDuration = 0x458; // FDBDTunableRowHandle
		constexpr auto _pumpkinSpeedBoost = 0x480; // FDBDTunableRowHandle
		constexpr auto _pumpkinSpeedDebuff = 0x4a8; // FDBDTunableRowHandle
		constexpr auto _pumpkinStatusEffect = 0x4d0; // UStatusEffect*
	}

	namespace n_UUMGAtlantaMatchConfigPageScroll { // : UUMGGridPageScrollWidget
		constexpr auto CharactersTabConfig = 0x438; // FCustomMatchTabConfig
		constexpr auto InventoryTabConfig = 0x478; // FCustomMatchTabConfig
		constexpr auto MapTabConfig = 0x4b8; // FCustomMatchTabConfig
	}

	namespace n_UEnvQueryGenerator_Cone { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto AlignedPointsDistance = 0x88; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xc8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0x108; // FAIDataProviderFloatValue
		constexpr auto Range = 0x148; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x188; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x190; // char : 1
	}

	namespace n_UPortalSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isDestroyingPortal = 0x530; // bool
		constexpr auto _isSpooked = 0x531; // bool
		constexpr auto _hasSkillCheckFailed = 0x532; // bool
	}

	namespace n_UWidgetAnimation { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x350; // UMovieScene*
		constexpr auto AnimationBindings = 0x358; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x368; // bool
		constexpr auto DisplayLabel = 0x370; // FString
	}

	namespace n_UForceFeedbackEffect { // : UObject
		constexpr auto ChannelDetails = 0x30; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x40; // float
	}

	namespace n_UHasFlag { // : UEventDrivenModifierCondition
		constexpr auto _flag = 0xe8; // FGameplayTag
	}

	namespace n_UOnlineMessagesContainerComponent { // : UActorComponent
		constexpr auto _messages = 0xb8; // TArray<FInboxMessageData>
	}

	namespace n_UBorderSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAndroidPermissionCallbackProxy { // : UObject
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UTireConfig { // : UDataAsset
		constexpr auto FrictionScale = 0x38; // float
		constexpr auto TireFrictionScales = 0x40; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UTutorialNotificationController { // : UObject
		constexpr auto OnBlockingNotificationDismissedEvent = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UAnimationWidget { // : UUserWidget
		constexpr auto _playRate = 0x260; // float
	}

	namespace n_UPerkCollectionComponent { // : UActorComponent
		constexpr auto _array = 0xb8; // TArray<UPerk*>
	}

	namespace n_UNavModifierComponent { // : UNavRelevantComponent
		constexpr auto AreaClass = 0xe8; // UNavArea*
		constexpr auto FailsafeExtent = 0xf0; // FVector
		constexpr auto bIncludeAgentHeight = 0xfc; // char : 1
	}

	namespace n_UMapBuildDataRegistry { // : UObject
		constexpr auto LevelLightingQuality = 0x30; // ELightingBuildQuality
	}

	namespace n_UDeception { // : UPerk
		constexpr auto _noScratchMarksDuration = 0x3d0; // float [0x3]
		constexpr auto _perkCooldownDuration = 0x3dc; // float [0x3]
		constexpr auto _statusEffect = 0x3e8; // UStatusEffect*
		constexpr auto _iconStrategy = 0x3f8; // UManualIconStrategy*
	}

	namespace n_UTransformMeshesToolProperties { // : UInteractiveToolPropertySet
		constexpr auto TransformMode = 0x58; // ETransformMeshesTransformMode
		constexpr auto bSetPivot = 0x59; // bool
		constexpr auto bEnableSnapDragging = 0x5a; // bool
		constexpr auto SnapDragSource = 0x5b; // ETransformMeshesSnapDragSource
		constexpr auto RotationMode = 0x5c; // ETransformMeshesSnapDragRotationMode
	}

	namespace n_ULoopBannerProvider { // : UObject
		constexpr auto _currentLoopIndex = 0x40; // int32_t
	}

	namespace n_ADBDGeneratorDrivenReflectionCaptureActor { // : AGeneratorDrivenActor
		constexpr auto genyReflectionCapture = 0x258; // UGenyReflectionCaptureComponent*
	}

	namespace n_UUMGAtlantaRitualsScreen { // : UMobileBaseUserWidget
		constexpr auto DailyTab = 0x300; // UUMGAtlantaRitualTab*
		constexpr auto WeeklyTab = 0x308; // UUMGAtlantaRitualTab*
		constexpr auto _atlantaRitualTitle = 0x310; // FText
		constexpr auto _endInLabel = 0x328; // FText
		constexpr auto _dailyButtonLabel = 0x340; // FText
		constexpr auto _weeklyButtonLabel = 0x358; // FText
		constexpr auto _dailyRemainingTime = 0x370; // FText
		constexpr auto _weeklyRemainingTime = 0x388; // FText
	}

	namespace n_UK25ChainStrikeInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chainStrikeStateMachineclass = 0x6d8; // UFiniteStateMachine*
		constexpr auto _repossessFadeOutTime = 0x6e0; // float
		constexpr auto _repossessFadeInTime = 0x6e8; // FDBDTunableRowHandle
		constexpr auto _gatewayPossessionFovModifierCurve = 0x710; // UCurveFloat*
		constexpr auto _controlledProjectilePossessionFovModifierCurve = 0x718; // UCurveFloat*
		constexpr auto _chargeTimeAfterGatewayPlacementCancelled = 0x720; // FDBDTunableRowHandle
		constexpr auto _chargeTimeAfterGatewayPossessionCancelled = 0x748; // FDBDTunableRowHandle
		constexpr auto _chargeTimeAfterControlledChainShot = 0x770; // FDBDTunableRowHandle
		constexpr auto _gatewayPossessionFovChangeDuration = 0x798; // FDBDTunableRowHandle
		constexpr auto _gatewayPossessionCameraPanTime = 0x7c0; // FDBDTunableRowHandle
		constexpr auto _controlledProjectilePossessionCameraPanTime = 0x7e8; // FDBDTunableRowHandle
		constexpr auto _controlledProjectilePossessionFovTimeChangeDuration = 0x810; // FDBDTunableRowHandle
		constexpr auto _stateMachine = 0x838; // UFiniteStateMachine*
		constexpr auto _authority_shouldIncrementChargeableComponent = 0x840; // bool
		constexpr auto _chainStrikeCameraViewTarget = 0x8a9; // EChainStrikeCameraViewTarget
		constexpr auto _hasHitSurvivor = 0x8aa; // bool
	}

	namespace n_UAISense_PointOfInterest { // : UAISense
		constexpr auto _sources = 0x90; // TArray<AActor*>
	}

	namespace n_ULightFunctionActorSpawner { // : UActorSpawner
		constexpr auto LightFunctionTexture = 0x2c8; // UTexture*
	}

	namespace n_ULunarEventComponent { // : UActorComponent
		constexpr auto _lanternCollectedCount = 0xd0; // int32_t
		constexpr auto _additionalEventProgressCount = 0xd4; // int32_t
	}

	namespace n_UWindowTitleBarArea { // : UContentWidget
		constexpr auto bWindowButtonsEnabled = 0x140; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x141; // bool
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
		constexpr auto PlayAudioComp = 0x38; // UAudioComponent*
	}

	namespace n_AVolumetricLightmapDensityVolume { // : AVolume
		constexpr auto AllowedMipLevelRange = 0x268; // FInt32Interval
	}

	namespace n_UAkSettingsPerUser { // : UObject
		constexpr auto WwiseWindowsInstallationPath = 0x30; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x40; // FFilePath
		constexpr auto WaapiIPAddress = 0x50; // FString
		constexpr auto WaapiPort = 0x60; // uint32_t
		constexpr auto AutoSyncSelection = 0x64; // bool
		constexpr auto SoundDataGenerationSkipLanguage = 0x66; // bool
	}

	namespace n_UMovieSceneNiagaraTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto COMPLETED = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraMeshRendererProperties { // : UNiagaraRendererProperties
		constexpr auto ParticleMesh = 0x58; // UStaticMesh*
		constexpr auto SortMode = 0x60; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x64; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x64; // char : 1
		constexpr auto OverrideMaterials = 0x68; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0x78; // FVector2D
		constexpr auto bSubImageBlend = 0x80; // char : 1
		constexpr auto FacingMode = 0x84; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0x88; // char : 1
		constexpr auto LockedAxis = 0x8c; // FVector
		constexpr auto LockedAxisSpace = 0x98; // ENiagaraMeshLockedAxisSpace
		constexpr auto PositionBinding = 0xa0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x130; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x250; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x2e0; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x370; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x490; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x520; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x5b0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x640; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x6d0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x760; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x7f0; // FNiagaraVariableAttributeBinding
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation { // : UGeometryCacheTrack
		constexpr auto NumMeshSamples = 0x60; // uint32_t
	}

	namespace n_UDidGameEventOccurred { // : UEventDrivenModifierCondition
		constexpr auto EventTag = 0xe8; // FGameplayTag
	}

	namespace n_UFixedFrameRateCustomTimeStep { // : UEngineCustomTimeStep
		constexpr auto FixedFrameRate = 0x30; // FFrameRate
	}

	namespace n_UUserDefinedImageCaptureProtocol { // : UUserDefinedCaptureProtocol
		constexpr auto Format = 0xe0; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xe1; // bool
		constexpr auto CompressionQuality = 0xe4; // int32_t
	}

	namespace n_UMaterialParameterCollection { // : UObject
		constexpr auto StateId = 0x30; // FGuid
		constexpr auto ScalarParameters = 0x40; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x50; // TArray<FCollectionVectorParameter>
	}

	namespace n_UMagicLeapLightingTrackingComponent { // : UActorComponent
		constexpr auto UseGlobalAmbience = 0xb8; // bool
		constexpr auto UseColorTemp = 0xb9; // bool
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x268; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x278; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x288; // TArray<FName>
	}

	namespace n_UAxisAngleGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x60; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x70; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x80; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x90; // bool
		constexpr auto RotationOrigin = 0x94; // FVector
		constexpr auto RotationAxis = 0xa0; // FVector
		constexpr auto RotationPlaneX = 0xac; // FVector
		constexpr auto RotationPlaneY = 0xb8; // FVector
		constexpr auto InteractionStartPoint = 0xc4; // FVector
		constexpr auto InteractionCurPoint = 0xd0; // FVector
		constexpr auto InteractionStartAngle = 0xdc; // float
		constexpr auto InteractionCurAngle = 0xe0; // float
	}

	namespace n_USourceEffectPannerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x78; // FSourceEffectPannerSettings
	}

	namespace n_UMovieSceneSkeletalAnimationTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x60; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x70; // bool
	}

	namespace n_UMovieSceneCapture { // : UObject
		constexpr auto ImageCaptureProtocolType = 0x40; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x60; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x80; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x88; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x90; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0x100; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0x101; // bool
		constexpr auto AdditionalCommandLineArguments = 0x108; // FString
		constexpr auto InheritedCommandLineArguments = 0x118; // FString
	}

	namespace n_ACharmAttacher { // : AActor
		constexpr auto OnAttachedOnActor = 0x230; // FMulticastInlineDelegate
		constexpr auto OnCharmAnimationTagsChanged = 0x240; // FMulticastInlineDelegate
		constexpr auto _chain = 0x250; // USkeletalMeshComponent*
		constexpr auto _attachedCharm = 0x258; // ACharm*
	}

	namespace n_UCoreCursor { // : UUserWidget
		constexpr auto CursorScaleBox = 0x260; // UScaleBox*
	}

	namespace n_APartyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x258; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2c0; // bool
		constexpr auto SessionTimeoutSecs = 0x2c4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2c8; // float
	}

	namespace n_UDBDRichPresenceSubsystem { // : UGameInstanceSubsystem
		constexpr auto _userType = 0x38; // ERichPresenceUserType
		constexpr auto _richPresenceStatus = 0x39; // ERichPresenceStatus
		constexpr auto _timerRate = 0x3c; // float
		constexpr auto _timerDelay = 0x40; // float
		constexpr auto _isValidSetup = 0x44; // bool
	}

	namespace n_UDatasmithPostProcessVolumeTemplate { // : UDatasmithObjectTemplate
		constexpr auto Settings = 0x40; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x80; // char : 1
		constexpr auto bUnbound = 0x80; // char : 1
	}

	namespace n_UNiagaraDataInterfaceTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_UFrenzyComponent { // : UActorComponent
		constexpr auto OnFrenzyStarted = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnFrenzyEnded = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnFrenzyEndedNoCooldown = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnInjuredBleedoutStartedDuringFrenzy = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnFrenzyReadyToStart = 0xf8; // FMulticastInlineDelegate
		constexpr auto _slasher = 0x178; // ASlasherPlayer*
		constexpr auto _cooldownInteraction = 0x1a8; // UInteractionDefinition*
	}

	namespace n_AFootSteps { // : AActor
		constexpr auto _raycastHalfAngle = 0x234; // float
		constexpr auto _raycastZOffset = 0x238; // float
		constexpr auto _raycastDistance = 0x23c; // float
		constexpr auto _material = 0x240; // UMaterial*
		constexpr auto _minimumDecalSize = 0x248; // float
		constexpr auto _maximumDecalSize = 0x24c; // float
		constexpr auto _projectionTickness = 0x250; // float
		constexpr auto _visibilityMultiplierInterpSpeed = 0x254; // float
		constexpr auto _fadeCurve = 0x258; // UCurveFloat*
		constexpr auto _veinsCurve = 0x260; // UCurveFloat*
		constexpr auto _decalPoolSize = 0x268; // FBHVRPerDetailModeInt
		constexpr auto _recycleThresholdPercentage = 0x308; // FBHVRPerDetailModeFloat
		constexpr auto _recycleDistancePercentage = 0x3a8; // FBHVRPerDetailModeFloat
		constexpr auto _maxOverlapping = 0x448; // FBHVRPerDetailModeInt
		constexpr auto _footSteps = 0x4e8; // TMap<UDBDDecalComponent*, FFootStep>
		constexpr auto _decalSpawner = 0x538; // UDecalSpawner*
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto action = 0x30; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x34; // float
		constexpr auto bSavedActiveState = 0x38; // char : 1
	}

	namespace n_UCoreInputPromptTextWidget { // : UCoreBaseUserWidget
		constexpr auto InputPrompt = 0x2d8; // UCoreInputPromptWidget*
		constexpr auto TextField = 0x2e0; // UTextBlock*
		constexpr auto InputKey = 0x2e8; // FKey
		constexpr auto Text = 0x308; // FText
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x48; // int32_t
		constexpr auto WorldPosition = 0x4c; // FExpressionInput
	}

	namespace n_UDreamPalletOutlineUpdateStrategy { // : UPalletOutlineUpdateStrategy
		constexpr auto _revealedByMapColor = 0x148; // FLinearColor
	}

	namespace n_APartyBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2f8; // FString
		constexpr auto PendingReservation = 0x308; // FPartyReservation
		constexpr auto RequestType = 0x358; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x359; // bool
		constexpr auto bCancelReservation = 0x35a; // bool
	}

	namespace n_AGenerator { // : AInteractable
		constexpr auto activated = 0x338; // bool
		constexpr auto IsRepaired = 0x339; // bool
		constexpr auto WasASMCachePreWarmTriggered = 0x33a; // bool
		constexpr auto IsPlaySkillcheckAesthetic = 0x33b; // bool
		constexpr auto ForceRevealToLocalPlayer = 0x33c; // bool
		constexpr auto KillerOutlineFadeCurve = 0x340; // UCurveLinearColor*
		constexpr auto NativePercentComplete = 0x348; // float
		constexpr auto OnGeneratorRepaired = 0x350; // FMulticastInlineDelegate
		constexpr auto OnGeneratorRepairedBySurvivor = 0x360; // FMulticastInlineDelegate
		constexpr auto OnIsDamagedChanged = 0x370; // FMulticastInlineDelegate
		constexpr auto FireLevelScoreEventOnFix = 0x3b0; // bool
		constexpr auto _activatedTopLightsTransformMap = 0x3b8; // TMap<FName, FTransform>
		constexpr auto _perceptionStimuliComponent = 0x408; // UAIPerceptionStimuliSourceComponent*
		constexpr auto _repairSemanticTag = 0x434; // FGameplayTag
		constexpr auto _damageData = 0x440; // FDamageData
		constexpr auto _isBlocked = 0x464; // bool
		constexpr auto _isBlockedFromCharging = 0x465; // bool
		constexpr auto _blockingSources = 0x468; // TSet<UObject*>
		constexpr auto _generatorCharge = 0x4b8; // UChargeableComponent*
		constexpr auto _playerStartTimes = 0x4c0; // TArray<FPlayerFloatTuple>
		constexpr auto _isAutoCompleted = 0x4e8; // bool
		constexpr auto _overchargeLevel = 0x4ec; // int32_t
		constexpr auto _coopRepairTracker = 0x4f0; // UCoopRepairTracker*
		constexpr auto _VFX_LightDistanceDefault = 0x508; // float
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x30; // FString
		constexpr auto HelpUsage = 0x40; // FString
		constexpr auto HelpWebLink = 0x50; // FString
		constexpr auto HelpParamNames = 0x60; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x70; // TArray<FString>
		constexpr auto IsServer = 0x80; // char : 1
		constexpr auto IsClient = 0x80; // char : 1
		constexpr auto IsEditor = 0x80; // char : 1
		constexpr auto LogToConsole = 0x80; // char : 1
		constexpr auto ShowErrorCount = 0x80; // char : 1
		constexpr auto ShowProgress = 0x80; // char : 1
	}

	namespace n_URectLightComponent { // : ULocalLightComponent
		constexpr auto SourceWidth = 0x3a8; // float
		constexpr auto SourceHeight = 0x3ac; // float
		constexpr auto BarnDoorAngle = 0x3b0; // float
		constexpr auto BarnDoorLength = 0x3b4; // float
		constexpr auto SourceTexture = 0x3b8; // UTexture*
	}

	namespace n_ALocker { // : AInteractable
		constexpr auto OnSurvivorInLockerChanged = 0x328; // FMulticastInlineDelegate
		constexpr auto FastDoorActivationAudibleRange = 0x338; // float
		constexpr auto NormalDoorActivationAudibleRange = 0x33c; // float
		constexpr auto _montageFollower = 0x340; // UAnimationMontageSlave*
		constexpr auto _montagePlayer = 0x348; // UMontagePlayer*
		constexpr auto _playerOpeningLocker = 0x350; // ADBDPlayer*
		constexpr auto _survivorInLocker = 0x358; // ACamperPlayer*
		constexpr auto _mainInteractor = 0x360; // UInteractor*
		constexpr auto _frontInteractionZone = 0x368; // UPrimitiveComponent*
		constexpr auto _searchEmpty = 0x370; // UInteractionDefinition*
		constexpr auto _searchPlayer = 0x378; // UInteractionDefinition*
		constexpr auto _killerInteractionActor = 0x380; // UChildActorComponent*
		constexpr auto _lockerAnimInstance = 0x388; // ULockerAnimInstance*
		constexpr auto _interactionExitClosetSemantics = 0x390; // FGameplayTagContainer
		constexpr auto _preventAllInteractions = 0x3f0; // bool
		constexpr auto _preventAllInteractionsLocally = 0x3f1; // bool
	}

	namespace n_UEdGraph { // : UObject
		constexpr auto Schema = 0x30; // UEdGraphSchema*
		constexpr auto Nodes = 0x38; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x48; // char : 1
		constexpr auto bAllowDeletion = 0x48; // char : 1
		constexpr auto bAllowRenaming = 0x48; // char : 1
	}

	namespace n_UPortalRadiusDetectorComponent { // : UActorComponent
		constexpr auto Portals = 0xb8; // TArray<ADemogorgonPortal*>
		constexpr auto _playersInsideRadius = 0xc8; // TArray<ADBDPlayer*>
	}

	namespace n_UDBDHud { // : UObject
		constexpr auto _statusViews = 0x30; // TMap<FName, AStatusView*>
	}

	namespace n_ADemogorgonPortal { // : AInteractable
		constexpr auto _portalAreaCollider = 0x328; // UPrimitiveComponent*
		constexpr auto _destroyChargeable = 0x330; // UChargeableComponent*
		constexpr auto _teleportChargeable = 0x338; // UChargeableComponent*
		constexpr auto _portalState = 0x340; // EDemogorgonPortalState
		constexpr auto _portalIdleSound = 0x348; // UAkAudioEvent*
		constexpr auto _portalDestroyingStart = 0x350; // UAkAudioEvent*
		constexpr auto _portalTeleportingSound = 0x358; // UAkAudioEvent*
		constexpr auto _destroyParticleSystem = 0x360; // UParticleSystem*
		constexpr auto _destroyDuration = 0x368; // float
	}

	namespace n_UUMGCharacterSelectionWidget { // : UMobileBaseUserWidget
		constexpr auto OnCharacterSelected = 0x300; // FMulticastInlineDelegate
		constexpr auto OnCharacterRoleButtonClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OnCharacterInfoButtonClicked = 0x320; // FMulticastInlineDelegate
		constexpr auto CharacterPageScrollWidget = 0x330; // UUMGCharacterPageScrollWidget*
		constexpr auto CharacterSelectSubMenu = 0x338; // UUMGCharacterSelectSubmenu*
		constexpr auto CharacterInfoWidget = 0x340; // UUMGCharacterInfoWidget*
		constexpr auto CharacterSwitcher = 0x348; // UWidgetSwitcher*
		constexpr auto _isKiller = 0x350; // bool
	}

	namespace n_UUMGMenuBaseBanner { // : UUMGBaseSideMainMenuButton
		constexpr auto BannerImage = 0x448; // UImage*
		constexpr auto Title = 0x450; // UTextBlock*
		constexpr auto DefaultBanner = 0x458; // TScriptInterface<ISlateTextureAtlasInterface>
	}

	namespace n_ULuminARSessionConfig { // : UARSessionConfig
		constexpr auto PlanesQuery = 0xb0; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x110; // int32_t
		constexpr auto MinPlaneArea = 0x114; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x118; // bool
		constexpr auto PlaneSearchExtents = 0x11c; // FVector
		constexpr auto PlaneQueryFlags = 0x128; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x138; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x139; // bool
	}

	namespace n_UUMGSettingSettingsContextWidget { // : UUMGSettingContextWidget
		constexpr auto MainVolumeOn = 0x3a8; // bool
		constexpr auto MainVolume = 0x3ac; // float
		constexpr auto MenuVolumeOn = 0x3b0; // bool
		constexpr auto MenuVolume = 0x3b4; // float
		constexpr auto IsLoggedIn = 0x3b8; // bool
		constexpr auto IsEnableUserCenterWithLoggedOut = 0x3b9; // bool
		constexpr auto IsLeaveTutorialButtonVisible = 0x3ba; // bool
		constexpr auto IsAutoDeclineFriendRequestOn = 0x3bb; // bool
	}

	namespace n_UGizmoPlaneTranslationParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_ABearTrap { // : ABaseTrap
		constexpr auto _interactionVolume = 0x4d8; // UBoxPlayerOverlapComponent*
		constexpr auto _trapPlayerDetectionZone = 0x4e0; // UCapsulePlayerOverlapComponent*
		constexpr auto _killerSafetyZoneComponent = 0x4e8; // UBoxComponent*
		constexpr auto _outlineComponent = 0x4f0; // UDBDOutlineComponent*
		constexpr auto _outlineUpdateStrategy = 0x4f8; // UBearTrapOutlineUpdateStrategy*
		constexpr auto _mapActorComponent = 0x500; // UMapActorComponent*
		constexpr auto _mapActorCollision = 0x508; // USphereComponent*
		constexpr auto _trapBlocker = 0x510; // USphereComponent*
		constexpr auto _montagePlayer = 0x518; // UMontagePlayer*
		constexpr auto _onIsTrapSetChanged = 0x520; // FMulticastInlineDelegate
		constexpr auto _ownerPlayer = 0x530; // ADBDPlayer*
		constexpr auto _dangerNavModifierComponent = 0x538; // UDBDNavModifierComponent*
		constexpr auto _isTrapperOutOfSafetyZone = 0x540; // bool
		constexpr auto _maximumAttemptsForSelfUntrap = 0x544; // int32_t
		constexpr auto _selfUntrapAttemptsRemaining = 0x548; // int32_t
		constexpr auto _mainInteractor = 0x550; // UInteractor*
		constexpr auto _trapSurvivor = 0x558; // UInteractionDefinition*
		constexpr auto _trapKiller = 0x560; // UInteractionDefinition*
		constexpr auto _trappedPlayer = 0x568; // ADBDPlayer*
		constexpr auto _animationMontageSlave = 0x5c8; // UAnimationMontageSlave*
	}

	namespace n_UMeshInspectorProperties { // : UInteractiveToolPropertySet
		constexpr auto bWireframe = 0x58; // bool
		constexpr auto bBoundaryEdges = 0x59; // bool
		constexpr auto bPolygonBorders = 0x5a; // bool
		constexpr auto bUVSeams = 0x5b; // bool
		constexpr auto bNormalSeams = 0x5c; // bool
		constexpr auto bNormalVectors = 0x5d; // bool
		constexpr auto bTangentVectors = 0x5e; // bool
		constexpr auto NormalLength = 0x60; // float
		constexpr auto TangentLength = 0x64; // float
	}

	namespace n_UHasGameplayTagEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _gameplayTagList = 0x48; // TArray<FGameplayTag>
	}

	namespace n_UMaterialExpressionArcsine { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UGameplayTask_WaitDelay { // : UGameplayTask
		constexpr auto OnFinish = 0x70; // FMulticastInlineDelegate
	}

	namespace n_ANavLinkProxy_Base { // : ANavLinkProxy
		constexpr auto WaitLinkOffset = 0x280; // float
		constexpr auto MoveOnEndPointTimeLimit = 0x284; // float
		constexpr auto NbMaxLinkUsers = 0x288; // int32_t
		constexpr auto _players = 0x290; // TMap<ADBDPlayer*, FMoveLinkPlayerInfo>
		constexpr auto _linkUsedByPlayers = 0x2e0; // TArray<ADBDPlayer*>
	}

	namespace n_UDBDReflectionCaptureSpawnerComponent { // : USceneComponent
		constexpr auto ReflectionSourceType = 0x210; // EReflectionSourceType
		constexpr auto Cubemap = 0x218; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x220; // float
		constexpr auto Brightness = 0x224; // float
		constexpr auto ContributionFactor = 0x228; // float
		constexpr auto IBLMultiplicator = 0x22c; // float
		constexpr auto bCanBeTinted = 0x230; // bool
		constexpr auto CaptureOffset = 0x234; // FVector
		constexpr auto SpawnedReflectionCaptures = 0x248; // TArray<AReflectionCapture*>
		constexpr auto SpawnedReflectionCaptureComponents = 0x258; // TArray<UReflectionCaptureComponent*>
	}

	namespace n_ABP_Menu_Slasher14_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_15 = 0x698; // UBP_Audio_KLR_14_C*
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto PhysMaterialMask = 0x410; // UPhysicalMaterialMask*
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x268; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x278; // char : 1
		constexpr auto bUnbound = 0x278; // char : 1
	}

	namespace n_ABP_Menu_Slasher19_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_20 = 0x698; // UBP_Audio_KLR_19_C*
		constexpr auto HarpoonMesh = 0x6a0; // USkeletalMeshComponent*
	}

	namespace n_UHalloweenEventComponent { // : UActorComponent
		constexpr auto _toxinVialComponent = 0xb8; // USectionnedChargeableComponent*
	}

	namespace n_USkillCheckPresenter { // : UHudPresenter
		constexpr auto SkillCheckWidgetClass = 0x108; // UUserWidget*
	}

	namespace n_UFurtiveChase { // : UPerk
		constexpr auto _maxTokensByLevel = 0x3d0; // int32_t [0x3]
		constexpr auto _terrorRadiusSuppressionPerToken = 0x3dc; // float
	}

	namespace n_UDeathBedRescueInteraction { // : UChargeableInteractionDefinition
		constexpr auto _loudNoiseRange = 0x6e0; // FDBDTunableRowHandle
	}

	namespace n_UInputAxisDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisDelegateBindings = 0x30; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_UAkXboxOneGDKInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x90; // FAkXboxOneGDKApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkXboxOneGDKAdvancedInitializationSettings
	}

	namespace n_UEditNormalsTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0x98; // UEditNormalsToolProperties*
		constexpr auto AdvancedProperties = 0xa0; // UEditNormalsAdvancedProperties*
		constexpr auto Previews = 0xa8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
	}

	namespace n_UEvaluatorCondition { // : UObject
		constexpr auto _conditionSubject = 0x30; // EConditionSubject
	}

	namespace n_UCoopRepairTracker { // : UObject
		constexpr auto _coopRepairerHistory = 0x30; // TArray<ADBDPlayer*>
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x40; // char : 1
		constexpr auto ClickedBannerDelegates = 0x48; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x58; // TArray<FDelegate>
	}

	namespace n_AK26CrowProjectile { // : AActor
		constexpr auto OnCrowProjectileStateChanged = 0x240; // FMulticastInlineDelegate
		constexpr auto OnIsBeingFlashlightedChanged = 0x250; // FMulticastInlineDelegate
		constexpr auto _originalFireLocation = 0x260; // FVector
		constexpr auto _projectileStateDetails = 0x270; // TMap<EK26ProjectileState, FK26ProjectileStateDetails>
		constexpr auto _summonTime = 0x2c0; // FDBDTunableRowHandle
		constexpr auto _detectionRadiusScaleX = 0x2e8; // FTunableStat
		constexpr auto _detectionRadiusScaleY = 0x368; // FTunableStat
		constexpr auto _detectionRadiusScaleZ = 0x3e8; // FTunableStat
		constexpr auto _crowFireAuraVisibilityForSurvivorsTime = 0x468; // FDBDTunableRowHandle
		constexpr auto _crowSummonAuraVisibilityForSurvivorsTime = 0x490; // FDBDTunableRowHandle
		constexpr auto _detectionRadiusFromAbove = 0x4b8; // FDBDTunableRowHandle
		constexpr auto _baseSpeed = 0x4e0; // FDBDTunableRowHandle
		constexpr auto _selfDestructTimeOnDestroyed = 0x508; // FDBDTunableRowHandle
		constexpr auto _requiredFlashlightTimeToDestroy = 0x530; // FDBDTunableRowHandle
		constexpr auto _flashlightablePointScale = 0x558; // FDBDTunableRowHandle
		constexpr auto _rangeToTriggerNearSurvivorSFX = 0x580; // FDBDTunableRowHandle
		constexpr auto _flashlightDisableTime = 0x5a8; // FDBDTunableRowHandle
		constexpr auto _onPathMovementSpeedModifierCurve = 0x5d0; // UCurveFloat*
		constexpr auto _offPathMovementSpeedModifierCurve = 0x5d8; // UCurveFloat*
		constexpr auto _projectileOffPathCurveDuration = 0x5e0; // float
		constexpr auto _path = 0x5e8; // TArray<FVector>
		constexpr auto _pooledPathIndex = 0x5f8; // int32_t
		constexpr auto _currentProjectileState = 0x5fc; // EK26ProjectileState
		constexpr auto _outlineUpdateStrategy = 0x600; // UK26PowerOutlineUpdateStrategy*
		constexpr auto _crowFlockOutlineUpdateStrategy = 0x608; // UK26PowerOutlineUpdateStrategy*
		constexpr auto _outlineComponent = 0x610; // UDBDOutlineComponent*
		constexpr auto _pathSplineComponent = 0x618; // USplineComponent*
		constexpr auto _collisionStaticMeshComponent = 0x620; // UStaticMeshComponent*
		constexpr auto _killerInstinctStaticMeshComponent = 0x628; // UStaticMeshComponent*
		constexpr auto _visualSkeletalMeshComponent = 0x630; // USkeletalMeshComponent*
		constexpr auto _rootComponent = 0x638; // USceneComponent*
		constexpr auto _firecrackerEffectHandlerComponent = 0x640; // UFirecrackerEffectHandlerComponent*
		constexpr auto _flashLightableComponent = 0x648; // UFlashlightableComponent*
		constexpr auto _lightBurnableComponent = 0x650; // ULightBurnable*
		constexpr auto _dangerNavModifierComponent = 0x658; // UDBDNavModifierComponent*
		constexpr auto flashlightPointCenter = 0x660; // USceneComponent*
		constexpr auto flashlightPointNorth = 0x668; // USceneComponent*
		constexpr auto flashlightPointEast = 0x670; // USceneComponent*
		constexpr auto flashlightPointSouth = 0x678; // USceneComponent*
		constexpr auto flashlightPointWest = 0x680; // USceneComponent*
		constexpr auto _k26ProjectileStateChangeDelegate = 0x688; // FMulticastInlineDelegate
		constexpr auto OnAcquiredChanged = 0x698; // FMulticastInlineDelegate
		constexpr auto _forwardDirection = 0x6b8; // FVector
		constexpr auto _isBeingFlashlighted = 0x6c4; // bool
		constexpr auto _lastFlashlightProgress = 0x6c8; // float
		constexpr auto _lastTimeFlashlightValueIncreased = 0x6cc; // float
		constexpr auto _fireTime = 0x6d0; // float
		constexpr auto _currentDistanceAlongSpline = 0x6d4; // float
		constexpr auto _offPathTime = 0x6d8; // float
		constexpr auto _statusHandlerComponent = 0x6e0; // UK26PowerStatusHandlerComponent*
		constexpr auto _ammoHandlerComponent = 0x6e8; // UK26AmmoHandlerComponent*
		constexpr auto _pathHandlerComponent = 0x6f0; // UK26PathHandlerComponent*
		constexpr auto _flashlightDestroyChargeable = 0x6f8; // UChargeableComponent*
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter { // : UMaterialExpressionRuntimeVirtualTextureSample
		constexpr auto ParameterName = 0xb0; // FName
		constexpr auto ExpressionGUID = 0xbc; // FGuid
		constexpr auto Group = 0xcc; // FName
	}

	namespace n_UEnvQueryNode { // : UObject
		constexpr auto VerNum = 0x30; // int32_t
	}

	namespace n_UShapeAnimInstance { // : UKillerAnimInstance
		constexpr auto _isTier3Active = 0x5a8; // bool
		constexpr auto _evilWithinComponent = 0x5b0; // UEvilWithinComponent*
	}

	namespace n_AConjoinedTwin { // : ADBDPlayer
		constexpr auto _restrictedPossessionAreaTracker = 0x10b8; // URangeToActorsTrackerComponent*
		constexpr auto _twinOutlineUpdateStrategy = 0x10c0; // UTwinOutlineUpdateStrategy*
		constexpr auto _twinLullabyAudioComponent = 0x10c8; // UAkComponent*
		constexpr auto _twinBlindingFX = 0x10d0; // UKillerBlindingFXComponent*
		constexpr auto _customizedAudio = 0x10d8; // UCustomizedAudioComponent*
		constexpr auto _attackerComponent = 0x10e0; // UDBDAttackerComponent*
		constexpr auto _maxWalkSpeed = 0x10e8; // FDBDTunableRowHandle
		constexpr auto _hitValidator = 0x1110; // UHitValidatorComponent*
		constexpr auto _hitValidationConfigurator = 0x1118; // UHitValidatorConfigurator*
		constexpr auto _gravityScale = 0x1120; // FDBDTunableRowHandle
		constexpr auto _animationFollower = 0x1148; // UAnimationMontageSlave*
		constexpr auto _revealDurationOnAttached = 0x1168; // FDBDTunableRowHandle
		constexpr auto _firstPersonViewComponent = 0x1190; // UTwinFirstPersonViewComponent*
		constexpr auto _eyesFlashlightable = 0x1198; // UFlashlightableComponent*
		constexpr auto _blindFlashlightTargetFXComponent = 0x11a0; // UBlindFlashlightTargetFXComponent*
		constexpr auto _firecrackerEffectHandlerComponent = 0x11a8; // UFirecrackerEffectHandlerComponent*
		constexpr auto _flashlightBlindEvasionScoreTimer = 0x11b8; // FFastTimer
		constexpr auto _flashlightEvasionScoreCooldown = 0x11e8; // FDBDTunableRowHandle
		constexpr auto _twinPossessNegationEffectComponent = 0x1210; // UTwinPossessNegationEffectComponent*
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x98; // FName
	}

	namespace n_UActionButton { // : UMobileBaseUserWidget
		constexpr auto DefaultImage = 0x300; // FSlateBrush
		constexpr auto IconImage = 0x390; // UImage*
		constexpr auto ToggleSmokeImage = 0x398; // UImage*
		constexpr auto Button = 0x3a0; // UButton*
		constexpr auto DefaultOpacity = 0x3a8; // float
		constexpr auto ToggledOpacity = 0x3ac; // float
		constexpr auto DisabledOpacity = 0x3b0; // float
		constexpr auto Normal = 0x3b8; // FSlateBrush
		constexpr auto Toggled = 0x448; // FSlateBrush
		constexpr auto Disabled = 0x4d8; // FSlateBrush
		constexpr auto _currentState = 0x568; // EActionButtonState
		constexpr auto _previousState = 0x569; // EActionButtonState
	}

	namespace n_UDestructibleComponent { // : USkinnedMeshComponent
		constexpr auto bFractureEffectOverride = 0x6d0; // char : 1
		constexpr auto FractureEffects = 0x6d8; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6e8; // bool
		constexpr auto LargeChunkThreshold = 0x6ec; // float
		constexpr auto OnComponentFracture = 0x700; // FMulticastInlineDelegate
	}

	namespace n_UActivateOnEventTimedStatusEffect { // : UStatusEffect
		constexpr auto _eventsToActivateOn = 0x350; // FGameplayTagContainer
	}

	namespace n_UOperatorField { // : UFieldNodeBase
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto RightField = 0xc0; // UFieldNodeBase*
		constexpr auto LeftField = 0xc8; // UFieldNodeBase*
		constexpr auto Operation = 0xd0; // EFieldOperationType
	}

	namespace n_ULightComponentBase { // : USceneComponent
		constexpr auto LightGuid = 0x210; // FGuid
		constexpr auto Brightness = 0x220; // float
		constexpr auto Intensity = 0x224; // float
		constexpr auto bStationaryLightWithStaticFallback = 0x228; // bool
		constexpr auto LightColor = 0x22c; // FColor
		constexpr auto LightPriority = 0x230; // float
		constexpr auto bAffectsWorld = 0x234; // char : 1
		constexpr auto CastShadows = 0x234; // char : 1
		constexpr auto CastStaticShadows = 0x234; // char : 1
		constexpr auto CastDynamicShadows = 0x234; // char : 1
		constexpr auto CastDynamicShadowsWithNewDefaultValue = 0x234; // char : 1
		constexpr auto DetailLevelBeforeCastShadows = 0x238; // EDetailMode
		constexpr auto DetailLevelBeforeCastDynamicShadows = 0x23c; // ELightingDetailMode
		constexpr auto CascadeShadowMapQualityReductionBHVR = 0x240; // int32_t
		constexpr auto bIgnoreDynamicObjectsInShadows = 0x244; // char : 1
		constexpr auto DetailLevelThresholdBeforeIgnoringDynamicObjectsInShadows = 0x248; // ELightingDetailMode
		constexpr auto bAffectTranslucentLighting = 0x24c; // char : 1
		constexpr auto bTransmission = 0x24c; // char : 1
		constexpr auto bCastVolumetricShadow = 0x24c; // char : 1
		constexpr auto bCastDeepShadow = 0x24c; // char : 1
		constexpr auto bCastRaytracedShadow = 0x24c; // char : 1
		constexpr auto bAffectReflection = 0x24c; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x24c; // char : 1
		constexpr auto IndirectLightingIntensity = 0x250; // float
		constexpr auto VolumetricScatteringIntensity = 0x254; // float
		constexpr auto AmbientOcclusionContribution = 0x258; // float
		constexpr auto SamplesPerPixel = 0x25c; // int32_t
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto InterpProperty = 0x30; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x50; // UObject*
	}

	namespace n_UNavigationScreenUMG { // : UNavigationScreen
		constexpr auto _atlNavigationScreen = 0x2b8; // UUMGLobbyScreen*
	}

	namespace n_UDBDNavMeshExplorerComponent { // : UActorComponent
		constexpr auto ExploreAtAgentMoveDistance = 0xb8; // float
		constexpr auto ExploreAtInterval = 0xbc; // float
		constexpr auto ExplorationBoxHalfExtent = 0xc0; // FAITunableParameter
		constexpr auto FullyAutoExploredAtGameTime = 0xd0; // int32_t
		constexpr auto _pathFollowingComponent = 0xd8; // UDBDPathFollowingComponent*
	}

	namespace n_UDateTimerUpdater { // : UObject
		constexpr auto _timers = 0x38; // TMap<UDateTimeProvider*, FDateTimerArray>
		constexpr auto _dateTimeProvider = 0x88; // TMap<UDateTimeProvider*, UDateTimeProvider*>
	}

	namespace n_UTranslucentOutlineRenderStrategy { // : UBaseOutlineRenderStrategy
		constexpr auto _replacementMaterials = 0x70; // TArray<UMaterialInterface*>
	}

	namespace n_UPPAB_Legion_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SubInput = 0x2b0; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x330; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x790; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xbf0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xc10; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ModifyBone = 0xc30; // FAnimNode_ModifyBone
	}

	namespace n_ALanternInteractable { // : AInteractable
		constexpr auto OnLanternStateChanged = 0x328; // FMulticastInlineDelegate
		constexpr auto OnLanternCollectedByPlayerCosmetic = 0x338; // FMulticastInlineDelegate
		constexpr auto _collectableClass = 0x368; // ALanternLightCollectable*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass { // : UEnvQueryGenerator
		constexpr auto SearchedActorClass = 0x58; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x60; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0xa0; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xe0; // UEnvQueryContext*
	}

	namespace n_UDistributionVector { // : UDistribution
		constexpr auto bCanBeBaked = 0x38; // char : 1
		constexpr auto bIsDirty = 0x38; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x38; // char : 1
	}

	namespace n_UPaperSpriteComponent { // : UMeshComponent
		constexpr auto SourceSprite = 0x478; // UPaperSprite*
		constexpr auto MaterialOverride = 0x480; // UMaterialInterface*
		constexpr auto SpriteColor = 0x488; // FLinearColor
	}

	namespace n_ASceneCapture2D { // : ASceneCapture
		constexpr auto CaptureComponent2D = 0x240; // USceneCaptureComponent2D*
	}

	namespace n_UDragDropOperation { // : UObject
		constexpr auto Tag = 0x30; // FString
		constexpr auto Payload = 0x40; // UObject*
		constexpr auto DefaultDragVisual = 0x48; // UWidget*
		constexpr auto Pivot = 0x50; // EDragPivot
		constexpr auto Offset = 0x54; // FVector2D
		constexpr auto OnDrop = 0x60; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x70; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionMin { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UPoseWatch { // : UObject
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x38; // FColor
	}

	namespace n_ADBDDebugGameMode { // : ADBDGameMode
		constexpr auto LoadoutIndex = 0x420; // TMap<ADBDPlayerController*, int32_t>
		constexpr auto PlayersWithItems = 0x470; // TSet<ADBDPlayer*>
		constexpr auto CamperPawnOverrides = 0x4c0; // TArray<FCamperLoadout>
		constexpr auto SlasherPawnOverrides = 0x4d0; // TArray<FSlasherLoadout>
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UTricksterSuperModeComponent { // : UActorComponent
		constexpr auto _isInSuperMode = 0xb8; // bool
		constexpr auto _isSuperModeReady = 0xb9; // bool
		constexpr auto _isInCooldown = 0xba; // bool
		constexpr auto _chargesToAddOnKnifeHit = 0xc8; // FDBDTunableRowHandle
		constexpr auto _superModeMaxCharge = 0xf0; // FDBDTunableRowHandle
		constexpr auto _superModeReadyDepletionPerSecond = 0x118; // FDBDTunableRowHandle
		constexpr auto _superModeActiveDuration = 0x140; // FTunableStat
		constexpr auto _superModeCooldown = 0x220; // FDBDTunableRowHandle
		constexpr auto _shouldDisableFlurryDuringCooldown = 0x248; // FDBDTunableRowHandle
	}

	namespace n_UInAppPurchaseCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UPolygonSelectionMechanic { // : UInteractionMechanic
		constexpr auto Properties = 0x58; // UPolygonSelectionMechanicProperties*
	}

	namespace n_UBreakpoint { // : UObject
		constexpr auto bEnabled = 0x30; // char : 1
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bStepOnce = 0x40; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x40; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x40; // char : 1
	}

	namespace n_UTreeView { // : UListView
		constexpr auto BP_OnGetItemChildren = 0x398; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x3b0; // FMulticastInlineDelegate
	}

	namespace n_UForThePeople { // : UPerk
		constexpr auto _brokenEffectDurations = 0x3dc; // float [0x3]
		constexpr auto _secondaryActionProperties = 0x3e8; // FSecondaryInteractionProperties
	}

	namespace n_AProceduralFoliageBlockingVolume { // : AVolume
		constexpr auto ProceduralFoliageVolume = 0x268; // AProceduralFoliageVolume*
	}

	namespace n_UAkMarkerCallbackInfo { // : UAkEventCallbackInfo
		constexpr auto Identifier = 0x40; // int32_t
		constexpr auto Position = 0x44; // int32_t
		constexpr auto label = 0x48; // FString
	}

	namespace n_UAnimCompress_RemoveLinearKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x48; // float
		constexpr auto MaxAngleDiff = 0x4c; // float
		constexpr auto MaxScaleDiff = 0x50; // float
		constexpr auto MaxEffectorDiff = 0x54; // float
		constexpr auto MinEffectorDiff = 0x58; // float
		constexpr auto EffectorDiffSocket = 0x5c; // float
		constexpr auto ParentKeyScale = 0x60; // float
		constexpr auto bRetarget = 0x64; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x64; // char : 1
	}

	namespace n_UBTService_BlackboardBase { // : UBTService
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UHasObjectStateWithMaxDuration { // : UHasObjectState
		constexpr auto _maxDuration = 0x150; // float
	}

	namespace n_UGunslingerAnimInstance { // : UKillerAnimInstance
		constexpr auto _isAiming = 0x5a8; // bool
		constexpr auto _isAimingWarmup = 0x5a9; // bool
		constexpr auto _isAimingCooldown = 0x5aa; // bool
		constexpr auto _isAimingReadyToShoot = 0x5ab; // bool
		constexpr auto _isFiring = 0x5ac; // bool
		constexpr auto _isInMissShotCooldown = 0x5ad; // bool
		constexpr auto _isInSuccessShot = 0x5ae; // bool
		constexpr auto _isLinked = 0x5af; // bool
		constexpr auto _isReeling = 0x5b0; // bool
		constexpr auto _isInGunState = 0x5b1; // bool
		constexpr auto _idleToAimAnimPlayrate = 0x5b4; // float
		constexpr auto _aimToIdleAnimPlayrate = 0x5b8; // float
		constexpr auto _fireAnimPlayRate = 0x5bc; // float
		constexpr auto _missShotCooldownAnimPlayRate = 0x5c0; // float
		constexpr auto _successShotAnimPlayRate = 0x5c4; // float
		constexpr auto _idleToAimAnim = 0x5c8; // UAnimSequence*
		constexpr auto _aimToIdleAnim = 0x5d0; // UAnimSequence*
		constexpr auto _fireAnim = 0x5d8; // UAnimSequence*
		constexpr auto _missShotCooldownAnim = 0x5e0; // UAnimSequence*
		constexpr auto _successShotAnim = 0x5e8; // UAnimSequence*
		constexpr auto _idleToAimAnimDuration = 0x5f0; // FDBDTunableRowHandle
		constexpr auto _aimToIdleAnimDuration = 0x618; // FDBDTunableRowHandle
		constexpr auto _fireAnimDuration = 0x640; // FDBDTunableRowHandle
		constexpr auto _missShotCooldownAnimDuration = 0x668; // FTunableStat
		constexpr auto _successShotAnimDuration = 0x6e8; // FDBDTunableRowHandle
	}

	namespace n_UCharacterMovementComponent { // : UPawnMovementComponent
		constexpr auto CharacterOwner = 0x158; // ACharacter*
		constexpr auto GravityScale = 0x160; // float
		constexpr auto MaxStepHeight = 0x164; // float
		constexpr auto JumpZVelocity = 0x168; // float
		constexpr auto JumpOffJumpZFactor = 0x16c; // float
		constexpr auto WalkableFloorAngle = 0x170; // float
		constexpr auto WalkableFloorZ = 0x174; // float
		constexpr auto MovementMode = 0x178; // EMovementMode
		constexpr auto CustomMovementMode = 0x179; // char
		constexpr auto NetworkSmoothingMode = 0x17a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x17c; // float
		constexpr auto MaxWalkSpeed = 0x19c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x1a0; // float
		constexpr auto MaxSwimSpeed = 0x1a4; // float
		constexpr auto MaxFlySpeed = 0x1a8; // float
		constexpr auto MaxCustomMovementSpeed = 0x1ac; // float
		constexpr auto MaxAcceleration = 0x1b0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1b4; // float
		constexpr auto BrakingFrictionFactor = 0x1b8; // float
		constexpr auto BrakingFriction = 0x1bc; // float
		constexpr auto BrakingSubStepTime = 0x1c0; // float
		constexpr auto BrakingDecelerationWalking = 0x1c4; // float
		constexpr auto BrakingDecelerationFalling = 0x1c8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1cc; // float
		constexpr auto BrakingDecelerationFlying = 0x1d0; // float
		constexpr auto AirControl = 0x1d4; // float
		constexpr auto AirControlBoostMultiplier = 0x1d8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1dc; // float
		constexpr auto FallingLateralFriction = 0x1e0; // float
		constexpr auto CrouchedHalfHeight = 0x1e4; // float
		constexpr auto Buoyancy = 0x1e8; // float
		constexpr auto PerchRadiusThreshold = 0x1ec; // float
		constexpr auto PerchAdditionalHeight = 0x1f0; // float
		constexpr auto RotationRate = 0x1f4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x200; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x200; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x200; // char : 1
		constexpr auto bOrientRotationToMovement = 0x200; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x200; // char : 1
		constexpr auto bMovementInProgress = 0x200; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x200; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x201; // char : 1
		constexpr auto bForceMaxAccel = 0x201; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x201; // char : 1
		constexpr auto bForceNextFloorCheck = 0x201; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x201; // char : 1
		constexpr auto bCanWalkOffLedges = 0x201; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x201; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x202; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x202; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x202; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x202; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x202; // char : 1
		constexpr auto bPushForceScaledToMass = 0x202; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x202; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x203; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x208; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x210; // float
		constexpr auto OutofWaterZ = 0x214; // float
		constexpr auto Mass = 0x218; // float
		constexpr auto StandingDownwardForceScale = 0x21c; // float
		constexpr auto InitialPushForceFactor = 0x220; // float
		constexpr auto PushForceFactor = 0x224; // float
		constexpr auto PushForcePointZOffsetFactor = 0x228; // float
		constexpr auto TouchForceFactor = 0x22c; // float
		constexpr auto MinTouchForce = 0x230; // float
		constexpr auto MaxTouchForce = 0x234; // float
		constexpr auto RepulsionForce = 0x238; // float
		constexpr auto Acceleration = 0x23c; // FVector
		constexpr auto LastUpdateRotation = 0x250; // FQuat
		constexpr auto LastUpdateLocation = 0x260; // FVector
		constexpr auto LastUpdateVelocity = 0x26c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x278; // float
		constexpr auto ServerLastClientGoodMoveAckTime = 0x27c; // float
		constexpr auto ServerLastClientAdjustmentTime = 0x280; // float
		constexpr auto PendingImpulseToApply = 0x284; // FVector
		constexpr auto PendingForceToApply = 0x290; // FVector
		constexpr auto AnalogInputModifier = 0x29c; // float
		constexpr auto MaxSimulationTimeStep = 0x2ac; // float
		constexpr auto MaxSimulationIterations = 0x2b0; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2b4; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2b8; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2bc; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2c0; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2c4; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2c8; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2cc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2d0; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2d4; // float
		constexpr auto NetProxyShrinkRadius = 0x2d8; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2dc; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2e0; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2e4; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2e8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2ec; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2f0; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x2f4; // float
		constexpr auto LedgeCheckThreshold = 0x2f8; // float
		constexpr auto JumpOutOfWaterPitch = 0x2fc; // float
		constexpr auto CurrentFloor = 0x300; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x39c; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x39d; // EMovementMode
		constexpr auto GroundMovementMode = 0x39e; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x39f; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x39f; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x39f; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x39f; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x39f; // char : 1
		constexpr auto bJustTeleported = 0x39f; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x39f; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x39f; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x3a0; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x3a0; // char : 1
		constexpr auto bNotifyApex = 0x3a0; // char : 1
		constexpr auto bCheatFlying = 0x3a0; // char : 1
		constexpr auto bWantsToCrouch = 0x3a0; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x3a0; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x3a0; // char : 1
		constexpr auto bFastAttachedMove = 0x3a0; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x3a1; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x3a1; // char : 1
		constexpr auto bPerformingJumpOff = 0x3a1; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x3a1; // char : 1
		constexpr auto bUseRVOAvoidance = 0x3a1; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x3a1; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x3a1; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x3a2; // char : 1
		constexpr auto LockRootMotionRotationPitch = 0x3a3; // bool
		constexpr auto LockRootMotionRotationYaw = 0x3a4; // bool
		constexpr auto LockRootMotionRotationRoll = 0x3a5; // bool
		constexpr auto bHasRequestedVelocity = 0x3a6; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x3a6; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x3a6; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x3a6; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x3a6; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3b8; // float
		constexpr auto RequestedVelocity = 0x3bc; // FVector
		constexpr auto AvoidanceUID = 0x3c8; // int32_t
		constexpr auto AvoidanceGroup = 0x3cc; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3d0; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3d4; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3d8; // float
		constexpr auto PendingLaunchVelocity = 0x3dc; // FVector
		constexpr auto NavMeshProjectionInterval = 0x490; // float
		constexpr auto NavMeshProjectionTimer = 0x494; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x498; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x49c; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x4a0; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x4a4; // float
		constexpr auto PostPhysicsTickFunction = 0x4a8; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4f0; // float
		constexpr auto CurrentRootMotion = 0x4f8; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0x5c0; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0x600; // FVector
	}

	namespace n_UDestroyBreakableDefinition { // : UInteractionDefinition
		constexpr auto _interactionTimePercentForDestroyEvent = 0x5b0; // float
		constexpr auto _breakable = 0x5e0; // ABreakableBase*
	}

	namespace n_USurvivorContaminationComponent { // : UActorComponent
		constexpr auto _isContaminated = 0xd0; // FTagStateBool
		constexpr auto _injectSerumChargeable = 0x100; // UChargeableComponent*
		constexpr auto _injectSerumSecondsToCharge = 0x108; // FDBDTunableRowHandle
		constexpr auto _contaminationHinderedSeconds = 0x130; // FTunableStat
		constexpr auto _contaminationHinderedValue = 0x1b0; // FDBDTunableRowHandle
		constexpr auto _injectSerumInteractionsClasses = 0x1e0; // TArray<UInteractionDefinition*>
		constexpr auto _injectSerumInteractions = 0x1f0; // TArray<UInteractionDefinition*>
	}

	namespace n_UBackgroundBlur { // : UContentWidget
		constexpr auto Padding = 0x140; // FMargin
		constexpr auto HorizontalAlignment = 0x150; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x151; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x152; // bool
		constexpr auto BlurStrength = 0x154; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x158; // bool
		constexpr auto BlurRadius = 0x15c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x160; // FSlateBrush
	}

	namespace n_UUMGAuthentificationProviderListWidget { // : UMobileBaseUserWidget
		constexpr auto GuestButtonContainer = 0x300; // UHorizontalBox*
	}

	namespace n_UEditNormalsToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bRecomputeNormals = 0x58; // bool
		constexpr auto NormalCalculationMethod = 0x59; // ENormalCalculationMethod
		constexpr auto bFixInconsistentNormals = 0x5a; // bool
		constexpr auto bInvertNormals = 0x5b; // bool
		constexpr auto SplitNormalMethod = 0x5c; // ESplitNormalMethod
		constexpr auto SharpEdgeAngleThreshold = 0x60; // float
		constexpr auto bAllowSharpVertices = 0x64; // bool
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x50; // TArray<FDistanceDatum>
	}

	namespace n_ULandscapeMeshProxyComponent { // : UStaticMeshComponent
		constexpr auto LandscapeGuid = 0x4e8; // FGuid
		constexpr auto ProxyComponentBases = 0x4f8; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x508; // int8_t
	}

	namespace n_UBTTask_MoveTo { // : UBTTask_BlackboardBase
		constexpr auto AcceptableRadius = 0xa8; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xb8; // float
		constexpr auto bObserveBlackboardValue = 0xbc; // char : 1
		constexpr auto bAllowStrafe = 0xbc; // char : 1
		constexpr auto bAllowPartialPath = 0xbc; // char : 1
		constexpr auto bTrackMovingGoal = 0xbc; // char : 1
		constexpr auto bProjectGoalLocation = 0xbc; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xbc; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xbc; // char : 1
		constexpr auto bStopOnOverlap = 0xbc; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xbd; // char : 1
	}

	namespace n_UGFxMoviePlayer { // : UObject
		constexpr auto SwfAssetName = 0x38; // FString
		constexpr auto Root = 0x48; // UGFxObject*
		constexpr auto bDisplayWithHudOff = 0x50; // char : 1
		constexpr auto bEnableGammaCorrection = 0x50; // char : 1
		constexpr auto bAllowInput = 0x50; // char : 1
		constexpr auto bAllowFocus = 0x50; // char : 1
		constexpr auto bCloseOnLevelChange = 0x50; // char : 1
		constexpr auto bOnlyOwnerFocusable = 0x50; // char : 1
		constexpr auto bDiscardNonOwnerInput = 0x50; // char : 1
		constexpr auto bCaptureKeyboardInput = 0x50; // char : 1
		constexpr auto bCaptureMouseInput = 0x51; // char : 1
		constexpr auto bCaptureGamepadInput = 0x51; // char : 1
		constexpr auto bCaptureTouchInput = 0x51; // char : 1
		constexpr auto bIsSplitscreenLayoutModified = 0x51; // char : 1
		constexpr auto bShowDefaultMouseCursor = 0x51; // char : 1
		constexpr auto bBlurLesserMovies = 0x51; // char : 1
		constexpr auto bHideLesserMovies = 0x51; // char : 1
		constexpr auto bIsPriorityBlurred = 0x51; // char : 1
		constexpr auto bIsPriorityHidden = 0x52; // char : 1
		constexpr auto bIgnoreVisibilityEffect = 0x52; // char : 1
		constexpr auto bIgnoreBlurEffect = 0x52; // char : 1
		constexpr auto bRefreshed = 0x52; // char : 1
		constexpr auto bPerformHitTest = 0x52; // char : 1
		constexpr auto HitTestType = 0x54; // GFxHitTestType
		constexpr auto RenderTexture = 0x58; // UTextureRenderTarget2D*
		constexpr auto ExternalInterface = 0x60; // UObject*
		constexpr auto CaptureKeys = 0x68; // TArray<FKey>
		constexpr auto FocusIgnoreKeys = 0x78; // TArray<FKey>
		constexpr auto ExternalTextures = 0x88; // TArray<FExternalTexture>
		constexpr auto RenderTextureMode = 0x98; // EGFxRenderTextureMode
		constexpr auto Priority = 0x99; // char
		constexpr auto WidgetBindings = 0xa0; // TArray<FGFxWidgetBinding>
		constexpr auto SplitscreenLayoutYAdjust = 0xb0; // int32_t
		constexpr auto OnFsCommand = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnStartCommand = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnCloseCommand = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnTickCommand = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnFocusGainedCommand = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnFocusLostCommand = 0x108; // FMulticastInlineDelegate
		constexpr auto CachedMovieClipsArray = 0x1d0; // TArray<UGFxObject*>
	}

	namespace n_ANiagaraPreviewGrid { // : AActor
		constexpr auto System = 0x230; // UNiagaraSystem*
		constexpr auto ResetMode = 0x238; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x240; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x248; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x250; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x258; // float
		constexpr auto SpacingY = 0x25c; // float
		constexpr auto NumX = 0x260; // int32_t
		constexpr auto NumY = 0x264; // int32_t
		constexpr auto PreviewComponents = 0x268; // TArray<UChildActorComponent*>
	}

	namespace n_ADBDClientSyncer { // : AActor
		constexpr auto _actorsToSpawnLocally = 0x230; // TArray<FSpawnInfo>
		constexpr auto _currentQueue = 0x240; // TArray<FSpawnInfo>
		constexpr auto _tileMap = 0x258; // UPaperTileMap*
	}

	namespace n_UBTService_DefaultFocus { // : UBTService_BlackboardBase
		constexpr auto FocusPriority = 0xa8; // char
	}

	namespace n_UAISkill_FindCollectable { // : UAISkill_FindInteractable
		constexpr auto CollectUnderItemCount = 0x118; // int32_t
		constexpr auto CollectOverItemChargeRatio = 0x11c; // float
	}

	namespace n_USystemTimeTimecodeProvider { // : UTimecodeProvider
		constexpr auto FrameRate = 0x38; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x40; // bool
		constexpr auto bUseHighPerformanceClock = 0x41; // bool
	}

	namespace n_UBorder { // : UContentWidget
		constexpr auto HorizontalAlignment = 0x140; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x141; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x142; // char : 1
		constexpr auto ContentColorAndOpacity = 0x144; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x154; // FDelegate
		constexpr auto Padding = 0x168; // FMargin
		constexpr auto Background = 0x178; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x208; // FDelegate
		constexpr auto BrushColor = 0x21c; // FLinearColor
		constexpr auto BrushColorDelegate = 0x22c; // FDelegate
		constexpr auto DesiredSizeScale = 0x240; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x248; // bool
		constexpr auto OnMouseButtonDownEvent = 0x24c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x260; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x274; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x288; // FDelegate
	}

	namespace n_UNavLinkComponent { // : UPrimitiveComponent
		constexpr auto Links = 0x430; // TArray<FNavigationLink>
	}

	namespace n_AZombieAIController { // : AAIController
		constexpr auto _zombieBehaviorTree = 0x358; // UBehaviorTree*
		constexpr auto _aiPerceptionComponent = 0x360; // UAIPerceptionComponent*
		constexpr auto _survivorInVision = 0x370; // TArray<ACamperPlayer*>
		constexpr auto _chaseTargetSurvivor = 0x380; // ACamperPlayer*
		constexpr auto _goToLocation = 0x388; // FVector
		constexpr auto _survivorsInAttackDetector = 0x3a0; // TArray<ACamperPlayer*>
		constexpr auto _zombieAttackHitTime = 0x3b0; // FDBDTunableRowHandle
		constexpr auto _zombieAttackOpenTime = 0x3d8; // FDBDTunableRowHandle
		constexpr auto _zombieAnimSpawnTime = 0x400; // FDBDTunableRowHandle
		constexpr auto _zombieAnimDyingTime = 0x428; // FDBDTunableRowHandle
		constexpr auto _zombieSightRadius = 0x450; // FTunableStat
		constexpr auto _zombieLoseSightRadius = 0x4d0; // FTunableStat
		constexpr auto _zombieVisionHalfAngle = 0x550; // FTunableStat
		constexpr auto _zombieFallSmashTime = 0x5d0; // FDBDTunableRowHandle
		constexpr auto _zombieAttackCooldownTime = 0x5f8; // FDBDTunableRowHandle
	}

	namespace n_ATimerGate { // : AGate
		constexpr auto _currentTime = 0x248; // float
	}

	namespace n_UBlinkIndicatorController { // : UActorComponent
		constexpr auto _indicatorClass = 0xb8; // AActor*
		constexpr auto _activationFlag = 0xc0; // FGameplayTag
		constexpr auto _indicatorMinimumVelocity = 0xcc; // float
		constexpr auto _indicatorVelocityEasingFactor = 0xd0; // float
		constexpr auto _indicator = 0xd8; // AActor*
	}

	namespace n_UOniCustomizationItemAnimInstance { // : UAnimInstance
		constexpr auto _isInDemonMode = 0x270; // bool
	}

	namespace n_UGeometryCacheCodecBase { // : UObject
		constexpr auto TopologyRanges = 0x30; // TArray<int32_t>
	}

	namespace n_UAnimNotifyState_Trail { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto FirstSocketName = 0x40; // FName
		constexpr auto SecondSocketName = 0x4c; // FName
		constexpr auto WidthScaleMode = 0x58; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x5c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x68; // char : 1
	}

	namespace n_UCinematicManager { // : UObject
		constexpr auto _cinematicQueue = 0x48; // TArray<FCinematic>
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect { // : UAnimNotifyState
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto SocketName = 0x40; // FName
		constexpr auto LocationOffset = 0x4c; // FVector
		constexpr auto RotationOffset = 0x58; // FRotator
		constexpr auto bDestroyAtEnd = 0x64; // bool
	}

	namespace n_UBloodDecalEffect { // : UDataAsset
		constexpr auto AnimationTimelineCurve = 0x38; // UCurveFloat*
		constexpr auto DestroyTimelineCurve = 0x40; // UCurveFloat*
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto Normals = 0x58; // TArray<UTexture2D*>
		constexpr auto EnableVisualEffects = 0x68; // bool
		constexpr auto BloodDecalEffectIntensity = 0x70; // UBloodDecalEffectIntensity*
		constexpr auto ColorInterpolationSpeed = 0x78; // float
		constexpr auto DefalultDecalMaterial = 0x80; // UMaterialInterface*
	}

	namespace n_UARTrackedGeometry { // : UObject
		constexpr auto UniqueId = 0x30; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_UFleeComponent { // : UActorComponent
		constexpr auto _threat = 0xb8; // AActor*
	}

	namespace n_UThrillingTremors { // : UPerk
		constexpr auto _cooldownByLevel = 0x3d0; // int32_t [0x3]
		constexpr auto _durationByLevel = 0x3dc; // float [0x3]
		constexpr auto _disableWhenSurvivorPutDownOrUnhooked = 0x3e8; // bool
		constexpr auto _generatorAuraColorForKiller = 0x3ec; // FLinearColor
		constexpr auto _blockedGenerators = 0x400; // TArray<AGenerator*>
		constexpr auto _revealedGenerators = 0x410; // TArray<AGenerator*>
	}

	namespace n_UHillbillyChainsawAttack { // : UPounceAttack
		constexpr auto _chainsawHitGameEventTag = 0x3d8; // FGameplayTag
		constexpr auto _chainsawAttemptGameEventTag = 0x3e4; // FGameplayTag
	}

	namespace n_UCoreInteractionPromptsContainerWidget { // : UCoreBaseHudWidget
		constexpr auto CenterContainerBox = 0x300; // UDBDWrapBox*
		constexpr auto ContainerBox = 0x308; // UDBDWrapBox*
		constexpr auto InteractionPromptWidgetClass = 0x310; // UCoreInteractionPromptWidget*
		constexpr auto MaxDisplayedPrompts = 0x318; // int32_t
		constexpr auto MaxDisplayedCenterPrompts = 0x31c; // int32_t
		constexpr auto SlotMargin = 0x320; // FMargin
		constexpr auto _promptWidgetPool = 0x330; // TArray<UCoreInteractionPromptWidget*>
		constexpr auto _centerPromptWidgetPool = 0x340; // TArray<UCoreInteractionPromptWidget*>
		constexpr auto _displayedPromptsMap = 0x350; // TMap<FName, UCoreInteractionPromptWidget*>
	}

	namespace n_UMultipleEventsBeforeResetEventQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _gameEventsResettingProgress = 0x90; // TArray<FGameplayTag>
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UUserDefinedCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto World = 0x60; // UWorld*
	}

	namespace n_UAkAssetPlatformData { // : UObject
		constexpr auto CurrentAssetData = 0x30; // UAkAssetData*
	}

	namespace n_UNiagaraPrecompileContainer { // : UObject
		constexpr auto Scripts = 0x30; // TArray<UNiagaraScript*>
		constexpr auto System = 0x40; // UNiagaraSystem*
	}

	namespace n_APalletTracker { // : AActor
		constexpr auto _procedurallySpawnedPallet = 0x230; // APallet*
		constexpr auto _dreamPallet = 0x238; // APallet*
		constexpr auto _indicatorLocation = 0x240; // USceneComponent*
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto TargetGamma = 0xc0; // float
	}

	namespace n_UMaterialShaderQualitySettings { // : UObject
		constexpr auto ForwardSettingMap = 0x30; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UGhostStalkedComponent { // : UActorComponent
		constexpr auto OnIsMarkedChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnIsSpottingKillerChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto _isMarked = 0xd8; // FTagStateBool
		constexpr auto _ghostKillerInstinctEffect = 0x110; // UStatusEffect*
		constexpr auto _markTimer = 0x150; // UTimerObject*
		constexpr auto _killer = 0x168; // ASlasherPlayer*
		constexpr auto _stalkedComponent = 0x170; // UStalkedComponent*
	}

	namespace n_UProjectileMovementComponent { // : UMovementComponent
		constexpr auto InitialSpeed = 0xf8; // float
		constexpr auto MaxSpeed = 0xfc; // float
		constexpr auto bRotationFollowsVelocity = 0x100; // char : 1
		constexpr auto bRotationRemainsVertical = 0x100; // char : 1
		constexpr auto bShouldBounce = 0x100; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0x100; // char : 1
		constexpr auto bForceSubStepping = 0x100; // char : 1
		constexpr auto bSimulationEnabled = 0x100; // char : 1
		constexpr auto bSweepCollision = 0x100; // char : 1
		constexpr auto bIsHomingProjectile = 0x100; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0x101; // char : 1
		constexpr auto bIsSliding = 0x101; // char : 1
		constexpr auto bInterpMovement = 0x101; // char : 1
		constexpr auto bInterpRotation = 0x101; // char : 1
		constexpr auto PreviousHitTime = 0x104; // float
		constexpr auto PreviousHitNormal = 0x108; // FVector
		constexpr auto ProjectileGravityScale = 0x114; // float
		constexpr auto Buoyancy = 0x118; // float
		constexpr auto Bounciness = 0x11c; // float
		constexpr auto Friction = 0x120; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x124; // float
		constexpr auto MinFrictionFraction = 0x128; // float
		constexpr auto OnProjectileBounce = 0x130; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x140; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x150; // float
		constexpr auto HomingTargetComponent = 0x154; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x15c; // float
		constexpr auto MaxSimulationIterations = 0x160; // int32_t
		constexpr auto BounceAdditionalIterations = 0x164; // int32_t
		constexpr auto InterpLocationTime = 0x168; // float
		constexpr auto InterpRotationTime = 0x16c; // float
		constexpr auto InterpLocationMaxLagDistance = 0x170; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x174; // float
	}

	namespace n_UBrushSculptProperties { // : UInteractiveToolPropertySet
		constexpr auto bIsRemeshingEnabled = 0x58; // bool
		constexpr auto PrimaryBrushType = 0x59; // EDynamicMeshSculptBrushType
		constexpr auto PrimaryBrushSpeed = 0x5c; // float
		constexpr auto bPreserveUVFlow = 0x60; // bool
		constexpr auto bFreezeTarget = 0x61; // bool
		constexpr auto SmoothBrushSpeed = 0x64; // float
		constexpr auto bDetailPreservingSmooth = 0x68; // bool
	}

	namespace n_UNiagaraParameterCollection { // : UObject
		constexpr auto Namespace = 0x30; // FName
		constexpr auto Parameters = 0x40; // TArray<FNiagaraVariable>
		constexpr auto DefaultInstance = 0x50; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x58; // FGuid
	}

	namespace n_UUMGPromoPackPurchaseCurrencyButtonWidget { // : UUMGBaseCurrencyButtonWidget
		constexpr auto PercentageDiscountText = 0x4d8; // UTextBlock*
		constexpr auto UndiscountedPrice = 0x4e0; // UTextBlock*
		constexpr auto PercentageDiscountCanvas = 0x4e8; // UCanvasPanel*
		constexpr auto OverlayUndiscountedPrice = 0x4f0; // UOverlay*
	}

	namespace n_UBP_Audio_KLR_12_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UDifferentSurvivorsNearMeQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _foundSurvivors = 0x98; // TSet<ADBDPlayer*>
	}

	namespace n_UThrowingKnivesHitSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _hitByKnifeTrigger = 0x4f0; // bool
		constexpr auto _knifeHitCausedKOTrigger = 0x4f1; // bool
		constexpr auto _knifeHitCausedDamageTrigger = 0x4f2; // bool
		constexpr auto _useAlternateHitReactionState = 0x4f3; // bool
		constexpr auto _knifeHitAngle = 0x4f4; // float
		constexpr auto _knifeHitStateHitAngle = 0x4f8; // float
		constexpr auto _alternateKnifeHitStateHitAngle = 0x4fc; // float
	}

	namespace n_URancor { // : UPerk
		constexpr auto _survivorRevealDuration = 0x3d0; // float
		constexpr auto _killerRevealToObsessionDuration = 0x3d4; // float [0x3]
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0x78; // FInterpCurveVector
		constexpr auto CurveTension = 0x90; // float
	}

	namespace n_UContentScheduleManager { // : UObject
		constexpr auto _availableMapLibrary = 0x138; // UObjectLibrary*
	}

	namespace n_AInteractable { // : AActor
		constexpr auto _singleZone = 0x290; // UPrimitiveComponent*
		constexpr auto _useSingleZone = 0x298; // bool
		constexpr auto _interactors = 0x2a0; // TArray<UInteractor*>
		constexpr auto _transformOptimizer = 0x2b0; // UInteractableTransformOptimizer*
		constexpr auto _zoneToInteractions = 0x2d8; // TMap<UPrimitiveComponent*, FInteractionArray>
	}

	namespace n_UCustomizedSkeletalMesh { // : UActorComponent
		constexpr auto SlaveAnimInstanceClass = 0xb8; // USlaveAnimInstance*
		constexpr auto OnMeshSwitchBP = 0xc0; // FMulticastInlineDelegate
		constexpr auto _meshOwner = 0x100; // USkinnedMeshComponent*
		constexpr auto _ignoredItemCategories = 0x110; // TSet<ECustomizationCategory>
		constexpr auto Components = 0x160; // TArray<USkeletalMeshComponent*>
		constexpr auto _categoryToComponents = 0x170; // TMap<ECustomizationCategory, USkeletalMeshComponent*>
		constexpr auto Slaves = 0x1c0; // TArray<USkeletalMeshComponent*>
		constexpr auto _itemVfxs = 0x1d0; // TMap<ECustomizationCategory, AItemVfx*>
		constexpr auto _characterIdOverride = 0x2c0; // int32_t
	}

	namespace n_UInfectedInteractableComponent { // : UActorComponent
		constexpr auto VomitAlphaCurve = 0xb8; // UCurveFloat*
		constexpr auto VomitAlphaParameterName = 0xc0; // FName
		constexpr auto _vomitAlphaTimeline = 0xd0; // UTimelineComponent*
	}

	namespace n_UBTTask_InputPress { // : UBTTaskNode
		constexpr auto Input = 0x78; // EPawnInputPressTypes
		constexpr auto InputMode = 0x79; // ETaskInputPressModes
		constexpr auto InputPressLoopInterval = 0x7c; // FAITunableParameter
	}

	namespace n_URBTSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isRemovingRBT = 0x530; // bool
		constexpr auto _hasSkillCheckFailed = 0x531; // bool
	}

	namespace n_ANiagaraActor { // : AActor
		constexpr auto NiagaraComponent = 0x230; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x238; // char : 1
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto SortedInstances = 0x5a8; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5b8; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5c0; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x5dc; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x5f8; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x608; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x610; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x614; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x630; // bool
		constexpr auto InstanceCountToRender = 0x634; // int32_t
	}

	namespace n_UFileMediaSource { // : UBaseMediaSource
		constexpr auto FilePath = 0x98; // FString
		constexpr auto PrecacheFile = 0xa8; // bool
	}

	namespace n_ULamentConfigurationPlayerAnalyticsComponent { // : UActorComponent
		constexpr auto _analyticsCount = 0xb8; // int32_t
		constexpr auto _possessionAnalytics = 0xc0; // FLamentConfigurationPlayerPossessionData
	}

	namespace n_UGeneratorTeleportInteraction { // : UChargeableInteractionDefinition
		constexpr auto OnBloodSpurtsAINoiseEventRange = 0x6d8; // float
		constexpr auto _teleportCooldownTimer = 0x6e0; // UTimerObject*
		constexpr auto _selectedGenerator = 0x728; // AGenerator*
		constexpr auto _locallySelectedGenerator = 0x730; // AGenerator*
		constexpr auto _selectedTeleportLocation = 0x740; // FTransform
		constexpr auto _isInteractionOngoing = 0x770; // bool
		constexpr auto _teleportFailed = 0x771; // bool
		constexpr auto _bloodSpurtInterval = 0x774; // float
		constexpr auto _collisionCheckCapsuleHalfHeight = 0x778; // float
		constexpr auto _collisionCheckCapsuleRadius = 0x77c; // float
		constexpr auto _collisionCheckLocationOffset = 0x780; // FVector
		constexpr auto _capsuleTraceAngleIncrement = 0x78c; // float
		constexpr auto _generatorTeleportMaxAngle = 0x790; // float
		constexpr auto _downRaycastLength = 0x794; // float
	}

	namespace n_UPushTwinOnLockerInteraction { // : UChargeableInteractionDefinition
		constexpr auto _pushTwinOnLockerChargeable = 0x6d8; // UChargeableComponent*
		constexpr auto _pushTwinOnLockerMaxCharge = 0x6e0; // FDBDTunableRowHandle
	}

	namespace n_UCamaraderie { // : UPerk
		constexpr auto _percentUseItem = 0x3dc; // float [0x3]
		constexpr auto _pauseTimer = 0x3e8; // float [0x3]
		constexpr auto _needItemToTrigger = 0x3f4; // bool
	}

	namespace n_UCoreScreenIndicatorsContainerWidget { // : UCoreBaseHudWidget
		constexpr auto InactiveThreshold = 0x2f8; // float
		constexpr auto Container = 0x300; // UCanvasPanel*
		constexpr auto ScreenIndicatorClass = 0x308; // UCoreScreenIndicatorWidget*
		constexpr auto _screenIndicatorsMap = 0x310; // TMap<FString, UCoreScreenIndicatorWidget*>
		constexpr auto _screenIndicatorsPool = 0x360; // TArray<UCoreScreenIndicatorWidget*>
	}

	namespace n_UEditPivotToolActionPropertySet { // : UInteractiveToolPropertySet
		constexpr auto bUseWorldBox = 0x60; // bool
	}

	namespace n_UAnimSharingTransitionInstance { // : UAnimInstance
		constexpr auto FromComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x278; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x280; // float
		constexpr auto bBlendBool = 0x284; // bool
	}

	namespace n_UGridPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto GridManager = 0x260; // UNavLocalGridManager*
	}

	namespace n_UBTDecorator_ExtCompareBBEntries { // : UBTDecorator_CompareBBEntries
		constexpr auto Tolerance = 0xd8; // float
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x40; // float
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x38; // FRawDistributionVector
		constexpr auto LocationOffset = 0x80; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc8; // FRawDistributionVector
		constexpr auto Direction = 0x110; // FRawDistributionVector
	}

	namespace n_UMeshSelectionSet { // : USelectionSet
		constexpr auto Vertices = 0x48; // TArray<int32_t>
		constexpr auto Edges = 0x58; // TArray<int32_t>
		constexpr auto Faces = 0x68; // TArray<int32_t>
		constexpr auto Groups = 0x78; // TArray<int32_t>
	}

	namespace n_UUMGAtlantaRankUpPopup { // : UUMGGenericPopup
		constexpr auto RankBanner = 0x3e8; // UUMGTallyRankBanner*
		constexpr auto RewardsContainer = 0x3f0; // UHorizontalBox*
		constexpr auto RewardsSection = 0x3f8; // UCanvasPanel*
		constexpr auto RewardWidgetClass = 0x400; // TSoftClassPtr<UObject>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
	}

	namespace n_UUMGCharacterFreeTicketWidget { // : UMobileBaseUserWidget
		constexpr auto OnUseFreeTicketEvent = 0x300; // FMulticastInlineDelegate
		constexpr auto PanelSwitcher = 0x310; // UWidgetSwitcher*
		constexpr auto FreeTicketItemButtonBox = 0x318; // UVerticalBox*
		constexpr auto _buttonClass = 0x320; // TSoftClassPtr<UObject>
	}

	namespace n_UBTDecorator_IsBBEntryOfClass { // : UBTDecorator_BlackboardBase
		constexpr auto TestClass = 0xa0; // UObject*
	}

	namespace n_UInAppPurchaseComponent { // : UActorComponent
		constexpr auto InAppPurchaseLogMessage = 0xb8; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xc8; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xd8; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xe8; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0xf8; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x108; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UFSM_NotCondition { // : UFSM_Condition
		constexpr auto _condition = 0x38; // UFSM_Condition*
	}

	namespace n_UUMGCharacterInfoScreen { // : UMobileBaseUserWidget
		constexpr auto ContentPanel = 0x300; // UCanvasPanel*
		constexpr auto SurvivorInfoWidgetClass = 0x308; // TSoftClassPtr<UObject>
		constexpr auto KillerInfoWidgetClass = 0x338; // TSoftClassPtr<UObject>
		constexpr auto ProgressionButton = 0x368; // UUMGPopupButton*
		constexpr auto _onTeachableTooltipTriggeredLongPressEvent = 0x370; // FMulticastInlineDelegate
		constexpr auto _onPowerItemTooltipTriggeredLongPressEvent = 0x380; // FMulticastInlineDelegate
		constexpr auto _onProgressionButtonClickEvent = 0x390; // FMulticastInlineDelegate
	}

	namespace n_ULethalPursuer { // : UPerk
		constexpr auto _survivorRevealDuration = 0x3d0; // float [0x3]
	}

	namespace n_UAddon_K22Power_19 { // : UOnEventBaseAddon
		constexpr auto _auraRevealedDuration = 0x2a8; // float
	}

	namespace n_UFoliageInstancedStaticMeshComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto OnInstanceTakePointDamage = 0x688; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x698; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x6a8; // FGuid
	}

	namespace n_UBTTask_Interact { // : UBTTaskNode
		constexpr auto BBInteractorObj = 0x78; // FBlackboardKeySelector
		constexpr auto Input = 0xa8; // EPawnInputPressTypes
		constexpr auto OnFailFocusCooldownDuration = 0xac; // float
		constexpr auto PropagateCooldownOnInteractable = 0xb0; // bool
		constexpr auto FailStartInteractTimeLimit = 0xb4; // float
	}

	namespace n_UToIntegerField { // : UFieldNodeInt
		constexpr auto FloatField = 0xb8; // UFieldNodeFloat*
	}

	namespace n_UTimerObject { // : UActorComponent
		constexpr auto _replicationData = 0x118; // FReplicationTimerData
	}

	namespace n_ADatasmithAreaLightActor { // : AActor
		constexpr auto LightType = 0x230; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x231; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x234; // FVector2D
		constexpr auto Intensity = 0x23c; // float
		constexpr auto IntensityUnits = 0x240; // ELightUnits
		constexpr auto Color = 0x244; // FLinearColor
		constexpr auto Temperature = 0x254; // float
		constexpr auto IESTexture = 0x258; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x260; // bool
		constexpr auto IESBrightnessScale = 0x264; // float
		constexpr auto Rotation = 0x268; // FRotator
		constexpr auto SourceRadius = 0x274; // float
		constexpr auto SourceLength = 0x278; // float
		constexpr auto AttenuationRadius = 0x27c; // float
		constexpr auto SpotlightInnerAngle = 0x280; // float
		constexpr auto SpotlightOuterAngle = 0x284; // float
	}

	namespace n_UStaticMeshSocket { // : UObject
		constexpr auto SocketName = 0x30; // FName
		constexpr auto RelativeLocation = 0x3c; // FVector
		constexpr auto RelativeRotation = 0x48; // FRotator
		constexpr auto RelativeScale = 0x54; // FVector
		constexpr auto Tag = 0x60; // FString
	}

	namespace n_UDialogueWave { // : UObject
		constexpr auto bMature = 0x30; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x30; // char : 1
		constexpr auto SpokenText = 0x38; // FString
		constexpr auto SubtitleOverride = 0x48; // FString
		constexpr auto ContextMappings = 0x58; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x68; // FGuid
	}

	namespace n_UUMGHudEditorScreen { // : UUserWidget
		constexpr auto _hudEditorLayoutWidget = 0x260; // UUMGHudEditorLayoutWidget*
		constexpr auto _versionSwapWidget = 0x268; // UUMGHudEditorVersionWidget*
		constexpr auto _storedLayoutScreens = 0x270; // TMap<EPlayerRole, UUMGHudEditorLayoutScreen*>
		constexpr auto _currentLayoutScreen = 0x2c0; // UUMGHudEditorLayoutScreen*
		constexpr auto _onDropOverlapSound = 0x2c8; // UAkAudioEvent*
	}

	namespace n_UDBDNavEvadeLoopComponent { // : UActorComponent
		constexpr auto EvadeDoorExtent = 0xb8; // FVector
		constexpr auto EvadeDoorFrontPointOffset = 0xc4; // float
		constexpr auto EvadeDoorSideOffset = 0xc8; // float
		constexpr auto SideBlockerOffset = 0xcc; // float
		constexpr auto AutoSnapPointsUpHeight = 0xd0; // float
		constexpr auto AutoSnapPointsDownHeight = 0xd4; // float
		constexpr auto AutoSnapCollisionChannel = 0xd8; // ECollisionChannel
		constexpr auto EvadeLoopFilterClass = 0xe0; // UNavigationQueryFilter*
		constexpr auto MinSafetyLength = 0xe8; // float
		constexpr auto MaxSafetyLength = 0xec; // float
		constexpr auto LimitToSide = 0xf0; // EAIEvadeLoopSides
		constexpr auto DebugEditMode = 0xf1; // bool
		constexpr auto DrawDebugFilter = 0xf2; // bool
	}

	namespace n_UBTDecorator_CompareBBEntries { // : UBTDecorator
		constexpr auto Operator = 0x70; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x78; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0xa8; // FBlackboardKeySelector
	}

	namespace n_UAISkill_InteractionUseItem { // : UAISkill_Interaction
		constexpr auto ItemType = 0x170; // ELoadoutItemType
	}

	namespace n_ABP_AdaptiveShadowMapControllers_C { // : AActor
		constexpr auto GMAdaptiveShadowMapControllerSpotlights = 0x230; // UGMAdaptiveShadowMapControllerComponent*
		constexpr auto GMAdaptiveShadowMapControllerDirectional = 0x238; // UGMAdaptiveShadowMapControllerComponent*
		constexpr auto DefaultSceneRoot = 0x240; // USceneComponent*
	}

	namespace n_ABP_Menu_Slasher04_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_04 = 0x698; // UBP_Audio_KLR_04_C*
	}

	namespace n_UDBDBoxReflectionCaptureSpawnerComponent { // : UDBDReflectionCaptureSpawnerComponent
		constexpr auto InfluenceBox = 0x268; // FVector
		constexpr auto BoxTransitionDistance = 0x274; // float
		constexpr auto PreviewInfluenceBox = 0x278; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x280; // UBoxComponent*
	}

	namespace n_UCoreInteractionPromptActionWidget { // : UCoreBaseUserWidget
		constexpr auto InputPrompt = 0x2d8; // UCoreInputPromptWidget*
		constexpr auto InputPrompt2 = 0x2e0; // UCoreInputPromptWidget*
		constexpr auto InputPrompt3 = 0x2e8; // UCoreInputPromptWidget*
		constexpr auto InputPrompt4 = 0x2f0; // UCoreInputPromptWidget*
		constexpr auto IdleAnimationName = 0x2f8; // FName
		constexpr auto InputKey = 0x308; // FKey
		constexpr auto InputKey2 = 0x328; // FKey
		constexpr auto InputKey3 = 0x348; // FKey
		constexpr auto InputKey4 = 0x368; // FKey
	}

	namespace n_UUMGBaseCurrencyButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto FXImage = 0x430; // UImage*
		constexpr auto CurrencyColorImage = 0x438; // UImage*
		constexpr auto CurrencyIcon = 0x440; // UImage*
		constexpr auto PriceText = 0x448; // UTextBlock*
		constexpr auto AffordableColor = 0x450; // FSlateColor
		constexpr auto NotAffordableColor = 0x478; // FSlateColor
		constexpr auto DisabledOpacity = 0x4a0; // FLinearColor
		constexpr auto EnabledOpacity = 0x4b0; // FLinearColor
	}

	namespace n_UPositionLagCompensationComponent { // : UActorComponent
		constexpr auto _maxExtrapolationDurationInSeconds = 0xb8; // float
		constexpr auto _maxInterpolationToServerMoveInSeconds = 0xbc; // float
	}

	namespace n_UUMGAtlantaCalendarEventsTemplate { // : UUMGAtlantaBaseEventsTemplate
		constexpr auto DailyRewardGrid = 0x300; // UUMGAtlantaDailyRewardsGrid*
	}

	namespace n_UVirtualTexturePoolConfig { // : UObject
		constexpr auto DefaultSizeInMegabyte = 0x30; // int32_t
		constexpr auto Pools = 0x38; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UItemTooltipWidget { // : UBaseTooltipWidget
		constexpr auto RarityLabel = 0x338; // UTextBlock*
		constexpr auto WarningText = 0x340; // UUMGHtmlRichText*
		constexpr auto HeaderSmoke = 0x348; // UImage*
		constexpr auto HeaderBackground = 0x350; // UImage*
	}

	namespace n_UUMGPlayerRankInfo { // : UMobileBaseUserWidget
		constexpr auto PipsContainerWidget = 0x300; // UUMGTallyPipsContainer*
		constexpr auto RankFrameWidget = 0x308; // UUMGTallyRankFrame*
		constexpr auto Background = 0x310; // UImage*
		constexpr auto TitleLabel = 0x318; // UTextBlock*
		constexpr auto RankLabel = 0x320; // UTextBlock*
		constexpr auto pipLabel = 0x328; // UTextBlock*
		constexpr auto HighlightContainer = 0x330; // UCanvasPanel*
		constexpr auto _survivorColorBackground = 0x338; // FLinearColor
		constexpr auto _killerColorBackground = 0x348; // FLinearColor
		constexpr auto _disableOpacity = 0x358; // float
	}

	namespace n_UFSM_State { // : UObject
		constexpr auto _stateName = 0x30; // FName
		constexpr auto _shouldTick = 0x3c; // bool
		constexpr auto _defaultChildStateClass = 0x40; // UFSM_State*
		constexpr auto _transitions = 0x48; // TArray<UFSM_Transition*>
		constexpr auto _stateMachine = 0x58; // UFiniteStateMachine*
		constexpr auto _parentState = 0x60; // UFSM_State*
		constexpr auto _currentChildState = 0x68; // UFSM_State*
		constexpr auto _startTimestamp = 0x70; // float
	}

	namespace n_ALamentConfiguration { // : ACollectable
		constexpr auto _interactable = 0x508; // USpherePlayerOverlapComponent*
		constexpr auto _collectableInteractor = 0x510; // UInteractor*
		constexpr auto _survivorCollectItemInteraction = 0x518; // UK25CollectLamentConfigurationInteraction*
		constexpr auto _killerCollectItemInteraction = 0x520; // UK25CollectLamentConfigurationInteraction*
		constexpr auto _outlineComponent = 0x528; // UDBDOutlineComponent*
		constexpr auto _materialHelper = 0x530; // UMaterialHelper*
		constexpr auto _outlineStrategy = 0x538; // ULamentConfigurationOutlineStrategy*
		constexpr auto _spawnStrategy = 0x540; // ULamentConfigurationSpawnStrategy*
		constexpr auto _chainHuntComponent = 0x548; // ULamentConfigurationChainHuntComponent*
		constexpr auto _dotProductMinValue = 0x550; // float
		constexpr auto _survivorAttachmentSocket = 0x554; // EAttachToSocketNameEnum
		constexpr auto _killerAttachmentSocket = 0x555; // EAttachToSocketNameEnum
		constexpr auto _montageFollower = 0x558; // UAnimationMontageSlave*
		constexpr auto _montagePlayer = 0x560; // UMontagePlayer*
		constexpr auto _chainAnimationActorClass = 0x568; // AK25AnimationFollowerActor*
		constexpr auto _lamentConfigurationTeleportIndicatorClass = 0x570; // AK25LamentConfigurationTeleportIndicator*
		constexpr auto _chainAnimationFollowerAttachmentSocketName = 0x578; // FName
		constexpr auto _possessionSoundLoop = 0x588; // FAkObservedPlayerSoundLoop
		constexpr auto _respawnTimeAfterLamentConfigurationSolved = 0x5c8; // FDBDTunableRowHandle
		constexpr auto _respawnTimeAfterKillerPickUp = 0x5f0; // FDBDTunableRowHandle
		constexpr auto _respawnTimeAfterSurvivorFreeBySelf = 0x618; // FDBDTunableRowHandle
		constexpr auto _respawnTimeAfterSurvivorFreeByAttack = 0x640; // FDBDTunableRowHandle
		constexpr auto _numberChainsToLaunchUponKillerPickUpLamentConfiguration = 0x668; // FDBDTunableRowHandle
		constexpr auto _hostageInteractionTime = 0x690; // FDBDTunableRowHandle
		constexpr auto _localLamentConfigurationState = 0x6b8; // ELamentConfigurationState
		constexpr auto _lamentconfigurationState = 0x6b9; // ELamentConfigurationState
		constexpr auto _chainAnimationActor = 0x6c0; // AK25AnimationFollowerActor*
		constexpr auto _survivorHeldHostage = 0x710; // ACamperPlayer*
		constexpr auto _solvedLamentConfigurationDropDistanceToCollectorCentimeters = 0x740; // float
		constexpr auto _failedLamentConfigurationSolveDropDistanceToCollectorCentimeters = 0x744; // float
		constexpr auto _solved = 0x748; // bool
		constexpr auto _releasedByAttack = 0x749; // bool
		constexpr auto _lamentConfigurationTeleportIndicator = 0x750; // AK25LamentConfigurationTeleportIndicator*
	}

	namespace n_UResiliencePerk { // : UPerk
		constexpr auto _actionSpeed = 0x3d0; // float [0x3]
	}

	namespace n_UAudioCurveSourceComponent { // : UAudioComponent
		constexpr auto CurveSourceBindingName = 0x800; // FName
		constexpr auto CurveSyncOffset = 0x80c; // float
	}

	namespace n_ABaseCamperCollectable { // : ACollectable
		constexpr auto _interactable = 0x4d0; // USpherePlayerOverlapComponent*
		constexpr auto _collectableInteractor = 0x4d8; // UInteractor*
		constexpr auto _dropInteraction = 0x4e0; // UDropItemInteraction*
		constexpr auto _collectInteraction = 0x4e8; // UCollectItemInteraction*
		constexpr auto _infectablePrimitive = 0x4f0; // USphereComponent*
		constexpr auto _outlineComponent = 0x4f8; // UDBDOutlineComponent*
		constexpr auto _materialHelper = 0x500; // UMaterialHelper*
		constexpr auto _survivorCollectableOutlineUpdateStrategy = 0x508; // USurvivorCollectableOutlineUpdateStrategy*
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UMaterialExpressionReflectionVectorWS { // : UMaterialExpression
		constexpr auto CustomWorldNormal = 0x48; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x64; // char : 1
	}

	namespace n_UK25ChainStrikeState_OutOfBodyState { // : UK25ChainStrikeBaseState
		constexpr auto _fovTimeChangeDuration = 0xc8; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto ExponentIn = 0x48; // FExpressionInput
		constexpr auto Exponent = 0x64; // float
		constexpr auto BaseReflectFractionIn = 0x68; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x84; // float
		constexpr auto Normal = 0x88; // FExpressionInput
	}

	namespace n_UZombieAttractedByGeneratorBTService { // : UBTService_BlueprintBase
		constexpr auto _genRepairingHearingRange = 0xa0; // float
	}

	namespace n_UComboBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboBoxStyle = 0x38; // FComboBoxStyle
	}

	namespace n_UDecalCollection { // : UObject
		constexpr auto _decalComponentsArray = 0x30; // TArray<UDBDDecalComponent*>
		constexpr auto _activeDecalComponents = 0x40; // TSet<UDBDDecalComponent*>
		constexpr auto _inactiveDecalComponents = 0x90; // TSet<UDBDDecalComponent*>
		constexpr auto _DeltaZPool = 0xe0; // TArray<bool>
		constexpr auto _deltaZMultipliers = 0xf0; // TMap<UStaticMeshComponent*, int32_t>
	}

	namespace n_UBTTask_RunSkills { // : UBTTaskNode
		constexpr auto Context = 0x78; // FGameplayTag
	}

	namespace n_UAddon_TheBlight_21 { // : UItemAddon
		constexpr auto _forceKoStatusEffect = 0x298; // UStatusEffect*
	}

	namespace n_UPathStrategy_FleeLoop { // : UPathStrategy_Flee
		constexpr auto GameStateFleeLoopStrategyTable = 0xb8; // TMap<EAIDifficultyLevel, FGameStateEvadeLoopStrategyMapContainer>
		constexpr auto FleeLoopStrategyPathBuilders = 0x108; // TMap<EAIFleeLoopStrategy, UPathBuilder_EvadeLoop*>
		constexpr auto CanBranchUnderEndPathDistance = 0x158; // float
		constexpr auto BranchRolls = 0x160; // TMap<EAIFleeLoopStrategy, FAIRoll>
		constexpr auto RejectLoopBranchUnderEndPointsDistance = 0x1b0; // float
		constexpr auto RejectBranchPointNearerHostileSourceDistance = 0x1b4; // float
		constexpr auto RejectBranchUnderNavLinkDistance = 0x1b8; // float
		constexpr auto AddDistanceToRequiredBranchEvadeGap = 0x1bc; // float
	}

	namespace n_UInputActionDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputActionDelegateBindings = 0x30; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_ULandscapeGrassType { // : UObject
		constexpr auto GrassVarieties = 0x30; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x40; // char : 1
		constexpr auto GrassMesh = 0x48; // UStaticMesh*
		constexpr auto GrassDensity = 0x50; // float
		constexpr auto PlacementJitter = 0x54; // float
		constexpr auto StartCullDistance = 0x58; // int32_t
		constexpr auto EndCullDistance = 0x5c; // int32_t
		constexpr auto RandomRotation = 0x60; // bool
		constexpr auto AlignToSurface = 0x61; // bool
	}

	namespace n_UDrawPolyPathTool { // : UInteractiveTool
		constexpr auto TransformProps = 0xa8; // UDrawPolyPathProperties*
		constexpr auto ExtrudeProperties = 0xb0; // UDrawPolyPathExtrudeProperties*
		constexpr auto MaterialProperties = 0xb8; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x140; // UConstructionPlaneMechanic*
		constexpr auto EditPreview = 0x1e8; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x1f0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x1f8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x200; // UCollectSurfacePathMechanic*
	}

	namespace n_UCoreSubtitlesWidget { // : UCoreBaseUserWidget
		constexpr auto SubtitlesTB = 0x2e0; // UDBDTextBlock*
		constexpr auto NumberOfCharacterPerLine = 0x2e8; // int32_t
		constexpr auto DurationPerLine = 0x2ec; // float
		constexpr auto KeepSingleCharacter = 0x2f0; // bool
		constexpr auto _entryQueue = 0x2f8; // TArray<FSubtitlesEntry>
		constexpr auto _timerHandle = 0x308; // FTimerHandle
	}

	namespace n_UParticleModuleVectorFieldLocal { // : UParticleModuleVectorFieldBase
		constexpr auto VectorField = 0x38; // UVectorField*
		constexpr auto RelativeTranslation = 0x40; // FVector
		constexpr auto RelativeRotation = 0x4c; // FRotator
		constexpr auto RelativeScale3D = 0x58; // FVector
		constexpr auto Intensity = 0x64; // float
		constexpr auto Tightness = 0x68; // float
		constexpr auto bIgnoreComponentTransform = 0x6c; // char : 1
		constexpr auto bTileX = 0x6c; // char : 1
		constexpr auto bTileY = 0x6c; // char : 1
		constexpr auto bTileZ = 0x6c; // char : 1
		constexpr auto bUseFixDT = 0x6c; // char : 1
	}

	namespace n_USpectatorPawnMovement { // : UFloatingPawnMovement
		constexpr auto bIgnoreTimeDilation = 0x160; // char : 1
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x428; // FColor
		constexpr auto ArrowSize = 0x42c; // float
		constexpr auto ScreenSize = 0x430; // float
		constexpr auto bIsScreenSizeScaled = 0x434; // char : 1
		constexpr auto bTreatAsASprite = 0x434; // char : 1
	}

	namespace n_UPaperRuntimeSettings { // : UObject
		constexpr auto bEnableSpriteAtlasGroups = 0x30; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x31; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x32; // bool
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_UAISkill_InteractionTarget_Throw { // : UAISkill_InteractionTarget
		constexpr auto ThrowPredictionMode = 0x220; // EAIThrowPredictionModes
		constexpr auto MaxAddPitchAngle = 0x224; // int32_t
		constexpr auto ThrowProjectileMode = 0x228; // EAIThrowProjectileModes
		constexpr auto HoldInputTimeRandDeviation = 0x22c; // FAITunableParameter
		constexpr auto PitchAngleRandDeviation = 0x23c; // FAITunableParameter
	}

	namespace n_UWakerObjectAnimInstance { // : UAnimInstance
		constexpr auto _reappearTimerCooldown = 0x270; // float
		constexpr auto _wakeUpCharge = 0x274; // float
		constexpr auto _chargeStarted = 0x278; // bool
		constexpr auto _interactionComplete = 0x279; // bool
		constexpr auto _outEnd = 0x27a; // bool
		constexpr auto _reset = 0x27b; // bool
		constexpr auto _inEnd = 0x27c; // bool
		constexpr auto _wakerObjectStarted = 0x27d; // bool
		constexpr auto _respawnEnd = 0x27e; // bool
		constexpr auto _cancelEnd = 0x27f; // bool
	}

	namespace n_UBTDecorator_IsInteractionAvailable { // : UBTDecorator_TickableBase
		constexpr auto InteractionIds = 0x70; // TArray<FString>
		constexpr auto OnFilter = 0x80; // EIsInteractionAvailableOnFilter
		constexpr auto FailIfAnotherOngoingInteraction = 0x81; // bool
		constexpr auto FailIfNotPerformingInteraction = 0x82; // bool
	}

	namespace n_UTeleportToDemogorgonPortalInteraction { // : UChargeableInteractionDefinition
		constexpr auto _enterPortalPhaseDuration = 0x6d8; // float
		constexpr auto _cancelTeleportingPhaseDuration = 0x6dc; // float
		constexpr auto _portalTargetingComponent = 0x6e0; // UPortalTargetingComponent*
		constexpr auto _portalPlacerState = 0x6e8; // UPortalPlacerStateComponent*
		constexpr auto _startingPortal = 0x6f0; // ADemogorgonPortal*
		constexpr auto _targetedPortal = 0x6f8; // ADemogorgonPortal*
		constexpr auto _interactingPlayer = 0x700; // ADBDPlayer*
		constexpr auto _huskRef = 0x768; // AActor*
		constexpr auto ClassToSpawnForHusk = 0x770; // AActor*
	}

	namespace n_UBlightPowerStateDash { // : UBlightPowerState
		constexpr auto _vectorInterpToSpeed = 0x188; // FTunableStat
		constexpr auto _noDashTimeLimitSpeedCurve = 0x208; // UCurveFloat*
		constexpr auto _lookAngleToTurnRateCurveController = 0x210; // UCurveFloat*
		constexpr auto _lookAngleToTurnRateCurveMouse = 0x218; // UCurveFloat*
		constexpr auto _lookAngleToMaxTurnRateCurveMouse = 0x220; // UCurveFloat*
	}

	namespace n_UCamperDreamworldComponent { // : UCharacterDreamworldComponent
		constexpr auto OnCamperTriggeredDreamTrap = 0x108; // FMulticastInlineDelegate
		constexpr auto _survivorSleepiness = 0x118; // FSurvivorSleepiness
		constexpr auto _sleepinessProtectionRemainingDuration = 0x120; // float
		constexpr auto _sleepGainPerSecond = 0x124; // float
		constexpr auto _wakeUpByOtherCount = 0x12c; // int32_t
		constexpr auto _showKiller = 0x130; // bool
		constexpr auto _killerGlimpseDurationTimer = 0x138; // FFastTimer
		constexpr auto _killerGlimpseCooldownTimer = 0x178; // FFastTimer
		constexpr auto _glimpseMinDistance = 0x1b8; // float
		constexpr auto _glimpseMaxDistance = 0x1bc; // float
		constexpr auto _killerGlimpseCooldown = 0x1c0; // float
		constexpr auto _killerGlimpseDuration = 0x1c4; // float
		constexpr auto _wakeUpBySkillCheckCount = 0x1c8; // int32_t
		constexpr auto _fellAsleepCount = 0x1cc; // int32_t
		constexpr auto _forcedAsleep = 0x1d0; // bool
		constexpr auto _linkedWaker = 0x1d8; // AWakerObject*
		constexpr auto _useScriptedKillerVisibility = 0x1e0; // bool
		constexpr auto _showKillerInstantly = 0x1e8; // bool
	}

	namespace n_UPopupSequencer { // : UObject
		constexpr auto _gameInstance = 0x38; // UDBDGameInstance*
	}

	namespace n_UAISkill_FindCollectable_LamentConfiguration { // : UAISkill_FindCollectable
		constexpr auto StopChainHuntGoalWeight = 0x120; // FAITunableParameter
		constexpr auto PreemptiveFindLamentGoalWeight = 0x130; // FAITunableParameter
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x428; // UModel*
		constexpr auto BrushBodySetup = 0x430; // UBodySetup*
	}

	namespace n_UBlindableBaseComponent { // : UActorComponent
		constexpr auto _isBlinded = 0x148; // bool
		constexpr auto _isBeingBlinded = 0x150; // FTagStateBool
		constexpr auto _chargeableComponent = 0x180; // UChargeableComponent*
		constexpr auto _blindingEffectors = 0x188; // TMap<AActor*, TScriptInterface<IBlindingEffectorInterface>>
	}

	namespace n_UCharmSpawnerComponent { // : UActorComponent
		constexpr auto SocketRootName = 0xb8; // FName
		constexpr auto CharmSlots = 0xc8; // TArray<FCharmSlot>
		constexpr auto ScaleCharm = 0xd8; // FVector
		constexpr auto _forcedLOD = 0xe4; // int32_t
	}

	namespace n_APhysicsThruster { // : ARigidBodyBase
		constexpr auto ThrusterComponent = 0x230; // UPhysicsThrusterComponent*
	}

	namespace n_UEnvQueryTest_Dot { // : UEnvQueryTest
		constexpr auto LineA = 0x238; // FEnvDirection
		constexpr auto LineB = 0x258; // FEnvDirection
		constexpr auto TestMode = 0x278; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x279; // bool
	}

	namespace n_UPlayerOverlapHISMComponent { // : UHISMMaterialHelperComponent
		constexpr auto _playerInfluenceRadius = 0x6a8; // int32_t
		constexpr auto _playerOverlapOverrides = 0x6b0; // TArray<UMaterialInterface*>
	}

	namespace n_UBTDecorator_ExtTimeLimit { // : UBTDecorator_TimeLimit
		constexpr auto MaxTimeLimit = 0x80; // FAITunableParameter
		constexpr auto BBFilterKey = 0x90; // FBlackboardKeySelector
		constexpr auto FilterOperation = 0xc0; // EBasicKeyOperation
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto Text = 0x50; // FString
		constexpr auto CommentColor = 0x60; // FLinearColor
		constexpr auto FontSize = 0x70; // int32_t
	}

	namespace n_UCharacterSightableComponent { // : UActorComponent
		constexpr auto OnHighestSightStatusChangedBP = 0xe8; // FMulticastInlineDelegate
		constexpr auto _sightDelegateHandles = 0xf8; // TMap<TWeakObjectPtr<ACharacter>, FDelegateHandleWrapper>
		constexpr auto _sightersStatus = 0x148; // TMap<TWeakObjectPtr<ACharacter>, ESightStatus>
	}

	namespace n_UEventOccurredBetweenQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _middleEvent = 0xa0; // FGameplayTag
		constexpr auto outerEventsDifferentTargets = 0xac; // bool
	}

	namespace n_AOnlineBeaconHost { // : AOnlineBeacon
		constexpr auto ListenPort = 0x268; // int32_t
		constexpr auto ClientActors = 0x270; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UUMGPlayerNameInputPopup { // : UUMGGenericPopup
		constexpr auto NameInputTextBox = 0x3e8; // UEditableTextBox*
	}

	namespace n_UPathStrategySelector_Flee { // : UPathStrategySelector
		constexpr auto FleePathStrategies = 0x68; // TMap<EAIFleePathStrategy, UPathStrategy*>
		constexpr auto _activeFleePathStrategiesMap = 0xc0; // TMap<EAIFleePathStrategy, UPathStrategy*>
	}

	namespace n_UOnEventSetTimerAddon { // : UOnEventBaseAddon
		constexpr auto _addonEffectTime = 0x2a8; // float
	}

	namespace n_UPaperTileMapComponent { // : UMeshComponent
		constexpr auto MapWidth = 0x478; // int32_t
		constexpr auto MapHeight = 0x47c; // int32_t
		constexpr auto TileWidth = 0x480; // int32_t
		constexpr auto TileHeight = 0x484; // int32_t
		constexpr auto DefaultLayerTileSet = 0x488; // UPaperTileSet*
		constexpr auto Material = 0x490; // UMaterialInterface*
		constexpr auto TileLayers = 0x498; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x4a8; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4b8; // int32_t
		constexpr auto bUseSingleLayer = 0x4bc; // bool
		constexpr auto TileMap = 0x4c0; // UPaperTileMap*
	}

	namespace n_UGameplayTaskResource { // : UObject
		constexpr auto ManualResourceID = 0x30; // int32_t
		constexpr auto AutoResourceID = 0x34; // int8_t
		constexpr auto bManuallySetID = 0x38; // char : 1
	}

	namespace n_URestrictedPlacementAreaDefaultStrategy { // : URestrictedPlacementAreaStrategy
		constexpr auto RestrictedActor = 0x70; // AActor*
	}

	namespace n_AMockPoolableActor { // : AActor
		constexpr auto _poolable = 0x230; // UPoolableActorComponent*
	}

	namespace n_UAB_Menu_Slasher15_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x840; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0xca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x1560; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x19c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x1a60; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x1ad8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x1b78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1bb0; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x1c60; // bool
		constexpr auto Is Online = 0x1c61; // bool
	}

	namespace n_USpiritHuskActivePhaseWalkAnimInstance { // : USpiritHuskAnimInstance
		constexpr auto _elapsedTimeSinceFakingRealKillerPose = 0x280; // float
		constexpr auto _idleAnimationExplicitTime = 0x284; // float
		constexpr auto _idleAnimationSequence = 0x290; // UAnimSequence*
	}

	namespace n_ASceneCaptureCube { // : ASceneCapture
		constexpr auto CaptureComponentCube = 0x240; // USceneCaptureComponentCube*
	}

	namespace n_UCollectSerumInCrateInteraction { // : UCollectItemInteraction
		constexpr auto _owningSupplyCrate = 0x5d8; // ASupplyCrateInteractable*
	}

	namespace n_UGameplayTagsManager { // : UObject
		constexpr auto TagSources = 0xc8; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b8; // TArray<UDataTable*>
	}

	namespace n_UPacketHandlerProfileConfig { // : UObject
		constexpr auto Components = 0x30; // TArray<FString>
	}

	namespace n_UBTTask_ExtMoveTo { // : UBTTask_MoveTo
		constexpr auto BBStrafeFocus = 0xc0; // FBlackboardKeySelector
		constexpr auto StrafeFocus = 0xf0; // EExtMoveToStrafeFocusOptions
		constexpr auto StrafeFocusPitch = 0xf1; // bool
		constexpr auto StrafeNearFocusModeUnderDistance = 0xf4; // float
		constexpr auto IntermittentOnStrafeFocusInterval = 0xf8; // float
		constexpr auto IntermittentOnStrafeFocusDeviation = 0xfc; // float
		constexpr auto IntermittentOffStrafeFocusInterval = 0x100; // float
		constexpr auto IntermittentOffStrafeFocusDeviation = 0x104; // float
		constexpr auto EndMoveStrafeFocusPrecisionAngle = 0x108; // float
		constexpr auto StrafeFocusOwnerOnComponentBBKey = 0x10c; // bool
		constexpr auto ToGoalMovementMode = 0x10d; // ECharacterMovementTypes
		constexpr auto NearGoalMovementMode = 0x10e; // ECharacterMovementTypes
		constexpr auto NearGoalModeUnderDistance = 0x110; // float
		constexpr auto NormalMoveUnderNavLinkDistance = 0x114; // float
		constexpr auto BBIgnoreGroupAvoidance = 0x118; // FBlackboardKeySelector
		constexpr auto RepathInterval = 0x148; // float
		constexpr auto UseAccelerationForPaths = 0x14c; // bool
		constexpr auto PathReachedPointRadius = 0x150; // float
		constexpr auto UseContextualAcceptableRadius = 0x154; // FName
	}

	namespace n_ABP_Menu_CamperFemale12_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UCoreRewardWidget { // : UCoreButtonWidget
		constexpr auto RewardIcon = 0x398; // UDBDImage*
	}

	namespace n_UProceduralMeshComponent { // : UMeshComponent
		constexpr auto bUseComplexAsSimpleCollision = 0x480; // bool
		constexpr auto bUseAsyncCooking = 0x481; // bool
		constexpr auto ProcMeshBodySetup = 0x488; // UBodySetup*
		constexpr auto ProcMeshSections = 0x490; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x4a0; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4b0; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x4d0; // TArray<UBodySetup*>
	}

	namespace n_UNetworkSettings { // : UDeveloperSettings
		constexpr auto bVerifyPeer = 0x48; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x48; // char : 1
		constexpr auto MaxRepArraySize = 0x4c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x50; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x58; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_AGnome { // : ARespawnableInteractable
		constexpr auto _gnomeInteraction = 0x350; // UGnomeInteraction*
		constexpr auto _gnomeInteractionKiller = 0x358; // UGnomeInteraction*
		constexpr auto _gnomeInteractionChargeable = 0x360; // UChargeableComponent*
		constexpr auto _gnomeInteractionChargeableKiller = 0x368; // UChargeableComponent*
		constexpr auto _gnomeInteractor = 0x370; // UInteractor*
		constexpr auto _gnomeInteractionZone = 0x378; // UPrimitiveComponent*
		constexpr auto _outlineComponent = 0x380; // UDBDOutlineComponent*
		constexpr auto _gnomeSkeletalMesh = 0x388; // USkeletalMeshComponent*
		constexpr auto _gnomeInteractionSecondsToCharge = 0x390; // FDBDTunableRowHandle
		constexpr auto _gnomeInteractionSecondsToChargeKiller = 0x3b8; // FDBDTunableRowHandle
		constexpr auto _auraColorWhileInteracting = 0x3e0; // FLinearColor
	}

	namespace n_UCoreButtonSelector { // : UCoreBaseUserWidget
		constexpr auto OnSelectedDelegate = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnSelectedAgainDelegate = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnUnselectedDelegate = 0x2f8; // FMulticastInlineDelegate
		constexpr auto _buttons = 0x308; // TArray<UCoreSelectableButtonWidget*>
	}

	namespace n_UQuitMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UDBD_CrossDissolver { // : UActorComponent
		constexpr auto NewMaterials = 0xb8; // TArray<UMaterialInterface*>
		constexpr auto BaseSkeletalMesh = 0xc8; // TArray<USkeletalMeshComponent*>
		constexpr auto ClonedSkeletalMeshes = 0xd8; // TArray<USkeletalMeshComponent*>
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch { // : UMaterialExpression
		constexpr auto Normal = 0x48; // FExpressionInput
		constexpr auto RayTraced = 0x64; // FExpressionInput
	}

	namespace n_UMovieSceneSkeletalAnimationSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
	}

	namespace n_ATutorialsUtilities { // : AActor
		constexpr auto OnTutorialUIReady = 0x230; // FMulticastInlineDelegate
	}

	namespace n_UInputAxisKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputAxisKeyDelegateBindings = 0x30; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UFootstepsPerceptionComponent { // : UActorComponent
		constexpr auto _allowFootstepsSeenPerkFlags = 0xb8; // TArray<FGameplayTag>
		constexpr auto _disallowFootstepsSeenPerkFlags = 0xc8; // TArray<FGameplayTag>
	}

	namespace n_UDataTable { // : UObject
		constexpr auto RowStruct = 0x30; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x88; // char : 1
		constexpr auto bIgnoreExtraFields = 0x88; // char : 1
		constexpr auto bIgnoreMissingFields = 0x88; // char : 1
		constexpr auto ImportKeyField = 0x90; // FString
	}

	namespace n_UMovieSceneFloatSection { // : UMovieSceneSection
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_AProceduralFoliageVolume { // : AVolume
		constexpr auto ProceduralComponent = 0x268; // UProceduralFoliageComponent*
	}

	namespace n_UMaterialExpressionSobol { // : UMaterialExpression
		constexpr auto Cell = 0x48; // FExpressionInput
		constexpr auto Index = 0x64; // FExpressionInput
		constexpr auto Seed = 0x80; // FExpressionInput
		constexpr auto ConstIndex = 0x9c; // uint32_t
		constexpr auto ConstSeed = 0xa0; // FVector2D
	}

	namespace n_AOfferingSequenceAssets { // : AActor
		constexpr auto OfferingRevealDelays = 0x230; // TArray<FOfferingRevealDelays>
		constexpr auto Cards = 0x240; // TArray<AOfferingCard*>
	}

	namespace n_UProceduralShapeToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bInstanceIfPossible = 0x58; // bool
		constexpr auto Shape = 0x5c; // EMakeMeshShapeType
		constexpr auto Width = 0x60; // float
		constexpr auto Height = 0x64; // float
		constexpr auto FeatureRadius = 0x68; // float
		constexpr auto Slices = 0x6c; // int32_t
		constexpr auto Subdivisions = 0x70; // int32_t
		constexpr auto PolygroupMode = 0x74; // EMakeMeshPolygroupMode
		constexpr auto PlaceMode = 0x75; // EMakeMeshPlacementType
		constexpr auto PivotLocation = 0x76; // EMakeMeshPivotLocation
		constexpr auto Rotation = 0x78; // float
		constexpr auto bAlignShapeToPlacementSurface = 0x7c; // bool
	}

	namespace n_UScaleBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMenuAnchor { // : UContentWidget
		constexpr auto MenuClass = 0x140; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x148; // FDelegate
		constexpr auto Placement = 0x15c; // EMenuPlacement
		constexpr auto bFitInWindow = 0x15d; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x15e; // bool
		constexpr auto UseApplicationMenuStack = 0x15f; // bool
		constexpr auto OnMenuOpenChanged = 0x160; // FMulticastInlineDelegate
	}

	namespace n_UAkIOSInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x98; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa8; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xd0; // FAkAdvancedInitializationSettings
	}

	namespace n_UOutlineUpdateStrategy { // : UActorComponent
		constexpr auto _outlineComponent = 0xb8; // UDBDOutlineComponent*
	}

	namespace n_UPawnObserver { // : UUIComponent
		constexpr auto _pawn = 0xd8; // APawn*
	}

	namespace n_UMaterialExpressionChannelMaskParameter { // : UMaterialExpressionVectorParameter
		constexpr auto MaskChannel = 0x80; // EChannelMaskParameterColor
		constexpr auto Input = 0x84; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceVectorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x60; // FRichCurve
		constexpr auto YCurve = 0xe0; // FRichCurve
		constexpr auto ZCurve = 0x160; // FRichCurve
	}

	namespace n_UUMGAltantaRitual { // : UMobileBaseUserWidget
		constexpr auto _claimText = 0x300; // FText
		constexpr auto _claimedText = 0x318; // FText
		constexpr auto _completedText = 0x330; // FText
	}

	namespace n_UUMGSubscriptionsPageScrollWidget { // : UUMGGridPageScrollWidget
		constexpr auto SubscriptionPackButtonClass = 0x438; // TSoftClassPtr<UObject>
		constexpr auto ItemPadding = 0x468; // FVector2D
	}

	namespace n_UUMGTallyPip { // : UMobileBaseUserWidget
		constexpr auto Filling = 0x300; // UImage*
	}

	namespace n_UDrawPolygonToolSnapProperties { // : UInteractiveToolPropertySet
		constexpr auto bEnableSnapping = 0x58; // bool
		constexpr auto bSnapToWorldGrid = 0x59; // bool
		constexpr auto bSnapToVertices = 0x5a; // bool
		constexpr auto bSnapToEdges = 0x5b; // bool
		constexpr auto bSnapToAngles = 0x5c; // bool
		constexpr auto bSnapToLengths = 0x5d; // bool
		constexpr auto SegmentLength = 0x60; // float
		constexpr auto bHitSceneObjects = 0x64; // bool
		constexpr auto HitNormalOffset = 0x68; // float
	}

	namespace n_UAISense_Damage { // : UAISense
		constexpr auto RegisteredEvents = 0x90; // TArray<FAIDamageEvent>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FVector
		constexpr auto Max = 0x4c; // FVector
	}

	namespace n_UBaseKillerWeaponAnimInstance { // : UAnimInstance
		constexpr auto _attackState = 0x270; // EAttackSubstate
		constexpr auto _isCarrying = 0x271; // bool
		constexpr auto _isActive = 0x272; // bool
		constexpr auto _attackInPlayRate = 0x274; // float
		constexpr auto _attackIn = 0x278; // FAnimSequenceSelector
		constexpr auto _attackSwingPlayRate = 0x290; // float
		constexpr auto _attackSwing = 0x298; // FAnimSequenceSelector
		constexpr auto _attackMissPlayRate = 0x2b0; // float
		constexpr auto _attackMiss = 0x2b8; // FAnimSequenceSelector
		constexpr auto _attackHitPlayRate = 0x2d0; // float
		constexpr auto _attackHit = 0x2d8; // FAnimSequenceSelector
		constexpr auto _attackBounceOfWallPlayRate = 0x2f0; // float
		constexpr auto _attackBounceOfWall = 0x2f8; // FAnimSequenceSelector
		constexpr auto _firstPersonView = 0x320; // bool
	}

	namespace n_UK25ControlledProjectileMovementComponent { // : UPhysicsBasedProjectileMovementComponent
		constexpr auto _projectileBaseSpeed = 0x260; // FDBDTunableRowHandle
		constexpr auto _baseProjectileMaximumDistance = 0x288; // FDBDTunableRowHandle
		constexpr auto _projectileSpeedIncreaseTime = 0x2b0; // FDBDTunableRowHandle
		constexpr auto _maximumTravelDistanceStat = 0x2d8; // FTunableStat
		constexpr auto _projectileSpeedIncreaseMultiplier = 0x358; // UCurveFloat*
		constexpr auto _totaldistanceTravelled = 0x360; // float
	}

	namespace n_UBlinkPowerEventDispatcher { // : UActorComponent
		constexpr auto OnFinishPlaying = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnStartBlinkChargeEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnUpdateBlinkChargeEvent = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnStopBlinkChargeEvent = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnEnterBlinkEvent = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnUpdateBlinkEvent = 0x108; // FMulticastInlineDelegate
		constexpr auto OnExitBlinkEvent = 0x118; // FMulticastInlineDelegate
		constexpr auto OnEnterChainBlinkEvent = 0x128; // FMulticastInlineDelegate
		constexpr auto OnUpdateChainBlinkEvent = 0x138; // FMulticastInlineDelegate
		constexpr auto OnExitChainBlinkEvent = 0x148; // FMulticastInlineDelegate
		constexpr auto OnEnterCooldownEvent = 0x158; // FMulticastInlineDelegate
		constexpr auto OnUpdateCooldownEvent = 0x168; // FMulticastInlineDelegate
		constexpr auto OnExitCooldownEvent = 0x178; // FMulticastInlineDelegate
		constexpr auto OnIsBlinkingChangedEvent = 0x188; // FMulticastInlineDelegate
		constexpr auto OnIsChargingBlinkChangedEvent = 0x198; // FMulticastInlineDelegate
		constexpr auto OnBlinkChargeFullEvent = 0x1a8; // FMulticastInlineDelegate
		constexpr auto OnBlinkPowerStateChangedEvent = 0x1b8; // FMulticastInlineDelegate
		constexpr auto OnBlinkChargesChangedEvent = 0x1c8; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneEventRepeaterSection { // : UMovieSceneEventSectionBase
		constexpr auto Event = 0xe8; // FMovieSceneEvent
	}

	namespace n_USnowmanAnimInstance { // : UAnimInstance
		constexpr auto _isIdle = 0x270; // bool
		constexpr auto _isBeingEntered = 0x271; // bool
		constexpr auto _isControlled = 0x272; // bool
		constexpr auto _isDestroyed = 0x273; // bool
		constexpr auto _isBeingDestroyedDueToSurvivorRunExit = 0x274; // bool
		constexpr auto _isBeingDestroyedDueToKillerAttackWhileControlled = 0x275; // bool
		constexpr auto _isBeingDestroyedDueToKillerAttackWhileEmpty = 0x276; // bool
		constexpr auto _isSurvivorUsingSnowmanMoving = 0x277; // bool
		constexpr auto _snowman = 0x27c; // TWeakObjectPtr<ASnowman>
		constexpr auto _survivorUsingSnowman = 0x284; // TWeakObjectPtr<ACamperPlayer>
	}

	namespace n_ALevelVariantSetsActor { // : AActor
		constexpr auto LevelVariantSets = 0x230; // FSoftObjectPath
	}

	namespace n_ALobbyBeaconState { // : AInfo
		constexpr auto MaxPlayers = 0x230; // int32_t
		constexpr auto LobbyBeaconPlayerStateClass = 0x238; // ALobbyBeaconPlayerState*
		constexpr auto bLobbyStarted = 0x248; // bool
		constexpr auto WaitForPlayersTimeRemaining = 0x24c; // float
		constexpr auto Players = 0x250; // FLobbyPlayerStateInfoArray
	}

	namespace n_UGizmoTransformChangeStateTarget { // : UObject
		constexpr auto TransactionManager = 0x58; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UAkAudioEventData { // : UAkAssetDataSwitchContainer
		constexpr auto MaxAttenuationRadius = 0xb8; // float
		constexpr auto IsInfinite = 0xbc; // bool
		constexpr auto MinimumDuration = 0xc0; // float
		constexpr auto MaximumDuration = 0xc4; // float
		constexpr auto LocalizedMedia = 0xc8; // TMap<FString, UAkAssetDataSwitchContainer*>
		constexpr auto PostedEvents = 0x118; // TSet<UAkAudioEvent*>
		constexpr auto UserDefinedSends = 0x168; // TSet<UAkAuxBus*>
		constexpr auto PostedTriggers = 0x1b8; // TSet<UAkTrigger*>
		constexpr auto GroupValues = 0x208; // TSet<UAkGroupValue*>
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto DebugCameraControllerRef = 0x30; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x38; // ADebugCameraController*
	}

	namespace n_AARSharedWorldGameMode { // : AgameMode
		constexpr auto BufferSizePerChunk = 0x328; // int32_t
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x60; // FColor
	}

	namespace n_UAnimSharingInstance { // : UObject
		constexpr auto RegisteredActors = 0x30; // TArray<AActor*>
		constexpr auto StateProcessor = 0xb0; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xf0; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0x110; // UEnum*
		constexpr auto SharingActor = 0x118; // AActor*
	}

	namespace n_UAssetManagerSettings { // : UDeveloperSettings
		constexpr auto PrimaryAssetTypesToScan = 0x48; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x58; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x78; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x88; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x89; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x8a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x8b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xb0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xc0; // TSet<FName>
	}

	namespace n_UMediaSoundComponent { // : USynthComponent
		constexpr auto Channels = 0x6f0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6f4; // bool
		constexpr auto RateAdjustmentFactor = 0x6f8; // float
		constexpr auto RateAdjustmentRange = 0x6fc; // FFloatRange
		constexpr auto MediaPlayer = 0x710; // UMediaPlayer*
	}

	namespace n_ACamperPlayer { // : ADBDPlayer
		constexpr auto OnHookedStateChanged = 0x10d8; // FMulticastInlineDelegate
		constexpr auto OnGuidedStateChanged = 0x10e8; // FMulticastInlineDelegate
		constexpr auto OnPickedUpDelegate = 0x10f8; // FMulticastInlineDelegate
		constexpr auto OnPickedUpEndDelegate = 0x1108; // FMulticastInlineDelegate
		constexpr auto OnHPSlotChanged = 0x1118; // FMulticastInlineDelegate
		constexpr auto OnImmobilizeStateChanged = 0x1168; // FMulticastInlineDelegate
		constexpr auto OnHookEscapeFailedCosmetic = 0x11a8; // FMulticastInlineDelegate
		constexpr auto InputMashCount = 0x11b8; // float
		constexpr auto InputMashDecayTime = 0x11bc; // float
		constexpr auto ReverseBearTrapAttachSocket = 0x11c0; // FName
		constexpr auto isBeingDissolved = 0x11cc; // bool
		constexpr auto FootprintAudibleRange = 0x11d0; // float
		constexpr auto StalkedComponent = 0x11d8; // UStalkedComponent*
		constexpr auto CameraResetToleranceYaw = 0x11e0; // float
		constexpr auto CameraResetTolerancePitch = 0x11e4; // float
		constexpr auto CameraRecenterOffsetYaw = 0x11e8; // float
		constexpr auto CameraRecenterOffsetPitch = 0x11ec; // float
		constexpr auto Gender = 0x11f0; // EGender
		constexpr auto DropStaggerDuration = 0x11f8; // UCurveFloat*
		constexpr auto DropStaggerMaxSpeed = 0x1200; // UCurveFloat*
		constexpr auto TimeforDeathWhileCrawling = 0x1208; // float
		constexpr auto TimeforDeathWhileHooked = 0x120c; // float
		constexpr auto SecondsUntilFootprintTrigger = 0x1210; // float
		constexpr auto TriggerAfflictionHUDIntro = 0x1214; // bool
		constexpr auto _stillnessTracker = 0x12b0; // UCamperStillnessTrackerComponent*
		constexpr auto PartiallyHiddenStillnessThreshold = 0x12b8; // float
		constexpr auto _escape = 0x12c0; // AActor*
		constexpr auto _overlappingEscape = 0x12c8; // AActor*
		constexpr auto ProximityZone = 0x12d0; // USpherePlayerOverlapComponent*
		constexpr auto _dropStaggerTimer = 0x12f0; // FDBDTimer
		constexpr auto SlashableZone = 0x1318; // UCapsuleComponent*
		constexpr auto HookSlashableZone = 0x1320; // UCapsuleComponent*
		constexpr auto _camperSlashable = 0x1328; // UCamperSlashableComponent*
		constexpr auto _terrorRadiusReceiverComponent = 0x1330; // UTerrorRadiusReceiverComponent*
		constexpr auto CrouchCapsuleHalfHeight = 0x1338; // float
		constexpr auto IKOffsetRightFoot = 0x133c; // float
		constexpr auto IKOffsetLeftFoot = 0x1340; // float
		constexpr auto _camperSensor = 0x1350; // UDBDPawnSensingComponent*
		constexpr auto _surviveTimerScoreComponent = 0x1358; // USurviveTimerScoreEventComponent*
		constexpr auto _foundCampers = 0x1378; // TArray<ADBDPlayer*>
		constexpr auto _potentialSaviors = 0x1388; // TArray<ADBDPlayer*>
		constexpr auto _healthComponent = 0x13a0; // UCamperHealthComponent*
		constexpr auto _hpSlot01 = 0x13a8; // UChargeableComponent*
		constexpr auto _hpSlot02 = 0x13b0; // UChargeableComponent*
		constexpr auto _mendChargeable = 0x13b8; // UChargeableComponent*
		constexpr auto _bloodTrailSettings = 0x13c0; // UBloodTrailSettings*
		constexpr auto _bloodTrailComponent = 0x13c8; // UCamperBloodTrailComponent*
		constexpr auto _killerInstinctComponent = 0x13d0; // UKillerInstinctComponent*
		constexpr auto _cameraAttachment = 0x13d8; // UCameraAttachmentComponent*
		constexpr auto _charmSpawnerComponent = 0x13e0; // UCharmSpawnerComponent*
		constexpr auto _hookableComponent = 0x13e8; // UHookableComponent*
		constexpr auto _protectionHitComponent = 0x13f0; // UProtectionHitComponent*
		constexpr auto _screamComponent = 0x13f8; // UScreamComponent*
		constexpr auto _positionRecorder = 0x1400; // UCharacterPositionRecorderComponent*
		constexpr auto _runInputPressed = 0x14bc; // bool
		constexpr auto _trapIndicatorActive = 0x14e0; // bool
		constexpr auto _revealedSurvivor = 0x14e4; // TWeakObjectPtr<ACamperPlayer>
		constexpr auto _camperEndGameComponent = 0x14f0; // UCamperEndGameComponent*
		constexpr auto _noOcclusionAkComponent = 0x14f8; // UAkComponent*
		constexpr auto _isHealingKOCamper = 0x1524; // bool
		constexpr auto _isSkillCheckFailed = 0x1525; // bool
		constexpr auto _isBeingSacrificed = 0x1526; // bool
		constexpr auto _isWiggleProgressionAllowed = 0x1527; // bool
		constexpr auto _meshMover = 0x15c8; // UMoveComponentToComponent*
		constexpr auto _sprintEffect = 0x15d0; // USurvivorHitSprintEffect*
	}

	namespace n_AOfferingSequenceManager { // : AActor
		constexpr auto _gameInstance = 0x230; // UDBDGameInstance*
		constexpr auto _localPlayerController = 0x238; // APlayerController*
		constexpr auto _offeringHandler = 0x240; // UOfferingHandler*
		constexpr auto _sequenceAssets = 0x248; // AOfferingSequenceAssets*
		constexpr auto _hud = 0x250; // ADBDLobbyHud*
		constexpr auto _offeringCamera = 0x258; // ACameraActor*
	}

	namespace n_UFSM_OrCondition { // : UFSM_Condition
		constexpr auto _conditions = 0x38; // TArray<UFSM_Condition*>
	}

	namespace n_UEditorMeshVisualization { // : USceneComponent
		constexpr auto MeshVisualization = 0x210; // TSoftObjectPtr<USkeletalMesh>
		constexpr auto RelativeTransform = 0x240; // FTransform
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto Input = 0x68; // FExpressionInput
		constexpr auto DefaultR = 0x84; // char : 1
		constexpr auto DefaultG = 0x84; // char : 1
		constexpr auto DefaultB = 0x84; // char : 1
		constexpr auto DefaultA = 0x84; // char : 1
	}

	namespace n_AShopCameraManager { // : AInfo
		constexpr auto CatalogCharactersCamera = 0x230; // TArray<FCharacterCameraTag>
		constexpr auto StoryCharactersCamera = 0x240; // TArray<FCharacterCameraTag>
	}

	namespace n_UAnimCompress_RemoveTrivialKeys { // : UAnimCompress
		constexpr auto MaxPosDiff = 0x48; // float
		constexpr auto MaxAngleDiff = 0x4c; // float
		constexpr auto MaxScaleDiff = 0x50; // float
	}

	namespace n_UTimeSynchronizableMediaSource { // : UBaseMediaSource
		constexpr auto bUseTimeSynchronization = 0x98; // bool
		constexpr auto FrameDelay = 0x9c; // int32_t
		constexpr auto TimeDelay = 0xa0; // double
	}

	namespace n_USizeBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x60; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x61; // EVerticalAlignment
	}

	namespace n_UChildActorComponent { // : USceneComponent
		constexpr auto ChildActorClass = 0x210; // AActor*
		constexpr auto ChildActor = 0x218; // AActor*
		constexpr auto ChildActorTemplate = 0x220; // AActor*
		constexpr auto bAlwaysRecreateOnRegister = 0x228; // bool
		constexpr auto ChildActorMimic = 0x230; // AActor*
	}

	namespace n_URepairGeneratorSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _snapPosition = 0x538; // FVector
		constexpr auto _side = 0x544; // int32_t
		constexpr auto _repairAnimIndex = 0x548; // int32_t
		constexpr auto _isRepairingGenerator = 0x558; // bool
		constexpr auto _rightFootDown = 0x559; // bool
		constexpr auto _animSequenceVariationCount = 0x55c; // int32_t
		constexpr auto _isVomiting = 0x560; // bool
		constexpr auto _hasSkillCheckFailed = 0x561; // bool
	}

	namespace n_UTileView { // : UListView
		constexpr auto EntryHeight = 0x388; // float
		constexpr auto EntryWidth = 0x38c; // float
		constexpr auto TileAlignment = 0x390; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x391; // bool
	}

	namespace n_UBTTask_ExtMoveDirecltyToward { // : UBTTask_MoveDirectlyToward
		constexpr auto MovementMode = 0xc8; // ECharacterMovementTypes
	}

	namespace n_URig { // : UObject
		constexpr auto TransformBases = 0x38; // TArray<FTransformBase>
		constexpr auto Nodes = 0x48; // TArray<FNode>
	}

	namespace n_UMaterialExpressionDepthFade { // : UMaterialExpression
		constexpr auto InOpacity = 0x48; // FExpressionInput
		constexpr auto FadeDistance = 0x64; // FExpressionInput
		constexpr auto OpacityDefault = 0x80; // float
		constexpr auto FadeDistanceDefault = 0x84; // float
	}

	namespace n_UMapActorDetectorComponent { // : UActorComponent
		constexpr auto OnActorDetected = 0xb8; // FMulticastInlineDelegate
		constexpr auto CollectedCategories = 0xc8; // TArray<EMapActorCategory>
		constexpr auto _primitive = 0xd8; // UPrimitiveComponent*
	}

	namespace n_UBaseLockerInteraction { // : UInteractionDefinition
		constexpr auto _owningLocker = 0x5b0; // ALocker*
	}

	namespace n_UDyingLight { // : UPerk
		constexpr auto _actionSpeedPenaltyPerToken = 0x3d0; // TArray<float>
		constexpr auto _obsessionActionSpeedBonus = 0x3e0; // float
		constexpr auto _obsessionStatusEffectID = 0x3e4; // FName
		constexpr auto _nonObsessionStatusEffectID = 0x3f0; // FName
		constexpr auto _survivorDebuffs = 0x400; // TArray<UStatusEffect*>
	}

	namespace n_UMediaCapture { // : UObject
		constexpr auto OnStateChanged = 0x30; // FMulticastInlineDelegate
		constexpr auto MediaOutput = 0x58; // UMediaOutput*
		constexpr auto CapturingRenderTarget = 0x80; // UTextureRenderTarget2D*
	}

	namespace n_UUMGBloodStoreItemPreviewWidget { // : UMobileBaseUserWidget
		constexpr auto _itemName = 0x330; // FText
		constexpr auto _itemDescription = 0x348; // FText
		constexpr auto _itemPrice = 0x360; // int32_t
		constexpr auto _refreshPrice = 0x368; // FText
		constexpr auto _nodeStatusText = 0x380; // FText
		constexpr auto _refreshTitle = 0x398; // FText
		constexpr auto _itemSelectionTitle = 0x3b0; // FText
		constexpr auto _itemSelectionText = 0x3c8; // FText
		constexpr auto _purchaseTitle = 0x3e0; // FText
	}

	namespace n_UPawnAction { // : UObject
		constexpr auto ChildAction = 0x30; // UPawnAction*
		constexpr auto ParentAction = 0x38; // UPawnAction*
		constexpr auto OwnerComponent = 0x40; // UPawnActionsComponent*
		constexpr auto Instigator = 0x48; // UObject*
		constexpr auto BrainComp = 0x50; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x88; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x88; // char : 1
		constexpr auto bShouldPauseMovement = 0x88; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x88; // char : 1
	}

	namespace n_UGunslingerCameraTargetingStrategy { // : UBaseCameraTargetingStrategy
		constexpr auto _cameraSocketName = 0x50; // FName
		constexpr auto _survivorHarpoonSocketName = 0x5c; // FName
	}

	namespace n_AK25Power { // : ACollectable
		constexpr auto _k25ChainStrikeInteractionChargeableComponent = 0x4e8; // UChargeableComponent*
		constexpr auto _k25TeleportChargeableComponent = 0x4f0; // UChargeableComponent*
		constexpr auto _customKillerInstinctDatas = 0x4f8; // TArray<FCustomKillerInstinctData>
		constexpr auto _survivorStatusEffectID = 0x508; // TArray<FName>
		constexpr auto _killerStatusEffectID = 0x518; // TArray<FName>
		constexpr auto _survivorChainAttachmentComponentClass = 0x528; // UK25SurvivorChainAttachmentComponent*
		constexpr auto _survivorChainTargetterComponentClass = 0x530; // UK25SurvivorChainTargetterComponent*
		constexpr auto _k25GatewayClass = 0x538; // AK25Gateway*
		constexpr auto _controlledProjectileClass = 0x540; // AK25ControlledProjectile*
		constexpr auto _lamentConfigurationClass = 0x548; // ALamentConfiguration*
		constexpr auto _k25HuskClass = 0x550; // AK25Husk*
		constexpr auto _killerTeleportFinderComponentClass = 0x558; // UK25KillerTeleportationPositionFinderComponent*
		constexpr auto _chainAnimationActorClass = 0x560; // AK25AnimationFollowerActor*
		constexpr auto _chainAnimationMappingsTables = 0x568; // TArray<UDataTable*>
		constexpr auto _pillarAnimationActorClass = 0x578; // AK25AnimationFollowerActor*
		constexpr auto _k25ProjectileLauncher = 0x580; // UK25ProjectileLauncher*
		constexpr auto _k25ProjectilePool = 0x588; // UAuthoritativeActorPoolComponent*
		constexpr auto _k25ChainPool = 0x590; // UAuthoritativeActorPoolComponent*
		constexpr auto _k25PowerChargeComponent = 0x598; // UPowerChargeComponent*
		constexpr auto _k25ProjectileProvider = 0x5a0; // UAuthoritativePoolProjectileProviderAdapter*
		constexpr auto _k25PowerPresentationItemProgressComponent = 0x5a8; // UK25PowerChargePresentationItemProgressComponent*
		constexpr auto _gateway = 0x5b0; // AK25Gateway*
		constexpr auto _controlledProjectileInstance = 0x5b8; // AK25ControlledProjectile*
		constexpr auto _lamentConfiguration = 0x5c0; // ALamentConfiguration*
		constexpr auto _k25Husk = 0x5c8; // AK25Husk*
		constexpr auto _chainAttachmentReplicationComponent = 0x5d0; // UK25ChainAttachmentReplicationComponent*
		constexpr auto _isPowerCharged = 0x620; // bool
	}

	namespace n_UTwinHuskAnimInstance { // : UAnimInstance
		constexpr auto _isDeadFromSurvivorBack = 0x270; // bool
		constexpr auto _owningPawn = 0x278; // APawn*
		constexpr auto _twinHuskStateComponent = 0x280; // UTwinHuskStateComponent*
	}

	namespace n_UKnivesLauncher { // : UKillerProjectileLauncher
		constexpr auto _knifeSpawnOffset = 0x180; // FDBDTunableRowHandle
		constexpr auto _knifeSpawnForwardOffset = 0x1a8; // FDBDTunableRowHandle
		constexpr auto _launchSpeed = 0x1d0; // FDBDTunableRowHandle
		constexpr auto _maxAmmoTunable = 0x1f8; // FTunableStat
		constexpr auto _isInSuperModeThrow = 0x280; // bool
	}

	namespace n_UHellshireIronAddon { // : UItemAddon
		constexpr auto _undetectableDurationPostHarpoon = 0x298; // float
		constexpr auto _statusEffect = 0x2a0; // UStatusEffect*
	}

	namespace n_UCamperEndGameComponent { // : UActorComponent
		constexpr auto _endGameEntityClass = 0x100; // AEndGameEntity*
		constexpr auto _delayBeforeSacrifice = 0x10c; // float
		constexpr auto _readyToBeSacrificed = 0x110; // bool
	}

	namespace n_UBoxReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto BoxTransitionDistance = 0x2b8; // float
		constexpr auto PreviewInfluenceBox = 0x2c0; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x2c8; // UBoxComponent*
	}

	namespace n_UAnimBlueprint { // : UBlueprint
		constexpr auto TargetSkeleton = 0xb0; // USkeleton*
		constexpr auto Groups = 0xb8; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc8; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc9; // bool
	}

	namespace n_UDatasmithSkyLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto SourceType = 0x38; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x3c; // int32_t
		constexpr auto Cubemap = 0x40; // UTextureCube*
	}

	namespace n_UContextObserver { // : UUIComponent
		constexpr auto ObservedContextSection = 0xb8; // EContextSection
	}

	namespace n_UGhostStealthComponent { // : UActorComponent
		constexpr auto OnSuccessfulAttackInStealth = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnStealthStateChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnIsStealthChanged = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnIsBeingSpotChanged = 0xe8; // FMulticastInlineDelegate
		constexpr auto Local_OnStealthCancelledByPlayer = 0xf8; // FMulticastInlineDelegate
		constexpr auto _stealthState = 0x108; // EGhostStealthState
		constexpr auto _cooldownTimer = 0x148; // UTimerObject*
		constexpr auto _markers = 0x150; // TMap<ACharacter*, TWeakObjectPtr<AScreenIndicatorWorldMarker>>
		constexpr auto _markerMaxAngleOffset = 0x1b0; // float
		constexpr auto _useKillerInstinctWhenSpotted = 0x1b4; // bool
		constexpr auto _sightableComponent = 0x1b8; // UCharacterSightableComponent*
		constexpr auto _stalkerComponent = 0x1c0; // UStalkerComponent*
	}

	namespace n_UUMGRichTextRewardItemDecorator { // : URichTextBlockDecorator
		constexpr auto RewardSet = 0x30; // UDataTable*
	}

	namespace n_UUMGMonthlyPassRewardsPopup { // : UUMGGenericPopup
		constexpr auto SubscriptionLabel = 0x3e8; // UTextBlock*
		constexpr auto TitleLabel = 0x3f0; // UTextBlock*
		constexpr auto SubscriptionIcon = 0x3f8; // UImage*
		constexpr auto RenewalDateLabel = 0x400; // UTextBlock*
		constexpr auto RewardsContainer = 0x408; // UHorizontalBox*
		constexpr auto RewardWidgetClass = 0x410; // TSoftClassPtr<UObject>
		constexpr auto _rewardsPadding = 0x440; // FMargin
	}

	namespace n_UArmDetectionFanComponent { // : UDetectionFanComponent
		constexpr auto _shoulderBone = 0x270; // FName
		constexpr auto _elbowBone = 0x27c; // FName
		constexpr auto _handBone = 0x288; // FName
		constexpr auto _indexBone = 0x294; // FName
		constexpr auto _hipBone = 0x2a0; // FName
	}

	namespace n_UCoreTutorialPopupWidget { // : UCoreBaseHudWidget
		constexpr auto ProgressionInputSwitcher = 0x2f8; // UCoreInputSwitcherWidget*
		constexpr auto ClosePopupSfx = 0x300; // UAkAudioEvent*
		constexpr auto _notifTutoConfirmButtonClickDelegate = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UCDNPatchManager { // : UObject
		constexpr auto InstallDirectory = 0x30; // FString
		constexpr auto PakOrder = 0x40; // int32_t
		constexpr auto PakMountPoint = 0x48; // FString
		constexpr auto _gameInstance = 0xa0; // TWeakObjectPtr<UGameInstance>
		constexpr auto _currentContentToInstall = 0x198; // UAtlantaPendingContent*
		constexpr auto _remainingManifestsToInstall = 0x1a0; // TArray<FString>
		constexpr auto _contentToInstall = 0x1b0; // TMap<FString, UAtlantaPendingContent*>
		constexpr auto _MobilePendingContent = 0x248; // UAtlantaPendingContent*
	}

	namespace n_UInfectiousFright { // : UPerk
		constexpr auto _revealPlayerInTerrorRadius = 0x3d0; // bool
		constexpr auto _perkActivationCount = 0x3d1; // char
		constexpr auto _revealedSurvivors = 0x3d8; // TArray<ACamperPlayer*>
		constexpr auto _targetSurvivor = 0x3e8; // ACamperPlayer*
	}

	namespace n_UFSM_RefCondition { // : UFSM_Condition
		constexpr auto _refcondition = 0x38; // UFSM_Condition*
	}

	namespace n_URuntimeVirtualTextureComponent { // : USceneComponent
		constexpr auto VirtualTexture = 0x210; // URuntimeVirtualTexture*
		constexpr auto bUseStreamingLowMipsInEditor = 0x218; // bool
		constexpr auto BoundsSourceActor = 0x220; // AActor*
	}

	namespace n_UAISystem { // : UAISystemBase
		constexpr auto PerceptionSystemClassName = 0x70; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x90; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0xb0; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0xb4; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0xb8; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0xbc; // bool
		constexpr auto bAcceptPartialPaths = 0xbd; // bool
		constexpr auto bAllowStrafing = 0xbe; // bool
		constexpr auto bEnableBTAITasks = 0xbf; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0xc0; // bool
		constexpr auto bEnableDebuggerPlugin = 0xc1; // bool
		constexpr auto bForgetStaleActors = 0xc2; // bool
		constexpr auto DefaultSightCollisionChannel = 0xc3; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xc8; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xd0; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xd8; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xe0; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xf0; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xf8; // UNavLocalGridManager*
	}

	namespace n_URotatingMovementComponent { // : UMovementComponent
		constexpr auto RotationRate = 0xf8; // FRotator
		constexpr auto PivotTranslation = 0x104; // FVector
		constexpr auto bRotationInLocalSpace = 0x110; // char : 1
	}

	namespace n_UMaterialExpressionMax { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UK25ChainStrike_IsPlayerPressingInputCondition { // : UFSM_Condition
		constexpr auto _inputType = 0x38; // EInputInteractionType
	}

	namespace n_UCurveFloat { // : UCurveBase
		constexpr auto FloatCurve = 0x38; // FRichCurve
		constexpr auto bIsEventCurve = 0xb8; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAssetList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto COMPLETED = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneBoolSection { // : UMovieSceneSection
		constexpr auto defaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UEscapeDoorAnimInstance { // : USleepingAnimInstance
		constexpr auto _isOpen = 0x280; // bool
		constexpr auto _isOpenByKiller = 0x281; // bool
	}

	namespace n_ULightingFactory { // : UObject
		constexpr auto _data = 0x30; // ULightingData*
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x38; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x80; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc8; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf8; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0x100; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x118; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x118; // char : 1
		constexpr auto ParticleMass = 0x120; // FRawDistributionFloat
		constexpr auto DirScalar = 0x150; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x154; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x154; // char : 1
		constexpr auto VerticalFudgeFactor = 0x158; // float
		constexpr auto DelayAmount = 0x160; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x190; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x190; // char : 1
		constexpr auto bIgnoreSourceActor = 0x190; // char : 1
		constexpr auto MaxCollisionDistance = 0x194; // float
	}

	namespace n_UMovieSceneColorSection { // : UMovieSceneSection
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UAICharacterRepairGeneratorBehaviour { // : UAICharacterBehaviour
		constexpr auto _aiPlayer = 0x68; // ADBDPlayer*
		constexpr auto _aiPlayerController = 0x70; // ADBDAIPlayerController*
		constexpr auto _targetInteractor = 0x78; // UInteractor*
		constexpr auto _characterRepairGeneratorData = 0x80; // UAICharacterRepairGeneratorBehaviourData*
	}

	namespace n_UBTTask_SetTagCooldown { // : UBTTaskNode
		constexpr auto CooldownTag = 0x78; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x84; // bool
		constexpr auto CooldownDuration = 0x88; // float
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto MaxDeltaTime = 0xf28; // float
		constexpr auto ServerFlushLogInterval = 0xf2c; // float
		constexpr auto GameInstance = 0xf30; // UGameInstance*
	}

	namespace n_ASphereReflectionCapture { // : AReflectionCapture
		constexpr auto DrawCaptureRadius = 0x238; // UDrawSphereComponent*
	}

	namespace n_UBTDecorator_Random { // : UBTDecorator_TickableBase
		constexpr auto PercentageRatio = 0x70; // FAITunableParameter
	}

	namespace n_UForceFeedbackAttenuation { // : UObject
		constexpr auto Attenuation = 0x30; // FForceFeedbackAttenuationSettings
	}

	namespace n_UUIController { // : UObject
		constexpr auto m_UIControllerObj = 0x30; // UGFxObject*
		constexpr auto _atlantaLoadingWidget = 0x38; // UMobileBaseUserWidget*
	}

	namespace n_UNavigationInvokerComponent { // : UActorComponent
		constexpr auto TileGenerationRadius = 0xb8; // float
		constexpr auto TileRemovalRadius = 0xbc; // float
	}

	namespace n_UDBDCullDistanceVolumeComponent { // : USceneComponent
		constexpr auto CullDistances = 0x210; // TArray<FDBDCullDistanceSizePair>
		constexpr auto InfluenceBox = 0x220; // FVector
		constexpr auto Enabled = 0x22c; // bool
		constexpr auto Unbound = 0x22d; // bool
		constexpr auto _previewInfluenceBox = 0x230; // UBoxComponent*
	}

	namespace n_UFaceCorrectionSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isIdle = 0x4f0; // bool
		constexpr auto _isFreddyMori = 0x4f1; // bool
		constexpr auto _isInCloset = 0x4f2; // bool
		constexpr auto _isEdgeCase = 0x4f3; // bool
		constexpr auto _isInjured = 0x4f4; // bool
		constexpr auto _isHealingOthers = 0x4f5; // bool
		constexpr auto _isCrouched = 0x4f6; // bool
	}

	namespace n_UAddon_TheBlight_SoulChemical { // : UItemAddon
		constexpr auto _triggerDistance = 0x298; // float
		constexpr auto _skillCheckType = 0x29c; // ESkillCheckCustomType
		constexpr auto _interactionSemantics = 0x2a0; // FGameplayTagContainer
		constexpr auto _blightPowerStateTag = 0x2c0; // FGameplayTagContainer
	}

	namespace n_UIncreaseZombiesSpeedStatusEffect { // : UStatusEffect
		constexpr auto _zombieSpeedAdditive = 0x350; // float
	}

	namespace n_USurvivorChainLinkableComponent { // : UChainLinkableComponent
		constexpr auto _pullbackAngle = 0x188; // FDBDTunableRowHandle
		constexpr auto _immobilizationDuration = 0x1b8; // FDBDTunableRowHandle
		constexpr auto _linkableInteractionTags = 0x1e0; // FGameplayTagContainer
		constexpr auto _cancelableInteractionTags = 0x200; // FGameplayTagContainer
		constexpr auto _velocityAdditiveStrategyClass = 0x220; // USurvivorReelVelocityAdditiveStrategy*
		constexpr auto _immobilizationEffectName = 0x228; // FName
		constexpr auto _linkedMoveInput = 0x238; // FVector_NetQuantize10
		constexpr auto _immobilizationEffect = 0x248; // UStatusEffect*
		constexpr auto _velocityAdditiveStrategy = 0x250; // USurvivorReelVelocityAdditiveStrategy*
	}

	namespace n_ABP_Menu_CamperMale13_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_US28P01 { // : UPerk
		constexpr auto _auraRevealDuration = 0x3d0; // float [0x3]
		constexpr auto _auraRevealRange = 0x3dc; // float [0x3]
		constexpr auto _S28P01ChargeableComponent = 0x3e8; // UChargeableComponent*
		constexpr auto _isPerkActive = 0x3f0; // bool
		constexpr auto _isInteractionOngoing = 0x3f1; // bool
		constexpr auto _playerOwner = 0x3f8; // ADBDPlayer*
	}

	namespace n_UK22PowerChargePresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _powerChargeComponent = 0xb8; // UPowerChargeComponent*
	}

	namespace n_UMockDataMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x210; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x220; // bool
		constexpr auto RequestNormals = 0x221; // bool
		constexpr auto RequestVertexConfidence = 0x222; // bool
		constexpr auto VertexColorMode = 0x223; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x228; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x238; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x248; // FLinearColor
		constexpr auto UpdateInterval = 0x258; // float
		constexpr auto MRMesh = 0x260; // UMRMeshComponent*
	}

	namespace n_UOpenSupplyCrateInteraction { // : UChargeableInteractionDefinition
		constexpr auto _owningSupplyCrate = 0x6d8; // ASupplyCrateInteractable*
		constexpr auto _interactionWasComplete = 0x6e0; // bool
		constexpr auto _successExitTimeAnimSequenceReference = 0x6e8; // UAnimSequence*
	}

	namespace n_UActorSpawner { // : USceneComponent
		constexpr auto Type = 0x220; // EGameplayElementType
		constexpr auto Visualization = 0x228; // TSoftClassPtr<UObject>
		constexpr auto ActivatedByDefault = 0x258; // bool
		constexpr auto ActivatedSceneElement = 0x260; // TArray<FActorSpawnerProperties>
		constexpr auto DeactivatedSceneElement = 0x270; // TArray<FActorSpawnerProperties>
		constexpr auto Weight = 0x280; // float
		constexpr auto SpawnCountMax = 0x284; // int32_t
		constexpr auto SpawnPriorityTier = 0x288; // int32_t
		constexpr auto OnAsyncActorSpawned = 0x290; // FMulticastInlineDelegate
		constexpr auto WeightInfluenceable = 0x2a8; // bool
		constexpr auto WeightInfluencer = 0x2a9; // bool
		constexpr auto Cost = 0x2ac; // float
		constexpr auto _toSpawn = 0x2b0; // UObject*
		constexpr auto _spawnedActorOnAuthority = 0x2c0; // TWeakObjectPtr<AActor>
	}

	namespace n_UInteractionSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isAgainstSmallKiller = 0x4f0; // bool
		constexpr auto _isInsideCloset = 0x4f1; // bool
		constexpr auto _isEnteringCloset = 0x4f2; // bool
		constexpr auto _isBeingCarried = 0x4f3; // bool
		constexpr auto _isHooked = 0x4f4; // bool
		constexpr auto _isSacrificeStruggling = 0x4f5; // bool
		constexpr auto _sacrificeStrugglePercent = 0x4f8; // float
		constexpr auto _selfUnhookFailed = 0x4fc; // bool
		constexpr auto _interactionAnimation = 0x4fd; // EInteractionAnimation
		constexpr auto _snapPosition = 0x500; // FVector
		constexpr auto _isInteractingWithEscapeDoor = 0x50c; // bool
	}

	namespace n_UActivateByBlinkAttackTimedEffect { // : UStatusEffect
		constexpr auto _activationDuration = 0x350; // float
	}

	namespace n_UActorVariationSpawner { // : USceneComponent
		constexpr auto Visualization = 0x210; // TSoftClassPtr<UObject>
		constexpr auto Variations = 0x240; // TArray<FActorVariationElements>
		constexpr auto _toSpawn = 0x258; // UObject*
	}

	namespace n_UMaterialExpressionViewProperty { // : UMaterialExpression
		constexpr auto Property = 0x48; // EMaterialExposedViewProperty
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x38; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UChaosGameplayEventDispatcher { // : UChaosEventListenerComponent
		constexpr auto CollisionEventRegistrations = 0x1d0; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x220; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UMovieSceneCameraShakeSection { // : UMovieSceneSection
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraAnimPlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UParticleSystemDistanceFaderComponent { // : UActorComponent
		constexpr auto ParticleSystemComponent = 0xb8; // UParticleSystemComponent*
		constexpr auto OpacityParameterName = 0xc0; // FName
		constexpr auto StartFadeDistance = 0xcc; // float
		constexpr auto EndFadeDistance = 0xd0; // float
	}

	namespace n_UHinderOnCrowAttachStatusEffect { // : UBaseLingeringStatusEffect
		constexpr auto _onCrowAttachStateTag = 0x358; // FGameplayTag
		constexpr auto _hinderOnIdleLingerTime = 0x368; // FTunableStat
	}

	namespace n_UTwinLockerBlockerComponent { // : UActorComponent
		constexpr auto _interactionClasses = 0xb8; // TArray<UInteractionDefinition*>
		constexpr auto _interactionsToDisableOnLockerClasses = 0xd8; // TArray<UInteractionDefinition*>
	}

	namespace n_UDatasmithDeltaGenSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x50; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x51; // bool
		constexpr auto bRemoveInvisibleNodes = 0x52; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x53; // bool
		constexpr auto bImportVar = 0x54; // bool
		constexpr auto VarPath = 0x58; // FString
		constexpr auto bImportPos = 0x68; // bool
		constexpr auto PosPath = 0x70; // FString
		constexpr auto bImportTml = 0x80; // bool
		constexpr auto TmlPath = 0x88; // FString
	}

	namespace n_UAISkill_InteractionTarget_ShockTherapy { // : UAISkill_InteractionTarget
		constexpr auto TargetToEvadePointMaxDistance = 0x220; // float
		constexpr auto CastShockTimeBuffer = 0x224; // float
	}

	namespace n_ULevel { // : UObject
		constexpr auto OwningWorld = 0xc0; // UWorld*
		constexpr auto Model = 0xc8; // UModel*
		constexpr auto ModelComponents = 0xd0; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xe0; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe8; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xec; // int32_t
		constexpr auto LevelScriptActor = 0xf0; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf8; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0x100; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x108; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x118; // float
		constexpr auto ShadowmapTotalSize = 0x11c; // float
		constexpr auto StaticNavigableGeometry = 0x120; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x130; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d8; // FGuid
		constexpr auto MapBuildData = 0x1e8; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1f0; // FIntVector
		constexpr auto bIsLightingScenario = 0x1fc; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1fc; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1fc; // char : 1
		constexpr auto bIsVisible = 0x1fc; // char : 1
		constexpr auto WorldSettings = 0x248; // AWorldSettings*
		constexpr auto AssetUserData = 0x258; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x278; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UCompressedImageSequenceProtocol { // : UImageSequenceProtocol
		constexpr auto CompressionQuality = 0xe0; // int32_t
	}

	namespace n_UGizmoWorldAxisSource { // : UObject
		constexpr auto Origin = 0x38; // FVector
		constexpr auto AxisIndex = 0x44; // int32_t
	}

	namespace n_ATimerGateDecrease { // : AActor
		constexpr auto TimerGate = 0x230; // ATimerGate*
	}

	namespace n_UGraphNodeContextMenuContext { // : UObject
		constexpr auto Blueprint = 0x30; // UBlueprint*
		constexpr auto Graph = 0x38; // UEdGraph*
		constexpr auto Node = 0x40; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x50; // bool
	}

	namespace n_UBloodOrbAbsorberComponent { // : UActorComponent
		constexpr auto Authority_OnBloodOrbAbsorbed = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnIsAbsorbingChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto AbsorbLocationOffset = 0xd8; // FVector
		constexpr auto _camperBloodOrbDropperComponents = 0x100; // TArray<UBloodOrbDropperComponent*>
	}

	namespace n_USurveillancePerk { // : UPerk
		constexpr auto generatorRegressionStopRevealTime = 0x3d0; // float
	}

	namespace n_UInterpTrackInstFloatAnimBPParam { // : UInterpTrackInst
		constexpr auto AnimScriptInstance = 0x30; // UAnimInstance*
		constexpr auto ResetFloat = 0x38; // float
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
	}

	namespace n_UBTTaskNode { // : UBTNode
		constexpr auto Services = 0x60; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x70; // char : 1
	}

	namespace n_UEnvQueryTest_LineOfSight { // : UEnvQueryTest
		constexpr auto QuerierContext = 0x238; // UEnvQueryContext*
		constexpr auto ToContext = 0x240; // UEnvQueryContext*
		constexpr auto ItemHeightOffset = 0x248; // FAIDataProviderFloatValue
		constexpr auto Invert = 0x288; // FAIDataProviderBoolValue
	}

	namespace n_USabotageSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isSabotaging = 0x530; // bool
		constexpr auto _hasSkillCheckFailed = 0x531; // bool
	}

	namespace n_UDemogorgonPounceInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chargedAttackState = 0x748; // UChargedAttackStateComponent*
		constexpr auto _owningSlasher = 0x750; // ASlasherPlayer*
	}

	namespace n_UAB_Menu_Slasher25_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x4c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x578; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x638; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x6b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x6e8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x798; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x810; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x888; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x928; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x9c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0xa00; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0xab0; // bool
		constexpr auto Is Online = 0xab1; // bool
		constexpr auto _interrupt02 = 0xab2; // bool
		constexpr auto KillerBP = 0xab8; // ABP_Menu_Slasher25_C*
		constexpr auto RandomInterupt = 0xac0; // int32_t
		constexpr auto _IsLegendary = 0xac4; // bool
		constexpr auto CancelInterrupt = 0xac5; // bool
	}

	namespace n_UThrowInteraction { // : UChargeableInteractionDefinition
		constexpr auto _throwCancelledSpeedCurve = 0x6d8; // UCurveFloat*
		constexpr auto _throwCancellationExitTime = 0x6e0; // float
	}

	namespace n_URangeToActorsTrackerComponent { // : UActorComponent
		constexpr auto _rangeTrackers = 0xb8; // TArray<URangeToActorsTrackerStrategy*>
	}

	namespace n_UAB_K26_SW00_C { // : UK26CrowProjectileAnimInstance
		constexpr auto UberGraphFrame = 0x2b0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2b8; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x2f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x318; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x340; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x368; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x390; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x3b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x3e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x408; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x430; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x458; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x480; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x4a8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x520; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x558; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x5d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x608; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x680; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x6b8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x730; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x768; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x7e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x818; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x890; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x8c8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot = 0x978; // FAnimNode_Slot
		constexpr auto NewVar_1 = 0x9c8; // bool
	}

	namespace n_UImgMediaSettings { // : UObject
		constexpr auto DefaultFrameRate = 0x30; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x38; // float
		constexpr auto CacheSizeGB = 0x3c; // float
		constexpr auto CacheThreads = 0x40; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x44; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x48; // float
		constexpr auto UseGlobalCache = 0x4c; // bool
		constexpr auto ExrDecoderThreads = 0x50; // uint32_t
		constexpr auto DefaultProxy = 0x58; // FString
		constexpr auto UseDefaultProxy = 0x68; // bool
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0x48; // FExpressionInput
		constexpr auto InputName = 0x64; // FName
		constexpr auto Description = 0x70; // FString
		constexpr auto ID = 0x80; // FGuid
		constexpr auto inputType = 0x90; // EFunctionInputType
		constexpr auto PreviewValue = 0xa0; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xb0; // char : 1
		constexpr auto SortPriority = 0xb4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xb8; // char : 1
	}

	namespace n_UTextRenderComponent { // : UPrimitiveComponent
		constexpr auto Text = 0x428; // FText
		constexpr auto TextMaterial = 0x440; // UMaterialInterface*
		constexpr auto Font = 0x448; // UFont*
		constexpr auto HorizontalAlignment = 0x450; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x451; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x454; // FColor
		constexpr auto XScale = 0x458; // float
		constexpr auto YScale = 0x45c; // float
		constexpr auto WorldSize = 0x460; // float
		constexpr auto InvDefaultSize = 0x464; // float
		constexpr auto HorizSpacingAdjust = 0x468; // float
		constexpr auto VertSpacingAdjust = 0x46c; // float
		constexpr auto bAlwaysRenderAsText = 0x470; // char : 1
	}

	namespace n_URichTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto TextStyleSet = 0x160; // UDataTable*
		constexpr auto DecoratorClasses = 0x168; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x178; // bool
		constexpr auto DefaultTextStyleOverride = 0x180; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x408; // float
		constexpr auto InstanceDecorators = 0x698; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UMagicFountainOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _outlineColor = 0xc0; // FLinearColor
	}

	namespace n_UUMGStreamVideoWidget { // : UMobileBaseUserWidget
		constexpr auto VideoImage = 0x300; // UImage*
		constexpr auto TapButton = 0x308; // UButton*
		constexpr auto SkipButton = 0x310; // UUMGBaseButtonWidget*
		constexpr auto _timerShowSkipButton = 0x328; // float
	}

	namespace n_USphereReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadius = 0x2b8; // float
		constexpr auto CaptureDistanceScale = 0x2bc; // float
		constexpr auto PreviewInfluenceRadius = 0x2c0; // UDrawSphereComponent*
	}

	namespace n_UBTDecorator_IsCamperState { // : UBTDecorator_TickableBase
		constexpr auto BBCamper = 0x70; // FBlackboardKeySelector
		constexpr auto damageState = 0xa0; // ECamperDamageState
		constexpr auto DamageOp = 0xa1; // EArithmeticKeyOperation
		constexpr auto ImmobilizeState = 0xa2; // ECamperImmobilizeState
		constexpr auto ImmobilizeOp = 0xa3; // EArithmeticKeyOperation
		constexpr auto OnFilter = 0xa4; // EIsCamperStateOnFilter
		constexpr auto OnOthersFilterOp = 0xa5; // EArithmeticKeyOperation
		constexpr auto NbOnOthersCampers = 0xa8; // int32_t
	}

	namespace n_UAB_S28_Book_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x300; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose = 0x3b0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x400; // FAnimNode_StateMachine
		constexpr auto Hand Position = 0x4b0; // EItemHandPosition
		constexpr auto MenuInterrupt = 0x4b1; // bool
	}

	namespace n_UInteractiveGizmo { // : UObject
		constexpr auto InputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UBTDecorator_TagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto CooldownDuration = 0x7c; // float
		constexpr auto bAddToExistingDuration = 0x80; // bool
		constexpr auto bActivatesCooldown = 0x81; // bool
	}

	namespace n_UGeneratorRepairInteraction { // : UChargeableInteractionDefinition
		constexpr auto _penaltyPerRepairPlayerCount = 0x6d8; // FDBDTunableRowHandle [0x3]
	}

	namespace n_UInputMasher { // : UActorComponent
		constexpr auto _inputComponent = 0xb8; // UInputComponent*
	}

	namespace n_UDBDCharacterMovementComponent { // : UCharacterMovementComponent
		constexpr auto ProjectedWallSlidingFactor = 0x630; // float
		constexpr auto RandomInputFrontMultiplier = 0x634; // float
		constexpr auto RandomInputSideMultiplier = 0x638; // float
		constexpr auto RandomInputBackMultiplier = 0x63c; // float
		constexpr auto _forceUseDropStaggerFix = 0x6d0; // bool
		constexpr auto _velocityAdditiveStrategy = 0x890; // UBaseCharacterVelocityAdditiveStrategy*
		constexpr auto _inputAccelerationConstraintStrategy = 0x898; // UBaseInputAccelerationConstraintStrategy*
		constexpr auto _rotationStrategy = 0x8a0; // UBaseCharacterRotationStrategy*
		constexpr auto _lookAtTarget = 0x8a8; // AActor*
	}

	namespace n_UZombieBlindableComponent { // : UBlindableBaseComponent
		constexpr auto _ownerObjectState = 0x240; // UGameplayTagContainerComponent*
	}

	namespace n_UBP_Audio_KLR_11_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAutomaticLeanComponent { // : UActorComponent
		constexpr auto OnLeanStateChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnCanInitiateLeanChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto _cameraIdleLocation = 0xd8; // FSocketOrBoneCache
		constexpr auto _cameraLeftLeanLocation = 0x138; // FSocketOrBoneCache
		constexpr auto _cameraRightLeanLocation = 0x198; // FSocketOrBoneCache
		constexpr auto _cameraCrouchLocation = 0x1f8; // FSocketOrBoneCache
		constexpr auto _cameraCrouchLeftLeanLocation = 0x258; // FSocketOrBoneCache
		constexpr auto _cameraCrouchRightLeanLocation = 0x2b8; // FSocketOrBoneCache
		constexpr auto _middleSphereTraceLength = 0x318; // float
		constexpr auto _sideSphereTraceLength = 0x31c; // float
		constexpr auto _sphereTraceRadius = 0x320; // float
		constexpr auto _standingTraceHeightOffset = 0x324; // float
		constexpr auto _crouchingTraceHeightOffset = 0x328; // float
		constexpr auto _sideTraceOffset = 0x32c; // float
		constexpr auto _maxCameraDistance = 0x330; // float
		constexpr auto _maxCameraAngle = 0x334; // float
		constexpr auto _debugMode = 0x338; // bool
		constexpr auto _leanState = 0x339; // ELeanState
	}

	namespace n_UAddon_K22Power_20 { // : UOnEventBaseAddon
		constexpr auto _undetectableDuration = 0x2a8; // float
	}

	namespace n_UDBDEasyAntiCheat { // : UObject
		constexpr auto _gameInstance = 0x48; // UDBDGameInstance*
		constexpr auto _connectedToServer = 0x50; // bool
	}

	namespace n_USoundBase { // : UObject
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x100; // float
		constexpr auto MaxDistance = 0x104; // float
		constexpr auto TotalSamples = 0x108; // float
		constexpr auto Priority = 0x10c; // float
		constexpr auto AttenuationSettings = 0x110; // USoundAttenuation*
		constexpr auto Modulation = 0x118; // FSoundModulation
		constexpr auto SoundSubmixObject = 0x128; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x130; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x140; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x148; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x158; // TArray<FSoundSourceBusSendInfo>
	}

	namespace n_UPhysicalAnimationComponent { // : UActorComponent
		constexpr auto StrengthMultiplyer = 0xb8; // float
		constexpr auto SkeletalMeshComponent = 0xc0; // USkeletalMeshComponent*
	}

	namespace n_USceneCaptureComponent { // : USceneComponent
		constexpr auto PrimitiveRenderMode = 0x210; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x211; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x212; // char : 1
		constexpr auto bCaptureOnMovement = 0x212; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x213; // bool
		constexpr auto HiddenComponents = 0x218; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x228; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x238; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x248; // TArray<AActor*>
		constexpr auto LODDistanceFactor = 0x258; // float
		constexpr auto MaxViewDistanceOverride = 0x25c; // float
		constexpr auto CaptureSortPriority = 0x260; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x264; // bool
		constexpr auto bIgnoreCullDistanceVolumes = 0x265; // bool
		constexpr auto ShowFlagSettings = 0x268; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x288; // FString
	}

	namespace n_ALandscapeMeshProxyActor { // : AActor
		constexpr auto LandscapeMeshProxyComponent = 0x230; // ULandscapeMeshProxyComponent*
	}

	namespace n_URemeshProperties { // : UMeshConstraintProperties
		constexpr auto SmoothingStrength = 0x60; // float
		constexpr auto bFlips = 0x64; // bool
		constexpr auto bSplits = 0x65; // bool
		constexpr auto bCollapses = 0x66; // bool
	}

	namespace n_UTestMovieSceneSubTrack { // : UMovieSceneSubTrack
		constexpr auto SectionArray = 0x70; // TArray<UMovieSceneSection*>
	}

	namespace n_UAddPrimitiveTool { // : USingleClickTool
		constexpr auto ShapeSettings = 0x98; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0xa0; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa8; // UPreviewMesh*
		constexpr auto LastGenerated = 0xb0; // ULastActorInfo*
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x58; // FName
		constexpr auto MinInput = 0x64; // FVector
		constexpr auto MaxInput = 0x70; // FVector
		constexpr auto MinOutput = 0x7c; // FVector
		constexpr auto MaxOutput = 0x88; // FVector
		constexpr auto ParamModes = 0x94; // DistributionParamMode [0x3]
	}

	namespace n_ABP_Menu_Slasher06_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_06 = 0x698; // UBP_Audio_KLR_06_C*
		constexpr auto DBDPlayerPositionOffset = 0x6a0; // UDBDPlayerPositionOffsetComponent*
	}

	namespace n_ULookAtTargetKillerSubAnimInstance { // : UBaseKillerAnimInstance
		constexpr auto _maxDistanceForTargetDetection = 0x4f8; // float
		constexpr auto _headSocket = 0x4fc; // FName
		constexpr auto _rootSocket = 0x508; // FName
		constexpr auto _preferredMinLookAtTime = 0x514; // float
		constexpr auto _distanceScoreFactor = 0x518; // float
		constexpr auto _angleScoreFactor = 0x51c; // float
		constexpr auto _sameTargetScoreFactor = 0x520; // float
		constexpr auto _yawToTarget = 0x524; // float
		constexpr auto _pitchToTarget = 0x528; // float
		constexpr auto _hasVisibleTarget = 0x52c; // bool
	}

	namespace n_USkeletalMesh { // : UStreamableRenderAsset
		constexpr auto Skeleton = 0x68; // USkeleton*
		constexpr auto ImportedBounds = 0x70; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0x8c; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xa8; // FVector
		constexpr auto NegativeBoundsExtension = 0xb4; // FVector
		constexpr auto Materials = 0xc0; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xd0; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xe0; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x140; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x144; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x145; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x146; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x147; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x147; // char : 1
		constexpr auto bHasBeenSimplified = 0x147; // char : 1
		constexpr auto bHasVertexColors = 0x147; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x147; // char : 1
		constexpr auto BodySetup = 0x148; // UBodySetup*
		constexpr auto PhysicsAsset = 0x150; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x158; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x160; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x170; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x2f8; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x300; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x310; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x340; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x358; // TArray<USkeletalMeshSocket*>
		constexpr auto SkinWeightProfiles = 0x378; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_UActorDependency { // : UActorComponent
		constexpr auto Dependencies = 0xb8; // TArray<FDependency>
	}

	namespace n_UGeneratorDreamworldComponent { // : UActorComponent
		constexpr auto _beamSocketsForBloodEffect = 0xc0; // TArray<FName>
	}

	namespace n_UCoreInputPromptWidget { // : UCoreBaseUserWidget
		constexpr auto _unfoundInputKeyText = 0x2d8; // FText
		constexpr auto _inputKey = 0x2f0; // FKey
		constexpr auto _isEnabled = 0x310; // bool
	}

	namespace n_UAREnvironmentCaptureProbeTexture { // : UTextureCube
		constexpr auto TextureType = 0x118; // EARTextureType
		constexpr auto Timestamp = 0x11c; // float
		constexpr auto ExternalTextureGuid = 0x120; // FGuid
		constexpr auto Size = 0x130; // FVector2D
	}

	namespace n_UDecalMaskedMaterialsList { // : UDataAsset
		constexpr auto decalPlaneStaticMesh = 0x38; // UStaticMesh*
		constexpr auto decalPlaneExtent = 0x40; // float
		constexpr auto decalMaskedMaterials = 0x48; // TMap<FName, UMaterialInterface*>
	}

	namespace n_UMultiTransformer { // : UObject
		constexpr auto TransformGizmo = 0xe0; // UTransformGizmo*
		constexpr auto TransformProxy = 0xe8; // UTransformProxy*
	}

	namespace n_UAtlantaNavigationScreen { // : UScreenBase
		constexpr auto _umgScreen = 0x120; // UUMGAtlantaNavigationScreen*
	}

	namespace n_ABP_Logo_C { // : AActor
		constexpr auto UberGraphFrame = 0x230; // FPointerToUberGraphFrame
		constexpr auto MaterialHelper = 0x238; // UMaterialHelper*
		constexpr auto Cube = 0x240; // UStaticMeshComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
		constexpr auto Timeline_0_Fade_E88DB81340E64A2D6C8133B1212395F5 = 0x250; // float
		constexpr auto Timeline_0_Timing_E88DB81340E64A2D6C8133B1212395F5 = 0x254; // float
		constexpr auto Timeline_0__Direction_E88DB81340E64A2D6C8133B1212395F5 = 0x258; // ETimelineDirection
		constexpr auto Timeline_1 = 0x260; // UTimelineComponent*
		constexpr auto Anim_Fade_89F4B59C42CBB8068E84979C128BB364 = 0x268; // float
		constexpr auto Anim_Timing_89F4B59C42CBB8068E84979C128BB364 = 0x26c; // float
		constexpr auto Anim__Direction_89F4B59C42CBB8068E84979C128BB364 = 0x270; // ETimelineDirection
		constexpr auto Anim = 0x278; // UTimelineComponent*
	}

	namespace n_UDreamSnareTrapPlacementValidationStrategy { // : UDefaultObjectPlacementValidationStrategy
		constexpr auto NumberOfGroundTest = 0xe0; // float
		constexpr auto TrapRadius = 0xe4; // float
		constexpr auto MaxElevationDifferentialOnTrapEdge = 0xe8; // float
	}

	namespace n_UTargetTriggeredEventRecentlyQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _gameEvent = 0xe4; // FGameplayTag
	}

	namespace n_UMoviePlayerSettings { // : UObject
		constexpr auto bWaitForMoviesToComplete = 0x30; // bool
		constexpr auto bMoviesAreSkippable = 0x31; // bool
		constexpr auto StartupMovies = 0x38; // TArray<FString>
	}

	namespace n_UOvercharge { // : UPerk
		constexpr auto _skillCheckFailurePenalty = 0x3d0; // float [0x3]
	}

	namespace n_UBP_Audio_KLR_19_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMovieSceneNiagaraParameterTrack { // : UMovieSceneNiagaraTrack
		constexpr auto Parameter = 0x70; // FNiagaraVariable
	}

	namespace n_UDemoNetDriver { // : UNetDriver
		constexpr auto RollbackNetStartupActors = 0x860; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xc74; // float
		constexpr auto MulticastRecordOptions = 0xca8; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xd08; // bool
		constexpr auto SpectatorControllers = 0xd10; // TArray<APlayerController*>
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0x48; // float
		constexpr auto G = 0x4c; // float
	}

	namespace n_UPanelWidget { // : UWidget
		constexpr auto Slots = 0x128; // TArray<UPanelSlot*>
	}

	namespace n_UBP_Audio_KLR_14_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UOverlayMenuScreenUMG { // : UOverlayMenuScreen
		constexpr auto _atlOverlayMenuScreen = 0x300; // UUMGAtlantaSettingScreen*
	}

	namespace n_ALevelTransition_LightsEffects_C { // : ALevelScriptActor
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto Fade_Out_Intensity_Multiplier__23A1AA444F5E07D5215601B3AED70035 = 0x240; // float
		constexpr auto Fade_Out__Direction_23A1AA444F5E07D5215601B3AED70035 = 0x244; // ETimelineDirection
		constexpr auto Fade Out = 0x248; // UTimelineComponent*
		constexpr auto Fog Densities = 0x250; // TArray<float>
	}

	namespace n_UMovieSceneCinematicShotSection { // : UMovieSceneSubSection
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_UVehicleWheel { // : UObject
		constexpr auto CollisionMesh = 0x30; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x38; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x39; // bool
		constexpr auto Offset = 0x3c; // FVector
		constexpr auto ShapeRadius = 0x48; // float
		constexpr auto ShapeWidth = 0x4c; // float
		constexpr auto Mass = 0x50; // float
		constexpr auto DampingRate = 0x54; // float
		constexpr auto SteerAngle = 0x58; // float
		constexpr auto bAffectedByHandbrake = 0x5c; // bool
		constexpr auto TireType = 0x60; // UTireType*
		constexpr auto TireConfig = 0x68; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x70; // float
		constexpr auto LatStiffValue = 0x74; // float
		constexpr auto LongStiffValue = 0x78; // float
		constexpr auto SuspensionForceOffset = 0x7c; // float
		constexpr auto SuspensionMaxRaise = 0x80; // float
		constexpr auto SuspensionMaxDrop = 0x84; // float
		constexpr auto SuspensionNaturalFrequency = 0x88; // float
		constexpr auto SuspensionDampingRatio = 0x8c; // float
		constexpr auto SweepType = 0x90; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x94; // float
		constexpr auto MaxHandBrakeTorque = 0x98; // float
		constexpr auto VehicleSim = 0xa0; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa8; // int32_t
		constexpr auto DebugLongSlip = 0xac; // float
		constexpr auto DebugLatSlip = 0xb0; // float
		constexpr auto DebugNormalizedTireLoad = 0xb4; // float
		constexpr auto DebugWheelTorque = 0xbc; // float
		constexpr auto DebugLongForce = 0xc0; // float
		constexpr auto DebugLatForce = 0xc4; // float
		constexpr auto Location = 0xc8; // FVector
		constexpr auto OldLocation = 0xd4; // FVector
		constexpr auto Velocity = 0xe0; // FVector
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0x48; // char : 1
		constexpr auto bOverride_Period = 0x48; // char : 1
		constexpr auto Period = 0x4c; // float
	}

	namespace n_UPreviewMeshCollection { // : UDataAsset
		constexpr auto Skeleton = 0x40; // USkeleton*
		constexpr auto SkeletalMeshes = 0x48; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UCoreExampleWidget { // : UCoreBaseHudWidget
		constexpr auto EditAnywhere = 0x2f8; // FString
		constexpr auto EditDefaultsOnly = 0x308; // FString
		constexpr auto EditInstanceOnly = 0x318; // FString
		constexpr auto EditNoBlueprint = 0x328; // FString
		constexpr auto EditDefaultsOnlyBlueprintReadOnly = 0x338; // FString
		constexpr auto VisibleAnywhere = 0x348; // FString
		constexpr auto VisibleDefaultsOnly = 0x358; // FString
		constexpr auto VisibleInstanceOnly = 0x368; // FString
		constexpr auto ExampleButtonClickDelegate = 0x378; // FMulticastInlineDelegate
	}

	namespace n_UChaseComponent { // : UActorComponent
		constexpr auto OnChaseStarted = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnChaseEnded = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnAllChaseEnded = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnIsInChaseChanged = 0xe8; // FMulticastInlineDelegate
		constexpr auto _isInChase = 0xf8; // FTagStateBool
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x38; // FName
		constexpr auto SelectionMethod = 0x44; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x48; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x4c; // float
		constexpr auto bInheritSourceRotation = 0x50; // char : 1
		constexpr auto InheritSourceRotationScale = 0x54; // float
	}

	namespace n_ADBDPlayerState { // : APlayerState
		constexpr auto OnAIFinishedPlayingEvent = 0x340; // FMulticastInlineDelegate
		constexpr auto MirrorsId = 0x350; // FString
		constexpr auto ContentVersion = 0x360; // FString
		constexpr auto _difficultyLevel = 0x370; // EAIDifficultyLevel
		constexpr auto IsPlayerReady = 0x371; // bool
		constexpr auto GameRole = 0x372; // EPlayerRole
		constexpr auto RitualHandler = 0x378; // URitualHandlerComponent*
		constexpr auto DedicatedServerHandler = 0x380; // UDedicatedServerHandlerComponent*
		constexpr auto CamperData = 0x388; // FCharacterStateData
		constexpr auto SlasherData = 0x3a8; // FCharacterStateData
		constexpr auto PlayerData = 0x3c8; // FPlayerStateData
		constexpr auto PlayerCustomization = 0x400; // FEquippedPlayerCustomization
		constexpr auto OnPlayerGameplayEvent = 0x428; // FMulticastInlineDelegate
		constexpr auto OnGameStateChanged = 0x438; // FMulticastInlineDelegate
		constexpr auto OnPlayergameStateChanged = 0x448; // FMulticastInlineDelegate
		constexpr auto _awardedScoresByType = 0x470; // TMap<FName, FAwardedScores>
		constexpr auto _cachedUserGameStats = 0x4c0; // FUserGameStats
		constexpr auto _ongoingScoreEvents = 0x570; // TArray<FOngoingScoreData>
		constexpr auto _recentGameplayEvents = 0x588; // FDBDRecentGameplayEvents
		constexpr auto _inParadise = 0x5d9; // bool
		constexpr auto _gameplayNotificationManager = 0x5e0; // UGameplayNotificationManager*
		constexpr auto _achievementHandler = 0x5e8; // UAchievementHandlerComponent*
		constexpr auto _characterStatsHandler = 0x5f0; // UCharacterStatsHandlerComponent*
		constexpr auto _platformAccountId = 0x618; // FString
		constexpr auto _selectedCamperIndex = 0x628; // int32_t
		constexpr auto _selectedSlasherIndex = 0x62c; // int32_t
		constexpr auto _platform = 0x72c; // EPlatformFlag
		constexpr auto _provider = 0x730; // EProviderFlag
		constexpr auto _crossplayAllowed = 0x734; // bool
		constexpr auto _offNetworkFlag = 0x735; // bool
		constexpr auto _gameLevelLoaded = 0x736; // bool
		constexpr auto _showPortraitBorder = 0x768; // bool
		constexpr auto _hasActiveSubscription = 0x76a; // bool
	}

	namespace n_UTransformProxy { // : UObject
		constexpr auto bRotatePerObject = 0x78; // bool
		constexpr auto bSetPivotMode = 0x79; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_UBTService_StateMonitor_Slasher { // : UBTService_StateMonitor
		constexpr auto BBIsCarrying = 0xd8; // FBlackboardKeySelector
	}

	namespace n_USimpleSpawnEffectsOnAllSurvivorsAddon { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _statusEffectsSpawnParams = 0x2a8; // TArray<FSimpleSpawnEffectsOnAllSurvivorsAddonParams>
	}

	namespace n_AAkAmbientSound { // : AActor
		constexpr auto AkAudioEvent = 0x230; // UAkAudioEvent*
		constexpr auto AkComponent = 0x238; // UAkComponent*
		constexpr auto StopWhenOwnerIsDestroyed = 0x240; // bool
		constexpr auto AutoPost = 0x241; // bool
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent { // : UBlueprintAsyncActionBase
		constexpr auto OnModelLoaded = 0x38; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x48; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x60; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionBHVRCustomColorOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UIridescentBrickAddon { // : UOnEventBaseAddon
		constexpr auto _undetectableStatusEffect = 0x2d0; // UStatusEffect*
	}

	namespace n_UCannibalChainsawAttackObstructSubstate { // : UHillbillyChainsawAttackObstructSubstate
		constexpr auto _isInTantrum = 0x128; // FTagStateBool
	}

	namespace n_UInAppPurchaseCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFolder { // : UObject
		constexpr auto FolderName = 0x30; // FName
		constexpr auto ChildFolders = 0x40; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x50; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x60; // TArray<FString>
	}

	namespace n_UGearhead { // : UPerk
		constexpr auto _perkActivationDuration = 0x3d0; // float [0x3]
		constexpr auto _skillCheckType = 0x3dc; // ESkillCheckType
		constexpr auto _basicAttack = 0x3dd; // bool
	}

	namespace n_UGizmoArrowComponent { // : UGizmoBaseComponent
		constexpr auto Direction = 0x448; // FVector
		constexpr auto Gap = 0x454; // float
		constexpr auto Length = 0x458; // float
		constexpr auto Thickness = 0x45c; // float
	}

	namespace n_UChatroom { // : UObject
		constexpr auto CurrentChatRoomId = 0x30; // FString
		constexpr auto MaxChatRoomRetries = 0x40; // int32_t
		constexpr auto NumChatRoomRetries = 0x44; // int32_t
	}

	namespace n_USculptMaxBrushProperties { // : UInteractiveToolPropertySet
		constexpr auto MaxHeight = 0x58; // float
		constexpr auto bFreezeCurrentHeight = 0x5c; // bool
	}

	namespace n_ANavLinkProxy_DirectMove { // : ANavLinkProxy_Base
		constexpr auto CustomPathPoints = 0x2f0; // TArray<FVector>
		constexpr auto MoveToPathPointTimeLimit = 0x300; // float
		constexpr auto _playersOnPath = 0x308; // TMap<ADBDPlayer*, UNavMovePath*>
	}

	namespace n_UNiagaraDataInterfaceRWBase { // : UNiagaraDataInterface
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_UARPlaneGeometry { // : UARTrackedGeometry
		constexpr auto Orientation = 0xf0; // EARPlaneOrientation
		constexpr auto Center = 0xf4; // FVector
		constexpr auto Extent = 0x100; // FVector
		constexpr auto SubsumedBy = 0x120; // UARPlaneGeometry*
	}

	namespace n_AWakerObject { // : AInteractable
		constexpr auto _linkedCamperDreamworldComponent = 0x330; // UCamperDreamworldComponent*
		constexpr auto IsInteracting = 0x338; // bool
		constexpr auto _chargeComplete = 0x339; // bool
	}

	namespace n_UGunslingerEffectsComponent { // : UActorComponent
		constexpr auto OnIsAimingChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto PlayOutOfAmmoSound = 0xc8; // FMulticastInlineDelegate
		constexpr auto _minimumTimeBetweenBroadcast = 0xd8; // float
		constexpr auto _rifle = 0xe0; // AHarpoonRifle*
	}

	namespace n_UAIMoveToInteractData { // : UAICharacterBehaviourData
		constexpr auto _interactActor = 0x30; // AActor*
		constexpr auto _targetPositionActor = 0x38; // AActor*
		constexpr auto _characterMovementTypes = 0x40; // ECharacterMovementTypes
	}

	namespace n_UOutOfSightMeshRotator { // : UActorComponent
		constexpr auto _maxDistance = 0xb8; // float
		constexpr auto _dotProductThreshold = 0xbc; // float
		constexpr auto _locallyObservedPlayer = 0xc0; // ADBDPlayer*
		constexpr auto _meshesToRotate = 0xc8; // TArray<UMeshComponent*>
		constexpr auto _rotationOffset = 0xd8; // float
	}

	namespace n_UBTTask_CopyBBEntry { // : UBTTaskNode
		constexpr auto BBFrom = 0x78; // FBlackboardKeySelector
		constexpr auto BBTo = 0xa8; // FBlackboardKeySelector
		constexpr auto CopyOnlyValidKeyValue = 0xd8; // bool
	}

	namespace n_UFlashbang { // : UPerk
		constexpr auto _generatorBeingRepaired = 0x3d8; // AGenerator*
		constexpr auto _generatorsRepairTargetProgression = 0x3e0; // float
		constexpr auto _generatorRepairPercentToCraftFlashbang = 0x3e4; // float [0x3]
	}

	namespace n_UAnimSingleNodeInstance { // : UAnimInstance
		constexpr auto CurrentAsset = 0x270; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x278; // FDelegate
	}

	namespace n_ADBD_SoundEventSpawner { // : AActor
		constexpr auto AtlantaSoundDescriptor = 0x230; // TArray<FDBD_SoundSpawnerData>
		constexpr auto SoundDescriptor = 0x240; // TArray<FDBD_SoundSpawnerData>
		constexpr auto _loadedSoundAssets = 0x258; // TArray<AActor*>
	}

	namespace n_UMeshAnalysisProperties { // : UInteractiveToolPropertySet
		constexpr auto SurfaceArea = 0x58; // FString
		constexpr auto Volume = 0x68; // FString
	}

	namespace n_USuperModeDeactivation { // : UInteractionDefinition
		constexpr auto _deactivationDuration = 0x5b0; // FDBDTunableRowHandle
	}

	namespace n_UTestAnyActorPairQueryRangeIsTrue { // : UAnyActorPairQueryRangeIsTrue
		constexpr auto _actorPairQueryEvaluatorComponent = 0x100; // UActorPairQueryEvaluatorComponent*
	}

	namespace n_UBloodOrbOverlapComponent { // : UActorComponent
		constexpr auto _currentOverlappingOrbs = 0xc0; // int32_t
	}

	namespace n_UK26AmmoHandlerComponent { // : UActorComponent
		constexpr auto OnCurrentAmmoStateChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto _isAmmoOnCooldown = 0xd8; // FTagStateBool
		constexpr auto _onMaxAmmoSet = 0x108; // FMulticastInlineDelegate
		constexpr auto _rechargeEndTime = 0x118; // float
		constexpr auto _isTunableInit = 0x11c; // bool
		constexpr auto _projectileClass = 0x120; // AActor*
		constexpr auto _expirationCooldownTime = 0x128; // FTunableStat
		constexpr auto _firedCooldownTimesPerCrow = 0x1a8; // TArray<FDBDTunableRowHandle>
		constexpr auto _cooldownReductionPerCrowFired = 0x1b8; // FTunableStat
		constexpr auto _expirationTime = 0x238; // FTunableStat
		constexpr auto _expirationWarningBufferTime = 0x2b8; // FDBDTunableRowHandle
		constexpr auto _maxAmmo = 0x2e0; // FTunableStat
		constexpr auto _currentAmmo = 0x360; // int32_t
		constexpr auto _lastCooldownReason = 0x364; // EK26AmmoCooldownReason
		constexpr auto _currentAmmoState = 0x365; // EK26AmmoState
		constexpr auto _pathHandler = 0x368; // UK26PathHandlerComponent*
		constexpr auto _statusHandler = 0x370; // UK26PowerStatusHandlerComponent*
		constexpr auto _authoritativeActorPoolComponent = 0x378; // UAuthoritativeActorPoolComponent*
		constexpr auto _isOutOfAmmo = 0x380; // FTagStateBool
		constexpr auto _fallbackFireCooldown = 0x3b0; // float
	}

	namespace n_UBTService_ClearBBEntry { // : UBTService_OnRelevantBase
		constexpr auto BBToResetKey = 0x80; // FBlackboardKeySelector
	}

	namespace n_URenjirosBloodyGlove { // : UItemAddon
		constexpr auto _revealTime = 0x2a0; // float
		constexpr auto _revealEffectPerCamper = 0x2a8; // TMap<ACamperPlayer*, UBloodOrbOverlapRevealToKiller*>
	}

	namespace n_UEventAfterOtherWithMinimumCustomValueQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _startEvent = 0x90; // FGameplayTag
	}

	namespace n_USkeletalMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto SkeletalMeshReductionModuleName = 0x48; // FName
	}

	namespace n_UBTDecorator_HasDynamicSubtree { // : UBTDecorator_TickableBase
		constexpr auto InjectTag = 0x70; // FGameplayTag
	}

	namespace n_UGassedSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isGassed = 0x4f0; // bool
	}

	namespace n_UBrushStampIndicator { // : UInteractiveGizmo
		constexpr auto BrushRadius = 0x40; // float
		constexpr auto BrushFalloff = 0x44; // float
		constexpr auto BrushPosition = 0x48; // FVector
		constexpr auto BrushNormal = 0x54; // FVector
		constexpr auto bDrawIndicatorLines = 0x60; // bool
		constexpr auto bDrawRadiusCircle = 0x61; // bool
		constexpr auto bDrawFalloffCircle = 0x62; // bool
		constexpr auto SampleStepCount = 0x64; // int32_t
		constexpr auto LineColor = 0x68; // FLinearColor
		constexpr auto LineThickness = 0x78; // float
		constexpr auto bDepthTested = 0x7c; // bool
		constexpr auto bDrawSecondaryLines = 0x7d; // bool
		constexpr auto SecondaryLineThickness = 0x80; // float
		constexpr auto SecondaryLineColor = 0x84; // FLinearColor
		constexpr auto AttachedComponent = 0x98; // UPrimitiveComponent*
	}

	namespace n_AGeneratorEntity { // : AActor
		constexpr auto _associatedGenerator = 0x230; // AGenerator*
		constexpr auto _montagePlayer = 0x238; // UMontagePlayer*
	}

	namespace n_UInteractableTransformOptimizer { // : UActorComponent
		constexpr auto _optimizeTransformUpdate = 0xb8; // bool
	}

	namespace n_UExposerInteriorZoneComponent { // : UBoxComponent
		constexpr auto ExposerSpawnPoints = 0x450; // TArray<USceneComponent*>
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper { // : UObject
		constexpr auto QueryID = 0x38; // int32_t
		constexpr auto ItemType = 0x60; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x68; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x70; // FMulticastInlineDelegate
	}

	namespace n_UAkInitBank { // : UAkAssetBase
		constexpr auto AvailableAudioCultures = 0x60; // TArray<FString>
		constexpr auto DefaultLanguage = 0x70; // FString
	}

	namespace n_UKillerRedStainUpdateStrategy { // : UActorComponent
		constexpr auto _stealthRatioToRedStainIntensityCurve = 0xb8; // UCurveFloat*
		constexpr auto _hideRedStainStateTags = 0xc0; // FGameplayTagContainer
	}

	namespace n_UAB_Menu_Slasher22_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x440; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x4b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
		constexpr auto _anim_switch = 0x644; // int32_t
	}

	namespace n_UScreenController { // : UObject
		constexpr auto _gameInstance = 0x30; // UDBDGameInstance*
		constexpr auto _screenControllerObj = 0x38; // UGFxObject*
		constexpr auto _moviePlayer = 0x40; // UGFxMoviePlayer*
		constexpr auto _screenDictionary = 0x48; // TMap<FString, UScreenBase*>
		constexpr auto _screenTypeDictionary = 0x98; // TMap<FString, EScreenType>
		constexpr auto _cachedUMGScreens = 0xe8; // TMap<UObject*, TWeakObjectPtr<UUserWidget>>
	}

	namespace n_UBaseGroundDetectorComponent { // : UActorComponent
		constexpr auto _startTransformName = 0x168; // FName
		constexpr auto _walkableCollisionChannel = 0x174; // ECollisionChannel
		constexpr auto _traceComplex = 0x175; // bool
		constexpr auto _extraTraceDistance = 0x178; // float
		constexpr auto _skinnedMeshComponent = 0x180; // USkinnedMeshComponent*
		constexpr auto _startSlopeTransformName = 0x190; // FName
	}

	namespace n_UBTService_FindInteractor { // : UBTService
		constexpr auto BBSearchAround = 0x88; // FBlackboardKeySelector
		constexpr auto SearchInterval = 0xb8; // float
		constexpr auto SearchHeightAmplifierActivationHeight = 0xbc; // float
		constexpr auto SearchHeightAmplifier = 0xc0; // float
		constexpr auto FilterClass = 0xc8; // UNavigationQueryFilter*
		constexpr auto RegisterAsDiscoveredWhenFound = 0xd0; // bool
		constexpr auto BBOnlyFromActor = 0xd8; // FBlackboardKeySelector
		constexpr auto OnlyWithInteractorIDs = 0x108; // TArray<FString>
		constexpr auto RejectIfTerrorIsCloserThanSelfMargin = 0x118; // float
		constexpr auto RejectIfInTerrorRadius = 0x11c; // float
		constexpr auto RejectIfInPressureZone = 0x120; // bool
		constexpr auto UseLastKnownPositionForTerrorRejects = 0x121; // bool
		constexpr auto RejectIfWasInCooldownAndFocusedOnAnotherObject = 0x122; // bool
		constexpr auto RejectCooldownContextName = 0x124; // FName
		constexpr auto AbandonIfInChase = 0x130; // bool
		constexpr auto RejectIfFocusedByOther = 0x131; // bool
		constexpr auto RejectIfNotFocusedBySelf = 0x132; // bool
		constexpr auto IgnoreFocusFilterInEndgameCollapse = 0x133; // bool
		constexpr auto RejectIfNotInSight = 0x134; // bool
		constexpr auto IgnoreSightFilterIfDiscovered = 0x135; // bool
		constexpr auto IgnoreSightFilterIfInRange = 0x136; // bool
		constexpr auto RejectAboveRange = 0x138; // float
		constexpr auto IgnoreRangeFilterIfDiscovered = 0x13c; // bool
		constexpr auto IgnoreRangeFilterIfInSight = 0x13d; // bool
		constexpr auto BBInteractLocation = 0x140; // FBlackboardKeySelector
		constexpr auto BBInteractorObj = 0x170; // FBlackboardKeySelector
		constexpr auto CantInterruptGoalInteractionUnderRemainingTime = 0x1a0; // FAITunableParameter
		constexpr auto GoalBasicWeight = 0x1b0; // FAITunableParameter
		constexpr auto GoalWeightMaxDistance = 0x1c0; // FAITunableParameter
		constexpr auto GoalWeightAtMinDistance = 0x1d0; // FAITunableParameter
		constexpr auto GoalWeightAtEndgameStart = 0x1e0; // FAITunableParameter
		constexpr auto GoalWeightAtEndgameEnd = 0x1f0; // FAITunableParameter
		constexpr auto _goalInteractor = 0x200; // UInteractor*
		constexpr auto _aiOwner = 0x208; // ADBDAIBTController*
	}

	namespace n_ADBDGameState { // : AGameState
		constexpr auto OnEscapeDoorActivated = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnLevelReadyToPlay = 0x368; // FMulticastInlineDelegate
		constexpr auto OnIntroCompleted = 0x378; // FMulticastInlineDelegate
		constexpr auto OnKillerIntroCompletePercentChanged = 0x388; // FMulticastInlineDelegate
		constexpr auto OnLightingGenerated = 0x398; // FMulticastInlineDelegate
		constexpr auto _specialEventGameplaySpawnerComponent = 0x3d8; // USpecialEventGameplaySpawnerComponent*
		constexpr auto AuthorityOnAllPlayerLoaded = 0x3e0; // FMulticastInlineDelegate
		constexpr auto OnActivatedGeneratorCountChangedDynamic = 0x408; // FMulticastInlineDelegate
		constexpr auto OnSlasherSet = 0x418; // FMulticastInlineDelegate
		constexpr auto OnObsessionChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto CamperDeadCount = 0x450; // int32_t
		constexpr auto CamperInMeatLockerCount = 0x454; // int32_t
		constexpr auto CamperEscaped = 0x458; // int32_t
		constexpr auto WaitingForEscape = 0x45c; // int32_t
		constexpr auto CamperCount = 0x460; // int32_t
		constexpr auto LeaveSpectateRequested = 0x464; // bool
		constexpr auto SecondsLeftInLobby = 0x468; // int32_t
		constexpr auto Slasher = 0x4a0; // ASlasherPlayer*
		constexpr auto _renderingSequencer = 0x4a8; // URenderingFeaturesSequencer*
		constexpr auto _camperHookedInBasementCount = 0x4c0; // int32_t
		constexpr auto _playersReadyToStart = 0x4cc; // bool
		constexpr auto _builtLevelData = 0x4d0; // FBuiltLevelData
		constexpr auto _levelOfferings = 0x578; // FOfferingData
		constexpr auto _clipManager = 0x590; // AClipManager*
		constexpr auto _sessionId = 0x598; // FGuid
		constexpr auto _lobbyId = 0x5a8; // FGuid
		constexpr auto _activatedGeneratorCount = 0x5b8; // int32_t
		constexpr auto _requiredActivatedGeneratorCount = 0x5bc; // int32_t
		constexpr auto _escapeDoorActivated = 0x5c0; // bool
		constexpr auto _escapeDoorOpened = 0x5c1; // bool
		constexpr auto _isHatchOpen = 0x5c2; // bool
		constexpr auto _levelReadyToPlay = 0x5c3; // bool
		constexpr auto _playerDistributionReady = 0x5c4; // bool
		constexpr auto _usingWeakenedMechanic = 0x5c5; // bool
		constexpr auto _survivorLeft = 0x5c8; // int32_t
		constexpr auto _meatHooks = 0x5d0; // TArray<AMeatHook*>
		constexpr auto _searchables = 0x5e0; // TArray<ASearchable*>
		constexpr auto _generators = 0x5f0; // TArray<AGenerator*>
		constexpr auto _escapeDoors = 0x600; // TArray<AEscapeDoor*>
		constexpr auto _hatches = 0x610; // TArray<AHatch*>
		constexpr auto _reverseBearTrapRemovers = 0x620; // TArray<AReverseBearTrapRemover*>
		constexpr auto _baseTraps = 0x630; // TArray<ABaseTrap*>
		constexpr auto _pallets = 0x640; // TArray<APallet*>
		constexpr auto _windows = 0x650; // TArray<AWindow*>
		constexpr auto _lockers = 0x660; // TArray<ALocker*>
		constexpr auto _breakableWalls = 0x670; // TArray<ABreakableBase*>
		constexpr auto _totems = 0x680; // TArray<ATotem*>
		constexpr auto _mapBoxSphereBounds = 0x690; // FBoxSphereBounds
		constexpr auto _camperEscapedThroughHatch = 0x6c4; // int32_t
		constexpr auto _obsessionTarget = 0x6c8; // ACamperPlayer*
		constexpr auto _cachedObsessionEscaped = 0x6d0; // bool
		constexpr auto _traps = 0x6d8; // TArray<AInteractable*>
		constexpr auto _gamePresetData = 0x6f0; // FGamePresetData
		constexpr auto _gameLevelLoaded = 0x778; // bool
		constexpr auto _gameLevelCreated = 0x779; // bool
		constexpr auto _gameLevelEnded = 0x77a; // bool
		constexpr auto _gameEndedReason = 0x77b; // EEndGameReason
		constexpr auto _endGameState = 0x780; // UEndGameStateComponent*
		constexpr auto _scourgeHookManager = 0x788; // UScourgeHookManagerComponent*
		constexpr auto _actorPairQueryEvaluatorComponent = 0x790; // UActorPairQueryEvaluatorComponent*
		constexpr auto _characterCollection = 0x7a0; // UCharacterCollection*
		constexpr auto _collectableCollection = 0x7a8; // UCollectableCollection*
		constexpr auto _serverTimeProvider = 0x7b0; // UServerTimeProviderComponent*
		constexpr auto _inGameAssetPreloaderComponent = 0x7b8; // UInGameAssetPreloaderComponent*
		constexpr auto _matchStartTime = 0x7e8; // FDateTime
		constexpr auto _isServerDedicated = 0x7f0; // bool
		constexpr auto _maxSurvivorCount = 0x7f4; // int32_t
		constexpr auto _serverBuildVersion = 0x7f8; // FString
	}

	namespace n_UAkCallbackInfo { // : UObject
		constexpr auto AkComponent = 0x30; // UAkComponent*
	}

	namespace n_URecommendationsGenerator { // : UObject
		constexpr auto _shopManager = 0x30; // TWeakObjectPtr<Ushopmanager>
		constexpr auto _gameInstance = 0x38; // TWeakObjectPtr<UDBDGameInstance>
		constexpr auto _filters = 0x40; // TMap<FString, URecommendationsFilter*>
	}

	namespace n_UMeshSpaceDeformerTool { // : UMeshSurfacePointTool
		constexpr auto SelectedOperationType = 0xc8; // ENonlinearOperationType
		constexpr auto UpperBoundsInterval = 0xcc; // float
		constexpr auto LowerBoundsInterval = 0xd0; // float
		constexpr auto ModifierPercent = 0xd4; // float
		constexpr auto StateTarget = 0xd8; // UGizmoTransformChangeStateTarget*
		constexpr auto Preview = 0xe8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto GizmoCenter = 0x110; // FVector
		constexpr auto GizmoOrientation = 0x120; // FQuat
		constexpr auto IntervalGizmo = 0x130; // UIntervalGizmo*
		constexpr auto TransformGizmo = 0x138; // UTransformGizmo*
		constexpr auto TransformProxy = 0x140; // UTransformProxy*
		constexpr auto UpIntervalSource = 0x148; // UGizmoLocalFloatParameterSource*
		constexpr auto DownIntervalSource = 0x150; // UGizmoLocalFloatParameterSource*
		constexpr auto ForwardIntervalSource = 0x158; // UGizmoLocalFloatParameterSource*
	}

	namespace n_ACrownPillarInteractable { // : ARespawnableInteractable
		constexpr auto _crownPillarInteractionSecondsToCharge = 0x350; // FDBDTunableRowHandle
		constexpr auto _crownPillarInteractionSecondsToChargeKiller = 0x378; // FDBDTunableRowHandle
		constexpr auto _offeringEnabledAuraVisibilityDistance = 0x3a0; // FDBDTunableRowHandle
		constexpr auto _crownPillarInteraction = 0x3c8; // UCrownPickupInteraction*
		constexpr auto _crownPillarInteractionKiller = 0x3d0; // UCrownPickupInteraction*
		constexpr auto _crownPillarInteractionChargeable = 0x3d8; // UChargeableComponent*
		constexpr auto _crownPillarInteractionChargeableKiller = 0x3e0; // UChargeableComponent*
		constexpr auto _crownPillarInteractor = 0x3e8; // UInteractor*
		constexpr auto _crownPillarInteractionZone = 0x3f0; // UPrimitiveComponent*
		constexpr auto _crownPillarStaticMesh = 0x3f8; // UStaticMeshComponent*
		constexpr auto _outlineComponent = 0x400; // UDBDOutlineComponent*
		constexpr auto _nearTrackedActorComponent = 0x408; // UNearTrackedActorComponent*
		constexpr auto _crownPillarOutlineUpdateStrategy = 0x410; // UCrownPillarOutlineUpdateStrategy*
	}

	namespace n_ATileBase01_C { // : ATile
		constexpr auto UberGraphFrame = 0x348; // FPointerToUberGraphFrame
		constexpr auto Breakables = 0x350; // USceneComponent*
		constexpr auto GeneratorDrivenObjects = 0x358; // USceneComponent*
		constexpr auto Audio = 0x360; // USceneComponent*
		constexpr auto PullObjects = 0x368; // USceneComponent*
		constexpr auto BottomLeftSpawner = 0x370; // UActorSpawner*
		constexpr auto TopLeftSpawner = 0x378; // UActorSpawner*
		constexpr auto TopRightSpawner = 0x380; // UActorSpawner*
		constexpr auto BottomRightSpawner = 0x388; // UActorSpawner*
		constexpr auto QuadrantSpawners = 0x390; // USceneComponent*
		constexpr auto EdgeObjectBlocker = 0x398; // UBoxComponent*
		constexpr auto VaultObjects = 0x3a0; // USceneComponent*
		constexpr auto Crows = 0x3a8; // USceneComponent*
		constexpr auto EdgeObjects = 0x3b0; // USceneComponent*
		constexpr auto Lockers = 0x3b8; // USceneComponent*
		constexpr auto HideGrass = 0x3c0; // USceneComponent*
		constexpr auto Blockers = 0x3c8; // USceneComponent*
		constexpr auto Gameplay = 0x3d0; // USceneComponent*
		constexpr auto lights = 0x3d8; // USceneComponent*
		constexpr auto BP_Effect_Mist04 = 0x3e0; // UChildActorComponent*
		constexpr auto BP_Effect_Mist03 = 0x3e8; // UChildActorComponent*
		constexpr auto BP_Effect_Mist02 = 0x3f0; // UChildActorComponent*
		constexpr auto BP_Effect_Mist01 = 0x3f8; // UChildActorComponent*
		constexpr auto Mist (BP_Effect_Mist) = 0x400; // USceneComponent*
		constexpr auto FX = 0x408; // USceneComponent*
		constexpr auto Deco = 0x410; // USceneComponent*
		constexpr auto SearchableSpawner = 0x418; // UActorSpawner*
		constexpr auto SmallMeatLockerSpawner = 0x420; // UActorSpawner*
		constexpr auto HatchSpawner = 0x428; // UActorSpawner*
		constexpr auto Arrow6 = 0x430; // UArrowComponent*
		constexpr auto InteractableSpawn01 = 0x438; // UTileSpawnPoint*
		constexpr auto Arrow7 = 0x440; // UArrowComponent*
		constexpr auto HexSpawner01 = 0x448; // UActorSpawner*
		constexpr auto SurvivorItemSpawn01 = 0x450; // UTileSpawnPoint*
		constexpr auto Arrow5 = 0x458; // UArrowComponent*
		constexpr auto KillerItemSpawn01 = 0x460; // UTileSpawnPoint*
		constexpr auto Arrow4 = 0x468; // UArrowComponent*
		constexpr auto KillerSpawn01 = 0x470; // UTileSpawnPoint*
		constexpr auto Arrow2 = 0x478; // UArrowComponent*
		constexpr auto SurvivorSpawn04 = 0x480; // UTileSpawnPoint*
		constexpr auto Arrow1 = 0x488; // UArrowComponent*
		constexpr auto SurvivorSpawn03 = 0x490; // UTileSpawnPoint*
		constexpr auto Arrow = 0x498; // UArrowComponent*
		constexpr auto SurvivorSpawn02 = 0x4a0; // UTileSpawnPoint*
		constexpr auto Arrow3 = 0x4a8; // UArrowComponent*
		constexpr auto SurvivorSpawn01 = 0x4b0; // UTileSpawnPoint*
		constexpr auto SpawnPoints = 0x4b8; // USceneComponent*
		constexpr auto Root = 0x4c0; // USceneComponent*
		constexpr auto Initialized = 0x4c8; // bool
		constexpr auto TotalWeight = 0x4cc; // float
		constexpr auto SelectedWeight = 0x4d0; // float
		constexpr auto SelectedSpawnPoint = 0x4d8; // UTileSpawnPoint*
	}

	namespace n_UMatchConfigTabsDataAsset { // : UPrimaryDataAsset
		constexpr auto Data = 0x38; // TMap<ECustomMatchTab, FMatchConfigTabData>
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x40; // FVector
		constexpr auto Min = 0x4c; // FVector
		constexpr auto bLockAxes = 0x58; // char : 1
		constexpr auto LockedAxes = 0x5c; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x5d; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x60; // char : 1
	}

	namespace n_UBloodwebDistribution { // : UObject
		constexpr auto _designTunables = 0x40; // UDBDDesignTunables*
		constexpr auto _bloodwebTunables = 0x48; // UBloodwebTunables*
	}

	namespace n_UKillerBlindingFXComponent { // : UBlindingFXComponent
		constexpr auto _blindedSound = 0x120; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput { // : UMaterialExpressionCustomOutput
		constexpr auto GrassTypes = 0x48; // TArray<FGrassInput>
	}

	namespace n_UUMGCustomizationItemWidget { // : UMobileBaseUserWidget
		constexpr auto RarityBackground = 0x310; // UImage*
		constexpr auto PaintOverlay = 0x318; // UImage*
		constexpr auto Icon = 0x320; // UImage*
		constexpr auto NewIndicator = 0x328; // UCanvasPanel*
		constexpr auto OutfitIndicator = 0x330; // UCanvasPanel*
		constexpr auto PricesContainer = 0x338; // UVerticalBox*
		constexpr auto ItemSelectedBorder = 0x340; // UCanvasPanel*
		constexpr auto EquippedContainer = 0x348; // UCanvasPanel*
		constexpr auto _customizationItemPriceWidgetClass = 0x350; // TSoftClassPtr<UObject>
		constexpr auto _priceWidgets = 0x380; // TArray<UUMGCustomizationItemPriceWidget*>
		constexpr auto _itemIndex = 0x390; // int32_t
		constexpr auto _itemId = 0x394; // FName
	}

	namespace n_ATotem { // : AInteractable
		constexpr auto _boonAuraRevealColor = 0x348; // FLinearColor
		constexpr auto _boundPerks = 0x358; // TArray<UTotemBoundPerk*>
		constexpr auto _totemState = 0x368; // ETotemState
		constexpr auto _baseBoonTotemBlessingRange = 0x370; // FDBDTunableRowHandle
		constexpr auto _baseBoonTotemAuraRevealRange = 0x398; // FDBDTunableRowHandle
		constexpr auto _perceptionStimuliComponent = 0x3d0; // UAIPerceptionStimuliSourceComponent*
		constexpr auto _totemBlockableComponent = 0x3d8; // UBlockableComponent*
		constexpr auto _localPlayerTracker = 0x3f0; // ULocalPlayerTrackerComponent*
		constexpr auto _activatorComponent = 0x3f8; // UActivatorComponent*
		constexpr auto _objectState = 0x400; // UGameplayTagContainerComponent*
		constexpr auto _interactionsAttachPoint = 0x408; // USceneComponent*
		constexpr auto _totemOutlineUpdateStrategy = 0x410; // UTotemOutlineUpdateStrategy*
		constexpr auto _canBeBoundToBoonPerk = 0x448; // bool
	}

	namespace n_UPharmacyPerk { // : UPerk
		constexpr auto _searchSpeeds = 0x3d0; // TArray<float>
	}

	namespace n_UBlendProfile { // : UObject
		constexpr auto OwningSkeleton = 0x38; // USkeleton*
		constexpr auto ProfileEntries = 0x40; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_APlanarReflection { // : ASceneCapture
		constexpr auto PlanarReflectionComponent = 0x240; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x248; // bool
	}

	namespace n_UItemModifier { // : UGameplayModifierContainer
		constexpr auto ModifierData = 0x220; // FGameplayModifierData
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x78; // char : 1
		constexpr auto FrameRate = 0x80; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb0; // int32_t
	}

	namespace n_UAIMoveToPosition { // : UAICharacterBehaviour
		constexpr auto _aiBehaviourData = 0x58; // UAIMoveToPositionData*
		constexpr auto _aiController = 0x60; // ADBDAIPlayerController*
	}

	namespace n_USpawningEffectPerk { // : UPerk
		constexpr auto _perkLevelEffects = 0x3d0; // FPerkLevelEffectArray [0x3]
		constexpr auto _effectSpawnerHelper = 0x400; // FPlayerStatusEffectSpawnerHelper
	}

	namespace n_UStarstruck { // : UPerk
		constexpr auto _exposedEffectDuration = 0x3d0; // float [0x3]
		constexpr auto _perkCooldownDuration = 0x3dc; // float [0x3]
		constexpr auto _camperExposedEffects = 0x3e8; // TMap<TWeakObjectPtr<ACamperPlayer>, TWeakObjectPtr<UStatusEffect>>
	}

	namespace n_UZanshinTactics { // : UPerk
		constexpr auto _cooldownDuration = 0x3d0; // float [0x3]
	}

	namespace n_UBaseInstantBlinkInteraction { // : UInteractionDefinition
		constexpr auto _blinkTimePercentage = 0x5b0; // float
	}

	namespace n_UUdpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x30; // bool
		constexpr auto bAutoRepair = 0x31; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x32; // bool
		constexpr auto UnicastEndpoint = 0x38; // FString
		constexpr auto MulticastEndpoint = 0x48; // FString
		constexpr auto MessageFormat = 0x58; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x59; // char
		constexpr auto StaticEndpoints = 0x60; // TArray<FString>
		constexpr auto EnableTunnel = 0x70; // bool
		constexpr auto TunnelUnicastEndpoint = 0x78; // FString
		constexpr auto TunnelMulticastEndpoint = 0x88; // FString
		constexpr auto RemoteTunnelEndpoints = 0x98; // TArray<FString>
	}

	namespace n_UDemogorgonPortalPlacementValidationStrategy { // : UDefaultObjectPlacementValidationStrategy
		constexpr auto _portalPlacerState = 0xe0; // UPortalPlacerStateComponent*
		constexpr auto _chargedAttackState = 0xe8; // UChargedAttackStateComponent*
		constexpr auto _distanceForWorldCollisionDetection = 0xf0; // float
		constexpr auto _numberOfGroundTest = 0xf4; // float
		constexpr auto _portalEdgeTestRadius = 0xf8; // float
		constexpr auto _maxElevationDifferentialOnPortalEdge = 0xfc; // float
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineCurves = 0x428; // FSplineCurves
		constexpr auto SplineInfo = 0x490; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x4a8; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x4c0; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x4d8; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x4f0; // bool
		constexpr auto ReparamStepsPerSegment = 0x4f4; // int32_t
		constexpr auto Duration = 0x4f8; // float
		constexpr auto bStationaryEndpoints = 0x4fc; // bool
		constexpr auto bSplineHasBeenEdited = 0x4fd; // bool
		constexpr auto bModifiedByConstructionScript = 0x4fe; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x4ff; // bool
		constexpr auto bDrawDebug = 0x500; // bool
		constexpr auto bClosedLoop = 0x501; // bool
		constexpr auto bLoopPositionOverride = 0x502; // bool
		constexpr auto LoopPosition = 0x504; // float
		constexpr auto DefaultUpVector = 0x508; // FVector
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x2b0; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x2b8; // APawn*
		constexpr auto ControllingDirTrackInst = 0x2c0; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x2c8; // AHUD*
		constexpr auto PlayerCameraManager = 0x2d0; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x2d8; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x2e0; // bool
		constexpr auto TargetViewRotation = 0x2e4; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x2fc; // float
		constexpr auto HiddenActors = 0x308; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x318; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x32c; // float
		constexpr auto LastSpectatorSyncLocation = 0x330; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x33c; // FRotator
		constexpr auto ClientCap = 0x348; // int32_t
		constexpr auto CheatManager = 0x350; // UCheatManager*
		constexpr auto CheatClass = 0x358; // UCheatManager*
		constexpr auto PlayerInput = 0x360; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x368; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x3e8; // char : 1
		constexpr auto NetPlayerIndex = 0x3ec; // char
		constexpr auto PendingSwapConnection = 0x428; // UNetConnection*
		constexpr auto NetConnection = 0x430; // UNetConnection*
		constexpr auto InputYawScale = 0x444; // float
		constexpr auto InputPitchScale = 0x448; // float
		constexpr auto InputRollScale = 0x44c; // float
		constexpr auto bShowMouseCursor = 0x450; // char : 1
		constexpr auto bEnableClickEvents = 0x450; // char : 1
		constexpr auto bEnableTouchEvents = 0x450; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x450; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x450; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x450; // char : 1
		constexpr auto ForceFeedbackScale = 0x454; // float
		constexpr auto ClickEventKeys = 0x458; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x468; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x469; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x46a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x46b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x46c; // float
		constexpr auto SeamlessTravelCount = 0x470; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x472; // uint16_t
		constexpr auto InactiveStateInputComponent = 0x4e8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x4f0; // char : 1
		constexpr auto CurrentTouchInterface = 0x508; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x560; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x56c; // bool
		constexpr auto SpawnLocation = 0x570; // FVector
	}

	namespace n_UTestMovieSceneSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x350; // UMovieScene*
	}

	namespace n_UDreamInducerComponent { // : UActorComponent
		constexpr auto _generatorDreamworldClass = 0xb8; // UActorComponent*
	}

	namespace n_UBlinkPlayerComponent { // : UActorComponent
		constexpr auto _maxBlinkDuration = 0xd0; // FTunableStat
		constexpr auto _minBlinkDuration = 0x150; // FDBDTunableRowHandle
		constexpr auto _blinkFOVCurve = 0x178; // UCurveFloat*
	}

	namespace n_UMatchboxAddon { // : UItemAddon
		constexpr auto _speedModifier = 0x298; // float
	}

	namespace n_UStreetwiseEffect { // : UBaseLingeringStatusEffect
		constexpr auto _range = 0x358; // float
	}

	namespace n_USubUVAnimation { // : UObject
		constexpr auto SubUVTexture = 0x30; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x38; // int32_t
		constexpr auto SubImages_Vertical = 0x3c; // int32_t
		constexpr auto BoundingMode = 0x40; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x41; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x44; // float
	}

	namespace n_UTwinsSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isRemovingTwin = 0x4f0; // bool
	}

	namespace n_UInheritableComponentHandler { // : UObject
		constexpr auto Records = 0x30; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x40; // TArray<UActorComponent*>
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto materialInstances = 0x30; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x40; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x50; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x60; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UFieldSystemMetaDataIteration { // : UFieldSystemMetaData
		constexpr auto Iterations = 0xb8; // int32_t
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxis = 0x48; // FExpressionInput
		constexpr auto RotationAngle = 0x64; // FExpressionInput
		constexpr auto PivotPoint = 0x80; // FExpressionInput
		constexpr auto Position = 0x9c; // FExpressionInput
		constexpr auto Period = 0xb8; // float
	}

	namespace n_UGizmoComponentHitTarget { // : UObject
		constexpr auto Component = 0x38; // UPrimitiveComponent*
	}

	namespace n_UZombieResurrector { // : UActorComponent
		constexpr auto _powerLevelToSpawnZombie = 0xd0; // FDBDTunableRowHandle
		constexpr auto _delayedSpawnZombies = 0x108; // TArray<AZombieCharacter*>
	}

	namespace n_UInputTouchDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputTouchDelegateBindings = 0x30; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_USlasherOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto OnRevealed = 0xc0; // FMulticastInlineDelegate
		constexpr auto _nonRevealedColor = 0xd0; // FLinearColor
		constexpr auto _revealedColor = 0xe0; // FLinearColor
		constexpr auto _revealedColorForKiller = 0xf0; // FLinearColor
	}

	namespace n_UUMGRankBanner { // : UMobileBaseUserWidget
		constexpr auto RankFrameWidget = 0x308; // UUMGTallyRankFrame*
		constexpr auto TooltipButton = 0x310; // UButton*
		constexpr auto HighlightImage = 0x318; // UImage*
		constexpr auto OnLongPressSound = 0x320; // UAkAudioEvent*
		constexpr auto _onLongPressRankTooltipEvent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UYellowGlyphComponent { // : UActorComponent
		constexpr auto _currentlyInteractingPlayer = 0xb8; // ADBDPlayer*
		constexpr auto _skillCheckDuration = 0xc4; // float
		constexpr auto _skillCheckZoneLength = 0xc8; // float
		constexpr auto _skillCheckDelay = 0xcc; // float
		constexpr auto _skillCheckAverageDistance = 0xd0; // float
		constexpr auto _skillCheckDistanceVariance = 0xd4; // float
		constexpr auto _teleportDelay = 0xd8; // int32_t
		constexpr auto _survivorSpawns = 0x110; // TArray<UTileSpawnPoint*>
		constexpr auto _allGlyphs = 0x120; // TArray<AGlyph*>
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0x50; // TArray<UChildConnection*>
		constexpr auto Driver = 0x60; // UNetDriver*
		constexpr auto PackageMapClass = 0x68; // UPackageMap*
		constexpr auto PackageMap = 0x70; // UPackageMap*
		constexpr auto OpenChannels = 0x78; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x88; // TArray<AActor*>
		constexpr auto ViewTarget = 0x98; // AActor*
		constexpr auto OwningActor = 0xa0; // AActor*
		constexpr auto MaxPacket = 0xa8; // int32_t
		constexpr auto InternalAck = 0xac; // char : 1
		constexpr auto playerID = 0x168; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d8; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_AAmbientSound { // : AActor
		constexpr auto AudioComponent = 0x230; // UAudioComponent*
	}

	namespace n_UChargeableInteractionDefinition { // : UInteractionDefinition
		constexpr auto SkillCheckResponseAestheticDelegate = 0x5c8; // FMulticastInlineDelegate
		constexpr auto SkillCheckResponseAuthorityDelegate = 0x5d8; // FMulticastInlineDelegate
		constexpr auto StopInteractionOnChargeComplete = 0x5e8; // bool
		constexpr auto HasProgressivelyHarderSkillChecks = 0x5e9; // bool
		constexpr auto ProgressiveDifficultyModifier = 0x5ec; // float
		constexpr auto ProgressBarType = 0x5f0; // EChargeableInteractionBarType
		constexpr auto ProgressPips = 0x5f8; // TArray<float>
		constexpr auto HideProgressBar = 0x608; // bool
		constexpr auto ShowItemIcon = 0x609; // bool
		constexpr auto AtlantaIsCancellableWhileCharging = 0x60a; // bool
		constexpr auto _chargeableComponent = 0x610; // UChargeableComponent*
		constexpr auto _tutorialChargeableMultiplier = 0x618; // float
		constexpr auto ShowSpeedProficiencyForMultipleInteractors = 0x670; // bool
		constexpr auto _interactionSpecificActionSpeedTags = 0x678; // FGameplayTagContainer
		constexpr auto _interactionSpecificActionSpeedMultiplicativeTags = 0x698; // FGameplayTagContainer
		constexpr auto _interactionSpecificActionSpeedAdditiveTags = 0x6b8; // FGameplayTagContainer
	}

	namespace n_UDatasmithStaticMeshTemplate { // : UDatasmithObjectTemplate
		constexpr auto SectionInfoMap = 0x38; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x88; // int32_t
		constexpr auto LightMapResolution = 0x8c; // int32_t
		constexpr auto BuildSettings = 0x90; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0xa0; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UBloodDecalEffectIntensity { // : UDataAsset
		constexpr auto IntensifyBloodColor = 0x38; // FColor
		constexpr auto IntensifyBloodColor2 = 0x3c; // FColor
		constexpr auto IntensifyBloodColorEmissive = 0x40; // FColor
		constexpr auto IntensifyBloodColorEmissiveMinimumIntensity = 0x44; // float
		constexpr auto IntensifyBloodColorEmissiveMaximumIntensity = 0x48; // float
	}

	namespace n_UAISkill_InteractionTeleportEthereal { // : UAISkill_InteractionTeleport
		constexpr auto TeleportPlanInterval = 0x178; // float
		constexpr auto MaxTeleportAlignHalfAngle = 0x17c; // float
		constexpr auto AbortNotWorkingTeleportDelay = 0x180; // float
		constexpr auto AbortAddRunCooldownPenaltyTime = 0x184; // float
		constexpr auto _onStimulusInstigator = 0x1a0; // AActor*
	}

	namespace n_UAISkill_InteractionTarget_ThrowAntidote { // : UAISkill_InteractionTarget_Throw
		constexpr auto _minPathLengthForThrow = 0x298; // float
		constexpr auto _minThrowDistance = 0x29c; // float
		constexpr auto _cooldownTime = 0x2a0; // float
	}

	namespace n_UCharacterPositionRecorderComponent { // : UActorComponent
		constexpr auto _cacheTimespan = 0xb8; // float
	}

	namespace n_UPerk { // : UGameplayModifierContainer
		constexpr auto PerkLevelData = 0x280; // FGameplayModifierData [0x3]
		constexpr auto PerkIconStrategyClass = 0x340; // UBasePerkIconStrategy*
		constexpr auto OnTokenCountChangedBP = 0x348; // FMulticastInlineDelegate
		constexpr auto _isUsable = 0x388; // bool
		constexpr auto BroadcastWhenApplicable = 0x389; // bool
		constexpr auto BroadcastOnTimer = 0x38a; // bool
		constexpr auto BroadcastCooldownTimer = 0x38b; // bool
		constexpr auto BroadcastInactiveCooldownTimer = 0x38c; // bool
		constexpr auto BroadcastAlways = 0x38d; // bool
		constexpr auto _perkIconStrategy = 0x390; // UBasePerkIconStrategy*
		constexpr auto _perkInitializationData = 0x398; // FPerkInitializationData
		constexpr auto _tokenCount = 0x3a4; // int32_t
		constexpr auto _maxTokenCount = 0x3a8; // int32_t
		constexpr auto _cooldownTimer = 0x3b0; // UTimerObject*
		constexpr auto _hudIconTimer = 0x3c0; // UTimerObject*
	}

	namespace n_UUMGLoadingScreenWidget { // : UMobileBaseUserWidget
		constexpr auto Description = 0x300; // UTextBlock*
		constexpr auto HintIcon = 0x308; // UImage*
		constexpr auto LoadingBar = 0x310; // UProgressBar*
		constexpr auto KillerPanel = 0x318; // UPanelWidget*
		constexpr auto SurvivorPanel = 0x320; // UPanelWidget*
		constexpr auto Title = 0x328; // UTextBlock*
	}

	namespace n_UBasePoolableActorComponent { // : UActorComponent
		constexpr auto OnAcquiredChanged = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UChaosClothConfig { // : UClothConfigCommon
		constexpr auto MassMode = 0x30; // EClothMassMode
		constexpr auto UniformMass = 0x34; // float
		constexpr auto TotalMass = 0x38; // float
		constexpr auto Density = 0x3c; // float
		constexpr auto MinPerParticleMass = 0x40; // float
		constexpr auto EdgeStiffness = 0x44; // float
		constexpr auto BendingStiffness = 0x48; // float
		constexpr auto AreaStiffness = 0x4c; // float
		constexpr auto VolumeStiffness = 0x50; // float
		constexpr auto StrainLimitingStiffness = 0x54; // float
		constexpr auto LimitScale = 0x58; // float
		constexpr auto bUseGeodesicDistance = 0x5c; // bool
		constexpr auto ShapeTargetStiffness = 0x60; // float
		constexpr auto CollisionThickness = 0x64; // float
		constexpr auto FrictionCoefficient = 0x68; // float
		constexpr auto DampingCoefficient = 0x6c; // float
		constexpr auto DragCoefficient = 0x70; // float
		constexpr auto AnimDriveSpringStiffness = 0x74; // float
		constexpr auto bUseBendingElements = 0x78; // bool
		constexpr auto bUseTetrahedralConstraints = 0x79; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0x7a; // bool
		constexpr auto bUseSelfCollisions = 0x7b; // bool
		constexpr auto bUseContinuousCollisionDetection = 0x7c; // bool
		constexpr auto LinearVelocityScale = 0x80; // FVector
		constexpr auto AngularVelocityScale = 0x8c; // float
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UTouchInterface { // : UObject
		constexpr auto Controls = 0x30; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x40; // float
		constexpr auto InactiveOpacity = 0x44; // float
		constexpr auto TimeUntilDeactive = 0x48; // float
		constexpr auto TimeUntilReset = 0x4c; // float
		constexpr auto ActivationDelay = 0x50; // float
		constexpr auto bPreventRecenter = 0x54; // bool
		constexpr auto StartupDelay = 0x58; // float
	}

	namespace n_UMovieSceneColorTrack { // : UMovieScenePropertyTrack
		constexpr auto bIsSlateColor = 0x98; // bool
	}

	namespace n_UEnvQueryGenerator_OnCircle { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto CircleRadius = 0x88; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xc8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0x108; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x148; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x150; // FEnvDirection
		constexpr auto ArcAngle = 0x170; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x1b0; // float
		constexpr auto CircleCenter = 0x1b8; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x1c0; // bool
		constexpr auto CircleCenterZOffset = 0x1c8; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x208; // FEnvTraceData
		constexpr auto bDefineArc = 0x238; // char : 1
	}

	namespace n_UInterpTrackInstAkAudioEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
	}

	namespace n_UGranularSynth { // : USynthComponent
		constexpr auto GranulatedSoundWave = 0x6f0; // USoundWave*
	}

	namespace n_UProceduralFoliageComponent { // : UActorComponent
		constexpr auto FoliageSpawner = 0xb8; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xc0; // float
		constexpr auto SpawningVolume = 0xc8; // AVolume*
		constexpr auto ProceduralGuid = 0xd0; // FGuid
	}

	namespace n_UTimedRespawnableTrigger { // : URespawnableTrigger
		constexpr auto _respawningEventComponent = 0xb8; // URespawningEventComponent*
	}

	namespace n_UPowerChargePresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _powerChargeComponent = 0xb8; // UPowerChargeComponent*
		constexpr auto _powerToggleComponent = 0xc0; // UPowerToggleComponent*
		constexpr auto _chargeReadyThreshold = 0xc8; // float
	}

	namespace n_ATormentMode { // : ACollectable
		constexpr auto _activateTormentModeCharge = 0x548; // UChargeableComponent*
		constexpr auto _tormentModeCharge = 0x550; // UPowerChargeComponent*
		constexpr auto _tormentModeChargePresentation = 0x560; // UPowerChargePresentationItemProgressComponent*
		constexpr auto _powerToggleComponent = 0x568; // UPowerToggleComponent*
		constexpr auto _tormentTrailSpawnerComponent = 0x570; // UTormentTrailSpawnerComponent*
		constexpr auto _tormentTrailPointCollectionComponent = 0x578; // UTormentTrailPointCollectionComponent*
		constexpr auto _restrictedTormentTrailPointCollectionComponent = 0x580; // UTormentTrailPointCollectionComponent*
		constexpr auto _tormentTrailControllerPool = 0x588; // UAuthoritativeActorPoolComponent*
		constexpr auto _tormentAttackTrailControllerPool = 0x590; // UAuthoritativeActorPoolComponent*
		constexpr auto _restrictedTormentTrailControllerPool = 0x598; // UAuthoritativeActorPoolComponent*
		constexpr auto _tormentTrailPointPool = 0x5a0; // UAuthoritativeActorPoolComponent*
		constexpr auto _restrictedTormentTrailPointPool = 0x5a8; // UAuthoritativeActorPoolComponent*
		constexpr auto _activateTormentModeSecondsToCharge = 0x5b0; // FDBDTunableRowHandle
		constexpr auto _tormentModeMaxCharge = 0x5d8; // FDBDTunableRowHandle
		constexpr auto _tormentModeChargeRate = 0x600; // FTunableStat
		constexpr auto _tormentModeDischargeRate = 0x680; // FTunableStat
		constexpr auto _tormentModePauseChargeRate = 0x700; // FDBDTunableRowHandle
		constexpr auto _tormentModeAttackConsumePower = 0x728; // FDBDTunableRowHandle
		constexpr auto _tormentModeMinimumPercentToActivate = 0x750; // FDBDTunableRowHandle
		constexpr auto _tormentModeMouseYawScale = 0x778; // FDBDTunableRowHandle
		constexpr auto _tormentModeYawAdjustTime = 0x7a0; // FDBDTunableRowHandle
		constexpr auto _tormentModeGamePadYawScale = 0x7c8; // FDBDTunableRowHandle
		constexpr auto _tormentModeYawInputLimit = 0x7f0; // FDBDTunableRowHandle
		constexpr auto _tormentModeNotMovingYawScaleMultiplier = 0x818; // FDBDTunableRowHandle
		constexpr auto _tormentModeNotMovingYawAdjustTime = 0x840; // FDBDTunableRowHandle
		constexpr auto _tormentModeWalkSpeed = 0x868; // FDBDTunableRowHandle
		constexpr auto _normalWalkSpeed = 0x890; // FDBDTunableRowHandle
		constexpr auto _tormentModeForcedPitch = 0x8b8; // FDBDTunableRowHandle
		constexpr auto _agonyComponentClass = 0x8e0; // UAgonyComponent*
		constexpr auto _killerTormentTrailDetectorClass = 0x8f8; // UTormentTrailDetectorComponent*
		constexpr auto _survivorTormentTrailDetectorClass = 0x900; // UTormentTrailDetectorComponent*
		constexpr auto _tormentModeCooldownInteraction = 0x908; // UTormentModeCooldownInteraction*
		constexpr auto _tormentModeChargeSpeedCurve = 0x910; // UCurveFloat*
		constexpr auto _mobileTormentTrailRendererClass = 0x918; // AMobileTormentTrailRenderer*
	}

	namespace n_UOffTheRecord { // : UPerk
		constexpr auto _activationDurationLevels = 0x3d0; // float [0x3]
	}

	namespace n_UPaperTerrainMaterial { // : UDataAsset
		constexpr auto Rules = 0x38; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x48; // UPaperSprite*
	}

	namespace n_USoulGuard { // : UPerk
		constexpr auto _cooldownLevels = 0x3d0; // float [0x3]
		constexpr auto _recover = 0x3dc; // bool
		constexpr auto _enduranceEffectDuration = 0x3e0; // float [0x3]
	}

	namespace n_UMovieSceneCameraCutTrack { // : UMovieSceneNameableTrack
		constexpr auto bCanBlend = 0x60; // bool
		constexpr auto Sections = 0x68; // TArray<UMovieSceneSection*>
	}

	namespace n_UUMGPurchaseSticker { // : UMobileBaseUserWidget
		constexpr auto TextDiscount = 0x300; // UTextBlock*
	}

	namespace n_UPlaneCutTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0xa0; // UPlaneCutToolProperties*
		constexpr auto AcceptProperties = 0xa8; // UAcceptOutputProperties*
		constexpr auto CutPlaneOrigin = 0xb0; // FVector
		constexpr auto CutPlaneOrientation = 0xc0; // FQuat
		constexpr auto Previews = 0xd0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto MeshesToCut = 0xe0; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
	}

	namespace n_UChestAnimInstance { // : UAnimInstance
		constexpr auto _owningChest = 0x270; // ASearchable*
		constexpr auto _isOpen = 0x278; // bool
		constexpr auto _isBeingPriedOpen = 0x279; // bool
		constexpr auto _openChestInteraction = 0x288; // UInteractionDefinition*
	}

	namespace n_UGeneratorEntityAnimInstance { // : UAnimInstance
		constexpr auto IsCorrupted = 0x270; // bool
		constexpr auto IsCorrupted_End = 0x271; // bool
		constexpr auto IsUncorrupted = 0x272; // bool
		constexpr auto IsUncorrupted_End = 0x273; // bool
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto defaultValue = 0x68; // char : 1
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x38; // FRawDistributionFloat
	}

	namespace n_APointLight { // : ALight
		constexpr auto PointLightComponent = 0x240; // UPointLightComponent*
	}

	namespace n_UAkEventCallbackInfo { // : UAkCallbackInfo
		constexpr auto PlayingID = 0x38; // int32_t
		constexpr auto EventId = 0x3c; // int32_t
	}

	namespace n_UUMGQueueStatusIconWidget { // : UMobileBaseUserWidget
		constexpr auto statusIndicator = 0x300; // UImage*
		constexpr auto AcceptableColor = 0x308; // FLinearColor
		constexpr auto ModerateColor = 0x318; // FLinearColor
		constexpr auto LongColor = 0x328; // FLinearColor
	}

	namespace n_UBTDecorator_IsInteractorAvailable { // : UBTDecorator_TickableBase
		constexpr auto BBInteractorObj = 0x70; // FBlackboardKeySelector
	}

	namespace n_UWidgetSwitcherSlot { // : UPanelSlot
		constexpr auto Padding = 0x48; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UGizmoRectangleComponent { // : UGizmoBaseComponent
		constexpr auto DirectionX = 0x448; // FVector
		constexpr auto DirectionY = 0x454; // FVector
		constexpr auto OffsetX = 0x460; // float
		constexpr auto OffsetY = 0x464; // float
		constexpr auto LengthX = 0x468; // float
		constexpr auto LengthY = 0x46c; // float
		constexpr auto Thickness = 0x470; // float
		constexpr auto SegmentFlags = 0x474; // char
	}

	namespace n_UStillnessTrackerComponent { // : UActorComponent
		constexpr auto SpeedThreshold = 0xb8; // float
		constexpr auto DistanceThreshold = 0xbc; // float
		constexpr auto DistanceDecay = 0xc0; // float
		constexpr auto DecayWhileMoving = 0xc4; // bool
		constexpr auto StillnessThreshhold = 0xc8; // float
		constexpr auto StillnessTimerLimit = 0xcc; // float
		constexpr auto DecaySpeedMultiplier = 0xd0; // float
		constexpr auto _trackedPlayer = 0xdc; // TWeakObjectPtr<ADBDPlayer>
	}

	namespace n_UUMGControlTypeSelectionWidget { // : UMobileBaseUserWidget
		constexpr auto SnapOnJoystick = 0x300; // UUMGControlTypeWidget*
		constexpr auto CameraFullScreen = 0x308; // UUMGControlTypeWidget*
		constexpr auto TitleText = 0x310; // UTextBlock*
	}

	namespace n_UAISenseConfig_Hearing { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Hearing*
		constexpr auto HearingRange = 0x58; // float
		constexpr auto LoSHearingRange = 0x5c; // float
		constexpr auto bUseLoSHearing = 0x60; // char : 1
		constexpr auto DetectionByAffiliation = 0x64; // FAISenseAffiliationFilter
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_UBTTask_BlackboardBase { // : UBTTaskNode
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UHLODProxy { // : UObject
		constexpr auto ProxyMeshes = 0x30; // TArray<FHLODProxyMesh>
	}

	namespace n_UGizmoConstantFrameAxisSource { // : UObject
		constexpr auto Origin = 0x38; // FVector
		constexpr auto Direction = 0x44; // FVector
		constexpr auto TangentX = 0x50; // FVector
		constexpr auto TangentY = 0x5c; // FVector
	}

	namespace n_USceneComponent { // : UActorComponent
		constexpr auto PhysicsVolume = 0xc0; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xc8; // USceneComponent*
		constexpr auto AttachSocketName = 0xd0; // FName
		constexpr auto AttachChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xf0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x134; // FVector
		constexpr auto RelativeRotation = 0x140; // FRotator
		constexpr auto RelativeScale3D = 0x14c; // FVector
		constexpr auto ComponentVelocity = 0x158; // FVector
		constexpr auto bComponentToWorldUpdated = 0x164; // char : 1
		constexpr auto bAbsoluteLocation = 0x164; // char : 1
		constexpr auto bAbsoluteRotation = 0x164; // char : 1
		constexpr auto bAbsoluteScale = 0x164; // char : 1
		constexpr auto bVisible = 0x164; // char : 1
		constexpr auto bShouldBeAttached = 0x164; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x165; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x165; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x165; // char : 1
		constexpr auto bSkipComponentAndChildrenTransformUpdate = 0x165; // char : 1
		constexpr auto bHiddenInGame = 0x165; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x165; // char : 1
		constexpr auto bUseAttachParentBound = 0x165; // char : 1
		constexpr auto Mobility = 0x167; // EComponentMobility
		constexpr auto DetailMode = 0x168; // EDetailMode
		constexpr auto DetailModeBitMask = 0x16c; // int32_t
		constexpr auto PhysicsVolumeChangedDelegate = 0x170; // FMulticastSparseDelegate
	}

	namespace n_UMovieSceneActorReferenceSection { // : UMovieSceneSection
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x1a0; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x220; // TArray<FString>
	}

	namespace n_AGameState { // : AGameStateBase
		constexpr auto MatchState = 0x280; // FName
		constexpr auto PreviousMatchState = 0x28c; // FName
		constexpr auto ElapsedTime = 0x298; // int32_t
	}

	namespace n_UPointLightComponent { // : ULocalLightComponent
		constexpr auto bUseInverseSquaredFalloff = 0x3a8; // char : 1
		constexpr auto LightFalloffExponent = 0x3ac; // float
		constexpr auto SourceRadius = 0x3b0; // float
		constexpr auto SoftSourceRadius = 0x3b4; // float
		constexpr auto SourceLength = 0x3b8; // float
	}

	namespace n_ATutorialLevel { // : ALevelScriptActor
		constexpr auto _tutorialStarted = 0x238; // bool
	}

	namespace n_UDedicatedServerManager { // : UObject
		constexpr auto _startupInitializer = 0x30; // TScriptInterface<IDedicatedServerStartupInitializerInterface>
		constexpr auto _gameInstance = 0x50; // UDBDGameInstance*
		constexpr auto _onlineSystemHandler = 0x58; // UOnlineSystemHandler*
	}

	namespace n_UFranklinsDemiseConsumedByEntityComponent { // : UActorComponent
		constexpr auto _consumeTimer = 0xd0; // UTimerObject*
		constexpr auto _camperStatus = 0xe8; // UStatusEffect*
		constexpr auto _previousOwner = 0xf0; // ADBDPlayer*
		constexpr auto _originatingPerkOwner = 0xf8; // ADBDPlayer*
		constexpr auto _itemChargerComponent = 0x100; // UChargerComponent*
	}

	namespace n_USubmixEffectFilterPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x7c; // FSubmixEffectFilterSettings
	}

	namespace n_UActorComponent { // : UObject
		constexpr auto PrimaryComponentTick = 0x38; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x68; // TArray<FName>
		constexpr auto AssetUserData = 0x78; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x8c; // int32_t
		constexpr auto bNetAddressable = 0x90; // char : 1
		constexpr auto bReplicates = 0x90; // char : 1
		constexpr auto bAutoActivate = 0x91; // char : 1
		constexpr auto bIsActive = 0x92; // char : 1
		constexpr auto bEditableWhenInherited = 0x92; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x92; // char : 1
		constexpr auto bIsEditorOnly = 0x92; // char : 1
		constexpr auto CreationMethod = 0x94; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x95; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x96; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0x98; // TArray<FSimpleMemberReference>
	}

	namespace n_UCharacterXPManager { // : UObject
		constexpr auto _gameInstance = 0x48; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UAISenseConfig_Sight { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Sight*
		constexpr auto SightRadius = 0x58; // float
		constexpr auto LoseSightRadius = 0x5c; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x60; // float
		constexpr auto DetectionByAffiliation = 0x64; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x68; // float
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto TargetActors = 0x230; // TArray<AActor*>
	}

	namespace n_UEnvQuery { // : UDataAsset
		constexpr auto QueryName = 0x38; // FName
		constexpr auto Options = 0x48; // TArray<UEnvQueryOption*>
	}

	namespace n_UEnvQueryGenerator_SimpleGrid { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto GridSize = 0x88; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xc8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0x108; // UEnvQueryContext*
	}

	namespace n_UBaseKillerAttackSubAnimInstance { // : UBasePlayerAttackSubAnimInstance
		constexpr auto _owningKiller = 0x5b0; // ASlasherPlayer*
	}

	namespace n_UNavigationQueryFilter_Slasher { // : UNavigationQueryFilter_Player
		constexpr auto DefaultInteractionsTimeCost = 0x70; // TMap<FString, float>
		constexpr auto FrenzyInteractionsTimeCost = 0xc0; // TMap<FString, float>
	}

	namespace n_UDoesPerkHaveToken { // : UEventDrivenModifierCondition
		constexpr auto _perk = 0xe8; // TWeakObjectPtr<UPerk>
	}

	namespace n_UMaterialExpressionLogarithm2 { // : UMaterialExpression
		constexpr auto X = 0x48; // FExpressionInput
	}

	namespace n_AController { // : AActor
		constexpr auto PlayerState = 0x238; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x248; // FMulticastInlineDelegate
		constexpr auto StateName = 0x258; // FName
		constexpr auto Pawn = 0x268; // APawn*
		constexpr auto Character = 0x278; // ACharacter*
		constexpr auto TransformComponent = 0x280; // USceneComponent*
		constexpr auto ControlRotation = 0x2a0; // FRotator
		constexpr auto bAttachToPawn = 0x2ac; // char : 1
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x38; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x80; // char : 1
	}

	namespace n_UTimelineTemplate { // : UObject
		constexpr auto TimelineLength = 0x30; // float
		constexpr auto LengthMode = 0x34; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x35; // char : 1
		constexpr auto bLoop = 0x35; // char : 1
		constexpr auto bReplicated = 0x35; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x35; // char : 1
		constexpr auto UpdateInterval = 0x38; // float
		constexpr auto EventTracks = 0x40; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x50; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x60; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x70; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x80; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x90; // FGuid
		constexpr auto VariableName = 0xa0; // FName
		constexpr auto DirectionPropertyName = 0xac; // FName
		constexpr auto UpdateFunctionName = 0xb8; // FName
		constexpr auto FinishedFunctionName = 0xc4; // FName
	}

	namespace n_UPrimaryAssetLabel { // : UPrimaryDataAsset
		constexpr auto Rules = 0x38; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x44; // char : 1
		constexpr auto bIsRuntimeLabel = 0x44; // char : 1
		constexpr auto ExplicitAssets = 0x48; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x58; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x68; // FCollectionReference
	}

	namespace n_ULingeringStateTagStatusEffect { // : UBaseLingeringStatusEffect
		constexpr auto _ownerStateTag = 0x358; // FGameplayTag
	}

	namespace n_UMaterialExpressionDDX { // : UMaterialExpression
		constexpr auto value = 0x48; // FExpressionInput
	}

	namespace n_UClickDragInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_ADBDAIPlayerController { // : ADBDAIController
		constexpr auto _currentBehaviours = 0x5f0; // TArray<UAICharacterBehaviour*>
	}

	namespace n_USurvivorPlagueEffect { // : UStatusEffect
		constexpr auto _sicknessAmount = 0x398; // float
		constexpr auto _sicknessCap = 0x39c; // float
		constexpr auto _vomitSlowDuration = 0x3a0; // float
		constexpr auto _vomitSlowAmount = 0x3a4; // float
		constexpr auto _sicknessThresholds = 0x3a8; // TArray<float>
		constexpr auto _wasRecentlyHitByVomit = 0x3b8; // bool
		constexpr auto _nonNauseatingInteractions = 0x3c0; // TArray<FString>
		constexpr auto _sicknessGainPerSecondFromInfectedInteractable = 0x3e8; // FTunableStat
		constexpr auto _debugMode = 0x4f8; // bool
	}

	namespace n_UMaterialExpressionLandscapeLayerSample { // : UMaterialExpression
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto PreviewWeight = 0x54; // float
		constexpr auto ExpressionGUID = 0x58; // FGuid
	}

	namespace n_UKillerOpenGate { // : UChargeableInteractionDefinition
		constexpr auto _openGateMontage = 0x6d8; // FAnimationMontageDescriptor
	}

	namespace n_UTestPresenter { // : UPresenter
		constexpr auto TestWidgetClass = 0xe0; // UUserWidget*
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x48; // FMaterialAttributesInput
	}

	namespace n_ABreakableBase { // : AInteractable
		constexpr auto _breakableCollision = 0x328; // UBoxComponent*
		constexpr auto _state = 0x330; // EBreakableState
		constexpr auto _akAudioBreakable = 0x338; // UAkComponent*
		constexpr auto _akAudioBreakEvent = 0x340; // UAkAudioEvent*
		constexpr auto _rootComponent = 0x348; // USceneComponent*
	}

	namespace n_UTestMovieSceneTrack { // : UMovieSceneTrack
		constexpr auto bHighPassFilter = 0x60; // bool
		constexpr auto SectionArray = 0x68; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneCameraAnimTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraAnimSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UUMGPromoPackCharacterWidget { // : UUMGPromoPackItemWidget
		constexpr auto OwnedPanel = 0x468; // UCanvasPanel*
	}

	namespace n_UAnimCollection { // : UDataAsset
		constexpr auto _taggedAnimSequences = 0x38; // TMap<FGameplayTag, UAnimSequence*>
		constexpr auto _taggedAnimBlendspaces = 0x88; // TMap<FGameplayTag, UBlendSpaceBase*>
		constexpr auto _taggedAnimSelectors = 0xd8; // TMap<FGameplayTag, FAnimSequenceSelector>
		constexpr auto _parent = 0x128; // UAnimCollection*
		constexpr auto _children = 0x130; // TArray<UAnimCollection*>
	}

	namespace n_UNavigationQueryFilter_Camper { // : UNavigationQueryFilter_Player
		constexpr auto SlasherAreaBoundsLimit = 0x70; // float
		constexpr auto SlasherAreaPenetrationCost = 0x74; // float
		constexpr auto SlasherInSightCost = 0x78; // float
		constexpr auto SlasherAreaExcludeUnderRange = 0x7c; // float
		constexpr auto SlasherInExcludeAreaCost = 0x80; // float
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto LoopCount = 0x50; // int32_t
		constexpr auto bLoopIndefinitely = 0x54; // char : 1
	}

	namespace n_UPaperGroupedSpriteComponent { // : UMeshComponent
		constexpr auto InstanceMaterials = 0x478; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x488; // TArray<FSpriteInstanceData>
	}

	namespace n_UPlatformMediaSource { // : UMediaSource
		constexpr auto MediaSource = 0x88; // UMediaSource*
	}

	namespace n_UMaterialExpressionWorldPosition { // : UMaterialExpression
		constexpr auto WorldPositionShaderOffset = 0x48; // EWorldPositionIncludedOffsets
	}

	namespace n_UMovieSceneCameraCutSection { // : UMovieSceneSection
		constexpr auto CameraGuid = 0xe8; // FGuid
		constexpr auto CameraBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UShapeComponent { // : UPrimitiveComponent
		constexpr auto ShapeBodySetup = 0x428; // UBodySetup*
		constexpr auto AreaClass = 0x430; // UNavAreaBase*
		constexpr auto ShapeColor = 0x438; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x43c; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x43c; // char : 1
		constexpr auto bDynamicObstacle = 0x43c; // char : 1
	}

	namespace n_UDownedByBasicAttack { // : UEventDrivenModifierCondition
		constexpr auto _replicatedIsTrue = 0xe8; // bool
	}

	namespace n_UMeshSelectionToolProperties { // : UInteractiveToolPropertySet
		constexpr auto SelectionMode = 0x58; // EMeshSelectionToolPrimaryMode
		constexpr auto AngleTolerance = 0x5c; // float
		constexpr auto bHitBackFaces = 0x60; // bool
		constexpr auto bShowWireframe = 0x61; // bool
		constexpr auto FaceColorMode = 0x64; // EMeshFacesColorMode
	}

	namespace n_UParticleModuleTypeDataGpu { // : UParticleModuleTypeDataBase
		constexpr auto EmitterInfo = 0x40; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2c0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x420; // float
		constexpr auto bClearExistingParticlesOnInit = 0x424; // char : 1
	}

	namespace n_USynthKnob { // : UWidget
		constexpr auto value = 0x128; // float
		constexpr auto StepSize = 0x12c; // float
		constexpr auto MouseSpeed = 0x130; // float
		constexpr auto MouseFineTuneSpeed = 0x134; // float
		constexpr auto ShowTooltipInfo = 0x138; // char : 1
		constexpr auto ParameterName = 0x140; // FText
		constexpr auto ParameterUnits = 0x158; // FText
		constexpr auto ValueDelegate = 0x170; // FDelegate
		constexpr auto WidgetStyle = 0x188; // FSynthKnobStyle
		constexpr auto locked = 0x3e0; // bool
		constexpr auto IsFocusable = 0x3e1; // bool
		constexpr auto OnMouseCaptureBegin = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x428; // FMulticastInlineDelegate
	}

	namespace n_UAuthoritativePoolProjectileProviderAdapter { // : UObject
		constexpr auto _pool = 0x38; // UAuthoritativeActorPoolComponent*
	}

	namespace n_UProxyLODMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto ProxyLODMeshReductionModuleName = 0x48; // FName
	}

	namespace n_ULightingInterpolator { // : UObject
		constexpr auto OnInterpolationDone = 0x30; // FMulticastInlineDelegate
		constexpr auto _targetLighting = 0x78; // ABaseSky*
	}

	namespace n_UActivateSuperMode { // : UInteractionDefinition
		constexpr auto _activationMontage = 0x5b8; // FAnimationMontageDescriptor
		constexpr auto _activationDuration = 0x5d8; // FDBDTunableRowHandle
		constexpr auto _confirmationChargeDuration = 0x600; // FDBDTunableRowHandle
	}

	namespace n_UUMGRewardPopupLayout { // : UMobileBaseUserWidget
		constexpr auto TopHorizontalBox = 0x300; // UHorizontalBox*
		constexpr auto BottomHorizontalBox = 0x308; // UHorizontalBox*
		constexpr auto FirstCharacter = 0x310; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto SecondCharacter = 0x318; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto ThirdCharacter = 0x320; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto FourthCharacter = 0x328; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto FifthCharacter = 0x330; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto AuricCells = 0x338; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto IridescentShards = 0x340; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto BloodPoints = 0x348; // UUMGRewardSlotTutorialPopupRewardWidget*
		constexpr auto TopWidgetToGenerate = 0x350; // FRewardLayoutWidgetToGenerate
		constexpr auto BottomWidgetToGenerate = 0x3e0; // FRewardLayoutWidgetToGenerate
	}

	namespace n_AK26AttachedCrow { // : AActor
		constexpr auto _firecrackerEffectHandlerComponent = 0x260; // UFirecrackerEffectHandlerComponent*
		constexpr auto _flashLightableComponent = 0x268; // UFlashlightableComponent*
		constexpr auto _lightBurnableComponent = 0x270; // ULightBurnable*
		constexpr auto _flashlightDestroyChargeable = 0x278; // UChargeableComponent*
		constexpr auto _requiredFlashlightTimeToDestroy = 0x290; // FDBDTunableRowHandle
		constexpr auto _lingerTime = 0x2b8; // FTunableStat
		constexpr auto _infectionDelay = 0x338; // FDBDTunableRowHandle
		constexpr auto _infectRadius = 0x360; // FDBDTunableRowHandle
		constexpr auto _outlineUpdateStrategy = 0x388; // UK26PowerOutlineUpdateStrategy*
		constexpr auto _outlineComponent = 0x390; // UDBDOutlineComponent*
		constexpr auto _visualStaticMeshComponent = 0x398; // UStaticMeshComponent*
		constexpr auto _rootComponent = 0x3a0; // USceneComponent*
		constexpr auto _statusHandler = 0x3a8; // UK26PowerStatusHandlerComponent*
		constexpr auto _authority_isInfecting = 0x3b0; // bool
		constexpr auto _attachmentStatus = 0x3b1; // FK26AttachmentStatus
	}

	namespace n_UK26CrowPlacementValidatorComponent { // : UActorComponent
		constexpr auto _objectPlacementValidationStrategyWithRestrictions = 0xb8; // UObjectPlacementValidationWithRestrictionStrategy*
	}

	namespace n_AKillerAtlantaTutorialLevel { // : AAtlantaTutorialLevel
		constexpr auto LocallyControllerSlasherPlayer = 0x328; // TWeakObjectPtr<ASlasherPlayer>
		constexpr auto ChaseCamper = 0x330; // TWeakObjectPtr<ACamperPlayer>
		constexpr auto BearTrapCamper = 0x338; // TWeakObjectPtr<ACamperPlayer>
		constexpr auto KickGenerator = 0x340; // TWeakObjectPtr<AGenerator>
		constexpr auto VaultWindow = 0x348; // TWeakObjectPtr<AWindow>
		constexpr auto EscapeDoor = 0x350; // TWeakObjectPtr<AEscapeDoor>
		constexpr auto Hatch = 0x358; // TWeakObjectPtr<AHatch>
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle { // : UParticleModuleLocationBase
		constexpr auto StartOffset = 0x38; // FRawDistributionVector
		constexpr auto Height = 0x80; // FRawDistributionFloat
		constexpr auto Angle = 0xb0; // FRawDistributionFloat
		constexpr auto Thickness = 0xe0; // FRawDistributionFloat
	}

	namespace n_USurvivorWasRecentlyUnhookedEffect { // : UStatusEffect
		constexpr auto _survivorWasRecentlyUnhookedDuration = 0x350; // FDBDTunableRowHandle
	}

	namespace n_UKatsumoriTalisman { // : UItemAddon
		constexpr auto _explosionRadius = 0x2a8; // float
		constexpr auto _blockDuration = 0x2ac; // float
	}

	namespace n_USelfUntrap { // : UChargeableInteractionDefinition
		constexpr auto _trapImmunityDuration = 0x6d8; // FDBDTunableRowHandle
		constexpr auto _untrapMontage = 0x700; // UAnimMontage*
		constexpr auto _successfulEscapeHealthy = 0x708; // FAnimationMontageDescriptor
		constexpr auto _successfulEscapeInjured = 0x728; // FAnimationMontageDescriptor
		constexpr auto _successfulEscapeCrawling = 0x748; // FAnimationMontageDescriptor
		constexpr auto _failedEscape = 0x768; // FAnimationMontageDescriptor
		constexpr auto _canEscape = 0x789; // bool
	}

	namespace n_UPossessPlayer { // : UChargeableInteractionDefinition
		constexpr auto _possessThePlayerMaxCharge = 0x6d8; // FDBDTunableRowHandle
	}

	namespace n_UTwinDestructionComponent { // : UActorComponent
		constexpr auto _huskClass = 0xe8; // AActor*
		constexpr auto _dyingTransform = 0xf0; // FTransform
		constexpr auto _diedFromSurvivorRemovingTwin = 0x138; // bool
		constexpr auto _dyingFromSurvivorTranslation = 0x190; // float
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UBTDecorator_ExtIsBBEntryOfClass { // : UBTDecorator_IsBBEntryOfClass
		constexpr auto InvertConditition = 0xa8; // bool
	}

	namespace n_ABP_Menu_Slasher18_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_19 = 0x698; // UBP_Audio_KLR_18_C*
		constexpr auto rings = 0x6a0; // USkeletalMeshComponent*
		constexpr auto DemonModeMenu = 0x6a8; // UDemonModeMenuComponent*
		constexpr auto SKWS01_REF = 0x6b0; // USkeletalMeshComponent*
		constexpr auto TML_DemonModeCusto_Color_4A028AF64D8C75B37ACB968AFFF999A6 = 0x6b8; // FLinearColor
		constexpr auto TML_DemonModeCusto_Demon_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6 = 0x6c8; // float
		constexpr auto TML_DemonModeCusto_Normal_Custo_Dissolve_4A028AF64D8C75B37ACB968AFFF999A6 = 0x6cc; // float
		constexpr auto TML_DemonModeCusto__Direction_4A028AF64D8C75B37ACB968AFFF999A6 = 0x6d0; // ETimelineDirection
		constexpr auto TML_DemonModeCusto = 0x6d8; // UTimelineComponent*
		constexpr auto TML_KatanaDissolve_Dissolve_E350E1F74AF3386DE5C9E7A92E1CFCA4 = 0x6e0; // float
		constexpr auto TML_KatanaDissolve__Direction_E350E1F74AF3386DE5C9E7A92E1CFCA4 = 0x6e4; // ETimelineDirection
		constexpr auto TML_KatanaDissolve = 0x6e8; // UTimelineComponent*
		constexpr auto IsKatanaVisible = 0x6f0; // bool
		constexpr auto NormalModeCustoParts = 0x6f8; // TArray<USkeletalMeshComponent*>
		constexpr auto DemonModeVFX = 0x708; // TArray<UParticleSystemComponent*>
		constexpr auto DemonModeCustoParts = 0x718; // TArray<USkeletalMeshComponent*>
		constexpr auto SKOniEmissiveDefault = 0x728; // TArray<FLinearColor>
		constexpr auto IsInDemonMode = 0x738; // bool
		constexpr auto SM_OniEmissiveDefault = 0x740; // TArray<FLinearColor>
		constexpr auto MaxSwordDissolveValue = 0x750; // float
		constexpr auto MinDissolvevalue = 0x754; // float
	}

	namespace n_UUnhook { // : UChargeableInteractionDefinition
		constexpr auto _snapPoints = 0x6d8; // TArray<USceneComponent*>
		constexpr auto _unhookLoudNoiseRange = 0x6e8; // FDBDTunableRowHandle
		constexpr auto _unhookingPlayer = 0x718; // ADBDPlayer*
		constexpr auto _hookedCharacterSnapTime = 0x720; // float
		constexpr auto _playerBeingUnhooked = 0x728; // ACamperPlayer*
	}

	namespace n_UUMGCloseTooltipWidget { // : UMobileBaseUserWidget
		constexpr auto FullScreenButton = 0x300; // UButton*
	}

	namespace n_USourceEffectEQPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x80; // FSourceEffectEQSettings
	}

	namespace n_UIsHighestLevelAndClosestOriginatingEffect { // : UGameplayModifierCondition
		constexpr auto _applicableEffects = 0xd0; // TArray<UStatusEffect*>
	}

	namespace n_UNoiseField { // : UFieldNodeFloat
		constexpr auto MinRange = 0xb8; // float
		constexpr auto MaxRange = 0xbc; // float
		constexpr auto Transform = 0xc0; // FTransform
	}

	namespace n_UShapePounceAttackOpenSubstate { // : UPounceAttackOpenSubstate
		constexpr auto _tierDurations = 0x130; // TArray<FDBDTunableRowHandle>
	}

	namespace n_UChargerComponent { // : UActorComponent
		constexpr auto ChargerComponentID = 0xc0; // FString
		constexpr auto OnChargeStateChange = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnChargePercentChange = 0xe0; // FMulticastInlineDelegate
		constexpr auto EnergyType = 0x108; // EEnergyTypeEnum
		constexpr auto _currentEnergyLevel = 0x10c; // float
		constexpr auto _maxEnergyLevel = 0x110; // float
	}

	namespace n_UUMGRitualClaimRewardButton { // : UUMGBaseButtonWidget
		constexpr auto OnPressedAnimationCompleted = 0x430; // FMulticastInlineDelegate
		constexpr auto ClaimFxPanel = 0x440; // UCanvasPanel*
	}

	namespace n_UPrimitivesRegistererComponent { // : UActorComponent
		constexpr auto _primitives = 0xb8; // TArray<UPrimitiveComponent*>
		constexpr auto _primitiveCollection = 0xc8; // TWeakObjectPtr<UPrimitiveCollection>
	}

	namespace n_UNearMeEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _questOwnerCanBeSubjectOfEvent = 0x4c; // bool
	}

	namespace n_ADBDPlayerController { // : ADBDPlayerControllerBase
		constexpr auto OnPawnLeavingGame = 0x640; // FMulticastInlineDelegate
		constexpr auto OnLocallyObservedChanged = 0x650; // FMulticastInlineDelegate
		constexpr auto _theFence = 0x6f8; // ANetworkFenceActor*
		constexpr auto _inputHandler = 0x708; // UDBDBaseInputHandler*
		constexpr auto _aiPawn = 0x838; // APawn*
		constexpr auto _controllerGameRole = 0x848; // EPlayerRole
	}

	namespace n_UAutodidact { // : UPerk
		constexpr auto _maxTokenCountPerLevel = 0x3d0; // int32_t [0x3]
		constexpr auto _progressionBonusPerToken = 0x3dc; // float
		constexpr auto _initialSkillCheckProgressionPenalty = 0x3e0; // float
	}

	namespace n_ATestMovableActor { // : AActor
		constexpr auto BoxComponent = 0x230; // UBoxComponent*
	}

	namespace n_UPawnMovementComponent { // : UNavMovementComponent
		constexpr auto PawnOwner = 0x140; // APawn*
	}

	namespace n_UUMGStatusEffectsWidget { // : UMobileBaseUserWidget
		constexpr auto AtlantaStatusEffectIconClass = 0x300; // TSoftClassPtr<UObject>
		constexpr auto StatusEffectsBox = 0x330; // UHorizontalBox*
		constexpr auto _statusEffectsMap = 0x338; // TMap<FName, UUMGStatusEffectIcon*>
	}

	namespace n_UUMGAuthenticationProviderSelection { // : UUserWidget
		constexpr auto _isAsia = 0x260; // bool
	}

	namespace n_UAB_Menu_Slasher05_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x418; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x4b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UItemAddon { // : UItemModifier
		constexpr auto BaseItemType = 0x280; // ACollectable*
		constexpr auto _needsSetup = 0x288; // bool
		constexpr auto _addonInitializationData = 0x289; // FItemAddonInitializationData
	}

	namespace n_UMapActorComponent { // : UActorComponent
		constexpr auto Category = 0xb8; // EMapActorCategory
		constexpr auto _mapActorCollider = 0xc0; // UPrimitiveComponent*
		constexpr auto _detectionEnabled = 0xe0; // bool
	}

	namespace n_UFieldSystemComponent { // : UPrimitiveComponent
		constexpr auto FieldSystem = 0x428; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x440; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UUMGGenericPopup { // : UMobileBaseUserWidget
		constexpr auto Title = 0x300; // URichTextBlock*
		constexpr auto Message = 0x308; // UUMGHtmlRichText*
		constexpr auto TitleBackground = 0x310; // UImage*
		constexpr auto TitleSmoke = 0x318; // UImage*
		constexpr auto RegressionPopupButton = 0x320; // UUMGPopupButton*
		constexpr auto AlternativePopupButton = 0x328; // UUMGPopupButton*
		constexpr auto ProgressionPopupButton = 0x330; // UUMGPopupButton*
		constexpr auto ErrorTitleSmokeColor = 0x338; // FSlateColor
		constexpr auto ErrorTitleBackgroundColor = 0x360; // FSlateColor
		constexpr auto DefaultTitleSmokeColor = 0x388; // FSlateColor
		constexpr auto DefaultTitleBackgroundColor = 0x3b0; // FSlateColor
	}

	namespace n_UOnlineHotfixManager { // : UObject
		constexpr auto OssName = 0x1e8; // FString
		constexpr auto HotfixManagerClassName = 0x1f8; // FString
		constexpr auto DebugPrefix = 0x208; // FString
		constexpr auto AssetsHotfixedFromIniFiles = 0x218; // TArray<UObject*>
	}

	namespace n_UAB_K24_SW00_Menu_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x4c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x578; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x5b0; // FAnimNode_StateMachine
		constexpr auto _switchInterrupt2 = 0x660; // bool
		constexpr auto _animSwitch = 0x664; // int32_t
	}

	namespace n_UAtlantaHudDirectionalStick { // : UMobileBaseUserWidget
		constexpr auto JoystickAnimationPanel = 0x300; // UCanvasPanel*
		constexpr auto ContainerToRotate = 0x308; // UCanvasPanel*
		constexpr auto ArrowsContainer = 0x310; // UCanvasPanel*
		constexpr auto JoystickLockImage = 0x318; // UImage*
		constexpr auto JoystickOn = 0x320; // UImage*
		constexpr auto AutoRunContainer = 0x328; // UCanvasPanel*
		constexpr auto _isMovementLockAnimationActive = 0x330; // bool
	}

	namespace n_AGameStateBase { // : AInfo
		constexpr auto GameModeClass = 0x230; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x238; // AGameModeBase*
		constexpr auto SpectatorClass = 0x240; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x248; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x258; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x25c; // float
		constexpr auto ServerWorldTimeSecondsDelta = 0x260; // float
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x264; // float
	}

	namespace n_UCorrectiveAction { // : UPerk
		constexpr auto _startingTokens = 0x3d0; // float [0x3]
		constexpr auto _statusEffectName = 0x3dc; // FName
		constexpr auto _allowedInteractionSemanticsForToken = 0x3e8; // FGameplayTagContainer
	}

	namespace n_UAnimBlueprintGeneratedClass { // : UBlueprintGeneratedClass
		constexpr auto BakedStateMachines = 0x340; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x350; // USkeleton*
		constexpr auto AnimNotifies = 0x358; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x368; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x438; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x448; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x458; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x4a8; // TMap<FName, FAnimGraphBlendOptions>
	}

	namespace n_ALandscapeStreamingProxy { // : ALandscapeProxy
		constexpr auto LandscapeActor = 0x558; // LazyObjectProperty
	}

	namespace n_UUniqueTargetIncrementQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _targetList = 0x90; // TSet<TWeakObjectPtr<AActor>>
	}

	namespace n_UUVProjectionToolProperties { // : UInteractiveToolPropertySet
		constexpr auto UVProjectionMethod = 0x58; // EUVProjectionMethod
		constexpr auto ProjectionPrimitiveScale = 0x5c; // FVector
		constexpr auto CylinderProjectToTopOrBottomAngleThreshold = 0x68; // float
		constexpr auto UVScale = 0x6c; // FVector2D
		constexpr auto UVOffset = 0x74; // FVector2D
		constexpr auto bWorldSpaceUVScale = 0x7c; // bool
	}

	namespace n_UBloodOrbCollection { // : UActorComponent
		constexpr auto _bloodOrbs = 0xb8; // TArray<ABloodOrb*>
	}

	namespace n_ADynamicGrass { // : AActor
		constexpr auto _worldSettings = 0x230; // UMaterialParameterCollection*
	}

	namespace n_UMovieSceneAkAudioEventSection { // : UMovieSceneSection
		constexpr auto Event = 0x128; // UAkAudioEvent*
		constexpr auto RetriggerEvent = 0x130; // bool
		constexpr auto ScrubTailLengthMs = 0x134; // int32_t
		constexpr auto StopAtSectionEnd = 0x138; // bool
		constexpr auto EventName = 0x140; // FString
		constexpr auto MaxSourceDuration = 0x170; // float
		constexpr auto MaxDurationSourceID = 0x178; // FString
	}

	namespace n_UUMGAtlantaMatchConfigScreen { // : UMobileBaseUserWidget
		constexpr auto MatchConfigPageScroll = 0x300; // UUMGAtlantaMatchConfigPageScroll*
		constexpr auto TabsBox = 0x308; // UHorizontalBox*
		constexpr auto BotsTabsBox = 0x310; // UVerticalBox*
		constexpr auto BackButton = 0x318; // UUMGBaseButtonWidget*
		constexpr auto MatchConfigTitle = 0x320; // UTextBlock*
		constexpr auto InventoryTitle = 0x328; // UTextBlock*
		constexpr auto SelectedTabTitle = 0x330; // UTextBlock*
		constexpr auto TabsDataAsset = 0x338; // UMatchConfigTabsDataAsset*
		constexpr auto SmallTabSeparation = 0x340; // FSlateBrush
		constexpr auto BigTabSeparation = 0x3d0; // FSlateBrush
		constexpr auto TabsVerticalPadding = 0x460; // float
		constexpr auto TabsHorizontalPadding = 0x464; // float
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ResetColor = 0x60; // FLinearColor
	}

	namespace n_UEdGraphPin_Deprecated { // : UObject
		constexpr auto PinName = 0x30; // FString
		constexpr auto PinToolTip = 0x40; // FString
		constexpr auto Direction = 0x50; // EEdGraphPinDirection
		constexpr auto PinType = 0x58; // FEdGraphPinType
		constexpr auto defaultValue = 0xc8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xd8; // FString
		constexpr auto DefaultObject = 0xe8; // UObject*
		constexpr auto DefaultTextValue = 0xf0; // FText
		constexpr auto LinkedTo = 0x108; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0x118; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x128; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x130; // UEdGraphPin_Deprecated*
	}

	namespace n_UAB_Menu_Slasher03_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x350; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x378; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_6 = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x418; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_5 = 0x450; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x4c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x500; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x578; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x5b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x628; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x660; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x710; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x788; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x828; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x8c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x940; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x978; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0xa28; // bool
		constexpr auto Is Online = 0xa29; // bool
		constexpr auto RandomInterrupt = 0xa2c; // int32_t
	}

	namespace n_ABandwidthTestActor { // : AActor
		constexpr auto BandwidthGenerator = 0x230; // FBandwidthTestGenerator
	}

	namespace n_UAddon_TormentMode_18 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _obliviousDuration = 0x2a8; // float
	}

	namespace n_UBloodTrailComponent { // : UActorComponent
		constexpr auto _bloodTrailSettings = 0xb8; // UBloodTrailSettings*
		constexpr auto _bloodDecals = 0x140; // TMap<UDBDDecalComponent*, FBloodDecal>
		constexpr auto _bloodDecalEffect = 0x190; // UBloodDecalEffect*
		constexpr auto _decalSpawner = 0x228; // UDecalSpawner*
	}

	namespace n_UAITask { // : UGameplayTask
		constexpr auto OwnerController = 0x70; // AAIController*
	}

	namespace n_ULoadingImagesDataProvider { // : UObject
		constexpr auto _cachedLoadingImages = 0x30; // TMap<FName, FLoadingImages>
		constexpr auto _owningDynamicContentHolder = 0x80; // UDynamicContentHolder*
	}

	namespace n_UAICharacterEscapeCarriedData { // : UAICharacterBehaviourData
		constexpr auto _preventWiggleSuccess = 0x30; // bool
	}

	namespace n_UButtonPressTracker { // : ULocalPlayerSubsystem
		constexpr auto _trackedInputComponent = 0x50; // TWeakObjectPtr<UInputComponent>
		constexpr auto _playerInput = 0x58; // TWeakObjectPtr<UPlayerInput>
	}

	namespace n_URadialVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto Position = 0xbc; // FVector
	}

	namespace n_UAICharacterHideInLockerBehaviourData { // : UAICharacterBehaviourData
		constexpr auto characterMovementType = 0x38; // ECharacterMovementTypes
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x38; // char : 1
		constexpr auto bApplyOwnerScale = 0x38; // char : 1
	}

	namespace n_UDatasmithVREDSceneImportData { // : UDatasmithFBXSceneImportData
		constexpr auto bMergeNodes = 0x50; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x51; // bool
		constexpr auto bImportMats = 0x52; // bool
		constexpr auto MatsPath = 0x58; // FString
		constexpr auto bImportVar = 0x68; // bool
		constexpr auto bCleanVar = 0x69; // bool
		constexpr auto VarPath = 0x70; // FString
		constexpr auto bImportLightInfo = 0x80; // bool
		constexpr auto LightInfoPath = 0x88; // FString
		constexpr auto bImportClipInfo = 0x98; // bool
		constexpr auto ClipInfoPath = 0xa0; // FString
	}

	namespace n_ASpectatorBeaconClient { // : AOnlineBeaconClient
		constexpr auto DestSessionId = 0x2f8; // FString
		constexpr auto PendingReservation = 0x308; // FSpectatorReservation
		constexpr auto RequestType = 0x380; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x381; // bool
		constexpr auto bCancelReservation = 0x382; // bool
	}

	namespace n_ULuminARCandidateImage { // : UARCandidateImage
		constexpr auto bUseUnreliablePose = 0x60; // bool
		constexpr auto bImageIsStationary = 0x61; // bool
	}

	namespace n_UMediaTexture { // : UTexture
		constexpr auto AddressX = 0xc0; // TextureAddress
		constexpr auto AddressY = 0xc1; // TextureAddress
		constexpr auto AutoClear = 0xc2; // bool
		constexpr auto ClearColor = 0xc4; // FLinearColor
		constexpr auto EnableGenMips = 0xd4; // bool
		constexpr auto NumMips = 0xd5; // char
		constexpr auto MediaPlayer = 0xd8; // UMediaPlayer*
	}

	namespace n_UGameplayModifierContainer { // : UBaseModifierContainer
		constexpr auto _tickableConditionsData = 0x188; // FModifierTickableConditionReplicatedData
		constexpr auto _tags = 0x1a0; // TArray<FName>
		constexpr auto UseApplyFunction = 0x1b0; // bool
		constexpr auto BroadcastStatusView = 0x1b1; // bool
		constexpr auto StatusViewID = 0x1b4; // FName
		constexpr auto _autoInitializeOnBeginPlay = 0x1c0; // bool
		constexpr auto _canOptimizeTickActivation = 0x1c1; // bool
		constexpr auto _activationTimer = 0x210; // UTimerObject*
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceSMData = 0x4e8; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x4f8; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x500; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x510; // int32_t
		constexpr auto InstanceStartCullDistance = 0x514; // int32_t
		constexpr auto InstanceEndCullDistance = 0x518; // int32_t
		constexpr auto InstanceReorderTable = 0x520; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x578; // int32_t
		constexpr auto CachedMappings = 0x580; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UCustomizationDescription { // : UDataAsset
		constexpr auto Parts = 0x38; // TArray<FCustomizedMeshPart>
	}

	namespace n_ULightingHelper { // : UObject
		constexpr auto _levelLighting = 0x30; // ABaseSky*
		constexpr auto _levelLightingFixed = 0x38; // ABaseSky*
		constexpr auto _levelLightingSpawned = 0x40; // ABaseSky*
		constexpr auto _levelLightingWithoutExposure = 0x48; // ABaseSky*
		constexpr auto _adaptiveShadowMapControllersActor = 0x50; // AActor*
		constexpr auto _lightingInterpolator = 0x58; // ULightingInterpolator*
		constexpr auto _lightingFactory = 0x60; // ULightingFactory*
		constexpr auto _postProcessCache = 0x68; // UPostProcessComponent*
		constexpr auto _bIsDreamworldActive = 0x70; // bool
	}

	namespace n_UUMGLevelBannerWidget { // : UMobileBaseUserWidget
		constexpr auto TooltipButton = 0x308; // UButton*
		constexpr auto PlayerLevelText = 0x310; // UTextBlock*
		constexpr auto PlayerDevotionText = 0x318; // UTextBlock*
		constexpr auto PlayerCurrentExperienceText = 0x320; // UTextBlock*
		constexpr auto PlayerNextLevelExperienceText = 0x328; // UTextBlock*
		constexpr auto XPProgressBar = 0x330; // UProgressBar*
		constexpr auto XPTextContainer = 0x338; // UHorizontalBox*
		constexpr auto OnLongPressSound = 0x340; // UAkAudioEvent*
		constexpr auto TooltipHighlightPicture = 0x348; // UImage*
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
	}

	namespace n_UPerspectiveEffectActivator { // : UActorComponent
		constexpr auto _perspectiveEffects = 0xc8; // TMap<FName, FPerspectiveEffectData>
	}

	namespace n_UMaterialExpressionSceneColor { // : UMaterialExpression
		constexpr auto InputMode = 0x48; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x4c; // FExpressionInput
		constexpr auto OffsetFraction = 0x68; // FExpressionInput
		constexpr auto ConstInput = 0x84; // FVector2D
	}

	namespace n_UUMGShadersPrecompilingProgressionWidget { // : UMobileBaseUserWidget
		constexpr auto _progressBar = 0x300; // UProgressBar*
		constexpr auto _progressionText = 0x308; // UTextBlock*
	}

	namespace n_USpineChillPerk { // : UPerk
		constexpr auto _actionSpeed = 0x3d0; // float [0x3]
	}

	namespace n_UAimableComponent { // : UActorComponent
		constexpr auto _occlusionIgnoredActors = 0xc0; // TArray<AActor*>
		constexpr auto _maxAimDistance = 0xd0; // float
		constexpr auto _aimDirectionProvider = 0xd8; // UAimDirectionProvider*
		constexpr auto _useOcclusion = 0xe0; // bool
		constexpr auto _aimPointLerpFactor = 0xe4; // float
		constexpr auto _preOcclusionAimPointProcessors = 0xe8; // TArray<UAimPointProcessor*>
	}

	namespace n_UDedicatedServerHandlerComponent { // : UActorComponent
		constexpr auto _atlantaRituals = 0xb8; // FAtlantaRitualSet
	}

	namespace n_UAssetLibraryManager { // : UObject
		constexpr auto _worldContextObject = 0x40; // UObject*
		constexpr auto _characterItemsAssetLibrary = 0x48; // TMap<int32_t, UCharacterItemsAssetLibrary*>
		constexpr auto _globalAssetLibrary = 0x98; // UIniAssetLibrary*
		constexpr auto _menuAssetLibrary = 0xa0; // UMenuAssetLibrary*
		constexpr auto _gameAssetLibrary = 0xa8; // UGameAssetLibrary*
		constexpr auto _tutorialAssetLibrary = 0xb0; // UTutorialAssetLibrary*
		constexpr auto _shopManager = 0xc0; // Ushopmanager*
		constexpr auto _loadingList = 0xd8; // TArray<FAssetLibraryLoader>
		constexpr auto CharacterItemsAssetLoadCountPerChunk = 0xe8; // int32_t
		constexpr auto BlindPackAssetLoadCountPerChunk = 0xec; // int32_t
		constexpr auto MenuAssetLoadCountPerChunk = 0xf0; // int32_t
		constexpr auto GlobalAssetLoadCountPerChunk = 0xf4; // int32_t
		constexpr auto GameAssetLoadCountPerChunk = 0xf8; // int32_t
	}

	namespace n_UAddon_K24_19 { // : UImposeStatusEffectOnEventAddon
		constexpr auto _zombieEscapeDoorPointsActor = 0x2c0; // AZombieEscapeDoorPointsActor*
	}

	namespace n_UAddon_K22Power_9 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _increaseDestroyTwinTime = 0x2a8; // float
	}

	namespace n_UPaperSprite { // : UObject
		constexpr auto AdditionalSourceTextures = 0x40; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x50; // FVector2D
		constexpr auto BakedSourceDimension = 0x58; // FVector2D
		constexpr auto BakedSourceTexture = 0x60; // UTexture2D*
		constexpr auto DefaultMaterial = 0x68; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x70; // UMaterialInterface*
		constexpr auto Sockets = 0x78; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x88; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x8c; // float
		constexpr auto BodySetup = 0x90; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x98; // int32_t
		constexpr auto BakedRenderData = 0xa0; // TArray<FVector4>
	}

	namespace n_UDisplayStandCurrencyRequesterComponent { // : UActorComponent
		constexpr auto _menuCurrencyDisplayableClass = 0xc0; // UObject*
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x40; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x88; // char : 1
	}

	namespace n_UAkAndroidInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkAndroidAdvancedInitializationSettings
	}

	namespace n_UGeometryCacheTrackStreamable { // : UGeometryCacheTrack
		constexpr auto Codec = 0x60; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xd0; // float
	}

	namespace n_USocialParty { // : UObject
		constexpr auto ReservationBeaconClientClass = 0x60; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClientClass = 0x68; // ASpectatorBeaconClient*
		constexpr auto OwningLocalUserId = 0x80; // FUniqueNetIdRepl
		constexpr auto CurrentLeaderId = 0xa8; // FUniqueNetIdRepl
		constexpr auto PartyMembersById = 0xd0; // TMap<FUniqueNetIdRepl, UPartyMember*>
		constexpr auto bEnableAutomaticPartyRejoin = 0x120; // bool
		constexpr auto ReservationBeaconClient = 0x1a0; // APartyBeaconClient*
		constexpr auto SpectatorBeaconClient = 0x1b8; // ASpectatorBeaconClient*
	}

	namespace n_UPalletPullUpInteraction { // : UChargeableInteractionDefinition
		constexpr auto _side = 0x6d8; // EPalletSide
		constexpr auto _owningPallet = 0x6e0; // APallet*
	}

	namespace n_UMaterialExpressionArctangent { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_AClipManager { // : AActor
		constexpr auto _clippingZones = 0x230; // TArray<UDBDClipRegionComponent*>
		constexpr auto _meshComponents = 0x240; // TSet<UMeshComponent*>
		constexpr auto _dissolvedMeshes = 0x290; // TArray<FMaterialOriginalState>
		constexpr auto _normal2dissolve = 0x2a0; // TMap<UMaterialInterface*, UMaterialInterface*>
		constexpr auto _dissolve2normal = 0x2f0; // TMap<UMaterialInterface*, UMaterialInterface*>
		constexpr auto _sphericalDissolveMaterials = 0x340; // UDataTable*
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0x78; // TArray<FParticleReplayTrackKey>
	}

	namespace n_UFoliageType { // : UObject
		constexpr auto UpdateGuid = 0x30; // FGuid
		constexpr auto Density = 0x40; // float
		constexpr auto DensityAdjustmentFactor = 0x44; // float
		constexpr auto Radius = 0x48; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x4c; // bool
		constexpr auto SingleInstanceModeRadius = 0x50; // float
		constexpr auto Scaling = 0x54; // EFoliageScaling
		constexpr auto ScaleX = 0x58; // FFloatInterval
		constexpr auto ScaleY = 0x60; // FFloatInterval
		constexpr auto ScaleZ = 0x68; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x70; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0xa0; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0xa4; // float
		constexpr auto VertexColorMaskInvert = 0xa8; // char : 1
		constexpr auto ZOffset = 0xac; // FFloatInterval
		constexpr auto AlignToNormal = 0xb4; // char : 1
		constexpr auto AlignMaxAngle = 0xb8; // float
		constexpr auto RandomYaw = 0xbc; // char : 1
		constexpr auto RandomPitchAngle = 0xc0; // float
		constexpr auto GroundSlopeAngle = 0xc4; // FFloatInterval
		constexpr auto Height = 0xcc; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd8; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe8; // float
		constexpr auto ExclusionLandscapeLayers = 0xf0; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0x100; // float
		constexpr auto LandscapeLayer = 0x104; // FName
		constexpr auto CollisionWithWorld = 0x110; // char : 1
		constexpr auto CollisionScale = 0x114; // FVector
		constexpr auto MeshBounds = 0x120; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x13c; // FVector
		constexpr auto Mobility = 0x148; // EComponentMobility
		constexpr auto CullDistance = 0x14c; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x154; // char : 1
		constexpr auto CastShadow = 0x154; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x154; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x154; // char : 1
		constexpr auto bCastDynamicShadow = 0x154; // char : 1
		constexpr auto bCastStaticShadow = 0x154; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x154; // char : 1
		constexpr auto bReceivesDecals = 0x154; // char : 1
		constexpr auto bOverrideLightMapRes = 0x155; // char : 1
		constexpr auto OverriddenLightMapRes = 0x158; // int32_t
		constexpr auto LightmapType = 0x15c; // ELightmapType
		constexpr auto bUseAsOccluder = 0x160; // char : 1
		constexpr auto BodyInstance = 0x168; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x280; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x281; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x284; // char : 1
		constexpr auto CustomDepthStencilValue = 0x288; // int32_t
		constexpr auto TranslucencySortPriority = 0x28c; // int32_t
		constexpr auto CollisionRadius = 0x290; // float
		constexpr auto ShadeRadius = 0x294; // float
		constexpr auto NumSteps = 0x298; // int32_t
		constexpr auto InitialSeedDensity = 0x29c; // float
		constexpr auto AverageSpreadDistance = 0x2a0; // float
		constexpr auto SpreadVariance = 0x2a4; // float
		constexpr auto SeedsPerStep = 0x2a8; // int32_t
		constexpr auto DistributionSeed = 0x2ac; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2b0; // float
		constexpr auto bCanGrowInShade = 0x2b4; // bool
		constexpr auto bSpawnsInShade = 0x2b5; // bool
		constexpr auto MaxInitialAge = 0x2b8; // float
		constexpr auto MaxAge = 0x2bc; // float
		constexpr auto OverlapPriority = 0x2c0; // float
		constexpr auto ProceduralScale = 0x2c4; // FFloatInterval
		constexpr auto ScaleCurve = 0x2d0; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x358; // int32_t
		constexpr auto ReapplyDensity = 0x35c; // char : 1
		constexpr auto ReapplyRadius = 0x35c; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x35c; // char : 1
		constexpr auto ReapplyRandomYaw = 0x35c; // char : 1
		constexpr auto ReapplyScaling = 0x35c; // char : 1
		constexpr auto ReapplyScaleX = 0x35c; // char : 1
		constexpr auto ReapplyScaleY = 0x35c; // char : 1
		constexpr auto ReapplyScaleZ = 0x35c; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x35d; // char : 1
		constexpr auto ReapplyGroundSlope = 0x35d; // char : 1
		constexpr auto ReapplyHeight = 0x35d; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x35d; // char : 1
		constexpr auto ReapplyZOffset = 0x35d; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x35d; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x35d; // char : 1
		constexpr auto bEnableDensityScaling = 0x35d; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x360; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x370; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x374; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_UKillerInstinctComponent { // : UActorComponent
		constexpr auto _defaultKillerInstinctAsset = 0xb8; // FCustomKillerInstinctData
		constexpr auto _particleSystemComponent = 0xe0; // UNiagaraComponent*
		constexpr auto _camperHighlightColorOverride = 0xec; // FLinearColor
		constexpr auto _customKillerInstinctData = 0x1a8; // TArray<FCustomKillerInstinctData>
		constexpr auto _currentKillerInstinctData = 0x1b8; // FCustomKillerInstinctData
	}

	namespace n_UUMGCommandDebugButton { // : UMobileBaseUserWidget
		constexpr auto CommandLabel = 0x300; // UTextBlock*
		constexpr auto CommandButton = 0x308; // UButton*
		constexpr auto CommandName = 0x310; // FString
	}

	namespace n_UDefaultObjectPlacementValidationStrategy { // : UObjectPlacementValidationStrategy
		constexpr auto _objectPlacementRaycastStart = 0xb8; // FVector
		constexpr auto _objectPlacementRaycastEnd = 0xc4; // FVector
		constexpr auto _objectHeightRangeAroundBaseLocation = 0xd0; // FFloatRange
	}

	namespace n_UGameManualSubPresenter { // : USubPresenter
		constexpr auto _gameManualWidget = 0xb8; // TScriptInterface<IGameManualViewInterface>
	}

	namespace n_UPortalPlacerStateComponent { // : UActorComponent
		constexpr auto OnTeleportCooldownComplete = 0xb8; // FMulticastInlineDelegate
		constexpr auto _remainingPortals = 0xd4; // int32_t
		constexpr auto _placedPortals = 0x120; // TArray<ADemogorgonPortal*>
		constexpr auto _restrictedPortalLocations = 0x130; // TArray<FPortalRestrictedLocation>
	}

	namespace n_UInteractionRespawnableTrigger { // : URespawnableTrigger
		constexpr auto _respawningEventComponent = 0xb8; // URespawningEventComponent*
	}

	namespace n_UDrawPolyPathExtrudeProperties { // : UInteractiveToolPropertySet
		constexpr auto Direction = 0x58; // EDrawPolyPathExtrudeDirection
	}

	namespace n_UARTrackableNotifyComponent { // : UActorComponent
		constexpr auto OnAddTrackedGeometry = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x108; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x118; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x128; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x138; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x148; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x158; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x168; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x178; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x188; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x198; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1a8; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1b8; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1c8; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1d8; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1e8; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x1f8; // FMulticastInlineDelegate
	}

	namespace n_UAISense_Sight { // : UAISense
		constexpr auto MaxTracesPerTick = 0x158; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x15c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x160; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x168; // float
		constexpr auto MaxQueryImportance = 0x170; // float
		constexpr auto SightLimitQueryImportance = 0x174; // float
	}

	namespace n_UJoinSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_ALobbyBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto LobbyStateClass = 0x268; // TSoftClassPtr<UObject>
		constexpr auto LobbyState = 0x298; // ALobbyBeaconState*
	}

	namespace n_UMaterialExpressionLogarithm10 { // : UMaterialExpression
		constexpr auto X = 0x48; // FExpressionInput
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x38; // EBeam2Method
		constexpr auto TextureTile = 0x3c; // int32_t
		constexpr auto TextureTileDistance = 0x40; // float
		constexpr auto Sheets = 0x44; // int32_t
		constexpr auto MaxBeamCount = 0x48; // int32_t
		constexpr auto Speed = 0x4c; // float
		constexpr auto InterpolationPoints = 0x50; // int32_t
		constexpr auto bAlwaysOn = 0x54; // char : 1
		constexpr auto UpVectorStepSize = 0x58; // int32_t
		constexpr auto BranchParentName = 0x5c; // FName
		constexpr auto Distance = 0x68; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x98; // EBeamTaperMethod
		constexpr auto TaperFactor = 0xa0; // FRawDistributionFloat
		constexpr auto TaperScale = 0xd0; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0x100; // char : 1
		constexpr auto RenderDirectLine = 0x100; // char : 1
		constexpr auto RenderLines = 0x100; // char : 1
		constexpr auto RenderTessellation = 0x100; // char : 1
	}

	namespace n_URemeshMeshTool { // : USingleSelectionTool
		constexpr auto BasicProperties = 0x98; // URemeshMeshToolProperties*
		constexpr auto MeshStatisticsProperties = 0xa0; // UMeshStatisticsProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto Radius = 0x80; // FExpressionInput
		constexpr auto Hardness = 0x9c; // FExpressionInput
		constexpr auto AttenuationRadius = 0xb8; // float
		constexpr auto HardnessPercent = 0xbc; // float
	}

	namespace n_UAIHealAllyBehaviour { // : UAICharacterBehaviour
		constexpr auto _behaviourData = 0x58; // UAIHealAllyBehaviourData*
		constexpr auto _aiController = 0x60; // ADBDAIPlayerController*
		constexpr auto _aiPlayer = 0x68; // ADBDPlayer*
	}

	namespace n_UBTService_StimuliMonitor_Slasher { // : UBTService_StimuliMonitor
		constexpr auto BBInvestigateStimulusLocation = 0x190; // FBlackboardKeySelector
		constexpr auto BBInvestigateStimulusActor = 0x1c0; // FBlackboardKeySelector
		constexpr auto BBInBehaviorInvestigationStep = 0x1f0; // FBlackboardKeySelector
		constexpr auto BBIsBlind = 0x220; // FBlackboardKeySelector
		constexpr auto BBChasedActor = 0x250; // FBlackboardKeySelector
		constexpr auto UseNextStimulusInvestigationAfterChaseDelay = 0x280; // FAITunableParameter
		constexpr auto IgnorePreviousChasedStimulusActorDelay = 0x290; // float
		constexpr auto DefaultStimulusToInvestigateMaxAge = 0x294; // float
		constexpr auto KOStimulusToInvestigateMaxAge = 0x298; // float
		constexpr auto NextStimulusInvestigationMinRange = 0x29c; // float
		constexpr auto CantSeeOverBlindRatio = 0x2a0; // float
		constexpr auto FavorizeStandingTargetInRange = 0x2a4; // float
		constexpr auto FavorizeStandingTargetOutRange = 0x2a8; // float
	}

	namespace n_UReversibleActionSystemComponent { // : UActorComponent
		constexpr auto _pendingInstantActionHandlers = 0xb8; // TMap<FActionPredictionKey, FPendingInstantActionList>
		constexpr auto _predictedInstantActionHandlers = 0x108; // TMap<FActionPredictionKey, FInstantActionList>
	}

	namespace n_UBlightedSerumDashInteraction { // : UInteractionDefinition
		constexpr auto _cooldownInteraction = 0x5b0; // UBlightedSerumCooldownInteraction*
		constexpr auto _collisionInteraction = 0x5b8; // UBlightedSerumCollisionInteraction*
		constexpr auto _dashSpeedCurve = 0x5c0; // UCurveFloat*
		constexpr auto _lookAngleToTurnRateCurveController = 0x5c8; // UCurveFloat*
		constexpr auto _lookAngleToTurnRateCurveMouse = 0x5d0; // UCurveFloat*
		constexpr auto _dashDuration = 0x5d8; // float
		constexpr auto _vectorInterpToSpeed = 0x5dc; // float
		constexpr auto _wallDashAccelerationMultiplier = 0x5e0; // float
		constexpr auto _cameraPitchRecenterTime = 0x5e4; // float
		constexpr auto _lookAngleTurnRateModifier = 0x5e8; // float
		constexpr auto _wallDashCollisionRadius = 0x5ec; // float
		constexpr auto _wallDashCollisionHeight = 0x5f0; // float
		constexpr auto _wallDashCollisionRange = 0x5f4; // float
	}

	namespace n_UChainPlayerMovementStatusEffect { // : UStatusEffect
		constexpr auto _baseMovementSpeedMultiplier = 0x350; // FDBDTunableRowHandle
		constexpr auto _collisionMovementSpeedMultiplier = 0x378; // FDBDTunableRowHandle
		constexpr auto _chain = 0x3a0; // ARifleChain*
	}

	namespace n_ACharacter { // : APawn
		constexpr auto Mesh = 0x290; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x298; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x2a0; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x2a8; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x2d8; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x308; // float
		constexpr auto BaseTranslationOffset = 0x30c; // FVector
		constexpr auto BaseRotationOffset = 0x320; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x330; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x334; // float
		constexpr auto ReplicatedMovementMode = 0x338; // char
		constexpr auto bInBaseReplication = 0x339; // bool
		constexpr auto CrouchedEyeHeight = 0x33c; // float
		constexpr auto bIsCrouched = 0x340; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x340; // char : 1
		constexpr auto bPressedJump = 0x340; // char : 1
		constexpr auto bClientUpdating = 0x340; // char : 1
		constexpr auto bClientWasFalling = 0x340; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x340; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x340; // char : 1
		constexpr auto bSimGravityDisabled = 0x340; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x341; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x341; // char : 1
		constexpr auto bWasJumping = 0x341; // char : 1
		constexpr auto JumpKeyHoldTime = 0x344; // float
		constexpr auto JumpForceTimeRemaining = 0x348; // float
		constexpr auto ProxyJumpForceStartedTime = 0x34c; // float
		constexpr auto JumpMaxHoldTime = 0x350; // float
		constexpr auto JumpMaxCount = 0x354; // int32_t
		constexpr auto JumpCurrentCount = 0x358; // int32_t
		constexpr auto OnReachedJumpApex = 0x360; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x380; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x390; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x3a0; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x3e0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x420; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x430; // FRepRootMotionMontage
		constexpr auto UseMovementPrediction = 0x4c8; // bool
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x40; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x50; // FString
		constexpr auto LastErrorSolution = 0x60; // FString
	}

	namespace n_UHarpoonLauncher { // : UKillerProjectileLauncher
		constexpr auto _launchSpeed = 0x180; // FDBDTunableRowHandle
		constexpr auto _launchDistanceFromCamera = 0x1a8; // FDBDTunableRowHandle
		constexpr auto _launchZOffset = 0x1d0; // float
	}

	namespace n_UNoWayOut { // : UPerk
		constexpr auto _exitGatePanelBlockBaseDuration = 0x3d0; // float [0x3]
		constexpr auto _exitGatePanelBlockDurationPerToken = 0x3dc; // float [0x3]
		constexpr auto _hookedSurvivors = 0x3e8; // TArray<ACamperPlayer*>
	}

	namespace n_UDefaultLevelSequenceInstanceData { // : UObject
		constexpr auto TransformOriginActor = 0x38; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_AFieldSystemActor { // : AActor
		constexpr auto FieldSystemComponent = 0x230; // UFieldSystemComponent*
	}

	namespace n_UNavCollisionBase { // : UObject
		constexpr auto bIsDynamicObstacle = 0x30; // char : 1
	}

	namespace n_UScrollBar { // : UWidget
		constexpr auto WidgetStyle = 0x128; // FScrollBarStyle
		constexpr auto Style = 0x640; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x648; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x649; // bool
		constexpr auto Orientation = 0x64a; // EOrientation
		constexpr auto Thickness = 0x64c; // FVector2D
		constexpr auto Padding = 0x654; // FMargin
	}

	namespace n_UK26FireCrowProjectileInteractionDefinition { // : UInteractionDefinition
		constexpr auto OnProjectileFired = 0x5b0; // FMulticastInlineDelegate
		constexpr auto _cooldownInteraction = 0x5c0; // UK26CooldownInteractionDefinition*
		constexpr auto _ammoHandler = 0x5c8; // UK26AmmoHandlerComponent*
		constexpr auto _pathHandler = 0x5d0; // UK26PathHandlerComponent*
	}

	namespace n_ABP_Sky_Sphere_C { // : AActor
		constexpr auto SkySphereMesh = 0x230; // UStaticMeshComponent*
		constexpr auto Base = 0x238; // USceneComponent*
		constexpr auto Sky material = 0x240; // UMaterialInstanceDynamic*
		constexpr auto Refresh material = 0x248; // bool
		constexpr auto Directional light actor = 0x250; // ADirectionalLight*
		constexpr auto Colors determined by sun position = 0x258; // bool
		constexpr auto Sun height = 0x25c; // float
		constexpr auto Sun brightness = 0x260; // float
		constexpr auto Horizon falloff = 0x264; // float
		constexpr auto Zenith color = 0x268; // FLinearColor
		constexpr auto Horizon color = 0x278; // FLinearColor
		constexpr auto Cloud color = 0x288; // FLinearColor
		constexpr auto Overall Color = 0x298; // FLinearColor
		constexpr auto Cloud speed = 0x2a8; // float
		constexpr auto Cloud opacity = 0x2ac; // float
		constexpr auto Stars brightness = 0x2b0; // float
		constexpr auto Horizon color curve = 0x2b8; // UCurveLinearColor*
		constexpr auto Zenith color curve = 0x2c0; // UCurveLinearColor*
		constexpr auto Cloud color curve = 0x2c8; // UCurveLinearColor*
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers { // : UMaterialExpression
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ExpressionGUID = 0x54; // FGuid
		constexpr auto Input = 0x64; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x88; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xd8; // int32_t
		constexpr auto BlendCallers = 0xe0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xf0; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xf4; // bool
	}

	namespace n_UDeathbound { // : UPerk
		constexpr auto _distanceFromRescuedSurvivorForOblivious = 0x3d0; // float [0x3]
		constexpr auto _activationDuration = 0x3dc; // float
		constexpr auto _rescueDistanceFromKillerToActivate = 0x3e0; // float
		constexpr auto _revealLocationDuration = 0x3e8; // float
		constexpr auto _unhook = 0x3ec; // bool
		constexpr auto _fromDyingState = 0x3ed; // bool
		constexpr auto _obliviousStatusEffects = 0x3f0; // TArray<UStatusEffect*>
		constexpr auto _survivorsToReveal = 0x410; // TArray<ADBDPlayer*>
	}

	namespace n_ABP_Menu_CamperFemale15_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
		constexpr auto S28Book = 0x678; // USkeletalMeshComponent*
		constexpr auto AB_S28_Book = 0x680; // UAB_S28_Book_C*
		constexpr auto AB_Menu_S28 = 0x688; // UAB_Menu_S28_C*
	}

	namespace n_UDBDInputManager { // : UGameInstanceSubsystem
		constexpr auto _controlModeManager = 0x58; // UControlModeManager*
		constexpr auto _switchDockStateManager = 0x60; // USwitchDockStateManager*
		constexpr auto _virtualKeyboardManager = 0x68; // UVirtualKeyboardManager*
		constexpr auto _analogCursorDb = 0x70; // UDataTable*
	}

	namespace n_UAkTVOSInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto AudioSession = 0x98; // FAkAudioSession
		constexpr auto CommunicationSettings = 0xa8; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xd0; // FAkAdvancedInitializationSettings
	}

	namespace n_UUMGAtlantaStoreScreen { // : UMobileBaseUserWidget
		constexpr auto AuricCellsWidget = 0x320; // UScaleBox*
		constexpr auto AuricCellsGridPanel = 0x328; // UUniformGridPanel*
	}

	namespace n_UBloodOrbOverlapRevealToKiller { // : UStatusEffect
		constexpr auto _revealTimer = 0x378; // UTimerObject*
	}

	namespace n_UConjoinedTwinAnimInstance { // : UPlayerAnimInstance
		constexpr auto _owningConjoinedTwin = 0x4e8; // AConjoinedTwin*
		constexpr auto _firstPersonView = 0x4f0; // bool
		constexpr auto _forwardVelocity = 0x4f4; // float
		constexpr auto _lateralVelocity = 0x4f8; // float
		constexpr auto _interactionType = 0x4fc; // EInteractionAnimation
		constexpr auto _isInAir = 0x4fd; // bool
		constexpr auto _isIdle = 0x4fe; // bool
		constexpr auto _idleTime = 0x500; // float
		constexpr auto _isAttacking = 0x504; // bool
		constexpr auto _attackerComponent = 0x508; // UDBDAttackerComponent*
		constexpr auto _twinAttachmentComponent = 0x510; // UTwinAttachmentComponent*
		constexpr auto _twinLockerBlockerComponent = 0x518; // UTwinLockerBlockerComponent*
		constexpr auto _animYaw = 0x520; // float
		constexpr auto _animPitch = 0x524; // float
		constexpr auto _isSpectator = 0x528; // bool
		constexpr auto _animDirection = 0x52c; // float
		constexpr auto _animSpeed = 0x530; // float
		constexpr auto _isAttachedToSister = 0x534; // bool
		constexpr auto _isAttachedToSurvivor = 0x535; // bool
		constexpr auto _isAttachedToFemaleSurvivor = 0x536; // bool
		constexpr auto _isChargingTwinJump = 0x537; // bool
		constexpr auto _isPossessing = 0x538; // bool
		constexpr auto _isWakingUpFromPossess = 0x539; // bool
		constexpr auto _isDormant = 0x53a; // bool
		constexpr auto _isBeingAutoPossessedAfterRelease = 0x53b; // bool
		constexpr auto _isAttachedToLocker = 0x53c; // bool
		constexpr auto _attackState = 0x53d; // EAttackSubstate
	}

	namespace n_UBehaviorTreeComponent { // : UBrainComponent
		constexpr auto NodeInstances = 0x138; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x270; // UBehaviorTree*
	}

	namespace n_UAnimMontage { // : UAnimCompositeBase
		constexpr auto BlendIn = 0xb0; // FAlphaBlend
		constexpr auto BlendInTime = 0xe0; // float
		constexpr auto BlendOut = 0xe8; // FAlphaBlend
		constexpr auto BlendOutTime = 0x118; // float
		constexpr auto BlendOutTriggerTime = 0x11c; // float
		constexpr auto SyncGroup = 0x120; // FName
		constexpr auto SyncSlotIndex = 0x12c; // int32_t
		constexpr auto MarkerData = 0x130; // FMarkerSyncData
		constexpr auto CompositeSections = 0x150; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x160; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x170; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x180; // bool
		constexpr auto bEnableRootMotionRotation = 0x181; // bool
		constexpr auto bEnableAutoBlendOut = 0x182; // bool
		constexpr auto RootMotionRootLock = 0x183; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x188; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x198; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a8; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1d0; // FName
	}

	namespace n_UMaterialParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x38; // UMaterialParameterCollection*
	}

	namespace n_USkeletalMeshComponentBudgeted { // : USkeletalMeshComponent
		constexpr auto bAutoRegisterWithBudgetAllocator = 0xb88; // char : 1
		constexpr auto bAutoCalculateSignificance = 0xb88; // char : 1
		constexpr auto bShouldUseActorRenderedFlag = 0xb88; // char : 1
	}

	namespace n_UControlPointMeshComponent { // : UStaticMeshComponent
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x4e8; // float
	}

	namespace n_UWidgetTree { // : UObject
		constexpr auto RootWidget = 0x30; // UWidget*
	}

	namespace n_ULandscapeSplineControlPoint { // : UObject
		constexpr auto Location = 0x30; // FVector
		constexpr auto Rotation = 0x3c; // FRotator
		constexpr auto Width = 0x48; // float
		constexpr auto LayerWidthRatio = 0x4c; // float
		constexpr auto SideFalloff = 0x50; // float
		constexpr auto LeftSideFalloffFactor = 0x54; // float
		constexpr auto RightSideFalloffFactor = 0x58; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x5c; // float
		constexpr auto RightSideLayerFalloffFactor = 0x60; // float
		constexpr auto EndFalloff = 0x64; // float
		constexpr auto ConnectedSegments = 0x68; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x78; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x88; // FBox
		constexpr auto LocalMeshComponent = 0xa8; // UControlPointMeshComponent*
	}

	namespace n_UAISlasherMoveToGrabSurvivorBehaviour { // : UAICharacterBehaviour
		constexpr auto _behaviourData = 0x58; // UAISlasherMoveToGrabSurvivorBehaviourData*
		constexpr auto _slasherPlayer = 0x60; // ASlasherPlayer*
		constexpr auto _slasherAIPlayerController = 0x68; // ADBDAIPlayerController*
	}

	namespace n_ATutorialGameState { // : ADBDGameState
		constexpr auto OnCurrentTutorialStepChanged = 0x810; // FMulticastInlineDelegate
		constexpr auto _forceHatchVisible = 0x858; // bool
	}

	namespace n_UIsTimerDoneCondition { // : UEventDrivenModifierCondition
		constexpr auto _timer = 0xe8; // UTimerObject*
	}

	namespace n_UAB_Menu_Slasher09_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UBP_Audio_KLR_20_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto TransmittanceColor = 0x48; // FExpressionInput
	}

	namespace n_UK24_KillerAudioMenuReaction_C { // : UKillerAudioMenuReactionComponent
		constexpr auto UberGraphFrame = 0xc8; // FPointerToUberGraphFrame
		constexpr auto starsCharacter = 0xd0; // TArray<FString>
	}

	namespace n_UMovieSceneWidgetMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto BrushPropertyNamePath = 0x70; // TArray<FName>
		constexpr auto TrackName = 0x80; // FName
	}

	namespace n_UUMGLoadoutPageScrollWidget { // : UUMGPageScrollWidget
		constexpr auto ShouldResizeWidget = 0x430; // bool
		constexpr auto _itemWidgetClass = 0x438; // TSoftClassPtr<UObject>
		constexpr auto _gridFormat = 0x468; // EInventoryGridFormat
		constexpr auto _inventoryData = 0x470; // TArray<FInventorySlotData>
		constexpr auto _inventorySelectedItemIndexes = 0x480; // TArray<int32_t>
		constexpr auto _subtitle = 0x490; // FString
	}

	namespace n_UBTService_Flee { // : UBTService
		constexpr auto BBFleePath = 0x80; // FBlackboardKeySelector
		constexpr auto BBShouldFallPallet = 0xb0; // FBlackboardKeySelector
		constexpr auto PathStrategySelectorClass = 0xe0; // UPathStrategySelector*
		constexpr auto OnEndObjectInFocusCooldown = 0xe8; // float
		constexpr auto ShouldFallPalletUnderHostileRange = 0xec; // FAITunableParameter
		constexpr auto ClearFleePathBBKeyDelay = 0xfc; // float
		constexpr auto _activePath = 0x110; // UNavMovePath*
		constexpr auto _lostFocusedObjects = 0x118; // TArray<UObject*>
		constexpr auto _strategySelector = 0x128; // UPathStrategySelector*
	}

	namespace n_UMovieSceneLevelVisibilitySection { // : UMovieSceneSection
		constexpr auto Visibility = 0xe8; // ELevelVisibility
		constexpr auto LevelNames = 0xf0; // TArray<FName>
	}

	namespace n_UStalkedComponent { // : UActorComponent
		constexpr auto OnBeingStalkedChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _maxStalkPoints = 0xc8; // float
		constexpr auto _stalkableWhileSightingStalker = 0xcc; // bool
		constexpr auto _isBeingStalked = 0xcd; // bool
		constexpr auto _stalkPointsChargeable = 0xd0; // UChargeableComponent*
	}

	namespace n_UAISkill_FindInteractable_SolveSickness { // : UAISkill_FindInteractable
		constexpr auto UrgencyGoalWeight = 0x118; // FAITunableParameter
	}

	namespace n_UAIPerceptionStimuliSourceComponent { // : UActorComponent
		constexpr auto bAutoRegisterAsSource = 0xb8; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xc0; // TArray<UAISense*>
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScaleOverLife = 0x38; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UAkAuxBus { // : UAkAssetBase
		constexpr auto RequiredBank = 0x60; // UAkAudioBank*
	}

	namespace n_UAkMusicSyncCallbackInfo { // : UAkCallbackInfo
		constexpr auto PlayingID = 0x38; // int32_t
		constexpr auto SegmentInfo = 0x3c; // FAkSegmentInfo
		constexpr auto MusicSyncType = 0x60; // EAkCallbackType
		constexpr auto UserCueName = 0x68; // FString
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x30; // FString
	}

	namespace n_APresenterGroup { // : AActor
		constexpr auto ContextObserver = 0x230; // UContextObserver*
		constexpr auto FocusHandler = 0x238; // UFocusHandler*
		constexpr auto PawnObserver = 0x240; // UPawnObserver*
		constexpr auto RootContainer = 0x248; // URootContainer*
	}

	namespace n_UUMGBaseButtonWidget { // : UMobileBaseUserWidget
		constexpr auto OnBaseButtonClickedEvent = 0x300; // FMulticastInlineDelegate
		constexpr auto OnBaseButtonPressedEvent = 0x310; // FMulticastInlineDelegate
		constexpr auto OnBaseButtonReleasedEvent = 0x320; // FMulticastInlineDelegate
		constexpr auto OnBaseButtonLongPressEvent = 0x330; // FMulticastInlineDelegate
		constexpr auto Button = 0x340; // UButton*
		constexpr auto IconPicture = 0x348; // UImage*
		constexpr auto ButtonLabel = 0x350; // UTextBlock*
		constexpr auto ButtonPictureBrush = 0x358; // FSlateBrush
		constexpr auto ButtonText = 0x3e8; // FText
		constexpr auto OnPressSound = 0x400; // UAkAudioEvent*
		constexpr auto OnClickSound = 0x408; // UAkAudioEvent*
		constexpr auto OnLongPressSound = 0x410; // UAkAudioEvent*
		constexpr auto OnReleaseSound = 0x418; // UAkAudioEvent*
		constexpr auto OnHoveredSound = 0x420; // UAkAudioEvent*
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
	}

	namespace n_UAcceptOutputProperties { // : UInteractiveToolPropertySet
		constexpr auto bExportSeparatedPiecesAsNewMeshAssets = 0x58; // bool
	}

	namespace n_UUMGSplashScreen { // : UMobileBaseUserWidget
		constexpr auto OnSaveGamePopupCompleteEvent = 0x300; // FMulticastInlineDelegate
		constexpr auto OnScreenTouched = 0x310; // FMulticastInlineDelegate
		constexpr auto SavePopup = 0x320; // UCanvasPanel*
		constexpr auto GameVersion = 0x328; // UTextBlock*
		constexpr auto LoadingState = 0x330; // UTextBlock*
		constexpr auto PressKey = 0x338; // UTextBlock*
		constexpr auto TapButton = 0x340; // UButton*
		constexpr auto SaveGameTitle = 0x348; // UTextBlock*
		constexpr auto SaveGameDescription = 0x350; // UTextBlock*
		constexpr auto DownloadProgression = 0x358; // UUMGDownloadProgressionWidget*
		constexpr auto CharacterSlideShow = 0x360; // UUMGCharacterSlideShowWidget*
	}

	namespace n_UMovieSceneMediaTrack { // : UMovieSceneNameableTrack
		constexpr auto MediaSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UUMGMenuMarketingBanner { // : UUMGMenuBaseBanner
		constexpr auto subtitle = 0x470; // UTextBlock*
	}

	namespace n_UUMGMonthlyPassCurrencyWidget { // : UUMGMonthlyPassRewardItemWidget
		constexpr auto CurrencyBackground = 0x358; // UImage*
	}

	namespace n_UEnvQueryOption { // : UObject
		constexpr auto Generator = 0x30; // UEnvQueryGenerator*
		constexpr auto Tests = 0x38; // TArray<UEnvQueryTest*>
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x30; // TArray<UObject*>
	}

	namespace n_UTestObjectStateProviderComponent { // : UActorComponent
		constexpr auto GameplayTagContainerComponent = 0xc0; // UGameplayTagContainerComponent*
	}

	namespace n_UCounterforce { // : UPerk
		constexpr auto _totemAuraVisibleDuration = 0x3d4; // float [0x3]
		constexpr auto _startingTotemCleanseSpeedBonus = 0x3e0; // float [0x3]
		constexpr auto _stackableTotemCleanseSpeedBonus = 0x3ec; // float [0x3]
	}

	namespace n_ABP_Menu_Slasher03_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_03 = 0x698; // UBP_Audio_KLR_03_C*
		constexpr auto ChainSaw01_REF = 0x6a0; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto defaultValue = 0x48; // char : 1
		constexpr auto A = 0x4c; // FExpressionInput
		constexpr auto B = 0x68; // FExpressionInput
		constexpr auto value = 0x84; // FExpressionInput
	}

	namespace n_UDynamicEntryBoxBase { // : UWidget
		constexpr auto EntryBoxType = 0x128; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x12c; // FVector2D
		constexpr auto SpacingPattern = 0x138; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x148; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x150; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x151; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x154; // int32_t
		constexpr auto EntryWidgetPool = 0x168; // FUserWidgetPool
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0x78; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x88; // char : 1
	}

	namespace n_UTextureLODSettings { // : UObject
		constexpr auto TextureLODGroups = 0x30; // TArray<FTextureLODGroup>
	}

	namespace n_UUMGStatusEffectIcon { // : UUMGLoadoutItemButton
		constexpr auto statusEffectData = 0x610; // FStatusEffectSlotData
	}

	namespace n_UTormentTrailSpawnerComponent { // : UActorComponent
		constexpr auto _currentTrailController = 0xb8; // ATormentTrailController*
		constexpr auto _restrictionRangeToHooks = 0xc0; // FDBDTunableRowHandle
		constexpr auto _restrictionRangeToGenerators = 0xe8; // FDBDTunableRowHandle
		constexpr auto _restrictionRangeToExitSwitch = 0x110; // FDBDTunableRowHandle
		constexpr auto _maxSlopeAngleForTrail = 0x138; // FDBDTunableRowHandle
		constexpr auto _minSlopeAngleForTrail = 0x160; // FDBDTunableRowHandle
		constexpr auto _restrictionRangeToHatch = 0x188; // FDBDTunableRowHandle
		constexpr auto _restrictionMaxVerticalDistance = 0x1b0; // FDBDTunableRowHandle
		constexpr auto _tormentTrailPointCollectionComponent = 0x1d8; // UTormentTrailPointCollectionComponent*
		constexpr auto _restrictedTormentTrailPointCollectionComponent = 0x1e0; // UTormentTrailPointCollectionComponent*
		constexpr auto _tormentTrailControllerPool = 0x1e8; // UAuthoritativeActorPoolComponent*
		constexpr auto _tormentRestrictedTrailControllerPool = 0x1f0; // UAuthoritativeActorPoolComponent*
		constexpr auto _actorsInRange = 0x210; // TArray<AActor*>
		constexpr auto _slopeDetectionOverGroundVector = 0x220; // FVector
		constexpr auto _slopeDetectionEndVector = 0x22c; // FVector
		constexpr auto _forwardMultiplierSlopeDetection = 0x238; // float
		constexpr auto _epsilonToAddToSpawnLocationInZ = 0x23c; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x30; // FGameplayTagContainer
	}

	namespace n_UGizmoUniformScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x60; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x70; // float
		constexpr auto Parameter = 0x74; // FVector2D
		constexpr auto LastChange = 0x7c; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x8c; // FVector
		constexpr auto CurScaleNormal = 0x98; // FVector
		constexpr auto CurScaleAxisX = 0xa4; // FVector
		constexpr auto CurScaleAxisY = 0xb0; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UBearTrapOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto UnrevealedColor = 0xc0; // FLinearColor
		constexpr auto RevealedColorToSurvivor = 0xd0; // FLinearColor
		constexpr auto KillerOutlineFadeCurve = 0xe0; // UCurveLinearColor*
		constexpr auto _owningBearTrapMapActorComponent = 0xf0; // UMapActorComponent*
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_URemoveOccludedTrianglesToolProperties { // : UInteractiveToolPropertySet
		constexpr auto OcclusionTestMethod = 0x58; // EOcclusionCalculationUIMode
		constexpr auto TriangleSampling = 0x59; // EOcclusionTriangleSamplingUIMode
		constexpr auto WindingIsoValue = 0x60; // double
		constexpr auto AddRandomRays = 0x68; // int32_t
		constexpr auto AddTriangleSamples = 0x6c; // int32_t
		constexpr auto bOnlySelfOcclude = 0x70; // bool
	}

	namespace n_UQuestEventEvaluatorBase { // : UObject
		constexpr auto _dbdPlayer = 0x50; // ADBDPlayer*
		constexpr auto _evaluatorConditionsClass = 0x70; // TArray<UEvaluatorCondition*>
		constexpr auto _evaluatorConditions = 0x80; // TArray<UEvaluatorCondition*>
	}

	namespace n_UGarbageCollectionSettings { // : UDeveloperSettings
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x48; // float
		constexpr auto FlushStreamingOnGC = 0x4c; // char : 1
		constexpr auto AllowParallelGC = 0x4c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x4c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x4c; // char : 1
		constexpr auto CreateGCClusters = 0x4c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x4c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x4c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x4c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x4d; // char : 1
		constexpr auto MinGCClusterSize = 0x50; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x54; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x58; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x5c; // int32_t
		constexpr auto MaxObjectsInGame = 0x60; // int32_t
		constexpr auto MaxObjectsInEditor = 0x64; // int32_t
	}

	namespace n_ULightComponent { // : ULightComponentBase
		constexpr auto Temperature = 0x260; // float
		constexpr auto MaxDrawDistance = 0x264; // float
		constexpr auto MaxDistanceFadeRange = 0x268; // float
		constexpr auto bUseTemperature = 0x26c; // char : 1
		constexpr auto ShadowMapChannel = 0x270; // int32_t
		constexpr auto MinRoughness = 0x278; // float
		constexpr auto SpecularScale = 0x27c; // float
		constexpr auto ShadowResolutionScale = 0x280; // float
		constexpr auto ShadowBias = 0x284; // float
		constexpr auto ShadowSlopeBias = 0x288; // float
		constexpr auto ShadowSharpen = 0x28c; // float
		constexpr auto ContactShadowLength = 0x290; // float
		constexpr auto ContactShadowLengthInWS = 0x294; // char : 1
		constexpr auto InverseSquaredFalloff = 0x294; // char : 1
		constexpr auto CastTranslucentShadows = 0x294; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x294; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x294; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x294; // char : 1
		constexpr auto LightingChannels = 0x298; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x2a0; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x2a8; // FVector
		constexpr auto IESTexture = 0x2b8; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x2c0; // char : 1
		constexpr auto IESBrightnessScale = 0x2c4; // float
		constexpr auto LightFunctionFadeDistance = 0x2c8; // float
		constexpr auto DisabledBrightness = 0x2cc; // float
		constexpr auto bEnableLightShaftBloom = 0x2d0; // char : 1
		constexpr auto BloomScale = 0x2d4; // float
		constexpr auto BloomThreshold = 0x2d8; // float
		constexpr auto BloomMaxBrightness = 0x2dc; // float
		constexpr auto BloomTint = 0x2e0; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2e4; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2e8; // float
		constexpr auto bVisibleInReflectionCaptures = 0x2ec; // char : 1
	}

	namespace n_UCoreBaseUserWidget { // : UUserWidget
		constexpr auto ScaleContainer = 0x270; // UScaleBox*
		constexpr auto IsInteractive = 0x278; // bool
		constexpr auto _controlMode = 0x279; // EControlMode
		constexpr auto ScaleType = 0x27a; // EScaleType
		constexpr auto _inputManager = 0x280; // UDBDInputManager*
		constexpr auto _animationMap = 0x288; // TMap<FName, UWidgetAnimation*>
	}

	namespace n_UNiagaraParameterCollectionInstance { // : UObject
		constexpr auto Collection = 0x30; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x38; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x48; // FNiagaraParameterStore
	}

	namespace n_UHapticFeedbackEffect_Curve { // : UHapticFeedbackEffect_Base
		constexpr auto HapticDetails = 0x30; // FHapticFeedbackDetails_Curve
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x128; // FParticleRandomSeedInfo
	}

	namespace n_UInAppPurchaseQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeMeshCollisionComponent { // : ULandscapeHeightfieldCollisionComponent
		constexpr auto MeshGuid = 0x508; // FGuid
	}

	namespace n_UMovieSceneParticleParameterTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UMonoWaveTableSynthPreset { // : UObject
		constexpr auto PresetName = 0x30; // FString
		constexpr auto bLockKeyframesToGridBool = 0x40; // char : 1
		constexpr auto LockKeyframesToGrid = 0x44; // int32_t
		constexpr auto WaveTableResolution = 0x48; // int32_t
		constexpr auto WaveTable = 0x50; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x60; // char : 1
	}

	namespace n_APhantomTrap { // : AInteractable
		constexpr auto _terrorRadiusEmitter = 0x328; // UTerrorRadiusEmitterComponent*
		constexpr auto _lineOfSightTraceMinInterval = 0x330; // float
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0x78; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x88; // char : 1
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0x78; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x90; // float
	}

	namespace n_UCustomWidgetWrapperInitializer { // : UUserWidget
		constexpr auto ListeningWrapper = 0x260; // UCustomWidgetWrapper*
	}

	namespace n_UAITask_MoveTo { // : UAITask
		constexpr auto OnRequestFailed = 0x78; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x88; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x98; // FAIMoveRequest
	}

	namespace n_UAISkill_Diversion { // : UAISkill
		constexpr auto perkId = 0xc0; // FName
		constexpr auto DiversionFromGoalClasses = 0xd0; // TArray<AActor*>
		constexpr auto ThrowOnInteractablesAtDifficultyLevel = 0xe0; // EAIDifficultyLevel
		constexpr auto MaxThrowOnInteractableHalfAngle = 0xe4; // float
		constexpr auto MaxMoveToTargetDistance = 0xe8; // float
		constexpr auto NavMeshFindLocationExtents = 0xec; // FVector
		constexpr auto PlanInterval = 0xf8; // float
	}

	namespace n_UAkAudioBank { // : UAkAssetBase
		constexpr auto AutoLoad = 0x60; // bool
		constexpr auto LocalizedPlatformAssetDataMap = 0x68; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto CurrentLocalizedPlatformAssetData = 0xb8; // UAkAssetPlatformData*
	}

	namespace n_UAtlantaSaveGame { // : USaveGame
		constexpr auto SaveSlotName = 0x30; // FString
		constexpr auto UserIndex = 0x40; // uint32_t
		constexpr auto LastGenericLoadingImageId = 0x44; // FName
		constexpr auto LastSpecificLoadingImageId = 0x50; // FName
		constexpr auto IsLastSpecificImage = 0x5c; // bool
	}

	namespace n_UOnboardingTutorialSubPresenter { // : USubPresenter
		constexpr auto _onboardingTutorialWidget = 0xb8; // TScriptInterface<IOnboardingTutorialViewInterface>
	}

	namespace n_UAISkill_StrafeDodge { // : UAISkill_Strafe
		constexpr auto StartRoll = 0x130; // FAIRoll
	}

	namespace n_UBTService_Patrol { // : UBTService
		constexpr auto BBFilterKey = 0x78; // FBlackboardKeySelector
		constexpr auto FilterOperation = 0xa8; // EBasicKeyOperation
		constexpr auto NavMeshFindLocationExtents = 0xac; // FVector
		constexpr auto MinPatrolInvestigationDistance = 0xb8; // float
		constexpr auto PatrolPointsValidityCheckInterval = 0xbc; // float
		constexpr auto BBPatrolPointOwner = 0xc0; // FBlackboardKeySelector
		constexpr auto BBPatrolLocation = 0xf0; // FBlackboardKeySelector
		constexpr auto BBGoToNextPatrolLocation = 0x120; // FBlackboardKeySelector
	}

	namespace n_UAISkill_FindInteractable_StatusEffect { // : UAISkill_FindInteractable
		constexpr auto RequiredPerkFlag = 0x118; // FGameplayTag
		constexpr auto InvertCondition = 0x124; // bool
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto InputMode = 0x48; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x4c; // FExpressionInput
		constexpr auto Coordinates = 0x68; // FExpressionInput
		constexpr auto ConstInput = 0x84; // FVector2D
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x68; // FParticleRandomSeedInfo
	}

	namespace n_UDatasmithStaticMeshComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto StaticMesh = 0x38; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x40; // TArray<UMaterialInterface*>
	}

	namespace n_UPathBuilder { // : UObject
		constexpr auto PathReachedPointRadius = 0x38; // float
		constexpr auto ToleratedTerrorPressure = 0x3c; // EAITerrorLevel
		constexpr auto OverridePreviousPathStrategy = 0x3d; // bool
		constexpr auto _path = 0x40; // UNavMovePath*
		constexpr auto _aiOwner = 0x48; // ADBDAIBTController*
	}

	namespace n_UMovieSceneCameraShakeTrack { // : UMovieSceneNameableTrack
		constexpr auto CameraShakeSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_APhysicsBasedProjectile { // : ABaseProjectile
		constexpr auto Movement = 0x2b0; // UPhysicsBasedProjectileMovementComponent*
	}

	namespace n_UK25ProjectileLauncher { // : UBaseProjectileLauncher
		constexpr auto _controlledProjectileInitialSpeed = 0x180; // FDBDTunableRowHandle
		constexpr auto _isControlledProjectileRequested = 0x1a8; // bool
		constexpr auto _controlledProjectile = 0x1b0; // AK25ControlledProjectile*
	}

	namespace n_UK26DismissCrowChargeableInteractionDefinition { // : UChargeableInteractionDefinition
		constexpr auto _chargeTime = 0x6d8; // FTunableStat
		constexpr auto _k26PowerStatusHandlerComponent = 0x758; // UK26PowerStatusHandlerComponent*
		constexpr auto _isLevelReadyToPlay = 0x760; // bool
	}

	namespace n_UCoupDeGrace { // : UPerk
		constexpr auto _lungeAttackAddDurationMultiplier = 0x3d0; // float [0x3]
		constexpr auto _completedGenerators = 0x3e0; // TArray<AGenerator*>
	}

	namespace n_UHideInSnowmanInteraction { // : UInteractionDefinition
		constexpr auto _shouldRunOutOfSnowman = 0x5b0; // bool
		constexpr auto _isSnowmanShieldDamaged = 0x5b1; // bool
		constexpr auto _timeToEnterSnowman = 0x5b8; // FDBDTunableRowHandle
		constexpr auto _minimumTimeToRunAndExit = 0x5e0; // FDBDTunableRowHandle
		constexpr auto _cameraZoomBack = 0x608; // FDBDTunableRowHandle
		constexpr auto _timeToZoomEnter = 0x630; // FDBDTunableRowHandle
		constexpr auto _timeToZoomExit = 0x658; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0x48; // int32_t
		constexpr auto UTiling = 0x4c; // float
		constexpr auto VTiling = 0x50; // float
		constexpr auto UnMirrorU = 0x54; // char : 1
		constexpr auto UnMirrorV = 0x54; // char : 1
	}

	namespace n_ADebugIndicator { // : AActor
		constexpr auto _staticMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto _outlineComponent = 0x238; // UDBDOutlineComponent*
	}

	namespace n_UExpandableArea { // : UWidget
		constexpr auto Style = 0x130; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x260; // FSlateBrush
		constexpr auto BorderColor = 0x2f0; // FSlateColor
		constexpr auto bIsExpanded = 0x318; // bool
		constexpr auto MaxHeight = 0x31c; // float
		constexpr auto HeaderPadding = 0x320; // FMargin
		constexpr auto AreaPadding = 0x330; // FMargin
		constexpr auto OnExpansionChanged = 0x340; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x350; // UWidget*
		constexpr auto BodyContent = 0x358; // UWidget*
	}

	namespace n_UCollisionProfile { // : UDeveloperSettings
		constexpr auto Profiles = 0x48; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x58; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x68; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x78; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x88; // TArray<FRedirector>
	}

	namespace n_ADeathBedInteractable { // : AInteractable
		constexpr auto _root = 0x338; // USceneComponent*
		constexpr auto _inDeathBedCamper = 0x340; // ACamperPlayer*
		constexpr auto _rescueChargeableComponent = 0x348; // UChargeableComponent*
		constexpr auto _deathBedSkeletalMesh = 0x350; // USkeletalMeshComponent*
		constexpr auto _interactionZone = 0x358; // UBoxComponent*
		constexpr auto _playerOverlapZone = 0x360; // UBoxComponent*
		constexpr auto _montagePlayer = 0x368; // UMontagePlayer*
		constexpr auto _deathBedCollision = 0x380; // UBoxComponent*
		constexpr auto _animationMontageSlave = 0x3b0; // UAnimationMontageSlave*
		constexpr auto _montageToPlay = 0x3b8; // UAnimMontage*
		constexpr auto _rescuerSnapPosition = 0x3c4; // FVector
		constexpr auto _deathBedAnticampComponent = 0x3d0; // UDeathBedAntiCampComponent*
		constexpr auto _anticampDrainCooldownTime = 0x418; // FDBDTunableRowHandle
		constexpr auto _perceptionStimuliComponent = 0x458; // UAIPerceptionStimuliSourceComponent*
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto InterpTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x48; // FName
		constexpr auto GroupColor = 0x54; // FColor
		constexpr auto bCollapsed = 0x58; // char : 1
		constexpr auto bVisible = 0x58; // char : 1
		constexpr auto bIsFolder = 0x58; // char : 1
		constexpr auto bIsParented = 0x58; // char : 1
		constexpr auto bIsSelected = 0x58; // char : 1
	}

	namespace n_UScrollBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_URetainerBox { // : UContentWidget
		constexpr auto RenderOnInvalidation = 0x140; // bool
		constexpr auto RenderOnPhase = 0x141; // bool
		constexpr auto Phase = 0x144; // int32_t
		constexpr auto PhaseCount = 0x148; // int32_t
		constexpr auto EffectMaterial = 0x150; // UMaterialInterface*
		constexpr auto TextureParameter = 0x158; // FName
	}

	namespace n_UDBDPlayerPositionOffsetComponent { // : UActorComponent
		constexpr auto _menuZHeadOffset = 0xb8; // FPerPlatformFloat
	}

	namespace n_UEnvQueryTest { // : UEnvQueryNode
		constexpr auto TestOrder = 0x38; // int32_t
		constexpr auto TestPurpose = 0x3c; // EEnvTestPurpose
		constexpr auto TestComment = 0x40; // FString
		constexpr auto MultipleContextFilterOp = 0x50; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x51; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x52; // EEnvTestFilterType
		constexpr auto BoolValue = 0x58; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x98; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xd8; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0x119; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0x11a; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0x11b; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0x11c; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x120; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x160; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1e0; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x220; // bool
		constexpr auto bWorkOnFloatValues = 0x230; // char : 1
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto ShadowCascadeBiasDistribution = 0x390; // float
		constexpr auto bEnableLightShaftOcclusion = 0x394; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x398; // float
		constexpr auto OcclusionDepthRange = 0x39c; // float
		constexpr auto LightShaftOverrideDirection = 0x3a0; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x3ac; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x3b0; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x3b4; // float
		constexpr auto DynamicShadowCascades = 0x3b8; // int32_t
		constexpr auto CascadeDistributionExponent = 0x3bc; // float
		constexpr auto CascadeTransitionFraction = 0x3c0; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x3c4; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x3c8; // char : 1
		constexpr auto FarShadowCascadeCount = 0x3cc; // int32_t
		constexpr auto FarShadowDistance = 0x3d0; // float
		constexpr auto DistanceFieldShadowDistance = 0x3d4; // float
		constexpr auto LightSourceAngle = 0x3d8; // float
		constexpr auto LightSourceSoftAngle = 0x3dc; // float
		constexpr auto TraceDistance = 0x3e0; // float
		constexpr auto LightmassSettings = 0x3e4; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3f4; // char : 1
		constexpr auto bCachedDirectionalMovableLight = 0x3f4; // char : 1
		constexpr auto OriginOfCachedShadowMap = 0x3f8; // FVector
		constexpr auto WidthOfCachedShadowMap = 0x404; // float
		constexpr auto FractionOfOriginHeightToShiftBounds = 0x408; // float
		constexpr auto ModulatedShadowColor = 0x40c; // FColor
		constexpr auto ShadowAmount = 0x410; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x414; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x418; // int32_t
	}

	namespace n_ULightPropagationVolumeBlendable { // : UObject
		constexpr auto Settings = 0x38; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x78; // float
	}

	namespace n_UCoreTutorialObjectiveItem { // : UCoreBaseUserWidget
		constexpr auto TutorialObjectiveCompletedDelegate = 0x2d8; // FMulticastInlineDelegate
	}

	namespace n_UAISkill_InteractionTeleport { // : UAISkill_Interaction
		constexpr auto BlockTeleportWhenPathGoalUnderRange = 0x170; // float
	}

	namespace n_UBlackboardKeyType_Object { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x38; // UObject*
	}

	namespace n_UPropertyBinding { // : UObject
		constexpr auto SourceObject = 0x30; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x38; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x60; // FName
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0x98; // FName
	}

	namespace n_UBP_Audio_KLR_25_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
		constexpr auto starsCharacter = 0x100; // TArray<FString>
	}

	namespace n_ATransformGizmoActor { // : AGizmoActor
		constexpr auto TranslateX = 0x230; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x238; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x240; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x248; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x250; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x258; // UPrimitiveComponent*
		constexpr auto RotateX = 0x260; // UPrimitiveComponent*
		constexpr auto RotateY = 0x268; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x270; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x278; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x280; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x288; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x290; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x298; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x2a0; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x2a8; // UPrimitiveComponent*
	}

	namespace n_UUMGSettingAboutContextWidget { // : UUMGSettingContextWidget
		constexpr auto EULAButton = 0x318; // UUMGSettingContextButton*
		constexpr auto CreditsButton = 0x320; // UUMGSettingContextButton*
	}

	namespace n_UBreakout { // : UPerk
		constexpr auto _slasher = 0x3d0; // ASlasherPlayer*
		constexpr auto _playerOwner = 0x3d8; // ADBDPlayer*
		constexpr auto _hasteEffect = 0x3e0; // float [0x3]
		constexpr auto _wiggleEffect = 0x3ec; // float
		constexpr auto _survivorDistanceMax = 0x3f0; // float
		constexpr auto _isPerkActive = 0x3f4; // bool
	}

	namespace n_UDeviceProfile { // : UTextureLODSettings
		constexpr auto DeviceType = 0x40; // FString
		constexpr auto BaseProfileName = 0x50; // FString
		constexpr auto Parent = 0x60; // UObject*
		constexpr auto CVars = 0x80; // TArray<FString>
	}

	namespace n_UStorefrontConfiguration { // : UDataAsset
		constexpr auto States = 0x38; // TMap<EStorefrontState, FStorefrontStateData>
	}

	namespace n_USlaveAnimInstance { // : UAnimInstance
		constexpr auto _masterMesh = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
	}

	namespace n_ATormentTrailController { // : ATrailControllerBase
		constexpr auto _trailPointList = 0x288; // FReplicatedTrailPointList
		constexpr auto _mobileTormentTrailRenderer = 0x3a8; // AMobileTormentTrailRenderer*
	}

	namespace n_UPlayerDebugComponent { // : UActorComponent
		constexpr auto _disableStartUpdateMontageDuringEnter = 0xb8; // bool
		constexpr auto _allowPalletPullUpInteraction = 0xb9; // bool
	}

	namespace n_ACrowBomb { // : AGeneratorDrivenActor
		constexpr auto _innerRadius = 0x258; // float
		constexpr auto _outerRadius = 0x25c; // float
		constexpr auto _maxTakeoffDelay = 0x260; // float
		constexpr auto _numCrows = 0x264; // int32_t
		constexpr auto _crowCenterDistance = 0x268; // int32_t
		constexpr auto _crowOuterDistance = 0x26c; // int32_t
		constexpr auto _eliminationSamples = 0x270; // int32_t
		constexpr auto _eliminationStddev = 0x274; // float
		constexpr auto _meshComponentClass = 0x278; // TSoftClassPtr<UObject>
		constexpr auto _crows = 0x2a8; // TArray<UWorldRunawayMeshComponent*>
		constexpr auto _root = 0x2d0; // USceneComponent*
		constexpr auto _traceStart = 0x2d8; // USceneComponent*
		constexpr auto _traceEnd = 0x2e0; // USceneComponent*
		constexpr auto _landed = 0x2e8; // bool
	}

	namespace n_UVaultableComponent { // : UActorComponent
		constexpr auto OnVault = 0xb8; // FMulticastInlineDelegate
		constexpr auto _vaultableScoreEvent = 0xc8; // FGameplayTag
	}

	namespace n_UDBDNavLinkCustomComponent { // : UNavLinkCustomComponent
		constexpr auto BaseLinkRelativeStart = 0x198; // FVector
		constexpr auto BaseLinkRelativeEnd = 0x1a4; // FVector
		constexpr auto BaseLinkDirection = 0x1b0; // ENavLinkDirection
		constexpr auto AutoSnapSmartLinkPointsUpHeight = 0x1b4; // float
		constexpr auto AutoSnapSmartLinkPointsDownHeight = 0x1b8; // float
		constexpr auto AutoSnapCollisionChannel = 0x1bc; // ECollisionChannel
		constexpr auto AutoSmartLinkDirectionMaxHeight = 0x1c0; // float
		constexpr auto DisableSmartLinkOnPathObstruction = 0x1c4; // bool
		constexpr auto PathObstructionTestDistance = 0x1c8; // float
		constexpr auto PathObstructionTestShapeRadius = 0x1cc; // float
		constexpr auto PathObstructionTestHeightOffset = 0x1d0; // float
		constexpr auto PathObstructionCollisionChannel = 0x1d4; // ECollisionChannel
		constexpr auto DisableOtherSmartLinkInProximityOnEnable = 0x1d5; // bool
		constexpr auto EnableOtherSmartLinkInProximityOnDisable = 0x1d6; // bool
		constexpr auto OtherSmartLinkInProximitySearchDistance = 0x1d8; // float
		constexpr auto ShowDebugInfo = 0x1dc; // bool
		constexpr auto _navLinkProxyInProximity = 0x1f8; // TArray<ANavLinkProxy*>
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes { // : UMaterialExpression
		constexpr auto BaseColor = 0x48; // FExpressionInput
		constexpr auto Metallic = 0x64; // FExpressionInput
		constexpr auto Specular = 0x80; // FExpressionInput
		constexpr auto Roughness = 0x9c; // FExpressionInput
		constexpr auto Anisotropy = 0xb8; // FExpressionInput
		constexpr auto EmissiveColor = 0xd4; // FExpressionInput
		constexpr auto Opacity = 0xf0; // FExpressionInput
		constexpr auto OpacityMask = 0x10c; // FExpressionInput
		constexpr auto Normal = 0x128; // FExpressionInput
		constexpr auto Tangent = 0x144; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x160; // FExpressionInput
		constexpr auto WorldDisplacement = 0x17c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x198; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x1b4; // FExpressionInput
		constexpr auto ClearCoat = 0x1d0; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x1ec; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x208; // FExpressionInput
		constexpr auto Refraction = 0x224; // FExpressionInput
		constexpr auto CustomizedUVs = 0x240; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x320; // FExpressionInput
		constexpr auto ShadingModel = 0x33c; // FExpressionInput
	}

	namespace n_UHasStatusEffectEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _statusEffectList = 0x48; // TArray<FName>
	}

	namespace n_UZombiesInterestEventManager { // : UActorComponent
		constexpr auto _zombieInterestEvents = 0xd0; // TArray<FGameplayTag>
	}

	namespace n_UZombiesPatrolAreaManager { // : UActorComponent
		constexpr auto _availablePatrolAreas = 0xb8; // TArray<AMeatHook*>
		constexpr auto _usedPatrolAreas = 0xc8; // TArray<AMeatHook*>
		constexpr auto _maxDistanceBetweenMeatHookAndPlayers = 0xd8; // float
	}

	namespace n_UOvercome { // : UPerk
		constexpr auto _exhaustionDuration = 0x3d0; // float [0x3]
		constexpr auto _damageStateChangedTimeLimit = 0x3e0; // float
		constexpr auto _exhaustedEffect = 0x3e8; // UActivatableExhaustedEffect*
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x230; // ULightComponent*
		constexpr auto bEnabled = 0x238; // char : 1
	}

	namespace n_UBillboardComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x428; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x430; // char : 1
		constexpr auto ScreenSize = 0x434; // float
		constexpr auto U = 0x438; // float
		constexpr auto UL = 0x43c; // float
		constexpr auto V = 0x440; // float
		constexpr auto VL = 0x444; // float
	}

	namespace n_UAIDataProvider_QueryParams { // : UAIDataProvider
		constexpr auto ParamName = 0x30; // FName
		constexpr auto FloatValue = 0x3c; // float
		constexpr auto IntValue = 0x40; // int32_t
		constexpr auto BoolValue = 0x44; // bool
	}

	namespace n_UControlModeManager { // : UObject
		constexpr auto _gameInstance = 0x80; // UGameInstance*
	}

	namespace n_UOnlineSessionClient { // : UOnlineSession
		constexpr auto bIsFromInvite = 0x1c0; // bool
		constexpr auto bHandlingDisconnect = 0x1c1; // bool
	}

	namespace n_UNiagaraDataInterfaceExport { // : UNiagaraDataInterface
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
	}

	namespace n_UChargeableComponent { // : UActorComponent
		constexpr auto OnInteractionEmptiedEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnInteractionCompletionStateChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto SkillCheckResponseAestheticDelegate = 0xd8; // FMulticastInlineDelegate
		constexpr auto SkillCheckResponseAuthorityDelegate = 0xe8; // FMulticastInlineDelegate
		constexpr auto ChargeAppliedAuthorityDelegate = 0xf8; // FMulticastInlineDelegate
		constexpr auto ChargeableCompletionPercentChangeAuthorityDelegate = 0x108; // FMulticastInlineDelegate
		constexpr auto ChargeableCompletionPercentChangeCosmeticDelegate = 0x118; // FMulticastInlineDelegate
		constexpr auto DechargeBeginDelegate = 0x128; // FMulticastInlineDelegate
		constexpr auto DechargeEndDelegate = 0x138; // FMulticastInlineDelegate
		constexpr auto AllowSkillChecksAtFullCharge = 0x148; // bool
		constexpr auto ChargeableComponentID = 0x150; // FString
		constexpr auto DechargeDelay = 0x160; // float
		constexpr auto _currentCharge = 0x168; // FSpeedBasedNetSyncedValue
		constexpr auto _skillCheckFailurePenaltyTimer = 0x1a8; // FDBDTimer
		constexpr auto _dechargeTimer = 0x1d0; // FDBDTimer
		constexpr auto _chargesThisFrame = 0x1f8; // TArray<FChargeData>
		constexpr auto _instigatorsSinceEmpty = 0x208; // TArray<AActor*>
		constexpr auto _tunableValueMap = 0x218; // TMap<FName, float>
		constexpr auto _isCharging = 0x268; // bool
		constexpr auto _playersWhoDidSkillCheck = 0x270; // TArray<int32_t>
		constexpr auto _startingChargePercent = 0x280; // float
		constexpr auto _dechargeRate = 0x284; // float
		constexpr auto _enableAddCharge = 0x288; // bool
		constexpr auto _enableSkillCheckFailurePenalty = 0x289; // bool
		constexpr auto _isDecharging = 0x28a; // bool
		constexpr auto _stopDechargingWhenComplete = 0x28b; // bool
	}

	namespace n_UDBDAttack { // : UActorComponent
		constexpr auto _attackType = 0xd0; // EAttackType
		constexpr auto _useMontage = 0xd1; // bool
		constexpr auto _damageZone = 0xd2; // EDetectionZone
		constexpr auto _lockZone = 0xd3; // EDetectionZone
		constexpr auto _obstructionZone = 0xd4; // EDetectionZone
		constexpr auto _maxAccelerationMultiplier = 0xd8; // FStatProperty
		constexpr auto _targetTracker = 0x160; // FDBDAttackTargetTracker
		constexpr auto _stateClasses = 0x218; // TMap<EAttackSubstate, UDBDAttackSubstate*>
		constexpr auto _localAlreadyHitTargets = 0x268; // TArray<ACharacter*>
		constexpr auto _states = 0x2a0; // TMap<EAttackSubstate, UDBDAttackSubstate*>
		constexpr auto _hitTargets = 0x318; // TArray<ADBDPlayer*>
		constexpr auto _targetsAwaitingServerValidation = 0x328; // TSet<ADBDPlayer*>
		constexpr auto _hitValidationConfigName = 0x37c; // EHitValidatorConfigName
	}

	namespace n_UDBDAttackerComponent { // : UActorComponent
		constexpr auto OnAttackStartDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnAttackFinishDelegate = 0xc8; // FMulticastInlineDelegate
		constexpr auto _autonomousHitPredictionDelay = 0x100; // FDBDTunableRowHandle
		constexpr auto _attacks = 0x128; // TArray<UDBDAttack*>
		constexpr auto _requestedAttack = 0x148; // UDBDAttack*
		constexpr auto _currentAttack = 0x150; // UDBDAttack*
		constexpr auto _attackHitDelegates = 0x1a0; // TArray<FAttackDelegatePair>
	}

	namespace n_URemeshMeshToolProperties { // : URemeshProperties
		constexpr auto TargetTriangleCount = 0x68; // int32_t
		constexpr auto SmoothingType = 0x6c; // ERemeshSmoothingType
		constexpr auto RemeshIterations = 0x70; // int32_t
		constexpr auto bDiscardAttributes = 0x74; // bool
		constexpr auto bShowWireframe = 0x75; // bool
		constexpr auto bShowGroupColors = 0x76; // bool
		constexpr auto bUseTargetEdgeLength = 0x77; // bool
		constexpr auto TargetEdgeLength = 0x78; // float
		constexpr auto bReproject = 0x7c; // bool
	}

	namespace n_UAISkill_InteractionUseItem_LamentConfiguration { // : UAISkill_InteractionUseItem
		constexpr auto _solveLamentMaxCharge = 0x178; // FDBDTunableRowHandle
	}

	namespace n_AAudio_C { // : ALevelScriptActor
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
	}

	namespace n_ALobbyBeaconClient { // : AOnlineBeaconClient
		constexpr auto LobbyState = 0x2c8; // ALobbyBeaconState*
		constexpr auto PlayerState = 0x2d0; // ALobbyBeaconPlayerState*
		constexpr auto LobbyJoinServerState = 0x2d9; // ELobbyBeaconJoinState
	}

	namespace n_UUMGAtlantaMonthlyPassEventTemplate { // : UUMGAtlantaBaseEventsTemplate
		constexpr auto MonthlyPassWidget = 0x300; // UUMGSubscriptionPackButtonWidget*
	}

	namespace n_UAccessKeys { // : UObject
		constexpr auto AccessKeys = 0x30; // TArray<FAccessKey>
	}

	namespace n_UMaterialExpressionGetMaterialAttributes { // : UMaterialExpression
		constexpr auto MaterialAttributes = 0x48; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x68; // TArray<FGuid>
	}

	namespace n_AAIController { // : AController
		constexpr auto bStartAILogicOnPossess = 0x2e8; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x2e8; // char : 1
		constexpr auto bLOSflag = 0x2e8; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x2e8; // char : 1
		constexpr auto bAllowStrafe = 0x2e8; // char : 1
		constexpr auto bWantsPlayerState = 0x2e8; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x2e8; // char : 1
		constexpr auto PathFollowingComponent = 0x2f0; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x2f8; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x300; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x308; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x310; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x318; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x320; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFadeSection { // : UMovieSceneFloatSection
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UPawnAction_Repeat { // : UPawnAction
		constexpr auto ActionToRepeat = 0xa0; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa8; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xb0; // EPawnActionFailHandling
	}

	namespace n_UDarkDevotion { // : UPerk
		constexpr auto _obsessionTerrorRadiusEmitter = 0x3d0; // UTerrorRadiusEmitterComponent*
		constexpr auto _obsessionTerrorRadius = 0x3d8; // float
		constexpr auto _simulatedFixedDistance = 0x3dc; // float
	}

	namespace n_UUMGLandingPageButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto BigTag = 0x430; // UCanvasPanel*
		constexpr auto SmallTag = 0x438; // UCanvasPanel*
		constexpr auto TagText = 0x440; // UTextBlock*
		constexpr auto BannerTitleText = 0x448; // URichTextBlock*
		constexpr auto BannerImage = 0x450; // UImage*
		constexpr auto TitleColorBg = 0x458; // UImage*
		constexpr auto BorderColor = 0x460; // UImage*
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x428; // int32_t
		constexpr auto SectionBaseY = 0x42c; // int32_t
		constexpr auto ComponentSizeQuads = 0x430; // int32_t
		constexpr auto SubsectionSizeQuads = 0x434; // int32_t
		constexpr auto NumSubsections = 0x438; // int32_t
		constexpr auto OverrideMaterial = 0x440; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x448; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x450; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto materialInstances = 0x460; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x470; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x480; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x490; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x4a0; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x4b0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x4c0; // float
		constexpr auto HeightmapScaleBias = 0x4d0; // FVector4
		constexpr auto CachedLocalBox = 0x4e0; // FBox
		constexpr auto CollisionComponent = 0x4fc; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x518; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x520; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x530; // TArray<UTexture2D*>
		constexpr auto MapBuildDataId = 0x540; // FGuid
		constexpr auto IrrelevantLights = 0x550; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x560; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x564; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x568; // float
		constexpr auto PositiveZBoundsExtension = 0x56c; // float
		constexpr auto StaticLightingResolution = 0x570; // float
		constexpr auto ForcedLOD = 0x574; // int32_t
		constexpr auto LODBias = 0x578; // int32_t
		constexpr auto StateId = 0x57c; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x58c; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x5a0; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x5a8; // char
		constexpr auto MobileMaterialInterface = 0x5b0; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x5b8; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x5c8; // TArray<UTexture2D*>
	}

	namespace n_UHookSurvivorDefinition { // : UChargeableInteractionDefinition
		constexpr auto _survivorBeingHooked = 0x6d8; // ACamperPlayer*
	}

	namespace n_UEnvQueryTest_IsValidDestination { // : UEnvQueryTest
		constexpr auto QuerierContext = 0x238; // UEnvQueryContext*
		constexpr auto Invert = 0x240; // FAIDataProviderBoolValue
		constexpr auto ExcludeEscapeZoneIfReverseBearTrapIsActivated = 0x280; // FAIDataProviderBoolValue
	}

	namespace n_UPhysicsHandleComponent { // : UActorComponent
		constexpr auto GrabbedComponent = 0xb8; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xcc; // char : 1
		constexpr auto bSoftLinearConstraint = 0xcc; // char : 1
		constexpr auto bInterpolateTarget = 0xcc; // char : 1
		constexpr auto LinearDamping = 0xd0; // float
		constexpr auto LinearStiffness = 0xd4; // float
		constexpr auto AngularDamping = 0xd8; // float
		constexpr auto AngularStiffness = 0xdc; // float
		constexpr auto InterpolationSpeed = 0x140; // float
	}

	namespace n_UPerkManager { // : UActorComponent
		constexpr auto _perks = 0xe0; // UPerkCollectionComponent*
		constexpr auto _statusEffects = 0xe8; // UStatusEffectCollectionComponent*
	}

	namespace n_UAddon_TormentMode_21 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _revealSurvivorsInAgony = 0x2a8; // bool
		constexpr auto _revealSurvivorsNotInAgony = 0x2a9; // bool
		constexpr auto _range = 0x2ac; // float
		constexpr auto _revealDuration = 0x2b0; // float
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto defaultValue = 0x68; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x78; // bool
		constexpr auto PrimitiveDataIndex = 0x79; // char
	}

	namespace n_UKillerPossessionComponent { // : UPossessionComponent
		constexpr auto _shouldDeactivateCollisionsWithSurvivors = 0x140; // bool
		constexpr auto _timeBeforeCollisionsDeactivation = 0x178; // FDBDTunableRowHandle
	}

	namespace n_USurvivorAimableSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _pitch = 0x4f0; // float
		constexpr auto _isHoldingAimItem = 0x4f4; // bool
		constexpr auto _isAiming = 0x4f5; // bool
		constexpr auto _isAimingAlpha = 0x4f8; // float
		constexpr auto _aimPoint = 0x4fc; // FVector
		constexpr auto _shoulderToCollisionDistance = 0x508; // float
	}

	namespace n_AGlyph { // : ASpecialBehaviourInteractable
		constexpr auto _playersWithVisibility = 0x338; // TArray<ADBDPlayer*>
		constexpr auto _oldPlayersWithVisibility = 0x348; // TArray<ADBDPlayer*>
		constexpr auto _specialBehaviourId = 0x358; // FName
		constexpr auto _allowedPlayerType = 0x364; // EAllowedPlayerType
		constexpr auto lastPlayerToStartInteraction = 0x368; // TWeakObjectPtr<ADBDPlayer>
		constexpr auto _isGlyphActivatedForPlayer = 0x370; // TArray<TWeakObjectPtr<ADBDPlayerState>>
		constexpr auto _grantChallengeProgress = 0x380; // bool
		constexpr auto _isAlwaysActivated = 0x381; // bool
		constexpr auto _glyphInteraction = 0x388; // UGlyphInteraction*
		constexpr auto _glyphInteractionKiller = 0x390; // UGlyphInteraction*
		constexpr auto _glyphInteractionChargeable = 0x398; // UChargeableComponent*
		constexpr auto _glyphInteractionChargeableKiller = 0x3a0; // UChargeableComponent*
		constexpr auto _glyphInteractor = 0x3a8; // UInteractor*
		constexpr auto _glyphInteractionZone = 0x3b0; // UPrimitiveComponent*
		constexpr auto _outlineComponent = 0x3b8; // UDBDOutlineComponent*
		constexpr auto _glyphMesh = 0x3c0; // UStaticMeshComponent*
		constexpr auto _nearTrackedActorComponent = 0x3c8; // UNearTrackedActorComponent*
		constexpr auto _associatedSurvivorScoreEvent = 0x3d0; // FGameplayTag
		constexpr auto _associatedKillerScoreEvent = 0x3dc; // FGameplayTag
		constexpr auto _glyphInteractionSecondsToCharge = 0x3e8; // FDBDTunableRowHandle
		constexpr auto _glyphInteractionSecondsToChargeKiller = 0x410; // FDBDTunableRowHandle
		constexpr auto _glyphDetectionRange = 0x438; // FDBDTunableRowHandle
		constexpr auto _auraColorWhileInteracting = 0x460; // FLinearColor
		constexpr auto _playersThatInteractedWithGlyph = 0x470; // TArray<ADBDPlayer*>
	}

	namespace n_UUVProjectionTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0x98; // UUVProjectionToolProperties*
		constexpr auto AdvancedProperties = 0xa0; // UUVProjectionAdvancedProperties*
		constexpr auto MaterialSettings = 0xa8; // UExistingMeshMaterialProperties*
		constexpr auto Previews = 0xb0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto CheckerMaterial = 0xc0; // UMaterialInstanceDynamic*
		constexpr auto TransformGizmos = 0xc8; // TArray<UTransformGizmo*>
		constexpr auto TransformProxies = 0xd8; // TArray<UTransformProxy*>
	}

	namespace n_UAISkill_InteractionTarget_StalkGhost { // : UAISkill_InteractionTarget_Stalk
		constexpr auto CautiousModeUnderTargetRange = 0x220; // float
		constexpr auto CautiousModeSpeedFactor = 0x224; // float
		constexpr auto BackFromCautiousDelay = 0x228; // float
	}

	namespace n_UClippableProviderComponent { // : UActorComponent
		constexpr auto _ignoredPrimitives = 0xb8; // TSet<UPrimitiveComponent*>
	}

	namespace n_UK24WhipAttackHittingSubstate { // : UPounceAttackHittingSubstate
		constexpr auto _attackSphereTraceRadius = 0x1a0; // FDBDTunableRowHandle
		constexpr auto _powerAttackBreakObjectLevel = 0x1c8; // FDBDTunableRowHandle
		constexpr auto _powerCanBreakObjectAfterAPlayerDamage = 0x1f0; // FDBDTunableRowHandle
		constexpr auto _whipMovementFromOffset = 0x218; // FVector
		constexpr auto _whipMovementToOffset = 0x224; // FVector
		constexpr auto _whipMovementCurve = 0x230; // UCurveFloat*
		constexpr auto _lvl3SpeedCurve = 0x238; // UCurveFloat*
		constexpr auto _whipGroundDetectionOffset = 0x240; // float
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UAISkill_InteractionUseItem_Flashlight { // : UAISkill_InteractionUseItem
		constexpr auto VulnerableTargetStartRoll = 0x178; // FAIRoll
		constexpr auto TargetFaceMeMaxAngle = 0x19c; // float
		constexpr auto _targetActor = 0x1a0; // AActor*
	}

	namespace n_UUMGTallyScoreboardPlayerInfoWidget { // : UUMGLoadoutBaseWidget
		constexpr auto OnTallyScoreboardAddFriendEvent = 0x358; // FMulticastInlineDelegate
		constexpr auto OnTallyScoreboardReportEvent = 0x368; // FMulticastInlineDelegate
		constexpr auto ImageHorizontalSeparation = 0x378; // UImage*
		constexpr auto PlayerResultData = 0x380; // FTallyPlayerResultData
		constexpr auto LoadoutIsBlocked = 0x5f8; // bool
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeActor = 0x30; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x4c; // FGuid
		constexpr auto ComponentSizeQuads = 0x5c; // int32_t
		constexpr auto SubsectionSizeQuads = 0x60; // int32_t
		constexpr auto ComponentNumSubsections = 0x64; // int32_t
		constexpr auto DrawScale = 0x68; // FVector
		constexpr auto Proxies = 0x118; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UAkWwiseTree { // : UWidget
		constexpr auto OnSelectionChanged = 0x128; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x138; // FMulticastInlineDelegate
	}

	namespace n_URifleChainTensionComponent { // : UActorComponent
		constexpr auto OnIsBuildingTensionChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto _isBuildingTension = 0xe8; // bool
		constexpr auto _targetlinkable = 0xf0; // USurvivorChainLinkableComponent*
		constexpr auto _maxTensionCharge = 0x108; // FDBDTunableRowHandle
		constexpr auto _baseTensionRate = 0x130; // FDBDTunableRowHandle
		constexpr auto _collisionTensionRate = 0x158; // FDBDTunableRowHandle
		constexpr auto _survivorPullingTensionRate = 0x180; // FTunableStat
		constexpr auto _currentTensionRate = 0x200; // FNonTunableStat
		constexpr auto _progressModifierForSurvivors = 0x260; // EProgressModifier
		constexpr auto _chargeProgressDescriptionText = 0x268; // FText
		constexpr auto _chain = 0x290; // ARifleChain*
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x38; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // char : 1
	}

	namespace n_UEnvQueryTest_Project { // : UEnvQueryTest
		constexpr auto ProjectionData = 0x238; // FEnvTraceData
	}

	namespace n_UDownloadMultiTextureTask { // : UObject
		constexpr auto _downloadingTasks = 0x30; // TArray<UDownloadingTextureTask*>
		constexpr auto _downloadedTextures = 0x58; // TMap<FName, UTexture2DDynamic*>
		constexpr auto _remainingTasks = 0xa8; // int32_t
	}

	namespace n_UDistortion { // : UPerk
		constexpr auto _activationDurations = 0x3d0; // float [0x3]
		constexpr auto _auraBlockIsActive = 0x3dc; // bool
	}

	namespace n_UDistributionFloat { // : UDistribution
		constexpr auto bCanBeBaked = 0x38; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x38; // char : 1
	}

	namespace n_UScrollBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBoxStyle = 0x38; // FScrollBoxStyle
	}

	namespace n_UAB_Menu_Slasher14_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_ABP_Menu_CamperMale04_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
		constexpr auto Cigarette_NewTrack_0_97E71C104E36EF0B3195F484D090F427 = 0x678; // float
		constexpr auto Cigarette__Direction_97E71C104E36EF0B3195F484D090F427 = 0x67c; // ETimelineDirection
		constexpr auto Cigarette = 0x680; // UTimelineComponent*
	}

	namespace n_ULocalizedOverlays { // : UOverlays
		constexpr auto DefaultOverlays = 0x30; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x38; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UInGameAssetPreloaderComponent { // : UActorComponent
		constexpr auto _generalPrimaryAssetIds = 0xd0; // TSet<FPrimaryAssetId>
		constexpr auto _generalRegularAssets = 0x120; // TSet<TSoftClassPtr<UObject>>
		constexpr auto _assetGathererClasses = 0x170; // TArray<UInGameAssetPreloaderGatherer*>
		constexpr auto _assetGatherers = 0x180; // TArray<UInGameAssetPreloaderGatherer*>
	}

	namespace n_UHexCrowdControl { // : UHexPerk
		constexpr auto _windowVaultBlockDuration = 0x440; // float [0x3]
	}

	namespace n_ALightmassPortal { // : AActor
		constexpr auto PortalComponent = 0x230; // ULightmassPortalComponent*
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Min = 0x64; // FExpressionInput
		constexpr auto Max = 0x80; // FExpressionInput
		constexpr auto ClampMode = 0x9c; // EClampMode
		constexpr auto MinDefault = 0xa0; // float
		constexpr auto MaxDefault = 0xa4; // float
	}

	namespace n_UMaterialExpressionNoise { // : UMaterialExpression
		constexpr auto Position = 0x48; // FExpressionInput
		constexpr auto FilterWidth = 0x64; // FExpressionInput
		constexpr auto Scale = 0x80; // float
		constexpr auto Quality = 0x84; // int32_t
		constexpr auto NoiseFunction = 0x88; // ENoiseFunction
		constexpr auto bTurbulence = 0x8c; // char : 1
		constexpr auto Levels = 0x90; // int32_t
		constexpr auto OutputMin = 0x94; // float
		constexpr auto OutputMax = 0x98; // float
		constexpr auto LevelScale = 0x9c; // float
		constexpr auto bTiling = 0xa0; // char : 1
		constexpr auto RepeatSize = 0xa4; // uint32_t
	}

	namespace n_UMovieSceneVectorSection { // : UMovieSceneSection
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UBloodwebSettings { // : UDataAsset
		constexpr auto _duplicableItems = 0x38; // TArray<FName>
	}

	namespace n_UUMGBloodStoreSubMenu { // : UMobileBaseUserWidget
		constexpr auto SurvivorTimer = 0x320; // UUMGBloodStoreTimer*
		constexpr auto KillerTimer = 0x328; // UUMGBloodStoreTimer*
	}

	namespace n_UOnlineSystemHandler { // : UObject
		constexpr auto _cachedLocalPlayer = 0x198; // ULocalPlayer*
		constexpr auto _gameInstance = 0x1a0; // UDBDGameInstance*
		constexpr auto _gameSessionDS = 0x1a8; // UGameSessionDS*
		constexpr auto _serverInstance = 0x3c8; // UDBDServerInstance*
		constexpr auto _crossPlatformManager = 0x400; // UCrossPlatformManager*
	}

	namespace n_UBTDecorator_BlueprintBase { // : UBTDecorator
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto ObservedKeyNames = 0x80; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0xa0; // char : 1
		constexpr auto bIsObservingBB = 0xa0; // char : 1
	}

	namespace n_UAdjustableCooldownStatusEffect { // : UStatusEffect
		constexpr auto CooldownModifierType = 0x350; // FGameplayTag
	}

	namespace n_AVectorFieldVolume { // : AActor
		constexpr auto VectorFieldComponent = 0x230; // UVectorFieldComponent*
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x90; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd8; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xe0; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xe0; // char : 1
		constexpr auto ScalarParameterValues = 0xe8; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf8; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x108; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x118; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x128; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x138; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x150; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x190; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x330; // TArray<UObject*>
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto bDeadTrailsOnDeactivate = 0x38; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x38; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x38; // char : 1
		constexpr auto TilingDistance = 0x3c; // float
		constexpr auto DistanceTessellationStepSize = 0x40; // float
		constexpr auto TangentTessellationStepSize = 0x44; // float
		constexpr auto WidthTessellationStepSize = 0x48; // float
	}

	namespace n_ASplineMeshActor { // : AActor
		constexpr auto SplineMeshComponent = 0x230; // USplineMeshComponent*
	}

	namespace n_USocialGroupChannel { // : UObject
		constexpr auto SocialUser = 0x30; // USocialUser*
		constexpr auto GroupId = 0x38; // FUniqueNetIdRepl
		constexpr auto DisplayName = 0x60; // FText
		constexpr auto Members = 0x78; // TArray<USocialUser*>
	}

	namespace n_UAREnvironmentCaptureProbe { // : UARTrackedGeometry
		constexpr auto EnvironmentCaptureTexture = 0x100; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UAspectRatioBox { // : UContentWidget
		constexpr auto AspectRatio = 0x140; // float
		constexpr auto IsAspectRatioOverridden = 0x144; // char : 1
	}

	namespace n_UCoreButtonWidget { // : UCoreBaseUserWidget
		constexpr auto OnHoveredDelegate = 0x2d8; // FMulticastInlineDelegate
		constexpr auto OnUnhoveredDelegate = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnPressedDelegate = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnReleasedDelegate = 0x308; // FMulticastInlineDelegate
		constexpr auto OnClickedDelegate = 0x318; // FMulticastInlineDelegate
		constexpr auto HoveredSfxName = 0x328; // FString
		constexpr auto HoveredSfx = 0x338; // UAkAudioEvent*
		constexpr auto PressedSfxName = 0x340; // FString
		constexpr auto PressedSfx = 0x350; // UAkAudioEvent*
		constexpr auto ClickedSfxName = 0x358; // FString
		constexpr auto ClickedSfx = 0x368; // UAkAudioEvent*
		constexpr auto AnalogCursorStickiness = 0x370; // EAnalogCursorStickiness
		constexpr auto HitzoneButton = 0x378; // UDBDButton*
		constexpr auto LabelTB = 0x380; // UDBDTextBlock*
	}

	namespace n_UAISlasherChaseAndAttackBehaviourData { // : UAICharacterBehaviourData
		constexpr auto _targetSurvivor = 0x30; // ACamperPlayer*
		constexpr auto _sqrtAttackRangeDistance = 0x38; // float
		constexpr auto _sqrtMaxTargetPositionDiff = 0x3c; // float
	}

	namespace n_UGizmoComponentWorldTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Component = 0x50; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x58; // bool
	}

	namespace n_UComponentDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto ComponentDelegateBindings = 0x30; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UInboxScreen { // : UScreenBase
		constexpr auto _umgScreen = 0x120; // UUMGInboxScreen*
		constexpr auto _newsMessages = 0x128; // TArray<FInboxMessageUIData>
		constexpr auto _rewardsMessages = 0x138; // TArray<FInboxMessageUIData>
		constexpr auto _socialMessages = 0x148; // TArray<FInboxMessageUIData>
	}

	namespace n_UWorldComposition { // : UObject
		constexpr auto TilesStreaming = 0x50; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x60; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x68; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x69; // bool
		constexpr auto RebaseOriginDistance = 0x6c; // float
	}

	namespace n_UDBDBlackboardComponent { // : UBlackboardComponent
		constexpr auto _mindFocusEntries = 0x1c0; // TMap<UObject*, FMindFocusObjectEntry>
		constexpr auto _pinLocations = 0x210; // TMap<FGameplayTag, FVector>
		constexpr auto _pinObjects = 0x260; // TMap<FGameplayTag, UObject*>
		constexpr auto _lostMindFocusEntries = 0x2b0; // TMap<UObject*, float>
		constexpr auto _objectWishListMap = 0x300; // TMap<FGameplayTag, FWeightedWishedObjectMapContainer>
		constexpr auto _discoveredObjects = 0x350; // TSet<UObject*>
		constexpr auto _intentionValidators = 0x3a0; // TSet<UObject*>
	}

	namespace n_UAIAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x230; // UWindDirectionalSourceComponent*
	}

	namespace n_UUMGCharacterInfoWidget { // : UMobileBaseUserWidget
		constexpr auto CharacterInfoScrollBox = 0x300; // UScrollBox*
		constexpr auto CharacterScrollingInfoWidget = 0x308; // UUMGCharacterScrollingInfoWidget*
		constexpr auto CharacterDLCPanel = 0x310; // UCanvasPanel*
		constexpr auto CharacterBackgroundImage = 0x318; // UImage*
		constexpr auto characterName = 0x320; // UTextBlock*
		constexpr auto _characterDifficultyText = 0x328; // FText
		constexpr auto _characterDLCText = 0x340; // FString
		constexpr auto _isKiller = 0x350; // bool
		constexpr auto _easyColor = 0x358; // FSlateColor
		constexpr auto _intermediaryColor = 0x380; // FSlateColor
		constexpr auto _hardColor = 0x3a8; // FSlateColor
		constexpr auto _currentColor = 0x3d0; // FSlateColor
		constexpr auto _characterDLCTitle = 0x3f8; // FText
		constexpr auto _onTeachableTooltipTriggeredLongPressEvent = 0x410; // FMulticastInlineDelegate
		constexpr auto _onPowerItemTooltipTriggeredLongPressEvent = 0x420; // FMulticastInlineDelegate
	}

	namespace n_UCoreInteractionProgressWidget { // : UCoreBaseHudWidget
		constexpr auto Proficiencies = 0x300; // TArray<UCoreStatusEffectIcon*>
	}

	namespace n_UGameInstance { // : UObject
		constexpr auto LocalPlayers = 0x40; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x50; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x58; // TArray<UObject*>
	}

	namespace n_UFragileObjectComponent { // : UActorComponent
		constexpr auto OnObjectBroken = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnObjectRepaired = 0xc8; // FMulticastInlineDelegate
		constexpr auto _repaired = 0xf0; // bool
		constexpr auto _minFallingHeight = 0x118; // float
		constexpr auto _generalObjectBreakingEvents = 0x120; // TArray<FGameplayTag>
		constexpr auto _previousCollector = 0x130; // ADBDPlayer*
	}

	namespace n_ULookAtThreatSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _maxDistanceForThreatDetection = 0x4f0; // float
		constexpr auto _headSocket = 0x4f4; // FName
		constexpr auto _rootSocket = 0x500; // FName
		constexpr auto _yawToThreat = 0x50c; // float
		constexpr auto _pitchToThreat = 0x510; // float
		constexpr auto _isVisibleThreat = 0x514; // bool
	}

	namespace n_UHatchetThrow { // : UThrowInteraction
		constexpr auto _hatchetThrowCancellationCooldown = 0x6e8; // FDBDTunableRowHandle
	}

	namespace n_UUMGFriendButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto InteractableButtonStatePanel = 0x430; // UCanvasPanel*
		constexpr auto NonInteractableButtonStatePanel = 0x438; // UCanvasPanel*
		constexpr auto NonInteractableExplanationText = 0x440; // UTextBlock*
		constexpr auto NonInteractableActionText = 0x448; // UTextBlock*
		constexpr auto _isInteractable = 0x450; // bool
		constexpr auto NonInteractableImage = 0x458; // UImage*
		constexpr auto _nonInteractableImages = 0x460; // TMap<EFriendTypeButton, FSlateBrush>
	}

	namespace n_UUMGLoginPopup { // : UUMGGenericPopup
		constexpr auto AuthenticationProviderList = 0x3e8; // UUMGAuthentificationProviderListWidget*
	}

	namespace n_UBP_Audio_KLR_04_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UDBDAIStateComponent { // : UActorComponent
		constexpr auto UnsafeStateAtHookedCount = 0xc0; // int32_t
		constexpr auto DireStateAtHookedCount = 0xc4; // int32_t
		constexpr auto MidObjectiveStateProgressionRatio = 0xc8; // float
		constexpr auto GameStateTable = 0xd0; // TMap<EAIObjectiveState, FDangerStateGameStateMapContainer>
		constexpr auto PressureZoneLevelTable = 0x120; // TMap<EAIDifficultyLevel, FGameStatePressureZoneLevelMapContainer>
		constexpr auto PressureZoneHighToLowRangeLerpRatios = 0x170; // TMap<EAIPressureZoneLevel, float>
		constexpr auto DefaultChasedPhaseOutDuration = 0x1c0; // float
		constexpr auto InjuredChasedPhaseOutDuration = 0x1c4; // float
		constexpr auto DefaultBeingAimedAtPhaseOutDuration = 0x1c8; // float
		constexpr auto InjuredBeingAimedAtPhaseOutDuration = 0x1cc; // float
		constexpr auto StimulusWasInSightDuration = 0x1d0; // float
		constexpr auto LoSFoVToStimulusCheckPeriod = 0x1d4; // float
		constexpr auto LoSToStimulusValidDuration = 0x1d8; // float
		constexpr auto FoVToStimulusValidDuration = 0x1dc; // float
	}

	namespace n_UBTService_FindInteractor_Locker { // : UBTService_FindInteractor
		constexpr auto StatusFilter = 0x218; // EFindInteractableLockerStatusFilter
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x30; // FLightmassPrimitiveSettings
	}

	namespace n_UK25RemoveChainInteraction { // : UChargeableInteractionDefinition
		constexpr auto _interactionTimePerChainsAttached = 0x6f0; // FDBDTunableRowHandle
		constexpr auto _cachedSurvivorChainAttachmentComponent = 0x718; // UK25SurvivorChainAttachmentComponent*
		constexpr auto _chainBeingRemoved = 0x720; // TWeakObjectPtr<AK25Chain>
		constexpr auto _chainAttachmentComponent = 0x728; // TWeakObjectPtr<UK25SurvivorChainAttachmentComponent>
	}

	namespace n_UAB_Menu_Slasher16_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_UAsyncActionLoadPrimaryAsset { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto COMPLETED = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UDemogorgonPowerItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _portalPlacerState = 0xb8; // UPortalPlacerStateComponent*
	}

	namespace n_UK26P01 { // : UPerk
		constexpr auto _generatorBlockDuration = 0x3d0; // float [0x3]
		constexpr auto _auraRevealDuration = 0x3dc; // float [0x3]
		constexpr auto _generatorAuraColorForKiller = 0x3e8; // FLinearColor
		constexpr auto _survivorsToBeHooked = 0x3f8; // int32_t
		constexpr auto _blockedGenerators = 0x400; // TArray<AGenerator*>
		constexpr auto _hookedSurvivors = 0x410; // TArray<AActor*>
		constexpr auto _generatorBlockingTimers = 0x420; // TArray<FFastTimer>
	}

	namespace n_UK25ChainStrikeState_EndChainStrike { // : UK25ChainStrikeBaseState
		constexpr auto _chainStrikeEndReason = 0xc8; // EChainStrikeEndReason
	}

	namespace n_UUMGTallyEmblemProgressionWidget { // : UMobileBaseUserWidget
		constexpr auto PositiveIcon = 0x300; // UImage*
		constexpr auto NegativeIcon = 0x308; // UImage*
		constexpr auto PercentText = 0x310; // UTextBlock*
		constexpr auto DescriptionText = 0x318; // UTextBlock*
		constexpr auto WarningPercentColor = 0x320; // FSlateColor
		constexpr auto WarningDescriptionColor = 0x348; // FSlateColor
	}

	namespace n_AReverseBearTrapRemover { // : AInteractable
		constexpr auto _keys = 0x330; // TArray<int32_t>
		constexpr auto _mapActor = 0x390; // UMapActorComponent*
	}

	namespace n_UBoxComponent { // : UShapeComponent
		constexpr auto BoxExtent = 0x440; // FVector
		constexpr auto LineThickness = 0x44c; // float
	}

	namespace n_USingleGateBlockerEffect { // : UGateBlockerEffect
		constexpr auto _distanceThreshold = 0x388; // float
		constexpr auto _gate = 0x390; // AEscapeDoor*
		constexpr auto _isInRange = 0x398; // bool
	}

	namespace n_UTrailPointOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto _tormentTrailRevealDistance = 0x130; // FDBDTunableRowHandle
	}

	namespace n_UToastNotificationScreenUMG { // : UToastNotificationScreen
		constexpr auto _toastNotificationScreen = 0x168; // UUMGToastNotificationScreen*
	}

	namespace n_UAssetManager { // : UObject
		constexpr auto ObjectReferenceList = 0x2c8; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d8; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d9; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2da; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2db; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2dc; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2dd; // bool
		constexpr auto bIsBulkScanning = 0x2de; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2df; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2e0; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2e1; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2e2; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2e4; // int32_t
	}

	namespace n_USpringArmComponent { // : USceneComponent
		constexpr auto TargetArmLength = 0x210; // float
		constexpr auto SocketOffset = 0x214; // FVector
		constexpr auto TargetOffset = 0x220; // FVector
		constexpr auto ProbeSize = 0x22c; // float
		constexpr auto ProbeChannel = 0x230; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x234; // char : 1
		constexpr auto bUsePawnControlRotation = 0x234; // char : 1
		constexpr auto bInheritPitch = 0x234; // char : 1
		constexpr auto bInheritYaw = 0x234; // char : 1
		constexpr auto bInheritRoll = 0x234; // char : 1
		constexpr auto bEnableCameraLag = 0x234; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x234; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x234; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x235; // char : 1
		constexpr auto CameraLagSpeed = 0x238; // float
		constexpr auto CameraRotationLagSpeed = 0x23c; // float
		constexpr auto CameraLagMaxTimeStep = 0x240; // float
		constexpr auto CameraLagMaxDistance = 0x244; // float
	}

	namespace n_UHISMMaterialHelperComponent { // : UHierarchicalInstancedStaticMeshComponent
		constexpr auto MaterialConfigurations = 0x688; // TArray<FMaterialConfig>
		constexpr auto IndexOverrides = 0x698; // TArray<FIndexList>
	}

	namespace n_ABaseGasCloudProjectile { // : APhysicsBasedProjectile
		constexpr auto _gasType = 0x2b8; // EBombType
		constexpr auto _poolableProjectile = 0x2c0; // UPoolableProjectileComponent*
		constexpr auto _gasCloudDuration = 0x2c8; // FDBDTunableRowHandle
		constexpr auto _gasCloudGravityScale = 0x2f0; // FDBDTunableRowHandle
		constexpr auto _gasCloudBounciness = 0x318; // FDBDTunableRowHandle
		constexpr auto _gasCloudFriction = 0x340; // FDBDTunableRowHandle
		constexpr auto _dissipateGasCloudTime = 0x368; // FDBDTunableRowHandle
		constexpr auto _gasCloudMinimumLifetime = 0x390; // FDBDTunableRowHandle
		constexpr auto _gasCloudSimpleCollisionRadius = 0x3b8; // FDBDTunableRowHandle
		constexpr auto _gasCloudComplexCollisionRadius = 0x3e0; // FDBDTunableRowHandle
		constexpr auto _gasCloudSurvivorDetectionRadius = 0x408; // FDBDTunableRowHandle
		constexpr auto _gasCloudDetectionDelay = 0x430; // FDBDTunableRowHandle
		constexpr auto _gasCloudCosmeticFadeDuration = 0x458; // FDBDTunableRowHandle
		constexpr auto _overlappingTime = 0x480; // float
		constexpr auto _dissipating = 0x484; // bool
		constexpr auto _overlappingSurvivors = 0x488; // TArray<ACamperPlayer*>
		constexpr auto _gasParticleSystem = 0x498; // UParticleSystemComponent*
		constexpr auto _simpleCollider = 0x4a0; // USphereComponent*
		constexpr auto _complexCollider = 0x4a8; // USphereComponent*
		constexpr auto _survivorDetector = 0x4b0; // USpherePlayerOverlapComponent*
		constexpr auto _activeGasCloudTracker = 0x4b8; // UActiveGasCloudTrackerComponent*
		constexpr auto _cloudSizeModifierTag = 0x4c0; // FGameplayTag
		constexpr auto _cumulativeLifetime = 0x4d0; // float
	}

	namespace n_AEntity { // : AActor
		constexpr auto _dissolveCurve = 0x230; // UCurveFloat*
		constexpr auto _revealsCurve = 0x238; // UCurveFloat*
		constexpr auto _materialHelper = 0x240; // UMaterialHelper*
		constexpr auto _skeletalMesh = 0x248; // USkeletalMeshComponent*
	}

	namespace n_UDatasmithGLTFSceneImportData { // : UDatasmithSceneImportData
		constexpr auto Generator = 0x30; // FString
		constexpr auto Version = 0x40; // float
		constexpr auto Author = 0x48; // FString
		constexpr auto License = 0x58; // FString
		constexpr auto Source = 0x68; // FString
	}

	namespace n_UNavigationSystemModuleConfig { // : UNavigationSystemConfig
		constexpr auto bStrictlyStatic = 0x68; // char : 1
		constexpr auto bCreateOnClient = 0x68; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
	}

	namespace n_UCoreStartSequenceWidget { // : UCoreBaseHudWidget
		constexpr auto FadeInDuration = 0x2f8; // float
		constexpr auto FadeOutDuration = 0x2fc; // float
		constexpr auto FadeInEasing = 0x300; // EEasingType
		constexpr auto FadeOutEasing = 0x301; // EEasingType
		constexpr auto BorderColors = 0x308; // TMap<EThemeColorId, FLinearColor>
		constexpr auto DefaultColor = 0x358; // FLinearColor
		constexpr auto ThemeNameTextfield = 0x368; // UDBDTextBlock*
		constexpr auto SeparatorImage = 0x370; // UImage*
		constexpr auto MapNameTextfield = 0x378; // UDBDTextBlock*
		constexpr auto StartSequenceFadeOutDelegate = 0x380; // FMulticastInlineDelegate
	}

	namespace n_UAB_Menu_S28_C { // : UAB_Menu_Camper_C
		constexpr auto UberGraphFrame = 0x1a60; // FPointerToUberGraphFrame
	}

	namespace n_UBloodPact { // : UPerk
		constexpr auto _dyingToInjured = 0x3e8; // bool
		constexpr auto _fullHealthStateOnly = 0x3e9; // bool
		constexpr auto _hasteEffectRange = 0x3ec; // float
		constexpr auto _hasteEffectMovementSpeedIncrease = 0x3f0; // float [0x3]
		constexpr auto _ownerStatusEffect = 0x400; // UStatusEffect*
		constexpr auto _obsessionStatusEffect = 0x408; // UStatusEffect*
		constexpr auto _ownerHasteStatusEffect = 0x410; // UStatusEffect*
		constexpr auto _otherPlayerHasteStatusEffect = 0x418; // UStatusEffect*
		constexpr auto _otherPlayer = 0x420; // ADBDPlayer*
	}

	namespace n_UPlanePositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x60; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x70; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x80; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x90; // bool
		constexpr auto bFlipX = 0x91; // bool
		constexpr auto bFlipY = 0x92; // bool
		constexpr auto bInInteraction = 0x93; // bool
		constexpr auto InteractionOrigin = 0x94; // FVector
		constexpr auto InteractionNormal = 0xa0; // FVector
		constexpr auto InteractionAxisX = 0xac; // FVector
		constexpr auto InteractionAxisY = 0xb8; // FVector
		constexpr auto InteractionStartPoint = 0xc4; // FVector
		constexpr auto InteractionCurPoint = 0xd0; // FVector
		constexpr auto InteractionStartParameter = 0xdc; // FVector2D
		constexpr auto InteractionCurParameter = 0xe4; // FVector2D
		constexpr auto ParameterSigns = 0xec; // FVector2D
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bShouldDoAnimNotifies = 0x238; // char : 1
		constexpr auto bWakeOnLevelStart = 0x238; // char : 1
		constexpr auto SkeletalMeshComponent = 0x240; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x248; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x250; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x258; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x260; // UMaterialInterface*
	}

	namespace n_UMaterialExpressionTruncate { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UMaterialExpressionTextureProperty { // : UMaterialExpression
		constexpr auto TextureObject = 0x48; // FExpressionInput
		constexpr auto Property = 0x64; // EMaterialExposedTextureProperty
	}

	namespace n_UFoliageType_Actor { // : UFoliageType
		constexpr auto actorClass = 0x378; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x380; // bool
	}

	namespace n_UNewMeshMaterialProperties { // : UInteractiveToolPropertySet
		constexpr auto Material = 0x58; // UMaterialInterface*
		constexpr auto UVScale = 0x60; // float
		constexpr auto bWorldSpaceUVScale = 0x64; // bool
		constexpr auto bWireframe = 0x65; // bool
		constexpr auto bShowExtendedOptions = 0x66; // bool
	}

	namespace n_UAlternatingColor { // : UObject
		constexpr auto FirstColor = 0x30; // FLinearColor
		constexpr auto SecondColor = 0x40; // FLinearColor
		constexpr auto ColorChangePeriod = 0x50; // float
	}

	namespace n_ATormentAttackTrailController { // : ATrailControllerBase
		constexpr auto _tormentTrailAttackPointClass = 0x288; // ATormentAttackTrailPoint*
		constexpr auto _tormentTrailAttackSign = 0x290; // AActor*
		constexpr auto _trailSpawnDelay = 0x298; // FDBDTunableRowHandle
		constexpr auto _timeIntervalBetweenPointsSpawn = 0x2c0; // FDBDTunableRowHandle
		constexpr auto _attackTrailLenght = 0x2e8; // FTunableStat
		constexpr auto _consideredAsSlopeAngle = 0x368; // FDBDTunableRowHandle
		constexpr auto _pointsTransform = 0x390; // TArray<FTransform>
		constexpr auto _slopeDetectionOverGroundVector = 0x3a0; // FVector
		constexpr auto _groundDetectionEndVector = 0x3ac; // FVector
		constexpr auto _slopeCompensationVector = 0x3b8; // FVector
		constexpr auto _spawnedAttackPointList = 0x3e0; // TArray<FSpawnedAttackPoint>
		constexpr auto _trailSpawnStarted = 0x3f0; // bool
		constexpr auto _soundDistanceOnTrail = 0x3f4; // float
		constexpr auto _mobileTormentTrailRenderer = 0x3f8; // AMobileTormentTrailRenderer*
	}

	namespace n_UPounceAttackOpenSubstate { // : UDBDAttackOpenSubstate
		constexpr auto _pounceOpenStateCosmeticBlueprintClass = 0x118; // UPounceAttackOpenSubstateCosmetic*
		constexpr auto _pounceOpenStateCosmeticBlueprintObject = 0x120; // UPounceAttackOpenSubstateCosmetic*
	}

	namespace n_UBTService_RunSkills { // : UBTService
		constexpr auto Context = 0x78; // FGameplayTag
		constexpr auto BBFilterKey = 0x88; // FBlackboardKeySelector
		constexpr auto FilterOperation = 0xb8; // EBasicKeyOperation
	}

	namespace n_UUMGFriendElementWidget { // : UUMGBaseFriendListElement
		constexpr auto FavoriteSlot = 0x3c0; // UImage*
		constexpr auto FavoriteButton = 0x3c8; // UButton*
		constexpr auto SelectionImage = 0x3d0; // UImage*
		constexpr auto SelectedPicture = 0x3d8; // UImage*
		constexpr auto FriendIcon = 0x3e0; // UImage*
		constexpr auto UnFavoriteBrush = 0x3e8; // FSlateBrush
		constexpr auto FavoriteBrush = 0x478; // FSlateBrush
		constexpr auto MutedBrush = 0x508; // FSlateBrush
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0x48; // FExpressionInput
	}

	namespace n_APlayerCameraManager { // : AActor
		constexpr auto PCOwner = 0x230; // APlayerController*
		constexpr auto TransformComponent = 0x238; // USceneComponent*
		constexpr auto DefaultFOV = 0x24c; // float
		constexpr auto DefaultOrthoWidth = 0x254; // float
		constexpr auto DefaultAspectRatio = 0x25c; // float
		constexpr auto CameraCache = 0x2a0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x880; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xe60; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1450; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1a70; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x2050; // FCameraCacheEntry
		constexpr auto ModifierList = 0x2630; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x2640; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x2650; // float
		constexpr auto FreeCamOffset = 0x2654; // FVector
		constexpr auto ViewTargetOffset = 0x2660; // FVector
		constexpr auto CameraLensEffects = 0x2680; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2690; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2698; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x26d8; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x26f8; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x2708; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x2718; // ACameraActor*
		constexpr auto bIsOrthographic = 0x2720; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x2720; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x2720; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x2720; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x2721; // char : 1
		constexpr auto ViewPitchMin = 0x2724; // float
		constexpr auto ViewPitchMax = 0x2728; // float
		constexpr auto ViewYawMin = 0x272c; // float
		constexpr auto ViewYawMax = 0x2730; // float
		constexpr auto ViewRollMin = 0x2734; // float
		constexpr auto ViewRollMax = 0x2738; // float
		constexpr auto ServerUpdateCameraTimeout = 0x2740; // float
	}

	namespace n_UAICharacterEscapeCarried { // : UAICharacterBehaviour
		constexpr auto _camperPlayer = 0x58; // ACamperPlayer*
		constexpr auto _behaviourData = 0x60; // UAICharacterEscapeCarriedData*
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x130; // float
		constexpr auto Channel = 0x134; // ETextureColorChannel
	}

	namespace n_UFSM_AndCondition { // : UFSM_Condition
		constexpr auto _conditions = 0x38; // TArray<UFSM_Condition*>
	}

	namespace n_UBuiltToLast { // : UPerk
		constexpr auto _refillPercentage = 0x3d0; // float [0x3]
		constexpr auto _hideDuration = 0x3dc; // float [0x3]
		constexpr auto _numberOfTimesPerkTriggered = 0x3e8; // char
	}

	namespace n_USoundNodeParamCrossFade { // : USoundNodeDistanceCrossFade
		constexpr auto ParamName = 0x60; // FName
	}

	namespace n_UEndMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UItemCraftInteraction { // : UInteractionDefinition
		constexpr auto _attachToSocketName = 0x5b0; // FName
		constexpr auto _collectableClass = 0x5c0; // ACollectable*
	}

	namespace n_UBTService_GetPinLocation { // : UBTService_OnRelevantBase
		constexpr auto BBToSetKey = 0x80; // FBlackboardKeySelector
		constexpr auto PinTag = 0xb0; // FGameplayTag
	}

	namespace n_UImposeStatusEffectOnEventAddon { // : UOnEventBaseAddon
		constexpr auto _statusEffectTime = 0x2a8; // float
		constexpr auto _statusEffectName = 0x2ac; // FName
		constexpr auto _imposeEffectTo = 0x2b8; // EImposeEffectTo
	}

	namespace n_ACameraRig_Crane { // : AActor
		constexpr auto CranePitch = 0x230; // float
		constexpr auto CraneYaw = 0x234; // float
		constexpr auto CraneArmLength = 0x238; // float
		constexpr auto bLockMountPitch = 0x23c; // bool
		constexpr auto bLockMountYaw = 0x23d; // bool
		constexpr auto TransformComponent = 0x240; // USceneComponent*
		constexpr auto CraneYawControl = 0x248; // USceneComponent*
		constexpr auto CranePitchControl = 0x250; // USceneComponent*
		constexpr auto CraneCameraMount = 0x258; // USceneComponent*
	}

	namespace n_UBP_Audio_KLR_21_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_USpiritFury { // : UPerk
		constexpr auto _palletToBreakCountPerLevel = 0x3d4; // int32_t [0x3]
	}

	namespace n_ULastActorInfo { // : UObject
		constexpr auto Actor = 0x40; // AActor*
		constexpr auto StaticMesh = 0x48; // UStaticMesh*
		constexpr auto ShapeSettings = 0x50; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x58; // UNewMeshMaterialProperties*
	}

	namespace n_UEnvQueryTest_Volume { // : UEnvQueryTest
		constexpr auto VolumeContext = 0x238; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x240; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x248; // char : 1
	}

	namespace n_UMapData { // : UDataAsset
		constexpr auto ThemeName = 0x38; // FName
		constexpr auto ThemeWeather = 0x44; // FName
		constexpr auto AudioStateThemes = 0x50; // FName
		constexpr auto AudioStateWeather = 0x5c; // FName
		constexpr auto AudioThemeEvent = 0x68; // FName
		constexpr auto AudioThemeSoundBank = 0x78; // TSoftObjectPtr<UAkAudioBank>
		constexpr auto MapWidth = 0xa8; // int32_t
		constexpr auto MapHeight = 0xac; // int32_t
		constexpr auto Draft = 0xb0; // bool
		constexpr auto MapTileProperties = 0xb8; // TArray<FTileProperties>
		constexpr auto Blackboard = 0xc8; // UBlackboardData*
		constexpr auto Gesture = 0xd0; // bool
		constexpr auto _proceduralGenerationData = 0xd8; // UProceduralGenerationData*
	}

	namespace n_USecondsToRateModifierBaseAddon { // : UItemAddon
		constexpr auto _chargeRate = 0x298; // FTunableStat
		constexpr auto _maxCharge = 0x318; // FTunableStat
		constexpr auto _secondsToAdd = 0x398; // float
		constexpr auto _rateModifierTagToCompute = 0x39c; // FGameplayTag
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0x48; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x4c; // FExpressionInput
	}

	namespace n_UTextureLightProfile { // : UTexture2D
		constexpr auto Brightness = 0x108; // float
		constexpr auto TextureMultiplier = 0x10c; // float
	}

	namespace n_UAISkill_FindCollectable_SupplyCrate { // : UAISkill_FindCollectable_Searchable
		constexpr auto UrgencyGoalWeight = 0x138; // FAITunableParameter
	}

	namespace n_UBTService_GoalCoordinator { // : UBTService
		constexpr auto _managedGoals = 0x80; // TMap<UObject*, FAIGoalWeightContainer>
	}

	namespace n_UAnimBoneCompressionSettings { // : UObject
		constexpr auto Codecs = 0x30; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UMovieScene3DPathSection { // : UMovieScene3DConstraintSection
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UAchievementWriteCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UMaterialFunctionInterface { // : UObject
		constexpr auto StateId = 0x30; // FGuid
		constexpr auto MaterialFunctionUsage = 0x40; // EMaterialFunctionUsage
	}

	namespace n_UHillbillyChainsawSubAnimInstance { // : UBaseKillerAttackSubAnimInstance
		constexpr auto _isRevvingChainsaw = 0x5b8; // bool
		constexpr auto _isRevvingChainsawCancelled = 0x5b9; // bool
		constexpr auto _isChainsawSprinting = 0x5ba; // bool
		constexpr auto _isWaitingForChainsaw = 0x5bb; // bool
	}

	namespace n_UFadeComponent { // : UActorComponent
		constexpr auto OnFadePercentChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _fadeDuration = 0xc8; // float
	}

	namespace n_UWiggleFreeComponent { // : UActorComponent
		constexpr auto _killerWigglingFrom = 0xb8; // ASlasherPlayer*
	}

	namespace n_UEndTurnCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UAkWinGDKInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkWinGDKAdvancedInitializationSettings
	}

	namespace n_UTextBlockWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto TextBlockStyle = 0x38; // FTextBlockStyle
	}

	namespace n_UDBDRichTextBlock { // : URichTextBlock
		constexpr auto _debugPreviewLargeTextState = 0x6c8; // bool
		constexpr auto _debugPreviewUndockedState = 0x6c9; // bool
		constexpr auto _hasLargeText = 0x6ca; // bool
		constexpr auto _largeTextProperties = 0x6d0; // FTextBlockOverrideProperties
		constexpr auto _overrideUndockedPropertiesWithLargeText = 0x719; // bool
		constexpr auto _hasUndocking = 0x71a; // bool
		constexpr auto _undockedProperties = 0x720; // FTextBlockOverrideProperties
	}

	namespace n_UFixedPlaneBrushProperties { // : UInteractiveToolPropertySet
		constexpr auto bPropertySetEnabled = 0x58; // bool
		constexpr auto bShowGizmo = 0x59; // bool
		constexpr auto bSnapToGrid = 0x5a; // bool
		constexpr auto Position = 0x5c; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_UOniDemonModeAttackStateComponent { // : UChargedAttackStateComponent
		constexpr auto OnChargedAttackReadyChanged = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UUMGCustomizationScreenWidget { // : UMobileBaseUserWidget
		constexpr auto PageScrollWidget = 0x330; // UUMGCustomizationPageScrollWidget*
		constexpr auto CustomizationCategoriesBar = 0x338; // UUMGCustomizationCategoriesBar*
		constexpr auto CategoryLabel = 0x340; // UTextBlock*
		constexpr auto CurrentlyEquippedLabel = 0x348; // UTextBlock*
		constexpr auto AvailableInOutfitsContainer = 0x350; // UCanvasPanel*
		constexpr auto UnlockItemContainer = 0x358; // UCanvasPanel*
		constexpr auto OutfitItem = 0x360; // UUMGCustomizationItemWidget*
		constexpr auto PriceContainer = 0x368; // UVerticalBox*
		constexpr auto PriceButtonWidgetClass = 0x370; // TSoftClassPtr<UObject>
		constexpr auto _currentSelectedItem = 0x3a4; // FName
	}

	namespace n_UAsyncTaskDownloadImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UGeometryCache { // : UObject
		constexpr auto Materials = 0x38; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x48; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x68; // int32_t
		constexpr auto EndFrame = 0x6c; // int32_t
	}

	namespace n_UTexture { // : UStreamableRenderAsset
		constexpr auto LightingGuid = 0x50; // FGuid
		constexpr auto LODBias = 0x60; // int32_t
		constexpr auto CompressionSettings = 0x64; // TextureCompressionSettings
		constexpr auto Filter = 0x65; // TextureFilter
		constexpr auto MipLoadOptions = 0x66; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x67; // TextureGroup
		constexpr auto SRGB = 0x68; // char : 1
		constexpr auto bNoTiling = 0x68; // char : 1
		constexpr auto VirtualTextureStreaming = 0x68; // char : 1
		constexpr auto CompressionYCoCg = 0x68; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x68; // char : 1
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UTotemBoundPerk { // : UPerk
		constexpr auto TotemBoundState = 0x3e8; // ETotemState
		constexpr auto _doNotBindToTotemOnInit = 0x3e9; // bool
		constexpr auto _boundTotems = 0x3f0; // TArray<ATotem*>
		constexpr auto _local_boundTotems = 0x400; // TArray<ATotem*>
		constexpr auto _authorityPrevTotemActors = 0x410; // TArray<ATotem*>
		constexpr auto _numTotemsToBind = 0x420; // int32_t
	}

	namespace n_UBlackboardKeyType_Class { // : UBlackboardKeyType
		constexpr auto BaseClass = 0x38; // UObject*
	}

	namespace n_UHealSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isHealingACrawlingTarget = 0x530; // bool
		constexpr auto _isHealingOtherNoMedkit = 0x531; // bool
		constexpr auto _isHealingOtherMedkit = 0x532; // bool
		constexpr auto _isHealingSelfNoMedkit = 0x533; // bool
		constexpr auto _isHealingSelfMedkit = 0x534; // bool
		constexpr auto _isWakingUpOther = 0x535; // bool
		constexpr auto _isBeingHealed = 0x536; // bool
		constexpr auto _isBeingMended = 0x537; // bool
		constexpr auto _isMendingOther = 0x538; // bool
		constexpr auto _hasSkillCheckFailed = 0x539; // bool
		constexpr auto _isCrawling = 0x53a; // bool
		constexpr auto _hasHealerSkillCheckFailed = 0x53b; // bool
	}

	namespace n_UBTTask_SetRandomNavPoint { // : UBTTaskNode
		constexpr auto BBFromLocation = 0x78; // FBlackboardKeySelector
		constexpr auto BBToLocation = 0xa8; // FBlackboardKeySelector
		constexpr auto MinAroundRadius = 0xd8; // float
		constexpr auto MaxAroundRadius = 0xdc; // float
		constexpr auto MaxNbAttempts = 0xe0; // int32_t
		constexpr auto FilterClass = 0xe8; // UNavigationQueryFilter*
	}

	namespace n_UGnomePlayerComponent { // : UActorComponent
		constexpr auto _hasInteractedWithGnomeThisGame = 0xb8; // bool
	}

	namespace n_ULandscapeSplinesComponent { // : UPrimitiveComponent
		constexpr auto ControlPoints = 0x428; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x438; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x448; // TArray<UMeshComponent*>
	}

	namespace n_UGMAdaptiveShadowMapController { // : UObject
		constexpr auto _atlas = 0x30; // UGMAdaptiveShadowMapAtlas*
		constexpr auto _lightFunctionMaterial = 0x38; // UMaterialInterface*
		constexpr auto _shadowMapSourceList = 0x40; // TArray<UGMAdaptiveShadowMapSource*>
		constexpr auto _shadowMapSourceActivatedList = 0x50; // TArray<UGMAdaptiveShadowMapSource*>
	}

	namespace n_UPresenter { // : UUIComponent
		constexpr auto RequestPresentationAtBeginPlay = 0xb8; // bool
		constexpr auto InitialVisibility = 0xb9; // ESlateVisibility
		constexpr auto _widget = 0xc0; // UUserWidget*
	}

	namespace n_USafeZoneSlot { // : UPanelSlot
		constexpr auto bIsTitleSafe = 0x40; // bool
		constexpr auto SafeAreaScale = 0x44; // FMargin
		constexpr auto HAlign = 0x54; // EHorizontalAlignment
		constexpr auto VAlign = 0x55; // EVerticalAlignment
		constexpr auto Padding = 0x58; // FMargin
	}

	namespace n_UMovieSceneAkAudioRTPCSection { // : UMovieSceneSection
		constexpr auto RTPC = 0xe8; // UAkRtpc*
		constexpr auto Name = 0xf0; // FString
		constexpr auto FloatCurve = 0x100; // FRichCurve
		constexpr auto FloatChannelSerializationHelper = 0x180; // FMovieSceneFloatChannelSerializationHelper
		constexpr auto RTPCChannel = 0x1b0; // FMovieSceneFloatChannel
	}

	namespace n_UUMGSuggestionsListTabWidget { // : UUMGFriendBaseTabListWidget
		constexpr auto PlayedWithFriendsExpandableList = 0x300; // UUMGExpandableListWidget*
		constexpr auto SocialFriendsExpandableList = 0x308; // UUMGExpandableListWidget*
	}

	namespace n_UParticleSystem { // : UFXSystemAsset
		constexpr auto UpdateTime_FPS = 0x38; // float
		constexpr auto UpdateTime_Delta = 0x3c; // float
		constexpr auto WarmupTime = 0x40; // float
		constexpr auto WarmupTickRate = 0x44; // float
		constexpr auto Emitters = 0x48; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x58; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x60; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x68; // float
		constexpr auto MacroUVRadius = 0x6c; // float
		constexpr auto LODDistances = 0x70; // TArray<float>
		constexpr auto LODSettings = 0x80; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x90; // FBox
		constexpr auto SecondsBeforeInactive = 0xac; // float
		constexpr auto Delay = 0xb0; // float
		constexpr auto DelayLow = 0xb4; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb8; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb8; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb8; // char : 1
		constexpr auto bHasPhysics = 0xb8; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb8; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb8; // char : 1
		constexpr auto bUseDelayRange = 0xb9; // char : 1
		constexpr auto bAllowManagedTicking = 0xb9; // char : 1
		constexpr auto bAutoDeactivate = 0xb9; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb9; // char : 1
		constexpr auto SystemUpdateMode = 0xba; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xbb; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xbc; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xbd; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xbf; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xc0; // uint32_t
		constexpr auto InsignificanceDelay = 0xc4; // float
		constexpr auto MacroUVPosition = 0xc8; // FVector
		constexpr auto CustomOcclusionBounds = 0xd4; // FBox
		constexpr auto SoloTracking = 0xf0; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0x100; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UNiagaraLightRendererProperties { // : UNiagaraRendererProperties
		constexpr auto bUseInverseSquaredFalloff = 0x58; // char : 1
		constexpr auto bAffectsTranslucency = 0x58; // char : 1
		constexpr auto bOverrideRenderingEnabled = 0x58; // char : 1
		constexpr auto RadiusScale = 0x5c; // float
		constexpr auto ColorAdd = 0x60; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x70; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0x100; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x190; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x220; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x2b0; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x340; // FNiagaraVariableAttributeBinding
	}

	namespace n_UMaterialExpressionShadingPathSwitch { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto Inputs = 0x64; // FExpressionInput [0x3]
	}

	namespace n_UGridSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
		constexpr auto row = 0x54; // int32_t
		constexpr auto RowSpan = 0x58; // int32_t
		constexpr auto Column = 0x5c; // int32_t
		constexpr auto ColumnSpan = 0x60; // int32_t
		constexpr auto Layer = 0x64; // int32_t
		constexpr auto Nudge = 0x68; // FVector2D
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0x78; // FInterpCurveVector
		constexpr auto EulerTrack = 0x90; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa8; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb8; // FName
		constexpr auto LinCurveTension = 0xc4; // float
		constexpr auto AngCurveTension = 0xc8; // float
		constexpr auto bUseQuatInterpolation = 0xcc; // char : 1
		constexpr auto bShowArrowAtKeys = 0xcc; // char : 1
		constexpr auto bDisableMovement = 0xcc; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xcc; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xcc; // char : 1
		constexpr auto bHide3DTrack = 0xcc; // char : 1
		constexpr auto RotMode = 0xd0; // EInterpTrackMoveRotMode
	}

	namespace n_UDecalSpawner { // : UObject
		constexpr auto _decalCollection = 0x30; // UDecalCollection*
		constexpr auto _spawnerStrategy = 0x38; // USpawnerStrategy*
	}

	namespace n_UKillerAnimInstance { // : UBaseKillerAnimInstance
		constexpr auto _leftHandIKLocationFPV = 0x4f8; // FVector
		constexpr auto _rightHandIKLocationFPV = 0x504; // FVector
		constexpr auto _isAnyMontagePlaying = 0x510; // bool
		constexpr auto _isCarrying = 0x511; // bool
		constexpr auto _firstPersonCarryOffset = 0x514; // FVector
		constexpr auto _firstPersonCarryOffsetLookingDown = 0x520; // FVector
		constexpr auto _isInAir = 0x52c; // bool
		constexpr auto _isSpectator = 0x52d; // bool
		constexpr auto _isIdle = 0x52e; // bool
		constexpr auto _animDirection = 0x530; // float
		constexpr auto _animSpeed = 0x534; // float
		constexpr auto _animPitch = 0x538; // float
		constexpr auto _animYaw = 0x53c; // float
		constexpr auto _pelvisHeight = 0x540; // float
		constexpr auto _idleTime = 0x544; // float
		constexpr auto _directionSwitch = 0x548; // int32_t
		constexpr auto _isAttacking = 0x54c; // bool
		constexpr auto _isPlayingAnyMontage = 0x54d; // bool
		constexpr auto _isKilling = 0x54e; // bool
		constexpr auto _leftClearFrontSpaceVector = 0x550; // FVector
		constexpr auto _rightClearFrontSpaceVector = 0x55c; // FVector
		constexpr auto _velocity = 0x568; // FVector
		constexpr auto _rightFootEffectorLocation = 0x574; // FVector
		constexpr auto _leftFootEffectorLocation = 0x580; // FVector
		constexpr auto _interactionType = 0x58c; // EInteractionAnimation
		constexpr auto _armIKSensorComponent = 0x590; // UArmIKSensorComponent*
		constexpr auto _attackState = 0x598; // EAttackSubstate
		constexpr auto _forwardVelocity = 0x59c; // float
		constexpr auto _lateralVelocity = 0x5a0; // float
	}

	namespace n_UAISkill_InteractionTarget_TormentAttack { // : UAISkill_InteractionTarget
		constexpr auto AdvancedAtNbDetectedTargets = 0x220; // int32_t
		constexpr auto AdvancedStartRoll = 0x224; // FAIRoll
	}

	namespace n_UAkLuminInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UAkMediaAsset { // : UObject
		constexpr auto ID = 0x30; // uint32_t
		constexpr auto UserData = 0x38; // TArray<UObject*>
		constexpr auto CurrentMediaAssetData = 0x48; // UAkMediaAssetData*
	}

	namespace n_UEruption { // : UPerk
		constexpr auto _server_highlightedGenerators = 0x3d0; // TArray<AGenerator*>
		constexpr auto _isPerkEnabled = 0x3e0; // bool
		constexpr auto _generatorRegressPercentage = 0x3e4; // float [0x3]
		constexpr auto _survivorImposedStatusEffectDuration = 0x3f0; // float [0x3]
		constexpr auto _perkCooldownDuration = 0x3fc; // float [0x3]
		constexpr auto _screamRevealLocationDuration = 0x408; // float
	}

	namespace n_UHoarder { // : UPerk
		constexpr auto _chests = 0x3d8; // TArray<ASearchable*>
		constexpr auto _camperInteractItemPickupRevealRange = 0x3e8; // float [0x3]
		constexpr auto _extraChestsSpawned = 0x3f4; // int32_t [0x3]
		constexpr auto _bubbleIndicatorLifetime = 0x400; // float [0x3]
		constexpr auto _showUniqueChestVisualPerState = 0x40c; // bool
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0x78; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x88; // char : 1
		constexpr auto bUseCustomEventName = 0x88; // char : 1
	}

	namespace n_UNavigationQueryFilter_Player { // : UNavigationQueryFilter
		constexpr auto MaxSearchNodes = 0x50; // int32_t
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x30; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMovieSceneObjectPropertyTrack { // : UMovieScenePropertyTrack
		constexpr auto PropertyClass = 0x98; // UObject*
	}

	namespace n_UUMGAtlStorePriceWidget { // : UMobileBaseUserWidget
		constexpr auto PriceText = 0x300; // UTextBlock*
	}

	namespace n_UAB_S29_Tablete_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x2d8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_2 = 0x2f0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose = 0x328; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult = 0x340; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x378; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x428; // bool
	}

	namespace n_ALevelGenerator_C { // : AProceduralLevelBuilder
		constexpr auto UberGraphFrame = 0xf28; // FPointerToUberGraphFrame
		constexpr auto DefaultSceneRoot = 0xf30; // USceneComponent*
		constexpr auto initialMistDensity = 0xf38; // float
	}

	namespace n_UBlinkTargetFinder { // : UActorComponent
		constexpr auto _minDistance = 0xd0; // FDBDTunableRowHandle
		constexpr auto _maxDistance = 0xf8; // FTunableStat
		constexpr auto _floorRaycastStartZOffset = 0x178; // float
		constexpr auto _floorRaycastLength = 0x17c; // float
		constexpr auto _locationClearStepHeight = 0x180; // float
		constexpr auto _horizontalSamplePercentages = 0x188; // TArray<float>
		constexpr auto _blinkBlockerSphereCastRadius = 0x198; // float
	}

	namespace n_UBTTask_SetFocusCooldown { // : UBTTaskNode
		constexpr auto BBOnObject = 0x78; // FBlackboardKeySelector
		constexpr auto ContextName = 0xa8; // FName
		constexpr auto InfiniteDuration = 0xb4; // bool
		constexpr auto Duration = 0xb8; // float
	}

	namespace n_UStruggleComponent { // : UActorComponent
		constexpr auto _skillCheckCount = 0x110; // int32_t
	}

	namespace n_ADecalActor { // : AActor
		constexpr auto Decal = 0x230; // UDecalComponent*
	}

	namespace n_UTooltipScreenUMG { // : UScreenBase
		constexpr auto _tooltipWidget = 0x120; // UBaseTooltipWidget*
	}

	namespace n_UInputBehaviorSet { // : UObject
		constexpr auto Behaviors = 0x30; // TArray<FBehaviorInfo>
	}

	namespace n_URepairGeneratorSubAnimInstance { // : UAnimInstance
		constexpr auto _owningGenerator = 0x270; // AGenerator*
		constexpr auto _isBeingRepaired = 0x278; // bool
		constexpr auto _repairingSurvivor = 0x280; // ACamperPlayer*
		constexpr auto _animSequence = 0x288; // UAnimSequence*
		constexpr auto _interactionTag = 0x290; // FGameplayTag
		constexpr auto _currentAnimId = 0x29c; // FGameplayTag
		constexpr auto _taggedAnimSequences = 0x2a8; // TMap<FGameplayTag, UAnimSequence*>
	}

	namespace n_UUMGAtlantaFriendListScreen { // : UMobileBaseUserWidget
		constexpr auto ListSwitcher = 0x360; // UWidgetSwitcher*
		constexpr auto SearchResultSwitcher = 0x368; // UWidgetSwitcher*
		constexpr auto NonFriendSearchResult = 0x370; // UUMGBaseFriendListElement*
		constexpr auto RequestReceivedSearchResult = 0x378; // UUMGBaseFriendListElement*
		constexpr auto RequestSentSearchResult = 0x380; // UUMGBaseFriendListElement*
		constexpr auto FriendSearchResult = 0x388; // UUMGBaseFriendListElement*
		constexpr auto SearchFailureText = 0x390; // UTextBlock*
		constexpr auto CloseButton = 0x398; // UUMGBaseButtonWidget*
		constexpr auto SearchBar = 0x3a0; // UUMGFriendSearchBarWidget*
		constexpr auto ButtonTabContainer = 0x3a8; // UHorizontalBox*
		constexpr auto FriendListTabWidget = 0x3b0; // UUMGFriendListTabWidget*
		constexpr auto SuggestionListTabWidget = 0x3b8; // UUMGSuggestionsListTabWidget*
		constexpr auto RequestListTabWidget = 0x3c0; // UUMGRequestsListTabWidget*
		constexpr auto FriendsTabButton = 0x3c8; // UUMGFriendTabButtonWidget*
		constexpr auto SuggestionsTabButton = 0x3d0; // UUMGFriendTabButtonWidget*
		constexpr auto RequestsTabButton = 0x3d8; // UUMGFriendTabButtonWidget*
		constexpr auto CurrentContextualMenuWidget = 0x3e0; // UUMGBaseFriendListContextualMenuWidget*
		constexpr auto FriendWidget = 0x3e8; // TSoftClassPtr<UObject>
		constexpr auto RequestSentWidget = 0x418; // TSoftClassPtr<UObject>
		constexpr auto FriendRequestReceivedWidget = 0x448; // TSoftClassPtr<UObject>
		constexpr auto FriendsSuggestionWidget = 0x478; // TSoftClassPtr<UObject>
		constexpr auto FriendsSuggestion = 0x4a8; // TSoftClassPtr<UObject>
		constexpr auto FriendPartyInviteWidgetClass = 0x4d8; // TSoftClassPtr<UObject>
		constexpr auto ContextualMenuInvite = 0x508; // TSoftClassPtr<UObject>
		constexpr auto ContextualMenuConfirmDeclineAction = 0x538; // TSoftClassPtr<UObject>
		constexpr auto _existingFriendListWidgets = 0x5f8; // TMap<FString, FFriendWidgetList>
		constexpr auto _existingFriendInvitePartyWidget = 0x648; // TMap<FString, UUMGBaseFriendListElement*>
	}

	namespace n_ULightbornBlindFailedIndicatorCondition { // : UEventDrivenModifierCondition
		constexpr auto _conditionReevaluationTimerDurationAfterFailedBlind = 0xe8; // float
	}

	namespace n_UHarpoonChainPositioner { // : UActorComponent
		constexpr auto _harpoonPropClass = 0xb8; // AHarpoonProp*
		constexpr auto _survivorAttachSocket = 0xc0; // FName
		constexpr auto _animationSocket = 0xcc; // FName
		constexpr auto _reelBackToRifleSpeed = 0xd8; // FDBDTunableRowHandle
		constexpr auto _harpoonMinimumSnapBackDistance = 0x100; // float
		constexpr auto _harpoonProp = 0x108; // AHarpoonProp*
		constexpr auto _harpoonProjectile = 0x110; // AHarpoonProjectile*
		constexpr auto _collector = 0x118; // ADBDPlayer*
		constexpr auto _chain = 0x128; // ARifleChain*
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UUMGLoadoutItemButton { // : UMobileBaseUserWidget
		constexpr auto OnLoadoutItemButtonClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto OnDisabledItemButtonClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OnLoadoutItemButtonLongPress = 0x320; // FMulticastInlineDelegate
		constexpr auto HideStackCount = 0x330; // bool
		constexpr auto TextStackCount = 0x338; // UTextBlock*
		constexpr auto EmptyCanvas = 0x340; // UCanvasPanel*
		constexpr auto EmptyButton = 0x348; // UButton*
		constexpr auto LockedButton = 0x350; // UButton*
		constexpr auto ActionCanvas = 0x358; // UCanvasPanel*
		constexpr auto ImageRarityBG = 0x360; // UImage*
		constexpr auto ImageGradient = 0x368; // UImage*
		constexpr auto ImagePaint = 0x370; // UImage*
		constexpr auto ImageEventBorder = 0x378; // UImage*
		constexpr auto ImagePaintTop = 0x380; // UImage*
		constexpr auto ImagePaintBottom = 0x388; // UImage*
		constexpr auto EmptyCanvasVisibility = 0x390; // ESlateVisibility
		constexpr auto ActionCanvasVisibility = 0x391; // ESlateVisibility
		constexpr auto PrivateCanvasVisibility = 0x392; // ESlateVisibility
		constexpr auto LockIconVisibility = 0x393; // ESlateVisibility
		constexpr auto EmptyIconVisibility = 0x394; // ESlateVisibility
		constexpr auto SpecialEventVisiblity = 0x395; // ESlateVisibility
		constexpr auto LoadoutSelectedVisibility = 0x396; // ESlateVisibility
		constexpr auto LoadoutLockVisibility = 0x397; // ESlateVisibility
		constexpr auto ImageIcon = 0x398; // UImage*
		constexpr auto ImageShadow = 0x3a0; // UImage*
		constexpr auto ActionButton = 0x3a8; // UButton*
		constexpr auto EmptyBGAsset = 0x3b0; // FSlateBrush
		constexpr auto DisableBGAsset = 0x440; // FSlateBrush
		constexpr auto LoadoutItemData = 0x4d0; // FInventorySlotData
		constexpr auto _triggerClickEventForLoadoutWidget = 0x5c8; // bool
		constexpr auto CanvasUnlock = 0x5d0; // UVerticalBox*
		constexpr auto TextUnlockLevel = 0x5d8; // UTextBlock*
	}

	namespace n_UUMGPlayerStatusIcon { // : UMobileBaseUserWidget
		constexpr auto HealthBar = 0x300; // UProgressBar*
		constexpr auto TimerBar = 0x308; // UProgressBar*
		constexpr auto HealthBarContainer = 0x310; // UCanvasPanel*
		constexpr auto TimerBarContainer = 0x318; // UCanvasPanel*
		constexpr auto playerName = 0x320; // UTextBlock*
		constexpr auto StatusIconBloodTop = 0x328; // UImage*
		constexpr auto StatusIconBloodBottom = 0x330; // UImage*
		constexpr auto StatusIcon = 0x338; // UImage*
		constexpr auto ObsessionCanvas = 0x340; // UCanvasPanel*
		constexpr auto BrokenIndicatorCanvas = 0x348; // UCanvasPanel*
		constexpr auto AfflictionCanvas = 0x350; // UCanvasPanel*
		constexpr auto AfflictionIntroCanvas = 0x358; // UCanvasPanel*
		constexpr auto SleepStatusCanvas = 0x360; // UCanvasPanel*
		constexpr auto SleepTimerCanvas = 0x368; // UCanvasPanel*
		constexpr auto ReverseBearTrapCanvas = 0x370; // UCanvasPanel*
		constexpr auto ReverseBearTrapArrow = 0x378; // UImage*
		constexpr auto SicknessCanvas = 0x380; // UCanvasPanel*
		constexpr auto SicknessFill = 0x388; // UImage*
		constexpr auto SpectateCanvas = 0x390; // UCanvasPanel*
		constexpr auto SelectedSpectatorCanvas = 0x398; // UCanvasPanel*
		constexpr auto AgonyCanvas = 0x3a0; // UCanvasPanel*
		constexpr auto HandsGrabbing = 0x3a8; // UCanvasPanel*
		constexpr auto SicknessFillHighOpacity = 0x3b0; // float
		constexpr auto SicknessFillLowOpacity = 0x3b4; // float
		constexpr auto StatusEffectContainerCanvas = 0x3b8; // UCanvasPanel*
		constexpr auto SicknessFillMI = 0x3c0; // UMaterialInstanceDynamic*
		constexpr auto _hookedTexture = 0x3c8; // UTexture2D*
		constexpr auto _hookedBloodTexture = 0x3d0; // UTexture2D*
		constexpr auto _trappedTexture = 0x3d8; // UTexture2D*
		constexpr auto _trappedBloodTexture = 0x3e0; // UTexture2D*
		constexpr auto _deadTexture = 0x3e8; // UTexture2D*
		constexpr auto _deadBloodTexture = 0x3f0; // UTexture2D*
		constexpr auto _escapedTexture = 0x3f8; // UTexture2D*
		constexpr auto _injuredTexture = 0x400; // UTexture2D*
		constexpr auto _injuredBloodTexture = 0x408; // UTexture2D*
		constexpr auto _crawlingTexture = 0x410; // UTexture2D*
		constexpr auto _crawlingBloodTexture = 0x418; // UTexture2D*
		constexpr auto _sacrificedTexture = 0x420; // UTexture2D*
		constexpr auto _sacrificedBloodTexture = 0x428; // UTexture2D*
		constexpr auto _disconnectedTexture = 0x430; // UTexture2D*
		constexpr auto _deathBedTexture = 0x438; // UTexture2D*
		constexpr auto _defaultTexture = 0x440; // UTexture2D*
		constexpr auto UMGStalkingStatusEffectUIClass = 0x448; // TSoftClassPtr<UObject>
		constexpr auto UMGLacerationStatusEffectUIClass = 0x478; // TSoftClassPtr<UObject>
		constexpr auto _maxNumberCharacterInName = 0x4a8; // int32_t
		constexpr auto _stalkingStatusEffectUI = 0x558; // UUMGStalkingStatusEffectUI*
		constexpr auto _lacerationStatusEffectUI = 0x560; // UUMGLacerationStatusEffectUI*
	}

	namespace n_UBTTask_RunBehavior { // : UBTTaskNode
		constexpr auto BehaviorAsset = 0x78; // UBehaviorTree*
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x30; // int32_t
		constexpr auto bEnabled = 0x34; // char : 1
		constexpr auto RequiredModule = 0x38; // UParticleModuleRequired*
		constexpr auto Modules = 0x40; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x50; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x58; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x60; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x68; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x78; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x88; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x98; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa8; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb8; // char : 1
		constexpr auto PeakActiveParticles = 0xbc; // int32_t
	}

	namespace n_UGameplayTagsSettings { // : UGameplayTagsList
		constexpr auto ImportTagsFromConfig = 0x50; // bool
		constexpr auto WarnOnInvalidTags = 0x51; // bool
		constexpr auto FastReplication = 0x52; // bool
		constexpr auto InvalidTagCharacters = 0x58; // FString
		constexpr auto CategoryRemapping = 0x68; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x78; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x88; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x98; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa8; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xac; // int32_t
		constexpr auto RestrictedConfigFiles = 0xb0; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UUMGPromoPackContentWidget { // : UMobileBaseUserWidget
		constexpr auto Content = 0x300; // UHorizontalBox*
		constexpr auto WidgetPerContentType = 0x308; // UPromoPackContentDataAsset*
		constexpr auto ScrollBox = 0x310; // UScrollBox*
		constexpr auto _itemsContainer = 0x318; // TArray<TWeakObjectPtr<UVerticalBox>>
	}

	namespace n_USlasherAnimSlaveMale_C { // : USlaveAnimInstance
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x288; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2c0; // FAnimNode_CopyPoseFromMesh
		constexpr auto masterMesh = 0x400; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight { // : UMaterialExpression
		constexpr auto Base = 0x48; // FExpressionInput
		constexpr auto Layer = 0x64; // FExpressionInput
		constexpr auto ParameterName = 0x80; // FName
		constexpr auto PreviewWeight = 0x8c; // float
		constexpr auto ConstBase = 0x90; // FVector
		constexpr auto ExpressionGUID = 0x9c; // FGuid
	}

	namespace n_UAnySurvivorHasObjectState { // : UEventDrivenModifierCondition
		constexpr auto _stateTag = 0x138; // FGameplayTag
	}

	namespace n_UDragonsGrip { // : UPerk
		constexpr auto _kickedGenerator = 0x3d0; // AGenerator*
		constexpr auto _activationDuration = 0x3d8; // float [0x3]
		constexpr auto _cooldownDuration = 0x3e4; // float [0x3]
		constexpr auto _exposedEffectDuration = 0x3f0; // float [0x3]
		constexpr auto _onlyExposeFirstSurvivor = 0x3fc; // bool
		constexpr auto _loudNoiseRange = 0x408; // FDBDTunableRowHandle
	}

	namespace n_ATormentTrailPoint { // : ABaseTormentTrailPoint
		constexpr auto _poolableComponent = 0x348; // UAuthoritativePoolableActorComponent*
		constexpr auto _splineMeshOverlapDistance = 0x350; // float
	}

	namespace n_UUniformInteger { // : UFieldNodeInt
		constexpr auto Magnitude = 0xb8; // int32_t
	}

	namespace n_UUmgSpectatorHud { // : UUmgPlayerHud
		constexpr auto OnLeaveSpectateClicked = 0x528; // FMulticastInlineDelegate
		constexpr auto OnPlayerSpectate = 0x538; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto AGreaterThanB = 0x80; // FExpressionInput
		constexpr auto AEqualsB = 0x9c; // FExpressionInput
		constexpr auto ALessThanB = 0xb8; // FExpressionInput
		constexpr auto EqualsThreshold = 0xd4; // float
		constexpr auto ConstB = 0xd8; // float
		constexpr auto ConstAEqualsB = 0xdc; // float
	}

	namespace n_UCoreOnboardingTutorialButtonWidget { // : UCoreButtonWidget
		constexpr auto OnSetDataAnimationCompleteDelegate = 0x398; // FMulticastInlineDelegate
		constexpr auto UnavailablePressedSfxName = 0x3a8; // FString
		constexpr auto UnavailablePressedSfx = 0x3b8; // UAkAudioEvent*
		constexpr auto TitleText = 0x3c0; // UDBDTextBlock*
		constexpr auto DescriptionText = 0x3c8; // UDBDTextBlock*
		constexpr auto RewardsText = 0x3d0; // UDBDTextBlock*
		constexpr auto RoleIcon = 0x3d8; // UDBDImage*
		constexpr auto StateSwitcher = 0x3e0; // UWidgetSwitcher*
		constexpr auto LockedImage = 0x3e8; // UDBDImage*
		constexpr auto CompletedImage = 0x3f0; // UDBDImage*
		constexpr auto RewardWrappers = 0x3f8; // TArray<UCoreRewardWrapperWidget*>
		constexpr auto viewData = 0x408; // FOnboardingTutorialButtonViewData
	}

	namespace n_USoundConcurrency { // : UObject
		constexpr auto Concurrency = 0x30; // FSoundConcurrencySettings
	}

	namespace n_UMeatHookOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto HookedOutlineColorSlasher = 0x130; // FLinearColor
		constexpr auto CarryingOutlineColorSlasher = 0x140; // FLinearColor
		constexpr auto DefaultOutlineColorSlasher = 0x150; // FLinearColor
		constexpr auto VisibleOutlineColorCamper = 0x160; // FLinearColor
	}

	namespace n_UUMGPromoPackSuggestionButton { // : UUMGBaseButtonWidget
		constexpr auto RichTextButtonLabel = 0x430; // URichTextBlock*
		constexpr auto LineGlow = 0x438; // UImage*
	}

	namespace n_USurvivorStatusComponent { // : UActorComponent
		constexpr auto _survivor = 0xb8; // ACamperPlayer*
	}

	namespace n_ACineCameraActor { // : ACameraActor
		constexpr auto LookatTrackingSettings = 0x7a0; // FCameraLookatTrackingSettings
	}

	namespace n_USlateSettings { // : UObject
		constexpr auto bExplicitCanvasChildZOrder = 0x30; // bool
	}

	namespace n_USynthSamplePlayer { // : USynthComponent
		constexpr auto SoundWave = 0x6f0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6f8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x708; // FMulticastInlineDelegate
	}

	namespace n_UDBDPawnSensingComponent { // : UPawnSensingComponent
		constexpr auto bSenseEverywhere = 0x100; // bool
		constexpr auto PartiallyHiddenSensingDistance = 0x104; // float
	}

	namespace n_UDynamicCapsuleResizerComponent { // : UActorComponent
		constexpr auto _capsule = 0xb8; // UCapsuleComponent*
		constexpr auto _shrinkPercent = 0xd4; // float
		constexpr auto _shrinkDuration = 0xd8; // float
		constexpr auto _expandDuration = 0xdc; // float
		constexpr auto _stayShrunkenDuration = 0xe0; // float
		constexpr auto _expandOverlapTestMinDeltaTime = 0xe4; // float
		constexpr auto _isShrinkingEnabled = 0xe8; // bool
		constexpr auto _isShrinkingAlwaysEnabled = 0xe9; // bool
	}

	namespace n_UUMGLobbySearchingWidget { // : UUMGLoadoutBaseWidget
		constexpr auto BankAndPlayerInfoWidget = 0x358; // UUMGBankAndPlayerInfoWidget*
		constexpr auto ItemOrPowerText = 0x360; // FText
		constexpr auto AddonText = 0x378; // FText
		constexpr auto OfferingText = 0x390; // FText
		constexpr auto PerksText = 0x3a8; // FText
		constexpr auto TextWaitingForPlayers = 0x3c0; // FText
		constexpr auto TextEstimatedTimeTitle = 0x3d8; // FText
		constexpr auto ButtonCancelSearching = 0x3f0; // UButton*
		constexpr auto PartySlots = 0x3f8; // UUMGPartySlotsWidget*
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0x98; // char : 1
		constexpr auto bFadeAudio = 0x98; // char : 1
		constexpr auto FadeColor = 0x9c; // FLinearColor
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x40; // UParticleSystem*
		constexpr auto LocationOffset = 0x48; // FVector
		constexpr auto RotationOffset = 0x54; // FRotator
		constexpr auto Scale = 0x60; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_UAutomaticBlinkInteraction { // : UBaseInstantBlinkInteraction
		constexpr auto _blinkDistancePercent = 0x5d8; // float
	}

	namespace n_UBP_Audio_KLR_03_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionArcsineFast { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UWidgetAnimationDelegateBinding { // : UDynamicBlueprintBinding
		constexpr auto WidgetAnimationDelegateBindings = 0x30; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UAddon_TheBlight_14 { // : UItemAddon
		constexpr auto _speedIncreasePerDash = 0x298; // float
	}

	namespace n_UCoreTutorialObjectivesContainer { // : UCoreBaseHudWidget
		constexpr auto CoreTutorialObjectiveItemClass = 0x2f8; // UCoreTutorialObjectiveItem*
		constexpr auto BasePooledInstanceAmount = 0x300; // int32_t
		constexpr auto ObjectiveContainer = 0x308; // UGridPanel*
		constexpr auto _objectivePool = 0x310; // TArray<UCoreTutorialObjectiveItem*>
		constexpr auto _objectiveItems = 0x320; // TMap<FName, UCoreTutorialObjectiveItem*>
	}

	namespace n_ULevelSequenceBurnIn { // : UUserWidget
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x320; // ALevelSequenceActor*
	}

	namespace n_ABP_Menu_Slasher12_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_13 = 0x698; // UBP_Audio_KLR_12_C*
		constexpr auto Arrow1 = 0x6a0; // UArrowComponent*
	}

	namespace n_UBP_Audio_KLR_13_C { // : UBP_Audio_KLR_Base_C
		constexpr auto AudioStatusStartMenuEvent = 0xf0; // UAkAudioEvent*
	}

	namespace n_UUMGTallyPipsContainer { // : UMobileBaseUserWidget
		constexpr auto PipsContainer = 0x300; // UHorizontalBox*
		constexpr auto _pipsClasses = 0x308; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _pipsPadding = 0x318; // FMargin
		constexpr auto Pips = 0x328; // TArray<UUMGTallyPip*>
	}

	namespace n_ASlasherPlayer { // : ADBDPlayer
		constexpr auto OnOffensiveAction = 0x1118; // FMulticastInlineDelegate
		constexpr auto PutDownTraceLocation = 0x1128; // FVector
		constexpr auto DefaultSlasherPower = 0x1134; // FName
		constexpr auto LoudNoiseDisplayTime = 0x1140; // float
		constexpr auto TargetPriorityFactor = 0x1144; // FVector
		constexpr auto ShouldDisplayAttackZones = 0x1150; // bool
		constexpr auto CamperExposer = 0x1158; // ACamperExposerInstance*
		constexpr auto KillerMoodInfluence = 0x1160; // EKillerMoodInfluence
		constexpr auto KillerAbilities = 0x1168; // TArray<EKillerAbilities>
		constexpr auto KillerSoundCuesComponent = 0x1178; // UKillerSoundCuesComponent*
		constexpr auto ShowKillerPowerDebugInfo = 0x1180; // bool
		constexpr auto HasDamagedGeneratorSinceHook = 0x1181; // bool
		constexpr auto OnStalkModeChangedEvent = 0x1188; // FMulticastInlineDelegate
		constexpr auto _audioComponent = 0x11b0; // TWeakObjectPtr<UAkComponent>
		constexpr auto _terrorNavModifierComponent = 0x11b8; // UDBDNavModifierComponent*
		constexpr auto _bloodFXComponent = 0x11c0; // UKillerBloodFXComponent*
		constexpr auto _slasherLightIntensity = 0x11c8; // float
		constexpr auto _defaultAmountToSquish = 0x11cc; // float
		constexpr auto _stalkTimers = 0x11d8; // TMap<ADBDPlayer*, FTargetFocusTimer>
		constexpr auto _stillnessTracker = 0x1228; // UStillnessTrackerComponent*
		constexpr auto _aimAssistComponent = 0x1230; // UAimAssistComponent*
		constexpr auto _recentlyCloakedTimer = 0x1238; // FDBDTimer
		constexpr auto _flashlightBlindEvasionScoreTimer = 0x1260; // FDBDTimer
		constexpr auto _flashlightBurnoutEvasionScoreTimer = 0x1288; // FDBDTimer
		constexpr auto _predictedCamperHitMontages = 0x12b0; // TMap<ADBDPlayer*, FAnimationMontageDescriptor>
		constexpr auto _terrorRadiusEmitter = 0x1308; // USlasherTREmitterComponent*
		constexpr auto _loudNoiseIndicator = 0x1318; // ULoudNoiseHUDIndicator*
		constexpr auto _hitsWhileCarryingTracker = 0x1320; // USlasherHitsWhileCarryingTrackerComponent*
		constexpr auto _stealthIncreaseRate = 0x1328; // float
		constexpr auto _stealthDecreaseRate = 0x132c; // float
		constexpr auto _stillnessStartTime = 0x1330; // FDateTime
		constexpr auto _isInStalkMode = 0x13a0; // FTagStateBool
		constexpr auto _isKilling = 0x1490; // bool
		constexpr auto _allowedKillCount = 0x1491; // int8_t
		constexpr auto _allowedKillAfterStrugglePhase = 0x1492; // int8_t
		constexpr auto _allowedKillLastSurvivor = 0x1493; // bool
		constexpr auto _cachedBloodlustTier = 0x149c; // int32_t
		constexpr auto _killerPowerDebugFlags = 0x14a8; // uint32_t
		constexpr auto _presenceTag = 0x14ac; // FGameplayTag
		constexpr auto _persistantStateTags = 0x14b8; // FGameplayTagContainer
		constexpr auto _animGameplayTags = 0x14d8; // FGameplayTagContainer
		constexpr auto _enableKillerCrouchInput = 0x14f8; // bool
		constexpr auto _canStartAttackWhileCrouched = 0x14f9; // bool
		constexpr auto _carriedCamper = 0x1500; // ACamperPlayer*
		constexpr auto _moriComponent = 0x1508; // UMoriComponent*
		constexpr auto _hitValidator = 0x1510; // UHitValidatorComponent*
		constexpr auto _hitValidationConfigurator = 0x1518; // UHitValidatorConfigurator*
		constexpr auto _attackerComponent = 0x1520; // UDBDAttackerComponent*
		constexpr auto _basicAttackType = 0x1538; // EAttackType
		constexpr auto _armIKSensorComponent = 0x1540; // UArmIKSensorComponent*
		constexpr auto _survivorBeingKilled = 0x1548; // ACamperPlayer*
		constexpr auto _firstPersonViewComponent = 0x1568; // UFirstPersonViewComponent*
		constexpr auto _killerIntroComponent = 0x1570; // UKillerIntroComponent*
		constexpr auto _blindingFXComponent = 0x1578; // UKillerBlindingFXComponent*
		constexpr auto _redStainUpdateStrategy = 0x1588; // UKillerRedStainUpdateStrategy*
		constexpr auto _squishFactorParameter = 0x1590; // FName
		constexpr auto _attackZonePivot = 0x15a0; // USceneComponent*
		constexpr auto _slasherStunnableComponent = 0x15a8; // USlasherStunnableComponent*
		constexpr auto _turnInPlaceThresholdAngle = 0x15b0; // float
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x30; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x40; // int32_t
	}

	namespace n_UNiagaraEmitter { // : UObject
		constexpr auto bLocalSpace = 0x30; // bool
		constexpr auto bDeterminism = 0x31; // bool
		constexpr auto RandomSeed = 0x34; // int32_t
		constexpr auto AllocationMode = 0x38; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x3c; // int32_t
		constexpr auto UpdateScriptProps = 0x40; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x68; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterSpawnScriptProps = 0x90; // FNiagaraEmitterScriptProperties
		constexpr auto EmitterUpdateScriptProps = 0xb8; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0xe0; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0xe4; // FBox
		constexpr auto MinDetailLevel = 0x100; // int32_t
		constexpr auto MaxDetailLevel = 0x104; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0x108; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0x120; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0x140; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x150; // char : 1
		constexpr auto bFixedBounds = 0x150; // char : 1
		constexpr auto bUseMinDetailLevel = 0x150; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x150; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x150; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x150; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x154; // float
		constexpr auto DefaultShaderStageIndex = 0x158; // uint32_t
		constexpr auto MaxUpdateIterations = 0x15c; // uint32_t
		constexpr auto SpawnStages = 0x160; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x1b0; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x1b0; // char : 1
		constexpr auto bLimitDeltaTime = 0x1b0; // char : 1
		constexpr auto UniqueEmitterName = 0x1b8; // FString
		constexpr auto RendererProperties = 0x1c8; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x1d8; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1e8; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1f8; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x200; // TArray<FName>
	}

	namespace n_UAISkill_Find { // : UAISkill
		constexpr auto FindClass = 0xc0; // AActor*
		constexpr auto BlackboardWishListTag = 0xc8; // FGameplayTag
		constexpr auto SearchInterval = 0xd4; // float
		constexpr auto MustBeSeen = 0xd8; // bool
		constexpr auto _currentWishedObjects = 0xe0; // TArray<UObject*>
	}

	namespace n_USpinBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto SpinBoxStyle = 0x38; // FSpinBoxStyle
	}

	namespace n_UMovieSceneIntegerSection { // : UMovieSceneSection
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_AAkSpatialAudioVolume { // : AVolume
		constexpr auto SurfaceReflectorSet = 0x268; // UAkSurfaceReflectorSetComponent*
		constexpr auto LateReverb = 0x270; // UAkLateReverbComponent*
		constexpr auto Room = 0x278; // UAkRoomComponent*
	}

	namespace n_UScrollBox { // : UPanelWidget
		constexpr auto WidgetStyle = 0x140; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x388; // FScrollBarStyle
		constexpr auto Style = 0x8a0; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x8a8; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x8b0; // EOrientation
		constexpr auto ScrollBarVisibility = 0x8b1; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x8b2; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x8b4; // FVector2D
		constexpr auto ScrollbarPadding = 0x8bc; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x8cc; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x8cd; // bool
		constexpr auto AllowOverscroll = 0x8ce; // bool
		constexpr auto bAnimateWheelScrolling = 0x8cf; // bool
		constexpr auto NavigationDestination = 0x8d0; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x8d4; // float
		constexpr auto ScrollWhenFocusChanges = 0x8d8; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x8d9; // bool
		constexpr auto WheelScrollMultiplier = 0x8dc; // float
		constexpr auto OnUserScrolled = 0x8e0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0x48; // FExpressionInput
		constexpr auto Time = 0x64; // FExpressionInput
		constexpr auto CenterX = 0x80; // float
		constexpr auto CenterY = 0x84; // float
		constexpr auto Speed = 0x88; // float
		constexpr auto ConstCoordinate = 0x8c; // uint32_t
	}

	namespace n_UMovieSceneStringSection { // : UMovieSceneSection
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_ANavMeshBoundsVolume { // : AVolume
		constexpr auto SupportedAgents = 0x268; // FNavAgentSelector
	}

	namespace n_UUntrap { // : UChargeableInteractionDefinition
		constexpr auto _overridableInteractions = 0x6d8; // TArray<FString>
		constexpr auto _bearTrapUpdateMontageID = 0x6e8; // FName
		constexpr auto _bearTrapFinishMontageID = 0x6f4; // FName
	}

	namespace n_UMultiLineEditableText { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto HintText = 0x160; // FText
		constexpr auto HintTextDelegate = 0x178; // FDelegate
		constexpr auto WidgetStyle = 0x190; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x418; // bool
		constexpr auto Font = 0x420; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x478; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x479; // bool
		constexpr auto RevertTextOnEscape = 0x47a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x47b; // bool
		constexpr auto AllowContextMenu = 0x47c; // bool
		constexpr auto VirtualKeyboardOptions = 0x47d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x47e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x480; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x490; // FMulticastInlineDelegate
	}

	namespace n_USlider { // : UWidget
		constexpr auto value = 0x128; // float
		constexpr auto ValueDelegate = 0x12c; // FDelegate
		constexpr auto MinValue = 0x140; // float
		constexpr auto MaxValue = 0x144; // float
		constexpr auto WidgetStyle = 0x148; // FSliderStyle
		constexpr auto Orientation = 0x4b8; // EOrientation
		constexpr auto SliderBarColor = 0x4bc; // FLinearColor
		constexpr auto SliderHandleColor = 0x4cc; // FLinearColor
		constexpr auto IndentHandle = 0x4dc; // bool
		constexpr auto locked = 0x4dd; // bool
		constexpr auto MouseUsesStep = 0x4de; // bool
		constexpr auto RequiresControllerLock = 0x4df; // bool
		constexpr auto StepSize = 0x4e0; // float
		constexpr auto IsFocusable = 0x4e4; // bool
		constexpr auto OnMouseCaptureBegin = 0x4e8; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x508; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x518; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x528; // FMulticastInlineDelegate
	}

	namespace n_UAkXSXInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x90; // FAkXSXApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkXSXAdvancedInitializationSettings
	}

	namespace n_UGeometryCollectionCache { // : UObject
		constexpr auto RecordedData = 0x30; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x40; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x48; // FGuid
	}

	namespace n_UEndpointSubmix { // : USoundSubmixBase
		constexpr auto EndpointType = 0x40; // FName
		constexpr auto EndpointSettingsClass = 0x50; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x58; // UAudioEndpointSettingsBase*
	}

	namespace n_UAkSurfaceReflectorSetComponent { // : USceneComponent
		constexpr auto bEnableSurfaceReflectors = 0x210; // char : 1
		constexpr auto AcousticPolys = 0x218; // TArray<FAkPoly>
		constexpr auto bEnableDiffraction = 0x228; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x228; // char : 1
		constexpr auto AssociatedRoom = 0x230; // AActor*
	}

	namespace n_UCoreTabWidget { // : UCoreSelectableButtonWidget
		constexpr auto TabTextField = 0x3c0; // UDBDTextBlock*
		constexpr auto TabImage = 0x3c8; // UDBDImage*
	}

	namespace n_UMovieSceneCameraAnimSection { // : UMovieSceneSection
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UVomitStateComponent { // : UActorComponent
		constexpr auto _isCharging = 0xc0; // FTagStateBool
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor { // : UBTDecorator
		constexpr auto ActorToCheck = 0x70; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0xa0; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0xa8; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xc8; // FString
	}

	namespace n_UBaseKillerAnimInstance { // : UPlayerAnimInstance
		constexpr auto _owningKiller = 0x4e8; // ASlasherPlayer*
		constexpr auto _firstPersonView = 0x4f0; // bool
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV { // : UMaterialExpression
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_UAnimNotify_PlayNiagaraEffect { // : UAnimNotify
		constexpr auto Template = 0x40; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x48; // FVector
		constexpr auto RotationOffset = 0x54; // FRotator
		constexpr auto Scale = 0x60; // FVector
		constexpr auto Attached = 0x90; // char : 1
		constexpr auto SocketName = 0x94; // FName
	}

	namespace n_UAISkill_InteractionTarget_StealthGhost { // : UAISkill_InteractionTarget
		constexpr auto CrouchSwapDelay = 0x220; // float
	}

	namespace n_UTricksterAnimInstance { // : UKillerAnimInstance
		constexpr auto _isAiming = 0x5a8; // bool
		constexpr auto _isThrowInputPressed = 0x5ac; // float
		constexpr auto _isThrowingWithLeftArm = 0x5b0; // bool
		constexpr auto _isThrowingWithRightArm = 0x5b1; // bool
		constexpr auto _throwPlayRate = 0x5b4; // float
		constexpr auto _baseThrowDuration = 0x5b8; // float
		constexpr auto _consecutiveKnivesThrownStacks = 0x5bc; // int32_t
		constexpr auto _timeSinceLastKnifeLaunched = 0x5c0; // float
		constexpr auto _currentAmmoCount = 0x5c4; // int32_t
		constexpr auto _isInSuperMode = 0x5c8; // bool
		constexpr auto _isInActivation = 0x5c9; // bool
		constexpr auto _activationDuration = 0x5cc; // float
		constexpr auto _isInDeactivation = 0x5d0; // bool
		constexpr auto _deactivationDuration = 0x5d4; // float
		constexpr auto _throwingKnives = 0x610; // AThrowingKnives*
	}

	namespace n_AZombieCharacter { // : ACharacter
		constexpr auto _zombieWalkSpeed = 0x4f0; // FTunableStat
		constexpr auto _poolableComponent = 0x578; // UAuthoritativePoolableActorComponent*
		constexpr auto _zombieAttackDetector = 0x580; // USphereComponent*
		constexpr auto _attackDamageZone = 0x588; // UStaticMeshComponent*
		constexpr auto _zombieState = 0x590; // EZombieState
		constexpr auto _zombieRespawnTimeKilledBySlasher = 0x5d0; // FTunableStat
		constexpr auto _zombieRespawnTimeKilledBySurvivor = 0x650; // FTunableStat
		constexpr auto _respawnPositionBehindGate = 0x6e0; // FTransform
		constexpr auto _zombieGender = 0x710; // EZombieGender
		constexpr auto _femaleSkeletalMesh = 0x718; // USkeletalMesh*
		constexpr auto _audioSwitchState = 0x720; // FString
		constexpr auto _blindableComponent = 0x730; // UZombieBlindableComponent*
		constexpr auto _blindingChargeableComponent = 0x738; // UChargeableComponent*
		constexpr auto _firecrackerEffectHandlerComponent = 0x740; // UFirecrackerEffectHandlerComponent*
		constexpr auto _flashLightableComponent = 0x748; // UFlashlightableComponent*
		constexpr auto _zombieStunBaseTime = 0x788; // FDBDTunableRowHandle
		constexpr auto _objectState = 0x7b0; // UGameplayTagContainerComponent*
		constexpr auto _positionRecorder = 0x7c0; // UCharacterPositionRecorderComponent*
		constexpr auto _authoritativeMovementComponent = 0x7c8; // UAuthoritativeMovementComponent*
		constexpr auto _otherCharactersVerticalCollisionsHandler = 0x7d0; // UOtherCharactersVerticalCollisionsHandler*
		constexpr auto _ignoreActors = 0x7d8; // TArray<AActor*>
		constexpr auto _zombieStunnedCapsuleRadius = 0x7ec; // float
		constexpr auto _minFallHeight = 0x7f0; // float
		constexpr auto _afterInAirAttackCooldown = 0x7fc; // float
	}

	namespace n_UDBD_SoundClipUtil { // : UActorComponent
		constexpr auto AudioMap = 0xb8; // TArray<FMapMeshToAkAudioEvent>
		constexpr auto _audioEventMap = 0xc8; // TMap<FName, FMapMeshToAkAudioEvent>
		constexpr auto _objectsWhoHavePlayedASound = 0x118; // TArray<FMapSoundsToAvoid>
		constexpr auto _nextSoundPlayTime = 0x128; // TMap<UAkAudioEvent*, float>
	}

	namespace n_UK26CrowAttachmentSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _hasCrowAttached = 0x4f0; // bool
		constexpr auto _isRemovingCrow = 0x4f1; // bool
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto action = 0x30; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x34; // float
	}

	namespace n_UAnimationSettings { // : UDeveloperSettings
		constexpr auto CompressCommandletVersion = 0x48; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x50; // TArray<FString>
		constexpr auto ForceRecompression = 0x60; // bool
		constexpr auto bOnlyCheckForMissingSkeletalMeshes = 0x61; // bool
		constexpr auto bForceBelowThreshold = 0x62; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x63; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x64; // bool
		constexpr auto bEnablePerformanceLog = 0x65; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x66; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x67; // bool
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput { // : UMaterialExpressionCustomOutput
		constexpr auto ScatteringCoefficients = 0x48; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x64; // FExpressionInput
		constexpr auto PhaseG = 0x80; // FExpressionInput
	}

	namespace n_ASkyAtmosphere { // : AInfo
		constexpr auto SkyAtmosphereComponent = 0x230; // USkyAtmosphereComponent*
	}

	namespace n_UUMGAtlantaBonusACEventTemplate { // : UUMGAtlantaBaseEventsTemplate
		constexpr auto currencyStorefrontWidget = 0x300; // UUMGAtlCurrencyStorefrontWidget*
		constexpr auto LastPackSmallIconPath = 0x308; // FString
		constexpr auto InitialSize = 0x318; // float
		constexpr auto AugmentedSize = 0x31c; // float
		constexpr auto MaxNumberOfPacksToShowBigger = 0x320; // int32_t
	}

	namespace n_UAB_Menu_Slasher20_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_UScreamSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _screamTrigger = 0x4f0; // bool
	}

	namespace n_UDataAsset { // : UObject
		constexpr auto NativeClass = 0x30; // UDataAsset*
	}

	namespace n_UAudioSettings { // : UDeveloperSettings
		constexpr auto DefaultSoundClassName = 0x48; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x68; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x88; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0xa8; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0xc8; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xe8; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0x108; // FSoftObjectPath
		constexpr auto EQSubmix = 0x128; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0x148; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0x14c; // float
		constexpr auto MaximumConcurrentStreams = 0x150; // int32_t
		constexpr auto GlobalMinPitchScale = 0x154; // float
		constexpr auto GlobalMaxPitchScale = 0x158; // float
		constexpr auto QualityLevels = 0x160; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x170; // char : 1
		constexpr auto bDisableMasterEQ = 0x170; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x170; // char : 1
		constexpr auto NumStoppingSources = 0x174; // uint32_t
		constexpr auto PanningMethod = 0x178; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x179; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x180; // FString
	}

	namespace n_UPostProcessComponent { // : USceneComponent
		constexpr auto Settings = 0x220; // FPostProcessSettings
		constexpr auto Priority = 0x760; // float
		constexpr auto BlendRadius = 0x764; // float
		constexpr auto BlendWeight = 0x768; // float
		constexpr auto bEnabled = 0x76c; // char : 1
		constexpr auto bUnbound = 0x76c; // char : 1
	}

	namespace n_UParticleModuleAttractorPointGravity { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x38; // FVector
		constexpr auto Radius = 0x44; // float
		constexpr auto Strength = 0x48; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x50; // FRawDistributionFloat
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x50; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x60; // TMap<UCameraShake*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xb0; // float
	}

	namespace n_AOnlineBeaconHostObject { // : AActor
		constexpr auto BeaconTypeName = 0x230; // FString
		constexpr auto ClientBeaconActorClass = 0x240; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x248; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UUMGExpandableListWidget { // : UMobileBaseUserWidget
		constexpr auto ShouldHideExpandableListIfEmpty = 0x300; // bool
		constexpr auto IsExtendedAtStart = 0x301; // bool
		constexpr auto ExpansionButton = 0x308; // UUMGBaseButtonWidget*
		constexpr auto ItemContainer = 0x310; // UVerticalBox*
		constexpr auto CategorieName = 0x318; // UTextBlock*
		constexpr auto itemCount = 0x320; // UTextBlock*
		constexpr auto ExpandableArea = 0x328; // UExpandableArea*
		constexpr auto HeaderTitle = 0x330; // FText
		constexpr auto _childWidgets = 0x350; // TArray<UUserWidget*>
	}

	namespace n_UCamperBloodTrailComponent { // : UBloodTrailComponent
		constexpr auto _camperPerkManager = 0x240; // UPerkManager*
	}

	namespace n_AFlickeringLight { // : AGeneratorDrivenActor
		constexpr auto _lightComponentType = 0x258; // FlickeringLightType
		constexpr auto _detailLevelBeforeCastShadows = 0x25c; // EDetailMode
		constexpr auto _castShadow = 0x25d; // FPerPlatformBool
		constexpr auto _isCastingShadow = 0x260; // FBHVRPerDetailModeBool
		constexpr auto _maxDrawDistance = 0x300; // FBHVRPerDetailModeFloat
		constexpr auto _maxDistanceFadeRange = 0x3a0; // FBHVRPerDetailModeFloat
		constexpr auto _castCinematicShadowsOnly = 0x440; // FBHVRPerDetailModeBool
		constexpr auto _innerConneAngle = 0x4e0; // float
		constexpr auto _outerConneAngle = 0x4e4; // float
		constexpr auto _sourceLength = 0x4e8; // float
		constexpr auto _sourceRadius = 0x4ec; // float
		constexpr auto _intensity = 0x4f0; // float
		constexpr auto _generatorActivated = 0x4f4; // bool
		constexpr auto _isTimelineSpeedRandom = 0x4f5; // bool
		constexpr auto _maximumTimelimeSpeed = 0x4f8; // float
		constexpr auto _minimumTimelimeSpeed = 0x4fc; // float
		constexpr auto _secondaryLightVisibility = 0x500; // FBHVRPerDetailModeBool
		constexpr auto _secondaryLightIntensity = 0x5a0; // float
		constexpr auto _secondaryLightTransform = 0x5a4; // FVector
		constexpr auto _secondaryLightRotation = 0x5b0; // FRotator
		constexpr auto _secondaryLightAttenuationRadius = 0x5bc; // float
		constexpr auto _secondaryLightColor = 0x5c0; // FLinearColor
		constexpr auto _secondaryLightSpecularScale = 0x5d0; // float
		constexpr auto _isAlwaysCapturedAsON = 0x5d4; // char : 1
		constexpr auto _lightIntensityTimeline = 0x5d8; // ULightIntensityTimelineComponent*
		constexpr auto _pointLightComponent = 0x5e0; // UPointLightComponent*
		constexpr auto _secondaryPointLightComponent = 0x5e8; // UPointLightComponent*
		constexpr auto _rectLightComponent = 0x5f0; // URectLightComponent*
		constexpr auto _spotLightComponent = 0x5f8; // USpotLightComponent*
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x38; // FRawDistributionFloat
		constexpr auto Scale = 0x68; // char : 1
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x50; // TArray<float>
	}

	namespace n_UHillbillyOverheatPresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _hillbillyChainsawOverheatComponent = 0xb8; // UHillbillyChainsawOverheatComponent*
	}

	namespace n_UUMGToastNotificationScreen { // : UMobileBaseUserWidget
		constexpr auto NotificationToast = 0x300; // TSoftClassPtr<UObject>
		constexpr auto InvitationPartyToast = 0x330; // TSoftClassPtr<UObject>
		constexpr auto ToastsContainer = 0x360; // UVerticalBox*
		constexpr auto _toastsDisplayedOnScreen = 0x398; // TMap<uint32_t, UUMGBaseToastWidget*>
	}

	namespace n_UMadgrit { // : UPerk
		constexpr auto _slashHittingSpeedCurve = 0x3d0; // UCurveFloat*
	}

	namespace n_UDemonModeComponent { // : UActorComponent
		constexpr auto OnDemonModeReady = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnDemonModeStarted = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnDemonModeEnded = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnDemonModeInterruptedDuringStartup = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnDemonModeInterruptedDuringEnding = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnChargeGainedAfterAttackCosmetic = 0x108; // FMulticastInlineDelegate
		constexpr auto OnChargeGainedAfterLockerGrabCosmetic = 0x118; // FMulticastInlineDelegate
		constexpr auto _powerChargeComponent = 0x128; // UPowerChargeComponent*
		constexpr auto _powerToggleComponent = 0x130; // UPowerToggleComponent*
		constexpr auto _authority_demonModeCooldownStarterComponent = 0x138; // UInteractionStarterComponent*
		constexpr auto _demonModeCooldownInteraction = 0x140; // UInteractionDefinition*
		constexpr auto _demonModeState = 0x17c; // EDemonModeState
	}

	namespace n_UBlueprint { // : UBlueprintCore
		constexpr auto ParentClass = 0x58; // UObject*
		constexpr auto BlueprintType = 0x60; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x61; // char : 1
		constexpr auto bHasBeenRegenerated = 0x61; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x61; // char : 1
		constexpr auto BlueprintSystemVersion = 0x64; // int32_t
		constexpr auto SimpleConstructionScript = 0x68; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x70; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x80; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x90; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0xa0; // UInheritableComponentHandler*
	}

	namespace n_UTwinBaseKillerInstinctEffect { // : UStatusEffect
		constexpr auto _lullabyRange = 0x350; // FTunableStat
		constexpr auto _lingerDuration = 0x3d0; // FDBDTunableRowHandle
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x30; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UBTService { // : UBTAuxiliaryNode
		constexpr auto Interval = 0x68; // float
		constexpr auto RandomDeviation = 0x6c; // float
		constexpr auto bCallTickOnSearchStart = 0x70; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x70; // char : 1
	}

	namespace n_UWhiteGlyphBasementComponent { // : UActorComponent
		constexpr auto OnReadyForInteraction = 0xd0; // FMulticastInlineDelegate
		constexpr auto _basementGlyphInteractionCoolDownTime = 0xe0; // float
	}

	namespace n_UConsole { // : UObject
		constexpr auto ConsoleTargetPlayer = 0x40; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x48; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x50; // UTexture2D*
		constexpr auto HistoryBuffer = 0x70; // TArray<FString>
	}

	namespace n_USourceEffectStereoDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x84; // FSourceEffectStereoDelaySettings
	}

	namespace n_UEnvQueryTest_GameplayTags { // : UEnvQueryTest
		constexpr auto TagQueryToMatch = 0x238; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x280; // bool
		constexpr auto TagsToMatch = 0x281; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x288; // FGameplayTagContainer
	}

	namespace n_AMagicFountain { // : AInteractable
		constexpr auto AIInteractionOffset = 0x330; // FVector
	}

	namespace n_UUMGAtlantaCreditsPopup { // : UMobileBaseUserWidget
		constexpr auto RichTitleText = 0x300; // UUMGHtmlRichText*
		constexpr auto RichContentText = 0x308; // UUMGHtmlRichText*
		constexpr auto _titleDefaultStyle = 0x310; // FString
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x30; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x38; // UInterpGroupInst*
		constexpr auto PlayRate = 0x58; // float
		constexpr auto MoveTrack = 0x70; // UInterpTrackMove*
		constexpr auto MoveInst = 0x78; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x80; // ECameraAnimPlaySpace
	}

	namespace n_UPowerToggleComponent { // : UActorComponent
		constexpr auto _isInPower = 0xd0; // bool
	}

	namespace n_AAtmosphericFog { // : AInfo
		constexpr auto AtmosphericFogComponent = 0x230; // UAtmosphericFogComponent*
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x38; // FRawDistributionVector
	}

	namespace n_UDBDDesignTunables { // : UObject
		constexpr auto WinStreakThresholdLarge = 0x30; // int32_t
		constexpr auto WinStreakThresholdSmall = 0x34; // int32_t
		constexpr auto MaxFearTokens = 0x38; // int32_t
		constexpr auto QuantityOfItemsToBuyBeforeFreeBloodwebRefresh = 0x3c; // int32_t
		constexpr auto PerkLevelDefinitions = 0x40; // TArray<FPerkLevelDefinition>
		constexpr auto MetaModifiers = 0x50; // TSet<FGameplayTag>
		constexpr auto RangedSurvivorAuraPerceptionModifiers = 0xa0; // TSet<FGameplayTag>
		constexpr auto SurvivorRevelatoryAuraPerceptionModifiers = 0xf0; // TSet<FGameplayTag>
		constexpr auto DisruptableAuraReadingFlags = 0x140; // TSet<FGameplayTag>
		constexpr auto ShouldUseKillerLobby = 0x190; // bool
		constexpr auto TextDesignTunableClass = 0x198; // TSoftClassPtr<UObject>
		constexpr auto TextTunables = 0x1c8; // UDBDTextDesignTunables*
		constexpr auto CoreUMGDesignTunableClass = 0x1d0; // TSoftClassPtr<UObject>
		constexpr auto CoreUMGDesignTunables = 0x200; // UDBDCoreUMGDesignTunables*
		constexpr auto AtlantaDesignTunableClass = 0x208; // TSoftClassPtr<UObject>
		constexpr auto AtlantaDesignTunables = 0x238; // UDBDAtlantaDesignTunables*
	}

	namespace n_UAISkill_InteractionBreakFreeFromChains { // : UAISkill_Interaction
		constexpr auto _breakFreeFromChainsMaxCharge = 0x170; // FDBDTunableRowHandle
	}

	namespace n_UCollectableCollection { // : UActorComponent
		constexpr auto _collectables = 0xb8; // TArray<ACollectable*>
	}

	namespace n_UBehaviorTree { // : UObject
		constexpr auto RootNode = 0x38; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x40; // UBlackboardData*
		constexpr auto RootDecorators = 0x48; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x58; // TArray<FBTDecoratorLogic>
	}

	namespace n_UOnlinePIESettings { // : UDeveloperSettings
		constexpr auto bOnlinePIEEnabled = 0x48; // bool
		constexpr auto Logins = 0x50; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0x48; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x50; // FMaterialParameterInfo
	}

	namespace n_UCoreInteractionPromptWidget { // : UUserWidget
		constexpr auto LargeTextScale = 0x260; // float
		constexpr auto LargeTextScaleBox = 0x268; // UScaleBox*
		constexpr auto ActionTB = 0x270; // UDBDTextBlock*
		constexpr auto _textManager = 0x278; // UDBDTextManager*
	}

	namespace n_UUITweenMaterialScalarProperties { // : UObject
		constexpr auto MaterialInstance = 0x30; // UMaterialInstanceDynamic*
	}

	namespace n_AChatManager { // : AActor
		constexpr auto _gameInstance = 0x230; // UDBDGameInstance*
	}

	namespace n_USocialToolkit { // : UObject
		constexpr auto LocalUser = 0x68; // USocialUser*
		constexpr auto AllUsers = 0x70; // TArray<USocialUser*>
		constexpr auto LocalPlayerOwner = 0xd0; // ULocalPlayer*
		constexpr auto SocialChatManager = 0xd8; // USocialChatManager*
	}

	namespace n_UGeometryCacheComponent { // : UMeshComponent
		constexpr auto GeometryCache = 0x478; // UGeometryCache*
		constexpr auto bRunning = 0x480; // bool
		constexpr auto bLooping = 0x481; // bool
		constexpr auto StartTimeOffset = 0x484; // float
		constexpr auto PlaybackSpeed = 0x488; // float
		constexpr auto NumTracks = 0x48c; // int32_t
		constexpr auto ElapsedTime = 0x490; // float
		constexpr auto Duration = 0x4c4; // float
		constexpr auto bManualTick = 0x4c8; // bool
	}

	namespace n_UEmblemTooltipWidget { // : UBaseTooltipWidget
		constexpr auto HeaderBackground = 0x338; // UImage*
		constexpr auto SubTitleLabel = 0x340; // UTextBlock*
		constexpr auto HeaderSmoke = 0x348; // UImage*
		constexpr auto DataContainer = 0x350; // UVerticalBox*
		constexpr auto TallyEmblemProgressBar = 0x358; // UUMGTallyEmblemProgressBar*
		constexpr auto ProgressionDataWidgetClass = 0x360; // TSoftClassPtr<UObject>
	}

	namespace n_UUMGAtlantaGenericEventTemplate { // : UUMGAtlantaBaseEventsTemplate
		constexpr auto RelatedItemsBox = 0x300; // UHorizontalBox*
		constexpr auto EventsElementWBPReference = 0x308; // UUMGAtlantaEventsElement*
		constexpr auto CustomizationWBPReference = 0x310; // UUMGPromoPackItemWidget*
		constexpr auto CharacterWBPReference = 0x318; // UUMGPromoPackItemWidget*
	}

	namespace n_UBaseModifierContainer { // : UActorComponent
		constexpr auto _id = 0xd8; // FName
		constexpr auto _eventDrivenConditionData = 0xe8; // FModifierReplicatedEventConditionData
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0x48; // TArray<FString>
		constexpr auto defaultValue = 0x58; // FLinearColor
		constexpr auto ParameterIndex = 0x68; // uint32_t
	}

	namespace n_USynthComponent { // : USceneComponent
		constexpr auto bAutoDestroy = 0x210; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x210; // char : 1
		constexpr auto bAllowSpatialization = 0x210; // char : 1
		constexpr auto bOverrideAttenuation = 0x210; // char : 1
		constexpr auto bOutputToBusOnly = 0x214; // char : 1
		constexpr auto AttenuationSettings = 0x218; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x220; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5c0; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5c8; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x618; // USoundClass*
		constexpr auto SourceEffectChain = 0x620; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x628; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x630; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x640; // TArray<FSoundSourceBusSendInfo>
		constexpr auto Modulation = 0x650; // FSoundModulation
		constexpr auto PreEffectBusSends = 0x660; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x670; // char : 1
		constexpr auto bIsPreviewSound = 0x670; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x674; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x678; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x680; // FMulticastInlineDelegate
		constexpr auto Synth = 0x6b0; // USynthSound*
		constexpr auto AudioComponent = 0x6b8; // UAudioComponent*
	}

	namespace n_UCoreGameManualPanelWidget { // : UCoreBaseUserWidget
		constexpr auto _currentSelectedManualMenu = 0x2e0; // EGameManualMenuState
		constexpr auto _currentGameManualTopic = 0x2e1; // EHelpType
		constexpr auto CategoryPanel = 0x2e8; // UPanelWidget*
		constexpr auto GameCategoryButton = 0x2f0; // UCoreGameManualCategoryButton*
		constexpr auto SurvivorCategoryButton = 0x2f8; // UCoreGameManualCategoryButton*
		constexpr auto KillerCategoryButton = 0x300; // UCoreGameManualCategoryButton*
		constexpr auto TopicsPanel = 0x308; // UPanelWidget*
		constexpr auto GameManualTopicsTabs = 0x310; // UCoreTabContainerWidget*
		constexpr auto GameManualContentTitle = 0x318; // UDBDTextBlock*
		constexpr auto GameManualContentSubtitle = 0x320; // UDBDTextBlock*
		constexpr auto GameManualContentText = 0x328; // UDBDRichTextBlock*
		constexpr auto _onSetOnboardingMenuSubtitleDelegate = 0x330; // FMulticastInlineDelegate
		constexpr auto _onResetOnboardingMenuSubtitleDelegate = 0x340; // FMulticastInlineDelegate
	}

	namespace n_UAnimStreamable { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xb0; // int32_t
		constexpr auto Interpolation = 0xb4; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb8; // FName
		constexpr auto BoneCompressionSettings = 0xd8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xe0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xe8; // bool
		constexpr auto RootMotionRootLock = 0xe9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xea; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xeb; // bool
	}

	namespace n_UTransformGizmo { // : UInteractiveGizmo
		constexpr auto ActiveTarget = 0x48; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x50; // bool
		constexpr auto bUseContextCoordinateSystem = 0x51; // bool
		constexpr auto CurrentCoordinateSystem = 0x54; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0xf0; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x110; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x130; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x138; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x140; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x168; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x170; // UGizmoScaledTransformSource*
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_USubmixEffectReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa4; // FSubmixEffectReverbSettings
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter { // : UMaterialExpressionScalarParameter
		constexpr auto Curve = 0x70; // UCurveLinearColor*
		constexpr auto Atlas = 0x78; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x80; // FExpressionInput
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x280; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x288; // UParticleSystem*
		constexpr auto BaseCamera = 0x290; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x2a0; // FTransform
		constexpr auto BaseFOV = 0x2d0; // float
		constexpr auto bAllowMultipleInstances = 0x2d4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x2d4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x2d8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x2e8; // float
	}

	namespace n_UMovieSceneBindingOverrides { // : UObject
		constexpr auto BindingData = 0x30; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x38; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x68; // char : 1
		constexpr auto UpdateMethod = 0x6c; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UPolyEditCutProperties { // : UInteractiveToolPropertySet
		constexpr auto Orientation = 0x58; // EPolyEditCutPlaneOrientation
		constexpr auto bSnapToVertices = 0x5c; // bool
	}

	namespace n_UUITweenInstance { // : UObject
		constexpr auto TweenCompletedDelegate = 0x30; // FMulticastInlineDelegate
		constexpr auto TweenUpdatedDelegate = 0x40; // FMulticastInlineDelegate
		constexpr auto _materialScalarProperties = 0xe8; // TArray<UUITweenMaterialScalarProperties*>
		constexpr auto _materialVectorProperties = 0xf8; // TArray<UUITweenMaterialVectorProperties*>
	}

	namespace n_UEditableTextBox { // : UWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextBoxStyle
		constexpr auto Style = 0x9b8; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x9c0; // FText
		constexpr auto HintTextDelegate = 0x9d8; // FDelegate
		constexpr auto Font = 0x9f0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xa48; // FLinearColor
		constexpr auto BackgroundColor = 0xa58; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xa68; // FLinearColor
		constexpr auto IsReadOnly = 0xa78; // bool
		constexpr auto IsPassword = 0xa79; // bool
		constexpr auto MinimumDesiredWidth = 0xa7c; // float
		constexpr auto Padding = 0xa80; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0xa90; // bool
		constexpr auto SelectAllTextWhenFocused = 0xa91; // bool
		constexpr auto RevertTextOnEscape = 0xa92; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0xa93; // bool
		constexpr auto SelectAllTextOnCommit = 0xa94; // bool
		constexpr auto AllowContextMenu = 0xa95; // bool
		constexpr auto KeyboardType = 0xa96; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0xa97; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa98; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa99; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa9a; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa9b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xaa0; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xab0; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0x48; // float
	}

	namespace n_UDecalSpawnerCollection { // : UObject
		constexpr auto _decalSpawners = 0x30; // TMap<FName, UDecalSpawner*>
	}

	namespace n_UTileSpawnPointSelector { // : USceneComponent
		constexpr auto _tileSpawnPoints = 0x210; // TArray<FSelectableTileSpawnPoint>
	}

	namespace n_UComboBox { // : UWidget
		constexpr auto Items = 0x128; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x138; // FDelegate
		constexpr auto bIsFocusable = 0x14c; // bool
	}

	namespace n_UChainLinkableComponent { // : UActorComponent
		constexpr auto _cameraTargetingStrategyClass = 0xd0; // UBaseCameraTargetingStrategy*
		constexpr auto _movementStatusEffectName = 0xd8; // FName
		constexpr auto _linkedStatusEffectName = 0xe4; // FName
		constexpr auto _inputAccelerationStrategy = 0xf0; // UPlayerReelInputAccelerationConstraintStrategy*
		constexpr auto _chainLink = 0xf8; // URiflePlayerLinker*
		constexpr auto _isLinkedLingering = 0x130; // FTagStateBool
		constexpr auto _movementStatusEffect = 0x160; // UChainPlayerMovementStatusEffect*
		constexpr auto _cameraStrategy = 0x170; // UBaseCameraTargetingStrategy*
	}

	namespace n_UBP_Audio_KLR_07_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UGizmoPlaneScaleParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_UBP_HandCursor_C { // : UCoreCursor
		constexpr auto Image_11 = 0x268; // UImage*
	}

	namespace n_UUMGCharacterSlideShowWidget { // : UMobileBaseUserWidget
		constexpr auto _perkCategoriesIcons = 0x300; // TMap<FName, TSoftObjectPtr<UTexture2D>>
		constexpr auto SecondsBeforeNextSlide = 0x350; // float
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_AOnlineBeacon { // : AActor
		constexpr auto BeaconConnectionInitialTimeout = 0x238; // float
		constexpr auto BeaconConnectionTimeout = 0x23c; // float
		constexpr auto NetDriver = 0x240; // UNetDriver*
	}

	namespace n_UPrimitiveCollection { // : UObject
		constexpr auto _primitives = 0x30; // TSet<TWeakObjectPtr<UPrimitiveComponent>>
	}

	namespace n_UBTTask_RotateToFaceBBEntry { // : UBTTask_BlackboardBase
		constexpr auto Precision = 0xa8; // float
	}

	namespace n_UHexPentimento { // : UHexPerk
		constexpr auto _statusEffectNames = 0x440; // TSet<FName>
		constexpr auto _rekindleInteractionClass = 0x490; // URekindleTotemInteraction*
		constexpr auto _blockedTotems = 0x498; // TArray<ATotem*>
	}

	namespace n_UBTCompositeNode { // : UBTNode
		constexpr auto Children = 0x60; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x70; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x90; // char : 1
	}

	namespace n_UCannibalChainsawPowerComponent { // : UActorComponent
		constexpr auto _chainsawPowerCharge = 0xc0; // UPowerChargeComponent*
		constexpr auto _chainsawPowerDischarge = 0xc8; // UPowerChargeComponent*
		constexpr auto _tantrumPowerCharge = 0xd0; // UPowerChargeComponent*
		constexpr auto _isInTantrum = 0x1a0; // FTagStateBool
		constexpr auto _numPowerCharges = 0x1d0; // int32_t
		constexpr auto _numPowerChargesConsumed = 0x1d4; // int32_t
		constexpr auto _chainsawDashDuration = 0x1e0; // FTunableStat
		constexpr auto _chainsawPowerMaxCharge = 0x260; // FTunableStat
		constexpr auto _chainsawChargeRate = 0x2e0; // FTunableStat
		constexpr auto _chainsawMaxNumberOfCharges = 0x360; // FTunableStat
		constexpr auto _chainsawCooldownIncreaseRate = 0x3e0; // FDBDTunableRowHandle
		constexpr auto _chainsawCooldownDuration = 0x408; // FTunableStat
		constexpr auto _chainsawMaxCooldownDuration = 0x488; // FDBDTunableRowHandle
		constexpr auto _tantrumChargeRate = 0x4b0; // FDBDTunableRowHandle
		constexpr auto _tantrumDischargeRate = 0x4d8; // FDBDTunableRowHandle
		constexpr auto _tantrumMaxCharge = 0x500; // FTunableStat
		constexpr auto _tantrumDurationIncreaseRate = 0x580; // FDBDTunableRowHandle
		constexpr auto _tantrumDuration = 0x5a8; // FTunableStat
		constexpr auto _tantrumMaxDuration = 0x628; // FTunableStat
	}

	namespace n_UShaderPlatformQualitySettings { // : UObject
		constexpr auto QualityOverrides = 0x30; // FMaterialQualityOverrides [0x3]
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x48; // FExpressionInput
		constexpr auto Lightmass = 0x64; // FExpressionInput
	}

	namespace n_UUMGPartyBotSlotWidget { // : UMobileBaseUserWidget
		constexpr auto RoleText = 0x300; // UTextBlock*
		constexpr auto BotDifficultyText = 0x308; // UTextBlock*
		constexpr auto CharacterNameText = 0x310; // UTextBlock*
		constexpr auto EditButton = 0x318; // UUMGBaseButtonWidget*
		constexpr auto EditIcon = 0x320; // UImage*
		constexpr auto InvitePartyButton = 0x328; // UUMGBaseButtonWidget*
		constexpr auto InvitePartyCanvas = 0x330; // UCanvasPanel*
		constexpr auto DifficultyColors = 0x338; // TMap<EAIDifficultyLevel, FSlateColor>
	}

	namespace n_UEscapeRequirementTracker { // : UObject
		constexpr auto _escapeGenerators = 0x30; // TArray<AGenerator*>
		constexpr auto _dbdGameState = 0x40; // ADBDGameState*
	}

	namespace n_URespawningEventComponent { // : UActorComponent
		constexpr auto _respawnableStrategy = 0xb8; // URespawnableStrategy*
		constexpr auto _respawnablePositioner = 0xc0; // URespawnablePositioner*
	}

	namespace n_UGizmoLineHandleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x448; // FVector
		constexpr auto HandleSize = 0x454; // float
		constexpr auto Thickness = 0x458; // float
		constexpr auto Direction = 0x45c; // FVector
		constexpr auto Length = 0x468; // float
		constexpr auto bImageScale = 0x46c; // bool
	}

	namespace n_UAtlantaFriendsListScreenUMG { // : UScreenBase
		constexpr auto _atlantaFriendListScreen = 0x198; // UUMGAtlantaFriendListScreen*
	}

	namespace n_UGridPanel { // : UPanelWidget
		constexpr auto ColumnFill = 0x140; // TArray<float>
		constexpr auto RowFill = 0x150; // TArray<float>
	}

	namespace n_UEscapeOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _doorOpenColorForSurvivor = 0xc0; // FLinearColor
		constexpr auto _doorOpenColorForKiller = 0xd0; // FLinearColor
	}

	namespace n_USubmixEffectDynamicsProcessorPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xc0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_AAkSpotReflector { // : AActor
		constexpr auto EarlyReflectionAuxBus = 0x230; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x238; // FString
		constexpr auto AcousticTexture = 0x248; // UAkAcousticTexture*
		constexpr auto DistanceScalingFactor = 0x250; // float
		constexpr auto Level = 0x254; // float
	}

	namespace n_ULobbyControllerSubsystem { // : UGameInstanceSubsystem
		constexpr auto _localPlayerDisplayStandController = 0x38; // TWeakObjectPtr<ULobbyDisplayStandController>
		constexpr auto _displayStandControllers = 0x40; // TMap<FString, ULobbyDisplayStandController*>
	}

	namespace n_ULoadoutSlotFloatingWidget { // : UBaseTooltipWidget
		constexpr auto Message = 0x338; // UTextBlock*
	}

	namespace n_UARCandidateObject { // : UDataAsset
		constexpr auto CandidateObjectData = 0x38; // TArray<char>
		constexpr auto FriendlyName = 0x48; // FString
		constexpr auto BoundingBox = 0x58; // FBox
	}

	namespace n_URankTooltipWidget { // : UBaseTooltipWidget
		constexpr auto RankInfoLabel = 0x338; // UTextBlock*
		constexpr auto ResetInfoLabel = 0x340; // UTextBlock*
		constexpr auto RankInfoSlotsContainer = 0x348; // UGridPanel*
		constexpr auto SurvivorRankInfoWidget = 0x350; // UUMGPlayerRankInfo*
		constexpr auto KillerRankInfoWidget = 0x358; // UUMGPlayerRankInfo*
	}

	namespace n_USurvivorCollectableOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _outlineColor = 0xc0; // FLinearColor
		constexpr auto _nearlyConsumedColor = 0xd0; // FLinearColor
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x3c0; // float
		constexpr auto OuterConeAngle = 0x3c4; // float
		constexpr auto LightShaftConeAngle = 0x3c8; // float
		constexpr auto ShadowNearPlaneOffset = 0x3cc; // float
	}

	namespace n_UCoreOnboardingTutorialPanelWidget { // : UCoreBaseUserWidget
		constexpr auto TutorialButtons = 0x2e0; // TArray<UCoreOnboardingTutorialButtonWidget*>
		constexpr auto TutorialSelectedDelegate = 0x2f0; // FMulticastInlineDelegate
		constexpr auto _pendingData = 0x300; // TArray<FPendingStepData>
	}

	namespace n_ABaseTrap { // : ACollectable
		constexpr auto _isTrapSet = 0x4d0; // bool
	}

	namespace n_UHexRuin { // : UHexPerk
		constexpr auto _curseActivationTimers = 0x458; // TMap<AGenerator*, FFastTimer>
	}

	namespace n_ABaseTormentTrailPoint { // : AActor
		constexpr auto _collisionComponent = 0x248; // USphereComponent*
		constexpr auto _collisionRadius = 0x250; // float
		constexpr auto _tormentTrailAliveTime = 0x258; // FTunableStat
		constexpr auto _splineMeshComponent = 0x308; // USplineMeshComponent*
		constexpr auto _trailMeshList = 0x310; // TArray<UStaticMesh*>
		constexpr auto _indexInTrail = 0x320; // char
	}

	namespace n_UTrapCamperInteraction { // : UInteractionDefinition
		constexpr auto _nonOverridableInteractions = 0x5b0; // TArray<FString>
		constexpr auto _trapAttachSocket = 0x5c0; // FName
		constexpr auto _updateMontageID = 0x5cc; // FName
		constexpr auto _updateNoScreamMontageID = 0x5d8; // FName
		constexpr auto _loudNoiseRangeTunable = 0x5e8; // FDBDTunableRowHandle
		constexpr auto _hemorrhageEffectDurationTunable = 0x610; // FDBDTunableRowHandle
	}

	namespace n_UCoreHudRootWidget { // : UUserWidget
		constexpr auto WidgetContainer = 0x260; // UOverlay*
		constexpr auto OuterContainer = 0x268; // UOverlay*
		constexpr auto SpectateContainer = 0x270; // UOverlay*
		constexpr auto ScaleHud = 0x278; // UScaleBox*
		constexpr auto UnfocusedOpacity = 0x280; // float
		constexpr auto Test4kDpiScalingCurve = 0x288; // UCurveFloat*
		constexpr auto Test4kDpiCurveClass = 0x290; // UUserWidget*
		constexpr auto Test4kDpiCurveWidget = 0x298; // UUserWidget*
		constexpr auto EndGameCollapseBarWidgetClass = 0x2a0; // UUserWidget*
		constexpr auto EquippedItemWidgetClass = 0x2a8; // UUserWidget*
		constexpr auto EquippedPowerWidgetClass = 0x2b0; // UUserWidget*
		constexpr auto ExternalEffectsWidgetClass = 0x2b8; // UUserWidget*
		constexpr auto HudAlertWidgetClass = 0x2c0; // UUserWidget*
		constexpr auto InteractionProgressWidgetClass = 0x2c8; // UUserWidget*
		constexpr auto InteractionPromptsContainerWidgetClass = 0x2d0; // UUserWidget*
		constexpr auto ItemInteractionWidgetClass = 0x2d8; // UUserWidget*
		constexpr auto LeaningArrowsWidgetClass = 0x2e0; // UUserWidget*
		constexpr auto MatchResultWidgetClass = 0x2e8; // UUserWidget*
		constexpr auto OfferingInteractionWidgetClass = 0x2f0; // UUserWidget*
		constexpr auto PerksContainerWidgetClass = 0x2f8; // UUserWidget*
		constexpr auto PingStatusWidgetClass = 0x300; // UUserWidget*
		constexpr auto PlayerStatusesWidgetClass = 0x308; // UUserWidget*
		constexpr auto ScreenIndicatorWidgetClass = 0x310; // UUserWidget*
		constexpr auto SpectateBarWidgetClass = 0x318; // UUserWidget*
		constexpr auto StartSequenceWidgetClass = 0x320; // UUserWidget*
		constexpr auto StatusEffectWidgetClass = 0x328; // UUserWidget*
		constexpr auto TestBuildFlagWidgetClass = 0x330; // UUserWidget*
		constexpr auto TutorialMysteryNoteWidgetClass = 0x338; // UUserWidget*
		constexpr auto TutorialObjectivesWidgetClass = 0x340; // UUserWidget*
		constexpr auto TutorialPopupWidgetClass = 0x348; // UUserWidget*
		constexpr auto _coreBaseViewInterfaces = 0x350; // TArray<TScriptInterface<ICoreBaseViewInterface>>
		constexpr auto HUDWidgetsFadeOutCompletedDelegate = 0x360; // FMulticastInlineDelegate
	}

	namespace n_UARTrackedQRCode { // : UARTrackedImage
		constexpr auto QRCode = 0x100; // FString
		constexpr auto Version = 0x110; // int32_t
	}

	namespace n_UDeadHard { // : UPerk
		constexpr auto _deadHardIconCooldownDuration = 0x3d0; // float
		constexpr auto _exhaustedEffect = 0x3d8; // UActivatableExhaustedEffect*
		constexpr auto _exhaustedCooldownPerLevel = 0x3e0; // float [0x3]
	}

	namespace n_USourceEffectWaveShaperPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x78; // FSourceEffectWaveShaperSettings
	}

	namespace n_UUMGLoadoutFilterWidget { // : UMobileBaseUserWidget
		constexpr auto OnLoadoutFilterClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto AtlantaLoadoutFilterButtonClass = 0x310; // TSoftClassPtr<UObject>
		constexpr auto FilterContainerBox = 0x340; // UHorizontalBox*
		constexpr auto Filters = 0x348; // TArray<FName>
		constexpr auto FilterButtons = 0x358; // TArray<UUMGLoadoutFilterButton*>
		constexpr auto SelectedFilterButton = 0x368; // UUMGLoadoutFilterButton*
	}

	namespace n_UDBDAttackHittingSubstate { // : UDBDAttackSubstate
		constexpr auto _hittingPercentDamageBegin = 0x118; // FStatProperty
	}

	namespace n_ABP_Effect_Mist_C { // : ABaseVFX
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto DBDAggregateParticleLocator = 0x240; // UDBDAggregateParticleLocatorComponent*
		constexpr auto DefaultSceneRoot = 0x248; // USceneComponent*
	}

	namespace n_UAutoDestroySubsystem { // : UWorldSubsystem
		constexpr auto ActorsToPoll = 0x40; // TArray<AActor*>
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto TransformSourceType = 0x64; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x65; // EMaterialVectorCoordTransform
	}

	namespace n_AMovableCamera { // : APawn
		constexpr auto MovementSpeed = 0x290; // float
		constexpr auto RequiresShiftModifierForInput = 0x294; // bool
		constexpr auto _playerController = 0x2b0; // APlayerController*
	}

	namespace n_UWraithAnimInstance { // : UKillerAnimInstance
		constexpr auto _isRingingBell = 0x5a8; // bool
		constexpr auto _isCloaking = 0x5a9; // bool
		constexpr auto _isUncloaking = 0x5aa; // bool
		constexpr auto _cloakingInSelector = 0x5b0; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _cloakingSelector = 0x5c8; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _cloakingOutSelector = 0x5e0; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _uncloakingInSelector = 0x5f8; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _uncloakingSelector = 0x610; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _uncloakingOutSelector = 0x628; // FPerspectiveDependentAnimSequenceSelector
		constexpr auto _cloakingPlayRate = 0x640; // float
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity { // : UMaterialExpression
		constexpr auto Density = 0x48; // FExpressionInput
		constexpr auto ConstantDensity = 0x64; // float
	}

	namespace n_UAIHealAllyBehaviourData { // : UAICharacterBehaviourData
		constexpr auto _targetAlly = 0x30; // ACamperPlayer*
	}

	namespace n_USlateAccessibleWidgetData { // : UObject
		constexpr auto bCanChildrenBeAccessible = 0x30; // bool
		constexpr auto AccessibleBehavior = 0x31; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x32; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x38; // FText
		constexpr auto AccessibleTextDelegate = 0x50; // FDelegate
		constexpr auto AccessibleSummaryText = 0x68; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x80; // FDelegate
	}

	namespace n_UK26OnCrowAttachLingeringStatusEffectBase { // : UStatusEffect
		constexpr auto _onCrowAttachStateTag = 0x350; // FGameplayTag
		constexpr auto _lingerTime = 0x360; // FDBDTunableRowHandle
	}

	namespace n_UTargetOfEventRecentlyQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _firstGameEvent = 0x98; // FGameplayTag
		constexpr auto _secondEventOnSelf = 0xa4; // bool
	}

	namespace n_UInterpData { // : UObject
		constexpr auto InterpLength = 0x30; // float
		constexpr auto PathBuildTime = 0x34; // float
		constexpr auto InterpGroups = 0x38; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x48; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x50; // float
		constexpr auto EdSectionEnd = 0x54; // float
		constexpr auto bShouldBakeAndPrune = 0x58; // char : 1
		constexpr auto CachedDirectorGroup = 0x60; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x68; // TArray<FName>
	}

	namespace n_UUMGTallyBonusVisualWidget { // : UMobileBaseUserWidget
		constexpr auto MultiplierTextureMap = 0x300; // TMap<int32_t, TSoftObjectPtr<UTexture2D>>
		constexpr auto MultiplierImage = 0x350; // UImage*
	}

	namespace n_UAnxiousGaspAddon { // : UItemAddon
		constexpr auto _screamSoundEvent = 0x298; // UAkAudioEvent*
		constexpr auto _scoreEventTag = 0x2a0; // FGameplayTag
		constexpr auto _detectionCapsuleHalfHeight = 0x2ac; // float
		constexpr auto _detectionCapsuleRadius = 0x2b0; // float
		constexpr auto _survivorDetector = 0x2b8; // UCapsuleComponent*
		constexpr auto _alreadyDetectedPlayers = 0x2c0; // TSet<AActor*>
	}

	namespace n_UBlockElement { // : UObject
		constexpr auto _source = 0x30; // TWeakObjectPtr<UObject>
		constexpr auto _affectedPlayers = 0x38; // TSet<TWeakObjectPtr<ADBDPlayer>>
	}

	namespace n_US28P02 { // : UBoonPerk
		constexpr auto _healingSpeedGainPercentage = 0x488; // float [0x3]
		constexpr auto _canSelfHeal = 0x494; // bool
		constexpr auto _selfHealSpeedPenalty = 0x498; // float [0x3]
	}

	namespace n_UMeshSocketPointsProvider { // : UPointsProvider
		constexpr auto _meshReference = 0x30; // FComponentReference
		constexpr auto _mesh = 0x60; // UMeshComponent*
		constexpr auto _sockets = 0x68; // TArray<FName>
	}

	namespace n_UPaperTileMap { // : UObject
		constexpr auto Draft = 0x30; // bool
		constexpr auto Licensed = 0x31; // bool
		constexpr auto MapWidth = 0x34; // int32_t
		constexpr auto MapHeight = 0x38; // int32_t
		constexpr auto TileWidth = 0x3c; // int32_t
		constexpr auto TileHeight = 0x40; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x44; // float
		constexpr auto SeparationPerTileX = 0x48; // float
		constexpr auto SeparationPerTileY = 0x4c; // float
		constexpr auto SeparationPerLayer = 0x50; // float
		constexpr auto SelectedTileSet = 0x58; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x88; // UMaterialInterface*
		constexpr auto TileLayers = 0x90; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0xa0; // float
		constexpr auto SpriteCollisionDomain = 0xa4; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0xa5; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0xa8; // int32_t
		constexpr auto BodySetup = 0xb0; // UBodySetup*
		constexpr auto LayerNameIndex = 0xb8; // int32_t
	}

	namespace n_UMaterialInterface { // : UObject
		constexpr auto SubsurfaceProfile = 0x40; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x58; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x68; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x78; // TArray<UAssetUserData*>
	}

	namespace n_UTriggerableWorldObjectComponent { // : UActorComponent
		constexpr auto OnTriggered = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnTriggerReset = 0xc8; // FMulticastInlineDelegate
		constexpr auto _triggerResetTime = 0xd8; // float
		constexpr auto _randomChance = 0xdc; // float
		constexpr auto _rollFrequency = 0xe0; // float
		constexpr auto _conditionalTriggerVolume = 0xf0; // TWeakObjectPtr<UPrimitiveComponent>
		constexpr auto _conditionalVolumeOverlappingPlayers = 0xf8; // TSet<ADBDPlayer*>
		constexpr auto _guaranteedTriggerVolume = 0x148; // TWeakObjectPtr<UPrimitiveComponent>
	}

	namespace n_UMovieSceneSubSection { // : UMovieSceneSection
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UUMGBankWidget { // : UMobileBaseUserWidget
		constexpr auto BloodPointsCurrency = 0x300; // UUMGCurrencyWidget*
		constexpr auto CellsButton = 0x308; // UUMGAuricCellsButton*
		constexpr auto IridescentShardsCurrency = 0x310; // UUMGCurrencyWidget*
	}

	namespace n_UBTTask_BlueprintBase { // : UBTTaskNode
		constexpr auto AIOwner = 0x78; // AAIController*
		constexpr auto ActorOwner = 0x80; // AActor*
		constexpr auto TickInterval = 0x88; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa8; // char : 1
	}

	namespace n_UKillerIsLowOnAmmo { // : UEventDrivenModifierCondition
		constexpr auto _ammoThreshold = 0xe8; // int32_t
	}

	namespace n_ULacerationLevelCondition { // : UBaseLacerationLevelCondition
		constexpr auto _lacerationLevelRequired = 0xe8; // float
	}

	namespace n_UPlayer { // : UObject
		constexpr auto PlayerController = 0x38; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x40; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x44; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x48; // int32_t
	}

	namespace n_UDBDAIPerceptionComponent { // : UAIPerceptionComponent
		constexpr auto _objOverridingSenses = 0x1a8; // TMap<UObject*, UObject*>
		constexpr auto _originalSenseConfigs = 0x1f8; // TArray<UAISenseConfig*>
		constexpr auto _detectedHostileStimuli = 0x208; // TArray<FAIDetectedStimulus>
		constexpr auto _bestDetectedHostileStimulus = 0x218; // FAIDetectedStimulus
		constexpr auto _lastBestDetectedHostileStimulusInMemory = 0x274; // FAIDetectedStimulus
		constexpr auto _activePhaseWalkingNoiseMaxRange = 0x330; // FAITunableParameter
		constexpr auto ThreatDividerForNonControlledActor = 0x340; // float
		constexpr auto HighThreatDistanceForNonControlledActor = 0x344; // float
		constexpr auto TerrorDistanceMultiplierForNonControlledActor = 0x348; // float
	}

	namespace n_UInDreamSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _shouldLookSleepy = 0x4f0; // bool
	}

	namespace n_UUMGRequestsListTabWidget { // : UUMGFriendBaseTabListWidget
		constexpr auto FriendRequestExpandableList = 0x300; // UUMGExpandableListWidget*
		constexpr auto PendingExpandableList = 0x308; // UUMGExpandableListWidget*
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BoundsBodies = 0x38; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x48; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x58; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x68; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x80; // char : 1
		constexpr auto ThumbnailInfo = 0x128; // UThumbnailInfo*
		constexpr auto BodySetup = 0x130; // TArray<UBodySetup*>
	}

	namespace n_UKillerAttackSubAnimInstance { // : UBaseKillerAttackSubAnimInstance
		constexpr auto _isCarrying = 0x5b8; // bool
		constexpr auto _isActive = 0x5b9; // bool
	}

	namespace n_UHighestLevelAndClosestEffectCondition { // : UGameplayModifierCondition
		constexpr auto _effectsLevel1 = 0xd8; // TArray<UStatusEffect*>
		constexpr auto _effectsLevel2 = 0xe8; // TArray<UStatusEffect*>
		constexpr auto _effectsLevel3 = 0xf8; // TArray<UStatusEffect*>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x64; // FExpressionInput
	}

	namespace n_UBTService_FindInteractor_Trap { // : UBTService_FindInteractor
		constexpr auto HelpDestroyDemoPortal = 0x218; // FAITunableParameter
		constexpr auto SeeStandardTrapRoll = 0x228; // FAIRoll
		constexpr auto TrapGroundLocationOffset = 0x24c; // float
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x38; // FVector
		constexpr auto EndPoint1 = 0x44; // FVector
		constexpr auto Range = 0x50; // FRawDistributionFloat
		constexpr auto Strength = 0x80; // FRawDistributionFloat
	}

	namespace n_UTcpMessagingSettings { // : UObject
		constexpr auto EnableTransport = 0x30; // bool
		constexpr auto ListenEndpoint = 0x38; // FString
		constexpr auto ConnectToEndpoints = 0x48; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x58; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x5c; // bool
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x30; // int32_t
	}

	namespace n_UUMGTallyRankWidget { // : UUMGTallyListElementWidget
		constexpr auto _emblemsPadding = 0x310; // FMargin
		constexpr auto EmblemWidgetClass = 0x320; // TSoftClassPtr<UObject>
		constexpr auto EmblemsContainer = 0x350; // UHorizontalBox*
		constexpr auto ProgressBar = 0x358; // UUMGTallyProgressBar*
		constexpr auto RankBanner = 0x360; // UUMGTallyRankBanner*
		constexpr auto RankProgressLabel = 0x368; // UTextBlock*
		constexpr auto _emblems = 0x370; // TArray<UUMGTallyEmblemWidget*>
		constexpr auto _scoreData = 0x380; // FTallyScorePipsData
	}

	namespace n_UBTService_StateMonitor_Camper { // : UBTService_StateMonitor
		constexpr auto BBDamageState = 0xd8; // FBlackboardKeySelector
		constexpr auto BBImmoblizedState = 0x108; // FBlackboardKeySelector
		constexpr auto BBGuidedState = 0x138; // FBlackboardKeySelector
		constexpr auto BBEscapedState = 0x168; // FBlackboardKeySelector
		constexpr auto BBIsInInjuredBleedout = 0x198; // FBlackboardKeySelector
		constexpr auto BBDyingTimerPercentLeft = 0x1c8; // FBlackboardKeySelector
		constexpr auto BBItemCharge = 0x1f8; // FBlackboardKeySelector
		constexpr auto BBIsChased = 0x228; // FBlackboardKeySelector
		constexpr auto BBWasInStimulusSight = 0x258; // FBlackboardKeySelector
		constexpr auto BBWasBeingAimedAt = 0x288; // FBlackboardKeySelector
		constexpr auto BBIsBeingAimedAt = 0x2b8; // FBlackboardKeySelector
		constexpr auto BBIsBeingAttacked = 0x2e8; // FBlackboardKeySelector
		constexpr auto BBIsChained = 0x318; // FBlackboardKeySelector
		constexpr auto BBIsInPressureZone = 0x348; // FBlackboardKeySelector
		constexpr auto BBIsInActivatedRBT = 0x378; // FBlackboardKeySelector
		constexpr auto BBIsInDeathTimer = 0x3a8; // FBlackboardKeySelector
		constexpr auto DeathTimerEndGamePrecent = 0x3d8; // float
		constexpr auto BBHasCrowAttached = 0x3e0; // FBlackboardKeySelector
	}

	namespace n_URemoveOccludedTrianglesOperatorFactory { // : UObject
		constexpr auto Tool = 0x38; // URemoveOccludedTrianglesTool*
	}

	namespace n_UUMGRewardWidget { // : UMobileBaseUserWidget
		constexpr auto CheckIcon = 0x300; // UImage*
	}

	namespace n_UBTDecorator_BlackboardBase { // : UBTDecorator
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_ADatasmithImportedSequencesActor { // : AActor
		constexpr auto ImportedSequences = 0x230; // TArray<ULevelSequence*>
	}

	namespace n_ACameraShakeSourceActor { // : AActor
		constexpr auto CameraShakeSourceComponent = 0x230; // UCameraShakeSourceComponent*
	}

	namespace n_UMultiLineEditableTextBox { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto HintText = 0x160; // FText
		constexpr auto HintTextDelegate = 0x178; // FDelegate
		constexpr auto WidgetStyle = 0x190; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x9f0; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xc78; // bool
		constexpr auto AllowContextMenu = 0xc79; // bool
		constexpr auto VirtualKeyboardOptions = 0xc7a; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xc7b; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xc80; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xc88; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xce0; // FLinearColor
		constexpr auto BackgroundColor = 0xcf0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xd00; // FLinearColor
		constexpr auto OnTextChanged = 0xd10; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xd20; // FMulticastInlineDelegate
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x40; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x58; // char : 1
		constexpr auto bLockAxes2 = 0x58; // char : 1
		constexpr auto LockedAxes = 0x5c; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x5e; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x64; // char : 1
	}

	namespace n_UInteractionDetectorComponent { // : UActorComponent
		constexpr auto _detectionPrimitive = 0xb8; // UPrimitiveComponent*
		constexpr auto _overlappingInteractables = 0xc0; // TSet<AInteractable*>
		constexpr auto _overlappingPrimitiveComponents = 0x110; // TSet<UPrimitiveComponent*>
		constexpr auto _ignoredActors = 0x160; // TSet<AActor*>
	}

	namespace n_UPolygonSelectionMechanicProperties { // : UInteractiveToolPropertySet
		constexpr auto bSelectFaces = 0x58; // bool
		constexpr auto bSelectEdges = 0x59; // bool
		constexpr auto bSelectVertices = 0x5a; // bool
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0x108; // FName
		constexpr auto ExpressionGUID = 0x114; // FGuid
		constexpr auto Group = 0x124; // FName
	}

	namespace n_UGameFlowContextSystem { // : UGameInstanceSubsystem
		constexpr auto m_RootMovie = 0x100; // URootMovie*
	}

	namespace n_USocialChatManager { // : UObject
		constexpr auto DirectChannelsByTargetUser = 0x80; // TMap<TWeakObjectPtr<USocialUser>, USocialPrivateMessageChannel*>
		constexpr auto ChatRoomsById = 0xd0; // TMap<FString, USocialChatRoom*>
		constexpr auto ReadOnlyChannelsByDisplayName = 0x120; // TMap<FString, USocialReadOnlyChatChannel*>
		constexpr auto bEnableChatSlashCommands = 0x170; // bool
		constexpr auto GroupChannels = 0x178; // TMap<FUniqueNetIdRepl, USocialGroupChannel*>
	}

	namespace n_UOutlineReveal { // : UObject
		constexpr auto _affectedCharacters = 0x70; // TArray<ADBDPlayer*>
	}

	namespace n_UUMGInboxMessageEntryWidget { // : UUserWidget
		constexpr auto _messageData = 0x260; // FInboxMessageUIData
		constexpr auto _isCurrentSelection = 0x2c0; // bool
	}

	namespace n_UTricksterChainedThrowsAddon { // : UItemAddon
		constexpr auto _resetOnEnteringFlurryInteraction = 0x29c; // bool
		constexpr auto _lacerationPenaltyRangeThreshold = 0x2a0; // float
		constexpr auto _closeRangeLacerationPenalty = 0x2a4; // float
		constexpr auto _maximumMultiplier = 0x2a8; // float
	}

	namespace n_UK25PowerChargePresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _powerChargeComponent = 0xb8; // UPowerChargeComponent*
		constexpr auto _k25Power = 0xc0; // AK25Power*
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto R = 0x64; // char : 1
		constexpr auto G = 0x64; // char : 1
		constexpr auto B = 0x64; // char : 1
		constexpr auto A = 0x64; // char : 1
	}

	namespace n_UGizmoLocalVec2ParameterSource { // : UGizmoBaseVec2ParameterSource
		constexpr auto value = 0x50; // FVector2D
		constexpr auto LastChange = 0x58; // FGizmoVec2ParameterChange
	}

	namespace n_UDBDAtlantaDesignTunables { // : UObject
		constexpr auto AtlantaStructuredDataClass = 0x30; // TSoftClassPtr<UObject>
		constexpr auto AtlantaStructuredData = 0x60; // UDBDAtlantaStructuredData*
		constexpr auto CloseNoiseIndicatorTemplate = 0x68; // TSoftClassPtr<UObject>
		constexpr auto ExitOpenedIndicatorTemplate = 0x98; // TSoftClassPtr<UObject>
		constexpr auto GeneratorIndicatorTemplate = 0xc8; // TSoftClassPtr<UObject>
		constexpr auto HookedIndicatorTemplate = 0xf8; // TSoftClassPtr<UObject>
		constexpr auto KillerCuesIndicatorTemplate = 0x128; // TSoftClassPtr<UObject>
		constexpr auto GlobalSoundIndicatorTemplate = 0x158; // TSoftClassPtr<UObject>
		constexpr auto DirectionalTerrorRadiusIndicatorTemplate = 0x188; // TSoftClassPtr<UObject>
		constexpr auto LoudNoiseIndicatorTemplate = 0x1b8; // TSoftClassPtr<UObject>
		constexpr auto StealthBrokenIndicatorTemplate = 0x1e8; // TSoftClassPtr<UObject>
		constexpr auto SafeZoneManagerTemplate = 0x218; // TSoftClassPtr<UObject>
		constexpr auto UMGRoleSelectionScreenClass = 0x248; // TSoftClassPtr<UObject>
		constexpr auto UMGAtlantaTutorialScreenClass = 0x278; // TSoftClassPtr<UObject>
		constexpr auto UMGNavigationScreenClass = 0x2a8; // TSoftClassPtr<UObject>
		constexpr auto UMGInboxScreenClass = 0x2d8; // TSoftClassPtr<UObject>
		constexpr auto SharedAuthenticationComponent = 0x308; // TSoftClassPtr<UObject>
		constexpr auto UMGPanelScreenClass = 0x338; // TSoftClassPtr<UObject>
		constexpr auto UMGLobbyScreenClass = 0x368; // TSoftClassPtr<UObject>
		constexpr auto AtlantaChaseVignetteStaticMesh = 0x398; // TSoftObjectPtr<UStaticMesh>
		constexpr auto AtlantaChaseVignetteMaterialInstance = 0x3c8; // TSoftObjectPtr<UMaterialInstanceConstant>
		constexpr auto UMGGenericPopupClass = 0x3f8; // TSoftClassPtr<UObject>
		constexpr auto UMGLevelUpPopupClass = 0x428; // TSoftClassPtr<UObject>
		constexpr auto UMGTutorialPopupClass = 0x458; // TSoftClassPtr<UObject>
		constexpr auto UMGTallyScreenClass = 0x488; // TSoftClassPtr<UObject>
		constexpr auto UMGLoadingScreenWidgetClass = 0x4b8; // TSoftClassPtr<UObject>
		constexpr auto UMGSplashScreenClass = 0x4e8; // TSoftClassPtr<UObject>
		constexpr auto UMGCommandDebugButtonClass = 0x518; // TSoftClassPtr<UObject>
		constexpr auto UMGAtlantaObjectiveClass = 0x548; // TSoftClassPtr<UObject>
		constexpr auto UMGStoreScreenClass = 0x578; // TSoftClassPtr<UObject>
		constexpr auto UMGCustomizationScreenClass = 0x5a8; // TSoftClassPtr<UObject>
		constexpr auto UMGOverlayMenuScreenClass = 0x5d8; // TSoftClassPtr<UObject>
		constexpr auto UMGPerkSelectionPopupClass = 0x608; // TSoftClassPtr<UObject>
		constexpr auto UMGBloodStoreMysteryBoxPopupClass = 0x638; // TSoftClassPtr<UObject>
		constexpr auto UMGRitualScreenClass = 0x668; // TSoftClassPtr<UObject>
		constexpr auto UMGLoadingWidgetClass = 0x698; // TSoftClassPtr<UObject>
		constexpr auto UMGCloseTooltipWidgetClass = 0x6c8; // TSoftClassPtr<UObject>
		constexpr auto UMGAtlantaFriendListScreen = 0x6f8; // TSoftClassPtr<UObject>
		constexpr auto UMGToastNotificationScreenClass = 0x728; // TSoftClassPtr<UObject>
		constexpr auto UMGAtlantaLegalMenuScreenClass = 0x758; // TSoftClassPtr<UObject>
		constexpr auto RankDesignTunableClass = 0x788; // TSoftClassPtr<UObject>
		constexpr auto UMGStreamVideoWidgetClass = 0x7b8; // TSoftClassPtr<UObject>
		constexpr auto AtlantaTransitionLightEffectsScreen = 0x7e8; // FSoftObjectPath
		constexpr auto CurrencyConversionTunables = 0x808; // UDBDCurrencyConversionTunables*
		constexpr auto MediaPlayerAsset = 0x810; // TSoftObjectPtr<UMediaPlayer>
	}

	namespace n_USetGroundPortalInteraction { // : UChargeableInteractionDefinition
		constexpr auto _portalPlacerState = 0x6d8; // UPortalPlacerStateComponent*
		constexpr auto _trapPlacerComponent = 0x6e0; // UObjectPlacerComponent*
		constexpr auto _portalClassToSpawn = 0x6e8; // ADemogorgonPortal*
	}

	namespace n_UBabysitter { // : UPerk
		constexpr auto _scratchMarkHidingTime = 0x3d0; // float [0x3]
		constexpr auto _hasteEffect = 0x3dc; // float [0x3]
		constexpr auto _showAuraTime = 0x3e8; // float [0x3]
		constexpr auto _cooldownTime = 0x3f4; // float [0x3]
	}

	namespace n_UBP_TextDesignTunables_C { // : UDBDTextDesignTunables
		constexpr auto UberGraphFrame = 0x118; // FPointerToUberGraphFrame
	}

	namespace n_UAIPerceptionSystem { // : UAISubsystem
		constexpr auto Senses = 0x90; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0xa0; // float
	}

	namespace n_UVerticalBoxSlot { // : UPanelSlot
		constexpr auto Size = 0x40; // FSlateChildSize
		constexpr auto Padding = 0x48; // FMargin
		constexpr auto HorizontalAlignment = 0x60; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x61; // EVerticalAlignment
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto TextureStreamingInfo = 0x418; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x428; // char : 1
		constexpr auto bDisableTessellation = 0x428; // char : 1
		constexpr auto bMobile = 0x428; // char : 1
		constexpr auto bEditorToolUsage = 0x428; // char : 1
	}

	namespace n_UMovieSceneByteSection { // : UMovieSceneSection
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto ComponentLayerInfos = 0x428; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x438; // int32_t
		constexpr auto SectionBaseY = 0x43c; // int32_t
		constexpr auto CollisionSizeQuads = 0x440; // int32_t
		constexpr auto CollisionScale = 0x444; // float
		constexpr auto SimpleCollisionSizeQuads = 0x448; // int32_t
		constexpr auto CollisionQuadFlags = 0x450; // TArray<char>
		constexpr auto HeightfieldGuid = 0x460; // FGuid
		constexpr auto CachedLocalBox = 0x470; // FBox
		constexpr auto RenderComponent = 0x48c; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x4b8; // TArray<UPhysicalMaterial*>
	}

	namespace n_UAISkill_Strafe { // : UAISkill
		constexpr auto StartMaxRange = 0xc0; // float
		constexpr auto StopMaxRange = 0xc4; // float
		constexpr auto StrafeBackwardRange = 0xc8; // float
		constexpr auto StrafeFowardRange = 0xcc; // float
		constexpr auto IgnoreUnderNavLinkStartRange = 0xd0; // float
		constexpr auto PauseStrafeOnAnimation = 0xd4; // bool
		constexpr auto StrafeHoldInterval = 0xd8; // FAITunableParameter
		constexpr auto StrafeHoldDeviation = 0xe8; // FAITunableParameter
		constexpr auto StrafePauseInterval = 0xf8; // FAITunableParameter
		constexpr auto StrafePauseDeviation = 0x108; // FAITunableParameter
	}

	namespace n_USoundCue { // : USoundBase
		constexpr auto bPrimeOnLoad = 0x168; // char : 1
		constexpr auto FirstNode = 0x170; // USoundNode*
		constexpr auto VolumeMultiplier = 0x178; // float
		constexpr auto PitchMultiplier = 0x17c; // float
		constexpr auto AttenuationOverrides = 0x180; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x520; // float
		constexpr auto bOverrideAttenuation = 0x528; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x528; // char : 1
		constexpr auto CookedQualityIndex = 0x52c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x530; // char : 1
	}

	namespace n_UMediaPlaylist { // : UObject
		constexpr auto Items = 0x30; // TArray<UMediaSource*>
	}

	namespace n_UBP_Audio_KLR_08_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
	}

	namespace n_UUMGAtlantaEventsScreen { // : UMobileBaseUserWidget
		constexpr auto PageTitle = 0x300; // UTextBlock*
		constexpr auto WrapBox = 0x308; // UWrapBox*
		constexpr auto DescriptionWidget = 0x310; // UUMGAtlantaEventsDescription*
		constexpr auto EventsTabWBPReference = 0x318; // UUMGAtlantaEventsTab*
		constexpr auto _eventsArray = 0x320; // TArray<UUMGAtlantaEventsTab*>
	}

	namespace n_UAkCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x4d8; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x4dc; // FDelegate
		constexpr auto WidgetStyle = 0x4f0; // FCheckBoxStyle
		constexpr auto HorizontalAlignment = 0xad0; // EHorizontalAlignment
		constexpr auto IsFocusable = 0xad1; // bool
		constexpr auto ThePropertyToControl = 0xad8; // FAkBoolPropertyToControl
		constexpr auto ItemToControl = 0xae8; // FAkWwiseItemToControl
		constexpr auto AkOnCheckStateChanged = 0xb28; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0xb38; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0xb48; // FMulticastInlineDelegate
	}

	namespace n_USkillCheck { // : UActorComponent
		constexpr auto _owner = 0x168; // ADBDPlayer*
		constexpr auto _currentInteraction = 0x170; // UChargeableInteractionDefinition*
	}

	namespace n_ULightmassPortalComponent { // : USceneComponent
		constexpr auto PreviewBox = 0x210; // UBoxComponent*
	}

	namespace n_UShopLubricantAddon { // : UOnEventBaseAddon
		constexpr auto _auraBlockingDuration = 0x2a8; // float
		constexpr auto _auraVisibleDistance = 0x2ac; // float
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x50; // float
		constexpr auto DelayMax = 0x54; // float
	}

	namespace n_UPalletOutlineUpdateStrategy { // : UVaultableOutlineUpdateStrategy
		constexpr auto _revealedByPowerColor = 0x138; // FLinearColor
	}

	namespace n_UUMGEndGameCollapseWidget { // : UMobileBaseUserWidget
		constexpr auto _progressBarInterpSpeed = 0x308; // float
		constexpr auto _slowMode = 0x30c; // bool
		constexpr auto NormalBar = 0x310; // UCanvasPanel*
		constexpr auto SlowBar = 0x318; // UCanvasPanel*
		constexpr auto NormalProgressBar = 0x320; // UUMGEndGameCollapseProgressWidget*
		constexpr auto SlowProgressBar = 0x328; // UUMGEndGameCollapseProgressWidget*
		constexpr auto _topBar = 0x378; // UUMGEndGameCollapseProgressWidget*
	}

	namespace n_UDarkSense { // : UPerk
		constexpr auto _effectDurationOnGeneratorComplete = 0x3d0; // float
		constexpr auto _effectDurationOnFinalGeneratorComplete = 0x3d4; // float [0x3]
	}

	namespace n_UTargetWasDamagedBySpecialAttackRecentlyEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _timeLimit = 0x130; // float
		constexpr auto _specialCaseGameEvents = 0x138; // TArray<FGameplayTag>
	}

	namespace n_UCustomizedAnimationComponent { // : UActorComponent
		constexpr auto _owner = 0xb8; // ADBDBasePlayer*
		constexpr auto _customizedSkeletalMesh = 0xc0; // UCustomizedSkeletalMesh*
		constexpr auto _defaultAnimClass = 0xc8; // UAnimInstance*
	}

	namespace n_UGameAssetLibrary { // : UAssetLibrary
		constexpr auto _gameInstance = 0xb0; // UDBDGameInstance*
	}

	namespace n_AOfferingCard { // : AActor
		constexpr auto RarityTextures = 0x230; // TArray<FRarityTexture>
		constexpr auto OfferingTypeTextures = 0x240; // TArray<FOfferingTypeTexture>
	}

	namespace n_AFirecracker { // : AInteractable
		constexpr auto _effectArea = 0x328; // USphereComponent*
		constexpr auto DebugDisplayEnabled = 0x330; // bool
		constexpr auto _effectModifiers = 0x338; // TArray<UGameplayModifierContainer*>
		constexpr auto _playerOwner = 0x348; // ADBDPlayer*
		constexpr auto _exploded = 0x350; // bool
		constexpr auto _actorsInRange = 0x358; // TArray<AActor*>
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x30; // TArray<FDelegateArray>
	}

	namespace n_UUMGLobbyOfferingWidget { // : UMobileBaseUserWidget
		constexpr auto CanvasOffering = 0x300; // UCanvasPanel*
		constexpr auto LobbyOfferingItemClass = 0x308; // TSoftClassPtr<UObject>
	}

	namespace n_UUMGAtlantaPromoCodePopup { // : UUMGGenericPopup
		constexpr auto RewardPanel = 0x3e8; // UOverlay*
		constexpr auto RewardWidgetContainer = 0x3f0; // UHorizontalBox*
		constexpr auto RewardItemWidgetClass = 0x3f8; // TSoftClassPtr<UObject>
		constexpr auto RewardItemWidgetMax = 0x428; // int32_t
		constexpr auto RewardItemWidgetPadding = 0x42c; // FMargin
		constexpr auto RewardItemWidgetRevealDelay = 0x43c; // float
		constexpr auto CodePanel = 0x440; // UOverlay*
		constexpr auto PromoCodeInputTextBox = 0x448; // UEditableTextBox*
		constexpr auto InvalidIcon = 0x450; // UImage*
	}

	namespace n_UDBDAtlantaTutorialParameters { // : UObject
		constexpr auto SurvTutorial_WiggleChargeRateMultiplier = 0x30; // float
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto levelIndex = 0xc0; // int32_t
		constexpr auto FirstResourceMemMip = 0xc4; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xc8; // char : 1
		constexpr auto AddressX = 0xc9; // TextureAddress
		constexpr auto AddressY = 0xca; // TextureAddress
		constexpr auto ImportedSize = 0xcc; // FIntPoint
		constexpr auto bIsUsingDistanceField = 0xe8; // char : 1
		constexpr auto bComputeInnerDistance = 0xe8; // char : 1
		constexpr auto DistanceField = 0xf0; // UTexture2D*
		constexpr auto UseChannel = 0xf8; // char
	}

	namespace n_UMaterialExpressionMaterialProxyReplace { // : UMaterialExpression
		constexpr auto Realtime = 0x48; // FExpressionInput
		constexpr auto MaterialProxy = 0x64; // FExpressionInput
	}

	namespace n_UAIDataProvider_Random { // : UAIDataProvider_QueryParams
		constexpr auto Min = 0x48; // float
		constexpr auto Max = 0x4c; // float
		constexpr auto bInteger = 0x50; // char : 1
	}

	namespace n_AEQSTestingPawn { // : ACharacter
		constexpr auto QueryTemplate = 0x4d8; // UEnvQuery*
		constexpr auto QueryParams = 0x4e0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x4f0; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x500; // float
		constexpr auto StepToDebugDraw = 0x504; // int32_t
		constexpr auto HighlightMode = 0x508; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x50c; // char : 1
		constexpr auto bDrawFailedItems = 0x50c; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x50c; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x50c; // char : 1
		constexpr auto bTickDuringGame = 0x50c; // char : 1
		constexpr auto QueryingMode = 0x510; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x518; // FNavAgentProperties
	}

	namespace n_UUMGCurrencyWidget { // : UUMGBaseButtonWidget
		constexpr auto currencyType = 0x430; // ECurrencyType
	}

	namespace n_UAuthoritativeActorPoolComponent { // : UActorComponent
		constexpr auto _actorClass = 0xd0; // AActor*
		constexpr auto _size = 0xd8; // int32_t
		constexpr auto _pool = 0xe0; // TArray<AActor*>
	}

	namespace n_UStencilOutlineRenderStrategy { // : UBaseOutlineRenderStrategy
		constexpr auto _replacementMaterials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto _translucentCopies = 0x80; // TArray<UBatchMeshCommands*>
	}

	namespace n_USpaceDeformerOperatorFactory { // : UObject
		constexpr auto SpaceDeformerTool = 0x38; // UMeshSpaceDeformerTool*
	}

	namespace n_UHudScreenCoreUMG { // : UHudScreen
		constexpr auto _rootWidget = 0x240; // UCoreHudRootWidget*
		constexpr auto _tutorialsUtilities = 0x3a8; // ATutorialsUtilities*
		constexpr auto _playerStatusInterfaces = 0x3b0; // TArray<TScriptInterface<IPlayerStatusViewInterface>>
		constexpr auto _interactionProgressViewData = 0x3c0; // FInteractionProgressViewData
		constexpr auto _itemBundleViewData = 0x428; // FItemBundleViewData
		constexpr auto _powerBundleViewData = 0x5c8; // FPowerBundleViewData
		constexpr auto _playerStatusViewData = 0x710; // TArray<FPlayerStatusViewData>
	}

	namespace n_UDynamicAccessoryAnimInstance { // : UAnimInstance
		constexpr auto _isInMenu = 0x270; // bool
		constexpr auto _isInGame = 0x271; // bool
		constexpr auto _masterMesh = 0x274; // TWeakObjectPtr<USkeletalMeshComponent>
	}

	namespace n_UMovieSceneByteTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x98; // UEnum*
	}

	namespace n_UUIScaleManager { // : UGameInstanceSubsystem
		constexpr auto _dpiScaleCurveDB = 0x38; // UDataTable*
		constexpr auto _dpiScaleCurve = 0x40; // UCurveFloat*
	}

	namespace n_UPerkHudWidget { // : UMobileBaseUserWidget
		constexpr auto PerksClickable = 0x300; // UCanvasPanel*
		constexpr auto PerksExternal = 0x308; // UCanvasPanel*
		constexpr auto AtlantaPerkActionButtonClass = 0x310; // TSoftClassPtr<UObject>
		constexpr auto _clickablePerksMap = 0x340; // TMap<FName, UPerkActionButton*>
		constexpr auto _externalPerksMap = 0x390; // TMap<FName, UPerkActionButton*>
	}

	namespace n_UUMGAtlantaTallyScreen { // : UMobileBaseUserWidget
		constexpr auto OnTallyLeft = 0x300; // FMulticastInlineDelegate
		constexpr auto OnTallySpectateClicked = 0x310; // FMulticastInlineDelegate
		constexpr auto OnTallyAddFriendEvent = 0x320; // FMulticastInlineDelegate
		constexpr auto OnTallyReportEvent = 0x330; // FMulticastInlineDelegate
		constexpr auto TallyScrollWidget = 0x340; // UUMGTallyListWidget*
		constexpr auto TallyScoreboardClass = 0x348; // TSoftClassPtr<UObject>
		constexpr auto TallyBloodpointsClass = 0x378; // TSoftClassPtr<UObject>
		constexpr auto TallyRankClass = 0x3a8; // TSoftClassPtr<UObject>
		constexpr auto TallyPlayerLevelClass = 0x3d8; // TSoftClassPtr<UObject>
		constexpr auto TallyCharacterProgressionClass = 0x408; // TSoftClassPtr<UObject>
		constexpr auto TextLeaveLobby = 0x438; // FText
		constexpr auto SpectateButtonText = 0x450; // FText
		constexpr auto PlayerRole = 0x468; // EPlayerRole
		constexpr auto GameType = 0x469; // EGameType
		constexpr auto PlayerStatus = 0x46c; // int32_t
		constexpr auto FromSpectateMode = 0x470; // bool
		constexpr auto _scoreboardWidget = 0x478; // UUMGTallyScoreboardWidget*
		constexpr auto _bloodpointsWidget = 0x480; // UUMGTallyBloodpointsWidget*
		constexpr auto _rankWidget = 0x488; // UUMGTallyRankWidget*
		constexpr auto _playerLevelWidget = 0x490; // UUMGTallyPlayerLevelWidget*
		constexpr auto _characterLevelWidget = 0x498; // UUMGTallyCharacterProgressionWidget*
	}

	namespace n_UGeometryCacheCodecRaw { // : UGeometryCacheCodecBase
		constexpr auto DummyProperty = 0x40; // int32_t
	}

	namespace n_AKillerProjectile { // : APhysicsBasedProjectile
		constexpr auto _killerProjectileAttemptGameEventTag = 0x300; // FGameplayTag
		constexpr auto _hitValidatorConfigurator = 0x310; // UHitValidatorConfigurator*
		constexpr auto _hitValidatorComponent = 0x318; // UHitValidatorComponent*
		constexpr auto _hitValidationConfigName = 0x320; // EHitValidatorConfigName
	}

	namespace n_UParticleModuleVectorFieldRotation { // : UParticleModuleVectorFieldBase
		constexpr auto MinInitialRotation = 0x38; // FVector
		constexpr auto MaxInitialRotation = 0x44; // FVector
	}

	namespace n_UFXSystemAsset { // : UObject
		constexpr auto MaxPoolSize = 0x30; // uint32_t
	}

	namespace n_UWindDirectionalSourceComponent { // : USceneComponent
		constexpr auto Strength = 0x210; // float
		constexpr auto Speed = 0x214; // float
		constexpr auto MinGustAmount = 0x218; // float
		constexpr auto MaxGustAmount = 0x21c; // float
		constexpr auto Radius = 0x220; // float
		constexpr auto bPointWind = 0x224; // char : 1
	}

	namespace n_USoundNodeBranch { // : USoundNode
		constexpr auto BoolParameterName = 0x50; // FName
	}

	namespace n_UStaticMeshSimulationComponent { // : UActorComponent
		constexpr auto Simulating = 0xc0; // bool
		constexpr auto bNotifyCollisions = 0xc1; // bool
		constexpr auto ObjectType = 0xc2; // EObjectStateTypeEnum
		constexpr auto Mass = 0xc4; // float
		constexpr auto CollisionType = 0xc8; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xc9; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xcc; // int32_t
		constexpr auto MaxLevelSetResolution = 0xd0; // int32_t
		constexpr auto InitialVelocityType = 0xd4; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xd8; // FVector
		constexpr auto InitialAngularVelocity = 0xe4; // FVector
		constexpr auto DamageThreshold = 0xf0; // float
		constexpr auto PhysicalMaterial = 0xf8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0x100; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x108; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x128; // TArray<UPrimitiveComponent*>
	}

	namespace n_UProgressBar { // : UWidget
		constexpr auto WidgetStyle = 0x128; // FProgressBarStyle
		constexpr auto Style = 0x2e0; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2e8; // USlateBrushAsset*
		constexpr auto FillImage = 0x2f0; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2f8; // USlateBrushAsset*
		constexpr auto percent = 0x300; // float
		constexpr auto BarFillType = 0x304; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x305; // bool
		constexpr auto BorderPadding = 0x308; // FVector2D
		constexpr auto PercentDelegate = 0x310; // FDelegate
		constexpr auto FillColorAndOpacity = 0x324; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x334; // FDelegate
	}

	namespace n_URedStainComponent { // : USpotLightComponent
		constexpr auto _initialSpotLightColor = 0x3d0; // FLinearColor
	}

	namespace n_UUMGBaseLandingPageStorefrontWidget { // : UUMGBaseStorefrontWidget
		constexpr auto BigButtonsSlot = 0x300; // UHorizontalBox*
		constexpr auto SmallButtonsSlot1 = 0x308; // UVerticalBox*
		constexpr auto SmallButtonsSlot2 = 0x310; // UVerticalBox*
		constexpr auto SmallButtonClass = 0x318; // TSoftClassPtr<UObject>
		constexpr auto MediumButtonClass = 0x348; // TSoftClassPtr<UObject>
		constexpr auto BigButtonClass = 0x378; // TSoftClassPtr<UObject>
		constexpr auto DisabledButtonColor = 0x3a8; // FLinearColor
		constexpr auto DisabledButtonText = 0x3b8; // FText
		constexpr auto _landingPageTabs = 0x3e0; // TArray<UUMGLandingPageButtonWidget*>
	}

	namespace n_UUMGCustomizationTooltipHeaderWidget { // : UMobileBaseUserWidget
		constexpr auto Title = 0x300; // UTextBlock*
		constexpr auto CollectionName = 0x308; // UTextBlock*
		constexpr auto CategoryAndRarityText = 0x310; // UTextBlock*
	}

	namespace n_UUMGTooltipContentPlayerLevelWidget { // : UMobileBaseUserWidget
		constexpr auto PlayerLevelText = 0x300; // FText
		constexpr auto LevelBanner = 0x318; // UUMGLevelBannerWidget*
		constexpr auto LevelExperienceRichText = 0x320; // URichTextBlock*
		constexpr auto ExperienceToNextLevelText = 0x328; // UTextBlock*
	}

	namespace n_UUMGBaseToastWidget { // : UMobileBaseUserWidget
		constexpr auto ToastIcon = 0x300; // UImage*
		constexpr auto ToastText = 0x308; // UTextBlock*
		constexpr auto TimeToastProgression = 0x310; // UProgressBar*
	}

	namespace n_UBTNode { // : UObject
		constexpr auto NodeName = 0x38; // FString
		constexpr auto TreeAsset = 0x48; // UBehaviorTree*
		constexpr auto ParentNode = 0x50; // UBTCompositeNode*
	}

	namespace n_UMovieSceneTrack { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x58; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x5d; // bool
	}

	namespace n_USnuffTotem { // : UInteractionDefinition
		constexpr auto _slasherFacingTolerance = 0x5b0; // float
	}

	namespace n_UBlightedSerumCollisionInteraction { // : UInteractionDefinition
		constexpr auto _cooldownInteraction = 0x5b0; // UBlightedSerumCooldownInteraction*
		constexpr auto _bounceTime = 0x5b8; // float
	}

	namespace n_UVisionary { // : UPerk
		constexpr auto _auraVisibilityRange = 0x3d0; // float [0x3]
		constexpr auto _cooldownDuration = 0x3dc; // float [0x3]
	}

	namespace n_UTheExecutionerAnimInstance { // : UKillerAnimInstance
		constexpr auto _isInTormentMode = 0x5a8; // bool
		constexpr auto _isChargingTormentMode = 0x5a9; // bool
		constexpr auto _isTormentModeAttacking = 0x5aa; // bool
		constexpr auto _tormentModeVerticalInput = 0x5ac; // float
		constexpr auto _tormentModeHorizontalInput = 0x5b0; // float
	}

	namespace n_ASpiritPassivePhaseWalkHusk { // : ABaseVFX
		constexpr auto _huskMesh = 0x238; // USkeletalMeshComponent*
		constexpr auto _huskCustomizedSkeletalMesh = 0x240; // UCustomizedSkeletalMesh*
	}

	namespace n_UUMGAtlantaFreeTicketConfirmToUsePopup { // : UUMGGenericPopup
		constexpr auto FreeTicketIcon = 0x3e8; // UTexture2D*
		constexpr auto PopupTitleContent = 0x3f0; // FText
	}

	namespace n_UEvilWithinComponent { // : UActorComponent
		constexpr auto OnTierChange = 0xb8; // FMulticastInlineDelegate
		constexpr auto _currentTier = 0xc8; // int32_t
		constexpr auto _lastTierTimeStart = 0xcc; // float
		constexpr auto _allowedSurvivorInteractionsForKill = 0x128; // TArray<FString>
	}

	namespace n_UUMGSettingControlsContextWidget { // : UUMGSettingContextWidget
		constexpr auto AimAssist = 0x378; // bool
		constexpr auto HandSide = 0x37c; // int32_t
		constexpr auto InteractionButton = 0x380; // int32_t
		constexpr auto InvertY = 0x384; // bool
		constexpr auto KillerCameraSensitivity = 0x388; // float
		constexpr auto SurvivorCameraSensitivity = 0x38c; // float
	}

	namespace n_USecondWind { // : UPerk
		constexpr auto _currentState = 0x3d8; // ESecondWindState
		constexpr auto _amountHealed = 0x3dc; // float
		constexpr auto _numberOfHealStateToHealToActivate = 0x3e4; // float [0x3]
		constexpr auto _durationOfHeal = 0x3f0; // float [0x3]
		constexpr auto _applyBrokenEffect = 0x3fc; // bool
	}

	namespace n_UOppression { // : UPerk
		constexpr auto _nbGeneratorsAffectedByPerk = 0x3d0; // int32_t [0x3]
		constexpr auto _perkCooldown = 0x3dc; // int32_t [0x3]
	}

	namespace n_USourceBasedOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _defaultColorForSurvivor = 0xc0; // FLinearColor
		constexpr auto _defaultColorForSlasher = 0xd0; // FLinearColor
	}

	namespace n_ULamentConfigurationOutlineStrategy { // : UOutlineUpdateStrategy
		constexpr auto _noChainHuntProgressColor = 0xc0; // FLinearColor
		constexpr auto _chainHuntActiveColor = 0xd0; // FLinearColor
		constexpr auto _killerColor = 0xe0; // FLinearColor
	}

	namespace n_UCharacterOptimizer { // : UActorComponent
		constexpr auto _distance = 0xb8; // FBHVRPerDetailModeFloat
		constexpr auto _characterMovementTickRateWhenInsignificant = 0x158; // float
		constexpr auto _skeletalMeshTickRateWhenInsignificant = 0x15c; // float
		constexpr auto _dependentActorsToCheckSignficance = 0x160; // TArray<AActor*>
	}

	namespace n_UCharacterDreamworldComponent { // : UActorComponent
		constexpr auto DreamStateChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _mobileDreamworldPostProcessClass = 0xc8; // AActor*
		constexpr auto _isInDreamworld = 0xd0; // bool
		constexpr auto _mobileDreamworldPostProcess = 0xd8; // APostProcessUpdate*
	}

	namespace n_ACamperExposerInstance { // : AActor
		constexpr auto IsInterior = 0x230; // bool
		constexpr auto _audioAgravationLevelRtpc = 0x238; // FString
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface { // : UMaterialExpression
		constexpr auto Position = 0x48; // FExpressionInput
	}

	namespace n_UPawnNoiseEmitterComponent { // : UActorComponent
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xb8; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xbc; // FVector
		constexpr auto NoiseLifetime = 0xc8; // float
		constexpr auto LastRemoteNoiseVolume = 0xcc; // float
		constexpr auto LastRemoteNoiseTime = 0xd0; // float
		constexpr auto LastLocalNoiseVolume = 0xd4; // float
		constexpr auto LastLocalNoiseTime = 0xd8; // float
	}

	namespace n_AGMAdaptiveShadowMapSourceComponentSpawner { // : AActor
		constexpr auto bCreateASMSourceComponentOnBeginPlay = 0x230; // bool
		constexpr auto bRemoveCastForCinematicOnlyFlagOnLights = 0x231; // bool
		constexpr auto bRemoveLightFunctionMaterialOnLights = 0x232; // bool
		constexpr auto NumLevelPerSource = 0x234; // int32_t
		constexpr auto NumPreGeneratedLevelPerSource = 0x238; // int32_t
		constexpr auto bPreviewOnly = 0x23c; // bool
	}

	namespace n_URedHerring { // : UPerk
		constexpr auto _generatorBeingRepaired = 0x430; // AGenerator*
		constexpr auto _markedGenerator = 0x438; // AGenerator*
		constexpr auto _secondsToActivatePerk = 0x440; // float
		constexpr auto _loudNoiseTriggeredNotifyTime = 0x444; // float
		constexpr auto _cooldownLevels = 0x448; // float [0x3]
	}

	namespace n_ATutorialGameMode { // : ADBDBaseMatchGameMode
		constexpr auto _tutorialObjectiveController = 0x380; // UTutorialObjectiveController*
		constexpr auto _tutorialNotificationController = 0x388; // UTutorialNotificationController*
		constexpr auto _tutorialHighlightController = 0x390; // UTutorialHighlightController*
		constexpr auto _atlantaTutorialPlayerHudController = 0x398; // UAtlantaTutorialPlayerHudController*
	}

	namespace n_UEditableGeometryCollectionAdapter { // : UEditableMeshAdapter
		constexpr auto GeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x38; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x40; // int32_t
	}

	namespace n_UPlaceDreamPalletInteraction { // : UInteractionDefinition
		constexpr auto _palletTrackers = 0x5b0; // TArray<APalletTracker*>
		constexpr auto _closestTracker = 0x5c8; // APalletTracker*
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x38; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x3c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x48; // char : 1
		constexpr auto bOrientMeshEmitters = 0x48; // char : 1
		constexpr auto bInheritBoneVelocity = 0x48; // char : 1
		constexpr auto InheritVelocityScale = 0x4c; // float
		constexpr auto SkelMeshActorParamName = 0x50; // FName
		constexpr auto ValidAssociatedBones = 0x60; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x70; // char : 1
		constexpr auto NormalToCompare = 0x74; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x80; // float
		constexpr auto NormalCheckTolerance = 0x84; // float
		constexpr auto ValidMaterialIndices = 0x88; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x98; // char : 1
		constexpr auto bInheritUV = 0x98; // char : 1
		constexpr auto InheritUVChannel = 0x9c; // uint32_t
	}

	namespace n_UComboButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ComboButtonStyle = 0x38; // FComboButtonStyle
	}

	namespace n_UDatasmithLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto bVisible = 0x38; // char : 1
		constexpr auto CastShadows = 0x3c; // char : 1
		constexpr auto bUseTemperature = 0x3c; // char : 1
		constexpr auto bUseIESBrightness = 0x3c; // char : 1
		constexpr auto Intensity = 0x40; // float
		constexpr auto Temperature = 0x44; // float
		constexpr auto IESBrightnessScale = 0x48; // float
		constexpr auto LightColor = 0x4c; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x60; // UMaterialInterface*
		constexpr auto IESTexture = 0x68; // UTextureLightProfile*
	}

	namespace n_UWiggleWidget { // : UMobileBaseUserWidget
		constexpr auto TimeBetweenAnimationStart = 0x300; // float
		constexpr auto WiggleButtonLeft = 0x308; // UMobileBaseUserWidget*
		constexpr auto WiggleButtonRight = 0x310; // UMobileBaseUserWidget*
	}

	namespace n_ALevelSequenceMediaController { // : AActor
		constexpr auto Sequence = 0x238; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x240; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x248; // float
	}

	namespace n_USlasherAnimInstance { // : UAnimInstance
		constexpr auto OnFootTrapped = 0x270; // FMulticastInlineDelegate
		constexpr auto _isCrouched = 0x280; // bool
		constexpr auto _isRevvingChainsaw = 0x281; // bool
		constexpr auto _isAttackSuccessMontagePlaying = 0x282; // bool
		constexpr auto _isCamOn = 0x283; // bool
		constexpr auto _isAttacking = 0x284; // bool
		constexpr auto _isAnyMontagePlaying = 0x285; // bool
		constexpr auto _isFrenzy = 0x286; // bool
		constexpr auto _isFrenzyCD = 0x287; // bool
		constexpr auto _isInParadise = 0x288; // bool
		constexpr auto _enableArmOverrideTier3 = 0x289; // bool
		constexpr auto _isRingingBell = 0x28a; // bool
		constexpr auto _isCarrying = 0x28b; // bool
		constexpr auto _firstPersonCarryOffset = 0x28c; // FVector
		constexpr auto _firstPersonCarryOffsetLookingDown = 0x298; // FVector
		constexpr auto _isPassivePhaseWalking = 0x2a4; // bool
		constexpr auto _isActivePhaseWalking = 0x2a5; // bool
		constexpr auto _isInAir = 0x2a6; // bool
		constexpr auto _isVaultingToFall = 0x2a7; // bool
		constexpr auto _isSpectator = 0x2a8; // bool
		constexpr auto _firstPersonView = 0x2a9; // bool
		constexpr auto _isIdle = 0x2aa; // bool
		constexpr auto _validSlasher = 0x2ab; // bool
		constexpr auto _animDirection = 0x2ac; // float
		constexpr auto _animSpeed = 0x2b0; // float
		constexpr auto _animPitch = 0x2b4; // float
		constexpr auto _animTurning = 0x2b8; // float
		constexpr auto _animYaw = 0x2bc; // float
		constexpr auto _pelvisHeight = 0x2c0; // float
		constexpr auto _idleTime = 0x2c4; // float
		constexpr auto _directionSwitch = 0x2c8; // int32_t
		constexpr auto _leftClearFrontSpaceVector = 0x2cc; // FVector
		constexpr auto _rightClearFrontSpaceVector = 0x2d8; // FVector
		constexpr auto _velocity = 0x2e4; // FVector
		constexpr auto _rightFootEffectorLocation = 0x2f0; // FVector
		constexpr auto _leftFootEffectorLocation = 0x2fc; // FVector
		constexpr auto _meshRotation = 0x308; // FRotator
		constexpr auto _attackSuccessAnimations = 0x318; // TArray<UAnimMontage*>
		constexpr auto _camOnAnimations = 0x328; // TArray<UAnimMontage*>
		constexpr auto _mySlasher = 0x338; // ASlasherPlayer*
		constexpr auto _isVaultingToFallState = 0x340; // FTagStateBool
		constexpr auto _interactionType = 0x370; // EInteractionAnimation
		constexpr auto _demogorgonPortalPlacerState = 0x378; // UPortalPlacerStateComponent*
		constexpr auto _demogorgonTeleportDuration = 0x380; // float
		constexpr auto _demogorgonChargedAttackStateComponent = 0x388; // UChargedAttackStateComponent*
		constexpr auto _isDemogorgonCharging = 0x390; // bool
		constexpr auto _demogorgonChargingPercent = 0x394; // float
		constexpr auto _oniAttackState = 0x398; // UOniDemonModeAttackStateComponent*
		constexpr auto _isOniCharging = 0x3a0; // bool
		constexpr auto _oniAttackType = 0x3a1; // EOniAttackType
		constexpr auto _oniChargeDuration = 0x3a4; // float
		constexpr auto _previousAttackSubstate = 0x3a8; // EAttackSubstate
		constexpr auto _attackSubstate = 0x3a9; // EAttackSubstate
		constexpr auto _evilWithinComponent = 0x3b0; // UEvilWithinComponent*
		constexpr auto _frenzyComponent = 0x3b8; // UFrenzyComponent*
		constexpr auto _phaseWalkingComponent = 0x3c0; // UPhaseWalkingComponent*
		constexpr auto _armIKSensorComponent = 0x3c8; // UArmIKSensorComponent*
	}

	namespace n_UKillerBeingPossessedInteraction { // : UBeingPossessedInteraction
		constexpr auto _wakeUpSpeedCurve = 0x630; // UCurveFloat*
	}

	namespace n_UDBDAuthentication { // : UObject
		constexpr auto _localInfos = 0x30; // TArray<FAuthenticationInfo>
		constexpr auto _remoteInfos = 0x40; // TArray<FAuthenticationInfo>
		constexpr auto _gameInstance = 0x50; // UDBDGameInstance*
	}

	namespace n_UDragDropOperation_Widget { // : UDragDropOperation
		constexpr auto Widget = 0x90; // UUMGDragWidget*
		constexpr auto WidgetParent = 0x98; // UPanelWidget*
		constexpr auto startPosition = 0xa0; // FVector2D
		constexpr auto WidgetLocalScale = 0xa8; // FVector2D
		constexpr auto WidgetLocalOpacity = 0xc8; // float
		constexpr auto OnDropOffset = 0xcc; // FVector2D
		constexpr auto OnDragOffset = 0xd4; // FVector2D
		constexpr auto WidgetSlotAnchors = 0xdc; // FAnchors
		constexpr auto WidgetSlotOffsets = 0xec; // FMargin
		constexpr auto WidgetSlotPosition = 0xfc; // FVector2D
		constexpr auto WidgetSlotSize = 0x104; // FVector2D
		constexpr auto WidgetSlotAutoSize = 0x10c; // bool
		constexpr auto WidgetSlotAlignment = 0x110; // FVector2D
		constexpr auto WidgetSlotZOrder = 0x118; // int32_t
		constexpr auto ChildLinkWidget = 0x120; // UUMGDragWidget*
	}

	namespace n_UGizmoAxisIntervalParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto FloatParameterSource = 0x50; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x60; // float
		constexpr auto MaxParameter = 0x64; // float
	}

	namespace n_UBloodwebEntity { // : UObject
		constexpr auto _gameInstance = 0x38; // UDBDGameInstance*
		constexpr auto _bloodwebTunables = 0x40; // UBloodwebTunables*
		constexpr auto _bloodWebDefinition = 0x48; // TScriptInterface<IDBDBloodwebDefinitionBase>
	}

	namespace n_UEnvQueryGenerator_Donut { // : UEnvQueryGenerator_ProjectedPoints
		constexpr auto InnerRadius = 0x88; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xc8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0x108; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x148; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x188; // FEnvDirection
		constexpr auto ArcAngle = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1e8; // bool
		constexpr auto Center = 0x1f0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1f8; // char : 1
	}

	namespace n_UBaseTooltipWidget { // : UMobileBaseUserWidget
		constexpr auto TitleLabel = 0x300; // UTextBlock*
		constexpr auto TooltipContainer = 0x308; // UCanvasPanel*
		constexpr auto DescriptionLabel = 0x310; // UUMGHtmlRichText*
		constexpr auto CloseButton = 0x318; // UButton*
		constexpr auto TooltipOpeningSound = 0x330; // UAkAudioEvent*
	}

	namespace n_UAnimationAsset { // : UObject
		constexpr auto Skeleton = 0x40; // USkeleton*
		constexpr auto MetaData = 0x68; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x78; // TArray<UAssetUserData*>
	}

	namespace n_UBookMark2D { // : UBookmarkBase
		constexpr auto Zoom2D = 0x30; // float
		constexpr auto Location = 0x34; // FIntPoint
	}

	namespace n_UBackgroundBlurSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UHitDifferentInFrenzyMaxCountQEEvaluator { // : UMaxEventCountQEEvaluator
		constexpr auto _targetList = 0xc8; // TSet<TWeakObjectPtr<AActor>>
	}

	namespace n_URemoveTwin { // : UChargeableInteractionDefinition
		constexpr auto _removeTwinMaxCharge = 0x708; // FDBDTunableRowHandle
		constexpr auto _removeTwinExitTime = 0x730; // FDBDTunableRowHandle
		constexpr auto _brotherRemoveDistanceFromSurvivor = 0x758; // float
	}

	namespace n_APallet { // : AInteractable
		constexpr auto PalletDownEvadeDoorFrontPointOffset = 0x328; // float
		constexpr auto _state = 0x348; // EPalletState
		constexpr auto _isIllusionaryPalletDown = 0x349; // bool
		constexpr auto _illusionaryPallet = 0x350; // USkeletalMeshComponent*
		constexpr auto _destroyLeft = 0x358; // UInteractionDefinition*
		constexpr auto _destroyRight = 0x360; // UInteractionDefinition*
		constexpr auto _pushBox = 0x368; // UBoxComponent*
		constexpr auto _maxDotproductThresholdForPulldownAccross = 0x370; // float
		constexpr auto _fallDuration = 0x374; // float
		constexpr auto _stunBoxLeft = 0x378; // UBoxComponent*
		constexpr auto _stunBoxRight = 0x380; // UBoxComponent*
		constexpr auto _stunnedActors = 0x388; // TSet<AActor*>
		constexpr auto _playerExecutingPulldown = 0x3d8; // ADBDPlayer*
		constexpr auto _pushSettings = 0x3e0; // FPalletPushSettings
		constexpr auto _navEvadeLoopComponent = 0x420; // UDBDNavEvadeLoopComponent*
		constexpr auto _palletPulldownBlockerComponent = 0x428; // UPalletPulldownBlockerComponent*
		constexpr auto _isDreamPallet = 0x430; // bool
	}

	namespace n_UCanvasRenderTarget2D { // : UTextureRenderTarget2D
		constexpr auto OnCanvasRenderTargetUpdate = 0xf0; // FMulticastInlineDelegate
		constexpr auto World = 0x100; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x108; // bool
	}

	namespace n_UDBDImage { // : UImage
		constexpr auto DefaultImage = 0x248; // UTexture2D*
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture { // : UNiagaraDataInterface
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UNiagaraEffectType { // : UObject
		constexpr auto UpdateFrequency = 0x30; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x34; // ENiagaraCullReaction
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_UAtlantaEventsTemplateDataAsset { // : UPrimaryDataAsset
		constexpr auto Data = 0x38; // TMap<EEventsType, UUMGAtlantaBaseEventsTemplate*>
	}

	namespace n_ATile { // : AActor
		constexpr auto RerunConstructionScript = 0x230; // bool
		constexpr auto MinimumSpacing = 0x234; // int32_t
		constexpr auto MaximumSpacing = 0x238; // int32_t
		constexpr auto DiagonalSpacing = 0x23c; // bool
		constexpr auto TypeSpacing = 0x23d; // bool
		constexpr auto MaximumCount = 0x240; // int32_t
		constexpr auto Dimension = 0x244; // FVector2D
		constexpr auto AvailableEscapeTypes = 0x250; // TArray<EscapeStrategyType>
		constexpr auto Type = 0x260; // ETileType
		constexpr auto Density = 0x261; // EDensity
		constexpr auto Path = 0x262; // EPathType
		constexpr auto Number = 0x264; // int32_t
		constexpr auto PlaceHolder = 0x268; // bool
		constexpr auto SpawnPriorityTier = 0x26c; // int32_t
		constexpr auto Weight = 0x270; // float
		constexpr auto Coord = 0x274; // FVector2D
		constexpr auto QuadrantSpawnType = 0x27c; // EQuadrantSpawnType
		constexpr auto BasementType = 0x27d; // EBasementType
		constexpr auto SpawnPointsCache = 0x280; // TArray<UTileSpawnPoint*>
		constexpr auto ObjectRandomizersCache = 0x290; // TArray<UObjectRandomizer*>
		constexpr auto ActorSpawnersCache = 0x2a0; // TArray<UActorSpawner*>
		constexpr auto ActorVariationSpawnersCache = 0x2b0; // TArray<UActorVariationSpawner*>
		constexpr auto SharedTileRandomizer = 0x33c; // FRandomStream
		constexpr auto _initialized = 0x344; // bool
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x230; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x238; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x238; // char : 1
		constexpr auto bCurrentlyActive = 0x238; // char : 1
		constexpr auto OnParticleSpawn = 0x240; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x250; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x260; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x270; // FMulticastInlineDelegate
	}

	namespace n_USceneComponentPointProvider { // : UPointsProvider
		constexpr auto _sceneReference = 0x30; // FComponentReference
		constexpr auto _sceneComponent = 0x60; // USceneComponent*
	}

	namespace n_UWiggleMotionComponent { // : UActorComponent
		constexpr auto _carriedPlayer = 0xb8; // ADBDPlayer*
		constexpr auto _ownerMovementComponent = 0xc0; // UDBDCharacterMovementComponent*
	}

	namespace n_UAddon_K22Power_12 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _increaseRemoveTwinTime = 0x2a8; // float
	}

	namespace n_UBTService_StimuliMonitor_Camper { // : UBTService_StimuliMonitor
		constexpr auto BBTerrorPressure = 0x190; // FBlackboardKeySelector
		constexpr auto BBIsFleeing = 0x1c0; // FBlackboardKeySelector
		constexpr auto LastValidTerrorRadiusStimulusMemoryLifeTime = 0x1f0; // float
	}

	namespace n_AK25Projectile { // : AKillerProjectile
		constexpr auto _staticMesh = 0x380; // UStaticMeshComponent*
		constexpr auto _characterCollider = 0x388; // UPrimitiveComponent*
		constexpr auto _environmentCollider = 0x390; // UPrimitiveComponent*
		constexpr auto _projectileDodgeComponent = 0x398; // UKillerProjectileDodgeComponent*
		constexpr auto _launchInfo = 0x3a0; // FLaunchInfo
		constexpr auto _attachedChain = 0x3c0; // AK25Chain*
		constexpr auto _timeIgnoreSlasherCollision = 0x3c8; // float
		constexpr auto _isActive = 0x3cc; // bool
		constexpr auto _lastDeactivationData = 0x3d0; // FK25ProjectileDeactivationData
	}

	namespace n_UUMGRichTextFreeTicketDecorator { // : URichTextBlockDecorator
		constexpr auto FreeTicketOverrideSize = 0x30; // FVector2D
		constexpr auto FreeTicketIcon = 0x38; // FRichTextFreeTicketImageInfo
		constexpr auto FreeTicketBG = 0xd8; // FRichTextFreeTicketImageInfo
		constexpr auto FreeTicketDurationTitle = 0x178; // FRichTextFreeTicketTextInfo
		constexpr auto FreeTicketTitle = 0x428; // FRichTextFreeTicketTextInfo
		constexpr auto FreeTicketDurationInHours = 0x6d8; // FRichTextFreeTicketTextInfo
		constexpr auto TitleStyleSet = 0x988; // UDataTable*
	}

	namespace n_UMaterialExpressionTemporalSobol { // : UMaterialExpression
		constexpr auto Index = 0x48; // FExpressionInput
		constexpr auto Seed = 0x64; // FExpressionInput
		constexpr auto ConstIndex = 0x80; // uint32_t
		constexpr auto ConstSeed = 0x84; // FVector2D
	}

	namespace n_UInputKeySelector { // : UWidget
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto TextStyle = 0x3d0; // FTextBlockStyle
		constexpr auto SelectedKey = 0x658; // FInputChord
		constexpr auto Font = 0x680; // FSlateFontInfo
		constexpr auto Margin = 0x6d8; // FMargin
		constexpr auto ColorAndOpacity = 0x6e8; // FLinearColor
		constexpr auto KeySelectionText = 0x6f8; // FText
		constexpr auto NoKeySpecifiedText = 0x710; // FText
		constexpr auto bAllowModifierKeys = 0x728; // bool
		constexpr auto bAllowGamepadKeys = 0x729; // bool
		constexpr auto EscapeKeys = 0x730; // TArray<FKey>
		constexpr auto OnKeySelected = 0x740; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UAISense_Blueprint { // : UAISense
		constexpr auto ListenerDataType = 0x90; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x98; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0xa8; // TArray<UAISenseEvent*>
	}

	namespace n_UAgonySubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isInAgony = 0x4f0; // bool
		constexpr auto _isInTormentTrail = 0x4f1; // bool
		constexpr auto _isInTormentTrailEffect = 0x4f2; // bool
		constexpr auto _isInDeathBed = 0x4f3; // bool
		constexpr auto _isDeadInDeathBed = 0x4f4; // bool
		constexpr auto _isInStruggleInDeathBed = 0x4f5; // bool
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto TransformSourceType = 0x64; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x65; // EMaterialPositionTransformSource
	}

	namespace n_UMaterialExpressionArctangentFast { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UDBDPlayerData { // : UActorComponent
		constexpr auto OnItemUseButtonStateChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _controlRotation = 0xf0; // FYawAndPitchRotator_NetQuantize16
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective { // : UMaterialExpression
		constexpr auto WorldPosition = 0x48; // FExpressionInput
	}

	namespace n_UDBDSphereReflectionCaptureSpawnerComponent { // : UDBDReflectionCaptureSpawnerComponent
		constexpr auto InfluenceRadius = 0x268; // float
		constexpr auto PreviewInfluenceRadius = 0x270; // UDrawSphereComponent*
	}

	namespace n_USpasmodicBreathAddon { // : UItemAddon
		constexpr auto _speedEffect = 0x298; // UStatusEffect*
		constexpr auto _indicatorEffect = 0x2a0; // UStatusEffect*
		constexpr auto _speedModifier = 0x2ac; // float
		constexpr auto _activationDuration = 0x2b0; // float
	}

	namespace n_ULandscapeWeightmapUsage { // : UObject
		constexpr auto ChannelUsage = 0x30; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x50; // FGuid
	}

	namespace n_UGizmoScaledTransformSource { // : UGizmoBaseTransformSource
		constexpr auto ChildTransformSource = 0x50; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UAddon_TheBlight_15 { // : UOnEventBaseAddon
		constexpr auto _palletPulldownBlockRange = 0x2a8; // float
		constexpr auto _palletPulldownBlockSeconds = 0x2ac; // float
	}

	namespace n_AGameModeBase { // : AInfo
		constexpr auto OptionsString = 0x230; // FString
		constexpr auto GameSessionClass = 0x240; // AGameSession*
		constexpr auto GameStateClass = 0x248; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x250; // APlayerController*
		constexpr auto PlayerStateClass = 0x258; // APlayerState*
		constexpr auto HUDClass = 0x260; // AHUD*
		constexpr auto DefaultPawnClass = 0x268; // APawn*
		constexpr auto SpectatorClass = 0x270; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x278; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x280; // AServerStatReplicator*
		constexpr auto GameSession = 0x288; // AGameSession*
		constexpr auto GameState = 0x290; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x298; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x2a0; // FText
		constexpr auto bUseSeamlessTravel = 0x2b8; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x2b8; // char : 1
		constexpr auto bPauseable = 0x2b8; // char : 1
	}

	namespace n_UAddon_ThePig_JigsawSketch { // : UItemAddon
		constexpr auto _trackedGeneratorRepairs = 0x298; // TMap<ACamperPlayer*, AGenerator*>
	}

	namespace n_UUMGCustomizationTooltipContentWidget { // : UMobileBaseUserWidget
		constexpr auto ItemDescription = 0x300; // UUMGHtmlRichText*
		constexpr auto OutfitInformation = 0x308; // UUMGCustomizationInfoWidget*
		constexpr auto RoleInformation = 0x310; // UUMGCustomizationInfoWidget*
		constexpr auto ReplacementInformation = 0x318; // UUMGCustomizationInfoWidget*
		constexpr auto AuricCellsPrice = 0x320; // UUMGCustomizationItemPriceWidget*
		constexpr auto IridescentShardsPrice = 0x328; // UUMGCustomizationItemPriceWidget*
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xb8; // FParticleRandomSeedInfo
	}

	namespace n_UUMGAtlantaRitualTab { // : UMobileBaseUserWidget
		constexpr auto ContainerBox = 0x300; // UVerticalBox*
		constexpr auto _itemWidgetClass = 0x308; // TSoftClassPtr<UObject>
	}

	namespace n_UAtlantaObjectiveWidget { // : UMobileBaseUserWidget
		constexpr auto ObjectiveLabel = 0x300; // UTextBlock*
		constexpr auto _totalFadeOutTime = 0x35c; // float
		constexpr auto _polynomialOrder = 0x360; // int32_t
	}

	namespace n_UAISkill_Interaction { // : UAISkill
		constexpr auto inputType = 0xc0; // EPawnInputPressTypes
		constexpr auto InputMode = 0xc1; // EInteractionSkillInputModes
		constexpr auto CancelInputType = 0xc2; // EPawnInputPressTypes
		constexpr auto CancelInputMode = 0xc3; // EInteractionCancelInputModes
		constexpr auto AutoLockInput = 0xc4; // bool
		constexpr auto StartRoll = 0xc8; // FAIRoll
		constexpr auto StartInteractionID = 0xf0; // FString
		constexpr auto StopInteractionID = 0x100; // FString
		constexpr auto MinHoldInputTime = 0x110; // float
		constexpr auto AutoReleaseHoldInputWhenCharged = 0x114; // bool
	}

	namespace n_UClothConfigNv { // : UClothConfigCommon
		constexpr auto ClothingWindMethod = 0x30; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x34; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x44; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x54; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x64; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x74; // float
		constexpr auto SelfCollisionStiffness = 0x78; // float
		constexpr auto SelfCollisionCullScale = 0x7c; // float
		constexpr auto Damping = 0x80; // FVector
		constexpr auto Friction = 0x8c; // float
		constexpr auto WindDragCoefficient = 0x90; // float
		constexpr auto WindLiftCoefficient = 0x94; // float
		constexpr auto LinearDrag = 0x98; // FVector
		constexpr auto AngularDrag = 0xa4; // FVector
		constexpr auto LinearInertiaScale = 0xb0; // FVector
		constexpr auto AngularInertiaScale = 0xbc; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc8; // FVector
		constexpr auto SolverFrequency = 0xd4; // float
		constexpr auto StiffnessFrequency = 0xd8; // float
		constexpr auto GravityScale = 0xdc; // float
		constexpr auto GravityOverride = 0xe0; // FVector
		constexpr auto bUseGravityOverride = 0xec; // bool
		constexpr auto TetherStiffness = 0xf0; // float
		constexpr auto TetherLimit = 0xf4; // float
		constexpr auto CollisionThickness = 0xf8; // float
		constexpr auto AnimDriveSpringStiffness = 0xfc; // float
		constexpr auto AnimDriveDamperStiffness = 0x100; // float
		constexpr auto WindMethod = 0x104; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x108; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x118; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x128; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x138; // FClothConstraintSetup_Legacy
	}

	namespace n_UGizmoBaseComponent { // : UPrimitiveComponent
		constexpr auto Color = 0x428; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x438; // float
		constexpr auto PixelHitDistanceThreshold = 0x43c; // float
	}

	namespace n_UDBDCurrencyConversionTunables { // : UDataAsset
		constexpr auto Currencies = 0x38; // TMap<ECurrencyType, FCurrencyConversion>
	}

	namespace n_UVectorFieldComponent { // : UPrimitiveComponent
		constexpr auto VectorField = 0x428; // UVectorField*
		constexpr auto Intensity = 0x430; // float
		constexpr auto Tightness = 0x434; // float
		constexpr auto bPreviewVectorField = 0x438; // char : 1
	}

	namespace n_UUMGSettingLanguageContextWidget { // : UUMGSettingContextWidget
		constexpr auto LanguageScrollBox = 0x318; // UScrollBox*
		constexpr auto _languageButtonClass = 0x320; // TSoftClassPtr<UObject>
		constexpr auto _languageListRowGap = 0x350; // int32_t
		constexpr auto _selectedLanguageButton = 0x358; // UUMGSettingContextButton*
	}

	namespace n_UUMGAlertsWidget { // : UMobileBaseUserWidget
		constexpr auto AtlantaScoreAlertComponentClass = 0x300; // TSoftClassPtr<UObject>
		constexpr auto AtlantaStatusEffectAlertComponentClass = 0x330; // TSoftClassPtr<UObject>
		constexpr auto CanvasPanelAlerts = 0x360; // UCanvasPanel*
		constexpr auto IdleTime = 0x368; // float
		constexpr auto _scoreAlertClass = 0x3b0; // UObject*
		constexpr auto _statusEffectAlertClass = 0x3b8; // UObject*
	}

	namespace n_USynth2DSlider { // : UWidget
		constexpr auto ValueX = 0x128; // float
		constexpr auto ValueY = 0x12c; // float
		constexpr auto ValueXDelegate = 0x130; // FDelegate
		constexpr auto ValueYDelegate = 0x144; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x438; // FLinearColor
		constexpr auto IndentHandle = 0x448; // bool
		constexpr auto locked = 0x449; // bool
		constexpr auto StepSize = 0x44c; // float
		constexpr auto IsFocusable = 0x450; // bool
		constexpr auto OnMouseCaptureBegin = 0x458; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x468; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x478; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x488; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x498; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x4a8; // FMulticastInlineDelegate
	}

	namespace n_UStoreScreenUMG { // : UStoreScreen
		constexpr auto _customizationScreen = 0x338; // UUMGCustomizationScreenWidget*
		constexpr auto _storeScreen = 0x340; // UUMGAtlantaStoreScreen*
	}

	namespace n_UCamperAnimSlave_C { // : USlaveAnimInstance
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x288; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2c0; // FAnimNode_CopyPoseFromMesh
	}

	namespace n_UK26PathHandlerComponent { // : UActorComponent
		constexpr auto _maxPathDistance = 0xb8; // FDBDTunableRowHandle
		constexpr auto _survivorPathVisibilityTimeOnFire = 0xe0; // FDBDTunableRowHandle
		constexpr auto _defaultProjectileDistanceFromFloor = 0x108; // FDBDTunableRowHandle
		constexpr auto _maxPathIterations = 0x130; // FDBDTunableRowHandle
		constexpr auto _maxGroundSearchingDistance = 0x158; // FDBDTunableRowHandle
		constexpr auto _visualPathPart = 0x180; // AActor*
		constexpr auto _visualPathEndArrow = 0x188; // AActor*
		constexpr auto _projectileSummonDistance = 0x190; // FDBDTunableRowHandle
		constexpr auto _ammoHandler = 0x1b8; // UK26AmmoHandlerComponent*
		constexpr auto _placementValidator = 0x1c0; // UK26CrowPlacementValidatorComponent*
		constexpr auto _availablePathData = 0x1c8; // TArray<FK26PathData>
		constexpr auto _availablePaths = 0x1d8; // TArray<FK26Path>
	}

	namespace n_UWindowTitleBarAreaSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x40; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x48; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x90; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xe0; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe8; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x130; // FOrbitOptions
	}

	namespace n_UAnimationSharingStateProcessor { // : UObject
		constexpr auto AnimationStateEnum = 0x30; // TSoftObjectPtr<UEnum>
	}

	namespace n_UUpdateManager { // : UObject
		constexpr auto HotfixCheckCompleteDelay = 0x90; // float
		constexpr auto UpdateCheckCompleteDelay = 0x94; // float
		constexpr auto HotfixAvailabilityCheckCompleteDelay = 0x98; // float
		constexpr auto UpdateCheckAvailabilityCompleteDelay = 0x9c; // float
		constexpr auto bCheckPlatformOSSForUpdate = 0xa0; // bool
		constexpr auto bCheckOSSForUpdate = 0xa1; // bool
		constexpr auto AppSuspendedUpdateCheckTimeSeconds = 0xa4; // int32_t
		constexpr auto bPlatformEnvironmentDetected = 0xb0; // bool
		constexpr auto bInitialUpdateFinished = 0xb1; // bool
		constexpr auto bCheckHotfixAvailabilityOnly = 0xb2; // bool
		constexpr auto CurrentUpdateState = 0xb3; // EUpdateState
		constexpr auto WorstNumFilesPendingLoadViewed = 0xb4; // int32_t
		constexpr auto LastPatchCheckResult = 0xb8; // EPatchCheckResult
		constexpr auto LastHotfixResult = 0xb9; // EHotfixResult
		constexpr auto LastUpdateCheck = 0xe8; // FDateTime [0x2]
		constexpr auto LastCompletionResult = 0xf8; // EUpdateCompletionStatus [0x2]
		constexpr auto UpdateStateEnum = 0x110; // UEnum*
		constexpr auto UpdateCompletionEnum = 0x118; // UEnum*
	}

	namespace n_UAtlantaHudLookBackJoystick { // : UMobileBaseUserWidget
		constexpr auto TutorialAnimContainer = 0x300; // UGridPanel*
	}

	namespace n_UGMAdaptiveShadowMapSourceDirectional { // : UGMAdaptiveShadowMapSource
		constexpr auto _directionalLightComponent = 0x2f8; // UDirectionalLightComponent*
	}

	namespace n_UMasterAudioSubmixCaptureProtocol { // : UMovieSceneAudioCaptureProtocolBase
		constexpr auto Filename = 0x60; // FString
	}

	namespace n_AUIScreenshotTool { // : ACharacterTool
		constexpr auto PostProcessVolume = 0x338; // APostProcessVolume*
		constexpr auto ScreenshotFolderPath = 0x340; // FString
		constexpr auto ScreenshotResolution = 0x350; // int32_t
		constexpr auto IconResolution = 0x354; // int32_t
		constexpr auto DelayBeforeTakingScreenshot = 0x358; // float
		constexpr auto Batching = 0x35c; // EScreenShotBatching
		constexpr auto CurrentPart = 0x360; // FName
		constexpr auto CurrentPartCategory = 0x36c; // ECustomizationCategory
		constexpr auto CurrentSetting = 0x370; // FName
		constexpr auto ScreenshotCamera = 0x380; // ACameraActor*
		constexpr auto UpdateCameraFromViewSettings = 0x388; // bool
		constexpr auto SurvivorHeadView = 0x38c; // FScreenshotViewSetting
		constexpr auto SurvivorTorsoView = 0x3b4; // FScreenshotViewSetting
		constexpr auto SurvivorLegsView = 0x3dc; // FScreenshotViewSetting
		constexpr auto KillerHeadView = 0x404; // FScreenshotViewSetting
		constexpr auto KillerBodyView = 0x42c; // FScreenshotViewSetting
		constexpr auto KillerWeaponView = 0x454; // FScreenshotViewSetting
		constexpr auto GenderViewOverrides = 0x480; // TArray<FGenderViewSetting>
		constexpr auto CharacterViewOverrides = 0x490; // TArray<FCharacterItemCategoryViewSetting>
		constexpr auto ItemViewOverrides = 0x4a0; // TArray<FItemViewSetting>
		constexpr auto OutfitView = 0x4b0; // TArray<FRoleGenderViewSetting>
		constexpr auto OutfitCharacterOverrides = 0x4c0; // TArray<FCharacterViewSetting>
		constexpr auto OutfitTwoPartsView = 0x4d0; // TArray<FRoleGenderViewSetting>
		constexpr auto OutfitOverrides = 0x4e0; // TArray<FOutfitViewSetting>
		constexpr auto AnimationOverrides = 0x4f0; // TArray<FCharacterAnimation>
		constexpr auto CharmsView = 0x500; // FScreenshotViewSetting
		constexpr auto CharmsCategoryOverrides = 0x528; // TArray<FCharmCategorySetting>
		constexpr auto CharmOverrides = 0x538; // TArray<FCharmViewSetting>
		constexpr auto ReloadDBButton = 0x548; // FNamedButton
		constexpr auto _spawnedCharm = 0x5e0; // AActor*
		constexpr auto ShowIconHelp = 0x5e8; // FNamedButton
	}

	namespace n_UNatAudioCustomMesh { // : UAudioCustomMeshComponent
		constexpr auto _onBeginOverlapAudioEvent = 0x4e8; // UAkAudioEvent*
		constexpr auto _onEndOverlapAudioEvent = 0x4f0; // UAkAudioEvent*
	}

	namespace n_UUMGBloodStoreMysteryBoxPopup { // : UUMGGenericPopup
		constexpr auto MysteryItem = 0x3e8; // UUMGBloodStoreItemWidget*
		constexpr auto _itemDisplayName = 0x3f0; // FText
		constexpr auto _itemRarityName = 0x408; // FText
		constexpr auto _itemRarityColor = 0x420; // FSlateColor
		constexpr auto _addedToInventory = 0x448; // FText
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UBTDecorator_RandomByDistance { // : UBTDecorator_TickableBase
		constexpr auto BBAroundLoc = 0x70; // FBlackboardKeySelector
		constexpr auto BBRelativeFromTime = 0xa0; // FBlackboardKeySelector
		constexpr auto BBRelativeToTime = 0xd0; // FBlackboardKeySelector
		constexpr auto StartDistance = 0x100; // FAITunableParameter
		constexpr auto EndDistance = 0x110; // FAITunableParameter
		constexpr auto PercentageAtStartDistance = 0x120; // FAITunableParameter
		constexpr auto PercentageAtEndDistance = 0x130; // FAITunableParameter
		constexpr auto PercentagesAtTimes = 0x140; // TArray<FAIRandomByDistancePercentagesAtTime>
	}

	namespace n_USmallGame { // : UPerk
		constexpr auto _detectionConeAngle = 0x3d0; // float [0x3]
		constexpr auto _detectionConeAngleReductionRate = 0x3dc; // float [0x3]
		constexpr auto _totemDetected = 0x3e8; // bool
	}

	namespace n_UPhysicsCollisionHandler { // : UObject
		constexpr auto ImpactThreshold = 0x30; // float
		constexpr auto ImpactReFireDelay = 0x34; // float
		constexpr auto DefaultImpactSound = 0x38; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x40; // float
	}

	namespace n_UPalletPulldownBlockerComponent { // : UActorComponent
		constexpr auto _isPalletPulldownBlockedByEntity = 0x160; // bool
		constexpr auto _blockedDisappearFxTime = 0x164; // float
	}

	namespace n_UParticleModulePivotOffset { // : UParticleModuleLocationBase
		constexpr auto PivotOffset = 0x38; // FVector2D
	}

	namespace n_USetTrapInteraction { // : UChargeableInteractionDefinition
		constexpr auto _dropSocket = 0x6d8; // FSocketOrBoneCache
	}

	namespace n_ULogoutCallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UMeshEditingViewProperties { // : UInteractiveToolPropertySet
		constexpr auto bShowWireframe = 0x58; // bool
		constexpr auto MaterialMode = 0x5c; // EMeshEditingMaterialModes
		constexpr auto bFlatShading = 0x60; // bool
		constexpr auto Color = 0x64; // FLinearColor
		constexpr auto Image = 0x78; // UTexture2D*
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x30; // FVector
		constexpr auto ResetRotation = 0x3c; // FRotator
	}

	namespace n_UAlwaysVisibleToGlyphQuestHolderOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _outlineColor = 0xc0; // FLinearColor
		constexpr auto _glyphQuestId = 0xd0; // FName
	}

	namespace n_UParticleModuleVectorFieldScale { // : UParticleModuleVectorFieldBase
		constexpr auto VectorFieldScale = 0x38; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UIsHighestTierOriginatingPerk { // : UEventDrivenModifierCondition
		constexpr auto _applicableEffects = 0xe8; // TArray<UStatusEffect*>
	}

	namespace n_UAkItemProperties { // : UWidget
		constexpr auto OnSelectionChanged = 0x128; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x138; // FMulticastInlineDelegate
	}

	namespace n_URangeToActorsTrackerStrategy { // : UObject
		constexpr auto _range = 0x30; // FDBDTunableRowHandle
	}

	namespace n_UAISenseConfig_Damage { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Damage*
	}

	namespace n_UK25AnimInstance { // : UKillerAnimInstance
		constexpr auto _isTeleporting = 0x5a8; // bool
		constexpr auto _isPossessingGateway = 0x5a9; // bool
		constexpr auto _isSelectingGatewayLocation = 0x5aa; // bool
	}

	namespace n_UTutorialEndGameComponent { // : UEndGameComponent
		constexpr auto _timerMaxCompletionPercentage = 0x158; // float
	}

	namespace n_UAddon_K22Power_15 { // : UOnEventBaseAddon
		constexpr auto _brokenDuration = 0x2a8; // float
	}

	namespace n_UBTService_OnRelevantBase { // : UBTService
		constexpr auto When = 0x78; // EAINodeRelevancyOptions
	}

	namespace n_UGameplayTasksComponent { // : UActorComponent
		constexpr auto bIsNetDirty = 0xc4; // char : 1
		constexpr auto SimulatedTasks = 0xc8; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xd8; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0xf8; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x108; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UCompositeCurveTable { // : UCurveTable
		constexpr auto ParentTables = 0xa8; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb8; // TArray<UCurveTable*>
	}

	namespace n_UMeshStatisticsProperties { // : UInteractiveToolPropertySet
		constexpr auto Mesh = 0x58; // FString
		constexpr auto UV = 0x68; // FString
		constexpr auto Attributes = 0x78; // FString
	}

	namespace n_UCoreRewardWrapperWidget { // : UUserWidget
		constexpr auto CharacterRewardWidget = 0x260; // UCoreCharacterRewardWidget*
		constexpr auto CurrencyProgressionRewardWidget = 0x268; // UCoreCurrencyProgressionRewardWidget*
		constexpr auto CustomizationRewardWidget = 0x270; // UCoreCustomizationRewardWidget*
		constexpr auto RewardContainer = 0x278; // UPanelWidget*
		constexpr auto _rewardWidget = 0x280; // UCoreRewardWidget*
	}

	namespace n_UDatasmithActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto Layers = 0x38; // TSet<FName>
		constexpr auto Tags = 0x88; // TSet<FName>
	}

	namespace n_UActorSpawnerRandomizer { // : UObjectRandomizer
		constexpr auto ActivatedSpawnerContentLists = 0x228; // TArray<FSpawnerElement>
		constexpr auto DeactivatedSpawnerContentLists = 0x238; // TArray<FSpawnerElement>
	}

	namespace n_USocialManager { // : UObject
		constexpr auto SocialToolkits = 0x50; // TArray<USocialToolkit*>
		constexpr auto SocialDebugTools = 0x60; // USocialDebugTools*
	}

	namespace n_UInteractionStarterComponent { // : UActorComponent
		constexpr auto _interaction = 0xc0; // UInteractionDefinition*
		constexpr auto _shouldStartInteraction = 0xc8; // bool
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ExpressionGUID = 0x54; // FGuid
	}

	namespace n_UChangeZombieStateBTTask { // : UBTTask_BlueprintBase
		constexpr auto _zombieState = 0xb0; // EZombieState
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x60; // UCameraAnim*
		constexpr auto CompressTolerance = 0x68; // float
	}

	namespace n_UCoreHudObjectivesWidget { // : UCoreBaseHudWidget
		constexpr auto SpecialSpacer = 0x300; // UDBDTextBlock*
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0x48; // FExpressionInput
		constexpr auto Time = 0x64; // FExpressionInput
		constexpr auto Speed = 0x80; // FExpressionInput
		constexpr auto SpeedX = 0x9c; // float
		constexpr auto SpeedY = 0xa0; // float
		constexpr auto ConstCoordinate = 0xa4; // uint32_t
		constexpr auto bFractionalPart = 0xa8; // bool
	}

	namespace n_UTextBlock { // : UTextLayoutWidget
		constexpr auto Text = 0x148; // FText
		constexpr auto TextDelegate = 0x160; // FDelegate
		constexpr auto ColorAndOpacity = 0x178; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x1a0; // FDelegate
		constexpr auto Font = 0x1b8; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x210; // FSlateBrush
		constexpr auto ShadowOffset = 0x2a0; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x2a8; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x2b8; // FDelegate
		constexpr auto MinDesiredWidth = 0x2cc; // float
		constexpr auto bWrapWithInvalidationPanel = 0x2d0; // bool
		constexpr auto bAutoWrapText = 0x2d1; // bool
		constexpr auto bSimpleTextMode = 0x2d2; // bool
	}

	namespace n_UBTService_SetBBEntryTime { // : UBTService_OnRelevantBase
		constexpr auto BBToSetKey = 0x80; // FBlackboardKeySelector
	}

	namespace n_UBTTask_SetBBEntryTime { // : UBTTaskNode
		constexpr auto BBToSetKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_USidePushStrategyComponent { // : UBasePushStrategyComponent
		constexpr auto _maxImpulseStrength = 0xb8; // float
		constexpr auto _minImpulseStrength = 0xbc; // float
		constexpr auto _detectorCapsuleInflation = 0xc0; // float
	}

	namespace n_UAddon_K24_04 { // : UOnEventBaseAddon
		constexpr auto _effectTime = 0x2a8; // float
		constexpr auto OutlineColor = 0x2ac; // FLinearColor
	}

	namespace n_USoundSubmixWithParentBase { // : USoundSubmixBase
		constexpr auto ParentSubmix = 0x40; // USoundSubmixBase*
	}

	namespace n_ABP_Menu_CamperFemale13_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UTerrorRadiusReceiverComponent { // : UActorComponent
		constexpr auto OnIsInTerrorRadiusChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _trVerticalDistanceFactor = 0xc8; // UCurveFloat*
		constexpr auto _heartbeatMasterVolumeInterpolationSpeed = 0xd0; // float
	}

	namespace n_UAB_Menu_Slasher26_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x2b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x2d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_3 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x4b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x528; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x5a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x640; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x6b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x758; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x790; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x840; // bool
		constexpr auto Is Online = 0x841; // bool
		constexpr auto _interrupt02 = 0x842; // bool
		constexpr auto KillerBP = 0x848; // ABP_Menu_Slasher26_C*
		constexpr auto RandomInterupt = 0x850; // int32_t
	}

	namespace n_UUMGLoadoutWidget { // : UUMGLoadoutBaseWidget
		constexpr auto InventoryItemTypeText = 0x358; // FText
		constexpr auto InventoryFilterText = 0x370; // FText
		constexpr auto PageScrollWidget = 0x388; // UUMGLoadoutPageScrollWidget*
		constexpr auto LoadoutTitleText = 0x390; // FText
		constexpr auto InventoryPanelTitleText = 0x3a8; // FText
	}

	namespace n_UHudSettings { // : UObject
		constexpr auto bShowHUD = 0x30; // char : 1
		constexpr auto DebugDisplay = 0x38; // TArray<FName>
	}

	namespace n_UGameplayTagsDeveloperSettings { // : UObject
		constexpr auto DeveloperConfigName = 0x30; // FString
	}

	namespace n_UAsyncTaskDownloadCacheImage { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x48; // FMulticastInlineDelegate
		constexpr auto _url = 0x58; // FString
	}

	namespace n_URadialForceComponent { // : USceneComponent
		constexpr auto Radius = 0x210; // float
		constexpr auto Falloff = 0x214; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x218; // float
		constexpr auto bImpulseVelChange = 0x21c; // char : 1
		constexpr auto bIgnoreOwningActor = 0x21c; // char : 1
		constexpr auto ForceStrength = 0x220; // float
		constexpr auto DestructibleDamage = 0x224; // float
		constexpr auto ObjectTypesToAffect = 0x228; // TArray<EObjectTypeQuery>
	}

	namespace n_UEnvelopeFollowerListener { // : UActorComponent
		constexpr auto OnEnvelopeFollowerUpdate = 0xb8; // FMulticastInlineDelegate
	}

	namespace n_UChaosClothSharedSimConfig { // : UClothSharedConfigCommon
		constexpr auto IterationCount = 0x30; // int32_t
		constexpr auto SubdivisionCount = 0x34; // int32_t
		constexpr auto SelfCollisionThickness = 0x38; // float
		constexpr auto CollisionThickness = 0x3c; // float
		constexpr auto bUseDampingOverride = 0x40; // bool
		constexpr auto Damping = 0x44; // float
		constexpr auto bUseGravityOverride = 0x48; // bool
		constexpr auto GravityScale = 0x4c; // float
		constexpr auto Gravity = 0x50; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x5c; // bool
		constexpr auto bUseXPBDConstraints = 0x5d; // bool
	}

	namespace n_UUMGLacerationStatusEffectUI { // : UMobileBaseUserWidget
		constexpr auto LacerationDecoration = 0x300; // UImage*
		constexpr auto LacerationFill = 0x308; // UImage*
		constexpr auto _maximumLacerationDefinitions = 0x310; // TArray<int32_t>
		constexpr auto _lacerationDecorationImages = 0x320; // TArray<UPaperSprite*>
		constexpr auto _lacerationFillImages = 0x330; // TArray<UTexture2D*>
		constexpr auto _lacerationDefaultColor = 0x340; // FLinearColor
		constexpr auto _lacerationFillFullColor = 0x350; // FLinearColor
		constexpr auto _glassShatterDisintigrateAnimationName = 0x360; // FName
	}

	namespace n_UPhysicalMaterialMask { // : UObject
		constexpr auto UVChannelIndex = 0x30; // int32_t
		constexpr auto AddressX = 0x34; // TextureAddress
		constexpr auto AddressY = 0x35; // TextureAddress
	}

	namespace n_UAkStadiaInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_USlasherAnimSlaveFemale_C { // : USlaveAnimInstance
		constexpr auto UberGraphFrame = 0x280; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x288; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2c0; // FAnimNode_CopyPoseFromMesh
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto MatineeData = 0x230; // UInterpData*
		constexpr auto MatineeControllerName = 0x238; // FName
		constexpr auto PlayRate = 0x244; // float
		constexpr auto bPlayOnLevelLoad = 0x248; // char : 1
		constexpr auto bForceStartPos = 0x248; // char : 1
		constexpr auto ForceStartPosition = 0x24c; // float
		constexpr auto bLooping = 0x250; // char : 1
		constexpr auto bRewindOnPlay = 0x250; // char : 1
		constexpr auto bNoResetOnRewind = 0x250; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x250; // char : 1
		constexpr auto bDisableRadioFilter = 0x250; // char : 1
		constexpr auto bClientSideOnly = 0x250; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x250; // char : 1
		constexpr auto bIsSkippable = 0x250; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x254; // int32_t
		constexpr auto bDisableMovementInput = 0x258; // char : 1
		constexpr auto bDisableLookAtInput = 0x258; // char : 1
		constexpr auto bHidePlayer = 0x258; // char : 1
		constexpr auto bHideHud = 0x258; // char : 1
		constexpr auto GroupActorInfos = 0x260; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x270; // char : 1
		constexpr auto GroupInst = 0x278; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x288; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x298; // char : 1
		constexpr auto bReversePlayback = 0x298; // char : 1
		constexpr auto bPaused = 0x298; // char : 1
		constexpr auto bPendingStop = 0x298; // char : 1
		constexpr auto InterpPosition = 0x29c; // float
		constexpr auto ReplicationForceIsPlaying = 0x2a4; // char
		constexpr auto OnPlay = 0x2a8; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x2b8; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x2c8; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xb8; // char : 1
		constexpr auto StartRadius = 0xc0; // FRawDistributionFloat
		constexpr auto StartHeight = 0xf0; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x120; // CylinderHeightAxis
	}

	namespace n_UWidgetComponent { // : UMeshComponent
		constexpr auto space = 0x478; // EWidgetSpace
		constexpr auto TimingPolicy = 0x479; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x480; // UUserWidget*
		constexpr auto DrawSize = 0x488; // FIntPoint
		constexpr auto bManuallyRedraw = 0x490; // bool
		constexpr auto bRedrawRequested = 0x491; // bool
		constexpr auto RedrawTime = 0x494; // float
		constexpr auto CurrentDrawSize = 0x4a0; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x4a8; // bool
		constexpr auto Pivot = 0x4ac; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4b4; // bool
		constexpr auto bWindowFocusable = 0x4b5; // bool
		constexpr auto WindowVisibility = 0x4b6; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4b7; // bool
		constexpr auto OwnerPlayer = 0x4b8; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4c0; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x4d0; // FLinearColor
		constexpr auto OpacityFromTexture = 0x4e0; // float
		constexpr auto BlendMode = 0x4e4; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x4e5; // bool
		constexpr auto TickWhenOffscreen = 0x4e6; // bool
		constexpr auto Widget = 0x4e8; // UUserWidget*
		constexpr auto BodySetup = 0x510; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x518; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x520; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x528; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x530; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x538; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x540; // UMaterialInterface*
		constexpr auto RenderTarget = 0x548; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x550; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x558; // bool
		constexpr auto bEditTimeUsable = 0x559; // bool
		constexpr auto SharedLayerName = 0x55c; // FName
		constexpr auto LayerZOrder = 0x568; // int32_t
		constexpr auto GeometryMode = 0x56c; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x570; // float
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Bias = 0x64; // float
		constexpr auto Scale = 0x68; // float
	}

	namespace n_ASpecialBehaviourInteractable { // : AInteractable
		constexpr auto _specialBehaviourOwner = 0x328; // TWeakObjectPtr<ADBDPlayerState>
	}

	namespace n_AK25Husk { // : ADBDBasePlayer
		constexpr auto _customizedSkeletalMeshComponent = 0x560; // UCustomizedSkeletalMesh*
		constexpr auto _montageFollower = 0x568; // UAnimationMontageSlave*
		constexpr auto _montagePlayer = 0x570; // UMontagePlayer*
		constexpr auto _k25CharacterOverrideID = 0x578; // int32_t
	}

	namespace n_UBaseSurvivorAnimInstance { // : UPlayerAnimInstance
		constexpr auto _owningSurvivor = 0x4e8; // ACamperPlayer*
	}

	namespace n_UCustomizedAudioComponent { // : UActorComponent
		constexpr auto OnCustomizedAudioSwitchStateChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto AudioCharacterNameDefaultSwitchState = 0x168; // FString
		constexpr auto AudioCharacterSubNameDefaultSwitchState = 0x178; // FString
		constexpr auto AudioCharacterHeadDefaultSwitchState = 0x188; // FString
		constexpr auto AudioCharacterClothesDefaultSwitchState = 0x198; // FString
		constexpr auto AudioCharacterShoesDefaultSwitchState = 0x1a8; // FString
		constexpr auto AudioCharacterWeaponDefaultSwitchState = 0x1b8; // FString
		constexpr auto AudioCharacterAmbianceDefaultSwitchState = 0x1c8; // FString
		constexpr auto AudioCharacterStateDefaultSwitchState = 0x1d8; // FString
	}

	namespace n_UK25SurvivorChainRotationStrategy { // : UBaseCharacterRotationStrategy
		constexpr auto _cachedSurvivor = 0xb8; // TWeakObjectPtr<ACamperPlayer>
		constexpr auto _cachedChainAttachmentComponent = 0xc0; // UK25SurvivorChainAttachmentComponent*
	}

	namespace n_UStereoLayerShapeEquirect { // : UStereoLayerShape
		constexpr auto LeftUVRect = 0x30; // FBox2D
		constexpr auto RightUVRect = 0x44; // FBox2D
		constexpr auto LeftScale = 0x58; // FVector2D
		constexpr auto RightScale = 0x60; // FVector2D
		constexpr auto LeftBias = 0x68; // FVector2D
		constexpr auto RightBias = 0x70; // FVector2D
	}

	namespace n_USoundNodeSwitch { // : USoundNode
		constexpr auto IntParameterName = 0x50; // FName
	}

	namespace n_APaperFlipbookActor { // : AActor
		constexpr auto RenderComponent = 0x230; // UPaperFlipbookComponent*
	}

	namespace n_Uk24PowerCooldownInteraction { // : UInteractionDefinition
		constexpr auto _k24PowerCooldownTime = 0x5b0; // FDBDTunableRowHandle
		constexpr auto _cooldownSpeedCurve = 0x5d8; // UCurveFloat*
		constexpr auto _cooldownLvl3SpeedCurve = 0x5e0; // UCurveFloat*
		constexpr auto _playedCooldownSpeedCurve = 0x5e8; // UCurveFloat*
	}

	namespace n_UOverlaySlot { // : UPanelSlot
		constexpr auto Padding = 0x48; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UAISense_Trail { // : UAISense
		constexpr auto Events = 0x90; // TArray<FAITrailEvent>
	}

	namespace n_UMaterialExpressionTangent { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Period = 0x64; // float
	}

	namespace n_UCameraShakeSourceComponent { // : USceneComponent
		constexpr auto Attenuation = 0x210; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x214; // float
		constexpr auto OuterAttenuationRadius = 0x218; // float
		constexpr auto CameraShake = 0x220; // UCameraShake*
		constexpr auto bAutoPlay = 0x228; // bool
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto MinInput = 0x54; // float
		constexpr auto MaxInput = 0x58; // float
		constexpr auto MinOutput = 0x5c; // float
		constexpr auto MaxOutput = 0x60; // float
		constexpr auto ParamMode = 0x64; // DistributionParamMode
	}

	namespace n_UPostEventAtLocationAsync { // : UBlueprintAsyncActionBase
		constexpr auto COMPLETED = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAudioFXComponent { // : UActorComponent
		constexpr auto _audioAmbientDetector = 0xb8; // UPrimitiveComponent*
	}

	namespace n_UDBDClipRegionComponent { // : UDBDLocatorComponent
		constexpr auto AffectedMaterialsAndVariants = 0x210; // TArray<FAffectedMaterialAndVariant>
	}

	namespace n_UDestructibleMesh { // : USkeletalMesh
		constexpr auto DefaultDestructibleParameters = 0x388; // FDestructibleParameters
		constexpr auto FractureEffects = 0x410; // TArray<FFractureEffect>
	}

	namespace n_UPrimitiveComponent { // : USceneComponent
		constexpr auto MinDrawDistance = 0x218; // float
		constexpr auto LDMaxDrawDistance = 0x21c; // float
		constexpr auto CachedMaxDrawDistance = 0x220; // float
		constexpr auto DepthPriorityGroup = 0x224; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x225; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x226; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x227; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x228; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x228; // char : 1
		constexpr auto bNeverDistanceCull = 0x228; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x228; // char : 1
		constexpr auto bForceCastStaticShadows = 0x229; // char : 1
		constexpr auto bForceToBeInCachedShadowmap = 0x229; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x229; // char : 1
		constexpr auto bMultiBodyOverlap = 0x229; // char : 1
		constexpr auto bTraceComplexOnMove = 0x229; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x229; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x229; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x229; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x22a; // char : 1
		constexpr auto bRenderCustomColourNoDepth = 0x22c; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x230; // char : 1
		constexpr auto bVisibleInRayTracing = 0x230; // char : 1
		constexpr auto bRenderInMainPass = 0x230; // char : 1
		constexpr auto bRenderInDepthPass = 0x230; // char : 1
		constexpr auto bReceivesDecals = 0x230; // char : 1
		constexpr auto bOwnerNoSee = 0x230; // char : 1
		constexpr auto bOnlyOwnerSee = 0x230; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x230; // char : 1
		constexpr auto bUseAsOccluder = 0x231; // char : 1
		constexpr auto bSelectable = 0x231; // char : 1
		constexpr auto bForceMipStreaming = 0x231; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x231; // char : 1
		constexpr auto CastShadow = 0x231; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x231; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x231; // char : 1
		constexpr auto bCastDynamicShadow = 0x231; // char : 1
		constexpr auto bCastStaticShadow = 0x232; // char : 1
		constexpr auto DetailLevelBeforeCastShadows = 0x233; // EDetailMode
		constexpr auto DetailLevelBeforeCastDynamicShadows = 0x234; // ELightingDetailMode
		constexpr auto bCastVolumetricTranslucentShadow = 0x238; // char : 1
		constexpr auto bSelfShadowOnly = 0x238; // char : 1
		constexpr auto bCastFarShadow = 0x238; // char : 1
		constexpr auto bCastInsetShadow = 0x238; // char : 1
		constexpr auto bCastCinematicShadow = 0x238; // char : 1
		constexpr auto bCastHiddenShadow = 0x238; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x238; // char : 1
		constexpr auto bLightAsIfStatic = 0x238; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x239; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x239; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x239; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x239; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x239; // char : 1
		constexpr auto bIgnoreRadialForce = 0x239; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x239; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x239; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x23a; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x23a; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x23a; // char : 1
		constexpr auto bUseEditorCompositing = 0x23a; // char : 1
		constexpr auto bRenderCustomDepth = 0x23a; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x23b; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x23d; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x23e; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x23f; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x240; // int32_t
		constexpr auto CustomPrimitiveData = 0x248; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x258; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x270; // int32_t
		constexpr auto VisibilityId = 0x274; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x278; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x288; // int8_t
		constexpr auto VirtualTextureCullMips = 0x289; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x28a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x28b; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x290; // float
		constexpr auto BoundsScale = 0x29c; // float
		constexpr auto MoveIgnoreActors = 0x2b0; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2c0; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2e0; // FBodyInstance
		constexpr auto OnComponentHit = 0x3f8; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x3f9; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x3fa; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x3fb; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x3fc; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x3fe; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x3ff; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x400; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x401; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x402; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x403; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x404; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x405; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x420; // UPrimitiveComponent*
	}

	namespace n_ULiveLinkSubjectSettings { // : UObject
		constexpr auto PreProcessors = 0x30; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x40; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x48; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x58; // ULiveLinkRole*
	}

	namespace n_UTileMatrix { // : UObject
		constexpr auto _matrix = 0x30; // TArray<FArrayOfATile>
		constexpr auto _tiles = 0x40; // TArray<ATile*>
		constexpr auto _extraTiles = 0x50; // TArray<ATile*>
		constexpr auto _quadInfoArray = 0x60; // TArray<FQuadrantInfo>
		constexpr auto _quadIndexMatrix = 0x70; // TArray<FArrayOfInt32>
	}

	namespace n_ULegIKSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _leftFootOffset = 0x4f0; // FVector
		constexpr auto _rightFootOffset = 0x4fc; // FVector
		constexpr auto _pelvisOffset = 0x508; // FVector
		constexpr auto _isIdle = 0x514; // bool
		constexpr auto _isCrouched = 0x515; // bool
		constexpr auto _rightFootDeltaRotator = 0x518; // FRotator
		constexpr auto _leftFootDeltaRotator = 0x524; // FRotator
		constexpr auto AnimCollection = 0x530; // UAnimCollection*
		constexpr auto _floorJoint = 0x538; // FName
		constexpr auto _pelvisOffsetTreshold = 0x544; // float
		constexpr auto _pelvisOffsetRange = 0x548; // FFloatRange
		constexpr auto _pelvisOffsetRangeCrouched = 0x558; // FFloatRange
		constexpr auto _pelvisOffsetInterpolationSpeed = 0x568; // float
		constexpr auto _footOffsetRange = 0x56c; // FFloatRange
		constexpr auto _footOffsetRangeCrouched = 0x57c; // FFloatRange
		constexpr auto _footOffsetInterpolationSpeed = 0x58c; // float
		constexpr auto _footPitchDeltaRange = 0x590; // FFloatRange
		constexpr auto _leftFootGroundDetector = 0x5a0; // UBaseGroundDetectorComponent*
		constexpr auto _rightFootGroundDetector = 0x5a8; // UBaseGroundDetectorComponent*
		constexpr auto maxLocalHeightForPlanting = 0x5b0; // float
		constexpr auto _locomotionPredictor = 0x5f0; // ULocomotionPredictor*
	}

	namespace n_AHUD { // : AActor
		constexpr auto PlayerOwner = 0x230; // APlayerController*
		constexpr auto bLostFocusPaused = 0x238; // char : 1
		constexpr auto bShowHUD = 0x238; // char : 1
		constexpr auto bShowDebugInfo = 0x238; // char : 1
		constexpr auto CurrentTargetIndex = 0x23c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x240; // char : 1
		constexpr auto bShowOverlays = 0x240; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x240; // char : 1
		constexpr auto PostRenderedActors = 0x248; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x260; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x270; // TArray<FName>
		constexpr auto Canvas = 0x280; // UCanvas*
		constexpr auto DebugCanvas = 0x288; // UCanvas*
		constexpr auto DebugTextList = 0x290; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x2a0; // AActor*
		constexpr auto ShowDebugTargetActor = 0x2a8; // AActor*
	}

	namespace n_UAISkill_InteractionSetTrap { // : UAISkill_Interaction
		constexpr auto TrapClass = 0x170; // AActor*
		constexpr auto MaxDistanceFromPointOfInterest = 0x178; // float
		constexpr auto MaxDistanceFromAnotherSetTrap = 0x17c; // float
	}

	namespace n_UDeceptionEffect { // : UStatusEffect
		constexpr auto _hideBloodTrailsWhenCamperFakeEnterLocker = 0x350; // bool
	}

	namespace n_UInterpToMovementComponent { // : UMovementComponent
		constexpr auto Duration = 0xf8; // float
		constexpr auto bPauseOnImpact = 0xfc; // char : 1
		constexpr auto bSweep = 0x100; // bool
		constexpr auto TeleportType = 0x101; // ETeleportType
		constexpr auto BehaviourType = 0x102; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0x103; // bool
		constexpr auto bForceSubStepping = 0x104; // char : 1
		constexpr auto OnInterpToReverse = 0x108; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x118; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x128; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x138; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x148; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x158; // float
		constexpr auto MaxSimulationIterations = 0x15c; // int32_t
		constexpr auto ControlPoints = 0x160; // TArray<FInterpControlPoint>
	}

	namespace n_UK25KillerTeleportationPositionFinderComponent { // : UActorComponent
		constexpr auto _rayCastZOffet = 0xb8; // float
		constexpr auto _rayCastLength = 0xbc; // float
		constexpr auto _killerInRangeMinimumDistanceCheck = 0xc0; // float
		constexpr auto _killerInRangeMaxRangePercentage = 0xc4; // float
		constexpr auto _deltaHeightThreshold = 0xc8; // float
		constexpr auto _minDistanceFromLamentConfiguration = 0xd0; // FDBDTunableRowHandle
		constexpr auto _maxDistanceFromLamentConfiguration = 0xf8; // FDBDTunableRowHandle
		constexpr auto _timeBetweenFailsafeChecks = 0x140; // float
		constexpr auto _teleportLocationStatus = 0x188; // EK25TeleportLocationStatus
		constexpr auto _bestTeleportLocation = 0x18c; // FVector
		constexpr auto _escapeDoors = 0x198; // TArray<AEscapeDoor*>
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto ViewportClient = 0x78; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x9c; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0xa0; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa8; // char : 1
		constexpr auto ControllerId = 0xc0; // int32_t
	}

	namespace n_USetDreamSnareInteraction { // : UChargeableInteractionDefinition
		constexpr auto MinPitch = 0x6d8; // float
		constexpr auto MinPlacementDistance = 0x6dc; // float
		constexpr auto MaxPlacementDistance = 0x6e0; // float
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto defaultValue = 0x68; // float
		constexpr auto bUseCustomPrimitiveData = 0x6c; // bool
		constexpr auto PrimitiveDataIndex = 0x6d; // char
	}

	namespace n_UHISMMaterialHelperSettings { // : UDataAsset
		constexpr auto _meshMaterialOverride = 0x38; // TMap<UStaticMesh*, TSoftClassPtr<UObject>>
	}

	namespace n_UScourgeHookManagerComponent { // : UActorComponent
		constexpr auto _scourgeHooks = 0x118; // TArray<AMeatHook*>
	}

	namespace n_Uspecialeventmanager { // : UObject
		constexpr auto _specialEventsContainer = 0xb0; // USpecialEventsContainer*
	}

	namespace n_ARifleChain { // : AActor
		constexpr auto OnProjectileSet = 0x230; // FMulticastInlineDelegate
		constexpr auto OnIsCollidingChanged = 0x240; // FMulticastInlineDelegate
		constexpr auto _chainCenterAkComponent = 0x250; // UAkComponent*
		constexpr auto _collisionLoopStartEvent = 0x258; // UAkAudioEvent*
		constexpr auto _collisionLoopEndEvent = 0x260; // UAkAudioEvent*
		constexpr auto _collisionSoundLoops = 0x268; // TArray<FAkSoundLoop>
		constexpr auto _sphereTraceRadius = 0x278; // float
		constexpr auto _timeBetweenTrace = 0x27c; // float
		constexpr auto _harpoon = 0x280; // TScriptInterface<IGunslingerHarpoon>
	}

	namespace n_UK24PowerAnimInstance { // : UAnimInstance
		constexpr auto _owningKiller = 0x270; // ASlasherPlayer*
		constexpr auto _isInPowerMode = 0x278; // bool
		constexpr auto _isChargingPower = 0x279; // bool
		constexpr auto _isK24PowerAttacking = 0x27a; // bool
		constexpr auto _isRequestingPowerAttack = 0x27b; // bool
		constexpr auto _tentacleLength = 0x27c; // float
		constexpr auto _isFirstPersonView = 0x280; // bool
		constexpr auto _attackSubstate = 0x281; // EAttackSubstate
		constexpr auto _isIntroCompleted = 0x282; // bool
		constexpr auto _isLevelReadyToPlay = 0x283; // bool
		constexpr auto _powerLevel = 0x284; // int32_t
		constexpr auto _forwardVelocity = 0x288; // float
		constexpr auto _lateralVelocity = 0x28c; // float
		constexpr auto _isKilling = 0x290; // bool
		constexpr auto _k24Power = 0x298; // AK24Power*
	}

	namespace n_UChainAttachedGateBlockerEffect { // : UGateBlockerEffect
		constexpr auto _blockGateLingeringTimeDyingState = 0x388; // FDBDTunableRowHandle
	}

	namespace n_UBTService_FindInteractor_Exit { // : UBTService_FindInteractor
		constexpr auto Filter = 0x218; // EFindInteractorExitOptions
		constexpr auto OpenCondition = 0x219; // EFindInteractorOpenConditions
		constexpr auto BBFinalExitLocation = 0x220; // FBlackboardKeySelector
		constexpr auto ClosedDoorOffset = 0x250; // float
		constexpr auto OpenDoorOffset = 0x254; // float
		constexpr auto OpenedExitGoalWeight = 0x258; // FAITunableParameter
		constexpr auto HatchBonusGoalWeight = 0x268; // FAITunableParameter
	}

	namespace n_USkeletalBodySetup { // : UBodySetup
		constexpr auto bSkipScaleFromAnimation = 0x268; // bool
		constexpr auto PhysicalAnimationData = 0x270; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UPawnAction_Sequence { // : UPawnAction
		constexpr auto ActionSequence = 0xa0; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xb0; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb8; // UPawnAction*
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto modifierType = 0x38; // BeamModifierType
		constexpr auto PositionOptions = 0x3c; // FBeamModifierOptions
		constexpr auto Position = 0x40; // FRawDistributionVector
		constexpr auto TangentOptions = 0x88; // FBeamModifierOptions
		constexpr auto Tangent = 0x90; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd8; // char : 1
		constexpr auto StrengthOptions = 0xdc; // FBeamModifierOptions
		constexpr auto Strength = 0xe0; // FRawDistributionFloat
	}

	namespace n_AOnlineBeaconClient { // : AOnlineBeacon
		constexpr auto BeaconOwner = 0x268; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x270; // UNetConnection*
		constexpr auto ConnectionState = 0x278; // EBeaconConnectionState
	}

	namespace n_UHexRetribution { // : UHexPerk
		constexpr auto _obliviousDurationByLevels = 0x440; // float [0x3]
		constexpr auto _auraRevealDuration = 0x44c; // float
	}

	namespace n_USlasherHitsWhileCarryingTrackerComponent { // : UActorComponent
		constexpr auto _campersHitDuringLastCarry = 0xb8; // TSet<ACamperPlayer*>
	}

	namespace n_UChannel { // : UObject
		constexpr auto Connection = 0x30; // UNetConnection*
	}

	namespace n_UUMGTallyBloodpointsWidget { // : UUMGTallyListElementWidget
		constexpr auto _itemBoxVisibility = 0x310; // ESlateVisibility
		constexpr auto _labelTotalScore = 0x318; // FText
		constexpr auto _labelItemTitle = 0x330; // FText
		constexpr auto _labelItemAddOnTitle = 0x348; // FText
		constexpr auto _labelItemTitleColor = 0x360; // FLinearColor
		constexpr auto BoxScoreCategory = 0x370; // UHorizontalBox*
		constexpr auto _scoreCategoryExtraDataMap = 0x378; // TMap<EDBDScoreCategory, FScoreCategoryUIExtraData>
	}

	namespace n_ADBDPlayerCameraManager { // : APlayerCameraManager
		constexpr auto NormalFOV = 0x2748; // float
		constexpr auto TargetingFOV = 0x274c; // float
		constexpr auto _viewRotationStrategy = 0x2750; // TScriptInterface<IViewRotationStrategy>
	}

	namespace n_UPlagueCorruptUniqueTargetsQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _previousTarget = 0x90; // AActor*
	}

	namespace n_UMovieSceneSignedObject { // : UObject
		constexpr auto Signature = 0x30; // FGuid
	}

	namespace n_UAISkill_InteractionTarget_TormentMode { // : UAISkill_InteractionTarget
		constexpr auto ChasedTargetToEvadePointMaxDistance = 0x220; // float
		constexpr auto StartTormentInPatrolAboveChargeRatio = 0x224; // float
		constexpr auto StartTormentInChaseAboveChargeRatio = 0x228; // float
	}

	namespace n_AWorldSettings { // : AInfo
		constexpr auto VisibilityCellSize = 0x238; // int32_t
		constexpr auto VisibilityAggressiveness = 0x23c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x23d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x23d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x23d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x23d; // char : 1
		constexpr auto bEnableAISystem = 0x23d; // char : 1
		constexpr auto bEnableWorldComposition = 0x23d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x23d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x23d; // char : 1
		constexpr auto bWorldGravitySet = 0x23e; // char : 1
		constexpr auto bGlobalGravitySet = 0x23e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x23e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x23e; // char : 1
		constexpr auto bHighPriorityLoading = 0x23e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x23e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x23e; // char : 1
		constexpr auto NavigationSystemConfig = 0x240; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x248; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x250; // float
		constexpr auto KillZ = 0x254; // float
		constexpr auto KillZDamageType = 0x258; // UDamageType*
		constexpr auto WorldGravityZ = 0x260; // float
		constexpr auto GlobalGravityZ = 0x264; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x268; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x270; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x278; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x280; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x288; // int32_t
		constexpr auto DefaultColorScale = 0x28c; // FVector
		constexpr auto DoAllowBatching = 0x298; // bool
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x29c; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x2a0; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x2a4; // float
		constexpr auto DefaultReverbSettings = 0x2a8; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x2c8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x2ec; // float
		constexpr auto DefaultBaseSoundMix = 0x2f0; // USoundMix*
		constexpr auto TimeDilation = 0x2f8; // float
		constexpr auto MatineeTimeDilation = 0x2fc; // float
		constexpr auto DemoPlayTimeDilation = 0x300; // float
		constexpr auto MinGlobalTimeDilation = 0x304; // float
		constexpr auto MaxGlobalTimeDilation = 0x308; // float
		constexpr auto MinUndilatedFrameTime = 0x30c; // float
		constexpr auto MaxUndilatedFrameTime = 0x310; // float
		constexpr auto BroadphaseSettings = 0x314; // FBroadphaseSettings
		constexpr auto Pauser = 0x358; // APlayerState*
		constexpr auto ReplicationViewers = 0x360; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x370; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x380; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x388; // int32_t
		constexpr auto DefaultBookmarkClass = 0x390; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x398; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x3a8; // UBookmarkBase*
	}

	namespace n_UCameraComponent { // : USceneComponent
		constexpr auto FieldOfView = 0x210; // float
		constexpr auto OrthoWidth = 0x214; // float
		constexpr auto OrthoNearClipPlane = 0x218; // float
		constexpr auto OrthoFarClipPlane = 0x21c; // float
		constexpr auto AspectRatio = 0x220; // float
		constexpr auto bConstrainAspectRatio = 0x224; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x224; // char : 1
		constexpr auto bLockToHmd = 0x224; // char : 1
		constexpr auto bUsePawnControlRotation = 0x224; // char : 1
		constexpr auto ProjectionMode = 0x225; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x260; // float
		constexpr auto PostProcessSettings = 0x290; // FPostProcessSettings
	}

	namespace n_AWindow { // : AInteractable
		constexpr auto NativeSmokeOtherIndicatorData = 0x328; // FNativeBlockIndicatorData
		constexpr auto NativeEntityIndicatorData = 0x340; // FNativeBlockIndicatorData
		constexpr auto NativeSmokeSelfIndicatorData = 0x358; // FNativeBlockIndicatorData
		constexpr auto _isBlockedByLevel = 0x370; // bool
		constexpr auto _entityAssets = 0x378; // UChildActorComponent*
		constexpr auto _materialHelper = 0x380; // UMaterialHelper*
		constexpr auto _akAudioWindow = 0x388; // UAkComponent*
		constexpr auto akAudioEventWindowsBlocStart = 0x390; // UAkAudioEvent*
		constexpr auto akAudioEventWindowsBlocStop = 0x398; // UAkAudioEvent*
		constexpr auto _survivorVaultData = 0x3a0; // TMap<ACamperPlayer*, FVaultData>
		constexpr auto _localPlayerTracker = 0x3f8; // ULocalPlayerTrackerComponent*
		constexpr auto _blockableComponent = 0x400; // UBlockableComponent*
		constexpr auto _navEvadeLoopComponent = 0x418; // UDBDNavEvadeLoopComponent*
	}

	namespace n_UDetectionFanComponent { // : USceneComponent
		constexpr auto _angleRange = 0x210; // FFloatRange
		constexpr auto _originWorldOffset = 0x220; // FVector
		constexpr auto _numberOfSpots = 0x22c; // int32_t
		constexpr auto _defaultRingRadius = 0x230; // float
		constexpr auto _collisionChannel = 0x234; // ECollisionChannel
		constexpr auto _meshComponent = 0x238; // USkeletalMeshComponent*
	}

	namespace n_UTrapKillerInteraction { // : UInteractionDefinition
		constexpr auto _overridableInteractions = 0x5b0; // TArray<FString>
		constexpr auto _caughtFootRotationOffset = 0x5c0; // FRotator
		constexpr auto _openNotifyID = 0x5cc; // FName
		constexpr auto _footSocketName = 0x5d8; // FName
	}

	namespace n_UUMGTallyProgressBar { // : UMobileBaseUserWidget
		constexpr auto ProgressBar = 0x300; // UProgressBar*
		constexpr auto PipsContainer = 0x308; // UCanvasPanel*
		constexpr auto _pipsClasses = 0x310; // TArray<TSoftClassPtr<UObject>>
		constexpr auto _pipsAlignment = 0x320; // FVector2D
	}

	namespace n_UTallyScreenUMG { // : UTallyScreen
		constexpr auto _atlTallyScreen = 0x1f8; // UUMGAtlantaTallyScreen*
	}

	namespace n_UBP_Audio_KLR_15_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UUMGTallyRankFrame { // : UMobileBaseUserWidget
		constexpr auto Frame = 0x300; // UImage*
		constexpr auto label = 0x308; // UTextBlock*
	}

	namespace n_UPoseAsset { // : UAnimationAsset
		constexpr auto PoseContainer = 0x88; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x118; // bool
		constexpr auto BasePoseIndex = 0x11c; // int32_t
		constexpr auto RetargetSource = 0x120; // FName
	}

	namespace n_UMatchConfigOptionsDataAsset { // : UPrimaryDataAsset
		constexpr auto OptionsData = 0x38; // TMap<ECustomMatchOptions, FMatchOptionAssetData>
	}

	namespace n_UAISenseConfig_PointOfInterest { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_PointOfInterest*
		constexpr auto MinGeneratorRepairSoundRange = 0x58; // float
		constexpr auto MaxGeneratorRepairSoundRange = 0x5c; // float
	}

	namespace n_AProceduralLevelBuilder { // : AActor
		constexpr auto PathToMapDirectory = 0x248; // FString
		constexpr auto PathToTilesDirectory = 0x258; // FString
		constexpr auto KillerMinProximityFromCamper = 0x268; // float
		constexpr auto SurvivorMinProximityFromOtherCamper = 0x26c; // float
		constexpr auto MinProximityBetweenGenerators = 0x270; // float
		constexpr auto MinProximityBetweenChests = 0x274; // float
		constexpr auto MinProximityBetweenTotems = 0x278; // float
		constexpr auto SurvivorMinProximityFromGenerator = 0x27c; // float
		constexpr auto SurvivorMinProximityFromTotem = 0x280; // float
		constexpr auto SurvivorMaxLineOfSightFromTotem = 0x284; // float
		constexpr auto MinProximityBetweenSpecialBehaviourItems = 0x288; // float
		constexpr auto SpecialBehaviourItemMinProximityFromSurvivor = 0x28c; // float
		constexpr auto SpecialBehaviourItemMinProximityFromKiller = 0x290; // float
		constexpr auto DebugMap = 0x298; // UPaperTileMap*
		constexpr auto DebugTiles = 0x2a0; // TArray<ATile*>
		constexpr auto SmallMeatLockerMinProximityFromKillerLair = 0x2b0; // float
		constexpr auto FactorToAdjustToWhenOutOfProximity = 0x2b4; // float
		constexpr auto FactorToAdjustToWhenInLineOfSight = 0x2b8; // float
		constexpr auto HeightAmplifier = 0x2bc; // float
		constexpr auto HeightAmplifierActivationHeight = 0x2c0; // float
		constexpr auto ProceduralGenerationData = 0x2c8; // UProceduralGenerationData*
		constexpr auto TileWeightRateOfDecay = 0x2d0; // float
		constexpr auto QuadTileWeightRateOfDecay = 0x2d4; // float
		constexpr auto _tileClass = 0x2d8; // UObject*
		constexpr auto _mapData = 0x4a0; // UMapData*
		constexpr auto _availableTilesLibrary = 0x4a8; // UObjectLibrary*
		constexpr auto _availableDerivedTileLibrary = 0x598; // UObjectLibrary*
		constexpr auto DesignTunableClass = 0x5a8; // UDBDDesignTunables*
		constexpr auto _designTunables = 0x5b0; // UDBDDesignTunables*
		constexpr auto _generatedData = 0x5b8; // FGeneratedLevelData
		constexpr auto _escapeDependencies = 0x868; // TArray<FDependency>
		constexpr auto _tileMatrix = 0xb28; // UTileMatrix*
		constexpr auto _tileBank = 0xb30; // UTileBank*
		constexpr auto _killerLairSpawner = 0xba0; // UActorSpawner*
		constexpr auto _preloadAssetReferences = 0xbb0; // TArray<FSoftObjectPath>
		constexpr auto _chestItemAssetReferences = 0xbc0; // TArray<AActor*>
		constexpr auto _slasherPawn = 0xbd0; // UObject*
		constexpr auto _tilesThatHaveBeenSpawned = 0xbf0; // TArray<ATile*>
		constexpr auto _debugProceduralDatas = 0xc10; // AProceduralLevelData*
		constexpr auto _syncer = 0xc18; // ADBDClientSyncer*
		constexpr auto _blackboardComp = 0xc20; // UBlackboardComponent*
		constexpr auto _edgeObjectHandlingStrategy = 0xc80; // UEdgeObjectHandlingStrategy*
		constexpr auto _backupKillerLairTile = 0xea8; // ATile*
	}

	namespace n_UOwningPlayerInBoonBlessingRange { // : UAnyActorPairQueryRangeIsTrue
		constexpr auto _boundTotem = 0x100; // ATotem*
	}

	namespace n_UDBDEmblem_KillerChaser { // : UDBDEmblem
		constexpr auto _chasePointsByDurationCurve = 0x148; // UCurveFloat*
		constexpr auto _hookedPlayersPenaltyDelay = 0x168; // TMap<ACamperPlayer*, float>
		constexpr auto _rankTunablesClass = 0x1b8; // UDBDRankDesignTunables*
	}

	namespace n_UDemogorgonStealthComponent { // : UActorComponent
		constexpr auto _stealthEffect = 0xb8; // TWeakObjectPtr<UStatusEffect>
	}

	namespace n_UReturnTheFavorQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _favorToReturnEvents = 0x90; // TSet<FGameplayTag>
		constexpr auto _instigatorList = 0xe0; // TSet<TWeakObjectPtr<ADBDPlayer>>
	}

	namespace n_UPhysicsConstraintTemplate { // : UObject
		constexpr auto DefaultInstance = 0x30; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1f8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x208; // FConstraintProfileProperties
	}

	namespace n_AAtlantaLobbyLevel { // : ALobbyLevel
		constexpr auto ForefrontLightingChannel = 0x2c0; // FLightingChannels
		constexpr auto BackgroundLightingChannel = 0x2c1; // FLightingChannels
		constexpr auto _offlineLobbyCamera = 0x2c8; // AAtlantaOfflineLobbyCamera*
		constexpr auto _roleSelectionLobbyCameraPosition = 0x2d0; // AActor*
		constexpr auto _characterSelectionLobbyCameraPosition = 0x2d8; // AActor*
		constexpr auto _loadoutSelectionLobbyCameraPosition = 0x2e0; // AActor*
	}

	namespace n_ULightMapVirtualTexture2D { // : UTexture2D
		constexpr auto TypeToLayer = 0x108; // TArray<int8_t>
	}

	namespace n_UMaterialExpressionStaticSwitchParameter { // : UMaterialExpressionStaticBoolParameter
		constexpr auto A = 0x70; // FExpressionInput
		constexpr auto B = 0x8c; // FExpressionInput
	}

	namespace n_UCompositionGraphCaptureProtocol { // : UMovieSceneImageCaptureProtocolBase
		constexpr auto IncludeRenderPasses = 0x60; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x70; // bool
		constexpr auto HDRCompressionQuality = 0x74; // int32_t
		constexpr auto CaptureGamut = 0x78; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x80; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0xa0; // bool
		constexpr auto PostProcessingMaterialPtr = 0xa8; // UMaterialInterface*
	}

	namespace n_UNiagaraDataInterfaceColorCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto RedCurve = 0x60; // FRichCurve
		constexpr auto GreenCurve = 0xe0; // FRichCurve
		constexpr auto BlueCurve = 0x160; // FRichCurve
		constexpr auto AlphaCurve = 0x1e0; // FRichCurve
	}

	namespace n_ADBDGameMode { // : ADBDBaseMatchGameMode
		constexpr auto OnPlayersLoadoutsCreated = 0x370; // FMulticastInlineDelegate
		constexpr auto _killerPlayerControllerClass = 0x380; // APlayerController*
		constexpr auto _survivorPlayerControllerClass = 0x388; // APlayerController*
		constexpr auto _initialPlayerStarts = 0x390; // TArray<APlayerStart*>
		constexpr auto KillerCreationPositionOrder = 0x3ec; // int32_t
	}

	namespace n_UUMGLoadoutBaseWidget { // : UMobileBaseUserWidget
		constexpr auto ItemOrPowerButton = 0x300; // UUMGLoadoutItemButton*
		constexpr auto AddonFirstButton = 0x308; // UUMGLoadoutItemButton*
		constexpr auto AddonSecondButton = 0x310; // UUMGLoadoutItemButton*
		constexpr auto OfferingButton = 0x318; // UUMGLoadoutItemButton*
		constexpr auto PerkFirstButton = 0x320; // UUMGLoadoutItemButton*
		constexpr auto PerkSecondButton = 0x328; // UUMGLoadoutItemButton*
		constexpr auto PerkThirdButton = 0x330; // UUMGLoadoutItemButton*
		constexpr auto PerkFourthButton = 0x338; // UUMGLoadoutItemButton*
		constexpr auto LoadoutItemButtons = 0x340; // TArray<UUMGLoadoutItemButton*>
		constexpr auto usingMatchRules = 0x350; // bool
		constexpr auto perkSlotsLockedByAdmin = 0x351; // bool
		constexpr auto IsSlasher = 0x352; // bool
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x30; // FSoundClassProperties
		constexpr auto ChildClasses = 0x88; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0x98; // TArray<FPassiveSoundMixModifier>
		constexpr auto Modulation = 0xa8; // FSoundModulation
		constexpr auto ParentClass = 0xb8; // USoundClass*
	}

	namespace n_UBTDecorator_IsObjectFocused { // : UBTDecorator_TickableBase
		constexpr auto BBObj = 0x70; // FBlackboardKeySelector
		constexpr auto Filter = 0xa0; // EDecoratorIsObjFocusedFilter
	}

	namespace n_ULacerationComponent { // : UActorComponent
		constexpr auto _laceration = 0xf0; // float
		constexpr auto _onHitSpeedBoost = 0x100; // UStatusEffect*
		constexpr auto _maxLaceration = 0x130; // FTunableStat
		constexpr auto _lacerationExplosionDamage = 0x1b0; // FDBDTunableRowHandle
		constexpr auto _lacerationRegressionPerSecond = 0x1d8; // FTunableStat
		constexpr auto _lacerationRegressionPerSecondWhileRunning = 0x258; // FTunableStat
		constexpr auto _speedBoostIntensity = 0x2d8; // FDBDTunableRowHandle
		constexpr auto _speedBoostDuration = 0x300; // FDBDTunableRowHandle
		constexpr auto _stopTickingRegressionWhileInjured = 0x328; // FDBDTunableRowHandle
		constexpr auto _stopTickingRegressionWhileInChase = 0x350; // FDBDTunableRowHandle
		constexpr auto _stopTickingRegressionWithinTerrorRadius = 0x378; // FDBDTunableRowHandle
		constexpr auto _timeBeforeLacerationDecayStarts = 0x3a0; // FTunableStat
		constexpr auto _regressionBufferTimerAlwaysTicks = 0x420; // FDBDTunableRowHandle
		constexpr auto _lacerationToRemoveOnBasicAttack = 0x448; // FDBDTunableRowHandle
		constexpr auto _thresholdForGraceTimerScoreEvent = 0x470; // FDBDTunableRowHandle
	}

	namespace n_ULamentConfigurationChainHuntComponent { // : UActorComponent
		constexpr auto _floorChainHuntTimeBetweenChainStrikes = 0x130; // float
		constexpr auto _chainHuntChargeTime = 0x138; // FTunableStat
		constexpr auto _chainNumberPerChainHuntCluster = 0x1b8; // UCurveFloat*
		constexpr auto _timeBetweenChainHuntClusterStrikes = 0x1c0; // UCurveFloat*
		constexpr auto _killerChainHuntEffectsComponentClass = 0x1c8; // UK25KillerChainHuntEffectsComponent*
		constexpr auto _survivorChainHuntEffectsComponentClass = 0x1d0; // UK25SurvivorChainHuntEffectsComponent*
		constexpr auto _killerChainHuntEffectsComponent = 0x1d8; // UK25KillerChainHuntEffectsComponent*
		constexpr auto _chainHuntEffectsComponents = 0x1e0; // TArray<UK25SurvivorChainHuntEffectsComponent*>
		constexpr auto _cachedAdditiveChainStrikeDelayTime = 0x250; // float
		constexpr auto _chainHuntStateData = 0x288; // FChainHuntStateData
		constexpr auto _oldChainHuntState = 0x298; // EChainHuntState
	}

	namespace n_ULingeringBlessedStatusEffect { // : UBlessedStatusEffect
		constexpr auto _lingerDuration = 0x364; // float
	}

	namespace n_UBadMansLastBreathAddon { // : UItemAddon
		constexpr auto _activationDuration = 0x298; // float
		constexpr auto _cooldownDuration = 0x29c; // float
		constexpr auto _cooldownIndicator = 0x2a0; // UStatusEffect*
		constexpr auto _undetectableEffect = 0x2a8; // UStatusEffect*
	}

	namespace n_UUMGAtlEndDateTimerWidget { // : UMobileBaseUserWidget
		constexpr auto TextEndIn = 0x300; // UTextBlock*
	}

	namespace n_ASnowman { // : ARespawnableInteractable
		constexpr auto _timeToRespawn = 0x3e0; // FDBDTunableRowHandle
		constexpr auto _timeToBeDestroyed = 0x408; // FDBDTunableRowHandle
		constexpr auto _snowmanState = 0x430; // ESnowmanState
		constexpr auto _snowmanDestructionType = 0x431; // ESnowmanDestructionType
		constexpr auto _survivorUsingThisSnowman = 0x438; // ACamperPlayer*
		constexpr auto _snowmanSkeletalMesh = 0x4c0; // USkeletalMeshComponent*
		constexpr auto _snowmanOutlineComponent = 0x4c8; // UDBDOutlineComponent*
		constexpr auto _snowmanCapsule = 0x4d0; // UCapsuleComponent*
		constexpr auto _hideInSnowmanInteraction = 0x4d8; // UHideInSnowmanInteraction*
		constexpr auto _hideInSnowmanInteractionChargeable = 0x4e0; // UChargeableComponent*
		constexpr auto _snowmanInteractor = 0x4e8; // UInteractor*
		constexpr auto _snowmanInteractionZone = 0x4f0; // UPrimitiveComponent*
		constexpr auto _snowmanAttackableComponent = 0x4f8; // USnowmanAttackableComponent*
		constexpr auto _isAcquiredFromPool = 0x500; // bool
		constexpr auto _isMoving = 0x520; // bool
	}

	namespace n_ULuminRuntimeSettings { // : UObject
		constexpr auto PackageName = 0x30; // FString
		constexpr auto ApplicationDisplayName = 0x40; // FString
		constexpr auto FrameTimingHint = 0x50; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x51; // bool
		constexpr auto bManualCallToAppReady = 0x52; // bool
		constexpr auto bUseMobileRendering = 0x53; // bool
		constexpr auto bUseVulkan = 0x54; // bool
		constexpr auto Certificate = 0x58; // FFilePath
		constexpr auto IconModelPath = 0x68; // FDirectoryPath
		constexpr auto IconPortalPath = 0x78; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x88; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x98; // int32_t
		constexpr auto MinimumAPILevel = 0x9c; // int32_t
		constexpr auto AppPrivileges = 0xa0; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xb0; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xc0; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xd0; // FString
		constexpr auto ReverbPlugin = 0xe0; // FString
		constexpr auto OcclusionPlugin = 0xf0; // FString
		constexpr auto SoundCueCookQualityIndex = 0x100; // int32_t
		constexpr auto bRemoveDebugInfo = 0x104; // bool
		constexpr auto VulkanValidationLayerLibs = 0x108; // FDirectoryPath
		constexpr auto bFrameVignette = 0x118; // bool
		constexpr auto LocalizedAppNames = 0x120; // TArray<FLocalizedAppName>
	}

	namespace n_UUMGDailyRewardWidget { // : UUMGBaseButtonWidget
		constexpr auto OnDailyRewardStateChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto IsMarkedSpecial = 0x440; // bool
		constexpr auto State = 0x441; // EUMGDailyRewardWidgetState
		constexpr auto AmountText = 0x448; // UTextBlock*
		constexpr auto ItemNameText = 0x450; // UTextBlock*
		constexpr auto RewardNumberText = 0x458; // UTextBlock*
		constexpr auto RewardTypeSwitcher = 0x460; // UWidgetSwitcher*
		constexpr auto ItemInfoPanel = 0x468; // UCanvasPanel*
		constexpr auto OfferingInfoPanel = 0x470; // UCanvasPanel*
		constexpr auto GenericInfoPanel = 0x478; // UCanvasPanel*
		constexpr auto FreeTicketInfoPanel = 0x480; // UCanvasPanel*
		constexpr auto CrateKeyInfoPanel = 0x488; // UCanvasPanel*
		constexpr auto ItemIcon = 0x490; // UImage*
		constexpr auto OfferingIcon = 0x498; // UImage*
		constexpr auto GenericRewardIcon = 0x4a0; // UImage*
		constexpr auto FreeTicketRewardIcon = 0x4a8; // UImage*
		constexpr auto ParentItemIcon = 0x4b0; // UImage*
		constexpr auto CrateKeyRewardIcon = 0x4b8; // UImage*
		constexpr auto ParentItemPanel = 0x4c0; // UCanvasPanel*
	}

	namespace n_UWalesCypherHandler { // : ULocalPlayerSubsystem
		constexpr auto _walesCypherParams = 0x38; // UWalesCypherParameters*
	}

	namespace n_UItemDataAsset { // : UDBDPrimaryDataAsset
		constexpr auto actorClass = 0x48; // TSoftClassPtr<UObject>
		constexpr auto RequiredModifierContainers = 0x78; // TArray<TSoftObjectPtr<UGameplayModifierContainerDataAsset>>
	}

	namespace n_UFromBoneGroundDetectorComponent { // : UBaseGroundDetectorComponent
		constexpr auto _startOffset = 0x1d0; // FVector
	}

	namespace n_ULunar2022EventComponent { // : UActorComponent
		constexpr auto _redEnvelopes = 0xc8; // TArray<TWeakObjectPtr<ARedEnvelope>>
	}

	namespace n_UGeometryCacheTrack { // : UObject
		constexpr auto Duration = 0x30; // float
	}

	namespace n_UBlackboardKeyType_Enum { // : UBlackboardKeyType
		constexpr auto EnumType = 0x38; // UEnum*
		constexpr auto EnumName = 0x40; // FString
		constexpr auto bIsEnumNameValid = 0x50; // char : 1
	}

	namespace n_UBlackBox { // : UItemAddon
		constexpr auto _blockDuration = 0x298; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0x48; // UFont*
		constexpr auto FontTexturePage = 0x50; // int32_t
	}

	namespace n_ABP_Menu_Slasher21_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_22 = 0x698; // UBP_Audio_KLR_21_C*
	}

	namespace n_UHysteria { // : UPerk
		constexpr auto _obliviousEffectDuration = 0x3d0; // float [0x3]
		constexpr auto _perkCooldownDuration = 0x3dc; // float [0x3]
	}

	namespace n_UDestructibleFractureSettings { // : UObject
		constexpr auto CellSiteCount = 0x30; // int32_t
		constexpr auto FractureMaterialDesc = 0x34; // FFractureMaterial
		constexpr auto RandomSeed = 0x58; // int32_t
		constexpr auto VoronoiSites = 0x60; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x70; // int32_t
		constexpr auto Materials = 0x78; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x88; // TArray<FDestructibleChunkParameters>
	}

	namespace n_ULandscapeSettings { // : UDeveloperSettings
		constexpr auto MaxNumberOfLayers = 0x48; // int32_t
	}

	namespace n_UOwningSlasherHasBeenStill { // : UGameplayModifierCondition
		constexpr auto _secondsOfStillnessRequired = 0xd0; // float
	}

	namespace n_UCombineMeshesTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0x98; // UCombineMeshesToolProperties*
	}

	namespace n_UMovieSceneMediaPlayerPropertySection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UAIMoveToPositionData { // : UAICharacterBehaviourData
		constexpr auto _positionActor = 0x30; // AActor*
		constexpr auto _movementType = 0x38; // ECharacterMovementTypes
		constexpr auto _usePathfinding = 0x39; // bool
	}

	namespace n_UAISenseEvent_Trail { // : UAISenseEvent
		constexpr auto Event = 0x30; // FAITrailEvent
	}

	namespace n_AAtlantaDisplayStand { // : ADisplayStand
		constexpr auto StandPosition = 0x398; // EAtlantaDisplayStandPosition
		constexpr auto SurvivorPositionMarker = 0x3a0; // USceneComponent*
		constexpr auto KillerPositionMarker = 0x3a8; // USceneComponent*
	}

	namespace n_UEnvQueryGenerator { // : UEnvQueryNode
		constexpr auto OptionName = 0x38; // FString
		constexpr auto ItemType = 0x48; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x50; // char : 1
	}

	namespace n_ARekindledTotem { // : AStaticMeshActor
		constexpr auto _auraColor = 0x240; // FLinearColor
		constexpr auto _outlineStrategy = 0x250; // USourceBasedOutlineUpdateStrategy*
		constexpr auto _outlineComponent = 0x258; // UDBDOutlineComponent*
	}

	namespace n_UEdGraphNode_Documentation { // : UEdGraphNode
		constexpr auto Link = 0xa0; // FString
		constexpr auto Excerpt = 0xb0; // FString
	}

	namespace n_UTransformMeshesTool { // : UMultiSelectionTool
		constexpr auto TransformProps = 0xa0; // UTransformMeshesToolProperties*
		constexpr auto ActiveGizmos = 0xb8; // TArray<FTransformMeshesTarget>
	}

	namespace n_UBatchDrawing { // : UObject
		constexpr auto _actorToSpawnInstancesInto = 0x30; // AActor*
		constexpr auto _meshesToInstancingData = 0x38; // TMap<UStaticMesh*, FPerMeshInstancingData>
		constexpr auto _hismMaterialHelperSettings = 0x88; // UHISMMaterialHelperSettings*
		constexpr auto _materialPerThemeSettings = 0x90; // UMaterialPerThemeSettings*
	}

	namespace n_UTwinsAnimInstance { // : UKillerAnimInstance
		constexpr auto _isDormant = 0x5a8; // bool
		constexpr auto _hasBrotherAttached = 0x5a9; // bool
		constexpr auto _isPossessing = 0x5aa; // bool
		constexpr auto _isWakingUpFromPossess = 0x5ab; // bool
		constexpr auto _isAutoPossessingAfterRelease = 0x5ac; // bool
	}

	namespace n_UOniDashHitDiffInTimeQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _previousTarget = 0x98; // AActor*
	}

	namespace n_ABP_Menu_CamperFemale05_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UMaterialExpressionTextureBase { // : UMaterialExpression
		constexpr auto Texture = 0x48; // UTexture*
		constexpr auto SamplerType = 0x50; // EMaterialSamplerType
		constexpr auto IsDefaultMeshpaintTexture = 0x51; // char : 1
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UMatchConfigDifficultyDataAsset { // : UPrimaryDataAsset
		constexpr auto DifficultiesData = 0x38; // TMap<ECustomMatchDifficulty, FMatchConfigDifficultyData>
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto TerminalVelocity = 0x268; // float
		constexpr auto Priority = 0x26c; // int32_t
		constexpr auto FluidFriction = 0x270; // float
		constexpr auto bWaterVolume = 0x274; // char : 1
		constexpr auto bPhysicsOnContact = 0x274; // char : 1
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x38; // UStaticMesh*
		constexpr auto LODSizeScale = 0x48; // float
		constexpr auto bUseStaticMeshLODs = 0x4c; // char : 1
		constexpr auto CastShadows = 0x4c; // char : 1
		constexpr auto DoCollisions = 0x4c; // char : 1
		constexpr auto MeshAlignment = 0x4d; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x4e; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x4e; // char : 1
		constexpr auto bEnableMotionBlur = 0x4e; // char : 1
		constexpr auto RollPitchYawRange = 0x50; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x98; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x99; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x9a; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x9b; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x9c; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x9c; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x9c; // char : 1
	}

	namespace n_ADestructibleActor { // : AActor
		constexpr auto DestructibleComponent = 0x230; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x238; // FMulticastInlineDelegate
	}

	namespace n_UEditPivotTool { // : UMultiSelectionTool
		constexpr auto TransformProps = 0xa0; // UEditPivotToolProperties*
		constexpr auto EditPivotActions = 0xa8; // UEditPivotToolActionPropertySet*
		constexpr auto ActiveGizmos = 0x180; // TArray<FEditPivotTarget>
	}

	namespace n_UAkInitBankAssetData { // : UAkAssetDataWithMedia
		constexpr auto PluginInfos = 0x90; // TArray<FAkPluginInfo>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FLinearColor
		constexpr auto Max = 0x50; // FLinearColor
	}

	namespace n_UPhysicsSpringComponent { // : USceneComponent
		constexpr auto SpringStiffness = 0x210; // float
		constexpr auto SpringDamping = 0x214; // float
		constexpr auto SpringLengthAtRest = 0x218; // float
		constexpr auto SpringRadius = 0x21c; // float
		constexpr auto SpringChannel = 0x220; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x221; // bool
		constexpr auto SpringCompression = 0x224; // float
	}

	namespace n_ABP_Menu_Base_Camper_C { // : ADBDMenuPlayer
		constexpr auto UberGraphFrame = 0x620; // FPointerToUberGraphFrame
		constexpr auto RightFootGroundDetector = 0x628; // UBP_SurvivorRightFootGroundDetector_C*
		constexpr auto LeftFootGroundDetector = 0x630; // UBP_SurvivorLeftFootGroundDetector_C*
		constexpr auto CharmSpawner = 0x638; // UCharmSpawnerComponent*
		constexpr auto CustomizedAudio = 0x640; // UCustomizedAudioComponent*
		constexpr auto Ak_Audio_Menu_Base_Camper = 0x648; // UAkComponent*
		constexpr auto CustomizedSkeletalMesh = 0x650; // UCustomizedSkeletalMesh*
		constexpr auto Dissolve_Dissolve_596272B14FBF23BFE861F687F86F9EB1 = 0x658; // float
		constexpr auto Dissolve__Direction_596272B14FBF23BFE861F687F86F9EB1 = 0x65c; // ETimelineDirection
		constexpr auto Dissolve = 0x660; // UTimelineComponent*
		constexpr auto Destroying = 0x668; // bool
	}

	namespace n_ACharm { // : AActor
		constexpr auto _skeletalMeshComponent = 0x238; // USkeletalMeshComponent*
		constexpr auto _actorVfx = 0x240; // AItemVfx*
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto COMPLETED = 0x80; // FMulticastInlineDelegate
	}

	namespace n_ULevelVariantSets { // : UObject
		constexpr auto DirectorClass = 0x30; // UObject*
		constexpr auto VariantSets = 0x38; // TArray<UVariantSet*>
	}

	namespace n_ULandingPageTabsDataAsset { // : UPrimaryDataAsset
		constexpr auto BigButtonsData = 0x38; // TMap<EStorefrontState, FLandingPageTabData>
		constexpr auto MediumButtonsData = 0x88; // TMap<EStorefrontState, FLandingPageTabData>
		constexpr auto SmallButtonsData = 0xd8; // TMap<EStorefrontState, FLandingPageTabData>
	}

	namespace n_UBetterTogether { // : UPerk
		constexpr auto ShouldRevealKiller = 0x3d0; // bool
		constexpr auto ShouldRevealSurvivors = 0x3d1; // bool
		constexpr auto RevealDistance = 0x3d4; // float
		constexpr auto _affectedCampers = 0x3d8; // TArray<ADBDPlayer*>
		constexpr auto _genToReveal = 0x3f0; // AActor*
		constexpr auto _durationByLevel = 0x3f8; // float [0x3]
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x50; // float
		constexpr auto LoopEnd = 0x54; // float
		constexpr auto DurationAfterLoop = 0x58; // float
		constexpr auto LoopCount = 0x5c; // int32_t
		constexpr auto bLoopIndefinitely = 0x60; // char : 1
		constexpr auto bLoop = 0x60; // char : 1
		constexpr auto VolumeInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x70; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x78; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0x100; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x188; // float
		constexpr auto PitchMax = 0x18c; // float
		constexpr auto VolumeMin = 0x190; // float
		constexpr auto VolumeMax = 0x194; // float
	}

	namespace n_UProceduralFoliageTile { // : UObject
		constexpr auto FoliageSpawner = 0x30; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd8; // TArray<FProceduralFoliageInstance>
	}

	namespace n_ULoadingScreenUMG { // : ULoadingScreen
		constexpr auto _loadingScreen = 0x120; // UUMGLoadingScreenWidget*
	}

	namespace n_UCrowAnimInstance { // : UAnimInstance
		constexpr auto _shouldTakeOff = 0x270; // bool
		constexpr auto _crow = 0x278; // UWorldRunawayMeshComponent*
	}

	namespace n_UAnimBoneCompressionCodec { // : UObject
		constexpr auto Description = 0x30; // FString
	}

	namespace n_UAISkill_InteractionTarget_StalkShape { // : UAISkill_InteractionTarget_Stalk
		constexpr auto StalkRangeLimitedAtEvilTier = 0x220; // int32_t
		constexpr auto MaxStalkRangeWhenLimitedByEvilTier = 0x224; // float
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x38; // int32_t
		constexpr auto SheetsPerTrail = 0x3c; // int32_t
		constexpr auto MaxTrailCount = 0x40; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x44; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x48; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x48; // char : 1
		constexpr auto bClipSourceSegement = 0x48; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x48; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x48; // char : 1
		constexpr auto bSpawnInitialParticle = 0x48; // char : 1
		constexpr auto RenderAxis = 0x4c; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x50; // float
		constexpr auto bRenderGeometry = 0x54; // char : 1
		constexpr auto bRenderSpawnPoints = 0x54; // char : 1
		constexpr auto bRenderTangents = 0x54; // char : 1
		constexpr auto bRenderTessellation = 0x54; // char : 1
		constexpr auto TilingDistance = 0x58; // float
		constexpr auto DistanceTessellationStepSize = 0x5c; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x60; // char : 1
		constexpr auto TangentTessellationScalar = 0x64; // float
	}

	namespace n_UContaminationSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isContaminated = 0x4f0; // bool
		constexpr auto _isInjectingSerumSelf = 0x4f1; // bool
		constexpr auto _isInjectingSerumOther = 0x4f2; // bool
		constexpr auto _isBeingInjectedWithSerum = 0x4f3; // bool
		constexpr auto _isBeingHealed = 0x4f4; // bool
		constexpr auto _isFirstContaminationHit = 0x4f5; // bool
	}

	namespace n_UPhantomTrapBurnable { // : ULightBurnable
		constexpr auto _traceZOffset = 0x110; // float
	}

	namespace n_UK26SpawnCrowProjectileChargeableInteractionDefinition { // : UChargeableInteractionDefinition
		constexpr auto OnChargingStarted = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnChargingStopped = 0x6e8; // FMulticastInlineDelegate
		constexpr auto OnProjectileSummoned = 0x6f8; // FMulticastInlineDelegate
		constexpr auto _chargeCooldownTime = 0x708; // FDBDTunableRowHandle
		constexpr auto _summonCooldownTime = 0x730; // FDBDTunableRowHandle
		constexpr auto _pathLength = 0x758; // FDBDTunableRowHandle
		constexpr auto _projectileHeight = 0x780; // FDBDTunableRowHandle
		constexpr auto _projectileSummonDistance = 0x7a8; // FDBDTunableRowHandle
		constexpr auto _cooldownGracePeriodPercentage = 0x7d0; // FDBDTunableRowHandle
		constexpr auto _globalSpawnCooldownTime = 0x7f8; // FDBDTunableRowHandle
		constexpr auto _pathDistanceCheckAttempts = 0x820; // FDBDTunableRowHandle
		constexpr auto _aimingGuideClass = 0x848; // AK26AimingGuide*
		constexpr auto _local_aimingGuide = 0x850; // AK26AimingGuide*
		constexpr auto _isConfirmButtonPressed = 0x858; // bool
		constexpr auto _ammoHandler = 0x860; // UK26AmmoHandlerComponent*
		constexpr auto _pathHandler = 0x868; // UK26PathHandlerComponent*
		constexpr auto _statusHandler = 0x870; // UK26PowerStatusHandlerComponent*
		constexpr auto _firedFullyChargedEvent = 0x878; // bool
		constexpr auto _isWaitingForSummonAcknowledgement = 0x879; // bool
		constexpr auto _globalCooldownMovementSpeedCurve = 0x880; // UCurveFloat*
	}

	namespace n_AK25Chain { // : AActor
		constexpr auto OnAcquiredChanged = 0x238; // FMulticastInlineDelegate
		constexpr auto _attachedToProjectileInfluenceCurve = 0x248; // UCurveFloat*
		constexpr auto _reelbackInfluenceCurve = 0x250; // UCurveFloat*
		constexpr auto _offsetMultiplierInfluenceCurve = 0x258; // UCurveFloat*
		constexpr auto _reelingBackSpeed = 0x2b0; // FDBDTunableRowHandle
		constexpr auto _chainOffsetMinValue = 0x2d8; // float
		constexpr auto _chainOffsetMaxValue = 0x2dc; // float
		constexpr auto _reelbackChainOffsetMinValue = 0x2e0; // float
		constexpr auto _reelbackChainOffsetMaxValue = 0x2e4; // float
		constexpr auto _chainInstanceSpacing = 0x2e8; // float
		constexpr auto _quickChainOffsetTimerLength = 0x2ec; // float
		constexpr auto _reachingSurvivorAnchorTime = 0x2f0; // float
		constexpr auto _chainScale = 0x2f4; // FVector
		constexpr auto _chainOffsetTimerLength = 0x300; // float
		constexpr auto _currentChainPoints = 0x308; // TArray<FVector>
		constexpr auto _isAcquiredFromPool = 0x318; // bool
		constexpr auto _sphereTraceRadius = 0x31c; // float
		constexpr auto _chainStartPosition = 0x320; // FVector
		constexpr auto _reelBackPosition = 0x32c; // FVector
		constexpr auto _reelbackStartPosition = 0x338; // FVector
		constexpr auto _projectileAttachedTo = 0x348; // AK25Projectile*
		constexpr auto _survivorAnchorAttachedTo = 0x350; // TWeakObjectPtr<AK25SurvivorChainAttachmentAnchor>
		constexpr auto _targetAnchorToReach = 0x358; // TWeakObjectPtr<AK25SurvivorChainAttachmentAnchor>
		constexpr auto _chainSplineComponent = 0x360; // USplineComponent*
		constexpr auto _chainInstancedMesh = 0x368; // UInstancedStaticMeshComponent*
		constexpr auto _currentInfluenceCurve = 0x370; // UCurveFloat*
		constexpr auto _chainCurveOffset = 0x378; // FVector
		constexpr auto _chainState = 0x384; // EK25ChainState
		constexpr auto _curveOffsetStrengthTimer = 0x388; // FFastTimer
		constexpr auto _reelbackTimer = 0x3b8; // FFastTimer
		constexpr auto _reachSurvivorAnchorPositionTimer = 0x3e8; // FFastTimer
		constexpr auto _forcedPositions = 0x418; // TArray<FVector>
		constexpr auto _chainCreationStrategy = 0x428; // EK25ChainCreationStrategy
	}

	namespace n_UTextPropertyTestObject { // : UObject
		constexpr auto DefaultedText = 0x30; // FText
		constexpr auto UndefaultedText = 0x48; // FText
		constexpr auto TransientText = 0x60; // FText
	}

	namespace n_UNiagaraDataInterfaceCurlNoise { // : UNiagaraDataInterface
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UDatasmithCineCameraComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto FilmbackSettings = 0x38; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x40; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x44; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x4c; // float
		constexpr auto CurrentAperture = 0x50; // float
		constexpr auto PostProcessSettings = 0x60; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_UModularSynthComponent { // : USynthComponent
		constexpr auto VoiceCount = 0x6f0; // int32_t
	}

	namespace n_UQuestEventsHandler { // : UActorComponent
		constexpr auto _evaluatorList = 0xc0; // TArray<UQuestEventEvaluatorBase*>
	}

	namespace n_UBTDecorator_SetTagCooldown { // : UBTDecorator
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto CooldownDuration = 0x7c; // float
		constexpr auto bAddToExistingDuration = 0x80; // bool
	}

	namespace n_UBTDecorator_IsAtLocation { // : UBTDecorator_BlackboardBase
		constexpr auto AcceptableRadius = 0xa0; // float
		constexpr auto ParametrizedAcceptableRadius = 0xa8; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xe8; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xec; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xec; // char : 1
		constexpr auto bPathFindingBasedTest = 0xec; // char : 1
	}

	namespace n_UGameplayTask_SpawnActor { // : UGameplayTask
		constexpr auto success = 0x70; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x80; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa8; // AActor*
	}

	namespace n_UBoneMaskFilter { // : UObject
		constexpr auto BlendPoses = 0x30; // TArray<FInputBlendPose>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x38; // FRawDistributionVector
	}

	namespace n_UVariant { // : UObject
		constexpr auto DisplayText = 0x30; // FText
		constexpr auto ObjectBindings = 0x60; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_UAISkill_InteractionUseItem_Firecracker { // : UAISkill_InteractionUseItem
		constexpr auto StartMaxRange = 0x178; // FAITunableParameter
		constexpr auto TargetFaceMeMaxAngle = 0x188; // float
	}

	namespace n_UK25SurvivorChainTargetterComponent { // : UActorComponent
		constexpr auto _timeBetweenQueuedChainsLaunch = 0xb8; // FDBDTunableRowHandle
		constexpr auto _timeBetweenQueuedChainsLaunchAfterPreviousFailedAttempt = 0xe0; // float
		constexpr auto _minimumSpawnDistance = 0xe8; // FDBDTunableRowHandle
		constexpr auto _maximumSpawnDistance = 0x110; // FDBDTunableRowHandle
		constexpr auto _sphereCastRadius = 0x138; // float
		constexpr auto _numberOfPositionFindingTries = 0x13c; // int32_t
		constexpr auto _maxNumberOfChainRetries = 0x144; // int32_t
	}

	namespace n_UMeshSelectionTool { // : UDynamicMeshBrushTool
		constexpr auto SelectionProps = 0x210; // UMeshSelectionToolProperties*
		constexpr auto SelectionActions = 0x218; // UMeshSelectionEditActions*
		constexpr auto EditActions = 0x220; // UMeshSelectionToolActionPropertySet*
		constexpr auto Selection = 0x228; // UMeshSelectionSet*
		constexpr auto SpawnedActors = 0x230; // TArray<AActor*>
	}

	namespace n_USkeleton { // : UObject
		constexpr auto BoneTree = 0x40; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x50; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x178; // FGuid
		constexpr auto VirtualBones = 0x188; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x198; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f8; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x278; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x288; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x360; // TArray<UAssetUserData*>
	}

	namespace n_UPlaneCutOperatorFactory { // : UObject
		constexpr auto CutTool = 0x38; // UPlaneCutTool*
	}

	namespace n_UMovieSceneGeometryCacheSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UUMGBloodStoreItemWidget { // : UMobileBaseUserWidget
		constexpr auto NodeImage = 0x310; // UImage*
		constexpr auto BackgroundImage = 0x318; // UImage*
		constexpr auto RarityBackground = 0x320; // UImage*
		constexpr auto ItemPanel = 0x328; // UCanvasPanel*
		constexpr auto MysteryBoxPanel = 0x330; // UCanvasPanel*
		constexpr auto MysteryBoxRarityBackground = 0x338; // UImage*
		constexpr auto CollectedPanel = 0x340; // UCanvasPanel*
		constexpr auto ConsumedPanel = 0x348; // UCanvasPanel*
		constexpr auto _contentType = 0x350; // EBloodwebNodeContentType
		constexpr auto _isMysteryBox = 0x351; // bool
		constexpr auto _bigItemScale = 0x354; // FVector2D
		constexpr auto _normalItemScale = 0x35c; // FVector2D
		constexpr auto _consumedOpacity = 0x364; // float
	}

	namespace n_UUMGStoreEventItemsPackButton { // : UMobileBaseUserWidget
		constexpr auto ImageIcon = 0x300; // UImage*
		constexpr auto TitleText = 0x308; // UTextBlock*
		constexpr auto CurrencyAmountText = 0x310; // UTextBlock*
		constexpr auto CurrencyNameText = 0x318; // UTextBlock*
		constexpr auto UniformGridPanel = 0x320; // UUniformGridPanel*
		constexpr auto BuyButton = 0x328; // UUMGBaseButtonWidget*
		constexpr auto StorePriceWidget = 0x330; // UUMGAtlStorePriceWidget*
		constexpr auto EndDateTimerWidget = 0x338; // UUMGAtlEndDateTimerWidget*
		constexpr auto SelectedImageBox = 0x340; // UCanvasPanel*
		constexpr auto EventItemWidgetClassPtr = 0x348; // TSoftClassPtr<UObject>
		constexpr auto nbColumns = 0x378; // int32_t
	}

	namespace n_UAISense_Prediction { // : UAISense
		constexpr auto RegisteredEvents = 0x90; // TArray<FAIPredictionEvent>
	}

	namespace n_UBTComposite_SimpleParallel { // : UBTCompositeNode
		constexpr auto FinishMode = 0x98; // EBTParallelMode
	}

	namespace n_UPathBuilder_EvadeLoop { // : UPathBuilder
		constexpr auto AddDistanceToRequiredEvadeGap = 0x50; // float
		constexpr auto ForceEvadePointUnderDistance = 0x54; // float
		constexpr auto ChaserCrossingEvadeTimePenalty = 0x58; // float
		constexpr auto SwapPathReachTimeBuffer = 0x5c; // float
		constexpr auto BreakPalletInteractionId = 0x60; // FString
		constexpr auto OnPathRadius = 0x70; // float
		constexpr auto MaxEvadeInteractableWeightDistance = 0x74; // float
		constexpr auto WeightAtMaxDistance = 0x78; // float
		constexpr auto MaxWeightAtNearestDistanceIfHostileHasRangedAbility = 0x7c; // bool
		constexpr auto WeightAtMaxSafety = 0x80; // float
		constexpr auto MaxNearAllyPenaltyPathPointDistance = 0x84; // float
		constexpr auto WeightWhenNearAlly = 0x88; // float
		constexpr auto _originalEvadeLoopWorkPath = 0x90; // UNavMovePath*
		constexpr auto _querierWorkPathA = 0x98; // UNavMovePath*
		constexpr auto _querierWorkPathB = 0xa0; // UNavMovePath*
		constexpr auto _chaserWorkPath = 0xa8; // UNavMovePath*
		constexpr auto _pickedEvadeLoopComponent = 0xb0; // UDBDNavEvadeLoopComponent*
	}

	namespace n_UGeneralProjectSettings { // : UObject
		constexpr auto CompanyName = 0x30; // FString
		constexpr auto CompanyDistinguishedName = 0x40; // FString
		constexpr auto CopyrightNotice = 0x50; // FString
		constexpr auto Description = 0x60; // FString
		constexpr auto Homepage = 0x70; // FString
		constexpr auto LicensingTerms = 0x80; // FString
		constexpr auto PrivacyPolicy = 0x90; // FString
		constexpr auto ProjectID = 0xa0; // FGuid
		constexpr auto ProjectName = 0xb0; // FString
		constexpr auto ProjectVersion = 0xc0; // FString
		constexpr auto SupportContact = 0xd0; // FString
		constexpr auto ProjectDisplayedTitle = 0xe0; // FText
		constexpr auto ProjectDebugTitleInfo = 0xf8; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x110; // bool
		constexpr auto bUseBorderlessWindow = 0x111; // bool
		constexpr auto bStartInVR = 0x112; // bool
		constexpr auto bStartInAR = 0x113; // bool
		constexpr auto bSupportAR = 0x114; // bool
		constexpr auto bAllowWindowResize = 0x115; // bool
		constexpr auto bAllowClose = 0x116; // bool
		constexpr auto bAllowMaximize = 0x117; // bool
		constexpr auto bAllowMinimize = 0x118; // bool
	}

	namespace n_UDBDKeyDisplayInfo { // : UObject
		constexpr auto _keyDisplayInfoMap = 0x30; // TMap<FName, FKeyDisplayInfo>
		constexpr auto _interactionTypeToActionMap_Camper = 0xd0; // TMap<EInputInteractionType, FName>
		constexpr auto _interactionTypeToActionMap_Slasher = 0x120; // TMap<EInputInteractionType, FName>
	}

	namespace n_UCrowdManager { // : UCrowdManagerBase
		constexpr auto MyNavData = 0x30; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x38; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x48; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x58; // int32_t
		constexpr auto MaxAgentRadius = 0x5c; // float
		constexpr auto MaxAvoidedAgents = 0x60; // int32_t
		constexpr auto MaxAvoidedWalls = 0x64; // int32_t
		constexpr auto NavmeshCheckInterval = 0x68; // float
		constexpr auto PathOptimizationInterval = 0x6c; // float
		constexpr auto SeparationDirClamp = 0x70; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x74; // float
		constexpr auto bResolveCollisions = 0x78; // char : 1
	}

	namespace n_UBuckleUp { // : UPerk
		constexpr auto _noRecoveryColor = 0x3d0; // FLinearColor
		constexpr auto _fullRecoveryColor = 0x3e0; // FLinearColor
		constexpr auto _revealDuration = 0x3f0; // float [0x3]
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh { // : UNiagaraDataInterface
		constexpr auto Source = 0x38; // AActor*
		constexpr auto MeshUserParameter = 0x40; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x70; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x78; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x80; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x90; // int32_t
		constexpr auto FilteredBones = 0x98; // TArray<FName>
		constexpr auto FilteredSockets = 0xa8; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb8; // FName
		constexpr auto bExcludeBone = 0xc4; // char : 1
	}

	namespace n_UMovieSceneGeometryCollectionTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UHexHauntedGround { // : UHexPerk
		constexpr auto _exposedStatusEffectDuration = 0x440; // float [0x3]
	}

	namespace n_UGeometryCollectionDebugDrawComponent { // : UActorComponent
		constexpr auto GeometryCollectionDebugDrawActor = 0xb8; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xc0; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_UUMGAtlantaEventsDescription { // : UMobileBaseUserWidget
		constexpr auto widgetData = 0x300; // UAtlantaEventsTemplateDataAsset*
		constexpr auto ItemsRewards = 0x308; // UCanvasPanel*
		constexpr auto Title = 0x310; // UTextBlock*
		constexpr auto Description = 0x318; // UTextBlock*
		constexpr auto TimePeriodTitle = 0x320; // UTextBlock*
		constexpr auto TimePeriodStart = 0x328; // UTextBlock*
		constexpr auto TimePeriodEnd = 0x330; // UTextBlock*
		constexpr auto DeepLinkButton = 0x338; // UUMGBaseButtonWidget*
		constexpr auto TimePeriodCanvas = 0x340; // UCanvasPanel*
	}

	namespace n_UNavigationGraphNodeComponent { // : USceneComponent
		constexpr auto Node = 0x210; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x228; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x230; // UNavigationGraphNodeComponent*
	}

	namespace n_USolidarity { // : UPerk
		constexpr auto _allowMedkit = 0x3d0; // bool
		constexpr auto _healerHPSlot = 0x3d8; // UChargeableComponent*
		constexpr auto _targetHPSlot = 0x3e0; // UChargeableComponent*
		constexpr auto _healOtherInteraction = 0x3e8; // UChargeableInteractionDefinition*
	}

	namespace n_URadialFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto MinRange = 0xbc; // float
		constexpr auto MaxRange = 0xc0; // float
		constexpr auto Default = 0xc4; // float
		constexpr auto Radius = 0xc8; // float
		constexpr auto Position = 0xcc; // FVector
		constexpr auto Falloff = 0xd8; // EFieldFalloffType
	}

	namespace n_UK25LamentConfigurationPossessionChainAttacksEffect { // : UStatusEffect
		constexpr auto _timeBetweenChainTargettingAttempt = 0x350; // FDBDTunableRowHandle
		constexpr auto _numberOfChainsToTriggerTowardsSurvivor = 0x378; // FDBDTunableRowHandle
	}

	namespace n_UFrenzyAttackSuccessSubstate { // : UPounceAttackSuccessSubstate
		constexpr auto _healthyTime = 0x118; // FDBDTunableRowHandle
		constexpr auto _injuredTime = 0x140; // FDBDTunableRowHandle
		constexpr auto _bleedoutTime = 0x168; // FDBDTunableRowHandle
		constexpr auto _healthyCurve = 0x190; // UCurveFloat*
		constexpr auto _injuredCurve = 0x198; // UCurveFloat*
		constexpr auto _bleedoutCurve = 0x1a0; // UCurveFloat*
	}

	namespace n_APaperTerrainActor { // : AActor
		constexpr auto DummyRoot = 0x230; // USceneComponent*
		constexpr auto SplineComponent = 0x238; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x240; // UPaperTerrainComponent*
	}

	namespace n_ANavSystemConfigOverride { // : AActor
		constexpr auto NavigationSystemConfig = 0x230; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x238; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x239; // char : 1
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Expressions = 0x30; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UUMGLoadoutFilterButton { // : UMobileBaseUserWidget
		constexpr auto ActionButton = 0x300; // UButton*
		constexpr auto OnLoadoutFilterButtonClicked = 0x308; // FMulticastInlineDelegate
	}

	namespace n_UAB_Menu_Slasher02_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_RandomPlayer = 0x328; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_USubmixEffectDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x7c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0x88; // FSubmixEffectDelaySettings
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto materialInstances = 0x30; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x40; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x50; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x60; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UCapsuleComponent { // : UShapeComponent
		constexpr auto CapsuleHalfHeight = 0x440; // float
		constexpr auto CapsuleRadius = 0x444; // float
	}

	namespace n_UUserDefinedEnum { // : UEnum
		constexpr auto DisplayNameMap = 0x68; // TMap<FName, FText>
	}

	namespace n_UAtlantaCustomizationTooltipWidget { // : UBaseTooltipWidget
		constexpr auto SmokeImage = 0x338; // UImage*
		constexpr auto Header = 0x340; // UUMGCustomizationTooltipHeaderWidget*
		constexpr auto Content = 0x348; // UUMGCustomizationTooltipContentWidget*
	}

	namespace n_UCoreHudAlertWidget { // : UCoreBaseHudWidget
		constexpr auto MaxDisplayedItems = 0x2f8; // int32_t
		constexpr auto SecondaryAlpha = 0x2fc; // float
		constexpr auto FullAlertDuration = 0x300; // float
		constexpr auto PendingAlertDuration = 0x304; // float
		constexpr auto AnimationDuration = 0x308; // float
		constexpr auto AnimationEasing = 0x30c; // EEasingType
		constexpr auto AnimationTranslationY = 0x310; // float
		constexpr auto CoreHudScoreAlertItemClass = 0x318; // UCoreHudScoreAlertItem*
		constexpr auto CoreHudStatusEffectAlertItemClass = 0x320; // UCoreHudStatusEffectAlertItem*
		constexpr auto AlertContainer = 0x328; // UGridPanel*
		constexpr auto _alerts = 0x330; // TArray<UCoreBaseUserWidget*>
		constexpr auto _pendingAlerts = 0x340; // TArray<UCoreBaseUserWidget*>
		constexpr auto _scoreAlertPool = 0x350; // TArray<UCoreHudScoreAlertItem*>
		constexpr auto _statusEffectAlertPool = 0x360; // TArray<UCoreHudStatusEffectAlertItem*>
	}

	namespace n_UBaseCameraTargetingStrategy { // : UObject
		constexpr auto _maxFreeAngle = 0x38; // float
		constexpr auto _maxInputRotation = 0x3c; // float
		constexpr auto _interpolationSpeed = 0x40; // float
		constexpr auto _interpolationSpeedOutsideFreeMoveZone = 0x44; // float
		constexpr auto _target = 0x48; // AActor*
	}

	namespace n_UWidgetNavigation { // : UObject
		constexpr auto Up = 0x30; // FWidgetNavigationData
		constexpr auto Down = 0x5c; // FWidgetNavigationData
		constexpr auto Left = 0x88; // FWidgetNavigationData
		constexpr auto Right = 0xb4; // FWidgetNavigationData
		constexpr auto Next = 0xe0; // FWidgetNavigationData
		constexpr auto Previous = 0x10c; // FWidgetNavigationData
	}

	namespace n_USoundWave { // : USoundBase
		constexpr auto CompressionQuality = 0x168; // int32_t
		constexpr auto StreamingPriority = 0x16c; // int32_t
		constexpr auto SampleRateQuality = 0x170; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x172; // ESoundGroup
		constexpr auto bLooping = 0x173; // char : 1
		constexpr auto bStreaming = 0x173; // char : 1
		constexpr auto bSeekableStreaming = 0x173; // char : 1
		constexpr auto LoadingBehavior = 0x174; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x175; // char : 1
		constexpr auto bManualWordWrap = 0x175; // char : 1
		constexpr auto bSingleLine = 0x175; // char : 1
		constexpr auto bIsAmbisonics = 0x176; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x178; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x188; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x198; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1a8; // int32_t
		constexpr auto SpokenText = 0x1f0; // FString
		constexpr auto SubtitlePriority = 0x200; // float
		constexpr auto Volume = 0x204; // float
		constexpr auto Pitch = 0x208; // float
		constexpr auto NumChannels = 0x20c; // int32_t
		constexpr auto SampleRate = 0x210; // int32_t
		constexpr auto Subtitles = 0x220; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x230; // UCurveTable*
		constexpr auto InternalCurves = 0x238; // UCurveTable*
	}

	namespace n_Ushopmanager { // : UObject
		constexpr auto _gameInstance = 0xd8; // TWeakObjectPtr<UDBDGameInstance>
		constexpr auto _bannerDataProcessor = 0x7a0; // UBannerDataProcessor*
		constexpr auto _recommendationsGenerator = 0x7a8; // URecommendationsGenerator*
	}

	namespace n_UAxisFlickMasher { // : UActorComponent
		constexpr auto _inputComponent = 0xb8; // UInputComponent*
		constexpr auto _axisFlick1 = 0xc8; // UAxisFlick*
		constexpr auto _axisFlick2 = 0xd0; // UAxisFlick*
	}

	namespace n_USlateVectorArtData { // : UObject
		constexpr auto VertexData = 0x30; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x40; // TArray<uint32_t>
		constexpr auto Material = 0x50; // UMaterialInterface*
		constexpr auto ExtentMin = 0x58; // FVector2D
		constexpr auto ExtentMax = 0x60; // FVector2D
	}

	namespace n_ULiveLinkCurveRemapSettings { // : ULiveLinkSourceSettings
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_UEnvQueryGenerator_PathingGrid { // : UEnvQueryGenerator_SimpleGrid
		constexpr auto PathToItem = 0x110; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x150; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x158; // FAIDataProviderFloatValue
	}

	namespace n_ABP_Menu_Slasher10_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_11 = 0x698; // UBP_Audio_KLR_10_C*
	}

	namespace n_AStatusView { // : AActor
		constexpr auto IsActive = 0x230; // bool
		constexpr auto Level = 0x234; // int32_t
		constexpr auto PercentageFill = 0x238; // float
		constexpr auto IsClockwiseTimer = 0x23c; // bool
		constexpr auto _localDBDPlayer = 0x298; // ADBDPlayer*
	}

	namespace n_UMaxEventCountQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _incrementEventCount = 0x90; // TArray<FGameplayTag>
		constexpr auto _decrementEventCount = 0xa0; // TArray<FGameplayTag>
		constexpr auto _stopEventCount = 0xb0; // TArray<FGameplayTag>
	}

	namespace n_UAnimCompress_PerTrackCompression { // : UAnimCompress_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x68; // float
		constexpr auto MaxPosDiffBitwise = 0x6c; // float
		constexpr auto MaxAngleDiffBitwise = 0x70; // float
		constexpr auto MaxScaleDiffBitwise = 0x74; // float
		constexpr auto AllowedRotationFormats = 0x78; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x88; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x98; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa8; // char : 1
		constexpr auto ResampledFramerate = 0xac; // float
		constexpr auto MinKeysForResampling = 0xb0; // int32_t
		constexpr auto bUseAdaptiveError = 0xb4; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xb4; // char : 1
		constexpr auto TrackHeightBias = 0xb8; // int32_t
		constexpr auto ParentingDivisor = 0xbc; // float
		constexpr auto ParentingDivisorExponent = 0xc0; // float
		constexpr auto bUseAdaptiveError2 = 0xc4; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc8; // float
		constexpr auto TranslationErrorSourceRatio = 0xcc; // float
		constexpr auto ScaleErrorSourceRatio = 0xd0; // float
		constexpr auto MaxErrorPerTrackRatio = 0xd4; // float
		constexpr auto PerturbationProbeSize = 0xd8; // float
	}

	namespace n_USoundMix { // : UObject
		constexpr auto bApplyEQ = 0x30; // char : 1
		constexpr auto EQPriority = 0x34; // float
		constexpr auto EQSettings = 0x38; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x78; // TArray<FSoundClassAdjuster>
		constexpr auto initialDelay = 0x88; // float
		constexpr auto FadeInTime = 0x8c; // float
		constexpr auto Duration = 0x90; // float
		constexpr auto FadeOutTime = 0x94; // float
	}

	namespace n_UDBDEmblem_KillerGatekeeperTest { // : UDBDEmblem_KillerGatekeeper
		constexpr auto _gameState = 0x138; // ADBDGameState*
	}

	namespace n_UTurn180Component { // : UActorComponent
		constexpr auto _settings = 0xe0; // FTurn180Settings
	}

	namespace n_UBlessTotem { // : UChargeableInteractionDefinition
		constexpr auto _blessHexTotemSpeedPenalty = 0x6d8; // FDBDTunableRowHandle
	}

	namespace n_UDisarmBearTrapInteraction { // : UChargeableInteractionDefinition
		constexpr auto _averageMaxVelocity = 0x6d8; // float
		constexpr auto _averageMaxVelocitySquared = 0x6dc; // float
		constexpr auto _updateMontageID = 0x6e0; // FName
		constexpr auto _loudNoiseAudibleRangeTunable = 0x6ec; // FName
	}

	namespace n_UAkAudioEvent { // : UAkAssetBase
		constexpr auto LocalizedPlatformAssetDataMap = 0x60; // TMap<FString, TSoftObjectPtr<UAkAssetPlatformData>>
		constexpr auto RequiredBank = 0xb0; // UAkAudioBank*
		constexpr auto CurrentLocalizedPlatformData = 0xb8; // UAkAssetPlatformData*
		constexpr auto MaxAttenuationRadius = 0xc0; // float
		constexpr auto IsInfinite = 0xc4; // bool
		constexpr auto MinimumDuration = 0xc8; // float
		constexpr auto MaximumDuration = 0xcc; // float
	}

	namespace n_UUMGCustomizationItemPriceWidget { // : UMobileBaseUserWidget
		constexpr auto CurrencyValue = 0x300; // UTextBlock*
		constexpr auto DiscountPercentageContainer = 0x308; // UTextBlock*
		constexpr auto DiscountPercentage = 0x310; // UTextBlock*
		constexpr auto CurrencyIcon = 0x318; // UImage*
		constexpr auto CurrencyTextures = 0x320; // TMap<ECurrencyType, TSoftObjectPtr<UTexture2D>>
		constexpr auto AffordableCurrencyTextColor = 0x370; // FSlateColor
		constexpr auto AffordableSpecialCurrencyTextColor = 0x398; // FSlateColor
		constexpr auto NonAffordableCurrencyTextColor = 0x3c0; // FSlateColor
		constexpr auto _itemId = 0x3e8; // FString
		constexpr auto _currencyType = 0x3f8; // ECurrencyType
		constexpr auto _hasDiscountPercentage = 0x3f9; // bool
	}

	namespace n_UPounceAttackObstructSubstate { // : UDBDAttackObstructSubstate
		constexpr auto _fullObstructMontage = 0x118; // FName
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
	}

	namespace n_UBP_Audio_KLR_09_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0x78; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x88; // FName
	}

	namespace n_UAuthoritativeMovementComponent { // : UActorComponent
		constexpr auto _charactersToPush = 0xc8; // TArray<ACharacter*>
		constexpr auto _stopIgnoreCharacterOnEndOverlap = 0xd8; // TArray<ACharacter*>
		constexpr auto _pawnDetector = 0xf0; // UCapsuleComponent*
		constexpr auto _authoritativeIgnoreOverlapCharacters = 0xf8; // TArray<ACharacter*>
		constexpr auto _previousAuthoritativeIgnoreOverlapCharacters = 0x108; // TArray<ACharacter*>
	}

	namespace n_ABaseSky { // : AActor
		constexpr auto AdjustCullDistance = 0x238; // bool
		constexpr auto EnableIBL = 0x239; // bool
		constexpr auto IBLContributionMultiplier = 0x23c; // float
		constexpr auto ProbesTintColor = 0x240; // FLinearColor
		constexpr auto ProbesSaturationValue = 0x250; // float
		constexpr auto ASMDepthBias = 0x258; // FBHVRPerDetailModeFloat
		constexpr auto ASMDepthAttenuation = 0x2f8; // FBHVRPerDetailModeFloat
	}

	namespace n_UMovieScene3DAttachSection { // : UMovieScene3DConstraintSection
		constexpr auto AttachSocketName = 0x110; // FName
		constexpr auto AttachComponentName = 0x11c; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_USkeletalMeshComponent { // : USkinnedMeshComponent
		constexpr auto AnimBlueprintGeneratedClass = 0x6d0; // UObject*
		constexpr auto AnimClass = 0x6d8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6e0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6e8; // UAnimInstance*
		constexpr auto AnimationData = 0x6f0; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x718; // FVector
		constexpr auto LineCheckBoundsScale = 0x724; // FVector
		constexpr auto LinkedInstances = 0x750; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x760; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x770; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x7a0; // float
		constexpr auto KinematicBonesUpdateType = 0x7a4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x7a5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x7a7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x7a9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x7a9; // char : 1
		constexpr auto bHasValidBodies = 0x7a9; // char : 1
		constexpr auto bBlendPhysics = 0x7a9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x7a9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x7aa; // char : 1
		constexpr auto bDisableClothSimulation = 0x7aa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x7aa; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x7aa; // char : 1
		constexpr auto bDisableAnimCurves = 0x7aa; // char : 1
		constexpr auto bCollideWithEnvironment = 0x7ab; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x7ab; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x7ab; // char : 1
		constexpr auto bResetAfterTeleport = 0x7ab; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x7ab; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x7ab; // char : 1
		constexpr auto bPauseAnims = 0x7ab; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x7ac; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x7ac; // char : 1
		constexpr auto bForceRefpose = 0x7ac; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x7ac; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x7ac; // char : 1
		constexpr auto bOldForceRefPose = 0x7ac; // char : 1
		constexpr auto bShowPrePhysBones = 0x7ac; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x7ac; // char : 1
		constexpr auto bAnimTreeInitialised = 0x7ad; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x7ad; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x7ad; // char : 1
		constexpr auto bUseBendingElements = 0x7ad; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x7ad; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x7ad; // char : 1
		constexpr auto bUseSelfCollisions = 0x7ad; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x7ad; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x7ae; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x7ae; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x7ae; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x7ae; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x7b0; // uint16_t
		constexpr auto MassMode = 0x7b2; // EClothMassMode
		constexpr auto UniformMass = 0x7b4; // float
		constexpr auto TotalMass = 0x7b8; // float
		constexpr auto Density = 0x7bc; // float
		constexpr auto MinPerParticleMass = 0x7c0; // float
		constexpr auto ClothBlendWeight = 0x7c4; // float
		constexpr auto EdgeStiffness = 0x7c8; // float
		constexpr auto BendingStiffness = 0x7cc; // float
		constexpr auto AreaStiffness = 0x7d0; // float
		constexpr auto VolumeStiffness = 0x7d4; // float
		constexpr auto StrainLimitingStiffness = 0x7d8; // float
		constexpr auto ShapeTargetStiffness = 0x7dc; // float
		constexpr auto DisallowedAnimCurves = 0x7e0; // TArray<FName>
		constexpr auto BodySetup = 0x7f0; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x800; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x810; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0x8f8; // float
		constexpr auto TeleportRotationThreshold = 0x8fc; // float
		constexpr auto LastPoseTickFrame = 0x908; // uint32_t
		constexpr auto ClothingInteractor = 0x960; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xa30; // FMulticastInlineDelegate
	}

	namespace n_UPlatformEventsComponent { // : UActorComponent
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xc8; // FMulticastInlineDelegate
	}

	namespace n_USkeletalMeshLODSettings { // : UDataAsset
		constexpr auto MinLOD = 0x38; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x3c; // FPerPlatformBool
		constexpr auto bSupportLODStreaming = 0x3d; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x40; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x44; // FPerPlatformInt
		constexpr auto LODGroups = 0x48; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_USocialSettings { // : UObject
		constexpr auto OssNamesWithEnvironmentIdPrefix = 0x30; // TArray<FName>
		constexpr auto DefaultMaxPartySize = 0x40; // int32_t
		constexpr auto bPreferPlatformInvites = 0x44; // bool
		constexpr auto bMustSendPrimaryInvites = 0x45; // bool
		constexpr auto bLeavePartyOnDisconnect = 0x46; // bool
		constexpr auto UserListAutoUpdateRate = 0x48; // float
		constexpr auto MinNicknameLength = 0x4c; // int32_t
		constexpr auto MaxNicknameLength = 0x50; // int32_t
	}

	namespace n_UNiagaraSimulationStageBase { // : UNiagaraMergeable
		constexpr auto Script = 0x30; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x38; // FName
	}

	namespace n_UPreviewMesh { // : UObject
		constexpr auto bBuildSpatialDataStructure = 0x48; // bool
		constexpr auto bDrawOnTop = 0x49; // bool
		constexpr auto DynamicMeshComponent = 0x58; // USimpleDynamicMeshComponent*
	}

	namespace n_UMaterialExpressionArctangent2 { // : UMaterialExpression
		constexpr auto Y = 0x48; // FExpressionInput
		constexpr auto X = 0x64; // FExpressionInput
	}

	namespace n_USourceEffectDynamicsProcessorPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x98; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UAtlantaHudPowerAttackJoystick { // : UMobileBaseUserWidget
		constexpr auto AnimationContainer = 0x308; // UCanvasPanel*
		constexpr auto _availableAnimationName = 0x310; // FName
		constexpr auto _fadeOutAnimationName = 0x31c; // FName
		constexpr auto _tutoStartAnimationName = 0x328; // FName
		constexpr auto _tutoLoopAnimationName = 0x334; // FName
		constexpr auto Icon = 0x340; // UImage*
	}

	namespace n_UInDirectionOfKillerQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _killer = 0x90; // ADBDPlayer*
	}

	namespace n_AReflectionCapture { // : AActor
		constexpr auto CaptureComponent = 0x230; // UReflectionCaptureComponent*
	}

	namespace n_UBTService_FindInteractor_Pallet { // : UBTService_FindInteractor
		constexpr auto BBPickSideRelativelyFrom = 0x218; // FBlackboardKeySelector
		constexpr auto IntentionFilter = 0x248; // EFindInteractablePalletIntentions
		constexpr auto RaisePalletPerkId = 0x24c; // FName
		constexpr auto BrokenGeneratorGoalMaxDistance = 0x258; // FAITunableParameter
		constexpr auto BrokenGeneratorGoalMaxDistanceWeight = 0x268; // FAITunableParameter
		constexpr auto DreamPaletteClass = 0x278; // AActor*
		constexpr auto SpawnInSurvivorLOSPenalty = 0x280; // FAITunableParameter
		constexpr auto SpawnNearSurvivorMinDistanceSquared = 0x290; // FAITunableParameter
		constexpr auto SpawnNearSurvivorPenalty = 0x2a0; // FAITunableParameter
		constexpr auto PlacedNearGamePalletMinDistanceSquared = 0x2b0; // FAITunableParameter
		constexpr auto PlacedNearGamePalletPenalty = 0x2c0; // FAITunableParameter
		constexpr auto ConvincingFactorTolerance = 0x2d0; // FAITunableParameter
	}

	namespace n_UAISenseEvent_Damage { // : UAISenseEvent
		constexpr auto Event = 0x30; // FAIDamageEvent
	}

	namespace n_ASwitchActor { // : AActor
		constexpr auto SceneComponent = 0x248; // USceneComponent*
		constexpr auto LastSelectedOption = 0x250; // int32_t
	}

	namespace n_UClonedMeshComponent { // : UBatchMeshCommands
		constexpr auto _originalToClone = 0x2a0; // TMap<USceneComponent*, UMeshComponent*>
		constexpr auto _cloneToOriginal = 0x2f0; // TMap<UMeshComponent*, USceneComponent*>
	}

	namespace n_UK25WeaponAnimInstance { // : UBaseKillerWeaponAnimInstance
		constexpr auto _hasDownedTargetHoldingLamentConfiguration = 0x328; // bool
	}

	namespace n_UNiagaraComponent { // : UFXSystemComponent
		constexpr auto Asset = 0x428; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x430; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x438; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x540; // char : 1
		constexpr auto bAutoDestroy = 0x56c; // char : 1
		constexpr auto bRenderingEnabled = 0x56c; // char : 1
		constexpr auto bAutoManageAttachment = 0x56c; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x56c; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x570; // float
		constexpr auto OnSystemFinished = 0x578; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x588; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x590; // FName
		constexpr auto AutoAttachLocationRule = 0x59c; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x59d; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x59e; // EAttachmentRule
	}

	namespace n_USoundNodeWavePlayer { // : USoundNodeAssetReferencer
		constexpr auto SoundWaveAssetPtr = 0x50; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x80; // USoundWave*
		constexpr auto bLooping = 0x88; // char : 1
	}

	namespace n_UPathFollowingComponent { // : UActorComponent
		constexpr auto MovementComp = 0xf0; // UNavMovementComponent*
		constexpr auto MyNavData = 0x100; // ANavigationData*
	}

	namespace n_UNearTrackedActorComponent { // : UActorComponent
		constexpr auto IsWithinRangeDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto _distanceThreshold = 0xc8; // float
	}

	namespace n_AK24Power { // : ACollectable
		constexpr auto _powerWalkSpeed = 0x558; // FDBDTunableRowHandle
		constexpr auto _powerWalkSpeedLevel3 = 0x580; // FDBDTunableRowHandle
		constexpr auto _normalWalkSpeed = 0x5a8; // FDBDTunableRowHandle
		constexpr auto _powerMouseYawScale = 0x5d0; // FDBDTunableRowHandle
		constexpr auto _powerYawAdjustTime = 0x5f8; // FDBDTunableRowHandle
		constexpr auto _powerGamePadYawScale = 0x620; // FDBDTunableRowHandle
		constexpr auto _activateK24PowerCharge = 0x648; // UChargeableComponent*
		constexpr auto _activateK24PowerSecondsToCharge = 0x650; // FDBDTunableRowHandle
		constexpr auto _activatePowerChargeSpeedCurve = 0x678; // UCurveFloat*
		constexpr auto _activatePowerChargeLvl3SpeedCurve = 0x680; // UCurveFloat*
		constexpr auto _k24PowerCooldownInteraction = 0x690; // UInteractionDefinition*
		constexpr auto _whipLengthLevel1 = 0x698; // FDBDTunableRowHandle
		constexpr auto _whipLengthLevel2 = 0x6c0; // FDBDTunableRowHandle
		constexpr auto _whipLengthLevel3 = 0x6e8; // FDBDTunableRowHandle
		constexpr auto _contaminationComponentBP = 0x710; // USurvivorContaminationComponent*
		constexpr auto _powerChargeSurvivorContaminatedPoint = 0x720; // FTunableStat
		constexpr auto _powerChargeZombieKilledPoint = 0x7a0; // FTunableStat
		constexpr auto _powerChargeSurvivorHitPoint = 0x820; // FTunableStat
		constexpr auto _powerLevelPoints = 0x8a0; // float
		constexpr auto _powerLevelPointsToLevel2 = 0x8a8; // FDBDTunableRowHandle
		constexpr auto _powerLevelPointsToLevel3 = 0x8d0; // FDBDTunableRowHandle
	}

	namespace n_UAISkill_Interaction_DismissCrow { // : UAISkill_Interaction
		constexpr auto _dismissCrowMaxCharge = 0x170; // FDBDTunableRowHandle
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x38; // FRawDistributionVector
		constexpr auto StartAlpha = 0x80; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // char : 1
	}

	namespace n_USoundfieldSubmix { // : USoundSubmixWithParentBase
		constexpr auto SoundfieldEncodingFormat = 0x48; // FName
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x70; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UShowLoginUICallbackProxy { // : UBlueprintAsyncActionBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UInteractiveTool { // : UObject
		constexpr auto InputBehaviors = 0x50; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x58; // TArray<UObject*>
	}

	namespace n_UAkPS5InitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkPS5AdvancedInitializationSettings
	}

	namespace n_UAISense_Hearing { // : UAISense
		constexpr auto NoiseEvents = 0x90; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0xa0; // float
	}

	namespace n_USourceEffectEnvelopeFollowerPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UDynamicContentHolder { // : UGameInstanceSubsystem
		constexpr auto _loadedTextures = 0x170; // FLRUTextureCache
		constexpr auto _currentTasks = 0x1d8; // TArray<FTaskContainer>
		constexpr auto _marketingBannerProvider = 0x1e8; // ULoopBannerProvider*
		constexpr auto _eventsBannerProvider = 0x1f0; // ULoopBannerProvider*
		constexpr auto _loadingImagesDataProvider = 0x1f8; // ULoadingImagesDataProvider*
	}

	namespace n_ABP_Menu_Slasher24_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto K24_KillerAudioMenuReaction = 0x698; // UK24_KillerAudioMenuReaction_C*
		constexpr auto _tentacle = 0x6a0; // USkeletalMeshComponent*
		constexpr auto BP_Audio_KLR_25 = 0x6a8; // UBP_Audio_KLR_24_C*
		constexpr auto _switchInterrupt02 = 0x6b0; // bool
		constexpr auto _animSwitch = 0x6b4; // int32_t
	}

	namespace n_UAnimNotify_AkEvent_C { // : UAnimNotify
		constexpr auto Attach Name = 0x40; // FString
		constexpr auto Event = 0x50; // UAkAudioEvent*
		constexpr auto Follow = 0x58; // bool
		constexpr auto EventName = 0x60; // FString
	}

	namespace n_UUMGBankAndPlayerInfoWidget { // : UMobileBaseUserWidget
		constexpr auto BankWidget = 0x300; // UUMGBankWidget*
		constexpr auto PlayerNameText = 0x308; // UTextBlock*
		constexpr auto SelectedCharacterWidget = 0x310; // UUMGSelectedCharacterWidget*
		constexpr auto RankWidgetVisibility = 0x318; // ESlateVisibility
		constexpr auto LevelBanner = 0x320; // UUMGLevelBannerWidget*
		constexpr auto RankBanner = 0x328; // UUMGRankBanner*
		constexpr auto MonthlyPassButton = 0x330; // UUMGMainMenuMonthlyPassButton*
		constexpr auto _onCancelPartyButtonClickedEvent = 0x398; // FMulticastInlineDelegate
	}

	namespace n_ABP_Menu_CamperFemale14_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UK25ChainLocomotionSurvivorAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _hasChainsAttached = 0x4f0; // bool
		constexpr auto _breakChainInteractionCompletionPercentage = 0x4f4; // float
		constexpr auto _isPerformingBreakChainInteraction = 0x4f8; // bool
		constexpr auto _forwardDirectionDotProductResult = 0x4fc; // float
		constexpr auto _lateralDirectionDotProductResult = 0x500; // float
		constexpr auto _currentChainBeingDetached = 0x508; // AK25Chain*
		constexpr auto _leftHandAttachmentData = 0x510; // FK25ChainAnchorAnimationData
		constexpr auto _rightHandAttachmentData = 0x528; // FK25ChainAnchorAnimationData
		constexpr auto _leftShoulderAttachmentData = 0x540; // FK25ChainAnchorAnimationData
		constexpr auto _rightShoulderAttachmentData = 0x558; // FK25ChainAnchorAnimationData
		constexpr auto _stomachAttachmentData = 0x570; // FK25ChainAnchorAnimationData
		constexpr auto _backAttachmentData = 0x588; // FK25ChainAnchorAnimationData
		constexpr auto _chainDirection = 0x5a0; // EK25ChainAnchorPointDirection
		constexpr auto _lastDetatchedChainDirection = 0x5a1; // EK25ChainAnchorPointDirection
		constexpr auto _hasBrokenFreeFromChain = 0x5a2; // bool
		constexpr auto _hasBrokenFreeTime = 0x5a4; // float
		constexpr auto _hasBeenHitByChain = 0x5a8; // bool
		constexpr auto _hasBeenHitByChainTime = 0x5ac; // float
		constexpr auto _numberOfChainsAttached = 0x5b0; // int32_t
	}

	namespace n_UBlightPowerStateLethalDash { // : UBlightPowerStateDash
		constexpr auto _secondaryInteractionProperties = 0x250; // FSecondaryInteractionProperties
		constexpr auto _smashBreakables = 0x288; // bool
	}

	namespace n_UMovementComponent { // : UActorComponent
		constexpr auto UpdatedComponent = 0xb8; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xc0; // UPrimitiveComponent*
		constexpr auto Velocity = 0xcc; // FVector
		constexpr auto PlaneConstraintNormal = 0xd8; // FVector
		constexpr auto PlaneConstraintOrigin = 0xe4; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xf0; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xf0; // char : 1
		constexpr auto bTickBeforeOwner = 0xf0; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xf0; // char : 1
		constexpr auto bConstrainToPlane = 0xf0; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xf0; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xf0; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xf0; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xf3; // EPlaneConstraintAxisSetting
	}

	namespace n_UPossessNegationEffectComponent { // : UActorComponent
		constexpr auto PlayCantPossessSound = 0xb8; // FMulticastInlineDelegate
	}

	namespace n_UDistanceBasedTickDisabler { // : UActorComponent
		constexpr auto _autoRegisterOwner = 0xb8; // bool
		constexpr auto _autoRegisterTimelines = 0xb9; // bool
		constexpr auto _tickDisableDistance = 0xc0; // FBHVRPerDetailModeFloat
		constexpr auto _insignificantWhenBehindTheCamera = 0x160; // bool
		constexpr auto _components = 0x168; // TArray<UActorComponent*>
	}

	namespace n_UNavRelevantComponent { // : UActorComponent
		constexpr auto bAttachToOwnersRoot = 0xdc; // char : 1
		constexpr auto CachedNavParent = 0xe0; // UObject*
	}

	namespace n_UBookMark { // : UBookmarkBase
		constexpr auto Location = 0x30; // FVector
		constexpr auto Rotation = 0x3c; // FRotator
		constexpr auto HiddenLevels = 0x48; // TArray<FString>
	}

	namespace n_UDatasmithStaticMeshIFCImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceGlobalId = 0x30; // FString
	}

	namespace n_UGenericPopupScreen { // : UBasePopupScreen
		constexpr auto _popup = 0x120; // UUMGGenericPopup*
	}

	namespace n_ABP_Menu_Slasher05_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_05 = 0x698; // UBP_Audio_KLR_05_C*
	}

	namespace n_UEditPivotToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bEnableSnapDragging = 0x58; // bool
		constexpr auto RotationMode = 0x59; // EEditPivotSnapDragRotationMode
	}

	namespace n_UBaseBrushTool { // : UMeshSurfacePointTool
		constexpr auto BrushProperties = 0xc8; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xd0; // bool
		constexpr auto LastBrushStamp = 0xd4; // FBrushStampData
		constexpr auto PropertyClass = 0x198; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1c8; // UBrushStampIndicator*
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x50; // TArray<float>
		constexpr auto HasBeenUsed = 0x60; // TArray<bool>
		constexpr auto NumRandomUsed = 0x70; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x74; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x78; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x78; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x78; // char : 1
	}

	namespace n_UCustomWidgetWrapper_HudEditor { // : UCustomWidgetWrapper
		constexpr auto MinOpacity = 0x1a0; // float
		constexpr auto MaxOpacity = 0x1a4; // float
		constexpr auto MinScale = 0x1a8; // float
		constexpr auto MaxScale = 0x1ac; // float
		constexpr auto NbVersions = 0x1b0; // int32_t
		constexpr auto HideUnderOpacity = 0x1b4; // float
		constexpr auto HiddenStatusTintColor = 0x1b8; // FColor
		constexpr auto HiddenStatusOpacity = 0x1bc; // float
		constexpr auto OverlapAboveSizeRatio = 0x1c0; // float
		constexpr auto IgnoreOverlapIds = 0x1c8; // FGameplayTagContainer
		constexpr auto ParentDragLimitX = 0x1e8; // FHudEditorDragFromParentAxisLimit
		constexpr auto ParentDragLimitY = 0x1fc; // FHudEditorDragFromParentAxisLimit
		constexpr auto IsEditingHudByInput = 0x210; // bool
		constexpr auto OverlapStatusTintColor = 0x214; // FColor
	}

	namespace n_APaperSpriteActor { // : AActor
		constexpr auto RenderComponent = 0x230; // UPaperSpriteComponent*
	}

	namespace n_UWeldMeshEdgesTool { // : USingleSelectionTool
		constexpr auto Tolerance = 0x90; // float
		constexpr auto bOnlyUnique = 0x94; // bool
	}

	namespace n_UPurpleGlyphComponent { // : UActorComponent
		constexpr auto _survivorSpawns = 0xb8; // TArray<UTileSpawnPoint*>
		constexpr auto MoveRequest = 0xe0; // FAIMoveRequest
		constexpr auto _navFilter = 0x120; // UNavigationQueryFilter*
		constexpr auto _auraRevealDuration = 0x128; // FDBDTunableRowHandle
		constexpr auto _nextLocationDistanceMinimum = 0x150; // FDBDTunableRowHandle
		constexpr auto _nextLocationDistanceMaximum = 0x178; // FDBDTunableRowHandle
		constexpr auto _movementAcceptanceRadius = 0x1a0; // FDBDTunableRowHandle
		constexpr auto _distanceToAccelerate = 0x1c8; // FDBDTunableRowHandle
		constexpr auto _distanceToDecelerate = 0x1f0; // FDBDTunableRowHandle
		constexpr auto OutlineColor = 0x218; // FLinearColor
		constexpr auto _bloodTrailSettings = 0x228; // UBloodTrailSettings*
	}

	namespace n_UNavigationDataChunk { // : UObject
		constexpr auto NavigationDataName = 0x30; // FName
	}

	namespace n_UPlaneBrushProperties { // : UInteractiveToolPropertySet
		constexpr auto WhichSide = 0x58; // EPlaneBrushSideMode
	}

	namespace n_UAnimNotifyState_HideCustomizationAttachments { // : UAnimNotifyState
		constexpr auto Category = 0x38; // ECustomizationCategory
	}

	namespace n_UAISenseConfig_Blueprint { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Blueprint*
	}

	namespace n_UMaterialFunctionInstance { // : UMaterialFunctionInterface
		constexpr auto Parent = 0x48; // UMaterialFunctionInterface*
		constexpr auto Base = 0x50; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x58; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x68; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x78; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x88; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x98; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa8; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb8; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UUMGTallyListElementWidget { // : UMobileBaseUserWidget
		constexpr auto ElementIndex = 0x300; // int32_t
		constexpr auto WidgetSize = 0x304; // FVector2D
	}

	namespace n_UNemesis { // : UPerk
		constexpr auto _revealToKillerTime = 0x3d8; // float [0x3]
		constexpr auto _obliviousTime = 0x3e4; // float [0x3]
	}

	namespace n_UUMGPopupButton { // : UUMGBaseButtonWidget
		constexpr auto DisabledOpacity = 0x444; // float
		constexpr auto EnabledOpacity = 0x448; // float
		constexpr auto VFXs = 0x450; // UImage*
		constexpr auto Line = 0x458; // UImage*
		constexpr auto FXSmoke = 0x460; // UImage*
	}

	namespace n_UAnimNotify_PostInteractionSoundEvent { // : UAnimNotify
		constexpr auto SoundEvent = 0x40; // UAkAudioEvent*
		constexpr auto InteractionAudioClass = 0x48; // TSoftClassPtr<UObject>
	}

	namespace n_UAddon_TheBlight_20 { // : UItemAddon
		constexpr auto _survivorInRangeDistance = 0x298; // float
		constexpr auto _survivorRevealTime = 0x29c; // float
	}

	namespace n_UAB_Menu_Slasher17_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_ARuntimeVirtualTextureVolume { // : AActor
		constexpr auto VirtualTextureComponent = 0x230; // URuntimeVirtualTextureComponent*
	}

	namespace n_UFileMediaOutput { // : UMediaOutput
		constexpr auto WriteOptions = 0x40; // FImageWriteOptions
		constexpr auto FilePath = 0xa0; // FDirectoryPath
		constexpr auto BaseFileName = 0xb0; // FString
		constexpr auto bOverrideDesiredSize = 0xc0; // bool
		constexpr auto DesiredSize = 0xc4; // FIntPoint
		constexpr auto bOverridePixelFormat = 0xcc; // bool
		constexpr auto DesiredPixelFormat = 0xd0; // EFileMediaOutputPixelFormat
	}

	namespace n_UDeviceProfileManager { // : UObject
		constexpr auto Profiles = 0x30; // TArray<UObject*>
	}

	namespace n_UPerkSoundHudIcon { // : UMobileBaseUserWidget
		constexpr auto perkId = 0x300; // FName
	}

	namespace n_ADBDGame_Start { // : ADBDBaseGameMode
		constexpr auto _startupInitializer = 0x3b8; // TScriptInterface<IClientStartupInitializerInterface>
	}

	namespace n_UUMGPurchaseItemsInfo { // : UMobileBaseUserWidget
		constexpr auto Icon = 0x300; // UImage*
		constexpr auto Quantity = 0x308; // UTextBlock*
		constexpr auto ItemName = 0x310; // UTextBlock*
	}

	namespace n_UCrossPlatformManager { // : UObject
		constexpr auto _crossPlayAllowedByPlatform = 0x30; // bool
		constexpr auto _crossPlayAllowedByKraken = 0x31; // bool
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x30; // float
		constexpr auto FrictionCombineMode = 0x34; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x35; // bool
		constexpr auto Restitution = 0x38; // float
		constexpr auto RestitutionCombineMode = 0x3c; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x3d; // bool
		constexpr auto Density = 0x40; // float
		constexpr auto RaiseMassToPower = 0x44; // float
		constexpr auto DestructibleDamageThresholdScale = 0x48; // float
		constexpr auto PhysicalMaterialProperty = 0x50; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x58; // EPhysicalSurface
		constexpr auto TireFrictionScale = 0x5c; // float
		constexpr auto TireFrictionScales = 0x60; // TArray<FTireFrictionScalePair>
		constexpr auto OcclusionAffect = 0x70; // float
		constexpr auto IgnoreComponentOcclussionAffect = 0x74; // bool
	}

	namespace n_UEnvQueryTest_Trace { // : UEnvQueryTest
		constexpr auto TraceData = 0x238; // FEnvTraceData
		constexpr auto TraceFromContext = 0x268; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x2a8; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x2e8; // FAIDataProviderFloatValue
		constexpr auto Context = 0x328; // UEnvQueryContext*
	}

	namespace n_UAlert { // : UPerk
		constexpr auto _killerAuraRevealDuration = 0x3d0; // float [0x3]
		constexpr auto _alertKillerRevealEffect = 0x3e0; // UStatusEffect*
	}

	namespace n_UPolyEditSetUVProperties { // : UInteractiveToolPropertySet
		constexpr auto bShowMaterial = 0x58; // bool
	}

	namespace n_UGeometryCollectionComponent { // : UMeshComponent
		constexpr auto ChaosSolverActor = 0x480; // AChaosSolverActor*
		constexpr auto RestCollection = 0x568; // UGeometryCollection*
		constexpr auto InitializationFields = 0x570; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x580; // bool
		constexpr auto ObjectType = 0x588; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x589; // bool
		constexpr auto ClusterGroupIndex = 0x58c; // int32_t
		constexpr auto MaxClusterLevel = 0x590; // int32_t
		constexpr auto DamageThreshold = 0x598; // TArray<float>
		constexpr auto ClusterConnectionType = 0x5a8; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x5ac; // int32_t
		constexpr auto CollisionSampleFraction = 0x5b0; // float
		constexpr auto LinearEtherDrag = 0x5b4; // float
		constexpr auto AngularEtherDrag = 0x5b8; // float
		constexpr auto PhysicalMaterial = 0x5c0; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x5c8; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x5cc; // FVector
		constexpr auto InitialAngularVelocity = 0x5d8; // FVector
		constexpr auto CacheParameters = 0x5e8; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x638; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x648; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x670; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x680; // float
		constexpr auto CachePlayback = 0x684; // bool
		constexpr auto OnChaosPhysicsCollision = 0x688; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x698; // bool
		constexpr auto bNotifyCollisions = 0x699; // bool
		constexpr auto DummyBodySetup = 0x880; // UBodySetup*
	}

	namespace n_UUMGCharacterPrestigeButton { // : UUMGCharacterPrestigeIcon
		constexpr auto PrestigeButton = 0x308; // UButton*
		constexpr auto PrestigeAnimationCanvas = 0x310; // UCanvasPanel*
	}

	namespace n_UBlackboardKeyType_NativeEnum { // : UBlackboardKeyType
		constexpr auto EnumName = 0x38; // FString
		constexpr auto EnumType = 0x48; // UEnum*
	}

	namespace n_UAnyMeansNecessary { // : UPerk
		constexpr auto RevealSurvivorOnPalletPullUpStarted = 0x3d0; // bool
		constexpr auto RevealSurvivorOnPalletPulledUp = 0x3d1; // bool
		constexpr auto RevealSurvivorDuration = 0x3d4; // float
		constexpr auto _effect = 0x3d8; // TWeakObjectPtr<UStatusEffect>
		constexpr auto _cooldownDuration = 0x3e0; // float [0x3]
	}

	namespace n_UBoilOverPerk { // : UPerk
		constexpr auto _additionnalWigglingProgressWhenFalling = 0x3d0; // float [0x3]
		constexpr auto _greatHeightsValue = 0x3dc; // float
	}

	namespace n_UFastTrack { // : UPerk
		constexpr auto _tokensToAdd = 0x3d0; // int32_t [0x3]
	}

	namespace n_UAddon_K22Power_10 { // : UOnEventBaseAddon
		constexpr auto _blindnessDuration = 0x2a8; // float
	}

	namespace n_USoundSourceBus { // : USoundWave
		constexpr auto SourceBusChannels = 0x318; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x31c; // float
		constexpr auto bAutoDeactivateWhenSilent = 0x320; // char : 1
	}

	namespace n_AServerStatReplicator { // : AInfo
		constexpr auto bUpdateStatNet = 0x230; // bool
		constexpr auto bOverwriteClientStats = 0x231; // bool
		constexpr auto Channels = 0x234; // uint32_t
		constexpr auto InRate = 0x238; // uint32_t
		constexpr auto OutRate = 0x23c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x244; // uint32_t
		constexpr auto InRateClientMax = 0x248; // uint32_t
		constexpr auto InRateClientMin = 0x24c; // uint32_t
		constexpr auto InRateClientAvg = 0x250; // uint32_t
		constexpr auto InPacketsClientMax = 0x254; // uint32_t
		constexpr auto InPacketsClientMin = 0x258; // uint32_t
		constexpr auto InPacketsClientAvg = 0x25c; // uint32_t
		constexpr auto OutRateClientMax = 0x260; // uint32_t
		constexpr auto OutRateClientMin = 0x264; // uint32_t
		constexpr auto OutRateClientAvg = 0x268; // uint32_t
		constexpr auto OutPacketsClientMax = 0x26c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x270; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x274; // uint32_t
		constexpr auto NetNumClients = 0x278; // uint32_t
		constexpr auto InPackets = 0x27c; // uint32_t
		constexpr auto OutPackets = 0x280; // uint32_t
		constexpr auto InBunches = 0x284; // uint32_t
		constexpr auto OutBunches = 0x288; // uint32_t
		constexpr auto OutLoss = 0x28c; // uint32_t
		constexpr auto InLoss = 0x290; // uint32_t
		constexpr auto VoiceBytesSent = 0x294; // uint32_t
		constexpr auto VoiceBytesRecv = 0x298; // uint32_t
		constexpr auto VoicePacketsSent = 0x29c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x2a0; // uint32_t
		constexpr auto PercentInVoice = 0x2a4; // uint32_t
		constexpr auto PercentOutVoice = 0x2a8; // uint32_t
		constexpr auto NumActorChannels = 0x2ac; // uint32_t
		constexpr auto NumConsideredActors = 0x2b0; // uint32_t
		constexpr auto PrioritizedActors = 0x2b4; // uint32_t
		constexpr auto NumRelevantActors = 0x2b8; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x2bc; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x2c0; // uint32_t
		constexpr auto NumReplicatedActors = 0x2c4; // uint32_t
		constexpr auto NumActors = 0x2c8; // uint32_t
		constexpr auto NumNetActors = 0x2cc; // uint32_t
		constexpr auto NumDormantActors = 0x2d0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x2d4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x2d8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x2dc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x2e0; // uint32_t
		constexpr auto ObjPathBytes = 0x2e4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x2e8; // uint32_t
		constexpr auto NetGUIDInRate = 0x2ec; // uint32_t
		constexpr auto NetSaturated = 0x2f0; // uint32_t
	}

	namespace n_ULeaderboardQueryCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x38; // char : 1
		constexpr auto Frequency = 0x3c; // int32_t
		constexpr auto Frequency_LowRange = 0x40; // int32_t
		constexpr auto NoiseRange = 0x48; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x90; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xc0; // char : 1
		constexpr auto NoiseSpeed = 0xc8; // FRawDistributionVector
		constexpr auto bSmooth = 0x110; // char : 1
		constexpr auto NoiseLockRadius = 0x114; // float
		constexpr auto bNoiseLock = 0x118; // char : 1
		constexpr auto bOscillate = 0x118; // char : 1
		constexpr auto NoiseLockTime = 0x11c; // float
		constexpr auto NoiseTension = 0x120; // float
		constexpr auto bUseNoiseTangents = 0x124; // char : 1
		constexpr auto NoiseTangentStrength = 0x128; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x158; // int32_t
		constexpr auto bTargetNoise = 0x15c; // char : 1
		constexpr auto FrequencyDistance = 0x160; // float
		constexpr auto bApplyNoiseScale = 0x164; // char : 1
		constexpr auto NoiseScale = 0x168; // FRawDistributionFloat
	}

	namespace n_UBTDecorator_ConeCheck { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x70; // float
		constexpr auto ConeOrigin = 0x78; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0xa8; // FBlackboardKeySelector
		constexpr auto Observed = 0xd8; // FBlackboardKeySelector
	}

	namespace n_UDBDDecalComponent { // : UDecalComponent
		constexpr auto staticMeshDecals = 0x250; // TArray<UStaticMeshComponent*>
		constexpr auto staticMeshGlass = 0x260; // TMap<UStaticMeshComponent*, UGlassStaticMesh*>
		constexpr auto materialInstances = 0x2b0; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x108; // EShadowMapFlags
	}

	namespace n_UDatasmithImportOptions { // : UDatasmithOptionsBase
		constexpr auto SearchPackagePolicy = 0x30; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x31; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x32; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x33; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x34; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x35; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x36; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x37; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x3c; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x54; // FDatasmithReimportOptions
		constexpr auto Filename = 0x58; // FString
		constexpr auto FilePath = 0x68; // FString
	}

	namespace n_UTestWidget { // : UUserWidget
		constexpr auto Workbench = 0x260; // UPanelWidget*
		constexpr auto showWorkbench = 0x268; // bool
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x30; // char : 1
		constexpr auto bUpdateModule = 0x30; // char : 1
		constexpr auto bFinalUpdateModule = 0x30; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x30; // char : 1
		constexpr auto bCurvesAsColor = 0x30; // char : 1
		constexpr auto b3DDrawMode = 0x30; // char : 1
		constexpr auto bSupported3DDrawMode = 0x30; // char : 1
		constexpr auto bEnabled = 0x30; // char : 1
		constexpr auto bEditable = 0x31; // char : 1
		constexpr auto LODDuplicate = 0x31; // char : 1
		constexpr auto bSupportsRandomSeed = 0x31; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x31; // char : 1
		constexpr auto LODValidity = 0x32; // char
	}

	namespace n_UAICharacterEvasionBehaviour { // : UAICharacterBehaviour
		constexpr auto _prey = 0x58; // ADBDPlayer*
		constexpr auto _preyAIController = 0x60; // ADBDAIPlayerController*
		constexpr auto _currentEscapePoint = 0x68; // AActor*
		constexpr auto _characterEvasionData = 0x70; // UCharacterEvasionBehaviourData*
	}

	namespace n_UAB_Menu_Slasher22_Twin_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByInt = 0x3a0; // FAnimNode_BlendListByInt
		constexpr auto AnimGraphNode_SequencePlayer = 0x440; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x4b8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4f0; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x5a0; // bool
		constexpr auto Is Online = 0x5a1; // bool
		constexpr auto Swap = 0x5a4; // int32_t
	}

	namespace n_UNiagaraSpriteRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x58; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x60; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0x90; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0x91; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0x94; // FVector2D
		constexpr auto SortMode = 0x9c; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xa8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xa8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xac; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xb0; // float
		constexpr auto PositionBinding = 0xb8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1d8; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x268; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x388; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x418; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x4a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x538; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x5c8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x658; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x6e8; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x778; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x808; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x898; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x928; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x9b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_ABP_Menu_Slasher25_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto LamentConfMesh = 0x698; // USkeletalMeshComponent*
		constexpr auto ChainsMesh = 0x6a0; // USkeletalMeshComponent*
		constexpr auto BP_Audio_KLR_26 = 0x6a8; // UBP_Audio_KLR_25_C*
		constexpr auto TM_LamentBoxVisibility_Dissolve_A56755B4431C0BE684B0688D2A09C847 = 0x6b0; // float
		constexpr auto TM_LamentBoxVisibility__Direction_A56755B4431C0BE684B0688D2A09C847 = 0x6b4; // ETimelineDirection
		constexpr auto TM_LamentBoxVisibility = 0x6b8; // UTimelineComponent*
	}

	namespace n_UCoreKeyListenerInputPromptWidget { // : UCoreBaseUserWidget
		constexpr auto InputPrompt = 0x2d8; // UCoreInputPromptWidget*
		constexpr auto LabelTB = 0x2e0; // UDBDTextBlock*
		constexpr auto _onKeyListenerInputPromptTriggeredDelegate = 0x2e8; // FMulticastInlineDelegate
	}

	namespace n_UClothingAssetBase { // : UObject
		constexpr auto ImportedFilePath = 0x30; // FString
		constexpr auto AssetGuid = 0x40; // FGuid
	}

	namespace n_UGestureInteractionDefinition { // : UInteractionDefinition
		constexpr auto _gestureID = 0x5b0; // EGestureID
	}

	namespace n_UAISkill_FindInteractable { // : UAISkill_Find
		constexpr auto RequiredInteractionId = 0x100; // FString
		constexpr auto RequiredInteractionInputType = 0x110; // EInputInteractionType
	}

	namespace n_UWraithBurnable { // : UPlayerLightBurnable
		constexpr auto _flashlightEvasionScoreCooldown = 0x110; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0x48; // FExpressionInput
		constexpr auto Exponent = 0x64; // FExpressionInput
		constexpr auto ConstExponent = 0x80; // float
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto TargetMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa8; // FName
	}

	namespace n_UAkSlider { // : UWidget
		constexpr auto value = 0x128; // float
		constexpr auto ValueDelegate = 0x12c; // FDelegate
		constexpr auto WidgetStyle = 0x140; // FSliderStyle
		constexpr auto Orientation = 0x4b0; // EOrientation
		constexpr auto SliderBarColor = 0x4b4; // FLinearColor
		constexpr auto SliderHandleColor = 0x4c4; // FLinearColor
		constexpr auto IndentHandle = 0x4d4; // bool
		constexpr auto locked = 0x4d5; // bool
		constexpr auto StepSize = 0x4d8; // float
		constexpr auto IsFocusable = 0x4dc; // bool
		constexpr auto ThePropertyToControl = 0x4e0; // FAkPropertyToControl
		constexpr auto ItemToControl = 0x4f0; // FAkWwiseItemToControl
		constexpr auto OnValueChanged = 0x530; // FMulticastInlineDelegate
		constexpr auto OnItemDropped = 0x540; // FMulticastInlineDelegate
		constexpr auto OnPropertyDropped = 0x550; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneGeometryCacheTrack { // : UMovieSceneNameableTrack
		constexpr auto AnimationSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModuleLocationStaticVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x38; // ELocationStaticVertSurfaceSource
		constexpr auto UniversalOffset = 0x3c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x48; // char : 1
		constexpr auto bOrientMeshEmitters = 0x48; // char : 1
		constexpr auto StaticMeshActorParamName = 0x4c; // FName
		constexpr auto bEnforceNormalCheck = 0x58; // char : 1
		constexpr auto NormalToCompare = 0x5c; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x68; // float
		constexpr auto NormalCheckTolerance = 0x6c; // float
		constexpr auto ValidMaterialIndices = 0x70; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x80; // char : 1
		constexpr auto bInheritUV = 0x80; // char : 1
		constexpr auto InheritUVChannel = 0x84; // uint32_t
	}

	namespace n_UMovieSceneParameterSection { // : UMovieSceneSection
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_UPerkSelectionSlotWidget { // : UMobileBaseUserWidget
		constexpr auto PerkName = 0x300; // UTextBlock*
		constexpr auto TextChoose = 0x308; // UTextBlock*
		constexpr auto PerkActionButton = 0x310; // UPerkActionButton*
		constexpr auto SelectedIcon = 0x318; // UImage*
		constexpr auto DescriptionText = 0x320; // UUMGHtmlRichText*
		constexpr auto PictureBackground = 0x328; // UImage*
		constexpr auto PicturePerkBackground = 0x330; // UImage*
		constexpr auto PictureHighlightFrame = 0x338; // UImage*
		constexpr auto PictureTopRightBackground = 0x340; // UImage*
		constexpr auto PictureTopRightFrame = 0x348; // UImage*
		constexpr auto HighOpacity = 0x350; // float
		constexpr auto LowOpacity = 0x354; // float
		constexpr auto PerkBackgroundLowOpacity = 0x358; // float
		constexpr auto DescriptionBackgroundLowOpacity = 0x35c; // float
	}

	namespace n_UActorKnowledgeCollection { // : UActorComponent
		constexpr auto _actors = 0xb8; // TArray<AActor*>
		constexpr auto _available = 0xc8; // bool
		constexpr auto _possessor = 0xd0; // ACharacter*
		constexpr auto _sharing = 0xd8; // EKnowledgeSharingType
	}

	namespace n_UMaterialExpressionGIReplace { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto StaticIndirect = 0x64; // FExpressionInput
		constexpr auto DynamicIndirect = 0x80; // FExpressionInput
	}

	namespace n_ALobbyLevel { // : ALevelScriptActor
		constexpr auto _registeredDisplayStands = 0x280; // TArray<ADisplayStand*>
		constexpr auto LobbyLoadedEvent = 0x290; // EWorldFlowEvent
	}

	namespace n_UPlayerInteractionHandler { // : UActorComponent
		constexpr auto PriorityConeAngle = 0x120; // float
		constexpr auto BotPriorityConeAngle = 0x124; // float
		constexpr auto Authority_SecondaryActionDoneDelegate = 0x138; // FMulticastInlineDelegate
		constexpr auto NewInteractionRequestedDelegate = 0x148; // FMulticastInlineDelegate
		constexpr auto ServerValidatedInteractionStartedDelegate = 0x158; // FMulticastInlineDelegate
		constexpr auto ServerValidatedInteractionEndedDelegate = 0x168; // FMulticastInlineDelegate
		constexpr auto InteractionLayer = 0x178; // EInteractionLayer
		constexpr auto OnDeactivateSkillCheckDelegate = 0x188; // FMulticastInlineDelegate
		constexpr auto _hasInteractionRequest = 0x1d0; // bool
		constexpr auto _hasInteractionRequestInBuffer = 0x1d1; // bool
		constexpr auto _interactionToSwapTo = 0x1f0; // UInteractionDefinition*
		constexpr auto _currentInteraction = 0x218; // UInteractionDefinition*
		constexpr auto _currentPlayerDependencies = 0x2c0; // TArray<ADBDPlayer*>
		constexpr auto _currentInteractionType = 0x2d0; // EInputInteractionType
		constexpr auto _skillCheck = 0x2d8; // USkillCheck*
		constexpr auto _progressBasedSkillChecks = 0x2e8; // TArray<float>
		constexpr auto _requestedInterruptionOtherParty = 0x358; // ADBDPlayer*
		constexpr auto _requestedInterruptionDefinition = 0x360; // UInterruptionDefinition*
		constexpr auto _requestedInterruptionIsInterruptor = 0x368; // bool
		constexpr auto _currentInterruptionOtherParty = 0x370; // ADBDPlayer*
		constexpr auto _currentInterruptionDefinition = 0x378; // UInterruptionDefinition*
		constexpr auto _currentInterruptionIsInterruptor = 0x380; // bool
		constexpr auto _interactionInProgress = 0x381; // bool
		constexpr auto _interactionsInZone = 0x3b8; // TArray<UInteractionDefinition*>
		constexpr auto _availableInteractionCalculator = 0x3f0; // FAvailableInteractionCalculator
		constexpr auto _disableInteractionSourcesToExceptions = 0x5c8; // TMap<UObject*, FGameplayTagContainer>
	}

	namespace n_UAnimCurveCompressionSettings { // : UObject
		constexpr auto Codec = 0x30; // UAnimCurveCompressionCodec*
	}

	namespace n_UAISlasherMoveToGrabSurvivorBehaviourData { // : UAICharacterBehaviourData
		constexpr auto _targetSurvivor = 0x30; // ACamperPlayer*
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpressionTextureBase
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto TextureObject = 0x74; // FExpressionInput
		constexpr auto MipValue = 0x90; // FExpressionInput
		constexpr auto CoordinatesDX = 0xac; // FExpressionInput
		constexpr auto CoordinatesDY = 0xc8; // FExpressionInput
		constexpr auto AutomaticViewMipBiasValue = 0xe4; // FExpressionInput
		constexpr auto MipValueMode = 0x100; // ETextureMipValueMode
		constexpr auto SamplerSource = 0x101; // ESamplerSourceMode
		constexpr auto AutomaticViewMipBias = 0x102; // char : 1
		constexpr auto ConstCoordinate = 0x103; // char
		constexpr auto ConstMipValue = 0x104; // int32_t
	}

	namespace n_UHudObjectivesPresenter { // : UHudPresenter
		constexpr auto CoreHudObjectivesWidgetClass = 0x108; // UUserWidget*
	}

	namespace n_UMovieScene3DConstraintSection { // : UMovieSceneSection
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_UUMGChargeableInteractionWidget { // : UMobileBaseUserWidget
		constexpr auto ItemIcon = 0x300; // UImage*
		constexpr auto InteractionIconVisibility = 0x308; // ESlateVisibility
		constexpr auto ItemChargeVisibility = 0x309; // ESlateVisibility
		constexpr auto InteractionHudVisibility = 0x30a; // ESlateVisibility
	}

	namespace n_UEnvQueryGenerator_Composite { // : UEnvQueryGenerator
		constexpr auto generators = 0x58; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x68; // char : 1
		constexpr auto bHasMatchingItemType = 0x68; // char : 1
		constexpr auto ForcedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UForcedPenance { // : UPerk
		constexpr auto _perkActivationDuration = 0x3d0; // float [0x3]
		constexpr auto _applyOblivious = 0x3dc; // bool
		constexpr auto _applyBroken = 0x3dd; // bool
		constexpr auto _camperObliviousEffects = 0x3e0; // TArray<UStatusEffect*>
		constexpr auto _camperBrokenEffects = 0x3f0; // TArray<UStatusEffect*>
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x38; // FName
	}

	namespace n_ALevelScriptActor { // : AActor
		constexpr auto bInputEnabled = 0x230; // char : 1
	}

	namespace n_UZombieAnimInstance { // : UAnimInstance
		constexpr auto _speed = 0x270; // float
		constexpr auto _zombieState = 0x274; // EZombieState
		constexpr auto _zombieCharacter = 0x278; // AZombieCharacter*
		constexpr auto _isFalling = 0x280; // bool
		constexpr auto _zombieGender = 0x281; // EZombieGender
	}

	namespace n_UOtherCharactersVerticalCollisionsHandler { // : UActorComponent
		constexpr auto _ignoreBelowActors = 0xb8; // TArray<AActor*>
		constexpr auto _overlappingActors = 0xc8; // TArray<AActor*>
		constexpr auto _pawnDetector = 0xd8; // UCapsuleComponent*
	}

	namespace n_UAnimNotifyState_TimedParticleEffect { // : UAnimNotifyState
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto SocketName = 0x40; // FName
		constexpr auto LocationOffset = 0x4c; // FVector
		constexpr auto RotationOffset = 0x58; // FRotator
		constexpr auto bDestroyAtEnd = 0x64; // bool
	}

	namespace n_UUMGPlayersStatusWidget { // : UMobileBaseUserWidget
		constexpr auto CustomizedHudWrapperIdMap = 0x300; // TMap<EPlayerRole, FCustomizedHudPlayerWrapperIdMapContainer>
		constexpr auto PlayerStatusIconClass = 0x350; // TSoftClassPtr<UObject>
		constexpr auto playersContainer = 0x380; // UHorizontalBox*
		constexpr auto playerIconsByName = 0x388; // TMap<FString, UUMGPlayerStatusIcon*>
	}

	namespace n_UAISense_Touch { // : UAISense
		constexpr auto RegisteredEvents = 0x90; // TArray<FAITouchEvent>
	}

	namespace n_UUMGBasePassStorefrontWidget { // : UUMGBaseStorefrontWidget
		constexpr auto SubscriptionsPageScroll = 0x300; // UUMGSubscriptionsPageScrollWidget*
	}

	namespace n_USlashedOutOfBearTrapInteraction { // : UInteractionDefinition
		constexpr auto _overridableInteractions = 0x5b0; // TArray<FString>
		constexpr auto _updateMontage = 0x5c0; // UAnimMontage*
	}

	namespace n_AGeometryCollectionDebugDrawActor { // : AActor
		constexpr auto WarningMessage = 0x230; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x238; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x250; // bool
		constexpr auto bDebugDrawHierarchy = 0x251; // bool
		constexpr auto bDebugDrawClustering = 0x252; // bool
		constexpr auto HideGeometry = 0x253; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x254; // bool
		constexpr auto bShowRigidBodyCollision = 0x255; // bool
		constexpr auto bCollisionAtOrigin = 0x256; // bool
		constexpr auto bShowRigidBodyTransform = 0x257; // bool
		constexpr auto bShowRigidBodyInertia = 0x258; // bool
		constexpr auto bShowRigidBodyVelocity = 0x259; // bool
		constexpr auto bShowRigidBodyForce = 0x25a; // bool
		constexpr auto bShowRigidBodyInfos = 0x25b; // bool
		constexpr auto bShowTransformIndex = 0x25c; // bool
		constexpr auto bShowTransform = 0x25d; // bool
		constexpr auto bShowParent = 0x25e; // bool
		constexpr auto bShowLevel = 0x25f; // bool
		constexpr auto bShowConnectivityEdges = 0x260; // bool
		constexpr auto bShowGeometryIndex = 0x261; // bool
		constexpr auto bShowGeometryTransform = 0x262; // bool
		constexpr auto bShowBoundingBox = 0x263; // bool
		constexpr auto bShowFaces = 0x264; // bool
		constexpr auto bShowFaceIndices = 0x265; // bool
		constexpr auto bShowFaceNormals = 0x266; // bool
		constexpr auto bShowSingleFace = 0x267; // bool
		constexpr auto SingleFaceIndex = 0x268; // int32_t
		constexpr auto bShowVertices = 0x26c; // bool
		constexpr auto bShowVertexIndices = 0x26d; // bool
		constexpr auto bShowVertexNormals = 0x26e; // bool
		constexpr auto bUseActiveVisualization = 0x26f; // bool
		constexpr auto PointThickness = 0x270; // float
		constexpr auto LineThickness = 0x274; // float
		constexpr auto bTextShadow = 0x278; // bool
		constexpr auto TextScale = 0x27c; // float
		constexpr auto NormalScale = 0x280; // float
		constexpr auto AxisScale = 0x284; // float
		constexpr auto ArrowScale = 0x288; // float
		constexpr auto RigidBodyIdColor = 0x28c; // FColor
		constexpr auto RigidBodyTransformScale = 0x290; // float
		constexpr auto RigidBodyCollisionColor = 0x294; // FColor
		constexpr auto RigidBodyInertiaColor = 0x298; // FColor
		constexpr auto RigidBodyVelocityColor = 0x29c; // FColor
		constexpr auto RigidBodyForceColor = 0x2a0; // FColor
		constexpr auto RigidBodyInfoColor = 0x2a4; // FColor
		constexpr auto TransformIndexColor = 0x2a8; // FColor
		constexpr auto TransformScale = 0x2ac; // float
		constexpr auto LevelColor = 0x2b0; // FColor
		constexpr auto ParentColor = 0x2b4; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x2b8; // float
		constexpr auto GeometryIndexColor = 0x2bc; // FColor
		constexpr auto GeometryTransformScale = 0x2c0; // float
		constexpr auto BoundingBoxColor = 0x2c4; // FColor
		constexpr auto FaceColor = 0x2c8; // FColor
		constexpr auto FaceIndexColor = 0x2cc; // FColor
		constexpr auto FaceNormalColor = 0x2d0; // FColor
		constexpr auto SingleFaceColor = 0x2d4; // FColor
		constexpr auto VertexColor = 0x2d8; // FColor
		constexpr auto VertexIndexColor = 0x2dc; // FColor
		constexpr auto VertexNormalColor = 0x2e0; // FColor
		constexpr auto SpriteComponent = 0x2e8; // UBillboardComponent*
	}

	namespace n_UOctreeDynamicMeshComponent { // : UBaseDynamicMeshComponent
		constexpr auto bExplicitShowWireframe = 0x4d8; // bool
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UK26P02 { // : UPerk
		constexpr auto _generatorRegressPercentage = 0x3d8; // float [0x3]
		constexpr auto _screamRevealLocationDuration = 0x3e4; // float
	}

	namespace n_UFXWidget { // : UUserWidget
		constexpr auto _niagaraSystem = 0x260; // UNiagaraSystem*
		constexpr auto _particlePlayer = 0x278; // FFXWidgetPlayer
	}

	namespace n_UBlendSpaceBase { // : UAnimationAsset
		constexpr auto bRotationBlendInMeshSpace = 0x90; // bool
		constexpr auto AnimLength = 0x94; // float
		constexpr auto InterpolationParam = 0x98; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xb0; // float
		constexpr auto NotifyTriggerMode = 0xb4; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb8; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc8; // int32_t
		constexpr auto SampleData = 0xd0; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xe0; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xf0; // FBlendParameter [0x3]
	}

	namespace n_US29P03 { // : UBoonPerk
		constexpr auto _recoverSpeedPercentage = 0x488; // float [0x3]
	}

	namespace n_ADBDBaseHud { // : AHUD
		constexpr auto _debugFont = 0x320; // UFont*
	}

	namespace n_ABP_Menu_Slasher15_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_16 = 0x698; // UBP_Audio_KLR_15_C*
	}

	namespace n_UVectorFieldAnimated { // : UVectorField
		constexpr auto Texture = 0x50; // UTexture2D*
		constexpr auto ConstructionOp = 0x58; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x5c; // int32_t
		constexpr auto VolumeSizeY = 0x60; // int32_t
		constexpr auto VolumeSizeZ = 0x64; // int32_t
		constexpr auto SubImagesX = 0x68; // int32_t
		constexpr auto SubImagesY = 0x6c; // int32_t
		constexpr auto FrameCount = 0x70; // int32_t
		constexpr auto FramesPerSecond = 0x74; // float
		constexpr auto bLoop = 0x78; // char : 1
		constexpr auto NoiseField = 0x80; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x88; // float
		constexpr auto NoiseMax = 0x8c; // float
	}

	namespace n_UNavLinkCustomComponent { // : UNavRelevantComponent
		constexpr auto NavLinkUserId = 0xf0; // uint32_t
		constexpr auto EnabledAreaClass = 0xf8; // UNavArea*
		constexpr auto DisabledAreaClass = 0x100; // UNavArea*
		constexpr auto SupportedAgents = 0x108; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x10c; // FVector
		constexpr auto LinkRelativeEnd = 0x118; // FVector
		constexpr auto LinkDirection = 0x124; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x128; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x128; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x128; // char : 1
		constexpr auto bCreateBoxObstacle = 0x128; // char : 1
		constexpr auto ObstacleOffset = 0x12c; // FVector
		constexpr auto ObstacleExtent = 0x138; // FVector
		constexpr auto ObstacleAreaClass = 0x148; // UNavArea*
		constexpr auto BroadcastRadius = 0x150; // float
		constexpr auto BroadcastInterval = 0x154; // float
		constexpr auto BroadcastChannel = 0x158; // ECollisionChannel
	}

	namespace n_UBoxOcclusionQueryComponent { // : UBoxComponent
		constexpr auto TimeUntilOccluded = 0x450; // float
	}

	namespace n_ABP_Menu_CamperMale05_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UAddPatchToolProperties { // : UInteractiveToolPropertySet
		constexpr auto Width = 0x58; // float
		constexpr auto Rotation = 0x5c; // float
		constexpr auto Subdivisions = 0x60; // int32_t
		constexpr auto Shift = 0x64; // float
	}

	namespace n_UAkGroupValue { // : UAkAudioType
		constexpr auto GroupShortID = 0x48; // uint32_t
	}

	namespace n_APhysicsConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintComp = 0x230; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x238; // AActor*
		constexpr auto ConstraintActor2 = 0x240; // AActor*
		constexpr auto bDisableCollision = 0x248; // char : 1
	}

	namespace n_UUMGCharacterButton { // : UMobileBaseUserWidget
		constexpr auto PortraitIcon = 0x310; // UImage*
		constexpr auto CharacterSelectedPanel = 0x318; // UCanvasPanel*
		constexpr auto LevelPanel = 0x328; // UCanvasPanel*
		constexpr auto CharacterLevelText = 0x330; // UTextBlock*
		constexpr auto OwnedCustomizationText = 0x338; // UTextBlock*
		constexpr auto TotalCustomizationText = 0x340; // UTextBlock*
		constexpr auto PricePanel = 0x348; // UCanvasPanel*
		constexpr auto CellPrice = 0x350; // UUMGCharacterPrice*
		constexpr auto ShardPrice = 0x358; // UUMGCharacterPrice*
		constexpr auto CharacterSlotData = 0x360; // FCharacterSlotData
	}

	namespace n_UK25ChainAttachedStatusEffect { // : UStatusEffect
		constexpr auto _percentageReductionSpeedPerChainCurve = 0x350; // UCurveFloat*
		constexpr auto _chainAttachmentComponent = 0x358; // UK25SurvivorChainAttachmentComponent*
		constexpr auto _cachedNumberOfChainsAttached = 0x360; // int32_t
	}

	namespace n_ATrailControllerBase { // : AActor
		constexpr auto _tormentTrailPointCollection = 0x230; // UTormentTrailPointCollectionComponent*
		constexpr auto _distanceBetweenTormentTrailPoint = 0x238; // FDBDTunableRowHandle
		constexpr auto _splineComponent = 0x260; // USplineComponent*
		constexpr auto _poolableComponent = 0x278; // UAuthoritativePoolableActorComponent*
		constexpr auto _trailType = 0x280; // ETrailType
	}

	namespace n_UUMGCharacterPageScrollWidget { // : UUMGGridPageScrollWidget
		constexpr auto _characterButtonWidgetClass = 0x448; // TSoftClassPtr<UObject>
		constexpr auto _charactersData = 0x478; // TArray<FCharacterSlotData>
		constexpr auto _isKiller = 0x488; // bool
		constexpr auto _charactersTitleText = 0x490; // FText
		constexpr auto _killersTitleText = 0x4a8; // FText
		constexpr auto _survivorsTitleText = 0x4c0; // FText
	}

	namespace n_USicknessSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _vomitingEnteredStatEvent = 0x4f0; // FString
		constexpr auto _hitByVomitTime = 0x500; // float
		constexpr auto _isSick = 0x504; // bool
		constexpr auto _isVomiting = 0x505; // bool
		constexpr auto _hasRecentlyBeenHitByVomit = 0x506; // bool
		constexpr auto _isOpeningExitGate = 0x507; // bool
	}

	namespace n_AStreamVideoPlayer { // : AActor
		constexpr auto MediaPlayer = 0x250; // UMediaPlayer*
		constexpr auto SoundComponent = 0x258; // UMediaSoundComponent*
		constexpr auto StreamVideoWidget = 0x260; // UUMGStreamVideoWidget*
		constexpr auto StreamMediaSource = 0x268; // UStreamMediaSource*
		constexpr auto _audioComponent = 0x270; // UAudioComponent*
	}

	namespace n_UBloodwebManager { // : UObject
		constexpr auto _bloodwebBuilderClass = 0x60; // UBloodwebGenerator*
		constexpr auto _gameInstance = 0x68; // UDBDGameInstance*
		constexpr auto _designTunables = 0x70; // UDBDDesignTunables*
		constexpr auto _bloodwebTunables = 0x78; // UBloodwebTunables*
		constexpr auto _bloodWebDefinition = 0x80; // TScriptInterface<IDBDBloodwebDefinitionBase>
		constexpr auto _bloodwebBuilder = 0x90; // UBloodwebGenerator*
		constexpr auto _entity = 0x98; // UBloodwebEntity*
		constexpr auto _bloodwebHandler = 0xa0; // UBloodwebHandler*
	}

	namespace n_ABP_Menu_Slasher17_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_18 = 0x698; // UBP_Audio_KLR_17_C*
		constexpr auto DBDPlayerPositionOffset = 0x6a0; // UDBDPlayerPositionOffsetComponent*
	}

	namespace n_ANavigationTestingActor { // : AActor
		constexpr auto CapsuleComponent = 0x240; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x248; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x250; // char : 1
		constexpr auto NavAgentProps = 0x258; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x290; // FVector
		constexpr auto MyNavData = 0x2a0; // ANavigationData*
		constexpr auto ProjectedLocation = 0x2a8; // FVector
		constexpr auto bProjectedLocationValid = 0x2b4; // char : 1
		constexpr auto bSearchStart = 0x2b4; // char : 1
		constexpr auto CostLimitFactor = 0x2b8; // float
		constexpr auto MinimumCostLimit = 0x2bc; // float
		constexpr auto bBacktracking = 0x2c0; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x2c0; // char : 1
		constexpr auto bGatherDetailedInfo = 0x2c0; // char : 1
		constexpr auto bDrawDistanceToWall = 0x2c0; // char : 1
		constexpr auto bShowNodePool = 0x2c0; // char : 1
		constexpr auto bShowBestPath = 0x2c0; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x2c0; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x2c0; // char : 1
		constexpr auto CostDisplayMode = 0x2c4; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x2c8; // FVector2D
		constexpr auto bPathExist = 0x2d0; // char : 1
		constexpr auto bPathIsPartial = 0x2d0; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x2d0; // char : 1
		constexpr auto PathfindingTime = 0x2d4; // float
		constexpr auto PathCost = 0x2d8; // float
		constexpr auto PathfindingSteps = 0x2dc; // int32_t
		constexpr auto OtherActor = 0x2e0; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x2e8; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x2f0; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x2f4; // float
	}

	namespace n_UButtonWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ButtonStyle = 0x38; // FButtonStyle
	}

	namespace n_USoundEffectSourcePresetChain { // : UObject
		constexpr auto chain = 0x30; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x40; // char : 1
	}

	namespace n_ALODActor { // : AActor
		constexpr auto StaticMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x238; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x288; // UHLODProxy*
		constexpr auto Key = 0x290; // FName
		constexpr auto LODDrawDistance = 0x29c; // float
		constexpr auto LODLevel = 0x2a0; // int32_t
		constexpr auto SubActors = 0x2a8; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x2b8; // char
	}

	namespace n_UUMGSettingContextButton { // : UMobileBaseUserWidget
		constexpr auto OnSettingContextButtonClickEvent = 0x300; // FMulticastInlineDelegate
	}

	namespace n_USingleProjectileProviderComponent { // : UActorComponent
		constexpr auto _projectileClass = 0xc0; // ABaseProjectile*
		constexpr auto _projectile = 0xc8; // ABaseProjectile*
	}

	namespace n_UWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto bFillEmptySpace = 0x50; // bool
		constexpr auto FillSpanWhenLessThan = 0x54; // float
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UBaseIndicatorWidget { // : UMobileBaseUserWidget
		constexpr auto _safeZonePanel = 0x300; // UCanvasPanel*
		constexpr auto _canvasPanelSlot = 0x308; // UCanvasPanelSlot*
		constexpr auto RadiusMultiplier = 0x310; // float
		constexpr auto IndicatorPanel = 0x318; // UCanvasPanel*
		constexpr auto Indicator = 0x320; // UCanvasPanel*
		constexpr auto ArrowImage = 0x328; // UImage*
	}

	namespace n_UContextualQuestComponent { // : UActorComponent
		constexpr auto _specialBehaviourObjectsInfo = 0xe0; // TArray<FSpecialBehaviourObjectsInfo>
		constexpr auto _isInitialized = 0xf0; // bool
	}

	namespace n_UUMGCharacterPrice { // : UMobileBaseUserWidget
		constexpr auto PriceTextBlock = 0x300; // UTextBlock*
		constexpr auto AffordableColor = 0x308; // FColor
		constexpr auto UnaffordableColor = 0x30c; // FColor
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto WorldAsset = 0x30; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x60; // FName
		constexpr auto LODPackageNames = 0x70; // TArray<FName>
		constexpr auto LevelTransform = 0x90; // FTransform
		constexpr auto LevelLODIndex = 0xc0; // int32_t
		constexpr auto StreamingPriority = 0xc4; // int32_t
		constexpr auto bShouldBeVisible = 0xca; // char : 1
		constexpr auto bShouldBeLoaded = 0xca; // char : 1
		constexpr auto bLocked = 0xca; // char : 1
		constexpr auto bIsStatic = 0xca; // char : 1
		constexpr auto bClientManaged = 0xca; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xcb; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xcb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xcb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xcb; // char : 1
		constexpr auto LevelColor = 0xcc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xe0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xf0; // float
		constexpr auto OnLevelLoaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x118; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x128; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x138; // ULevel*
		constexpr auto PendingUnloadLevel = 0x140; // ULevel*
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x30; // FGameplayTagContainer
	}

	namespace n_UAB_Menu_Slasher21_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3a0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3c0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x3e0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x840; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0xca0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1100; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x1560; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x19c0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x1a60; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x1ad8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x1b78; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x1bb0; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x1c60; // bool
		constexpr auto Is Online = 0x1c61; // bool
	}

	namespace n_UInvalidationBox { // : UContentWidget
		constexpr auto bCanCache = 0x140; // bool
		constexpr auto CacheRelativeTransforms = 0x141; // bool
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x40; // FRawDistributionVector
	}

	namespace n_UMagicLeapARPinSaveGame { // : USaveGame
		constexpr auto PinnedID = 0x30; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
	}

	namespace n_UAtlantaTutorialObjectiveManager { // : UObject
		constexpr auto _objectivesList = 0x30; // TArray<UAtlantaObjectiveWidget*>
		constexpr auto _objectivesContainer = 0x40; // UVerticalBox*
	}

	namespace n_UMeatHookAnimInstance { // : UAnimInstance
		constexpr auto IsBroken = 0x270; // bool
		constexpr auto Yaw = 0x274; // float
	}

	namespace n_UBTTask_MakeNoise { // : UBTTaskNode
		constexpr auto Loudnes = 0x78; // float
	}

	namespace n_AZombiesManagement { // : AActor
		constexpr auto _zombiePool = 0x238; // UAuthoritativeActorPoolComponent*
		constexpr auto _zombiesPatrolAreaManager = 0x240; // UZombiesPatrolAreaManager*
		constexpr auto _spawnedZombiesArray = 0x248; // TArray<AZombieCharacter*>
		constexpr auto _firstZombieSpawnTime = 0x288; // FDBDTunableRowHandle
		constexpr auto _numberOfZombieToSpawnAtStart = 0x2b0; // FDBDTunableRowHandle
		constexpr auto _zombieEscapeDoorPoints = 0x2d8; // TArray<AZombieEscapeDoorPointsActor*>
	}

	namespace n_UK25TeleportInteraction { // : UChargeableInteractionDefinition
		constexpr auto _maxNumberLocationQueriesPerTick = 0x6d8; // int32_t
		constexpr auto _timeSensingLamentConfigurationAfterInteractionEnded = 0x6dc; // float
		constexpr auto _slowdownAfterTeleportDuration = 0x700; // FDBDTunableRowHandle
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x40; // float
		constexpr auto MovementTolerance = 0x44; // float
		constexpr auto SpawnPerUnit = 0x48; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x78; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x7c; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x7c; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x7c; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x7c; // char : 1
	}

	namespace n_UAISenseConfig { // : UObject
		constexpr auto DebugColor = 0x30; // FColor
		constexpr auto MaxAge = 0x34; // float
		constexpr auto bStartsEnabled = 0x38; // char : 1
	}

	namespace n_UAISkill_FindInteractable_CrushTwin { // : UAISkill_FindInteractable
		constexpr auto _crushVictorGoalWeight = 0x124; // FAITunableParameter
		constexpr auto _recoveringTimeEstimationErrorMin = 0x134; // FAITunableParameter
		constexpr auto _recoveringTimeEstimationErrorMax = 0x144; // FAITunableParameter
		constexpr auto _destroyTwinMaxCharge = 0x158; // FDBDTunableRowHandle
	}

	namespace n_UChainsawAnalyticsBaseComponent { // : UActorComponent
		constexpr auto _maxDistanceFromHookToBeConsideredCamping = 0xd0; // float
	}

	namespace n_UGameplayTask { // : UObject
		constexpr auto InstanceName = 0x38; // FName
		constexpr auto ResourceOverlapPolicy = 0x46; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x68; // UGameplayTask*
	}

	namespace n_UListViewBase { // : UWidget
		constexpr auto EntryWidgetClass = 0x128; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x130; // float
		constexpr auto bEnableScrollAnimation = 0x134; // bool
		constexpr auto bEnableFixedLineOffset = 0x135; // bool
		constexpr auto FixedLineScrollOffset = 0x138; // float
		constexpr auto BP_OnEntryGenerated = 0x140; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x150; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x160; // FUserWidgetPool
	}

	namespace n_UARTrackedImage { // : UARTrackedGeometry
		constexpr auto DetectedImage = 0xf0; // UARCandidateImage*
		constexpr auto EstimatedSize = 0xf8; // FVector2D
	}

	namespace n_UDatasmithAreaLightActorTemplate { // : UDatasmithObjectTemplate
		constexpr auto LightType = 0x38; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x39; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x3c; // FVector2D
		constexpr auto Color = 0x44; // FLinearColor
		constexpr auto Intensity = 0x54; // float
		constexpr auto IntensityUnits = 0x58; // ELightUnits
		constexpr auto Temperature = 0x5c; // float
		constexpr auto IESTexture = 0x60; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x90; // bool
		constexpr auto IESBrightnessScale = 0x94; // float
		constexpr auto Rotation = 0x98; // FRotator
		constexpr auto SourceRadius = 0xa4; // float
		constexpr auto SourceLength = 0xa8; // float
		constexpr auto AttenuationRadius = 0xac; // float
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection { // : UMovieSceneSection
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UBombLauncher { // : UKillerProjectileLauncher
		constexpr auto _speedCurve = 0x180; // UCurveFloat*
		constexpr auto _pitchCurve = 0x188; // UCurveFloat*
		constexpr auto _currentBombType = 0x190; // EBombType
	}

	namespace n_AThrowingKnives { // : ACollectable
		constexpr auto _flurryScoreComponent = 0x510; // UFlurryComboScoreComponent*
		constexpr auto _superModeComponent = 0x518; // UTricksterSuperModeComponent*
		constexpr auto _superModeChargePresentationComponent = 0x520; // UK23PowerProgressPresentationComponent*
		constexpr auto _superModeChargeComponent = 0x528; // UPowerChargeComponent*
		constexpr auto _knivesProvider = 0x530; // UKnivesProvider*
		constexpr auto _knivesLauncher = 0x538; // UKnivesLauncher*
		constexpr auto _lacerationComponentClass = 0x540; // ULacerationComponent*
		constexpr auto _reloadInteractionClass = 0x548; // UReloadKnives*
		constexpr auto _closetReloadActor = 0x550; // AActor*
		constexpr auto _minimumTimeBetweenBroadcast = 0x558; // float
	}

	namespace n_UBeingPossessedInteraction { // : UInteractionDefinition
		constexpr auto _beingPossessedMaxCharge = 0x5b0; // FTunableStat
	}

	namespace n_USphereComponent { // : UShapeComponent
		constexpr auto SphereRadius = 0x440; // float
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto value = 0x48; // char : 1
	}

	namespace n_UBTService_SetMovementMode { // : UBTService
		constexpr auto OnEnterMovementMode = 0x78; // ECharacterMovementTypes
		constexpr auto OnExitMovementMode = 0x79; // ECharacterMovementTypes
	}

	namespace n_AMagicLeapSharedWorldGameMode { // : AgameMode
		constexpr auto SharedWorldData = 0x328; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x338; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x348; // float
		constexpr auto ChosenOne = 0x3f0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_UStalkerComponent { // : UActorComponent
		constexpr auto _distributeStalkRate = 0xe0; // bool
		constexpr auto _canStalkWhileInChase = 0xe1; // bool
		constexpr auto _playerStalkedComponents = 0xe8; // TArray<UStalkedComponent*>
		constexpr auto _stalkPointsChargeable = 0x108; // UChargeableComponent*
	}

	namespace n_ABlightPower { // : ACollectable
		constexpr auto _blightPowerCharge = 0x4d0; // UPowerChargeComponent*
		constexpr auto _blightPowerToggle = 0x4d8; // UPowerToggleComponent*
		constexpr auto _blightPowerActivateChargeable = 0x4e0; // UChargeableComponent*
		constexpr auto _blightPowerStateComponent = 0x4e8; // UBlightPowerStateComponent*
		constexpr auto _blightPowerActivateMaxCharge = 0x4f0; // FDBDTunableRowHandle
		constexpr auto _blightPowerMaxCharge = 0x518; // FTunableStat
		constexpr auto _blightPowerDechargeRate = 0x598; // FDBDTunableRowHandle
		constexpr auto _blightPowerRechargeRate = 0x5c0; // FDBDTunableRowHandle
	}

	namespace n_UUMGBaseRootStorefrontWidget { // : UMobileBaseUserWidget
		constexpr auto StorePageSlot = 0x348; // UNamedSlot*
		constexpr auto BackButton = 0x350; // UUMGBaseButtonWidget*
		constexpr auto CurrencyButtonsPanel = 0x358; // UPanelWidget*
		constexpr auto StorefrontTitle = 0x360; // UTextBlock*
	}

	namespace n_UBTService_Patrol_Discovery { // : UBTService_Patrol
		constexpr auto RejectPatrolPointIfInPressureZone = 0x158; // bool
		constexpr auto MaxFindRandomLocationOnTileAttempts = 0x15c; // int32_t
		constexpr auto FirstFindOnNbNeighborTiles = 0x160; // int32_t
	}

	namespace n_UK25AttackSubAnimInstance { // : UKillerAttackSubAnimInstance
		constexpr auto _hasDownedTargetHoldingLamentConfiguration = 0x5c0; // bool
	}

	namespace n_UGameUserSettings { // : UObject
		constexpr auto bUseVSync = 0x30; // bool
		constexpr auto bUseDynamicResolution = 0x31; // bool
		constexpr auto ResolutionSizeX = 0x88; // uint32_t
		constexpr auto ResolutionSizeY = 0x8c; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x90; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x94; // uint32_t
		constexpr auto WindowPosX = 0x98; // int32_t
		constexpr auto WindowPosY = 0x9c; // int32_t
		constexpr auto FullscreenMode = 0xa0; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0xa4; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa8; // int32_t
		constexpr auto Version = 0xac; // uint32_t
		constexpr auto AudioQualityLevel = 0xb0; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xb4; // int32_t
		constexpr auto FrameRateLimit = 0xb8; // float
		constexpr auto DesiredScreenWidth = 0xc0; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xc4; // bool
		constexpr auto DesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xcc; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xd0; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xd4; // float
		constexpr auto LastRecommendedScreenHeight = 0xd8; // float
		constexpr auto LastCPUBenchmarkResult = 0xdc; // float
		constexpr auto LastGPUBenchmarkResult = 0xe0; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe8; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf8; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x108; // float
		constexpr auto bUseHDRDisplayOutput = 0x10c; // bool
		constexpr auto HDRDisplayOutputNits = 0x110; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x118; // FMulticastInlineDelegate
	}

	namespace n_UGeneralProjectChunkingSettings { // : UObject
		constexpr auto NumberOfPaksInInitialChunk = 0x30; // int32_t
		constexpr auto NumberOfPaksInAllChunks = 0x34; // int32_t
		constexpr auto LeftoverPakId = 0x38; // int32_t
		constexpr auto PakAssignmentPaths = 0x40; // TArray<FPathPak>
		constexpr auto AtlantaNumberOfPaksInInitialChunk = 0x50; // int32_t
		constexpr auto AtlantaAndroidNumberOfPaksInAllChunks = 0x54; // int32_t
		constexpr auto AtlantaIOSNumberOfPaksInAllChunks = 0x58; // int32_t
		constexpr auto AtlantaLeftoverPakId = 0x5c; // int32_t
		constexpr auto AtlantaPakAssignmentPaths = 0x60; // TArray<FPathPak>
		constexpr auto AtlantaAndroidPakAssignmentPaths = 0x70; // TArray<FPathPak>
		constexpr auto AtlantaIOSPakAssignmentPaths = 0x80; // TArray<FPathPak>
	}

	namespace n_USharedAuthenticationComponent { // : UObject
		constexpr auto PopupZOrder = 0x30; // int32_t
		constexpr auto AuthenticationProviderSelectionWidget = 0x38; // UUMGAutheticationProviderSelection*
		constexpr auto AuthenticationProviderSelectionWidgetToLoad = 0x40; // TSoftClassPtr<UObject>
		constexpr auto LoginBackgroundToLoadWidgetToLoadMap = 0x70; // TMap<ESharedAuthenticationProvider, TSoftClassPtr<UObject>>
		constexpr auto _worldContextObject = 0xc0; // UObject*
		constexpr auto _migrateComponent = 0x188; // USharedAuthenticationMigrateComponent*
	}

	namespace n_UMovieScenePropertyTrack { // : UMovieSceneNameableTrack
		constexpr auto SectionToKey = 0x60; // UMovieSceneSection*
		constexpr auto PropertyName = 0x68; // FName
		constexpr auto PropertyPath = 0x78; // FString
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UUMGBloodStoreRowWidget { // : UMobileBaseUserWidget
		constexpr auto ItemContainer = 0x310; // UHorizontalBox*
		constexpr auto LockStatusPanel = 0x318; // UCanvasPanel*
		constexpr auto HardLockedStatusPanel = 0x320; // UCanvasPanel*
		constexpr auto _purchasedItemsNbr = 0x328; // int32_t
		constexpr auto _requiredItemNbr = 0x32c; // int32_t
		constexpr auto _rowStyle = 0x330; // EBloodStoreRowStyle
		constexpr auto _itemPadding = 0x334; // FMargin
		constexpr auto _itemWidgetClass = 0x348; // TSoftClassPtr<UObject>
		constexpr auto _itemClass = 0x378; // UObject*
	}

	namespace n_ABP_Menu_Slasher07_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_07 = 0x698; // UBP_Audio_KLR_07_C*
		constexpr auto DBDPlayerPositionOffset = 0x6a0; // UDBDPlayerPositionOffsetComponent*
	}

	namespace n_UFont { // : UObject
		constexpr auto FontCacheType = 0x38; // EFontCacheType
		constexpr auto Characters = 0x40; // TArray<FFontCharacter>
		constexpr auto Textures = 0x50; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x60; // int32_t
		constexpr auto EmScale = 0x64; // float
		constexpr auto Ascent = 0x68; // float
		constexpr auto Descent = 0x6c; // float
		constexpr auto Leading = 0x70; // float
		constexpr auto Kerning = 0x74; // int32_t
		constexpr auto ImportOptions = 0x78; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x128; // int32_t
		constexpr auto MaxCharHeight = 0x130; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x140; // float
		constexpr auto LegacyFontSize = 0x144; // int32_t
		constexpr auto LegacyFontName = 0x148; // FName
		constexpr auto CompositeFont = 0x158; // FCompositeFont
	}

	namespace n_UMovieSceneEventTriggerSection { // : UMovieSceneEventSectionBase
		constexpr auto EventChannel = 0xe8; // FMovieSceneEventChannel
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Period = 0x64; // float
	}

	namespace n_UEdgeObjectHandlingStrategy { // : UObject
		constexpr auto _edgeObjectSpawners = 0x30; // TArray<UActorSpawner*>
		constexpr auto _edgeObjectBlockers = 0x40; // TArray<UActorSpawner*>
	}

	namespace n_UUMGAtlantaEventsElement { // : UMobileBaseUserWidget
		constexpr auto ImageBox = 0x300; // UVerticalBox*
		constexpr auto ElementName = 0x308; // UTextBlock*
		constexpr auto CustomizationWidget = 0x310; // UUMGPromoPackItemWidget*
	}

	namespace n_UParticleSystemComponent { // : UFXSystemComponent
		constexpr auto Template = 0x428; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x430; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x440; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x451; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x451; // char : 1
		constexpr auto bAllowRecycling = 0x451; // char : 1
		constexpr auto bAutoManageAttachment = 0x451; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x451; // char : 1
		constexpr auto bWarmingUp = 0x452; // char : 1
		constexpr auto bOverrideLODMethod = 0x452; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x452; // char : 1
		constexpr auto LODMethod = 0x45f; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x460; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x468; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x478; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x488; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x498; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x4a8; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x4b8; // bool
		constexpr auto OldPosition = 0x4bc; // FVector
		constexpr auto PartSysVelocity = 0x4c8; // FVector
		constexpr auto WarmupTime = 0x4d4; // float
		constexpr auto WarmupTickRate = 0x4d8; // float
		constexpr auto SecondsBeforeInactive = 0x4e0; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x4e8; // float
		constexpr auto ReplayClips = 0x508; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x520; // float
		constexpr auto AutoAttachParent = 0x58c; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x594; // FName
		constexpr auto AutoAttachLocationRule = 0x5a0; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5a1; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5a2; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x5d0; // FMulticastInlineDelegate
	}

	namespace n_APainCausingVolume { // : APhysicsVolume
		constexpr auto bPainCausing = 0x278; // char : 1
		constexpr auto DamagePerSec = 0x27c; // float
		constexpr auto DamageType = 0x280; // UDamageType*
		constexpr auto PainInterval = 0x288; // float
		constexpr auto bEntryPain = 0x28c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x28c; // char : 1
		constexpr auto DamageInstigator = 0x290; // AController*
	}

	namespace n_UBTService_RunEQS { // : UBTService_BlackboardBase
		constexpr auto EQSRequest = 0xa8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UHexPerk { // : UTotemBoundPerk
		constexpr auto _playersWhoKnowCurse = 0x428; // TArray<ADBDPlayer*>
	}

	namespace n_USurge { // : UPerk
		constexpr auto _zoneRadius = 0x3d0; // float [0x3]
		constexpr auto _instantRegression = 0x3dc; // float [0x3]
		constexpr auto _cooldownDuration = 0x3e8; // float [0x3]
		constexpr auto _hasCooldown = 0x3f4; // bool
		constexpr auto _useTerrorRadiusInsteadOfFixedDistance = 0x3f5; // bool
	}

	namespace n_UCorruptIntervention { // : UPerk
		constexpr auto _blockedGeneratorCount = 0x3d0; // char [0x3]
		constexpr auto _generatorBlockDuration = 0x3d4; // float [0x3]
		constexpr auto _generatorAuraColorForKiller = 0x3e0; // FLinearColor
		constexpr auto _blockedGenerators = 0x3f0; // TArray<AGenerator*>
	}

	namespace n_UEnvQueryTest_Distance { // : UEnvQueryTest
		constexpr auto TestMode = 0x238; // EEnvTestDistance
		constexpr auto DistanceTo = 0x240; // UEnvQueryContext*
	}

	namespace n_UFireHarpoonRifleInteraction { // : UInteractionDefinition
		constexpr auto OnFireHarpoon = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnHitPlayer = 0x5c0; // FMulticastInlineDelegate
		constexpr auto _aimingSubState = 0x5d1; // EFireHarpoonRifleAimingInteractionSubState
		constexpr auto _harpoon = 0x5d8; // AHarpoonProjectile*
		constexpr auto _collector = 0x5e0; // ADBDPlayer*
		constexpr auto _aimDownSightDuration = 0x5e8; // FDBDTunableRowHandle
		constexpr auto _aimDownSightZoom = 0x610; // FDBDTunableRowHandle
		constexpr auto _aimDownSightMousePitchScaleMultiplier = 0x638; // FDBDTunableRowHandle
		constexpr auto _aimDownSightMouseYawScaleMultiplier = 0x660; // FDBDTunableRowHandle
		constexpr auto _aimDownSightGamepadPitchScaleMultiplier = 0x688; // FDBDTunableRowHandle
		constexpr auto _aimDownSightGamepadYawScaleMultiplier = 0x6b0; // FDBDTunableRowHandle
		constexpr auto _aimDownSightGamepadPitchCurve = 0x6d8; // UCurveFloat*
		constexpr auto _aimDownSightGamepadYawCurve = 0x6e0; // UCurveFloat*
		constexpr auto _aimDownSightRotationScaleAdjustmentTime = 0x6e8; // FDBDTunableRowHandle
		constexpr auto _aimDownSightMovementSpeedMultiplier = 0x710; // FTunableStat
		constexpr auto _fireDuration = 0x790; // FDBDTunableRowHandle
		constexpr auto _fireRotationScaleMultiplier = 0x7b8; // FDBDTunableRowHandle
		constexpr auto _fireRotationScaleAdjustmentTime = 0x7e0; // FDBDTunableRowHandle
		constexpr auto _fireMovementSpeedMultiplier = 0x808; // FDBDTunableRowHandle
		constexpr auto _longRangeShotMinDistance = 0x830; // FDBDTunableRowHandle
		constexpr auto _successMovementSpeedMultiplier = 0x860; // FDBDTunableRowHandle
		constexpr auto _missMovementSpeedMultiplier = 0x888; // FDBDTunableRowHandle
		constexpr auto _missShotCooldownDuration = 0x8b0; // FTunableStat
		constexpr auto _nearMissShotMaxDistance = 0x930; // FDBDTunableRowHandle
		constexpr auto _successShotDuration = 0x958; // FDBDTunableRowHandle
	}

	namespace n_UUMGBloodStoreWidget { // : UMobileBaseUserWidget
		constexpr auto OnBloodNodeSelected = 0x300; // FMulticastInlineDelegate
		constexpr auto OnBloodNodePurchase = 0x310; // FMulticastInlineDelegate
		constexpr auto OnBloodStoreRegenerate = 0x320; // FMulticastInlineDelegate
		constexpr auto OnCharacterRoleButtonClicked = 0x330; // FMulticastInlineDelegate
		constexpr auto BloodStoreArrayWidget = 0x340; // UUMGBloodStoreArrayWidget*
		constexpr auto ItemPreviewWidget = 0x348; // UUMGBloodStoreItemPreviewWidget*
		constexpr auto BloodStoreSubMenuWidget = 0x350; // UUMGBloodStoreSubMenu*
		constexpr auto _bloodStoreTitle = 0x358; // FText
		constexpr auto _killersTitle = 0x370; // FText
		constexpr auto _survivorsTitle = 0x388; // FText
	}

	namespace n_UGPUCullingInstancedStaticMeshComponent { // : UInstancedStaticMeshComponent
		constexpr auto MaterialOverrides = 0x5b0; // TArray<UMaterialInterface*>
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x40; // FInterpCurveFloat
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x38; // FRawDistributionFloat
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto BaseSkelMesh = 0x30; // USkeletalMesh*
	}

	namespace n_UEditUVIslandsTool { // : UMeshSurfacePointTool
		constexpr auto DynamicMeshComponent = 0xd0; // USimpleDynamicMeshComponent*
		constexpr auto SelectionMechanic = 0xd8; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0xe8; // UMultiTransformer*
	}

	namespace n_UCoreExternalEffectsWidget { // : UCoreBaseHudWidget
		constexpr auto GridSlotSize = 0x2f8; // FVector2D
		constexpr auto AddonScaleRatio = 0x300; // float
		constexpr auto SpacingBetweenRows = 0x304; // int32_t
		constexpr auto SpacingPerks = 0x308; // int32_t
		constexpr auto SpacingAddons = 0x30c; // int32_t
		constexpr auto SpacingBetweenPerksAndAddons = 0x310; // int32_t
		constexpr auto PerkWidgetClass = 0x318; // UCorePerkWidget*
		constexpr auto AddonWidgetClass = 0x320; // UCoreAddonWidget*
		constexpr auto Container = 0x328; // UGridPanel*
		constexpr auto _perkData = 0x338; // TArray<FPerkViewData>
		constexpr auto _perkWidgets = 0x348; // TMap<FName, UCorePerkWidget*>
		constexpr auto _perkPool = 0x398; // TArray<UCorePerkWidget*>
		constexpr auto _perkViewInterfaces = 0x3a8; // TMap<FName, TScriptInterface<IPerkViewInterface>>
		constexpr auto _addonData = 0x3f8; // TArray<FAddonViewData>
		constexpr auto _addonWidgets = 0x408; // TMap<FName, UCoreAddonWidget*>
		constexpr auto _addonPool = 0x458; // TArray<UCoreAddonWidget*>
		constexpr auto _addonViewInterfaces = 0x468; // TMap<FName, TScriptInterface<IAddonViewInterface>>
		constexpr auto _timerHandleMap = 0x4b8; // TMap<FName, FTimerHandle>
		constexpr auto _spacerWidgets = 0x508; // TMap<FName, USpacer*>
		constexpr auto _spacerPool = 0x558; // TArray<USpacer*>
	}

	namespace n_UOngoingGameEvent { // : UObject
		constexpr auto _eventData = 0x30; // FGameEventData
	}

	namespace n_UZombieFallDetectorComponent { // : UActorComponent
		constexpr auto _zombieDistanceConsideredSmashFall = 0xb8; // FDBDTunableRowHandle
	}

	namespace n_ALevelParadise { // : AActor
		constexpr auto LoopStartDistance = 0x230; // float
		constexpr auto LoopDistance = 0x234; // float
		constexpr auto MainPlayerSpawnPoint = 0x238; // USceneComponent*
		constexpr auto OtherSurvivorSpawnPoints = 0x240; // TArray<USceneComponent*>
		constexpr auto ParadiseTiles = 0x250; // TArray<USceneComponent*>
		constexpr auto ParadiseViewTarget = 0x260; // AActor*
		constexpr auto _spawnedMainPawn = 0x2f8; // ADBDPlayer*
		constexpr auto _runnerComponent = 0x300; // USceneComponent*
	}

	namespace n_UFlurryOfKnives { // : UChargeableInteractionDefinition
		constexpr auto _replicatedNumOfStacksReduction = 0x720; // int32_t
		constexpr auto _isSuperModeThrow = 0x724; // bool
		constexpr auto _selfSlowEffect = 0x770; // UStatusEffect*
		constexpr auto _flurryOfKnivesEnterDuration = 0x778; // FDBDTunableRowHandle
		constexpr auto _flurryOfKnivesExitDuration = 0x7a0; // FDBDTunableRowHandle
		constexpr auto _chargeTime = 0x7c8; // FDBDTunableRowHandle
		constexpr auto _baseTimeBetweenThrows = 0x7f0; // FTunableStat
		constexpr auto _throwRateModifierByKnivesThrown = 0x870; // UCurveFloat*
		constexpr auto _superModeThrowRateModifier = 0x878; // FDBDTunableRowHandle
		constexpr auto _knivesLaunchSpeed = 0x8a0; // FDBDTunableRowHandle
		constexpr auto _convergencePointDistance = 0x8c8; // FDBDTunableRowHandle
		constexpr auto _coneOfFireAngleCurve = 0x8f0; // UCurveFloat*
		constexpr auto _consecutiveKnivesStacksDecayTime = 0x8f8; // FDBDTunableRowHandle
		constexpr auto _maxConsecutiveKnivesStacks = 0x920; // FDBDTunableRowHandle
		constexpr auto _movementSpeedByKnivesThrown = 0x948; // UCurveFloat*
		constexpr auto _superModeBaseMovementSpeed = 0x950; // FDBDTunableRowHandle
		constexpr auto _baseWalkSpeed = 0x978; // FDBDTunableRowHandle
		constexpr auto _recoilIntensityByKnivesThrown = 0x9a0; // UCurveFloat*
		constexpr auto _recoilDuration = 0x9a8; // FDBDTunableRowHandle
		constexpr auto _recoilAngle = 0x9d0; // FDBDTunableRowHandle
		constexpr auto _maximumRecoilAngleVariation = 0x9f8; // FDBDTunableRowHandle
		constexpr auto _rotationSpeedAdjustmentTime = 0xa20; // FDBDTunableRowHandle
		constexpr auto _aimingStanceRotationYawScaleAdjustment = 0xa48; // FDBDTunableRowHandle
		constexpr auto _aimingStanceRotationPitchScaleAdjustment = 0xa70; // FDBDTunableRowHandle
		constexpr auto _throwingRotationYawScaleAdjustment = 0xa98; // FDBDTunableRowHandle
		constexpr auto _throwingRotationPitchScaleAdjustment = 0xac0; // FDBDTunableRowHandle
		constexpr auto _aimingStanceGamepadRotationYawScaleAdjustment = 0xae8; // FDBDTunableRowHandle
		constexpr auto _aimingStanceGamepadRotationPitchScaleAdjustment = 0xb10; // FDBDTunableRowHandle
		constexpr auto _throwingGamepadRotationYawScaleAdjustment = 0xb38; // FDBDTunableRowHandle
		constexpr auto _throwingGamepadRotationPitchScaleAdjustment = 0xb60; // FDBDTunableRowHandle
		constexpr auto _aimingGamepadPitchCurve = 0xb88; // UCurveFloat*
		constexpr auto _aimingGamepadYawCurve = 0xb90; // UCurveFloat*
		constexpr auto _throwingGamepadPitchCurve = 0xb98; // UCurveFloat*
		constexpr auto _throwingGamepadYawCurve = 0xba0; // UCurveFloat*
	}

	namespace n_UStreamableRenderAsset { // : UObject
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x30; // double
		constexpr auto NumCinematicMipLevels = 0x38; // int32_t
		constexpr auto StreamingIndex = 0x3c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x40; // int32_t
		constexpr auto CachedNumResidentLODs = 0x44; // char
		constexpr auto bCachedReadyForStreaming = 0x45; // char : 1
		constexpr auto NeverStream = 0x45; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x45; // char : 1
		constexpr auto bIsStreamable = 0x45; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x45; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x45; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x45; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x45; // char : 1
	}

	namespace n_UParticleModuleVectorFieldRotationRate { // : UParticleModuleVectorFieldBase
		constexpr auto RotationRate = 0x38; // FVector
	}

	namespace n_ULocalPlayerTrackerComponent { // : USceneComponent
		constexpr auto TrackerOnLocallyObservedChanged = 0x210; // FMulticastInlineDelegate
	}

	namespace n_ALandscapeProxy { // : AActor
		constexpr auto SplineComponent = 0x230; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x238; // FGuid
		constexpr auto LandscapeSectionOffset = 0x248; // FIntPoint
		constexpr auto MaxLODLevel = 0x250; // int32_t
		constexpr auto LODDistanceFactor = 0x254; // float
		constexpr auto LODFalloff = 0x258; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x25c; // float
		constexpr auto LOD0ScreenSize = 0x260; // float
		constexpr auto LOD0DistributionSetting = 0x264; // float
		constexpr auto LODDistributionSetting = 0x268; // float
		constexpr auto TessellationComponentScreenSize = 0x26c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x270; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x274; // float
		constexpr auto OccluderGeometryLOD = 0x278; // int32_t
		constexpr auto StaticLightingLOD = 0x27c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x280; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x288; // float
		constexpr auto LandscapeMaterial = 0x290; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x2b8; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x2c0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x2d0; // bool
		constexpr auto MeshHolesMaxLod = 0x2d1; // char
		constexpr auto RuntimeVirtualTextures = 0x2d8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x2e8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x2ec; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x2f0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x2f4; // float
		constexpr auto PositiveZBoundsExtension = 0x2f8; // float
		constexpr auto LandscapeComponents = 0x300; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x310; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x320; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x394; // bool
		constexpr auto StaticLightingResolution = 0x398; // float
		constexpr auto bCastStaticShadow = 0x39c; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x39c; // char : 1
		constexpr auto bCastFarShadow = 0x39c; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x3a0; // char : 1
		constexpr auto LightingChannels = 0x3a1; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x3a4; // char : 1
		constexpr auto bRenderCustomDepth = 0x3a4; // char : 1
		constexpr auto CustomDepthStencilValue = 0x3a8; // int32_t
		constexpr auto LDMaxDrawDistance = 0x3ac; // float
		constexpr auto LightmassSettings = 0x3b0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x3c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x3cc; // int32_t
		constexpr auto CollisionThickness = 0x3d0; // float
		constexpr auto BodyInstance = 0x3d8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x4f0; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x4f0; // char : 1
		constexpr auto ComponentSizeQuads = 0x4f4; // int32_t
		constexpr auto SubsectionSizeQuads = 0x4f8; // int32_t
		constexpr auto NumSubsections = 0x4fc; // int32_t
		constexpr auto bUsedForNavigation = 0x500; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x500; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x504; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x505; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x506; // bool
		constexpr auto bHasLayersContent = 0x507; // bool
		constexpr auto WeightmapUsageMap = 0x508; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UInterpTrackAkAudioRTPC { // : UInterpTrackFloatBase
		constexpr auto Param = 0x98; // FString
		constexpr auto bPlayOnReverse = 0xa8; // char : 1
		constexpr auto bContinueRTPCOnMatineeEnd = 0xa8; // char : 1
	}

	namespace n_UTerrorRadiusEmitterComponent { // : USceneComponent
		constexpr auto _simulatedFixedDistance = 0x228; // float
		constexpr auto _imitatesAudioOnly = 0x22c; // bool
		constexpr auto _generatesChaseMusic = 0x22d; // bool
		constexpr auto _active = 0x22e; // bool
		constexpr auto _isFakeTerrorRadius = 0x22f; // bool
		constexpr auto _radius = 0x230; // float
		constexpr auto _receiversInTerrorRadiusMap = 0x238; // TMap<TWeakObjectPtr<UTerrorRadiusReceiverComponent>, bool>
		constexpr auto _receiversPhysicallyInRadiusRangeMap = 0x288; // TMap<TWeakObjectPtr<UTerrorRadiusReceiverComponent>, bool>
	}

	namespace n_AHarpoonProp { // : AActor
		constexpr auto _skeletalMesh = 0x238; // USkeletalMeshComponent*
	}

	namespace n_USafeZoneManagerWidget { // : UMobileBaseUserWidget
		constexpr auto SafeZonePanel = 0x300; // UCanvasPanel*
	}

	namespace n_USmoothMeshTool { // : USingleSelectionTool
		constexpr auto SmoothType = 0x98; // ESmoothMeshToolSmoothType
		constexpr auto SmoothSpeed = 0x9c; // float
		constexpr auto SmoothIterations = 0xa0; // int32_t
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UActivatorComponent { // : UActorComponent
		constexpr auto _searchForActivatableSubAnimInstances = 0xb8; // bool
	}

	namespace n_UMovieSceneMediaSection { // : UMovieSceneSection
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_UMoriableComponent { // : UActorComponent
		constexpr auto _moriInteractions = 0xb8; // TArray<UInteractionDefinition*>
	}

	namespace n_UEnvQueryTest_PathfindingBatch { // : UEnvQueryTest_Pathfinding
		constexpr auto ScanRangeMultiplier = 0x2d0; // FAIDataProviderFloatValue
	}

	namespace n_UAimPointPerlinNoise { // : UAimPointProcessor
		constexpr auto _baseInaccuracyNoisePersistence = 0xbc; // float
		constexpr auto _baseInaccuracyNoiseOctaveCount = 0xc0; // int32_t
		constexpr auto _baseInaccuracyNoiseAmplitude = 0xc4; // float
		constexpr auto _baseInaccuracyNoiseFrequency = 0xcc; // float
		constexpr auto _timeOffset = 0xd4; // float
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x40; // FRawDistributionVector
		constexpr auto Absolute = 0x88; // char : 1
	}

	namespace n_UAtlantaSkillCheckWidget { // : UMobileBaseUserWidget
		constexpr auto SkillCheckArea = 0x300; // UCanvasPanel*
		constexpr auto HitArea = 0x308; // UImage*
		constexpr auto Hit = 0x310; // UImage*
		constexpr auto OrangeSmoke = 0x318; // UImage*
		constexpr auto BonusArea = 0x320; // UImage*
		constexpr auto StartMarker = 0x328; // UImage*
		constexpr auto EndMarker = 0x330; // UImage*
		constexpr auto HitAreaContainer = 0x338; // UCanvasPanel*
		constexpr auto BonusAreaContainer = 0x340; // UCanvasPanel*
		constexpr auto HitAreaStartMarkerContainer = 0x348; // UCanvasPanel*
		constexpr auto HitAreaEndMarkerContainer = 0x350; // UCanvasPanel*
		constexpr auto MarkerContainer = 0x358; // UCanvasPanel*
		constexpr auto HexColor = 0x360; // FLinearColor
		constexpr auto DefaultColor = 0x370; // FLinearColor
		constexpr auto _isPlayAnimation = 0x380; // bool
		constexpr auto PathCoveredAngle = 0x384; // float
	}

	namespace n_UIridescentCoinAddon { // : UItemAddon
		constexpr auto _exposedStatusEffect = 0x298; // UStatusEffect*
	}

	namespace n_AStaticMeshActor { // : AActor
		constexpr auto StaticMeshComponent = 0x230; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x238; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x239; // ENavDataGatheringMode
	}

	namespace n_UWidgetSwitcher { // : UPanelWidget
		constexpr auto ActiveWidgetIndex = 0x140; // int32_t
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto AutoActivateForPlayer = 0x230; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x238; // UCameraComponent*
		constexpr auto SceneComponent = 0x240; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x250; // char : 1
		constexpr auto AspectRatio = 0x254; // float
		constexpr auto FOVAngle = 0x258; // float
		constexpr auto PostProcessBlendWeight = 0x25c; // float
		constexpr auto PostProcessSettings = 0x260; // FPostProcessSettings
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x50; // FParticleRandomSeedInfo
	}

	namespace n_UCoreSelectableButtonWidget { // : UCoreButtonWidget
		constexpr auto OnSelectedChangedDelegate = 0x398; // FMulticastInlineDelegate
		constexpr auto OnSelectedAgainDelegate = 0x3a8; // FMulticastInlineDelegate
	}

	namespace n_UUMGAtlantaRequestRoleButton { // : UUMGBaseButtonWidget
		constexpr auto IconSwitcher = 0x430; // UWidgetSwitcher*
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack { // : UMovieSceneMaterialTrack
		constexpr auto MPC = 0x70; // UMaterialParameterCollection*
	}

	namespace n_UInputSettings { // : UObject
		constexpr auto AxisConfig = 0x30; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x40; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x40; // char : 1
		constexpr auto bUseMouseForTouch = 0x40; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x40; // char : 1
		constexpr auto bEnableFOVScaling = 0x40; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x40; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x40; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x40; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x41; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x41; // char : 1
		constexpr auto bUseAutocorrect = 0x42; // bool
		constexpr auto ExcludedAutocorrectOS = 0x48; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x58; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x68; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x78; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x79; // EMouseLockMode
		constexpr auto FOVScale = 0x7c; // float
		constexpr auto DoubleClickTime = 0x80; // float
		constexpr auto ActionMappings = 0x88; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x98; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa8; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultTouchInterface = 0xb8; // FSoftObjectPath
		constexpr auto ConsoleKey = 0xd8; // FKey
		constexpr auto ConsoleKeys = 0xf8; // TArray<FKey>
	}

	namespace n_UBTDecorator_CanRunSkill { // : UBTDecorator_TickableBase
		constexpr auto Context = 0x70; // FGameplayTag
	}

	namespace n_ULightingData { // : UDataAsset
		constexpr auto DefaultLighting = 0x38; // TSoftClassPtr<UObject>
		constexpr auto DefaultAtlantaLighting = 0x68; // TSoftClassPtr<UObject>
		constexpr auto Descriptions = 0x98; // TArray<FSceneLightingDescription>
		constexpr auto AdaptiveShadowMapControllersActor = 0xa8; // TSoftClassPtr<UObject>
	}

	namespace n_UReflectionCaptureComponent { // : USceneComponent
		constexpr auto CaptureOffsetComponent = 0x210; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x218; // EReflectionSourceType
		constexpr auto Cubemap = 0x220; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x228; // float
		constexpr auto Brightness = 0x22c; // float
		constexpr auto ContributionFactor = 0x230; // float
		constexpr auto IBLMultiplicator = 0x234; // float
		constexpr auto bCanBeTinted = 0x238; // bool
		constexpr auto TintColor = 0x23c; // FLinearColor
		constexpr auto LastTintColorNotBlack = 0x24c; // FLinearColor
		constexpr auto CaptureOffset = 0x260; // FVector
		constexpr auto MapBuildDataId = 0x26c; // FGuid
	}

	namespace n_UMediaOutput { // : UObject
		constexpr auto NumberOfTextureBuffers = 0x30; // int32_t
	}

	namespace n_UTracingConeFlashlightableLightingStrategy { // : UFlashlightableLightingStrategy
		constexpr auto _aroundConeCircleTraceCount = 0x30; // int32_t
	}

	namespace n_UWallGrabInteractionDefinition { // : UInteractionDefinition
		constexpr auto _blightPowerStateComponent = 0x5b0; // UBlightPowerStateComponent*
		constexpr auto _wallDashAccelerationMultiplier = 0x5b8; // FDBDTunableRowHandle
		constexpr auto _blightPowerCollisionIndicator = 0x5e0; // ABlightPowerEstimatedCollisionIndicator*
		constexpr auto _collisionIndicatorActorClass = 0x5e8; // ABlightPowerEstimatedCollisionIndicator*
	}

	namespace n_UK26KillerInstinctStatusEffect { // : UStatusEffect
		constexpr auto _lingerDuration = 0x350; // FTunableStat
		constexpr auto _openExitGateInteractionClass = 0x3d0; // UInteractionDefinition*
		constexpr auto _hasInitializedLingerDuration = 0x3d8; // bool
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x38; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x48; // int32_t
		constexpr auto bUsesVelocity = 0x4c; // char : 1
	}

	namespace n_AHarpoonProjectile { // : AKillerProjectile
		constexpr auto _launchDistanceFromCamera = 0x3b0; // FDBDTunableRowHandle
		constexpr auto _movement = 0x3d8; // UHarpoonProjectileMovementComponent*
		constexpr auto _environmentCollider = 0x3e0; // UPrimitiveComponent*
		constexpr auto _targetCollider = 0x3e8; // UPrimitiveComponent*
		constexpr auto _skeletalMesh = 0x3f0; // USkeletalMeshComponent*
		constexpr auto _poolableActorComponent = 0x3f8; // UPoolableActorComponent*
	}

	namespace n_AK22Power { // : ACollectable
		constexpr auto _releaseConjoinedTwinChargeable = 0x4e8; // UChargeableComponent*
		constexpr auto _possessConjoinedTwinChargeable = 0x4f0; // UChargeableComponent*
		constexpr auto _conjoinedTwin = 0x510; // AConjoinedTwin*
		constexpr auto _conjoinedTwinParadise = 0x518; // AConjoinedTwin*
		constexpr auto _powerCharge = 0x520; // UPowerChargeComponent*
		constexpr auto _powerChargePresentationItemProgress = 0x528; // UK22PowerChargePresentationItemProgressComponent*
		constexpr auto _powerMaxCharge = 0x530; // FDBDTunableRowHandle
		constexpr auto _conjoinedTwinClass = 0x558; // AConjoinedTwin*
		constexpr auto _powerRechargeRate = 0x578; // FDBDTunableRowHandle
		constexpr auto _timeBeforeAutoDestroy = 0x5a0; // FDBDTunableRowHandle
		constexpr auto _timeBeforeRecallAvailable = 0x5c8; // FDBDTunableRowHandle
	}

	namespace n_UK25P03 { // : UPerk
		constexpr auto _numberOfSurvivorsWaitingForDamageStateChange = 0x3d8; // int32_t
		constexpr auto _state2ActionSpeedDebuffPercentage = 0x3dc; // float [0x3]
	}

	namespace n_UAtlantaRitualsManager { // : UObject
		constexpr auto _gameInstance = 0x30; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UScreamComponent { // : UActorComponent
		constexpr auto _perkManager = 0xb8; // UPerkManager*
		constexpr auto _montagePlayer = 0xc0; // UMontagePlayer*
	}

	namespace n_UEnvQueryTest_Pathfinding { // : UEnvQueryTest
		constexpr auto TestMode = 0x238; // EEnvTestPathfinding
		constexpr auto Context = 0x240; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x248; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x288; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x2c8; // UNavigationQueryFilter*
	}

	namespace n_UReleaseConjoinedTwin { // : UChargeableInteractionDefinition
		constexpr auto _releaseMaxCharge = 0x6d8; // FDBDTunableRowHandle
		constexpr auto _releaseExitTime = 0x700; // FTunableStat
		constexpr auto _releaseAnimationWentToTheEnd = 0x7b4; // bool
	}

	namespace n_ABP_Menu_Slasher01_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_01 = 0x698; // UBP_Audio_KLR_01_C*
	}

	namespace n_USoleSurvivor { // : UPerk
		constexpr auto _auraHideDistancePerDeadOrDisconnectedSurvivor = 0x3d0; // float [0x3]
		constexpr auto _otherSurvivors = 0x3e0; // TArray<ACamperPlayer*>
	}

	namespace n_UAIMoveToInteract { // : UAICharacterBehaviour
		constexpr auto _aiMoveToInteractData = 0x58; // UAIMoveToInteractData*
		constexpr auto _aiController = 0x60; // ADBDAIPlayerController*
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xb8; // FParticleRandomSeedInfo
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x38; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x80; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc8; // char : 1
		constexpr auto bKillInside = 0xc8; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc8; // char : 1
	}

	namespace n_UPortalTargetingComponent { // : UActorComponent
		constexpr auto _targetedPortal = 0xb8; // ADemogorgonPortal*
		constexpr auto _portalPlacerState = 0xc0; // UPortalPlacerStateComponent*
	}

	namespace n_UARTextureCameraDepth { // : UARTexture
		constexpr auto DepthQuality = 0xe0; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xe1; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xe2; // bool
	}

	namespace n_UUMGPurchaseBuyButton { // : UUMGBaseButtonWidget
		constexpr auto PriceText = 0x430; // UTextBlock*
	}

	namespace n_UBTTask_RunBehaviorDynamic { // : UBTTaskNode
		constexpr auto InjectionTag = 0x78; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x88; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x90; // UBehaviorTree*
	}

	namespace n_UDownloadingTextureTask { // : UObject
		constexpr auto _downloadingTask = 0x30; // UAsyncTaskDownloadCacheImage*
		constexpr auto _url = 0x38; // FString
		constexpr auto _downloadedTexture = 0x60; // UTexture2DDynamic*
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0x48; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x49; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x4c; // float
		constexpr auto MappingRotation = 0x50; // float
		constexpr auto MappingPanU = 0x54; // float
		constexpr auto MappingPanV = 0x58; // float
	}

	namespace n_UViewport { // : UContentWidget
		constexpr auto BackgroundColor = 0x140; // FLinearColor
	}

	namespace n_UDiversion { // : UPerk
		constexpr auto _diversionActivationTimePerLevel = 0x428; // float [0x3]
		constexpr auto _throwPebbleDistance = 0x434; // float
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Period = 0x64; // float
	}

	namespace n_UBTDecorator_ExtConeCheck { // : UBTDecorator_TickableBase
		constexpr auto BBConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto BBConeDirection = 0xa0; // FBlackboardKeySelector
		constexpr auto BBWith = 0xd0; // FBlackboardKeySelector
		constexpr auto ConeHalfAngle = 0x100; // FAITunableParameter
	}

	namespace n_UTrailOfTorment { // : UPerk
		constexpr auto _cooldownDuration = 0x3e8; // float [0x3]
		constexpr auto _highlightPriority = 0x3f4; // int32_t
		constexpr auto _isPerkActivated = 0x3f8; // bool
		constexpr auto _highlightedGenerator = 0x400; // AGenerator*
		constexpr auto _statusEffect = 0x408; // UStatusEffect*
	}

	namespace n_UUMGDownloadProgressionWidget { // : UMobileBaseUserWidget
		constexpr auto ProgressBar = 0x300; // UProgressBar*
		constexpr auto DownloadPercentage = 0x308; // UTextBlock*
		constexpr auto DownloadDescription = 0x310; // UTextBlock*
	}

	namespace n_UOpenChestSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isInteractingWithChest = 0x4f0; // bool
		constexpr auto _interactionPhase = 0x4f4; // FGameplayTag
		constexpr auto _isInteractingWithOpenChest = 0x500; // bool
		constexpr auto _snapPosition = 0x504; // FVector
		constexpr auto _isVomiting = 0x510; // bool
	}

	namespace n_UUMGAtlantaMatchConfigPageScrollItem { // : UUMGBaseButtonWidget
		constexpr auto ImagePanel = 0x430; // UCanvasPanel*
		constexpr auto DefaultPanel = 0x438; // UCanvasPanel*
		constexpr auto DefaultImage = 0x440; // UImage*
		constexpr auto _unselectedOpacity = 0x448; // float
		constexpr auto _selectedOpacity = 0x44c; // float
	}

	namespace n_UObjectPlacementValidationWithRestrictionStrategy { // : UDefaultObjectPlacementValidationStrategy
		constexpr auto _restrictedAreas = 0xe0; // TArray<URestrictedPlacementAreaStrategy*>
	}

	namespace n_UPowerChargeComponent { // : UActorComponent
		constexpr auto OnPowerChargeChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _currentCharge = 0x120; // FSpeedBasedNetSyncedValue
		constexpr auto _forceFullCharge = 0x15c; // bool
	}

	namespace n_UStereoLayerComponent { // : USceneComponent
		constexpr auto bLiveTexture = 0x210; // char : 1
		constexpr auto bSupportsDepth = 0x210; // char : 1
		constexpr auto bNoAlphaChannel = 0x210; // char : 1
		constexpr auto Texture = 0x218; // UTexture*
		constexpr auto LeftTexture = 0x220; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x228; // char : 1
		constexpr auto QuadSize = 0x22c; // FVector2D
		constexpr auto UVRect = 0x234; // FBox2D
		constexpr auto CylinderRadius = 0x248; // float
		constexpr auto CylinderOverlayArc = 0x24c; // float
		constexpr auto CylinderHeight = 0x250; // int32_t
		constexpr auto EquirectProps = 0x254; // FEquirectProps
		constexpr auto StereoLayerType = 0x29c; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x29d; // EStereoLayerShape
		constexpr auto Shape = 0x2a0; // UStereoLayerShape*
		constexpr auto Priority = 0x2a8; // int32_t
	}

	namespace n_UMovieScene { // : UMovieSceneSignedObject
		constexpr auto Spawnables = 0x58; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x68; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x78; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x88; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd8; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe8; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xf0; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0x100; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x110; // FFrameRate
		constexpr auto DisplayRate = 0x118; // FFrameRate
		constexpr auto EvaluationType = 0x120; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x121; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x128; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x148; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x38; // char : 1
	}

	namespace n_UDynamicEntryBox { // : UDynamicEntryBoxBase
		constexpr auto EntryWidgetClass = 0x1e8; // UUserWidget*
	}

	namespace n_UCameraAttachmentComponent { // : UActorComponent
		constexpr auto _anchor = 0xb8; // USceneComponent*
		constexpr auto _defaultCameraAttachment = 0xd0; // FCameraAttachment
		constexpr auto _currentCameraAttachment = 0xe8; // FCameraAttachment
	}

	namespace n_UNodeMappingContainer { // : UObject
		constexpr auto SourceItems = 0x30; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x80; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xd0; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x120; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x150; // TSoftObjectPtr<UObject>
	}

	namespace n_UInflictMadnessBaseQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _requiredTier = 0x90; // int32_t
	}

	namespace n_UStreamVideoSubsystem { // : UGameInstanceSubsystem
		constexpr auto StreamVideoManager = 0x38; // UStreamVideoManager*
		constexpr auto StreamVideoFactory = 0x40; // UStreamVideoFactory*
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
	}

	namespace n_UAkLinuxInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UUMGCharacterFreeTicketButton { // : UMobileBaseUserWidget
		constexpr auto ButtonSwitcher = 0x300; // UWidgetSwitcher*
		constexpr auto FreeTicketLeftSecondsText = 0x308; // UTextBlock*
		constexpr auto FreeTicketLeftSecondsBG = 0x310; // UImage*
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAddon_Beartrap_DisarmRevealer { // : UItemAddon
		constexpr auto _auraRevealStatusEffectID = 0x298; // FName
		constexpr auto _auraRevealDuration = 0x2a4; // float
		constexpr auto _disarmedTrapMap = 0x2a8; // TMap<ABearTrap*, ACamperPlayer*>
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Settings = 0x270; // FPostProcessSettings
		constexpr auto Priority = 0x7b0; // float
		constexpr auto BlendRadius = 0x7b4; // float
		constexpr auto BlendWeight = 0x7b8; // float
		constexpr auto bEnabled = 0x7bc; // char : 1
		constexpr auto bUnbound = 0x7bc; // char : 1
	}

	namespace n_USubmixEffectSubmixEQPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x80; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UAkSettings { // : UObject
		constexpr auto MaxSimultaneousReverbVolumes = 0x30; // char
		constexpr auto WwiseProjectPath = 0x38; // FFilePath
		constexpr auto WwiseSoundDataFolder = 0x48; // FDirectoryPath
		constexpr auto bAutoConnectToWAAPI = 0x58; // bool
		constexpr auto DefaultOcclusionCollisionChannel = 0x59; // ECollisionChannel
		constexpr auto AkGeometryMap = 0x60; // TMap<TSoftObjectPtr<UPhysicalMaterial>, FAkGeometrySurfacePropertiesToMap>
		constexpr auto SplitSwitchContainerMedia = 0xb0; // bool
		constexpr auto UseEventBasedPackaging = 0xb1; // bool
		constexpr auto EnableAutomaticAssetSynchronization = 0xb2; // bool
		constexpr auto CommandletCommitMessage = 0xb8; // FString
		constexpr auto UnrealCultureToWwiseCulture = 0xc8; // TMap<FString, FString>
		constexpr auto AskedToUseNewAssetManagement = 0x118; // bool
		constexpr auto bEnableMultiCoreRendering = 0x119; // bool
		constexpr auto MigratedEnableMultiCoreRendering = 0x11a; // bool
		constexpr auto FixupRedirectorsDuringMigration = 0x11b; // bool
		constexpr auto WwiseWindowsInstallationPath = 0x120; // FDirectoryPath
		constexpr auto WwiseMacInstallationPath = 0x130; // FFilePath
	}

	namespace n_UParticleModuleLight { // : UParticleModuleLightBase
		constexpr auto bUseInverseSquaredFalloff = 0x38; // bool
		constexpr auto bAffectsTranslucency = 0x39; // bool
		constexpr auto bPreviewLightRadius = 0x3a; // bool
		constexpr auto SpawnFraction = 0x3c; // float
		constexpr auto ColorScaleOverLife = 0x40; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x88; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb8; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe8; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x118; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x11c; // float
		constexpr auto bHighQualityLights = 0x120; // bool
		constexpr auto bShadowCastingLights = 0x121; // bool
	}

	namespace n_UFoliageType_InstancedStaticMesh { // : UFoliageType
		constexpr auto Mesh = 0x378; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x380; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x390; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_USnowmanAttackableComponent { // : UAttackableComponent
		constexpr auto _killerProjectilesThatCanDamageSnowman = 0xd0; // FGameplayTagContainer
	}

	namespace n_UBalancedLanding { // : UPerk
		constexpr auto _sprintDuration = 0x3d4; // float
		constexpr auto _exhaustionDurationPerLevel = 0x3d8; // float [0x3]
		constexpr auto _exhaustedEffect = 0x3e8; // UActivatableExhaustedEffect*
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x230; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x238; // char : 1
	}

	namespace n_UAISkill { // : UObject
		constexpr auto RunContexts = 0x30; // FGameplayTagContainer
		constexpr auto StopIfPausedByNavLinkProxy = 0x50; // bool
		constexpr auto RunTimeLimit = 0x54; // float
		constexpr auto RunCooldownTime = 0x58; // float
		constexpr auto RunCooldownTimeDeviation = 0x5c; // float
		constexpr auto SkillNavigationFilterClass = 0x60; // UNavigationQueryFilter*
		constexpr auto SkillSenseConfigs = 0x68; // TArray<UAISenseConfig*>
		constexpr auto DynamicSubtree = 0x78; // UBehaviorTree*
		constexpr auto _pausedByObjects = 0x98; // TArray<UObject*>
		constexpr auto _aiControllerOwner = 0xb8; // ADBDAIBTController*
	}

	namespace n_UCoreBaseLoadoutPartWidget { // : UUserWidget
		constexpr auto ImageRarity = 0x260; // UDBDImage*
		constexpr auto ImageIcon = 0x268; // UDBDImage*
		constexpr auto TextStackCount = 0x270; // UTextBlock*
	}

	namespace n_UUMGBaseTabButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto TabText = 0x448; // URichTextBlock*
		constexpr auto NotificationCountText = 0x450; // UTextBlock*
		constexpr auto NotificationPanel = 0x458; // UCanvasPanel*
		constexpr auto TabButtonSelected = 0x460; // UImage*
		constexpr auto tabIndex = 0x468; // char
		constexpr auto TitleOfTab = 0x470; // FText
		constexpr auto _tabTextParameter = 0x490; // FString
	}

	namespace n_UBTTask_SetMovementMode { // : UBTTaskNode
		constexpr auto MovementMode = 0x78; // ECharacterMovementTypes
	}

	namespace n_UMovieSceneEasingExternalCurve { // : UObject
		constexpr auto Curve = 0x38; // UCurveFloat*
	}

	namespace n_UEventObjectComponent { // : UActorComponent
		constexpr auto _eventId = 0xb8; // FName
	}

	namespace n_UConvertToPolygonsToolProperties { // : UInteractiveToolPropertySet
		constexpr auto ConversionMode = 0x58; // EConvertToPolygonsMode
		constexpr auto AngleTolerance = 0x5c; // float
		constexpr auto bCalculateNormals = 0x60; // bool
		constexpr auto bShowGroupColors = 0x61; // bool
	}

	namespace n_UBaseModifierCondition { // : UActorComponent
		constexpr auto _owningModifier = 0xb8; // UBaseModifierContainer*
		constexpr auto _subjectProvider = 0xc0; // UModifierSubjectProvider*
		constexpr auto _subjectProviderClass = 0xc8; // UObject*
	}

	namespace n_UAudioImpulseResponse { // : UObject
		constexpr auto ImpulseResponse = 0x30; // TArray<float>
		constexpr auto NumChannels = 0x40; // int32_t
		constexpr auto SampleRate = 0x44; // int32_t
		constexpr auto NormalizationVolumeDb = 0x48; // float
		constexpr auto IRData = 0x50; // TArray<float>
	}

	namespace n_UAISkill_Interaction_ForThePeople { // : UAISkill_Interaction
		constexpr auto BlockInteractionId = 0x178; // FString
	}

	namespace n_AMovementModifierActor { // : AActor
		constexpr auto MaxSpeedMultiplier = 0x230; // float
	}

	namespace n_UBlightedSerumCooldownInteraction { // : UInteractionDefinition
		constexpr auto _cooldownTime = 0x5b0; // float
		constexpr auto _cameraPitchRecenterTime = 0x5b4; // float
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
	}

	namespace n_UInteractionDefinition { // : USceneComponent
		constexpr auto InteractionID = 0x250; // FString
		constexpr auto SnapTime = 0x260; // float
		constexpr auto ResetCameraDuringSnap = 0x264; // bool
		constexpr auto IsInteractionCancelled = 0x265; // bool
		constexpr auto AllowStartInteractionFromHeldInput = 0x266; // bool
		constexpr auto AtlantaOverridePowerButtonImage = 0x267; // bool
		constexpr auto AtlantaInteractionID = 0x268; // FName
		constexpr auto AtlantaOverrideItemUseToggleState = 0x274; // bool
		constexpr auto OverrideStopInteractionOnInputRelease = 0x275; // bool
		constexpr auto StopInteractionOnMontageComplete = 0x276; // bool
		constexpr auto StopInteractionOnMontageBlendingOut = 0x277; // bool
		constexpr auto StopInteractionOnTimerExpire = 0x278; // bool
		constexpr auto StopInteractionOnHeightDelta = 0x279; // bool
		constexpr auto StopEnterMontageOnExit = 0x27a; // bool
		constexpr auto StopUpdateMontageOnExit = 0x27b; // bool
		constexpr auto IgnoreStrafeAnimFix = 0x27c; // bool
		constexpr auto InteractionAnimation = 0x27d; // EInteractionAnimation
		constexpr auto CamperCanInteract = 0x27e; // bool
		constexpr auto SlasherCanInteract = 0x27f; // bool
		constexpr auto AllowInputPersistence = 0x280; // bool
		constexpr auto snapPosition = 0x281; // bool
		constexpr auto snapRotation = 0x282; // bool
		constexpr auto SnapStopDistance = 0x284; // float
		constexpr auto TestClearPathDuringSnap = 0x288; // bool
		constexpr auto CheckInteractableIsInPlayerView = 0x289; // bool
		constexpr auto CheckInteractableInViewSphereSweepRadius = 0x28c; // float
		constexpr auto CheckInteractableInViewOffset = 0x290; // FVector
		constexpr auto CheckInteractableInViewOffsetDistanceToHitPoint = 0x29c; // float
		constexpr auto IsInterruptibleIfTestClearPathDuringSnapFails = 0x2a0; // bool
		constexpr auto TestPlayerOrientationOnSnap = 0x2a1; // bool
		constexpr auto ScaleEnterAnimationToTime = 0x2a2; // bool
		constexpr auto ScaleMainAnimationToTime = 0x2a3; // bool
		constexpr auto ScaleExitAnimationToTime = 0x2a4; // bool
		constexpr auto SnapBackType = 0x2a5; // ESnapBackType
		constexpr auto SnapBackPositionType = 0x2a6; // ESnapBackPositionType
		constexpr auto SnapBackPositionOffset = 0x2a8; // FVector2D
		constexpr auto SnapToInitialRotationDuringSnapBack = 0x2b0; // bool
		constexpr auto UseStartSnapTimeForSnapExitTime = 0x2b1; // bool
		constexpr auto CanInteractWhileIncapacitated = 0x2b2; // bool
		constexpr auto CanInteractWhileCloaked = 0x2b3; // bool
		constexpr auto CanInteractWhileAttacking = 0x2b4; // bool
		constexpr auto CanInteractWhileChainLinked = 0x2b5; // bool
		constexpr auto CanInteractWhileShocked = 0x2b6; // bool
		constexpr auto CanInteractWhileUnhookingSelf = 0x2b7; // bool
		constexpr auto CanInteractWhileCarrying = 0x2b8; // bool
		constexpr auto AllowNavigation = 0x2b9; // bool
		constexpr auto AllowNavigationInput = 0x2ba; // bool
		constexpr auto AllowRotation = 0x2bb; // bool
		constexpr auto UseCameraMontageMode = 0x2bc; // bool
		constexpr auto OwnerBlocksAttack = 0x2bd; // bool
		constexpr auto IsHighPriority = 0x2be; // bool
		constexpr auto AllowOverridingWhenNotForced = 0x2bf; // bool
		constexpr auto IgnoreOverlapOnInteractable = 0x2c0; // bool
		constexpr auto UseAuthoritativeMovement = 0x2c1; // bool
		constexpr auto CanBeAuthoritativePushedDuringEnter = 0x2c2; // bool
		constexpr auto CanBeAuthoritativePushedDuringUpdate = 0x2c3; // bool
		constexpr auto CanBeAuthoritativePushedDuringExit = 0x2c4; // bool
		constexpr auto CanAuthoritativePush = 0x2c5; // bool
		constexpr auto CancelOnHit = 0x2c6; // bool
		constexpr auto CancelOnAttack = 0x2c7; // bool
		constexpr auto HideItem = 0x2c8; // bool
		constexpr auto AutoBindToParentInteractor = 0x2c9; // bool
		constexpr auto AutoBindToParentZone = 0x2ca; // bool
		constexpr auto CancelOnMoveInitialDelay = 0x2cc; // float
		constexpr auto CancelOnMoveInput = 0x2d0; // float
		constexpr auto CancelOnMoveInputOnlyWhenRunning = 0x2d4; // bool
		constexpr auto ProgressBasedSkillChecks = 0x2d8; // TArray<float>
		constexpr auto CanCrouch = 0x2e8; // bool
		constexpr auto AffectsStillness = 0x2e9; // bool
		constexpr auto ConsideredIdle = 0x2ea; // bool
		constexpr auto BlockSelfInteract = 0x2eb; // bool
		constexpr auto InteractionTime = 0x2ec; // float
		constexpr auto ShowHighlightWhenActive = 0x2f0; // bool
		constexpr auto AtlantaAlwaysHighPriority = 0x2f1; // bool
		constexpr auto ShowHighlightWhenAvailable = 0x2f2; // bool
		constexpr auto ProgressBarToUpdate = 0x2f3; // EPowerProgressBar
		constexpr auto UpdateHighlightOpacityUsingCharge = 0x2f4; // bool
		constexpr auto interactionInputType = 0x2f5; // EInputInteractionType
		constexpr auto StopInteractionOnInputRelease = 0x2f6; // bool
		constexpr auto _interruptionDefinitions = 0x2f8; // TArray<UInterruptionDefinition*>
		constexpr auto OnInteractionAnimNotify = 0x350; // FMulticastInlineDelegate
		constexpr auto DebugUnavailability = 0x360; // bool
		constexpr auto SecondaryActionInputType = 0x361; // EInputInteractionType
		constexpr auto AtlantaSecondaryActionInputType = 0x362; // EInputInteractionType
		constexpr auto NavigationSpeedCurveEnter = 0x380; // UCurveFloat*
		constexpr auto NavigationSpeedCurve = 0x388; // UCurveFloat*
		constexpr auto NavigationSpeedCurveExit = 0x390; // UCurveFloat*
		constexpr auto InteractionAtlantaInputType = 0x398; // EInputInteractionType
		constexpr auto AtlantaStopInteractionOnInputRelease = 0x399; // bool
		constexpr auto _shouldCheckInteractedUpon = 0x39a; // bool
		constexpr auto OwnershipUsability = 0x39b; // EInteractionOwnership
		constexpr auto ExitInteractionTime = 0x39c; // float
		constexpr auto ApplyModifiersToExitTime = 0x3a0; // bool
		constexpr auto InteractionDescriptionText = 0x3a8; // FText
		constexpr auto InteractionCanBeToggled = 0x3c0; // bool
		constexpr auto IgnoreSprintToCancelSetting = 0x3c1; // bool
		constexpr auto ForceWithSprintToCancelSetting = 0x3c2; // bool
		constexpr auto AtlantaLastButtonPressed = 0x3c3; // EButtonType
		constexpr auto InteractionHeightDeltaMax = 0x3c4; // float
		constexpr auto MaximumVelocity = 0x3c8; // float
		constexpr auto EnterMontage = 0x3d0; // FAnimationMontageDescriptor
		constexpr auto UpdateMontage = 0x3f0; // FAnimationMontageDescriptor
		constexpr auto ExitMontage = 0x410; // FAnimationMontageDescriptor
		constexpr auto SnapSocketName = 0x430; // FName
		constexpr auto _canBeAttachedToAnyZone = 0x43c; // bool
		constexpr auto CancelButtonType = 0x43d; // EButtonType
		constexpr auto SecondaryActionButtonType = 0x43e; // EButtonType
		constexpr auto SecondaryAttackButtonType = 0x43f; // EButtonType
		constexpr auto _isInterruptibleBySacrifice = 0x440; // bool
		constexpr auto IgnoreStun = 0x441; // bool
		constexpr auto _tags = 0x448; // FGameplayTagContainer
		constexpr auto _objectStateTag = 0x468; // FGameplayTag
		constexpr auto _secondaryInteractions = 0x478; // TMap<FName, FSecondaryInteractionProperties>
		constexpr auto _useHoldPrompt = 0x4c8; // bool
		constexpr auto _allowInteractionInNarrowSpaces = 0x4c9; // bool
		constexpr auto _allowIKSensorDuringInteraction = 0x4ca; // bool
		constexpr auto _startUpdateMontageDuringEnter = 0x4cb; // bool
		constexpr auto _interactor = 0x4d0; // UInteractor*
		constexpr auto _mutuallyExclusiveInteractionsClient = 0x4d8; // TArray<UInteractionDefinition*>
		constexpr auto _activationDefinition = 0x4e8; // FActivationDefinition
		constexpr auto _zone = 0x510; // UPrimitiveComponent*
		constexpr auto _cancelInputType = 0x518; // EInputInteractionType
		constexpr auto _preventingTags = 0x520; // FGameplayTagContainer
		constexpr auto _disablingTags = 0x540; // FGameplayTagContainer
		constexpr auto _evaluatingInteractionHandlers = 0x560; // TArray<UPlayerInteractionHandler*>
		constexpr auto DEPRECATED_SecondaryInteractionProperties = 0x570; // FSecondaryInteractionProperties
	}

	namespace n_UHitValidatorComponent { // : UActorComponent
		constexpr auto _maximumSquareDistance = 0xd4; // float
		constexpr auto _hitValidationConfigComponent = 0xe0; // TWeakObjectPtr<UHitValidationConfigsComponent>
	}

	namespace n_UAkGameObject { // : USceneComponent
		constexpr auto AkAudioEvent = 0x210; // UAkAudioEvent*
		constexpr auto EventName = 0x218; // FString
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0x58; // FName
		constexpr auto ExpressionGUID = 0x64; // FGuid
		constexpr auto Group = 0x74; // FName
	}

	namespace n_UGizmoComponentAxisSource { // : UObject
		constexpr auto Component = 0x38; // USceneComponent*
		constexpr auto AxisIndex = 0x40; // int32_t
		constexpr auto bLocalAxes = 0x44; // bool
	}

	namespace n_URecentlyActiveStateTagEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _stateTag = 0x4c; // FGameplayTag
	}

	namespace n_UAgonyComponent { // : UActorComponent
		constexpr auto _isInAgony = 0xc8; // FTagStateBool
		constexpr auto _isAgonyMoriable = 0xf8; // FTagStateBool
		constexpr auto _agonyNumberOfHookForMiniMori = 0x128; // FDBDTunableRowHandle
		constexpr auto _inAttackTrailDamageCooldown = 0x188; // bool
		constexpr auto _attackTrailDamageCooldownTime = 0x190; // FDBDTunableRowHandle
		constexpr auto _showAgonyFXEvents = 0x1d0; // TArray<FAgonyDisplayFxEvent>
		constexpr auto _hideAgonyFXEvents = 0x1e0; // TArray<FAgonyDisplayFxEvent>
	}

	namespace n_UTileSpawnPoint { // : USceneComponent
		constexpr auto TileSpawnPointType = 0x220; // ETileSpawnPointType
		constexpr auto Weight = 0x224; // float
		constexpr auto Visualization = 0x228; // TSoftClassPtr<UObject>
		constexpr auto _spawnedObject = 0x260; // AActor*
		constexpr auto ObjectSpawnModifier = 0x268; // TArray<AActor*>
		constexpr auto _spawnPriorityTier = 0x278; // int32_t
		constexpr auto _weightInfluenceable = 0x27c; // bool
		constexpr auto _weightInfluencer = 0x27d; // bool
		constexpr auto _activated = 0x27e; // bool
	}

	namespace n_UVOIPTalker { // : UActorComponent
		constexpr auto Settings = 0xb8; // FVoiceSettings
	}

	namespace n_UMaterialExpressionRound { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UListView { // : UListViewBase
		constexpr auto Orientation = 0x2f8; // EOrientation
		constexpr auto SelectionMode = 0x2f9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2fa; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2fb; // bool
		constexpr auto bIsFocusable = 0x2fc; // bool
		constexpr auto EntrySpacing = 0x300; // float
		constexpr auto bReturnFocusToSelection = 0x304; // bool
		constexpr auto ListItems = 0x308; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x358; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x368; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x378; // FMulticastInlineDelegate
	}

	namespace n_UUniformGridPanel { // : UPanelWidget
		constexpr auto SlotPadding = 0x140; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x150; // float
		constexpr auto MinDesiredSlotHeight = 0x154; // float
	}

	namespace n_UMovieSceneEnumSection { // : UMovieSceneSection
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_URootMovie { // : UObject
		constexpr auto SwfAssetName = 0x30; // FString
		constexpr auto SwfMoviePlayer = 0x40; // UGFxMoviePlayer*
		constexpr auto m_ScreenController = 0x58; // UScreenController*
		constexpr auto m_UIController = 0x60; // UUIController*
		constexpr auto m_GameInstance = 0x68; // UGameInstance*
		constexpr auto _inputManager = 0x70; // UDBDInputManager*
	}

	namespace n_UBTTask_FinishWithResult { // : UBTTaskNode
		constexpr auto Result = 0x78; // EBTNodeResult
	}

	namespace n_UObjectPlacerComponent { // : USceneComponent
		constexpr auto _objectMesh = 0x210; // UStaticMeshComponent*
		constexpr auto _socketName = 0x218; // FName
		constexpr auto _indicatorOffsetY = 0x224; // float
		constexpr auto _indicatorOffsetX = 0x228; // float
		constexpr auto _itemObjectId = 0x22c; // FName
		constexpr auto _showIndicator = 0x238; // bool
		constexpr auto _stayActiveWhileItemInUse = 0x239; // bool
		constexpr auto _hideIndicatorDuringAttack = 0x23a; // bool
		constexpr auto _objectPlacementUpdateStrategy = 0x248; // UObjectPlacementUpdateStrategy*
		constexpr auto _objectPlacementValidationStrategy = 0x250; // UObjectPlacementValidationStrategy*
	}

	namespace n_UDeformMeshPolygonsTransformProperties { // : UInteractiveToolPropertySet
		constexpr auto DeformationStrategy = 0x58; // EGroupTopologyDeformationStrategy
		constexpr auto TransformMode = 0x59; // EQuickTransformerMode
		constexpr auto bSelectFaces = 0x5a; // bool
		constexpr auto bSelectEdges = 0x5b; // bool
		constexpr auto bSelectVertices = 0x5c; // bool
		constexpr auto bShowWireframe = 0x5d; // bool
		constexpr auto bSnapToWorldGrid = 0x5e; // bool
		constexpr auto SelectedWeightScheme = 0x60; // EWeightScheme
		constexpr auto HandleWeight = 0x68; // double
		constexpr auto bPostFixHandles = 0x70; // bool
	}

	namespace n_UHasPlayerReachedWiggleFillPercentCondition { // : UEventDrivenModifierCondition
		constexpr auto _isWigglePercentReached = 0xec; // bool
	}

	namespace n_AEffectsLocator { // : AActor
		constexpr auto AffectedActors = 0x230; // TArray<FEffectsLocatorTargets>
		constexpr auto ActorCaptureRadius = 0x240; // float
	}

	namespace n_UAkAssetBase { // : UAkAudioType
		constexpr auto PlatformAssetData = 0x48; // UAkAssetPlatformData*
	}

	namespace n_UAISkill_InteractionTeleportEthereal_Nightmare { // : UAISkill_InteractionTeleportEthereal
		constexpr auto TeleportIfPathLengthSavedAboveRange = 0x1d8; // float
		constexpr auto _toGenerator = 0x1e0; // AGenerator*
	}

	namespace n_UUVProjectionOperatorFactory { // : UObject
		constexpr auto Tool = 0x38; // UUVProjectionTool*
	}

	namespace n_UTemplateSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x350; // UMovieScene*
		constexpr auto BoundActorClass = 0x358; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x388; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0x3b8; // TMap<FGuid, FName>
	}

	namespace n_UPanelScreenUMG { // : UPanelScreen
		constexpr auto _atlantaPanelScreen = 0x320; // UUMGSwitcherScreen*
	}

	namespace n_UUMGGhostfaceSpecific { // : UMobileBaseUserWidget
		constexpr auto LeftLeanImage = 0x300; // UImage*
		constexpr auto RightLeanImage = 0x308; // UImage*
	}

	namespace n_UBakeTransformToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bBakeRotation = 0x58; // bool
		constexpr auto BakeScale = 0x59; // EBakeScaleMethod
		constexpr auto bRecenterPivot = 0x5a; // bool
	}

	namespace n_UUMGTeachablePerkButton { // : UMobileBaseUserWidget
		constexpr auto TeachablePerkButton = 0x300; // UPerkActionButton*
		constexpr auto LockedStatusIcon = 0x308; // UImage*
		constexpr auto _teachableData = 0x310; // FTeachableData
		constexpr auto _onTeachablePerkTooltipLongPressEvent = 0x420; // FMulticastInlineDelegate
	}

	namespace n_UBufferLastValidLocationObjectPlacementStrategy { // : UObjectPlacementUpdateStrategy
		constexpr auto _maxDistanceToOwner = 0x50; // float
	}

	namespace n_UBTDecorator_DoesPathExist { // : UBTDecorator
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0xa0; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xd0; // char : 1
		constexpr auto PathQueryType = 0xd4; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xd8; // UNavigationQueryFilter*
	}

	namespace n_UDestroyDemogorgonPortalInteraction { // : UChargeableInteractionDefinition
		constexpr auto _owningPortal = 0x6d8; // ADemogorgonPortal*
	}

	namespace n_UHinderOnIdleAndAttachStatusEffect { // : ULingeringStateTagStatusEffect
		constexpr auto _onCrowAttachStateTag = 0x390; // FGameplayTag
	}

	namespace n_UMeshInspectorTool { // : USingleSelectionTool
		constexpr auto Settings = 0x90; // UMeshInspectorProperties*
		constexpr auto MaterialSettings = 0x98; // UExistingMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa8; // UPreviewMesh*
		constexpr auto DefaultMaterial = 0xb0; // UMaterialInterface*
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0xc8; // int32_t
		constexpr auto ClearColor = 0xcc; // FLinearColor
		constexpr auto OverrideFormat = 0xdc; // EPixelFormat
		constexpr auto bHDR = 0xdd; // char : 1
		constexpr auto bForceLinearGamma = 0xdd; // char : 1
	}

	namespace n_UNavigationPath { // : UObject
		constexpr auto PathUpdatedNotifier = 0x30; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x40; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x50; // ENavigationOptionFlag
	}

	namespace n_AAtlantaOfflineLobbyCamera { // : ACameraActor
		constexpr auto ZCameraPositionOffsetMultiplier = 0x7a0; // float
		constexpr auto _kDefaultAspectRatio = 0x7a8; // float
	}

	namespace n_UDatasmithStaticMeshGLTFImportData { // : UDatasmithStaticMeshImportData
		constexpr auto SourceMeshName = 0x30; // FString
	}

	namespace n_UDBDEmblem_KillerDevout { // : UDBDEmblem
		constexpr auto _playersToHook = 0x128; // TArray<ACamperPlayer*>
	}

	namespace n_ABP_Menu_Slasher08_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_08 = 0x698; // UBP_Audio_KLR_08_C*
		constexpr auto ItemMesh_Axe = 0x6a0; // USkeletalMeshComponent*
		constexpr auto Timeline_1_Dissolve_01C466A74EFEFADB8976FC84BC95D44F = 0x6a8; // float
		constexpr auto Timeline_1__Direction_01C466A74EFEFADB8976FC84BC95D44F = 0x6ac; // ETimelineDirection
		constexpr auto Timeline_2 = 0x6b0; // UTimelineComponent*
		constexpr auto IsHatchetVisible = 0x6b8; // bool
	}

	namespace n_ULuminApplicationLifecycleComponent { // : UApplicationLifecycleComponent
		constexpr auto DeviceHasReactivatedDelegate = 0x148; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x158; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x168; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x178; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x188; // FMulticastInlineDelegate
	}

	namespace n_AARSkyLight { // : ASkyLight
		constexpr auto CaptureProbe = 0x240; // UAREnvironmentCaptureProbe*
	}

	namespace n_UMobileBaseUserWidget { // : UUserWidget
		constexpr auto HighlightWidget = 0x270; // UWidget*
		constexpr auto _tutorialAnimationName = 0x278; // FName
		constexpr auto _tutorialNumberOfLoops = 0x284; // int32_t
	}

	namespace n_UNiagaraRendererProperties { // : UNiagaraMergeable
		constexpr auto SortOrderHint = 0x30; // int32_t
		constexpr auto bIsEnabled = 0x34; // bool
		constexpr auto bMotionBlurEnabled = 0x35; // bool
	}

	namespace n_UScaleBox { // : UContentWidget
		constexpr auto Stretch = 0x140; // EStretch
		constexpr auto StretchDirection = 0x141; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x144; // float
		constexpr auto IgnoreInheritedScale = 0x148; // bool
	}

	namespace n_UAICharacterHideInLockerBehaviour { // : UAICharacterBehaviour
		constexpr auto _aiPlayer = 0x58; // ADBDPlayer*
		constexpr auto _aiPlayerController = 0x60; // ADBDAIPlayerController*
		constexpr auto _characterHideInLockerData = 0x80; // UAICharacterHideInLockerBehaviourData*
	}

	namespace n_UControllerPairingManager { // : UObject
		constexpr auto _gameInstance = 0x30; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CapsuleComponent = 0x240; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x248; // FVector
		constexpr auto FoliageVelocity = 0x254; // FVector
		constexpr auto FoliageForce = 0x260; // FVector
		constexpr auto FoliagePosition = 0x26c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x278; // float
		constexpr auto FoliageTouchImpulseScale = 0x27c; // float
		constexpr auto FoliageStiffness = 0x280; // float
		constexpr auto FoliageStiffnessQuadratic = 0x284; // float
		constexpr auto FoliageDamping = 0x288; // float
		constexpr auto MaxDamageImpulse = 0x28c; // float
		constexpr auto MaxTouchImpulse = 0x290; // float
		constexpr auto MaxForce = 0x294; // float
		constexpr auto Mass = 0x298; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // FVector2D
		constexpr auto Max = 0x48; // FVector2D
	}

	namespace n_AMatineeActorCameraAnim { // : AMatineeActor
		constexpr auto CameraAnim = 0x2e0; // UCameraAnim*
	}

	namespace n_UCustomWidgetWrapper_InGame { // : UCustomWidgetWrapper
		constexpr auto VirtualJoystickIndex = 0x1a0; // int32_t
	}

	namespace n_UAtlantaRitualsScreen { // : UScreenBase
		constexpr auto _umgScreen = 0x120; // UUMGAtlantaRitualsScreen*
	}

	namespace n_UDisplaceMeshTool { // : USingleSelectionTool
		constexpr auto DisplacementType = 0x90; // EDisplaceMeshToolDisplaceType
		constexpr auto DisplaceIntensity = 0x94; // float
		constexpr auto RandomSeed = 0x98; // int32_t
		constexpr auto Subdivisions = 0x9c; // int32_t
		constexpr auto DisplacementMap = 0xa0; // UTexture2D*
		constexpr auto DisplaceFrequency = 0xa8; // float
		constexpr auto DisplacePhaseShift = 0xac; // float
	}

	namespace n_ULamentConfigurationSpawnStrategy { // : UActorComponent
		constexpr auto _killerPointDistanceMultiplier = 0xb8; // float
		constexpr auto _survivorPointDistanceMultiplier = 0xbc; // float
		constexpr auto _maxDistancePointAllowed = 0xc0; // float
		constexpr auto _minSurvivorDistance = 0xc4; // float
		constexpr auto _minSurvivorDistancePointPenalty = 0xc8; // float
		constexpr auto _minKillerDistance = 0xcc; // float
		constexpr auto _minHatchDistance = 0xd0; // float
		constexpr auto _minKillerDistancePointPenalty = 0xd8; // float
		constexpr auto _pointPenaltyPerUsedLocationTime = 0xdc; // float
		constexpr auto _spawnPointsTypes = 0xe0; // TArray<ETileSpawnPointType>
		constexpr auto _downRaycastLength = 0xf0; // float
		constexpr auto _rayCastZOffet = 0xf4; // float
		constexpr auto _cached_spawnsInfo = 0xf8; // TArray<FLamentConfigurationSpawnInfo>
		constexpr auto _hatches = 0x108; // TArray<AHatch*>
	}

	namespace n_UPowerStruggle { // : UPerk
		constexpr auto _wigglePercentToActivatePerk = 0x3d0; // float [0x3]
	}

	namespace n_UScrollBarWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ScrollBarStyle = 0x38; // FScrollBarStyle
	}

	namespace n_UMaterialExpressionSaturate { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UEventCountComparisonQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _incrementCountEvents = 0x90; // TArray<FGameplayTag>
		constexpr auto _resetCountEvents = 0xa0; // TArray<FGameplayTag>
		constexpr auto _comparisonOperator = 0xb0; // EventCountComparisonOperator
	}

	namespace n_UAISenseEvent_Hearing { // : UAISenseEvent
		constexpr auto Event = 0x30; // FAINoiseEvent
	}

	namespace n_UAssetExportTask { // : UObject
		constexpr auto Object = 0x30; // UObject*
		constexpr auto Exporter = 0x38; // UExporter*
		constexpr auto Filename = 0x40; // FString
		constexpr auto bSelected = 0x50; // bool
		constexpr auto bReplaceIdentical = 0x51; // bool
		constexpr auto bPrompt = 0x52; // bool
		constexpr auto bAutomated = 0x53; // bool
		constexpr auto bUseFileArchive = 0x54; // bool
		constexpr auto bWriteEmptyFiles = 0x55; // bool
		constexpr auto IgnoreObjectList = 0x58; // TArray<UObject*>
		constexpr auto Options = 0x68; // UObject*
		constexpr auto Errors = 0x70; // TArray<FString>
	}

	namespace n_UPlatformGameInstance { // : UGameInstance
		constexpr auto ApplicationWillDeactivateDelegate = 0x1f0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x200; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x210; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x220; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x230; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x240; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x250; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x270; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x280; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x290; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x2a0; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x2b0; // FMulticastInlineDelegate
	}

	namespace n_UCoreKeyListenerButtontWidget { // : UCoreButtonWidget
		constexpr auto InputNameTB = 0x398; // UDBDTextBlock*
	}

	namespace n_USoundSubmixBase { // : UObject
		constexpr auto ChildSubmixes = 0x30; // TArray<USoundSubmixBase*>
	}

	namespace n_UInterpTrackInstAkAudioRTPC { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x30; // float
	}

	namespace n_UDynamicMeshSculptTool { // : UMeshSurfacePointTool
		constexpr auto BrushProperties = 0xc8; // USculptBrushProperties*
		constexpr auto SculptProperties = 0xd0; // UBrushSculptProperties*
		constexpr auto PlaneBrushProperties = 0xd8; // UPlaneBrushProperties*
		constexpr auto SculptMaxBrushProperties = 0xe0; // USculptMaxBrushProperties*
		constexpr auto RemeshProperties = 0xe8; // UBrushRemeshProperties*
		constexpr auto GizmoProperties = 0xf0; // UFixedPlaneBrushProperties*
		constexpr auto ViewProperties = 0xf8; // UMeshEditingViewProperties*
		constexpr auto BrushIndicator = 0x140; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x148; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x150; // UPreviewMesh*
		constexpr auto DynamicMeshComponent = 0x158; // UOctreeDynamicMeshComponent*
		constexpr auto ActiveOverrideMaterial = 0x160; // UMaterialInstanceDynamic*
		constexpr auto PlaneTransformGizmo = 0xca8; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xcb0; // UTransformProxy*
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x30; // UModel*
		constexpr auto Surfaces = 0x38; // TArray<int32_t>
	}

	namespace n_USceneCaptureComponentCube { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0x2a8; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2b0; // bool
		constexpr auto TextureTargetLeft = 0x2b8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2c0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2c8; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2d0; // float
	}

	namespace n_UBrushBaseProperties { // : UInteractiveToolPropertySet
		constexpr auto BrushSize = 0x58; // float
		constexpr auto bSpecifyRadius = 0x5c; // bool
		constexpr auto BrushRadius = 0x60; // float
		constexpr auto BrushStrength = 0x64; // float
		constexpr auto BrushFalloffAmount = 0x68; // float
		constexpr auto bShowStrength = 0x6c; // bool
		constexpr auto bShowFalloff = 0x6d; // bool
	}

	namespace n_UMovieScene3DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe8; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf0; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d0; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b0; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x690; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x734; // bool
	}

	namespace n_UTwinJumpTargetVisibleEffect { // : UStatusEffect
		constexpr auto _twinJumpTargetObject = 0x350; // AActor*
		constexpr auto _twinJumpTarget = 0x358; // AActor*
		constexpr auto _jumpTargetVisibility = 0x360; // USelectiveVisibilityComponent*
	}

	namespace n_UResurgence { // : UPerk
		constexpr auto _healRegainPercentage = 0x3d0; // float [0x3]
	}

	namespace n_UUMGAtlantaMatchConfigTab { // : UUMGBaseButtonWidget
		constexpr auto IconSizeBox = 0x430; // USizeBox*
		constexpr auto TabName = 0x438; // UTextBlock*
		constexpr auto RandomPanel = 0x440; // UCanvasPanel*
	}

	namespace n_ABP_Menu_BaseSlasher_C { // : ADBDMenuPlayer
		constexpr auto UberGraphFrame = 0x620; // FPointerToUberGraphFrame
		constexpr auto RightFootGroundDetector = 0x628; // UBP_KillerRightFootGroundDetector_C*
		constexpr auto LeftFootGroundDetector = 0x630; // UBP_KillerLeftFootGroundDetector_C*
		constexpr auto CustomizedAudio = 0x638; // UCustomizedAudioComponent*
		constexpr auto CustomizedSkeletalMesh = 0x640; // UCustomizedSkeletalMesh*
		constexpr auto Ak_Audio_Menu_Base_Slasher = 0x648; // UAkComponent*
		constexpr auto TML_DissolveSlasher_Dissolve_6A8353EF46DC9749463CE0935534B1A4 = 0x650; // float
		constexpr auto TML_DissolveSlasher__Direction_6A8353EF46DC9749463CE0935534B1A4 = 0x654; // ETimelineDirection
		constexpr auto TML_DissolveSlasher = 0x658; // UTimelineComponent*
		constexpr auto IsInMenu = 0x660; // bool
		constexpr auto RequiredSoundBanks = 0x668; // TArray<TSoftObjectPtr<UAkAudioBank>>
		constexpr auto AssignedSoundBanks = 0x678; // TArray<UObject*>
		constexpr auto SlasherHeight = 0x688; // float
	}

	namespace n_UAISkill_SkillCheck { // : UAISkill
		constexpr auto RegularZoneRoll = 0xc0; // FAIRoll
		constexpr auto BonusZoneRoll = 0xe4; // FAIRoll
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask { // : UMaterialExpression
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UEnvQueryGenerator_CurrentLocation { // : UEnvQueryGenerator
		constexpr auto QueryContext = 0x58; // UEnvQueryContext*
	}

	namespace n_ULevelSequenceBurnInOptions { // : UObject
		constexpr auto bUseBurnIn = 0x30; // bool
		constexpr auto BurnInClass = 0x38; // FSoftClassPath
		constexpr auto Settings = 0x58; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x30; // FString
		constexpr auto ResponseCode = 0x40; // int32_t
		constexpr auto Tag = 0x44; // int32_t
		constexpr auto StringResponse = 0x48; // FString
		constexpr auto BinaryResponse = 0x58; // TArray<char>
	}

	namespace n_UInteractiveToolPropertySet { // : UObject
		constexpr auto CachedProperties = 0x48; // UObject*
		constexpr auto bIsPropertySetEnabled = 0x50; // bool
	}

	namespace n_UBodySetup { // : UObject
		constexpr auto AggGeom = 0x30; // FKAggregateGeom
		constexpr auto BoneName = 0x88; // FName
		constexpr auto PhysicsType = 0x94; // EPhysicsType
		constexpr auto bAlwaysFullAnimWeight = 0x95; // char : 1
		constexpr auto bConsiderForBounds = 0x95; // char : 1
		constexpr auto bMeshCollideAll = 0x95; // char : 1
		constexpr auto bDoubleSidedGeometry = 0x95; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0x95; // char : 1
		constexpr auto bSharedCookedData = 0x95; // char : 1
		constexpr auto bGenerateMirroredCollision = 0x95; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0x95; // char : 1
		constexpr auto CollisionReponse = 0x97; // EBodyCollisionResponse
		constexpr auto CollisionTraceFlag = 0x98; // ECollisionTraceFlag
		constexpr auto PhysMaterial = 0xa0; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xa8; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x130; // FBodyInstance
		constexpr auto BuildScale3D = 0x250; // FVector
	}

	namespace n_URejoinCheck { // : UObject
		constexpr auto LastKnownStatus = 0x30; // ERejoinStatus
		constexpr auto bRejoinAfterCheck = 0x31; // bool
		constexpr auto bAttemptingRejoin = 0x32; // bool
	}

	namespace n_UDrawPolygonTool { // : UInteractiveTool
		constexpr auto PolygonProperties = 0x90; // UDrawPolygonToolStandardProperties*
		constexpr auto SnapProperties = 0x98; // UDrawPolygonToolSnapProperties*
		constexpr auto MaterialProperties = 0xa0; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0x160; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x168; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x170; // UTransformProxy*
		constexpr auto HeightMechanic = 0x580; // UPlaneDistanceFromHitMechanic*
	}

	namespace n_UPerkActionButton { // : UUMGLoadoutItemButton
		constexpr auto TextUnlockLevelTitle = 0x610; // UTextBlock*
		constexpr auto Activatable = 0x618; // bool
		constexpr auto SelectedImageVisibility = 0x619; // ESlateVisibility
		constexpr auto ClickableButtonVisibility = 0x61a; // ESlateVisibility
		constexpr auto ClickableImageVisibility = 0x61b; // ESlateVisibility
		constexpr auto ProgressbarVisibility = 0x61c; // ESlateVisibility
		constexpr auto IdleTime = 0x620; // float
	}

	namespace n_ACurrencyDisplayable { // : AActor
		constexpr auto SkeletalMeshComponent = 0x238; // USkeletalMeshComponent*
		constexpr auto _currencyMeshes = 0x240; // TMap<ECurrencyType, USkeletalMesh*>
	}

	namespace n_AReverseBearTrap { // : AInteractable
		constexpr auto _rbtMesh = 0x330; // USkeletalMeshComponent*
		constexpr auto _animMontageSlave = 0x338; // UAnimationMontageSlave*
		constexpr auto _keyID = 0x344; // int32_t
		constexpr auto _exitGatesPoweredAfterAttachment = 0x3d8; // bool
		constexpr auto _generatorFixedAfterAttachment = 0x3d9; // bool
	}

	namespace n_UBTService_SetFocusCooldown { // : UBTService_OnRelevantBase
		constexpr auto BBOnObject = 0x80; // FBlackboardKeySelector
		constexpr auto ContextName = 0xb0; // FName
		constexpr auto InfiniteDuration = 0xbc; // bool
		constexpr auto Duration = 0xc0; // float
	}

	namespace n_UTimelineComponent { // : UActorComponent
		constexpr auto TheTimeline = 0xb8; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x160; // char : 1
	}

	namespace n_UPlayMontageCallbackProxy { // : UObject
		constexpr auto OnCompleted = 0x30; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x40; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x50; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x60; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x70; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithCommonTessellationOptions { // : UDatasmithOptionsBase
		constexpr auto Options = 0x30; // FDatasmithTessellationOptions
	}

	namespace n_UFearMarketManager { // : UObject
		constexpr auto PendingPurchaseFearMarketItem = 0x30; // FFearMarketItemInstance
		constexpr auto _existingFearMarket = 0x90; // FFearMarketOfferingInstance
		constexpr auto _gameInstance = 0xb0; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UInteractionProficiency { // : UObject
		constexpr auto InteractionIds = 0x30; // TArray<FString>
	}

	namespace n_UAISkill_InteractionTeleportEthereal_Blink { // : UAISkill_InteractionTeleportEthereal
		constexpr auto StartBlinkAtWarpLocationRange = 0x1d8; // float
		constexpr auto ValidateBlinkWarpRange = 0x1dc; // float
		constexpr auto BlinkAboveSavedPathLength = 0x1e0; // float
		constexpr auto BlinkIfTargetWillBeInRange = 0x1e4; // float
	}

	namespace n_UDatasmithAssetUserData { // : UAssetUserData
		constexpr auto MetaData = 0x30; // TMap<FName, FString>
	}

	namespace n_UDBDBehaviorTreeComponent { // : UBehaviorTreeComponent
		constexpr auto _lastRelevantNodeMemories = 0x280; // TMap<UObject*, FRelevantNodeMemory>
		constexpr auto _createdObjects = 0x2d0; // TArray<UObject*>
	}

	namespace n_AGeometryCollectionRenderLevelSetActor { // : AActor
		constexpr auto TargetVolumeTexture = 0x230; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x238; // UMaterial*
		constexpr auto SurfaceTolerance = 0x240; // float
		constexpr auto Isovalue = 0x244; // float
		constexpr auto Enabled = 0x248; // bool
		constexpr auto RenderVolumeBoundingBox = 0x249; // bool
	}

	namespace n_UCanvas { // : UObject
		constexpr auto OrgX = 0x30; // float
		constexpr auto OrgY = 0x34; // float
		constexpr auto ClipX = 0x38; // float
		constexpr auto ClipY = 0x3c; // float
		constexpr auto DrawColor = 0x40; // FColor
		constexpr auto bCenterX = 0x44; // char : 1
		constexpr auto bCenterY = 0x44; // char : 1
		constexpr auto bNoSmooth = 0x44; // char : 1
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UMaterialExpressionTangentOutput { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_URitualHandlerComponent { // : UActorComponent
		constexpr auto _evaluators = 0xc8; // TMap<FName, URitualEvaluatorBase*>
	}

	namespace n_UAkPS4InitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettings
		constexpr auto CommunicationSettings = 0x90; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xb8; // FAkPS4AdvancedInitializationSettings
	}

	namespace n_UNavArea { // : UNavAreaBase
		constexpr auto DefaultCost = 0x38; // float
		constexpr auto FixedAreaEnteringCost = 0x3c; // float
		constexpr auto DrawColor = 0x40; // FColor
		constexpr auto SupportedAgents = 0x44; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x48; // char : 1
		constexpr auto bSupportsAgent1 = 0x48; // char : 1
		constexpr auto bSupportsAgent2 = 0x48; // char : 1
		constexpr auto bSupportsAgent3 = 0x48; // char : 1
		constexpr auto bSupportsAgent4 = 0x48; // char : 1
		constexpr auto bSupportsAgent5 = 0x48; // char : 1
		constexpr auto bSupportsAgent6 = 0x48; // char : 1
		constexpr auto bSupportsAgent7 = 0x48; // char : 1
		constexpr auto bSupportsAgent8 = 0x49; // char : 1
		constexpr auto bSupportsAgent9 = 0x49; // char : 1
		constexpr auto bSupportsAgent10 = 0x49; // char : 1
		constexpr auto bSupportsAgent11 = 0x49; // char : 1
		constexpr auto bSupportsAgent12 = 0x49; // char : 1
		constexpr auto bSupportsAgent13 = 0x49; // char : 1
		constexpr auto bSupportsAgent14 = 0x49; // char : 1
		constexpr auto bSupportsAgent15 = 0x49; // char : 1
	}

	namespace n_UIsOriginatingPerkBoundToTotems { // : UEventDrivenModifierCondition
		constexpr auto _comparisonOperator = 0xe8; // EComparisonOperation
		constexpr auto _totemCount = 0xec; // int32_t
	}

	namespace n_UPointSetComponent { // : UMeshComponent
		constexpr auto PointMaterial = 0x478; // UMaterialInterface*
		constexpr auto Bounds = 0x480; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x49c; // bool
	}

	namespace n_UNiagaraSystem { // : UFXSystemAsset
		constexpr auto bDumpDebugSystemInfo = 0x39; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x3a; // bool
		constexpr auto bFixedBounds = 0x3c; // char : 1
		constexpr auto EffectType = 0x40; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x48; // bool
		constexpr auto ScalabilityOverrides = 0x50; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x60; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x70; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x80; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x90; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x98; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xb0; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x308; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x410; // FBox
		constexpr auto bAutoDeactivate = 0x42c; // bool
		constexpr auto WarmupTime = 0x430; // float
		constexpr auto WarmupTickCount = 0x434; // int32_t
		constexpr auto WarmupTickDelta = 0x438; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x43c; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x440; // TArray<FName>
	}

	namespace n_UTwinJumpAttackSuccessSubstate { // : UPounceAttackSuccessSubstate
		constexpr auto _jumpSucceedAttachedCooldownTime = 0x118; // FDBDTunableRowHandle
		constexpr auto _jumpSucceedNotAttachedCooldownTime = 0x140; // FDBDTunableRowHandle
	}

	namespace n_UBP_Audio_KLR_23_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
	}

	namespace n_AControlPointMeshActor { // : AActor
		constexpr auto ControlPointMeshComponent = 0x230; // UControlPointMeshComponent*
	}

	namespace n_UNetSynchedClock { // : UActorComponent
		constexpr auto _serverTimeUpdateDelay = 0xc0; // float
	}

	namespace n_UDBDAIGoalComponent { // : UActorComponent
		constexpr auto _activeGoals = 0xc0; // TMap<UObject*, FAIGoal>
		constexpr auto _foundWeightedGoals = 0x110; // TMap<UObject*, FAIGoalWeightContainer>
	}

	namespace n_UCompositeModifierCondition { // : UEventDrivenModifierCondition
		constexpr auto _conditions = 0xf0; // TArray<UEventDrivenModifierCondition*>
	}

	namespace n_ABP_DBDGame_Start_C { // : ADBDGame_Start
		constexpr auto DefaultSceneRoot = 0x400; // USceneComponent*
	}

	namespace n_APaperCharacter { // : ACharacter
		constexpr auto Sprite = 0x4d0; // UPaperFlipbookComponent*
	}

	namespace n_UIntSerialization { // : UObject
		constexpr auto UnsignedInt16Variable = 0x30; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x34; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x38; // uint64_t
		constexpr auto SignedInt8Variable = 0x40; // int8_t
		constexpr auto SignedInt16Variable = 0x42; // int16_t
		constexpr auto SignedInt64Variable = 0x48; // int64_t
		constexpr auto UnsignedInt8Variable = 0x50; // char
		constexpr auto SignedInt32Variable = 0x54; // int32_t
	}

	namespace n_UDatasmithSpotLightComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto InnerConeAngle = 0x38; // float
		constexpr auto OuterConeAngle = 0x3c; // float
	}

	namespace n_UClothLODDataCommon_Legacy { // : UObject
		constexpr auto PhysicalMeshData = 0x30; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x38; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x130; // FClothCollisionData
	}

	namespace n_AK25AnimationFollowerActor { // : AActor
		constexpr auto _skeletalMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto _montageFollower = 0x238; // UAnimationMontageSlave*
		constexpr auto _montagePlayer = 0x240; // UMontagePlayer*
	}

	namespace n_UAkItemBoolProperties { // : UWidget
		constexpr auto OnSelectionChanged = 0x128; // FMulticastInlineDelegate
		constexpr auto OnPropertyDragged = 0x138; // FMulticastInlineDelegate
	}

	namespace n_USubtitlesPresenter { // : UPresenter
		constexpr auto SubtitlesWidgetClass = 0xe0; // UUserWidget*
	}

	namespace n_UAISenseEvent_Terror { // : UAISenseEvent
		constexpr auto Event = 0x30; // FAITerrorEvent
	}

	namespace n_UPaperFlipbookComponent { // : UMeshComponent
		constexpr auto SourceFlipbook = 0x478; // UPaperFlipbook*
		constexpr auto Material = 0x480; // UMaterialInterface*
		constexpr auto PlayRate = 0x488; // float
		constexpr auto bLooping = 0x48c; // char : 1
		constexpr auto bReversePlayback = 0x48c; // char : 1
		constexpr auto bPlaying = 0x48c; // char : 1
		constexpr auto AccumulatedTime = 0x490; // float
		constexpr auto CachedFrameIndex = 0x494; // int32_t
		constexpr auto SpriteColor = 0x498; // FLinearColor
		constexpr auto CachedBodySetup = 0x4a8; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4b0; // FMulticastInlineDelegate
	}

	namespace n_ADBDBaseGameMode { // : AgameMode
		constexpr auto DebugSpecialEvent = 0x328; // FDataTableDropdown
	}

	namespace n_UPartyMember { // : UObject
		constexpr auto SocialUser = 0x70; // USocialUser*
	}

	namespace n_USteamNetConnection { // : UIpConnection
		constexpr auto bIsPassthrough = 0x1ae8; // bool
	}

	namespace n_UTemplatePresenter { // : UHudPresenter
		constexpr auto TemplateWidgetClass = 0x108; // UUserWidget*
	}

	namespace n_ADBDBaseMatchGameMode { // : ADBDBaseGameMode
		constexpr auto _endGameComponent = 0x358; // UEndGameComponent*
		constexpr auto _escapeRequirementTracker = 0x360; // UEscapeRequirementTracker*
		constexpr auto _theFence = 0x368; // ANetworkFenceActor*
	}

	namespace n_UImAllEars { // : UPerk
		constexpr auto _cooldownByLevel = 0x3d0; // int32_t [0x3]
		constexpr auto _durationByLevel = 0x3dc; // float [0x3]
		constexpr auto _useTerrorRadius = 0x3e8; // bool
		constexpr auto _triggerOutsideRadius = 0x3ec; // float
	}

	namespace n_UOfferingHandler { // : UObject
		constexpr auto _gameInstance = 0x30; // UDBDGameInstance*
		constexpr auto _levelPerkIDs = 0x38; // TArray<FName>
	}

	namespace n_AZombieEscapeDoorPointsActor { // : AActor
		constexpr auto _availablePoints = 0x230; // TArray<UArrowComponent*>
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto SubTracks = 0x40; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x50; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x58; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x60; // FString
		constexpr auto bOnePerGroup = 0x70; // char : 1
		constexpr auto bDirGroupOnly = 0x70; // char : 1
		constexpr auto bDisableTrack = 0x70; // char : 1
		constexpr auto bIsSelected = 0x70; // char : 1
		constexpr auto bIsAnimControlTrack = 0x70; // char : 1
		constexpr auto bSubTrackOnly = 0x70; // char : 1
		constexpr auto bVisible = 0x70; // char : 1
		constexpr auto bIsRecording = 0x70; // char : 1
	}

	namespace n_AGameNetworkManager { // : AInfo
		constexpr auto BadPacketLossThreshold = 0x230; // float
		constexpr auto SeverePacketLossThreshold = 0x234; // float
		constexpr auto BadPingThreshold = 0x238; // int32_t
		constexpr auto SeverePingThreshold = 0x23c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x240; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x244; // float
		constexpr auto TotalNetBandwidth = 0x248; // int32_t
		constexpr auto MinDynamicBandwidth = 0x24c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x250; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x254; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x254; // char : 1
		constexpr auto StandbyRxCheatTime = 0x258; // float
		constexpr auto StandbyTxCheatTime = 0x25c; // float
		constexpr auto PercentMissingForRxStandby = 0x260; // float
		constexpr auto PercentMissingForTxStandby = 0x264; // float
		constexpr auto PercentForBadPing = 0x268; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x26c; // float
		constexpr auto MoveRepSize = 0x270; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x274; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x278; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x27c; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x280; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x284; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x288; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x28c; // float
		constexpr auto MaxMoveDeltaTime = 0x290; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x294; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x298; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x29c; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x2a0; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x2a4; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x2a8; // int32_t
		constexpr auto ClientAuthorativePosition = 0x2ac; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x2b0; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x2b4; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x2b8; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x2bc; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x2bd; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x2c0; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x2c4; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x2c8; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x2cc; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x2d0; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x2d1; // bool
	}

	namespace n_UDebugCameraControllerSettings { // : UDeveloperSettings
		constexpr auto CycleViewModes = 0x48; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_UUMGDragWidget_HudEditor { // : UUMGDragWidget
		constexpr auto OnSelectionWidgetClass = 0x2a0; // UUserWidget*
		constexpr auto DragLinkWidgetClass = 0x2a8; // UUMGHudEditorDragConstraintWidget*
		constexpr auto _customWrapper = 0x2b0; // UCustomWidgetWrapper_HudEditor*
		constexpr auto _selectionWidget = 0x2b8; // UUserWidget*
		constexpr auto _dragLinkWidget = 0x2c0; // UUMGHudEditorDragConstraintWidget*
		constexpr auto _parentLinkWidget = 0x2c8; // UUMGDragWidget_HudEditor*
		constexpr auto _childLinkWidget = 0x2d0; // UUMGDragWidget_HudEditor*
	}

	namespace n_UParticleModuleLight_Seeded { // : UParticleModuleLight
		constexpr auto RandomSeedInfo = 0x128; // FParticleRandomSeedInfo
	}

	namespace n_USpinBox { // : UWidget
		constexpr auto value = 0x128; // float
		constexpr auto ValueDelegate = 0x12c; // FDelegate
		constexpr auto WidgetStyle = 0x140; // FSpinBoxStyle
		constexpr auto Style = 0x450; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x458; // int32_t
		constexpr auto MaxFractionalDigits = 0x45c; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x460; // bool
		constexpr auto Delta = 0x464; // float
		constexpr auto SliderExponent = 0x468; // float
		constexpr auto Font = 0x470; // FSlateFontInfo
		constexpr auto Justification = 0x4c8; // ETextJustify
		constexpr auto MinDesiredWidth = 0x4cc; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x4d0; // bool
		constexpr auto SelectAllTextOnCommit = 0x4d1; // bool
		constexpr auto ForegroundColor = 0x4d8; // FSlateColor
		constexpr auto OnValueChanged = 0x500; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x510; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x520; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x530; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x540; // char : 1
		constexpr auto bOverride_MaxValue = 0x540; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x540; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x540; // char : 1
		constexpr auto MinValue = 0x544; // float
		constexpr auto MaxValue = 0x548; // float
		constexpr auto MinSliderValue = 0x54c; // float
		constexpr auto MaxSliderValue = 0x550; // float
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x38; // FRawDistributionVector
	}

	namespace n_UActorChannel { // : UChannel
		constexpr auto Actor = 0x78; // AActor*
		constexpr auto CreateSubObjects = 0x168; // TArray<UObject*>
	}

	namespace n_UEnvQueryGenerator_BlueprintBase { // : UEnvQueryGenerator
		constexpr auto GeneratorsActionDescription = 0x58; // FText
		constexpr auto Context = 0x70; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x78; // UEnvQueryItemType*
	}

	namespace n_UTwinJumpAttack { // : UPounceAttack
		constexpr auto _jumpVelocity = 0x380; // FDBDTunableRowHandle
		constexpr auto _jumpAngleCurve = 0x3a8; // UCurveFloat*
		constexpr auto _upDownObstructionAnglePrecision = 0x3e0; // FDBDTunableRowHandle
		constexpr auto _leftRightObstructionAnglePrecision = 0x408; // FDBDTunableRowHandle
		constexpr auto _authorizedLandingHeight = 0x430; // FDBDTunableRowHandle
		constexpr auto _shouldTwinHaveJumpObjectType = 0x461; // bool
	}

	namespace n_UUIBackendDataAccessor { // : UGameInstanceSubsystem
		constexpr auto _splinteredStateSubsystem = 0xa8; // USplinteredStatesSubsystem*
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum { // : UNiagaraDataInterfaceAudioSubmix
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x140; // FVector2D
		constexpr auto WrapWidth = 0x148; // float
		constexpr auto bExplicitWrapWidth = 0x14c; // bool
	}

	namespace n_AGeometryCacheActor { // : AActor
		constexpr auto GeometryCacheComponent = 0x230; // UGeometryCacheComponent*
	}

	namespace n_UConsoleSettings { // : UObject
		constexpr auto MaxScrollbackSize = 0x30; // int32_t
		constexpr auto ManualAutoCompleteList = 0x38; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x48; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x58; // float
		constexpr auto bOrderTopToBottom = 0x5c; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x5d; // bool
		constexpr auto InputColor = 0x60; // FColor
		constexpr auto HistoryColor = 0x64; // FColor
		constexpr auto AutoCompleteCommandColor = 0x68; // FColor
		constexpr auto AutoCompleteCVarColor = 0x6c; // FColor
		constexpr auto AutoCompleteFadedColor = 0x70; // FColor
	}

	namespace n_UPossessionComponent { // : UActorComponent
		constexpr auto _startPossessed = 0x119; // bool
		constexpr auto _emptyController = 0x120; // AAIController*
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x38; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x3c; // FName
		constexpr auto bSourceAbsolute = 0x48; // char : 1
		constexpr auto Source = 0x50; // FRawDistributionVector
		constexpr auto bLockSource = 0x98; // char : 1
		constexpr auto SourceTangentMethod = 0x9c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0xa0; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xe8; // char : 1
		constexpr auto SourceStrength = 0xf0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x120; // char : 1
	}

	namespace n_UComboBoxString { // : UWidget
		constexpr auto DefaultOptions = 0x128; // TArray<FString>
		constexpr auto SelectedOption = 0x138; // FString
		constexpr auto WidgetStyle = 0x148; // FComboBoxStyle
		constexpr auto ItemStyle = 0x588; // FTableRowStyle
		constexpr auto ContentPadding = 0xdc0; // FMargin
		constexpr auto MaxListHeight = 0xdd0; // float
		constexpr auto HasDownArrow = 0xdd4; // bool
		constexpr auto EnableGamepadNavigationMode = 0xdd5; // bool
		constexpr auto Font = 0xdd8; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xe30; // FSlateColor
		constexpr auto bIsFocusable = 0xe58; // bool
		constexpr auto OnGenerateWidgetEvent = 0xe5c; // FDelegate
		constexpr auto OnSelectionChanged = 0xe70; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xe80; // FMulticastInlineDelegate
	}

	namespace n_UUITweenMaterialVectorProperties { // : UObject
		constexpr auto MaterialInstance = 0x30; // UMaterialInstanceDynamic*
	}

	namespace n_UCustomizationTooltipWidget { // : UCoreBaseUserWidget
		constexpr auto ToolTipStatusTB = 0x2d8; // UDBDTextBlock*
	}

	namespace n_UAIPerceptionComponent { // : UActorComponent
		constexpr auto SensesConfig = 0xb8; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xc8; // UAISense*
		constexpr auto AIOwner = 0xe0; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x168; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x178; // FMulticastInlineDelegate
	}

	namespace n_UGizmoTransformProxyTransformSource { // : UGizmoBaseTransformSource
		constexpr auto Proxy = 0x50; // UTransformProxy*
	}

	namespace n_UAnimationSharingManager { // : UObject
		constexpr auto Skeletons = 0x30; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x40; // TArray<UAnimSharingInstance*>
	}

	namespace n_UDestroyTwin { // : UChargeableInteractionDefinition
		constexpr auto _destroyTwinMaxCharge = 0x718; // FDBDTunableRowHandle
	}

	namespace n_UUMGAtlantaSettingScreen { // : UMobileBaseUserWidget
		constexpr auto SettingContextSwitcher = 0x3b0; // UWidgetSwitcher*
		constexpr auto SettingTabBox = 0x3b8; // UHorizontalBox*
		constexpr auto AlwaysDisplayButtonBox = 0x3c0; // UHorizontalBox*
		constexpr auto _settingTabButtonClass = 0x3c8; // TSoftClassPtr<UObject>
		constexpr auto _settingAlwaysDisplayButtonClass = 0x3f8; // TSoftClassPtr<UObject>
		constexpr auto _buttonBoxDividerAsset = 0x428; // TSoftObjectPtr<UTexture2D>
		constexpr auto _overlayContextWidgetMap = 0x458; // TMap<EOverlayTabs, TSoftClassPtr<UObject>>
		constexpr auto _contextWidgetMap = 0x4a8; // TMap<EOverlayTabs, UUMGSettingContextWidget*>
	}

	namespace n_UConnectionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UGizmoConstantAxisSource { // : UObject
		constexpr auto Origin = 0x38; // FVector
		constexpr auto Direction = 0x44; // FVector
	}

	namespace n_UBloodlust { // : UStatusEffect
		constexpr auto BloodlustCurve = 0x350; // UCurveFloat*
		constexpr auto _bloodlustTime = 0x378; // float
		constexpr auto _owningKiller = 0x3a8; // ASlasherPlayer*
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow { // : UAnimNotifyState
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UCoreTestBuildFlagWidget { // : UCoreBaseHudWidget
		constexpr auto TopLineTextfield = 0x2f8; // UTextBlock*
		constexpr auto BottomLineTextfield = 0x300; // UTextBlock*
	}

	namespace n_UMaterialFunction { // : UMaterialFunctionInterface
		constexpr auto Description = 0x48; // FString
		constexpr auto bExposeToLibrary = 0x58; // char : 1
		constexpr auto bPrefixParameterNames = 0x58; // char : 1
		constexpr auto bReentrantFlag = 0x58; // char : 1
	}

	namespace n_AOnlineLobbyLevel { // : ALobbyLevel
		constexpr auto ProceduralGenerationData = 0x2b0; // UProceduralGenerationData*
		constexpr auto _onlineLobbySlasherPOVTrackerOffsets = 0x2b8; // TArray<FVector>
		constexpr auto _onlineLobbyCamperDisplayStands = 0x2c8; // TArray<TWeakObjectPtr<ADisplayStand>>
		constexpr auto _onlineLobbySlasherDisplayStands = 0x2d8; // TArray<TWeakObjectPtr<ADisplayStand>>
	}

	namespace n_AEscapeDoor { // : AInteractable
		constexpr auto EscapePositions = 0x338; // TArray<FVector>
		constexpr auto EscapeFire = 0x348; // TArray<UObject*>
		constexpr auto _killerOpenChargeable = 0x358; // UChargeableComponent*
		constexpr auto _openChargeable = 0x360; // UChargeableComponent*
		constexpr auto _ak_audio_escape = 0x368; // UAkComponent*
		constexpr auto _escapeDoorAnimInstance = 0x370; // UEscapeDoorAnimInstance*
		constexpr auto _rootComponent = 0x378; // USceneComponent*
		constexpr auto _activated = 0x380; // bool
		constexpr auto _escapeBlockerInstance = 0x388; // AEscapeBlocker*
		constexpr auto _spotlight = 0x390; // USpotLightComponent*
		constexpr auto _localOverlappingCamper = 0x3e0; // ACamperPlayer*
		constexpr auto _perceptionStimuliComponent = 0x3f0; // UAIPerceptionStimuliSourceComponent*
		constexpr auto _doorSwitchBlockableComponent = 0x3f8; // UBlockableComponent*
	}

	namespace n_UDBDTextDesignTunables { // : UObject
		constexpr auto creditsHtml = 0x30; // FString
		constexpr auto LegalTextTitle = 0x40; // FText
		constexpr auto LegalText = 0x58; // FText
		constexpr auto ConsentTextTitle = 0x70; // FText
		constexpr auto ConsentText = 0x88; // FText
		constexpr auto LegalTextSIEA = 0xa0; // FText
		constexpr auto LegalTextSIEE = 0xb8; // FText
		constexpr auto SystemMessage_ChatDisconnected = 0xd0; // FText
		constexpr auto SystemMessage_ChatReturnedToLobby = 0xe8; // FText
		constexpr auto SystemMessage_ChatMatchServerClosed = 0x100; // FText
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto Inputs = 0x64; // FExpressionInput [0x3]
	}

	namespace n_AMeatHook { // : AInteractable
		constexpr auto IsSurvivorStruggling = 0x348; // bool
		constexpr auto WasSurvivorStruggleCancelled = 0x349; // bool
		constexpr auto IsSacrificeEnabled = 0x34a; // bool
		constexpr auto AIInteractionOffset = 0x34c; // FVector
		constexpr auto ClipRegions = 0x358; // TArray<UDBDClipRegionComponent*>
		constexpr auto IsInBasement = 0x368; // bool
		constexpr auto IsBreakable = 0x369; // bool
		constexpr auto IsSabotageable = 0x36a; // bool
		constexpr auto HookIdentityTag = 0x36c; // FGameplayTag
		constexpr auto SnapHookedCharacter = 0x378; // bool
		constexpr auto FullyHooked = 0x379; // bool
		constexpr auto YawAdjustTimer = 0x380; // FDBDTimer
		constexpr auto HookYaw = 0x3a8; // float
		constexpr auto TargetHookYaw = 0x3ac; // float
		constexpr auto _struggleThreshold = 0x3b0; // float
		constexpr auto _characterPusher = 0x3b8; // UCharacterPusherComponent*
		constexpr auto _slasherCollisionBlocker = 0x3c0; // UCapsuleComponent*
		constexpr auto _eventListener = 0x3c8; // UPollableEventListener*
		constexpr auto _hookedSurvivor = 0x3d0; // ACamperPlayer*
		constexpr auto _hookBreakerPlayer = 0x3d8; // ADBDPlayer*
		constexpr auto _campersThatSabotagedMeatHook = 0x460; // TSet<ACamperPlayer*>
		constexpr auto _mainInteractor = 0x4b0; // UInteractor*
		constexpr auto _meatHookEffect = 0x4b8; // USceneComponent*
		constexpr auto _unhook = 0x4c0; // UChargeableInteractionDefinition*
		constexpr auto _camperHookedSnapTransform = 0x4c8; // USceneComponent*
		constexpr auto _entity = 0x4d0; // AEntity*
		constexpr auto _preventDrainProgression = 0x4ec; // bool
		constexpr auto _perceptionStimuliComponent = 0x4f0; // UAIPerceptionStimuliSourceComponent*
		constexpr auto _interactingPlayer = 0x4f8; // ADBDPlayer*
		constexpr auto _initialized = 0x500; // bool
		constexpr auto _cachedMapActor = 0x508; // UMapActorComponent*
	}

	namespace n_UDBDOutlineComponentConfiguration { // : UDataAsset
		constexpr auto OutlineConfigurations = 0x38; // TMap<UObject*, FOutlineConfiguration>
		constexpr auto OutlineColours = 0x88; // TMap<FName, FOutlineColourConfiguration>
		constexpr auto OutlineMaterial = 0xd8; // UMaterialInterface*
		constexpr auto DefaultTranslucencyMaterials = 0xe0; // TArray<UMaterialInterface*>
	}

	namespace n_UARTexture { // : UTexture
		constexpr auto TextureType = 0xc0; // EARTextureType
		constexpr auto Timestamp = 0xc4; // float
		constexpr auto ExternalTextureGuid = 0xc8; // FGuid
		constexpr auto Size = 0xd8; // FVector2D
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0x48; // FExpressionInput
		constexpr auto Height = 0x64; // FExpressionInput
		constexpr auto HeightRatioInput = 0x80; // FExpressionInput
		constexpr auto HeightRatio = 0x9c; // float
		constexpr auto ReferencePlane = 0xa0; // float
		constexpr auto ConstCoordinate = 0xa4; // uint32_t
	}

	namespace n_ADBDPlayerState_Lobby { // : ADBDPlayerState_Menu
		constexpr auto IsOwnershipValidated = 0x770; // bool
	}

	namespace n_UCoreInputSwitcherWidget { // : UCoreBaseUserWidget
		constexpr auto ButtonDisplayRule = 0x2d8; // EInputSwitcherDisplayRule
		constexpr auto InputPromptDisplayRule = 0x2d9; // EInputSwitcherDisplayRule
		constexpr auto Alignment = 0x2da; // ETextJustify
		constexpr auto InputPrompt = 0x2e0; // UCoreKeyListenerInputPromptWidget*
		constexpr auto Button = 0x2e8; // UCoreButtonWidget*
		constexpr auto _shouldRegisterForInputInConstruct = 0x2f0; // bool
		constexpr auto _onInputSwitcherTriggeredDelegate = 0x2f8; // FMulticastInlineDelegate
	}

	namespace n_URegionFinder { // : UObject
		constexpr auto Regions = 0x30; // TArray<FRegion>
		constexpr auto TIMEOUT = 0x40; // float
	}

	namespace n_UUMGBaseSideMainMenuButton { // : UUMGBaseButtonWidget
		constexpr auto NotificationBadge = 0x430; // UImage*
		constexpr auto _baseTextOpacity = 0x438; // float
		constexpr auto _highlightTextOpacity = 0x43c; // float
		constexpr auto _baseIconOpacity = 0x440; // float
		constexpr auto _highlightIconOpacity = 0x444; // float
	}

	namespace n_UAISystemBase { // : UObject
		constexpr auto AISystemClassName = 0x30; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x50; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x68; // bool
	}

	namespace n_UUMGEndGameCollapseProgressWidget { // : UMobileBaseUserWidget
		constexpr auto ProgressBar = 0x300; // UProgressBar*
		constexpr auto MarkerLeftCanvas = 0x308; // UCanvasPanel*
		constexpr auto MarkerRightCanvas = 0x310; // UCanvasPanel*
		constexpr auto _markerLeftBox = 0x318; // UHorizontalBoxSlot*
		constexpr auto _markerRightBox = 0x320; // UHorizontalBoxSlot*
	}

	namespace n_UUMGPartySlotsWidget { // : UMobileBaseUserWidget
		constexpr auto PartyPlayerSlotsContainer = 0x300; // UPanelWidget*
		constexpr auto _partyPlayerSlots = 0x308; // TArray<UUMGPartyPlayerSlotWidget*>
		constexpr auto PartyBotSlotsContainer = 0x320; // UVerticalBox*
		constexpr auto PartyBotSlotWidgetClass = 0x328; // TSoftClassPtr<UObject>
		constexpr auto MaxSlotCount = 0x358; // int32_t
		constexpr auto ConflictingCharacterColor = 0x360; // FSlateColor
		constexpr auto NormalCharacterColor = 0x388; // FSlateColor
	}

	namespace n_ULuminARLightEstimate { // : UARBasicLightEstimate
		constexpr auto AmbientIntensityNits = 0x48; // TArray<float>
	}

	namespace n_UBrainComponent { // : UActorComponent
		constexpr auto BlackboardComp = 0xc0; // UBlackboardComponent*
		constexpr auto AIOwner = 0xc8; // AAIController*
	}

	namespace n_UPlayerAnimInstance { // : UAnimInstance
		constexpr auto _owningPlayer = 0x290; // ADBDPlayer*
		constexpr auto _animEffectBlackBoard = 0x298; // UAnimEffectBlackBoard*
		constexpr auto _animEffectHandlerForSFX = 0x2a0; // UAnimEffectHandler*
		constexpr auto _animEffectHandlerForVFX = 0x2a8; // UAnimEffectHandler*
		constexpr auto _animEffectHandlerClassForSFX = 0x2b0; // UAnimEffectHandler*
		constexpr auto _animEffectHandlerClassForVFX = 0x2b8; // UAnimEffectHandler*
		constexpr auto _taggedAnimCollections = 0x2c0; // TArray<FTaggedAnimCollection>
		constexpr auto _animations = 0x2d0; // TMap<FGameplayTag, UAnimSequence*>
		constexpr auto _blendspaces = 0x320; // TMap<FGameplayTag, UBlendSpace*>
		constexpr auto _aimoffsets = 0x370; // TMap<FGameplayTag, UAimOffsetBlendSpace*>
		constexpr auto _blendspaces1d = 0x3c0; // TMap<FGameplayTag, UBlendSpace1D*>
		constexpr auto _aimoffsets1d = 0x410; // TMap<FGameplayTag, UAimOffsetBlendSpace1D*>
		constexpr auto _selectors = 0x460; // TMap<FGameplayTag, FAnimSequenceSelector>
		constexpr auto _isInParadise = 0x4b0; // bool
		constexpr auto _isIntroCompleted = 0x4b1; // bool
		constexpr auto _isLevelReadyToPlay = 0x4b2; // bool
		constexpr auto _activationDefinition = 0x4b8; // FActivationDefinition
		constexpr auto _interactionDuration = 0x4e0; // float
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x50; // float
		constexpr auto bUseSmoothing = 0x54; // bool
		constexpr auto SmoothingInterpSpeed = 0x58; // float
	}

	namespace n_UAISkill_InteractionTarget_ThrowPlague { // : UAISkill_InteractionTarget_Throw
		constexpr auto ProjectileDamageSickTargetTag = 0x298; // FGameplayTag
	}

	namespace n_UBaseIsPlayerPerformingInteraction { // : UEventDrivenModifierCondition
		constexpr auto _interactionSemantics = 0xe8; // FGameplayTagContainer
	}

	namespace n_UWhiteGlyphSpawnerComponent { // : UActorComponent
		constexpr auto _surfaceGlyphClass = 0xd0; // AGlyph*
		constexpr auto _minDistanceFromBasement = 0xd8; // FDBDTunableRowHandle
		constexpr auto _maxDistanceFromBasement = 0x100; // FDBDTunableRowHandle
		constexpr auto _spawnDistanceDebug = 0x128; // float
		constexpr auto _surfaceGlyphCoolDownTime = 0x130; // FDBDTunableRowHandle
		constexpr auto _lastSurfaceGlyphComponentDebug = 0x158; // UWhiteGlyphSurfaceComponent*
		constexpr auto _spawnPointsCollection = 0x160; // TArray<UTileSpawnPoint*>
	}

	namespace n_UMaterialExpressionArccosineFast { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UOnEventBaseAddon { // : UItemAddon
		constexpr auto _eventToListenTo = 0x298; // FGameplayTag
	}

	namespace n_UGnomeEventComponent { // : URespawningEventComponent
		constexpr auto _interactionRespawnableTrigger = 0xc8; // UInteractionRespawnableTrigger*
		constexpr auto _timedRespawnableTrigger = 0xd0; // UTimedRespawnableTrigger*
	}

	namespace n_USurvivorMadnessEffect { // : UStatusEffect
		constexpr auto _madness = 0x358; // float
	}

	namespace n_UNetAnalyticsAggregatorConfig { // : UObject
		constexpr auto NetAnalyticsData = 0x30; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_ACollectable { // : AInteractable
		constexpr auto DisplayUsePercent = 0x358; // bool
		constexpr auto ProgressBar = 0x359; // EAtlantaItemProgressionBarEnum
		constexpr auto OverrideItemIndex = 0x35a; // bool
		constexpr auto OverridenItemIndex = 0x35c; // int32_t
		constexpr auto StrafeOnUse = 0x360; // bool
		constexpr auto AimOnUse = 0x361; // bool
		constexpr auto VisibleWhenEquipped = 0x362; // bool
		constexpr auto StopRunningOnUse = 0x363; // bool
		constexpr auto HandPosition = 0x364; // EItemHandPosition
		constexpr auto DisableArmOverrideDuringInteractions = 0x365; // bool
		constexpr auto HasUseInteraction = 0x366; // bool
		constexpr auto Category = 0x367; // ECollectableCategory
		constexpr auto IsInUse = 0x368; // bool
		constexpr auto ItemId = 0x36c; // FName
		constexpr auto FromPlayerSpawn = 0x378; // bool
		constexpr auto BaseItemModifier = 0x380; // UItemModifier*
		constexpr auto ItemModifier1 = 0x388; // UItemModifier*
		constexpr auto ItemModifier2 = 0x390; // UItemModifier*
		constexpr auto ShouldRegisterToOnSurvivorAdded = 0x398; // bool
		constexpr auto OnCollectablePickedUpBP = 0x3b8; // FMulticastInlineDelegate
		constexpr auto BeingCollected = 0x410; // bool
		constexpr auto BeingDropped = 0x411; // bool
		constexpr auto _beingConsumedByEntity = 0x412; // bool
		constexpr auto _itemInteractor = 0x418; // UInteractor*
		constexpr auto _mesh = 0x420; // USkeletalMeshComponent*
		constexpr auto _displayedInputType = 0x428; // EInputInteractionType
		constexpr auto _objectState = 0x430; // UGameplayTagContainerComponent*
		constexpr auto _isBoundToFirstCollector = 0x438; // bool
		constexpr auto _placementOrigin = 0x448; // USceneComponent*
		constexpr auto _collector = 0x460; // ADBDPlayer*
		constexpr auto _firstCollector = 0x468; // ADBDPlayer*
		constexpr auto _state = 0x470; // ECollectableState
		constexpr auto _itemAddons = 0x478; // TArray<UItemAddon*>
		constexpr auto _itemCount = 0x498; // int32_t
		constexpr auto _begunPlayFenceName = 0x4a8; // FGuid
		constexpr auto _attachToSocketName = 0x4b8; // EAttachToSocketNameEnum
		constexpr auto _collectInInventoryType = 0x4b9; // EInventoryType
		constexpr auto _stateTagForCollector = 0x4bc; // FGameplayTag
		constexpr auto _itemType = 0x4c8; // ELoadoutItemType
		constexpr auto _discardWhenConsumed = 0x4c9; // bool
		constexpr auto _disableAttachmentReplication = 0x4ca; // bool
	}

	namespace n_UDemogorgonPortalEffectComponent { // : UActorComponent
		constexpr auto _statusEffectName = 0xb8; // FName
		constexpr auto _effectLingerDuration = 0xc4; // float
		constexpr auto _effect = 0xc8; // TWeakObjectPtr<UStatusEffect>
		constexpr auto _originatingPlayer = 0xd0; // TWeakObjectPtr<ADBDPlayer>
		constexpr auto _originatingEffect = 0xd8; // TWeakObjectPtr<UGameplayModifierContainer>
	}

	namespace n_UKillerProjectileDodgeComponent { // : UActorComponent
		constexpr auto _killerProjectile = 0xb8; // AKillerProjectile*
		constexpr auto _proximitySurvivors = 0xc0; // TArray<ACamperPlayer*>
	}

	namespace n_USearchChestInteractionBase { // : UChargeableInteractionDefinition
		constexpr auto _handleCompletionScoreEvents = 0x6d8; // bool
		constexpr auto _searchableCompleteContributionPercentTag = 0x6dc; // FGameplayTag
		constexpr auto _scoreEventFired = 0x6e8; // bool
		constexpr auto _owningChest = 0x6f0; // ASearchable*
		constexpr auto _onLastInteractionWasComplete = 0x6f8; // bool
	}

	namespace n_UFlashlightablePointsLightingStrategy { // : UFlashlightableLightingStrategy
		constexpr auto _pointsProvider = 0x30; // UPointsProvider*
		constexpr auto _impactPointDistanceError = 0x38; // float
	}

	namespace n_UNavMovementComponent { // : UMovementComponent
		constexpr auto NavAgentProps = 0xf8; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x130; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x134; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x134; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x134; // char : 1
		constexpr auto MovementState = 0x135; // FMovementProperties
		constexpr auto PathFollowingComp = 0x138; // UObject*
	}

	namespace n_ADBDGame_Lobby { // : ADBDBaseGameMode
		constexpr auto _identityValidation = 0x370; // UIdentityValidation*
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto OverrideMaterials = 0x428; // TArray<UMaterialInterface*>
		constexpr auto BackupMaterials = 0x438; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x470; // char : 1
	}

	namespace n_USkeletalMeshSimulationComponent { // : UActorComponent
		constexpr auto PhysicalMaterial = 0xc0; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xc8; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xd0; // UPhysicsAsset*
		constexpr auto bSimulating = 0xd8; // bool
		constexpr auto bNotifyCollisions = 0xd9; // bool
		constexpr auto ObjectType = 0xda; // EObjectStateTypeEnum
		constexpr auto Density = 0xdc; // float
		constexpr auto MinMass = 0xe0; // float
		constexpr auto MaxMass = 0xe4; // float
		constexpr auto CollisionType = 0xe8; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xec; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xf0; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xf4; // int32_t
		constexpr auto MinLevelSetResolution = 0xf8; // int32_t
		constexpr auto MaxLevelSetResolution = 0xfc; // int32_t
		constexpr auto CollisionGroup = 0x100; // int32_t
		constexpr auto InitialVelocityType = 0x104; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x108; // FVector
		constexpr auto InitialAngularVelocity = 0x114; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UDBDServerInstance { // : UObject
		constexpr auto _pendingSessionUpdates = 0x98; // TArray<UDBDHostSettingsParamsBase*>
		constexpr auto _gameInstance = 0xa8; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto Code = 0x48; // FString
		constexpr auto OutputType = 0x58; // ECustomMaterialOutputType
		constexpr auto Description = 0x60; // FString
		constexpr auto Inputs = 0x70; // TArray<FCustomInput>
		constexpr auto AdditionalDefines = 0x80; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x90; // TArray<FString>
	}

	namespace n_UBehaviorTreeManager { // : UObject
		constexpr auto MaxDebuggerSteps = 0x30; // int32_t
		constexpr auto LoadedTemplates = 0x38; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x48; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_AStartScreen_C { // : AStartScreenBase
		constexpr auto UberGraphFrame = 0x238; // FPointerToUberGraphFrame
		constexpr auto MatineeActor_1_ExecuteUbergraph_StartScreen_RefProperty = 0x240; // AMatineeActor*
	}

	namespace n_UUMGTallyEmblemsWidget { // : UUMGTallyListElementWidget
		constexpr auto EmblemWidgetClass = 0x310; // TSoftClassPtr<UObject>
		constexpr auto EmblemsContainer = 0x340; // UHorizontalBox*
		constexpr auto _emblems = 0x348; // TArray<UUMGTallyEmblemWidget*>
	}

	namespace n_UBTDecorator_Cooldown { // : UBTDecorator
		constexpr auto cooldownTime = 0x70; // float
	}

	namespace n_ULocalLightComponent { // : ULightComponent
		constexpr auto IntensityUnits = 0x390; // ELightUnits
		constexpr auto Radius = 0x394; // float
		constexpr auto AttenuationRadius = 0x398; // float
		constexpr auto LightmassSettings = 0x39c; // FLightmassPointLightSettings
	}

	namespace n_UUMGAtlantaDailyRewardsGrid { // : UMobileBaseUserWidget
		constexpr auto BigDailyRewardWidgetTemplate_type_8 = 0x310; // TSoftClassPtr<UObject>
		constexpr auto BigDailyRewardWidgetTemplate_type_10 = 0x340; // TSoftClassPtr<UObject>
		constexpr auto BigDailyRewardWidgetTemplate_type_14 = 0x370; // TSoftClassPtr<UObject>
		constexpr auto SmallDailyRewardWidgetTemplate_type_8 = 0x3a0; // TSoftClassPtr<UObject>
		constexpr auto SmallDailyRewardWidgetTemplate_type_10 = 0x3d0; // TSoftClassPtr<UObject>
		constexpr auto SmallDailyRewardWidgetTemplate_type_14 = 0x400; // TSoftClassPtr<UObject>
		constexpr auto DailyRewardWidgetsGridPanel = 0x430; // UUniformGridPanel*
		constexpr auto LastDailyRewardWidgetPanel = 0x438; // UCanvasPanel*
		constexpr auto NumberOfItems = 0x440; // int32_t
	}

	namespace n_AKnifeProjectile { // : AKillerProjectile
		constexpr auto _worldCollider = 0x338; // UPrimitiveComponent*
		constexpr auto _camperDetector = 0x340; // UPrimitiveComponent*
		constexpr auto _playersAffectedThisThrow = 0x358; // TSet<ADBDPlayer*>
		constexpr auto _poolableActorComponent = 0x3a8; // UPoolableProjectileComponent*
		constexpr auto _knifeMaxRange = 0x3b0; // FDBDTunableRowHandle
		constexpr auto _addonExplosionRadius = 0x3d8; // FDBDTunableRowHandle
		constexpr auto _numberOfAddonBounces = 0x400; // FDBDTunableRowHandle
	}

	namespace n_UDatasmithMaterialInstanceTemplate { // : UDatasmithObjectTemplate
		constexpr auto ParentMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x68; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xb8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0x108; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x158; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_ABP_Menu_Slasher22_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto _littlebrother = 0x698; // USkeletalMeshComponent*
		constexpr auto BP_Audio_KLR_23 = 0x6a0; // UBP_Audio_KLR_22_C*
		constexpr auto _bp_anim_switch = 0x6a8; // int32_t
	}

	namespace n_UBlindingFXComponent { // : UActorComponent
		constexpr auto _blindnessIntensityParameter = 0xc8; // FName
		constexpr auto _blindnessMaterialCurve = 0xd8; // UCurveFloat*
		constexpr auto _blindnessCurve = 0xe0; // UCurveFloat*
		constexpr auto _postProcess = 0xe8; // UPostProcessComponent*
		constexpr auto _postProcessMaterial = 0xf0; // UMaterialInstanceDynamic*
	}

	namespace n_UARFaceGeometry { // : UARTrackedGeometry
		constexpr auto LookAtTarget = 0xf0; // FVector
		constexpr auto bIsTracked = 0xfc; // bool
		constexpr auto BlendShapes = 0x100; // TMap<EARFaceBlendShape, float>
	}

	namespace n_USoundNodeGroupControl { // : USoundNode
		constexpr auto GroupSizes = 0x50; // TArray<int32_t>
	}

	namespace n_UCharacterChaseVisualComponent { // : UActorComponent
		constexpr auto OnChaseStartEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnChaseEndEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto _vignetteMeshComp = 0xd8; // UMaterialHelperUnaffectedStaticMeshComp*
		constexpr auto _relativeLocation = 0xe0; // FVector
		constexpr auto _relativeScale = 0xec; // FVector
		constexpr auto _relativeRotation = 0xf8; // FRotator
		constexpr auto _fovModifyFactor = 0x104; // float
	}

	namespace n_UEnvQueryTest_Overlap { // : UEnvQueryTest
		constexpr auto OverlapData = 0x238; // FEnvOverlapData
	}

	namespace n_UEditMeshPolygonsTool { // : UMeshSurfacePointTool
		constexpr auto DynamicMeshComponent = 0xd8; // USimpleDynamicMeshComponent*
		constexpr auto TransformProps = 0xe0; // UPolyEditTransformProperties*
		constexpr auto EditActions = 0x210; // UEditMeshPolygonsToolActions*
		constexpr auto EditActions_Triangles = 0x218; // UEditMeshPolygonsToolActions_Triangles*
		constexpr auto EditEdgeActions = 0x220; // UEditMeshPolygonsToolEdgeActions*
		constexpr auto EditEdgeActions_Triangles = 0x228; // UEditMeshPolygonsToolEdgeActions_Triangles*
		constexpr auto EditUVActions = 0x230; // UEditMeshPolygonsToolUVActions*
		constexpr auto ExtrudeProperties = 0x238; // UPolyEditExtrudeProperties*
		constexpr auto CutProperties = 0x2d0; // UPolyEditCutProperties*
		constexpr auto SetUVProperties = 0x2d8; // UPolyEditSetUVProperties*
		constexpr auto SelectionMechanic = 0x2e0; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0x2f0; // UMultiTransformer*
		constexpr auto EditPreview = 0x6a0; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x6b0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x6b8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x6c0; // UCollectSurfacePathMechanic*
	}

	namespace n_USmashHit { // : UPerk
		constexpr auto _exhaustedTime = 0x3d0; // float [0x3]
		constexpr auto _hasteTime = 0x3dc; // float [0x3]
	}

	namespace n_AEndGameEntity { // : AActor
		constexpr auto _skeletalMeshComponent = 0x230; // USkeletalMeshComponent*
	}

	namespace n_US28P03 { // : UBoonPerk
		constexpr auto _lingerDuration = 0x488; // float [0x3]
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto SlotName = 0x98; // FName
		constexpr auto AnimSeqs = 0xa8; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xb8; // char : 1
	}

	namespace n_UTwinAttachmentComponent { // : UActorComponent
		constexpr auto _attachedPlayer = 0x100; // ADBDPlayer*
		constexpr auto _gateBlockerStatusEffect = 0x160; // UStatusEffect*
		constexpr auto _hasBeenDetachedBySurvivorDamageChanged = 0x17a; // bool
		constexpr auto _cantEscapeByGateLingerDuration = 0x180; // FDBDTunableRowHandle
		constexpr auto _escapeBlockerLingerTimers = 0x1a8; // TMap<ADBDPlayer*, FFastTimer>
	}

	namespace n_UPartyBeaconState { // : UObject
		constexpr auto SessionName = 0x30; // FName
		constexpr auto NumConsumedReservations = 0x3c; // int32_t
		constexpr auto MaxReservations = 0x40; // int32_t
		constexpr auto NumTeams = 0x44; // int32_t
		constexpr auto NumPlayersPerTeam = 0x48; // int32_t
		constexpr auto TeamAssignmentMethod = 0x4c; // FName
		constexpr auto ReservedHostTeamNum = 0x58; // int32_t
		constexpr auto ForceTeamNum = 0x5c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x60; // bool
		constexpr auto bEnableRemovalRequests = 0x61; // bool
		constexpr auto Reservations = 0x68; // TArray<FPartyReservation>
	}

	namespace n_UMovieSceneEnumTrack { // : UMovieScenePropertyTrack
		constexpr auto Enum = 0x98; // UEnum*
	}

	namespace n_UExposerCirclingComponent { // : USceneComponent
		constexpr auto DirectionFollows = 0x210; // bool
		constexpr auto MinHeight = 0x214; // float
		constexpr auto MaxHeight = 0x218; // float
		constexpr auto MinRadius = 0x21c; // float
		constexpr auto MaxRadius = 0x220; // float
		constexpr auto CirclingSpeed = 0x224; // float
		constexpr auto DistanceBetweenPoints = 0x228; // float
		constexpr auto BezierModifier = 0x22c; // float
		constexpr auto Samples = 0x230; // int32_t
	}

	namespace n_UMoriComponent { // : UActorComponent
		constexpr auto _moriInteractionClasses = 0xd0; // TArray<UInteractionDefinition*>
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto ResetBool = 0x68; // bool
	}

	namespace n_UDecoySlasherComponent { // : UActorComponent
		constexpr auto OnPalletStunned_Authority = 0xb8; // FMulticastInlineDelegate
		constexpr auto TriggerDecoyVisibilityVFX = 0xc8; // FMulticastInlineDelegate
		constexpr auto HasTerrorRadius = 0xd8; // bool
		constexpr auto HasRedGlow = 0xd9; // bool
		constexpr auto _isActive = 0xda; // bool
		constexpr auto _initialized = 0xdb; // bool
		constexpr auto _terrorRadiusEmitter = 0xe0; // UTerrorRadiusEmitterComponent*
		constexpr auto _redStainComponent = 0xe8; // URedStainComponent*
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x4f0; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x548; // FVector
		constexpr auto SplineBoundaryMin = 0x554; // float
		constexpr auto CachedMeshBodySetupGuid = 0x558; // FGuid
		constexpr auto BodySetup = 0x568; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x570; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x574; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x574; // char : 1
		constexpr auto bMeshDirty = 0x574; // char : 1
		constexpr auto ForwardAxis = 0x575; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x578; // float
	}

	namespace n_UUmgPlayerHud { // : UUserWidget
		constexpr auto GameStartingPanel = 0x260; // UCanvasPanel*
		constexpr auto InGamePanel = 0x268; // UCanvasPanel*
		constexpr auto SkillCheckWidget = 0x270; // UAtlantaSkillCheckWidget*
		constexpr auto MapThemeWidget = 0x278; // UUMGMapThemeWidget*
		constexpr auto AtlantaAlertsWidget = 0x280; // UUMGAlertsWidget*
		constexpr auto AtlantaObjectivesWidget = 0x288; // UUMGObjectivesWidget*
		constexpr auto AtlantaPerksWidget = 0x290; // UPerkHudWidget*
		constexpr auto ActivablePerkActionButton = 0x298; // UPerkActionButton*
		constexpr auto AtlantaStatusEffectsWidget = 0x2a0; // UUMGStatusEffectsWidget*
		constexpr auto AtlantaInteractionWidget = 0x2a8; // UUMGChargeableInteractionWidget*
		constexpr auto AtlantaPromptWidget = 0x2b0; // UAtlantaPromptWidget*
		constexpr auto AtlantaTutorialPromptWidget = 0x2b8; // UAtlantaPromptWidget*
		constexpr auto AtlantaPlayersStatusWidget = 0x2c0; // UUMGPlayersStatusWidget*
		constexpr auto AtlantaObjectivesContainer = 0x2c8; // UVerticalBox*
		constexpr auto ActionButton = 0x2d0; // UActionButton*
		constexpr auto ActionButtonContainer = 0x2d8; // UCanvasPanel*
		constexpr auto PerkSoundHudWidget = 0x2e0; // UPerkSoundHudWidget*
		constexpr auto CenterInteractionButton = 0x2e8; // UMobileBaseUserWidget*
		constexpr auto CenterInteractionContainer = 0x2f0; // UCanvasPanel*
		constexpr auto CancelButtonContainer = 0x2f8; // UCanvasPanel*
		constexpr auto EndGameCollapseWidget = 0x300; // UUMGEndGameCollapseWidget*
		constexpr auto OnPerkClickedEvent = 0x308; // FMulticastInlineDelegate
		constexpr auto OnTutorialLeaveClickedEvent = 0x318; // FMulticastInlineDelegate
		constexpr auto OnTutorialNextClickedEvent = 0x328; // FMulticastInlineDelegate
		constexpr auto OnSettingsClickedEvent = 0x338; // FMulticastInlineDelegate
		constexpr auto LocalController = 0x348; // ADBDPlayerController*
		constexpr auto AtlantaDirectionalStick = 0x350; // UAtlantaHudDirectionalStick*
		constexpr auto AtlantaDirectionalStickContainer = 0x358; // UCanvasPanel*
		constexpr auto _localPlayer = 0x360; // ADBDPlayer*
		constexpr auto _unlockedVirtualJoystickThumbImage = 0x370; // FSlateBrush
		constexpr auto _lockedVirtualJoystickThumbImage = 0x400; // FSlateBrush
	}

	namespace n_UAISkill_ThroughTorment { // : UAISkill
		constexpr auto ToleratedTerrorPressure = 0xc0; // EAITerrorLevel
	}

	namespace n_UScreenSpaceLocationComponent { // : USceneComponent
		constexpr auto ScreenSpaceX = 0x210; // float
		constexpr auto ScreenSpaceY = 0x214; // float
		constexpr auto FrameDelay = 0x218; // int32_t
		constexpr auto _currentResolution = 0x21c; // FVector2D
		constexpr auto _previousTransforms = 0x228; // TArray<FTransform>
	}

	namespace n_UUMGSubscriptionPackButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto WidgetPerRewardType = 0x430; // USubscriptionRewardDataAsset*
		constexpr auto ButtonPressedVFX = 0x438; // UCanvasPanel*
		constexpr auto PricePanel = 0x440; // UCanvasPanel*
		constexpr auto TitleIcon = 0x448; // UImage*
		constexpr auto Title = 0x450; // UTextBlock*
		constexpr auto Price = 0x458; // UTextBlock*
		constexpr auto RenewalDatePanel = 0x460; // UCanvasPanel*
		constexpr auto RenewalDateText = 0x468; // UTextBlock*
		constexpr auto PurchaseRewardsGrid = 0x470; // UUniformGridPanel*
		constexpr auto DailyRewardsGrid = 0x478; // UUniformGridPanel*
		constexpr auto PortraitBorder = 0x480; // UImage*
		constexpr auto InfoButton = 0x488; // UButton*
		constexpr auto ActiveBackgroundImage = 0x490; // UImage*
		constexpr auto NonActiveBackgroundImage = 0x498; // UImage*
		constexpr auto ActiveTextColor = 0x4a0; // FLinearColor
		constexpr auto NonActiveTextColor = 0x4b0; // FLinearColor
		constexpr auto TextColor = 0x4c0; // FLinearColor
		constexpr auto ActiveSmokeBackgroundTint = 0x4d0; // FLinearColor
		constexpr auto NonActiveSmokeBackgroundTint = 0x4e0; // FLinearColor
		constexpr auto PurchaseRewardsSmokeBackground = 0x4f0; // UImage*
		constexpr auto DailyRewardsSmokeBackground = 0x4f8; // UImage*
		constexpr auto ActiveTitleBackgroundTint = 0x500; // FLinearColor
		constexpr auto NonActiveTitleBackgroundTint = 0x510; // FLinearColor
		constexpr auto TitleBackground = 0x520; // UImage*
		constexpr auto ActiveFrame = 0x528; // UCanvasPanel*
		constexpr auto NonActiveFrame = 0x530; // UCanvasPanel*
	}

	namespace n_UVariantSet { // : UObject
		constexpr auto DisplayText = 0x30; // FText
		constexpr auto bExpanded = 0x60; // bool
		constexpr auto Variants = 0x68; // TArray<UVariant*>
	}

	namespace n_UBTDecorator_KeepInCone { // : UBTDecorator
		constexpr auto ConeHalfAngle = 0x70; // float
		constexpr auto ConeOrigin = 0x78; // FBlackboardKeySelector
		constexpr auto Observed = 0xa8; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xd8; // char : 1
		constexpr auto bUseSelfAsObserved = 0xd8; // char : 1
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0x1a48; // UNetConnection*
	}

	namespace n_UMaterialExpressionShadingModel { // : UMaterialExpression
		constexpr auto ShadingModel = 0x48; // EMaterialShadingModel
	}

	namespace n_UEditNormalsOperatorFactory { // : UObject
		constexpr auto Tool = 0x38; // UEditNormalsTool*
	}

	namespace n_UAkAssetDataSwitchContainerData { // : UObject
		constexpr auto GroupValue = 0x30; // TSoftObjectPtr<UAkGroupValue>
		constexpr auto DefaultGroupValue = 0x60; // UAkGroupValue*
		constexpr auto MediaList = 0x68; // TArray<TSoftObjectPtr<UAkMediaAsset>>
		constexpr auto Children = 0x78; // TArray<UAkAssetDataSwitchContainerData*>
	}

	namespace n_UCorePlayerStatusWidget { // : UCoreBaseHudWidget
		constexpr auto PlayerStatusAssets = 0x2f8; // TMap<EPlayerStatus, FPlayerStatusAssets>
		constexpr auto ObsessionSfx = 0x348; // UAkAudioEvent*
		constexpr auto PlayerNameTextfield = 0x350; // UDBDTextBlock*
		constexpr auto KillerStatusContainer = 0x358; // UOverlay*
		constexpr auto KillerStatusEffectWidgetClasses = 0x360; // TMap<FGameplayTag, UCorePlayerStatusKillerEffectWidget*>
		constexpr auto _cachedViewData = 0x3b0; // FPlayerStatusViewData
		constexpr auto _killerStatusEffectWidget = 0x480; // UCorePlayerStatusKillerEffectWidget*
	}

	namespace n_UExporter { // : UObject
		constexpr auto SupportedClass = 0x30; // UObject*
		constexpr auto ExportRootScope = 0x38; // UObject*
		constexpr auto FormatExtension = 0x40; // TArray<FString>
		constexpr auto FormatDescription = 0x50; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x60; // int32_t
		constexpr auto TextIndent = 0x64; // int32_t
		constexpr auto bText = 0x68; // char : 1
		constexpr auto bSelectedOnly = 0x68; // char : 1
		constexpr auto bForceFileOperations = 0x68; // char : 1
		constexpr auto ExportTask = 0x70; // UAssetExportTask*
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x50; // FName
	}

	namespace n_UBrushBuilder { // : UObject
		constexpr auto BitmapFilename = 0x30; // FString
		constexpr auto ToolTip = 0x40; // FString
		constexpr auto NotifyBadParams = 0x50; // char : 1
		constexpr auto Vertices = 0x58; // TArray<FVector>
		constexpr auto Polys = 0x68; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x78; // FName
		constexpr auto MergeCoplanars = 0x84; // char : 1
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x50; // float
		constexpr auto PitchMax = 0x54; // float
		constexpr auto VolumeMin = 0x58; // float
		constexpr auto VolumeMax = 0x5c; // float
	}

	namespace n_UChaosDestructionListener { // : USceneComponent
		constexpr auto bIsCollisionEventListeningEnabled = 0x210; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x210; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x210; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x214; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x22c; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x244; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x260; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2b0; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x300; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x310; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x320; // FMulticastInlineDelegate
	}

	namespace n_UWmfMediaSettings { // : UObject
		constexpr auto AllowNonStandardCodecs = 0x30; // bool
		constexpr auto LowLatency = 0x31; // bool
		constexpr auto NativeAudioOut = 0x32; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x33; // bool
	}

	namespace n_UBTService_GetPinObject { // : UBTService_OnRelevantBase
		constexpr auto BBToSetKey = 0x80; // FBlackboardKeySelector
		constexpr auto PinTag = 0xb0; // FGameplayTag
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope { // : UNiagaraDataInterface
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UInnerStrength { // : UPerk
		constexpr auto _hideDuration = 0x3d0; // float [0x3]
		constexpr auto _perkEnabled = 0x3dc; // bool
	}

	namespace n_UAISenseConfig_Terror { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Terror*
		constexpr auto MaxBreathingSoundRange = 0x58; // float
		constexpr auto TerrorRanges = 0x60; // TMap<EAITerrorLevel, float>
		constexpr auto DetectionByAffiliation = 0xb0; // FAISenseAffiliationFilter
	}

	namespace n_UEndGameEntityAnimInstance { // : UAnimInstance
		constexpr auto _isFront = 0x270; // bool
		constexpr auto _isBack = 0x271; // bool
	}

	namespace n_AHatch { // : AInteractable
		constexpr auto _hatchState = 0x378; // EHatchState
		constexpr auto _isSurvivorEscaping = 0x379; // bool
		constexpr auto _isEndGameOver = 0x37a; // bool
		constexpr auto _isForceOpen = 0x37b; // bool
		constexpr auto _attemptToCloseHatchOnNextEscape = 0x37c; // bool
		constexpr auto _baseCollision = 0x388; // UPrimitiveComponent*
		constexpr auto _hatchOpenDuration = 0x3a8; // FDBDTunableRowHandle
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x48; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x78; // char : 1
		constexpr auto bUsePSysLocation = 0x78; // char : 1
		constexpr auto bInheritVelocity = 0x78; // char : 1
		constexpr auto InheritVelocityScale = 0x80; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc8; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd8; // char : 1
	}

	namespace n_UUMGAtlantaCustomMatchLobbyRule { // : UMobileBaseUserWidget
		constexpr auto RuleName = 0x300; // UTextBlock*
		constexpr auto OptionName = 0x308; // UTextBlock*
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x38; // EParticleEventType
		constexpr auto EventName = 0x3c; // FName
	}

	namespace n_UNiagaraRibbonRendererProperties { // : UNiagaraRendererProperties
		constexpr auto Material = 0x58; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x60; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0x90; // ENiagaraRibbonFacingMode
		constexpr auto UV0TilingDistance = 0x94; // float
		constexpr auto UV0Scale = 0x98; // FVector2D
		constexpr auto UV0Offset = 0xa0; // FVector2D
		constexpr auto UV0AgeOffsetMode = 0xa8; // ENiagaraRibbonAgeOffsetMode
		constexpr auto UV1TilingDistance = 0xac; // float
		constexpr auto UV1Scale = 0xb0; // FVector2D
		constexpr auto UV1Offset = 0xb8; // FVector2D
		constexpr auto UV1AgeOffsetMode = 0xc0; // ENiagaraRibbonAgeOffsetMode
		constexpr auto DrawDirection = 0xc1; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xc4; // float
		constexpr auto TessellationMode = 0xc8; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0xcc; // int32_t
		constexpr auto bUseConstantFactor = 0xd0; // bool
		constexpr auto TessellationAngle = 0xd4; // float
		constexpr auto bScreenSpaceTessellation = 0xd8; // bool
		constexpr auto PositionBinding = 0xe0; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x170; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x200; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x290; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x3b0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x440; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x4d0; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5f0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x680; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x710; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x7a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x830; // FNiagaraVariableAttributeBinding
	}

	namespace n_UAISense_Terror { // : UAISense
		constexpr auto _events = 0x90; // TArray<FAITerrorEvent>
	}

	namespace n_UUMGAtlantaEventsTab { // : UUMGBaseButtonWidget
		constexpr auto _eventId = 0x430; // FString
		constexpr auto HotTagText = 0x440; // UTextBlock*
		constexpr auto NewTagText = 0x448; // UTextBlock*
	}

	namespace n_APaperTileMapActor { // : AActor
		constexpr auto RenderComponent = 0x230; // UPaperTileMapComponent*
	}

	namespace n_UUMGAtlLandingPageStorefrontWidget { // : UUMGBaseLandingPageStorefrontWidget
		constexpr auto AtlantaRedeemCodeBtn = 0x400; // UUMGBaseButtonWidget*
	}

	namespace n_USafeZone { // : UContentWidget
		constexpr auto PadLeft = 0x140; // bool
		constexpr auto PadRight = 0x141; // bool
		constexpr auto PadTop = 0x142; // bool
		constexpr auto PadBottom = 0x143; // bool
	}

	namespace n_UMaxSameTargetQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _targetList = 0x90; // TMap<TWeakObjectPtr<AActor>, int32_t>
	}

	namespace n_UAudioCaptureComponent { // : USynthComponent
		constexpr auto JitterLatencyFrames = 0x6f0; // int32_t
	}

	namespace n_AgameMode { // : AGameModeBase
		constexpr auto MatchState = 0x2d8; // FName
		constexpr auto bDelayedStart = 0x2e4; // char : 1
		constexpr auto NumSpectators = 0x2e8; // int32_t
		constexpr auto NumPlayers = 0x2ec; // int32_t
		constexpr auto NumBots = 0x2f0; // int32_t
		constexpr auto MinRespawnDelay = 0x2f4; // float
		constexpr auto NumTravellingPlayers = 0x2f8; // int32_t
		constexpr auto EngineMessageClass = 0x300; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x308; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x318; // float
		constexpr auto MaxInactivePlayers = 0x31c; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x320; // bool
	}

	namespace n_ACamperInteractable { // : APlayerInteractable
		constexpr auto HealingInteractors = 0x350; // TArray<UInteractor*>
		constexpr auto _healInteractions = 0x360; // TArray<UChargeableInteractionDefinition*>
		constexpr auto _killCharge = 0x370; // UChargeableComponent*
		constexpr auto _snapOutOfItCharge = 0x378; // UChargeableComponent*
		constexpr auto _wakeUpCharge = 0x380; // UChargeableComponent*
		constexpr auto _crowDismissCharge = 0x388; // UChargeableComponent*
		constexpr auto _activator = 0x390; // UActivatorComponent*
		constexpr auto _killInteractor = 0x400; // UInteractor*
		constexpr auto _killInteractionZone = 0x408; // UBoxComponent*
		constexpr auto _killHealthyInteractionZone = 0x410; // USphereComponent*
		constexpr auto _mainInteractionZone = 0x418; // UBoxComponent*
		constexpr auto _healingInteractor1 = 0x420; // UInteractor*
		constexpr auto _selfInteractionsInteractor = 0x428; // UInteractor*
		constexpr auto _rootComponent = 0x430; // USceneComponent*
	}

	namespace n_UUMGAtlEventItemWidget { // : UMobileBaseUserWidget
		constexpr auto SquareImageBackground = 0x300; // UImage*
		constexpr auto SquareRarityBackground = 0x308; // UImage*
		constexpr auto SquareIcon = 0x310; // UImage*
		constexpr auto PortraitImageBackground = 0x318; // UImage*
		constexpr auto PortraitRarityBackground = 0x320; // UImage*
		constexpr auto PortraitIcon = 0x328; // UImage*
		constexpr auto NameText = 0x330; // UTextBlock*
		constexpr auto QuantityText = 0x338; // UTextBlock*
		constexpr auto PortraitCanvas = 0x340; // UCanvasPanel*
		constexpr auto SquareCanvas = 0x348; // UCanvasPanel*
		constexpr auto ContentTypeUIData = 0x350; // TArray<FEventItemsContentTypeUIData>
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
		constexpr auto Fraction = 0x64; // FExpressionInput
		constexpr auto LuminanceFactors = 0x80; // FLinearColor
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x38; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x40; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x44; // float
		constexpr auto EmitterOrigin = 0x48; // FVector
		constexpr auto EmitterRotation = 0x54; // FRotator
		constexpr auto ScreenAlignment = 0x60; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x61; // char : 1
		constexpr auto bKillOnDeactivate = 0x61; // char : 1
		constexpr auto bKillOnCompleted = 0x61; // char : 1
		constexpr auto SortMode = 0x62; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x63; // char : 1
		constexpr auto bRemoveHMDRoll = 0x63; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x63; // char : 1
		constexpr auto EmitterDuration = 0x64; // float
		constexpr auto SpawnRate = 0x68; // FRawDistributionFloat
		constexpr auto BurstList = 0x98; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa8; // float
		constexpr auto EmitterDelayLow = 0xac; // float
		constexpr auto bDelayFirstLoopOnly = 0xb0; // char : 1
		constexpr auto InterpolationMethod = 0xb1; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xb2; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xb2; // char : 1
		constexpr auto ParticleBurstMethod = 0xb3; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xb4; // char : 1
		constexpr auto bUseMaxDrawCount = 0xb4; // char : 1
		constexpr auto OpacitySourceMode = 0xb5; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xb6; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xb7; // char : 1
		constexpr auto SubImages_Horizontal = 0xb8; // int32_t
		constexpr auto SubImages_Vertical = 0xbc; // int32_t
		constexpr auto RandomImageTime = 0xc0; // float
		constexpr auto RandomImageChanges = 0xc4; // int32_t
		constexpr auto MacroUVPosition = 0xc8; // FVector
		constexpr auto MacroUVRadius = 0xd4; // float
		constexpr auto UVFlippingMode = 0xd8; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd9; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xda; // char : 1
		constexpr auto NormalsSphereCenter = 0xdc; // FVector
		constexpr auto AlphaThreshold = 0xe8; // float
		constexpr auto EmitterLoops = 0xec; // int32_t
		constexpr auto CutoutTexture = 0xf0; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf8; // int32_t
		constexpr auto EmitterDurationLow = 0xfc; // float
		constexpr auto NormalsCylinderDirection = 0x100; // FVector
		constexpr auto NamedMaterialOverrides = 0x110; // TArray<FName>
	}

	namespace n_UBTService_Patrol_PointOfInterest { // : UBTService_Patrol
		constexpr auto OnEnterPatrolRefreshPointsDelay = 0x158; // float
		constexpr auto BBMoveAroundPatrolLocation = 0x160; // FBlackboardKeySelector
		constexpr auto MoveAroundPatrolPointAboveStimulusStrength = 0x190; // float
	}

	namespace n_UGateBlockerEffect { // : UStatusEffect
		constexpr auto _blockGateLingeringTime = 0x350; // float
	}

	namespace n_ULightBurnableFlashlightTargetFXComponent { // : UFlashlightTargetFXComponent
		constexpr auto _burnable = 0x100; // ULightBurnable*
	}

	namespace n_USelfPreservation { // : UPerk
		constexpr auto _hitDistanceToTriggerPerkEffect = 0x3d0; // float [0x3]
		constexpr auto _selfPreservationEffectDuration = 0x3dc; // float [0x3]
	}

	namespace n_UK26PowerOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _k26ProjectileOutlineColour = 0xc0; // FLinearColor
		constexpr auto _isOutlineEnabled = 0xd0; // bool
		constexpr auto _isOnlyVisibleForKiller = 0xd1; // bool
	}

	namespace n_URendererOverrideSettings { // : UDeveloperSettings
		constexpr auto bSupportAllShaderPermutations = 0x48; // char : 1
		constexpr auto bForceRecomputeTangents = 0x48; // char : 1
	}

	namespace n_UUIDataManager { // : UGameInstanceSubsystem
		constexpr auto RarityMaterialMap = 0x38; // TMap<EItemRarity, UMaterialInterface*>
		constexpr auto RichTextStyleMap = 0x88; // TMap<FString, FTextBlockStyle>
		constexpr auto CurrencyUIDataMap = 0xd8; // TMap<ECurrencyType, FCurrencyProgressionUIData>
		constexpr auto ProgressionUIDataMap = 0x128; // TMap<EProgressionType, FCurrencyProgressionUIData>
	}

	namespace n_UUMGRitualRefreshButton { // : UUMGBaseButtonWidget
		constexpr auto RefreshCanvas = 0x430; // UCanvasPanel*
		constexpr auto RefreshSwitcher = 0x438; // UWidgetSwitcher*
	}

	namespace n_UMaterialExpressionSetMaterialAttributes { // : UMaterialExpression
		constexpr auto Inputs = 0x48; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x38; // FRawDistributionVector
		constexpr auto EnableX = 0x80; // char : 1
		constexpr auto EnableY = 0x80; // char : 1
		constexpr auto EnableZ = 0x80; // char : 1
	}

	namespace n_USubmixEffectTapDelayPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x88; // FSubmixEffectTapDelaySettings
	}

	namespace n_UARPin { // : UObject
		constexpr auto TrackedGeometry = 0x30; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x38; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UUMGBaseCountdownWidget { // : UMobileBaseUserWidget
		constexpr auto TimerTextBlock = 0x300; // UTextBlock*
		constexpr auto _timerThreshold = 0x308; // int32_t
		constexpr auto _timerColorBelowThreshold = 0x310; // FSlateColor
		constexpr auto _timerColorBeyondThreshold = 0x338; // FSlateColor
	}

	namespace n_ADBDGame_Menu { // : ADBDBaseGameMode
		constexpr auto StartWithSlasher = 0x358; // bool
		constexpr auto _partyFlowHandler = 0x360; // UAtlantaPartyFlowHandler*
		constexpr auto _matineeFadeActor = 0x370; // AMatineeActor*
		constexpr auto _matineeIntroActor = 0x378; // AMatineeActor*
		constexpr auto _matineeLoopActor = 0x380; // AMatineeActor*
	}

	namespace n_USourceEffectPhaserPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x80; // FSourceEffectPhaserSettings
	}

	namespace n_ADBDPlayerControllerBase { // : APlayerController
		constexpr auto _mainCharacter = 0x628; // ADBDPlayer*
	}

	namespace n_UGeneratorOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto _unrepairedAuraColor = 0x130; // FLinearColor
		constexpr auto _fullyRepairedAuraColor = 0x140; // FLinearColor
	}

	namespace n_UBasePlayerAttackSubAnimInstance { // : UPlayerAnimInstance
		constexpr auto _attackState = 0x4e8; // EAttackSubstate
		constexpr auto _direction = 0x4ec; // float
		constexpr auto _strafeAngle = 0x4f0; // float
		constexpr auto _isStrafe = 0x4f4; // bool
		constexpr auto _attackInPlayRate = 0x4f8; // float
		constexpr auto _attackIn = 0x500; // FAnimSequenceSelector
		constexpr auto _attackSwingPlayRate = 0x518; // float
		constexpr auto _attackSwing = 0x520; // FAnimSequenceSelector
		constexpr auto _attackMissPlayRate = 0x538; // float
		constexpr auto _attackMiss = 0x540; // FAnimSequenceSelector
		constexpr auto _attackHitPlayRate = 0x558; // float
		constexpr auto _attackHit = 0x560; // FAnimSequenceSelector
		constexpr auto _attackBounceOfWallPlayRate = 0x578; // float
		constexpr auto _attackBounceOfWall = 0x580; // FAnimSequenceSelector
		constexpr auto _firstPersonView = 0x5ac; // bool
	}

	namespace n_ANavigationObjectBase { // : AActor
		constexpr auto CapsuleComponent = 0x238; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x240; // UBillboardComponent*
		constexpr auto BadSprite = 0x248; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x250; // char : 1
	}

	namespace n_USpiesFromTheShadows { // : UPerk
		constexpr auto _cooldownDurationSecs = 0x3d0; // float
	}

	namespace n_UDeathBedAntiCampComponent { // : UActorComponent
		constexpr auto _anticampZoneDistance = 0x100; // FDBDTunableRowHandle
		constexpr auto _anticampZoneTimeToTrigger = 0x128; // FDBDTunableRowHandle
	}

	namespace n_UBlinkPowerPlayerComponent { // : UActorComponent
		constexpr auto _maxBlinkCharges = 0xe8; // FTunableStat
		constexpr auto _rechargeDuration = 0x168; // FTunableStat
		constexpr auto _chainBlinkDuration = 0x1e8; // FTunableStat
		constexpr auto _allowedInteractionSemancticsDuringChainBlink = 0x268; // FGameplayTagContainer
		constexpr auto _fatigueDuration = 0x288; // FTunableStat
		constexpr auto _fatigueChainBlinkPenalty = 0x308; // FTunableStat
		constexpr auto _fatigueAttackPenalty = 0x388; // FTunableStat
		constexpr auto _fatigueAttackMissPenaltyModifier = 0x408; // FGameplayTag
		constexpr auto _fatigueSpeedCurve = 0x418; // UCurveFloat*
		constexpr auto _powerState = 0x4a0; // EBlinkPowerState
		constexpr auto _blinkCharges = 0x4a4; // int32_t
		constexpr auto _wasCurrentChargeSetByRecharge = 0x4a8; // bool
		constexpr auto _chainBlinkTimer = 0x588; // UTimerObject*
		constexpr auto _cooldownTimer = 0x590; // UTimerObject*
		constexpr auto _rechargeTimer = 0x598; // UTimerObject*
	}

	namespace n_ULevelStreamingDynamic { // : ULevelStreaming
		constexpr auto bInitiallyLoaded = 0x160; // char : 1
		constexpr auto bInitiallyVisible = 0x160; // char : 1
	}

	namespace n_USingleClickInputBehavior { // : UAnyButtonInputBehavior
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_UAddon_TormentMode_20 { // : UItemAddon
		constexpr auto _lingerDuration = 0x298; // float
	}

	namespace n_UAkGeometryComponent { // : USceneComponent
		constexpr auto MeshType = 0x210; // AkMeshType
		constexpr auto LOD = 0x214; // int32_t
		constexpr auto StaticMeshSurfaceOverride = 0x218; // TMap<UMaterialInterface*, FAkGeometrySurfaceOverride>
		constexpr auto CollisionMeshSurfaceOverride = 0x268; // FAkGeometrySurfaceOverride
		constexpr auto bEnableDiffraction = 0x278; // char : 1
		constexpr auto bEnableDiffractionOnBoundaryEdges = 0x278; // char : 1
		constexpr auto AssociatedRoom = 0x280; // AActor*
		constexpr auto GeometryData = 0x298; // FAkGeometryData
	}

	namespace n_UGameMapsSettings { // : UObject
		constexpr auto LocalMapOptions = 0x30; // FString
		constexpr auto TransitionMap = 0x40; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x60; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x61; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x62; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x63; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x64; // bool
		constexpr auto GameInstanceClass = 0x68; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0xa8; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xc8; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xe8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0x108; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0x118; // TArray<FGameModeName>
	}

	namespace n_UAB_Menu_Slasher11_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x38; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x3c; // FVector
		constexpr auto SourceLocations = 0x48; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x58; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x5c; // char : 1
		constexpr auto bOrientMeshEmitters = 0x5c; // char : 1
		constexpr auto bInheritBoneVelocity = 0x5c; // char : 1
		constexpr auto InheritVelocityScale = 0x60; // float
		constexpr auto SkelMeshActorParamName = 0x64; // FName
		constexpr auto NumPreSelectedIndices = 0x70; // int32_t
	}

	namespace n_UZombieOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto _zombieCharacter = 0x130; // AZombieCharacter*
	}

	namespace n_UK26AnimInstance { // : UKillerAnimInstance
		constexpr auto _isUsingPower = 0x5a8; // bool
	}

	namespace n_UTwinOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _visibleColorForKiller = 0xc0; // FLinearColor
	}

	namespace n_UAnimationDataSourceRegistry { // : UObject
		constexpr auto DataSources = 0x30; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UAnimationSharingSetup { // : UObject
		constexpr auto SkeletonSetups = 0x30; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x40; // FAnimationSharingScalability
	}

	namespace n_UDBDEmblem_KillerMalicious { // : UDBDEmblem
		constexpr auto _remainingSurvivorHookStates = 0x118; // TMap<ACamperPlayer*, int32_t>
	}

	namespace n_ABP_Menu_Slasher26_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto BP_Audio_KLR_27 = 0x690; // UBP_Audio_KLR_26_C*
		constexpr auto CrowHead_Mesh = 0x698; // USkeletalMeshComponent*
	}

	namespace n_UNurseAnimInstance { // : UAnimInstance
		constexpr auto _isBlinkReady = 0x270; // bool
		constexpr auto _isChargingBlink = 0x271; // bool
		constexpr auto _isFullyCharged = 0x272; // bool
		constexpr auto _blinkSequence = 0x278; // UAnimSequence*
		constexpr auto _isChainBlinking = 0x280; // bool
		constexpr auto _isBlinking = 0x281; // bool
		constexpr auto _blinkPlayRate = 0x284; // float
		constexpr auto _cooldownSequence = 0x288; // UAnimSequence*
		constexpr auto _isInCooldown = 0x290; // bool
		constexpr auto _cooldownPlayRate = 0x294; // float
		constexpr auto _isChainBlinkAttacking = 0x298; // bool
		constexpr auto _isNurse = 0x299; // bool
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles { // : UAsyncActionLoadPrimaryAssetBase
		constexpr auto COMPLETED = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UGizmoAxisRotationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x60; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0x70; // float
		constexpr auto LastChange = 0x74; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0x7c; // FVector
		constexpr auto CurRotationOrigin = 0x88; // FVector
		constexpr auto InitialTransform = 0xa0; // FTransform
	}

	namespace n_UCrownPlayerComponent { // : USceneComponent
		constexpr auto _hasInteractedWithCrownPillarThisGame = 0x210; // bool
		constexpr auto _isCrownEventActive = 0x218; // FTagStateBool
	}

	namespace n_UDBDTooltipManager { // : UGameInstanceSubsystem
		constexpr auto _currentTooltip = 0x48; // UUserWidget*
	}

	namespace n_UUMGTallyCharacterProgressionBar { // : UMobileBaseUserWidget
		constexpr auto ProgressBar = 0x320; // UProgressBar*
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto Constant = 0x48; // FLinearColor
	}

	namespace n_UStateTagEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _gameplayTag = 0x48; // FGameplayTag
	}

	namespace n_AMedkit { // : ABaseCamperCollectable
		constexpr auto _akComponent = 0x518; // UAkComponent*
		constexpr auto _charger = 0x520; // UChargerComponent*
		constexpr auto _dustRingTemplate = 0x528; // UParticleSystem*
		constexpr auto _medkitGetAkEvent = 0x530; // UAkAudioEvent*
		constexpr auto _medkitDropAkEvent = 0x538; // UAkAudioEvent*
		constexpr auto _medkitBank = 0x540; // UAkAudioBank*
		constexpr auto _healOtherChargeMultiplier = 0x548; // float
	}

	namespace n_UPropertyValue { // : UObject
		constexpr auto Properties = 0x90; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0xa0; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xb0; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xc0; // FString
		constexpr auto PropertySetterName = 0xd0; // FName
		constexpr auto PropertySetterParameterDefaults = 0xe0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x130; // bool
		constexpr auto LeafPropertyClass = 0x138; // UObject*
		constexpr auto ValueBytes = 0x148; // TArray<char>
		constexpr auto PropCategory = 0x158; // EPropertyValueCategory
	}

	namespace n_UAnimSequence { // : UAnimSequenceBase
		constexpr auto NumFrames = 0xb0; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb8; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xe0; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x158; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x159; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x160; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x168; // int32_t
		constexpr auto RetargetSource = 0x16c; // FName
		constexpr auto Interpolation = 0x178; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x179; // bool
		constexpr auto RootMotionRootLock = 0x17a; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x17b; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x17c; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x17d; // bool
		constexpr auto AuthoredSyncMarkers = 0x180; // TArray<FAnimSyncMarker>
	}

	namespace n_UMaterialPerThemeSettings { // : UDataAsset
		constexpr auto _themeMap = 0x38; // TMap<FName, UMaterialPerThemeData*>
		constexpr auto _data = 0x88; // UMaterialPerThemeData*
	}

	namespace n_ARectLight { // : ALight
		constexpr auto RectLightComponent = 0x240; // URectLightComponent*
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x38; // FRawDistributionVector
		constexpr auto bInheritParent = 0x80; // char : 1
	}

	namespace n_UParticleModuleCollisionGPU { // : UParticleModuleCollisionBase
		constexpr auto Resilience = 0x38; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Friction = 0x98; // float
		constexpr auto RandomSpread = 0x9c; // float
		constexpr auto RandomDistribution = 0xa0; // float
		constexpr auto RadiusScale = 0xa4; // float
		constexpr auto RadiusBias = 0xa8; // float
		constexpr auto response = 0xac; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xad; // EParticleCollisionMode
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy { // : UObject
		constexpr auto Vertices = 0x30; // TArray<FVector>
		constexpr auto Normals = 0x40; // TArray<FVector>
		constexpr auto Indices = 0x50; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x60; // TArray<float>
		constexpr auto BoneData = 0x70; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x80; // int32_t
		constexpr auto MaxBoneWeights = 0x84; // int32_t
		constexpr auto SelfCollisionIndices = 0x88; // TArray<uint32_t>
	}

	namespace n_URichTextBlockImageSharedSizeDecorator { // : URichTextBlockImageDecorator
		constexpr auto Width = 0x38; // int32_t
		constexpr auto Height = 0x3c; // int32_t
	}

	namespace n_UClothingAssetCommon { // : UClothingAssetBase
		constexpr auto PhysicsAsset = 0x50; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x58; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb8; // UClothConfigBase*
		constexpr auto ClothLODData = 0xc0; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xd0; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xe0; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xf0; // TArray<FName>
		constexpr auto UsedBoneIndices = 0x100; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x110; // int32_t
		constexpr auto CustomData = 0x118; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x120; // FClothConfig_Legacy
	}

	namespace n_UMovieSceneVectorTrack { // : UMovieScenePropertyTrack
		constexpr auto NumChannelsUsed = 0x98; // int32_t
	}

	namespace n_UCameraHandlerComponent { // : UActorComponent
		constexpr auto OnSocketChanged = 0xb8; // FMulticastInlineDelegate
		constexpr auto _cameraMap = 0xd0; // TMap<EDBDCameraSocketID, AActor*>
		constexpr auto _delayedSocketID = 0x120; // EDBDCameraSocketID
		constexpr auto _currentSocketID = 0x121; // EDBDCameraSocketID
		constexpr auto _manualZoomAllowPerkModifiers = 0x169; // bool
		constexpr auto _manualZoomCurveFloat = 0x170; // UCurveFloat*
		constexpr auto _cameraAttachmentSocket = 0x178; // FName
		constexpr auto _cameraAttachmentComponent = 0x188; // USceneComponent*
		constexpr auto _isFOVSystemActive = 0x198; // bool
	}

	namespace n_UBTDecorator { // : UBTAuxiliaryNode
		constexpr auto bInverseCondition = 0x68; // char : 1
		constexpr auto FlowAbortMode = 0x6c; // EBTFlowAbortMode
	}

	namespace n_UMultiSceneComponentPointProvider { // : UPointsProvider
		constexpr auto _sceneReferences = 0x30; // TArray<FComponentReference>
		constexpr auto _sceneComponents = 0x40; // TArray<USceneComponent*>
	}

	namespace n_UDeliverance { // : UPerk
		constexpr auto _brokenEffectDurationPerLevel = 0x3d0; // float [0x3]
	}

	namespace n_USetBearTrap { // : USetTrapInteraction
		constexpr auto _enterMontageIDForBeartrap = 0x738; // FName
		constexpr auto _udpateMontageIDForBeartrap = 0x744; // FName
		constexpr auto _updateSequenceForBeartrap = 0x750; // UAnimSequence*
		constexpr auto _exitMontageForIDBeartrap = 0x758; // FName
		constexpr auto _cancelExitMontage = 0x764; // FName
	}

	namespace n_UEditableTextBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextBoxStyle = 0x38; // FEditableTextBoxStyle
	}

	namespace n_USourceEffectChorusPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x88; // FSourceEffectChorusSettings
	}

	namespace n_UBTDecorator_IsTunable { // : UBTDecorator_TickableBase
		constexpr auto Operator = 0x70; // ETunableComparison
		constexpr auto TunableValue = 0x74; // FAITunableParameter
		constexpr auto CompareToValue = 0x84; // float
	}

	namespace n_ABP_Menu_Slasher13_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_14 = 0x698; // UBP_Audio_KLR_13_C*
		constexpr auto RedStainComponent = 0x6a0; // UBP_RedStainComponent_C*
		constexpr auto Show_Sword_WPO_964716F24F8255A0C9F98FA0967E8ECF = 0x6a8; // float
		constexpr auto Show_Sword_Shard_Disappear_964716F24F8255A0C9F98FA0967E8ECF = 0x6ac; // float
		constexpr auto Show_Sword_Sword_Appear_964716F24F8255A0C9F98FA0967E8ECF = 0x6b0; // float
		constexpr auto Show_Sword__Direction_964716F24F8255A0C9F98FA0967E8ECF = 0x6b4; // ETimelineDirection
		constexpr auto Show Sword = 0x6b8; // UTimelineComponent*
		constexpr auto Timeline_2_Size_548F5340441650D05914669F2F45DC7E = 0x6c0; // FVector
		constexpr auto Timeline_2_Particle_Location_548F5340441650D05914669F2F45DC7E = 0x6cc; // FVector
		constexpr auto Timeline_2__Direction_548F5340441650D05914669F2F45DC7E = 0x6d8; // ETimelineDirection
		constexpr auto Timeline_3 = 0x6e0; // UTimelineComponent*
		constexpr auto Make_Sword_Disappear_Shard_Size_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x6e8; // FVector
		constexpr auto Make_Sword_Disappear_Particle_Position_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x6f4; // FVector
		constexpr auto Make_Sword_Disappear_WPO_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x700; // float
		constexpr auto Make_Sword_Disappear_Shard_Appear_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x704; // float
		constexpr auto Make_Sword_Disappear_Weapon_Disappear_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x708; // float
		constexpr auto Make_Sword_Disappear__Direction_E08D4B9E409A9213BEBDBD84EE0E3709 = 0x70c; // ETimelineDirection
		constexpr auto Make Sword Disappear = 0x710; // UTimelineComponent*
		constexpr auto SwordShouldBeVisible = 0x718; // bool
	}

	namespace n_UDBDScrollBox { // : UScrollBox
		constexpr auto _useControllerScroll = 0x908; // bool
		constexpr auto _shouldScrollOnMouseOver = 0x909; // bool
		constexpr auto _scrollSpeed = 0x90c; // float
		constexpr auto _displayPrompt = 0x910; // UCoreInputPromptTextWidget*
		constexpr auto _displayPromptText = 0x918; // FText
		constexpr auto _showDisplayPrompt = 0x930; // EShowScrollDisplayPrompt
	}

	namespace n_UAB_Menu_Slasher12_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2b0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x2d0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SpringBone = 0x2f0; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x428; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x4a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x540; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x5b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x658; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x6d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x708; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x7b8; // bool
		constexpr auto Is Online = 0x7b9; // bool
	}

	namespace n_ULightBurnable { // : UActorComponent
		constexpr auto OnBurnChargeCompleteEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto FirecrackerLineOfSightIgnoredActors = 0xe0; // TArray<AActor*>
		constexpr auto _chargeable = 0xf0; // UChargeableComponent*
		constexpr auto _flashlightable = 0xf8; // UFlashlightableComponent*
		constexpr auto _firecrackerEffectHandler = 0x100; // UFirecrackerEffectHandlerComponent*
		constexpr auto _isBurning = 0x108; // bool
	}

	namespace n_USubscriptionRewardDataAsset { // : UPrimaryDataAsset
		constexpr auto Data = 0x38; // TMap<ESubscriptionRewardType, FSubscriptionRewardTypeData>
	}

	namespace n_ASceneCapture { // : AActor
		constexpr auto MeshComp = 0x230; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x238; // USceneComponent*
	}

	namespace n_UTerrorRadiusIndicatorWidget { // : UNoiseIndicatorWidget
		constexpr auto _anchorY = 0x348; // float
	}

	namespace n_ABlinkPowerItem { // : ACollectable
		constexpr auto _powerInteractor = 0x4d0; // UInteractor*
		constexpr auto _blinkChargeable = 0x4d8; // UChargeableComponent*
	}

	namespace n_UAppraisal { // : UPerk
		constexpr auto _chestSearchSpeedMultiplier = 0x3d0; // float [0x3]
	}

	namespace n_UMaterialExpressionParticleSubUV { // : UMaterialExpressionTextureSample
		constexpr auto bBlend = 0x108; // char : 1
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto AttenuationSettings = 0x50; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x58; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f8; // char : 1
	}

	namespace n_UAnimNotify_PlaySound { // : UAnimNotify
		constexpr auto Sound = 0x40; // USoundBase*
		constexpr auto VolumeMultiplier = 0x48; // float
		constexpr auto PitchMultiplier = 0x4c; // float
		constexpr auto bFollow = 0x50; // char : 1
		constexpr auto AttachName = 0x54; // FName
	}

	namespace n_UAimOffsetSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _pitch = 0x4f0; // float
		constexpr auto _yaw = 0x4f4; // float
		constexpr auto _yawInterpolated = 0x4f8; // float
		constexpr auto _allowLookAt = 0x4fc; // bool
		constexpr auto _isUsingAimItem = 0x4fd; // bool
		constexpr auto _isInjured = 0x4fe; // bool
		constexpr auto _isCrawling = 0x4ff; // bool
		constexpr auto _isIdle = 0x500; // bool
		constexpr auto _isDrasticYawChangeDetected = 0x501; // bool
		constexpr auto _yawInterpolationSpeed = 0x504; // float
		constexpr auto _yawDeadzoneStart = 0x508; // float
		constexpr auto _yawClampValue = 0x50c; // float
		constexpr auto _yawDrasticChangeUpperLimit = 0x510; // float
		constexpr auto _yawDrasticChangeLowerLimit = 0x514; // float
		constexpr auto _yawDrasticChangeInterpolationSpeed = 0x518; // float
		constexpr auto _yawInterpolateEaseIn = 0x520; // UCurveFloat*
		constexpr auto _yawInterpolateEaseOut = 0x528; // UCurveFloat*
		constexpr auto _yawInterpolationEaseInLength = 0x530; // float
		constexpr auto _yawInterpolationEaseOutDistance = 0x534; // float
		constexpr auto _isYawInDeadZone = 0x538; // bool
		constexpr auto _currentTargetYaw = 0x53c; // float
		constexpr auto _yawAcceleration = 0x540; // float
		constexpr auto _yawAccelerationTime = 0x544; // float
	}

	namespace n_UUMGAtlantaNavigationScreen { // : UMobileBaseUserWidget
		constexpr auto BankAndPlayerInfoWidget = 0x300; // UUMGBankAndPlayerInfoWidget*
		constexpr auto TextButtonStart = 0x308; // UTextBlock*
		constexpr auto PlayModeSelectionVisibility = 0x310; // ESlateVisibility
		constexpr auto CharacterInfoVisibility = 0x311; // ESlateVisibility
		constexpr auto BackButtonVisibility = 0x312; // ESlateVisibility
		constexpr auto MenuButtonsVisibility = 0x313; // ESlateVisibility
		constexpr auto ButtonRoleVisibility = 0x314; // ESlateVisibility
		constexpr auto ButtonRole = 0x318; // UButton*
		constexpr auto BottomRightWidgetSwitcher = 0x320; // UWidgetSwitcher*
		constexpr auto PartyPlayerSlots = 0x328; // UUMGPartySlotsWidget*
		constexpr auto PartyCountdownLarge = 0x330; // UUMGBaseCountdownWidget*
		constexpr auto _partyMembers = 0x338; // TArray<FPartyMemberUIData>
	}

	namespace n_UBTTask_SetIsChased { // : UBTTaskNode
		constexpr auto ToSetValue = 0x78; // bool
	}

	namespace n_ARadialForceActor { // : ARigidBodyBase
		constexpr auto ForceComponent = 0x230; // URadialForceComponent*
	}

	namespace n_UNoOneLeftBehind { // : UPerk
		constexpr auto _speedBoostEffect = 0x3d0; // TArray<float>
	}

	namespace n_UWiggleComponent { // : UActorComponent
		constexpr auto _wiggleProgress = 0xc0; // UChargeableComponent*
		constexpr auto _killerWigglingFrom = 0xc8; // ASlasherPlayer*
		constexpr auto _inputComponent = 0xd0; // UInputComponent*
		constexpr auto _wiggleInputLockTime = 0x1c0; // float
	}

	namespace n_UUMGBaseFriendListContextualMenuWidget { // : UMobileBaseUserWidget
		constexpr auto InviteToPartyButton = 0x318; // UUMGFriendButtonWidget*
		constexpr auto MuteButton = 0x320; // UUMGFriendButtonWidget*
		constexpr auto UnmuteButton = 0x328; // UUMGFriendButtonWidget*
		constexpr auto RemoveFriendButton = 0x330; // UUMGFriendButtonWidget*
		constexpr auto RemovePlayerFromPartyButton = 0x338; // UUMGFriendButtonWidget*
		constexpr auto TransitionOutAnimationSound = 0x350; // UAkAudioEvent*
	}

	namespace n_UHatchetLauncher { // : UKillerProjectileLauncher
		constexpr auto _angleOffset = 0x180; // FRotator
		constexpr auto _angleOffsetCurve = 0x190; // UCurveFloat*
		constexpr auto _speedCurve = 0x198; // UCurveFloat*
		constexpr auto _hatchetSpeedWhenThrowFullyCharged = 0x1a0; // float
		constexpr auto _hatchetPitchCurve = 0x1a8; // UCurveFloat*
		constexpr auto _hatchetMinAngleOffset = 0x1b0; // FDBDTunableRowHandle
		constexpr auto _hatchetMaxAngleOffset = 0x1d8; // FDBDTunableRowHandle
		constexpr auto _hatchetMinSpeed = 0x200; // FDBDTunableRowHandle
		constexpr auto _hatchetMaxSpeed = 0x228; // FDBDTunableRowHandle
		constexpr auto _hatchetLaunchPitchMin = 0x250; // FDBDTunableRowHandle
		constexpr auto _hatchetLaunchPitchMax = 0x278; // FDBDTunableRowHandle
	}

	namespace n_UBloodOrbConfiguratorComponent { // : UActorComponent
		constexpr auto _bloodOrbClass = 0xb8; // ABloodOrb*
		constexpr auto _bloodOrbDropGameEvents = 0xc0; // TArray<FGameEventBloodOrbDropParams>
		constexpr auto _fadeDuration = 0xd0; // float
		constexpr auto _initialFadeOutDelay = 0xd4; // float
		constexpr auto _bloodOrbAuraColor = 0xd8; // FLinearColor
		constexpr auto _bloodOrbAttractedAuraColor = 0xe8; // FLinearColor
		constexpr auto _bloodOrbVisibilityRangeInterpolationSpeed = 0xf8; // float
		constexpr auto _mobileBloodOrbRendererClass = 0x100; // AMobileBloodOrbRenderer*
	}

	namespace n_AMenuMeatHook { // : AActor
		constexpr auto _charmSpawnerComponent = 0x240; // UCharmSpawnerComponent*
	}

	namespace n_UEditableGameplayTagQuery { // : UObject
		constexpr auto UserDescription = 0x30; // FString
		constexpr auto RootExpression = 0x50; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x58; // FGameplayTagQuery
	}

	namespace n_ABP_Menu_CamperMale12_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UInputComponent { // : UActorComponent
		constexpr auto CachedKeyToActionInfo = 0x128; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UAvoidanceManager { // : UObject
		constexpr auto DefaultTimeToLive = 0x38; // float
		constexpr auto LockTimeAfterAvoid = 0x3c; // float
		constexpr auto LockTimeAfterClean = 0x40; // float
		constexpr auto DeltaTimeToPredict = 0x44; // float
		constexpr auto ArtificialRadiusExpansion = 0x48; // float
		constexpr auto TestHeightDifference = 0x4c; // float
		constexpr auto HeightCheckMargin = 0x50; // float
	}

	namespace n_UDBDEmblem { // : UActorComponent
		constexpr auto _points = 0xb8; // float
		constexpr auto _progressionPoints = 0xc0; // TArray<FProgressionPoints>
		constexpr auto _definition = 0xd0; // FDataTableRowHandle
	}

	namespace n_UGhostStalkPowerComponent { // : UActorComponent
		constexpr auto _stalkerComponent = 0xe8; // UStalkerComponent*
		constexpr auto _ghostStalkedComponentClassPtr = 0xf0; // TSoftClassPtr<UObject>
		constexpr auto _crouchAttackRequiredTimeSeconds = 0x120; // float
		constexpr auto _debugMode = 0x130; // bool
	}

	namespace n_UUMGAtlantaPromoCodeRewardItemWidget { // : UMobileBaseUserWidget
		constexpr auto CurrencyItem = 0x300; // UPanelWidget*
		constexpr auto CurrencyIcon = 0x308; // UImage*
		constexpr auto CurrencyName = 0x310; // UTextBlock*
		constexpr auto CurrencyAmount = 0x318; // UTextBlock*
		constexpr auto ItemRarityTint = 0x320; // UImage*
		constexpr auto RevealAnimationSmall = 0x328; // UWidgetAnimation*
		constexpr auto CustomizationItem = 0x330; // UPanelWidget*
		constexpr auto CustomizationIcon = 0x338; // UImage*
		constexpr auto CustomizationName = 0x340; // UTextBlock*
		constexpr auto CustomizationRarityTint = 0x348; // UImage*
		constexpr auto RevealAnimationLarge = 0x350; // UWidgetAnimation*
		constexpr auto CharacterPanel = 0x358; // UPanelWidget*
		constexpr auto CharacterPortrait = 0x360; // UImage*
		constexpr auto characterName = 0x368; // UTextBlock*
		constexpr auto TicketPanel = 0x370; // UPanelWidget*
		constexpr auto TicketRarityTint = 0x378; // UImage*
		constexpr auto TicketIcon = 0x380; // UImage*
		constexpr auto TicketName = 0x388; // UTextBlock*
		constexpr auto TicketAmount = 0x390; // UTextBlock*
		constexpr auto OfferingPanel = 0x398; // UPanelWidget*
		constexpr auto OfferingRarityTint = 0x3a0; // UImage*
		constexpr auto OfferingIcon = 0x3a8; // UImage*
		constexpr auto OfferingName = 0x3b0; // UTextBlock*
		constexpr auto OfferingAmount = 0x3b8; // UTextBlock*
	}

	namespace n_UBTService_FindInteractor_MeatHook { // : UBTService_FindInteractor
		constexpr auto StatusFilter = 0x218; // EFindInteractableMeatHookStatus
		constexpr auto AllyDangerStateGoalWeight = 0x21c; // FAITunableParameter
		constexpr auto BotDangerStateGoalWeight = 0x22c; // FAITunableParameter
		constexpr auto BotInjuredStateGoalWeight = 0x23c; // FAITunableParameter
		constexpr auto HumanAllyHookedGoalWeight = 0x24c; // FAITunableParameter
		constexpr auto MaxHookTimeGoalWeight = 0x25c; // FAITunableParameter
		constexpr auto IncapacitatedAlliesGoalWeight = 0x26c; // FAITunableParameter
	}

	namespace n_UKillerIntroComponent { // : UActorComponent
		constexpr auto _percentOfCameraPanInProgressRequiredToHideKiller = 0xb8; // float
		constexpr auto _cameraPanInAmountToSquish = 0xbc; // float
		constexpr auto _cameraPanInHidingStrategy = 0xc0; // EFPVTransitionStrategy
		constexpr auto _startKillerIntroDelay = 0xc4; // float
	}

	namespace n_APlayerStart { // : ANavigationObjectBase
		constexpr auto PlayerStartTag = 0x258; // FName
	}

	namespace n_ULevelSequencePlayer { // : UMovieSceneSequencePlayer
		constexpr auto OnCameraCut = 0x890; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneSpawnTrack { // : UMovieSceneTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x70; // FGuid
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes { // : UMaterialExpression
		constexpr auto A = 0x48; // FMaterialAttributesInput
		constexpr auto B = 0x68; // FMaterialAttributesInput
		constexpr auto alpha = 0x88; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0xa4; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0xa5; // EMaterialAttributeBlend
	}

	namespace n_UCartersSparkComponent { // : UActorComponent
		constexpr auto _staticBlastEnabled = 0xb8; // bool
		constexpr auto _totallyInsanePlayers = 0x148; // TArray<ADBDPlayer*>
		constexpr auto _owningPlayer = 0x158; // ADBDPlayer*
	}

	namespace n_ASeasonManager { // : AActor
		constexpr auto _gameInstance = 0x230; // UDBDGameInstance*
	}

	namespace n_UUserDefinedStruct { // : UScriptStruct
		constexpr auto Status = 0xc8; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xcc; // FGuid
	}

	namespace n_UMovieSceneMaterialTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_ATriggerBase { // : AActor
		constexpr auto CollisionComponent = 0x230; // UShapeComponent*
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto lifetime = 0x38; // FRawDistributionFloat
	}

	namespace n_UBTDecorator_IsLocationInPressureZone { // : UBTDecorator_TickableBase
		constexpr auto BBAtLocation = 0x70; // FBlackboardKeySelector
	}

	namespace n_USourceEffectRingModulationPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x84; // FSourceEffectRingModulationSettings
	}

	namespace n_UFSM_HasStateRanForXSecondsCondition { // : UFSM_Condition
		constexpr auto _minTimeInSecondsToSatisfyCondition = 0x38; // FDBDTunableRowHandle
	}

	namespace n_UGMAdaptiveShadowMapSourceSpot { // : UGMAdaptiveShadowMapSource
		constexpr auto _spotLightComponent = 0x2f8; // USpotLightComponent*
	}

	namespace n_USourceEffectMidSideSpreaderPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UHexUndying { // : UHexPerk
		constexpr auto _revealAuraDistanceFromTotem = 0x498; // float [0x3]
	}

	namespace n_USkyAtmosphereComponent { // : USceneComponent
		constexpr auto TransformMode = 0x210; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x214; // float
		constexpr auto GroundAlbedo = 0x218; // FColor
		constexpr auto AtmosphereHeight = 0x21c; // float
		constexpr auto MultiScatteringFactor = 0x220; // float
		constexpr auto RayleighScatteringScale = 0x224; // float
		constexpr auto RayleighScattering = 0x228; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x238; // float
		constexpr auto MieScatteringScale = 0x23c; // float
		constexpr auto MieScattering = 0x240; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x250; // float
		constexpr auto MieAbsorption = 0x254; // FLinearColor
		constexpr auto MieAnisotropy = 0x264; // float
		constexpr auto MieExponentialDistribution = 0x268; // float
		constexpr auto OtherAbsorptionScale = 0x26c; // float
		constexpr auto OtherAbsorption = 0x270; // FLinearColor
		constexpr auto OtherTentDistribution = 0x280; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x28c; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x29c; // float
		constexpr auto HeightFogContribution = 0x2a0; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x2a4; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2cc; // FGuid
	}

	namespace n_UUMGStalkingStatusEffectUI { // : UMobileBaseUserWidget
		constexpr auto StalkedCanvas = 0x300; // UCanvasPanel*
		constexpr auto StalkingFillFull = 0x308; // UImage*
		constexpr auto StalkingFillLines = 0x310; // UImage*
		constexpr auto StalkingRedBackground = 0x318; // UImage*
		constexpr auto StalkingStartAnimationName = 0x320; // FName
	}

	namespace n_UBoneSocketLocalVelocityEvaluator { // : UActorComponent
		constexpr auto _meshComponent = 0xb8; // USkeletalMeshComponent*
		constexpr auto _trackedBoneSocketNames = 0xc0; // TArray<FName>
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch { // : UEditableGameplayTagQueryExpression
		constexpr auto Tags = 0x30; // FGameplayTagContainer
	}

	namespace n_UAkAssetDataSwitchContainer { // : UAkAssetDataWithMedia
		constexpr auto SwitchContainers = 0x90; // TArray<UAkAssetDataSwitchContainerData*>
		constexpr auto DefaultGroupValue = 0xa0; // UAkGroupValue*
	}

	namespace n_ASpotLight { // : ALight
		constexpr auto SpotLightComponent = 0x240; // USpotLightComponent*
	}

	namespace n_UUMGControlTypeWidget { // : UMobileBaseUserWidget
		constexpr auto Button = 0x300; // UUMGBaseButtonWidget*
		constexpr auto MoveTextHalfScreenCanvas = 0x308; // UTextBlock*
		constexpr auto AimTextHalfScreenCanvas = 0x310; // UTextBlock*
		constexpr auto MoveTextFullScreenCanvas = 0x318; // UTextBlock*
		constexpr auto AimTextFullScreenCanvas = 0x320; // UTextBlock*
	}

	namespace n_UCombineMeshesToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bDeleteSourceActors = 0x58; // bool
	}

	namespace n_UParticleModuleVectorFieldGlobal { // : UParticleModuleVectorFieldBase
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x38; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x3c; // float
		constexpr auto GlobalVectorFieldTightness = 0x40; // float
	}

	namespace n_URuntimeVirtualTexture { // : UObject
		constexpr auto MaterialType = 0x30; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x31; // bool
		constexpr auto bEnable = 0x32; // bool
		constexpr auto bClearTextures = 0x33; // bool
		constexpr auto bSinglePhysicalSpace = 0x34; // bool
		constexpr auto bPrivateSpace = 0x35; // bool
		constexpr auto bEnableScalability = 0x36; // bool
		constexpr auto Size = 0x38; // int32_t
		constexpr auto TileCount = 0x3c; // int32_t
		constexpr auto TileSize = 0x40; // int32_t
		constexpr auto TileBorderSize = 0x44; // int32_t
		constexpr auto StreamLowMips = 0x48; // int32_t
		constexpr auto StreamingTexture = 0x50; // URuntimeVirtualTextureStreamingProxy*
		constexpr auto bEnableCompressCrunch = 0x58; // bool
		constexpr auto RemoveLowMips = 0x5c; // int32_t
	}

	namespace n_UInterruptionDefinition { // : USceneComponent
		constexpr auto InterruptionID = 0x210; // FName
		constexpr auto _usesWorldCoordinates = 0x21c; // bool
		constexpr auto _snapInterruptor = 0x21d; // bool
		constexpr auto _interruptionSnapPointForInterruptor = 0x220; // FTransform
		constexpr auto _animationMontageToPlayOnInterruptionEnterForInterruptor = 0x250; // FAnimationMontageDescriptor
		constexpr auto _animationMontageToPlayOnInterruptionForInterruptorNew = 0x270; // FAnimationMontageDescriptor
		constexpr auto _animationMontageToPlayOnInterruptionForInterrupteeNew = 0x290; // FAnimationMontageDescriptor
		constexpr auto _pickUpOnInterrupt = 0x2b0; // bool
		constexpr auto _canInterruptWhileCarrying = 0x2b1; // bool
		constexpr auto _useMontageFollower = 0x2b2; // bool
		constexpr auto _maxHeightDeltaBetweenCharacters = 0x2b4; // float
		constexpr auto _interruptionScoreEvent = 0x2b8; // FGameplayTag
	}

	namespace n_UAB_Menu_Slasher19_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x2b0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x350; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3c8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x468; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto Role Selected = 0x558; // bool
		constexpr auto Is Online = 0x559; // bool
	}

	namespace n_USizeBox { // : UContentWidget
		constexpr auto WidthOverride = 0x150; // float
		constexpr auto HeightOverride = 0x154; // float
		constexpr auto MinDesiredWidth = 0x158; // float
		constexpr auto MinDesiredHeight = 0x15c; // float
		constexpr auto MaxDesiredWidth = 0x160; // float
		constexpr auto MaxDesiredHeight = 0x164; // float
		constexpr auto MinAspectRatio = 0x168; // float
		constexpr auto MaxAspectRatio = 0x16c; // float
		constexpr auto bOverride_WidthOverride = 0x170; // char : 1
		constexpr auto bOverride_HeightOverride = 0x170; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x170; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x170; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x170; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x170; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x170; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x170; // char : 1
	}

	namespace n_UAkComponent { // : UAkGameObject
		constexpr auto bUseSpatialAudio = 0x230; // bool
		constexpr auto OcclusionCollisionChannel = 0x238; // ECollisionChannel
		constexpr auto EnableSpotReflectors = 0x23c; // char : 1
		constexpr auto EarlyReflectionAuxBus = 0x240; // UAkAuxBus*
		constexpr auto EarlyReflectionAuxBusName = 0x248; // FString
		constexpr auto EarlyReflectionOrder = 0x258; // int32_t
		constexpr auto EarlyReflectionBusSendGain = 0x25c; // float
		constexpr auto EarlyReflectionMaxPathLength = 0x260; // float
		constexpr auto roomReverbAuxBusGain = 0x264; // float
		constexpr auto diffractionMaxEdges = 0x268; // int32_t
		constexpr auto diffractionMaxPaths = 0x26c; // int32_t
		constexpr auto diffractionMaxPathLength = 0x270; // float
		constexpr auto DrawFirstOrderReflections = 0x274; // char : 1
		constexpr auto DrawSecondOrderReflections = 0x274; // char : 1
		constexpr auto DrawHigherOrderReflections = 0x274; // char : 1
		constexpr auto DrawDiffraction = 0x274; // char : 1
		constexpr auto StopWhenOwnerDestroyed = 0x278; // bool
		constexpr auto AttenuationScalingFactor = 0x27c; // float
		constexpr auto OcclusionRefreshInterval = 0x280; // float
		constexpr auto bUseReverbVolumes = 0x284; // bool
		constexpr auto ShouldTransmitRelativeAngle = 0x285; // bool
		constexpr auto OcclusionAffect = 0x288; // float
		constexpr auto MaxDistance = 0x28c; // float
	}

	namespace n_UCustomDepthOutlineRenderStrategy { // : UBaseOutlineRenderStrategy
		constexpr auto _replacementMaterial = 0x70; // UMaterialInterface*
		constexpr auto _translucentCopies = 0x78; // TArray<UBatchMeshCommands*>
	}

	namespace n_ULandscapeSplineSegment { // : UObject
		constexpr auto Connections = 0x30; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x60; // FInterpCurveVector
		constexpr auto Points = 0x78; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x88; // FBox
		constexpr auto LocalMeshComponents = 0xa8; // TArray<USplineMeshComponent*>
	}

	namespace n_UPromoPackContentDataAsset { // : UPrimaryDataAsset
		constexpr auto Data = 0x38; // TMap<EPromoPackContentType, FPromoPackContentTypeData>
	}

	namespace n_UAkWwiseTreeSelector { // : UWidget
		constexpr auto OnSelectionChanged = 0x128; // FMulticastInlineDelegate
		constexpr auto OnItemDragged = 0x138; // FMulticastInlineDelegate
	}

	namespace n_UHasEventHappenedEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _firstGameEvent = 0x60; // FGameplayTag
	}

	namespace n_ABaseProjectile { // : AActor
		constexpr auto OnImpactAINoiseEventRange = 0x230; // float
		constexpr auto _multicastLaunch = 0x278; // bool
		constexpr auto _allowMultipleHits = 0x279; // bool
		constexpr auto _semanticGameplayTags = 0x280; // FGameplayTagContainer
		constexpr auto _notifyClientOfServerHitValidationResult = 0x2a0; // bool
		constexpr auto _replicationComponent = 0x2a8; // UBaseProjectileReplicationComponent*
	}

	namespace n_ADBDObserverPlayer { // : ACharacter
		constexpr auto _playerData = 0x4d0; // UDBDPlayerData*
	}

	namespace n_UNiagaraDataInterfaceCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto Curve = 0x60; // FRichCurve
	}

	namespace n_UEventGeneratorComponent { // : UEventObjectComponent
		constexpr auto _updateOultineForSurvivor = 0xc8; // bool
		constexpr auto _updateOultineForSlasher = 0xc9; // bool
	}

	namespace n_UUMGSettingTutorialContextWidget { // : UUMGSettingContextWidget
		constexpr auto SurvivorTutorialButton = 0x318; // UUMGSettingContextButton*
		constexpr auto KillerTutorialButton = 0x320; // UUMGSettingContextButton*
		constexpr auto SurvivorCinematicButton = 0x328; // UUMGSettingContextButton*
		constexpr auto KillerCinematicButton = 0x330; // UUMGSettingContextButton*
		constexpr auto LoreCinematicButton = 0x338; // UUMGSettingContextButton*
	}

	namespace n_UButton { // : UContentWidget
		constexpr auto Style = 0x140; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x148; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3f0; // FLinearColor
		constexpr auto BackgroundColor = 0x400; // FLinearColor
		constexpr auto ClickMethod = 0x410; // EButtonClickMethod
		constexpr auto TouchMethod = 0x411; // EButtonTouchMethod
		constexpr auto PressMethod = 0x412; // EButtonPressMethod
		constexpr auto IsFocusable = 0x413; // bool
		constexpr auto OnClicked = 0x418; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x428; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x438; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x448; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x458; // FMulticastInlineDelegate
		constexpr auto OnLongPress = 0x468; // FMulticastInlineDelegate
		constexpr auto LongPressTimerHandle = 0x478; // FTimerHandle
	}

	namespace n_UBTService_PushObjectFocus { // : UBTService
		constexpr auto BBFocusObj = 0x78; // FBlackboardKeySelector
	}

	namespace n_UBlightPowerStateHolding { // : UBlightPowerState
		constexpr auto _secondaryInteractionProperties = 0x180; // FSecondaryInteractionProperties
		constexpr auto _allowNavigation = 0x1b8; // bool
		constexpr auto _dashSpeedForProjection = 0x1bc; // float
	}

	namespace n_UTormentModeCooldownInteraction { // : UInteractionDefinition
		constexpr auto _tormentModeCooldownTime = 0x5b0; // FDBDTunableRowHandle
		constexpr auto _tormentModeCancelWalkSpeed = 0x5d8; // FDBDTunableRowHandle
		constexpr auto _normalWalkSpeed = 0x600; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
	}

	namespace n_UFlurryComboScoreComponent { // : UActorComponent
		constexpr auto _comboScore = 0xd4; // float
		constexpr auto _timeForCombo = 0xd8; // FDBDTunableRowHandle
		constexpr auto _baseKnifeComboScore = 0x100; // FDBDTunableRowHandle
		constexpr auto _maximumKnifeMultiplier = 0x128; // FDBDTunableRowHandle
		constexpr auto _fillLacerationComboScore = 0x150; // FDBDTunableRowHandle
		constexpr auto _longRangeThreshold = 0x178; // FDBDTunableRowHandle
		constexpr auto _closeRangeScoreMultiplier = 0x1a0; // FDBDTunableRowHandle
		constexpr auto _longRangeScoreMultiplier = 0x1c8; // FDBDTunableRowHandle
		constexpr auto _thresholds = 0x1f0; // TArray<float>
		constexpr auto _thresholdsScoreForAudio = 0x200; // TArray<float>
		constexpr auto _comboScoreEvents = 0x210; // TArray<FGameplayTag>
	}

	namespace n_UCameraShake { // : UObject
		constexpr auto bSingleInstance = 0x30; // char : 1
		constexpr auto OscillationDuration = 0x34; // float
		constexpr auto OscillationBlendInTime = 0x38; // float
		constexpr auto OscillationBlendOutTime = 0x3c; // float
		constexpr auto RotOscillation = 0x40; // FROscillator
		constexpr auto LocOscillation = 0x64; // FVOscillator
		constexpr auto FOVOscillation = 0x88; // FFOscillator
		constexpr auto AnimPlayRate = 0x94; // float
		constexpr auto AnimScale = 0x98; // float
		constexpr auto AnimBlendInTime = 0x9c; // float
		constexpr auto AnimBlendOutTime = 0xa0; // float
		constexpr auto RandomAnimSegmentDuration = 0xa4; // float
		constexpr auto Anim = 0xa8; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0xb0; // char : 1
		constexpr auto CameraOwner = 0xc8; // APlayerCameraManager*
		constexpr auto ShakeScale = 0x158; // float
		constexpr auto OscillatorTimeRemaining = 0x15c; // float
		constexpr auto AnimInst = 0x160; // UCameraAnimInst*
	}

	namespace n_UEdGraphNode { // : UObject
		constexpr auto DeprecatedPins = 0x40; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x50; // int32_t
		constexpr auto NodePosY = 0x54; // int32_t
		constexpr auto NodeWidth = 0x58; // int32_t
		constexpr auto NodeHeight = 0x5c; // int32_t
		constexpr auto AdvancedPinDisplay = 0x60; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x61; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x63; // char : 1
		constexpr auto bUserSetEnabledState = 0x63; // char : 1
		constexpr auto bIsNodeEnabled = 0x63; // char : 1
		constexpr auto bHasCompilerMessage = 0x63; // char : 1
		constexpr auto NodeComment = 0x68; // FString
		constexpr auto ErrorType = 0x78; // int32_t
		constexpr auto ErrorMsg = 0x80; // FString
		constexpr auto NodeGuid = 0x90; // FGuid
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance { // : UMaterialExpression
		constexpr auto LightIndex = 0x48; // int32_t
	}

	namespace n_UCamperAnimInstance { // : UAnimInstance
		constexpr auto CamperPlayer = 0x270; // ACamperPlayer*
		constexpr auto MyDeltaTime = 0x278; // float
		constexpr auto IsHooked = 0x27c; // bool
		constexpr auto IsSacrificeStruggling = 0x27d; // bool
		constexpr auto MontageMadnessTierUp = 0x280; // UAnimMontage*
		constexpr auto ArrayCarryAttackMontage = 0x288; // TArray<UAnimCompositeBase*>
		constexpr auto _isFrightScreaming = 0x298; // bool
		constexpr auto IsBeingCarried = 0x299; // bool
		constexpr auto IsBeingPutOnHook = 0x29a; // bool
		constexpr auto isCrouched = 0x29b; // bool
		constexpr auto GuidedAction = 0x29c; // ECamperGuidedAction
		constexpr auto IsTrapped = 0x29d; // bool
		constexpr auto IsCrawling = 0x29e; // bool
		constexpr auto IsDead = 0x29f; // bool
		constexpr auto MaxSpeed = 0x2a0; // float
		constexpr auto IsInsideCloset = 0x2a4; // bool
		constexpr auto IsPlayingMadnessTierUpWeight = 0x2a8; // float
		constexpr auto IsTotallyInsane = 0x2ac; // bool
		constexpr auto IsBeingKilled = 0x2ad; // bool
		constexpr auto IsCarryAttackSucess = 0x2ae; // bool
		constexpr auto ShouldLookSleepy = 0x2af; // bool
		constexpr auto IsUsingAimItem = 0x2b0; // bool
		constexpr auto IsHoldingAimItem = 0x2b1; // bool
		constexpr auto AllowLookAt = 0x2b2; // bool
		constexpr auto DropStaggerTimeLeft = 0x2b4; // float
		constexpr auto LeftArmIKAlpha = 0x2b8; // float
		constexpr auto RightArmIKAlpha = 0x2bc; // float
		constexpr auto LeftForeArmIKAlpha = 0x2c0; // float
		constexpr auto RightForeArmIKAlpha = 0x2c4; // float
		constexpr auto LeftHandIKTransform = 0x2d0; // FTransform
		constexpr auto RightHandIKTransform = 0x300; // FTransform
		constexpr auto Strafe = 0x330; // bool
		constexpr auto IsInteracting = 0x331; // bool
		constexpr auto Injured = 0x332; // bool
		constexpr auto interactionType = 0x333; // EInteractionAnimation
		constexpr auto PreviousInteractionType = 0x334; // EInteractionAnimation
		constexpr auto IsSlasherInFPV = 0x335; // bool
		constexpr auto CarriedAlpha = 0x338; // float
		constexpr auto IsHoldingHandleItem = 0x33c; // bool
		constexpr auto IsHoldingSmallItem = 0x33d; // bool
		constexpr auto IsHoldingFirecracker = 0x33e; // bool
		constexpr auto Turning = 0x340; // float
		constexpr auto InAir = 0x350; // bool
		constexpr auto Speed = 0x354; // float
		constexpr auto Direction = 0x358; // float
		constexpr auto Pitch = 0x35c; // float
		constexpr auto Yaw = 0x360; // float
		constexpr auto RightFootEffectorLocation = 0x364; // FVector
		constexpr auto LeftFootEffectorLocation = 0x370; // FVector
		constexpr auto Idle = 0x37c; // bool
		constexpr auto MyTime = 0x380; // float
		constexpr auto SkillCheckFailed = 0x384; // bool
		constexpr auto IsGassed = 0x385; // bool
		constexpr auto HasAnyMontagePlaying = 0x386; // bool
		constexpr auto CurrentlyPlayerMontageId = 0x388; // FName
		constexpr auto IsBeingCarriedByTheSpirit = 0x394; // bool
		constexpr auto IsBeingCarriedByTheNightmare = 0x395; // bool
		constexpr auto IsBeingCarriedByThePig = 0x396; // bool
		constexpr auto IsBeingCarriedByTheHag = 0x397; // bool
		constexpr auto IsBeingCarriedByTheLegion = 0x398; // bool
		constexpr auto IsBeingCarriedByTheGhostFace = 0x399; // bool
		constexpr auto IsUsingDeadHard = 0x39a; // bool
		constexpr auto IsPlayingWakeUpOther = 0x39b; // bool
		constexpr auto IsPlayingFreddyMori = 0x39c; // bool
		constexpr auto IsSpooked = 0x39d; // bool
		constexpr auto IsHealingKOCamper = 0x39e; // bool
		constexpr auto IsChainLinked = 0x39f; // bool
		constexpr auto IsBeingReeled = 0x3a0; // bool
		constexpr auto TriggerHarpoonHitAnim = 0x3a1; // bool
		constexpr auto WasRecentlyHitByVomit = 0x3a2; // bool
		constexpr auto HarpoonHitTurnAnimNormalizedStartTime = 0x3a4; // float
		constexpr auto HarpoonHitAnimTurnRight = 0x3a8; // bool
		constexpr auto ChainBreakTrigger = 0x3a9; // bool
		constexpr auto HasLinkInput = 0x3aa; // bool
		constexpr auto LinkInputX = 0x3ac; // float
		constexpr auto LinkInputY = 0x3b0; // float
		constexpr auto LinkedMaxSpeed = 0x3b4; // float
		constexpr auto _cachedSurvivorPlagueEffect = 0x3b8; // USurvivorPlagueEffect*
	}

	namespace n_UUMGPurchaseCurrencyWidget { // : UMobileBaseUserWidget
		constexpr auto PercentageDiscountText = 0x300; // UTextBlock*
		constexpr auto CurrencyIcon = 0x308; // UImage*
		constexpr auto PriceText = 0x310; // UTextBlock*
		constexpr auto UndiscountedPrice = 0x318; // UTextBlock*
		constexpr auto CurrencyColorImage = 0x320; // UImage*
		constexpr auto OriginalPriceOverlay = 0x328; // UOverlay*
		constexpr auto DiscountCanvas = 0x330; // UCanvasPanel*
		constexpr auto AffordableColor = 0x338; // FSlateColor
		constexpr auto NotAffordableColor = 0x360; // FSlateColor
	}

	namespace n_UPathBuilder_EQS { // : UPathBuilder
		constexpr auto EQSRequest = 0x50; // FEQSParametrizedQueryExecutionRequest
		constexpr auto NbMaxEQSRequests = 0xa0; // int32_t
		constexpr auto MergeToSinglePathPoint = 0xa4; // bool
		constexpr auto _pendingEQSRequestBuilder = 0xc8; // UPathBuilder_EQS*
	}

	namespace n_UProveThyself { // : UPerk
		constexpr auto _proveThyselfRange = 0x3d0; // FDBDTunableRowHandle
	}

	namespace n_UUITween { // : UGameInstanceSubsystem
		constexpr auto ActiveInstances = 0x40; // TArray<UUITweenInstance*>
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x428; // FColor
		constexpr auto FrustumAngle = 0x42c; // float
		constexpr auto FrustumAspectRatio = 0x430; // float
		constexpr auto FrustumStartDist = 0x434; // float
		constexpr auto FrustumEndDist = 0x438; // float
		constexpr auto Texture = 0x440; // UTexture*
	}

	namespace n_UMovieSceneBuiltInEasingFunction { // : UObject
		constexpr auto Type = 0x38; // EMovieSceneBuiltInEasing
	}

	namespace n_UDrawPolygonToolStandardProperties { // : UInteractiveToolPropertySet
		constexpr auto PolygonType = 0x58; // EDrawPolygonDrawMode
		constexpr auto OutputMode = 0x59; // EDrawPolygonOutputMode
		constexpr auto FeatureSizeRatio = 0x5c; // float
		constexpr auto ExtrudeHeight = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bAllowSelfIntersections = 0x68; // bool
		constexpr auto bShowGizmo = 0x69; // bool
	}

	namespace n_UAtlCookedMaps { // : UPrimaryDataAsset
		constexpr auto Descriptions = 0x38; // TArray<FAtlCookedMapDescription>
	}

	namespace n_UFirecrackerEffectHandlerComponent { // : UActorComponent
		constexpr auto OnFirecrackerInRangeBegin = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnFirecrackerInRangeUpdate = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnFirecrackerInRangeEnd = 0xd8; // FMulticastInlineDelegate
		constexpr auto _effectDataList = 0xe8; // TArray<FFirecrackerEffectData>
	}

	namespace n_UCoreSpectateBarWidget { // : UCoreBaseHudWidget
		constexpr auto LeaveInputSwitcher = 0x2f8; // UCoreInputSwitcherWidget*
		constexpr auto LeftArrowInputSwitcher = 0x300; // UCoreInputSwitcherWidget*
		constexpr auto RightArrowInputSwitcher = 0x308; // UCoreInputSwitcherWidget*
		constexpr auto _leaveTriggeredDelegate = 0x310; // FMulticastInlineDelegate
		constexpr auto _leftArrowTriggeredDelegate = 0x320; // FMulticastInlineDelegate
		constexpr auto _rightArrowTriggeredDelegate = 0x330; // FMulticastInlineDelegate
	}

	namespace n_ABP_Menu_Slasher23_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_24 = 0x698; // UBP_Audio_KLR_23_C*
	}

	namespace n_UInterpTrackFloatAnimBPParam { // : UInterpTrackFloatBase
		constexpr auto AnimBlueprintClass = 0x98; // UObject*
		constexpr auto AnimClass = 0xa0; // UAnimInstance*
		constexpr auto ParamName = 0xa8; // FName
	}

	namespace n_UProceduralGenerationData { // : UDataAsset
		constexpr auto QuadrantSpawnTypeProperties = 0x38; // TArray<FQuadrantSpawnTypeProperties>
		constexpr auto QuadrantSpawnCategories = 0x48; // TArray<FQuadrantSpawnCategories>
		constexpr auto ThemeProperties = 0x58; // TArray<FThemeProperties>
		constexpr auto MaxSurvivorCount = 0x68; // int32_t
		constexpr auto KillersItemDependencies = 0x70; // TArray<FKillerItemDependencies>
		constexpr auto SurvivorItemPopulationProbability = 0x80; // UCurveFloat*
		constexpr auto SurvivorItemProperty = 0x88; // TArray<FSurvivorItemProperties>
		constexpr auto EscapeStrategyPopulationProbability = 0x98; // UCurveFloat*
		constexpr auto EscapeStrategyProperties = 0xa0; // TArray<FEscapeStrategyProperty>
		constexpr auto EscapeTypeActors = 0xb0; // TArray<FEscapeTypeObjects>
		constexpr auto Basements = 0xc0; // TArray<TSoftClassPtr<UObject>>
		constexpr auto ElementsPopulation = 0xd0; // TArray<FGameplayElementsPopulation>
		constexpr auto ManagedElementsPopulation = 0xe0; // TArray<FManagedGameplayElementsPopulation>
		constexpr auto SurvivorGroupingProbabilities = 0xf0; // TArray<FSurvivorGroupingProbability>
		constexpr auto ProceduralMapOffset = 0x100; // FVector
		constexpr auto ProceduralTileWidth = 0x10c; // float
		constexpr auto ProceduralTileHeight = 0x110; // float
		constexpr auto ProceduralQuadTileMapOffset = 0x114; // FVector
		constexpr auto ProceduralQuadTileCubeWidth = 0x120; // float
		constexpr auto DifficultyModifier = 0x124; // float
		constexpr auto CharacterCameraHeight = 0x128; // float
		constexpr auto CharacterCollisionRadius = 0x12c; // float
		constexpr auto SpawnerCollisionRadius = 0x130; // float
		constexpr auto TotemVisualHeight = 0x134; // float
		constexpr auto SpecialBehaviourPopulation = 0x138; // TArray<FSpecialBehaviourPopulation>
		constexpr auto _eventProperties = 0x148; // TArray<FEventSubstitionData>
	}

	namespace n_UCamperSlashableComponent { // : UActorComponent
		constexpr auto _slashableZone = 0xc0; // UCapsuleComponent*
		constexpr auto _hookSlashableZone = 0xc8; // UCapsuleComponent*
		constexpr auto _standingCapsuleHalfHeight = 0xd0; // float
		constexpr auto _crouchCapsuleHalfHeight = 0xd4; // float
		constexpr auto _slashableDisablingStateTags = 0xd8; // FGameplayTagContainer
		constexpr auto _sourceActivationLingerDuration = 0xf8; // float
		constexpr auto _slashableActivationSources = 0x128; // USlashableActivationSourceCollection*
	}

	namespace n_UK24WhipAttackOpenSubstate { // : UPounceAttackOpenSubstate
		constexpr auto _lvl3SpeedCurve = 0x130; // UCurveFloat*
	}

	namespace n_URekindleTotemInteraction { // : UInteractionDefinition
		constexpr auto _slasherFacingTolerance = 0x5b0; // float
		constexpr auto _rekindledTotemClass = 0x5b8; // ARekindledTotem*
		constexpr auto _rekindledTotem = 0x5c0; // ARekindledTotem*
	}

	namespace n_UParticleModuleAccelerationConstant { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x40; // FVector
	}

	namespace n_UExamplePresenter { // : UHudPresenter
		constexpr auto ExampleWidgetClass = 0x108; // UUserWidget*
	}

	namespace n_UDBDGameInstance { // : UGameInstance
		constexpr auto DesignTunableClass = 0x238; // UDBDDesignTunables*
		constexpr auto DesignTunables = 0x240; // UDBDDesignTunables*
		constexpr auto RegionClass = 0x248; // URegionFinder*
		constexpr auto ShopManagerClass = 0x250; // Ushopmanager*
		constexpr auto FriendManagerClass = 0x258; // UFriendManager*
		constexpr auto GameEventTracker = 0x260; // UGameEventTracker*
		constexpr auto KeyDisplayInfo = 0x268; // UDBDKeyDisplayInfo*
		constexpr auto LeaveGameRequested = 0x270; // bool
		constexpr auto PlayerProfileDAL = 0x278; // UPlayerProfileDAL*
		constexpr auto GenerationSeed = 0x280; // int32_t
		constexpr auto PaperTileAssetName = 0x288; // FString
		constexpr auto GenerationPlayerCount = 0x298; // int32_t
		constexpr auto PremadeMap = 0x2a0; // FString
		constexpr auto ForceSpawnTileData = 0x2b0; // TArray<FForceSpawnTileData>
		constexpr auto OfferingSequence = 0x2e8; // AOfferingSequenceManager*
		constexpr auto ParadiseData = 0x2f0; // TArray<FParadiseData>
		constexpr auto PlayerProfileLoadFailed = 0x300; // bool
		constexpr auto NewsContentManager = 0x308; // UNewsContentManager*
		constexpr auto ContentScheduleManager = 0x310; // UContentScheduleManager*
		constexpr auto CDNPatchManager = 0x318; // UCDNPatchManager*
		constexpr auto CharacterProgressionManager = 0x320; // UCharacterProgressionManager*
		constexpr auto CharacterXPManager = 0x328; // UCharacterXPManager*
		constexpr auto AtlRitualsManager = 0x330; // UAtlantaRitualsManager*
		constexpr auto AuthOrEACErrorAdditionalInfo = 0x338; // FString
		constexpr auto HasServerLeftMatch = 0x348; // bool
		constexpr auto HasWrittenGameEndStats = 0x349; // bool
		constexpr auto FearMarketManager = 0x350; // UFearMarketManager*
		constexpr auto shopmanager = 0x358; // Ushopmanager*
		constexpr auto FriendManager = 0x360; // UFriendManager*
		constexpr auto WalletHandler = 0x368; // UWalletHandler*
		constexpr auto TutorialRequesterName = 0x370; // FName
		constexpr auto ControllerPairingManager = 0x380; // UControllerPairingManager*
		constexpr auto ChunkingManager = 0x470; // UChunkingManager*
		constexpr auto OnPlayerDisconnect = 0x478; // FMulticastInlineDelegate
		constexpr auto _assetLibraryManager = 0x570; // UAssetLibraryManager*
		constexpr auto _bloodwebManagerClass = 0x578; // TSoftClassPtr<UObject>
		constexpr auto _onlineTransactionService = 0x5a8; // UOnlineTransactionServiceComponent*
		constexpr auto _sharedAuthenticationManagerClass = 0x5b0; // TSoftClassPtr<UObject>
		constexpr auto _persistentData = 0x710; // UDBDPersistentData*
		constexpr auto _playerDataFacade = 0x718; // UPlayerDataStorageFacade*
		constexpr auto _rankManager = 0x720; // URankManager*
		constexpr auto _playerLevelManager = 0x728; // UDBDPlayerLevelManager*
		constexpr auto _playerNameRegistration = 0x730; // UPlayerNameRegistration*
		constexpr auto _specialEventManager = 0x738; // Uspecialeventmanager*
		constexpr auto _bonusPointEventsManager = 0x740; // UBonusPointEventsManager*
		constexpr auto _timeTravelManager = 0x748; // UDBDTimeTravelManager*
		constexpr auto _toastManager = 0x750; // UToastManager*
		constexpr auto _socialNotificationFactory = 0x758; // UDBDSocialNotificationFactory*
		constexpr auto _partyFacade = 0x760; // UDBDPartyFacade*
		constexpr auto _penaltyTracker = 0x768; // UPenaltyTracker*
		constexpr auto _ligthingHelper = 0x798; // ULightingHelper*
		constexpr auto _offeringHandler = 0x7a0; // UOfferingHandler*
		constexpr auto _actorKnowledgeCollections = 0x7b0; // TArray<UActorKnowledgeCollection*>
		constexpr auto _mapActorDB = 0x7c0; // UMapActorDB*
		constexpr auto _interactionProficiencies = 0x7c8; // TArray<UInteractionProficiency*>
		constexpr auto _theHud = 0x7d8; // UDBDHud*
		constexpr auto BloodwebManager = 0x808; // UBloodwebManager*
		constexpr auto _sharedAuthenticationManager = 0x810; // USharedAuthenticationComponent*
		constexpr auto _popupSequencer = 0x818; // UPopupSequencer*
		constexpr auto _popupFactory = 0x820; // UPopupFactory*
		constexpr auto _auth = 0x828; // UDBDAuthentication*
		constexpr auto _eac = 0x830; // UDBDEasyAntiCheat*
		constexpr auto _execObjects = 0x910; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto _networkFailureDetected = 0x920; // bool
		constexpr auto _networkConnectionMonitoringOnly = 0x921; // bool
		constexpr auto _achievementStatsUploadEnabled = 0x922; // bool
		constexpr auto _isDisconnected = 0x923; // bool
		constexpr auto _isGamepadReconnected = 0x924; // bool
		constexpr auto _isProfileOffline = 0x925; // bool
		constexpr auto _isAppSuspended = 0x926; // bool
		constexpr auto _isAppResumed = 0x927; // bool
		constexpr auto _isInvitationRejected = 0x928; // bool
		constexpr auto _isAdditionalContentInstalled = 0x929; // bool
		constexpr auto _isCloudInventoryInitialized = 0x92a; // bool
		constexpr auto _resultOfferingAndPerkEffects = 0x958; // UOfferingEffectCollection*
		constexpr auto _inventoryHandler = 0x960; // UInventoryHandler*
		constexpr auto _localEventManager = 0x968; // ULocalEventManager*
		constexpr auto _playerReportManager = 0x970; // UPlayerReportManager*
		constexpr auto _cinematicManager = 0x978; // UCinematicManager*
		constexpr auto _softBanManager = 0x980; // USoftBanManager*
		constexpr auto _consentManager = 0x988; // UConsentManager*
		constexpr auto _onlineSystemHandler = 0x990; // UOnlineSystemHandler*
		constexpr auto _dedicatedServerManager = 0x998; // UDedicatedServerManager*
		constexpr auto _regionFinder = 0x9a0; // URegionFinder*
		constexpr auto _decalSpawnerCollection = 0x9a8; // UDecalSpawnerCollection*
		constexpr auto _characterClippingPrimitiveCollection = 0x9b0; // UPrimitiveCollection*
		constexpr auto _atlantaTooltipManager = 0x9b8; // UAtlantaTooltipManager*
		constexpr auto LastProviderErrorCode = 0x9c0; // uint32_t
		constexpr auto _disconnectError = 0x9c4; // EDisconnectErrors
		constexpr auto _dateTimerUpdater = 0x9c8; // UDateTimerUpdater*
	}

	namespace n_AEscapeBlocker { // : AActor
		constexpr auto _camperBlocker = 0x238; // UBoxComponent*
		constexpr auto _playerDetectionZone = 0x240; // UBoxComponent*
	}

	namespace n_ABloodOrb { // : AActor
		constexpr auto _randomMoveDelayInterval = 0x230; // FFloatInterval
		constexpr auto _absorbReference = 0x238; // USceneComponent*
		constexpr auto _outlineComponent = 0x240; // UDBDOutlineComponent*
		constexpr auto _despawnDelay = 0x248; // float
		constexpr auto _droppingPlayer = 0x250; // TWeakObjectPtr<ADBDPlayer>
		constexpr auto _state = 0x258; // EBloodOrbState
		constexpr auto _fadeComponent = 0x260; // UBloodOrbFadeComponent*
	}

	namespace n_UBP_Audio_KLR_16_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
	}

	namespace n_UMaterialBillboardComponent { // : UPrimitiveComponent
		constexpr auto Elements = 0x428; // TArray<FMaterialSpriteElement>
	}

	namespace n_UCharacterEvasionBehaviourData { // : UAICharacterBehaviourData
		constexpr auto _hunter = 0x30; // AActor*
		constexpr auto _escapePoints = 0x38; // TArray<AActor*>
		constexpr auto _minEscapeDist = 0x48; // float
	}

	namespace n_UDynamicMeshBrushTool { // : UBaseBrushTool
		constexpr auto PreviewMesh = 0x1d0; // UPreviewMesh*
	}

	namespace n_UThanatophobiaPerk { // : UBaseNursePerk
		constexpr auto _actionSpeedModifier = 0x4a0; // float [0x3]
	}

	namespace n_UDBDBaseInputHandler { // : UObject
		constexpr auto _pawn = 0x30; // APawn*
		constexpr auto _cameraBoom = 0x38; // USpringArmComponent*
	}

	namespace n_UMovieSceneComponentMaterialTrack { // : UMovieSceneMaterialTrack
		constexpr auto MaterialIndex = 0x70; // int32_t
	}

	namespace n_UPlaneCutToolProperties { // : UInteractiveToolPropertySet
		constexpr auto bSnapToWorldGrid = 0x58; // bool
		constexpr auto bKeepBothHalves = 0x59; // bool
		constexpr auto SpacingBetweenHalves = 0x5c; // float
		constexpr auto bFillCutHole = 0x60; // bool
		constexpr auto bShowPreview = 0x61; // bool
		constexpr auto bFillSpans = 0x62; // bool
	}

	namespace n_UPawnAction_Wait { // : UPawnAction
		constexpr auto TimeToWait = 0xa0; // float
	}

	namespace n_ULoadAsyncBankData { // : UObject
		constexpr auto Bank = 0x30; // UAkAudioBank*
		constexpr auto SoundBankLoader = 0x38; // USoundBankLoader*
	}

	namespace n_USubmixEffectReverbFastPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0xa8; // FSubmixEffectReverbFastSettings
	}

	namespace n_URookieSpirit { // : UPerk
		constexpr auto _numberOfGreatSkillChecksOnGeneratorRepair = 0x3d0; // int32_t
		constexpr auto _numberOfGeneratorRepairGreatSkillChecksRequired = 0x3d4; // int32_t [0x3]
	}

	namespace n_ANavigationData { // : AActor
		constexpr auto RenderingComp = 0x238; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x240; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x2d0; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x2d0; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x2d0; // char : 1
		constexpr auto bCanBeMainNavData = 0x2d0; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x2d0; // char : 1
		constexpr auto bRebuildAtRuntime = 0x2d0; // char : 1
		constexpr auto RuntimeGeneration = 0x2d4; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x2d8; // float
		constexpr auto DataVersion = 0x2dc; // uint32_t
		constexpr auto SupportedAreas = 0x3c0; // TArray<FSupportedAreaData>
	}

	namespace n_UMovieSceneGeometryCollectionSection { // : UMovieSceneSection
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UQuestEventsHandlerTest { // : UQuestEventsHandler
		constexpr auto _dbdPlayer = 0x100; // ADBDPlayer*
	}

	namespace n_UDesperateMeasures { // : UPerk
		constexpr auto _healAndUnhookMultiplier = 0x3d0; // float [0x3]
		constexpr auto _nbInjuredHookedOrDyingSurvivors = 0x3dc; // int32_t
	}

	namespace n_UPawnAction_Move { // : UPawnAction
		constexpr auto GoalActor = 0xa0; // AActor*
		constexpr auto goalLocation = 0xa8; // FVector
		constexpr auto AcceptableRadius = 0xb4; // float
		constexpr auto FilterClass = 0xb8; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xc0; // char : 1
		constexpr auto bFinishOnOverlap = 0xc0; // char : 1
		constexpr auto bUsePathfinding = 0xc0; // char : 1
		constexpr auto bAllowPartialPath = 0xc0; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xc0; // char : 1
		constexpr auto bUpdatePathToGoal = 0xc0; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xc0; // char : 1
	}

	namespace n_ANavLinkProxy { // : AActor
		constexpr auto PointLinks = 0x240; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x250; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x260; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x268; // bool
		constexpr auto OnSmartLinkReached = 0x270; // FMulticastInlineDelegate
	}

	namespace n_UK25P01 { // : UPerk
		constexpr auto _generatorBlockDuration = 0x3d0; // float [0x3]
		constexpr auto _auraRevealDuration = 0x3dc; // float [0x3]
		constexpr auto _allowPerkToBlockZeroProgressionGenerators = 0x3e8; // bool
		constexpr auto _generatorAuraColorForKiller = 0x3ec; // FLinearColor
		constexpr auto _generatorBlockingTimers = 0x400; // TArray<FFastTimer>
		constexpr auto _generatorsBlocked = 0x410; // TArray<AGenerator*>
		constexpr auto _local_generatorsBlocked = 0x420; // TArray<AGenerator*>
	}

	namespace n_ABP_Menu_Slasher11_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_12 = 0x698; // UBP_Audio_KLR_11_C*
		constexpr auto RBT_Mesh = 0x6a0; // USkeletalMeshComponent*
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0x98; // FName
	}

	namespace n_UMovieSceneSequence { // : UMovieSceneSignedObject
		constexpr auto PrecompiledEvaluationTemplate = 0x58; // FMovieSceneEvaluationTemplate
		constexpr auto DefaultCompletionMode = 0x348; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x349; // bool
		constexpr auto bPlayableDirectly = 0x34a; // bool
	}

	namespace n_UAtlantaPromptWidget { // : UMobileBaseUserWidget
		constexpr auto PromptLabel = 0x300; // UTextBlock*
		constexpr auto AudioCues = 0x318; // TMap<EPromptType, FString>
	}

	namespace n_UDBDRankDesignTunables { // : UObject
		constexpr auto UnbrokenTimeAlivePointsCurve = 0x30; // UCurveFloat*
		constexpr auto EvaderStealthPointsByDistanceWhileKillerNotChasingCurve = 0x38; // UCurveFloat*
		constexpr auto EvaderStealthPointsByDistanceWhileKillerIsChasingCurve = 0x40; // UCurveFloat*
		constexpr auto EvaderChasePointsByDurationCurve = 0x48; // UCurveFloat*
		constexpr auto EvaderZAxisDistanceScalingCurve = 0x50; // UCurveFloat*
		constexpr auto ChaserChasePointsByDurationCurve = 0x58; // UCurveFloat*
	}

	namespace n_USlateBrushAsset { // : UObject
		constexpr auto Brush = 0x30; // FSlateBrush
	}

	namespace n_UUserInterfaceSettings { // : UDeveloperSettings
		constexpr auto RenderFocusRule = 0x48; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x50; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0xa0; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xf0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0x110; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x130; // FSoftClassPath
		constexpr auto HandCursor = 0x150; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x170; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x190; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x1b0; // FSoftClassPath
		constexpr auto ApplicationScale = 0x1d0; // float
		constexpr auto UIScaleRule = 0x1d4; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x1d8; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1f8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x280; // bool
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x281; // bool
		constexpr auto CursorClasses = 0x288; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x298; // UObject*
		constexpr auto CustomScalingRule = 0x2a0; // UDPICustomScalingRule*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack { // : UMovieScenePropertyTrack
		constexpr auto MaterialIndex = 0x98; // int32_t
	}

	namespace n_USubmixEffectConvolutionReverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x48; // FSubmixEffectConvolutionReverbSettings
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto BlockSize = 0x70; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x71; // bool
	}

	namespace n_UBTTask_PushPawnAction { // : UBTTask_PawnActionBase
		constexpr auto action = 0x78; // UPawnAction*
	}

	namespace n_UBTTask_ClearBBEntry { // : UBTTaskNode
		constexpr auto BBToResetKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UK25SolveLamentConfigurationInteraction { // : UChargeableInteractionDefinition
		constexpr auto _timeBufferBeforeAllowedToUseInteractionAgain = 0x6d8; // float
		constexpr auto _failSkillCheckTimePenalty = 0x6e0; // FDBDTunableRowHandle
		constexpr auto _failMontage = 0x708; // FAnimationMontageDescriptor
	}

	namespace n_UTimecodeProvider { // : UObject
		constexpr auto FrameDelay = 0x30; // float
	}

	namespace n_UPendingNetGame { // : UObject
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto DemoNetDriver = 0x40; // UDemoNetDriver*
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto Constant = 0x48; // FLinearColor
	}

	namespace n_USoundGroups { // : UObject
		constexpr auto SoundGroupProfiles = 0x30; // TArray<FSoundGroup>
	}

	namespace n_UDatasmithSceneComponentTemplate { // : UDatasmithObjectTemplate
		constexpr auto RelativeTransform = 0x40; // FTransform
		constexpr auto Mobility = 0x70; // EComponentMobility
		constexpr auto AttachParent = 0x78; // TSoftObjectPtr<USceneComponent>
		constexpr auto Tags = 0xa8; // TSet<FName>
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles { // : UNiagaraEventReceiverEmitterAction
		constexpr auto NumParticles = 0x30; // uint32_t
	}

	namespace n_UInteractor { // : USceneComponent
		constexpr auto InteractorName = 0x210; // FString
		constexpr auto IsUsable = 0x250; // bool
		constexpr auto _lock = 0x254; // FLock
		constexpr auto _reservation = 0x25c; // FLock
		constexpr auto _currentInteraction = 0x268; // UInteractionDefinition*
		constexpr auto _interactionDefinitions = 0x270; // TArray<UInteractionDefinition*>
	}

	namespace n_USynthSound { // : USoundWaveProcedural
		constexpr auto OwningSynthComponent = 0x370; // USynthComponent*
	}

	namespace n_UMediaComponent { // : UActorComponent
		constexpr auto MediaTexture = 0xb8; // UMediaTexture*
		constexpr auto MediaPlayer = 0xc0; // UMediaPlayer*
	}

	namespace n_URestrictedPlacementAreaStrategy { // : UObject
		constexpr auto RestrictedRadius = 0x40; // FDBDTunableRowHandle
		constexpr auto MaxHeightRestriction = 0x6c; // float
	}

	namespace n_UBasicOverlays { // : UOverlays
		constexpr auto Overlays = 0x30; // TArray<FOverlayItem>
	}

	namespace n_UUMGHudEditorLayoutScreen { // : UUserWidget
		constexpr auto _editableWidgets = 0x260; // TArray<UUMGDragWidget_HudEditor*>
	}

	namespace n_ADisplayStand { // : AActor
		constexpr auto _currentActorDisplayed = 0x248; // AActor*
		constexpr auto _currentActorDisplayedClass = 0x258; // UObject*
		constexpr auto _nextActorToDisplayClass = 0x260; // UObject*
		constexpr auto _offsetByClass = 0x290; // TMap<UObject*, FTransform>
		constexpr auto _enableRotationByClass = 0x2e0; // TMap<UObject*, bool>
		constexpr auto _defaultCharmClassDisplayable = 0x330; // TSoftClassPtr<UObject>
		constexpr auto _useOffsetMenuAnimations = 0x389; // bool
		constexpr auto _displayDummyCharacter = 0x38a; // bool
		constexpr auto _characterDropdown = 0x38c; // FCharacterDropdown
	}

	namespace n_UBatchMeshCommands { // : USceneComponent
		constexpr auto Groups = 0x270; // TArray<FMaterialNamedGroup>
		constexpr auto TargetMeshes = 0x280; // TArray<FMaterialHelperOriginalMeshState>
		constexpr auto _materialGroupName = 0x290; // FString
	}

	namespace n_UStreamingSettings { // : UDeveloperSettings
		constexpr auto AsyncLoadingThreadEnabled = 0x48; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x48; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x4c; // float
		constexpr auto TimeLimitExceededMinTime = 0x50; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x54; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x58; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x58; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x5c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x60; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x64; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x68; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x6c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x70; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x74; // int32_t
		constexpr auto FlushStreamingOnExit = 0x78; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x78; // char : 1
	}

	namespace n_UUMGPartyCountdownWidget { // : UUMGBaseCountdownWidget
		constexpr auto UnreadyButton = 0x368; // UButton*
		constexpr auto UnreadyButtonContainer = 0x370; // UCanvasPanel*
	}

	namespace n_ULightIntensityTimelineComponent { // : UActorComponent
		constexpr auto lights = 0xb8; // TArray<FLightUpdate>
		constexpr auto materialHelpers = 0xc8; // TArray<FLightMaterialUpdate>
		constexpr auto intensityCurve = 0xd8; // UCurveFloat*
		constexpr auto randomizeStart = 0xe0; // bool
		constexpr auto randomizeLength = 0xe1; // bool
		constexpr auto minLength = 0xe4; // float
		constexpr auto maxLength = 0xe8; // float
		constexpr auto normalizeCurve = 0xec; // bool
		constexpr auto startTicking = 0xed; // bool
		constexpr auto inputLightUnit = 0xee; // ELightUnits
		constexpr auto OnTimelineFinished = 0xf0; // FMulticastInlineDelegate
	}

	namespace n_ABP_Menu_CamperMale06_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UTwinLullabyRangeAdditiveEffect { // : UStatusEffect
		constexpr auto _defaultTwinLullabyDormantRange = 0x350; // FDBDTunableRowHandle
		constexpr auto _twinLullabyDormantRange = 0x378; // FTunableStat
		constexpr auto _twinLullabyAttachedRange = 0x3f8; // FTunableStat
	}

	namespace n_ULacerationAlmostFullCondition { // : UBaseLacerationLevelCondition
		constexpr auto _missingLacerationThreshold = 0xe8; // float
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x478; // int32_t
		constexpr auto PreviousLODLevel = 0x47c; // int32_t
		constexpr auto MinLOD = 0x480; // int32_t
		constexpr auto SubDivisionStepSize = 0x484; // int32_t
		constexpr auto StaticMesh = 0x490; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x498; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x49c; // char : 1
		constexpr auto bOverrideWireframeColor = 0x49c; // char : 1
		constexpr auto bOverrideMinLod = 0x49c; // char : 1
		constexpr auto bOverrideNavigationExport = 0x49c; // char : 1
		constexpr auto bForceNavigationObstacle = 0x49c; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x49c; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x49c; // char : 1
		constexpr auto bOverrideLightMapRes = 0x49c; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x49d; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x49d; // char : 1
		constexpr auto bUseSubDivisions = 0x49d; // char : 1
		constexpr auto bUseDefaultCollision = 0x49d; // char : 1
		constexpr auto bReverseCulling = 0x49d; // char : 1
		constexpr auto OverriddenLightMapRes = 0x4a0; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x4a4; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x4a8; // float
		constexpr auto StreamingDistanceMultiplier = 0x4ac; // float
		constexpr auto LODData = 0x4b0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4c0; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x4d0; // FLightmassPrimitiveSettings
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x38; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x3c; // FName
		constexpr auto Target = 0x48; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x90; // char : 1
		constexpr auto bLockTarget = 0x90; // char : 1
		constexpr auto TargetTangentMethod = 0x94; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x98; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xe0; // char : 1
		constexpr auto TargetStrength = 0xe8; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x118; // char : 1
		constexpr auto LockRadius = 0x11c; // float
	}

	namespace n_UK25ChainStrikeImmunityEffect { // : UActivateOnEventTimedStatusEffect
		constexpr auto _chainStrikeImmunityDuration = 0x370; // FDBDTunableRowHandle
	}

	namespace n_UThrobber { // : UWidget
		constexpr auto NumberOfPieces = 0x128; // int32_t
		constexpr auto bAnimateHorizontally = 0x12c; // bool
		constexpr auto bAnimateVertically = 0x12d; // bool
		constexpr auto bAnimateOpacity = 0x12e; // bool
		constexpr auto PieceImage = 0x130; // USlateBrushAsset*
		constexpr auto Image = 0x138; // FSlateBrush
	}

	namespace n_UK26CrowProjectileAnimInstance { // : UAnimInstance
		constexpr auto _isInInvalidState = 0x270; // bool
		constexpr auto _isInSummonState = 0x271; // bool
		constexpr auto _isInIdleState = 0x272; // bool
		constexpr auto _isInFollowPathState = 0x273; // bool
		constexpr auto _isInOffPathState = 0x274; // bool
		constexpr auto _isInDestroyedState = 0x275; // bool
		constexpr auto _isBeingFlashlighted = 0x276; // bool
		constexpr auto _flashlightProgress = 0x278; // float
		constexpr auto _owningCrowProjectile = 0x2a0; // AK26CrowProjectile*
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife { // : UParticleModuleAccelerationBase
		constexpr auto DragScale = 0x40; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_AScreenIndicatorWorldMarker { // : AActor
		constexpr auto HudScreenIndicatorIcon = 0x230; // UTexture2D*
		constexpr auto HudScreenIndicatorType = 0x238; // EHudScreenIndicatorType
		constexpr auto VisibleDistanceRange = 0x23c; // FFloatRange
	}

	namespace n_UDBDInstancedFoliageComponent { // : UActorComponent
		constexpr auto NextBaseId = 0xb8; // int32_t
		constexpr auto InstanceBaseMap = 0xc0; // TMap<int32_t, USceneComponent*>
		constexpr auto Foliage = 0x110; // TArray<FDBDFoliageInfo>
	}

	namespace n_UMovieSceneLevelVisibilityTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_ABaseLinkedVomitProjectile { // : AKillerProjectile
		constexpr auto _useSplashDamage = 0x338; // bool
		constexpr auto _passThroughSurvivors = 0x339; // bool
		constexpr auto _poolableProjectile = 0x340; // UPoolableProjectileComponent*
		constexpr auto OnDeactivateOrLaunch = 0x348; // FMulticastInlineDelegate
		constexpr auto _vomitTrail = 0x358; // UParticleSystemComponent*
		constexpr auto _splineMesh = 0x360; // USplineMeshComponent*
		constexpr auto _splashDamageSphere = 0x368; // USphereComponent*
		constexpr auto _akAudioVomitProjectile = 0x370; // UAkComponent*
		constexpr auto _vomitSplashCamper = 0x378; // UParticleSystem*
		constexpr auto _vomitSplash = 0x380; // UParticleSystem*
		constexpr auto _akAudioEventAudioEventVomitSplash = 0x388; // UAkAudioEvent*
		constexpr auto _minDecalSize = 0x390; // FVector2D
		constexpr auto _maxDecalSize = 0x398; // FVector2D
		constexpr auto _isSuperVomit = 0x3a0; // bool
	}

	namespace n_UUMGNavigationButtonWidget { // : UUMGBaseButtonWidget
		constexpr auto NotificationPanel = 0x430; // UWidget*
	}

	namespace n_UCustomWidgetWrapper { // : UCanvasPanel
		constexpr auto OnVersion = 0x150; // FMulticastInlineDelegate
		constexpr auto ID = 0x160; // FGameplayTag
		constexpr auto ManuallyParentWrapper = 0x170; // UCustomWidgetWrapper*
		constexpr auto ManuallyChildWrappers = 0x178; // TArray<UCustomWidgetWrapper*>
		constexpr auto InitializerWidget = 0x188; // UCustomWidgetWrapperInitializer*
	}

	namespace n_UBasePowerSubAnimInstance { // : UBaseKillerAnimInstance
		constexpr auto _isUsingPower = 0x4f8; // bool
	}

	namespace n_UMaterialExpressionShaderStageSwitch { // : UMaterialExpression
		constexpr auto PixelShader = 0x48; // FExpressionInput
		constexpr auto VertexShader = 0x64; // FExpressionInput
	}

	namespace n_UDBDWrapBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto bFillEmptySpace = 0x50; // bool
		constexpr auto FillSpanWhenLessThan = 0x54; // float
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UInteractionAudioComponent { // : UActorComponent
		constexpr auto _audioComponent = 0xb8; // UAkComponent*
		constexpr auto _audioRadius = 0xc0; // FNonTunableStat
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x40; // FInterpCurveVector2D
	}

	namespace n_UMaterialExpressionArctangent2Fast { // : UMaterialExpression
		constexpr auto Y = 0x48; // FExpressionInput
		constexpr auto X = 0x64; // FExpressionInput
	}

	namespace n_UBTService_CopyBBEntry { // : UBTService_OnRelevantBase
		constexpr auto BBFrom = 0x80; // FBlackboardKeySelector
		constexpr auto BBTo = 0xb0; // FBlackboardKeySelector
		constexpr auto CopyOnlyValidKeyValue = 0xe0; // bool
	}

	namespace n_UNavigationQueryFilter { // : UObject
		constexpr auto Areas = 0x30; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x40; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x44; // FNavigationFilterFlags
	}

	namespace n_UHasObjectState { // : UEventDrivenModifierCondition
		constexpr auto _state = 0xe8; // FGameplayTag
	}

	namespace n_UCurveLinearColorAtlas { // : UTexture2D
		constexpr auto TextureSize = 0x108; // uint32_t
		constexpr auto GradientCurves = 0x110; // TArray<UCurveLinearColor*>
	}

	namespace n_UHillbillyChainsawOverheatComponent { // : UActorComponent
		constexpr auto OnHeatChargeUpdateDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto _isChainsawOverheating = 0x1e0; // FTagStateBool
		constexpr auto _chainsawHeatCharge = 0x210; // UPowerChargeComponent*
		constexpr auto _heatMaxCharge = 0x218; // FTunableStat
		constexpr auto _heatRevStartAmount = 0x298; // FTunableStat
		constexpr auto _heatRevChargeRate = 0x318; // FTunableStat
		constexpr auto _heatDashChargeRate = 0x398; // FTunableStat
		constexpr auto _heatDischargeRate = 0x418; // FTunableStat
		constexpr auto _overheatDischargeRate = 0x498; // FTunableStat
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput { // : UMaterialExpressionCustomOutput
		constexpr auto BaseColor = 0x48; // FExpressionInput
		constexpr auto Specular = 0x64; // FExpressionInput
		constexpr auto Roughness = 0x80; // FExpressionInput
		constexpr auto Normal = 0x9c; // FExpressionInput
		constexpr auto WorldHeight = 0xb8; // FExpressionInput
		constexpr auto Opacity = 0xd4; // FExpressionInput
		constexpr auto Mask = 0xf0; // FExpressionInput
	}

	namespace n_UMaterialExpressionAtmosphericFogColor { // : UMaterialExpression
		constexpr auto WorldPosition = 0x48; // FExpressionInput
	}

	namespace n_UMadnessSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isTotallyInsane = 0x4f0; // bool
	}

	namespace n_UMaterialExpressionShadowReplace { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto Shadow = 0x64; // FExpressionInput
	}

	namespace n_ULevelActorContainer { // : UObject
		constexpr auto Actors = 0x30; // TArray<AActor*>
	}

	namespace n_UDBDWrapBox { // : UPanelWidget
		constexpr auto InnerSlotPadding = 0x140; // FVector2D
		constexpr auto WrapWidth = 0x148; // float
		constexpr auto bExplicitWrapWidth = 0x14c; // bool
		constexpr auto HorizontalAlignment = 0x14d; // EHorizontalAlignment
	}

	namespace n_UMovieSceneCaptureProtocolBase { // : UObject
		constexpr auto State = 0x58; // EMovieSceneCaptureProtocolState
	}

	namespace n_AFoliageActor { // : AActor
		constexpr auto _foliageHISM = 0x230; // UFoliageDensityHISM*
	}

	namespace n_UAnimCompress { // : UAnimBoneCompressionCodec
		constexpr auto bNeedsSkeleton = 0x40; // char : 1
		constexpr auto TranslationCompressionFormat = 0x44; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x45; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x46; // AnimationCompressionFormat
	}

	namespace n_UPlayerGameRelevancyComponent { // : UActorComponent
		constexpr auto _isRelevantToGameplay = 0xb8; // FTagStateBool
	}

	namespace n_UNavCollision { // : UNavCollisionBase
		constexpr auto CylinderCollision = 0x88; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x98; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa8; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xb0; // char : 1
		constexpr auto bCreateOnClient = 0xb0; // char : 1
	}

	namespace n_UFSM_Transition { // : UDataAsset
		constexpr auto _transitionName = 0x38; // FName
		constexpr auto _transitionStateClass = 0x48; // UFSM_State*
		constexpr auto _conditions = 0x50; // TArray<UFSM_Condition*>
	}

	namespace n_ALanternLightCollectable { // : ACollectable
		constexpr auto _parentLantern = 0x4d0; // ALanternInteractable*
	}

	namespace n_UUMGAtlantaSeasonEndPopup { // : UUMGGenericPopup
		constexpr auto OldSurvivorRankBanner = 0x3e8; // UUMGTallyRankBanner*
		constexpr auto NewSurvivorRankBanner = 0x3f0; // UUMGTallyRankBanner*
		constexpr auto OldKillerRankBanner = 0x3f8; // UUMGTallyRankBanner*
		constexpr auto NewKillerRankBanner = 0x400; // UUMGTallyRankBanner*
		constexpr auto NewRankHorizontalBox = 0x408; // UHorizontalBox*
		constexpr auto OldRankHorizontalBox = 0x410; // UHorizontalBox*
		constexpr auto _fadeOutTimerHandle = 0x418; // FTimerHandle
		constexpr auto _timerBeforeFadeOutAnimation = 0x420; // float
	}

	namespace n_USurvivorAimableArmSensor { // : UArmIKSensorComponent
		constexpr auto _aimableCollectable = 0x148; // ACollectable*
		constexpr auto _aimable = 0x150; // UAimableComponent*
	}

	namespace n_UHarpoonProjectileMovementComponent { // : UPhysicsBasedProjectileMovementComponent
		constexpr auto _maxTravelDistance = 0x260; // FDBDTunableRowHandle
	}

	namespace n_UActivateK24PowerInteraction { // : UChargeableInteractionDefinition
		constexpr auto _interactionViewPitchMax = 0x6e8; // FDBDTunableRowHandle
		constexpr auto _interactionViewPitchMin = 0x710; // FDBDTunableRowHandle
		constexpr auto _maximumTimeToTriggerRegularAttack = 0x738; // FDBDTunableRowHandle
	}

	namespace n_UK24WhipAttack { // : UPounceAttack
		constexpr auto _attackSphereTraceRadius = 0x380; // FDBDTunableRowHandle
		constexpr auto _attackMinDistanceToObstruction = 0x3a8; // FDBDTunableRowHandle
		constexpr auto _whipMovementFromOffset = 0x3d0; // FVector
		constexpr auto _whipMovementToOffset = 0x3dc; // FVector
	}

	namespace n_UObjectLibrary { // : UObject
		constexpr auto ObjectBaseClass = 0x30; // UObject*
		constexpr auto bHasBlueprintClasses = 0x38; // bool
		constexpr auto Objects = 0x40; // TArray<UObject*>
		constexpr auto WeakObjects = 0x50; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x60; // bool
		constexpr auto bIsFullyLoaded = 0x61; // bool
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction { // : UNiagaraDataInterface
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UHeadOn { // : UPerk
		constexpr auto IsPerformingHeadOn = 0x3d0; // bool
		constexpr auto ExhaustOnlyOnSuccessfulStun = 0x3d1; // bool
		constexpr auto StunKillersEnteringStunZone = 0x3d2; // bool
		constexpr auto _hideDuration = 0x3d4; // float [0x3]
		constexpr auto _locker = 0x3e0; // ALocker*
	}

	namespace n_USendToDeathBedInteraction { // : UChargeableInteractionDefinition
		constexpr auto _deathBed = 0x6e0; // ADeathBedInteractable*
	}

	namespace n_UHapticFeedbackEffect_Buffer { // : UHapticFeedbackEffect_Base
		constexpr auto Amplitudes = 0x30; // TArray<char>
		constexpr auto SampleRate = 0x40; // int32_t
	}

	namespace n_UVideoCaptureProtocol { // : UFrameGrabberProtocol
		constexpr auto bUseCompression = 0x70; // bool
		constexpr auto CompressionQuality = 0x74; // float
	}

	namespace n_UAddon_K22Power_18 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _lingerDuration = 0x2b0; // FDBDTunableRowHandle
	}

	namespace n_UAddon_K22Power_21 { // : UOnEventBaseAddon
		constexpr auto _exposedDuration = 0x2a8; // float
	}

	namespace n_UBP_Audio_KLR_05_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_ULayer { // : UObject
		constexpr auto LayerName = 0x30; // FName
		constexpr auto bIsVisible = 0x3c; // char : 1
		constexpr auto ActorStats = 0x40; // TArray<FLayerActorStats>
	}

	namespace n_UMovieScenePrimitiveMaterialSection { // : UMovieSceneSection
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UCoreEndGameCollapseProgressWidget { // : UCoreBaseUserWidget
		constexpr auto ProgressBar = 0x2d8; // UProgressBar*
		constexpr auto MarkerLeftCanvas = 0x2e0; // UCanvasPanel*
		constexpr auto MarkerRightCanvas = 0x2e8; // UCanvasPanel*
		constexpr auto _markerLeftBox = 0x2f0; // UHorizontalBoxSlot*
		constexpr auto _markerRightBox = 0x2f8; // UHorizontalBoxSlot*
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0x98; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa8; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa8; // char : 1
		constexpr auto bSuppressSubtitles = 0xa8; // char : 1
		constexpr auto bTreatAsDialogue = 0xa8; // char : 1
		constexpr auto bAttach = 0xa8; // char : 1
	}

	namespace n_UAISkill_Interaction_RemoveTwin { // : UAISkill_Interaction
		constexpr auto _removeTwinMaxCharge = 0x170; // FDBDTunableRowHandle
	}

	namespace n_UFindTurnBasedMatchCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UAlignObjectsToolProperties { // : UInteractiveToolPropertySet
		constexpr auto AlignType = 0x58; // EAlignObjectsAlignTypes
		constexpr auto AlignTo = 0x5c; // EAlignObjectsAlignToOptions
		constexpr auto BoxPosition = 0x60; // EAlignObjectsBoxPoint
		constexpr auto bAlignX = 0x64; // bool
		constexpr auto bAlignY = 0x65; // bool
		constexpr auto bAlignZ = 0x66; // bool
	}

	namespace n_UHapticFeedbackEffect_SoundWave { // : UHapticFeedbackEffect_Base
		constexpr auto SoundWave = 0x30; // USoundWave*
	}

	namespace n_UGameNetworkManagerSettings { // : UObject
		constexpr auto MinDynamicBandwidth = 0x30; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x34; // int32_t
		constexpr auto TotalNetBandwidth = 0x38; // int32_t
		constexpr auto BadPingThreshold = 0x3c; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x40; // char : 1
		constexpr auto StandbyRxCheatTime = 0x44; // float
		constexpr auto StandbyTxCheatTime = 0x48; // float
		constexpr auto PercentMissingForRxStandby = 0x4c; // float
		constexpr auto PercentMissingForTxStandby = 0x50; // float
		constexpr auto PercentForBadPing = 0x54; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x58; // float
	}

	namespace n_UImageSequenceProtocol_EXR { // : UImageSequenceProtocol
		constexpr auto bCompressed = 0xe0; // bool
		constexpr auto CaptureGamut = 0xe1; // EHDRCaptureGamut
	}

	namespace n_AK25SurvivorChainAttachmentAnchor { // : AActor
		constexpr auto _chainMaxBreakingLength = 0x248; // FDBDTunableRowHandle
		constexpr auto _timeBetweenTrace = 0x270; // float
		constexpr auto _attachmentData = 0x278; // FK25SurvivorChainAttachmentData
		constexpr auto _owningSurvivor = 0x2a0; // TWeakObjectPtr<ACamperPlayer>
		constexpr auto _attachedChain = 0x2a8; // TWeakObjectPtr<AK25Chain>
		constexpr auto _cachedPullDirection = 0x2d8; // FVector
	}

	namespace n_UDecalComponent { // : USceneComponent
		constexpr auto DecalMaterial = 0x210; // UMaterialInterface*
		constexpr auto SortOrder = 0x218; // int32_t
		constexpr auto FadeScreenSize = 0x21c; // float
		constexpr auto FadeStartDelay = 0x220; // float
		constexpr auto FadeDuration = 0x224; // float
		constexpr auto FadeInDuration = 0x228; // float
		constexpr auto FadeInStartDelay = 0x22c; // float
		constexpr auto bDestroyOwnerAfterFade = 0x230; // char : 1
		constexpr auto DecalSize = 0x234; // FVector
	}

	namespace n_URestrictedGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x30; // FString
		constexpr auto RestrictedGameplayTagList = 0x40; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_ULocomotionPredictor { // : UObject
		constexpr auto _animFootData = 0x30; // TMap<UAnimSequence*, FFootBoneData>
	}

	namespace n_UNavLinkDefinition { // : UObject
		constexpr auto Links = 0x30; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x40; // TArray<FNavigationSegmentLink>
	}

	namespace n_USnowmanSpawnPlacementStrategy { // : UActorComponent
		constexpr auto _minDistanceFromOtherActiveSnowmen = 0xb8; // FDBDTunableRowHandle
		constexpr auto _minDistanceFromOtherPlayers = 0xe0; // FDBDTunableRowHandle
		constexpr auto _minHatchDistance = 0x108; // FDBDTunableRowHandle
		constexpr auto _minPalletDistance = 0x130; // FDBDTunableRowHandle
		constexpr auto _navmesh_radiusArea = 0x158; // FDBDTunableRowHandle
		constexpr auto _navmesh_minimumDistanceFromOriginSpawnPoint = 0x180; // FDBDTunableRowHandle
		constexpr auto _navmesh_minimumNumberOfNavmeshPointsToBeReady = 0x1a8; // FDBDTunableRowHandle
		constexpr auto _boxExtentXSize = 0x1d0; // FDBDTunableRowHandle
		constexpr auto _boxExtentYSize = 0x1f8; // FDBDTunableRowHandle
		constexpr auto _boxExtentZSize = 0x220; // FDBDTunableRowHandle
		constexpr auto _collisionBoxHalfExtent = 0x248; // FVector
		constexpr auto _minDistanceFromOtherActiveSnowmenSquared = 0x254; // float
		constexpr auto _minDistanceFromOtherPlayersSquared = 0x258; // float
		constexpr auto _minPalletDistanceSquared = 0x25c; // float
		constexpr auto _minHatchSquaredDistance = 0x260; // float
		constexpr auto _spawnPointsTileTypes = 0x268; // TArray<ETileSpawnPointType>
		constexpr auto _spawnPointsGameplayElementTypes = 0x278; // TArray<EGameplayElementType>
		constexpr auto _spawnLocationData = 0x288; // TArray<FSnowmanSpawnLocationData>
		constexpr auto _hatches = 0x298; // TArray<AHatch*>
		constexpr auto _pallets = 0x2a8; // TArray<APallet*>
		constexpr auto _collisionCheckBoxExtents = 0x2d8; // FVector
		constexpr auto _downRaycastLength = 0x2e4; // float
		constexpr auto _rayCastZOffet = 0x2e8; // float
		constexpr auto _distanceToGroundToleranceSquared = 0x2ec; // float
	}

	namespace n_UNatAudioAmbienceBox { // : UAmbienceBoxComponent
		constexpr auto _onBeginOverlapAudioEvent = 0x450; // UAkAudioEvent*
		constexpr auto _onEndOverlapAudioEvent = 0x458; // UAkAudioEvent*
	}

	namespace n_USocialPrivateMessageChannel { // : USocialChatChannel
		constexpr auto TargetUser = 0xf0; // USocialUser*
	}

	namespace n_UUMGAtlantaCustomMatchLobbyScreen { // : UMobileBaseUserWidget
		constexpr auto EditButton = 0x300; // UUMGBaseButtonWidget*
		constexpr auto RulesBox = 0x308; // UVerticalBox*
		constexpr auto CustomMatchTitle = 0x310; // UTextBlock*
		constexpr auto MatchRulesTitle = 0x318; // UTextBlock*
	}

	namespace n_UBlockableComponent { // : UActorComponent
		constexpr auto _replicatedDatum = 0xd0; // FBlockableReplicatedDatum
		constexpr auto _blockElements = 0xf0; // TSet<UBlockElement*>
	}

	namespace n_UFlipFlop { // : UPerk
		constexpr auto _recoveryProgressionConversionRatio = 0x3d0; // float [0x3]
		constexpr auto _maxWiggleProgression = 0x3dc; // float [0x3]
	}

	namespace n_USurvivorAimStateComponent { // : UActorComponent
		constexpr auto _aimableCollectable = 0xc8; // ACollectable*
	}

	namespace n_UBlastMine { // : UPerk
		constexpr auto _firecrackerHeight = 0x3d0; // float
		constexpr auto _secondaryActionProperties = 0x3d8; // FSecondaryInteractionProperties
		constexpr auto _secondsToActivatePerk = 0x410; // float
		constexpr auto _kickChargePercentMin = 0x414; // float
		constexpr auto _kickChargePercentMax = 0x418; // float
		constexpr auto _progressPercentRequirementLevels = 0x41c; // float [0x3]
		constexpr auto __generatorTrapDurationLevels = 0x428; // float [0x3]
		constexpr auto _canBeReusedOnTimerExpire = 0x434; // bool
		constexpr auto _canBeReusedAfterTrapActivation = 0x435; // bool
		constexpr auto _currentRepairInteractionWithAbility = 0x438; // UInteractionDefinition*
		constexpr auto _trappedGenerator = 0x440; // AGenerator*
		constexpr auto _progressPercent = 0x448; // float
		constexpr auto _trapActivated = 0x44c; // bool
		constexpr auto _repairTimerDone = 0x44d; // bool
		constexpr auto _kickInteractionPlayerOwner = 0x450; // ASlasherPlayer*
		constexpr auto _kickInteraction = 0x458; // UChargeableInteractionDefinition*
		constexpr auto _repairProgressGenerator = 0x460; // AGenerator*
	}

	namespace n_AItemVfx { // : ABaseVFX
		constexpr auto _particleSystems = 0x238; // TArray<UParticleSystemComponent*>
	}

	namespace n_UAB_SK_Ring_ACC01_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2b0; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x3f0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x850; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x870; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_AnimDynamics = 0x890; // FAnimNode_AnimDynamics
		constexpr auto Initialized = 0xcf0; // bool
		constexpr auto OwningCharacterSkeletalMesh = 0xcf8; // USkeletalMeshComponent*
	}

	namespace n_UUMGScrollListPageButton { // : UMobileBaseUserWidget
		constexpr auto OnClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto pageIndex = 0x310; // int32_t
		constexpr auto ActionButton = 0x318; // UButton*
		constexpr auto SelectedImage = 0x320; // UImage*
	}

	namespace n_USurvivorReelVelocityAdditiveStrategy { // : UBaseCharacterVelocityAdditiveStrategy
		constexpr auto _reelSpeed = 0xb8; // FTunableStat
		constexpr auto _minimumLinkLengthDelta = 0x138; // float
		constexpr auto _maximumVelocityAdditive = 0x13c; // float
		constexpr auto _isBeingReeled = 0x140; // FTagStateBool
		constexpr auto _isBeingPulled = 0x170; // FTagStateBool
	}

	namespace n_UZombieCustomizationComponent { // : UCustomizedSkeletalMesh
		constexpr auto _survivorSource = 0x2c8; // TWeakObjectPtr<ACamperPlayer>
	}

	namespace n_USculptBrushProperties { // : UBrushBaseProperties
		constexpr auto Depth = 0x70; // float
		constexpr auto bHitBackFaces = 0x74; // bool
	}

	namespace n_UTormentTrailPointCollectionComponent { // : UActorComponent
		constexpr auto _maxNumberOfTrailPointInGame = 0xd0; // FDBDTunableRowHandle
	}

	namespace n_UDBDAITypes { // : UObject
		constexpr auto AISkills_Context_Service_Root = 0x30; // FGameplayTag
		constexpr auto AISkills_Context_Task_Slasher_AttackTarget = 0x3c; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_AttackTarget = 0x48; // FGameplayTag
		constexpr auto AISkills_Context_Task_Slasher_CrawlingTarget = 0x54; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_CrawlingTarget = 0x60; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_Investigate_NotInChase = 0x6c; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_Investigate_InChase = 0x78; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_Investigate_MoveAround = 0x84; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_Patrol = 0x90; // FGameplayTag
		constexpr auto AISkills_Context_Service_Slasher_Patrol_MoveAround = 0x9c; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Standing = 0xa8; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Flee_Run_InChase = 0xb4; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Flee_Run_NotInChase = 0xc0; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Patrol = 0xcc; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_RescueCarriedFriend = 0xd8; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_RemoveTrap = 0xe4; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Chained = 0xf0; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_HelpOther = 0xfc; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_GoalInTerror = 0x108; // FGameplayTag
		constexpr auto AISkills_Context_Service_Camper_Carried = 0x114; // FGameplayTag
		constexpr auto AIBlackboard_InteractableWishList_FindSkill = 0x120; // FGameplayTag
		constexpr auto AI_PointOfInterest_ActivatedDoor = 0x12c; // FGameplayTag
		constexpr auto AI_PointOfInterest_ActivatedDoor_Opened = 0x138; // FGameplayTag
		constexpr auto AI_PointOfInterest_BrokenGenerator = 0x144; // FGameplayTag
		constexpr auto AI_PointOfInterest_OccupiedMeatHook = 0x150; // FGameplayTag
		constexpr auto AI_PointOfInterest_HexTotem = 0x15c; // FGameplayTag
		constexpr auto AI_PinLocation_WarpStart = 0x168; // FGameplayTag
		constexpr auto AI_PinLocation_WarpEnd = 0x174; // FGameplayTag
		constexpr auto AI_PinLocation_EQS = 0x180; // FGameplayTag
		constexpr auto AI_PinLocation_WishedObj = 0x18c; // FGameplayTag
		constexpr auto AI_PinLocation_GoTo = 0x198; // FGameplayTag
		constexpr auto AI_PinObject_EQS = 0x1a4; // FGameplayTag
		constexpr auto AI_PinObject_WishedObj = 0x1b0; // FGameplayTag
	}

	namespace n_UCineCameraComponent { // : UCameraComponent
		constexpr auto FilmbackSettings = 0x7d0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7dc; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7e8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x800; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x860; // float
		constexpr auto CurrentAperture = 0x864; // float
		constexpr auto CurrentFocusDistance = 0x868; // float
		constexpr auto FilmbackPresets = 0x878; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x888; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x898; // FString
		constexpr auto DefaultFilmbackPreset = 0x8a8; // FString
		constexpr auto DefaultLensPresetName = 0x8b8; // FString
		constexpr auto DefaultLensFocalLength = 0x8c8; // float
		constexpr auto DefaultLensFStop = 0x8cc; // float
	}

	namespace n_UBP_Audio_KLR_02_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_ADebugCameraController { // : APlayerController
		constexpr auto bShowSelectedInfo = 0x588; // char : 1
		constexpr auto bIsFrozenRendering = 0x588; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x588; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x588; // char : 1
		constexpr auto bEnableBufferVisualization = 0x588; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x588; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x588; // char : 1
		constexpr auto bLastDisplayEnabled = 0x588; // char : 1
		constexpr auto DrawFrustum = 0x590; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x598; // AActor*
		constexpr auto SelectedComponent = 0x5a0; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x5a8; // FHitResult
		constexpr auto OriginalControllerRef = 0x638; // APlayerController*
		constexpr auto OriginalPlayer = 0x640; // UPlayer*
		constexpr auto SpeedScale = 0x648; // float
		constexpr auto InitialMaxSpeed = 0x64c; // float
		constexpr auto InitialAccel = 0x650; // float
		constexpr auto InitialDecel = 0x654; // float
	}

	namespace n_UWinter2021EventComponent { // : UActorComponent
		constexpr auto _numbSnowmenToSpawnAtStart = 0xb8; // FDBDTunableRowHandle
		constexpr auto _snowmanSpawnPlacementStrategyClass = 0x118; // USnowmanSpawnPlacementStrategy*
		constexpr auto _snowmanClass = 0x120; // ASnowman*
		constexpr auto _snowmanSpawnPlacementStrategy = 0x128; // USnowmanSpawnPlacementStrategy*
		constexpr auto _snowmen = 0x140; // TArray<ASnowman*>
	}

	namespace n_UEditableMesh { // : UObject
		constexpr auto Adapters = 0x3c0; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d8; // int32_t
		constexpr auto PendingCompactCounter = 0x524; // int32_t
		constexpr auto SubdivisionCount = 0x528; // int32_t
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy { // : UARBaseAsyncTaskBlueprintProxy
		constexpr auto OnSuccess = 0x58; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UUMGHudEditorLayoutWidget { // : UUMGDragWidget
		constexpr auto hudEditorScreen = 0x290; // UUMGHudEditorScreen*
		constexpr auto _onSaveOverlapSound = 0x298; // UAkAudioEvent*
		constexpr auto _currentWidgetToEdit = 0x2a0; // UUMGDragWidget_HudEditor*
		constexpr auto _isSaveDirtyMap = 0x2a8; // TMap<UUMGHudEditorLayoutScreen*, bool>
	}

	namespace n_UMindBreaker { // : UPerk
		constexpr auto _effectDurationAfterRepair = 0x3d0; // float [0x3]
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto alpha = 0x80; // FExpressionInput
		constexpr auto ConstA = 0x9c; // float
		constexpr auto ConstB = 0xa0; // float
		constexpr auto ConstAlpha = 0xa4; // float
	}

	namespace n_UDatasmithLandscapeTemplate { // : UDatasmithObjectTemplate
		constexpr auto LandscapeMaterial = 0x38; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x40; // int32_t
	}

	namespace n_UInputKeyDelegateBinding { // : UInputDelegateBinding
		constexpr auto InputKeyDelegateBindings = 0x30; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_USoundNodeSoundClass { // : USoundNode
		constexpr auto SoundClassOverride = 0x50; // USoundClass*
	}

	namespace n_UMovieSceneAudioTrack { // : UMovieSceneNameableTrack
		constexpr auto AudioSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTService_FindInteractor_Totem { // : UBTService_FindInteractor
		constexpr auto InactiveGoalWeightMaxDistance = 0x218; // FAITunableParameter
		constexpr auto InactiveGoalWeightAtMinDistance = 0x228; // FAITunableParameter
	}

	namespace n_UDBDEmblem_SurvivorEvader { // : UDBDEmblem
		constexpr auto _killerDistanceStealthPointCurve = 0x158; // UCurveFloat*
		constexpr auto _killerDistanceStealthPointCurveChasing = 0x160; // UCurveFloat*
		constexpr auto _chaseDurationPointCurve = 0x168; // UCurveFloat*
		constexpr auto _ZAxisDistanceScalingCurve = 0x170; // UCurveFloat*
		constexpr auto _rankTunablesClass = 0x178; // UDBDRankDesignTunables*
	}

	namespace n_UDestroySessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_AHarpoonRifle { // : ACollectable
		constexpr auto _survivorLinkableClass = 0x4e8; // UChainLinkableComponent*
		constexpr auto _killerLinkableClass = 0x4f0; // UChainLinkableComponent*
		constexpr auto _chainClass = 0x4f8; // ARifleChain*
		constexpr auto _rifleMuzzleSocket = 0x500; // FName
		constexpr auto _rifleHarpoonLoadingSocket = 0x50c; // FName
		constexpr auto _crowActiveRange = 0x518; // FDBDTunableRowHandle
		constexpr auto _launcher = 0x540; // UHarpoonLauncher*
		constexpr auto _harpoonProvider = 0x548; // UHarpoonProviderComponent*
		constexpr auto _chain = 0x550; // ARifleChain*
		constexpr auto _chainTensionComponent = 0x558; // URifleChainTensionComponent*
		constexpr auto _chainTensionChargeable = 0x560; // UChargeableComponent*
		constexpr auto _playerLinker = 0x568; // URiflePlayerLinker*
		constexpr auto _harpoonChainPositioner = 0x570; // UHarpoonChainPositioner*
		constexpr auto _fireInteraction = 0x578; // UFireHarpoonRifleInteraction*
		constexpr auto _crowsActivatorComponent = 0x580; // UTriggerableActivatorComponent*
	}

	namespace n_URendererSettings { // : UDeveloperSettings
		constexpr auto bMobileDisableVertexFog = 0x48; // char : 1
		constexpr auto MaxMobileCascades = 0x4c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x50; // EMobileMSAASampleCount
		constexpr auto bMobileUseLegacyShadingModel = 0x54; // char : 1
		constexpr auto bMobileAllowDitheredLODTransition = 0x54; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x54; // char : 1
		constexpr auto MobileShadowMapMaxBrightness = 0x58; // float
		constexpr auto bMobileVirtualTextures = 0x5c; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x5c; // char : 1
		constexpr auto bOcclusionCulling = 0x5c; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x60; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x64; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x68; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x6c; // char : 1
		constexpr auto bTextureStreaming = 0x6c; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x6c; // char : 1
		constexpr auto bVirtualTextures = 0x6c; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x6c; // char : 1
		constexpr auto VirtualTextureTileSize = 0x70; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x74; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x78; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x7c; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x7c; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x7c; // char : 1
		constexpr auto bAnisotropicBRDF = 0x7c; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x80; // int32_t
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x84; // char : 1
		constexpr auto bForwardShading = 0x84; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x84; // char : 1
		constexpr auto bAllowStaticLighting = 0x84; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x84; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x84; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x84; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x84; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x85; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x88; // float
		constexpr auto bSeparateTranslucency = 0x8c; // char : 1
		constexpr auto TranslucentSortPolicy = 0x90; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x94; // FVector
		constexpr auto CustomDepthStencil = 0xa0; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0xa4; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0xa8; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0xac; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0xac; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0xac; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0xac; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0xb0; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0xb4; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xb8; // char : 1
		constexpr auto bUsePreExposure = 0xb8; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xb8; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xb8; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xb8; // char : 1
		constexpr auto bTemporalUpsampling = 0xb8; // char : 1
		constexpr auto bSSGI = 0xb8; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xbc; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xbd; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xbe; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xc0; // char : 1
		constexpr auto bStencilForLODDither = 0xc0; // char : 1
		constexpr auto EarlyZPass = 0xc4; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xc8; // char : 1
		constexpr auto bDBuffer = 0xc8; // char : 1
		constexpr auto ClearSceneMethod = 0xcc; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xd0; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xd0; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xd0; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xd0; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xd4; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xd8; // int32_t
		constexpr auto bGlobalClipPlane = 0xdc; // char : 1
		constexpr auto GBufferFormat = 0xe0; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xe4; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xe4; // char : 1
		constexpr auto bMultiView = 0xe4; // char : 1
		constexpr auto bMobilePostProcessing = 0xe4; // char : 1
		constexpr auto bMobileMultiView = 0xe4; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xe4; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xe4; // char : 1
		constexpr auto bODSCapture = 0xe4; // char : 1
		constexpr auto bMeshStreaming = 0xe5; // char : 1
		constexpr auto WireframeCullThreshold = 0xe8; // float
		constexpr auto bEnableRayTracing = 0xec; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xec; // char : 1
		constexpr auto bSupportStationarySkylight = 0xec; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xec; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xec; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xec; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xec; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xec; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xed; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xf0; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xf4; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xf8; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xf8; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xf8; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xf8; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xfc; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0x100; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0x100; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0x100; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0x100; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0x100; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0x100; // char : 1
		constexpr auto bSupportMaterialLayers = 0x100; // char : 1
		constexpr auto bLPV = 0x100; // char : 1
	}

	namespace n_ADBDPlayer { // : ADBDBasePlayer
		constexpr auto AllowInterrupting = 0x5d0; // bool
		constexpr auto MinFallHeight = 0x5d4; // float
		constexpr auto IsInterruptable = 0x5d8; // bool
		constexpr auto AllowNavigationInput = 0x5d9; // bool
		constexpr auto AllowNavigationBackwardInput = 0x5da; // bool
		constexpr auto AllowTurningInput = 0x5db; // bool
		constexpr auto AllowPitchInput = 0x5dc; // bool
		constexpr auto AllowStrafeInput = 0x5dd; // bool
		constexpr auto IsInInteractionUpdate = 0x5de; // bool
		constexpr auto IsInteractionChargeCompleted = 0x5df; // bool
		constexpr auto PitchLimitLower = 0x5e0; // float
		constexpr auto PitchLimitUpper = 0x5e4; // float
		constexpr auto StrafingOffset = 0x5e8; // FVector
		constexpr auto PelvisHeight = 0x5f4; // float
		constexpr auto PelvisHeightForPounceOnStandingCamper = 0x5f8; // float
		constexpr auto PelvisHeightForPounceOnCrouchingCamper = 0x5fc; // float
		constexpr auto Authority_OnAttackedDelegate = 0x630; // FMulticastInlineDelegate
		constexpr auto OnDamageTargetDelegate = 0x640; // FMulticastInlineDelegate
		constexpr auto OnSensed = 0x650; // FMulticastInlineDelegate
		constexpr auto OnAnimNotify_Pickup = 0x660; // FMulticastInlineDelegate
		constexpr auto OnAnimNotify_Release = 0x670; // FMulticastInlineDelegate
		constexpr auto Authority_OnSecondaryActionInput = 0x680; // FMulticastInlineDelegate
		constexpr auto OnFirstPersonModeChanged = 0x690; // FMulticastInlineDelegate
		constexpr auto OnDreamworldComponentSet = 0x6a0; // FMulticastInlineDelegate
		constexpr auto OnForwardInputLockedChanged = 0x6b0; // FMulticastInlineDelegate
		constexpr auto CameraBoom = 0x6c0; // USpringArmComponent*
		constexpr auto ForceSkillChecks = 0x6f8; // bool
		constexpr auto IKLeftHandTransform = 0x700; // FTransform
		constexpr auto IKRightHandTransform = 0x730; // FTransform
		constexpr auto CameraResetSpeed = 0x760; // float
		constexpr auto AverageSpeedBufferTime = 0x768; // float
		constexpr auto AlmostCurrentSpeedBufferTime = 0x76c; // float
		constexpr auto GamepadYawCurve = 0x770; // UCurveFloat*
		constexpr auto GamepadPitchCurve = 0x778; // UCurveFloat*
		constexpr auto GamepadSettingToYawRateCurve = 0x780; // UCurveFloat*
		constexpr auto GamepadSettingToPitchRateCurve = 0x788; // UCurveFloat*
		constexpr auto JoyconSettingToYawRateCurve = 0x790; // UCurveFloat*
		constexpr auto JoyconSettingToPitchRateCurve = 0x798; // UCurveFloat*
		constexpr auto OnIsCrouchedChanged = 0x7a0; // FMulticastInlineDelegate
		constexpr auto OnRunningAndMovingChanged = 0x7b0; // FMulticastInlineDelegate
		constexpr auto OnLocallyObservedChangedForPlayer = 0x7e0; // FMulticastInlineDelegate
		constexpr auto Camera = 0x7f0; // UCameraComponent*
		constexpr auto MaterialHelper = 0x7f8; // UMaterialHelper*
		constexpr auto Interactable = 0x830; // APlayerInteractable*
		constexpr auto _characterInventoryComponent = 0x858; // UCharacterInventoryComponent*
		constexpr auto CarryJointName = 0x860; // FName
		constexpr auto _pitchOffsetForInteractionPriority = 0x86c; // float
		constexpr auto _renderedPixelCounter = 0x870; // UBoxOcclusionQueryComponent*
		constexpr auto _standingOcclusionBox = 0x878; // UBoxComponent*
		constexpr auto _crouchingOcclusionBox = 0x880; // UBoxComponent*
		constexpr auto _activator = 0x888; // UActivatorComponent*
		constexpr auto IsInteracting = 0x890; // bool
		constexpr auto _aiCanBeSeenTestCrouchScale = 0x894; // float
		constexpr auto _aiCanBeSeenTestRightOffset = 0x898; // float
		constexpr auto _aiCanBeSeenTestHighOffset = 0x89c; // float
		constexpr auto _aiCanBeSeenTestLowOffset = 0x8a0; // float
		constexpr auto ClearPathTestRadiusMultiplier = 0x8a4; // float
		constexpr auto ClearPathTestHeightMultiplier = 0x8a8; // float
		constexpr auto LocationClearTestRadiusMultiplier = 0x8ac; // float
		constexpr auto LocationClearTestHeightMultiplier = 0x8b0; // float
		constexpr auto ClearPathTestStepHeight = 0x8c8; // float
		constexpr auto MouseTurnSpeedMultiplier = 0x8cc; // float
		constexpr auto MouseLookUpSpeedMultiplier = 0x8d0; // float
		constexpr auto DeathSound = 0x8d8; // USoundCue*
		constexpr auto CurrentCamperState = 0x8e0; // ECamperState
		constexpr auto CollectableAttachPoint = 0x8e4; // FName
		constexpr auto _stateMachine = 0x8f0; // UStateMachine*
		constexpr auto _interactionHandler = 0x8f8; // UPlayerInteractionHandler*
		constexpr auto _montagePlayer = 0x900; // UMontagePlayer*
		constexpr auto _perkManager = 0x908; // UPerkManager*
		constexpr auto _playerData = 0x910; // UDBDPlayerData*
		constexpr auto _wiggleAxisFlickMasher = 0x918; // UAxisFlickMasher*
		constexpr auto _interactable = 0x920; // APlayerInteractable*
		constexpr auto _guidingPlayer = 0x978; // ADBDPlayer*
		constexpr auto _interactingPlayer = 0x988; // ADBDPlayer*
		constexpr auto _nextAttackSubstate = 0x9bc; // EAttackSubstate
		constexpr auto _hitTargets = 0x9c0; // TArray<ADBDPlayer*>
		constexpr auto _dreamworldComponent = 0x9d0; // UCharacterDreamworldComponent*
		constexpr auto _characterChaseVisualComponent = 0x9d8; // UCharacterChaseVisualComponent*
		constexpr auto _cameraHandlerComponent = 0x9e0; // UCameraHandlerComponent*
		constexpr auto _reversibleActionSystemComponent = 0x9e8; // UReversibleActionSystemComponent*
		constexpr auto _itemDropOffPosition = 0x9f0; // USceneComponent*
		constexpr auto _perceptionStimuliComponent = 0x9f8; // UAIPerceptionStimuliSourceComponent*
		constexpr auto _ignoreActors = 0xa00; // TArray<AActor*>
		constexpr auto EffectCameraTypeSettings = 0xa10; // TArray<FEffectCameraTypeSettings>
		constexpr auto _blindingChargeableComponent = 0xa48; // UChargeableComponent*
		constexpr auto _shouldUpdateStateMachineDriverOnPossessed = 0xae0; // bool
		constexpr auto _blindableComponent = 0xae8; // UBlindableComponent*
		constexpr auto _tutorialChargeableInteractionMultiplier = 0xaf4; // float
		constexpr auto _eventListener = 0xb00; // UPollableEventListener*
		constexpr auto _chaseComponent = 0xb10; // UChaseComponent*
		constexpr auto _meatHookZoneDetector = 0xb18; // UZoneDetectorComponent*
		constexpr auto _basementZoneDetector = 0xb20; // UZoneDetectorComponent*
		constexpr auto _bookmarkedInteraction = 0xbc0; // UInteractionDefinition*
		constexpr auto _detectionZoneMap = 0xbc8; // TMap<EDetectionZone, UPrimitiveComponent*>
		constexpr auto _authoritativeMovementComponent = 0xc78; // UAuthoritativeMovementComponent*
		constexpr auto _screenAspectRatio = 0xf64; // float
		constexpr auto _objectState = 0xf88; // UGameplayTagContainerComponent*
		constexpr auto _audioFXComponent = 0xf90; // UAudioFXComponent*
		constexpr auto _playerPerspectiveComponent = 0xf98; // UPlayerPerspectiveComponent*
		constexpr auto _characterSightComponent = 0xfa8; // UCharacterSightComponent*
		constexpr auto _characterSightableComponent = 0xfb8; // UCharacterSightableComponent*
		constexpr auto _interactionDetectorComponent = 0xfd0; // UInteractionDetectorComponent*
		constexpr auto _clippablePrimitivesRegistererComponent = 0xfd8; // UPrimitivesRegistererComponent*
		constexpr auto _clippableProviderComponent = 0xfe0; // UClippableProviderComponent*
		constexpr auto _dynCapsuleResizer = 0xfe8; // UDynamicCapsuleResizerComponent*
		constexpr auto _playerGameRelevancyComponent = 0xff0; // UPlayerGameRelevancyComponent*
		constexpr auto _contextualQuestComponent = 0xff8; // UContextualQuestComponent*
		constexpr auto _questEventHandler = 0x1020; // UActorComponent*
		constexpr auto _presentationChargeableProgressComponent = 0x1028; // UChargeableProgressProviderComponent*
		constexpr auto _currentGamepadYawCurve = 0x1048; // UCurveFloat*
		constexpr auto _currentGamepadPitchCurve = 0x1050; // UCurveFloat*
		constexpr auto _associatedPlayerStateCache = 0x1058; // ADBDPlayerState*
		constexpr auto _otherCharactersVerticalCollisionsHandler = 0x1068; // UOtherCharactersVerticalCollisionsHandler*
	}

	namespace n_USupplyCrateAnimInstance { // : USleepingAnimInstance
		constexpr auto _owningSupplyCrate = 0x280; // ASupplyCrateInteractable*
		constexpr auto _isOpen = 0x288; // bool
		constexpr auto _isBeingPriedOpen = 0x289; // bool
		constexpr auto _isAutoClosing = 0x28a; // bool
	}

	namespace n_USpiritDynamicAccessoryAnimInstance { // : UDynamicAccessoryAnimInstance
		constexpr auto _isPassivePhaseWalkHusk = 0x280; // bool
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch { // : UMaterialExpression
		constexpr auto No = 0x48; // FExpressionInput
		constexpr auto Yes = 0x64; // FExpressionInput
	}

	namespace n_USpawnEffectsOnAllSurvivorsBaseAddon { // : UItemAddon
		constexpr auto _canCreateMultipleInstances = 0x298; // bool
	}

	namespace n_UCurveLinearColor { // : UCurveBase
		constexpr auto FloatCurves = 0x38; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x238; // float
		constexpr auto AdjustSaturation = 0x23c; // float
		constexpr auto AdjustBrightness = 0x240; // float
		constexpr auto AdjustBrightnessCurve = 0x244; // float
		constexpr auto AdjustVibrance = 0x248; // float
		constexpr auto AdjustMinAlpha = 0x24c; // float
		constexpr auto AdjustMaxAlpha = 0x250; // float
	}

	namespace n_ABrush { // : AActor
		constexpr auto BrushType = 0x230; // EBrushType
		constexpr auto BrushColor = 0x234; // FColor
		constexpr auto PolyFlags = 0x238; // int32_t
		constexpr auto bColored = 0x23c; // char : 1
		constexpr auto bSolidWhenSelected = 0x23c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x23c; // char : 1
		constexpr auto bNotForClientOrServer = 0x23c; // char : 1
		constexpr auto Brush = 0x240; // UModel*
		constexpr auto BrushComponent = 0x248; // UBrushComponent*
		constexpr auto bInManipulation = 0x250; // char : 1
		constexpr auto SavedSelections = 0x258; // TArray<FGeomSelection>
	}

	namespace n_UMaterialPerThemeData { // : UDataAsset
		constexpr auto _materialMap = 0x38; // TMap<UMaterialInstance*, UMaterialInstance*>
	}

	namespace n_UDiscordancePerk { // : UPerk
		constexpr auto _generatorQueryHandlePairs = 0x3d0; // TArray<FGeneratorQueryHandlePair>
		constexpr auto _effectRange = 0x410; // float [0x3]
		constexpr auto _auraLingerDuration = 0x41c; // float
		constexpr auto _numSurvivorsRepairingToReveal = 0x420; // int32_t
		constexpr auto _isPerkConsideredActive = 0x425; // bool
		constexpr auto _genratorToCheckNextFrame = 0x428; // AGenerator*
	}

	namespace n_UTriggerableActivatorComponent { // : UActorComponent
		constexpr auto _triggerableClass = 0xb8; // TSoftClassPtr<UObject>
		constexpr auto _triggerables = 0xe8; // TArray<UTriggerableWorldObjectComponent*>
	}

	namespace n_UHasModifierOfTypeEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _gameplayModifierList = 0x48; // TArray<FGameplayTag>
	}

	namespace n_UFlashlightComponent { // : UActorComponent
		constexpr auto OnFlashlightTurnedOn = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnFlashlightTurnedOff = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnFlashlightablesUpdated = 0xe0; // FMulticastInlineDelegate
		constexpr auto _baseBlindnessDuration = 0xf0; // FDBDTunableRowHandle
		constexpr auto _baseAccuracy = 0x118; // float
		constexpr auto _lagDuration = 0x11c; // float
		constexpr auto _flashlightables = 0x120; // TSet<UFlashlightableComponent*>
		constexpr auto _autonomousLitFlashlightables = 0x170; // TSet<UFlashlightableComponent*>
		constexpr auto _replicatedLitFlashlightables = 0x1c0; // TArray<UFlashlightableComponent*>
		constexpr auto _isOwnerLagging = 0x1d0; // bool
	}

	namespace n_UMagicLeapTouchpadGesturesComponent { // : UActorComponent
		constexpr auto OnTouchpadGestureStart = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xe0; // FMulticastInlineDelegate
	}

	namespace n_UVectorFieldStatic { // : UVectorField
		constexpr auto SizeX = 0x50; // int32_t
		constexpr auto SizeY = 0x54; // int32_t
		constexpr auto SizeZ = 0x58; // int32_t
		constexpr auto bAllowCPUAccess = 0x5c; // bool
		constexpr auto CPUData = 0x90; // TArray<FVector4>
	}

	namespace n_ULeaderboardFlushCallbackProxy { // : UObject
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapImageTrackerComponent { // : USceneComponent
		constexpr auto TargetImageTexture = 0x210; // UTexture2D*
		constexpr auto Name = 0x218; // FString
		constexpr auto LongerDimension = 0x228; // float
		constexpr auto bIsStationary = 0x22c; // bool
		constexpr auto bUseUnreliablePose = 0x22d; // bool
		constexpr auto OnSetImageTargetSucceeded = 0x230; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x240; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x250; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x260; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x270; // FMulticastInlineDelegate
	}

	namespace n_ACharacterTool { // : AActor
		constexpr auto SpawnLocations = 0x230; // TArray<ATargetPoint*>
		constexpr auto _customizationData = 0x240; // FCharacterToolData
		constexpr auto _animInstanceClass = 0x2b0; // UAnimInstance*
		constexpr auto _animated = 0x2b8; // bool
		constexpr auto UseInGameSkeleton = 0x2b9; // bool
		constexpr auto _showPower = 0x2ba; // bool
		constexpr auto _useMasterPoseForItems = 0x2bb; // bool
		constexpr auto _powerSocket = 0x2bc; // FName
		constexpr auto _powerAttachmentRule = 0x2c8; // EAttachmentRule
		constexpr auto _overallLightingClass = 0x2d0; // TSoftClassPtr<UObject>
		constexpr auto _showHelp = 0x300; // FNamedButton
		constexpr auto _characters = 0x318; // TArray<ADBDMenuPlayer*>
		constexpr auto _lighting = 0x328; // AActor*
	}

	namespace n_UAnimInstance { // : UObject
		constexpr auto CurrentSkeleton = 0x30; // USkeleton*
		constexpr auto RootMotionMode = 0x38; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x39; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x39; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x39; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x39; // char : 1
		constexpr auto bQueueMontageEvents = 0x39; // char : 1
		constexpr auto OnMontageBlendingOut = 0x40; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x50; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x60; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x70; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x108; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x178; // TArray<FAnimNotifyEvent>
	}

	namespace n_UMotionControllerComponent { // : UPrimitiveComponent
		constexpr auto PlayerIndex = 0x428; // int32_t
		constexpr auto Hand = 0x42c; // EControllerHand
		constexpr auto MotionSource = 0x430; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x43c; // char : 1
		constexpr auto CurrentTrackingStatus = 0x440; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x441; // bool
		constexpr auto DisplayModelSource = 0x444; // FName
		constexpr auto CustomDisplayMesh = 0x450; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x458; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x4d0; // UPrimitiveComponent*
	}

	namespace n_UDBDNavModifierComponent { // : UNavModifierComponent
		constexpr auto ForceUseFailsafeExtent = 0x150; // bool
		constexpr auto UpdateModifierInterval = 0x154; // float
		constexpr auto StartNavigationRelevant = 0x158; // bool
		constexpr auto AlwaysTickToCheckTransform = 0x159; // bool
		constexpr auto RelevantPassiveMode = 0x15a; // bool
	}

	namespace n_APawn { // : AActor
		constexpr auto bUseControllerRotationPitch = 0x238; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x238; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x238; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x238; // char : 1
		constexpr auto BaseEyeHeight = 0x23c; // float
		constexpr auto AutoPossessPlayer = 0x240; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x241; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x242; // char
		constexpr auto AIControllerClass = 0x248; // AController*
		constexpr auto PlayerState = 0x250; // APlayerState*
		constexpr auto LastHitBy = 0x260; // AController*
		constexpr auto Controller = 0x268; // AController*
		constexpr auto ControlInputVector = 0x274; // FVector
		constexpr auto LastControlInputVector = 0x280; // FVector
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0x78; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x88; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x88; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x88; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x88; // char : 1
	}

	namespace n_UMovieSceneSection { // : UMovieSceneSignedObject
		constexpr auto EvalOptions = 0x58; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x60; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x98; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa8; // FFrameNumber
		constexpr auto PostRollFrames = 0xac; // FFrameNumber
		constexpr auto RowIndex = 0xb0; // int32_t
		constexpr auto OverlapPriority = 0xb4; // int32_t
		constexpr auto bIsActive = 0xb8; // char : 1
		constexpr auto bIsLocked = 0xb8; // char : 1
		constexpr auto StartTime = 0xbc; // float
		constexpr auto EndTime = 0xc0; // float
		constexpr auto PrerollTime = 0xc4; // float
		constexpr auto PostrollTime = 0xc8; // float
		constexpr auto bIsInfinite = 0xcc; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xd0; // bool
		constexpr auto BlendType = 0xd1; // FOptionalMovieSceneBlendType
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x40; // FInterpCurveVector
		constexpr auto bLockAxes = 0x58; // char : 1
		constexpr auto LockedAxes = 0x5c; // EDistributionVectorLockFlags
	}

	namespace n_UDedicatedServerStartupInitializer { // : UStartupInitializer
		constexpr auto _dbdTimeUtilities = 0x78; // UDBDTimeUtilities*
	}

	namespace n_AGeometryCollectionActor { // : AActor
		constexpr auto GeometryCollectionComponent = 0x230; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x238; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UK25ChainStrikeBaseState { // : UFSM_State
		constexpr auto _secondaryInteractionIDs = 0x78; // TSet<FName>
	}

	namespace n_UBTTask_PlaySound { // : UBTTaskNode
		constexpr auto SoundToPlay = 0x78; // USoundCue*
	}

	namespace n_UYamaokaFamilyCrest { // : UItemAddon
		constexpr auto _revealDuration = 0x298; // float
		constexpr auto _revealRange = 0x29c; // float
		constexpr auto _survivorsToReveal = 0x2a0; // TArray<ACamperPlayer*>
		constexpr auto _addonActivationCount = 0x2b0; // char
	}

	namespace n_UIpNetDriver { // : UNetDriver
		constexpr auto LogPortUnreach = 0x768; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x768; // char : 1
		constexpr auto MaxPortCountToTry = 0x76c; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x77c; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x780; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x784; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x788; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x790; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x798; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x79c; // float
	}

	namespace n_UBTDecorator_IsNearestThan { // : UBTDecorator_TickableBase
		constexpr auto BBFrom = 0x70; // FBlackboardKeySelector
		constexpr auto BBThan = 0xa0; // FBlackboardKeySelector
		constexpr auto AddDistanceBuffer = 0xd0; // float
	}

	namespace n_UCorePlayerStatusesContainerWidget { // : UCoreBaseHudWidget
		constexpr auto PlayerStatusWidgets = 0x300; // TArray<UCorePlayerStatusWidget*>
		constexpr auto _playerStatusViewInterfaces = 0x310; // TArray<TScriptInterface<IPlayerStatusViewInterface>>
	}

	namespace n_ANavModifierVolume { // : AVolume
		constexpr auto AreaClass = 0x270; // UNavArea*
	}

	namespace n_UAuthoritativePoolableActorComponent { // : UBasePoolableActorComponent
		constexpr auto _acquired = 0xd0; // bool
	}

	namespace n_AMobileBloodOrbRenderer { // : AActor
		constexpr auto OrbMaterialInstance = 0x230; // UMaterialInstance*
		constexpr auto OutlineMaterialInstance = 0x238; // UMaterialInstance*
		constexpr auto CullInterval = 0x240; // float
		constexpr auto _ismComponent = 0x248; // UInstancedStaticMeshComponent*
		constexpr auto _outlineIsmComponent = 0x250; // UInstancedStaticMeshComponent*
		constexpr auto _instanceMap = 0x258; // TMap<ABloodOrb*, FBloodOrbInfo>
		constexpr auto _outlineMaterialInstanceDynamic = 0x2a8; // UMaterialInstanceDynamic*
		constexpr auto _orbMaterialInstanceDynamic = 0x2b0; // UMaterialInstanceDynamic*
		constexpr auto _bloodOrbVisibilityComponent = 0x2b8; // UBloodOrbVisibilityComponent*
	}

	namespace n_UChaserCharacterComponent { // : UChaseComponent
		constexpr auto _camperSensor = 0x138; // UDBDPawnSensingComponent*
		constexpr auto _chaseUpdateInfo = 0x140; // TMap<ADBDPlayer*, FChaseUpdateInfo>
		constexpr auto _chasedPlayers = 0x190; // TArray<ADBDPlayer*>
		constexpr auto _authority_survivorsWhoStunnedKillerByPalletDuringChase = 0x1a0; // TArray<ADBDPlayer*>
		constexpr auto _preventChaseTags = 0x1e0; // FGameplayTagContainer
	}

	namespace n_USimpleDynamicMeshComponent { // : UBaseDynamicMeshComponent
		constexpr auto TangentsType = 0x4c0; // EDynamicMeshTangentCalcType
		constexpr auto bExplicitShowWireframe = 0x4e0; // bool
		constexpr auto bDrawOnTop = 0x530; // bool
	}

	namespace n_UEditableTextWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto EditableTextStyle = 0x38; // FEditableTextStyle
	}

	namespace n_UThrowRockInteraction { // : UInteractionDefinition
		constexpr auto _loudNoiseAudioRange = 0x5b0; // FDBDTunableRowHandle
		constexpr auto _scratchMarksApplicationDelay = 0x5d8; // float
		constexpr auto _scratchMarksCountToSpawn = 0x5dc; // int32_t
		constexpr auto _diversionHeightOffset = 0x5e4; // float
	}

	namespace n_UInjectSerumInteraction { // : UChargeableInteractionDefinition
		constexpr auto _injectSerumKillerInstinctTime = 0x6d8; // FTunableStat
		constexpr auto _scoreEvent = 0x760; // FGameplayTag
		constexpr auto _serumApplyHeal = 0x770; // FDBDTunableRowHandle
	}

	namespace n_ABP_Menu_CamperMale08_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UAB_K25_SW00_REF_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot = 0x2b0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x300; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult = 0x328; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x350; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_2 = 0x3c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x400; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x478; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x4b0; // FAnimNode_StateMachine
		constexpr auto _interupt = 0x560; // bool
	}

	namespace n_UAkDurationCallbackInfo { // : UAkEventCallbackInfo
		constexpr auto Duration = 0x40; // float
		constexpr auto EstimatedDuration = 0x44; // float
		constexpr auto AudioNodeID = 0x48; // int32_t
		constexpr auto MediaID = 0x4c; // int32_t
		constexpr auto bStreaming = 0x50; // bool
	}

	namespace n_UBTDecorator_IsExitOpened { // : UBTDecorator_TickableBase
		constexpr auto BBExitObj = 0x70; // FBlackboardKeySelector
	}

	namespace n_UHarpoonRifleAnimInstance { // : UAnimInstance
		constexpr auto _chain = 0x270; // ARifleChain*
		constexpr auto _chainUnwindingSpeed = 0x278; // float
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0x48; // FExpressionInput
	}

	namespace n_UNamedInterfaces { // : UObject
		constexpr auto NamedInterfaces = 0x30; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x40; // TArray<FNamedInterfaceDef>
	}

	namespace n_UMaterialExpressionDistanceFieldGradient { // : UMaterialExpression
		constexpr auto Position = 0x48; // FExpressionInput
	}

	namespace n_UAkXboxOneInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettings
		constexpr auto ApuHeapSettings = 0x90; // FAkXboxOneApuHeapInitializationSettings
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkXboxOneAdvancedInitializationSettings
	}

	namespace n_UPhysicsSettings { // : UDeveloperSettings
		constexpr auto DefaultGravityZ = 0x48; // float
		constexpr auto DefaultTerminalVelocity = 0x4c; // float
		constexpr auto DefaultFluidFriction = 0x50; // float
		constexpr auto SimulateScratchMemorySize = 0x54; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x58; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x5c; // float
		constexpr auto bEnableShapeSharing = 0x60; // bool
		constexpr auto bEnablePCM = 0x61; // bool
		constexpr auto bEnableStabilization = 0x62; // bool
		constexpr auto bWarnMissingLocks = 0x63; // bool
		constexpr auto bEnable2DPhysics = 0x64; // bool
		constexpr auto PhysicErrorCorrection = 0x68; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x9c; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x9d; // ESettingsDOF
		constexpr auto BounceThresholdVelocity = 0xa0; // float
		constexpr auto FrictionCombineMode = 0xa4; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0xa5; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0xa8; // float
		constexpr auto MaxDepenetrationVelocity = 0xac; // float
		constexpr auto ContactOffsetMultiplier = 0xb0; // float
		constexpr auto MinContactOffset = 0xb4; // float
		constexpr auto MaxContactOffset = 0xb8; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0xbc; // bool
		constexpr auto DefaultShapeComplexity = 0xbd; // ECollisionTraceFlag
		constexpr auto bDefaultHasComplexCollision = 0xbe; // bool
		constexpr auto bSuppressFaceRemapTable = 0xbf; // bool
		constexpr auto bSupportUVFromHitResults = 0xc0; // bool
		constexpr auto bDisableActiveActors = 0xc1; // bool
		constexpr auto bDisableKinematicStaticPairs = 0xc2; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0xc3; // bool
		constexpr auto bDisableCCD = 0xc4; // bool
		constexpr auto bEnableEnhancedDeterminism = 0xc5; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0xc8; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0xcc; // bool
		constexpr auto MaxPhysicsDeltaTime = 0xd0; // float
		constexpr auto bSubstepping = 0xd4; // bool
		constexpr auto bSubsteppingAsync = 0xd5; // bool
		constexpr auto MaxSubstepDeltaTime = 0xd8; // float
		constexpr auto MaxSubsteps = 0xdc; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0xe0; // float
		constexpr auto InitialAverageFrameRate = 0xe4; // float
		constexpr auto PhysXTreeRebuildRate = 0xe8; // int32_t
		constexpr auto PhysicalSurfaces = 0xf0; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x100; // FBroadphaseSettings
		constexpr auto ChaosSettings = 0x140; // FChaosPhysicsSettings
	}

	namespace n_UMovieSceneEventTrack { // : UMovieSceneNameableTrack
		constexpr auto bFireEventsWhenForwards = 0x60; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x60; // char : 1
		constexpr auto EventPosition = 0x64; // EFireEventsAtPosition
		constexpr auto EventReceivers = 0x68; // TArray<FMovieSceneObjectBindingID>
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ADBDMistManager { // : AActor
		constexpr auto _particleSystemComp = 0x230; // UDBDAggregateParticleSystemComponent*
	}

	namespace n_UReelChainInteraction { // : UInteractionDefinition
		constexpr auto _frontMovementAngle = 0x5b0; // float
		constexpr auto _minimumFrontVelocity = 0x5b8; // float
		constexpr auto _linkedPlayer = 0x5c0; // ADBDPlayer*
	}

	namespace n_UK26AbilitySubAnimInstance { // : UBaseKillerAnimInstance
		constexpr auto _fireInteractionCooldownTime = 0x4f8; // float
		constexpr auto _fireInteractionCooldownTimeTunable = 0x500; // FTunableStat
		constexpr auto _hasChargingStarted = 0x580; // bool
		constexpr auto _hasProjectileBeenSummoned = 0x581; // bool
		constexpr auto _hasChargingEnded = 0x582; // bool
		constexpr auto _hasProjectileFired = 0x583; // bool
	}

	namespace n_UARCandidateImage { // : UDataAsset
		constexpr auto CandidateTexture = 0x38; // UTexture2D*
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto Width = 0x50; // float
		constexpr auto Height = 0x54; // float
		constexpr auto Orientation = 0x58; // EARCandidateImageOrientation
	}

	namespace n_UK25P02 { // : UHexPerk
		constexpr auto _totemAuraRevealRadius = 0x440; // float [0x3]
		constexpr auto _totemBlockerHasLifetime = 0x44c; // bool
		constexpr auto _totemBlockerDuration = 0x450; // float [0x3]
		constexpr auto _cursedSurvivors = 0x468; // TArray<FDBDPlayerTotemPair>
		constexpr auto _hookedSurvivors = 0x488; // TArray<ADBDPlayer*>
		constexpr auto _previouslyBoundTotems = 0x498; // TArray<ATotem*>
		constexpr auto _lastPlayerTotemPair = 0x4a8; // FDBDPlayerTotemPair
	}

	namespace n_UUniformScalar { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb8; // float
	}

	namespace n_UAB_Menu_Slasher23_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer_2 = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x440; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x4b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UMaterialExpressionSign { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_UKillerLocomotionSubAnimInstance { // : UBaseKillerAnimInstance
		constexpr auto _landLightTPV = 0x4f8; // UAnimSequence*
		constexpr auto _landLightFPV = 0x500; // UAnimSequence*
		constexpr auto _BSLandTPV = 0x508; // UBlendSpace1D*
		constexpr auto _BSLandFPV = 0x510; // UBlendSpace1D*
		constexpr auto _walkToFallTPV = 0x518; // UAnimSequence*
		constexpr auto _walkToFallFPV = 0x520; // UAnimSequence*
		constexpr auto _carryIdleTPV = 0x528; // UAnimSequence*
		constexpr auto _carryIdleFPV = 0x530; // UAnimSequence*
		constexpr auto _fallingTPV = 0x538; // UAnimSequence*
		constexpr auto _fallingFPV = 0x540; // UAnimSequence*
		constexpr auto _isFirstPersonView = 0x548; // bool
		constexpr auto _landLight = 0x550; // UAnimSequence*
		constexpr auto _BSLand = 0x558; // UBlendSpace1D*
		constexpr auto _walkToFall = 0x560; // UAnimSequence*
		constexpr auto _carryIdle = 0x568; // UAnimSequence*
		constexpr auto _falling = 0x570; // UAnimSequence*
		constexpr auto _isVaultingToFall = 0x578; // bool
		constexpr auto _isVaultingToFallState = 0x580; // FTagStateBool
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x40; // FRawDistributionFloat
		constexpr auto Velocity = 0x70; // FRawDistributionFloat
		constexpr auto Direction = 0xa0; // FVector
	}

	namespace n_UBTService_FindInteractor_WishList { // : UBTService_FindInteractor
		constexpr auto WishListTag = 0x218; // FGameplayTag
	}

	namespace n_ULevelSequence { // : UMovieSceneSequence
		constexpr auto MovieScene = 0x350; // UMovieScene*
		constexpr auto ObjectReferences = 0x358; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0x3a8; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x448; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x498; // UObject*
	}

	namespace n_UEngineMessage { // : ULocalMessage
		constexpr auto FailedPlaceMessage = 0x30; // FString
		constexpr auto MaxedOutMessage = 0x40; // FString
		constexpr auto EnteredMessage = 0x50; // FString
		constexpr auto LeftMessage = 0x60; // FString
		constexpr auto GlobalNameChange = 0x70; // FString
		constexpr auto SpecEnteredMessage = 0x80; // FString
		constexpr auto NewPlayerMessage = 0x90; // FString
		constexpr auto NewSpecMessage = 0xa0; // FString
	}

	namespace n_UGizmoAxisScaleParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x60; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x70; // float
		constexpr auto Parameter = 0x74; // float
		constexpr auto LastChange = 0x78; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x80; // FVector
		constexpr auto CurScaleOrigin = 0x8c; // FVector
		constexpr auto InitialTransform = 0xa0; // FTransform
	}

	namespace n_UCurveVector { // : UCurveBase
		constexpr auto FloatCurves = 0x38; // FRichCurve [0x3]
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints { // : UEnvQueryGenerator
		constexpr auto ProjectionData = 0x58; // FEnvTraceData
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_ALobbyBeaconPlayerState { // : AInfo
		constexpr auto DisplayName = 0x230; // FText
		constexpr auto UniqueId = 0x248; // FUniqueNetIdRepl
		constexpr auto PartyOwnerUniqueId = 0x270; // FUniqueNetIdRepl
		constexpr auto bInLobby = 0x298; // bool
		constexpr auto ClientActor = 0x2a0; // AOnlineBeaconClient*
	}

	namespace n_AActor { // : UObject
		constexpr auto PrimaryActorTick = 0x30; // FActorTickFunction
		constexpr auto bNetTemporary = 0x60; // char : 1
		constexpr auto bNetStartup = 0x60; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x60; // char : 1
		constexpr auto bAlwaysRelevant = 0x60; // char : 1
		constexpr auto bReplicateMovement = 0x60; // char : 1
		constexpr auto bHidden = 0x60; // char : 1
		constexpr auto bTearOff = 0x60; // char : 1
		constexpr auto bExchangedRoles = 0x60; // char : 1
		constexpr auto bNetLoadOnClient = 0x61; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x61; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x61; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x61; // char : 1
		constexpr auto bReplayRewindable = 0x61; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x61; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x61; // char : 1
		constexpr auto bCanBeDamaged = 0x61; // char : 1
		constexpr auto bBlockInput = 0x62; // char : 1
		constexpr auto bCollideWhenPlacing = 0x62; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x62; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x62; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x62; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x62; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x62; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x62; // char : 1
		constexpr auto bReplicates = 0x63; // char : 1
		constexpr auto bCanBeInCluster = 0x63; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x63; // char : 1
		constexpr auto bActorEnableCollision = 0x64; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x64; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x65; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x66; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x67; // ENetRole
		constexpr auto ReplicatedMovement = 0x68; // FRepMovement
		constexpr auto InitialLifeSpan = 0x9c; // float
		constexpr auto CustomTimeDilation = 0xa0; // float
		constexpr auto AttachmentReplication = 0xa8; // FRepAttachment
		constexpr auto Owner = 0xe8; // AActor*
		constexpr auto NetDriverName = 0xf0; // FName
		constexpr auto Role = 0xfc; // ENetRole
		constexpr auto NetDormancy = 0xfd; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0xfe; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0xff; // EAutoReceiveInput
		constexpr auto InputPriority = 0x100; // int32_t
		constexpr auto InputComponent = 0x108; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x110; // float
		constexpr auto NetTag = 0x114; // int32_t
		constexpr auto NetUpdateFrequency = 0x118; // float
		constexpr auto MinNetUpdateFrequency = 0x11c; // float
		constexpr auto NetPriority = 0x120; // float
		constexpr auto Instigator = 0x128; // APawn*
		constexpr auto Children = 0x130; // TArray<AActor*>
		constexpr auto RootComponent = 0x140; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x148; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x160; // TArray<FName>
		constexpr auto ParentComponent = 0x170; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x180; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x190; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x191; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x192; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x193; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x194; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x195; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x196; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x197; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x198; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x199; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x19a; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x19b; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x19c; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x19d; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x19e; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x19f; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x200; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x210; // TArray<UActorComponent*>
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UAtmosphericFogComponent { // : USceneComponent
		constexpr auto SunMultiplier = 0x210; // float
		constexpr auto FogMultiplier = 0x214; // float
		constexpr auto DensityMultiplier = 0x218; // float
		constexpr auto DensityOffset = 0x21c; // float
		constexpr auto DistanceScale = 0x220; // float
		constexpr auto AltitudeScale = 0x224; // float
		constexpr auto DistanceOffset = 0x228; // float
		constexpr auto GroundOffset = 0x22c; // float
		constexpr auto StartDistance = 0x230; // float
		constexpr auto SunDiscScale = 0x234; // float
		constexpr auto DefaultBrightness = 0x238; // float
		constexpr auto DefaultLightColor = 0x23c; // FColor
		constexpr auto bDisableSunDisk = 0x240; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x240; // char : 1
		constexpr auto bDisableGroundScattering = 0x240; // char : 1
		constexpr auto PrecomputeParams = 0x244; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x270; // UTexture2D*
		constexpr auto IrradianceTexture = 0x278; // UTexture2D*
	}

	namespace n_UMaterialExpressionDecalMipmapLevel { // : UMaterialExpression
		constexpr auto TextureSize = 0x48; // FExpressionInput
		constexpr auto ConstWidth = 0x64; // float
		constexpr auto ConstHeight = 0x68; // float
	}

	namespace n_UEditableText { // : UWidget
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto HintText = 0x158; // FText
		constexpr auto HintTextDelegate = 0x170; // FDelegate
		constexpr auto WidgetStyle = 0x188; // FEditableTextStyle
		constexpr auto Style = 0x3c0; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x3c8; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x3d0; // USlateBrushAsset*
		constexpr auto CaretImage = 0x3d8; // USlateBrushAsset*
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x438; // FSlateColor
		constexpr auto IsReadOnly = 0x460; // bool
		constexpr auto IsPassword = 0x461; // bool
		constexpr auto MinimumDesiredWidth = 0x464; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x468; // bool
		constexpr auto SelectAllTextWhenFocused = 0x469; // bool
		constexpr auto RevertTextOnEscape = 0x46a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x46b; // bool
		constexpr auto SelectAllTextOnCommit = 0x46c; // bool
		constexpr auto AllowContextMenu = 0x46d; // bool
		constexpr auto KeyboardType = 0x46e; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x46f; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x470; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x471; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x472; // ETextJustify
		constexpr auto ShapedTextOptions = 0x473; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x478; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x488; // FMulticastInlineDelegate
	}

	namespace n_UPlanarReflectionComponent { // : USceneCaptureComponent
		constexpr auto PreviewBox = 0x2a8; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2b0; // float
		constexpr auto PrefilterRoughness = 0x2b4; // float
		constexpr auto PrefilterRoughnessDistance = 0x2b8; // float
		constexpr auto ScreenPercentage = 0x2bc; // int32_t
		constexpr auto ExtraFOV = 0x2c0; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2c4; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2c8; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2cc; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2d0; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2d4; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2d8; // float
		constexpr auto bShowPreviewPlane = 0x2dc; // bool
		constexpr auto bRenderSceneTwoSided = 0x2dd; // bool
	}

	namespace n_UForceFeedbackComponent { // : USceneComponent
		constexpr auto ForceFeedbackEffect = 0x210; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x218; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x218; // char : 1
		constexpr auto bLooping = 0x218; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x218; // char : 1
		constexpr auto bOverrideAttenuation = 0x218; // char : 1
		constexpr auto IntensityMultiplier = 0x21c; // float
		constexpr auto AttenuationSettings = 0x220; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x228; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2d8; // FMulticastInlineDelegate
	}

	namespace n_UIpConnection { // : UNetConnection
		constexpr auto SocketErrorDisconnectDelay = 0x1a98; // float
	}

	namespace n_UUMGCharacterPrestigeIcon { // : UMobileBaseUserWidget
		constexpr auto PrestigeImage = 0x300; // UImage*
	}

	namespace n_UPolyEditTransformProperties { // : UInteractiveToolPropertySet
		constexpr auto bShowWireframe = 0x58; // bool
		constexpr auto LocalFrameMode = 0x5c; // ELocalFrameMode
		constexpr auto bLockRotation = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
	}

	namespace n_ADefaultPawn { // : APawn
		constexpr auto BaseTurnRate = 0x290; // float
		constexpr auto BaseLookUpRate = 0x294; // float
		constexpr auto MovementComponent = 0x298; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x2a0; // USphereComponent*
		constexpr auto MeshComponent = 0x2a8; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x2b0; // char : 1
	}

	namespace n_UUMGStoreAuricCellButton { // : UUMGBaseButtonWidget
		constexpr auto CurrencyPurchaseData = 0x440; // FCurrencyPurchaseData
		constexpr auto AuricCellTitleText = 0x4a8; // UTextBlock*
		constexpr auto Timer = 0x4b0; // UOverlay*
	}

	namespace n_UZoneDetectorComponent { // : UActorComponent
		constexpr auto _zones = 0xd0; // TArray<UPrimitiveComponent*>
		constexpr auto _tags = 0xe0; // TArray<FName>
	}

	namespace n_UGameplayModifierContainerDataAsset { // : UDBDPrimaryDataAsset
		constexpr auto ModifierContainerComponent = 0x48; // TSoftClassPtr<UObject>
		constexpr auto RequiredModifierContainers = 0x78; // TArray<TSoftObjectPtr<UGameplayModifierContainerDataAsset>>
	}

	namespace n_UPalletAnimInstance { // : USleepingAnimInstance
		constexpr auto _isPulledDown = 0x280; // bool
		constexpr auto _isBeingPulledUp = 0x281; // bool
		constexpr auto _isBeingDestroyed = 0x282; // bool
		constexpr auto _isBeingDestroyedPlayRate = 0x284; // float
		constexpr auto _destroyPalletAnim = 0x288; // FAnimSequenceSelector
	}

	namespace n_UBTDecorator_ExtIsAtLocation { // : UBTDecorator_TickableBase
		constexpr auto BBLoc = 0x70; // FBlackboardKeySelector
		constexpr auto UseAlternativeLoc = 0xa0; // bool
		constexpr auto AcceptableRadius = 0xa4; // FAITunableParameter
	}

	namespace n_UBTTask_FleeMoveTo { // : UBTTask_ExtMoveTo
		constexpr auto InScrambleMovementMinDistance = 0x160; // float
		constexpr auto OutScrambleMovementMinDistance = 0x164; // float
		constexpr auto InScrambleMovementInterval = 0x168; // float
		constexpr auto LoopScrambleMovementInterval = 0x16c; // float
		constexpr auto LoopScrambleMovementRandomDeviation = 0x170; // float
		constexpr auto CrouchWithinLastEvadeLoopPointRadius = 0x174; // float
	}

	namespace n_UDBDProjectileMovementComponent { // : UProjectileMovementComponent
		constexpr auto OnComponentToSweepCollisionBP = 0x1f8; // FMulticastInlineDelegate
		constexpr auto _componentsToSweep = 0x220; // TArray<FComponentSweepInfo>
		constexpr auto _previousPosition = 0x230; // FVector
		constexpr auto _cachedUpdatedComponent = 0x240; // USceneComponent*
		constexpr auto _initialLocation = 0x248; // FVector
		constexpr auto _distanceTravelled = 0x254; // float
		constexpr auto _hasMaximumDistance = 0x258; // bool
		constexpr auto _maximumTravelDistance = 0x25c; // float
	}

	namespace n_UGMAdaptiveShadowMapControllerComponent { // : USceneComponent
		constexpr auto TileSize = 0x210; // FBHVRPerDetailModeInt
		constexpr auto TileCountX = 0x2b0; // int32_t
		constexpr auto TileCountY = 0x2b4; // int32_t
		constexpr auto GridSize = 0x2b8; // FIntPoint
		constexpr auto GeneratedTilesPerFrame = 0x2c0; // int32_t
		constexpr auto MaxPreallocatedTilesPerFrame = 0x2c8; // FBHVRPerDetailModeInt
		constexpr auto bSupportsDirectionalLights = 0x368; // bool
		constexpr auto bSupportsSpotLights = 0x369; // bool
		constexpr auto LightFunctionMaterial = 0x370; // UMaterialInterface*
		constexpr auto CullShadowIfPixelSizeLessThan = 0x378; // float
		constexpr auto bPreviewOnly = 0x37c; // bool
		constexpr auto _atlas = 0x390; // UGMAdaptiveShadowMapAtlas*
		constexpr auto _controller = 0x398; // UGMAdaptiveShadowMapController*
		constexpr auto _shadowMapSources = 0x3a0; // TMap<UGMAdaptiveShadowMapSourceComponent*, UGMAdaptiveShadowMapSource*>
		constexpr auto _lightFunctionMaterialInstance = 0x3f0; // UMaterialInstanceDynamic*
	}

	namespace n_UNotModifierCondition { // : UEventDrivenModifierCondition
		constexpr auto _condition = 0xf0; // UEventDrivenModifierCondition*
	}

	namespace n_UBTTask_MoveToAbortIfStuck { // : UBTTask_MoveTo
		constexpr auto _deltaConsideredStuck = 0xc4; // float
		constexpr auto _maxTimeStuck = 0xd4; // float
	}

	namespace n_UTwinBaseAddon { // : UItemAddon
		constexpr auto _statusEffectId = 0x298; // FName
		constexpr auto _customParam = 0x2a4; // float
	}

	namespace n_UPerkSoundHudIconSporadic { // : UPerkSoundHudIcon
		constexpr auto SporadicIcon = 0x310; // UCanvasPanel*
		constexpr auto FadeInRate = 0x318; // float
		constexpr auto FadeOutRate = 0x31c; // float
		constexpr auto AnimationStartOpacity = 0x320; // float
		constexpr auto FadePolynomialOrder = 0x324; // int32_t
		constexpr auto DisplayIcon = 0x328; // bool
	}

	namespace n_USubmixEffectFlexiverbPreset { // : USoundEffectSubmixPreset
		constexpr auto Settings = 0x80; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UTimeSynchronizationSource { // : UObject
		constexpr auto bUseForSynchronization = 0x30; // bool
		constexpr auto FrameOffset = 0x34; // int32_t
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0x48; // FName
		constexpr auto Description = 0x58; // FString
		constexpr auto SortPriority = 0x68; // int32_t
		constexpr auto A = 0x6c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x88; // char : 1
		constexpr auto ID = 0x8c; // FGuid
	}

	namespace n_UPaperTileLayer { // : UObject
		constexpr auto LayerName = 0x30; // FText
		constexpr auto LayerWidth = 0x48; // int32_t
		constexpr auto LayerHeight = 0x4c; // int32_t
		constexpr auto bHiddenInGame = 0x50; // char : 1
		constexpr auto bLayerCollides = 0x50; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x50; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x50; // char : 1
		constexpr auto CollisionThicknessOverride = 0x54; // float
		constexpr auto CollisionOffsetOverride = 0x58; // float
		constexpr auto LayerColor = 0x5c; // FLinearColor
		constexpr auto AllocatedWidth = 0x6c; // int32_t
		constexpr auto AllocatedHeight = 0x70; // int32_t
		constexpr auto AllocatedCells = 0x78; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x88; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x90; // TArray<int32_t>
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x38; // FName
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x78; // char : 1
		constexpr auto Strength = 0x80; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xb0; // char : 1
		constexpr auto SelectionMethod = 0xb4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xb8; // char : 1
		constexpr auto bInheritSourceVel = 0xb8; // char : 1
		constexpr auto LastSelIndex = 0xbc; // int32_t
	}

	namespace n_USplashScreenUMG { // : USplashScreen
		constexpr auto _splashScreen = 0x138; // UUMGSplashScreen*
	}

	namespace n_URemoveOccludedTrianglesTool { // : UMultiSelectionTool
		constexpr auto BasicProperties = 0x98; // URemoveOccludedTrianglesToolProperties*
		constexpr auto AdvancedProperties = 0xa0; // URemoveOccludedTrianglesAdvancedProperties*
		constexpr auto Previews = 0xa8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PreviewCopies = 0xb8; // TArray<UPreviewMesh*>
	}

	namespace n_UCoreBaseHudWidget { // : UCoreBaseUserWidget
		constexpr auto FocusAnimationDuration = 0x2d8; // float
		constexpr auto FocusAnimationDelay = 0x2dc; // float
		constexpr auto FocusAnimationEasing = 0x2e0; // EEasingType
		constexpr auto FocusAnimationMaxOpacity = 0x2e4; // float
		constexpr auto FocusAnimationMinOpacity = 0x2e8; // float
	}

	namespace n_USearchableSpawnPoint { // : UTileSpawnPoint
		constexpr auto ActorToSpawn = 0x280; // AActor*
	}

	namespace n_UNiagaraScript { // : UObject
		constexpr auto Usage = 0x30; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x34; // int32_t
		constexpr auto UsageId = 0x38; // FGuid
		constexpr auto RapidIterationParameters = 0x48; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0x100; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x1d8; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x1e8; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x3e0; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x508; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x518; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UMaterialExpressionDDY { // : UMaterialExpression
		constexpr auto value = 0x48; // FExpressionInput
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto TargetMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa8; // FName
	}

	namespace n_UFlashlightableComponent { // : UActorComponent
		constexpr auto OnFlashlightAddedEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto OnFlashlightRemovedEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnFlashlightLitChangedEvent = 0xd8; // FMulticastInlineDelegate
		constexpr auto _lightingStrategy = 0xe8; // UFlashlightableLightingStrategy*
		constexpr auto _flashlights = 0xf0; // TSet<UFlashlightComponent*>
	}

	namespace n_ABubbleIndicator { // : AActor
		constexpr auto _lifeTime = 0x230; // float
		constexpr auto _displayToLocallyObserved = 0x234; // bool
		constexpr auto _isInRange = 0x235; // bool
	}

	namespace n_UDisplayStandCharmRequesterComponent { // : UActorComponent
		constexpr auto _menuCharmClass = 0xb8; // ACharm*
	}

	namespace n_UUMGCharacterSelectSubmenuButton { // : UUMGBaseButtonWidget
		constexpr auto NotificationPanel = 0x430; // UCanvasPanel*
	}

	namespace n_UOuterlineComponent { // : USceneComponent
		constexpr auto CloneCustomDepthMaterial = 0x210; // UMaterialInterface*
		constexpr auto CloneTranslucentMaterial = 0x218; // UMaterialInterface*
		constexpr auto _cloneCustomDepthMaterialDynamic = 0x220; // UMaterialInstanceDynamic*
		constexpr auto _cloneTranslucentMaterialDynamic = 0x228; // UMaterialInstanceDynamic*
		constexpr auto _customDepthSkeletalMesh = 0x230; // USkeletalMeshComponent*
		constexpr auto _overlaySkeletalMesh = 0x238; // USkeletalMeshComponent*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection { // : UMaterialExpression
		constexpr auto LightIndex = 0x48; // int32_t
	}

	namespace n_UMeshSimplificationSettings { // : UDeveloperSettings
		constexpr auto MeshReductionModuleName = 0x48; // FName
	}

	namespace n_USpacer { // : UWidget
		constexpr auto Size = 0x128; // FVector2D
	}

	namespace n_APlayerState { // : AInfo
		constexpr auto Score = 0x230; // float
		constexpr auto playerID = 0x234; // int32_t
		constexpr auto Ping = 0x238; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x23a; // char : 1
		constexpr auto bIsSpectator = 0x23a; // char : 1
		constexpr auto bOnlySpectator = 0x23a; // char : 1
		constexpr auto bIsABot = 0x23a; // char : 1
		constexpr auto bIsInactive = 0x23a; // char : 1
		constexpr auto bFromPreviousLevel = 0x23a; // char : 1
		constexpr auto StartTime = 0x23c; // int32_t
		constexpr auto EngineMessageClass = 0x240; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x250; // FString
		constexpr auto UniqueId = 0x260; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x298; // APawn*
		constexpr auto PlayerNamePrivate = 0x318; // FString
	}

	namespace n_UCoreTabContainerWidget { // : UCoreButtonSelector
		constexpr auto AlignHorizontally = 0x320; // bool
		constexpr auto TabPadding = 0x324; // FMargin
		constexpr auto CoreTabClass = 0x338; // UCoreTabWidget*
		constexpr auto TabContainer = 0x340; // UGridPanel*
		constexpr auto UseControllerTabSwitching = 0x348; // bool
		constexpr auto CanLoop = 0x349; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 { // : UNiagaraPreviewAxis_InterpParamBase
		constexpr auto Min = 0x40; // int32_t
		constexpr auto Max = 0x44; // int32_t
	}

	namespace n_UPopupFactory { // : UObject
		constexpr auto _gameInstance = 0x30; // UDBDGameInstance*
	}

	namespace n_UPostEventAsync { // : UBlueprintAsyncActionBase
		constexpr auto COMPLETED = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x38; // char : 1
	}

	namespace n_UStakeOutPerk { // : UPerk
		constexpr auto MaxTokensByLevel = 0x3d0; // TArray<int32_t>
		constexpr auto TokenChargeTime = 0x3e0; // float
	}

	namespace n_UIsPlayerPerfInteractionWithNoItem { // : UBaseIsPlayerPerformingInteraction
		constexpr auto _useItemInteractionSemantics = 0x128; // FGameplayTagContainer
		constexpr auto _itemType = 0x150; // ELoadoutItemType
	}

	namespace n_UAudioComponent { // : USceneComponent
		constexpr auto Sound = 0x210; // USoundBase*
		constexpr auto InstanceParameters = 0x218; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x228; // USoundClass*
		constexpr auto bAutoDestroy = 0x230; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x230; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x230; // char : 1
		constexpr auto bAllowSpatialization = 0x230; // char : 1
		constexpr auto bOverrideAttenuation = 0x230; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x230; // char : 1
		constexpr auto bIsUISound = 0x230; // char : 1
		constexpr auto bEnableLowPassFilter = 0x230; // char : 1
		constexpr auto bOverridePriority = 0x231; // char : 1
		constexpr auto bSuppressSubtitles = 0x231; // char : 1
		constexpr auto bAutoManageAttachment = 0x232; // char : 1
		constexpr auto AudioComponentUserID = 0x238; // FName
		constexpr auto PitchModulationMin = 0x244; // float
		constexpr auto PitchModulationMax = 0x248; // float
		constexpr auto VolumeModulationMin = 0x24c; // float
		constexpr auto VolumeModulationMax = 0x250; // float
		constexpr auto VolumeMultiplier = 0x254; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x258; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x25c; // int32_t
		constexpr auto Priority = 0x260; // float
		constexpr auto SubtitlePriority = 0x264; // float
		constexpr auto SourceEffectChain = 0x268; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x270; // float
		constexpr auto LowPassFilterFrequency = 0x274; // float
		constexpr auto AttenuationSettings = 0x280; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x288; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x628; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x630; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x68c; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x68d; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x68e; // EAttachmentRule
		constexpr auto OnAudioFinished = 0x690; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x6b8; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x6e0; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x708; // FMulticastInlineDelegate
		constexpr auto Modulation = 0x730; // FSoundModulation
		constexpr auto OnQueueSubtitles = 0x740; // FDelegate
		constexpr auto AutoAttachParent = 0x754; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x75c; // FName
	}

	namespace n_URangeToActorsTrackerDefaultStrategy { // : URangeToActorsTrackerStrategy
		constexpr auto _actorClass = 0x70; // AActor*
	}

	namespace n_UEngine { // : UObject
		constexpr auto TinyFont = 0x38; // UFont*
		constexpr auto TinyFontName = 0x40; // FSoftObjectPath
		constexpr auto SmallFont = 0x60; // UFont*
		constexpr auto SmallFontName = 0x68; // FSoftObjectPath
		constexpr auto MediumFont = 0x88; // UFont*
		constexpr auto MediumFontName = 0x90; // FSoftObjectPath
		constexpr auto LargeFont = 0xb0; // UFont*
		constexpr auto LargeFontName = 0xb8; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xd8; // UFont*
		constexpr auto SubtitleFontName = 0xe0; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0x100; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0x118; // TArray<FString>
		constexpr auto ConsoleClass = 0x128; // UConsole*
		constexpr auto ConsoleClassName = 0x130; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x150; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x158; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x178; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x180; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x1a0; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x1a8; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x1c8; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x1e8; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x1f0; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x210; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x218; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x238; // UAvoidanceManager*
		constexpr auto PhysicsCollisionHandlerClass = 0x240; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x248; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x268; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x288; // UGameUserSettings*
		constexpr auto AIControllerClassName = 0x290; // FSoftClassPath
		constexpr auto GameUserSettings = 0x2b0; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x2b8; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x2c0; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x2e0; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x300; // FSoftClassPath
		constexpr auto GameSingleton = 0x320; // UObject*
		constexpr auto AssetManagerClassName = 0x328; // FSoftClassPath
		constexpr auto AssetManager = 0x348; // UAssetManager*
		constexpr auto DefaultTexture = 0x350; // UTexture2D*
		constexpr auto DefaultTextureName = 0x358; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x378; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x380; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x3a0; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x3a8; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x3c8; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x3d0; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x3f0; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x3f8; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x418; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x420; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x440; // UMaterial*
		constexpr auto WireframeMaterialName = 0x448; // FString
		constexpr auto DebugMeshMaterial = 0x458; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x460; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x480; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x488; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x4a8; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x4b0; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x4c0; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x4c8; // FString
		constexpr auto LightingTexelDensityMaterial = 0x4d8; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x4e0; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x4f0; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x4f8; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x508; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x510; // FString
		constexpr auto RemoveSurfaceMaterial = 0x520; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x528; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x548; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x550; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x560; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x568; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x578; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x580; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x590; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x598; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x5a8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x5b0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x5c0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x5c8; // FString
		constexpr auto DebugEditorMaterialName = 0x5d8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x5f8; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x600; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x608; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x610; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x618; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x620; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x628; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x630; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x638; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x640; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x660; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x668; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x688; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x690; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x698; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x6b8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x6c8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x6d8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x6e8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x6f8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x708; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x718; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x728; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x738; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x73c; // float
		constexpr auto MinLightMapDensity = 0x740; // float
		constexpr auto IdealLightMapDensity = 0x744; // float
		constexpr auto MaxLightMapDensity = 0x748; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x74c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x750; // float
		constexpr auto RenderLightMapDensityColorScale = 0x754; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x758; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x768; // FLinearColor
		constexpr auto StatColorMappings = 0x778; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x788; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x790; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x7b0; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x7c0; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x7d0; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x7e0; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x7f0; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x7f8; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x818; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x820; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x840; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x848; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x868; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x870; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x890; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x898; // FSoftObjectPath
		constexpr auto GameViewport = 0x8c0; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x8c8; // TArray<FString>
		constexpr auto TickCycles = 0x8d8; // int32_t
		constexpr auto GameCycles = 0x8dc; // int32_t
		constexpr auto ClientCycles = 0x8e0; // int32_t
		constexpr auto NearClipPlane = 0x8e4; // float
		constexpr auto bHardwareSurveyEnabled = 0x8e8; // char : 1
		constexpr auto bSubtitlesEnabled = 0x8e8; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x8e8; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x8ec; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x8f0; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x8f0; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x8f0; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x8f0; // char : 1
		constexpr auto bSmoothFrameRate = 0x8f0; // char : 1
		constexpr auto bUseFixedFrameRate = 0x8f0; // char : 1
		constexpr auto FixedFrameRate = 0x8f4; // float
		constexpr auto SmoothedFrameRateRange = 0x8f8; // FFloatRange
		constexpr auto CustomTimeStep = 0x908; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x930; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x950; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x978; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x998; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x99c; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x9a4; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x9a8; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x9ac; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x9b0; // char : 1
		constexpr auto C_WorldBox = 0x9b4; // FColor
		constexpr auto C_BrushWire = 0x9b8; // FColor
		constexpr auto C_AddWire = 0x9bc; // FColor
		constexpr auto C_SubtractWire = 0x9c0; // FColor
		constexpr auto C_SemiSolidWire = 0x9c4; // FColor
		constexpr auto C_NonSolidWire = 0x9c8; // FColor
		constexpr auto C_WireBackground = 0x9cc; // FColor
		constexpr auto C_ScaleBoxHi = 0x9d0; // FColor
		constexpr auto C_VolumeCollision = 0x9d4; // FColor
		constexpr auto C_BSPCollision = 0x9d8; // FColor
		constexpr auto C_OrthoBackground = 0x9dc; // FColor
		constexpr auto C_Volume = 0x9e0; // FColor
		constexpr auto C_BrushShape = 0x9e4; // FColor
		constexpr auto StreamingDistanceFactor = 0x9e8; // float
		constexpr auto GameScreenshotSaveDirectory = 0x9f0; // FDirectoryPath
		constexpr auto TransitionType = 0xa00; // ETransitionType
		constexpr auto TransitionDescription = 0xa08; // FString
		constexpr auto TransitionGameMode = 0xa18; // FString
		constexpr auto MeshLODRange = 0xa28; // float
		constexpr auto bAllowMatureLanguage = 0xa2c; // char : 1
		constexpr auto CameraRotationThreshold = 0xa30; // float
		constexpr auto CameraTranslationThreshold = 0xa34; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0xa38; // float
		constexpr auto MaxOcclusionPixelsFraction = 0xa3c; // float
		constexpr auto bPauseOnLossOfFocus = 0xa40; // char : 1
		constexpr auto MaxParticleResize = 0xa44; // int32_t
		constexpr auto MaxParticleResizeWarn = 0xa48; // int32_t
		constexpr auto PendingDroppedNotes = 0xa50; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0xa60; // float
		constexpr auto DisplayGamma = 0xa64; // float
		constexpr auto MinDesiredFrameRate = 0xa68; // float
		constexpr auto DefaultSelectedMaterialColor = 0xa6c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0xa7c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0xa8c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0xa9c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0xaac; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0xabc; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0xac0; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0xac0; // char : 1
		constexpr auto bSuppressMapWarnings = 0xac0; // char : 1
		constexpr auto bDisableAILogging = 0xac0; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0xac4; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0xacc; // int32_t
		constexpr auto bLockReadOnlyLevels = 0xad0; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0xad8; // FString
		constexpr auto SelectionHighlightIntensity = 0xae8; // float
		constexpr auto BSPSelectionHighlightIntensity = 0xaec; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0xaf0; // float
		constexpr auto NetDriverDefinitions = 0xd40; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xd50; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xd60; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xd70; // float
		constexpr auto bStartedLoadMapMovie = 0xd74; // char : 1
		constexpr auto NextWorldContextHandle = 0xd90; // int32_t
	}

	namespace n_UHierarchicalLODSetup { // : UObject
		constexpr auto HierarchicalLODSetup = 0x30; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x40; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_UActorSequenceComponent { // : UActorComponent
		constexpr auto PlaybackSettings = 0xb8; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xd0; // UActorSequence*
		constexpr auto SequencePlayer = 0xd8; // UActorSequencePlayer*
	}

	namespace n_UNiagaraComponentPool { // : UObject
		constexpr auto WorldParticleSystemPools = 0x30; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UAddon_TheBlight_ConsecutiveDashSpeedBonus { // : UItemAddon
		constexpr auto _speedIncreasePerDash = 0x298; // float
	}

	namespace n_UChainKillerMovementStatusEffect { // : UChainPlayerMovementStatusEffect
		constexpr auto _backwardMovementSpeedMultiplier = 0x3a8; // FDBDTunableRowHandle
		constexpr auto _backwardMovementAngle = 0x3d0; // FDBDTunableRowHandle
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample { // : UMaterialExpression
		constexpr auto Coordinates = 0x48; // FExpressionInput
		constexpr auto WorldPosition = 0x64; // FExpressionInput
		constexpr auto MipValue = 0x80; // FExpressionInput
		constexpr auto VirtualTexture = 0xa0; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0xa8; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0xa9; // bool
		constexpr auto MipValueMode = 0xaa; // ERuntimeVirtualTextureMipValueMode
	}

	namespace n_UUMGTallyRankBanner { // : UMobileBaseUserWidget
		constexpr auto PipsContainerWidget = 0x300; // UUMGTallyPipsContainer*
		constexpr auto RankBanner = 0x308; // UUMGRankBanner*
		constexpr auto SmokeBackground = 0x310; // UImage*
	}

	namespace n_UMaterialExpressionCollectionParameter { // : UMaterialExpression
		constexpr auto Collection = 0x48; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ParameterId = 0x5c; // FGuid
	}

	namespace n_UK26PowerChargePresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _ammoHandler = 0xb8; // UK26AmmoHandlerComponent*
	}

	namespace n_UGhostKillerAnalyticsComponent { // : UActorComponent
		constexpr auto _ghostKillerAnalytics = 0xf0; // FGhostKillerAnalytics
	}

	namespace n_ALevelSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x240; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x258; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x260; // FSoftObjectPath
		constexpr auto AdditionalEventReceivers = 0x280; // TArray<AActor*>
		constexpr auto CameraSettings = 0x290; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x298; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x2a0; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x2a8; // char : 1
		constexpr auto bOverrideInstanceData = 0x2a8; // char : 1
		constexpr auto bReplicatePlayback = 0x2a8; // char : 1
		constexpr auto DefaultInstanceData = 0x2b0; // UObject*
		constexpr auto BurnInInstance = 0x2b8; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x2c0; // bool
	}

	namespace n_UInteractiveToolsContext { // : UObject
		constexpr auto InputRouter = 0x60; // UInputRouter*
		constexpr auto ToolManager = 0x68; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x70; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x78; // TSoftClassPtr<UObject>
	}

	namespace n_UCreateSessionCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UAISkill_FindInteractable_SolveRBT { // : UAISkill_FindInteractable
		constexpr auto UrgencyGoalWeight = 0x118; // FAITunableParameter
		constexpr auto PriorityGoalWeight = 0x128; // FAITunableParameter
	}

	namespace n_ARecastNavMesh { // : ANavigationData
		constexpr auto bDrawTriangleEdges = 0x428; // char : 1
		constexpr auto bDrawPolyEdges = 0x428; // char : 1
		constexpr auto bDrawFilledPolys = 0x428; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x428; // char : 1
		constexpr auto bDrawTileBounds = 0x428; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x428; // char : 1
		constexpr auto bDrawTileLabels = 0x428; // char : 1
		constexpr auto bDrawPolygonLabels = 0x428; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x429; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x429; // char : 1
		constexpr auto bDrawNavLinks = 0x429; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x429; // char : 1
		constexpr auto bDrawClusters = 0x429; // char : 1
		constexpr auto bDrawOctree = 0x429; // char : 1
		constexpr auto bDrawOctreeDetails = 0x429; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x429; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x42a; // char : 1
		constexpr auto bDrawNavMesh = 0x42a; // char : 1
		constexpr auto DrawOffset = 0x42c; // float
		constexpr auto bFixedTilePoolSize = 0x430; // char : 1
		constexpr auto TilePoolSize = 0x434; // int32_t
		constexpr auto TileSizeUU = 0x438; // float
		constexpr auto CellSize = 0x43c; // float
		constexpr auto CellHeight = 0x440; // float
		constexpr auto AgentRadius = 0x444; // float
		constexpr auto AgentHeight = 0x448; // float
		constexpr auto AgentMaxHeight = 0x44c; // float
		constexpr auto AgentMaxSlope = 0x450; // float
		constexpr auto AgentMaxStepHeight = 0x454; // float
		constexpr auto MinRegionArea = 0x458; // float
		constexpr auto MergeRegionSize = 0x45c; // float
		constexpr auto MaxSimplificationError = 0x460; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x464; // int32_t
		constexpr auto TileNumberHardLimit = 0x468; // int32_t
		constexpr auto PolyRefTileBits = 0x46c; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x470; // int32_t
		constexpr auto PolyRefSaltBits = 0x474; // int32_t
		constexpr auto NavMeshOriginOffset = 0x478; // FVector
		constexpr auto DefaultDrawDistance = 0x484; // float
		constexpr auto DefaultMaxSearchNodes = 0x488; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x48c; // float
		constexpr auto RegionPartitioning = 0x490; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x491; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x494; // int32_t
		constexpr auto LayerChunkSplits = 0x498; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x49c; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x49c; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x49c; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x49c; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x49c; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x49c; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x49c; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x49c; // char : 1
		constexpr auto bUseVirtualFilters = 0x49d; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x49d; // char : 1
		constexpr auto bUseVoxelCache = 0x49d; // char : 1
		constexpr auto TileSetUpdateInterval = 0x4a0; // float
		constexpr auto HeuristicScale = 0x4a4; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x4a8; // float
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0x78; // FInterpCurveFloat
		constexpr auto CurveTension = 0x90; // float
	}

	namespace n_UMagicLeapARPinComponent { // : USceneComponent
		constexpr auto ObjectUID = 0x210; // FString
		constexpr auto UserIndex = 0x220; // int32_t
		constexpr auto AutoPinType = 0x224; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x225; // bool
		constexpr auto PinDataClass = 0x228; // UMagicLeapARPinSaveGame*
		constexpr auto OnPersistentEntityPinned = 0x230; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x240; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x250; // FGuid
		constexpr auto PinnedSceneComponent = 0x260; // USceneComponent*
		constexpr auto PinData = 0x268; // UMagicLeapARPinSaveGame*
	}

	namespace n_UKillInteractionDefinition { // : UChargeableInteractionDefinition
		constexpr auto _disableFOVSystemDuringInteraction = 0x6d8; // bool
		constexpr auto _nonOverrideableTargetInteractions = 0x6e0; // TArray<FString>
		constexpr auto _chargeCompleted = 0x6f0; // bool
		constexpr auto _isKillShownInThirdPerson = 0x6f1; // bool
		constexpr auto _manuallyManageMeshHiding = 0x6f2; // bool
		constexpr auto _exitMontage = 0x6f8; // FAnimationMontageDescriptor
	}

	namespace n_UMaterialExpressionSpriteTextureSampler { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bSampleAdditionalTextures = 0x130; // bool
		constexpr auto AdditionalSlotIndex = 0x134; // int32_t
		constexpr auto SlotDisplayName = 0x138; // FText
	}

	namespace n_UProgressWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto ProgressBarStyle = 0x38; // FProgressBarStyle
	}

	namespace n_UFlashlightFXComponent { // : UActorComponent
		constexpr auto OnFlashEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto _tip = 0xc8; // USceneComponent*
		constexpr auto _centerGlowMesh = 0xd0; // UStaticMeshComponent*
		constexpr auto _beamMesh = 0xd8; // USplineMeshComponent*
		constexpr auto _minimumOcclusionDistanceForSpotlight = 0xe0; // float
		constexpr auto _flashEffectIntensityCurve = 0xe8; // UCurveFloat*
		constexpr auto _flashEffectDuration = 0xf0; // float
		constexpr auto _spotLightHalfAngle = 0xf4; // float
		constexpr auto _spotLightIntensity = 0xf8; // float
		constexpr auto _visualReworkSpotLightIntensity = 0xfc; // float
		constexpr auto _beamBlindingHalfAngle = 0x100; // float
		constexpr auto _beamFlashHalfAngle = 0x104; // float
		constexpr auto _beamBlindingRatioInterpSpeedWithTarget = 0x108; // float
		constexpr auto _beamBlindingRatioInterpSpeedWithoutTarget = 0x10c; // float
		constexpr auto _resizeConeLength = 0x110; // bool
		constexpr auto _centerGlowWidthScaleWithoutBlindTarget = 0x114; // float
		constexpr auto _centerGlowWidthScaleWithBlindTarget = 0x118; // float
		constexpr auto _centerGlowWidthScaleDuringFlash = 0x11c; // float
		constexpr auto _centerGlowShrinkDistance = 0x120; // float
		constexpr auto _centerGlowLengthMaxScale = 0x124; // float
		constexpr auto _aimedAtSoundLoop = 0x128; // FAkObservedPlayerSoundLoop
		constexpr auto _currentBeamModifyingTarget = 0x168; // UFlashlightTargetFXComponent*
		constexpr auto _targets = 0x170; // TSet<UFlashlightTargetFXComponent*>
	}

	namespace n_UUmgSurvivorHud { // : UUmgPlayableHud
		constexpr auto CrouchButton = 0x530; // UActionButton*
		constexpr auto CrouchButtonContainer = 0x538; // UCanvasPanel*
		constexpr auto StruggleWidget = 0x540; // UWiggleWidget*
		constexpr auto StruggleWidgetContainer = 0x548; // UCanvasPanel*
		constexpr auto WiggleWidget = 0x550; // UWiggleWidget*
		constexpr auto WiggleWidgetContainer = 0x558; // UCanvasPanel*
		constexpr auto survivor = 0x560; // ACamperPlayer*
		constexpr auto CancelButton = 0x568; // UActionButton*
		constexpr auto CenterInteractionButtonContainer = 0x570; // UCanvasPanel*
		constexpr auto LookBackButtonContainer = 0x578; // UCanvasPanel*
		constexpr auto LookBackJoystick = 0x580; // UAtlantaHudLookBackJoystick*
		constexpr auto SkillCheckButton = 0x588; // UActionButton*
		constexpr auto SkillCheckButtonCanvas = 0x590; // UCanvasPanel*
		constexpr auto InsaneSkillCheckButtonCanvas = 0x598; // UCanvasPanel*
		constexpr auto _unpressedLookBackJoystickThumbImage = 0x5a8; // FSlateBrush
		constexpr auto _pressedLookBackJoystickThumbImage = 0x638; // FSlateBrush
		constexpr auto _unpressedLookBackJoystickBackgroundImage = 0x6e8; // FSlateBrush
		constexpr auto _pressedLookBackJoystickBackgroundImage = 0x778; // FSlateBrush
	}

	namespace n_USoundAttenuation { // : UObject
		constexpr auto Attenuation = 0x30; // FSoundAttenuationSettings
	}

	namespace n_UCollectItemInteraction { // : UInteractionDefinition
		constexpr auto OnCollectUpdateStart = 0x5b0; // FMulticastInlineDelegate
		constexpr auto OnCollectUpdateEnd = 0x5c0; // FMulticastInlineDelegate
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x40; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x50; // char : 1
	}

	namespace n_UInteractiveToolManager { // : UObject
		constexpr auto ActiveLeftTool = 0x38; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x40; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x98; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_ULocationServicesImpl { // : UObject
		constexpr auto OnLocationChanged = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UDrawPolyPathProperties { // : UInteractiveToolPropertySet
		constexpr auto OutputType = 0x58; // EDrawPolyPathOutputMode
		constexpr auto WidthMode = 0x5c; // EDrawPolyPathWidthMode
		constexpr auto Width = 0x60; // float
		constexpr auto HeightMode = 0x64; // EDrawPolyPathHeightMode
		constexpr auto Height = 0x68; // float
		constexpr auto RampStartRatio = 0x6c; // float
		constexpr auto bSnapToWorldGrid = 0x70; // bool
	}

	namespace n_UHookedIndicatorWidget { // : UBaseIndicatorWidget
		constexpr auto HookedIndicatorDuration = 0x348; // float
	}

	namespace n_UObjectRandomizer { // : USceneComponent
		constexpr auto Spawners = 0x210; // TArray<UActorSpawner*>
		constexpr auto MinPopulation = 0x220; // int32_t
		constexpr auto MaxPopulation = 0x224; // int32_t
	}

	namespace n_UStatusEffectCollectionComponent { // : UActorComponent
		constexpr auto _array = 0xb8; // TArray<UStatusEffect*>
		constexpr auto _local_oldArray = 0xc8; // TArray<UStatusEffect*>
	}

	namespace n_UArmIKSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _rightWristUpRotation = 0x4f0; // FRotator
		constexpr auto _leftWristUpRotation = 0x4fc; // FRotator
		constexpr auto _localWristYawRange = 0x508; // FFloatRange
		constexpr auto _localWristPitchRange = 0x518; // FFloatRange
		constexpr auto _armInterpolationSpeed = 0x528; // float
		constexpr auto _handInterpolationSpeed = 0x52c; // float
		constexpr auto _alphaLerpTime = 0x530; // float
		constexpr auto _reachPadding = 0x534; // float
		constexpr auto _rightArmIKAlpha = 0x538; // float
		constexpr auto _leftArmIKAlpha = 0x53c; // float
		constexpr auto _armIkMode = 0x540; // EArmIkMode
		constexpr auto _rightDetectionFan = 0x548; // UArmDetectionFanComponent*
		constexpr auto _leftDetectionFan = 0x550; // UArmDetectionFanComponent*
		constexpr auto _meshComponent = 0x558; // USkeletalMeshComponent*
	}

	namespace n_UUMGPageScrollWidget { // : UMobileBaseUserWidget
		constexpr auto ItemWidth = 0x300; // float
		constexpr auto ItemHeight = 0x304; // float
		constexpr auto RowCount = 0x308; // int32_t
		constexpr auto ColumnCount = 0x30c; // int32_t
		constexpr auto ItemGapDistance = 0x310; // int32_t
		constexpr auto TotalPageCount = 0x314; // int32_t
		constexpr auto ButtonWidth = 0x318; // float
		constexpr auto OnPageChangeSound = 0x320; // UAkAudioEvent*
		constexpr auto ContainerPanel = 0x328; // UCanvasPanel*
		constexpr auto ButtonsPanel = 0x330; // UHorizontalBox*
		constexpr auto _pageButtonWidgetClass = 0x338; // TSoftClassPtr<UObject>
		constexpr auto _itemArray = 0x368; // TArray<UCanvasPanel*>
		constexpr auto _currentPageIndex = 0x378; // int32_t
		constexpr auto _activeWidgets = 0x380; // TArray<UMobileBaseUserWidget*>
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x50; // TArray<float>
	}

	namespace n_UIsPlayerPerformingInteraction { // : UEventDrivenModifierCondition
		constexpr auto _interactionSemantics = 0xe8; // FGameplayTagContainer
	}

	namespace n_UButtonSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UGassedStatusEffect { // : UStatusEffect
		constexpr auto _isInCloud = 0x350; // bool
		constexpr auto _isInAntidoteCloud = 0x351; // bool
		constexpr auto _overlappingClouds = 0x358; // TSet<ABaseGasCloudProjectile*>
		constexpr auto _overlappingAntidoteClouds = 0x3a8; // TSet<ABaseGasCloudProjectile*>
		constexpr auto _totalTimesEnteringToxicClouds = 0x400; // uint16_t
	}

	namespace n_USourceEffectSimpleDelayPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x88; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0xc8; // int32_t
		constexpr auto SizeY = 0xcc; // int32_t
		constexpr auto ClearColor = 0xd0; // FLinearColor
		constexpr auto AddressX = 0xe0; // TextureAddress
		constexpr auto AddressY = 0xe1; // TextureAddress
		constexpr auto bForceLinearGamma = 0xe2; // char : 1
		constexpr auto bHDR = 0xe2; // char : 1
		constexpr auto bGPUSharedFlag = 0xe2; // char : 1
		constexpr auto RenderTargetFormat = 0xe3; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xe4; // char : 1
		constexpr auto MipsSamplerFilter = 0xe5; // TextureFilter
		constexpr auto MipsAddressU = 0xe6; // TextureAddress
		constexpr auto MipsAddressV = 0xe7; // TextureAddress
		constexpr auto OverrideFormat = 0xe8; // EPixelFormat
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x38; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x68; // char : 1
		constexpr auto bFloor = 0x68; // char : 1
		constexpr auto bApplyPSysScale = 0x68; // char : 1
	}

	namespace n_UPlaneReflectionCaptureComponent { // : UReflectionCaptureComponent
		constexpr auto InfluenceRadiusScale = 0x2b8; // float
		constexpr auto PreviewInfluenceRadius = 0x2c0; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x2c8; // UBoxComponent*
	}

	namespace n_ULevelCapture { // : UMovieSceneCapture
		constexpr auto bAutoStartCapture = 0x238; // bool
		constexpr auto PrerequisiteActorId = 0x244; // FGuid
	}

	namespace n_ULoudNoiseHUDIndicator { // : USceneComponent
		constexpr auto MaskMesh = 0x210; // UStaticMesh*
		constexpr auto DistortionMesh = 0x218; // UStaticMesh*
		constexpr auto EdgePadding = 0x220; // float
		constexpr auto CornerRoundness = 0x224; // float
		constexpr auto ScreenFadeOutDistance = 0x228; // float
		constexpr auto LoudNoiseAddedEvent = 0x230; // FMulticastInlineDelegate
		constexpr auto _trackedNoises = 0x270; // TArray<FLoudNoiseIndicatorData>
	}

	namespace n_ABP_Menu_CamperMale14_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
		constexpr auto SM_ION_Tablet_01_REF = 0x678; // USkeletalMeshComponent*
		constexpr auto DBDMenuPlayer = 0x680; // ADBDMenuPlayer*
		constexpr auto Is site on log = 0x688; // bool
	}

	namespace n_UUMGTallyListWidget { // : UUMGPageScrollWidget
		constexpr auto TopLeftText = 0x430; // FText
		constexpr auto TopRightText = 0x448; // FText
		constexpr auto ListBGPanel = 0x460; // UCanvasPanel*
		constexpr auto _playerRole = 0x468; // EPlayerRole
		constexpr auto _inAnimationPlayedPages = 0x470; // TSet<int32_t>
		constexpr auto _listItemWidgets = 0x4c0; // TMap<ETallyListPageID, UUMGTallyListElementWidget*>
	}

	namespace n_UHatchAnimInstance { // : USleepingAnimInstance
		constexpr auto _isOpen = 0x280; // bool
	}

	namespace n_UAkAssetDataWithMedia { // : UAkAssetData
		constexpr auto MediaList = 0x70; // TArray<TSoftObjectPtr<UAkMediaAsset>>
	}

	namespace n_UAchievementHandlerComponent { // : UActorComponent
		constexpr auto _generatorRepairWithGenericPerksOnlyEscapeAchievement = 0xb8; // UGeneratorRepairWithGenericPerksEscapeAchievement*
		constexpr auto _camperKONextToRaisedPalletAchievement = 0xc0; // UCamperKONextToRaisedPalletAchievement*
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x30; // FName
		constexpr auto BoneName = 0x3c; // FName
		constexpr auto RelativeLocation = 0x48; // FVector
		constexpr auto RelativeRotation = 0x54; // FRotator
		constexpr auto RelativeScale = 0x60; // FVector
		constexpr auto bForceAlwaysAnimated = 0x6c; // bool
	}

	namespace n_UStateMachine { // : UActorComponent
		constexpr auto _enableJoinInProgress = 0xc1; // bool
		constexpr auto _netStateIDStackInitial = 0x118; // TArray<uint16_t>
	}

	namespace n_UTireType { // : UDataAsset
		constexpr auto FrictionScale = 0x38; // float
	}

	namespace n_UEtherealComponent { // : UActorComponent
		constexpr auto _isEthereal = 0xe0; // bool
	}

	namespace n_UNewsContentManager { // : UObject
		constexpr auto _gameInstance = 0x48; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x38; // char : 1
		constexpr auto Positive_Y = 0x38; // char : 1
		constexpr auto Positive_Z = 0x38; // char : 1
		constexpr auto Negative_X = 0x38; // char : 1
		constexpr auto Negative_Y = 0x38; // char : 1
		constexpr auto Negative_Z = 0x38; // char : 1
		constexpr auto SurfaceOnly = 0x38; // char : 1
		constexpr auto Velocity = 0x38; // char : 1
		constexpr auto VelocityScale = 0x40; // FRawDistributionFloat
		constexpr auto StartLocation = 0x70; // FRawDistributionVector
	}

	namespace n_USprintBurst { // : UPerk
		constexpr auto _exhaustionDuration = 0x3d0; // float [0x3]
		constexpr auto _sprintDuration = 0x3dc; // float
		constexpr auto _exhaustedEffect = 0x3e0; // UActivatableExhaustedEffect*
	}

	namespace n_URangeBasedCondition { // : UEventDrivenModifierCondition
		constexpr auto _range = 0xe8; // float
	}

	namespace n_UBaseProjectileLauncher { // : UActorComponent
		constexpr auto _requireLaunchImpactDetection = 0xe8; // bool
		constexpr auto _hasInfiniteAmmunition = 0xe9; // bool
		constexpr auto ProjectileClass = 0xf0; // ABaseProjectile*
		constexpr auto _ammo = 0xf8; // int32_t
		constexpr auto _maxAmmo = 0xfc; // int32_t
		constexpr auto _canLaunchWhileOutOfAmmo = 0x100; // bool
		constexpr auto _debugProjectile = 0x130; // ABaseProjectile*
		constexpr auto _projectileReplicationComponent = 0x178; // UBaseProjectileReplicationComponent*
	}

	namespace n_UBlueprintCore { // : UObject
		constexpr auto SkeletonGeneratedClass = 0x30; // UObject*
		constexpr auto GeneratedClass = 0x38; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x40; // bool
		constexpr auto BlueprintGuid = 0x44; // FGuid
	}

	namespace n_UMeshOpPreviewWithBackgroundCompute { // : UObject
		constexpr auto PreviewMesh = 0x48; // UPreviewMesh*
		constexpr auto StandardMaterials = 0x50; // TArray<UMaterialInterface*>
		constexpr auto OverrideMaterial = 0x60; // UMaterialInterface*
		constexpr auto WorkingMaterial = 0x68; // UMaterialInterface*
	}

	namespace n_ARedEnvelope { // : AInteractable
		constexpr auto _ownerPlayerState = 0x328; // ADBDPlayerState*
		constexpr auto _redEnvelopeInteraction = 0x340; // URedEnvelopeInteraction*
		constexpr auto _redEnvelopeInteractionKiller = 0x348; // URedEnvelopeInteraction*
		constexpr auto _redEnvelopeInteractionChargeable = 0x350; // UChargeableComponent*
		constexpr auto _redEnvelopeInteractionChargeableKiller = 0x358; // UChargeableComponent*
		constexpr auto _redEnvelopeInteractor = 0x360; // UInteractor*
		constexpr auto _redEnvelopeInteractionZone = 0x368; // UPrimitiveComponent*
		constexpr auto _outlineComponent = 0x370; // UDBDOutlineComponent*
		constexpr auto _redEnvelopeMesh = 0x378; // UStaticMeshComponent*
		constexpr auto _redEnvelopeInteractionSecondsToCharge = 0x380; // FDBDTunableRowHandle
		constexpr auto _redEnvelopeInteractionSecondsToChargeKiller = 0x3a8; // FDBDTunableRowHandle
		constexpr auto _auraColorOwner = 0x3d0; // FLinearColor
		constexpr auto _auraColorNonOwner = 0x3e0; // FLinearColor
		constexpr auto _eventComponent = 0x3f0; // TWeakObjectPtr<ULunar2022EventComponent>
	}

	namespace n_UUMGSelectedCharacterWidget { // : UMobileBaseUserWidget
		constexpr auto PrestigeButton = 0x300; // UUMGCharacterPrestigeButton*
		constexpr auto CharacterNameText = 0x308; // UTextBlock*
		constexpr auto CharacterLevelText = 0x310; // UTextBlock*
		constexpr auto CharacterLevelVerticalBox = 0x318; // UVerticalBox*
		constexpr auto LeaderIcon = 0x320; // UImage*
		constexpr auto _onCancelPartyButtonClick = 0x338; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulationParams = 0x50; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x74; // FModulatorContinuousParams
	}

	namespace n_UDisplayStandMeatHookRequesterComponent { // : UActorComponent
		constexpr auto _meatHookClass = 0xb8; // AMenuMeatHook*
	}

	namespace n_USoundBankLoader { // : UGameInstanceSubsystem
		constexpr auto _audioBanks = 0x60; // TArray<UAkAudioBank*>
		constexpr auto _asyncAudioBanksPendingLoadData = 0x70; // TArray<ULoadAsyncBankData*>
	}

	namespace n_UOniDashInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chargingSpeedCurve = 0x6d8; // UCurveFloat*
		constexpr auto _dashingSpeedCurve = 0x6e0; // UCurveFloat*
		constexpr auto _yawAdjustTime = 0x6e8; // float
		constexpr auto _cooldownSpeedCurve = 0x6f0; // UCurveFloat*
	}

	namespace n_UBearTrapAnimInstance { // : USleepingAnimInstance
		constexpr auto _isBroken = 0x280; // bool
		constexpr auto _isBeingCollected = 0x281; // bool
		constexpr auto _containsSurvivor = 0x282; // bool
		constexpr auto _isTrapSet = 0x283; // bool
		constexpr auto _wasJustDisarmed = 0x284; // bool
	}

	namespace n_UArchivesManager { // : UGameInstanceSubsystem
		constexpr auto _storiesContainer = 0x58; // UArchiveStoriesContainer*
		constexpr auto _vignettesContainer = 0x60; // UArchiveVignettesContainer*
		constexpr auto _rewardTrackContainer = 0x68; // URewardTrackContainer*
	}

	namespace n_UChunkingManager { // : UObject
		constexpr auto _gameInstance = 0x30; // UDBDGameInstance*
	}

	namespace n_UVariantObjectBinding { // : UObject
		constexpr auto CachedActorLabel = 0x30; // FString
		constexpr auto ObjectPtr = 0x40; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x60; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x80; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x90; // TArray<FFunctionCaller>
	}

	namespace n_UBTService_SetPathSpeedFactor { // : UBTService
		constexpr auto SpeedFactor = 0x78; // float
	}

	namespace n_UMeshConstraintProperties { // : UInteractiveToolPropertySet
		constexpr auto bPreserveSharpEdges = 0x58; // bool
		constexpr auto MeshBoundaryConstraint = 0x59; // EMeshBoundaryConstraint
		constexpr auto GroupBoundaryConstraint = 0x5a; // EGroupBoundaryConstraint
		constexpr auto MaterialBoundaryConstraint = 0x5b; // EMaterialBoundaryConstraint
		constexpr auto bPreventNormalFlips = 0x5c; // bool
	}

	namespace n_UBP_Audio_KLR_22_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
	}

	namespace n_UBTService_StimuliMonitor { // : UBTService
		constexpr auto BBStimulusOriginLocation = 0x78; // FBlackboardKeySelector
		constexpr auto BBStimulusNavLocation = 0xa8; // FBlackboardKeySelector
		constexpr auto BBStimulusActor = 0xd8; // FBlackboardKeySelector
		constexpr auto BBStimulusInSight = 0x108; // FBlackboardKeySelector
		constexpr auto BBStimulusWasInSight = 0x138; // FBlackboardKeySelector
		constexpr auto StimulusWasInSightDuration = 0x168; // float
		constexpr auto StimuliRefreshInterval = 0x16c; // FAITunableParameter
		constexpr auto ExtrapolateLoseSightDuration = 0x17c; // float
		constexpr auto NavMeshFindLocationExtents = 0x180; // FVector
	}

	namespace n_UUserWidget { // : UWidget
		constexpr auto ColorAndOpacity = 0x130; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x140; // FDelegate
		constexpr auto ForegroundColor = 0x158; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x180; // FDelegate
		constexpr auto Padding = 0x194; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a8; // TArray<UUMGSequencePlayer*>
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto bCookedWidgetTree = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_UMagicLeapMeshTrackerComponent { // : USceneComponent
		constexpr auto OnMeshTrackerUpdated = 0x218; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x228; // bool
		constexpr auto MeshType = 0x229; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x230; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x238; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x23c; // float
		constexpr auto Planarize = 0x240; // bool
		constexpr auto DisconnectedSectionArea = 0x244; // float
		constexpr auto RequestNormals = 0x248; // bool
		constexpr auto RequestVertexConfidence = 0x249; // bool
		constexpr auto VertexColorMode = 0x24a; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x250; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x260; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x270; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x280; // bool
		constexpr auto MRMesh = 0x288; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x290; // int32_t
	}

	namespace n_UStreamMediaSource { // : UBaseMediaSource
		constexpr auto StreamUrl = 0x98; // FString
	}

	namespace n_UHooksWithSurvivorRestrictedPlacementAreaStrategy { // : URestrictedPlacementAreaStrategy
		constexpr auto RestrictedSphericalRadius = 0x70; // FDBDTunableRowHandle
		constexpr auto _isRestrictionLingeringEnabled = 0x98; // bool
		constexpr auto _restrictionLingerTime = 0xa0; // FDBDTunableRowHandle
		constexpr auto _useSphericalZoneForBasementHooks = 0xcc; // bool
		constexpr auto RestrictedSphericalLocations = 0xe8; // TArray<FVector>
	}

	namespace n_UWinter2021PlayerComponent { // : UActorComponent
		constexpr auto _hasCosmeticUnlockRequirementBeenSatisfied = 0xb8; // bool
		constexpr auto _hasSentUnlockCosmeticRequest = 0xb9; // bool
		constexpr auto _hasAllCosmeticRewards = 0xba; // bool
	}

	namespace n_UToFloatField { // : UFieldNodeFloat
		constexpr auto IntField = 0xb8; // UFieldNodeInt*
	}

	namespace n_UGizmoAxisTranslationParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UEditableStaticMeshAdapter { // : UEditableMeshAdapter
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto originalStaticMesh = 0x38; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x40; // int32_t
	}

	namespace n_UAISense { // : UObject
		constexpr auto DefaultExpirationAge = 0x30; // float
		constexpr auto NotifyType = 0x34; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x38; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x38; // char : 1
		constexpr auto PerceptionSystemInstance = 0x40; // UAIPerceptionSystem*
	}

	namespace n_UBTTask_Wait { // : UBTTaskNode
		constexpr auto WaitTime = 0x78; // float
		constexpr auto RandomDeviation = 0x7c; // float
	}

	namespace n_AAkReverbVolume { // : AVolume
		constexpr auto bEnabled = 0x268; // char : 1
		constexpr auto AuxBus = 0x270; // UAkAuxBus*
		constexpr auto AuxBusName = 0x278; // FString
		constexpr auto SendLevel = 0x288; // float
		constexpr auto FadeRate = 0x28c; // float
		constexpr auto Priority = 0x290; // float
		constexpr auto LateReverbComponent = 0x298; // UAkLateReverbComponent*
	}

	namespace n_UMRMeshComponent { // : UPrimitiveComponent
		constexpr auto Material = 0x430; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x438; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x439; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x43a; // bool
		constexpr auto CachedBodySetup = 0x440; // UBodySetup*
		constexpr auto BodySetups = 0x448; // TArray<UBodySetup*>
		constexpr auto WireframeMaterial = 0x458; // UMaterialInterface*
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto ModelBodySetup = 0x440; // UBodySetup*
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy { // : UClothPhysicalMeshDataBase_Legacy
		constexpr auto MaxDistances = 0xe8; // TArray<float>
		constexpr auto BackstopDistances = 0xf8; // TArray<float>
		constexpr auto BackstopRadiuses = 0x108; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x118; // TArray<float>
	}

	namespace n_UChainsawRevInteraction { // : UChargeableInteractionDefinition
		constexpr auto _soundCueDistanceDataID = 0x708; // FName
		constexpr auto _chainsawRevStartAkAudioEvent = 0x718; // UAkAudioEvent*
		constexpr auto _chainsawRevEndAkAudioEvent = 0x720; // UAkAudioEvent*
		constexpr auto _owningSlasher = 0x728; // ASlasherPlayer*
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x60; // FRichCurve
		constexpr auto YCurve = 0xe0; // FRichCurve
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch { // : UMaterialExpression
		constexpr auto Default = 0x48; // FExpressionInput
		constexpr auto Inputs = 0x64; // FExpressionInput [0x4]
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x40; // FRawDistributionVector
	}

	namespace n_UCoreEndGameCollapseBarWidget { // : UCoreBaseHudWidget
		constexpr auto _progressBarInterpSpeed = 0x2f8; // float
	}

	namespace n_UDeformMeshPolygonsTool { // : UMeshSurfacePointTool
		constexpr auto DynamicMeshComponent = 0xd0; // USimpleDynamicMeshComponent*
		constexpr auto TransformProps = 0xd8; // UDeformMeshPolygonsTransformProperties*
	}

	namespace n_UUMGBaseFriendListElement { // : UMobileBaseUserWidget
		constexpr auto StatusPicture = 0x300; // UImage*
		constexpr auto FriendName = 0x308; // UTextBlock*
		constexpr auto FriendStatus = 0x310; // UTextBlock*
		constexpr auto SelectionHighlight = 0x318; // UCanvasPanel*
		constexpr auto ItemSelectionBaseButton = 0x320; // UUMGBaseButtonWidget*
		constexpr auto ContextualMenuPosition = 0x328; // UNamedSlot*
		constexpr auto _cachedFriendData = 0x330; // FAtlantaFriendUIData
		constexpr auto FriendUIStatusDataTable = 0x398; // UDataTable*
	}

	namespace n_UMagicLeapPlanesComponent { // : USceneComponent
		constexpr auto QueryFlags = 0x210; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x220; // UBoxComponent*
		constexpr auto MaxResults = 0x228; // int32_t
		constexpr auto MinHolePerimeter = 0x22c; // float
		constexpr auto MinPlaneArea = 0x230; // float
		constexpr auto QueryType = 0x234; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x238; // float
		constexpr auto OnPlanesQueryResult = 0x240; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x250; // FMulticastInlineDelegate
	}

	namespace n_ADBDAIController { // : AAIController
		constexpr auto DefaultSightRange = 0x340; // float
		constexpr auto CloakedTargetSightRange = 0x344; // float
		constexpr auto AIDifficultyMaxPlayerRanks = 0x348; // TMap<EAIDifficultyLevel, int32_t>
		constexpr auto RotateCameraOnStationaryWaitTime = 0x3a8; // float
		constexpr auto RotateCameraOnStationaryDegreePerSecond = 0x3ac; // float
		constexpr auto _aiPawn = 0x3c8; // APawn*
		constexpr auto _lastAiPawn = 0x3d0; // APawn*
		constexpr auto _contextualPathSpeedFactors = 0x3e0; // TMap<UObject*, float>
		constexpr auto _objOverridingDefaultNavigationFilter = 0x430; // UObject*
		constexpr auto _originalDefaultNavigationFilter = 0x438; // UNavigationQueryFilter*
		constexpr auto _inputLocks = 0x458; // TMap<EPawnInputPressTypes, UObject*>
		constexpr auto _movementLock = 0x4a8; // UObject*
	}

	namespace n_UAICharacterRepairGeneratorBehaviourData { // : UAICharacterBehaviourData
		constexpr auto _generator = 0x30; // AGenerator*
		constexpr auto _characterMovementType = 0x38; // ECharacterMovementTypes
	}

	namespace n_UUMGPromoPackSelectedItemWidget { // : UMobileBaseUserWidget
		constexpr auto ItemDescription = 0x300; // UUMGHtmlRichText*
		constexpr auto ItemTypeIcon = 0x308; // UImage*
		constexpr auto ItemName = 0x310; // UTextBlock*
		constexpr auto ItemSubTitle = 0x318; // UTextBlock*
		constexpr auto SelectedItemSlot = 0x320; // UNamedSlot*
		constexpr auto SelectedItem = 0x328; // UUMGPromoPackItemWidget*
		constexpr auto ScrollBox = 0x330; // UScrollBox*
	}

	namespace n_ASplineAudioEmitterActor { // : AActor
		constexpr auto _root = 0x230; // USceneComponent*
		constexpr auto _theSpline = 0x238; // USplineComponent*
		constexpr auto _emitter = 0x240; // UAkComponent*
	}

	namespace n_UGeneratorAnimInstance { // : USleepingAnimInstance
		constexpr auto _owningGenerator = 0x280; // AGenerator*
		constexpr auto _rushFailed = 0x288; // bool
		constexpr auto _isActivated = 0x289; // bool
		constexpr auto _percentComplete = 0x28c; // float
	}

	namespace n_USoundfieldEndpointSubmix { // : USoundSubmixBase
		constexpr auto SoundfieldEndpointType = 0x40; // FName
		constexpr auto EndpointSettingsClass = 0x50; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x58; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x68; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x70; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UUMGObjectivesWidget { // : UMobileBaseUserWidget
		constexpr auto PanelEscapeRequirementsVisibility = 0x300; // ESlateVisibility
		constexpr auto PanelGeneratorVisibility = 0x301; // ESlateVisibility
		constexpr auto PanelFindExitVisibility = 0x302; // ESlateVisibility
		constexpr auto PanelHatchVisibility = 0x303; // ESlateVisibility
	}

	namespace n_UFiniteStateMachine { // : UActorComponent
		constexpr auto _defaultStateClass = 0xb8; // UFSM_State*
		constexpr auto _currentState = 0xc0; // UFSM_State*
		constexpr auto _currentStateMachineStatus = 0xc8; // EFiniteStateMachineStatus
		constexpr auto _stateMachineOwner = 0xd0; // UObject*
		constexpr auto _stateInstances = 0xd8; // TArray<UFSM_State*>
	}

	namespace n_ADatasmithSceneActor { // : AActor
		constexpr auto Scene = 0x230; // UDatasmithScene*
		constexpr auto RelatedActors = 0x238; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UAISlasherChaseAndAttackBehaviour { // : UAICharacterBehaviour
		constexpr auto _behaviourData = 0x58; // UAISlasherChaseAndAttackBehaviourData*
		constexpr auto _slasherPlayer = 0x60; // ASlasherPlayer*
		constexpr auto _slasherAIPlayerController = 0x68; // ADBDAIPlayerController*
	}

	namespace n_UStatusEffect { // : UGameplayModifierContainer
		constexpr auto ModifierData = 0x268; // FGameplayModifierData
		constexpr auto shouldDisplay = 0x298; // bool
		constexpr auto customParam = 0x29c; // float
		constexpr auto _removeOnRemainingLifetimeEnded = 0x2a0; // bool
		constexpr auto BroadcastAsStatusEffectWhenApplicable = 0x2a1; // bool
		constexpr auto BroadcastAsStatusEffectByActivationTimer = 0x2a2; // bool
		constexpr auto BroadcastAsStatusEffectWhenLifeRemains = 0x2a3; // bool
		constexpr auto BroadcastAsStatusEffectByFunction = 0x2a4; // bool
		constexpr auto BroadcastAsStatusEffectAlways = 0x2a5; // bool
		constexpr auto BroadcastOriginatorGameEventNotificationWhenFirstApplicable = 0x2a6; // bool
		constexpr auto _statusInitializationData = 0x2a8; // FStatusEffectInitializationData
		constexpr auto _nonStackingEffects = 0x308; // TArray<TSoftClassPtr<UObject>>
	}

	namespace n_UGlassStaticMesh { // : UStaticMeshComponent
		constexpr auto defaultGlassNormalVector = 0x530; // FVector
	}

	namespace n_UTheMettleOfMan { // : UPerk
		constexpr auto _tokenNeededToActivate = 0x3d0; // int32_t [0x3]
		constexpr auto _revealOutsideRange = 0x3dc; // float [0x3]
		constexpr auto _mustBeInjured = 0x3e8; // bool
		constexpr auto _numTokenSoFar = 0x3ec; // int32_t
		constexpr auto _currentPhase = 0x3f0; // ETheMettleOfManPhase
		constexpr auto _revealToKillerEffect = 0x400; // UStatusEffect*
	}

	namespace n_UCharacterCollection { // : UActorComponent
		constexpr auto _killer = 0x148; // ASlasherPlayer*
		constexpr auto _survivors = 0x150; // TSet<ACamperPlayer*>
		constexpr auto _mainDBDPlayers = 0x1a0; // TSet<ADBDPlayer*>
		constexpr auto _otherCharacters = 0x1f0; // TSet<ADBDPlayer*>
		constexpr auto _nonPlayableCharacters = 0x240; // TSet<ACharacter*>
		constexpr auto _allCharacters = 0x290; // TSet<ACharacter*>
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
	}

	namespace n_UCorePerksContainerWidget { // : UCoreBaseHudWidget
		constexpr auto PerkWidgets = 0x2f8; // TArray<UCorePerkWidget*>
		constexpr auto _perkViewInterfaces = 0x308; // TArray<TScriptInterface<IPerkViewInterface>>
	}

	namespace n_UBP_Audio_KLR_18_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UAICharacterBehaviourInteractWithActor { // : UAICharacterBehaviour
		constexpr auto _aiPlayer = 0x58; // ADBDPlayer*
		constexpr auto _aiPlayerController = 0x60; // ADBDAIPlayerController*
		constexpr auto _behaviourData = 0x68; // UAICharacterBehaviourInteractWithActorData*
	}

	namespace n_UCharacterPusherComponent { // : UActorComponent
		constexpr auto _charactersToPush = 0xe8; // TArray<ACharacter*>
		constexpr auto _ignoredCharacters = 0xf8; // TSet<ACharacter*>
		constexpr auto _characterDetector = 0x148; // UCapsuleComponent*
		constexpr auto _characterCollision = 0x150; // UCapsuleComponent*
		constexpr auto _pushStrategy = 0x158; // UBasePushStrategyComponent*
		constexpr auto _ignoredByPushedCharacters = 0x160; // TArray<ACharacter*>
	}

	namespace n_UAB_Menu_Slasher13_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_AnimDynamics_12 = 0x3a0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_11 = 0x800; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_10 = 0xc60; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_9 = 0x10c0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_8 = 0x1520; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_7 = 0x1980; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_SpringBone_2 = 0x1de0; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_SpringBone = 0x1f18; // FAnimNode_SpringBone
		constexpr auto AnimGraphNode_AnimDynamics_6 = 0x2050; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_5 = 0x24b0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x2910; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x2d70; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x31d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x3630; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3a90; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3ab0; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3ad0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_RandomPlayer = 0x3b70; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_BlendListByBool = 0x3be8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x3c88; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3cc0; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x3d70; // bool
		constexpr auto Is Online = 0x3d71; // bool
	}

	namespace n_UBlightPowerStateComponent { // : UActorComponent
		constexpr auto OnPowerCollided = 0xd0; // FMulticastInlineDelegate
		constexpr auto _blightPowerStateClasses = 0xe0; // TArray<UBlightPowerState*>
		constexpr auto _canDashCheckCollisionRadius = 0xf0; // FDBDTunableRowHandle
		constexpr auto _canDashCheckCollisionHeight = 0x118; // FDBDTunableRowHandle
		constexpr auto _canDashCheckCollisionRange = 0x140; // FDBDTunableRowHandle
		constexpr auto _blightLethalDashDodgeRadius = 0x168; // FDBDTunableRowHandle
		constexpr auto _powerInteractionDefinition = 0x190; // UInteractionDefinition*
		constexpr auto _stateTimer = 0x1b0; // UTimerObject*
		constexpr auto _blightPowerStates = 0x1b8; // TArray<UBlightPowerState*>
		constexpr auto _currentBlightPowerState = 0x1c8; // UBlightPowerState*
		constexpr auto _dashTokens = 0x1d0; // char
		constexpr auto _maximumDashTokens = 0x1d8; // FTunableStat
		constexpr auto _tokenChargeRate = 0x258; // FTunableStat
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch { // : UMaterialExpression
		constexpr auto CurrentFrame = 0x48; // FExpressionInput
		constexpr auto PreviousFrame = 0x64; // FExpressionInput
	}

	namespace n_UMovieSceneParticleSection { // : UMovieSceneSection
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UK24CharacterFXComponent { // : UActorComponent
		constexpr auto OnPowerLevelChangedFx = 0xb8; // FMulticastInlineDelegate
		constexpr auto Local_OnKillerHitZombie = 0xc8; // FMulticastInlineDelegate
		constexpr auto Local_OnKillerContaminatedSurvivor = 0xd8; // FMulticastInlineDelegate
	}

	namespace n_UFloatingPawnMovement { // : UPawnMovementComponent
		constexpr auto MaxSpeed = 0x148; // float
		constexpr auto Acceleration = 0x14c; // float
		constexpr auto Deceleration = 0x150; // float
		constexpr auto TurningBoost = 0x154; // float
		constexpr auto bPositionCorrected = 0x158; // char : 1
	}

	namespace n_UNiagaraDataInterfaceSpline { // : UNiagaraDataInterface
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x88; // FParticleRandomSeedInfo
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D { // : UNiagaraDataInterfaceGrid3D
		constexpr auto MaxNeighborsPerVoxel = 0xf8; // uint32_t
	}

	namespace n_UDBDAttackSubstate { // : UObject
		constexpr auto _duration = 0x30; // FStatProperty
		constexpr auto _speedCurve = 0xb8; // UCurveFloat*
		constexpr auto _montage = 0xc0; // FName
		constexpr auto _currentCurve = 0xd0; // UCurveFloat*
	}

	namespace n_UUMGRoleSwitcherWidget { // : UUserWidget
		constexpr auto _isCurrentRoleRoleSwitcher = 0x260; // bool
		constexpr auto _touchDeltaTolerance = 0x264; // float
	}

	namespace n_UUniformVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto Direction = 0xbc; // FVector
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0x98; // FName
	}

	namespace n_UOniPounceInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chargedAttackState = 0x6e8; // UOniDemonModeAttackStateComponent*
		constexpr auto _demonModeComponent = 0x6f0; // UDemonModeComponent*
		constexpr auto _owningSlasher = 0x6f8; // ASlasherPlayer*
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto bBlend = 0x130; // char : 1
	}

	namespace n_UNavigationSystemConfig { // : UObject
		constexpr auto NavigationSystemClass = 0x30; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x50; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x54; // FName
		constexpr auto bIsOverriden = 0x60; // char : 1
	}

	namespace n_UParticleModuleAccelerationDrag { // : UParticleModuleAccelerationBase
		constexpr auto DragCoefficient = 0x40; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_UUMGSwitcherScreen { // : UMobileBaseUserWidget
		constexpr auto OnLoadoutWidgetSlotClicked = 0x300; // FMulticastInlineDelegate
		constexpr auto OnLoadoutWidgetInventoryItemSelected = 0x310; // FMulticastInlineDelegate
		constexpr auto OnLoadoutWidgetInventoryItemUnselected = 0x320; // FMulticastInlineDelegate
		constexpr auto ContainerWidgetSwitcher = 0x390; // UWidgetSwitcher*
		constexpr auto BloodStoreWidget = 0x398; // UUMGBloodStoreWidget*
		constexpr auto LoadoutWidget = 0x3a0; // UUMGLoadoutWidget*
		constexpr auto CharacterSelectionWidget = 0x3a8; // UUMGCharacterSelectionWidget*
	}

	namespace n_UBlackboardComponent { // : UActorComponent
		constexpr auto BrainComp = 0xb8; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xc0; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xc8; // UBlackboardData*
		constexpr auto KeyInstances = 0xf0; // TArray<UBlackboardKeyType*>
	}

	namespace n_UCharacterSightComponent { // : UActorComponent
		constexpr auto _minimumCharacterScreenPercent = 0xf0; // float
		constexpr auto _minimumCharacterVisiblePixelsPercent = 0xf4; // float
		constexpr auto _maximumSightDistance = 0xf8; // float
		constexpr auto _screenVisibilityZoneRadiusPercent = 0xfc; // float
		constexpr auto _sightingDelay = 0x100; // float
		constexpr auto _discerningDelay = 0x104; // float
		constexpr auto _undiscerningDelay = 0x108; // float
		constexpr auto _sightableCharacterClass = 0x110; // ACharacter*
		constexpr auto _discernedCharacters = 0x118; // TArray<FAuthorityDiscernedCharacter>
		constexpr auto _localDiscernibleCharacters = 0x128; // TArray<FDiscernibleCharacter>
		constexpr auto _debugMode = 0x148; // bool
		constexpr auto _canSee = 0x149; // bool
		constexpr auto _activationDefinition = 0x150; // FActivationDefinition
	}

	namespace n_UNetDriver { // : UObject
		constexpr auto NetConnectionClassName = 0x38; // FString
		constexpr auto ReplicationDriverClassName = 0x48; // FString
		constexpr auto MaxDownloadSize = 0x58; // int32_t
		constexpr auto bClampListenServerTickRate = 0x5c; // char : 1
		constexpr auto NetServerMaxTickRate = 0x60; // int32_t
		constexpr auto MaxNetTickRate = 0x64; // int32_t
		constexpr auto MaxInternetClientRate = 0x68; // int32_t
		constexpr auto MaxClientRate = 0x6c; // int32_t
		constexpr auto ServerTravelPause = 0x70; // float
		constexpr auto SpawnPrioritySeconds = 0x74; // float
		constexpr auto RelevantTimeout = 0x78; // float
		constexpr auto KeepAliveTime = 0x7c; // float
		constexpr auto InitialConnectTimeout = 0x80; // float
		constexpr auto InitialDevConnectionTimeout = 0x84; // float
		constexpr auto ConnectionTimeout = 0x88; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x8c; // float
		constexpr auto bNoTimeouts = 0x90; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x91; // bool
		constexpr auto ServerConnection = 0x98; // UNetConnection*
		constexpr auto ClientConnections = 0xa0; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x110; // int32_t
		constexpr auto World = 0x150; // UWorld*
		constexpr auto WorldPackage = 0x158; // UPackage*
		constexpr auto NetConnectionClass = 0x180; // UObject*
		constexpr auto ReplicationDriverClass = 0x188; // UObject*
		constexpr auto NetDriverName = 0x1a0; // FName
		constexpr auto ChannelDefinitions = 0x1b0; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1c0; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x210; // TArray<UChannel*>
		constexpr auto Time = 0x228; // float
		constexpr auto ExpireViewTargetDelay = 0x6d8; // float
		constexpr auto ReplicationDriver = 0x708; // UReplicationDriver*
	}

	namespace n_UAnimSharingAdditiveInstance { // : UAnimInstance
		constexpr auto BaseComponent = 0x270; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x278; // TWeakObjectPtr<UAnimSequence>
		constexpr auto alpha = 0x280; // float
		constexpr auto bStateBool = 0x284; // bool
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto ViewportConsole = 0x48; // UConsole*
		constexpr auto DebugProperties = 0x50; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x70; // int32_t
		constexpr auto World = 0x80; // UWorld*
		constexpr auto GameInstance = 0x88; // UGameInstance*
	}

	namespace n_UGizmoCircleComponent { // : UGizmoBaseComponent
		constexpr auto Normal = 0x448; // FVector
		constexpr auto Radius = 0x454; // float
		constexpr auto Thickness = 0x458; // float
		constexpr auto NumSides = 0x45c; // int32_t
		constexpr auto bViewAligned = 0x460; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x461; // bool
	}

	namespace n_USwfMovie { // : UObject
		constexpr auto bUseGFxExport = 0x30; // char : 1
		constexpr auto bOptimizeForMobiles = 0x30; // char : 1
		constexpr auto bSetSRGBOnImportedTextures = 0x30; // char : 1
		constexpr auto bPackTextures = 0x30; // char : 1
		constexpr auto PackTextureSize = 0x34; // int32_t
		constexpr auto bForceSquarePacking = 0x38; // char : 1
		constexpr auto TextureRescale = 0x3c; // FlashTextureRescale
		constexpr auto TextureFormat = 0x40; // FString
		constexpr auto bReplaceImages = 0x50; // char : 1
		constexpr auto SourceFile = 0x58; // FString
		constexpr auto FontMappings = 0x68; // TArray<FString>
		constexpr auto SourceFileTimestamp = 0x78; // FString
		constexpr auto ImportTimeStamp = 0x88; // uint64_t
		constexpr auto RawData = 0x90; // TArray<char>
		constexpr auto ReferencedAssetNames = 0xa0; // TArray<FString>
		constexpr auto References = 0xb0; // TArray<UObject*>
		constexpr auto UserReferences = 0xc0; // TArray<UObject*>
	}

	namespace n_UDBDCoreUMGDesignTunables { // : UObject
		constexpr auto CoreHudRootWidgetClass = 0x30; // TSoftClassPtr<UObject>
		constexpr auto CorePlayerControllerClass = 0x60; // TSoftClassPtr<UObject>
	}

	namespace n_USourceEffectFoldbackDistortionPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UPaperTileSet { // : UObject
		constexpr auto TileSize = 0x30; // FIntPoint
		constexpr auto TileSheet = 0x38; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x40; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x50; // FIntMargin
		constexpr auto PerTileSpacing = 0x60; // FIntPoint
		constexpr auto DrawingOffset = 0x68; // FIntPoint
		constexpr auto WidthInTiles = 0x70; // int32_t
		constexpr auto HeightInTiles = 0x74; // int32_t
		constexpr auto AllocatedWidth = 0x78; // int32_t
		constexpr auto AllocatedHeight = 0x7c; // int32_t
		constexpr auto PerTileData = 0x80; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x90; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0xa0; // int32_t
		constexpr auto TileHeight = 0xa4; // int32_t
		constexpr auto Margin = 0xa8; // int32_t
		constexpr auto Spacing = 0xac; // int32_t
	}

	namespace n_UPlaneFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto MinRange = 0xbc; // float
		constexpr auto MaxRange = 0xc0; // float
		constexpr auto Default = 0xc4; // float
		constexpr auto Distance = 0xc8; // float
		constexpr auto Position = 0xcc; // FVector
		constexpr auto Normal = 0xd8; // FVector
		constexpr auto Falloff = 0xe4; // EFieldFalloffType
	}

	namespace n_AAkAcousticPortal { // : AVolume
		constexpr auto InitialState = 0x268; // AkAcousticPortalState
		constexpr auto ObstructionRefreshInterval = 0x26c; // float
		constexpr auto ObstructionCollisionChannel = 0x270; // ECollisionChannel
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x50; // char : 1
		constexpr auto bModulatePitch = 0x50; // char : 1
		constexpr auto AmplitudeMin = 0x54; // float
		constexpr auto AmplitudeMax = 0x58; // float
		constexpr auto FrequencyMin = 0x5c; // float
		constexpr auto FrequencyMax = 0x60; // float
		constexpr auto OffsetMin = 0x64; // float
		constexpr auto OffsetMax = 0x68; // float
		constexpr auto CenterMin = 0x6c; // float
		constexpr auto CenterMax = 0x70; // float
	}

	namespace n_UUMGPerkSelectionPopup { // : UUMGGenericPopup
		constexpr auto LargePerkSelectionSlot = 0x3e8; // UPerkSelectionSlotWidget*
		constexpr auto FirstSmallSlot = 0x3f0; // UPerkSelectionSlotWidget*
		constexpr auto SecondSmallSlot = 0x3f8; // UPerkSelectionSlotWidget*
		constexpr auto PictureCharacterBackground = 0x400; // UImage*
		constexpr auto SelectablePerksContainer = 0x408; // UCanvasPanel*
		constexpr auto UMGPerkSelectionSlotWidget = 0x410; // TSoftClassPtr<UObject>
		constexpr auto SmallSlotContainer = 0x440; // UVerticalBox*
		constexpr auto RewardSubTitle = 0x448; // URichTextBlock*
		constexpr auto PerkSelectionTitle = 0x450; // URichTextBlock*
		constexpr auto NoPerksContainer = 0x458; // UCanvasPanel*
		constexpr auto AcquireMorePerksByText = 0x460; // URichTextBlock*
		constexpr auto AcquireMorePerksByOption1Text = 0x468; // URichTextBlock*
		constexpr auto AcquireMorePerksByOption2Text = 0x470; // URichTextBlock*
		constexpr auto prestigeIcon = 0x478; // UUMGCharacterPrestigeIcon*
		constexpr auto _selectablePerk = 0x490; // TArray<UPerkSelectionSlotWidget*>
	}

	namespace n_UAISkill_InteractionTarget { // : UAISkill_Interaction
		constexpr auto TargetRequirement = 0x170; // EInteractionTargetRequirements
		constexpr auto AutoSwapBestStimulusWithBestTarget = 0x171; // bool
		constexpr auto StartMinRange = 0x174; // float
		constexpr auto StartMaxRange = 0x178; // float
		constexpr auto StopMinRange = 0x17c; // float
		constexpr auto StopMaxRange = 0x180; // float
		constexpr auto StartMaxHalfAngle = 0x184; // float
		constexpr auto StopMaxHalfAngle = 0x188; // float
		constexpr auto IsMaxHalfAngle2D = 0x18c; // bool
		constexpr auto TestMaxHalfAngleOnPath = 0x18d; // bool
		constexpr auto MaxAngleFilterClass = 0x190; // UNavigationQueryFilter*
		constexpr auto InSightMode = 0x198; // EInteractionTargetInSightModes
		constexpr auto OutOfSightModeDelay = 0x19c; // float
		constexpr auto TargetMoveAwayTooFastStopDelay = 0x1a0; // float
		constexpr auto TargetMoveAwayTooFastCooldown = 0x1a4; // float
		constexpr auto AlwaysStrafeAroundTarget = 0x1a8; // bool
		constexpr auto _unfilteredTargets = 0x1b0; // TArray<FAIDetectedStimulus>
		constexpr auto _filteredTargets = 0x1c0; // TArray<FAIDetectedStimulus>
		constexpr auto _targetsMoveAwayTooFastInfo = 0x1d0; // TMap<AActor*, FTargetMoveAwayToFastInfo>
	}

	namespace n_UAddon_TheBlight_18 { // : UOnEventBaseAddon
		constexpr auto _survivorInRangeDistance = 0x2a8; // float
		constexpr auto _hinderedSeconds = 0x2ac; // float
	}

	namespace n_UOnboardingMenuPresenter { // : UPresenter
		constexpr auto OnboardingMenuWidgetClass = 0xe0; // UUserWidget*
		constexpr auto _onboardingTutorialSubPresenter = 0xe8; // UOnboardingTutorialSubPresenter*
		constexpr auto _gameManualSubPresenter = 0xf0; // UGameManualSubPresenter*
		constexpr auto _activeSubPresenter = 0xf8; // USubPresenter*
	}

	namespace n_UGizmoLocalFloatParameterSource { // : UGizmoBaseFloatParameterSource
		constexpr auto value = 0x50; // float
		constexpr auto LastChange = 0x54; // FGizmoFloatParameterChange
	}

	namespace n_UCrownPillarOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _offeringEnabledAuraColor = 0xc0; // FLinearColor
	}

	namespace n_AMobileTormentTrailRenderer { // : AActor
		constexpr auto _pillarIsmComponent = 0x230; // UInstancedStaticMeshComponent*
		constexpr auto _wireIsmComponent = 0x238; // UInstancedStaticMeshComponent*
		constexpr auto _trailIsmComponent = 0x240; // UInstancedStaticMeshComponent*
		constexpr auto _pillarOutlineIsmComponent = 0x248; // UInstancedStaticMeshComponent*
		constexpr auto _wireOutlineIsmComponent = 0x250; // UInstancedStaticMeshComponent*
		constexpr auto _instanceMap = 0x258; // TMap<ABaseTormentTrailPoint*, FTormentTrailPointInfo>
		constexpr auto _trailMaterialInstanceDynamic = 0x2a8; // UMaterialInstanceDynamic*
	}

	namespace n_ASupplyCrateInteractable { // : AInteractable
		constexpr auto _chargeableComponent = 0x360; // UChargeableComponent*
		constexpr auto _contamainationSerumCollectable = 0x368; // ACollectable*
		constexpr auto _openInteractionSecondsToCharge = 0x370; // FDBDTunableRowHandle
		constexpr auto _itemInSupplyCrate = 0x398; // ACollectable*
		constexpr auto _itemSpawnPoint = 0x3a0; // USceneComponent*
		constexpr auto _itemDropPoint = 0x3a8; // USceneComponent*
		constexpr auto _isOpen = 0x3b0; // bool
		constexpr auto _isAutoClosing = 0x3b1; // bool
		constexpr auto _crateSelfClosingTime = 0x3f0; // FDBDTunableRowHandle
		constexpr auto _crateAutoCloseAnimationTime = 0x418; // FDBDTunableRowHandle
	}

	namespace n_UCullingField { // : UFieldNodeBase
		constexpr auto Culling = 0xb8; // UFieldNodeBase*
		constexpr auto Field = 0xc0; // UFieldNodeBase*
		constexpr auto Operation = 0xc8; // EFieldCullingOperationType
	}

	namespace n_USkinnedMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x478; // USkeletalMesh*
		constexpr auto SelectedMasterPoseComponent = 0x480; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto MasterPoseComponent = 0x488; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x490; // TArray<ESkinCacheUsage>
		constexpr auto PhysicsAssetOverride = 0x5a8; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5b0; // int32_t
		constexpr auto MinLodModel = 0x5b4; // int32_t
		constexpr auto bUseMasterPoseLod = 0x5b8; // bool
		constexpr auto StaticMeshesUsingSameLOD = 0x5c0; // TArray<UStaticMeshComponent*>
		constexpr auto StreamingDistanceMultiplier = 0x5d8; // float
		constexpr auto LODInfo = 0x5e8; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x61c; // EVisibilityBasedAnimTickOption
		constexpr auto bOverrideMinLod = 0x61e; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x61e; // char : 1
		constexpr auto bForceWireframe = 0x61e; // char : 1
		constexpr auto bDisplayBones = 0x61e; // char : 1
		constexpr auto bDisableMorphTarget = 0x61e; // char : 1
		constexpr auto bHideSkin = 0x61e; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x61f; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x61f; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x61f; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x61f; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x61f; // char : 1
		constexpr auto bRecentlyRendered = 0x61f; // char : 1
		constexpr auto bAnySlaveRecentlyRendered = 0x61f; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x61f; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x620; // char : 1
		constexpr auto bCPUSkinning = 0x620; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x620; // char : 1
		constexpr auto AnimationTresholdToFrameSkip = 0x628; // TArray<FTresholdToFrameSkip>
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x638; // char : 1
		constexpr auto bRenderStatic = 0x638; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x638; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x638; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x638; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x63c; // float
		constexpr auto CachedWorldSpaceBounds = 0x654; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x670; // FMatrix
	}

	namespace n_USubsurfaceProfile { // : UObject
		constexpr auto Settings = 0x30; // FSubsurfaceProfileStruct
	}

	namespace n_UMaterialExpressionVectorNoise { // : UMaterialExpression
		constexpr auto Position = 0x48; // FExpressionInput
		constexpr auto NoiseFunction = 0x64; // EVectorNoiseFunction
		constexpr auto Quality = 0x68; // int32_t
		constexpr auto bTiling = 0x6c; // char : 1
		constexpr auto TileSize = 0x70; // uint32_t
	}

	namespace n_USoundNode { // : UObject
		constexpr auto ChildNodes = 0x30; // TArray<USoundNode*>
	}

	namespace n_UBTTask_SetBBEntry { // : UBTTaskNode
		constexpr auto BBToSetKey = 0x78; // FBlackboardKeySelector
		constexpr auto ToSetValue = 0xa8; // FString
	}

	namespace n_UBTService_SetBBEntry { // : UBTService_OnRelevantBase
		constexpr auto BBToSetKey = 0x80; // FBlackboardKeySelector
		constexpr auto ToSetValue = 0xb0; // FString
		constexpr auto RandomSetChance = 0xc0; // FAITunableParameter
	}

	namespace n_UAddPatchTool { // : USingleClickTool
		constexpr auto ShapeSettings = 0x98; // UAddPatchToolProperties*
		constexpr auto MaterialProperties = 0xa0; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa8; // UPreviewMesh*
	}

	namespace n_ABP_Menu_Slasher09_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_09 = 0x698; // UBP_Audio_KLR_09_C*
		constexpr auto CA_WS01_REF = 0x6a0; // USkeletalMeshComponent*
	}

	namespace n_UNavAreaMeta_SwitchByAgent { // : UNavAreaMeta
		constexpr auto Agent0Area = 0x50; // UNavArea*
		constexpr auto Agent1Area = 0x58; // UNavArea*
		constexpr auto Agent2Area = 0x60; // UNavArea*
		constexpr auto Agent3Area = 0x68; // UNavArea*
		constexpr auto Agent4Area = 0x70; // UNavArea*
		constexpr auto Agent5Area = 0x78; // UNavArea*
		constexpr auto Agent6Area = 0x80; // UNavArea*
		constexpr auto Agent7Area = 0x88; // UNavArea*
		constexpr auto Agent8Area = 0x90; // UNavArea*
		constexpr auto Agent9Area = 0x98; // UNavArea*
		constexpr auto Agent10Area = 0xa0; // UNavArea*
		constexpr auto Agent11Area = 0xa8; // UNavArea*
		constexpr auto Agent12Area = 0xb0; // UNavArea*
		constexpr auto Agent13Area = 0xb8; // UNavArea*
		constexpr auto Agent14Area = 0xc0; // UNavArea*
		constexpr auto Agent15Area = 0xc8; // UNavArea*
	}

	namespace n_UUMGAtlantaTutorialGenericPopup { // : UUMGGenericPopup
		constexpr auto ImageTutorial = 0x3e8; // UImage*
		constexpr auto ImagesCanvas = 0x3f0; // UVerticalBox*
		constexpr auto ButtonsPanel = 0x3f8; // UHorizontalBox*
		constexpr auto _pageButtonWidgetClass = 0x400; // TSoftClassPtr<UObject>
		constexpr auto ButtonWidth = 0x430; // float
		constexpr auto DelayBeforeChangingImage = 0x434; // float
		constexpr auto _changeImagesTimerHandle = 0x438; // FTimerHandle
	}

	namespace n_UMovieScene2DTransformSection { // : UMovieSceneSection
		constexpr auto TransformMask = 0xe8; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf0; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x230; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d0; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x410; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UBlueprintGeneratedClass { // : UClass
		constexpr auto NumReplicatedProperties = 0x240; // int32_t
		constexpr auto bHasNativizedParent = 0x244; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x244; // char : 1
		constexpr auto DynamicBindingObjects = 0x248; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x258; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x268; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x278; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x288; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x290; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x298; // UStructProperty*
		constexpr auto UberGraphFunction = 0x2a8; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2b0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_UUMGAtlCurrencyStorefrontWidget { // : UUMGBaseCurrencyStorefrontWidget
		constexpr auto AuricCellsCanvasPanel = 0x310; // UCanvasPanel*
		constexpr auto AuricCellsGridPanel = 0x318; // UUniformGridPanel*
		constexpr auto BottomPurchaseBox = 0x320; // UHorizontalBox*
		constexpr auto BottomRightPurchaseRichText = 0x328; // URichTextBlock*
		constexpr auto BottomTimer = 0x330; // UOverlay*
		constexpr auto AuricsBgR = 0x338; // UImage*
		constexpr auto AuricsBgL = 0x340; // UImage*
		constexpr auto EventItemsPackContainerBox = 0x348; // UHorizontalBox*
		constexpr auto PaddingEventItemsPackButton = 0x350; // FMargin
		constexpr auto EventItemsPackWidgetClass = 0x360; // TSoftClassPtr<UObject>
		constexpr auto _auricCellButtons = 0x3a8; // TArray<UUMGStoreAuricCellButton*>
	}

	namespace n_UUMGCustomizationPageScrollWidget { // : UUMGGridPageScrollWidget
		constexpr auto _customizationItemWidgetClass = 0x448; // TSoftClassPtr<UObject>
		constexpr auto _availableItemsData = 0x478; // TArray<FStoreItemSlotData>
		constexpr auto _itemWidgets = 0x488; // TArray<UUMGCustomizationItemWidget*>
	}

	namespace n_UActiveGasCloudTrackerComponent { // : UActorComponent
		constexpr auto _activeToxinClouds = 0xb8; // TArray<ABaseGasCloudProjectile*>
		constexpr auto _activeAntidoteClouds = 0xc8; // TArray<ABaseGasCloudProjectile*>
	}

	namespace n_UK25SurvivorChainAttachmentComponent { // : UActorComponent
		constexpr auto _attachmentAnchorClass = 0xe8; // AK25SurvivorChainAttachmentAnchor*
		constexpr auto _survivorAnchorData = 0xf0; // TArray<FK25SurvivorChainAttachmentData>
		constexpr auto _survivorChainRotationStrategyClass = 0x100; // UK25SurvivorChainRotationStrategy*
		constexpr auto _interruptableInteractionClasses = 0x108; // TArray<UInteractionDefinition*>
		constexpr auto _maximumNumberOfChainsAttached = 0x118; // FDBDTunableRowHandle
		constexpr auto _chainAttachmentAnchors = 0x140; // TArray<AK25SurvivorChainAttachmentAnchor*>
		constexpr auto _chainsAttached = 0x150; // TArray<TWeakObjectPtr<AK25Chain>>
		constexpr auto _removeChainChargeableComponent = 0x160; // UChargeableComponent*
		constexpr auto _survivorChainRotationStrategy = 0x170; // UK25SurvivorChainRotationStrategy*
		constexpr auto _chainAttachmentReplicationComponent = 0x178; // UK25ChainAttachmentReplicationComponent*
	}

	namespace n_UUniformGridSlot { // : UPanelSlot
		constexpr auto HorizontalAlignment = 0x40; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x41; // EVerticalAlignment
		constexpr auto row = 0x44; // int32_t
		constexpr auto Column = 0x48; // int32_t
	}

	namespace n_ABP_Menu_Slasher02_C { // : ABP_Menu_BaseSlasher_C
		constexpr auto UberGraphFrame = 0x690; // FPointerToUberGraphFrame
		constexpr auto BP_Audio_KLR_02 = 0x698; // UBP_Audio_KLR_02_C*
	}

	namespace n_UWorld { // : UObject
		constexpr auto PersistentLevel = 0x38; // ULevel*
		constexpr auto NetDriver = 0x40; // UNetDriver*
		constexpr auto LineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x58; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x60; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x68; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x70; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x80; // TArray<UObject*>
		constexpr auto LevelSequenceActors = 0x90; // TArray<AActor*>
		constexpr auto StreamingLevels = 0xa8; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0xb8; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xe0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xf0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xf8; // ULevel*
		constexpr auto DemoNetDriver = 0x100; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0x108; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0x110; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x12e; // char : 1
		constexpr auto NavigationSystem = 0x130; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x138; // AGameModeBase*
		constexpr auto GameState = 0x140; // AGameStateBase*
		constexpr auto AISystem = 0x148; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x150; // UAvoidanceManager*
		constexpr auto Levels = 0x158; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x168; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x198; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x1a0; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x1b0; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1b8; // UCanvas*
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x210; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x220; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x570; // UWorldComposition*
		constexpr auto PSCPool = 0x608; // FWorldPSCPool
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x38; // FRawDistributionVector
	}

	namespace n_UAkMacInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkAdvancedInitializationSettingsWithMultiCoreRendering
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x30; // FFontImportOptionsData
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x38; // char : 1
		constexpr auto bProcessBurstList = 0x38; // char : 1
	}

	namespace n_USurvivorOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _inDangerColorForSurvivor = 0xc0; // FLinearColor
		constexpr auto _noRecoveryDyingColor = 0xd0; // FLinearColor
		constexpr auto _fullRecoveryDyingColor = 0xe0; // FLinearColor
		constexpr auto _saviourColorForSurvivor = 0xf0; // FLinearColor
		constexpr auto _colorForKiller = 0x100; // FLinearColor
		constexpr auto _revealedGradient = 0x110; // UTexture*
		constexpr auto _nonRevealedGradient = 0x118; // UTexture*
		constexpr auto _trappedIconActive = 0x120; // bool
	}

	namespace n_UUmgKillerHud { // : UUmgPlayableHud
		constexpr auto PowerButton = 0x528; // UPowerButton*
		constexpr auto PowerButtonContainer = 0x530; // UCanvasPanel*
		constexpr auto SecondAbilityButton = 0x538; // UPowerButton*
		constexpr auto SecondAbilityButtonContainer = 0x540; // UCanvasPanel*
		constexpr auto AttackButton = 0x548; // UActionButton*
		constexpr auto AttackButtonContainer = 0x550; // UCanvasPanel*
		constexpr auto DropSurvivorButton = 0x558; // UActionButton*
		constexpr auto DropSurvivorButtonContainer = 0x560; // UCanvasPanel*
		constexpr auto CancelButton = 0x568; // UMobileBaseUserWidget*
		constexpr auto GhostfaceSpecific = 0x570; // UUMGGhostfaceSpecific*
		constexpr auto SecondAttackButtonContainer = 0x578; // UCanvasPanel*
		constexpr auto HudPowerAttackJoystick = 0x580; // UAtlantaHudPowerAttackJoystick*
		constexpr auto killer = 0x588; // ASlasherPlayer*
		constexpr auto _isCancelButtonPressed = 0x598; // bool
		constexpr auto _isAttackButtonPressed = 0x599; // bool
		constexpr auto _isAttackJoystickActivated = 0x59a; // bool
		constexpr auto _isPowerAttackJoystickActivated = 0x59b; // bool
		constexpr auto _powerAttackJoystickBackgroundImage = 0x5a0; // FSlateBrush
		constexpr auto _DefaultAttackJoystickIconPressedImage = 0x630; // FSlateBrush
		constexpr auto _DefaultAttackJoystickIconUnpressedImage = 0x6c0; // FSlateBrush
		constexpr auto _powerAttackJoystickThumbPressedSize = 0x750; // FVector2D
		constexpr auto _powerAttackJoystickThumbUnpressedSize = 0x758; // FVector2D
	}

	namespace n_UBTTask_RunEQSQuery { // : UBTTask_BlackboardBase
		constexpr auto QueryTemplate = 0xa8; // UEnvQuery*
		constexpr auto QueryParams = 0xb0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xc0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xd0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xd8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0x108; // bool
		constexpr auto EQSRequest = 0x110; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UAISkill_InteractionTeleportEthereal_Demogorgon { // : UAISkill_InteractionTeleportEthereal
		constexpr auto MaxRangeFromFirstPortal = 0x1d8; // float
		constexpr auto _firstPortal = 0x1e0; // ADemogorgonPortal*
		constexpr auto _secondPortal = 0x1e8; // ADemogorgonPortal*
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0x48; // FExpressionInput
		constexpr auto B = 0x64; // FExpressionInput
		constexpr auto ConstA = 0x80; // float
		constexpr auto ConstB = 0x84; // float
	}

	namespace n_UCoreOnboardingMenuWidget { // : UCoreBaseUserWidget
		constexpr auto OnboardingMenuTabs = 0x2e0; // UCoreTabContainerWidget*
		constexpr auto menuTitle = 0x2e8; // UCoreOnboardingMenuTitleWidget*
		constexpr auto BackInputSwitcher = 0x2f0; // UCoreInputSwitcherWidget*
		constexpr auto BackActionDelegate = 0x2f8; // FMulticastInlineDelegate
		constexpr auto MenuTabSelectedDelegate = 0x308; // FMulticastInlineDelegate
		constexpr auto MenuTabSelectedAgainDelegate = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UWorldRunawayMeshComponent { // : USkeletalMeshComponent
		constexpr auto ResetCooldown = 0xb68; // float
		constexpr auto _runAwayMustTickDuration = 0xb6c; // float
		constexpr auto _returnMustTickDuration = 0xb70; // float
	}

	namespace n_UDecisiveStrike { // : UPerk
		constexpr auto _timeAfterUnhook = 0x3d0; // float [0x3]
		constexpr auto _skillCheckDelay = 0x3dc; // float
		constexpr auto _skillCheckBuffer = 0x3e0; // float
		constexpr auto _killerHearsSkillCheckCue = 0x3e4; // bool
		constexpr auto _deactivationEvents = 0x458; // TArray<FGameplayTag>
		constexpr auto _hasBeenAttempted = 0x468; // bool
	}

	namespace n_UProveThyselfEffect { // : URemoveOnOriginatingSurvivorGoneStatusEffect
		constexpr auto _proveThyselfRange = 0x378; // FDBDTunableRowHandle
		constexpr auto _speedPercentageAddedPerSurvivorRepairingInRange = 0x3a0; // float
	}

	namespace n_UBlightPowerState { // : UObject
		constexpr auto _stateSpeedCurve = 0x40; // UCurveFloat*
		constexpr auto _stateDuration = 0x48; // FTunableStat
		constexpr auto _cameraPitchRecenterTime = 0xc8; // FDBDTunableRowHandle
		constexpr auto _wallDashCollisionRadius = 0xf0; // FDBDTunableRowHandle
		constexpr auto _wallDashCollisionHeight = 0x118; // FDBDTunableRowHandle
		constexpr auto _wallDashCollisionRange = 0x140; // FDBDTunableRowHandle
		constexpr auto _playerCanCancelEarly = 0x168; // bool
		constexpr auto _displayCollisionIndicator = 0x178; // bool
	}

	namespace n_AK25ControlledProjectile { // : AK25Projectile
		constexpr auto _killerViewProjectileStaticMesh = 0x438; // UStaticMeshComponent*
		constexpr auto _killerSpringArm = 0x440; // USpringArmComponent*
		constexpr auto _killerCameraPlacement = 0x448; // UCameraComponent*
		constexpr auto _pitchClampAngle = 0x450; // float
		constexpr auto _maximumYawTurnRate = 0x458; // FTunableStat
		constexpr auto _maximumPitchTurnRate = 0x4d8; // FTunableStat
		constexpr auto _cameraRollSpeedMultiplier = 0x558; // FDBDTunableRowHandle
		constexpr auto _cameraRollGoBackSpeedMultiplier = 0x580; // FDBDTunableRowHandle
		constexpr auto _cameraMaximumRollDegree = 0x5a8; // FDBDTunableRowHandle
		constexpr auto _numbExtraChainsOnControlledProjectileHit = 0x5d0; // FTunableStat
		constexpr auto _controlledProjectileMovementComponent = 0x650; // UK25ControlledProjectileMovementComponent*
		constexpr auto _currentRoll = 0x658; // float
		constexpr auto _targetRoll = 0x65c; // float
		constexpr auto _lastAppliedAngularVelocity = 0x690; // FVector_NetQuantize
	}

	namespace n_ABP_Menu_CamperMale07_C { // : ABP_Menu_Base_Camper_C
		constexpr auto UberGraphFrame = 0x670; // FPointerToUberGraphFrame
	}

	namespace n_UAB_Menu_Slasher04_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_SequencePlayer = 0x3a0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x418; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x4b8; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_AGate { // : AActor
		constexpr auto InteractionInputs = 0x230; // TArray<float>
		constexpr auto InteractionOutput = 0x240; // float
	}

	namespace n_UKillerFlashlightSFXComponent { // : UActorComponent
		constexpr auto _targetSoundLoop = 0xb8; // FAkObservedPlayerSoundLoop
		constexpr auto _flashlightTargets = 0xf8; // TArray<UFlashlightTargetFXComponent*>
	}

	namespace n_UMaterialExpressionVertexInterpolator { // : UMaterialExpressionCustomOutput
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_URuntimeVirtualTextureStreamingProxy { // : UTexture2D
		constexpr auto Settings = 0x108; // FVirtualTextureBuildSettings
		constexpr auto bSinglePhysicalSpace = 0x114; // bool
		constexpr auto BuildHash = 0x118; // uint32_t
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch { // : UMaterialExpression
		constexpr auto LayerUsed = 0x48; // FExpressionInput
		constexpr auto LayerNotUsed = 0x64; // FExpressionInput
		constexpr auto ParameterName = 0x80; // FName
		constexpr auto PreviewUsed = 0x8c; // char : 1
		constexpr auto ExpressionGUID = 0x90; // FGuid
	}

	namespace n_UMovieScene3DConstraintTrack { // : UMovieSceneTrack
		constexpr auto ConstraintSections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UBP_Audio_KLR_24_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
		constexpr auto AudioStatusStartMenuEvent = 0xf8; // UAkAudioEvent*
		constexpr auto starsCharacter = 0x100; // TArray<FString>
	}

	namespace n_UChaosPhysicalMaterial { // : UObject
		constexpr auto Friction = 0x30; // float
		constexpr auto StaticFriction = 0x34; // float
		constexpr auto Restitution = 0x38; // float
		constexpr auto LinearEtherDrag = 0x3c; // float
		constexpr auto AngularEtherDrag = 0x40; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x44; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x48; // float
	}

	namespace n_UMovieSceneAudioSection { // : UMovieSceneSection
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bSuppressSubtitles = 0x300; // bool
		constexpr auto bOverrideAttenuation = 0x301; // bool
		constexpr auto AttenuationSettings = 0x308; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x310; // FDelegate
		constexpr auto OnAudioFinished = 0x328; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x338; // FMulticastInlineDelegate
	}

	namespace n_UAnimNotify_PlayMontageNotify { // : UAnimNotify
		constexpr auto NotifyName = 0x40; // FName
	}

	namespace n_UUMGRoleSelectionScreen { // : UMobileBaseUserWidget
		constexpr auto _newInboxMessageCount = 0x300; // int32_t
	}

	namespace n_UGenyReflectionCaptureComponent { // : USceneComponent
		constexpr auto generatorDrivenReflectionCapture = 0x210; // TArray<FReflectionCaptureTwoStates>
	}

	namespace n_UUMGTallyCharacterProgressionWidget { // : UUMGTallyListElementWidget
		constexpr auto CharacterProgressionBar = 0x310; // UUMGTallyCharacterProgressionBar*
		constexpr auto TextCharacterCurrentExperience = 0x318; // UTextBlock*
		constexpr auto TextExperienceForNextLevel = 0x320; // UTextBlock*
		constexpr auto TextExperienceEarned = 0x328; // UTextBlock*
		constexpr auto TextCurrentLevel = 0x330; // UTextBlock*
		constexpr auto CharacterPicture = 0x338; // UImage*
		constexpr auto prestigeIcon = 0x340; // UImage*
		constexpr auto TextCharacterName = 0x348; // UTextBlock*
		constexpr auto ExperiencePerSecond = 0x350; // int32_t
	}

	namespace n_USpiritHuskAnimInstance { // : UAnimInstance
		constexpr auto _killerMesh = 0x270; // USkeletalMeshComponent*
	}

	namespace n_UBloodwebGenerator { // : UObject
		constexpr auto _randomizationStream = 0x3c; // FRandomStream
		constexpr auto _selectedNodes = 0x48; // TArray<FString>
		constexpr auto _selectedContent = 0x58; // TArray<FName>
		constexpr auto _bloodWebDefinition = 0xb0; // TScriptInterface<IDBDBloodwebDefinitionBase>
		constexpr auto _designTunables = 0xc0; // UDBDDesignTunables*
		constexpr auto _bloodwebTunables = 0xc8; // UBloodwebTunables*
		constexpr auto _alternativePathOccurenceFactor = 0xd0; // float
		constexpr auto _dataDistribution = 0xd8; // UBloodwebDistribution*
		constexpr auto _bloodwebSettings = 0xe0; // UBloodwebSettings*
	}

	namespace n_UBlendSpace { // : UBlendSpaceBase
		constexpr auto AxisToScaleAnimation = 0x150; // EBlendSpaceAxis
	}

	namespace n_UPhysicsConstraintComponent { // : USceneComponent
		constexpr auto ConstraintActor1 = 0x210; // AActor*
		constexpr auto ComponentName1 = 0x218; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x228; // AActor*
		constexpr auto ComponentName2 = 0x230; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x250; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x258; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x268; // FConstraintInstance
	}

	namespace n_UGizmoBoxComponent { // : UGizmoBaseComponent
		constexpr auto Origin = 0x448; // FVector
		constexpr auto Rotation = 0x460; // FQuat
		constexpr auto Dimensions = 0x470; // FVector
		constexpr auto LineThickness = 0x47c; // float
		constexpr auto bRemoveHiddenLines = 0x480; // bool
		constexpr auto bEnableAxisFlip = 0x481; // bool
	}

	namespace n_UAISenseConfig_Trail { // : UAISenseConfig
		constexpr auto Implementation = 0x50; // UAISense_Trail*
		constexpr auto MaxRange = 0x58; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x5c; // float
		constexpr auto DetectionByAffiliation = 0x60; // FAISenseAffiliationFilter
	}

	namespace n_UUMGLobbyScreen { // : UMobileBaseUserWidget
		constexpr auto LobbySearchingWidget = 0x300; // UUMGLobbySearchingWidget*
		constexpr auto OnJoinedLobbyLeaved = 0x308; // FMulticastInlineDelegate
		constexpr auto OnSearchingLobbyCancelled = 0x318; // FMulticastInlineDelegate
		constexpr auto LobbySwitcher = 0x328; // UWidgetSwitcher*
		constexpr auto LobbyJoinedWidget = 0x330; // UUMGLobbyJoinedWidget*
		constexpr auto OfferingWidget = 0x338; // UUMGLobbyOfferingWidget*
		constexpr auto FogWidget = 0x340; // UUMGFogWidget*
	}

	namespace n_UProceduralFoliageSpawner { // : UObject
		constexpr auto RandomSeed = 0x30; // int32_t
		constexpr auto TileSize = 0x34; // float
		constexpr auto NumUniqueTiles = 0x38; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x3c; // float
		constexpr auto FoliageTypes = 0x48; // TArray<FFoliageTypeObject>
	}

	namespace n_UCannibalPowerPresentationItemProgressComponent { // : UPresentationItemProgressComponent
		constexpr auto _cannibalPowerChainsawComponent = 0xb8; // UCannibalChainsawPowerComponent*
	}

	namespace n_UGMAdaptiveShadowMapSourceComponent { // : USceneComponent
		constexpr auto bUseAutoRadius = 0x210; // bool
		constexpr auto Radius = 0x214; // float
		constexpr auto DepthMin = 0x218; // float
		constexpr auto DepthMax = 0x21c; // float
		constexpr auto Levels = 0x220; // int32_t
		constexpr auto PreGeneratedLevels = 0x224; // int32_t
	}

	namespace n_UHudScreenUMG { // : UHudScreen
		constexpr auto _atlantaHud = 0x248; // UUmgPlayerHud*
		constexpr auto _safeZoneManager = 0x250; // USafeZoneManagerWidget*
		constexpr auto _closeNoiseIndicatorWidgets = 0x258; // TArray<UNoiseIndicatorWidget*>
		constexpr auto _exitOpenedIndicatorWidgets = 0x268; // TArray<UExitOpenedIndicatorWidget*>
		constexpr auto _generatorIndicatorWidgets = 0x278; // TArray<UGeneratorIndicatorWidget*>
		constexpr auto _hatchIndicatorWidgets = 0x288; // TArray<UNoiseIndicatorWidget*>
		constexpr auto _hookedIndicatorWidgets = 0x298; // TArray<UHookedIndicatorWidget*>
		constexpr auto _killerCuesIndicatorWidgets = 0x2a8; // TArray<UKillerNoiseIndicatorWidget*>
		constexpr auto _loudNoiseIndicatorWidgets = 0x2b8; // TMap<FString, UNoiseIndicatorWidget*>
		constexpr auto _globalSoundIndicatorWidget = 0x308; // UBaseIndicatorWidget*
		constexpr auto _offscreenNoiseIndicatorWidgets = 0x310; // TMap<FString, UNoiseIndicatorWidget*>
		constexpr auto _noiseIndicatorMap = 0x360; // TMap<int32_t, UBaseIndicatorWidget*>
		constexpr auto _promptManager = 0x3b0; // UPromptManager*
		constexpr auto _objectiveManager = 0x3b8; // UAtlantaTutorialObjectiveManager*
		constexpr auto AtlantaObjectiveClass = 0x3c0; // TSoftClassPtr<UObject>
	}

	namespace n_AK25Gateway { // : AActor
		constexpr auto _rayCastZOffet = 0x240; // float
		constexpr auto _rayCastLength = 0x244; // float
		constexpr auto _distancePercentLocations = 0x248; // TArray<float>
		constexpr auto _survivorGatewayRotationSpeed = 0x258; // float
		constexpr auto _minimumIndicatorVelocity = 0x25c; // float
		constexpr auto _indicatorVelocityEasingFactor = 0x260; // float
		constexpr auto _minimumTimeBeforeTargetLocationMulticast = 0x264; // float
		constexpr auto _minDistanceFromPlayer = 0x268; // FDBDTunableRowHandle
		constexpr auto _maxDistanceFromPlayer = 0x290; // FTunableStat
		constexpr auto _gatewayPlacementSpeed = 0x310; // FDBDTunableRowHandle
		constexpr auto _pitchLevelChangeAngleThreshold = 0x338; // FDBDTunableRowHandle
		constexpr auto _pitchLevelChangeZoneThreshold = 0x360; // FDBDTunableRowHandle
		constexpr auto _maximumCameraPitchOrientationAngle = 0x388; // FDBDTunableRowHandle
		constexpr auto _minimumCameraPitchOrientationAngle = 0x3b0; // FDBDTunableRowHandle
		constexpr auto _maxGatewayPossessionDuration = 0x3d8; // FDBDTunableRowHandle
		constexpr auto _visualComponent = 0x400; // UActorComponent*
		constexpr auto _targetLocation = 0x408; // FVector
		constexpr auto _cameraPlacementComponent = 0x428; // UCameraComponent*
		constexpr auto _isGatewayPossessed = 0x430; // bool
		constexpr auto _isBeingPositionned = 0x44c; // bool
		constexpr auto _possessionTimer = 0x468; // FFastTimer
	}

	namespace n_UAutomationTestSettings { // : UObject
		constexpr auto EngineTestModules = 0x30; // TArray<FString>
		constexpr auto EditorTestModules = 0x40; // TArray<FString>
		constexpr auto AutomationTestmap = 0x50; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x70; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x80; // TArray<FSoftObjectPath>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
	}

	namespace n_UMovieSceneObjectPropertySection { // : UMovieSceneSection
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x30; // AActor*
	}

	namespace n_UGeometryCollection { // : UObject
		constexpr auto Materials = 0x38; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x48; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x49; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x4c; // int32_t
		constexpr auto MaxLevelSetResolution = 0x50; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x58; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x5c; // float
		constexpr auto bMassAsDensity = 0x60; // bool
		constexpr auto Mass = 0x64; // float
		constexpr auto MinimumMassClamp = 0x68; // float
		constexpr auto CollisionParticlesFraction = 0x6c; // float
		constexpr auto MaximumCollisionParticles = 0x70; // int32_t
		constexpr auto SizeSpecificData = 0x78; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x88; // bool
		constexpr auto RemoveOnFractureMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa0; // FGuid
		constexpr auto StateGuid = 0xb0; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc0; // int32_t
	}

	namespace n_UGameEventDispatcher { // : UGameInstanceSubsystem
		constexpr auto _ongoingEvents = 0x88; // TArray<UOngoingGameEvent*>
	}

	namespace n_UVRNotificationsComponent { // : UActorComponent
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xc8; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xd8; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xe8; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0xf8; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x108; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x118; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x128; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x138; // FMulticastInlineDelegate
	}

	namespace n_USurvivorHitCosmeticHandler { // : UBaseReversibleInstantActionHandler
		constexpr auto _bloodSpurts = 0x30; // UNiagaraComponent*
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDebug = 0x30; // char : 1
		constexpr auto bExclusive = 0x30; // char : 1
		constexpr auto Priority = 0x34; // char
		constexpr auto CameraOwner = 0x38; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x40; // float
		constexpr auto AlphaOutTime = 0x44; // float
		constexpr auto alpha = 0x48; // float
	}

	namespace n_UUMGAtlantaPurchasePopup { // : UMobileBaseUserWidget
		constexpr auto LayoutSwitcher = 0x300; // UWidgetSwitcher*
		constexpr auto ImagePopup = 0x308; // UImage*
		constexpr auto OfferTextWithInfo = 0x310; // UTextBlock*
		constexpr auto OfferText = 0x318; // UTextBlock*
		constexpr auto TitleTextWithInfo = 0x320; // UTextBlock*
		constexpr auto TitleText = 0x328; // UTextBlock*
		constexpr auto DescriptionText = 0x330; // UTextBlock*
		constexpr auto ItemsContainer = 0x338; // UHorizontalBox*
		constexpr auto BuyButtonWithInfo = 0x340; // UUMGPurchaseBuyButton*
		constexpr auto BuyButton = 0x348; // UUMGPurchaseBuyButton*
		constexpr auto CloseButton = 0x350; // UUMGBaseButtonWidget*
		constexpr auto PurchaseSticker = 0x358; // UUMGPurchaseSticker*
		constexpr auto PurchaseItemsInfoWidgetClass = 0x360; // TSoftClassPtr<UObject>
	}

	namespace n_UStartDemonModeInteraction { // : UChargeableInteractionDefinition
		constexpr auto YawAdjustTime = 0x6d8; // float
		constexpr auto DemonModeActivationMontage = 0x6e0; // FAnimationMontageDescriptor
	}

	namespace n_UAlignObjectsTool { // : UMultiSelectionTool
		constexpr auto AlignProps = 0xa0; // UAlignObjectsToolProperties*
	}

	namespace n_UTeachableTooltipWidget { // : UBaseTooltipWidget
		constexpr auto SubTitleLabel = 0x338; // UTextBlock*
		constexpr auto HeaderSmoke = 0x340; // UImage*
		constexpr auto EffectText = 0x348; // UUMGHtmlRichText*
		constexpr auto AvailabilityText = 0x350; // UUMGHtmlRichText*
	}

	namespace n_UBlackboardData { // : UDataAsset
		constexpr auto Parent = 0x38; // UBlackboardData*
		constexpr auto Keys = 0x40; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x50; // char : 1
	}

	namespace n_UPresenterGroupHandler { // : UUIComponent
		constexpr auto PresenterGroupClass = 0xb8; // APresenterGroup*
		constexpr auto _presenterGroup = 0xc0; // APresenterGroup*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution { // : UFieldSystemMetaData
		constexpr auto ResolutionType = 0xb8; // EFieldResolutionType
	}

	namespace n_UPerkSoundHudWidget { // : UMobileBaseUserWidget
		constexpr auto PerkIcons = 0x300; // UHorizontalBox*
	}

	namespace n_UDBDCheatManager { // : UCheatManager
		constexpr auto DBDMarketingCameraControllerRef = 0x80; // ADBDMarketingCameraController*
		constexpr auto DBDMarketingCameraControllerClass = 0x88; // ADBDMarketingCameraController*
		constexpr auto _virtualKeyboard = 0xd0; // UVirtualKeyboard*
	}

	namespace n_UCrowdFollowingComponent { // : UPathFollowingComponent
		constexpr auto CharacterMovement = 0x268; // UCharacterMovementComponent*
		constexpr auto CrowdAgentMoveDirection = 0x270; // FVector
	}

	namespace n_UExhaustedEffect { // : UAdjustableCooldownStatusEffect
		constexpr auto CooldownModifier = 0x360; // float
	}

	namespace n_UExponentialHeightFogComponent { // : USceneComponent
		constexpr auto FogDensity = 0x210; // float
		constexpr auto FogHeightFalloff = 0x214; // float
		constexpr auto SecondFogData = 0x218; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x224; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x238; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x240; // float
		constexpr auto InscatteringTextureTint = 0x244; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x254; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x258; // float
		constexpr auto DirectionalInscatteringExponent = 0x25c; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x260; // float
		constexpr auto DirectionalInscatteringColor = 0x264; // FLinearColor
		constexpr auto FogMaxOpacity = 0x274; // float
		constexpr auto StartDistance = 0x278; // float
		constexpr auto FogCutoffDistance = 0x27c; // float
		constexpr auto bEnableVolumetricFog = 0x280; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x284; // float
		constexpr auto VolumetricFogAlbedo = 0x288; // FColor
		constexpr auto VolumetricFogEmissive = 0x28c; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x29c; // float
		constexpr auto VolumetricFogDistance = 0x2a0; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x2a4; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2a8; // bool
		constexpr auto FogGradient = 0x2b0; // TArray<FHeightFogGradientEntry>
		constexpr auto DistanceUntilFlatFog = 0x2c0; // float
		constexpr auto DistanceUntilNoFog = 0x2c4; // float
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x38; // FRawDistributionVector
		constexpr auto MultiplyX = 0x80; // char : 1
		constexpr auto MultiplyY = 0x80; // char : 1
		constexpr auto MultiplyZ = 0x80; // char : 1
	}

	namespace n_ULegalMenuScreenUMG { // : ULegalMenuScreen
		constexpr auto _atlLegalMenuScreen = 0x168; // UUMGAtlantaLegalMenuScreen*
	}

	namespace n_UUMGSequencePlayer { // : UObject
		constexpr auto Animation = 0x410; // UWidgetAnimation*
	}

	namespace n_UUMGAuricCellsButton { // : UUMGCurrencyWidget
		constexpr auto PlusImage = 0x448; // UImage*
	}

	namespace n_UCompositeDataTable { // : UDataTable
		constexpr auto ParentTables = 0xd0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xe0; // TArray<UDataTable*>
	}

	namespace n_UAISense_Team { // : UAISense
		constexpr auto RegisteredEvents = 0x90; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UPhysicsThrusterComponent { // : USceneComponent
		constexpr auto ThrustStrength = 0x210; // float
	}

	namespace n_UEnvQueryManager { // : UAISubsystem
		constexpr auto InstanceCache = 0xb0; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xc0; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xd0; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x134; // float
		constexpr auto bTestQueriesUsingBreadth = 0x138; // bool
		constexpr auto QueryCountWarningThreshold = 0x13c; // int32_t
		constexpr auto QueryCountWarningInterval = 0x140; // double
	}

	namespace n_ADBDCustomizationTool { // : AActor
		constexpr auto OverallLightingClass = 0x230; // TSoftClassPtr<UObject>
		constexpr auto CustomizationData = 0x260; // FDBDCustomizationToolData
		constexpr auto _spawnedActors = 0xf78; // TArray<AActor*>
	}

	namespace n_UBTService_FindInteractor_Generator { // : UBTService_FindInteractor
		constexpr auto StatusFilter = 0x218; // EFindInteractableGeneratorStatusFilter
		constexpr auto MinRepairRatioFilter = 0x21c; // FAITunableParameter
		constexpr auto UsePerceptionToGetRepairRatio = 0x22c; // bool
		constexpr auto MaxRepairGoalWeight = 0x230; // FAITunableParameter
		constexpr auto InfectedStateGoalWeight = 0x240; // FAITunableParameter
		constexpr auto HexRuinGoalWeight = 0x250; // FAITunableParameter
		constexpr auto HexRuinPerkId = 0x260; // FName
	}

	namespace n_UAB_Menu_Slasher07_C { // : UBaseMenuAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_RandomPlayer = 0x2b0; // FAnimNode_RandomPlayer
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x328; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_BlendListByBool_2 = 0x3a0; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_BlendListByBool = 0x440; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x558; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x590; // FAnimNode_StateMachine
		constexpr auto Role Selected = 0x640; // bool
		constexpr auto Is Online = 0x641; // bool
	}

	namespace n_UMaterialExpressionSpeedTree { // : UMaterialExpression
		constexpr auto GeometryInput = 0x48; // FExpressionInput
		constexpr auto WindInput = 0x64; // FExpressionInput
		constexpr auto LODInput = 0x80; // FExpressionInput
		constexpr auto ExtraBendWS = 0x9c; // FExpressionInput
		constexpr auto GeometryType = 0xb8; // ESpeedTreeGeometryType
		constexpr auto WindType = 0xb9; // ESpeedTreeWindType
		constexpr auto LODType = 0xba; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0xbc; // float
		constexpr auto bAccurateWindVelocities = 0xc0; // bool
	}

	namespace n_UMovieSceneSubTrack { // : UMovieSceneNameableTrack
		constexpr auto Sections = 0x60; // TArray<UMovieSceneSection*>
	}

	namespace n_UVectorField { // : UObject
		constexpr auto Bounds = 0x30; // FBox
		constexpr auto Intensity = 0x4c; // float
	}

	namespace n_UAmbisonicsEncodingSettings { // : USoundfieldEncodingSettingsBase
		constexpr auto AmbisonicsOrder = 0x30; // int32_t
	}

	namespace n_UUMGBloodStoreTimer { // : UMobileBaseUserWidget
		constexpr auto _normalColor = 0x310; // FSlateColor
		constexpr auto _warningColor = 0x338; // FSlateColor
		constexpr auto RemainingTimeTextBlock = 0x360; // UTextBlock*
		constexpr auto RefreshImage = 0x368; // UImage*
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x30; // FName
		constexpr auto PhysMaterial = 0x40; // UPhysicalMaterial*
		constexpr auto Hardness = 0x48; // float
		constexpr auto LayerUsageDebugColor = 0x4c; // FLinearColor
	}

	namespace n_UAxisPositionGizmo { // : UInteractiveGizmo
		constexpr auto AxisSource = 0x50; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x60; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x70; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x80; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x90; // bool
		constexpr auto bInInteraction = 0x91; // bool
		constexpr auto InteractionOrigin = 0x94; // FVector
		constexpr auto interactionAxis = 0xa0; // FVector
		constexpr auto InteractionStartPoint = 0xac; // FVector
		constexpr auto InteractionCurPoint = 0xb8; // FVector
		constexpr auto InteractionStartParameter = 0xc4; // float
		constexpr auto InteractionCurParameter = 0xc8; // float
		constexpr auto ParameterSign = 0xcc; // float
	}

	namespace n_UTextLayoutWidget { // : UWidget
		constexpr auto ShapedTextOptions = 0x128; // FShapedTextOptions
		constexpr auto Justification = 0x12b; // ETextJustify
		constexpr auto WrappingPolicy = 0x12c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x12d; // char : 1
		constexpr auto WrapTextAt = 0x130; // float
		constexpr auto Margin = 0x134; // FMargin
		constexpr auto LineHeightPercentage = 0x144; // float
	}

	namespace n_UMaterialExpressionPerInstanceCustomData { // : UMaterialExpression
		constexpr auto defaultValue = 0x48; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x64; // float
		constexpr auto DataIndex = 0x68; // uint32_t
	}

	namespace n_UAnimCompress_RemoveEverySecondKey { // : UAnimCompress
		constexpr auto MinKeys = 0x48; // int32_t
		constexpr auto bStartAtSecondKey = 0x4c; // char : 1
	}

	namespace n_USourceEffectFilterPreset { // : USoundEffectSourcePreset
		constexpr auto Settings = 0x7c; // FSourceEffectFilterSettings
	}

	namespace n_ULevelReadyToPlayPlayerComponent { // : UActorComponent
		constexpr auto _levelReadyToPlayRequirementsTarget = 0xb8; // TArray<FLevelReadyToPlayRequirements>
	}

	namespace n_URespawnablePositioner { // : UActorComponent
		constexpr auto OnIsInteractingWithAnyRespawnableInteractableChangedEvent = 0xb8; // FMulticastInlineDelegate
		constexpr auto _respawnableInteractables = 0xc8; // TArray<ARespawnableInteractable*>
	}

	namespace n_UBTDecorator_Loop { // : UBTDecorator
		constexpr auto NumLoops = 0x70; // int32_t
		constexpr auto bInfiniteLoop = 0x74; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x78; // float
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x40; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x88; // FRawDistributionFloat
	}

	namespace n_ULocomotionLookAtSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _isInjured = 0x4f0; // bool
		constexpr auto _isCrawling = 0x4f1; // bool
		constexpr auto _isDead = 0x4f2; // bool
		constexpr auto _isUsingAimItem = 0x4f3; // bool
		constexpr auto _aimOffsetPitch = 0x4f4; // float
		constexpr auto _aimOffsetYaw = 0x4f8; // float
		constexpr auto _aimOffsetYawInterpolated = 0x4fc; // float
		constexpr auto _allowLookAt = 0x500; // bool
		constexpr auto _isDrasticAimOffsetYawChangeDetected = 0x501; // bool
		constexpr auto _aimOffsetYawInterpolationSpeed = 0x504; // float
		constexpr auto _aimOffsetYawDeadzoneStart = 0x508; // float
		constexpr auto _aimOffsetYawClampValue = 0x50c; // float
		constexpr auto _aimOffsetYawDrasticChangeUpperLimit = 0x510; // float
		constexpr auto _aimOffsetYawDrasticChangeLowerLimit = 0x514; // float
		constexpr auto _aimOffsetYawDrasticChangeInterpolationSpeed = 0x518; // float
		constexpr auto _aimOffsetYawInterpolateEaseIn = 0x520; // UCurveFloat*
		constexpr auto _aimOffsetYawInterpolateEaseOut = 0x528; // UCurveFloat*
		constexpr auto _aimOffsetYawInterpolationEaseInLength = 0x530; // float
		constexpr auto _aimOffsetYawInterpolationEaseOutDistance = 0x534; // float
		constexpr auto _isAimOffsetYawInDeadZone = 0x538; // bool
		constexpr auto _currentTargetAimOffsetYaw = 0x53c; // float
		constexpr auto _aimOffsetYawAcceleration = 0x540; // float
		constexpr auto _aimOffsetYawAccelerationTime = 0x544; // float
	}

	namespace n_UBiteTheBullet { // : UPerk
		constexpr auto _server_healTarget = 0x3d0; // ADBDPlayer*
	}

	namespace n_ACameraRig_Rail { // : AActor
		constexpr auto CurrentPositionOnRail = 0x230; // float
		constexpr auto bLockOrientationToRail = 0x234; // bool
		constexpr auto TransformComponent = 0x238; // USceneComponent*
		constexpr auto RailSplineComponent = 0x240; // USplineComponent*
		constexpr auto RailCameraMount = 0x248; // USceneComponent*
	}

	namespace n_UAtlantaCamperInitializer { // : UActorComponent
		constexpr auto HeartbeatOffset = 0xb8; // FVector
	}

	namespace n_ATemplateSequenceActor { // : AActor
		constexpr auto PlaybackSettings = 0x238; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x250; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x258; // FSoftObjectPath
		constexpr auto BindingOverride = 0x278; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UEditorActorVisualization { // : USceneComponent
		constexpr auto ActorVisualization = 0x210; // TSoftClassPtr<UObject>
		constexpr auto RelativeTransform = 0x240; // FTransform
	}

	namespace n_ALoudNoise { // : AActor
		constexpr auto _toInfinityDecal = 0x230; // UDecalComponent*
		constexpr auto _distortionParticleSystem = 0x238; // UParticleSystemComponent*
		constexpr auto _ak_audio_loudNoise = 0x240; // UAkComponent*
		constexpr auto _rootScene = 0x248; // USceneComponent*
		constexpr auto _loudNoiseMinDistance = 0x250; // float
		constexpr auto _loudNoiseLifetime = 0x288; // float
		constexpr auto _heightToAddToLoudNoiseLocation = 0x28c; // float
		constexpr auto _loudNoiseDecalDistance = 0x290; // float
		constexpr auto _cameraDecalDistance = 0x294; // float
	}

	namespace n_UBaseLingeringStatusEffect { // : UStatusEffect
		constexpr auto _lingerDuration = 0x350; // float
	}

	namespace n_UDeadMansSwitch { // : UPerk
		constexpr auto _activationDurationByLevels = 0x3d8; // float [0x3]
		constexpr auto _anySurvivorLetGo = 0x3e4; // bool
		constexpr auto _blockedGenerators = 0x3e8; // TArray<AGenerator*>
	}

	namespace n_UK26IsLastCrowRemovalReasonDueToInteraction { // : UEventDrivenModifierCondition
		constexpr auto _owningAttachedCrow = 0xe8; // AK26AttachedCrow*
		constexpr auto _statusHandlerComponent = 0xf0; // UK26PowerStatusHandlerComponent*
	}

	namespace n_UBoxFalloff { // : UFieldNodeFloat
		constexpr auto Magnitude = 0xb8; // float
		constexpr auto MinRange = 0xbc; // float
		constexpr auto MaxRange = 0xc0; // float
		constexpr auto Default = 0xc4; // float
		constexpr auto Transform = 0xd0; // FTransform
		constexpr auto Falloff = 0x100; // EFieldFalloffType
	}

	namespace n_ABorderTile { // : ATile
		constexpr auto Borders = 0x348; // TArray<FBorderElements>
		constexpr auto _map = 0x358; // UMapData*
	}

	namespace n_UUMGLobbyJoinedWidget { // : UMobileBaseUserWidget
		constexpr auto LocalPlayerIsSlasher = 0x300; // bool
		constexpr auto TextLeaveLobby = 0x308; // FText
		constexpr auto TextPlayerNotReadyYet = 0x320; // FText
		constexpr auto TextWaitingPlayers = 0x338; // FText
		constexpr auto TextToBeReady = 0x350; // FText
		constexpr auto CommandButtonsContainer = 0x368; // UHorizontalBox*
	}

	namespace n_UFlashlightConeComponent { // : UActorComponent
		constexpr auto AIAimBeamLocationOffset = 0xb8; // FVector
		constexpr auto AIAimBeamRotationOffset = 0xc4; // FRotator
		constexpr auto _flashlightBottom = 0xd0; // USceneComponent*
		constexpr auto _baseBeamAngle = 0xd8; // FDBDTunableRowHandle
		constexpr auto _baseBeamLength = 0x100; // FDBDTunableRowHandle
		constexpr auto _cacheCollidingActor = 0x128; // TWeakObjectPtr<AActor>
	}

	namespace n_UTrailEffectLastingTimeBaseAddon { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _trailEffectLastingTimeModifierValue = 0x2a8; // float
	}

	namespace n_UPlagueSurvivorAnalyticsComponent { // : UActorComponent
		constexpr auto _replicatedRegularVomitHits = 0xb8; // uint32_t
	}

	namespace n_UNiagaraDataInterfaceGrid3D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumVoxels = 0xd8; // FIntVector
		constexpr auto VoxelSize = 0xe4; // float
		constexpr auto SetGridFromVoxelSize = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector
	}

	namespace n_UTwinAOELingeringStatusEffect { // : UBaseLingeringStatusEffect
		constexpr auto _shriekingRange = 0x358; // FTunableStat
	}

	namespace n_URichTextBlockImageDecorator { // : URichTextBlockDecorator
		constexpr auto ImageSet = 0x30; // UDataTable*
	}

	namespace n_UGameSessionSettings { // : UObject
		constexpr auto MaxSpectators = 0x30; // int32_t
		constexpr auto MaxPlayers = 0x34; // int32_t
		constexpr auto bRequiresPushToTalk = 0x38; // char : 1
	}

	namespace n_UFindSessionsCallbackProxy { // : UOnlineBlueprintCallProxyBase
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneEventSection { // : UMovieSceneSection
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UCheckBox { // : UContentWidget
		constexpr auto CheckedState = 0x140; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x144; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FCheckBoxStyle
		constexpr auto Style = 0x738; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x740; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x748; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x750; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x758; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x760; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x768; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x770; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x778; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x780; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x788; // EHorizontalAlignment
		constexpr auto Padding = 0x78c; // FMargin
		constexpr auto BorderBackgroundColor = 0x7a0; // FSlateColor
		constexpr auto IsFocusable = 0x7c8; // bool
		constexpr auto OnCheckStateChanged = 0x7d0; // FMulticastInlineDelegate
	}

	namespace n_UIntervalGizmo { // : UInteractiveGizmo
		constexpr auto StateTarget = 0x40; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x58; // UTransformProxy*
		constexpr auto ActiveComponents = 0x60; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x70; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x98; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0xa0; // UGizmoComponentAxisSource*
	}

	namespace n_UApplicationLifecycleComponent { // : UActorComponent
		constexpr auto ApplicationWillDeactivateDelegate = 0xb8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xc8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xd8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xe8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0xf8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x108; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x118; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x128; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x138; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceStaticMesh { // : UNiagaraDataInterface
		constexpr auto DefaultMesh = 0x38; // UStaticMesh*
		constexpr auto Source = 0x40; // AActor*
		constexpr auto SourceComponent = 0x48; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x50; // FNDIStaticMeshSectionFilter
	}

	namespace n_UUMGFriendSearchBarWidget { // : UMobileBaseUserWidget
		constexpr auto InputTextField = 0x330; // UEditableTextBox*
		constexpr auto SearchButton = 0x338; // UUMGBaseButtonWidget*
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevelNames = 0x268; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x278; // char : 1
		constexpr auto bDisabled = 0x278; // char : 1
		constexpr auto StreamingUsage = 0x27c; // EStreamingVolumeUsage
	}

	namespace n_UCoreEquippedItemWidget { // : UCoreBaseHudWidget
		constexpr auto ItemDisappearSfx = 0x2f8; // UAkAudioEvent*
	}

	namespace n_AGeneratorDrivenActor { // : AActor
		constexpr auto LightPriority = 0x230; // float
		constexpr auto TargetMobileLightMobility = 0x234; // EComponentMobility
		constexpr auto _activated = 0x238; // TArray<bool>
		constexpr auto _generators = 0x248; // TArray<AGenerator*>
	}

	namespace n_UDBDOutlineComponent { // : UBatchMeshCommands
		constexpr auto InterpolationSpeed = 0x2a0; // float
		constexpr auto ShouldBeAboveOutlines = 0x2a4; // bool
		constexpr auto ForceOutlineFarAway = 0x2a5; // bool
		constexpr auto LimitToCustomDepthObjects = 0x2a6; // bool
		constexpr auto FadeOutAsClosingIn = 0x2a7; // bool
		constexpr auto isAlwaysVisible = 0x2a8; // bool
		constexpr auto minimumOutlineDistance = 0x2ac; // float
		constexpr auto OutlineName = 0x2b0; // FString
		constexpr auto _renderStrategySelector = 0x318; // FDBDOutlineRenderStrategySelector
		constexpr auto _batchMeshCommands = 0x328; // UBatchMeshCommands*
		constexpr auto _renderingStrategy = 0x340; // UBaseOutlineRenderStrategy*
	}

	namespace n_UInteractionAnimNotify { // : UAnimNotify
		constexpr auto NotifyId = 0x40; // FName
	}

	namespace n_UBP_Audio_KLR_17_C { // : UBP_Audio_KLR_Base_C
		constexpr auto UberGraphFrame = 0xf0; // FPointerToUberGraphFrame
	}

	namespace n_UBTService_AroundEQS { // : UBTService_RunEQS
		constexpr auto BBAroundObj = 0x108; // FBlackboardKeySelector
		constexpr auto BBAroundLocation = 0x138; // FBlackboardKeySelector
		constexpr auto ValidLocationRefreshInterval = 0x168; // float
		constexpr auto InvalidLocationRefreshInterval = 0x16c; // float
		constexpr auto InvalidateLocationUnderTargetDistance = 0x170; // float
	}

	namespace n_UKindredPerk { // : UPerk
		constexpr auto _killerAuraRevealRange = 0x3e0; // TArray<float>
	}

	namespace n_UPortalOutlineUpdateStrategy { // : UOutlineUpdateStrategy
		constexpr auto _survivorAuraColor = 0xc0; // FLinearColor
	}

	namespace n_UBlightPowerStateNonLethalDash { // : UBlightPowerStateDash
		constexpr auto _smashBreakables = 0x250; // bool
	}

	namespace n_UCannibalChainsawAttack { // : UHillbillyChainsawAttack
		constexpr auto _isInTantrum = 0x400; // FTagStateBool
	}

	namespace n_USectionnedChargeableComponent { // : UChargeableComponent
		constexpr auto _sections = 0x290; // char
	}

	namespace n_UHarpoonedSurvivorSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _linkedMaxSpeed = 0x4f0; // float
		constexpr auto _timeBeforeHarpoonHitReset = 0x4f4; // float
		constexpr auto _hitHarpoonedEnterEvent = 0x4f8; // FName
		constexpr auto _chainBreakEnterEvent = 0x504; // FName
		constexpr auto _isChainLinked = 0x510; // bool
		constexpr auto _isBeingReeled = 0x511; // bool
		constexpr auto _hasLinkInput = 0x512; // bool
		constexpr auto _linkInputX = 0x514; // float
		constexpr auto _linkInputY = 0x518; // float
		constexpr auto _chainBreakTrigger = 0x51c; // bool
		constexpr auto _triggerHarpoonHit = 0x51d; // bool
		constexpr auto _harpoonHitTurnAnimNormalizedStartTime = 0x520; // float
		constexpr auto _harpoonHitAnimTurnRight = 0x524; // bool
		constexpr auto _isCrawling = 0x525; // bool
	}

	namespace n_UARBasicLightEstimate { // : UARLightEstimate
		constexpr auto AmbientIntensityLumens = 0x30; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x34; // float
		constexpr auto AmbientColor = 0x38; // FLinearColor
	}

	namespace n_UDBDTextBlock { // : UTextBlock
		constexpr auto TextStyle = 0x2e8; // FString
		constexpr auto _debugPreviewLargeTextState = 0x2f8; // bool
		constexpr auto _debugPreviewUndockedState = 0x2f9; // bool
		constexpr auto _switchDockStateManager = 0x300; // USwitchDockStateManager*
		constexpr auto _textManager = 0x308; // UDBDTextManager*
		constexpr auto _isUpperCase = 0x310; // bool
		constexpr auto _hasLargeText = 0x311; // bool
		constexpr auto _largeTextProperties = 0x318; // FTextBlockOverrideProperties
		constexpr auto _overrideUndockedPropertiesWithLargeText = 0x361; // bool
		constexpr auto _hasUndocking = 0x362; // bool
		constexpr auto _undockedProperties = 0x368; // FTextBlockOverrideProperties
	}

	namespace n_UBloodTrailSettings { // : UDataAsset
		constexpr auto _initialDelay = 0x38; // float
		constexpr auto _numBloodDropsPerBloodPool = 0x3c; // int32_t
		constexpr auto _bloodDropsInterval = 0x40; // float
		constexpr auto _randomlyRotateBloodDrops = 0x44; // bool
		constexpr auto _bloodDropsRandomScatter = 0x48; // float
		constexpr auto _bloodTraceChannel = 0x4c; // ETraceTypeQuery
		constexpr auto _bloodDecalEffect = 0x50; // UBloodDecalEffect*
		constexpr auto _decalPoolSize = 0x58; // FBHVRPerDetailModeInt
		constexpr auto _recycleThresholdPercentage = 0xf8; // float
		constexpr auto _recycleDistancePercentage = 0xfc; // float
		constexpr auto _maxOverlapping = 0x100; // FBHVRPerDetailModeInt
	}

	namespace n_UNiagaraDataInterfaceCurveBase { // : UNiagaraDataInterface
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
	}

	namespace n_UCharacterInventoryComponent { // : UActorComponent
		constexpr auto _inventory = 0x100; // TArray<ACollectable*>
		constexpr auto _generalAddons = 0x110; // TArray<UItemAddon*>
		constexpr auto _backpackInventory = 0x120; // TArray<ACollectable*>
		constexpr auto _allAddons = 0x130; // TArray<UItemAddon*>
	}

	namespace n_UDBDPathFollowingComponent { // : UPathFollowingComponent
		constexpr auto UnblockPathDeviationRadius = 0x270; // float
		constexpr auto UnblockPathTimeLimit = 0x274; // float
		constexpr auto _onNavLinkProxies = 0x398; // TSet<ANavLinkProxy*>
	}

	namespace n_ATextRenderActor { // : AActor
		constexpr auto TextRender = 0x230; // UTextRenderComponent*
	}

	namespace n_ASkyLight { // : AInfo
		constexpr auto LightComponent = 0x230; // USkyLightComponent*
		constexpr auto bEnabled = 0x238; // char : 1
	}

	namespace n_UCoreStatusEffectWidget { // : UCoreBaseHudWidget
		constexpr auto InactiveThreshold = 0x2f8; // int32_t
		constexpr auto PrepooledItemAmount = 0x2fc; // int32_t
		constexpr auto ItemsByColumn = 0x300; // int32_t
		constexpr auto EvenColumnOffset = 0x304; // float
		constexpr auto CoreStatusEffectIconClass = 0x308; // UCoreStatusEffectIcon*
		constexpr auto StatusEffectContainer = 0x310; // UGridPanel*
		constexpr auto _statusEffectPool = 0x318; // TArray<UCoreStatusEffectIcon*>
		constexpr auto _statusEffectOrder = 0x328; // TArray<FName>
		constexpr auto _statusEffectMap = 0x338; // TMap<FName, UCoreStatusEffectIcon*>
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SubUVDataOffset = 0x3c; // int32_t
		constexpr auto EmitterRenderMode = 0x40; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x41; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x43; // char : 1
		constexpr auto ConvertedModules = 0x43; // char : 1
		constexpr auto bIsSoloing = 0x43; // char : 1
		constexpr auto bCookedOut = 0x43; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x43; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x44; // char : 1
		constexpr auto LODLevels = 0x48; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x58; // int32_t
		constexpr auto InitialAllocationCount = 0x5c; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x60; // float
		constexpr auto DetailModeBitMask = 0x64; // uint32_t
		constexpr auto BHVRDetailModeBitMask = 0x68; // int32_t
	}

	namespace n_UGameplayTagsList { // : UObject
		constexpr auto ConfigFileName = 0x30; // FString
		constexpr auto GameplayTagList = 0x40; // TArray<FGameplayTagTableRow>
	}

	namespace n_URandomVector { // : UFieldNodeVector
		constexpr auto Magnitude = 0xb8; // float
	}

	namespace n_UDBDMapFoliageDensityTunables { // : UObject
		constexpr auto FoliageToAutomateDensity = 0x30; // TArray<FTypeFoliageToAutomateDensity>
	}

	namespace n_UStereoLayerShapeCylinder { // : UStereoLayerShape
		constexpr auto Radius = 0x30; // float
		constexpr auto OverlayArc = 0x34; // float
		constexpr auto Height = 0x38; // int32_t
	}

	namespace n_UDBDSocialNotificationFactory { // : UObject
		constexpr auto _gameInstance = 0x30; // TWeakObjectPtr<UDBDGameInstance>
		constexpr auto _toastMgr = 0x38; // UToastManager*
		constexpr auto _partyFacade = 0x40; // UDBDPartyFacade*
		constexpr auto _friendManager = 0x48; // UFriendManager*
		constexpr auto _toastTable = 0x50; // UDataTable*
	}

	namespace n_UAsyncActionHandleSaveGame { // : UBlueprintAsyncActionBase
		constexpr auto COMPLETED = 0x38; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x68; // USaveGame*
	}

	namespace n_ULiveLinkVirtualSubject { // : UObject
		constexpr auto Role = 0x38; // ULiveLinkRole*
		constexpr auto Subjects = 0x40; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x50; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UTotemOutlineUpdateStrategy { // : USourceBasedOutlineUpdateStrategy
		constexpr auto _revealedColorToSurvivor = 0x130; // FLinearColor
		constexpr auto _boonTotemRevealedColorToSurvivor = 0x140; // FLinearColor
		constexpr auto _revealedColorToKiller = 0x150; // UCurveLinearColor*
	}

	namespace n_UUMGMonthlyPassRewardItemWidget { // : UMobileBaseUserWidget
		constexpr auto itemAmount = 0x300; // UTextBlock*
		constexpr auto ItemName = 0x308; // UTextBlock*
		constexpr auto ItemIcon = 0x310; // UImage*
		constexpr auto CheckIcon = 0x318; // UImage*
		constexpr auto ItemFrame = 0x320; // UImage*
		constexpr auto ItemRarityBackground = 0x328; // UImage*
		constexpr auto ItemPaintPanel = 0x330; // UCanvasPanel*
		constexpr auto ActiveItemFrameColor = 0x338; // FLinearColor
		constexpr auto NonActiveItemFrameColor = 0x348; // FLinearColor
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
	}

	namespace n_UConstructionPlaneMechanic { // : UInteractionMechanic
		constexpr auto PlaneTransformGizmo = 0xd8; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xe0; // UTransformProxy*
		constexpr auto ClickToSetPlaneBehavior = 0xf8; // USingleClickInputBehavior*
	}

	namespace n_UAkWindowsInitializationSettings { // : UObject
		constexpr auto CommonSettings = 0x30; // FAkCommonInitializationSettingsWithSampleRate
		constexpr auto CommunicationSettings = 0x98; // FAkCommunicationSettingsWithSystemInitialization
		constexpr auto AdvancedSettings = 0xc0; // FAkWindowsAdvancedInitializationSettings
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy { // : UObject
		constexpr auto OnSuccess = 0x38; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x48; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x68; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UCharacterTooltipWidget { // : UCoreBaseUserWidget
		constexpr auto InstructionTB = 0x2d8; // UDBDTextBlock*
		constexpr auto LevelTB = 0x2e0; // UDBDTextBlock*
		constexpr auto MarketTB = 0x2e8; // UDBDTextBlock*
		constexpr auto DifficultyRTB = 0x2f0; // UDBDRichTextBlock*
	}

	namespace n_UUMGRefundPopup { // : UUMGGenericPopup
		constexpr auto RefundDataContainer = 0x3e8; // UVerticalBox*
		constexpr auto RefundDataWidgetClass = 0x3f0; // TSoftClassPtr<UObject>
	}

	namespace n_UBTTask_SetFleeLoopCooldown { // : UBTTaskNode
		constexpr auto Duration = 0x78; // float
	}

	namespace n_UK26PowerStatusHandlerComponent { // : UActorComponent
		constexpr auto _interactionsDuringWhichTheCrowIsIgnored = 0xc8; // TArray<UInteractionDefinition*>
		constexpr auto _invincibilityTime = 0xf0; // FDBDTunableRowHandle
		constexpr auto _killerInstinctDelay = 0x118; // FDBDTunableRowHandle
		constexpr auto _killerInstinctGracePeriod = 0x140; // FDBDTunableRowHandle
		constexpr auto _statusIndicatorClass = 0x168; // AActor*
		constexpr auto _k26KillerInstinctStatusEffectName = 0x170; // FName
		constexpr auto _survivorStatusList = 0x180; // TArray<FK26SurvivorStatus>
	}

	namespace n_URepressedAlliance { // : UPerk
		constexpr auto _secondaryActionProperties = 0x3d0; // FSecondaryInteractionProperties
		constexpr auto _repairTimesNeededToActivate = 0x408; // float [0x3]
		constexpr auto _generatorBlockDuration = 0x414; // float
		constexpr auto _currentRepairInteractionWithAbility = 0x418; // UInteractionDefinition*
		constexpr auto _blockedGenerator = 0x438; // AGenerator*
	}

	namespace n_UAB_LamentBox_REF_C { // : UAnimInstance
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x278; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2b0; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x328; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x360; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot = 0x410; // FAnimNode_Slot
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x40; // FVector
		constexpr auto bLockAxes = 0x4c; // char : 1
		constexpr auto LockedAxes = 0x50; // EDistributionVectorLockFlags
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x38; // FRawDistributionVector
		constexpr auto Range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xe0; // char : 1
		constexpr auto bAffectBaseVelocity = 0xe0; // char : 1
		constexpr auto bOverrideVelocity = 0xe0; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xe0; // char : 1
		constexpr auto Positive_X = 0xe0; // char : 1
		constexpr auto Positive_Y = 0xe0; // char : 1
		constexpr auto Positive_Z = 0xe0; // char : 1
		constexpr auto Negative_X = 0xe0; // char : 1
		constexpr auto Negative_Y = 0xe1; // char : 1
		constexpr auto Negative_Z = 0xe1; // char : 1
	}

	namespace n_USkyLightComponent { // : ULightComponentBase
		constexpr auto SourceType = 0x260; // ESkyLightSourceType
		constexpr auto Cubemap = 0x268; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x270; // float
		constexpr auto CubemapResolution = 0x274; // int32_t
		constexpr auto SkyDistanceThreshold = 0x278; // float
		constexpr auto bCaptureEmissiveOnly = 0x27c; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x27d; // bool
		constexpr auto LowerHemisphereColor = 0x280; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x290; // float
		constexpr auto Contrast = 0x294; // float
		constexpr auto OcclusionExponent = 0x298; // float
		constexpr auto MinOcclusion = 0x29c; // float
		constexpr auto OcclusionTint = 0x2a0; // FColor
		constexpr auto OcclusionCombineMode = 0x2a4; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x358; // UTextureCube*
	}

	namespace n_UCamperStillnessTrackerComponent { // : UStillnessTrackerComponent
		constexpr auto ChickenShitModifier = 0xf0; // float
		constexpr auto LoudNoiseTime = 0xf4; // float
		constexpr auto ExposerSpawnTimes = 0x108; // TArray<float>
		constexpr auto ExposerDespawnTimes = 0x118; // TArray<float>
		constexpr auto _exposerInstanceToSpawn = 0x128; // ACamperExposerInstance*
		constexpr auto _exposerInstances = 0x130; // TArray<ACamperExposerInstance*>
		constexpr auto _interiorZone = 0x140; // UExposerInteriorZoneComponent*
	}

	namespace n_UBaseTwinInspectLocker { // : UBaseLockerInteraction
		constexpr auto _inspectInteractionTime = 0x5b8; // FDBDTunableRowHandle
	}

	namespace n_UAspectRatioBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UIsPerformingInteractionEvaluatorCondition { // : UEvaluatorCondition
		constexpr auto _semanticTags = 0x48; // TArray<FGameplayTag>
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x30; // char : 1
		constexpr auto TrackBoneNames = 0x38; // TArray<FName>
		constexpr auto LinkupCache = 0x48; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x58; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x68; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x78; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x88; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x98; // FName
		constexpr auto BestRatioSkelMeshName = 0xa4; // FName
	}

	namespace n_UAnimComposite { // : UAnimCompositeBase
		constexpr auto AnimationTrack = 0xb0; // FAnimTrack
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x40; // FRawDistributionFloat
		constexpr auto RateScale = 0x70; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xa0; // EParticleBurstMethod
		constexpr auto BurstList = 0xa8; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb8; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe8; // char : 1
	}

	namespace n_UUMGHudEditorDragConstraintWidget { // : UUserWidget
		constexpr auto LinkSizeBox = 0x260; // USizeBox*
		constexpr auto _childWidget = 0x268; // UUserWidget*
		constexpr auto _parentWidget = 0x270; // UUserWidget*
	}

	namespace n_UNiagaraSimulationStageGeneric { // : UNiagaraSimulationStageBase
		constexpr auto IterationSource = 0x48; // ENiagaraIterationSource
		constexpr auto Iterations = 0x4c; // int32_t
		constexpr auto bSpawnOnly = 0x50; // char : 1
		constexpr auto DataInterface = 0x58; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_UFlashlightTargetFXComponent { // : UActorComponent
		constexpr auto _modifiesBeamAngle = 0xe8; // bool
		constexpr auto _flashlightable = 0xf0; // UFlashlightableComponent*
	}

	namespace n_UCharacterProgressionManager { // : UObject
		constexpr auto _gameInstance = 0x30; // TWeakObjectPtr<UDBDGameInstance>
	}

	namespace n_UBlightAnimInstance { // : UKillerAnimInstance
		constexpr auto _blightPowerStateComponent = 0x5a8; // UBlightPowerStateComponent*
		constexpr auto _powerState = 0x5b0; // EWallGrabState
		constexpr auto _stateTimeRemaining = 0x5b4; // float
		constexpr auto _lookAngle = 0x5b8; // float
	}

	namespace n_UMaterialExpressionArccosine { // : UMaterialExpression
		constexpr auto Input = 0x48; // FExpressionInput
	}

	namespace n_AOfflineLobbyLevel { // : ALobbyLevel
		constexpr auto _partyLobbyInviteButtonOffset = 0x2b0; // FVector
		constexpr auto _roleSelectionCamperSpawns = 0x2c0; // TArray<TWeakObjectPtr<APlayerStart>>
		constexpr auto _roleSelectionSlasherSpawns = 0x2d0; // TArray<TWeakObjectPtr<APlayerStart>>
		constexpr auto _offlineLobbyLocalSlasherSpawn = 0x2e0; // TWeakObjectPtr<ADisplayStand>
		constexpr auto _partyLobbyEmptySlotFxOffset = 0x2e8; // FVector
		constexpr auto _offlineLobbyLocalCamperSpawn = 0x2f4; // TWeakObjectPtr<ADisplayStand>
		constexpr auto _partyLobbySlasherPOVTrackerOffsets = 0x300; // TArray<FVector>
		constexpr auto _partyLobbyEmptySlotSilhouette = 0x310; // TSoftClassPtr<UObject>
		constexpr auto _partyLobbySlasherDisplayStands = 0x340; // TArray<TWeakObjectPtr<ADisplayStand>>
		constexpr auto _partyLobbyCamperDisplayStands = 0x350; // TArray<TWeakObjectPtr<ADisplayStand>>
		constexpr auto _meatHookForCustomization = 0x360; // TSoftClassPtr<UObject>
		constexpr auto _meatHookSpawn = 0x390; // TWeakObjectPtr<ATargetPoint>
		constexpr auto _charmForCustomizationZoom = 0x398; // TSoftClassPtr<UObject>
		constexpr auto _camperCharmSpawn = 0x3c8; // TWeakObjectPtr<ATargetPoint>
		constexpr auto _slasherCharmSpawn = 0x3d0; // TWeakObjectPtr<ATargetPoint>
		constexpr auto _partyLobbyEmptySlotPawns = 0x3d8; // TMap<TWeakObjectPtr<ADisplayStand>, TWeakObjectPtr<ADBDMenuSilhouette>>
		constexpr auto _destroyingPawns = 0x470; // TArray<ADBDMenuPlayer*>
	}

	namespace n_UNiagaraDataInterfaceGrid2D { // : UNiagaraDataInterfaceRWBase
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UWidgetAnimationPlayCallbackProxy { // : UObject
		constexpr auto Finished = 0x30; // FMulticastInlineDelegate
	}

	namespace n_UReloadHarpoonRifleInteraction { // : UChargeableInteractionDefinition
		constexpr auto _reloadTime = 0x6d8; // FDBDTunableRowHandle
		constexpr auto _movementSpeedMultiplier = 0x700; // FDBDTunableRowHandle
		constexpr auto _rotationScaleMultiplier = 0x728; // FDBDTunableRowHandle
		constexpr auto _rotationScaleAdjustmentTime = 0x750; // FDBDTunableRowHandle
	}

	namespace n_USlateWidgetStyleAsset { // : UObject
		constexpr auto CustomStyle = 0x30; // USlateWidgetStyleContainerBase*
	}

	namespace n_UFontFace { // : UObject
		constexpr auto SourceFilename = 0x38; // FString
		constexpr auto Hinting = 0x48; // EFontHinting
		constexpr auto LoadingPolicy = 0x49; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x4a; // EFontLayoutMethod
	}

	namespace n_URiflePlayerLinker { // : UActorComponent
		constexpr auto OnLinkedPlayerSet = 0xb8; // FMulticastInlineDelegate
		constexpr auto _linkedPlayer = 0xc8; // ADBDPlayer*
		constexpr auto _linkedPlayerDuringAttack = 0xd0; // ADBDPlayer*
		constexpr auto _linkOwner = 0xd8; // ADBDPlayer*
		constexpr auto _desiredLinkLength = 0xe0; // float
		constexpr auto _elasticLength = 0x120; // FDBDTunableRowHandle
		constexpr auto _minimumLinkLength = 0x148; // FDBDTunableRowHandle
		constexpr auto _breakFreeCloseRangeMaxDistance = 0x170; // FDBDTunableRowHandle
		constexpr auto _movementLinkReductionThreshold = 0x19c; // float
		constexpr auto _movementAccelerationTreshold = 0x1a0; // float
	}

	namespace n_UCruelConfinement { // : UPerk
		constexpr auto _effectiveRadius = 0x3d0; // float [0x3]
		constexpr auto _blockDuration = 0x3dc; // float [0x3]
		constexpr auto _windowAuraColor = 0x3e8; // FLinearColor
		constexpr auto _blockableLists = 0x3f8; // TMap<AGenerator*, FWindowBlockableList>
	}

	namespace n_UUMGFriendPartyListElementWidget { // : UUMGFriendElementWidget
		constexpr auto ButtonOrStatusSwitcher = 0x598; // UWidgetSwitcher*
		constexpr auto CancelInviteButton = 0x5a0; // UButton*
		constexpr auto PartyStatusImage = 0x5a8; // UImage*
		constexpr auto IconNotReady = 0x5b0; // FSlateBrush
		constexpr auto IconReady = 0x640; // FSlateBrush
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack { // : UMovieSceneNiagaraParameterTrack
		constexpr auto ChannelsUsed = 0xa0; // int32_t
	}

	namespace n_UBTTask_GameplayTaskBase { // : UBTTaskNode
		constexpr auto bWaitForGameplayTask = 0x78; // char : 1
	}

	namespace n_UUMGPartyPlayerSlotWidget { // : UMobileBaseUserWidget
		constexpr auto playerName = 0x300; // UTextBlock*
		constexpr auto AdditionalInformationText = 0x308; // UTextBlock*
		constexpr auto FriendIcon = 0x310; // UImage*
		constexpr auto KickPlayerButton = 0x318; // UUMGBaseButtonWidget*
		constexpr auto CharacterNameStyle = 0x320; // FSlateFontInfo
		constexpr auto PlayerInMatchStyle = 0x378; // FSlateFontInfo
		constexpr auto PlayerInMatchOpacity = 0x3d0; // float
		constexpr auto PlayerInLobbyOpacity = 0x3d4; // float
		constexpr auto PlayerInformationContainer = 0x3d8; // UWidget*
		constexpr auto ReadyIconsCanvas = 0x3e0; // UCanvasPanel*
		constexpr auto RequestRoleIconsCanvas = 0x3e8; // UCanvasPanel*
		constexpr auto RoleSwitcher = 0x3f0; // UWidgetSwitcher*
		constexpr auto LeaderIcon = 0x3f8; // UImage*
	}

	namespace n_AAutoQualityAdjuster { // : AActor
		constexpr auto TargetResolutionScale = 0x230; // float
		constexpr auto MinimumMS = 0x234; // float
		constexpr auto MaximumMS = 0x238; // float
		constexpr auto ScaleIncreaseRate = 0x23c; // float
		constexpr auto ScaleDecreaseRate = 0x240; // float
		constexpr auto MinimumAllowableScale = 0x244; // float
	}

	namespace n_AProceduralLevelData { // : AActor
		constexpr auto SelectedPaperMap = 0x230; // TSoftObjectPtr<UPaperTileMap>
		constexpr auto GenerationSeed = 0x260; // int32_t
		constexpr auto LevelMood = 0x264; // EKillerMoodInfluence
		constexpr auto GeneratedData = 0x268; // FGeneratedLevelData
		constexpr auto offerings = 0x518; // TArray<FName>
		constexpr auto PerksLevel = 0x528; // int32_t
		constexpr auto Perks = 0x530; // TArray<FName>
		constexpr auto SkipGameplayElementGeneration = 0x540; // bool
		constexpr auto _builder = 0x548; // AActor*
		constexpr auto _builderClassDef = 0x550; // UObject*
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x38; // EParticleAxisLock
	}

	namespace n_UCrownPickupInteraction { // : UChargeableInteractionDefinition
		constexpr auto _attachToSocketName = 0x708; // FName
		constexpr auto _isInteractionChargeComplete = 0x714; // bool
	}

	namespace n_UArchiveStoriesContainer { // : UObject
		constexpr auto _rewardTrackContainer = 0x1b0; // URewardTrackContainer*
		constexpr auto _wallet = 0x280; // UWalletHandler*
		constexpr auto _vignettesContainer = 0x288; // UArchiveVignettesContainer*
	}

	namespace n_UUMGAtlRootStorefrontWidget { // : UUMGBaseRootStorefrontWidget
		constexpr auto ShardWalletWidget = 0x3f0; // UUMGCurrencyWidget*
		constexpr auto AuricWalletWidget = 0x3f8; // UUMGAuricCellsButton*
	}

	namespace n_UUMGFogWidget { // : UMobileBaseUserWidget
		constexpr auto BankAndPlayerInfoWidget = 0x300; // UUMGBankAndPlayerInfoWidget*
	}

	namespace n_UUMGCustomizationInfoWidget { // : UMobileBaseUserWidget
		constexpr auto Icon = 0x300; // UImage*
		constexpr auto Background = 0x308; // UImage*
		constexpr auto InformationText = 0x310; // URichTextBlock*
		constexpr auto BackgroundColor = 0x318; // FSlateColor
		constexpr auto TextColor = 0x340; // FSlateColor
		constexpr auto IconColor = 0x368; // FSlateColor
		constexpr auto DefaultIcon = 0x390; // TSoftObjectPtr<UTexture2D>
		constexpr auto KillerIcon = 0x3c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SurvivorIcon = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BreakableIcon = 0x420; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnbreakableIcon = 0x450; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UPawnActionsComponent { // : UActorComponent
		constexpr auto ControlledPawn = 0xb8; // APawn*
		constexpr auto ActionStacks = 0xc0; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xd0; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xe0; // UPawnAction*
	}

	namespace n_UMultipleMadSurvivorsQEEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _requiredTier = 0x90; // int32_t
		constexpr auto _madSurvivors = 0x98; // TSet<TWeakObjectPtr<AActor>>
	}

	namespace n_ANavLinkProxy_Interaction { // : ANavLinkProxy_Base
		constexpr auto PlayerSetups = 0x2f0; // TMap<EPlayerRole, FNavLinkInteractPlayerSetup>
		constexpr auto InteractionStartTimeLimit = 0x340; // float
		constexpr auto _playersInteractionInputAtTime = 0x348; // TMap<ADBDPlayer*, float>
	}

	namespace n_UTormentTrailDetectorComponent { // : UActorComponent
		constexpr auto _overlappedTrailPoints = 0xd0; // TArray<ATormentTrailPoint*>
		constexpr auto _isInTormentTrail = 0xe0; // FTagStateBool
		constexpr auto _isInTormentTrailEffect = 0x110; // FTagStateBool
		constexpr auto _inTormentTrailLastingEffectTime = 0x148; // FTunableStat
	}

	namespace n_UAssetMappingTable { // : UObject
		constexpr auto MappedAssets = 0x30; // TArray<FAssetMapping>
	}

	namespace n_UARSessionConfig { // : UDataAsset
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x38; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x39; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x3a; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x3b; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x3c; // bool
		constexpr auto bTrackSceneObjects = 0x3d; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x3e; // bool
		constexpr auto WorldAlignment = 0x3f; // EARWorldAlignment
		constexpr auto SessionType = 0x40; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x41; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x42; // bool
		constexpr auto bVerticalPlaneDetection = 0x43; // bool
		constexpr auto bEnableAutoFocus = 0x44; // bool
		constexpr auto LightEstimationMode = 0x45; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x46; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x47; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x48; // bool
		constexpr auto bResetCameraTracking = 0x49; // bool
		constexpr auto bResetTrackedObjects = 0x4a; // bool
		constexpr auto CandidateImages = 0x50; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x60; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x64; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x68; // TArray<char>
		constexpr auto CandidateObjects = 0x78; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x88; // FARVideoFormat
		constexpr auto FaceTrackingDirection = 0x94; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x95; // EARFaceTrackingUpdate
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
	}

	namespace n_UEndGameStateComponent { // : UActorComponent
		constexpr auto _isEndGameOver = 0xc4; // bool
		constexpr auto _worldTimeAtLastModification = 0xc8; // float
		constexpr auto _timeDilation = 0x110; // float
		constexpr auto _isTimerPaused = 0x114; // bool
		constexpr auto _normalTotalTimeElapsedAtLastTimeModification = 0x118; // float
		constexpr auto _endGameScenarioTrigger = 0x11c; // EEndGameScenarioTrigger
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto Format = 0xc8; // EPixelFormat
	}

	namespace n_UAddon_TormentMode_17 { // : USpawnEffectsOnAllSurvivorsBaseAddon
		constexpr auto _blindnessDuration = 0x2a8; // float
	}

	namespace n_UMovieSceneMarginSection { // : UMovieSceneSection
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UNiagaraSettings { // : UDeveloperSettings
		constexpr auto AdditionalParameterTypes = 0x48; // TArray<FSoftObjectPath>
		constexpr auto AdditionalPayloadTypes = 0x58; // TArray<FSoftObjectPath>
		constexpr auto AdditionalParameterEnums = 0x68; // TArray<FSoftObjectPath>
		constexpr auto DefaultEffectType = 0x78; // FSoftObjectPath
		constexpr auto QualityLevels = 0x98; // TArray<FText>
		constexpr auto DefaultEffectTypePtr = 0xa8; // UNiagaraEffectType*
	}

	namespace n_UDialogueVoice { // : UObject
		constexpr auto Gender = 0x30; // EGrammaticalGender
		constexpr auto Plurality = 0x31; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x34; // FGuid
	}

	namespace n_UAtlantaTooltipManager { // : UObject
		constexpr auto _activeTooltip = 0x30; // UBaseTooltipWidget*
		constexpr auto _closeTooltipWidget = 0x38; // UUMGCloseTooltipWidget*
	}

	namespace n_URadialIntMask { // : UFieldNodeInt
		constexpr auto Radius = 0xb8; // float
		constexpr auto Position = 0xbc; // FVector
		constexpr auto InteriorValue = 0xc8; // int32_t
		constexpr auto ExteriorValue = 0xcc; // int32_t
		constexpr auto SetMaskCondition = 0xd0; // ESetMaskConditionType
	}

	namespace n_USynthComponentMonoWaveTable { // : USynthComponent
		constexpr auto OnTableAltered = 0x6f0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x700; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x710; // UMonoWaveTableSynthPreset*
	}

	namespace n_UNiagaraDataInterfaceCamera { // : UNiagaraDataInterface
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
	}

	namespace n_UMeshRotationCorrectionSubAnimInstance { // : UBaseSurvivorAnimInstance
		constexpr auto _rotationInterpSpeed = 0x4f0; // float
		constexpr auto _isCrawling = 0x4f4; // bool
		constexpr auto _toSlopeRotation = 0x4f8; // FRotator
		constexpr auto _movementComponent = 0x508; // UCharacterMovementComponent*
	}

	namespace n_UCheckBoxWidgetStyle { // : USlateWidgetStyleContainerBase
		constexpr auto CheckBoxStyle = 0x38; // FCheckBoxStyle
	}

	namespace n_UBlackboardKeyType_String { // : UBlackboardKeyType
		constexpr auto StringValue = 0x38; // FString
	}

	namespace n_UBP_GrabCursor_C { // : UCoreCursor
		constexpr auto Image_18 = 0x268; // UImage*
	}

	namespace n_USCS_Node { // : UObject
		constexpr auto ComponentClass = 0x30; // UObject*
		constexpr auto ComponentTemplate = 0x38; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x40; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x90; // FName
		constexpr auto ParentComponentOrVariableName = 0x9c; // FName
		constexpr auto ParentComponentOwnerClassName = 0xa8; // FName
		constexpr auto bIsParentComponentNative = 0xb4; // bool
		constexpr auto ChildNodes = 0xb8; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xc8; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xd8; // FGuid
		constexpr auto InternalVariableName = 0xe8; // FName
	}

	namespace n_UTargetWasTargetedByEventRecentlyEvaluator { // : UQuestEventEvaluatorBase
		constexpr auto _gameEventsToTriggerFirst = 0xe8; // TArray<FGameplayTag>
	}

	namespace n_UConvertToPolygonsTool { // : USingleSelectionTool
		constexpr auto Settings = 0x90; // UConvertToPolygonsToolProperties*
		constexpr auto PreviewMesh = 0x98; // UPreviewMesh*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase { // : UNiagaraPreviewAxis
		constexpr auto Param = 0x30; // FName
		constexpr auto count = 0x3c; // int32_t
	}

	namespace n_UBTDecorator_Blackboard { // : UBTDecorator_BlackboardBase
		constexpr auto IntValue = 0xa0; // int32_t
		constexpr auto FloatValue = 0xa4; // float
		constexpr auto StringValue = 0xa8; // FString
		constexpr auto CachedDescription = 0xb8; // FString
		constexpr auto OperationType = 0xc8; // char
		constexpr auto NotifyObserver = 0xc9; // EBTBlackboardRestart
	}

	namespace n_ULinkedVomitInteraction { // : UChargeableInteractionDefinition
		constexpr auto _chargeComplete = 0x6f4; // bool
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_UAkRoomComponent { // : UAkGameObject
		constexpr auto bEnable = 0x230; // char : 1
		constexpr auto NextLowerPriorityComponent = 0x238; // UAkRoomComponent*
		constexpr auto Priority = 0x240; // float
		constexpr auto WallOcclusion = 0x244; // float
		constexpr auto AuxSendLevel = 0x248; // float
		constexpr auto AutoPost = 0x24c; // bool
	}

	namespace n_UCoreGameManualCategoryButton { // : UCoreButtonWidget
		constexpr auto Title = 0x398; // UDBDTextBlock*
		constexpr auto Description = 0x3a0; // UDBDTextBlock*
		constexpr auto Icon = 0x3a8; // UDBDImage*
		constexpr auto Background = 0x3b0; // UDBDImage*
		constexpr auto IconTexture = 0x3b8; // UTexture2D*
		constexpr auto BackgroundTexture = 0x3c0; // UTexture2D*
	}

	namespace n_ULoProChainsAddon { // : UItemAddon
		constexpr auto _breakPalletMontage = 0x298; // FAnimationMontageDescriptor
		constexpr auto _halfDamageDurationAfterBreakable = 0x2b8; // float
		constexpr auto _doesAddonIncludeBreakableWalls = 0x2bc; // bool
	}

	namespace n_UNiagaraDataInterfaceVector4Curve { // : UNiagaraDataInterfaceCurveBase
		constexpr auto XCurve = 0x60; // FRichCurve
		constexpr auto YCurve = 0xe0; // FRichCurve
		constexpr auto ZCurve = 0x160; // FRichCurve
		constexpr auto WCurve = 0x1e0; // FRichCurve
	}

	namespace n_UHorizontalBoxSlot { // : UPanelSlot
		constexpr auto Padding = 0x48; // FMargin
		constexpr auto Size = 0x58; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x60; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x61; // EVerticalAlignment
	}

	namespace n_ASpectatorBeaconHost { // : AOnlineBeaconHostObject
		constexpr auto State = 0x258; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x2c0; // bool
		constexpr auto SessionTimeoutSecs = 0x2c4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x2c8; // float
	}

	namespace n_UBaseOutlineRenderStrategy { // : UObject
		constexpr auto _batchCommands = 0x30; // TArray<UBatchMeshCommands*>
	}

	namespace n_UInterpTrackAkAudioEvent { // : UInterpTrackVectorBase
		constexpr auto Events = 0x98; // TArray<FAkAudioEventTrackKey>
		constexpr auto bContinueEventOnMatineeEnd = 0xa8; // char : 1
	}

}