namespace off {
	constexpr auto GNames = 0x627fe80;
	constexpr auto GObjects = 0x6298610;
	constexpr auto GWorld = 0x63d47c0;

	namespace n_UDisplaceMeshSineWaveProperties {
		constexpr auto SineWaveFrequency = 0x60; // float
		constexpr auto SineWavePhaseShift = 0x64; // float
		constexpr auto SineWaveDirection = 0x68; // FVector
	}

	namespace n_APhysicsVolume {
		constexpr auto TerminalVelocity = 0x348; // float
		constexpr auto Priority = 0x34c; // int32_t
		constexpr auto FluidFriction = 0x350; // float
		constexpr auto bWaterVolume = 0x354; // char : 1
		constexpr auto bPhysicsOnContact = 0x354; // char : 1
	}

	namespace n_ASGPlayerCameraManager {
		constexpr auto TPVCameraOffsetXInc = 0x2900; // FVector2D
		constexpr auto TPVCameraOffset = 0x2908; // FVector
		constexpr auto TPVCameraCollisionHeightScaler = 0x2914; // float
		constexpr auto CameraLagSpeed = 0x2918; // float
		constexpr auto bIsFollowProjectile = 0x2938; // char : 1
		constexpr auto FollowProjectileLocation = 0x2948; // FVector
		constexpr auto FollowProjectileRotation = 0x2954; // FRotator
		constexpr auto LastDeathLocation = 0x2960; // FVector
		constexpr auto LastDeathTime = 0x2970; // double
		constexpr auto ScopeMaterialInstance = 0x2978; // UMaterialInstance*
		constexpr auto ScopeRaidusNameX = 0x2980; // FName
		constexpr auto ScopeRaidusRangeX = 0x2988; // FVector2D
		constexpr auto ScopeRaidusNameY = 0x2990; // FName
		constexpr auto ScopeRaidusRangeY = 0x2998; // FVector2D
		constexpr auto ViewTargetCameras = 0x3c18; // TArray<UCameraComponent*>
		constexpr auto DelayRemovePostMaterial = 0x3c28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ScopeMaterialInstanceDynamic = 0x3c38; // UMaterialInstanceDynamic*
	}

	namespace n_UBasicReplicationGraph {
		constexpr auto GridNode = 0x4a8; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4b0; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantForConnectionList = 0x4b8; // TArray<FConnectionAlwaysRelevantNodePair>
		constexpr auto ActorsWithoutNetConnection = 0x4c8; // TArray<AActor*>
	}

	namespace n_UChildConnection {
		constexpr auto Parent = 0x1af0; // UNetConnection*
	}

	namespace n_UInterpTrackFloatAnimBPParam {
		constexpr auto AnimBlueprintClass = 0x90; // UObject*
		constexpr auto AnimClass = 0x98; // UAnimInstance*
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UNavigationRadioView {
		constexpr auto BodyNormalPos = 0x2f0; // FVector2D
		constexpr auto BodyNormalVisibility = 0x2f8; // ESlateVisibility
		constexpr auto BodyMainLandVersionPos = 0x2fc; // FVector2D
		constexpr auto BodyMainLandVersionVisibility = 0x304; // ESlateVisibility
		constexpr auto FaceNormalPos = 0x308; // FVector2D
		constexpr auto FaceNormalVisibility = 0x310; // ESlateVisibility
		constexpr auto FaceMainLandVersionPos = 0x314; // FVector2D
		constexpr auto FaceMainLandVersionVisibility = 0x31c; // ESlateVisibility
		constexpr auto DecorationNormalPos = 0x320; // FVector2D
		constexpr auto DecorationNormalVisibility = 0x328; // ESlateVisibility
		constexpr auto DecorationMainLandVersionPos = 0x32c; // FVector2D
		constexpr auto DecorationMainLandVersionVisibility = 0x334; // ESlateVisibility
		constexpr auto VoiceNormalPos = 0x338; // FVector2D
		constexpr auto VoiceNormalVisibility = 0x340; // ESlateVisibility
		constexpr auto VoiceMainLandVersionPos = 0x344; // FVector2D
		constexpr auto VoiceMainLandVersionVisibility = 0x34c; // ESlateVisibility
		constexpr auto RpbBody = 0x350; // UCameraRadioButton*
		constexpr auto RpbFace = 0x358; // UCameraRadioButton*
		constexpr auto RpbDecoration = 0x360; // UCameraRadioButton*
		constexpr auto RpbVoice = 0x368; // UCameraRadioButton*
	}

	namespace n_USoundCue {
		constexpr auto bPrimeOnLoad = 0x1b8; // char : 1
		constexpr auto FirstNode = 0x1c0; // USoundNode*
		constexpr auto VolumeMultiplier = 0x1c8; // float
		constexpr auto PitchMultiplier = 0x1cc; // float
		constexpr auto AttenuationOverrides = 0x1d0; // FSoundAttenuationSettings
		constexpr auto SubtitlePriority = 0x570; // float
		constexpr auto bOverrideAttenuation = 0x578; // char : 1
		constexpr auto bExcludeFromRandomNodeBranchCulling = 0x578; // char : 1
		constexpr auto CookedQualityIndex = 0x57c; // int32_t
		constexpr auto bHasPlayWhenSilent = 0x580; // char : 1
	}

	namespace n_UAlliancePowerGroupSlot {
		constexpr auto OfficialSealImage = 0x2d8; // UImage*
		constexpr auto OfficialCanvasPanel = 0x2e0; // UCanvasPanel*
		constexpr auto ChildOfficialCanvasPanel = 0x2e8; // UCanvasPanel*
		constexpr auto MainCanvasPanel = 0x2f0; // UCanvasPanel*
		constexpr auto AlliancePowerSlotClass = 0x2f8; // UAlliancePowerSlot*
		constexpr auto SlotWidth = 0x300; // float
		constexpr auto SlotDistance = 0x304; // float
		constexpr auto ChildAlliancePowerSlotClass = 0x308; // UAlliancePowerSlot*
		constexpr auto ChildSlotWidth = 0x310; // float
		constexpr auto ChildSlotDistance = 0x314; // float
		constexpr auto ChildSlotOffsetY = 0x318; // float
		constexpr auto RelationLineBgClass = 0x320; // UUserWidget*
		constexpr auto ParentVerticalLineLen = 0x328; // float
		constexpr auto ChildVerticalLineLen = 0x32c; // float
		constexpr auto RelationLineWidth = 0x330; // float
	}

	namespace n_UMaterialExpressionFontSampleParameter {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto ExpressionGUID = 0x58; // FGuid
		constexpr auto Group = 0x68; // FName
	}

	namespace n_UBorder {
		constexpr auto HorizontalAlignment = 0x120; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x121; // EVerticalAlignment
		constexpr auto bShowEffectWhenDisabled = 0x122; // char : 1
		constexpr auto ContentColorAndOpacity = 0x124; // FLinearColor
		constexpr auto ContentColorAndOpacityDelegate = 0x134; // FDelegate
		constexpr auto Padding = 0x144; // FMargin
		constexpr auto Background = 0x158; // FSlateBrush
		constexpr auto BackgroundDelegate = 0x1e0; // FDelegate
		constexpr auto BrushColor = 0x1f0; // FLinearColor
		constexpr auto BrushColorDelegate = 0x200; // FDelegate
		constexpr auto DesiredSizeScale = 0x210; // FVector2D
		constexpr auto bFlipForRightToLeftFlowDirection = 0x218; // bool
		constexpr auto OnMouseButtonDownEvent = 0x21c; // FDelegate
		constexpr auto OnMouseButtonUpEvent = 0x22c; // FDelegate
		constexpr auto OnMouseMoveEvent = 0x23c; // FDelegate
		constexpr auto OnMouseDoubleClickEvent = 0x24c; // FDelegate
	}

	namespace n_UVoxelMorphologyMeshesTool {
		constexpr auto MorphologyProperties = 0x108; // UVoxelMorphologyMeshesToolProperties*
	}

	namespace n_ULevelNameHUD {
		constexpr auto LevelBg = 0x260; // UImage*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto NameText = 0x270; // UTextBlock*
		constexpr auto GameHpBar = 0x278; // UGameHpBar*
		constexpr auto HPProgressHorizontal = 0x280; // UHorizontalBox*
		constexpr auto LevelTooHighImage = 0x288; // UImage*
		constexpr auto WeaponEffectCanvas = 0x290; // UCanvasPanel*
		constexpr auto WeaponEffect = 0x298; // UWidgetAnimation*
		constexpr auto WillDeadColor = 0x2a0; // FLinearColor
		constexpr auto NormalColor = 0x2b0; // FLinearColor
		constexpr auto BindCharacter = 0x2c0; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto GeneralSpecialImage = 0x2c8; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto FriendColor = 0x368; // FLinearColor
		constexpr auto EnemyColor = 0x378; // FLinearColor
		constexpr auto NeutralColor = 0x388; // FLinearColor
		constexpr auto SelfColor = 0x398; // FLinearColor
		constexpr auto UpName = 0x3a8; // UTextBlock*
		constexpr auto UpLevelCanvas = 0x3b0; // UCanvasPanel*
		constexpr auto HungerProgressBar = 0x3b8; // UProgressBar*
		constexpr auto WorkingCanvas = 0x3c0; // UCanvasPanel*
		constexpr auto WorkingProgressFrameRotateE = 0x3c8; // UImage*
		constexpr auto RemoteVoice = 0x3d0; // UCanvasPanel*
		constexpr auto RemoteVoiceProgress = 0x3d8; // UCanvasPanel*
		constexpr auto SexImage = 0x3e0; // UImage*
		constexpr auto GeneralImage = 0x3e8; // UImage*
		constexpr auto HorseCastratedTexture = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto HorseMaleTexture = 0x418; // TSoftObjectPtr<UTexture2D>
		constexpr auto HorseFemaleTexture = 0x440; // TSoftObjectPtr<UTexture2D>
		constexpr auto AggressionAggressiveTexture = 0x468; // TSoftObjectPtr<UTexture2D>
		constexpr auto AggressionNeutralTexture = 0x490; // TSoftObjectPtr<UTexture2D>
		constexpr auto AggressionPassiveTexture = 0x4b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto VigilancePanel = 0x4e0; // UCanvasPanel*
		constexpr auto VigilanceBG = 0x4e8; // UImage*
		constexpr auto VigilanceProgressBar = 0x4f0; // UProgressBar*
		constexpr auto VigilanceFullPanel = 0x4f8; // UCanvasPanel*
		constexpr auto VigilanceFullBG = 0x500; // UImage*
		constexpr auto VigilanceLevelText = 0x508; // UTextBlock*
		constexpr auto VigilanceLevelTooHighImage = 0x510; // UImage*
		constexpr auto VigilanceFG = 0x518; // UImage*
		constexpr auto VigilanceFullAnim = 0x520; // UWidgetAnimation*
		constexpr auto GeneralVigilanceBG = 0x528; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto GeneralVigilancePBBrush = 0x5c8; // FSlateBrush [0x4]
		constexpr auto GeneralVigilanceFullBG = 0x7e8; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto GeneralVigilanceFG = 0x888; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto HealthParentPanel = 0x928; // UCanvasPanel*
		constexpr auto HealthPanel = 0x930; // UCanvasPanel*
		constexpr auto HealthProgressBar = 0x938; // UProgressBar*
		constexpr auto RemoteVoiceTime = 0x940; // float
		constexpr auto bShowRemoteVoice = 0x988; // char : 1
		constexpr auto ShowDeltaTime = 0x98c; // float
	}

	namespace n_USGGameDataNPCTalkData {
		constexpr auto NPCTalkConfig = 0x28; // TMap<int32_t, FNPCTalkInfo>
		constexpr auto QuestionImage = 0x78; // TMap<int32_t, FSoftObjectPath>
	}

	namespace n_USGShopUnlockSignalReward {
		constexpr auto ShopUnlockType = 0x28; // EShopUnlockType
		constexpr auto ShopUnlockIndexArray = 0x30; // TArray<int32_t>
	}

	namespace n_ASGSphereProjectile {
		constexpr auto SphereProjectileCollisionComponent = 0x6e8; // USphereComponent*
	}

	namespace n_UNiagaraDataInterfaceCurlNoise {
		constexpr auto Seed = 0x38; // uint32_t
	}

	namespace n_APlayerCameraManager {
		constexpr auto PCOwner = 0x310; // APlayerController*
		constexpr auto TransformComponent = 0x318; // USceneComponent*
		constexpr auto DefaultFOV = 0x328; // float
		constexpr auto DefaultOrthoWidth = 0x330; // float
		constexpr auto DefaultAspectRatio = 0x338; // float
		constexpr auto CameraCache = 0x380; // FCameraCacheEntry
		constexpr auto LastFrameCameraCache = 0x980; // FCameraCacheEntry
		constexpr auto ViewTarget = 0xf80; // FTViewTarget
		constexpr auto PendingViewTarget = 0x1590; // FTViewTarget
		constexpr auto CameraCachePrivate = 0x1bd0; // FCameraCacheEntry
		constexpr auto LastFrameCameraCachePrivate = 0x21d0; // FCameraCacheEntry
		constexpr auto ModifierList = 0x27d0; // TArray<UCameraModifier*>
		constexpr auto DefaultModifiers = 0x27e0; // TArray<UCameraModifier*>
		constexpr auto FreeCamDistance = 0x27f0; // float
		constexpr auto FreeCamOffset = 0x27f4; // FVector
		constexpr auto ViewTargetOffset = 0x2800; // FVector
		constexpr auto OnAudioFadeChangeEvent = 0x2810; // FMulticastInlineDelegate
		constexpr auto CameraLensEffects = 0x2830; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto CachedCameraShakeMod = 0x2840; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x2848; // UCameraAnimInst* [0x8]
		constexpr auto PostProcessBlendCache = 0x2888; // TArray<FPostProcessSettings>
		constexpr auto ActiveAnims = 0x28a8; // TArray<UCameraAnimInst*>
		constexpr auto FreeAnims = 0x28b8; // TArray<UCameraAnimInst*>
		constexpr auto AnimCameraActor = 0x28c8; // ACameraActor*
		constexpr auto bIsOrthographic = 0x28d0; // char : 1
		constexpr auto bDefaultConstrainAspectRatio = 0x28d0; // char : 1
		constexpr auto bClientSimulatingViewTarget = 0x28d0; // char : 1
		constexpr auto bUseClientSideCameraUpdates = 0x28d0; // char : 1
		constexpr auto bGameCameraCutThisFrame = 0x28d1; // char : 1
		constexpr auto ViewPitchMin = 0x28d4; // float
		constexpr auto ViewPitchMax = 0x28d8; // float
		constexpr auto ViewYawMin = 0x28dc; // float
		constexpr auto ViewYawMax = 0x28e0; // float
		constexpr auto ViewRollMin = 0x28e4; // float
		constexpr auto ViewRollMax = 0x28e8; // float
		constexpr auto ServerUpdateCameraTimeout = 0x28f0; // float
	}

	namespace n_UTreeView {
		constexpr auto BP_OnGetItemChildren = 0x378; // FDelegate
		constexpr auto BP_OnItemExpansionChanged = 0x388; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceArrayFloat4 {
		constexpr auto FloatData = 0x50; // TArray<FVector4>
	}

	namespace n_UAttack_AnimNotifyState {
		constexpr auto Enum_AttackSocketType = 0x30; // EAttackSocketType
		constexpr auto AttackCoefficient = 0x34; // float
		constexpr auto bOpenAttackTrace = 0x38; // char : 1
		constexpr auto AttackTag = 0x40; // FString
		constexpr auto IsOffHandWeapon = 0x50; // char : 1
		constexpr auto IsKickAttack = 0x50; // char : 1
	}

	namespace n_ABP_RT_Quality_Parameters_C {
		constexpr auto UberGraphFrame = 0x320; // FPointerToUberGraphFrame
		constexpr auto RTX_PostProcess = 0x328; // UPostProcessComponent*
		constexpr auto DefaultSceneRoot = 0x330; // USceneComponent*
		constexpr auto Enable Reflection = 0x338; // FString
		constexpr auto Enable AO = 0x348; // FString
		constexpr auto Enable Shadow = 0x358; // FString
		constexpr auto Enable Translucensy = 0x368; // FString
		constexpr auto Enable Translucency Height Fog = 0x378; // FString
		constexpr auto Enable Translucency Shadows = 0x388; // FString
		constexpr auto Enable Refraction = 0x398; // FString
		constexpr auto Translucency Max Roughness = 0x3a8; // FString
		constexpr auto Max Refraction Rays = 0x3b8; // FString
		constexpr auto Evaluate Materials in Shadow = 0x3c8; // FString
		constexpr auto Shadow Enable Two Sided Geometry = 0x3d8; // FString
		constexpr auto Enable Height Fog in Reflection = 0x3e8; // FString
		constexpr auto Reflection Sort Materials = 0x3f8; // FString
		constexpr auto Enable Reflection Shadow = 0x408; // FString
		constexpr auto Reflection Max Roughness = 0x418; // FString
		constexpr auto DebugPreview = 0x428; // bool
		constexpr auto Use Texture LOD = 0x430; // FString
		constexpr auto Reflection Screen Percentage = 0x440; // FString
		constexpr auto Box Reletive Scale = 0x450; // FVector
		constexpr auto Hidden in Game = 0x45c; // bool
		constexpr auto Normal Bias = 0x460; // FString
		constexpr auto Debug Force Opaque = 0x470; // FString
		constexpr auto Debug Force Full Build = 0x480; // FString
		constexpr auto Debug Disable Triangle Cull = 0x490; // FString
		constexpr auto Debug Force Build Mode = 0x4a0; // FString
		constexpr auto Reflection Max Ray Distance = 0x4b0; // FString
		constexpr auto Reflection Min Ray Distance = 0x4c0; // FString
		constexpr auto Reflection Max Bounces = 0x4d0; // FString
		constexpr auto Reflection SPP = 0x4e0; // FString
		constexpr auto Shadow SPP = 0x4f0; // FString
		constexpr auto Enable Reflection Denoiser = 0x500; // FString
		constexpr auto Enable Shadow Denoiser = 0x510; // FString
		constexpr auto Enum_RT_QualitySwitch = 0x520; // Enum_RT_Quality_Preset
		constexpr auto GI type = 0x528; // FString
		constexpr auto Enable GI Denoiser = 0x538; // FString
		constexpr auto GI EvalSkyLight = 0x548; // FString
		constexpr auto GI MaxBounce = 0x558; // FString
		constexpr auto GI MaxRayDistance = 0x568; // FString
		constexpr auto GI SPP = 0x578; // FString
		constexpr auto GI Screen Percentage = 0x588; // FString
		constexpr auto GI UseRussianRoulette  = 0x598; // FString
		constexpr auto Enable RT SkyLight = 0x5a8; // FString
		constexpr auto Enable SkyLight Denoiser = 0x5b8; // FString
		constexpr auto SkyLight Enable Two Sided Geomtry = 0x5c8; // FString
		constexpr auto SkyLight MaxRay Distance = 0x5d8; // FString
		constexpr auto SkyLight SPP = 0x5e8; // FString
		constexpr auto Reflection Enable Materials = 0x5f8; // FString
		constexpr auto Custom_Preset = 0x610; // FVeryHigh
		constexpr auto Reflection+Shadow+AO+Translucency+Caustics = 0x19a0; // FHigh
		constexpr auto Reflection+Shadow+AO+Translucency+GI = 0x2d30; // FMedium
		constexpr auto Reflection+Shadow+AO+Translucency = 0x40c0; // FFilm
		constexpr auto Reflection+Shadow+AO = 0x5450; // FLow
		constexpr auto Reflection Only = 0x67e0; // FXbox
		constexpr auto Shadow+AO = 0x7b70; // FPS5
		constexpr auto Disable = 0x8f00; // FDisable
		constexpr auto RT Enable Reflection Capture  = 0xa290; // FString
		constexpr auto Enable Shader Cache = 0xa2a0; // FString
		constexpr auto AO Enable Material = 0xa2b0; // FString
		constexpr auto AO Enable Two Sided Geometry = 0xa2c0; // FString
		constexpr auto PSO Cache Size = 0xa2d0; // FString
		constexpr auto Enable Landscape Detect Texture Streaming = 0xa2e0; // FString
		constexpr auto Enable Landscape LOD UpdateEveryFrame = 0xa2f0; // FString
		constexpr auto Enable Instanced Static Mesh = 0xa300; // FString
		constexpr auto Enable Instanced Static Meshes Culling = 0xa310; // FString
		constexpr auto Instanced Static Meshes Culling Radius = 0xa320; // FString
		constexpr auto Shadow Max Batch Size = 0xa330; // FString
		constexpr auto GI Diffuse Threshold = 0xa340; // FString
		constexpr auto Shadow Denoiser Max Batch Size = 0xa350; // FString
		constexpr auto Enable Landscape In RT = 0xa360; // FString
		constexpr auto RTX Switch = 0xa370; // FString
		constexpr auto Enable Reflection Test Roughness = 0xa380; // FString
		constexpr auto UseShaderWPO = 0xa390; // float
		constexpr auto Reflection Sky Light Contribution = 0xa398; // FString
		constexpr auto GI Sort Materials = 0xa3a8; // FString
		constexpr auto GI Enable Two Sided Geometry = 0xa3b8; // FString
		constexpr auto Final Gather Distance = 0xa3c8; // FString
		constexpr auto Enable Hybrid Translucency = 0xa3d8; // FString
		constexpr auto Hybrid Translucency DepthThreshold  = 0xa3e8; // FString
		constexpr auto Hybrid Translucency Layers = 0xa3f8; // FString
		constexpr auto Hybrid Translucency Support = 0xa408; // FString
		constexpr auto Lighting Max Lights = 0xa418; // FString
		constexpr auto Lighting Max Shadow Lights = 0xa428; // FString
		constexpr auto Lighting Miss Shader = 0xa438; // FString
		constexpr auto Shadow Max Lights = 0xa448; // FString
		constexpr auto Shadow Max Denoised Lights  = 0xa458; // FString
		constexpr auto Translucency Mask  = 0xa468; // FString
		constexpr auto SkyLight Enable Materials = 0xa478; // FString
		constexpr auto  Half Res Hybrid Translucency = 0xa488; // FString
		constexpr auto Shadows Support Translucency = 0xa498; // FString
		constexpr auto Support Light Function = 0xa4a8; // FString
		constexpr auto Sharp Shadow Fall Back = 0xa4b8; // FString
		constexpr auto Light Channel Support = 0xa4c8; // FString
		constexpr auto Translucency Roughness Multiplier  = 0xa4d8; // FString
		constexpr auto Reflections Roughness Multiplier  = 0xa4e8; // FString
		constexpr auto Hybrid Reflection = 0xa4f8; // FString
		constexpr auto Per-Light Shadow Casting = 0xa508; // FString
		constexpr auto ParallelMeshBatchSize = 0xa518; // FString
		constexpr auto BuildRayTracingMeshForCaustics = 0xa528; // FString
		constexpr auto Exclude Translucents From Shadows  = 0xa538; // FString
		constexpr auto Auto Instance  = 0xa548; // FString
		constexpr auto Enable SSGI = 0xa558; // FString
		constexpr auto Half Res SSGI = 0xa568; // FString
		constexpr auto SSGI Quality = 0xa578; // FString
		constexpr auto Parallel Mesh Batch Setup  = 0xa588; // FString
		constexpr auto Batch Materials  = 0xa598; // FString
		constexpr auto Enable Mesh Caustics = 0xa5a8; // FString
		constexpr auto Water Caustics Type = 0xa5b8; // FString
		constexpr auto Water Caustics Refractive Intensity  = 0xa5c8; // FString
		constexpr auto Water Caustics Reflective Intensity  = 0xa5d8; // FString
		constexpr auto Water Caustics Fresnel Base Reflect Fraction  = 0xa5e8; // FString
		constexpr auto Water Caustics Map Size X   = 0xa5f8; // FString
		constexpr auto Water Caustics Map Size Y = 0xa608; // FString
		constexpr auto Water Caustics Num Denoise Passes  = 0xa618; // FString
		constexpr auto Water Caustics Min Reflection Ray Distance  = 0xa628; // FString
		constexpr auto Water Caustics Max Reflection Ray Distance  = 0xa638; // FString
		constexpr auto Water Caustics Min Refraction Ray Distance  = 0xa648; // FString
		constexpr auto Water Caustics Max Refraction Ray Distance  = 0xa658; // FString
		constexpr auto Water Caustics Rect Light Temporal Weight  = 0xa668; // FString
		constexpr auto Mesh Caustics Resolution  = 0xa678; // FString
		constexpr auto Mesh Caustics Intensity  = 0xa688; // FString
		constexpr auto Water Caustics Buffer Scale  = 0xa698; // FString
		constexpr auto Mesh Caustics Buffer Scale  = 0xa6a8; // FString
		constexpr auto Mesh Caustics Temporal Strength  = 0xa6b8; // FString
		constexpr auto Mesh Caustics Jitter  = 0xa6c8; // FString
		constexpr auto Mesh Caustics Enable Dispersion  = 0xa6d8; // FString
		constexpr auto Mesh Caustics Translucent Reflection Mode = 0xa6e8; // FString
		constexpr auto Mesh Caustics Max Trace Depth  = 0xa6f8; // FString
		constexpr auto Mesh Caustics Adaptive Photon Size  = 0xa708; // FString
		constexpr auto Mesh Caustics Enable Temporal Filter  = 0xa718; // FString
		constexpr auto Mesh Caustics Adaptive Smooth  = 0xa728; // FString
		constexpr auto Mesh Caustics Adaptive Update Speed  = 0xa738; // FString
		constexpr auto Mesh Caustics Adaptive Variance Gain  = 0xa748; // FString
		constexpr auto Mesh Caustics Fixed Light  = 0xa758; // FString
		constexpr auto Mesh Caustics Max Intensity  = 0xa768; // FString
		constexpr auto Translucency Enable Absorption  = 0xa778; // FString
		constexpr auto Mesh Caustics Soft Caustics Sample  = 0xa788; // FString
		constexpr auto Water Caustics Refract Back Face Culling Threshold  = 0xa798; // FString
		constexpr auto Water Caustics Reflect Back Face Culling Threshold  = 0xa7a8; // FString
		constexpr auto Water Caustics Map Cascades  = 0xa7b8; // FString
		constexpr auto Water Caustics Map Force Level  = 0xa7c8; // FString
		constexpr auto Water Caustics Map Cascade Scale  = 0xa7d8; // FString
		constexpr auto Water Caustics Show Photon  = 0xa7e8; // FString
		constexpr auto Water Caustics Photon Scale = 0xa7f8; // FString
		constexpr auto Mesh Caustics Enable Advanced Soft Caustics  = 0xa808; // FString
		constexpr auto Mesh Caustics Mid Cull Color Threshold  = 0xa818; // FString
		constexpr auto Mesh Caustics Final Cull Color Threshold  = 0xa828; // FString
		constexpr auto Water Caustics Cascade Sampling Offset X  = 0xa838; // FString
		constexpr auto Water Caustics Cascade Sampling Offset Y = 0xa848; // FString
		constexpr auto Water Caustics Cascade Sampling UVScale X  = 0xa858; // FString
		constexpr auto Water Caustics Cascade Sampling UVScale Y  = 0xa868; // FString
		constexpr auto Sharpness = 0xa878; // FString
		constexpr auto Binary Search Order = 0xa888; // FString
		constexpr auto Quality = 0xa898; // FString
		constexpr auto DLSS Enable = 0xa8a8; // FString
		constexpr auto Reflections Enable TAA Before DLSS  = 0xa8b8; // FString
		constexpr auto Translucency Enable TAA Before DLSS  = 0xa8c8; // FString
		constexpr auto GI Max Light Count  = 0xa8d8; // FString
		constexpr auto AO SPP = 0xa8e8; // FString
		constexpr auto GI Denoiser Type = 0xa8f8; // FString
		constexpr auto GI Apply AO = 0xa908; // FString
		constexpr auto GI Denoiser Color Clamp = 0xa918; // FString
		constexpr auto GI Denoiser Normal Tolerance = 0xa928; // FString
		constexpr auto Spatial Normal Tolerance = 0xa938; // FString
		constexpr auto Enable RTX Parameter Override based on DLSS status = 0xa948; // bool
		constexpr auto Enable Override From UI = 0xa949; // bool
		constexpr auto Particle Reapply TAA after DLSS = 0xa950; // FString
		constexpr auto Refraction Background Sample Fallback  = 0xa960; // FString
		constexpr auto GI Denoise History Length = 0xa970; // FString
		constexpr auto Spatial Filter Iteration = 0xa980; // FString
		constexpr auto DIstance Field AO = 0xa990; // FString
		constexpr auto DIstance Field GI = 0xa9a0; // FString
		constexpr auto Distance Field Shadow = 0xa9b0; // FString
		constexpr auto Distance Fields = 0xa9c0; // FString
		constexpr auto Translucency Ignore Backface Opacity = 0xa9d0; // FString
		constexpr auto Use Scene Light Dir = 0xa9e0; // FString
		constexpr auto Enable Volumetric Shadow = 0xa9f0; // FString
		constexpr auto Absorption Force Shading On Opaque Objects = 0xaa00; // FString
		constexpr auto Mesh Caustics Max Ray Distance = 0xaa10; // FString
		constexpr auto Mesh Caustics Temporal Color Tolerance = 0xaa20; // FString
		constexpr auto GI Diffuse Boost = 0xaa30; // FString
		constexpr auto Reflected Translucency Mode = 0xaa40; // FString
		constexpr auto Reflected Translucency Max Bounces = 0xaa50; // FString
		constexpr auto Reflected Translucency Transmission Threshold = 0xaa60; // FString
		constexpr auto Half Res Refraction = 0xaa70; // FString
		constexpr auto AO Denoiser History Convolution Sample Count  = 0xaa80; // FString
		constexpr auto Shadow PrioritizeDirectional = 0xaa90; // FString
		constexpr auto Frames Until Feature Desturction = 0xaaa0; // FString
		constexpr auto Dilate Motion Vectors = 0xaab0; // FString
		constexpr auto Reflections TAA = 0xaac0; // FString
		constexpr auto Water Reflections TAA = 0xaad0; // FString
		constexpr auto Instanced Static Meshes Culling Angle = 0xaae0; // FString
		constexpr auto RTX Post Process Settings = 0xaaf0; // FPostProcessSettings
		constexpr auto RTX Post Process Weight = 0xb050; // float
		constexpr auto Enable Translucency in Reflection = 0xb058; // FString
		constexpr auto Unbound = 0xb068; // bool
		constexpr auto RTX Post Process Priority = 0xb06c; // float
		constexpr auto FinalGather UseReservoirResampling = 0xb070; // FString
		constexpr auto GI Metalic Support = 0xb080; // FString
		constexpr auto GI Denoiser Spatial Filter Type = 0xb090; // FString
		constexpr auto GI Denoiser Use SH = 0xb0a0; // FString
		constexpr auto GI Denoiser SH Sharpness = 0xb0b0; // FString
		constexpr auto ATrous Depth Tolerance  = 0xb0c0; // FString
		constexpr auto Final Gather SkyLight Intensity  = 0xb0d0; // FString
		constexpr auto Final Gather SkyLight IndirectMultiplier  = 0xb0e0; // FString
		constexpr auto Instanced Static Meshes Evaluate WPO = 0xb0f0; // FString
		constexpr auto Instanced Static Meshes Simulation Count = 0xb100; // FString
		constexpr auto Shadow UseBiasForSkipWPOEval = 0xb110; // FString
		constexpr auto Shadow MaxBiasForInexactGeometry = 0xb120; // FString
		constexpr auto Enable Ray Tracing Culling = 0xb130; // FString
		constexpr auto Ray Tracing Culling Angle = 0xb140; // FString
		constexpr auto Ray Tracing Culling Radius = 0xb150; // FString
		constexpr auto Sky Light Screen Percentage = 0xb160; // FString
		constexpr auto FinalGather Iterations  = 0xb170; // FString
		constexpr auto FinalGather Filter Width = 0xb180; // FString
		constexpr auto GI Firefly Suppression = 0xb190; // FString
		constexpr auto Reflections EnableTwoSidedGeometry  = 0xb1a0; // FString
		constexpr auto GeometryCache = 0xb1b0; // FString
		constexpr auto StaticMeshes = 0xb1c0; // FString
		constexpr auto StaticMeshes Enable WPO  = 0xb1d0; // FString
		constexpr auto StaticMeshes Enable WPO Culling = 0xb1e0; // FString
		constexpr auto StaticMeshes WPO Culling Radius  = 0xb1f0; // FString
		constexpr auto SkeletalMeshes  = 0xb200; // FString
		constexpr auto ProceduralMeshes  = 0xb210; // FString
		constexpr auto NiagaraMeshes = 0xb220; // FString
		constexpr auto NiagaraRibbons = 0xb230; // FString
		constexpr auto NiagaraSprites = 0xb240; // FString
		constexpr auto GI Directional Light = 0xb250; // FString
		constexpr auto GI Point Light = 0xb260; // FString
		constexpr auto GI Rect Light = 0xb270; // FString
		constexpr auto GI Sky Light = 0xb280; // FString
		constexpr auto GI Spot Light = 0xb290; // FString
		constexpr auto Shadows Directional = 0xb2a0; // FString
		constexpr auto Shadows Point = 0xb2b0; // FString
		constexpr auto Shadows Rect = 0xb2c0; // FString
		constexpr auto Shadows Spot = 0xb2d0; // FString
		constexpr auto AO UseBiasForSkipWPOEval  = 0xb2e0; // FString
		constexpr auto AO MaxBiasForInexactGeometry  = 0xb2f0; // FString
		constexpr auto GI Reservoir Update Interval  = 0xb300; // FString
		constexpr auto Final Gather Normal From Depth = 0xb310; // FString
		constexpr auto Final Gather Max Reuse Weight = 0xb320; // FString
		constexpr auto Final Gather Aggressive Reservoir Reuse  = 0xb330; // FString
		constexpr auto GIDenoise ATrous Filter Width = 0xb340; // FString
		constexpr auto WaterCaustics ReflectiveNormalScale  = 0xb350; // FString
		constexpr auto WaterCaustics RefractiveNormalScale  = 0xb360; // FString
		constexpr auto SGGameUserSettings = 0xb370; // USGGameUserSettings*
		constexpr auto CachebForceClose = 0xb378; // bool
	}

	namespace n_UStaticMeshComponent {
		constexpr auto ForcedLodModel = 0x4b0; // int32_t
		constexpr auto PreviousLODLevel = 0x4b4; // int32_t
		constexpr auto MinLOD = 0x4b8; // int32_t
		constexpr auto SubDivisionStepSize = 0x4bc; // int32_t
		constexpr auto StaticMesh = 0x4c0; // UStaticMesh*
		constexpr auto WireframeColorOverride = 0x4c8; // FColor
		constexpr auto bEvaluateWorldPositionOffset = 0x4cc; // char : 1
		constexpr auto bOverrideWireframeColor = 0x4cc; // char : 1
		constexpr auto bOverrideMinLod = 0x4cc; // char : 1
		constexpr auto bOverrideNavigationExport = 0x4cc; // char : 1
		constexpr auto bForceNavigationObstacle = 0x4cc; // char : 1
		constexpr auto bDisallowMeshPaintPerInstance = 0x4cc; // char : 1
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x4cc; // char : 1
		constexpr auto bOverrideLightMapRes = 0x4cc; // char : 1
		constexpr auto bCastDistanceFieldIndirectShadow = 0x4cd; // char : 1
		constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x4cd; // char : 1
		constexpr auto bUseSubDivisions = 0x4cd; // char : 1
		constexpr auto bUseDefaultCollision = 0x4cd; // char : 1
		constexpr auto bReverseCulling = 0x4cd; // char : 1
		constexpr auto OverriddenLightMapRes = 0x4d0; // int32_t
		constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x4d4; // float
		constexpr auto DistanceFieldSelfShadowBias = 0x4d8; // float
		constexpr auto StreamingDistanceMultiplier = 0x4dc; // float
		constexpr auto LODData = 0x4e0; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto StreamingTextureData = 0x4f0; // TArray<FStreamingTextureBuildInfo>
		constexpr auto LightmassSettings = 0x500; // FLightmassPrimitiveSettings
	}

	namespace n_UAudioImpulseResponse {
		constexpr auto ImpulseResponse = 0x28; // TArray<float>
		constexpr auto NumChannels = 0x38; // int32_t
		constexpr auto SampleRate = 0x3c; // int32_t
		constexpr auto NormalizationVolumeDb = 0x40; // float
		constexpr auto bTrueStereo = 0x44; // bool
		constexpr auto IRData = 0x48; // TArray<float>
	}

	namespace n_UServerRegisterHandler {
		constexpr auto BattleInfoArray = 0x30; // TArray<FStuBattleInfo>
	}

	namespace n_UVehicleEquipPanel {
		constexpr auto bOverrideShowPosition = 0x260; // char : 1
		constexpr auto bShowLeft = 0x260; // char : 1
		constexpr auto PreviewWidgetOverrideConfigs = 0x268; // TMap<EVehicleType, FVehiclePreviewWidgetOverride>
		constexpr auto CastratedTexture = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexFemaleTexture = 0x2e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexMaleTexture = 0x308; // TSoftObjectPtr<UTexture2D>
		constexpr auto QualityCorrectionToQualityType = 0x330; // TMap<EGeneralsQualityType, float>
		constexpr auto VehicleQualityTexture = 0x380; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto VehicleQualityColor = 0x470; // FLinearColor [0x6]
		constexpr auto RealNamePerkPositionOriginY = 0x4d0; // float
		constexpr auto InventorySlotHeight = 0x4d4; // float
		constexpr auto AllCanvasPanel = 0x4d8; // UCanvasPanel*
		constexpr auto VehicleQualityBGBorder = 0x4e0; // UBorder*
		constexpr auto VehicleQualityImage = 0x4e8; // UImage*
		constexpr auto VehicleRealNameImage = 0x4f0; // UImage*
		constexpr auto RealNameComboBox = 0x4f8; // UComboBoxString*
		constexpr auto VehicleName = 0x500; // UTextBlock*
		constexpr auto VehicleSexImg = 0x508; // UImage*
		constexpr auto ChangeNameButton = 0x510; // UButton*
		constexpr auto VehicleLevel = 0x518; // UTextBlock*
		constexpr auto VehicleExp = 0x520; // UTextBlock*
		constexpr auto ExpProgressPanel = 0x528; // UCanvasPanel*
		constexpr auto VehicleExpProgress = 0x530; // UProgressBar*
		constexpr auto VehicleVariation = 0x538; // UTextBlock*
		constexpr auto EquipPanel = 0x540; // UN_EquipPanel*
		constexpr auto RealNamePerkPanel = 0x548; // UCanvasPanel*
		constexpr auto EquipRealNamePerkSlot = 0x550; // UVehiclePerkSlot*
		constexpr auto VehicleACPanel = 0x558; // UVehicleACPanel*
		constexpr auto CastratedSizeBox = 0x560; // USizeBox*
		constexpr auto bIsInit = 0x568; // char : 1
		constexpr auto ParentUI = 0x570; // USGUI*
		constexpr auto bEquipSlotAllowDrag = 0x578; // char : 1
		constexpr auto BindVehicleCharacter = 0x57c; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
	}

	namespace n_UWBP_Notice_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto CircularThrobber = 0x2e8; // UCircularThrobber*
		constexpr auto Image_bg1 = 0x2f0; // UImage*
		constexpr auto Image_OutBg = 0x2f8; // UImage*
		constexpr auto VerticalBoxList = 0x300; // UVerticalBox*
		constexpr auto WebBrowserNotice = 0x308; // UWebBrowser*
		constexpr auto BaseURL = 0x310; // FString
		constexpr auto BaseUrl-en = 0x320; // FString
	}

	namespace n_UItemAuctionDealDoneSlot {
		constexpr auto ButtonSelected = 0x2d8; // UButton*
		constexpr auto TextBlock_Name = 0x2e0; // UTextBlock*
		constexpr auto TextBlock_Count = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_Price = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_TotalPrice = 0x2f8; // UTextBlock*
		constexpr auto RootSGUI = 0x300; // UUI_GuildAuctionHouse*
	}

	namespace n_UMaterialExpressionBumpOffset {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Height = 0x54; // FExpressionInput
		constexpr auto HeightRatioInput = 0x68; // FExpressionInput
		constexpr auto HeightRatio = 0x7c; // float
		constexpr auto ReferencePlane = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
	}

	namespace n_UButtonWidgetStyle {
		constexpr auto ButtonStyle = 0x30; // FButtonStyle
	}

	namespace n_UMaterialExpressionPerInstanceCustomData {
		constexpr auto DefaultValue = 0x40; // FExpressionInput
		constexpr auto ConstDefaultValue = 0x54; // float
		constexpr auto DataIndex = 0x58; // uint32_t
	}

	namespace n_UEnvQueryGenerator_Composite {
		constexpr auto Generators = 0x50; // TArray<UEnvQueryGenerator*>
		constexpr auto bAllowDifferentItemTypes = 0x60; // char : 1
		constexpr auto bHasMatchingItemType = 0x60; // char : 1
		constexpr auto ForcedItemType = 0x68; // UEnvQueryItemType*
	}

	namespace n_UMoveBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
	}

	namespace n_URuntimeVirtualTextureComponent {
		constexpr auto BoundsAlignActor = 0x208; // TSoftObjectPtr<AActor>
		constexpr auto bSetBoundsButton = 0x230; // bool
		constexpr auto bSnapBoundsToLandscape = 0x231; // bool
		constexpr auto VirtualTexture = 0x238; // URuntimeVirtualTexture*
		constexpr auto bEnableScalability = 0x240; // bool
		constexpr auto ScalabilityGroup = 0x244; // uint32_t
		constexpr auto bHidePrimitives = 0x248; // bool
		constexpr auto StreamingTexture = 0x250; // UVirtualTextureBuilder*
		constexpr auto StreamLowMips = 0x258; // int32_t
		constexpr auto bBuildStreamingMipsButton = 0x25c; // bool
		constexpr auto bEnableCompressCrunch = 0x25d; // bool
		constexpr auto bUseStreamingLowMipsInEditor = 0x25e; // bool
		constexpr auto bBuildDebugStreamingMips = 0x25f; // bool
	}

	namespace n_UParticleModuleVelocityInheritParent {
		constexpr auto Scale = 0x38; // FRawDistributionVector
	}

	namespace n_APrefabActor {
		constexpr auto PrefabComponent = 0x310; // UPrefabComponent*
	}

	namespace n_UUI_SeasonPassport {
		constexpr auto PassportLevelImage = 0x260; // UImage*
		constexpr auto PassportLevelText = 0x268; // UTextBlock*
		constexpr auto EXPProgressBar = 0x270; // UProgressBar*
		constexpr auto PassportExpNumText = 0x278; // UTextBlock*
		constexpr auto HorizontalBoxParent = 0x280; // UHorizontalBox*
		constexpr auto ButtonLeft = 0x288; // UButton*
		constexpr auto ButtonRight = 0x290; // UButton*
		constexpr auto PassportFlagLock = 0x298; // UImage*
		constexpr auto OwnerSGPC = 0x2a0; // TWeakObjectPtr<ASGPlayerController>
	}

	namespace n_UButton {
		constexpr auto Style = 0x120; // USlateWidgetStyleAsset*
		constexpr auto WidgetStyle = 0x128; // FButtonStyle
		constexpr auto ColorAndOpacity = 0x3a0; // FLinearColor
		constexpr auto BackgroundColor = 0x3b0; // FLinearColor
		constexpr auto ClickMethod = 0x3c0; // EButtonClickMethod
		constexpr auto TouchMethod = 0x3c1; // EButtonTouchMethod
		constexpr auto PressMethod = 0x3c2; // EButtonPressMethod
		constexpr auto IsFocusable = 0x3c3; // bool
		constexpr auto OnClicked = 0x3c8; // FMulticastInlineDelegate
		constexpr auto OnPressed = 0x3d8; // FMulticastInlineDelegate
		constexpr auto OnReleased = 0x3e8; // FMulticastInlineDelegate
		constexpr auto OnHovered = 0x3f8; // FMulticastInlineDelegate
		constexpr auto OnUnhovered = 0x408; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLight_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UHoleFillOperatorFactory {
		constexpr auto FillTool = 0x30; // UHoleFillTool*
	}

	namespace n_UStreamMediaSource {
		constexpr auto StreamUrl = 0x88; // FString
	}

	namespace n_UUI_VehicleCamp {
		constexpr auto GenealogyUITemplate = 0x2d8; // UUI_VehicleGenealogy*
		constexpr auto VehicleEquipPanel = 0x2e0; // UVehicleEquipPanel*
		constexpr auto ShowButtonPanelBtn = 0x2e8; // UOptionButton*
		constexpr auto ButtonPanel = 0x2f0; // UCanvasPanel*
		constexpr auto CastrateButton = 0x2f8; // UButton*
		constexpr auto ReleaseButton = 0x300; // UButton*
		constexpr auto KillButton = 0x308; // UButton*
		constexpr auto GenealogyButton = 0x310; // UButton*
		constexpr auto VehicleEquipPanelCanvas = 0x318; // UCanvasPanel*
		constexpr auto InventoryPanel = 0x320; // UN_InventoryPanel*
		constexpr auto VehicleCampPanel = 0x328; // UVehicleCampPanel*
		constexpr auto DetailPanelCanvas = 0x330; // UCanvasPanel*
		constexpr auto AttributeButton = 0x338; // UOptionButton*
		constexpr auto PerkButton = 0x340; // UOptionButton*
		constexpr auto AttributePanel = 0x348; // UVehicleAttributePanel*
		constexpr auto PerkPanel = 0x350; // UUI_VehiclePerk*
		constexpr auto ParentUI = 0x358; // UUI_NPCInfo*
		constexpr auto BindVehicleCampSlot = 0x360; // UVehicleCampSlot*
		constexpr auto BindVehicleCharacter = 0x368; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
		constexpr auto BindVehicleChunkGuid = 0x370; // FGuid
		constexpr auto PressedSlot = 0x380; // TWeakObjectPtr<UN_InventorySlot>
	}

	namespace n_USourceEffectFilterPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectFilterSettings
	}

	namespace n_UVoxelMorphologyMeshesToolProperties {
		constexpr auto Operation = 0x60; // EMorphologyOperation
		constexpr auto Distance = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_UBTTask_FinishWithResult {
		constexpr auto Result = 0x70; // EBTNodeResult
	}

	namespace n_UGameInstance {
		constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
		constexpr auto OnlineSession = 0x48; // UOnlineSession*
		constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
		constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UFont {
		constexpr auto FontCacheType = 0x30; // EFontCacheType
		constexpr auto Characters = 0x38; // TArray<FFontCharacter>
		constexpr auto Textures = 0x48; // TArray<UTexture2D*>
		constexpr auto IsRemapped = 0x58; // int32_t
		constexpr auto EmScale = 0x5c; // float
		constexpr auto Ascent = 0x60; // float
		constexpr auto Descent = 0x64; // float
		constexpr auto Leading = 0x68; // float
		constexpr auto Kerning = 0x6c; // int32_t
		constexpr auto ImportOptions = 0x70; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x120; // int32_t
		constexpr auto MaxCharHeight = 0x128; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x138; // float
		constexpr auto LegacyFontSize = 0x13c; // int32_t
		constexpr auto LegacyFontName = 0x140; // FName
		constexpr auto CompositeFont = 0x148; // FCompositeFont
	}

	namespace n_UMaterialExpressionDynamicParameter {
		constexpr auto ParamNames = 0x40; // TArray<FString>
		constexpr auto DefaultValue = 0x50; // FLinearColor
		constexpr auto ParameterIndex = 0x60; // uint32_t
	}

	namespace n_UApplicationLifecycleComponent {
		constexpr auto ApplicationWillDeactivateDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto OnTemperatureChangeDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnLowPowerModeDelegate = 0x140; // FMulticastInlineDelegate
	}

	namespace n_UJoinSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleAttractorPointGravity {
		constexpr auto position = 0x30; // FVector
		constexpr auto Radius = 0x3c; // float
		constexpr auto Strength = 0x40; // UDistributionFloat*
		constexpr auto StrengthRaw = 0x48; // FRawDistributionFloat
	}

	namespace n_AEmitterCameraLensEffectBase {
		constexpr auto PS_CameraEffect = 0x360; // UParticleSystem*
		constexpr auto PS_CameraEffectNonExtremeContent = 0x368; // UParticleSystem*
		constexpr auto BaseCamera = 0x370; // APlayerCameraManager*
		constexpr auto RelativeTransform = 0x380; // FTransform
		constexpr auto BaseFOV = 0x3b0; // float
		constexpr auto bAllowMultipleInstances = 0x3b4; // char : 1
		constexpr auto bResetWhenRetriggered = 0x3b4; // char : 1
		constexpr auto EmittersToTreatAsSame = 0x3b8; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto DistFromCamera = 0x3c8; // float
	}

	namespace n_UInterpTrackFloatParticleParam {
		constexpr auto ParamName = 0x90; // FName
	}

	namespace n_UDragDropOperation {
		constexpr auto Tag = 0x28; // FString
		constexpr auto Payload = 0x38; // UObject*
		constexpr auto DefaultDragVisual = 0x40; // UWidget*
		constexpr auto Pivot = 0x48; // EDragPivot
		constexpr auto Offset = 0x4c; // FVector2D
		constexpr auto OnDrop = 0x58; // FMulticastInlineDelegate
		constexpr auto OnDragCancelled = 0x68; // FMulticastInlineDelegate
		constexpr auto OnDragged = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UOffsetMeshToolProperties {
		constexpr auto OffsetType = 0x60; // EOffsetMeshToolOffsetType
		constexpr auto Distance = 0x64; // float
		constexpr auto bCreateShell = 0x68; // bool
	}

	namespace n_USoundSubmixWithParentBase {
		constexpr auto ParentSubmix = 0x38; // USoundSubmixBase*
	}

	namespace n_UEnvQueryGenerator_BlueprintBase {
		constexpr auto GeneratorsActionDescription = 0x50; // FText
		constexpr auto Context = 0x68; // UEnvQueryContext*
		constexpr auto GeneratedItemType = 0x70; // UEnvQueryItemType*
	}

	namespace n_UActorSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto ObjectReferences = 0x68; // FActorSequenceObjectReferenceMap
	}

	namespace n_UAnimNotifyState_Ladder {
		constexpr auto CharacterOwner = 0x360; // ASGCharacter*
		constexpr auto PlayMontage = 0x368; // UAnimMontage*
	}

	namespace n_UGuildDetailsSlot {
		constexpr auto GuildNameText = 0x2d8; // UTextBlock*
		constexpr auto GuildOwnerText = 0x2e0; // UTextBlock*
		constexpr auto GuildLevelText = 0x2e8; // UTextBlock*
		constexpr auto GuildLanguageText = 0x2f0; // UTextBlock*
		constexpr auto BaseCampText = 0x2f8; // UTextBlock*
		constexpr auto GuildExpText = 0x300; // UTextBlock*
		constexpr auto GuildActivityText = 0x308; // UTextBlock*
		constexpr auto CantAddActivityText = 0x310; // UTextBlock*
		constexpr auto GuildMemberCountText = 0x318; // UTextBlock*
		constexpr auto GuildNoticeText = 0x320; // UTextBlock*
		constexpr auto GuildOuterNoticeText = 0x328; // UTextBlock*
		constexpr auto GuildImage = 0x330; // UImage*
		constexpr auto AddExpButton = 0x338; // UButton*
		constexpr auto GuildAuthorityButton = 0x340; // UButton*
		constexpr auto GuildApplyButton = 0x348; // UButton*
		constexpr auto EXPProgressBar = 0x350; // UProgressBar*
		constexpr auto ChangeGuildNameButton = 0x358; // UButton*
		constexpr auto ChangeGuildNoticeButton = 0x360; // UButton*
		constexpr auto ChangeGuildOuterNoticeButton = 0x368; // UButton*
		constexpr auto NoticeTitleSizeBox = 0x370; // USizeBox*
		constexpr auto NoticeSizeBox = 0x378; // USizeBox*
		constexpr auto ExpPanel = 0x380; // UCanvasPanel*
		constexpr auto ApplyAlertImage = 0x388; // UImage*
		constexpr auto BeInviteButton = 0x390; // UButton*
		constexpr auto BeInviteAlertImage = 0x398; // UImage*
		constexpr auto ManagePanel = 0x3a0; // UCanvasPanel*
		constexpr auto AutoChangeOwnerButton = 0x3a8; // UDataButton*
		constexpr auto SetBaseCampButton = 0x3b0; // UDataButton*
		constexpr auto GuildColorCanvasPanel = 0x3b8; // UCanvasPanel*
		constexpr auto ColorListScrollBox = 0x3c0; // UScrollBox*
		constexpr auto ColorListVerticalBox = 0x3c8; // UVerticalBox*
		constexpr auto GuildColorImage = 0x3d0; // UImage*
		constexpr auto ChangeGuildColorButton = 0x3d8; // UButton*
		constexpr auto GuildLanguageComboBox = 0x3e0; // UGuildAuthorityComboBox*
		constexpr auto ChangeNameUIOverride = 0x3e8; // UUI_ModifyText*
		constexpr auto ChangeInnerNoticeUIOverride = 0x3f0; // UUI_ModifyText*
		constexpr auto ChangeOuterNoticeUIOverride = 0x3f8; // UUI_ModifyText*
		constexpr auto MaxNoticeLen = 0x400; // int32_t
		constexpr auto ButtonTipWidgetTemplate = 0x408; // USGToolTipWidget*
		constexpr auto GuildColorSlotTemplate = 0x410; // UGuildColorSlot*
	}

	namespace n_UGuildSkillGroupSlot {
		constexpr auto GuildSkillGroupPanel = 0x2d8; // UCanvasPanel*
		constexpr auto SlotLength = 0x2e0; // float
		constexpr auto SlotWidth = 0x2e4; // float
		constexpr auto NextLineStartPosition = 0x2e8; // FVector2D
		constexpr auto NextLineFromStartPositionDistance = 0x2f0; // FVector2D
		constexpr auto ReceiveLinePosition = 0x2f8; // FVector2D
		constexpr auto LineWidth = 0x300; // float
		constexpr auto UnLockTurnDownAddY = 0x304; // float
		constexpr auto UnLockTurnUpAddHeight = 0x308; // float
		constexpr auto UnLockStraightAddLen = 0x30c; // float
		constexpr auto GuildSkillGroupLineTemplate = 0x310; // UGuildSkillGroupLine*
		constexpr auto N_GuildSkillSlotClass = 0x318; // UN_GuildSkillSlot*
	}

	namespace n_UMailLogicComponent {
		constexpr auto m_MailArr = 0xd0; // TSet<FMailContent>
	}

	namespace n_UPlatformAnimInstance {
		constexpr auto PlatformCharacter = 0x2c0; // ABaseCharacter*
		constexpr auto PlatformCharacterMesh = 0x2c8; // USkeletalMeshComponent*
		constexpr auto StructurePlatform = 0x2d0; // ASGStructure*
		constexpr auto SGCapsuleComponent = 0x2d8; // UCapsuleComponent*
		constexpr auto SGCharacterMovementComponent = 0x2e0; // UCharacterMovementComponent*
		constexpr auto bIsMoving = 0x2e8; // char : 1
		constexpr auto bMoveForward = 0x2e8; // char : 1
		constexpr auto MoveForwardAxis = 0x2ec; // float
		constexpr auto fSpeedRatio = 0x2f0; // float
		constexpr auto ForwardBindPoint = 0x2f4; // FVector
		constexpr auto ForwardBindScale = 0x300; // FVector
		constexpr auto ForwardBindMaxScale = 0x30c; // FVector
		constexpr auto BackBindPoint = 0x324; // FVector
		constexpr auto BackwardBindScale = 0x330; // FVector
		constexpr auto BackwardBindMaxScale = 0x33c; // FVector
		constexpr auto ForwardBindSocketName = 0x354; // FName
		constexpr auto BackBindSocketName = 0x35c; // FName
		constexpr auto LeftBindSocketName = 0x364; // FName
		constexpr auto LeftBindPoint = 0x36c; // FVector
		constexpr auto RightBindSocketName = 0x378; // FName
		constexpr auto RightBindPoint = 0x380; // FVector
		constexpr auto bUseModifyBindSocket = 0x38c; // char : 1
		constexpr auto BaseMoveSpeed = 0x390; // float
		constexpr auto bUpdateMorphCurve = 0x394; // char : 1
	}

	namespace n_ASGGameModeBattle {
		constexpr auto LastDefensePlayerNum = 0x1cc0; // int32_t
		constexpr auto LastAttackPlayerNum = 0x1cc4; // int32_t
		constexpr auto JoinBattleRenownAccounts = 0x1cc8; // TArray<FString>
		constexpr auto BattleKey = 0x1cd8; // int32_t
		constexpr auto BattleGamePlayIndex = 0x1cdc; // int32_t
		constexpr auto MaxDefensePlayNum = 0x1ce0; // int32_t
		constexpr auto MaxAttackPlayNum = 0x1ce4; // int32_t
		constexpr auto OverTime = 0x1ce8; // float
		constexpr auto LogicServerLevel = 0x1cec; // int32_t
	}

	namespace n_USGPerkTipMultiSkillText {
		constexpr auto SkillText = 0x260; // UTextBlock*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto bIsEnough = 0x270; // char : 1
		constexpr auto BindGenCharacter = 0x27c; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto SkillTextText = 0x288; // FText [0x19]
		constexpr auto EnoughColor = 0x4e0; // FLinearColor
		constexpr auto NotEnoughColor = 0x4f0; // FLinearColor
	}

	namespace n_UGeneralAddSkillExpPanel {
		constexpr auto ParentUI = 0x260; // UConditionPanel*
		constexpr auto BindCharacter = 0x268; // TWeakObjectPtr<ASGCharacter>
		constexpr auto MaxCanLevelUpLevel = 0x270; // int32_t
		constexpr auto SkillType = 0x274; // ESkillType
		constexpr auto BtnClose = 0x278; // UButton*
		constexpr auto BtnConfirm = 0x280; // UButton*
		constexpr auto BtnAddLevel = 0x288; // UButton*
		constexpr auto BtnReduceLevel = 0x290; // UButton*
		constexpr auto AddLevelSlider = 0x298; // USlider*
		constexpr auto PbSkill = 0x2a0; // UProgressBar*
		constexpr auto TbPublicExp = 0x2a8; // UTextBlock*
		constexpr auto EtbSkillLevel = 0x2b0; // UEditableText*
		constexpr auto TbNotEnoughExp = 0x2b8; // UTextBlock*
		constexpr auto TbExp = 0x2c0; // UTextBlock*
		constexpr auto CurSkillLevel = 0x2c8; // int32_t
		constexpr auto UseExp = 0x2d0; // double
		constexpr auto LastInputSkill = 0x2d8; // int32_t
	}

	namespace n_UModManage {
		constexpr auto ModAssetLoadSuccessList = 0x28; // TArray<FString>
		constexpr auto ModsGameDataList = 0x38; // TArray<USGGameData*>
	}

	namespace n_UUI_NPCTalk {
		constexpr auto NPCNameText = 0x2d8; // UTextBlock*
		constexpr auto NPCTalkAnswerText = 0x2e0; // URichTextBlock*
		constexpr auto QuestionVerticalBox = 0x2e8; // UVerticalBox*
		constexpr auto ShowTalkAnimation = 0x2f0; // UWidgetAnimation*
		constexpr auto ShowAnswerAnimation = 0x2f8; // UWidgetAnimation*
		constexpr auto ShowNextQuestionAnimation = 0x300; // UWidgetAnimation*
		constexpr auto NPCTalkSlotClass = 0x308; // UUI_NPCTalkSlot*
		constexpr auto BindGeneralCharacter = 0x310; // TWeakObjectPtr<ASGGeneralCharacter>
	}

	namespace n_UUI_ServerAdmin {
		constexpr auto ItemButton = 0x2d8; // UOptionButton*
		constexpr auto PlayerButton = 0x2e0; // UOptionButton*
		constexpr auto NpcButton = 0x2e8; // UOptionButton*
		constexpr auto GeneralButton = 0x2f0; // UOptionButton*
		constexpr auto HorseButton = 0x2f8; // UOptionButton*
		constexpr auto ParamButton = 0x300; // UOptionButton*
		constexpr auto BattleButton = 0x308; // UOptionButton*
		constexpr auto OtherButton = 0x310; // UOptionButton*
		constexpr auto PrivateServerButton = 0x318; // UOptionButton*
		constexpr auto ItemPanel = 0x320; // UUI_AdminSubPanel*
		constexpr auto PlayerPanel = 0x328; // UUI_AdminSubPanel*
		constexpr auto NpcPanel = 0x330; // UUI_AdminSubPanel*
		constexpr auto GeneralPanel = 0x338; // UUI_AdminSubPanel*
		constexpr auto HorsePanel = 0x340; // UUI_AdminSubPanel*
		constexpr auto ParamPanel = 0x348; // UUI_AdminSubPanel*
		constexpr auto BattlePanel = 0x350; // UUI_AdminSubPanel*
		constexpr auto OtherPanel = 0x358; // UUI_AdminSubPanel*
		constexpr auto PrivateServerPanel = 0x360; // UUI_AdminSubPanel*
	}

	namespace n_UMaterialExpressionStaticBoolParameter {
		constexpr auto DefaultValue = 0x58; // char : 1
	}

	namespace n_UEditPivotTool {
		constexpr auto TransformProps = 0x98; // UEditPivotToolProperties*
		constexpr auto EditPivotActions = 0xa0; // UEditPivotToolActionPropertySet*
		constexpr auto ActiveGizmos = 0x178; // TArray<FEditPivotTarget>
	}

	namespace n_UParticleModuleVectorFieldScale {
		constexpr auto VectorFieldScale = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UUI_TrafficGoodsConfirm {
		constexpr auto MenuText = 0x2d8; // UTextBlock*
		constexpr auto SellStateVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto SinglePriceText = 0x2e8; // UTextBlock*
		constexpr auto Button_Minus = 0x2f0; // UButton*
		constexpr auto ItemNumEditText = 0x2f8; // UEditableText*
		constexpr auto Button_Add = 0x300; // UButton*
		constexpr auto ConsumeText = 0x308; // UTextBlock*
		constexpr auto TotalPriceText = 0x310; // UTextBlock*
		constexpr auto AfterDealText = 0x318; // UTextBlock*
		constexpr auto RecycleText = 0x320; // UTextBlock*
		constexpr auto CapitalNumOld = 0x328; // UTextBlock*
		constexpr auto CapitalNumNew = 0x330; // UTextBlock*
		constexpr auto ButtonCancel = 0x338; // UButton*
		constexpr auto CancelText = 0x340; // UTextBlock*
		constexpr auto ButtonConfirm = 0x348; // UButton*
		constexpr auto ConfirmText = 0x350; // UTextBlock*
	}

	namespace n_UWBP_OfficalSessionItem_C {
		constexpr auto OnSelectDispatch = 0x368; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_MoveAroundBlockade {
		constexpr auto BBKey_IsMoveAroundBlockade = 0xd0; // FBlackboardKeySelector
		constexpr auto bUseNavPathForAttack = 0xf8; // char : 1
	}

	namespace n_UBTTask_SGCustomMoveTo {
		constexpr auto bFinishTaskWithinBrakingDistance = 0xd0; // char : 1
		constexpr auto bStopMovementWithinBrakingDistance = 0xd0; // char : 1
		constexpr auto bCheckAngle = 0xd0; // char : 1
		constexpr auto OverrideBrakingDistance = 0xd4; // float
	}

	namespace n_APhysicsThruster {
		constexpr auto ThrusterComponent = 0x310; // UPhysicsThrusterComponent*
	}

	namespace n_UConvertToPolygonsToolProperties {
		constexpr auto ConversionMode = 0x60; // EConvertToPolygonsMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bCalculateNormals = 0x68; // bool
		constexpr auto bShowGroupColors = 0x69; // bool
	}

	namespace n_URevolveBoundaryTool {
		constexpr auto Settings = 0x160; // URevolveBoundaryToolProperties*
		constexpr auto MaterialProperties = 0x168; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x170; // UConstructionPlaneMechanic*
		constexpr auto Preview = 0x178; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UMovieScenePrimitiveMaterialTrack {
		constexpr auto MaterialIndex = 0xb0; // int32_t
	}

	namespace n_UAISense_Damage {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIDamageEvent>
	}

	namespace n_ULevel {
		constexpr auto OwningWorld = 0xb8; // UWorld*
		constexpr auto Model = 0xc0; // UModel*
		constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
		constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
		constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
		constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
		constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
		constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
		constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
		constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
		constexpr auto LightmapTotalSize = 0x110; // float
		constexpr auto ShadowmapTotalSize = 0x114; // float
		constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
		constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
		constexpr auto LevelBuildDataId = 0x1d0; // FGuid
		constexpr auto MapBuildData = 0x1e0; // UMapBuildDataRegistry*
		constexpr auto LightBuildLevelOffset = 0x1e8; // FIntVector
		constexpr auto bIsLightingScenario = 0x1f4; // char : 1
		constexpr auto bTextureStreamingRotationChanged = 0x1f4; // char : 1
		constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x1f4; // char : 1
		constexpr auto bIsVisible = 0x1f4; // char : 1
		constexpr auto WorldSettings = 0x258; // AWorldSettings*
		constexpr auto AssetUserData = 0x268; // TArray<UAssetUserData*>
		constexpr auto DestroyedReplicatedStaticActors = 0x288; // TArray<FReplicatedStaticActorDestructionInfo>
	}

	namespace n_UN_SlotExtraMenu {
		constexpr auto bRemove = 0x260; // char : 1
		constexpr auto ButtonTemplate = 0x268; // UN_SlotExtraMenuButton*
		constexpr auto SlotListPadding = 0x270; // FMargin
		constexpr auto BindItem = 0x280; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventoryType = 0x288; // EInventoryTypes
		constexpr auto BindInventory = 0x28c; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto InventorySlot = 0x294; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto RootSGUI = 0x29c; // TWeakObjectPtr<USGUI>
		constexpr auto MenuVetical = 0x2a8; // UVerticalBox*
		constexpr auto DefaultWidgetSize = 0x2b0; // FVector2D
		constexpr auto ButtonList = 0x2b8; // TArray<UN_SlotExtraMenuButton*>
		constexpr auto ShowTipRepairButton = 0x2c8; // UN_SlotExtraMenuButton*
		constexpr auto RepairTipTemplate = 0x2d0; // USGToolTipWidget*
	}

	namespace n_ABP_SGGameModeMenu_C {
		constexpr auto DefaultSceneRoot = 0x1758; // USceneComponent*
	}

	namespace n_UJueWeiConditionSlot {
		constexpr auto TitleText = 0x2d8; // UTextBlock*
		constexpr auto ConditionTextNames = 0x2e0; // TArray<FName>
	}

	namespace n_USmoothWeightMapSetProperties {
		constexpr auto MinSmoothMultiplier = 0x80; // float
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied_Target {
		constexpr auto OnApplied = 0x1b8; // FMulticastInlineDelegate
	}

	namespace n_UIterativeOffsetProperties {
		constexpr auto Steps = 0x60; // int32_t
		constexpr auto bOffsetBoundaries = 0x64; // bool
		constexpr auto SmoothingPerStep = 0x68; // float
		constexpr auto bReprojectSmooth = 0x6c; // bool
	}

	namespace n_UUI_PrivateSessionEntry {
		constexpr auto BtnLocal = 0x2d8; // UButton*
		constexpr auto BtnProfessional = 0x2e0; // UButton*
		constexpr auto BtnClose = 0x2e8; // UButton*
	}

	namespace n_UBTService_UpdateAttackStatus {
		constexpr auto BBKey_Knockback = 0xb8; // FBlackboardKeySelector
		constexpr auto BBKey_KeepInPlace = 0xe0; // FBlackboardKeySelector
		constexpr auto ReturnMaxWaitTimeRange = 0x118; // FVector2D
		constexpr auto ForceFollowSpeed = 0x120; // float
		constexpr auto bCheckKeepInPlace = 0x128; // char : 1
	}

	namespace n_ASplineMeshActor {
		constexpr auto SplineMeshComponent = 0x310; // USplineMeshComponent*
	}

	namespace n_UGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto GameplayTagList = 0x38; // TArray<FGameplayTagTableRow>
	}

	namespace n_UBTDecorator_LoopByDynamic {
		constexpr auto BlackboardKeyNumLoops = 0x78; // FBlackboardKeySelector
	}

	namespace n_UParticleModuleSpawn {
		constexpr auto Rate = 0x38; // FRawDistributionFloat
		constexpr auto RateScale = 0x68; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0x98; // EParticleBurstMethod
		constexpr auto BurstList = 0xa0; // TArray<FParticleBurst>
		constexpr auto BurstScale = 0xb0; // FRawDistributionFloat
		constexpr auto bApplyGlobalSpawnRateScale = 0xe0; // char : 1
	}

	namespace n_ULuminARCandidateImage {
		constexpr auto bUseUnreliablePose = 0x58; // bool
		constexpr auto bImageIsStationary = 0x59; // bool
		constexpr auto AxisOrientation = 0x5a; // EMagicLeapImageTargetOrientation
	}

	namespace n_UKeySettingItem {
		constexpr auto TipWidgetTemplate = 0x260; // USGToolTipWidget*
		constexpr auto TbKeyName = 0x268; // UTextBlock*
		constexpr auto KeyItem = 0x270; // UKeyItem*
		constexpr auto BindKeyName = 0x278; // FName
		constexpr auto BindConfig = 0x280; // FKeySettingConfig
		constexpr auto SelectKeyItem = 0x2b0; // UKeyItem*
	}

	namespace n_UMaterialParameterCollection {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto ScalarParameters = 0x38; // TArray<FCollectionScalarParameter>
		constexpr auto VectorParameters = 0x48; // TArray<FCollectionVectorParameter>
	}

	namespace n_UGizmoBaseComponent {
		constexpr auto Color = 0x488; // FLinearColor
		constexpr auto HoverSizeMultiplier = 0x498; // float
		constexpr auto PixelHitDistanceThreshold = 0x49c; // float
	}

	namespace n_UGlobalMap_ServerItem {
		constexpr auto HuKouSignButtonName = 0x260; // FName
		constexpr auto NormalServerNameTextColor = 0x268; // FSlateColor
		constexpr auto SelectedServerNameTextColor = 0x290; // FSlateColor
		constexpr auto StateConfig = 0x2b8; // float [0x3]
		constexpr auto StateIconTexture = 0x2c8; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto ServerTypeTexture = 0x340; // TSoftObjectPtr<UTexture2D> [0x2]
		constexpr auto HoverTexture = 0x390; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectTexture = 0x3b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto StateTipsTemplate = 0x3e0; // USGToolTipWidget*
		constexpr auto ServerInfoTipsTemplate = 0x3e8; // USGToolTipWidget*
		constexpr auto HuKouTipsSignTemplate = 0x3f0; // USGToolTipWidget*
		constexpr auto BindServerIndex = 0x3f8; // int32_t
		constexpr auto BindOfficalSealInfo = 0x400; // FOfficalSealInfo
		constexpr auto bHovered = 0x450; // char : 1
		constexpr auto bSelected = 0x450; // char : 1
		constexpr auto bEnabled = 0x450; // char : 1
		constexpr auto CurServerItemState = 0x451; // EUIServerState
		constexpr auto ParentUI = 0x458; // USGUI*
		constexpr auto ImgBg = 0x490; // UImage*
		constexpr auto TbServerName = 0x498; // UTextBlock*
		constexpr auto TbPing = 0x4a0; // UTextBlock*
		constexpr auto RoleCanvas = 0x4a8; // UCanvasPanel*
		constexpr auto LocationCanvas = 0x4b0; // UCanvasPanel*
		constexpr auto TbRoleName = 0x4b8; // UTextBlock*
		constexpr auto TbRoleLevel = 0x4c0; // UTextBlock*
		constexpr auto ImgState = 0x4c8; // UImage*
		constexpr auto BtnState = 0x4d0; // UButton*
		constexpr auto VbMain = 0x4d8; // UVerticalBox*
		constexpr auto TbXianChengKey = 0x4e0; // UTextBlock*
		constexpr auto BtnHuKouSign = 0x4e8; // UButton*
		constexpr auto ServerItemTips = 0x4f0; // UGlobalMap_ServerItemTips*
	}

	namespace n_UGizmoComponentHitTarget {
		constexpr auto Component = 0x30; // UPrimitiveComponent*
	}

	namespace n_UHapticFeedbackEffect_Curve {
		constexpr auto HapticDetails = 0x28; // FHapticFeedbackDetails_Curve
	}

	namespace n_UUI_StructureOccupyBuffSlot {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto BuffRequirement = 0x270; // FOccupyBuffRequirement
		constexpr auto ParentUI = 0x2b8; // UUI_StructureOccupyBuffPanel*
		constexpr auto BuffNameText = 0x2c0; // UTextBlock*
		constexpr auto BuffNumText = 0x2c8; // UTextBlock*
		constexpr auto BuffButton = 0x2d0; // UButton*
		constexpr auto BuffButtonText = 0x2d8; // UTextBlock*
		constexpr auto BuffImage = 0x2e0; // UImage*
		constexpr auto CapitalImage = 0x2e8; // UImage*
	}

	namespace n_UUI_VehicleGenealogy {
		constexpr auto OriginColumn = 0x2d8; // int32_t
		constexpr auto OriginRows = 0x2dc; // int32_t
		constexpr auto SlotLength = 0x2e0; // float
		constexpr auto SlotWidth = 0x2e4; // float
		constexpr auto GenealogySlotTemplate = 0x2e8; // UVehicleGenealogySlot*
		constexpr auto GenealogyRowsMul = 0x2f0; // TArray<float>
		constexpr auto LoadingCanvas = 0x300; // UCanvasPanel*
		constexpr auto GenealogyHB = 0x308; // UHorizontalBox*
		constexpr auto GenealogyPanel = 0x310; // UCanvasPanel*
		constexpr auto CloseBtn = 0x318; // UButton*
		constexpr auto VehiclePerkPanel = 0x320; // UUI_VehiclePerk*
		constexpr auto MyGenealogySlot = 0x328; // UVehicleGenealogySlot*
		constexpr auto FatherGenealogySlot = 0x330; // UVehicleGenealogySlot*
		constexpr auto MotherGenealogySlot = 0x338; // UVehicleGenealogySlot*
		constexpr auto GrandFatherGenealogySlot_F = 0x340; // UVehicleGenealogySlot*
		constexpr auto GrandMotherGenealogySlot_F = 0x348; // UVehicleGenealogySlot*
		constexpr auto GrandFatherGenealogySlot_M = 0x350; // UVehicleGenealogySlot*
		constexpr auto GrandMotherGenealogySlot_M = 0x358; // UVehicleGenealogySlot*
		constexpr auto BindVehicleCharacter = 0x360; // TWeakObjectPtr<ASG_AnimalsCharacter>
	}

	namespace n_UTestMovieSceneSubTrack {
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_ASGBattleSafeVolume {
		constexpr auto EntryAddBuffs = 0x358; // TArray<USGBuff*>
		constexpr auto LeaveRemoveBuffs = 0x368; // TArray<USGBuff*>
		constexpr auto CheckOverlapInnerTimeSec = 0x378; // float
		constexpr auto AddBuffChars = 0x380; // TArray<TWeakObjectPtr<ABaseCharacter>>
	}

	namespace n_AFuBenVolume {
		constexpr auto FunctionId = 0x348; // int32_t
		constexpr auto StreamingLevelName = 0x34c; // FName
		constexpr auto SkylightIntensity = 0x354; // float
		constexpr auto FuBenEndPlayerStartFunctionId = 0x35c; // int32_t
		constexpr auto FuBenTotalTime = 0x360; // float
		constexpr auto FuBenLeaveTimeAfterKilledAll = 0x364; // float
		constexpr auto ActuralFuBenTotalTime = 0x380; // float
		constexpr auto LeftFuBenTime = 0x384; // float
	}

	namespace n_UExtractCollisionGeometryTool {
		constexpr auto VizSettings = 0x88; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectProps = 0x90; // UPhysicsObjectToolPropertySet*
		constexpr auto PreviewElements = 0x98; // UPreviewGeometry*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UNewsClientData {
		constexpr auto ID = 0x28; // FGuid
		constexpr auto Content = 0x38; // FString
		constexpr auto NewsType = 0x48; // ENewsType
	}

	namespace n_ULeaderboardFlushCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UAISenseEvent_Damage {
		constexpr auto Event = 0x28; // FAIDamageEvent
	}

	namespace n_UAppearanceListItem {
		constexpr auto ImgBg = 0x500; // UImage*
		constexpr auto BtnBg = 0x508; // UButton*
		constexpr auto BindItemIndex = 0x510; // int32_t
		constexpr auto BindItemName = 0x514; // FName
	}

	namespace n_UUI_N_General {
		constexpr auto EquipPanelCanvas = 0x2d8; // UCanvasPanel*
		constexpr auto StatusPanel = 0x2e0; // UCanvasPanel*
		constexpr auto FunctionPanel = 0x2e8; // UCanvasPanel*
		constexpr auto EquipPanel = 0x2f0; // UN_EquipPanel*
		constexpr auto DetailPanelCanvas = 0x2f8; // UCanvasPanel*
		constexpr auto InventoryPanel = 0x300; // UN_InventoryPanel*
		constexpr auto GeneralCampCanvas = 0x308; // UCanvasPanel*
		constexpr auto GeneralCampPanel = 0x310; // UN_GeneralCampPanel*
		constexpr auto ReleaseButton = 0x318; // UButton*
		constexpr auto KillButton = 0x320; // UButton*
		constexpr auto ResetButton = 0x328; // UButton*
		constexpr auto AttributeButton = 0x330; // UOptionButton*
		constexpr auto ConditionButton = 0x338; // UOptionButton*
		constexpr auto TalentButton = 0x340; // UOptionButton*
		constexpr auto SkillButton = 0x348; // UOptionButton*
		constexpr auto GeneralStatusPanel = 0x350; // UN_GeneralStatusPanel*
		constexpr auto ChangeNameButton = 0x358; // UButton*
		constexpr auto GeneralPanel = 0x360; // UCanvasPanel*
		constexpr auto BindGeneralCharacter = 0x368; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto BindGeneralCampSlot = 0x370; // UN_GeneralCampSlot*
		constexpr auto ParentUI = 0x378; // UUI_NPCInfo*
		constexpr auto PressedSlot = 0x380; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto AttributePanel = 0x388; // UAttributePanel*
		constexpr auto ConditionPanel = 0x390; // UConditionPanel*
		constexpr auto TalentPanel = 0x398; // UTalentPanel*
		constexpr auto SkillPanel = 0x3a0; // USkillPanel*
		constexpr auto GeneralCharacterNameBgColor = 0x3a8; // FLinearColor [0x6]
		constexpr auto GeneralCharacterTexture2D = 0x408; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto GeneralNameBgTexture2D = 0x4f8; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto ShowLegendButton = 0x598; // UButton*
		constexpr auto LegendUITemplate = 0x5a0; // UUI_GeneralLegend*
		constexpr auto LegendUI = 0x5a8; // TWeakObjectPtr<UUI_GeneralLegend>
		constexpr auto bShowGeneralCharacter = 0x5b0; // char : 1
		constexpr auto WagesPanel = 0x5b8; // UGeneralWagesPanel*
		constexpr auto WagesPanelTemplate = 0x5c0; // UGeneralWagesPanel*
	}

	namespace n_UGameCharacterBuffItem {
		constexpr auto ToolTipsTemplate = 0x260; // USGToolTipWidget*
		constexpr auto BindCharacter = 0x268; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto ImgBuff = 0x288; // UImage*
		constexpr auto TbRemainTime = 0x290; // UTextBlock*
	}

	namespace n_UAnimNotifyState_Trail {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto FirstSocketName = 0x38; // FName
		constexpr auto SecondSocketName = 0x40; // FName
		constexpr auto WidthScaleMode = 0x48; // ETrailWidthMode
		constexpr auto WidthScaleCurve = 0x4c; // FName
		constexpr auto bRecycleSpawnedSystems = 0x54; // char : 1
	}

	namespace n_UAsyncActionLoadPrimaryAsset {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSaturate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USGToolTipsAnimal {
		constexpr auto TitleText = 0x288; // UTextBlock*
		constexpr auto AnimalTamingPanel = 0x290; // UCanvasPanel*
		constexpr auto HPSizeBox = 0x298; // USizeBox*
		constexpr auto HPProgressBar = 0x2a0; // UProgressBar*
		constexpr auto TameSizeBox = 0x2a8; // USizeBox*
		constexpr auto TameProgressBar = 0x2b0; // UProgressBar*
		constexpr auto StunSizeBox = 0x2b8; // USizeBox*
		constexpr auto StunProgressBar = 0x2c0; // UProgressBar*
		constexpr auto AngerSizeBox = 0x2c8; // USizeBox*
		constexpr auto AngerProgressBar = 0x2d0; // UProgressBar*
		constexpr auto TipsText = 0x2d8; // UTextBlock*
		constexpr auto AnimalMatingPanel = 0x2e0; // UCanvasPanel*
		constexpr auto MateProgressBar = 0x2e8; // UProgressBar*
		constexpr auto AnimalPregnancyPanel = 0x2f0; // UCanvasPanel*
		constexpr auto PregnancyText = 0x2f8; // UTextBlock*
		constexpr auto PregnancyProgressBar = 0x300; // UProgressBar*
		constexpr auto OverMaxTameNumTipText = 0x308; // FText
		constexpr auto OverMaxWarNumTipText = 0x320; // FText
		constexpr auto StunTameTitleText = 0x338; // FText
		constexpr auto RideTameTitleText = 0x350; // FText
		constexpr auto StunTitleText = 0x368; // FText
		constexpr auto MateTitleText = 0x380; // FText
		constexpr auto PregnancyTitleText = 0x398; // FText
	}

	namespace n_UUI_BenchmarkScalability {
		constexpr auto TbBenchmarkScalability = 0x2d8; // UTextBlock*
		constexpr auto BtnReturn = 0x2e0; // UButton*
		constexpr auto BtnOpenSystemSetting = 0x2e8; // UButton*
	}

	namespace n_UInterpTrackVectorMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UGuildQuestSlot {
		constexpr auto FinishButton = 0x2d8; // UButton*
		constexpr auto QuestVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto QuestNameText = 0x2e8; // UTextBlock*
		constexpr auto QuestTypeText = 0x2f0; // UTextBlock*
		constexpr auto BGImage = 0x2f8; // UImage*
		constexpr auto CompleteImage = 0x300; // UImage*
		constexpr auto FinishedImage = 0x308; // UImage*
		constexpr auto BGBorder = 0x310; // UBorder*
		constexpr auto CollapseImage = 0x318; // UImage*
		constexpr auto ShowTraceCheckBox = 0x320; // UCheckBox*
		constexpr auto ShowTraceTipsButton = 0x328; // UDataButton*
		constexpr auto DailyQuestTexture = 0x330; // TSoftObjectPtr<UTexture2D>
		constexpr auto WeeklyQuestTexture = 0x358; // TSoftObjectPtr<UTexture2D>
		constexpr auto TrunkQuestTexture = 0x380; // TSoftObjectPtr<UTexture2D>
		constexpr auto BranchQuestTexture = 0x3a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectQuestTexture = 0x3d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto CollapseTexture = 0x3f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ExpandTexture = 0x420; // TSoftObjectPtr<UTexture2D>
		constexpr auto QuestObjectSlotClass = 0x448; // UGuildQuestObjectSlot*
		constexpr auto ButtonTipWidgetTemplate = 0x450; // USGToolTipWidget*
	}

	namespace n_AWaterBody {
		constexpr auto PhysicalMaterial = 0x320; // UPhysicalMaterial*
		constexpr auto TargetWaveMaskDepth = 0x328; // float
		constexpr auto MaxWaveHeightOffset = 0x32c; // float
		constexpr auto WaterBodyIndex = 0x330; // int32_t
		constexpr auto bFillCollisionUnderWaterBodiesForNavmesh = 0x334; // bool
		constexpr auto UnderwaterPostProcessSettings = 0x340; // FUnderwaterPostProcessSettings
		constexpr auto WaterBodyType = 0x8c0; // EWaterBodyType
		constexpr auto CurveSettings = 0x8c8; // FWaterCurveSettings
		constexpr auto WaterMaterial = 0x8e8; // UMaterialInterface*
		constexpr auto UnderwaterPostProcessMaterial = 0x8f0; // UMaterialInterface*
		constexpr auto bAffectsLandscape = 0x8f8; // bool
		constexpr auto bGenerateCollisions = 0x8f9; // bool
		constexpr auto bOverrideWaterMesh = 0x8fa; // bool
		constexpr auto WaterMeshOverride = 0x900; // UStaticMesh*
		constexpr auto OverlapMaterialPriority = 0x908; // int32_t
		constexpr auto CollisionProfileName = 0x90c; // FName
		constexpr auto SplineComp = 0x918; // UWaterSplineComponent*
		constexpr auto WaterSplineMetadata = 0x920; // UWaterSplineMetadata*
		constexpr auto WaterMID = 0x928; // UMaterialInstanceDynamic*
		constexpr auto UnderwaterPostProcessMID = 0x930; // UMaterialInstanceDynamic*
		constexpr auto Islands = 0x938; // TArray<LazyObjectProperty>
		constexpr auto ExclusionVolumes = 0x948; // TArray<LazyObjectProperty>
		constexpr auto Landscape = 0x958; // TWeakObjectPtr<ALandscapeProxy>
		constexpr auto CurrentPostProcessSettings = 0x960; // FPostProcessSettings
		constexpr auto bCanAffectNavigation = 0xec0; // bool
		constexpr auto WaterNavAreaClass = 0xec8; // UNavAreaBase*
		constexpr auto WaterWaves = 0xed0; // UWaterWavesBase*
		constexpr auto bHasWaveSpectrumSettings = 0xed8; // bool
		constexpr auto bHasTerrainCarvingSettingsSettings = 0xed9; // bool
	}

	namespace n_UNiagaraDataInterfaceAudioOscilloscope {
		constexpr auto Submix = 0x38; // USoundSubmix*
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto ScopeInMilliseconds = 0x44; // float
	}

	namespace n_UWBP_AudioSettingSliderItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_22 = 0x370; // UCanvasPanel*
		constexpr auto ImgScrollBg = 0x378; // UImage*
		constexpr auto Slider = 0x380; // USlider*
		constexpr auto TbTitle = 0x388; // UTextBlock*
		constexpr auto TbValue = 0x390; // UTextBlock*
		constexpr auto Name = 0x398; // FText
		constexpr auto StepSize = 0x3b0; // float
		constexpr auto AsPercent = 0x3b4; // bool
	}

	namespace n_UCSGMeshesToolProperties {
		constexpr auto Operation = 0x60; // ECSGOperation
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bAttemptFixHoles = 0x62; // bool
		constexpr auto bOnlyUseFirstMeshMaterials = 0x63; // bool
	}

	namespace n_ASceneEffectManager {
		constexpr auto MaxSECheckRange = 0x310; // float
		constexpr auto bDeleteNiaActorsRemained = 0x314; // char : 1
		constexpr auto bDebugShow = 0x314; // char : 1
		constexpr auto CurLoadedInstances = 0x318; // TArray<FSEInstance>
	}

	namespace n_UWeatherControlComponent {
		constexpr auto DescriptionID = 0xc0; // FString
		constexpr auto Priority = 0xd0; // int32_t
		constexpr auto ComponentSwitchTime = 0xd4; // float
		constexpr auto WeatherInfos = 0xd8; // FWeatherInfo [0x10]
		constexpr auto NatureRepInfo = 0xe58; // FWeatherRepInfo
		constexpr auto CurrentWeatherType = 0xe68; // EWeatherType
		constexpr auto NatureController = 0xf20; // ANatureController*
	}

	namespace n_UHorseAuctionSellPanel {
		constexpr auto ScrollSellHorseList = 0x2d8; // UScrollBox*
		constexpr auto ScrollMyHorseList = 0x2e0; // UScrollBox*
		constexpr auto Button_Recall = 0x2e8; // UButton*
		constexpr auto Button_Sell = 0x2f0; // UButton*
		constexpr auto VehicleEquipPanel = 0x2f8; // UVehicleEquipPanel*
		constexpr auto AttributeButton = 0x300; // UOptionButton*
		constexpr auto PerkButton = 0x308; // UOptionButton*
		constexpr auto AttributePanel = 0x310; // UVehicleAttributePanel*
		constexpr auto PerkPanel = 0x318; // UUI_VehiclePerk*
		constexpr auto CanvasPanel_Preview = 0x320; // UCanvasPanel*
		constexpr auto Button_RefreshSellList = 0x328; // UButton*
		constexpr auto Button_RefreshMyList = 0x330; // UButton*
		constexpr auto HorseAuctionSellSlot = 0x338; // UHorseAuctionSellSlot*
		constexpr auto MyHorseSlotSelected = 0x340; // TWeakObjectPtr<UHorseAuctionSellSlot>
		constexpr auto SellHorseSlotSelected = 0x348; // TWeakObjectPtr<UHorseAuctionSellSlot>
		constexpr auto ParentUI = 0x350; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UParticleModuleEventReceiverKillParticles {
		constexpr auto bStopSpawning = 0x40; // char : 1
	}

	namespace n_UParticleModuleRotationOverLifetime {
		constexpr auto RotationOverLife = 0x30; // FRawDistributionFloat
		constexpr auto Scale = 0x60; // char : 1
	}

	namespace n_AMatineeActor {
		constexpr auto MatineeData = 0x310; // UInterpData*
		constexpr auto MatineeControllerName = 0x318; // FName
		constexpr auto PlayRate = 0x320; // float
		constexpr auto bPlayOnLevelLoad = 0x324; // char : 1
		constexpr auto bForceStartPos = 0x324; // char : 1
		constexpr auto ForceStartPosition = 0x328; // float
		constexpr auto bLooping = 0x32c; // char : 1
		constexpr auto bRewindOnPlay = 0x32c; // char : 1
		constexpr auto bNoResetOnRewind = 0x32c; // char : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x32c; // char : 1
		constexpr auto bDisableRadioFilter = 0x32c; // char : 1
		constexpr auto bClientSideOnly = 0x32c; // char : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x32c; // char : 1
		constexpr auto bIsSkippable = 0x32c; // char : 1
		constexpr auto PreferredSplitScreenNum = 0x330; // int32_t
		constexpr auto bDisableMovementInput = 0x334; // char : 1
		constexpr auto bDisableLookAtInput = 0x334; // char : 1
		constexpr auto bHidePlayer = 0x334; // char : 1
		constexpr auto bHideHud = 0x334; // char : 1
		constexpr auto GroupActorInfos = 0x338; // TArray<FInterpGroupActorInfo>
		constexpr auto bShouldShowGore = 0x348; // char : 1
		constexpr auto GroupInst = 0x350; // TArray<UInterpGroupInst*>
		constexpr auto CameraCuts = 0x360; // TArray<FCameraCutInfo>
		constexpr auto bIsPlaying = 0x370; // char : 1
		constexpr auto bReversePlayback = 0x370; // char : 1
		constexpr auto bPaused = 0x370; // char : 1
		constexpr auto bPendingStop = 0x370; // char : 1
		constexpr auto InterpPosition = 0x374; // float
		constexpr auto TotalBlendTime = 0x378; // float
		constexpr auto CurrentBlendTime = 0x37c; // float
		constexpr auto ReplicationForceIsPlaying = 0x388; // char
		constexpr auto OnPlay = 0x390; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x3b0; // FMulticastInlineDelegate
	}

	namespace n_UGuildQuestObjectSlot {
		constexpr auto BGImage = 0x2d8; // UImage*
		constexpr auto QuestObjectNameText = 0x2e0; // UTextBlock*
		constexpr auto QuestObjectDescText = 0x2e8; // UTextBlock*
		constexpr auto NormalTexture = 0x2f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto CompleteTexture = 0x318; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UConversationBtn {
		constexpr auto BtnIndex = 0x268; // int32_t
		constexpr auto RootSizeBox = 0x270; // USizeBox*
		constexpr auto ConvBtn = 0x278; // UButton*
		constexpr auto ConvName = 0x280; // UTextBlock*
		constexpr auto TargetId = 0x288; // FString
		constexpr auto ChatType = 0x298; // int32_t
	}

	namespace n_UWBP_PrivateSessionItem_C {
		constexpr auto ImgDescription = 0x428; // UImage*
		constexpr auto OnSelectDispatch = 0x430; // FMulticastInlineDelegate
	}

	namespace n_ASGGeneralAIController {
		constexpr auto Enum_RiderAttackType = 0x850; // EAIRiderAttackType
		constexpr auto ForceMovingGaitType = 0x851; // EMovingGaitType
		constexpr auto GeneralFleeConfigs = 0x858; // TArray<FAIFleeConfigBase>
	}

	namespace n_ASGStructureNPC {
		constexpr auto AllowNPCClass = 0xf78; // TArray<ABaseCharacter*>
		constexpr auto bUseSeatWeaponMontage = 0xf88; // char : 1
		constexpr auto SeatWeaponMontage = 0xf90; // TArray<FSeatWeaponMontage>
		constexpr auto bMapProduceStructure = 0xfa0; // char : 1
		constexpr auto GetWaterItemTemplates = 0xfa8; // TArray<USGItem*>
		constexpr auto PlayerGetWaterMontage = 0xfb8; // UAnimMontage*
		constexpr auto WaterCooldownTime = 0xfc0; // int32_t
		constexpr auto PlayerGetWaterCoolTime = 0xfc4; // float
		constexpr auto bProduceStructure = 0xfc8; // char : 1
		constexpr auto bNeedNPCForProduce = 0xfc8; // char : 1
		constexpr auto DropWrapperId = 0xfcc; // int32_t
		constexpr auto DropInterval = 0xfd0; // float
		constexpr auto AddSkillExpPerSecond = 0xfd4; // float
		constexpr auto StructureNPCType = 0xfd8; // EStructureNPCType
		constexpr auto HangUpAddExp = 0xfe8; // float
		constexpr auto HangUpAddExpInterval = 0xfec; // float
		constexpr auto HangUpWeaponAddExp = 0xff0; // float [0x8]
	}

	namespace n_UWidgetNavigation {
		constexpr auto Up = 0x28; // FWidgetNavigationData
		constexpr auto Down = 0x4c; // FWidgetNavigationData
		constexpr auto Left = 0x70; // FWidgetNavigationData
		constexpr auto Right = 0x94; // FWidgetNavigationData
		constexpr auto Next = 0xb8; // FWidgetNavigationData
		constexpr auto Previous = 0xdc; // FWidgetNavigationData
	}

	namespace n_UNiagaraDataInterfaceAudioPlayer {
		constexpr auto SoundToPlay = 0x38; // USoundBase*
		constexpr auto Attenuation = 0x40; // USoundAttenuation*
		constexpr auto Concurrency = 0x48; // USoundConcurrency*
		constexpr auto ParameterNames = 0x50; // TArray<FName>
		constexpr auto bLimitPlaysPerTick = 0x60; // bool
		constexpr auto MaxPlaysPerTick = 0x64; // int32_t
		constexpr auto bStopWhenComponentIsDestroyed = 0x68; // bool
	}

	namespace n_UGuildLanguageSlot {
		constexpr auto LanguageTypeText = 0x2d8; // UTextBlock*
		constexpr auto LanguageComboBox = 0x2e0; // UGuildAuthorityComboBox*
	}

	namespace n_UUI_StableSelectTrainer {
		constexpr auto StableSelectTrainerSlotTemplate = 0x2d8; // UStableSelectTrainerSlot*
		constexpr auto MyTrainerGridColumnNum = 0x2e0; // int32_t
		constexpr auto MinWorkTime = 0x2e4; // float
		constexpr auto MaxWorkTime = 0x2e8; // float
		constexpr auto BtnChangWorkTimeMinValue = 0x2ec; // float
		constexpr auto RebornEfficiencyTitleText = 0x2f0; // FText
		constexpr auto TameEfficiencyTitleText = 0x308; // FText
		constexpr auto CapitalTypeBrush = 0x320; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto LowTrainerSlot = 0x3e8; // UStableSelectTrainerSlot*
		constexpr auto MiddleTrainerSlot = 0x3f0; // UStableSelectTrainerSlot*
		constexpr auto HighTrainerSlot = 0x3f8; // UStableSelectTrainerSlot*
		constexpr auto MyTrainerGridPanel = 0x400; // UUniformGridPanel*
		constexpr auto EfficiencyTitle = 0x408; // UTextBlock*
		constexpr auto EfficiencyText = 0x410; // UTextBlock*
		constexpr auto WorkTimeText = 0x418; // UTextBlock*
		constexpr auto ReduceWorkTimeBtn = 0x420; // UButton*
		constexpr auto WorkTimeSlider = 0x428; // USlider*
		constexpr auto WorkTimePB = 0x430; // UProgressBar*
		constexpr auto AddWorkTimeBtn = 0x438; // UButton*
		constexpr auto CapitalTypeImg = 0x440; // UImage*
		constexpr auto CapitalText = 0x448; // UTextBlock*
		constexpr auto CancelBtn = 0x450; // UButton*
		constexpr auto ConfirmBtn = 0x458; // UButton*
	}

	namespace n_UAltarGeneralSlot {
		constexpr auto HeadIcon = 0x260; // UImage*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto NameText = 0x270; // UTextBlock*
		constexpr auto StatusText = 0x278; // UTextBlock*
		constexpr auto LifeCountText = 0x280; // UTextBlock*
		constexpr auto LoyaltyText = 0x288; // UTextBlock*
		constexpr auto RebornTimeText = 0x290; // UTextBlock*
		constexpr auto bg = 0x298; // UImage*
		constexpr auto ReduceRebornTimeButton = 0x2a0; // UButton*
		constexpr auto StopRestButton = 0x2a8; // UButton*
		constexpr auto ParentUI = 0x2b0; // USGUI*
		constexpr auto ChunkGeneralData = 0x2b8; // FBaseGeneralChunkData
		constexpr auto RestColor = 0x3a0; // FLinearColor
		constexpr auto NoLifeCountColor = 0x3b0; // FLinearColor
		constexpr auto icon = 0x3c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectTexture = 0x3e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalTexture = 0x410; // TSoftObjectPtr<UTexture2D>
		constexpr auto AltarDeathStatusText = 0x438; // FText
		constexpr auto AltarReborningStatusText = 0x450; // FText
		constexpr auto AltarNoLifeCountStatusText = 0x468; // FText
		constexpr auto AltarRestStatusText = 0x480; // FText
		constexpr auto ChunkGuid = 0x498; // FGuid
	}

	namespace n_UN_SetPriorityPanel {
		constexpr auto BindItemSlot = 0x260; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto WidgetOffset = 0x268; // FVector2D
		constexpr auto HighButton = 0x270; // UButton*
		constexpr auto MiddleButton = 0x278; // UButton*
		constexpr auto LowButton = 0x280; // UButton*
		constexpr auto CleanButton = 0x288; // UButton*
		constexpr auto BindItem = 0x290; // TWeakObjectPtr<USGItem>
		constexpr auto PlayerController = 0x298; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto PlayerCharacter = 0x2a0; // TWeakObjectPtr<ASGPlayerCharacter>
	}

	namespace n_UForceFeedbackEffect {
		constexpr auto ChannelDetails = 0x28; // TArray<FForceFeedbackChannelDetails>
		constexpr auto Duration = 0x38; // float
	}

	namespace n_UGameplayEffectExecutionCalculation {
		constexpr auto bRequiresPassedInTags = 0x38; // bool
	}

	namespace n_UNiagaraDataInterfaceGrid2D {
		constexpr auto NumCellsX = 0xd8; // int32_t
		constexpr auto NumCellsY = 0xdc; // int32_t
		constexpr auto NumCellsMaxAxis = 0xe0; // int32_t
		constexpr auto NumAttributes = 0xe4; // int32_t
		constexpr auto SetGridFromMaxAxis = 0xe8; // bool
		constexpr auto WorldBBoxSize = 0xec; // FVector2D
	}

	namespace n_UEnvQueryGenerator_Donut {
		constexpr auto InnerRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto OuterRadius = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfRings = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointsPerRing = 0x128; // FAIDataProviderIntValue
		constexpr auto ArcDirection = 0x160; // FEnvDirection
		constexpr auto ArcAngle = 0x180; // FAIDataProviderFloatValue
		constexpr auto bUseSpiralPattern = 0x1b8; // bool
		constexpr auto Center = 0x1c0; // UEnvQueryContext*
		constexpr auto bDefineArc = 0x1c8; // char : 1
	}

	namespace n_USoundNode {
		constexpr auto ChildNodes = 0x28; // TArray<USoundNode*>
	}

	namespace n_UBTTask_ClearFocus {
		constexpr auto bUpdateControlRotationOnFormation = 0xc0; // char : 1
	}

	namespace n_UVariantSet {
		constexpr auto DisplayText = 0x28; // FText
		constexpr auto bExpanded = 0x58; // bool
		constexpr auto Variants = 0x60; // TArray<UVariant*>
		constexpr auto Thumbnail = 0x70; // UTexture2D*
	}

	namespace n_URectLightComponent {
		constexpr auto SourceWidth = 0x350; // float
		constexpr auto SourceHeight = 0x354; // float
		constexpr auto BarnDoorAngle = 0x358; // float
		constexpr auto BarnDoorLength = 0x35c; // float
		constexpr auto SourceTexture = 0x360; // UTexture*
	}

	namespace n_USubmixEffectFlexiverbPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectFlexiverbSettings
	}

	namespace n_UMaterialExpressionSingleLayerWaterMaterialOutput {
		constexpr auto ScatteringCoefficients = 0x40; // FExpressionInput
		constexpr auto AbsorptionCoefficients = 0x54; // FExpressionInput
		constexpr auto PhaseG = 0x68; // FExpressionInput
		constexpr auto ColorScaleBehindWater = 0x7c; // FExpressionInput
	}

	namespace n_UTattooAddLayerButton {
		constexpr auto BtnBg = 0x260; // UButton*
	}

	namespace n_UUI_N_ShopItemRowHot {
		constexpr auto ItemHbox = 0x260; // UHorizontalBox*
		constexpr auto ItemHboxShotPadding = 0x268; // FMargin
	}

	namespace n_UUI_GuildApplyList {
		constexpr auto ApplyListPanel = 0x2d8; // UScrollBox*
		constexpr auto PrePageDataButton = 0x2e0; // UDataButton*
		constexpr auto NextPageDataButton = 0x2e8; // UDataButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto ExitButton = 0x2f8; // UButton*
		constexpr auto AllowJoinCheckBox = 0x300; // UCheckBox*
		constexpr auto NameTitleSlot = 0x308; // USortableTitleSlot*
		constexpr auto LevelTitleSlot = 0x310; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x318; // USortableTitleSlot*
		constexpr auto ApplyNumPerPage = 0x320; // int32_t
		constexpr auto GuildApplySlotClass = 0x328; // UGuildApplySlot*
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2D {
		constexpr auto Size = 0xd8; // FIntPoint
		constexpr auto OverrideRenderTargetFormat = 0xe0; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe1; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2D*>
	}

	namespace n_UChunkDataObject {
		constexpr auto ChunkDataObjectInfo = 0x28; // TMap<FGuid, FChunkDataObjectInfo>
	}

	namespace n_UNN_CraftPerkTips {
		constexpr auto NameText = 0x288; // UTextBlock*
		constexpr auto LockText = 0x290; // UTextBlock*
		constexpr auto RequireStructureCanvas = 0x298; // UCanvasPanel*
		constexpr auto RequireStructureVertical = 0x2a0; // UVerticalBox*
		constexpr auto TbWeaponType = 0x2a8; // UTextBlock*
		constexpr auto CraftLockText = 0x2b0; // FText
		constexpr auto CraftUnLockText = 0x2c8; // FText
		constexpr auto DesText = 0x2e0; // UTextBlock*
		constexpr auto BindCraftPerk = 0x2e8; // TWeakObjectPtr<USGCraftPerk>
		constexpr auto CraftRecipeText = 0x2f0; // FText
		constexpr auto DescriptionText = 0x308; // FText
		constexpr auto WeaponSkillTypeText = 0x320; // FText [0x8]
		constexpr auto WeaponTypeText = 0x3e0; // FText [0xd]
		constexpr auto AmmoTypeText = 0x518; // FText [0xd]
		constexpr auto ImageNameTipsTemplate = 0x650; // USGImageNameTips*
	}

	namespace n_UWorldRankButtonSlot {
		constexpr auto RankButton = 0x260; // UButton*
		constexpr auto RankNameTextBlock = 0x268; // UTextBlock*
		constexpr auto RootRankUI = 0x298; // UUI_WorldRank*
	}

	namespace n_USGGameDataAllNpc {
		constexpr auto CheatNPC = 0x28; // TArray<ABaseCharacter*>
	}

	namespace n_UUI_GenericMultiItemDialog {
		constexpr auto BindGenericMultiItemParams = 0x2e8; // FGenericMultiItemParam
		constexpr auto AcceptButton = 0x350; // UButton*
		constexpr auto CancelButton = 0x358; // UButton*
		constexpr auto TitleTextBlock = 0x360; // UTextBlock*
		constexpr auto DescriptionText = 0x368; // UTextBlock*
		constexpr auto AcceptButtonTextBlock = 0x370; // UTextBlock*
		constexpr auto ItemCheckPanel = 0x378; // UCanvasPanel*
		constexpr auto ItemGrid = 0x380; // UUniformGridPanel*
		constexpr auto ItemCheckScrollBox = 0x388; // UScrollBox*
		constexpr auto CurRowCounts = 0x390; // int32_t
		constexpr auto CheckItemTemplate = 0x398; // UGenericMultiItemSlot*
		constexpr auto CheckItemSlotList = 0x3a0; // TArray<UGenericMultiItemSlot*>
		constexpr auto MultiItems = 0x3b0; // TArray<FGenericMultiItem>
		constexpr auto ItemFilterType = 0x3c0; // EMultiChooseItemsType
		constexpr auto TitleText = 0x3c8; // FText [0x4]
		constexpr auto DesText = 0x428; // FText [0x4]
		constexpr auto EmptyDesText = 0x488; // FText [0x4]
	}

	namespace n_UEnvQueryGenerator {
		constexpr auto OptionName = 0x30; // FString
		constexpr auto ItemType = 0x40; // UEnvQueryItemType*
		constexpr auto bAutoSortTests = 0x48; // char : 1
	}

	namespace n_ALuminAROrigin {
		constexpr auto MRMeshComponent = 0x310; // UMRMeshComponent*
		constexpr auto PlaneSurfaceMaterial = 0x318; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x320; // UMaterialInterface*
	}

	namespace n_UMeshAnalysisProperties {
		constexpr auto SurfaceArea = 0x60; // FString
		constexpr auto Volume = 0x70; // FString
	}

	namespace n_UInteractiveGizmo {
		constexpr auto InputBehaviors = 0x30; // UInputBehaviorSet*
	}

	namespace n_UN_ShortCutPanel {
		constexpr auto ShortCutBox = 0x260; // UHorizontalBox*
		constexpr auto VehicleShortCutPanel = 0x268; // UCanvasPanel*
		constexpr auto VehicleShortCutSlot = 0x270; // UVehicleShortCutSlot*
		constexpr auto PageUp = 0x278; // UButton*
		constexpr auto PageDown = 0x280; // UButton*
		constexpr auto PageText = 0x288; // UTextBlock*
		constexpr auto RootSGUI = 0x290; // USGUI*
		constexpr auto BindCharacter = 0x298; // TWeakObjectPtr<ASGCharacter>
		constexpr auto BindInventoryComponent = 0x2a0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto InventorySlotList = 0x2a8; // TArray<UN_ShortCutSlot*>
		constexpr auto ShortCutSlotClass = 0x2b8; // UN_ShortCutSlot*
		constexpr auto MainHandWeaponIndex = 0x2c0; // int32_t
		constexpr auto OffHandWeaponIndex = 0x2c4; // int32_t
		constexpr auto CurPage = 0x2cc; // int32_t
		constexpr auto WeightProgress = 0x2d0; // UProgressBar*
		constexpr auto WeightText = 0x2d8; // UTextBlock*
	}

	namespace n_UCurveControlPointsMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto PreviewGeometryActor = 0x4e8; // APreviewGeometryActor*
		constexpr auto DrawnControlPoints = 0x4f0; // UPointSetComponent*
		constexpr auto DrawnControlSegments = 0x4f8; // ULineSetComponent*
		constexpr auto PreviewPoint = 0x500; // UPointSetComponent*
		constexpr auto PreviewSegment = 0x508; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x588; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x590; // UTransformGizmo*
	}

	namespace n_ABP_HorseMC_Melee2h_C {
		constexpr auto UberGraphFrame = 0x628; // FPointerToUberGraphFrame
		constexpr auto Weapon_2H_Sabercutter_001 = 0x630; // UStaticMeshComponent*
		constexpr auto MenuCharacterAnimInstance = 0x638; // UABP_MenuCharacter_C*
		constexpr auto HumanAnimation = 0x640; // UAnimSequence*
		constexpr auto HorseAnimation = 0x648; // UAnimSequence*
		constexpr auto MenuHorseAnimInstance = 0x650; // UABP_MenuHorse_C*
		constexpr auto Left Reins Enabled = 0x658; // bool
		constexpr auto Right Reins Enabled = 0x659; // bool
	}

	namespace n_UModEntryData {
		constexpr auto modDir = 0x28; // FString
		constexpr auto modName = 0x38; // FString
		constexpr auto modVersion = 0x48; // FString
		constexpr auto modGUID = 0x58; // FString
	}

	namespace n_UGranularSynth {
		constexpr auto GranulatedSoundWave = 0x6d0; // USoundWave*
	}

	namespace n_UInterpTrackInstFloatAnimBPParam {
		constexpr auto AnimScriptInstance = 0x28; // UAnimInstance*
		constexpr auto ResetFloat = 0x30; // float
	}

	namespace n_UEnvQueryTest_Trace {
		constexpr auto TraceData = 0x1f8; // FEnvTraceData
		constexpr auto TraceFromContext = 0x228; // FAIDataProviderBoolValue
		constexpr auto ItemHeightOffset = 0x260; // FAIDataProviderFloatValue
		constexpr auto ContextHeightOffset = 0x298; // FAIDataProviderFloatValue
		constexpr auto Context = 0x2d0; // UEnvQueryContext*
	}

	namespace n_UNiagaraDataInterfaceStaticMesh {
		constexpr auto SourceMode = 0x38; // ENDIStaticMesh_SourceMode
		constexpr auto DefaultMesh = 0x40; // UStaticMesh*
		constexpr auto Source = 0x48; // AActor*
		constexpr auto SourceComponent = 0x50; // UStaticMeshComponent*
		constexpr auto SectionFilter = 0x58; // FNDIStaticMeshSectionFilter
		constexpr auto bUsePhysicsBodyVelocity = 0x68; // bool
		constexpr auto FilteredSockets = 0x70; // TArray<FName>
	}

	namespace n_ASGStructureHorseAttachment {
		constexpr auto SkeletalMesh = 0xf70; // USkeletalMeshComponent*
		constexpr auto bCanUseForHorse = 0xf78; // char : 1
		constexpr auto AttachPlatformItem = 0xf80; // USGItem*
		constexpr auto SearchCharacterInterval = 0xf88; // float
		constexpr auto SearchCharacterRadius = 0xf8c; // float
		constexpr auto AttachHorseSocketName = 0xf90; // FName
		constexpr auto HorseMoveGaitSetting = 0xfb0; // TMap<EAnimalsMovingGaitType, FCardinalDirectionSpeedConfig>
	}

	namespace n_UMaterialExpressionVolumetricAdvancedMaterialOutput {
		constexpr auto PhaseG = 0x40; // FExpressionInput
		constexpr auto PhaseG2 = 0x54; // FExpressionInput
		constexpr auto PhaseBlend = 0x68; // FExpressionInput
		constexpr auto MultiScatteringContribution = 0x7c; // FExpressionInput
		constexpr auto MultiScatteringOcclusion = 0x90; // FExpressionInput
		constexpr auto MultiScatteringEccentricity = 0xa4; // FExpressionInput
		constexpr auto ConservativeDensity = 0xb8; // FExpressionInput
		constexpr auto ConstPhaseG = 0xcc; // float
		constexpr auto ConstPhaseG2 = 0xd0; // float
		constexpr auto ConstPhaseBlend = 0xd4; // float
		constexpr auto PerSamplePhaseEvaluation = 0xd8; // bool
		constexpr auto MultiScatteringApproximationOctaveCount = 0xdc; // uint32_t
		constexpr auto ConstMultiScatteringContribution = 0xe0; // float
		constexpr auto ConstMultiScatteringOcclusion = 0xe4; // float
		constexpr auto ConstMultiScatteringEccentricity = 0xe8; // float
		constexpr auto bGroundContribution = 0xec; // bool
		constexpr auto bGrayScaleMaterial = 0xed; // bool
		constexpr auto bRayMarchVolumeShadow = 0xee; // bool
	}

	namespace n_UBTTask_SetTagCooldown {
		constexpr auto CooldownTag = 0x70; // FGameplayTag
		constexpr auto bAddToExistingDuration = 0x78; // bool
		constexpr auto CooldownDuration = 0x7c; // float
	}

	namespace n_UParticleModuleVelocity {
		constexpr auto StartVelocity = 0x38; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x80; // FRawDistributionFloat
	}

	namespace n_UNiagaraLightRendererProperties {
		constexpr auto bUseInverseSquaredFalloff = 0x80; // char : 1
		constexpr auto bAffectsTranslucency = 0x80; // char : 1
		constexpr auto RadiusScale = 0x84; // float
		constexpr auto ColorAdd = 0x88; // FVector
		constexpr auto LightRenderingEnabledBinding = 0x98; // FNiagaraVariableAttributeBinding
		constexpr auto LightExponentBinding = 0xf0; // FNiagaraVariableAttributeBinding
		constexpr auto PositionBinding = 0x148; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x1a0; // FNiagaraVariableAttributeBinding
		constexpr auto RadiusBinding = 0x1f8; // FNiagaraVariableAttributeBinding
		constexpr auto VolumetricScatteringBinding = 0x250; // FNiagaraVariableAttributeBinding
	}

	namespace n_UStructureCropLandInfoHUD {
		constexpr auto WaterText = 0x360; // UStructureInfoHUDSlot*
		constexpr auto LooseRatioText = 0x368; // UStructureInfoHUDSlot*
		constexpr auto FertilizerBucketText = 0x370; // UStructureInfoHUDSlot*
		constexpr auto PFertilizerText = 0x378; // UStructureInfoHUDSlot*
		constexpr auto KFertilizerText = 0x380; // UStructureInfoHUDSlot*
		constexpr auto ApplyFertilizerCountText = 0x388; // UStructureInfoHUDSlot*
		constexpr auto CanPlantText = 0x390; // UStructureInfoHUDSlot*
		constexpr auto CropRootTipsText = 0x398; // UStructureInfoHUDSlot*
		constexpr auto GrowthRatiosText = 0x3a0; // UStructureInfoHUDSlot*
		constexpr auto BindStructureLandBase = 0x3a8; // TWeakObjectPtr<ASGStructureLandBase>
		constexpr auto BindStructureCropLand = 0x3b0; // TWeakObjectPtr<ASGStructureCropLand>
		constexpr auto BindStructureSaltLand = 0x3b8; // TWeakObjectPtr<ASGStructureSaltLand>
	}

	namespace n_UDynamicMeshSculptTool {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto SculptProperties = 0xc8; // UBrushSculptProperties*
		constexpr auto SculptMaxBrushProperties = 0xd0; // USculptMaxBrushProperties*
		constexpr auto KelvinBrushProperties = 0xd8; // UKelvinBrushProperties*
		constexpr auto RemeshProperties = 0xe0; // UBrushRemeshProperties*
		constexpr auto GizmoProperties = 0xe8; // UFixedPlaneBrushProperties*
		constexpr auto ViewProperties = 0xf0; // UMeshEditingViewProperties*
		constexpr auto BrushIndicator = 0x130; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x138; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x140; // UPreviewMesh*
		constexpr auto DynamicMeshComponent = 0x148; // UOctreeDynamicMeshComponent*
		constexpr auto ActiveOverrideMaterial = 0x150; // UMaterialInstanceDynamic*
		constexpr auto PlaneTransformGizmo = 0xc50; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xc58; // UTransformProxy*
	}

	namespace n_UAISense_Sight {
		constexpr auto MaxTracesPerTick = 0x148; // int32_t
		constexpr auto MinQueriesPerTimeSliceCheck = 0x14c; // int32_t
		constexpr auto MaxTimeSlicePerTick = 0x150; // double
		constexpr auto HighImportanceQueryDistanceThreshold = 0x158; // float
		constexpr auto MaxQueryImportance = 0x160; // float
		constexpr auto SightLimitQueryImportance = 0x164; // float
	}

	namespace n_USoundGroups {
		constexpr auto SoundGroupProfiles = 0x28; // TArray<FSoundGroup>
	}

	namespace n_UTemplateSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto BoundActorClass = 0x68; // TSoftClassPtr<UObject>
		constexpr auto BoundPreviewActor = 0x90; // TSoftObjectPtr<AActor>
		constexpr auto BoundActorComponents = 0xb8; // TMap<FGuid, FName>
	}

	namespace n_UUI_ColorSelector {
		constexpr auto ItemNumPerPage = 0x260; // int32_t
		constexpr auto ItemSizeOffset = 0x264; // float
		constexpr auto ItemInterpSpeed = 0x268; // float
		constexpr auto ItemTemplate = 0x270; // UUI_ColorItem*
		constexpr auto MainScrollBox = 0x288; // UScrollBox*
		constexpr auto UGPColor = 0x290; // UUniformGridPanel*
		constexpr auto TbCurPage = 0x298; // UTextBlock*
		constexpr auto TbMaxPage = 0x2a0; // UTextBlock*
		constexpr auto BtnLastPage = 0x2a8; // UButton*
		constexpr auto BtnNextPage = 0x2b0; // UButton*
		constexpr auto SelectColorItem = 0x2b8; // UUI_ColorItem*
		constexpr auto ColorItems = 0x2c0; // TArray<UUI_ColorItem*>
	}

	namespace n_UAnimSkill_VaultingData {
		constexpr auto Struct_VaultingTraceSettings = 0x30; // FVaultingTraceSettings
		constexpr auto MaxAngle = 0x1b8; // float
		constexpr auto MaxRightOffset = 0x1bc; // float
		constexpr auto bCloseCollision = 0x1c0; // bool
		constexpr auto bIgnoreCurrentFloor = 0x1c1; // bool
		constexpr auto bEnableReverse = 0x1c2; // bool
		constexpr auto ReverseCoolingTime = 0x1c4; // float
		constexpr auto InertiaDistance = 0x1c8; // float
		constexpr auto VaultingHeightParams = 0x1d0; // TArray<FVaultingHeightParams>
		constexpr auto VaultingHeightParams_Motion = 0x1e0; // TArray<FVaultingHeightParams>
		constexpr auto SwimmingHeightParams = 0x1f0; // TArray<FVaultingHeightParams>
		constexpr auto VaultingParams = 0x200; // TArray<FVaultingParams>
	}

	namespace n_UBakeTransformToolProperties {
		constexpr auto bBakeRotation = 0x60; // bool
		constexpr auto BakeScale = 0x61; // EBakeScaleMethod
		constexpr auto bRecenterPivot = 0x62; // bool
	}

	namespace n_UDestroySessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_AFlockFish {
		constexpr auto FlockFishStateType = 0x370; // EFlockFishStateType
		constexpr auto FishInteractionSphere = 0x380; // USphereComponent*
		constexpr auto EnemyTypes = 0x388; // TArray<UObject*>
		constexpr auto ChaseHookDist = 0x398; // float
		constexpr auto FollowDist = 0x39c; // float
		constexpr auto Speed = 0x3a0; // float
		constexpr auto MaxSpeed = 0x3a4; // float
		constexpr auto TurnSpeed = 0x3a8; // float
		constexpr auto ChangeTargetFrequency = 0x3ac; // float
		constexpr auto TungerResetTime = 0x3b0; // float
		constexpr auto HideResetTime = 0x3b4; // float
		constexpr auto DistBehindSpeedUpRange = 0x3b8; // float
		constexpr auto SeperationDistanceMultiplier = 0x3bc; // float
		constexpr auto AlarmFriendsToFlee = 0x3c0; // bool
		constexpr auto FleeDistanceMultiplier = 0x3c4; // float
		constexpr auto FleeAccelerationMultiplier = 0x3c8; // float
		constexpr auto StruggleAccelerationMultiplier = 0x3cc; // float
		constexpr auto SeekDecelerationMultiplier = 0x3d0; // float
		constexpr auto AvoidForceMultiplier = 0x3d4; // float
		constexpr auto AvoidanceForce = 0x3d8; // float
		constexpr auto OriginLoc = 0x3dc; // FVector
		constexpr auto OriginRot = 0x3e8; // FRotator
		constexpr auto BoxExtent = 0x3f4; // FVector
		constexpr auto CustomZSeekMin = 0x400; // float
		constexpr auto CustomZSeekMax = 0x404; // float
		constexpr auto NumNeighborsToEvaluate = 0x408; // float
		constexpr auto UpdateEveryTick = 0x40c; // float
		constexpr auto DebugMode = 0x420; // bool
	}

	namespace n_USoundWave {
		constexpr auto CompressionQuality = 0x1b8; // int32_t
		constexpr auto StreamingPriority = 0x1bc; // int32_t
		constexpr auto SampleRateQuality = 0x1c0; // ESoundwaveSampleRateSettings
		constexpr auto SoundGroup = 0x1c2; // ESoundGroup
		constexpr auto bLooping = 0x1c3; // char : 1
		constexpr auto bStreaming = 0x1c3; // char : 1
		constexpr auto bSeekableStreaming = 0x1c3; // char : 1
		constexpr auto LoadingBehavior = 0x1c4; // ESoundWaveLoadingBehavior
		constexpr auto bMature = 0x1c5; // char : 1
		constexpr auto bManualWordWrap = 0x1c5; // char : 1
		constexpr auto bSingleLine = 0x1c6; // char : 1
		constexpr auto bIsAmbisonics = 0x1c6; // char : 1
		constexpr auto FrequenciesToAnalyze = 0x1c8; // TArray<float>
		constexpr auto CookedSpectralTimeData = 0x1d8; // TArray<FSoundWaveSpectralTimeData>
		constexpr auto CookedEnvelopeTimeData = 0x1e8; // TArray<FSoundWaveEnvelopeTimeData>
		constexpr auto InitialChunkSize = 0x1f8; // int32_t
		constexpr auto SpokenText = 0x240; // FString
		constexpr auto SubtitlePriority = 0x250; // float
		constexpr auto Volume = 0x254; // float
		constexpr auto Pitch = 0x258; // float
		constexpr auto NumChannels = 0x25c; // int32_t
		constexpr auto SampleRate = 0x260; // int32_t
		constexpr auto Subtitles = 0x270; // TArray<FSubtitleCue>
		constexpr auto Curves = 0x280; // UCurveTable*
		constexpr auto InternalCurves = 0x288; // UCurveTable*
	}

	namespace n_USphereComponent {
		constexpr auto SphereRadius = 0x4a0; // float
	}

	namespace n_UGuildApplySlot {
		constexpr auto ApplyNameText = 0x2d8; // UTextBlock*
		constexpr auto ApplyLevelText = 0x2e0; // UTextBlock*
		constexpr auto ApplyVerifyText = 0x2e8; // UTextBlock*
		constexpr auto AgreeDataButton = 0x2f0; // UDataButton*
		constexpr auto RejectDataButton = 0x2f8; // UDataButton*
	}

	namespace n_UUI_TransportGeneralItem {
		constexpr auto ButtonDisableStyle = 0x260; // FButtonStyle
		constexpr auto TextDisableColor = 0x4d8; // FSlateColor
		constexpr auto TextNormalColor = 0x500; // FSlateColor
		constexpr auto ButtonCheckedStyle = 0x528; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x7a0; // FButtonStyle
		constexpr auto SaveTimeProgress = 0xa18; // UProgressBar*
		constexpr auto SaveTimeTextBlock = 0xa20; // UTextBlock*
		constexpr auto RootUI = 0xa38; // UUserWidget*
		constexpr auto BindTransportMachineGeneral = 0xa40; // UUI_TransportMachineGeneral*
		constexpr auto BtSelected = 0xa48; // UButton*
		constexpr auto TbNameName = 0xa50; // UTextBlock*
		constexpr auto TbLevel = 0xa58; // UTextBlock*
		constexpr auto TbStatue = 0xa60; // UTextBlock*
	}

	namespace n_UAttributeSlot {
		constexpr auto BindCharacter = 0x260; // TWeakObjectPtr<ASGCharacter>
		constexpr auto AttributeType = 0x268; // EAttributeType
		constexpr auto AttributeProgressBrushBg = 0x270; // FSlateBrush [0xa]
		constexpr auto AttributeProgressBrush = 0x7c0; // FSlateBrush [0xa]
		constexpr auto AttributeText = 0xd10; // FText [0xa]
		constexpr auto AttributeProgress = 0xe00; // UProgressBar*
		constexpr auto ValueText = 0xe08; // UTextBlock*
		constexpr auto TitleText = 0xe10; // UTextBlock*
	}

	namespace n_UCameraModifier {
		constexpr auto bDebug = 0x28; // char : 1
		constexpr auto bExclusive = 0x28; // char : 1
		constexpr auto Priority = 0x2c; // char
		constexpr auto CameraOwner = 0x30; // APlayerCameraManager*
		constexpr auto AlphaInTime = 0x38; // float
		constexpr auto AlphaOutTime = 0x3c; // float
		constexpr auto Alpha = 0x40; // float
	}

	namespace n_UInterpTrackColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMaterialExpressionArctangent2 {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UPreviewMeshCollection {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto SkeletalMeshes = 0x40; // TArray<FPreviewMeshCollectionEntry>
	}

	namespace n_UAbilityTask_NetworkSyncPoint {
		constexpr auto OnSync = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_DoSleep {
		constexpr auto FarBrakingDistance = 0xd0; // float
		constexpr auto ProjectToNavInterval = 0xd4; // float
		constexpr auto LastProjectToNavTime = 0xe0; // float
		constexpr auto DesiredLocationToNavigation = 0xe4; // FVector
	}

	namespace n_USelectWidgetSlot {
		constexpr auto Image0 = 0x2e8; // UImage*
		constexpr auto Image1 = 0x2f0; // UImage*
		constexpr auto Image2 = 0x2f8; // UImage*
		constexpr auto UnlockImage = 0x300; // UImage*
		constexpr auto OutBorder = 0x308; // UBorder*
		constexpr auto OutBorderNormalTexture = 0x310; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorderHoverTexture = 0x338; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorderSelectTexture = 0x360; // TSoftObjectPtr<UTexture2D>
		constexpr auto bUseTooltips = 0x388; // char : 1
		constexpr auto TooltipsClass = 0x390; // USGToolTipWidget*
		constexpr auto RootSGUI = 0x398; // USGUI*
		constexpr auto BindInventory = 0x3a0; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_USplineMeshComponent {
		constexpr auto SplineParams = 0x520; // FSplineMeshParams
		constexpr auto SplineUpDir = 0x578; // FVector
		constexpr auto SplineBoundaryMin = 0x584; // float
		constexpr auto CachedMeshBodySetupGuid = 0x588; // FGuid
		constexpr auto BodySetup = 0x598; // UBodySetup*
		constexpr auto SplineBoundaryMax = 0x5a0; // float
		constexpr auto bAllowSplineEditingPerInstance = 0x5a4; // char : 1
		constexpr auto bSmoothInterpRollScale = 0x5a4; // char : 1
		constexpr auto bMeshDirty = 0x5a4; // char : 1
		constexpr auto ForwardAxis = 0x5a5; // ESplineMeshAxis
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x5a8; // float
	}

	namespace n_ASGStructureSaltCrop {
		constexpr auto WaterConsumeTotal = 0xbe0; // float
	}

	namespace n_UMaterialExpressionSpriteTextureSampler {
		constexpr auto bSampleAdditionalTextures = 0x80; // bool
		constexpr auto AdditionalSlotIndex = 0x84; // int32_t
		constexpr auto SlotDisplayName = 0x88; // FText
	}

	namespace n_UMaterialExpressionParameter {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
	}

	namespace n_UUVLayoutPreview {
		constexpr auto Settings = 0x28; // UUVLayoutPreviewProperties*
		constexpr auto PreviewMesh = 0x30; // UPreviewMesh*
		constexpr auto TriangleComponent = 0x38; // UTriangleSetComponent*
		constexpr auto bShowBackingRectangle = 0x40; // bool
		constexpr auto BackingRectangleMaterial = 0x48; // UMaterialInterface*
	}

	namespace n_UBTTask_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto TickInterval = 0x80; // FIntervalCountdown
		constexpr auto bShowPropertyDetails = 0xa0; // char : 1
	}

	namespace n_USourceEffectChorusPreset {
		constexpr auto Settings = 0x108; // FSourceEffectChorusSettings
	}

	namespace n_UAISense_Hearing {
		constexpr auto NoiseEvents = 0x80; // TArray<FAINoiseEvent>
		constexpr auto SpeedOfSoundSq = 0x90; // float
	}

	namespace n_UCameraRadioButton {
		constexpr auto CameraLevel = 0x540; // int32_t
		constexpr auto CameraTarget = 0x544; // FName
		constexpr auto BodyRotator = 0x54c; // FRotator
	}

	namespace n_UEquipAdditive_AnimNotify {
		constexpr auto PreviewAdditiveSoundID = 0x38; // FName
	}

	namespace n_UMiniMapMarkItem {
		constexpr auto ImgMarkIcon = 0x280; // UImage*
		constexpr auto BtnBg = 0x288; // UButton*
		constexpr auto ImgSelected = 0x290; // UImage*
	}

	namespace n_UNoviceRespawnPanel {
		constexpr auto NoviceRespawnButton = 0x260; // UButton*
		constexpr auto TbNoviceCountDown = 0x268; // UTextBlock*
		constexpr auto HbNoviceCountDown = 0x270; // UHorizontalBox*
	}

	namespace n_UDeformMeshPolygonsTransformProperties {
		constexpr auto DeformationStrategy = 0x60; // EGroupTopologyDeformationStrategy
		constexpr auto TransformMode = 0x61; // EQuickTransformerMode
		constexpr auto bSelectFaces = 0x62; // bool
		constexpr auto bSelectEdges = 0x63; // bool
		constexpr auto bSelectVertices = 0x64; // bool
		constexpr auto bSnapToWorldGrid = 0x65; // bool
		constexpr auto bShowWireframe = 0x66; // bool
		constexpr auto SelectedWeightScheme = 0x68; // EWeightScheme
		constexpr auto HandleWeight = 0x70; // double
		constexpr auto bPostFixHandles = 0x78; // bool
	}

	namespace n_USGExploitComponent {
		constexpr auto Level = 0xc0; // int32_t
		constexpr auto bInteractiveExploit = 0xc4; // char : 1
		constexpr auto bAllowExploitHealthScale = 0xc4; // char : 1
		constexpr auto ExploitCompType = 0xc5; // EExploitCompType
		constexpr auto GiveItemHealthInterval = 0xc8; // float
		constexpr auto MaxExploitHealth = 0xcc; // float
		constexpr auto CurrentExploitHealth = 0xd0; // float
		constexpr auto InteractiveDamageAmount = 0xd4; // float
		constexpr auto InteractiveType = 0xd8; // EExploitInteractiveType
		constexpr auto InteractiveDamageTypeClass = 0xe0; // UDamageType*
		constexpr auto ExploitDamageEntries = 0xe8; // TArray<FDamageExploitEntry>
		constexpr auto EmbededFoliageHISM = 0x110; // USGFoliageInstancedStaticMeshComponent*
		constexpr auto bEnableRecover = 0x118; // char : 1
		constexpr auto MinRecoverTime = 0x11c; // float
		constexpr auto MaxRecoverTime = 0x120; // float
		constexpr auto ConsumeExtraTimeGap = 0x124; // float
		constexpr auto ConsumeExtraTimePower = 0x128; // float
		constexpr auto ConsumeExtraTimeScale = 0x12c; // float
		constexpr auto ReduceExtraTimeSpeed = 0x130; // float
		constexpr auto RecoverPlayerCheckDistance = 0x134; // float
		constexpr auto RecoverStructureCheckDistance = 0x138; // float
		constexpr auto ExploitSubType = 0x13c; // EExploitSubType
		constexpr auto bSpawnSEOnDestroy = 0x13d; // char : 1
		constexpr auto SEProbability = 0x140; // float
		constexpr auto SEActorClass = 0x148; // AActor*
		constexpr auto PlaceOffest = 0x150; // FVector
	}

	namespace n_USGGameDataGuild {
		constexpr auto GuildMemberLevelText = 0x28; // FText [0x6]
		constexpr auto GuildOperateAuthTypeText = 0xb8; // FText [0x1a]
		constexpr auto GuildOperateAuthTipsText = 0x328; // FText [0x1a]
		constexpr auto GuildLanguageText = 0x598; // FText [0x4]
		constexpr auto GuildStructureProssessAuthTypeText = 0x5f8; // FText [0x3]
		constexpr auto ImageMaterialInst = 0x640; // UMaterialInstance*
		constexpr auto GuildImageLayerTable = 0x648; // UDataTable* [0x7]
		constexpr auto GuildImageColorTable = 0x680; // UDataTable*
		constexpr auto GuildKPIItemsTable = 0x688; // UDataTable*
		constexpr auto GuildLanguagesTable = 0x6a0; // UDataTable*
		constexpr auto GuildShopItemsTable = 0x8b8; // UDataTable*
		constexpr auto ShopItems = 0x8d0; // TArray<FGuildShopItemData>
		constexpr auto GuildStructureShowTable = 0x8e0; // UDataTable*
		constexpr auto SignItems = 0x8f8; // TArray<FGuildAwardItem>
		constexpr auto OnlineItems = 0x908; // TArray<FGuildOnlineAwardData>
		constexpr auto MaxDailyQuests = 0x918; // int32_t
		constexpr auto CreateGuildSelfTips = 0x920; // FText [0x9]
		constexpr auto RenameGuildSelfTips = 0x9f8; // FText [0x7]
		constexpr auto RenameGuildMemberTip = 0xaa0; // FText
		constexpr auto ApplyJoinGuildSelfTips = 0xab8; // FText [0x14]
		constexpr auto AgreeJoinGuildSelfTips = 0xc98; // FText [0x11]
		constexpr auto AgreeJoinGuildTargetTip = 0xe30; // FText
		constexpr auto RefuseJoinGuildSelfTips = 0xe48; // FText [0x11]
		constexpr auto RefuseJoinGuildtargetTip = 0xfe0; // FText
		constexpr auto KickOutGuildSelfTips = 0xff8; // FText [0x6]
		constexpr auto KickOutGuildTargetTip = 0x1088; // FText
		constexpr auto LeaveGuildSelfTips = 0x10a0; // FText [0x4]
		constexpr auto LeaveGuildMemberTip = 0x1100; // FText
		constexpr auto ChangeGuildOwnerSelfTips = 0x1118; // FText [0x5]
		constexpr auto ChangeGuildOwnerMemberTip = 0x1190; // FText
		constexpr auto ChangeGuildTitleSelfTips = 0x11a8; // FText [0x6]
		constexpr auto ChangeGuildTitleTargetTip = 0x1238; // FText
		constexpr auto ChangeGuildTitleMemberTip = 0x1250; // FText
		constexpr auto FillUpgradeExpSelfTips = 0x1268; // FText [0x6]
		constexpr auto FillUpgradeExpMemberTip = 0x12f8; // FText
		constexpr auto SetBillboardSelfTips = 0x1310; // FText [0x6]
		constexpr auto SetOuterBillboardSelfTips = 0x13a0; // FText [0x6]
		constexpr auto SetBillboardMemberTip = 0x1430; // FText
		constexpr auto SetOuterBillboardMemberTip = 0x1448; // FText
		constexpr auto SetJoinConditionSelfTips = 0x1460; // FText [0x4]
		constexpr auto SetAuthoritySelfTips = 0x14c0; // FText [0x7]
		constexpr auto SetAuthorityMemberTip = 0x1568; // FText
		constexpr auto SetCustomGroupSelfTips = 0x1580; // FText [0x7]
		constexpr auto SetImageSelfTips = 0x1628; // FText [0x6]
		constexpr auto SetImageMemberTips = 0x16b8; // FText
		constexpr auto SetJunSelfTips = 0x16d0; // FText [0x4]
		constexpr auto SetLanguageSelfTips = 0x1730; // FText [0x4]
		constexpr auto UpgradeSkillSelfTips = 0x1790; // FText [0x8]
		constexpr auto UpgradeSkillMemberTip = 0x1850; // FText
		constexpr auto ActiveSkillSelfTips = 0x1868; // FText [0x7]
		constexpr auto ActiveSkillMemberTip = 0x1910; // FText
		constexpr auto LearnCraftPerkSelfTips = 0x1928; // FText [0x8]
		constexpr auto LearnCraftPerkMemberTip = 0x19e8; // FText
		constexpr auto AddActivityPointSelfTips = 0x1a00; // FText [0x4]
		constexpr auto AddSilverSelfTips = 0x1a60; // FText [0x3]
		constexpr auto ExtractSilverSelfTips = 0x1aa8; // FText [0x5]
		constexpr auto AutoChangeOwnerSelfTips = 0x1b20; // FText [0x6]
		constexpr auto PlayerOnlineTips = 0x1bb0; // FText
		constexpr auto PlayerOfflineTips = 0x1bc8; // FText
		constexpr auto AutoChangeOwnerMemberTip = 0x1be0; // FText
		constexpr auto SetBaseCampSelfTips = 0x1bf8; // FText [0x5]
		constexpr auto GuildAuthDefaultValue = 0x1c70; // int32_t [0x1a]
		constexpr auto GuildAuthCD = 0x1cd8; // int32_t [0x1a]
		constexpr auto MaxGuildNameLength = 0x1d40; // int32_t
		constexpr auto MaxGuildGroupNameLength = 0x1d44; // int32_t
		constexpr auto MaxApplyCount = 0x1d48; // uint32_t
		constexpr auto MaxAllianceInviteCount = 0x1d4c; // uint32_t
		constexpr auto ActiveApplyHours = 0x1d50; // uint32_t
		constexpr auto OwnerOfflineHours = 0x1d54; // uint32_t
		constexpr auto MaxLevel = 0x1d58; // int32_t
		constexpr auto MaxBillboardLength = 0x1d5c; // int32_t
		constexpr auto GuildLevelConfigMap = 0x1d60; // TMap<int32_t, FGuildLevelConfig>
		constexpr auto LeaveAllianceCoolTime = 0x1db0; // uint32_t
		constexpr auto InitWeiWang = 0x1db4; // int32_t
		constexpr auto MaxCustomGroupCount = 0x1db8; // int32_t
		constexpr auto MaxCustomGroupNameLength = 0x1dbc; // int32_t
		constexpr auto GuildSkillConfigs = 0x1dc0; // FGuildSkillConfig [0x33]
		constexpr auto GuildSkillConsumeActivityPointTable = 0x2420; // UCurveTable*
		constexpr auto GuildSkillConsumeSilverTable = 0x2428; // UCurveTable*
		constexpr auto GuildSkillDataTable = 0x2430; // UCurveTable*
		constexpr auto GuildSkillRequireDataTable = 0x2438; // UDataTable*
		constexpr auto ActiveSkillMaxHours = 0x24a0; // int32_t
		constexpr auto ActiveSkillActivityPoint = 0x24a4; // int32_t
		constexpr auto ActiveSkillSilver = 0x24a8; // int32_t
		constexpr auto ActivityToGuildDayLimit = 0x24ac; // int32_t
		constexpr auto ActivityToGongxunXunRatio = 0x24b0; // int32_t
		constexpr auto DonationActivityPoint = 0x24b4; // int32_t
		constexpr auto DonationActivityPointRatio = 0x24b8; // float
		constexpr auto MinServerLevel = 0x24bc; // int32_t
		constexpr auto ClearGongXunWeek = 0x24c0; // int32_t
		constexpr auto ClearGongXunHour = 0x24c4; // int32_t
		constexpr auto MaxApplyVerfiyLen = 0x24c8; // int32_t
		constexpr auto MaxInviteVerfiyLen = 0x24cc; // int32_t
		constexpr auto LeaveGuildCDMinutes = 0x24d0; // int32_t
		constexpr auto TransGuildCDMinutes = 0x24d4; // int32_t
		constexpr auto MaxGuildStoreNoticeLength = 0x24d8; // int32_t
		constexpr auto MaxActivityPointPerDay = 0x24dc; // int32_t
		constexpr auto MaxImageLength = 0x24e0; // int32_t
		constexpr auto InviteOutTime = 0x24e4; // float
		constexpr auto GuildInValidMinutes = 0x24e8; // int32_t
		constexpr auto GuildSkillRequireIndexMul = 0x24ec; // int32_t
		constexpr auto AcceptConfirmUI = 0x24f0; // UUI_ApplyGuildConfirm*
		constexpr auto GuildImageMaterialSerializerClass = 0x24f8; // UGuildImageMaterialSerializer*
		constexpr auto GuildImageMaterialSerializer = 0x2500; // UGuildImageMaterialSerializer*
	}

	namespace n_ASGStructureCountySeatAltar {
		constexpr auto WorshipArray = 0xb98; // TArray<FWorship>
	}

	namespace n_ASGStructureManager {
		constexpr auto CreatingStructureIndex = 0x310; // int32_t
		constexpr auto bHasSnapped = 0x314; // char : 1
		constexpr auto CreatingStructure = 0x318; // ASGStructure*
		constexpr auto SGHUD = 0x320; // ASGHUD*
		constexpr auto InitCreateRotation = 0x328; // FRotator
		constexpr auto bSelectingDirection = 0x334; // bool
		constexpr auto CreateRotationName = 0x338; // FName
		constexpr auto CreateRotationSpeed = 0x340; // float
		constexpr auto CurrentBuildStructureItemId = 0x344; // FGuid
		constexpr auto bShowStructureDebugInfo = 0x354; // char : 1
		constexpr auto bFromPerkStructure = 0x354; // char : 1
		constexpr auto bUseBindPoint = 0x354; // char : 1
		constexpr auto BindPointNum = 0x358; // int32_t
		constexpr auto CurrentBindPointIndex = 0x35c; // int32_t
		constexpr auto ItemToStructureIndex = 0x360; // int32_t
		constexpr auto CurrentSelectRotation = 0x364; // float
		constexpr auto IsMoveSeatingCharResetPosState = 0x368; // bool
		constexpr auto ResetPosMoveSeatChar = 0x36c; // TWeakObjectPtr<ASG_MoveSeatingCharacter>
		constexpr auto IsCharacterResetPosState = 0x374; // bool
		constexpr auto ResetPosCharacter = 0x378; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto IsAnimalResetPosState = 0x380; // bool
		constexpr auto ResetPosAnimalChar = 0x384; // TWeakObjectPtr<ASG_AnimalsCharacter>
		constexpr auto ReplaceStructure = 0x390; // ASGStructure*
	}

	namespace n_UUI_BattleAward {
		constexpr auto BattleAwardItemSlotClass = 0x2d8; // UBattleAwardItemSlot*
		constexpr auto AwardItemsGridBox = 0x2e0; // UUniformGridPanel*
		constexpr auto ReceiveMouseDownTicks = 0x2e8; // int64_t
	}

	namespace n_UPoseWatch {
		constexpr auto Node = 0x28; // UEdGraphNode*
		constexpr auto PoseWatchColour = 0x30; // FColor
	}

	namespace n_UDataAsset {
		constexpr auto NativeClass = 0x28; // UDataAsset*
	}

	namespace n_UViewAlignedSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UUI_SystemNotifyPopup {
		constexpr auto RichTextBlock_title = 0x260; // URichTextBlock*
		constexpr auto RichTextBlock_notify = 0x268; // URichTextBlock*
		constexpr auto NotifyBottomY = 0x270; // float
	}

	namespace n_UMaterialExpressionTime {
		constexpr auto bIgnorePause = 0x40; // char : 1
		constexpr auto bOverride_Period = 0x40; // char : 1
		constexpr auto Period = 0x44; // float
	}

	namespace n_UWBP_OfficalSessionList_C {
		constexpr auto ImgBg = 0x3b0; // UImage*
		constexpr auto ImgMapListTitle = 0x3b8; // UImage*
		constexpr auto ImgPingMs = 0x3c0; // UImage*
		constexpr auto ImgSearchBg = 0x3c8; // UImage*
		constexpr auto ImgSearchIcon = 0x3d0; // UImage*
		constexpr auto ImgSessionBg = 0x3d8; // UImage*
		constexpr auto ImgSessionBorder = 0x3e0; // UImage*
		constexpr auto ImgSessionBottomBg = 0x3e8; // UImage*
		constexpr auto ImgSessionTopBg = 0x3f0; // UImage*
	}

	namespace n_UInterpTrackSound {
		constexpr auto Sounds = 0x90; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xa0; // char : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xa0; // char : 1
		constexpr auto bSuppressSubtitles = 0xa0; // char : 1
		constexpr auto bTreatAsDialogue = 0xa0; // char : 1
		constexpr auto bAttach = 0xa0; // char : 1
	}

	namespace n_UMaterialExpressionArctangentFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction {
		constexpr auto FunctionValue = 0x40; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0x44; // FExpressionInput
	}

	namespace n_ASGStructureOccupyFortress {
		constexpr auto ScorePerSec = 0xfa8; // int32_t
		constexpr auto ScorePerPerson = 0xfac; // int32_t
		constexpr auto CurOccupyingActors = 0xfb8; // TArray<ASGCharacter*>
	}

	namespace n_APostProcessVolume {
		constexpr auto Settings = 0x350; // FPostProcessSettings
		constexpr auto Priority = 0x8b0; // float
		constexpr auto BlendRadius = 0x8b4; // float
		constexpr auto BlendWeight = 0x8b8; // float
		constexpr auto bEnabled = 0x8bc; // char : 1
		constexpr auto bUnbound = 0x8bc; // char : 1
	}

	namespace n_UResonanceAudioSoundfieldSettings {
		constexpr auto RenderMode = 0x28; // EResonanceRenderMode
	}

	namespace n_ASGCameraActor {
		constexpr auto SGViewportClient = 0x8a0; // USGViewportClient*
	}

	namespace n_USGGameDataPlayerShowData {
		constexpr auto PlayerShowSettingCfg = 0x28; // TMap<int32_t, FPlayerShowData>
	}

	namespace n_UBillboardComponent {
		constexpr auto Sprite = 0x488; // UTexture2D*
		constexpr auto bIsScreenSizeScaled = 0x490; // char : 1
		constexpr auto ScreenSize = 0x494; // float
		constexpr auto U = 0x498; // float
		constexpr auto UL = 0x49c; // float
		constexpr auto V = 0x4a0; // float
		constexpr auto VL = 0x4a4; // float
	}

	namespace n_UMaterialExpressionBlackBody {
		constexpr auto Temp = 0x40; // FExpressionInput
	}

	namespace n_UPhononGeometryComponent {
		constexpr auto ExportAllChildren = 0x208; // bool
		constexpr auto NumVertices = 0x20c; // uint32_t
		constexpr auto NumTriangles = 0x210; // uint32_t
	}

	namespace n_UBlackboardKeyType_Class {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UMaterialExpressionCosine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UAudioCaptureComponent {
		constexpr auto JitterLatencyFrames = 0x6d0; // int32_t
	}

	namespace n_UGameplayTagsDeveloperSettings {
		constexpr auto DeveloperConfigName = 0x38; // FString
		constexpr auto FavoriteTagSource = 0x48; // FName
	}

	namespace n_APaperFlipbookActor {
		constexpr auto RenderComponent = 0x310; // UPaperFlipbookComponent*
	}

	namespace n_UGuildKPIItemSlot {
		constexpr auto BGBorder = 0x260; // UBorder*
		constexpr auto IconImage = 0x268; // UImage*
		constexpr auto NameText = 0x270; // UTextBlock*
		constexpr auto NormalBGTexture = 0x278; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x2a0; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UEngineMessage {
		constexpr auto FailedPlaceMessage = 0x28; // FString
		constexpr auto MaxedOutMessage = 0x38; // FString
		constexpr auto EnteredMessage = 0x48; // FString
		constexpr auto LeftMessage = 0x58; // FString
		constexpr auto GlobalNameChange = 0x68; // FString
		constexpr auto SpecEnteredMessage = 0x78; // FString
		constexpr auto NewPlayerMessage = 0x88; // FString
		constexpr auto NewSpecMessage = 0x98; // FString
	}

	namespace n_UItemAuctionOrderSlot {
		constexpr auto IconImage = 0x2d8; // UImage*
		constexpr auto NameText = 0x2e0; // UTextBlock*
		constexpr auto OrderNameText = 0x2e8; // UTextBlock*
		constexpr auto OrderCountText = 0x2f0; // UTextBlock*
		constexpr auto OrderPriceText = 0x2f8; // UTextBlock*
		constexpr auto OrderTimeText = 0x300; // UTextBlock*
		constexpr auto CanvasPanel_Template = 0x308; // UCanvasPanel*
		constexpr auto CanvasPanel_Order = 0x310; // UCanvasPanel*
		constexpr auto ButtonSelected = 0x318; // UButton*
		constexpr auto ButtonCheckedStyle = 0x320; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x598; // FButtonStyle
		constexpr auto ParentUI = 0x810; // TWeakObjectPtr<UItemAuctionOrderPanel>
	}

	namespace n_UBackgroundBlurSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UCameraComponent {
		constexpr auto FieldOfView = 0x208; // float
		constexpr auto OrthoWidth = 0x20c; // float
		constexpr auto OrthoNearClipPlane = 0x210; // float
		constexpr auto OrthoFarClipPlane = 0x214; // float
		constexpr auto AspectRatio = 0x218; // float
		constexpr auto bConstrainAspectRatio = 0x21c; // char : 1
		constexpr auto bUseFieldOfViewForLOD = 0x21c; // char : 1
		constexpr auto bLockToHmd = 0x21c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x21c; // char : 1
		constexpr auto ProjectionMode = 0x21d; // ECameraProjectionMode
		constexpr auto PostProcessBlendWeight = 0x250; // float
		constexpr auto PostProcessSettings = 0x280; // FPostProcessSettings
	}

	namespace n_UPaperTerrainMaterial {
		constexpr auto Rules = 0x30; // TArray<FPaperTerrainMaterialRule>
		constexpr auto InteriorFill = 0x40; // UPaperSprite*
	}

	namespace n_UN_ChangeItemNamePanel {
		constexpr auto ConfirmButton = 0x2d8; // UButton*
		constexpr auto CancelButton = 0x2e0; // UButton*
		constexpr auto OriginName = 0x2e8; // UTextBlock*
		constexpr auto ChangeName = 0x2f0; // UEditableTextBox*
		constexpr auto NameMaxLen = 0x2f8; // int32_t
		constexpr auto WidgetOffset = 0x2fc; // FVector2D
	}

	namespace n_UWBP_SystemSettingRadioButton_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto BtnBg = 0x548; // UButton*
		constexpr auto TbTitle = 0x550; // UTextBlock*
		constexpr auto Title = 0x558; // FText
	}

	namespace n_UTimelineComponent {
		constexpr auto TheTimeline = 0xc0; // FTimeline
		constexpr auto bIgnoreTimeDilation = 0x158; // char : 1
	}

	namespace n_ASGStructureCrop {
		constexpr auto PlantSoilLoose = 0xbe0; // float
		constexpr auto WaterConsumeTotal = 0xbe4; // float
		constexpr auto NFertilizerConsumeTotal = 0xbe8; // float
		constexpr auto PFertilizerConsumeTotal = 0xbec; // float
		constexpr auto KFertilizerConsumeTotal = 0xbf0; // float
		constexpr auto SeedProductionItem = 0xbf8; // USGItem*
		constexpr auto SeedMinProduction = 0xc00; // float
		constexpr auto SeedMaxProduction = 0xc04; // float
		constexpr auto CropRipePhaseData = 0xc08; // TArray<FCropRipePhaseData>
		constexpr auto HighQualitySeed = 0xc18; // TArray<FHighQualitySeedData>
		constexpr auto RootStaticMesh = 0xc28; // UStaticMesh*
		constexpr auto TotalNRootFertilizer = 0xc30; // float
		constexpr auto TotalPRootFertilizer = 0xc34; // float
		constexpr auto TotalKRootFertilizer = 0xc38; // float
		constexpr auto RootToFertilizerTimes = 0xc3c; // int32_t
		constexpr auto CorruptTime = 0xc40; // float
	}

	namespace n_UProceduralRectangleToolProperties {
		constexpr auto Width = 0x70; // float
		constexpr auto Depth = 0x74; // float
		constexpr auto WidthSubdivisions = 0x78; // int32_t
		constexpr auto DepthSubdivisions = 0x7c; // int32_t
	}

	namespace n_UBlendSpaceBase {
		constexpr auto bRotationBlendInMeshSpace = 0x88; // bool
		constexpr auto AnimLength = 0x8c; // float
		constexpr auto InterpolationParam = 0x90; // FInterpolationParameter [0x3]
		constexpr auto TargetWeightInterpolationSpeedPerSec = 0xa8; // float
		constexpr auto NotifyTriggerMode = 0xac; // ENotifyTriggerMode
		constexpr auto PerBoneBlend = 0xb0; // TArray<FPerBoneInterpolation>
		constexpr auto SampleIndexWithMarkers = 0xc0; // int32_t
		constexpr auto SampleData = 0xc8; // TArray<FBlendSample>
		constexpr auto GridSamples = 0xd8; // TArray<FEditorElement>
		constexpr auto BlendParameters = 0xe8; // FBlendParameter [0x3]
	}

	namespace n_ASGPlayerCharacter {
		constexpr auto ChangeSeatCD = 0x11100; // float
		constexpr auto LastChangeSeatTimeSecond = 0x11104; // float
		constexpr auto FavoriteFood = 0x11108; // TArray<USGItem*>
		constexpr auto CheckTimes = 0x11118; // int32_t
		constexpr auto RidingDistance = 0x1111c; // float
		constexpr auto OriginalPlayerController = 0x11130; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto VOIPTalkerComponent = 0x11138; // USGVOIPTalker*
		constexpr auto CharacterOreMoveDistance = 0x11148; // int32_t
		constexpr auto LastOreSearchLocation = 0x1114c; // FVector
		constexpr auto NotifyOccupyHandle = 0x11158; // FTimerHandle
		constexpr auto NotifyOccupyInterval = 0x11160; // int32_t
		constexpr auto SearchOccupyStructureInterval = 0x11164; // int32_t
		constexpr auto LastSearchOccupyStructureTime = 0x11168; // double
		constexpr auto OccupyBuffList = 0x11170; // TArray<FOccupyBuffInfo>
		constexpr auto PlayerOccupySellData = 0x11190; // FOccupySellInfo
		constexpr auto SearchOreClientActorTemplate = 0x111a0; // AActor*
		constexpr auto HuangLiUnlockData = 0x111b0; // FHuangLiUnlockData
		constexpr auto TitleID = 0x111f0; // FString
		constexpr auto AchievementDamageMultiply = 0x11210; // TArray<FAchievementDamageMultiply>
		constexpr auto MiniMapData = 0x11220; // TArray<FMiniMapData>
		constexpr auto CheckMiniMapPOIInterval = 0x11230; // float
		constexpr auto LastCheckMiniMapPOITime = 0x11238; // double
		constexpr auto ThisMapUnlockedStaticMiniMap = 0x11240; // TArray<FString>
		constexpr auto UnlockedStaticMiniMap = 0x11250; // TMap<FString, FStaticMiniMapIDArray>
		constexpr auto bNeedSetUnlockedMiniMapPOINetDirty = 0x112b0; // bool
		constexpr auto CheckStaticMiniMapIndex = 0x112b4; // int32_t
		constexpr auto MaxCheckStaticMiniMapNum = 0x112b8; // int32_t
		constexpr auto ThisMapMiniMapMarks = 0x112d0; // TArray<FMiniMapMarkData>
		constexpr auto PlayerQuestData = 0x11310; // FPlayerQuestData
		constexpr auto HonorPoint = 0x11c10; // int32_t
		constexpr auto JueWeiLevel = 0x11c14; // int32_t
		constexpr auto LastNewsJueWeiLevel = 0x11c18; // int32_t
		constexpr auto ViewGeneral = 0x11c1c; // int32_t
		constexpr auto bOpenPVP = 0x11c20; // char : 1
		constexpr auto NextCrossServerTime = 0x11c28; // FDateTime
		constexpr auto SeasonIndex = 0x11c30; // int32_t
		constexpr auto SeasonWeekIndex = 0x11c34; // int32_t
		constexpr auto GongXunPoint = 0x11c38; // int32_t
		constexpr auto TodayTransActivityPoint = 0x11c3c; // int32_t
		constexpr auto TransActivityPointDay = 0x11c40; // int32_t
		constexpr auto BoughtGuildItemDatas = 0x11c48; // TArray<FBoughtGuildItemData>
		constexpr auto AnimalRecruitAddLife = 0x11cc4; // float
		constexpr auto AnimalRebornTimeMultiAdd = 0x11cc8; // float
		constexpr auto RideTameMaxRunawayAdd = 0x11ccc; // float
		constexpr auto RideTameFeedTimeAdd = 0x11cd0; // float
		constexpr auto MaxHorseTameNumAdd = 0x11cd4; // float
		constexpr auto HorsePregnancyChanceAdd = 0x11cd8; // float
		constexpr auto HorseHarmfulVariationChance = 0x11cdc; // float
		constexpr auto OverlappedNpcVolume = 0x11ce0; // TArray<ANpcVolume*>
		constexpr auto bShowNpcSpawnInfo = 0x11cf0; // char : 1
		constexpr auto ShowDetailNpcSpawnInfoIndex = 0x11cf4; // int32_t
		constexpr auto LastGuildEventCheckTime = 0x11d18; // double
		constexpr auto MaxSellItemNum = 0x11d20; // int32_t
		constexpr auto MaxSellGeneralNum = 0x11d24; // int32_t
		constexpr auto MaxSellHorseNum = 0x11d28; // int32_t
		constexpr auto MaxBuyItemNum = 0x11d2c; // int32_t
		constexpr auto SellGoodsInfo = 0x11d38; // TArray<FMarketSellGoodsInfo>
		constexpr auto UpdataGoodsInfoStep = 0x11d48; // int32_t
		constexpr auto ActivatedDLCList = 0x11d50; // TArray<int32_t>
		constexpr auto AppearanceKitIndexArray = 0x11d60; // TArray<int32_t>
		constexpr auto AppearanceExpiredKitIndexArray = 0x11d70; // TArray<int32_t>
		constexpr auto AppearanceKitIndex = 0x11d80; // int32_t
		constexpr auto FashionKitIndexArray = 0x11d88; // TArray<int32_t>
		constexpr auto FashionKitExpiredIndexArray = 0x11d98; // TArray<int32_t>
		constexpr auto FashionKitIndex = 0x11da8; // int32_t
		constexpr auto PlayerShowSettingData = 0x11db0; // TArray<int32_t>
		constexpr auto UnlockedPlayerShowData = 0x11dc0; // TArray<int32_t>
		constexpr auto UnlockedGIColors = 0x11dd0; // TArray<int32_t>
		constexpr auto UnlockedGITextures = 0x11de0; // TArray<int32_t>
		constexpr auto CheatAdminLevel = 0x11df0; // int32_t
		constexpr auto bShowGMBillBoard = 0x11df4; // char : 1
		constexpr auto ThisMapUnlockStaticMiniMapPOIDatas = 0x11df8; // TArray<FStaticMiniMapPOIData>
		constexpr auto SkillMasteryGuideStep = 0x11e08; // int32_t
		constexpr auto LastClearYuanDanCountDay = 0x11e0c; // int32_t
		constexpr auto YuanDanCount = 0x11e10; // int32_t
	}

	namespace n_AWindDirectionalSource {
		constexpr auto Component = 0x310; // UWindDirectionalSourceComponent*
	}

	namespace n_UDirectionalLightComponent {
		constexpr auto ShadowCascadeBiasDistribution = 0x338; // float
		constexpr auto bEnableLightShaftOcclusion = 0x33c; // char : 1
		constexpr auto OcclusionMaskDarkness = 0x340; // float
		constexpr auto OcclusionDepthRange = 0x344; // float
		constexpr auto LightShaftOverrideDirection = 0x348; // FVector
		constexpr auto WholeSceneDynamicShadowRadius = 0x354; // float
		constexpr auto DynamicShadowDistanceMovableLight = 0x358; // float
		constexpr auto DynamicShadowDistanceStationaryLight = 0x35c; // float
		constexpr auto DynamicShadowCascades = 0x360; // int32_t
		constexpr auto CascadeDistributionExponent = 0x364; // float
		constexpr auto CascadeTransitionFraction = 0x368; // float
		constexpr auto ShadowDistanceFadeoutFraction = 0x36c; // float
		constexpr auto bUseInsetShadowsForMovableObjects = 0x370; // char : 1
		constexpr auto FarShadowCascadeCount = 0x374; // int32_t
		constexpr auto FarShadowDistance = 0x378; // float
		constexpr auto DistanceFieldShadowDistance = 0x37c; // float
		constexpr auto LightSourceAngle = 0x380; // float
		constexpr auto LightSourceSoftAngle = 0x384; // float
		constexpr auto ShadowSourceAngleFactor = 0x388; // float
		constexpr auto TraceDistance = 0x38c; // float
		constexpr auto bUsedAsAtmosphereSunLight = 0x390; // char : 1
		constexpr auto AtmosphereSunLightIndex = 0x394; // int32_t
		constexpr auto AtmosphereSunDiskColorScale = 0x398; // FLinearColor
		constexpr auto bPerPixelAtmosphereTransmittance = 0x3a8; // char : 1
		constexpr auto bCastShadowsOnClouds = 0x3a8; // char : 1
		constexpr auto bCastShadowsOnAtmosphere = 0x3a8; // char : 1
		constexpr auto bCastCloudShadows = 0x3a8; // char : 1
		constexpr auto CloudShadowStrength = 0x3ac; // float
		constexpr auto CloudShadowOnAtmosphereStrength = 0x3b0; // float
		constexpr auto CloudShadowOnSurfaceStrength = 0x3b4; // float
		constexpr auto CloudShadowDepthBias = 0x3b8; // float
		constexpr auto CloudShadowExtent = 0x3bc; // float
		constexpr auto CloudShadowMapResolutionScale = 0x3c0; // float
		constexpr auto CloudShadowRaySampleCountScale = 0x3c4; // float
		constexpr auto CloudScatteredLuminanceScale = 0x3c8; // FLinearColor
		constexpr auto LightmassSettings = 0x3d8; // FLightmassDirectionalLightSettings
		constexpr auto bCastModulatedShadows = 0x3e8; // char : 1
		constexpr auto ModulatedShadowColor = 0x3ec; // FColor
		constexpr auto ShadowAmount = 0x3f0; // float
	}

	namespace n_UDeleteRoleDialog {
		constexpr auto BtnAccept = 0x280; // UButton*
		constexpr auto BtnClose = 0x288; // UButton*
		constexpr auto CbConfirm = 0x290; // UCheckBox*
	}

	namespace n_UJunDetailWidget {
		constexpr auto GuildIconMat = 0x260; // UMaterialInterface*
		constexpr auto ServerItemClass = 0x268; // UGlobalMap_ServerItem*
		constexpr auto InterpSpeed = 0x270; // float
		constexpr auto EnterServerButtonName = 0x274; // FName
		constexpr auto EnterServerTextblockName = 0x27c; // FName
		constexpr auto EnterServerText = 0x288; // FText
		constexpr auto CDRemainTimeTextblockName = 0x2a0; // FName
		constexpr auto FastEnterServerButtonName = 0x2a8; // FName
		constexpr auto FastEnterServerTextblockName = 0x2b0; // FName
		constexpr auto ShowCrossButtonName = 0x2b8; // FName
		constexpr auto ShowBattleButtonName = 0x2c0; // FName
		constexpr auto ShowInventoryButtonName = 0x2c8; // FName
		constexpr auto DefalutServerItemEnable = 0x2d0; // bool
		constexpr auto BtnRefresh = 0x358; // UButton*
		constexpr auto BtnReturn = 0x360; // UButton*
		constexpr auto GPServer = 0x368; // UGridPanel*
		constexpr auto BtnClose = 0x370; // UButton*
		constexpr auto ImgBlock = 0x378; // UImage*
		constexpr auto LoadingCanvas = 0x380; // UCanvasPanel*
		constexpr auto TbCityName = 0x388; // UTextBlock*
		constexpr auto TbOccupy = 0x390; // UTextBlock*
		constexpr auto HbServerProtectionTime = 0x398; // UHorizontalBox*
		constexpr auto TbServerProtectionTime = 0x3a0; // UTextBlock*
		constexpr auto ImgNewServer = 0x3a8; // UImage*
		constexpr auto GuildCanvas = 0x3b0; // UCanvasPanel*
		constexpr auto ImgGuildIcon = 0x3b8; // UImage*
		constexpr auto TbGuildName = 0x3c0; // UTextBlock*
		constexpr auto TbGuildOwnerName = 0x3c8; // UTextBlock*
		constexpr auto TbGuildOwnerJob = 0x3d0; // UTextBlock*
		constexpr auto TbMemberNum = 0x3d8; // UTextBlock*
		constexpr auto TbOccupyGuanAiNum = 0x3e0; // UTextBlock*
		constexpr auto TbOccupyCityNum = 0x3e8; // UTextBlock*
		constexpr auto TbOccupyXianChengNum = 0x3f0; // UTextBlock*
		constexpr auto BindJunId = 0x3f8; // int32_t
		constexpr auto BindJunData = 0x400; // FBigMapJunInfo
		constexpr auto ServerItems = 0x460; // TArray<UGlobalMap_ServerItem*>
		constexpr auto SelectServerItem = 0x470; // UGlobalMap_ServerItem*
		constexpr auto bIniting = 0x478; // char : 1
		constexpr auto JunDetailSlot = 0x480; // UCanvasPanelSlot*
		constexpr auto JunDetailState = 0x488; // EJunDetailState
		constexpr auto bJunDetailShowed = 0x489; // bool
		constexpr auto SGWorldSettings = 0x490; // ASGWorldSettings*
		constexpr auto SGGameData = 0x498; // USGGameData*
		constexpr auto SGGameState = 0x4a0; // ASGGameState*
		constexpr auto SGLocalPlayer = 0x4a8; // USGLocalPlayer*
		constexpr auto DynamicGuildIconInstance = 0x4b0; // UMaterialInstanceDynamic*
		constexpr auto ParentUI = 0x4b8; // USGUI*
		constexpr auto GetPingTimer = 0x4c0; // FTimerHandle
		constexpr auto GetPingServerInfoIndexs = 0x4c8; // TArray<int32_t>
		constexpr auto BtnEnterServer = 0x4d8; // UButton*
		constexpr auto TbEnterServer = 0x4e0; // UTextBlock*
		constexpr auto BtnFastEnter = 0x4e8; // UButton*
		constexpr auto TbFastEnterServer = 0x4f0; // UTextBlock*
		constexpr auto TbCDRemainTime = 0x4f8; // UTextBlock*
		constexpr auto BtnShowCross = 0x500; // UButton*
		constexpr auto BtnShowBattle = 0x508; // UButton*
		constexpr auto BtnShowInventory = 0x510; // UButton*
	}

	namespace n_ABP_HorseMC_Preview_C {
		constexpr auto UberGraphFrame = 0x3c10; // FPointerToUberGraphFrame
		constexpr auto SkeletalMesh = 0x3c18; // USkeletalMeshComponent*
		constexpr auto PreviewAnimPosition = 0x3c20; // float
	}

	namespace n_UGeometryCacheCodecBase {
		constexpr auto TopologyRanges = 0x28; // TArray<int32_t>
	}

	namespace n_UMotoSynthSource {
		constexpr auto bConvertTo8Bit = 0x28; // bool
		constexpr auto DownSampleFactor = 0x2c; // float
		constexpr auto RPMCurve = 0x30; // FRuntimeFloatCurve
		constexpr auto SourceData = 0xb8; // TArray<float>
		constexpr auto SourceDataPCM = 0xc8; // TArray<int16_t>
		constexpr auto SourceSampleRate = 0xd8; // int32_t
		constexpr auto GrainTable = 0xe0; // TArray<FGrainTableEntry>
	}

	namespace n_UMaterial {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x90; // UPhysicalMaterialMask*
		constexpr auto PhysicalMaterialMap = 0x98; // UPhysicalMaterial* [0x8]
		constexpr auto Metallic = 0xd8; // FScalarMaterialInput
		constexpr auto Specular = 0xec; // FScalarMaterialInput
		constexpr auto Anisotropy = 0x100; // FScalarMaterialInput
		constexpr auto Normal = 0x114; // FVectorMaterialInput
		constexpr auto Tangent = 0x128; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x13c; // FColorMaterialInput
		constexpr auto MaterialDomain = 0x150; // EMaterialDomain
		constexpr auto BlendMode = 0x151; // EBlendMode
		constexpr auto DecalBlendMode = 0x152; // EDecalBlendMode
		constexpr auto MaterialDecalResponse = 0x153; // EMaterialDecalResponse
		constexpr auto ShadingModel = 0x154; // EMaterialShadingModel
		constexpr auto bCastDynamicShadowAsMasked = 0x155; // char : 1
		constexpr auto ShadingModels = 0x156; // FMaterialShadingModelField
		constexpr auto OpacityMaskClipValue = 0x158; // float
		constexpr auto MaterialObjectFlag = 0x15c; // int32_t
		constexpr auto WorldPositionOffset = 0x160; // FVectorMaterialInput
		constexpr auto Refraction = 0x174; // FScalarMaterialInput
		constexpr auto MaterialAttributes = 0x188; // FMaterialAttributesInput
		constexpr auto PixelDepthOffset = 0x1a0; // FScalarMaterialInput
		constexpr auto ShadingModelFromMaterialExpression = 0x1b4; // FShadingModelMaterialInput
		constexpr auto bEnableSeparateTranslucency = 0x1c8; // char : 1
		constexpr auto bEnableResponsiveAA = 0x1c8; // char : 1
		constexpr auto bScreenSpaceReflections = 0x1c8; // char : 1
		constexpr auto bContactShadows = 0x1c8; // char : 1
		constexpr auto TwoSided = 0x1c8; // char : 1
		constexpr auto DitheredLODTransition = 0x1c8; // char : 1
		constexpr auto DitherOpacityMask = 0x1c8; // char : 1
		constexpr auto bAllowNegativeEmissiveColor = 0x1c8; // char : 1
		constexpr auto TranslucencyLightingMode = 0x1c9; // ETranslucencyLightingMode
		constexpr auto bEnableMobileSeparateTranslucency = 0x1ca; // char : 1
		constexpr auto NumCustomizedUVs = 0x1cc; // int32_t
		constexpr auto TranslucencyDirectionalLightingIntensity = 0x1d0; // float
		constexpr auto TranslucentShadowDensityScale = 0x1d4; // float
		constexpr auto TranslucentSelfShadowDensityScale = 0x1d8; // float
		constexpr auto TranslucentSelfShadowSecondDensityScale = 0x1dc; // float
		constexpr auto TranslucentSelfShadowSecondOpacity = 0x1e0; // float
		constexpr auto TranslucentBackscatteringExponent = 0x1e4; // float
		constexpr auto TranslucentMultipleScatteringExtinction = 0x1e8; // FLinearColor
		constexpr auto TranslucentShadowStartOffset = 0x1f8; // float
		constexpr auto bDisableDepthTest = 0x1fc; // char : 1
		constexpr auto bWriteOnlyAlpha = 0x1fc; // char : 1
		constexpr auto bGenerateSphericalParticleNormals = 0x1fc; // char : 1
		constexpr auto bTangentSpaceNormal = 0x1fc; // char : 1
		constexpr auto bUseEmissiveForDynamicAreaLighting = 0x1fc; // char : 1
		constexpr auto bBlockGI = 0x1fc; // char : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x1fc; // char : 1
		constexpr auto bUsedWithSkeletalMesh = 0x1fc; // char : 1
		constexpr auto bUsedWithEditorCompositing = 0x1fd; // char : 1
		constexpr auto bUsedWithParticleSprites = 0x1fd; // char : 1
		constexpr auto bUsedWithBeamTrails = 0x1fd; // char : 1
		constexpr auto bUsedWithMeshParticles = 0x1fd; // char : 1
		constexpr auto bUsedWithNiagaraSprites = 0x1fd; // char : 1
		constexpr auto bUsedWithNiagaraRibbons = 0x1fd; // char : 1
		constexpr auto bUsedWithNiagaraMeshParticles = 0x1fd; // char : 1
		constexpr auto bUsedWithGeometryCache = 0x1fd; // char : 1
		constexpr auto bUsedWithStaticLighting = 0x1fe; // char : 1
		constexpr auto bUsedWithMorphTargets = 0x1fe; // char : 1
		constexpr auto bUsedWithSplineMeshes = 0x1fe; // char : 1
		constexpr auto bUsedWithInstancedStaticMeshes = 0x1fe; // char : 1
		constexpr auto bUsedWithGeometryCollections = 0x1fe; // char : 1
		constexpr auto bUsesDistortion = 0x1fe; // char : 1
		constexpr auto bUsedWithClothing = 0x1fe; // char : 1
		constexpr auto bUsedWithWater = 0x200; // char : 1
		constexpr auto bUsedWithHairStrands = 0x200; // char : 1
		constexpr auto bUsedWithLidarPointCloud = 0x200; // char : 1
		constexpr auto bUsedWithVirtualHeightfieldMesh = 0x200; // char : 1
		constexpr auto bUsedWithUI = 0x204; // char : 1
		constexpr auto bAutomaticallySetUsageInEditor = 0x204; // char : 1
		constexpr auto bFullyRough = 0x204; // char : 1
		constexpr auto bUseFullPrecision = 0x204; // char : 1
		constexpr auto bUseLightmapDirectionality = 0x204; // char : 1
		constexpr auto bUseAlphaToCoverage = 0x204; // char : 1
		constexpr auto bForwardRenderUsePreintegratedGFForSimpleIBL = 0x208; // char : 1
		constexpr auto bUseHQForwardReflections = 0x20c; // char : 1
		constexpr auto bUsePlanarForwardReflections = 0x20c; // char : 1
		constexpr auto bNormalCurvatureToRoughness = 0x20c; // char : 1
		constexpr auto D3D11TessellationMode = 0x20d; // EMaterialTessellationMode
		constexpr auto bEnableCrackFreeDisplacement = 0x20e; // char : 1
		constexpr auto bEnableAdaptiveTessellation = 0x20e; // char : 1
		constexpr auto AllowTranslucentCustomDepthWrites = 0x20e; // char : 1
		constexpr auto AllowTranslucentOcclusionPassWrites = 0x20e; // char : 1
		constexpr auto Wireframe = 0x20e; // char : 1
		constexpr auto ShadingRate = 0x20f; // EMaterialShadingRate
		constexpr auto bCanMaskedBeAssumedOpaque = 0x210; // char : 1
		constexpr auto bIsMasked = 0x210; // char : 1
		constexpr auto bIsPreviewMaterial = 0x210; // char : 1
		constexpr auto bIsFunctionPreviewMaterial = 0x210; // char : 1
		constexpr auto bUseMaterialAttributes = 0x210; // char : 1
		constexpr auto bCastRayTracedShadows = 0x210; // char : 1
		constexpr auto bUseTranslucencyVertexFog = 0x210; // char : 1
		constexpr auto bApplyCloudFogging = 0x210; // char : 1
		constexpr auto bIsSky = 0x211; // char : 1
		constexpr auto bComputeFogPerPixel = 0x211; // char : 1
		constexpr auto bOutputTranslucentVelocity = 0x211; // char : 1
		constexpr auto bAllowDevelopmentShaderCompile = 0x211; // char : 1
		constexpr auto bIsMaterialEditorStatsMaterial = 0x211; // char : 1
		constexpr auto BlendableLocation = 0x212; // EBlendableLocation
		constexpr auto BlendableOutputAlpha = 0x213; // char : 1
		constexpr auto bEnableStencilTest = 0x213; // char : 1
		constexpr auto StencilCompare = 0x214; // EMaterialStencilCompare
		constexpr auto StencilRefValue = 0x215; // char
		constexpr auto RefractionMode = 0x216; // ERefractionMode
		constexpr auto BlendablePriority = 0x218; // int32_t
		constexpr auto bIsBlendable = 0x21c; // char : 1
		constexpr auto UsageFlagWarnings = 0x220; // uint32_t
		constexpr auto RefractionDepthBias = 0x224; // float
		constexpr auto StateId = 0x228; // FGuid
		constexpr auto MaxDisplacement = 0x238; // float
		constexpr auto CachedExpressionData = 0x270; // FMaterialCachedExpressionData
	}

	namespace n_UN_GiftGuildPanel {
		constexpr auto RefreshButton = 0x2d8; // UButton*
		constexpr auto CancelButton = 0x2e0; // UButton*
		constexpr auto GuildMembersPanel = 0x2e8; // UScrollBox*
		constexpr auto GiftPlayerSlotClass = 0x2f0; // UGiftPlayerSlot*
		constexpr auto RequestRefreshIntervalTime = 0x2f8; // float
		constexpr auto WidgetOffset = 0x2fc; // FVector2D
		constexpr auto LastClickRefreshTime = 0x308; // double
	}

	namespace n_USphereReflectionCaptureComponent {
		constexpr auto InfluenceRadius = 0x280; // float
		constexpr auto CaptureDistanceScale = 0x284; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
	}

	namespace n_USmoothMeshToolProperties {
		constexpr auto SmoothingType = 0x60; // ESmoothMeshToolSmoothType
	}

	namespace n_UUI_GuildGroup {
		constexpr auto PlayerNameText = 0x2d8; // UTextBlock*
		constexpr auto PlayerRankText = 0x2e0; // UTextBlock*
		constexpr auto GroupBox = 0x2e8; // UVerticalBox*
		constexpr auto EscButton = 0x2f0; // UButton*
		constexpr auto GuildGroupSlotClass = 0x2f8; // UGuildGroupSlot*
	}

	namespace n_UUI_OperationMode {
		constexpr auto BtnApply = 0x2d8; // UButton*
		constexpr auto ClassicMode = 0x2e0; // UOperationModeItem*
		constexpr auto NewMode = 0x2e8; // UOperationModeItem*
		constexpr auto SelectOperationModeItem = 0x2f0; // UOperationModeItem*
	}

	namespace n_UBrushStampIndicator {
		constexpr auto BrushRadius = 0x38; // float
		constexpr auto BrushFalloff = 0x3c; // float
		constexpr auto BrushPosition = 0x40; // FVector
		constexpr auto BrushNormal = 0x4c; // FVector
		constexpr auto bDrawIndicatorLines = 0x58; // bool
		constexpr auto bDrawRadiusCircle = 0x59; // bool
		constexpr auto SampleStepCount = 0x5c; // int32_t
		constexpr auto LineColor = 0x60; // FLinearColor
		constexpr auto LineThickness = 0x70; // float
		constexpr auto bDepthTested = 0x74; // bool
		constexpr auto bDrawSecondaryLines = 0x75; // bool
		constexpr auto SecondaryLineThickness = 0x78; // float
		constexpr auto SecondaryLineColor = 0x7c; // FLinearColor
		constexpr auto AttachedComponent = 0x90; // UPrimitiveComponent*
	}

	namespace n_UUI_GeneralLegend {
		constexpr auto OverridePreviewWidgetDistance = 0x2d8; // float
		constexpr auto OverridePreviewWidgetMeshLocationOffset = 0x2dc; // FVector
		constexpr auto OverridePreviewWidgetMeshRotation = 0x2e8; // FRotator
		constexpr auto OverridePreviewWidgetCameraRotation = 0x2f4; // FRotator
		constexpr auto bShouldPlayDefaultAnim = 0x300; // char : 1
		constexpr auto OverridePreviewWidgetDefaultAnim = 0x308; // UAnimMontage*
		constexpr auto WujiangActivedText = 0x310; // FText
		constexpr auto WujiangUnactivedText = 0x328; // FText
		constexpr auto WujiangNameUnknowText = 0x340; // FText
		constexpr auto WujiangFeishengText = 0x358; // FText
		constexpr auto WujiangJiebangText = 0x370; // FText
		constexpr auto ActiveTextColor = 0x388; // FLinearColor
		constexpr auto UnactiveTextColor = 0x398; // FLinearColor
		constexpr auto EquipCanvasName = 0x3a8; // TArray<FName>
		constexpr auto ShortCutCanvasName = 0x3b8; // TArray<FName>
		constexpr auto GeneralInfoSlotTemplate = 0x3c8; // UGeneralInfoSlot*
		constexpr auto PreviewCharTemplate = 0x3d0; // ASGCharacter*
		constexpr auto bChangeMesh = 0x3e0; // char : 1
		constexpr auto bUseDelay = 0x3e0; // char : 1
		constexpr auto PreviewCharacter = 0x400; // ASGCharacter*
		constexpr auto CurWeapon = 0x408; // ASGWeapon*
		constexpr auto ShowDelayTimer = 0x418; // FTimerHandle
		constexpr auto GeneralPanel = 0x420; // UCanvasPanel*
		constexpr auto AssignPanel = 0x428; // UCanvasPanel*
		constexpr auto ActivedDescPanel = 0x430; // UCanvasPanel*
		constexpr auto LeftButton = 0x438; // UButton*
		constexpr auto RightButton = 0x440; // UButton*
		constexpr auto AssignButton = 0x448; // UButton*
		constexpr auto CloseAssignPanelButton = 0x450; // UButton*
		constexpr auto CloseButton = 0x458; // UButton*
		constexpr auto AssignText = 0x460; // UTextBlock*
		constexpr auto PreviewWidget = 0x468; // UPreviewSceneWidget*
		constexpr auto EquipSlotList = 0x470; // TArray<USimpleItemSlot*>
		constexpr auto ShortCutSlotList = 0x480; // TArray<USimpleItemSlot*>
		constexpr auto GeneralTitleText = 0x490; // UTextBlock*
		constexpr auto GeneralNameText = 0x498; // UTextBlock*
		constexpr auto ActivedText = 0x4a0; // UTextBlock*
		constexpr auto GeneralDescText = 0x4a8; // UTextBlock*
		constexpr auto FuncDescText = 0x4b0; // UTextBlock*
		constexpr auto AssignmentDescText = 0x4b8; // UTextBlock*
		constexpr auto UGPGenerals = 0x4c0; // UUniformGridPanel*
	}

	namespace n_UNamedInterfaces {
		constexpr auto NamedInterfaces = 0x28; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x38; // TArray<FNamedInterfaceDef>
	}

	namespace n_UGeometryCacheTrackStreamable {
		constexpr auto Codec = 0x58; // UGeometryCacheCodecBase*
		constexpr auto StartSampleTime = 0xc8; // float
	}

	namespace n_UGizmoAxisIntervalParameterSource {
		constexpr auto FloatParameterSource = 0x48; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto MinParameter = 0x58; // float
		constexpr auto MaxParameter = 0x5c; // float
	}

	namespace n_UUI_PlayerShowTips {
		constexpr auto ItemIcon = 0x288; // UImage*
		constexpr auto TextName = 0x290; // UTextBlock*
		constexpr auto RequirementVertical = 0x298; // UVerticalBox*
		constexpr auto DescriptionText = 0x2a0; // UTextBlock*
		constexpr auto UnlockPanel = 0x2a8; // UCanvasPanel*
		constexpr auto TipsItemNameText = 0x2b0; // UTextBlock*
		constexpr auto RemainTimePanel = 0x2b8; // UCanvasPanel*
		constexpr auto RemainTimeDetailText = 0x2c0; // UTextBlock*
		constexpr auto RequirementClass = 0x2c8; // UUI_PlayerShowRequirement*
	}

	namespace n_UPrivateSessionPassword {
		constexpr auto EtbPassword = 0x260; // UEditableTextBox*
		constexpr auto BtnConfirm = 0x268; // UButton*
		constexpr auto BtnCancel = 0x270; // UButton*
	}

	namespace n_UAnimNotify_PlayMontageNotifyWindow {
		constexpr auto NotifyName = 0x30; // FName
	}

	namespace n_UUI_GuildStore {
		constexpr auto GuildStorePanel = 0x2d8; // UGuildStorePanel*
		constexpr auto GuildStoreSettingPanel = 0x2e0; // UGuildStoreSettingPanel*
		constexpr auto CloseButton = 0x2e8; // UButton*
	}

	namespace n_UMovieSceneGeometryCollectionTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieScene3DConstraintTrack {
		constexpr auto ConstraintSections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UEditableTextBox {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FEditableTextBoxStyle
		constexpr auto Style = 0x928; // USlateWidgetStyleAsset*
		constexpr auto HintText = 0x930; // FText
		constexpr auto HintTextDelegate = 0x948; // FDelegate
		constexpr auto Font = 0x958; // FSlateFontInfo
		constexpr auto ForegroundColor = 0x9b0; // FLinearColor
		constexpr auto BackgroundColor = 0x9c0; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0x9d0; // FLinearColor
		constexpr auto IsReadOnly = 0x9e0; // bool
		constexpr auto IsPassword = 0x9e1; // bool
		constexpr auto MinimumDesiredWidth = 0x9e4; // float
		constexpr auto Padding = 0x9e8; // FMargin
		constexpr auto IsCaretMovedWhenGainFocus = 0x9f8; // bool
		constexpr auto SelectAllTextWhenFocused = 0x9f9; // bool
		constexpr auto RevertTextOnEscape = 0x9fa; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x9fb; // bool
		constexpr auto SelectAllTextOnCommit = 0x9fc; // bool
		constexpr auto AllowContextMenu = 0x9fd; // bool
		constexpr auto KeyboardType = 0x9fe; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x9ff; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0xa00; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0xa01; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0xa02; // ETextJustify
		constexpr auto ShapedTextOptions = 0xa03; // FShapedTextOptions
		constexpr auto OnTextChanged = 0xa08; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xa18; // FMulticastInlineDelegate
	}

	namespace n_UN_ItemFunctionSlot {
		constexpr auto CraftingImage = 0xf80; // UImage*
		constexpr auto CraftingProgressBar = 0xf88; // UProgressBar*
	}

	namespace n_UTestMovieSceneTrack {
		constexpr auto bHighPassFilter = 0x80; // bool
		constexpr auto SectionArray = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UN_SlotExtraMenuButton {
		constexpr auto ExtraButton = 0x260; // UButton*
		constexpr auto ExtraText = 0x268; // UTextBlock*
		constexpr auto ActionName = 0x274; // FName [0x18]
		constexpr auto AltText = 0x338; // FText
		constexpr auto ShiftText = 0x350; // FText
		constexpr auto CmdText = 0x368; // FText
		constexpr auto CtrlText = 0x380; // FText
		constexpr auto PlaceText = 0x3a0; // FText
		constexpr auto EquipText = 0x3b8; // FText
		constexpr auto UseText = 0x3d0; // FText
		constexpr auto UnEquipText = 0x3e8; // FText
		constexpr auto SplitText = 0x400; // FText
		constexpr auto RepairText = 0x418; // FText
		constexpr auto ExchangeText = 0x430; // FText
		constexpr auto CraftOneText = 0x448; // FText
		constexpr auto CraftMoreText = 0x460; // FText
		constexpr auto FeedText = 0x478; // FText
		constexpr auto LearnAWText = 0x490; // FText
		constexpr auto GiveText = 0x4a8; // FText
		constexpr auto OpenPackageText = 0x4c0; // FText
		constexpr auto MapSignText = 0x4d8; // FText
		constexpr auto GiftText = 0x4f0; // FText
		constexpr auto ChangeNameText = 0x508; // FText
		constexpr auto AddFoodText = 0x520; // FText
		constexpr auto AddMoneyText = 0x538; // FText
		constexpr auto EquipAppearanceText = 0x550; // FText
		constexpr auto UnEquipAppearanceText = 0x568; // FText
		constexpr auto UnlockAppearanceText = 0x580; // FText
		constexpr auto DropText = 0x598; // FText
		constexpr auto SetPriorityText = 0x5b0; // FText
	}

	namespace n_UScaleKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UDeviceProfile {
		constexpr auto DeviceType = 0x38; // FString
		constexpr auto BaseProfileName = 0x48; // FString
		constexpr auto Parent = 0x58; // UObject*
		constexpr auto CVars = 0x88; // TArray<FString>
	}

	namespace n_USoundNodeAttenuation {
		constexpr auto AttenuationSettings = 0x48; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x50; // FSoundAttenuationSettings
		constexpr auto bOverrideAttenuation = 0x3f0; // char : 1
	}

	namespace n_UMovieSceneIntegerSection {
		constexpr auto IntegerCurve = 0xe8; // FMovieSceneIntegerChannel
	}

	namespace n_USGMiniMap {
		constexpr auto MapTexture = 0x260; // UTexture2D*
		constexpr auto MaskTexture = 0x268; // UTexture2D*
		constexpr auto MapLengthInTexture = 0x270; // float
		constexpr auto MapLengthToCenter = 0x274; // float
		constexpr auto MapOriginPoint = 0x278; // FVector
		constexpr auto MapMaterial = 0x288; // UMaterialInterface*
		constexpr auto bUpdateMiniMap = 0x290; // char : 1
		constexpr auto bUpdateOwnerMoveStyle = 0x290; // char : 1
		constexpr auto bMoveWithOwner = 0x290; // char : 1
		constexpr auto bShowFilter = 0x290; // char : 1
		constexpr auto FilterGridNames = 0x298; // TArray<FName>
		constexpr auto BattleTypeShowFilter = 0x2a8; // TMap<EBattleType, FName>
		constexpr auto bShowCloud = 0x2f8; // char : 1
		constexpr auto bCanMark = 0x2f8; // char : 1
		constexpr auto MarkMenuClass = 0x300; // UMiniMapMarkMenu*
		constexpr auto MarkInterval = 0x308; // float
		constexpr auto bCanMousePressMove = 0x30c; // char : 1
		constexpr auto bRequestGetSpawnLocationInfo = 0x30c; // char : 1
		constexpr auto GetSpawnLocationInterval = 0x310; // float
		constexpr auto bRequestGetHighKiller = 0x314; // char : 1
		constexpr auto GetHighKillerInterval = 0x318; // float
		constexpr auto bRequestGetGeneralInfo = 0x31c; // char : 1
		constexpr auto GetGeneralInfoInterval = 0x320; // float
		constexpr auto bRequestGetAnimalInfo = 0x324; // char : 1
		constexpr auto GetAnimalInfoInterval = 0x328; // float
		constexpr auto bShowZoomSlider = 0x32c; // char : 1
		constexpr auto InterpZoomSpeed = 0x330; // float
		constexpr auto Zoom = 0x334; // float
		constexpr auto MaxZoom = 0x338; // float
		constexpr auto MinZoom = 0x33c; // float
		constexpr auto ZoomStep = 0x340; // float
		constexpr auto MiniMapPOITipsOffset = 0x344; // FVector2D
		constexpr auto MoveDurationTime = 0x34c; // float
		constexpr auto TempAddX = 0x350; // float
		constexpr auto TempAddY = 0x354; // float
		constexpr auto POIMap = 0x358; // TMap<EMapPOIType, FMapPOIList>
		constexpr auto LastMarkTime = 0x3a8; // double
		constexpr auto LastSpawnLocationTime = 0x3b0; // float
		constexpr auto LastHighKillerTime = 0x3b8; // double
		constexpr auto LastGeneralTime = 0x3c0; // double
		constexpr auto LastAnimalTime = 0x3c8; // double
		constexpr auto MiniMapMaterial = 0x3d0; // UMaterialInstanceDynamic*
		constexpr auto Owner = 0x3d8; // ASGPlayerCharacter*
		constexpr auto OwnerPlayerController = 0x3e0; // ASGPlayerController*
		constexpr auto CacheLastKnownOwnerLocation = 0x3e8; // FVector
		constexpr auto LastKnownOwnerLocation = 0x3f4; // FVector
		constexpr auto LastKnownOwnerRotation = 0x400; // FRotator
		constexpr auto LastKnowPawnRotation = 0x40c; // FRotator
		constexpr auto bIsMouseDown = 0x418; // char : 1
		constexpr auto bIsRightMouseDown = 0x418; // char : 1
		constexpr auto bIsCtrlDown = 0x418; // char : 1
		constexpr auto bMouseIn = 0x418; // char : 1
		constexpr auto ClickKey = 0x420; // FKey
		constexpr auto WantZoom = 0x438; // float
		constexpr auto MarkPos = 0x454; // FVector
		constexpr auto bIsFirstOpenMiniMap = 0x460; // char : 1
		constexpr auto bLastOwnerMoved = 0x460; // char : 1
		constexpr auto MarkMenu = 0x468; // UMiniMapMarkMenu*
		constexpr auto OnSGMiniMapPOIClicked = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnMiniMapGroupPOICreated = 0x4b8; // FMulticastInlineDelegate
		constexpr auto MiniMapOverlay = 0x4d8; // UOverlay*
		constexpr auto POICanvas = 0x4e0; // UCanvasPanel*
		constexpr auto OverlayMother = 0x4e8; // UOverlay*
		constexpr auto MiniMapImage = 0x4f0; // UImage*
		constexpr auto CloudCanvas = 0x4f8; // UCanvasPanel*
		constexpr auto ZoomCanvas = 0x500; // UCanvasPanel*
		constexpr auto SliderZoom = 0x508; // USlider*
		constexpr auto BtnZoomIn = 0x510; // UButton*
		constexpr auto BtnZoomOut = 0x518; // UButton*
		constexpr auto FilteredPOITypes = 0x560; // TArray<EMapPOIType>
		constexpr auto FilteredStaticTypes = 0x570; // TArray<EMapStaticPOIType>
		constexpr auto FilteredMarkTypes = 0x580; // TArray<EMiniMapMarkFilterType>
	}

	namespace n_UGridSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
		constexpr auto Row = 0x4c; // int32_t
		constexpr auto RowSpan = 0x50; // int32_t
		constexpr auto Column = 0x54; // int32_t
		constexpr auto ColumnSpan = 0x58; // int32_t
		constexpr auto Layer = 0x5c; // int32_t
		constexpr auto Nudge = 0x60; // FVector2D
	}

	namespace n_USGShopData {
		constexpr auto ShopSquareItemDT = 0x28; // UDataTable*
		constexpr auto ShopBannerDT = 0x30; // UDataTable*
		constexpr auto ShopPropsDT = 0x88; // UDataTable*
	}

	namespace n_UServerCropInfo {
		constexpr auto CropIndex = 0x28; // char
		constexpr auto CropDefaultObject = 0x30; // ASGStructureCrop*
		constexpr auto CropLand = 0x38; // ASGStructureCropLand*
		constexpr auto GrowthRatio = 0x40; // float
		constexpr auto RipeTime = 0x44; // float
		constexpr auto CorruptTime = 0x48; // float
		constexpr auto WaterConsumed = 0x4c; // float
		constexpr auto NFertilizerConsumed = 0x50; // float
		constexpr auto PFertilizerConsumed = 0x54; // float
		constexpr auto KFertilizerConsumed = 0x58; // float
		constexpr auto WaterLessConsumed = 0x5c; // float
		constexpr auto NFertilizerLessConsumed = 0x60; // float
		constexpr auto PFertilizerLessConsumed = 0x64; // float
		constexpr auto KFertilizerLessConsumed = 0x68; // float
		constexpr auto CropRipePhaseDataSaved = 0x70; // TArray<bool>
		constexpr auto HP = 0x80; // float
		constexpr auto RootToFertilizerTimes = 0x84; // int32_t
	}

	namespace n_UPlaneCutToolProperties {
		constexpr auto bSnapToWorldGrid = 0x60; // bool
		constexpr auto bKeepBothHalves = 0x61; // bool
		constexpr auto SpacingBetweenHalves = 0x64; // float
		constexpr auto bFillCutHole = 0x68; // bool
		constexpr auto bShowPreview = 0x69; // bool
		constexpr auto bFillSpans = 0x6a; // bool
	}

	namespace n_USGCraftPerk {
		constexpr auto Name = 0x28; // FText
		constexpr auto Description = 0x40; // FText
		constexpr auto CraftTexture = 0x58; // TSoftObjectPtr<UTexture2D>
		constexpr auto bUseMainLandCraftTexture = 0x80; // char : 1
		constexpr auto MainLandCraftTexture = 0x88; // TSoftObjectPtr<UTexture2D>
		constexpr auto MyCraftIndex = 0xb0; // int32_t
		constexpr auto bHideInCraftPerkUI = 0xb4; // char : 1
		constexpr auto bHideInCraftPerkUIMainLand = 0xb4; // char : 1
		constexpr auto CraftItem = 0xb8; // TArray<USGItem*>
		constexpr auto bUseMainLandCraftItem = 0xc8; // char : 1
		constexpr auto MainLandCraftItem = 0xd0; // TArray<USGItem*>
		constexpr auto CraftInStructureItem = 0xe0; // TArray<USGItem*>
	}

	namespace n_ULevelStreamingDynamic {
		constexpr auto bInitiallyLoaded = 0x148; // char : 1
		constexpr auto bInitiallyVisible = 0x148; // char : 1
	}

	namespace n_UTransformInputsToolProperties {
		constexpr auto bShowTransformUI = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
	}

	namespace n_UMaterialExpressionDepthFade {
		constexpr auto InOpacity = 0x40; // FExpressionInput
		constexpr auto FadeDistance = 0x54; // FExpressionInput
		constexpr auto OpacityDefault = 0x68; // float
		constexpr auto FadeDistanceDefault = 0x6c; // float
	}

	namespace n_UDrawPolygonToolStandardProperties {
		constexpr auto PolygonType = 0x60; // EDrawPolygonDrawMode
		constexpr auto OutputMode = 0x61; // EDrawPolygonOutputMode
		constexpr auto FeatureSizeRatio = 0x64; // float
		constexpr auto ExtrudeHeight = 0x68; // float
		constexpr auto Steps = 0x6c; // int32_t
		constexpr auto bAllowSelfIntersections = 0x70; // bool
		constexpr auto bShowGizmo = 0x71; // bool
	}

	namespace n_UBTTask_TurnToBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_AReplicationGraphDebugActor {
		constexpr auto ReplicationGraph = 0x310; // UReplicationGraph*
		constexpr auto ConnectionManager = 0x318; // UNetReplicationGraphConnection*
	}

	namespace n_UMoveSeatingInfoHUD {
		constexpr auto BindMoveSeat = 0x278; // TWeakObjectPtr<ASG_MoveSeatingCharacter>
		constexpr auto RepairCanvas = 0x280; // UCanvasPanel*
		constexpr auto RepairText = 0x288; // UTextBlock*
		constexpr auto NameText = 0x290; // UTextBlock*
		constexpr auto InfoVerticalBox = 0x298; // UVerticalBox*
		constexpr auto RepairVerticalBox = 0x2a0; // UVerticalBox*
		constexpr auto HPText = 0x2a8; // UStructureInfoHUDSlot*
		constexpr auto GuildText = 0x2b0; // UStructureInfoHUDSlot*
		constexpr auto OwnerText = 0x2b8; // UStructureInfoHUDSlot*
		constexpr auto SkillText = 0x2c0; // UStructureInfoHUDSlot*
		constexpr auto AuthorityText = 0x2c8; // UStructureInfoHUDSlot*
		constexpr auto TenacityText = 0x2d0; // UStructureInfoHUDSlot*
		constexpr auto DecayText = 0x2d8; // UStructureInfoHUDSlot*
		constexpr auto RepairTextList = 0x2e0; // TArray<UStructureInfoHUDSlot*>
		constexpr auto FriendColor = 0x2f0; // FLinearColor
		constexpr auto NeutralColor = 0x300; // FLinearColor
		constexpr auto EnemyColor = 0x310; // FLinearColor
		constexpr auto StructureInfoHUDSlot = 0x320; // UStructureInfoHUDSlot*
		constexpr auto DecayColor = 0x328; // FLinearColor
	}

	namespace n_UUI_StructureOccupyExpansionSlot {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto BindItem = 0x268; // TWeakObjectPtr<USGItem>
		constexpr auto RootSGUI = 0x270; // UUI_StructureOccupyExpansionPanel*
		constexpr auto ItemNameText = 0x278; // UTextBlock*
		constexpr auto ItemPriceText = 0x280; // UTextBlock*
		constexpr auto ItemImage = 0x288; // UImage*
	}

	namespace n_UFieldSystemMetaDataProcessingResolution {
		constexpr auto ResolutionType = 0xc0; // EFieldResolutionType
	}

	namespace n_UAbilitySystemTestAttributeSet {
		constexpr auto MaxHealth = 0x34; // float
		constexpr auto Health = 0x38; // float
		constexpr auto Mana = 0x3c; // float
		constexpr auto MaxMana = 0x40; // float
		constexpr auto Damage = 0x44; // float
		constexpr auto SpellDamage = 0x48; // float
		constexpr auto PhysicalDamage = 0x4c; // float
		constexpr auto CritChance = 0x50; // float
		constexpr auto CritMultiplier = 0x54; // float
		constexpr auto ArmorDamageReduction = 0x58; // float
		constexpr auto DodgeChance = 0x5c; // float
		constexpr auto LifeSteal = 0x60; // float
		constexpr auto Strength = 0x64; // float
		constexpr auto StackingAttribute1 = 0x68; // float
		constexpr auto StackingAttribute2 = 0x6c; // float
		constexpr auto NoStackAttribute = 0x70; // float
	}

	namespace n_UOctreeDynamicMeshComponent {
		constexpr auto bExplicitShowWireframe = 0x510; // bool
	}

	namespace n_ULoudnessNRT {
		constexpr auto Settings = 0x78; // ULoudnessNRTSettings*
	}

	namespace n_UBakeTransformTool {
		constexpr auto BasicProperties = 0x90; // UBakeTransformToolProperties*
	}

	namespace n_UInterpTrackInstVectorProp {
		constexpr auto ResetVector = 0x58; // FVector
	}

	namespace n_URewardCondition {
		constexpr auto Description = 0x28; // FString
		constexpr auto EventType = 0x38; // ESGStatisticsEventType
		constexpr auto ParamReference = 0x39; // EStatisticsSetParamReference
		constexpr auto Param = 0x40; // FString
	}

	namespace n_ACreateRoleCameraActor {
		constexpr auto CameraLevelDatas = 0x8a8; // TArray<FCreateRoleCameraLevelData>
		constexpr auto DefaultCameraLevel = 0x8b8; // int32_t
		constexpr auto DefaultCameraTarget = 0x8bc; // FName
		constexpr auto WheelInterval = 0x8c4; // float
		constexpr auto DefaultLocation = 0x8c8; // FVector
		constexpr auto CameraInterpDuration = 0x8d4; // float
		constexpr auto CameraInterpCurve = 0x8d8; // UCurveFloat*
		constexpr auto DefaultRotator = 0x8e0; // FRotator
		constexpr auto FreeOffsetStep = 0x8ec; // float
		constexpr auto FreeOffsetInterpSpeed = 0x8f0; // float
		constexpr auto ResetFreeOffsetInterpSpeed = 0x8f4; // float
		constexpr auto CameraRelativeLocationOffset = 0x924; // FVector
		constexpr auto FreeRelativeLocationOffset = 0x930; // FVector
		constexpr auto TargetFreeRelativeLocationOffset = 0x93c; // FVector
		constexpr auto CameraDistance = 0x948; // float
		constexpr auto CameraFOV = 0x94c; // float
		constexpr auto CameraLevel = 0x950; // int32_t
		constexpr auto CameraTarget = 0x954; // FName
		constexpr auto bFree = 0x95c; // char : 1
	}

	namespace n_ASG_MoveSeatingCharacter {
		constexpr auto bCheckGroundRotation = 0x20f0; // char : 1
		constexpr auto bDrawDebugLine = 0x20f0; // char : 1
		constexpr auto CurrentGroundRotation = 0x20f4; // FRotator
		constexpr auto TargetGroundRotation = 0x2100; // FRotator
		constexpr auto MeshWalkAngle = 0x210c; // float
		constexpr auto DefaultWalkAngle = 0x2110; // float
		constexpr auto LastCheckGroundLocation = 0x2114; // FVector
		constexpr auto LastCheckGroundRotator = 0x2120; // FRotator
		constexpr auto CheckSiegeRoationInterval = 0x212c; // float
		constexpr auto LastGetSiegeRoationTimer = 0x2130; // float
		constexpr auto SiegeAbsAlignPitchMax = 0x2134; // float
		constexpr auto bGetOriginMeshRotator = 0x2138; // char : 1
		constexpr auto OriginMeshRotator = 0x213c; // FRotator
		constexpr auto SiegeMeshRelativeRotateSpeed = 0x2148; // float
		constexpr auto InitMaxHPMulAdd = 0x214c; // float
		constexpr auto HPMulAdd = 0x2150; // float
		constexpr auto CustomRotateSpeedMul = 0x2154; // float
		constexpr auto HelpPerkRotateSpeedMul = 0x2158; // float
		constexpr auto HelpPerkMoveSpeedMul = 0x215c; // float
		constexpr auto DefaultSpeed = 0x2160; // float
		constexpr auto bBackChangeSpeed = 0x2164; // char : 1
		constexpr auto BackSpeedMulti = 0x2168; // float
		constexpr auto bBackChangeRotateSpeed = 0x216c; // char : 1
		constexpr auto BackRotateSpeedMulti = 0x2170; // float
		constexpr auto LastMoveForwardAxis = 0x2174; // float
		constexpr auto bNeedUpdateMovementSpeed = 0x2178; // char : 1
		constexpr auto CurrentForwardSiegeSpeed = 0x217c; // float
		constexpr auto CurrentForwardRotateSpeedMulti = 0x2180; // float
		constexpr auto bCanTurnInSitu = 0x2184; // char : 1
		constexpr auto InversiveMoveForRider = 0x2184; // char : 1
		constexpr auto RotationRate = 0x2188; // float
		constexpr auto LinearRotationRate = 0x218c; // char : 1
		constexpr auto ConsumeItem = 0x2190; // USGItem*
		constexpr auto LinkFrameStructure = 0x2198; // ASGStructureFrame*
		constexpr auto GivingItemFromDemolishPercentage = 0x21a0; // float
		constexpr auto bCanSetStructureAuthority = 0x21a4; // char : 1
		constexpr auto StructureAuthority = 0x21a8; // int32_t
		constexpr auto CurrentStructureProssessAuth = 0x21ac; // int32_t
		constexpr auto CurrentStructureAllianceCreate = 0x21b0; // int32_t
		constexpr auto CurrentStructureAllianceInventory = 0x21b4; // int32_t
		constexpr auto bCanBebDemolished = 0x21b8; // char : 1
		constexpr auto NumSeats = 0x21bc; // int32_t
		constexpr auto CheckCanSeatBoxCollision = 0x21c0; // TMap<int32_t, FVector>
		constexpr auto SeatSocketName = 0x2210; // TArray<FName>
		constexpr auto AllSeatedCharacter = 0x2220; // TArray<ABaseCharacter*>
		constexpr auto SaveGameAllSeatedCharacter = 0x2240; // TArray<ABaseCharacter*>
		constexpr auto AllSeatedCameraName = 0x2250; // TArray<FName>
		constexpr auto ServerCheckControlDistance = 0x2260; // float
		constexpr auto NumUsers = 0x2264; // int32_t
		constexpr auto UnboardDistance = 0x2268; // float
		constexpr auto SeatedCharacterLocationOffset = 0x226c; // FVector
		constexpr auto SeatedCharacterRotationOffset = 0x2278; // FRotator
		constexpr auto UnRideSoundID = 0x2284; // FName
		constexpr auto RideSoundID = 0x228c; // FName
		constexpr auto MovingSoundID = 0x2294; // FName
		constexpr auto bFallingReleaseAll = 0x229c; // char : 1
		constexpr auto bSwimmingReleaseAll = 0x229c; // char : 1
		constexpr auto ForwardBoxTrace = 0x22a8; // TArray<FMoveBoxTrace>
		constexpr auto BackBoxTrace = 0x22b8; // TArray<FMoveBoxTrace>
		constexpr auto LeftBoxTrace = 0x22c8; // TArray<FMoveBoxTrace>
		constexpr auto RightBoxTrace = 0x22d8; // TArray<FMoveBoxTrace>
		constexpr auto AnimInstanceAnims = 0x22e8; // FAnimalsAnimInstanceConfig
		constexpr auto PassengerGaitValueSpeedMulti = 0x2368; // float
		constexpr auto OtherAnimInstanceAnims = 0x2370; // TArray<FAnimalsAnimInstanceConfig>
		constexpr auto ServerCheckSendMoveDamageDistance = 0x2384; // float
		constexpr auto bMoveDamageFoliage = 0x2388; // char : 1
		constexpr auto MoveDamageTypeClass = 0x2390; // USGDamageType*
		constexpr auto FourWheelAlignment = 0x2398; // FVector [0x4]
		constexpr auto RotateTraceLength = 0x23c8; // float
		constexpr auto bUseSplineRoute = 0x23cc; // char : 1
		constexpr auto FollowSplineActor = 0x23d0; // TWeakObjectPtr<ASplineRouteActor>
		constexpr auto FinshSplineMove = 0x23d8; // char : 1
		constexpr auto FollowSplinePointNum = 0x23dc; // int32_t
		constexpr auto LinkPerkStructure = 0x23e0; // ASGStructure*
		constexpr auto bCanNPCHelp = 0x23e8; // char : 1
		constexpr auto AllowNPCHelpClass = 0x23f0; // TArray<ABaseCharacter*>
		constexpr auto InteractiveReleaseHelpNpcs = 0x2400; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto BeAIAttackSocketName = 0x2410; // FName
		constexpr auto MoveSeatWeightMul = 0x2418; // float
		constexpr auto bIsEnergyCharacter = 0x241c; // char : 1
		constexpr auto bUsingEnergy = 0x241c; // char : 1
		constexpr auto CurrentPower = 0x2420; // float
		constexpr auto PowerFactor = 0x2424; // float
		constexpr auto MoveSeatSelfWeight = 0x2428; // float
		constexpr auto UsingEnergyStructure = 0x2430; // TArray<TWeakObjectPtr<ASGStructureEnergy>>
		constexpr auto bEnergyStructureUseGear = 0x2440; // char : 1
		constexpr auto GearConfig = 0x2448; // TArray<FEnergyStructureGearConfig>
		constexpr auto CurrentGearIndex = 0x2458; // int32_t
		constexpr auto bShowLogs = 0x245c; // char : 1
		constexpr auto LogMaxNum = 0x2460; // int32_t
		constexpr auto MoveSeatItemLogs = 0x2468; // TArray<FItemOptionLogInfo>
		constexpr auto bDecay = 0x2478; // char : 1
		constexpr auto bNeedDecay = 0x2478; // char : 1
		constexpr auto bInOtherOccupyArea = 0x2478; // char : 1
		constexpr auto DecayInterval = 0x247c; // float
		constexpr auto NoTeamAreaDecayHPPercent = 0x2480; // float
		constexpr auto TeamAreaDecayHPPercent = 0x2484; // float
		constexpr auto CurrentPassword = 0x2494; // uint32_t
		constexpr auto bLockedByPassword = 0x2498; // char : 1
		constexpr auto LastInputPwdFailedTime = 0x24a0; // double
		constexpr auto CanPull = 0x24a8; // char : 1
		constexpr auto PullLimitAngle = 0x24ac; // float
		constexpr auto BaseDisFromPuller = 0x24b0; // float
		constexpr auto IgnoreDiffDisFromPuller = 0x24b4; // float
		constexpr auto IgnoreDiffYawFromPuller = 0x24b8; // float
		constexpr auto UnLinkDiffDisFromPuller = 0x24bc; // float
		constexpr auto UnLinkPitchAngleMax = 0x24c0; // float
		constexpr auto LinkedMoveAdjustDiffDist = 0x24c4; // float
		constexpr auto LinkedMoveAdjustDiffDistSelf = 0x24c8; // float
		constexpr auto LinkedSwimAdjustDiffDistSelf = 0x24cc; // float
		constexpr auto LinkedRotYawSpeed = 0x24d0; // float
		constexpr auto WeightMultiplyForPuller = 0x24d4; // float
		constexpr auto MaxWeightMultiplyForPuller = 0x24d8; // float
		constexpr auto SpeedMulAddForPuller = 0x24dc; // float
		constexpr auto SwimSpeedMulAddForPuller = 0x24e0; // float
		constexpr auto CurrentBaseDisFromPuller = 0x24e4; // float
		constexpr auto CurrentBaseDiffHeight = 0x24e8; // float
		constexpr auto CurrentUnLinkDiffHeightFromPuller = 0x24ec; // float
		constexpr auto CurrentLinkedMoveAdjustDiffDist = 0x24f0; // float
		constexpr auto CurrentLinkedMoveAdjustDiffDistSelf = 0x24f4; // float
		constexpr auto CurrentLinkedSwimAdjustDiffDistSelf = 0x24f8; // float
		constexpr auto CurrentWeightMultiplyForPuller = 0x24fc; // float
		constexpr auto CurrentMaxWeightMultiplyForPuller = 0x2500; // float
		constexpr auto LastCheckLinkHeightDiffZ = 0x2504; // float
		constexpr auto Puller = 0x2508; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto CanAnimalPull = 0x2518; // char : 1
		constexpr auto AllowAnimalPullerConfig = 0x2520; // TArray<FMoveSeatAnimalPullerInfo>
		constexpr auto InteractiveAnimalPullers = 0x2530; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto LinkPullerCheckBoxComponent = 0x2540; // UBoxComponent*
		constexpr auto CanAddPowerCharacter = 0x2548; // char : 1
		constexpr auto InversiveMoveForPowerRider = 0x2548; // char : 1
		constexpr auto AddPowerCharInteractiveRadius = 0x254c; // float
		constexpr auto AllowPowerConfig = 0x2550; // TArray<FMoveSeatPowerInfo>
		constexpr auto SeatInfoConfig = 0x2560; // TArray<FMoveSeatingCharSeatInfo>
		constexpr auto InteractivePowerChars = 0x2570; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto InteractiveNormalPowerChars = 0x2580; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto InteractiveReleasePowerChars = 0x2590; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto CanResetPos = 0x25a0; // char : 1
		constexpr auto ResetPosCoolTime = 0x25a4; // int32_t
		constexpr auto ResetPosRadius = 0x25a8; // float
		constexpr auto BuildStructureClass = 0x25b0; // ASGStructure*
		constexpr auto LastResetPosDate = 0x25b8; // FDateTime
		constexpr auto bDebugDraw = 0x25c0; // char : 1
		constexpr auto bCantSetCapsuleCollisionProfile = 0x25c0; // char : 1
		constexpr auto bMoveIgnorePlatformStructures = 0x25c0; // char : 1
		constexpr auto CanControlOnlyPlayer = 0x25c0; // char : 1
		constexpr auto MoveIgnorePlatformActors = 0x25c8; // TArray<AActor*>
		constexpr auto ClientLastMoveIgnorePlatformActors = 0x25d8; // TArray<AActor*>
		constexpr auto bSupportSwimMode = 0x25f8; // char : 1
		constexpr auto SwimWeightLimit = 0x25fc; // float
		constexpr auto PassengerAnimsConfig = 0x2600; // FPassengerAnimsConfig
		constexpr auto ReleaseSocket = 0x2610; // FName
		constexpr auto ReleaseSocketBackUpArray = 0x2618; // TArray<FName>
		constexpr auto ReleaseSocketCheckRadius = 0x2628; // float
		constexpr auto bReleaseInOriginLocation = 0x262c; // char : 1
		constexpr auto ReleaseForwardMoveDistance = 0x2630; // float
		constexpr auto Tenacity = 0x2634; // int32_t
		constexpr auto PVETakeDamageMultiAdd = 0x2638; // float
		constexpr auto InventoryWeight = 0x263c; // float
		constexpr auto bPersonalStructure = 0x2640; // char : 1
		constexpr auto bCanRepair = 0x2640; // char : 1
		constexpr auto bRepairing = 0x2640; // char : 1
		constexpr auto NextAllowRepairTime = 0x2648; // double
		constexpr auto RepairCooldownTime = 0x2650; // int32_t
		constexpr auto RepairInterval = 0x2654; // float
		constexpr auto RepairHPPerInterval = 0x2658; // float
		constexpr auto RepairHPRemain = 0x265c; // float
		constexpr auto RepairHandle = 0x2660; // FTimerHandle
		constexpr auto RepairHPPerMul = 0x2668; // float
	}

	namespace n_UWBP_SingleCellHPSettingComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto SettingComboBox = 0x370; // UComboBoxString*
		constexpr auto TbTitle = 0x378; // UTextBlock*
		constexpr auto Title = 0x380; // FText
	}

	namespace n_UTextureRenderTarget3D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto AddressX = 0xfc; // TextureAddress
		constexpr auto AddressY = 0xfd; // TextureAddress
		constexpr auto AddressZ = 0xfe; // TextureAddress
		constexpr auto bForceLinearGamma = 0xff; // char : 1
		constexpr auto bGPUSharedFlag = 0xff; // char : 1
		constexpr auto bAutoGenerateMips = 0xff; // char : 1
		constexpr auto RenderTargetFormat = 0x100; // ETextureRenderTargetFormat
		constexpr auto OverrideFormat = 0x101; // EPixelFormat
	}

	namespace n_UComboBox {
		constexpr auto Items = 0x108; // TArray<UObject*>
		constexpr auto OnGenerateWidgetEvent = 0x118; // FDelegate
		constexpr auto bIsFocusable = 0x128; // bool
	}

	namespace n_UGizmoLineHandleComponent {
		constexpr auto Normal = 0x4a8; // FVector
		constexpr auto HandleSize = 0x4b4; // float
		constexpr auto Thickness = 0x4b8; // float
		constexpr auto Direction = 0x4bc; // FVector
		constexpr auto Length = 0x4c8; // float
		constexpr auto bImageScale = 0x4cc; // bool
	}

	namespace n_UUI_StructureOccupyExpansionPanel {
		constexpr auto RootSGUI = 0x270; // USGUI*
		constexpr auto ProtectBox = 0x278; // UUniformGridPanel*
		constexpr auto ExpansionText = 0x280; // UTextBlock*
		constexpr auto ExpansionNumText = 0x288; // UTextBlock*
		constexpr auto SellAllButton = 0x290; // UButton*
		constexpr auto SellAllButtonText = 0x298; // UTextBlock*
		constexpr auto CharacterNumText = 0x2a0; // UTextBlock*
		constexpr auto CharacterPriceText = 0x2a8; // UTextBlock*
		constexpr auto GuildNumText = 0x2b0; // UTextBlock*
		constexpr auto GuildPriceText = 0x2b8; // UTextBlock*
		constexpr auto OccupyExpansionSlotClass = 0x2c0; // UUI_StructureOccupyExpansionSlot*
		constexpr auto SellItems = 0x2c8; // TArray<FGuid>
		constexpr auto CharacterTotalNum = 0x2d8; // int32_t
		constexpr auto CharacterTotalPrice = 0x2dc; // float
		constexpr auto GameModeCharacterTotalNum = 0x2e0; // int32_t
		constexpr auto GameModeCharacterTotalPrice = 0x2e4; // float
		constexpr auto GuildTotalNum = 0x2e8; // int32_t
		constexpr auto GuildTotalPrice = 0x2ec; // float
	}

	namespace n_ULandscapeMeshProxyComponent {
		constexpr auto LandscapeGuid = 0x518; // FGuid
		constexpr auto ProxyComponentBases = 0x528; // TArray<FIntPoint>
		constexpr auto ProxyLOD = 0x538; // int8_t
	}

	namespace n_UAnimSharingAdditiveInstance {
		constexpr auto BaseComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto AdditiveAnimation = 0x2c8; // TWeakObjectPtr<UAnimSequence>
		constexpr auto Alpha = 0x2d0; // float
		constexpr auto bStateBool = 0x2d4; // bool
	}

	namespace n_UBrainComponent {
		constexpr auto BlackboardComp = 0xc8; // UBlackboardComponent*
		constexpr auto AIOwner = 0xd0; // AAIController*
	}

	namespace n_UBuildPatchManifest {
		constexpr auto ManifestFileVersion = 0x28; // char
		constexpr auto bIsFileData = 0x29; // bool
		constexpr auto AppID = 0x2c; // uint32_t
		constexpr auto AppName = 0x30; // FString
		constexpr auto BuildVersion = 0x40; // FString
		constexpr auto LaunchExe = 0x50; // FString
		constexpr auto LaunchCommand = 0x60; // FString
		constexpr auto PrereqIds = 0x70; // TSet<FString>
		constexpr auto PrereqName = 0xc0; // FString
		constexpr auto PrereqPath = 0xd0; // FString
		constexpr auto PrereqArgs = 0xe0; // FString
		constexpr auto FileManifestList = 0xf0; // TArray<FFileManifestData>
		constexpr auto ChunkList = 0x100; // TArray<FChunkInfoData>
		constexpr auto CustomFields = 0x110; // TArray<FCustomFieldData>
	}

	namespace n_UPlayer {
		constexpr auto PlayerController = 0x30; // APlayerController*
		constexpr auto CurrentNetSpeed = 0x38; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x3c; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x40; // int32_t
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_USkeletalMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto BoneName = 0x30; // FName
		constexpr auto RelativeLocation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale = 0x50; // FVector
		constexpr auto bForceAlwaysAnimated = 0x5c; // bool
		constexpr auto bCanBeAffectedByMorphTargets = 0x5d; // bool
	}

	namespace n_UAssetMappingTable {
		constexpr auto MappedAssets = 0x28; // TArray<FAssetMapping>
	}

	namespace n_UPanelWidget {
		constexpr auto Slots = 0x108; // TArray<UPanelSlot*>
	}

	namespace n_AAbilitySystemTestPawn {
		constexpr auto AbilitySystemComponent = 0x3b0; // UAbilitySystemComponent*
	}

	namespace n_UAbilityTask_WaitAttributeChangeThreshold {
		constexpr auto OnChange = 0x80; // FMulticastInlineDelegate
		constexpr auto ExternalOwner = 0xe8; // UAbilitySystemComponent*
	}

	namespace n_UWidgetBlueprintGeneratedClass {
		constexpr auto WidgetTree = 0x328; // UWidgetTree*
		constexpr auto bClassRequiresNativeTick = 0x330; // char : 1
		constexpr auto Bindings = 0x338; // TArray<FDelegateRuntimeBinding>
		constexpr auto Animations = 0x348; // TArray<UWidgetAnimation*>
		constexpr auto NamedSlots = 0x358; // TArray<FName>
	}

	namespace n_UMovieScene3DAttachSection {
		constexpr auto AttachSocketName = 0x118; // FName
		constexpr auto AttachComponentName = 0x120; // FName
		constexpr auto AttachmentLocationRule = 0x128; // EAttachmentRule
		constexpr auto AttachmentRotationRule = 0x129; // EAttachmentRule
		constexpr auto AttachmentScaleRule = 0x12a; // EAttachmentRule
		constexpr auto DetachmentLocationRule = 0x12b; // EDetachmentRule
		constexpr auto DetachmentRotationRule = 0x12c; // EDetachmentRule
		constexpr auto DetachmentScaleRule = 0x12d; // EDetachmentRule
	}

	namespace n_ACameraRig_Crane {
		constexpr auto CranePitch = 0x310; // float
		constexpr auto CraneYaw = 0x314; // float
		constexpr auto CraneArmLength = 0x318; // float
		constexpr auto bLockMountPitch = 0x31c; // bool
		constexpr auto bLockMountYaw = 0x31d; // bool
		constexpr auto TransformComponent = 0x320; // USceneComponent*
		constexpr auto CraneYawControl = 0x328; // USceneComponent*
		constexpr auto CranePitchControl = 0x330; // USceneComponent*
		constexpr auto CraneCameraMount = 0x338; // USceneComponent*
	}

	namespace n_UGuildSkillToolTipWidget {
		constexpr auto BindGuildSkillSlot = 0x288; // TWeakObjectPtr<UN_GuildSkillSlot>
		constexpr auto NameText = 0x290; // UTextBlock*
		constexpr auto EffectText1 = 0x298; // UTextBlock*
		constexpr auto EffectText2 = 0x2a0; // UTextBlock*
		constexpr auto EffectText3 = 0x2a8; // UTextBlock*
		constexpr auto RequireGuildLevelCanvas = 0x2b0; // UCanvasPanel*
		constexpr auto GuildLevel = 0x2b8; // UTextBlock*
		constexpr auto NeedGuildLevel = 0x2c0; // UTextBlock*
		constexpr auto RequireGuildSkillCanvas1 = 0x2c8; // UCanvasPanel*
		constexpr auto GuildSkill1 = 0x2d0; // UTextBlock*
		constexpr auto HideGuildSkill1 = 0x2d8; // UTextBlock*
		constexpr auto NeedGuildSkill1 = 0x2e0; // UTextBlock*
		constexpr auto RequireGuildSkillCanvas2 = 0x2e8; // UCanvasPanel*
		constexpr auto GuildSkill2 = 0x2f0; // UTextBlock*
		constexpr auto HideGuildSkill2 = 0x2f8; // UTextBlock*
		constexpr auto NeedGuildSkill2 = 0x300; // UTextBlock*
		constexpr auto RequireGuildSkillCanvas3 = 0x308; // UCanvasPanel*
		constexpr auto GuildSkill3 = 0x310; // UTextBlock*
		constexpr auto HideGuildSkill3 = 0x318; // UTextBlock*
		constexpr auto NeedGuildSkill3 = 0x320; // UTextBlock*
		constexpr auto RequirePointCanvas = 0x328; // UCanvasPanel*
		constexpr auto ActivityPoint = 0x330; // UTextBlock*
		constexpr auto NeedActivityPoint = 0x338; // UTextBlock*
		constexpr auto RequireCapitalCanvas = 0x340; // UCanvasPanel*
		constexpr auto GuildCopper = 0x348; // UTextBlock*
		constexpr auto NeedGuildCopper = 0x350; // UTextBlock*
		constexpr auto RequireVertical = 0x358; // UVerticalBox*
		constexpr auto EnoughColor = 0x360; // FLinearColor
		constexpr auto NotEnoughColor = 0x370; // FLinearColor
	}

	namespace n_UPaperSprite {
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BakedSourceUV = 0x48; // FVector2D
		constexpr auto BakedSourceDimension = 0x50; // FVector2D
		constexpr auto BakedSourceTexture = 0x58; // UTexture2D*
		constexpr auto DefaultMaterial = 0x60; // UMaterialInterface*
		constexpr auto AlternateMaterial = 0x68; // UMaterialInterface*
		constexpr auto Sockets = 0x70; // TArray<FPaperSpriteSocket>
		constexpr auto SpriteCollisionDomain = 0x80; // ESpriteCollisionMode
		constexpr auto PixelsPerUnrealUnit = 0x84; // float
		constexpr auto BodySetup = 0x88; // UBodySetup*
		constexpr auto AlternateMaterialSplitIndex = 0x90; // int32_t
		constexpr auto BakedRenderData = 0x98; // TArray<FVector4>
	}

	namespace n_UBTService_UpdateFollowStatus {
		constexpr auto bAlwaysUpdateFollowLoc = 0xb0; // char : 1
	}

	namespace n_UMaterialExpressionTextureBase {
		constexpr auto Texture = 0x40; // UTexture*
	}

	namespace n_UAnimCompress_RemoveLinearKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
		constexpr auto MaxEffectorDiff = 0x4c; // float
		constexpr auto MinEffectorDiff = 0x50; // float
		constexpr auto EffectorDiffSocket = 0x54; // float
		constexpr auto ParentKeyScale = 0x58; // float
		constexpr auto bRetarget = 0x5c; // char : 1
		constexpr auto bActuallyFilterLinearKeys = 0x5c; // char : 1
	}

	namespace n_USceneEffectSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto AverageDistance = 0x2c; // float
		constexpr auto DistributeVariance = 0x30; // float
		constexpr auto MinimumDistance = 0x34; // float
		constexpr auto bInWater = 0x38; // bool
		constexpr auto OverlapPriority = 0x3c; // float
		constexpr auto CollisionRaduis = 0x40; // float
		constexpr auto WithFoliageInfos = 0x48; // TArray<FWithFoliageInfo>
		constexpr auto SceneEffectActorClass = 0x58; // AActor*
		constexpr auto bSpawnWithRotation = 0x60; // char : 1
	}

	namespace n_USystemSettingItemTips {
		constexpr auto TbTipsContent = 0x288; // UTextBlock*
	}

	namespace n_UParticleModuleRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionFloat
	}

	namespace n_USGCharacterAnimInstance {
		constexpr auto SGCharacter = 0x2c0; // ASGCharacter*
		constexpr auto SGAnimalsCharacter = 0x2d8; // ASG_AnimalsCharacter*
		constexpr auto SGAnimalsAnimInstance = 0x2e0; // USG_AnimalsAnimInstance*
		constexpr auto SGMoveSeatingCharacter = 0x2e8; // ASG_MoveSeatingCharacter*
		constexpr auto SGSiegeAnimInstance = 0x2f0; // USiegeAnimInstance*
		constexpr auto PreviewMontage = 0x2f8; // UAnimMontage*
		constexpr auto bIsPreviewSceneAnimInstance = 0x300; // char : 1
		constexpr auto IsWantMoving = 0x300; // char : 1
		constexpr auto UseUpperBodyLayer = 0x300; // char : 1
		constexpr auto IsGroundMovementMode = 0x300; // char : 1
		constexpr auto IsFallingMovementMode = 0x300; // char : 1
		constexpr auto IsRagdollMovementMode = 0x300; // char : 1
		constexpr auto IsSwimMovementMode = 0x300; // char : 1
		constexpr auto IsClimbMovementMode = 0x301; // char : 1
		constexpr auto IsRiderMovementMode = 0x301; // char : 1
		constexpr auto bIsPassengerMovementMode = 0x301; // char : 1
		constexpr auto IsRiderGroundMovementMode = 0x301; // char : 1
		constexpr auto IsRiderFallingMovementMode = 0x301; // char : 1
		constexpr auto IsRiderSwimMovementMode = 0x301; // char : 1
		constexpr auto IsStand = 0x301; // char : 1
		constexpr auto IsCrouch = 0x301; // char : 1
		constexpr auto IsMeleeFighting = 0x302; // char : 1
		constexpr auto IsMeleeNotFighting = 0x302; // char : 1
		constexpr auto IsShooterFighting = 0x302; // char : 1
		constexpr auto IsShooterNotFighting = 0x302; // char : 1
		constexpr auto IsFightingOrPlayAttackMontage = 0x302; // char : 1
		constexpr auto IsRiderMeleePlayAttackMontage = 0x302; // char : 1
		constexpr auto IsRiderMeleePlaySprintAttackMontage = 0x302; // char : 1
		constexpr auto IsInAirVelocity = 0x302; // char : 1
		constexpr auto Enum_CurrentWeaponType = 0x303; // EPrimaryWeaponType
		constexpr auto Struct_Empty_Stand_Rlx_Anim = 0x308; // FAnimsConfig
		constexpr auto UnarmStandRlxAnim = 0x1be0; // FOptimizationAnimsConfig
		constexpr auto UnarmStandAimAnim = 0x3570; // FOptimizationAnimsConfig
		constexpr auto UnarmCrouchRlxAnim = 0x4f00; // FOptimizationAnimsConfig
		constexpr auto UnarmCrouchAimAnim = 0x6890; // FOptimizationAnimsConfig
		constexpr auto Struct_Wep_Stand_Rlx_Anim = 0x6948; // FAnimsConfig
		constexpr auto WeaponStandRlxAnim = 0x8220; // FOptimizationAnimsConfig
		constexpr auto WeaponStandAimAnim = 0x9bb0; // FOptimizationAnimsConfig
		constexpr auto WeaponCrouchRlxAnim = 0xb540; // FOptimizationAnimsConfig
		constexpr auto WeaponCrouchAimAnim = 0xced0; // FOptimizationAnimsConfig
		constexpr auto IsMoveForward = 0xcf88; // char : 1
		constexpr auto GroundPlayRate = 0xcf8c; // float
		constexpr auto Enum_VehicleType = 0xcf90; // EVehicleType
		constexpr auto Struct_AnimalsStandConfig = 0xd710; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsStandHindConfig = 0xd790; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsSittingConfig = 0xd810; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsLyingConfig = 0xd890; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsSwimConfig = 0xd910; // FAnimalsAnimInstanceConfig
		constexpr auto Velocity = 0xd990; // FVector
		constexpr auto IsDead = 0xd99c; // char : 1
		constexpr auto DeathAnimPose = 0xd9a0; // UAnimSequence*
		constexpr auto DeathAnimPoses = 0xd9a8; // TArray<UAnimSequence*>
		constexpr auto PreviewDeathAnimPose = 0xd9b8; // UAnimSequence*
		constexpr auto IsSleeping = 0xd9c0; // char : 1
		constexpr auto IsStun = 0xd9c0; // char : 1
		constexpr auto IsMoving = 0xd9c0; // char : 1
		constexpr auto HasMovementInput = 0xd9c0; // char : 1
		constexpr auto IsPlayerInput = 0xd9c0; // char : 1
		constexpr auto LookingRotation = 0xd9c4; // FRotator
		constexpr auto LastVelocityRotation = 0xd9d0; // FRotator
		constexpr auto LastMovementInputRotation = 0xd9dc; // FRotator
		constexpr auto AimYawDelta = 0xd9e8; // float
		constexpr auto AimYawRate = 0xd9ec; // float
		constexpr auto Speed = 0xd9f0; // float
		constexpr auto bIsQuickTurn = 0xd9f4; // bool
		constexpr auto ShouldTurnInPlace = 0xd9f5; // char : 1
		constexpr auto TurningInPlace = 0xd9f5; // char : 1
		constexpr auto TurningRight = 0xd9f5; // char : 1
		constexpr auto TurnInPlaceDelayCount = 0xd9f8; // float
		constexpr auto ActiveTurnInPlaceMontage = 0xda00; // UAnimMontage*
		constexpr auto UseAimOffSet = 0xda08; // char : 1
		constexpr auto AimOffSetInterpSpeed = 0xda0c; // float
		constexpr auto RiderAimOffSetInterpSpeed = 0xda10; // float
		constexpr auto AimOffset = 0xda14; // FVector2D
		constexpr auto ExtraAimOffset = 0xda1c; // FVector2D
		constexpr auto Enum_CurrentAimDirection = 0xda24; // EAimDirection
		constexpr auto Stand_GaitValue = 0xda28; // float
		constexpr auto Crouch_GaitValue = 0xda2c; // float
		constexpr auto Swim_GaitValue = 0xda30; // float
		constexpr auto MovingDirection = 0xda34; // float
		constexpr auto ArchDirection = 0xda38; // float
		constexpr auto Stand_PlayRate = 0xda3c; // float
		constexpr auto Crouch_PlayRate = 0xda40; // float
		constexpr auto MovingStartPosition = 0xda44; // float
		constexpr auto IdlePlayRate = 0xda48; // float
		constexpr auto IdlePosition = 0xda4c; // float
		constexpr auto Enum_StanceMode = 0xda50; // EStanceMode
		constexpr auto Enum_RotationMode = 0xda51; // ERotationMode
		constexpr auto Enum_MovementMode = 0xda52; // ECustomMovementMode
		constexpr auto Enum_PrevMovementMode = 0xda53; // ECustomMovementMode
		constexpr auto Enum_VehicleMovementMode = 0xda54; // ECustomMovementMode
		constexpr auto Enum_VehiclePrevMovementMode = 0xda55; // ECustomMovementMode
		constexpr auto Enum_MovementDirection = 0xda56; // EMovementDirection
		constexpr auto Enum_CardinalDirection = 0xda57; // EInputDirection
		constexpr auto bShowFootTrace = 0xdb98; // char : 1
		constexpr auto FootTraceChannel = 0xdb99; // ETraceTypeQuery
		constexpr auto EnableFootIK = 0xdb9a; // bool
		constexpr auto FootIkAlpha = 0xdb9c; // float
		constexpr auto PelvisHeightErrorTolerance = 0xdba0; // float
		constexpr auto FootHeightErrorTolerance = 0xdba4; // float
		constexpr auto FootTraceLengthAbove = 0xdba8; // float
		constexpr auto FootTraceLengthBelow = 0xdbac; // float
		constexpr auto LeftFootBoneName = 0xdbb0; // FName
		constexpr auto RightFootBoneName = 0xdbb8; // FName
		constexpr auto FootRotationOffsetInterpSpeed = 0xdbc0; // float
		constexpr auto FootZOffsetInterpSpeed = 0xdbc4; // float
		constexpr auto MinLimitsFootOffsets = 0xdbc8; // FVector
		constexpr auto MaxLimitsFootOffsets = 0xdbd4; // FVector
		constexpr auto FootPosition = 0xdbe0; // float
		constexpr auto PelvisOffset = 0xdbe4; // FVector
		constexpr auto PelvisRotation = 0xdbf0; // FRotator
		constexpr auto Struct_LeftFootModifyConfig = 0xdbfc; // FModifyConfig
		constexpr auto Struct_RightFootModifyConfig = 0xdc48; // FModifyConfig
		constexpr auto bUpdateMorphCurve = 0xdc94; // char : 1
		constexpr auto UpperBodyInterpSpeed = 0xdc98; // float
		constexpr auto bUseTwoBoneIK = 0xdc9c; // char : 1
		constexpr auto bUseRotateSolver = 0xdc9c; // char : 1
		constexpr auto BreatheCurveValue = 0xdca0; // float
		constexpr auto Struct_LeftHandModifyConfig = 0xdca4; // FModifyConfig
		constexpr auto Struct_LeftLowerarmModifyConfig = 0xdcf0; // FModifyConfig
		constexpr auto Struct_LeftClavicleModifyConfig = 0xdd3c; // FModifyConfig
		constexpr auto Struct_RightHandModifyConfig = 0xdd88; // FModifyConfig
		constexpr auto Struct_RightLowerarmModifyConfig = 0xddd4; // FModifyConfig
		constexpr auto Struct_RightClavicleModifyConfig = 0xde20; // FModifyConfig
		constexpr auto MorphSolverAlpha = 0xde6c; // float
		constexpr auto LeanInAir = 0xde70; // float
		constexpr auto FlailRate = 0xde74; // float
		constexpr auto FlailBlendAlpha = 0xde78; // float
		constexpr auto LandPredictionAlpha = 0xde7c; // float
		constexpr auto FlailAlphaCurve = 0xde80; // UCurveFloat*
		constexpr auto LandAlphaCurve = 0xde88; // UCurveFloat*
		constexpr auto LeanGrounded = 0xdeb8; // FVector2D
		constexpr auto LeanGroundedInterpSpeed = 0xdec0; // float
		constexpr auto bIsTransition = 0xdec4; // char : 1
		constexpr auto TransitionMontage = 0xded0; // UAnimMontage*
		constexpr auto UseWeapon = 0xdeda; // char : 1
		constexpr auto IsAiming = 0xdeda; // char : 1
		constexpr auto IsFighting = 0xdeda; // char : 1
		constexpr auto IsAttack = 0xdeda; // char : 1
		constexpr auto IsBlock = 0xdeda; // char : 1
		constexpr auto bIsOffHandBlock = 0xdeda; // char : 1
		constexpr auto IsPlayAttackMontage = 0xdeda; // char : 1
		constexpr auto IsPlayRiderSprintAttackMontage = 0xdeda; // char : 1
		constexpr auto bUseOffHandLayer = 0xdedb; // char : 1
		constexpr auto bShouldSwim = 0xdedb; // char : 1
		constexpr auto bIsSurfaceState = 0xdedb; // char : 1
		constexpr auto SwimPlayRate = 0xdedc; // float
		constexpr auto SwimDirection = 0xdee0; // float
		constexpr auto SwimAdditiveMultiply = 0xdee4; // float
		constexpr auto SwimRootMaxHeight = 0xdee8; // float
		constexpr auto SwimAimOffset = 0xdeec; // FVector2D
		constexpr auto SwimArchDirectionScale = 0xdef4; // float
		constexpr auto SwimArchDirectionInterpSpeed = 0xdef8; // float
		constexpr auto SwimUpDirectionInterpSpeed = 0xdefc; // float
		constexpr auto bIsSwimBackwardDirection = 0xdf00; // char : 1
		constexpr auto SwimArchDirectionRate = 0xdf04; // float
		constexpr auto SwimArchDirectionRateInterpSpeed = 0xdf08; // float
		constexpr auto SwimArchDirection = 0xdf0c; // FVector2D
		constexpr auto bIsSurfaceIdle = 0xdf14; // char : 1
		constexpr auto bIsSwimAnimMoving = 0xdf14; // char : 1
		constexpr auto SwimRootTranslation = 0xdf18; // FVector
		constexpr auto SwimPelvisRotation = 0xdf24; // FRotator
		constexpr auto SwimSpine01Rotation = 0xdf30; // FRotator
		constexpr auto SwimSpine02Rotation = 0xdf3c; // FRotator
		constexpr auto SwimSpine03Rotation = 0xdf48; // FRotator
		constexpr auto HorseBellyMorphLocation_L = 0xdf5c; // FVector
		constexpr auto HorseBellyMorphLocation_R = 0xdf68; // FVector
		constexpr auto HorsePelvisOffset = 0xdf74; // FVector
		constexpr auto HorseBellyLocation_L = 0xdf80; // FVector
		constexpr auto HorseBellyLocation_R = 0xdf8c; // FVector
		constexpr auto bUpdateFootIK = 0xdf98; // char : 1
		constexpr auto RiderPelvisModifyData = 0xdf9c; // FModifyConfig
		constexpr auto RiderLeftCalfModifyData = 0xdfe8; // FModifyConfig
		constexpr auto RiderLeftFootModifyData = 0xe034; // FModifyConfig
		constexpr auto RiderRightCalfModifyData = 0xe080; // FModifyConfig
		constexpr auto RiderRightFootModifyData = 0xe0cc; // FModifyConfig
		constexpr auto InjuredData = 0xe118; // FInjuredData
		constexpr auto RescueData = 0xe188; // FRescueData
		constexpr auto PassengerAnimsConfig = 0xe198; // FPassengerAnimsConfig
		constexpr auto LadderData = 0xe1a8; // UAnimSkill_LadderData*
		constexpr auto LadderFootIndex = 0xe1b0; // int32_t
		constexpr auto LadderSequence = 0xe1c8; // UAnimSequence*
		constexpr auto bInstrumentPlaying = 0xe200; // char : 1
	}

	namespace n_UBTDecorator_Loop {
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto bInfiniteLoop = 0x6c; // bool
		constexpr auto InfiniteLoopTimeoutTime = 0x70; // float
	}

	namespace n_UDatasmithVREDSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bImportMats = 0x4a; // bool
		constexpr auto MatsPath = 0x50; // FString
		constexpr auto bImportVar = 0x60; // bool
		constexpr auto bCleanVar = 0x61; // bool
		constexpr auto VarPath = 0x68; // FString
		constexpr auto bImportLightInfo = 0x78; // bool
		constexpr auto LightInfoPath = 0x80; // FString
		constexpr auto bImportClipInfo = 0x90; // bool
		constexpr auto ClipInfoPath = 0x98; // FString
	}

	namespace n_UMiniMapPOI_GuildStructureBanner {
		constexpr auto DifferentGuildInMiniMapTexture = 0x390; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentGuildInMiniMapColor = 0x3b8; // FLinearColor
		constexpr auto DifferentGuildOutOfMiniMapTexture = 0x3c8; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentGuildOutOfMiniMapColor = 0x3f0; // FLinearColor
	}

	namespace n_UDamageType {
		constexpr auto bCausedByWorld = 0x28; // char : 1
		constexpr auto bScaleMomentumByMass = 0x28; // char : 1
		constexpr auto bRadialDamageVelChange = 0x28; // char : 1
		constexpr auto DamageImpulse = 0x2c; // float
		constexpr auto DestructibleImpulse = 0x30; // float
		constexpr auto DestructibleDamageSpreadScale = 0x34; // float
		constexpr auto DamageFalloff = 0x38; // float
	}

	namespace n_UParticleModuleSizeScale {
		constexpr auto SizeScale = 0x30; // FRawDistributionVector
		constexpr auto EnableX = 0x78; // char : 1
		constexpr auto EnableY = 0x78; // char : 1
		constexpr auto EnableZ = 0x78; // char : 1
	}

	namespace n_APointLight {
		constexpr auto PointLightComponent = 0x320; // UPointLightComponent*
	}

	namespace n_USGDoubleSelectSlider {
		constexpr auto OnLeftValueChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnRightValueChanged = 0x118; // FMulticastInlineDelegate
		constexpr auto ProcessImage = 0x128; // FSlateBrush
		constexpr auto LeftImage = 0x1b0; // FSlateBrush
		constexpr auto RightImage = 0x238; // FSlateBrush
		constexpr auto LeftValue = 0x2c0; // float
		constexpr auto RightValue = 0x2c4; // float
	}

	namespace n_UUI_QuickRemoteInventory {
		constexpr auto SelfInventoryComponent = 0x2d8; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindInventoryComponent = 0x2e0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindCharacter = 0x2e8; // TWeakObjectPtr<ASGCharacter>
		constexpr auto InventoryGrid = 0x2f0; // UUniformGridPanel*
		constexpr auto ConsumeTypeSlot = 0x2f8; // UInventoryItemTypeFilterSlot*
		constexpr auto EquipTypeSlot = 0x300; // UInventoryItemTypeFilterSlot*
		constexpr auto WeaponTypeSlot = 0x308; // UInventoryItemTypeFilterSlot*
		constexpr auto AmmoTypeSlot = 0x310; // UInventoryItemTypeFilterSlot*
		constexpr auto StructureTypeSlot = 0x318; // UInventoryItemTypeFilterSlot*
		constexpr auto ResourceTypeSlot = 0x320; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchTypeSlot = 0x328; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchEditBox = 0x330; // UEditableTextBox*
		constexpr auto CloseButton = 0x338; // UButton*
		constexpr auto CurrentActiveFilterSlot = 0x340; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchString = 0x348; // FString
		constexpr auto bNeedRefreshAll = 0x358; // char : 1
		constexpr auto TickUpdateSlotNumber = 0x35c; // int32_t
		constexpr auto CountsPerRow = 0x360; // int32_t
		constexpr auto LastInventoryItemNum = 0x364; // int32_t
		constexpr auto bShowEquip = 0x36c; // char : 1
		constexpr auto InventorySlotList = 0x370; // TArray<UN_InventorySlot*>
		constexpr auto EquipSlotList = 0x380; // TArray<UN_InventorySlot*>
		constexpr auto InventorySlotClass = 0x390; // UN_InventorySlot*
		constexpr auto SlotExtraMenu = 0x398; // TWeakObjectPtr<UN_SlotExtraMenu>
		constexpr auto ShowMenuSlot = 0x3a0; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto PressedSlot = 0x3a8; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto SplitPanel = 0x3b0; // TWeakObjectPtr<UN_SplitItemPanel>
		constexpr auto SplitItemPanelTemplate = 0x3b8; // UN_SplitItemPanel*
		constexpr auto SwitchOneButton = 0x3c0; // UInventoryFunctionButton*
		constexpr auto SwitchAllButton = 0x3c8; // UInventoryFunctionButton*
		constexpr auto OpenInventoryButton = 0x3d0; // UButton*
	}

	namespace n_UAnimalHuaSeInfo {
		constexpr auto SkinHuaSeBaseTextures = 0x28; // TArray<UTexture2D*>
		constexpr auto SkinHuaSeMaskTextures = 0x38; // TArray<UTexture2D*>
	}

	namespace n_UWorldRankGoupSlot {
		constexpr auto ChildRankListVerticalBox = 0x260; // UVerticalBox*
		constexpr auto RankButton = 0x268; // UButton*
		constexpr auto RankNameTextBlock = 0x270; // UTextBlock*
		constexpr auto SubRankButtonSlotClass = 0x278; // UWorldRankButtonSlot*
	}

	namespace n_UARGeoAnchorComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARGeoAnchorUpdatePayload
	}

	namespace n_UVehiclePerkRandomData {
		constexpr auto PerkRandomEntries = 0x28; // TArray<FVehiclePerkRandomEntry>
	}

	namespace n_UStructureBedInfoHUD {
		constexpr auto NextUseTimeText = 0x360; // UStructureInfoHUDSlot*
		constexpr auto BindStructureBed = 0x368; // TWeakObjectPtr<ASGStructureBed>
	}

	namespace n_ANavigationData {
		constexpr auto RenderingComp = 0x318; // UPrimitiveComponent*
		constexpr auto NavDataConfig = 0x320; // FNavDataConfig
		constexpr auto bEnableDrawing = 0x398; // char : 1
		constexpr auto bForceRebuildOnLoad = 0x398; // char : 1
		constexpr auto bAutoDestroyWhenNoNavigation = 0x398; // char : 1
		constexpr auto bCanBeMainNavData = 0x398; // char : 1
		constexpr auto bCanSpawnOnRebuild = 0x398; // char : 1
		constexpr auto bRebuildAtRuntime = 0x398; // char : 1
		constexpr auto RuntimeGeneration = 0x39c; // ERuntimeGenerationType
		constexpr auto ObservedPathsTickInterval = 0x3a0; // float
		constexpr auto DataVersion = 0x3a4; // uint32_t
		constexpr auto SupportedAreas = 0x4b0; // TArray<FSupportedAreaData>
	}

	namespace n_UN_OccupyItemSlot {
		constexpr auto OccupyItemNumText = 0xf80; // UTextBlock*
		constexpr auto LackResouseTextColor = 0xf88; // FSlateColor
		constexpr auto UnLackResouseTextColor = 0xfb0; // FSlateColor
	}

	namespace n_UGeneralShortCutPanel {
		constexpr auto GeneralShortCutSlotNames = 0x260; // TArray<FName>
		constexpr auto ChildGeneralShortCutBorder = 0x270; // UBorder*
	}

	namespace n_USGGameDataAllGeneralNpc {
		constexpr auto CheatGeneralNPC = 0x28; // TArray<ASGGeneralCharacter*>
	}

	namespace n_UWBP_ScalabilityDetailSetting_C {
		constexpr auto TitleImage = 0x2a0; // UImage*
	}

	namespace n_UAIDataProvider_Random {
		constexpr auto Min = 0x40; // float
		constexpr auto Max = 0x44; // float
		constexpr auto bInteger = 0x48; // char : 1
	}

	namespace n_UGeometryCollectionCache {
		constexpr auto RecordedData = 0x28; // FRecordedTransformTrack
		constexpr auto SupportedCollection = 0x38; // UGeometryCollection*
		constexpr auto CompatibleCollectionState = 0x40; // FGuid
	}

	namespace n_ASGStructureBasement {
		constexpr auto SameTeamBasementBrush = 0xb98; // FSlateBrush
		constexpr auto SameTeamBasementTexture = 0xc20; // TSoftObjectPtr<UTexture2D>
		constexpr auto SameTeamBasementColor = 0xc48; // FLinearColor
		constexpr auto DiffTeamBasementBrush = 0xc58; // FSlateBrush
		constexpr auto DiffTeamBasementTexture = 0xce0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffTeamBasementColor = 0xd08; // FLinearColor
		constexpr auto SameTeamLockBasementBrush = 0xd18; // FSlateBrush
		constexpr auto SameTeamLockBasementTexture = 0xda0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SameTeamLockBasementColor = 0xdc8; // FLinearColor
		constexpr auto DiffTeamLockBasementBrush = 0xdd8; // FSlateBrush
		constexpr auto DiffTeamLockBasementTexture = 0xe60; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffTeamLockBasementColor = 0xe88; // FLinearColor
		constexpr auto AttackTeamBrush = 0xe98; // FSlateBrush
		constexpr auto AttackTeamTexture = 0xf20; // TSoftObjectPtr<UTexture2D>
		constexpr auto AttackTeamColor = 0xf48; // FLinearColor
		constexpr auto DefenseTeamBrush = 0xf58; // FSlateBrush
		constexpr auto DefenseTeamTexture = 0xfe0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DefenseTeamColor = 0x1008; // FLinearColor
		constexpr auto NoTeamBrush = 0x1018; // FSlateBrush
		constexpr auto NoTeamTexture = 0x10a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoTeamColor = 0x10c8; // FLinearColor
		constexpr auto TitleWidget = 0x10d8; // UUserWidget*
		constexpr auto PerpareTime = 0x10e0; // float
		constexpr auto PlayTime = 0x10e4; // float
		constexpr auto FailedLeaveTime = 0x10e8; // float
		constexpr auto SuccessLeaveTime = 0x10ec; // float
		constexpr auto FinishTime = 0x10f0; // float
		constexpr auto SuccessAward = 0x10f8; // TArray<FBattleAwardItem>
		constexpr auto FailedAward = 0x1108; // TArray<FBattleAwardItem>
		constexpr auto DefenseGuildActors = 0x1128; // TArray<AActor*>
		constexpr auto AttackGuildActors = 0x1138; // TArray<AActor*>
		constexpr auto LogicServerLevelEffectActors = 0x1148; // TArray<AActor*>
		constexpr auto OnCurrentStageChanged = 0x1190; // FMulticastInlineDelegate
		constexpr auto BattleGroundMusicCheckTime = 0x11a8; // float
		constexpr auto BattleGroundMusicTimeThreshold = 0x11ac; // float
		constexpr auto HpPhaseData = 0x11b0; // TArray<FBasementPhaseData>
		constexpr auto HpPhaseParticleComponent = 0x11c0; // UParticleSystemComponent*
	}

	namespace n_UMaterialExpressionRotator {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto CenterX = 0x68; // float
		constexpr auto CenterY = 0x6c; // float
		constexpr auto Speed = 0x70; // float
		constexpr auto ConstCoordinate = 0x74; // uint32_t
	}

	namespace n_UChaosDestructionListener {
		constexpr auto bIsCollisionEventListeningEnabled = 0x208; // char : 1
		constexpr auto bIsBreakingEventListeningEnabled = 0x208; // char : 1
		constexpr auto bIsTrailingEventListeningEnabled = 0x208; // char : 1
		constexpr auto CollisionEventRequestSettings = 0x20c; // FChaosCollisionEventRequestSettings
		constexpr auto BreakingEventRequestSettings = 0x224; // FChaosBreakingEventRequestSettings
		constexpr auto TrailingEventRequestSettings = 0x23c; // FChaosTrailingEventRequestSettings
		constexpr auto ChaosSolverActors = 0x258; // TSet<AChaosSolverActor*>
		constexpr auto GeometryCollectionActors = 0x2a8; // TSet<AGeometryCollectionActor*>
		constexpr auto OnCollisionEvents = 0x2f8; // FMulticastInlineDelegate
		constexpr auto OnBreakingEvents = 0x308; // FMulticastInlineDelegate
		constexpr auto OnTrailingEvents = 0x318; // FMulticastInlineDelegate
	}

	namespace n_UEditPivotToolProperties {
		constexpr auto bEnableSnapDragging = 0x60; // bool
		constexpr auto RotationMode = 0x61; // EEditPivotSnapDragRotationMode
	}

	namespace n_ADestructibleActor {
		constexpr auto DestructibleComponent = 0x310; // UDestructibleComponent*
		constexpr auto OnActorFracture = 0x318; // FMulticastInlineDelegate
	}

	namespace n_URevolveToolProperties {
		constexpr auto bConnectOpenProfileToAxis = 0xb0; // bool
		constexpr auto bSnapToWorldGrid = 0xb1; // bool
		constexpr auto DrawPlaneOrigin = 0xb4; // FVector
		constexpr auto DrawPlaneOrientation = 0xc0; // FRotator
		constexpr auto bEnableSnapping = 0xcc; // bool
		constexpr auto bAllowedToEditDrawPlane = 0xcd; // bool
	}

	namespace n_UInterpTrackLinearColorBase {
		constexpr auto LinearColorTrack = 0x70; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_AMagicLeapARPinRenderer {
		constexpr auto bInfoActorsVisibilityOverride = 0x310; // bool
		constexpr auto AllInfoActors = 0x318; // TMap<FGuid, AMagicLeapARPinInfoActorBase*>
		constexpr auto ClassToSpawn = 0x370; // AMagicLeapARPinInfoActorBase*
	}

	namespace n_UAppearanceListView {
		constexpr auto ItemTempalte = 0x260; // UAppearanceListItem*
		constexpr auto BtnLastPage = 0x278; // UButton*
		constexpr auto BtnNextPage = 0x280; // UButton*
		constexpr auto UGPMain = 0x288; // UUniformGridPanel*
		constexpr auto ScrollAppearance = 0x290; // UScrollBox*
		constexpr auto TbCurPage = 0x298; // UTextBlock*
		constexpr auto TbMaxPage = 0x2a0; // UTextBlock*
		constexpr auto ConfigList = 0x2a8; // TArray<FName>
		constexpr auto BindSex = 0x2b8; // ECharacterSex
		constexpr auto ChildItemList = 0x2c0; // TArray<UAppearanceListItem*>
		constexpr auto BindFeature = 0x2d0; // int32_t
		constexpr auto CurPage = 0x2d4; // int32_t
		constexpr auto MaxPage = 0x2d8; // int32_t
		constexpr auto TargetOffset = 0x2dc; // float
		constexpr auto MaxScrollOffset = 0x2e0; // float
		constexpr auto SelectedIndex = 0x2e4; // int32_t
	}

	namespace n_USetCollisionGeometryToolProperties {
		constexpr auto GeometryType = 0x60; // ECollisionGeometryType
		constexpr auto InputMode = 0x64; // ESetCollisionGeometryInputMode
		constexpr auto bUseWorldSpace = 0x68; // bool
		constexpr auto bRemoveContained = 0x69; // bool
		constexpr auto bEnableMaxCount = 0x6a; // bool
		constexpr auto MaxCount = 0x6c; // int32_t
		constexpr auto MinThickness = 0x70; // float
		constexpr auto bDetectBoxes = 0x74; // bool
		constexpr auto bDetectSpheres = 0x75; // bool
		constexpr auto bDetectCapsules = 0x76; // bool
		constexpr auto bSimplifyHulls = 0x77; // bool
		constexpr auto HullTargetFaceCount = 0x78; // int32_t
		constexpr auto bSimplifyPolygons = 0x7c; // bool
		constexpr auto HullTolerance = 0x80; // float
		constexpr auto SweepAxis = 0x84; // EProjectedHullAxis
		constexpr auto bAppendToExisting = 0x88; // bool
		constexpr auto SetCollisionType = 0x8c; // ECollisionGeometryMode
	}

	namespace n_ASG_SiegeFlameThrowerCharacter {
		constexpr auto FlameTraceDelta = 0x2ac8; // float
		constexpr auto FlameFireAmmoReduceDelta = 0x2acc; // float
		constexpr auto CreateFlameTrapDelta = 0x2ad0; // float
		constexpr auto FlameSphere = 0x2ae0; // float
		constexpr auto FlameDistance = 0x2ae4; // float
		constexpr auto FlameFireStartSocket = 0x2ae8; // FName
		constexpr auto FlameThrowerTimerHandle = 0x2af0; // FTimerHandle
		constexpr auto FlameThrowerItemTimerHandle = 0x2af8; // FTimerHandle
		constexpr auto bDebugTrace = 0x2b00; // char : 1
		constexpr auto DamageBase = 0x2b04; // float
		constexpr auto DamageType = 0x2b08; // USGDamageType*
		constexpr auto FlameAttackDamageType = 0x2b10; // EDamageType
		constexpr auto FlameTrapTemplate = 0x2b18; // ASGEmptyGameTrap*
		constexpr auto TrapDecal = 0x2b20; // UMaterialInterface*
		constexpr auto TrapScale = 0x2b28; // FVector
		constexpr auto DecalSize = 0x2b34; // FVector
		constexpr auto DecalRotationOffset = 0x2b40; // FRotator
		constexpr auto DecalLocationOffset = 0x2b4c; // FVector
		constexpr auto BoxSize = 0x2b58; // FVector
		constexpr auto BoxLocationOffset = 0x2b64; // FVector
		constexpr auto BoxRotationOffset = 0x2b70; // FRotator
		constexpr auto bEnableBoxOverlap = 0x2b7c; // char : 1
		constexpr auto TrapLifeTime = 0x2b80; // float
		constexpr auto bCreateTrapParticle = 0x2b84; // char : 1
		constexpr auto TrapParticle = 0x2b88; // UParticleSystem*
		constexpr auto OverlapBuff = 0x2b90; // USGBuff*
		constexpr auto BrokenExplosionEffect = 0x2b98; // UParticleSystem*
		constexpr auto BrokenExplosionSoundID = 0x2ba0; // FName
		constexpr auto EffectScale = 0x2ba8; // FVector
		constexpr auto ExlposionLocationOffset = 0x2bb4; // FVector
		constexpr auto MaxDamage = 0x2bc0; // float
		constexpr auto MinDamage = 0x2bc4; // float
		constexpr auto MaxCollectionDamage = 0x2bc8; // float
		constexpr auto MinCollectionDamage = 0x2bcc; // float
		constexpr auto InnerRadius = 0x2bd0; // float
		constexpr auto OuterRadius = 0x2bd4; // float
		constexpr auto DamageFalloff = 0x2bd8; // float
		constexpr auto BrokenExplosionDamageType = 0x2be0; // USGDamageType*
		constexpr auto BrokenExplosionAttackDamageType = 0x2be8; // EDamageType
		constexpr auto CountingHandle = 0x2bf0; // FTimerHandle
		constexpr auto FireTime = 0x2bf8; // float
		constexpr auto FireLeftTime = 0x2bfc; // float
	}

	namespace n_UUpdateCrosshairs_AnimNotifyState {
		constexpr auto Enum_ShooterAttackMontageType = 0x30; // EShooterAttackMontageType
		constexpr auto PlayMontage = 0x38; // UAnimMontage*
		constexpr auto AnimLength = 0x40; // float
		constexpr auto BeforeAnimLength = 0x44; // float
	}

	namespace n_UAchievementQueryCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UVoxelSolidifyMeshesTool {
		constexpr auto SolidifyProperties = 0x108; // UVoxelSolidifyMeshesToolProperties*
	}

	namespace n_UHorizonMultiToggleButtonWidget {
		constexpr auto OnStateSyncDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto OnStateChangedDelegate = 0x288; // FMulticastInlineDelegate
		constexpr auto Button_ToggleState_Prev = 0x2b0; // UButton*
		constexpr auto Button_ToggleState_Next = 0x2b8; // UButton*
		constexpr auto TextBlock_CurrentState = 0x2c0; // UTextBlock*
		constexpr auto Image_CurrentState = 0x2c8; // UImage*
		constexpr auto StateList = 0x2d0; // TArray<FHorizonMultiToggleButtonState>
		constexpr auto bLoopToggleState = 0x2e0; // bool
		constexpr auto CurrentStateIndex = 0x2e4; // int32_t
	}

	namespace n_UInterpTrackMoveAxis {
		constexpr auto MoveAxis = 0x90; // EInterpMoveAxis
		constexpr auto LookupTrack = 0x98; // FInterpLookupTrack
	}

	namespace n_ASGCharacter {
		constexpr auto SGAnimInstance = 0x2100; // USGCharacterAnimInstance*
		constexpr auto CapsuleCollision = 0xe7c8; // char : 1
		constexpr auto Enum_StanceMode = 0xe7d8; // EStanceMode
		constexpr auto Enum_PlayerInputGaitType = 0xe7d9; // EMovingGaitType
		constexpr auto Enum_MovingGaitType = 0xe7da; // EMovingGaitType
		constexpr auto bShouldRun = 0xe7db; // char : 1
		constexpr auto Struct_CharacterJumpZ = 0xfe68; // FCharacterJumpZConfig
		constexpr auto bIsAiming = 0xfe70; // char : 1
		constexpr auto UseWeapon = 0xfe70; // char : 1
		constexpr auto bShowBlockCollision = 0xfe70; // char : 1
		constexpr auto Struct_CurrentBlockData = 0xfe78; // FBlockInfo
		constexpr auto DelayBlockTimer = 0xfe88; // FTimerHandle
		constexpr auto UpdateBlockStateTimer = 0xfe90; // FTimerHandle
		constexpr auto UpdateBlockDirectionTimer = 0xfe98; // FTimerHandle
		constexpr auto CurrentAttackUniqueId = 0xfea0; // FGuid
		constexpr auto bQuickAttack = 0xfeb0; // char : 1
		constexpr auto AttackResetTime = 0xfeb4; // float
		constexpr auto AttackTransitionTime = 0xfeb8; // float
		constexpr auto DelayCleatAttackStateTime = 0xfebc; // float
		constexpr auto DelayAttackTime = 0xfec0; // float
		constexpr auto DelayBlockTime = 0xfec4; // float
		constexpr auto bEnableAnimAfterShaking = 0xfec8; // char : 1
		constexpr auto bIsPressedKickAttack = 0xfec8; // char : 1
		constexpr auto bIsPressedOffHandWeaponAttack = 0xfec8; // char : 1
		constexpr auto bIsPressedBlock = 0xfec8; // char : 1
		constexpr auto bIsPlayAttackMontage = 0xfec8; // char : 1
		constexpr auto bIsContinuousAttack = 0xfec8; // char : 1
		constexpr auto DelayAttackTimer = 0xfed0; // FTimerHandle
		constexpr auto UpdateAttackStateTimer = 0xfed8; // FTimerHandle
		constexpr auto DelayClearAttackStateTimer = 0xfee0; // FTimerHandle
		constexpr auto RiderSprintAttackCoolingTime = 0xfee8; // float
		constexpr auto RiderSprintAttackCoolingTimeAdd = 0xfeec; // float
		constexpr auto RiderSprintAttackLoopingTime = 0xfef0; // float
		constexpr auto RiderSprintAttackLoopingTimeAdd = 0xfef4; // float
		constexpr auto RiderSprintAttackCoolingTimer = 0xfef8; // FTimerHandle
		constexpr auto RiderSprintAttackLoopTimer = 0xff00; // FTimerHandle
		constexpr auto bUpdateCrosshair = 0xff08; // char : 1
		constexpr auto DesiredCrosshairValue = 0xff0c; // float
		constexpr auto KickMontage = 0xff10; // UAnimMontage*
		constexpr auto UpdateShooterShakeTimer = 0xff28; // FTimerHandle
		constexpr auto bIsCancelAttack = 0xff30; // char : 1
		constexpr auto CancelAttackMontage = 0xff38; // UAnimMontage*
		constexpr auto SecondaryAttackCoolingTime = 0xff40; // float
		constexpr auto bIsAttackCooling = 0xff44; // char : 1
		constexpr auto bIsCancelAttackCooling = 0xff44; // char : 1
		constexpr auto CancelAttackCoolingTimer = 0xff58; // FTimerHandle
		constexpr auto ComboAttackMaxNumber = 0xff60; // int32_t
		constexpr auto bIsComboAttack = 0xff64; // char : 1
		constexpr auto ComboAttackCurrentNumber = 0xff68; // int32_t
		constexpr auto UpdateShooterPullTimer = 0xff70; // FTimerHandle
		constexpr auto UpdateShooterPullHoldTimer = 0xff78; // FTimerHandle
		constexpr auto bIsShake = 0xff80; // char : 1
		constexpr auto bIsWantReload = 0xff80; // char : 1
		constexpr auto TestAlpha = 0xff9c; // float
		constexpr auto HoldBreathTime = 0xffac; // float
		constexpr auto bIsPressedHoldBreath = 0xffb0; // char : 1
		constexpr auto bIsHoldBreath = 0xffb0; // char : 1
		constexpr auto bIsHoldBreathCooling = 0xffb0; // char : 1
		constexpr auto Struct_LastHitAnims = 0xffb8; // FHitAnims
		constexpr auto bIsBlockDamageAttack = 0x10040; // char : 1
		constexpr auto WillDeadReliveHP = 0x10044; // float
		constexpr auto WillDeadReliveHPAdd = 0x10048; // float
		constexpr auto WillDeadReliveHPMulAdd = 0x1004c; // float
		constexpr auto WillDeadReliveHPConfig = 0x10050; // float
		constexpr auto WillDeadReliveHPRandom = 0x10054; // float
		constexpr auto RescueTime = 0x10058; // float
		constexpr auto RescueTimeAdd = 0x1005c; // float
		constexpr auto RescueTimeMulAdd = 0x10060; // float
		constexpr auto RescueTimeConfig = 0x10064; // float
		constexpr auto RescueTimeRandom = 0x10068; // float
		constexpr auto AcceptRescueCharacter = 0x10070; // ASGCharacter*
		constexpr auto DoRescueCharacter = 0x10078; // ASGCharacter*
		constexpr auto VirtualRecuseCharacter = 0x10080; // TWeakObjectPtr<ASGCharacter>
		constexpr auto RescueTimerHandle = 0x10088; // FTimerHandle
		constexpr auto RescueCheckTimerHandle = 0x10090; // FTimerHandle
		constexpr auto RescueRadius = 0x10098; // float
		constexpr auto WillDeadEyeHeight = 0x1009c; // float
		constexpr auto MaxSkillLevel = 0x10120; // float
		constexpr auto MaxAddSkillLevel = 0x10124; // float
		constexpr auto PlayerCharAddExpMulAdd = 0x10128; // float
		constexpr auto PlayerCharAddSkillExpMulAdd = 0x1012c; // float
		constexpr auto GenCharAddExpMulAdd = 0x10130; // float
		constexpr auto GenCharAddSkillExpMulAdd = 0x10134; // float
		constexpr auto ST = 0x10138; // int32_t
		constexpr auto AG = 0x1013c; // int32_t
		constexpr auto WI = 0x10140; // int32_t
		constexpr auto EN = 0x10144; // int32_t
		constexpr auto CH = 0x10148; // int32_t
		constexpr auto PublicSkillExp = 0x10150; // double
		constexpr auto ReduceSkillMasteryWeek = 0x10158; // int64_t
		constexpr auto ReduceSkillMasteryCapitalDataTable = 0x10160; // UCurveTable*
		constexpr auto ReduceSkillMasteryTimes = 0x10168; // int32_t
		constexpr auto WeekFreeReduceSkillMasteryTimes = 0x1016c; // int32_t
		constexpr auto FreeReduceSkillMasteryTimes = 0x10180; // int32_t
		constexpr auto FreeReduceSkillMasteryPointsAdd = 0x10198; // int32_t
		constexpr auto LimitSkillLevelDataTable = 0x101a0; // UDataTable*
		constexpr auto OneHandedWeapons = 0x101a8; // float
		constexpr auto OneHandedWeaponsCalculation = 0x101ac; // float
		constexpr auto OneHandedWeaponsConfig = 0x101b0; // float
		constexpr auto OneHandedWeaponsAddPoints = 0x101b4; // int32_t
		constexpr auto OneHandedWeaponsRandom = 0x101b8; // int32_t
		constexpr auto OneHandedWeaponsAdd = 0x101bc; // int32_t
		constexpr auto OneHandedWeaponsExp = 0x101c0; // double
		constexpr auto OneHandedWeaponsLevelUpExp = 0x101c8; // double
		constexpr auto OneHandedWeaponsMastery = 0x101d0; // int32_t
		constexpr auto OneHandedWeaponsLimitLevelIndex = 0x101d4; // int32_t
		constexpr auto OneHandedWeaponsLimitLevel = 0x101d8; // int32_t
		constexpr auto Shields = 0x101dc; // float
		constexpr auto ShieldsCalculation = 0x101e0; // float
		constexpr auto ShieldsConfig = 0x101e4; // float
		constexpr auto ShieldsAddPoints = 0x101e8; // int32_t
		constexpr auto ShieldsRandom = 0x101ec; // int32_t
		constexpr auto ShieldsAdd = 0x101f0; // int32_t
		constexpr auto ShieldsExp = 0x101f8; // double
		constexpr auto ShieldsLevelUpExp = 0x10200; // double
		constexpr auto ShieldsMastery = 0x10208; // int32_t
		constexpr auto ShieldsLimitLevelIndex = 0x1020c; // int32_t
		constexpr auto ShieldsLimitLevel = 0x10210; // int32_t
		constexpr auto TowHandedWeapons = 0x10214; // float
		constexpr auto TowHandedWeaponsCalculation = 0x10218; // float
		constexpr auto TowHandedWeaponsConfig = 0x1021c; // float
		constexpr auto TowHandedWeaponsAddPoints = 0x10220; // int32_t
		constexpr auto TowHandedWeaponsRandom = 0x10224; // int32_t
		constexpr auto TowHandedWeaponsAdd = 0x10228; // int32_t
		constexpr auto TowHandedWeaponsExp = 0x10230; // double
		constexpr auto TowHandedWeaponsLevelUpExp = 0x10238; // double
		constexpr auto TowHandedWeaponsMastery = 0x10240; // int32_t
		constexpr auto TowHandedWeaponsLimitLevelIndex = 0x10244; // int32_t
		constexpr auto TowHandedWeaponsLimitLevel = 0x10248; // int32_t
		constexpr auto Polearms = 0x1024c; // float
		constexpr auto PolearmsCalculation = 0x10250; // float
		constexpr auto PolearmsConfig = 0x10254; // float
		constexpr auto PolearmsAddPoints = 0x10258; // int32_t
		constexpr auto PolearmsRandom = 0x1025c; // int32_t
		constexpr auto PolearmsAdd = 0x10260; // int32_t
		constexpr auto PolearmsExp = 0x10268; // double
		constexpr auto PolearmsLevelUpExp = 0x10270; // double
		constexpr auto PolearmsMastery = 0x10278; // int32_t
		constexpr auto PolearmsLimitLevelIndex = 0x1027c; // int32_t
		constexpr auto PolearmsLimitLevel = 0x10280; // int32_t
		constexpr auto HeavyArmors = 0x10284; // float
		constexpr auto HeavyArmorsCalculation = 0x10288; // float
		constexpr auto HeavyArmorsConfig = 0x1028c; // float
		constexpr auto HeavyArmorsAddPoints = 0x10290; // int32_t
		constexpr auto HeavyArmorsRandom = 0x10294; // int32_t
		constexpr auto HeavyArmorsAdd = 0x10298; // int32_t
		constexpr auto HeavyArmorsExp = 0x102a0; // double
		constexpr auto HeavyArmorsLevelUpExp = 0x102a8; // double
		constexpr auto HeavyArmorsMastery = 0x102b0; // int32_t
		constexpr auto HeavyArmorsLimitLevelIndex = 0x102b4; // int32_t
		constexpr auto HeavyArmorsLimitLevel = 0x102b8; // int32_t
		constexpr auto Throwing = 0x102bc; // float
		constexpr auto ThrowingCalculation = 0x102c0; // float
		constexpr auto ThrowingConfig = 0x102c4; // float
		constexpr auto ThrowingAddPoints = 0x102c8; // int32_t
		constexpr auto ThrowingRandom = 0x102cc; // int32_t
		constexpr auto ThrowingAdd = 0x102d0; // int32_t
		constexpr auto ThrowingExp = 0x102d8; // double
		constexpr auto ThrowingLevelUpExp = 0x102e0; // double
		constexpr auto ThrowingMastery = 0x102e8; // int32_t
		constexpr auto ThrowingLimitLevelIndex = 0x102ec; // int32_t
		constexpr auto ThrowingLimitLevel = 0x102f0; // int32_t
		constexpr auto Archery = 0x102f4; // float
		constexpr auto ArcheryCalculation = 0x102f8; // float
		constexpr auto ArcheryConfig = 0x102fc; // float
		constexpr auto ArcheryAddPoints = 0x10300; // int32_t
		constexpr auto ArcheryRandom = 0x10304; // int32_t
		constexpr auto ArcheryAdd = 0x10308; // int32_t
		constexpr auto ArcheryExp = 0x10310; // double
		constexpr auto ArcheryLevelUpExp = 0x10318; // double
		constexpr auto ArcheryMastery = 0x10320; // int32_t
		constexpr auto ArcheryLimitLevelIndex = 0x10324; // int32_t
		constexpr auto ArcheryLimitLevel = 0x10328; // int32_t
		constexpr auto Crossbows = 0x1032c; // float
		constexpr auto CrossbowsCalculation = 0x10330; // float
		constexpr auto CrossbowsConfig = 0x10334; // float
		constexpr auto CrossbowsAddPoints = 0x10338; // int32_t
		constexpr auto CrossbowsRandom = 0x1033c; // int32_t
		constexpr auto CrossbowsAdd = 0x10340; // int32_t
		constexpr auto CrossbowsExp = 0x10348; // double
		constexpr auto CrossbowsLevelUpExp = 0x10350; // double
		constexpr auto CrossbowsMastery = 0x10358; // int32_t
		constexpr auto CrossbowsLimitLevelIndex = 0x1035c; // int32_t
		constexpr auto CrossbowsLimitLevel = 0x10360; // int32_t
		constexpr auto Riding = 0x10364; // float
		constexpr auto RidingCalculation = 0x10368; // float
		constexpr auto RidingConfig = 0x1036c; // float
		constexpr auto RidingAddPoints = 0x10370; // int32_t
		constexpr auto RidingRandom = 0x10374; // int32_t
		constexpr auto RidingAdd = 0x10378; // int32_t
		constexpr auto RidingExp = 0x10380; // double
		constexpr auto RidingLevelUpExp = 0x10388; // double
		constexpr auto RidingMastery = 0x10390; // int32_t
		constexpr auto RidingLimitLevelIndex = 0x10394; // int32_t
		constexpr auto RidingLimitLevel = 0x10398; // int32_t
		constexpr auto LightArmors = 0x1039c; // float
		constexpr auto LightArmorsCalculation = 0x103a0; // float
		constexpr auto LightArmorsConfig = 0x103a4; // float
		constexpr auto LightArmorsAddPoints = 0x103a8; // int32_t
		constexpr auto LightArmorsRandom = 0x103ac; // int32_t
		constexpr auto LightArmorsAdd = 0x103b0; // int32_t
		constexpr auto LightArmorsExp = 0x103b8; // double
		constexpr auto LightArmorsLevelUpExp = 0x103c0; // double
		constexpr auto LightArmorsMastery = 0x103c8; // int32_t
		constexpr auto LightArmorsLimitLevelIndex = 0x103cc; // int32_t
		constexpr auto LightArmorsLimitLevel = 0x103d0; // int32_t
		constexpr auto Physique = 0x103d4; // float
		constexpr auto PhysiqueCalculation = 0x103d8; // float
		constexpr auto PhysiqueConfig = 0x103dc; // float
		constexpr auto PhysiqueAddPoints = 0x103e0; // int32_t
		constexpr auto PhysiqueRandom = 0x103e4; // int32_t
		constexpr auto PhysiqueAdd = 0x103e8; // int32_t
		constexpr auto PhysiqueExp = 0x103f0; // double
		constexpr auto PhysiqueLevelUpExp = 0x103f8; // double
		constexpr auto PhysiqueMastery = 0x10400; // int32_t
		constexpr auto PhysiqueLimitLevelIndex = 0x10404; // int32_t
		constexpr auto PhysiqueLimitLevel = 0x10408; // int32_t
		constexpr auto Mining = 0x1040c; // float
		constexpr auto MiningCalculation = 0x10410; // float
		constexpr auto MiningConfig = 0x10414; // float
		constexpr auto MiningAddPoints = 0x10418; // int32_t
		constexpr auto MiningRandom = 0x1041c; // int32_t
		constexpr auto MiningAdd = 0x10420; // int32_t
		constexpr auto MiningExp = 0x10428; // double
		constexpr auto MiningLevelUpExp = 0x10430; // double
		constexpr auto MiningMastery = 0x10438; // int32_t
		constexpr auto MiningLimitLevelIndex = 0x1043c; // int32_t
		constexpr auto MiningLimitLevel = 0x10440; // int32_t
		constexpr auto Lumbering = 0x10444; // float
		constexpr auto LumberingCalculation = 0x10448; // float
		constexpr auto LumberingConfig = 0x1044c; // float
		constexpr auto LumberingAddPoints = 0x10450; // int32_t
		constexpr auto LumberingRandom = 0x10454; // int32_t
		constexpr auto LumberingAdd = 0x10458; // int32_t
		constexpr auto LumberingExp = 0x10460; // double
		constexpr auto LumberingLevelUpExp = 0x10468; // double
		constexpr auto LumberingMastery = 0x10470; // int32_t
		constexpr auto LumberingLimitLevelIndex = 0x10474; // int32_t
		constexpr auto LumberingLimitLevel = 0x10478; // int32_t
		constexpr auto Hunting = 0x1047c; // float
		constexpr auto HuntingCalculation = 0x10480; // float
		constexpr auto HuntingConfig = 0x10484; // float
		constexpr auto HuntingAddPoints = 0x10488; // int32_t
		constexpr auto HuntingRandom = 0x1048c; // int32_t
		constexpr auto HuntingAdd = 0x10490; // int32_t
		constexpr auto HuntingExp = 0x10498; // double
		constexpr auto HuntingLevelUpExp = 0x104a0; // double
		constexpr auto HuntingMastery = 0x104a8; // int32_t
		constexpr auto HuntingLimitLevelIndex = 0x104ac; // int32_t
		constexpr auto HuntingLimitLevel = 0x104b0; // int32_t
		constexpr auto Planting = 0x104b4; // float
		constexpr auto PlantingCalculation = 0x104b8; // float
		constexpr auto PlantingConfig = 0x104bc; // float
		constexpr auto PlantingAddPoints = 0x104c0; // int32_t
		constexpr auto PlantingRandom = 0x104c4; // int32_t
		constexpr auto PlantingAdd = 0x104c8; // int32_t
		constexpr auto PlantingExp = 0x104d0; // double
		constexpr auto PlantingLevelUpExp = 0x104d8; // double
		constexpr auto PlantingMastery = 0x104e0; // int32_t
		constexpr auto PlantingLimitLevelIndex = 0x104e4; // int32_t
		constexpr auto PlantingLimitLevel = 0x104e8; // int32_t
		constexpr auto HandMaking = 0x104ec; // float
		constexpr auto HandMakingCalculation = 0x104f0; // float
		constexpr auto HandMakingConfig = 0x104f4; // float
		constexpr auto HandMakingAddPoints = 0x104f8; // int32_t
		constexpr auto HandMakingRandom = 0x104fc; // int32_t
		constexpr auto HandMakingAdd = 0x10500; // int32_t
		constexpr auto HandMakingExp = 0x10508; // double
		constexpr auto HandMakingLevelUpExp = 0x10510; // double
		constexpr auto HandMakingMastery = 0x10518; // int32_t
		constexpr auto HandMakingLimitLevelIndex = 0x1051c; // int32_t
		constexpr auto HandMakingLimitLevel = 0x10520; // int32_t
		constexpr auto SiegeWorking = 0x10524; // float
		constexpr auto SiegeWorkingCalculation = 0x10528; // float
		constexpr auto SiegeWorkingConfig = 0x1052c; // float
		constexpr auto SiegeWorkingAddPoints = 0x10530; // int32_t
		constexpr auto SiegeWorkingRandom = 0x10534; // int32_t
		constexpr auto SiegeWorkingAdd = 0x10538; // int32_t
		constexpr auto SiegeWorkingExp = 0x10540; // double
		constexpr auto SiegeWorkingLevelUpExp = 0x10548; // double
		constexpr auto SiegeWorkingMastery = 0x10550; // int32_t
		constexpr auto SiegeWorkingLimitLevelIndex = 0x10554; // int32_t
		constexpr auto SiegeWorkingLimitLevel = 0x10558; // int32_t
		constexpr auto Building = 0x1055c; // float
		constexpr auto BuildingCalculation = 0x10560; // float
		constexpr auto BuildingConfig = 0x10564; // float
		constexpr auto BuildingAddPoints = 0x10568; // int32_t
		constexpr auto BuildingRandom = 0x1056c; // int32_t
		constexpr auto BuildingAdd = 0x10570; // int32_t
		constexpr auto BuildingExp = 0x10578; // double
		constexpr auto BuildingLevelUpExp = 0x10580; // double
		constexpr auto BuildingMastery = 0x10588; // int32_t
		constexpr auto BuildingLimitLevelIndex = 0x1058c; // int32_t
		constexpr auto BuildingLimitLevel = 0x10590; // int32_t
		constexpr auto Armorer = 0x10594; // float
		constexpr auto ArmorerCalculation = 0x10598; // float
		constexpr auto ArmorerConfig = 0x1059c; // float
		constexpr auto ArmorerAddPoints = 0x105a0; // int32_t
		constexpr auto ArmorerRandom = 0x105a4; // int32_t
		constexpr auto ArmorerAdd = 0x105a8; // int32_t
		constexpr auto ArmorerExp = 0x105b0; // double
		constexpr auto ArmorerLevelUpExp = 0x105b8; // double
		constexpr auto ArmorerMastery = 0x105c0; // int32_t
		constexpr auto ArmorerLimitLevelIndex = 0x105c4; // int32_t
		constexpr auto ArmorerLimitLevel = 0x105c8; // int32_t
		constexpr auto ForgeWeaponQualityDataTable = 0x105d0; // UCurveTable*
		constexpr auto ForgeArmorQualityDataTable = 0x105d8; // UCurveTable*
		constexpr auto Herb = 0x105e0; // float
		constexpr auto HerbCalculation = 0x105e4; // float
		constexpr auto HerbConfig = 0x105e8; // float
		constexpr auto HerbAddPoints = 0x105ec; // int32_t
		constexpr auto HerbRandom = 0x105f0; // int32_t
		constexpr auto HerbAdd = 0x105f4; // int32_t
		constexpr auto HerbExp = 0x105f8; // double
		constexpr auto HerbLevelUpExp = 0x10600; // double
		constexpr auto HerbMastery = 0x10608; // int32_t
		constexpr auto HerbLimitLevelIndex = 0x1060c; // int32_t
		constexpr auto HerbLimitLevel = 0x10610; // int32_t
		constexpr auto LeaderShip = 0x10614; // float
		constexpr auto LeaderShipCalculation = 0x10618; // float
		constexpr auto LeaderShipConfig = 0x1061c; // float
		constexpr auto LeaderShipAddPoints = 0x10620; // int32_t
		constexpr auto LeaderShipRandom = 0x10624; // int32_t
		constexpr auto LeaderShipAdd = 0x10628; // int32_t
		constexpr auto LeaderShipExp = 0x10630; // double
		constexpr auto LeaderShipLevelUpExp = 0x10638; // double
		constexpr auto LeaderShipMastery = 0x10640; // int32_t
		constexpr auto LeaderShipLimitLevelIndex = 0x10644; // int32_t
		constexpr auto LeaderShipLimitLevel = 0x10648; // int32_t
		constexpr auto Training = 0x1064c; // float
		constexpr auto TrainingCalculation = 0x10650; // float
		constexpr auto TrainingConfig = 0x10654; // float
		constexpr auto TrainingAddPoints = 0x10658; // int32_t
		constexpr auto TrainingRandom = 0x1065c; // int32_t
		constexpr auto TrainingAdd = 0x10660; // int32_t
		constexpr auto TrainingExp = 0x10668; // double
		constexpr auto TrainingLevelUpExp = 0x10670; // double
		constexpr auto TrainingMastery = 0x10678; // int32_t
		constexpr auto TrainingLimitLevelIndex = 0x1067c; // int32_t
		constexpr auto TrainingLimitLevel = 0x10680; // int32_t
		constexpr auto Recruit = 0x10684; // float
		constexpr auto RecruitCalculation = 0x10688; // float
		constexpr auto RecruitConfig = 0x1068c; // float
		constexpr auto RecruitAddPoints = 0x10690; // int32_t
		constexpr auto RecruitRandom = 0x10694; // int32_t
		constexpr auto RecruitAdd = 0x10698; // int32_t
		constexpr auto RecruitExp = 0x106a0; // double
		constexpr auto RecruitLevelUpExp = 0x106a8; // double
		constexpr auto RecruitMastery = 0x106b0; // int32_t
		constexpr auto RecruitLimitLevelIndex = 0x106b4; // int32_t
		constexpr auto RecruitLimitLevel = 0x106b8; // int32_t
		constexpr auto Taming = 0x106bc; // float
		constexpr auto TamingCalculation = 0x106c0; // float
		constexpr auto TamingConfig = 0x106c4; // float
		constexpr auto TamingAddPoints = 0x106c8; // int32_t
		constexpr auto TamingRandom = 0x106cc; // int32_t
		constexpr auto TamingAdd = 0x106d0; // int32_t
		constexpr auto TamingExp = 0x106d8; // double
		constexpr auto TamingLevelUpExp = 0x106e0; // double
		constexpr auto TamingMastery = 0x106e8; // int32_t
		constexpr auto TamingLimitLevelIndex = 0x106ec; // int32_t
		constexpr auto TamingLimitLevel = 0x106f0; // int32_t
		constexpr auto TamingAddExpLimitPerHour = 0x106f4; // float
		constexpr auto LastTamingAddExpLimitTime = 0x106f8; // FDateTime
		constexpr auto TamingLimitExp = 0x10700; // double
		constexpr auto Renown = 0x10708; // float
		constexpr auto RenownCalculation = 0x1070c; // float
		constexpr auto RenownConfig = 0x10710; // float
		constexpr auto RenownAddPoints = 0x10714; // int32_t
		constexpr auto RenownRandom = 0x10718; // int32_t
		constexpr auto RenownAdd = 0x1071c; // int32_t
		constexpr auto RenownExp = 0x10720; // double
		constexpr auto RenownLevelUpExp = 0x10728; // double
		constexpr auto RenownMastery = 0x10730; // int32_t
		constexpr auto RenownLimitLevelIndex = 0x10734; // int32_t
		constexpr auto RenownLimitLevel = 0x10738; // int32_t
		constexpr auto PolearmsOnHorseDamageMulAdd = 0x1073c; // float
		constexpr auto OneHandAxeToShieldMulAdd = 0x10740; // float
		constexpr auto TowHandAxeToShieldMulAdd = 0x10744; // float
		constexpr auto PolearmsAxeToShieldMulAdd = 0x10748; // float
		constexpr auto ThrowingAxeToShieldMulAdd = 0x1074c; // float
		constexpr auto BowAxeToShieldMulAdd = 0x10750; // float
		constexpr auto CrossBowAxeToShieldMulAdd = 0x10754; // float
		constexpr auto OneHandHammerToArmorMulAdd = 0x10758; // float
		constexpr auto TowHandHammerToArmorMulAdd = 0x1075c; // float
		constexpr auto PolearmHammerToArmorMulAdd = 0x10760; // float
		constexpr auto ThrowingHammerToArmorMulAdd = 0x10764; // float
		constexpr auto BowHammerToArmorMulAdd = 0x10768; // float
		constexpr auto CrossBowHammerToArmorMulAdd = 0x1076c; // float
		constexpr auto OneHandSwordToHPMulAdd = 0x10770; // float
		constexpr auto TowHandSwordToHPMulAdd = 0x10774; // float
		constexpr auto PolearmSwordToHPMulAdd = 0x10778; // float
		constexpr auto ThrowingSwordToHPMulAdd = 0x1077c; // float
		constexpr auto BowSwordToHPMulAdd = 0x10780; // float
		constexpr auto CrossBowSwordToHPMulAdd = 0x10784; // float
		constexpr auto SiegeTurretToStructureMulAdd = 0x10788; // float
		constexpr auto SiegeBallistaToStructureMulAdd = 0x1078c; // float
		constexpr auto SiegeFireThrowerToStructureMulAdd = 0x10790; // float
		constexpr auto SiegeRamToStructureMulAdd = 0x10794; // float
		constexpr auto OneHandHammerToWeaponMulAdd = 0x10798; // float
		constexpr auto TowHandHammerToWeaponMulAdd = 0x1079c; // float
		constexpr auto PolearmHammerToWeaponMulAdd = 0x107a0; // float
		constexpr auto ThrowingHammerToWeaponMulAdd = 0x107a4; // float
		constexpr auto BowHammerToWeaponMulAdd = 0x107a8; // float
		constexpr auto CrossBowHammerToWeaponMulAdd = 0x107ac; // float
		constexpr auto MineResLv1MulAdd = 0x107b0; // float
		constexpr auto MineResLv2MulAdd = 0x107b4; // float
		constexpr auto MineResLv3MulAdd = 0x107b8; // float
		constexpr auto MineResLv4MulAdd = 0x107bc; // float
		constexpr auto LumberResLv1MulAdd = 0x107c0; // float
		constexpr auto LumberResLv2MulAdd = 0x107c4; // float
		constexpr auto LumberResLv3MulAdd = 0x107c8; // float
		constexpr auto LumberResLv4MulAdd = 0x107cc; // float
		constexpr auto HuntResLv1MulAdd = 0x107d0; // float
		constexpr auto HuntResLv2MulAdd = 0x107d4; // float
		constexpr auto HuntResLv3MulAdd = 0x107d8; // float
		constexpr auto HuntResLv4MulAdd = 0x107dc; // float
		constexpr auto PlantResLv1MulAdd = 0x107e0; // float
		constexpr auto PlantResLv2MulAdd = 0x107e4; // float
		constexpr auto PlantResLv3MulAdd = 0x107e8; // float
		constexpr auto PlantResLv4MulAdd = 0x107ec; // float
		constexpr auto PlantSeedLv1MulAdd = 0x107f0; // float
		constexpr auto PlantSeedLv2MulAdd = 0x107f4; // float
		constexpr auto PlantSeedLv3MulAdd = 0x107f8; // float
		constexpr auto PlantSeedLv4MulAdd = 0x107fc; // float
		constexpr auto CultivatedLandMulAdd = 0x10800; // float
		constexpr auto FertilizerMulAdd = 0x10804; // float
		constexpr auto WateringMulAdd = 0x10808; // float
		constexpr auto PlantResLv1Luck = 0x1080c; // float
		constexpr auto PlantResLv1LuckProduceMulAdd = 0x10810; // float
		constexpr auto PlantResLv2Luck = 0x10814; // float
		constexpr auto PlantResLv2LuckProduceMulAdd = 0x10818; // float
		constexpr auto PlantResLv3Luck = 0x1081c; // float
		constexpr auto PlantResLv3LuckProduceMulAdd = 0x10820; // float
		constexpr auto PlantResLv4Luck = 0x10824; // float
		constexpr auto PlantResLv4LuckProduceMulAdd = 0x10828; // float
		constexpr auto PlantSeedLv1Luck = 0x1082c; // float
		constexpr auto PlantSeedLv1LuckProduceMulAdd = 0x10830; // float
		constexpr auto PlantSeedLv2Luck = 0x10834; // float
		constexpr auto PlantSeedLv2LuckProduceMulAdd = 0x10838; // float
		constexpr auto PlantSeedLv3Luck = 0x1083c; // float
		constexpr auto PlantSeedLv3LuckProduceMulAdd = 0x10840; // float
		constexpr auto PlantSeedLv4Luck = 0x10844; // float
		constexpr auto PlantSeedLv4LuckProduceMulAdd = 0x10848; // float
		constexpr auto HerbResLv1MulAdd = 0x1084c; // float
		constexpr auto HerbResLv2MulAdd = 0x10850; // float
		constexpr auto HerbResLv3MulAdd = 0x10854; // float
		constexpr auto HerbResLv4MulAdd = 0x10858; // float
		constexpr auto GeneralExploitDamageMulAdd = 0x1085c; // float
		constexpr auto TowHandWeaponBreakDefenseRatioAdd = 0x10860; // float
		constexpr auto AnimalDamageReduceMulAdd = 0x10864; // float
		constexpr auto AnimalWarnRangeMulAdd = 0x10868; // float
		constexpr auto HandMakingTimeMulAdd = 0x1086c; // float
		constexpr auto SiegeWorkMaxHPMulAdd = 0x10870; // float
		constexpr auto SiegeWorkReloadTimeMulAdd = 0x10874; // float
		constexpr auto SiegeWorkDrawTimeMulAdd = 0x10878; // float
		constexpr auto BallistaBulletSpeedMulAdd = 0x1087c; // float
		constexpr auto BallistaLineDisMulAdd = 0x10880; // float
		constexpr auto BallistaEnable = 0x10884; // float
		constexpr auto SiegeProjectileFollowEnable = 0x10888; // float
		constexpr auto FlamethrowerAmmoMulAdd = 0x1088c; // float
		constexpr auto SiegeWorkSpeedMulAdd = 0x10890; // float
		constexpr auto SiegeWorkRotateSpeedMulAdd = 0x10894; // float
		constexpr auto ClimbLadderSpeedMulAdd = 0x10898; // float
		constexpr auto BuildingResMulAdd = 0x1089c; // float
		constexpr auto BuildingHPRecoverMulAdd = 0x108a0; // float
		constexpr auto BuildingFixTimeMulAdd = 0x108a4; // float
		constexpr auto WeaponEffect = 0x108a8; // int32_t
		constexpr auto WeaponEffects = 0x108b0; // TArray<UParticleSystem*>
		constexpr auto WoundTypeValue1 = 0x108c0; // float
		constexpr auto WoundTypeValue2 = 0x108c4; // float
		constexpr auto WoundTypeValue3 = 0x108c8; // float
		constexpr auto WoundTypeValue4 = 0x108cc; // float
		constexpr auto Wound1AddOtherMulAdd = 0x108d0; // float
		constexpr auto Wound2AddOtherMulAdd = 0x108d4; // float
		constexpr auto Wound3AddOtherMulAdd = 0x108d8; // float
		constexpr auto Wound4AddOtherMulAdd = 0x108dc; // float
		constexpr auto Wound1ResistMulAdd = 0x108e0; // float
		constexpr auto Wound2ResistMulAdd = 0x108e4; // float
		constexpr auto Wound3ResistMulAdd = 0x108e8; // float
		constexpr auto Wound4ResistMulAdd = 0x108ec; // float
		constexpr auto DeadlyValue = 0x108f0; // float
		constexpr auto DeadlyBuff = 0x108f8; // USGBuff*
		constexpr auto WoundAutoRecoverValue = 0x10900; // float
		constexpr auto TamingExpMulAdd = 0x1091c; // float
		constexpr auto TamingHealRecMulAdd = 0x10920; // float
		constexpr auto TamingHungerRecMulAdd = 0x10924; // float
		constexpr auto TamedAnimalExpMulAdd = 0x10928; // float
		constexpr auto MaxGeneralsAdd = 0x1092c; // float
		constexpr auto MaxGeneralsHPMulAdd = 0x10930; // float
		constexpr auto MaxGeneralsSpeedMulAdd = 0x10934; // float
		constexpr auto MaxGeneralsSPMulAdd = 0x10938; // float
		constexpr auto GeneralsStunMulAdd = 0x1093c; // float
		constexpr auto MaxWarGeneralNumberAdd = 0x10940; // int32_t
		constexpr auto MinRecruitAddLevel = 0x10944; // float
		constexpr auto MaxRecruitAddLevel = 0x10948; // float
		constexpr auto RecruitAddLife = 0x1094c; // float
		constexpr auto CurrentRecruitMaxLevel = 0x10950; // int32_t
		constexpr auto LoyaltyAddMultiAdd = 0x10954; // float
		constexpr auto GeneralRebornTimeMultiAdd = 0x10958; // float
		constexpr auto GeneralHungerReduceMultiAdd = 0x1095c; // float
		constexpr auto GeneralSTSkillMultiAdd = 0x10960; // float
		constexpr auto GeneralAGSkillMultiAdd = 0x10964; // float
		constexpr auto GeneralWISkillMultiAdd = 0x10968; // float
		constexpr auto GeneralENSkillMultiAdd = 0x1096c; // float
		constexpr auto GeneralCHSkillMultiAdd = 0x10970; // float
		constexpr auto GeneralSkillAddOneHandedWeaponsMultiAdd = 0x10974; // float
		constexpr auto GeneralSkillAddShieldsMultiAdd = 0x10978; // float
		constexpr auto GeneralSkillAddTowHandedWeaponsMultiAdd = 0x1097c; // float
		constexpr auto GeneralSkillAddPolearmsMultiAdd = 0x10980; // float
		constexpr auto GeneralSkillAddHeavyArmorsMultiAdd = 0x10984; // float
		constexpr auto GeneralSkillAddThrowingMultiAdd = 0x10988; // float
		constexpr auto GeneralSkillAddArcheryMultiAdd = 0x1098c; // float
		constexpr auto GeneralSkillAddCrossbowsMultiAdd = 0x10990; // float
		constexpr auto GeneralSkillAddRidingMultiAdd = 0x10994; // float
		constexpr auto GeneralSkillAddLightArmorsMultiAdd = 0x10998; // float
		constexpr auto GeneralSkillAddPhysiqueMultiAdd = 0x1099c; // float
		constexpr auto GeneralSkillAddMiningMultiAdd = 0x109a0; // float
		constexpr auto GeneralSkillAddLumberingMultiAdd = 0x109a4; // float
		constexpr auto GeneralSkillAddHuntingMultiAdd = 0x109a8; // float
		constexpr auto GeneralSkillAddPlantingMultiAdd = 0x109ac; // float
		constexpr auto GeneralSkillAddHandMakingMultiAdd = 0x109b0; // float
		constexpr auto GeneralSkillAddSiegeWorkingMultiAdd = 0x109b4; // float
		constexpr auto GeneralSkillAddBuildingMultiAdd = 0x109b8; // float
		constexpr auto GeneralSkillAddArmorerMultiAdd = 0x109bc; // float
		constexpr auto GeneralSkillAddHerbMultiAdd = 0x109c0; // float
		constexpr auto GeneralSkillAddTamingMultiAdd = 0x109c4; // float
		constexpr auto GeneralSkillAddLeaderShipMultiAdd = 0x109c8; // float
		constexpr auto GeneralSkillAddRecruitMultiAdd = 0x109cc; // float
		constexpr auto GeneralSkillAddTrainingMultiAdd = 0x109d0; // float
		constexpr auto GeneralSkillAddRenownMultiAdd = 0x109d4; // float
		constexpr auto ExtraSkillPointsAdd = 0x109d8; // int32_t
		constexpr auto ExtraPerkPointsAdd = 0x109dc; // int32_t
		constexpr auto ThrowingRangeMulAdd = 0x109e0; // float
		constexpr auto BowRangeMulAdd = 0x109e4; // float
		constexpr auto CorssBowRangeMulAdd = 0x109e8; // float
		constexpr auto CorssBowPiercenessAdd = 0x109ec; // int32_t
		constexpr auto CorssBowPiercenessRatio = 0x109f0; // float
		constexpr auto BeInFullSwingValue = 0x109f4; // float
		constexpr auto BeInFullSwingValueAdd = 0x109f8; // float
		constexpr auto BeInFullSwingMaxValue = 0x109fc; // float
		constexpr auto BeInFullSwingTime = 0x10a00; // float
		constexpr auto BeInFullSwingTimerHandle = 0x10a08; // FTimerHandle
		constexpr auto BeInFullSwingBuffTemplate = 0x10a10; // USGBuff*
		constexpr auto SkilledMiner = 0x10a18; // float
		constexpr auto PracticeMiner = 0x10a1c; // float
		constexpr auto BeInFullSwingMiner = 0x10a20; // float
		constexpr auto ExplorationCopper = 0x10a24; // float
		constexpr auto ExplorationIron = 0x10a28; // float
		constexpr auto ExplorationXuanhuaIron = 0x10a2c; // float
		constexpr auto ExplorationMeteorite = 0x10a30; // float
		constexpr auto ExplorationClay = 0x10a34; // float
		constexpr auto ExplorationSalt = 0x10a38; // float
		constexpr auto ExplorationKaolinite = 0x10a3c; // float
		constexpr auto ExplorationCoal = 0x10a40; // float
		constexpr auto ExplorationNitramite = 0x10a44; // float
		constexpr auto ExplorationSulfur = 0x10a48; // float
		constexpr auto ExplorationRealgar = 0x10a4c; // float
		constexpr auto ExplorationJade = 0x10a50; // float
		constexpr auto AddBarkProduction = 0x10a54; // float
		constexpr auto SkilledLumber = 0x10a58; // float
		constexpr auto PracticeLumber = 0x10a5c; // float
		constexpr auto BeInFullSwingLumber = 0x10a60; // float
		constexpr auto SharpEyesLevel2Tree = 0x10a64; // float
		constexpr auto SharpEyesLevel3Tree = 0x10a68; // float
		constexpr auto SharpEyesLevel4Tree = 0x10a6c; // float
		constexpr auto BoneProduction = 0x10a70; // float
		constexpr auto SkilledHunter = 0x10a74; // float
		constexpr auto SensitiveSmell = 0x10a78; // float
		constexpr auto PracticeHunter = 0x10a7c; // float
		constexpr auto WalkOnTiptoe = 0x10a80; // float
		constexpr auto SkillfulSwimmer = 0x10a84; // float
		constexpr auto OneHandedWeaponsAttackBlockDurableMultiAdd = 0x10a88; // float
		constexpr auto ShieldsAttackBlockDurableMultiAdd = 0x10a8c; // float
		constexpr auto TowHandedWeaponsAttackBlockDurableMultiAdd = 0x10a90; // float
		constexpr auto PolearmsAttackBlockDurableMultiAdd = 0x10a94; // float
		constexpr auto ArcheryAttackDurableMultiAdd = 0x10a98; // float
		constexpr auto CrossbowsAttackDurableMultiAdd = 0x10a9c; // float
		constexpr auto SiegeAttackDurableMultiAdd = 0x10aa0; // float
		constexpr auto Perks = 0x10aa8; // TArray<int32_t>
		constexpr auto CurrentMasteryPoints = 0x10ab8; // int32_t
		constexpr auto MasteryPointsAdd = 0x10abc; // int32_t
		constexpr auto CurrentCraftPoints = 0x10ac0; // int32_t
		constexpr auto CurrentPerkPoints = 0x10ac4; // int32_t
		constexpr auto CraftPerkGroups = 0x10ac8; // TArray<int32_t>
		constexpr auto DefaultCraftPerkGroup = 0x10ad8; // TArray<USGCraftPerkGroup*>
		constexpr auto BowAimTimeMulAdd = 0x10ae8; // float
		constexpr auto BowReloadTimeMulAdd = 0x10aec; // float
		constexpr auto BowHoldTimeAdd = 0x10af0; // float
		constexpr auto BowMovingAngleMulAdd = 0x10af4; // float
		constexpr auto BowRotationScatteringAngleMulAdd = 0x10af8; // float
		constexpr auto RiderBowMovingAngleMulAdd = 0x10afc; // float
		constexpr auto BowAngleMulAdd = 0x10b00; // float
		constexpr auto BowArrowSpeedAdd = 0x10b04; // float
		constexpr auto CrossBowAimTimeMulAdd = 0x10b08; // float
		constexpr auto CrossBowReloadTimeMulAdd = 0x10b0c; // float
		constexpr auto CrossBowHoldTimeAdd = 0x10b10; // float
		constexpr auto CrossBowMovingAngleMulAdd = 0x10b14; // float
		constexpr auto RiderCrossBowMovingAngleMulAdd = 0x10b18; // float
		constexpr auto CrossBowAngleMulAdd = 0x10b1c; // float
		constexpr auto CrossBowArrowSpeedAdd = 0x10b20; // float
		constexpr auto ThrowingReloadTimeMulAdd = 0x10b24; // float
		constexpr auto ThrowingAngleMulAdd = 0x10b28; // float
		constexpr auto ThrowingArrowSpeedAdd = 0x10b2c; // float
		constexpr auto OnehandCostSPMulAdd = 0x10b30; // float
		constexpr auto TowhandCostSPMulAdd = 0x10b34; // float
		constexpr auto PolearmsCostSPMulAdd = 0x10b38; // float
		constexpr auto ThrowingCostSPMulAdd = 0x10b3c; // float
		constexpr auto ArcheryCostSPMulAdd = 0x10b40; // float
		constexpr auto CrossbowsCostSPMulAdd = 0x10b44; // float
		constexpr auto OnehandMaxComboAdd = 0x10b48; // float
		constexpr auto TowhandMaxComboAdd = 0x10b4c; // float
		constexpr auto PolearmsMaxComboAdd = 0x10b50; // float
		constexpr auto RidingRotationMulAdd = 0x10b54; // float
		constexpr auto RidingRotationMulInterpSpeedAdd = 0x10b58; // float
		constexpr auto OneHandHeadShootDmgMulAdd = 0x10b5c; // float
		constexpr auto TowHandHeadShootDmgMulAdd = 0x10b60; // float
		constexpr auto PolearmHeadShootDmgMulAdd = 0x10b64; // float
		constexpr auto BowHeadShootDmgMulAdd = 0x10b68; // float
		constexpr auto CorssBowHeadShootDmgMulAdd = 0x10b6c; // float
		constexpr auto ThrowingHeadShootDmgMulAdd = 0x10b70; // float
		constexpr auto SiegeHeadShootDmgMulAdd = 0x10b74; // float
		constexpr auto JueWeiAchievementShieldDurableMulAdd = 0x10b78; // float
		constexpr auto RidingAccelerationMulAdd = 0x10b7c; // float
		constexpr auto RidingCostSPMulAdd = 0x10b80; // float
		constexpr auto ForgeWeaponAbility = 0x10b84; // float
		constexpr auto ForgeArmorAbility = 0x10b88; // float
		constexpr auto ReduceEquipmentWeightMultiAdd = 0x10b8c; // float
		constexpr auto CanRepaireStructureEquipment = 0x10b90; // float
		constexpr auto BackShieldBlockedDamageMultiAdd = 0x10b94; // float
		constexpr auto PushShieldBlockedArrowScaleMultiAdd = 0x10b98; // float
		constexpr auto UseSiegeDamageMulAdd = 0x10b9c; // float
		constexpr auto AchievementHonorMulAdd = 0x10ba0; // float
		constexpr auto BattleHonorMulAdd = 0x10ba4; // float
		constexpr auto BannerWeiWangMulAdd = 0x10ba8; // float
		constexpr auto HonorDamageMulAdd = 0x10bac; // float
		constexpr auto bHQMesh = 0x10bb0; // bool
		constexpr auto bRandomAppearanceInEditor = 0x10bb1; // bool
		constexpr auto RandomAppearanceWeight = 0x10bb8; // UCharacterRandomAppearanceWeight*
		constexpr auto AppearanceTemplates = 0x10bc0; // TArray<FName>
		constexpr auto AppearanceData = 0x10bd0; // FAppearanceData
		constexpr auto Helmet = 0x10d48; // USGItem*
		constexpr auto Chest = 0x10d50; // USGItem*
		constexpr auto Cuish = 0x10d58; // USGItem*
		constexpr auto Back = 0x10d60; // USGItem*
		constexpr auto bAppearanceState = 0x10d68; // char : 1
		constexpr auto HelmetAppearance = 0x10d70; // USGItem*
		constexpr auto ChestAppearance = 0x10d78; // USGItem*
		constexpr auto UnderwaistAppearance = 0x10d80; // USGItem*
		constexpr auto FashionKitHelmet = 0x10d88; // USGItem*
		constexpr auto FashionKitChest = 0x10d90; // USGItem*
		constexpr auto FashionKitCuish = 0x10d98; // USGItem*
		constexpr auto FlagImageString = 0x10da0; // FString
		constexpr auto DynamicGameMeshMats = 0x10de8; // FCharacterMeshLODDynamicMaterialData [0x3]
		constexpr auto DynamicHQMeshMats = 0x10e30; // FCharacterMeshLODDynamicMaterialData [0x3]
		constexpr auto DynamicHairMaterial = 0x10e78; // UMaterialInstanceDynamic*
		constexpr auto DynamicMoustacheMaterial = 0x10e80; // UMaterialInstanceDynamic*
		constexpr auto ViewBasePropertyController = 0x10e98; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto PlayerAccountId = 0x10ea0; // FString
		constexpr auto CharacterDataVersion = 0x10eb0; // uint32_t
		constexpr auto TaiShouTitleIndex = 0x10eb8; // int32_t
		constexpr auto FoodBuffModifyDataMulAdd = 0x10ebc; // float
		constexpr auto WineBuffModifyDataMulAdd = 0x10ec0; // float
		constexpr auto MedicineBuffModifyDataMulAdd = 0x10ec4; // float
		constexpr auto ArtofWar = 0x10ec8; // TArray<FArtofWar>
		constexpr auto bCanClimbWall = 0x10ed8; // int32_t
		constexpr auto bCanLightArmorClimbWall = 0x10edc; // int32_t
		constexpr auto bCanHeavyArmorClimbWall = 0x10ee0; // int32_t
		constexpr auto ClimbWallHeight = 0x10ee4; // float
		constexpr auto LightArmorClimbWallHeight = 0x10ee8; // float
		constexpr auto HeavyArmorClimbWallHeight = 0x10eec; // float
		constexpr auto MaxPersonalStructureAdd = 0x10ef0; // int32_t
		constexpr auto bDeadChangeDurable = 0x10ef4; // char : 1
		constexpr auto WildNPCDeadDurableMulMin = 0x10ef8; // float
		constexpr auto WildNPCDeadDurableMulMax = 0x10efc; // float
		constexpr auto BindedHorse = 0x10f00; // TWeakObjectPtr<ASG_AnimalsCharacter>
		constexpr auto BeFollowHorse = 0x10f08; // TWeakObjectPtr<ASG_AnimalsCharacter>
		constexpr auto bCanClimbInEditor = 0x10f18; // char : 1
		constexpr auto AnimSkillMontage = 0x10f30; // UAnimMontage*
		constexpr auto VaultingParams = 0x10f40; // FVaultingParams
		constexpr auto AnimSkillVaultingData = 0x11090; // UAnimSkill_VaultingData*
		constexpr auto WoundValues = 0x11098; // TArray<float>
		constexpr auto StructureGivePerks = 0x110a8; // TArray<int32_t>
		constexpr auto LadderParamsIndex = 0x110b8; // char
		constexpr auto ChargeResDefenseEffective = 0x110bc; // float
		constexpr auto MaxCharge = 0x110c0; // float
		constexpr auto MinCharge = 0x110c4; // float
		constexpr auto MaxChargeTumbleRate = 0x110c8; // float
		constexpr auto MinChargeTumbleRate = 0x110cc; // float
		constexpr auto DMI_FlagImage = 0x110d0; // UMaterialInstanceDynamic*
		constexpr auto RT_FlagImage = 0x110d8; // UTextureRenderTarget2D*
	}

	namespace n_UStableTrainerPanel {
		constexpr auto StableTrainerSlotTemplate = 0x260; // UStableTrainerSlot*
		constexpr auto EmptySlotTemplate = 0x268; // UUserWidget*
		constexpr auto PageMaxNum = 0x270; // int32_t
		constexpr auto LastPageBtn = 0x278; // UButton*
		constexpr auto CurPageText = 0x280; // UTextBlock*
		constexpr auto MaxPageText = 0x288; // UTextBlock*
		constexpr auto NextPageBtn = 0x290; // UButton*
		constexpr auto NumText = 0x298; // UTextBlock*
		constexpr auto SlotVerticalBox = 0x2a0; // UVerticalBox*
	}

	namespace n_ASGBoxProjectile {
		constexpr auto BoxProjectileCollisionComponent = 0x6e8; // UBoxComponent*
	}

	namespace n_UUI_GameNotice {
		constexpr auto ButtonClose = 0x2d8; // UButton*
	}

	namespace n_UAnimMontage {
		constexpr auto BlendIn = 0xa8; // FAlphaBlend
		constexpr auto BlendInTime = 0xd8; // float
		constexpr auto BlendOut = 0xe0; // FAlphaBlend
		constexpr auto BlendOutTime = 0x110; // float
		constexpr auto BlendOutTriggerTime = 0x114; // float
		constexpr auto SyncGroup = 0x118; // FName
		constexpr auto SyncSlotIndex = 0x120; // int32_t
		constexpr auto MarkerData = 0x128; // FMarkerSyncData
		constexpr auto CompositeSections = 0x148; // TArray<FCompositeSection>
		constexpr auto SlotAnimTracks = 0x158; // TArray<FSlotAnimationTrack>
		constexpr auto BranchingPoints = 0x168; // TArray<FBranchingPoint>
		constexpr auto bEnableRootMotionTranslation = 0x178; // bool
		constexpr auto bEnableRootMotionRotation = 0x179; // bool
		constexpr auto bEnableAutoBlendOut = 0x17a; // bool
		constexpr auto RootMotionRootLock = 0x17b; // ERootMotionRootLock
		constexpr auto BranchingPointMarkers = 0x180; // TArray<FBranchingPointMarker>
		constexpr auto BranchingPointStateNotifyIndices = 0x190; // TArray<int32_t>
		constexpr auto TimeStretchCurve = 0x1a0; // FTimeStretchCurve
		constexpr auto TimeStretchCurveName = 0x1c8; // FName
	}

	namespace n_UJunDistrictFilterWidget {
		constexpr auto CbDistrict = 0x260; // UCheckBox*
		constexpr auto TbDistrict = 0x268; // UTextBlock*
		constexpr auto BindDistrictId = 0x270; // int32_t
	}

	namespace n_UMovieSceneAudioSection {
		constexpr auto Sound = 0xe8; // USoundBase*
		constexpr auto StartFrameOffset = 0xf0; // FFrameNumber
		constexpr auto StartOffset = 0xf4; // float
		constexpr auto AudioStartTime = 0xf8; // float
		constexpr auto AudioDilationFactor = 0xfc; // float
		constexpr auto AudioVolume = 0x100; // float
		constexpr auto SoundVolume = 0x108; // FMovieSceneFloatChannel
		constexpr auto PitchMultiplier = 0x1a8; // FMovieSceneFloatChannel
		constexpr auto AttachActorData = 0x248; // FMovieSceneActorReferenceData
		constexpr auto bLooping = 0x2f8; // bool
		constexpr auto bSuppressSubtitles = 0x2f9; // bool
		constexpr auto bOverrideAttenuation = 0x2fa; // bool
		constexpr auto AttenuationSettings = 0x300; // USoundAttenuation*
		constexpr auto OnQueueSubtitles = 0x308; // FDelegate
		constexpr auto OnAudioFinished = 0x318; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x328; // FMulticastInlineDelegate
	}

	namespace n_UHorizonButton {
		constexpr auto OnClickedDelegate = 0x428; // FMulticastInlineDelegate
		constexpr auto OnPressedDelegate = 0x438; // FMulticastInlineDelegate
		constexpr auto OnReleasedDelegate = 0x448; // FMulticastInlineDelegate
		constexpr auto OnHoveredDelegate = 0x458; // FMulticastInlineDelegate
		constexpr auto OnUnhoveredDelegate = 0x468; // FMulticastInlineDelegate
	}

	namespace n_UParticleModuleLocationSkelVertSurface {
		constexpr auto SourceType = 0x30; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x40; // char : 1
		constexpr auto bOrientMeshEmitters = 0x40; // char : 1
		constexpr auto bInheritBoneVelocity = 0x40; // char : 1
		constexpr auto InheritVelocityScale = 0x44; // float
		constexpr auto SkelMeshActorParamName = 0x48; // FName
		constexpr auto ValidAssociatedBones = 0x50; // TArray<FName>
		constexpr auto bEnforceNormalCheck = 0x60; // char : 1
		constexpr auto NormalToCompare = 0x64; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x70; // float
		constexpr auto NormalCheckTolerance = 0x74; // float
		constexpr auto ValidMaterialIndices = 0x78; // TArray<int32_t>
		constexpr auto bInheritVertexColor = 0x88; // char : 1
		constexpr auto bInheritUV = 0x88; // char : 1
		constexpr auto InheritUVChannel = 0x8c; // uint32_t
	}

	namespace n_UWBP_N_GenericConfirmationDialog_C {
		constexpr auto Image_79 = 0x400; // UImage*
		constexpr auto Image_137 = 0x408; // UImage*
		constexpr auto Image_227 = 0x410; // UImage*
	}

	namespace n_UPropertyBinding {
		constexpr auto SourceObject = 0x28; // TWeakObjectPtr<UObject>
		constexpr auto SourcePath = 0x30; // FDynamicPropertyPath
		constexpr auto DestinationProperty = 0x58; // FName
	}

	namespace n_UUI_N_ShopBannerItem {
		constexpr auto ItemImage = 0x260; // UImage*
		constexpr auto ItemSecImage = 0x268; // UBorder*
		constexpr auto ItemNameText = 0x270; // UTextBlock*
		constexpr auto ItemIntroText = 0x278; // UTextBlock*
		constexpr auto PurchaseBtn = 0x280; // UButton*
	}

	namespace n_UAnimSequenceLevelSequenceLink {
		constexpr auto SkelTrackGuid = 0x28; // FGuid
		constexpr auto PathToLevelSequence = 0x38; // FSoftObjectPath
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UItemAuctionSlot {
		constexpr auto IconImage = 0x260; // UImage*
		constexpr auto NameText = 0x268; // UTextBlock*
		constexpr auto QualityText = 0x270; // UTextBlock*
		constexpr auto StateText = 0x278; // UTextBlock*
		constexpr auto TimeText = 0x280; // UTextBlock*
		constexpr auto UnitPriceText = 0x288; // UTextBlock*
		constexpr auto AmountText = 0x290; // UTextBlock*
		constexpr auto LevelText = 0x298; // UTextBlock*
		constexpr auto ButtonSelected = 0x2a0; // UButton*
		constexpr auto ButtonCheckedStyle = 0x2a8; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x520; // FButtonStyle
		constexpr auto ParentUI = 0x798; // TWeakObjectPtr<USGUI>
	}

	namespace n_UMaterialExpressionLandscapeVisibilityMask {
		constexpr auto ExpressionGUID = 0x40; // FGuid
	}

	namespace n_UTextureRenderTarget {
		constexpr auto TargetGamma = 0xd8; // float
	}

	namespace n_UWaterRuntimeSettings {
		constexpr auto CollisionChannelForWaterTraces = 0x38; // ECollisionChannel
		constexpr auto MaterialParameterCollection = 0x40; // TSoftObjectPtr<UMaterialParameterCollection>
		constexpr auto WaterBodyIconWorldSize = 0x68; // float
		constexpr auto WaterBodyIconWorldZOffset = 0x6c; // float
		constexpr auto DefaultWaterCollisionProfileName = 0x70; // FName
	}

	namespace n_UDynamicEntryBox {
		constexpr auto EntryWidgetClass = 0x1d8; // UUserWidget*
	}

	namespace n_UAbilityTask_ApplyRootMotion_Base {
		constexpr auto ForceName = 0x84; // FName
		constexpr auto FinishVelocityMode = 0x8c; // ERootMotionFinishVelocityMode
		constexpr auto FinishSetVelocity = 0x90; // FVector
		constexpr auto FinishClampVelocity = 0x9c; // float
		constexpr auto MovementComponent = 0xa0; // UCharacterMovementComponent*
	}

	namespace n_UAbilityTask_MoveToLocation {
		constexpr auto OnTargetLocationReached = 0x88; // FMulticastInlineDelegate
		constexpr auto StartLocation = 0x9c; // FVector
		constexpr auto TargetLocation = 0xa8; // FVector
		constexpr auto DurationOfMovement = 0xb4; // float
		constexpr auto LerpCurve = 0xc8; // UCurveFloat*
		constexpr auto LerpCurveVector = 0xd0; // UCurveVector*
	}

	namespace n_UProceduralPuncturedDiscToolProperties {
		constexpr auto HoleRadius = 0x80; // float
	}

	namespace n_UInAppPurchaseQueryCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionVectorParameter {
		constexpr auto DefaultValue = 0x58; // FLinearColor
		constexpr auto bUseCustomPrimitiveData = 0x68; // bool
		constexpr auto PrimitiveDataIndex = 0x69; // char
	}

	namespace n_UReplicationGraph {
		constexpr auto ReplicationConnectionManagerClass = 0x28; // UNetReplicationGraphConnection*
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto Connections = 0x38; // TArray<UNetReplicationGraphConnection*>
		constexpr auto PendingConnections = 0x48; // TArray<UNetReplicationGraphConnection*>
		constexpr auto GlobalGraphNodes = 0xa8; // TArray<UReplicationGraphNode*>
		constexpr auto PrepareForReplicationNodes = 0xb8; // TArray<UReplicationGraphNode*>
	}

	namespace n_UNiagaraDataInterfacePhysicsAsset {
		constexpr auto DefaultSource = 0x38; // UPhysicsAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_UBTTask_SetStatus {
		constexpr auto Enum_AIStatusType = 0xc0; // EAIStatusType
	}

	namespace n_USGInventoryComponent {
		constexpr auto bInitDefaultItemDeletePrevious = 0xc8; // char : 1
		constexpr auto bInital = 0xc8; // char : 1
		constexpr auto InventoryItems = 0xd0; // TArray<USGItem*>
		constexpr auto InventoryItemMaxAmount = 0xe0; // int32_t
		constexpr auto bNeedCheckNewInventoryItemMaxAmount = 0xe4; // char : 1
		constexpr auto NewInventoryItemMaxAmount = 0xe8; // int32_t
		constexpr auto EquipItems = 0xf0; // TArray<USGItem*>
		constexpr auto EquipItemMaxAmount = 0x100; // int32_t
		constexpr auto ShortCutItems = 0x108; // TArray<USGItem*>
		constexpr auto bIsCraftStructure = 0x118; // char : 1
		constexpr auto ShortCutItemMaxAmount = 0x11c; // int32_t
		constexpr auto ShortCutShowOnePageAmount = 0x120; // int32_t
		constexpr auto CraftItems = 0x128; // TArray<USGItem*>
		constexpr auto AutoCraftItems = 0x138; // TArray<USGItem*>
		constexpr auto FunctionItem = 0x148; // USGItem*
		constexpr auto FaceliftItem = 0x150; // USGItem*
		constexpr auto FuelItem = 0x158; // USGItem*
		constexpr auto FoodItems = 0x160; // TArray<USGItem*>
		constexpr auto FoodItemMaxAmount = 0x170; // int32_t
		constexpr auto BattleStoreItems = 0x178; // TArray<USGItem*>
		constexpr auto BattleStoreItemMaxAmount = 0x188; // int32_t
		constexpr auto CrossServerStoreItems = 0x190; // TArray<USGItem*>
		constexpr auto CrossServerStoreItemMaxAmount = 0x1a0; // int32_t
		constexpr auto TransportMachineGuid = 0x1a4; // FGuid
		constexpr auto DefaultInventoryItems = 0x1b8; // TMap<USGItem*, int32_t>
		constexpr auto CheatInventoryItems = 0x208; // TMap<USGItem*, int32_t>
		constexpr auto CheatInventoryItemQuality = 0x258; // TMap<USGItem*, EItemQuality>
		constexpr auto DefaultEquippedItems = 0x2a8; // TArray<USGItem*>
		constexpr auto DefaultShortCutItems = 0x2b8; // TMap<USGItem*, int32_t>
		constexpr auto DefaultCraftItems = 0x308; // TArray<USGItem*>
		constexpr auto MaxAddGroup = 0x318; // int32_t
		constexpr auto bIsDead = 0x31c; // char : 1
		constexpr auto UseConsumeItemCD = 0x328; // float [0x1a]
		constexpr auto OnInventoryAddItem = 0x390; // FMulticastInlineDelegate
		constexpr auto OnInventoryRemoveItem = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateItem = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateItemMaxAmount = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateItemMaxBattleAmount = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnInventoryAddEquip = 0x3e0; // FMulticastInlineDelegate
		constexpr auto OnInventoryRemoveEquip = 0x3f0; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateEquip = 0x400; // FMulticastInlineDelegate
		constexpr auto OnInventoryAddSlot = 0x410; // FMulticastInlineDelegate
		constexpr auto OnInventoryRemoveSlot = 0x420; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateSlot = 0x430; // FMulticastInlineDelegate
		constexpr auto OnInventoryAddPerk = 0x440; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateFunction = 0x450; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateFacelift = 0x460; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateFuel = 0x470; // FMulticastInlineDelegate
		constexpr auto OnInventoryAddFood = 0x480; // FMulticastInlineDelegate
		constexpr auto OnInventoryRemoveFood = 0x490; // FMulticastInlineDelegate
		constexpr auto OnInventoryUpdateFood = 0x4a0; // FMulticastInlineDelegate
		constexpr auto OnStoreAddItem = 0x4b0; // FMulticastInlineDelegate
		constexpr auto OnStoreRemoveItem = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnStoreUpdateItem = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnInventoryItemChanged = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnInventoryCraftItemPriorityChanged = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnInventoryView = 0x500; // FMulticastInlineDelegate
		constexpr auto RemoteViewingInventoryPlayerControllers = 0x510; // TArray<TWeakObjectPtr<ASGPlayerController>>
		constexpr auto MaxItemCraftQueueEntries = 0x530; // int32_t
		constexpr auto bAutoCraftingEnabled = 0x534; // char : 1
		constexpr auto ItemCraftQueueEntries = 0x538; // TArray<FItemCraftQueueEntry>
		constexpr auto OnlyAddItemTemplates = 0x548; // TArray<USGItem*>
		constexpr auto CraftTimerHandle = 0x558; // FTimerHandle
		constexpr auto CraftProcessInterval = 0x560; // float
		constexpr auto ConsumeItemCDHandle = 0x570; // FTimerHandle
		constexpr auto ConsumeItemCDInterval = 0x578; // float
		constexpr auto AutoCraftingQueueEntries = 0x588; // TArray<FItemAutoCraftQueueEntry>
		constexpr auto ItemExpireTimeData = 0x598; // TArray<FItemExpireTimeData>
		constexpr auto bCanOpen = 0x5a8; // char : 1
		constexpr auto bUseWeight = 0x5a8; // char : 1
		constexpr auto bLimitOverWeightTake = 0x5a8; // char : 1
		constexpr auto LimitOverWeightTake = 0x5ac; // float
		constexpr auto CurWeight = 0x5b4; // float
		constexpr auto InventoryFunction = 0x5b8; // EInventoryFunctions
		constexpr auto ItemFunctionEntries = 0x5c0; // TArray<FItemFunctionEntry>
		constexpr auto DefaultMaxCanCraftAmount = 0x5d0; // int32_t
		constexpr auto OwnerSGPlayerController = 0x5d4; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto bCanSetPassword = 0x5dc; // char : 1
		constexpr auto LastSendClientNotifyTime = 0x5e0; // double
		constexpr auto bCanOpenInventorySpecial = 0x5e8; // char : 1
		constexpr auto bDebug = 0x5e8; // char : 1
		constexpr auto LastCalcExpireTime = 0x5ec; // float
		constexpr auto SavedCalcExpireTime = 0x5f0; // float
		constexpr auto TickCalcExpiringItemInterval = 0x5f4; // float
		constexpr auto HighCraftItemIndex = 0x600; // TArray<int32_t>
		constexpr auto MiddleCraftItemIndex = 0x610; // TArray<int32_t>
		constexpr auto LowCraftItemIndex = 0x620; // TArray<int32_t>
	}

	namespace n_URemeshMeshToolProperties {
		constexpr auto TargetTriangleCount = 0x70; // int32_t
		constexpr auto SmoothingType = 0x74; // ERemeshSmoothingType
		constexpr auto bDiscardAttributes = 0x75; // bool
		constexpr auto bShowWireframe = 0x76; // bool
		constexpr auto bShowGroupColors = 0x77; // bool
		constexpr auto RemeshType = 0x78; // ERemeshType
		constexpr auto RemeshIterations = 0x7c; // int32_t
		constexpr auto bUseTargetEdgeLength = 0x80; // bool
		constexpr auto TargetEdgeLength = 0x84; // float
		constexpr auto bReproject = 0x88; // bool
	}

	namespace n_UVoiceAudition {
		constexpr auto TbAudition = 0x270; // UTextBlock*
		constexpr auto BtnAudition = 0x278; // UButton*
		constexpr auto BindVoiceIndex = 0x280; // int32_t
	}

	namespace n_UProceduralFoliageTile {
		constexpr auto FoliageSpawner = 0x28; // UProceduralFoliageSpawner*
		constexpr auto InstancesArray = 0xd0; // TArray<FProceduralFoliageInstance>
	}

	namespace n_UWBP_ProducerName_6_C {
		constexpr auto WBP_ProducerSlot = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_5 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_6 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_7 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_8 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSplitLine = 0x298; // UWBP_ProducerSplitLine_C*
	}

	namespace n_UMaterialExpressionDDX {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_AExponentialHeightFog {
		constexpr auto Component = 0x310; // UExponentialHeightFogComponent*
		constexpr auto bEnabled = 0x318; // char : 1
	}

	namespace n_UTransformMeshesTool {
		constexpr auto TransformProps = 0x98; // UTransformMeshesToolProperties*
		constexpr auto ActiveGizmos = 0xb0; // TArray<FTransformMeshesTarget>
	}

	namespace n_UDisplaceMeshCommonProperties {
		constexpr auto DisplacementType = 0x60; // EDisplaceMeshToolDisplaceType
		constexpr auto DisplaceIntensity = 0x64; // float
		constexpr auto RandomSeed = 0x68; // int32_t
		constexpr auto Subdivisions = 0x6c; // int32_t
		constexpr auto WeightMap = 0x70; // FName
		constexpr auto WeightMapsList = 0x78; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x88; // bool
		constexpr auto bDisableSizeWarning = 0x89; // bool
	}

	namespace n_ASGStructureAnimalTameCage {
		constexpr auto AnimalTameCageConfigs = 0xb98; // TArray<FAnimalTameCageConfig>
		constexpr auto BoxComponent = 0xba8; // UBoxComponent*
	}

	namespace n_UUI_ChatInputBox {
		constexpr auto TellTextBlock = 0x260; // UTextBlock*
		constexpr auto TellOtherHbox = 0x268; // UHorizontalBox*
		constexpr auto EscBtn = 0x270; // UButton*
		constexpr auto InputBox = 0x278; // UEditableTextBox*
		constexpr auto TellTextColor = 0x288; // FSlateColor
		constexpr auto MaxTellTextLength = 0x2b0; // int32_t
	}

	namespace n_UItemAuctionSellConfirmPanel {
		constexpr auto EditableTextBox_SellPrice = 0x2d8; // UEditableTextBox*
		constexpr auto EditableTextBox_SellCount = 0x2e0; // UEditableTextBox*
		constexpr auto TextBlock_Name = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_PriceRange = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_GuidePrice = 0x2f8; // UTextBlock*
		constexpr auto TextBlock_MaxCount = 0x300; // UTextBlock*
		constexpr auto TextBlock_TotalPrice = 0x308; // UTextBlock*
		constexpr auto TextBlock_CustodyFee = 0x310; // UTextBlock*
		constexpr auto TextBlock_CustodyFeeTitle = 0x318; // UTextBlock*
		constexpr auto TextBlock_TaxRate = 0x320; // UTextBlock*
		constexpr auto TextBlock_Tax = 0x328; // UTextBlock*
		constexpr auto TextBlock_Title = 0x330; // UTextBlock*
		constexpr auto Button_OK = 0x338; // UButton*
		constexpr auto Button_Order = 0x340; // UButton*
		constexpr auto Button_Cancel = 0x348; // UButton*
		constexpr auto Image_Icon = 0x350; // UImage*
		constexpr auto ComboBox_SellTime = 0x358; // UComboBoxString*
		constexpr auto GeneralIcon = 0x360; // TSoftObjectPtr<UTexture2D>
		constexpr auto HorseIcon = 0x388; // TSoftObjectPtr<UTexture2D>
		constexpr auto Root = 0x3b0; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UMaterialExpressionIf {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto AGreaterThanB = 0x68; // FExpressionInput
		constexpr auto AEqualsB = 0x7c; // FExpressionInput
		constexpr auto ALessThanB = 0x90; // FExpressionInput
		constexpr auto EqualsThreshold = 0xa4; // float
		constexpr auto ConstB = 0xa8; // float
		constexpr auto ConstAEqualsB = 0xac; // float
	}

	namespace n_UCullingField {
		constexpr auto Culling = 0xc0; // UFieldNodeBase*
		constexpr auto Field = 0xc8; // UFieldNodeBase*
		constexpr auto Operation = 0xd0; // EFieldCullingOperationType
	}

	namespace n_UMeshComponent {
		constexpr auto OverrideMaterials = 0x488; // TArray<UMaterialInterface*>
		constexpr auto bEnableMaterialParameterCaching = 0x4a8; // char : 1
	}

	namespace n_APlayerStart {
		constexpr auto PlayerStartTag = 0x338; // FName
	}

	namespace n_UAllianceRelationSlot {
		constexpr auto GuildImage = 0x2d8; // UImage*
		constexpr auto GuildNameText = 0x2e0; // UTextBlock*
	}

	namespace n_UMaterialExpressionMakeMaterialAttributes {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Metallic = 0x54; // FExpressionInput
		constexpr auto Specular = 0x68; // FExpressionInput
		constexpr auto Roughness = 0x7c; // FExpressionInput
		constexpr auto Anisotropy = 0x90; // FExpressionInput
		constexpr auto EmissiveColor = 0xa4; // FExpressionInput
		constexpr auto Opacity = 0xb8; // FExpressionInput
		constexpr auto OpacityMask = 0xcc; // FExpressionInput
		constexpr auto Normal = 0xe0; // FExpressionInput
		constexpr auto Tangent = 0xf4; // FExpressionInput
		constexpr auto WorldPositionOffset = 0x108; // FExpressionInput
		constexpr auto WorldDisplacement = 0x11c; // FExpressionInput
		constexpr auto TessellationMultiplier = 0x130; // FExpressionInput
		constexpr auto SubsurfaceColor = 0x144; // FExpressionInput
		constexpr auto ClearCoat = 0x158; // FExpressionInput
		constexpr auto ClearCoatRoughness = 0x16c; // FExpressionInput
		constexpr auto AmbientOcclusion = 0x180; // FExpressionInput
		constexpr auto Refraction = 0x194; // FExpressionInput
		constexpr auto CustomizedUVs = 0x1a8; // FExpressionInput [0x8]
		constexpr auto PixelDepthOffset = 0x248; // FExpressionInput
		constexpr auto ShadingModel = 0x25c; // FExpressionInput
	}

	namespace n_UUI_NN_CraftPerk {
		constexpr auto CPGType = 0x2d8; // ECPGType
		constexpr auto CPGInfo = 0x2e0; // FCPGFilterInfo [0x2]
		constexpr auto CPGFilterOptionInfo = 0x390; // FCPGFilters [0x2]
		constexpr auto SelectOptionType = 0x3b0; // int32_t
		constexpr auto CPGTypePanel = 0x3b8; // UHorizontalBox*
		constexpr auto ShowCPGTypePanelNum = 0x3c0; // int32_t
		constexpr auto OptionPanel = 0x3c8; // UHorizontalBox*
		constexpr auto CraftPerkGroupPanel = 0x3d0; // UCanvasPanel*
		constexpr auto CraftPerkGroupScrollBox = 0x3d8; // UScrollBox*
		constexpr auto OptionButtonList = 0x3e0; // TArray<UOptionButton*>
		constexpr auto CPGTypeButtonList = 0x3f0; // TArray<UOptionButton*>
		constexpr auto OptionButtonTemplate = 0x400; // UOptionButton*
		constexpr auto CraftPerkGroupSlotTemplate = 0x408; // UNN_CraftPerkGroupSlot*
		constexpr auto bIsGuildCraftPerkUI = 0x410; // char : 1
		constexpr auto SlotLength = 0x414; // float
		constexpr auto SlotWidth = 0x418; // float
		constexpr auto NextLineStartPosition = 0x41c; // FVector2D
		constexpr auto NextLineFromStartPositionDistance = 0x424; // FVector2D
		constexpr auto ReceiveLinePosition = 0x42c; // FVector2D
		constexpr auto LineWidth = 0x434; // float
		constexpr auto CraftPerkGroupLineTemplate = 0x438; // UNN_CraftPerkGroupLine*
		constexpr auto CraftPerkGroupCanvas = 0x440; // UCanvasPanel*
		constexpr auto bStartDrag = 0x448; // char : 1
		constexpr auto SearchEditableTextBlock = 0x450; // UEditableTextBox*
		constexpr auto SearchString = 0x458; // FString
		constexpr auto OnlySearchOneSlot = 0x468; // UNN_CraftPerkGroupSlot*
		constexpr auto bSearchSlot = 0x470; // char : 1
		constexpr auto LearnGroupSlot = 0x474; // TWeakObjectPtr<UNN_CraftPerkGroupSlot>
		constexpr auto CraftPanelTipsTemplate = 0x480; // UN_CraftPanelTips*
		constexpr auto DefaultToolTipsClass = 0x488; // USGToolTipWidget*
		constexpr auto CraftPerkItemTips = 0x490; // TWeakObjectPtr<USGToolTipWidget>
		constexpr auto CraftPerkCraftTips = 0x498; // TWeakObjectPtr<USGToolTipWidget>
		constexpr auto CapitalText = 0x4a0; // UTextBlock*
		constexpr auto CraftPerkPointText = 0x4a8; // UTextBlock*
	}

	namespace n_UVirtualTexture2D {
		constexpr auto Settings = 0x100; // FVirtualTextureBuildSettings
		constexpr auto bContinuousUpdate = 0x10c; // bool
		constexpr auto bSinglePhysicalSpace = 0x10d; // bool
	}

	namespace n_UAISense_Touch {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITouchEvent>
	}

	namespace n_ADatasmithSceneActor {
		constexpr auto Scene = 0x310; // UDatasmithScene*
		constexpr auto RelatedActors = 0x318; // TMap<FName, TSoftObjectPtr<AActor>>
	}

	namespace n_UAISenseEvent_Hearing {
		constexpr auto Event = 0x28; // FAINoiseEvent
	}

	namespace n_UPolyEditSetUVProperties {
		constexpr auto bShowMaterial = 0x60; // bool
	}

	namespace n_UConsoleSettings {
		constexpr auto MaxScrollbackSize = 0x28; // int32_t
		constexpr auto ManualAutoCompleteList = 0x30; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteMapPaths = 0x40; // TArray<FString>
		constexpr auto BackgroundOpacityPercentage = 0x50; // float
		constexpr auto bOrderTopToBottom = 0x54; // bool
		constexpr auto bDisplayHelpInAutoComplete = 0x55; // bool
		constexpr auto InputColor = 0x58; // FColor
		constexpr auto HistoryColor = 0x5c; // FColor
		constexpr auto AutoCompleteCommandColor = 0x60; // FColor
		constexpr auto AutoCompleteCVarColor = 0x64; // FColor
		constexpr auto AutoCompleteFadedColor = 0x68; // FColor
	}

	namespace n_UDrawPolygonToolSnapProperties {
		constexpr auto bEnableSnapping = 0x60; // bool
		constexpr auto bSnapToWorldGrid = 0x61; // bool
		constexpr auto bSnapToVertices = 0x62; // bool
		constexpr auto bSnapToEdges = 0x63; // bool
		constexpr auto bSnapToAngles = 0x64; // bool
		constexpr auto bSnapToLengths = 0x65; // bool
		constexpr auto SegmentLength = 0x68; // float
		constexpr auto bHitSceneObjects = 0x6c; // bool
		constexpr auto HitNormalOffset = 0x70; // float
	}

	namespace n_URadialVector {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
	}

	namespace n_ARadialForceActor {
		constexpr auto ForceComponent = 0x310; // URadialForceComponent*
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDiskLuminance {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_USoundNodeModulator {
		constexpr auto PitchMin = 0x48; // float
		constexpr auto PitchMax = 0x4c; // float
		constexpr auto VolumeMin = 0x50; // float
		constexpr auto VolumeMax = 0x54; // float
	}

	namespace n_UAbilityTask_WaitGameplayEffectStackChange {
		constexpr auto OnChange = 0x80; // FMulticastInlineDelegate
		constexpr auto InvalidHandle = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UInflateBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_USoundConcurrency {
		constexpr auto Concurrency = 0x28; // FSoundConcurrencySettings
	}

	namespace n_UNiagaraParameterCollection {
		constexpr auto Namespace = 0x28; // FName
		constexpr auto Parameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto SourceMaterialCollection = 0x40; // UMaterialParameterCollection*
		constexpr auto DefaultInstance = 0x48; // UNiagaraParameterCollectionInstance*
		constexpr auto CompileId = 0x50; // FGuid
	}

	namespace n_UWaterSplineMetadata {
		constexpr auto Depth = 0x28; // FInterpCurveFloat
		constexpr auto WaterVelocityScalar = 0x40; // FInterpCurveFloat
		constexpr auto RiverWidth = 0x58; // FInterpCurveFloat
		constexpr auto AudioIntensity = 0x70; // FInterpCurveFloat
		constexpr auto WaterVelocity = 0x88; // FInterpCurveVector
	}

	namespace n_UAISubsystem {
		constexpr auto AISystem = 0x30; // UAISystem*
	}

	namespace n_UItemAuctionPanel {
		constexpr auto ItemListVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto ItemNameVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto CanvasPanel_SearchItemName = 0x2e8; // UCanvasPanel*
		constexpr auto SearchEditableBox = 0x2f0; // UEditableTextBox*
		constexpr auto SearchButton = 0x2f8; // UButton*
		constexpr auto ComboBoxItemType = 0x300; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxItemSubType = 0x308; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxQuality = 0x310; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxLevel = 0x318; // UGuildAuthorityComboBox*
		constexpr auto TipsPanel = 0x320; // UCanvasPanel*
		constexpr auto InventorySlot = 0x328; // UN_InventorySlot*
		constexpr auto BuyButton = 0x330; // UButton*
		constexpr auto Button_Previous = 0x338; // UButton*
		constexpr auto Button_Next = 0x340; // UButton*
		constexpr auto TextBlock_CurrentPage = 0x348; // UTextBlock*
		constexpr auto EquipPanel = 0x350; // UN_EquipPanel*
		constexpr auto InventoryPanel = 0x358; // UN_InventoryPanel*
		constexpr auto ItemAuctionSlotClass = 0x360; // UItemAuctionSlot*
		constexpr auto ItemAuctionSearchNameSlotClass = 0x368; // UItemAuctionSearchNameSlot*
		constexpr auto MaxLevel = 0x370; // int32_t
		constexpr auto MaxPage = 0x374; // int32_t
		constexpr auto OnePageDataCount = 0x378; // int32_t
		constexpr auto ItemSlotSelected = 0x3d0; // TWeakObjectPtr<UItemAuctionSlot>
		constexpr auto ItemSeacrhNameSlotSelected = 0x3d8; // TWeakObjectPtr<UItemAuctionSearchNameSlot>
		constexpr auto RootUI = 0x3e0; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UBTDecorator_TagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
		constexpr auto bActivatesCooldown = 0x75; // bool
	}

	namespace n_UN_GeneralCampPanel {
		constexpr auto ParentUI = 0x260; // UUI_N_General*
		constexpr auto GeneralButton = 0x268; // UOptionButton*
		constexpr auto HorseButton = 0x270; // UOptionButton*
		constexpr auto WarTypePanel = 0x278; // UHorizontalBox*
		constexpr auto WorkTypePanel = 0x280; // UHorizontalBox*
		constexpr auto RestTypePanel = 0x288; // UHorizontalBox*
		constexpr auto RecruitLevelText = 0x290; // UTextBlock*
		constexpr auto WarTypeText = 0x298; // UTextBlock*
		constexpr auto RecruitAmountText = 0x2a0; // UTextBlock*
		constexpr auto GeneralCampSlotTemplate = 0x2a8; // UN_GeneralCampSlot*
		constexpr auto GeneralCampSlotList = 0x2b0; // TArray<UN_GeneralCampSlot*>
		constexpr auto FirstWarTypeSlot = 0x2c0; // UN_GeneralCampSlot*
		constexpr auto GeneralCampSlotMargin = 0x2c8; // FMargin
		constexpr auto DefaultShowNum = 0x2d8; // int32_t
		constexpr auto PageUp = 0x2e0; // UButton*
		constexpr auto PageDown = 0x2e8; // UButton*
		constexpr auto PageText = 0x2f0; // UTextBlock*
		constexpr auto CurrentRestPageIndex = 0x2f8; // int32_t
		constexpr auto RestTypeGeneralNum = 0x2fc; // int32_t
	}

	namespace n_USourceEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSourceEffectStereoDelaySettings
	}

	namespace n_UUI_MsgRecord {
		constexpr auto MsgRecordContents = 0x2d8; // TArray<FMsgRecordData>
		constexpr auto RTbMsgRecord = 0x300; // URichTextBlock*
		constexpr auto MsgRecordScrollBox = 0x308; // UScrollBox*
		constexpr auto LoadingCanvas = 0x310; // UCanvasPanel*
	}

	namespace n_UWBP_DLSSQualitySettingComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_53 = 0x370; // UCanvasPanel*
		constexpr auto SettingComboBox = 0x378; // UComboBoxString*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto Title = 0x388; // FText
	}

	namespace n_UAnimCompress_PerTrackCompression {
		constexpr auto MaxZeroingThreshold = 0x60; // float
		constexpr auto MaxPosDiffBitwise = 0x64; // float
		constexpr auto MaxAngleDiffBitwise = 0x68; // float
		constexpr auto MaxScaleDiffBitwise = 0x6c; // float
		constexpr auto AllowedRotationFormats = 0x70; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0x80; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedScaleFormats = 0x90; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xa0; // char : 1
		constexpr auto ResampledFramerate = 0xa4; // float
		constexpr auto MinKeysForResampling = 0xa8; // int32_t
		constexpr auto bUseAdaptiveError = 0xac; // char : 1
		constexpr auto bUseOverrideForEndEffectors = 0xac; // char : 1
		constexpr auto TrackHeightBias = 0xb0; // int32_t
		constexpr auto ParentingDivisor = 0xb4; // float
		constexpr auto ParentingDivisorExponent = 0xb8; // float
		constexpr auto bUseAdaptiveError2 = 0xbc; // char : 1
		constexpr auto RotationErrorSourceRatio = 0xc0; // float
		constexpr auto TranslationErrorSourceRatio = 0xc4; // float
		constexpr auto ScaleErrorSourceRatio = 0xc8; // float
		constexpr auto MaxErrorPerTrackRatio = 0xcc; // float
		constexpr auto PerturbationProbeSize = 0xd0; // float
	}

	namespace n_URuntimeVirtualTexture {
		constexpr auto TileCount = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // int32_t
		constexpr auto TileBorderSize = 0x30; // int32_t
		constexpr auto MaterialType = 0x34; // ERuntimeVirtualTextureMaterialType
		constexpr auto bCompressTextures = 0x35; // bool
		constexpr auto bClearTextures = 0x36; // bool
		constexpr auto bSinglePhysicalSpace = 0x37; // bool
		constexpr auto bPrivateSpace = 0x38; // bool
		constexpr auto bAdaptive = 0x39; // bool
		constexpr auto bContinuousUpdate = 0x3a; // bool
		constexpr auto RemoveLowMips = 0x3c; // int32_t
		constexpr auto LODGroup = 0x40; // TextureGroup
		constexpr auto Size = 0x44; // int32_t
		constexpr auto StreamingTexture = 0x48; // URuntimeVirtualTextureStreamingProxy*
	}

	namespace n_UNiagaraSystem {
		constexpr auto bDumpDebugSystemInfo = 0x30; // bool
		constexpr auto bDumpDebugEmitterInfo = 0x31; // bool
		constexpr auto bRequireCurrentFrameData = 0x32; // bool
		constexpr auto bFixedBounds = 0x34; // char : 1
		constexpr auto EffectType = 0x38; // UNiagaraEffectType*
		constexpr auto bOverrideScalabilitySettings = 0x40; // bool
		constexpr auto ScalabilityOverrides = 0x48; // TArray<FNiagaraSystemScalabilityOverride>
		constexpr auto SystemScalabilityOverrides = 0x58; // FNiagaraSystemScalabilityOverrides
		constexpr auto EmitterHandles = 0x68; // TArray<FNiagaraEmitterHandle>
		constexpr auto ParameterCollectionOverrides = 0x78; // TArray<UNiagaraParameterCollectionInstance*>
		constexpr auto SystemSpawnScript = 0x88; // UNiagaraScript*
		constexpr auto SystemUpdateScript = 0x90; // UNiagaraScript*
		constexpr auto SystemCompiledData = 0xa8; // FNiagaraSystemCompiledData
		constexpr auto ExposedParameters = 0x2c0; // FNiagaraUserRedirectionParameterStore
		constexpr auto FixedBounds = 0x388; // FBox
		constexpr auto bAutoDeactivate = 0x3a4; // bool
		constexpr auto WarmupTime = 0x3a8; // float
		constexpr auto WarmupTickCount = 0x3ac; // int32_t
		constexpr auto WarmupTickDelta = 0x3b0; // float
		constexpr auto bHasSystemScriptDIsWithPerInstanceData = 0x3b4; // bool
		constexpr auto UserDINamesReadInSystemScripts = 0x3b8; // TArray<FName>
	}

	namespace n_UOceanGenerator {
		constexpr auto CollisionBoxes = 0x28; // TArray<UOceanBoxCollisionComponent*>
		constexpr auto CollisionHullSets = 0x38; // TArray<UOceanCollisionComponent*>
	}

	namespace n_UAchievementRewardItem {
		constexpr auto TipsClass = 0x260; // UN_ItemTips*
		constexpr auto BindItem = 0x268; // USGItem*
		constexpr auto ImgIcon = 0x270; // UImage*
		constexpr auto TbAmount = 0x278; // UTextBlock*
		constexpr auto BindRootUI = 0x280; // USGUI*
	}

	namespace n_UParticleModuleLifetime {
		constexpr auto LifeTime = 0x30; // FRawDistributionFloat
	}

	namespace n_UTattooListView {
		constexpr auto PartsIndex = 0x2f0; // int32_t
	}

	namespace n_UBTService_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UN_RemoteFunctionPanel {
		constexpr auto RemoteFunctionSlotTemplate = 0x260; // UN_RemoteFunctionSlot*
		constexpr auto ItemQualityText = 0x268; // TArray<FText>
		constexpr auto NameText = 0x278; // UTextBlock*
		constexpr auto LevelText = 0x280; // UTextBlock*
		constexpr auto ImgThumbnail = 0x288; // UImage*
		constexpr auto HPProgressCanvas = 0x290; // UCanvasPanel*
		constexpr auto HPText = 0x298; // UTextBlock*
		constexpr auto HPProgressBar = 0x2a0; // UProgressBar*
		constexpr auto FunctionSlot = 0x2a8; // UN_ItemFunctionSlot*
		constexpr auto FaceliftSlot = 0x2b0; // UN_ItemFaceliftSlot*
		constexpr auto FunctionVertical = 0x2b8; // UVerticalBox*
		constexpr auto QualityComboBox = 0x2c0; // UGuildAuthorityComboBox*
		constexpr auto TbTips = 0x2c8; // UTextBlock*
		constexpr auto FaceliftPanel = 0x2d0; // UCanvasPanel*
		constexpr auto BtnFacelift = 0x2d8; // UButton*
		constexpr auto TbFaceliftWarning = 0x2e0; // UTextBlock*
		constexpr auto SelectQualityType = 0x2e8; // EItemQuality
		constexpr auto FunctionSlotList = 0x2f0; // UN_RemoteFunctionSlot*
		constexpr auto BindItem = 0x2f8; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventory = 0x300; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindStructureFunctionCraft = 0x308; // TWeakObjectPtr<ASGStructureFunctionCraft>
		constexpr auto BindStructureFunctionFacelift = 0x310; // TWeakObjectPtr<ASGStructureFunctionFacelift>
		constexpr auto RootUI = 0x318; // TWeakObjectPtr<USGUI>
	}

	namespace n_UTitleItem {
		constexpr auto NoTitleBackgroundTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoTitleColor = 0x288; // FSlateColor
		constexpr auto NoTitleFontInfo = 0x2b0; // FSlateFontInfo
		constexpr auto NoTitleShadowOffset = 0x308; // FVector2D
		constexpr auto NoTitleShadowColor = 0x310; // FLinearColor
		constexpr auto ImgBg = 0x320; // UImage*
		constexpr auto TbTitle = 0x328; // UTextBlock*
		constexpr auto BtnBg = 0x330; // UButton*
	}

	namespace n_UUI_VehiclePerk {
		constexpr auto PerRowCount = 0x2d8; // int32_t
		constexpr auto VehiclePerkSlotTemplate = 0x2e0; // UVehiclePerkSlot*
		constexpr auto ModifyVehiclePerkTemplate = 0x2e8; // UUI_ModifyVehiclePerk*
		constexpr auto ForbidPlacePerkPanel = 0x2f0; // UUniformGridPanel*
		constexpr auto AllowPlacePerkPanel = 0x2f8; // UUniformGridPanel*
		constexpr auto SpecialPerkPanel = 0x300; // UUniformGridPanel*
		constexpr auto RecessivePerkPanel = 0x308; // UUniformGridPanel*
		constexpr auto BindHorseCharacter = 0x310; // TWeakObjectPtr<ASG_HorseCharacter>
	}

	namespace n_AMatineeActorCameraAnim {
		constexpr auto CameraAnim = 0x3c8; // UCameraAnim*
	}

	namespace n_UNiagaraRibbonRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto MaterialUserParamBinding = 0x88; // FNiagaraUserParameterBinding
		constexpr auto FacingMode = 0xa8; // ENiagaraRibbonFacingMode
		constexpr auto UV0Settings = 0xac; // FNiagaraRibbonUVSettings
		constexpr auto UV1Settings = 0xd0; // FNiagaraRibbonUVSettings
		constexpr auto DrawDirection = 0xf4; // ENiagaraRibbonDrawDirection
		constexpr auto CurveTension = 0xf8; // float
		constexpr auto TessellationMode = 0xfc; // ENiagaraRibbonTessellationMode
		constexpr auto TessellationFactor = 0x100; // int32_t
		constexpr auto bUseConstantFactor = 0x104; // bool
		constexpr auto TessellationAngle = 0x108; // float
		constexpr auto bScreenSpaceTessellation = 0x10c; // bool
		constexpr auto PositionBinding = 0x110; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x168; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x1c0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x218; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonTwistBinding = 0x270; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonWidthBinding = 0x2c8; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonFacingBinding = 0x320; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonIdBinding = 0x378; // FNiagaraVariableAttributeBinding
		constexpr auto RibbonLinkOrderBinding = 0x3d0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x428; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x480; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x4d8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x530; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x588; // FNiagaraVariableAttributeBinding
		constexpr auto U0OverrideBinding = 0x5e0; // FNiagaraVariableAttributeBinding
		constexpr auto V0RangeOverrideBinding = 0x638; // FNiagaraVariableAttributeBinding
		constexpr auto U1OverrideBinding = 0x690; // FNiagaraVariableAttributeBinding
		constexpr auto V1RangeOverrideBinding = 0x6e8; // FNiagaraVariableAttributeBinding
	}

	namespace n_UFlattenBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UUVProjectionOperatorFactory {
		constexpr auto Tool = 0x30; // UUVProjectionTool*
	}

	namespace n_UCityFlagSlot {
		constexpr auto CityNameText = 0x2d8; // UTextBlock*
		constexpr auto OwnerGuildPanel = 0x2e0; // UCanvasPanel*
		constexpr auto OwnerGuildImage = 0x2e8; // UImage*
	}

	namespace n_UTaxRevenuePanel {
		constexpr auto TaxSlotTemplate = 0x2d8; // UTaxSlot*
		constexpr auto TestTaxData = 0x2e0; // char : 1
		constexpr auto TestTaxInfoArray = 0x2e8; // TArray<FOfficalTaxInfo>
		constexpr auto TaxSlotBGImageDisable = 0x2f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto UniformGridPanelSelf = 0x320; // UUniformGridPanel*
		constexpr auto UniformGridPanelGuild = 0x328; // UUniformGridPanel*
		constexpr auto ButtonSelfLeft = 0x330; // UButton*
		constexpr auto ButtonSelfRight = 0x338; // UButton*
		constexpr auto ButtonGuildLeft = 0x340; // UButton*
		constexpr auto ButtonGuildRight = 0x348; // UButton*
		constexpr auto TextNum_Self = 0x350; // UTextBlock*
		constexpr auto TextNum_Guild = 0x358; // UTextBlock*
		constexpr auto ButtonClose = 0x360; // UButton*
		constexpr auto Button_OK = 0x368; // UButton*
		constexpr auto TopTitle = 0x370; // UTextBlock*
		constexpr auto Border_Price = 0x378; // UBorder*
		constexpr auto TextBlock_Price = 0x380; // UTextBlock*
	}

	namespace n_UNewQuestAnimationNotifyWidget {
		constexpr auto NewQuestAnim = 0x278; // UWidgetAnimation*
		constexpr auto NewQuestNotifyText = 0x280; // UTextBlock*
	}

	namespace n_AWaterBodyRiver {
		constexpr auto RiverGenerator = 0xee0; // URiverGenerator*
		constexpr auto LakeTransitionMaterial = 0xee8; // UMaterialInterface*
		constexpr auto LakeTransitionMID = 0xef0; // UMaterialInstanceDynamic*
		constexpr auto OceanTransitionMaterial = 0xef8; // UMaterialInterface*
		constexpr auto OceanTransitionMID = 0xf00; // UMaterialInstanceDynamic*
	}

	namespace n_UMagicLeapARPinSaveGame {
		constexpr auto PinnedID = 0x28; // FGuid
		constexpr auto ComponentWorldTransform = 0x40; // FTransform
		constexpr auto PinTransform = 0x70; // FTransform
		constexpr auto bShouldPinActor = 0xa0; // bool
	}

	namespace n_UChildActorComponent {
		constexpr auto ChildActorClass = 0x208; // AActor*
		constexpr auto ChildActor = 0x210; // AActor*
		constexpr auto ChildActorTemplate = 0x218; // AActor*
	}

	namespace n_UWmfMediaSettings {
		constexpr auto AllowNonStandardCodecs = 0x28; // bool
		constexpr auto LowLatency = 0x29; // bool
		constexpr auto NativeAudioOut = 0x2a; // bool
		constexpr auto HardwareAcceleratedVideoDecoding = 0x2b; // bool
	}

	namespace n_UUI_ChatExpandBtn {
		constexpr auto NormalIconHover = 0x3f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ActiveIconHover = 0x420; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UInterpTrackFloatProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_USpectatorBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto bRestrictCrossConsole = 0x38; // bool
		constexpr auto Reservations = 0x40; // TArray<FSpectatorReservation>
	}

	namespace n_UInputComponent {
		constexpr auto CachedKeyToActionInfo = 0x130; // TArray<FCachedKeyToActionInfo>
	}

	namespace n_UPhysicsThrusterComponent {
		constexpr auto ThrustStrength = 0x208; // float
	}

	namespace n_UConditionEditableSlot {
		constexpr auto ParentUI = 0x260; // UUserWidget*
		constexpr auto BindCharacter = 0x268; // TWeakObjectPtr<ASGCharacter>
		constexpr auto ConditionImage = 0x270; // UImage*
		constexpr auto LevelProgress = 0x278; // UProgressBar*
		constexpr auto LevelText = 0x280; // UTextBlock*
		constexpr auto AddLevelText = 0x288; // UTextBlock*
		constexpr auto AddButton = 0x290; // UButton*
		constexpr auto UpgradeButton = 0x298; // UButton*
		constexpr auto MasteryImageNames = 0x2a0; // TArray<FName>
		constexpr auto MasteryList = 0x2b0; // TArray<UImage*>
		constexpr auto LockMastery = 0x2c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnLockMastery = 0x2e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto CurrentLevelAmount = 0x310; // int32_t
		constexpr auto SlotType = 0x314; // ESPType
		constexpr auto Index = 0x318; // int32_t
		constexpr auto SkillType = 0x31c; // ESkillType
		constexpr auto MaxAmount = 0x320; // float
		constexpr auto STRImageTexture2D = 0x328; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto DEXImageTexture2D = 0x338; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto STAImageTexture2D = 0x348; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto INTImageTexture2D = 0x358; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto CHAImageTexture2D = 0x368; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto OneHandedWeaponsText = 0x378; // FText
		constexpr auto ShieldsText = 0x390; // FText
		constexpr auto TowHandedWeaponsText = 0x3a8; // FText
		constexpr auto PolearmsText = 0x3c0; // FText
		constexpr auto HeavyArmorsText = 0x3d8; // FText
		constexpr auto ThrowingText = 0x3f0; // FText
		constexpr auto ArcheryText = 0x408; // FText
		constexpr auto CrossbowsText = 0x420; // FText
		constexpr auto RidingText = 0x438; // FText
		constexpr auto LightArmorsText = 0x450; // FText
		constexpr auto PhysiqueText = 0x468; // FText
		constexpr auto MiningText = 0x480; // FText
		constexpr auto LumberingText = 0x498; // FText
		constexpr auto HuntingText = 0x4b0; // FText
		constexpr auto PlantingText = 0x4c8; // FText
		constexpr auto HandMakingText = 0x4e0; // FText
		constexpr auto SiegeWorkingText = 0x4f8; // FText
		constexpr auto BuildingText = 0x510; // FText
		constexpr auto ArmorerText = 0x528; // FText
		constexpr auto HerbText = 0x540; // FText
		constexpr auto LeaderShipText = 0x558; // FText
		constexpr auto TrainingText = 0x570; // FText
		constexpr auto RecruitText = 0x588; // FText
		constexpr auto TamingText = 0x5a0; // FText
		constexpr auto RenownText = 0x5b8; // FText
		constexpr auto SkillExp = 0x5d0; // UTextBlock*
	}

	namespace n_UUI_UpDatePasswordDialog {
		constexpr auto BtnAccept = 0x2e8; // UButton*
		constexpr auto CancelButton = 0x2f0; // UButton*
		constexpr auto CheckBoxShowPassword = 0x2f8; // UCheckBox*
		constexpr auto EtbOldPassword = 0x300; // UEditableTextBox*
		constexpr auto EtbPassword = 0x308; // UEditableTextBox*
		constexpr auto EtbConfirmPassword = 0x310; // UEditableTextBox*
		constexpr auto TbTitle = 0x318; // UTextBlock*
		constexpr auto TbContent = 0x320; // UTextBlock*
		constexpr auto TbError = 0x328; // UTextBlock*
	}

	namespace n_UNavCollision {
		constexpr auto CylinderCollision = 0x80; // TArray<FNavCollisionCylinder>
		constexpr auto BoxCollision = 0x90; // TArray<FNavCollisionBox>
		constexpr auto AreaClass = 0xa0; // UNavArea*
		constexpr auto bGatherConvexGeometry = 0xa8; // char : 1
		constexpr auto bCreateOnClient = 0xa8; // char : 1
	}

	namespace n_UWBP_SwitchSystemSetting_C {
		constexpr auto bCraftPerkSwitch = 0x290; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bGuildEventSwitch = 0x298; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bGuildSwitch = 0x2a0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bHorseEventSwitch = 0x2a8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bMailSwitch = 0x2b0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bQuestSwitch = 0x2b8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto TitleImage = 0x2c0; // UImage*
	}

	namespace n_USubUVAnimation {
		constexpr auto SubUVTexture = 0x28; // UTexture2D*
		constexpr auto SubImages_Horizontal = 0x30; // int32_t
		constexpr auto SubImages_Vertical = 0x34; // int32_t
		constexpr auto BoundingMode = 0x38; // ESubUVBoundingVertexCount
		constexpr auto OpacitySourceMode = 0x39; // EOpacitySourceMode
		constexpr auto AlphaThreshold = 0x3c; // float
	}

	namespace n_UEnvQueryGenerator_SimpleGrid {
		constexpr auto GridSize = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto GenerateAround = 0xf0; // UEnvQueryContext*
	}

	namespace n_UWBP_SettingRadioButtonView_C {
		constexpr auto RpbKeySetting = 0x2f0; // UWBP_RadioSettingButton_C*
		constexpr auto RpbSystemSetting = 0x2f8; // UWBP_RadioSettingButton_C*
	}

	namespace n_UUI_RideTaming {
		constexpr auto LeftMouseTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto RightMouseTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto LeftMouseTipText = 0x328; // FText
		constexpr auto RightMouseTipText = 0x340; // FText
		constexpr auto RideTameCDTipText = 0x358; // FText
		constexpr auto OverMaxTameNumTipText = 0x370; // FText
		constexpr auto OverMaxWarNumTipText = 0x388; // FText
		constexpr auto OrdinaryTameScoreText = 0x3a0; // FText
		constexpr auto OrdinaryTameScoreTexture = 0x3b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto GoodTameScoreText = 0x3e0; // FText
		constexpr auto GoodTameScoreTexture = 0x3f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto GoodFontOutlineColor = 0x420; // FLinearColor
		constexpr auto GoodFontSize = 0x430; // int32_t
		constexpr auto PrettyTameScoreText = 0x438; // FText
		constexpr auto PrettyTameScoreTexture = 0x450; // TSoftObjectPtr<UTexture2D>
		constexpr auto PrettyFontOutlineColor = 0x478; // FLinearColor
		constexpr auto PrettyFontSize = 0x488; // int32_t
		constexpr auto ExcellentTameScoreText = 0x490; // FText
		constexpr auto ExcellentTameScoreTexture = 0x4a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ExcellentFontOutlineColor = 0x4d0; // FLinearColor
		constexpr auto ExcellentFontSize = 0x4e0; // int32_t
		constexpr auto NormalFillImage = 0x4e8; // FSlateBrush
		constexpr auto StruggleFillImage = 0x570; // FSlateBrush
		constexpr auto TameScoreMinPercent = 0x5f8; // float
		constexpr auto TameScoreMaxPercent = 0x5fc; // float
		constexpr auto ChangeSorceInterval = 0x600; // float
		constexpr auto EndTameScoreText = 0x608; // UTextBlock*
		constexpr auto EndTameScoreValue = 0x610; // UTextBlock*
		constexpr auto EndTameScoreBorder = 0x618; // UBorder*
		constexpr auto KeyTipHorizontalBox = 0x620; // UHorizontalBox*
		constexpr auto KeyTipIcon = 0x628; // UImage*
		constexpr auto KeyTipRichTextBlock = 0x630; // URichTextBlock*
		constexpr auto RunawayProgressBar = 0x638; // UProgressBar*
		constexpr auto RunawayDebugInfoText = 0x640; // UTextBlock*
		constexpr auto TameScoreText = 0x648; // UTextBlock*
		constexpr auto TameScoreProgressBar = 0x650; // UProgressBar*
		constexpr auto TameScoreSlider = 0x658; // USlider*
		constexpr auto AngerSizeBox = 0x660; // USizeBox*
		constexpr auto TriggerStruggleImg = 0x668; // UImage*
		constexpr auto AngerProgressBar = 0x670; // UProgressBar*
		constexpr auto TameValueProgressBar = 0x678; // UProgressBar*
		constexpr auto TipsText = 0x680; // UTextBlock*
		constexpr auto GoodText = 0x688; // UTextBlock*
		constexpr auto PrettyText = 0x690; // UTextBlock*
		constexpr auto ExcellentText = 0x698; // UTextBlock*
		constexpr auto MouseClickAnim = 0x6a0; // UWidgetAnimation*
		constexpr auto WaitStrugglingAnim = 0x6a8; // UWidgetAnimation*
		constexpr auto ScoreChangeAnim = 0x6b0; // UWidgetAnimation*
	}

	namespace n_UUI_ServerParamString {
		constexpr auto TbParamName = 0x260; // UTextBlock*
		constexpr auto TbValue = 0x268; // UEditableTextBox*
		constexpr auto ButtonSet = 0x270; // UButton*
		constexpr auto StrParamName = 0x278; // FString
		constexpr auto StrCommand = 0x288; // FString
	}

	namespace n_UTattooLayerRadio {
		constexpr auto TbTitle = 0x550; // UTextBlock*
		constexpr auto BtnBg = 0x558; // UButton*
		constexpr auto BtnDelete = 0x560; // UButton*
	}

	namespace n_UUINoviceProtectionPanel {
		constexpr auto Button_OK = 0x2d8; // UButton*
		constexpr auto Button_Cancel = 0x2e0; // UButton*
	}

	namespace n_UNiagaraDataInterfaceVector2DCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
	}

	namespace n_UARGetCandidateObjectAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UHapticFeedbackEffect_Buffer {
		constexpr auto Amplitudes = 0x28; // TArray<char>
		constexpr auto SampleRate = 0x38; // int32_t
	}

	namespace n_UProceduralRoundedRectangleToolProperties {
		constexpr auto CornerRadius = 0x80; // float
		constexpr auto CornerSlices = 0x84; // int32_t
	}

	namespace n_UHuangLiMenuSlot {
		constexpr auto BorderOut = 0x270; // UBorder*
		constexpr auto MenuText = 0x278; // UTextBlock*
		constexpr auto BorderActiveTexture = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderNormalTexture = 0x2a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderHoverTexture = 0x2d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderClickTexture = 0x2f8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UGuildKPIItemSettingPanel {
		constexpr auto ItemListVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto SaveButton = 0x2e0; // UButton*
		constexpr auto CloseButton = 0x2e8; // UButton*
		constexpr auto NeedNumTextBox = 0x2f0; // UEditableTextBox*
		constexpr auto SearchTextBox = 0x2f8; // UEditableTextBox*
		constexpr auto GuildKPIItemSlotClass = 0x300; // UGuildKPIItemSlot*
		constexpr auto SlotPadding = 0x308; // FMargin
	}

	namespace n_USGBuff {
		constexpr auto BuffID = 0x28; // FName
		constexpr auto OwnerBuffComponent = 0x30; // TWeakObjectPtr<USGBuffComponent>
		constexpr auto BuffAddType = 0x38; // EBuffAddType
		constexpr auto RespawnRemove = 0x39; // bool
		constexpr auto bBeginPlayRemove = 0x3a; // bool
		constexpr auto bResetBattleRemove = 0x3b; // bool
		constexpr auto bLifeTimeInDead = 0x3c; // bool
		constexpr auto LifeTime = 0x40; // float
		constexpr auto LifeOverDateTimeTick = 0x48; // int64_t
		constexpr auto LifeTimeMax = 0x50; // float
		constexpr auto LifeTimeInterval = 0x54; // float
		constexpr auto NeedTick = 0x58; // bool
		constexpr auto NeedCheckOnwerIsNovice = 0x59; // bool
		constexpr auto TickTimeInterval = 0x5c; // float
		constexpr auto bIsInfinite = 0x60; // bool
		constexpr auto BuffIcon = 0x68; // TSoftObjectPtr<UTexture2D>
		constexpr auto DisplayIcon = 0x90; // char : 1
		constexpr auto NotDisplayIconInGameUI = 0x90; // char : 1
		constexpr auto DisplayDuration = 0x90; // char : 1
		constexpr auto DisplayPriority = 0x91; // char
		constexpr auto BuffName = 0x98; // FText
		constexpr auto Description = 0xb0; // FText
		constexpr auto Param1 = 0xc8; // FString
		constexpr auto Param2 = 0xd8; // FString
		constexpr auto Param3 = 0xe8; // FString
		constexpr auto Param4 = 0xf8; // FString
		constexpr auto Param5 = 0x108; // FString
		constexpr auto BuffDamageType = 0x118; // EBuffDamageType
		constexpr auto DamageInterval = 0x11c; // float
		constexpr auto DamageValue = 0x120; // float
		constexpr auto MakeDamageOnceTypeInfo = 0x124; // FMakeDamageOnceTypeInfo
		constexpr auto bAddBuffOverrideDamage = 0x130; // char : 1
		constexpr auto BuffPostProcess = 0x138; // UMaterialInstance*
		constexpr auto Level = 0x140; // int32_t
		constexpr auto ModifyData = 0x148; // TArray<FModifyData>
		constexpr auto WoundValue = 0x158; // TArray<float>
		constexpr auto ReplaceBuff = 0x168; // TArray<FLearnPerkToReplaceBuff>
		constexpr auto BuffParticle = 0x178; // UParticleSystem*
		constexpr auto ParticlePoint = 0x180; // FName
		constexpr auto bBurnEffectMaterial = 0x188; // char : 1
		constexpr auto bBloodEffectMaterial = 0x188; // char : 1
		constexpr auto RemoveBuffs = 0x190; // TArray<USGBuff*>
		constexpr auto ImmunityBuffs = 0x1a0; // TArray<USGBuff*>
		constexpr auto BuffCreater = 0x1b0; // TWeakObjectPtr<AActor>
		constexpr auto BuffCreaterCharacter = 0x1b8; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto HitLocation = 0x1c0; // FVector
		constexpr auto FromType = 0x1cc; // EBuffFormType
		constexpr auto BuffLevel = 0x1d0; // int32_t
		constexpr auto BuffType = 0x1d4; // EBuffType
		constexpr auto bSignFlag = 0x1d5; // char : 1
		constexpr auto ModifyWoundValues = 0x290; // float [0x3]
	}

	namespace n_UMaterialExpressionLandscapeGrassOutput {
		constexpr auto GrassTypes = 0x40; // TArray<FGrassInput>
	}

	namespace n_UDeviceProfileManager {
		constexpr auto Profiles = 0x28; // TArray<UObject*>
	}

	namespace n_USmoothFillBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UMaterialExpressionCurveAtlasRowParameter {
		constexpr auto Curve = 0x60; // UCurveLinearColor*
		constexpr auto Atlas = 0x68; // UCurveLinearColorAtlas*
		constexpr auto InputTime = 0x70; // FExpressionInput
	}

	namespace n_ASGStructureTurretAnimalWatch {
		constexpr auto PutAnimalInMaxNum = 0x14d8; // int32_t
		constexpr auto AnimalWatchLifeTime = 0x14dc; // int32_t
		constexpr auto AnimalTemplate = 0x14e0; // ASG_AnimalsCharacter*
		constexpr auto SearchInterval = 0x14e8; // float
		constexpr auto SearchRadius = 0x14ec; // float
		constexpr auto bIsDebugSearch = 0x14f0; // char : 1
		constexpr auto AnimalWatchEntries = 0x14f8; // TArray<FAnimalWatchDataEntry>
		constexpr auto NoTargetDeadTime = 0x1508; // float
	}

	namespace n_UAnimationSharingSetup {
		constexpr auto SkeletonSetups = 0x28; // TArray<FPerSkeletonAnimationSharingSetup>
		constexpr auto ScalabilitySettings = 0x38; // FAnimationSharingScalability
	}

	namespace n_UUI_GuildTech {
		constexpr auto UpgradeGuildTechCanvas = 0x4b0; // UCanvasPanel*
		constexpr auto NeedGuildActiveText = 0x4b8; // UTextBlock*
		constexpr auto NeedGuildSilverText = 0x4c0; // UTextBlock*
		constexpr auto UseSelfCopperCheckBox = 0x4c8; // UCheckBox*
		constexpr auto GuildInfoCanvas = 0x4d0; // UCanvasPanel*
		constexpr auto GuildLevelText = 0x4d8; // UTextBlock*
		constexpr auto GuildActivePointText = 0x4e0; // UTextBlock*
		constexpr auto GuildSilverText = 0x4e8; // UTextBlock*
		constexpr auto ConfirmUpgradeButton = 0x4f0; // UButton*
		constexpr auto CancelUpgradeButton = 0x4f8; // UButton*
		constexpr auto CloseButton = 0x500; // UButton*
		constexpr auto EnoughColor = 0x508; // FLinearColor
		constexpr auto NotEnoughColor = 0x518; // FLinearColor
		constexpr auto ConfirmUsePersonalUIOverride = 0x528; // UUI_GenericConfirmationDialog*
	}

	namespace n_UEditableGameplayTagQuery {
		constexpr auto UserDescription = 0x28; // FString
		constexpr auto RootExpression = 0x48; // UEditableGameplayTagQueryExpression*
		constexpr auto TagQueryExportText_Helper = 0x50; // FGameplayTagQuery
	}

	namespace n_ASGStructureTurretFlameThrower {
		constexpr auto FlameTraceDelta = 0x14d8; // float
		constexpr auto FlameFireAmmoReduceDelta = 0x14dc; // float
		constexpr auto CreateFlameTrapDelta = 0x14e0; // float
		constexpr auto FlameSphere = 0x14f0; // float
		constexpr auto FlameDistance = 0x14f4; // float
		constexpr auto FlameFireStartSocket = 0x14f8; // FName
		constexpr auto FlameThrowerTimerHandle = 0x1500; // FTimerHandle
		constexpr auto bDebugTrace = 0x1508; // char : 1
		constexpr auto DamageBase = 0x150c; // float
		constexpr auto DamageType = 0x1510; // USGDamageType*
		constexpr auto FlameAttackDamageType = 0x1518; // EDamageType
		constexpr auto FlameTrapTemplate = 0x1520; // ASGEmptyGameTrap*
		constexpr auto TrapDecal = 0x1528; // UMaterialInterface*
		constexpr auto TrapScale = 0x1530; // FVector
		constexpr auto DecalSize = 0x153c; // FVector
		constexpr auto DecalRotationOffset = 0x1548; // FRotator
		constexpr auto DecalLocationOffset = 0x1554; // FVector
		constexpr auto BoxSize = 0x1560; // FVector
		constexpr auto BoxLocationOffset = 0x156c; // FVector
		constexpr auto BoxRotationOffset = 0x1578; // FRotator
		constexpr auto bEnableBoxOverlap = 0x1584; // char : 1
		constexpr auto TrapLifeTime = 0x1588; // float
		constexpr auto bCreateTrapParticle = 0x158c; // char : 1
		constexpr auto TrapParticle = 0x1590; // UParticleSystem*
		constexpr auto OverlapBuff = 0x1598; // USGBuff*
		constexpr auto BrokenExplosionEffect = 0x15a0; // UParticleSystem*
		constexpr auto BrokenExplosionSoundID = 0x15a8; // FName
		constexpr auto EffectScale = 0x15b0; // FVector
		constexpr auto ExlposionLocationOffset = 0x15bc; // FVector
		constexpr auto MaxDamage = 0x15c8; // float
		constexpr auto MinDamage = 0x15cc; // float
		constexpr auto MaxCollectionDamage = 0x15d0; // float
		constexpr auto MinCollectionDamage = 0x15d4; // float
		constexpr auto InnerRadius = 0x15d8; // float
		constexpr auto OuterRadius = 0x15dc; // float
		constexpr auto DamageFalloff = 0x15e0; // float
		constexpr auto BrokenExplosionDamageType = 0x15e8; // USGDamageType*
		constexpr auto BrokenExplosionAttackDamageType = 0x15f0; // EDamageType
		constexpr auto CountingHandle = 0x15f8; // FTimerHandle
		constexpr auto FireTime = 0x1600; // float
		constexpr auto FireLeftTime = 0x1604; // float
	}

	namespace n_UFieldSystemComponent {
		constexpr auto FieldSystem = 0x488; // UFieldSystem*
		constexpr auto SupportedSolvers = 0x4a0; // TArray<TSoftObjectPtr<AChaosSolverActor>>
	}

	namespace n_UNiagaraSpriteRendererProperties {
		constexpr auto Material = 0x80; // UMaterialInterface*
		constexpr auto SourceMode = 0x88; // ENiagaraRendererSourceDataMode
		constexpr auto MaterialUserParamBinding = 0x90; // FNiagaraUserParameterBinding
		constexpr auto Alignment = 0xb0; // ENiagaraSpriteAlignment
		constexpr auto FacingMode = 0xb1; // ENiagaraSpriteFacingMode
		constexpr auto PivotInUVSpace = 0xb4; // FVector2D
		constexpr auto SortMode = 0xbc; // ENiagaraSortMode
		constexpr auto SubImageSize = 0xc0; // FVector2D
		constexpr auto bSubImageBlend = 0xc8; // char : 1
		constexpr auto bRemoveHMDRollInVR = 0xc8; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0xc8; // char : 1
		constexpr auto bGpuLowLatencyTranslucency = 0xc8; // char : 1
		constexpr auto MinFacingCameraBlendDistance = 0xcc; // float
		constexpr auto MaxFacingCameraBlendDistance = 0xd0; // float
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteRotationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteSizeBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteFacingBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto SpriteAlignmentBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto UVScaleBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x5b8; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x610; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x668; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x6c0; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialParameterBindings = 0x718; // TArray<FNiagaraMaterialAttributeBinding>
	}

	namespace n_UServerStateTips {
		constexpr auto StateText = 0x288; // FText [0x3]
		constexpr auto TbState = 0x2d0; // UTextBlock*
		constexpr auto TbPlayerNum = 0x2d8; // UTextBlock*
	}

	namespace n_UStreamingSettings {
		constexpr auto AsyncLoadingThreadEnabled = 0x38; // char : 1
		constexpr auto WarnIfTimeLimitExceeded = 0x38; // char : 1
		constexpr auto TimeLimitExceededMultiplier = 0x3c; // float
		constexpr auto TimeLimitExceededMinTime = 0x40; // float
		constexpr auto MinBulkDataSizeForAsyncLoading = 0x44; // int32_t
		constexpr auto UseBackgroundLevelStreaming = 0x48; // char : 1
		constexpr auto AsyncLoadingUseFullTimeLimit = 0x48; // char : 1
		constexpr auto AsyncLoadingTimeLimit = 0x4c; // float
		constexpr auto PriorityAsyncLoadingExtraTime = 0x50; // float
		constexpr auto LevelStreamingActorsUpdateTimeLimit = 0x54; // float
		constexpr auto PriorityLevelStreamingActorsUpdateExtraTime = 0x58; // float
		constexpr auto LevelStreamingComponentsRegistrationGranularity = 0x5c; // int32_t
		constexpr auto LevelStreamingUnregisterComponentsTimeLimit = 0x60; // float
		constexpr auto LevelStreamingComponentsUnregistrationGranularity = 0x64; // int32_t
		constexpr auto FlushStreamingOnExit = 0x68; // char : 1
		constexpr auto EventDrivenLoaderEnabled = 0x68; // char : 1
	}

	namespace n_UEditNormalsToolProperties {
		constexpr auto bRecomputeNormals = 0x60; // bool
		constexpr auto NormalCalculationMethod = 0x61; // ENormalCalculationMethod
		constexpr auto bFixInconsistentNormals = 0x62; // bool
		constexpr auto bInvertNormals = 0x63; // bool
		constexpr auto SplitNormalMethod = 0x64; // ESplitNormalMethod
		constexpr auto SharpEdgeAngleThreshold = 0x68; // float
		constexpr auto bAllowSharpVertices = 0x6c; // bool
	}

	namespace n_UCompressedImageSequenceProtocol {
		constexpr auto CompressionQuality = 0xd8; // int32_t
	}

	namespace n_UUI_InteractiveMenu {
		constexpr auto MyInteractiveEntries = 0x2d8; // TArray<FInteractiveEntry>
		constexpr auto RootInteractiveEntries = 0x2e8; // TArray<FInteractiveEntry>
		constexpr auto SubInteractiveEntries = 0x2f8; // TArray<FInteractiveEntry>
		constexpr auto SelectedCategory = 0x308; // FInteractiveEntry
		constexpr auto SelectedItem = 0x350; // FInteractiveEntry
		constexpr auto bPickingItem = 0x398; // char : 1
		constexpr auto InteractiveActor = 0x3a0; // AActor*
		constexpr auto InteractiveComponent = 0x3a8; // USceneComponent*
		constexpr auto ForceTime = 0x3b0; // double
		constexpr auto DelayTime = 0x3b8; // double
		constexpr auto bOverDelayTime = 0x3c0; // char : 1
		constexpr auto DelayIconWidget = 0x3c8; // UUI_InteractiveRadialIcon*
		constexpr auto bPlayerShow = 0x3d0; // char : 1
		constexpr auto InteractiveText = 0x3d8; // UUI_InteractiveRadialIcon*
		constexpr auto ShowCategoryTime = 0x3e0; // float
		constexpr auto ReturnMenuText = 0x3e8; // FText
		constexpr auto ExcDelayTime = 0x400; // float
		constexpr auto CategoryRing = 0x408; // UUI_InteractiveRadialMenu*
		constexpr auto SubmenuRing = 0x410; // UUI_InteractiveRadialMenu*
		constexpr auto InteractiveTextString = 0x418; // UTextBlock*
		constexpr auto InteractiveNameText = 0x420; // UTextBlock*
		constexpr auto ShowFirst = 0x428; // UWidgetAnimation*
	}

	namespace n_ASGStructureFish {
		constexpr auto DropInterval = 0xd68; // float
	}

	namespace n_UOnlineEngineInterfaceImpl {
		constexpr auto VoiceSubsystemNameOverride = 0x28; // FName
	}

	namespace n_UDemoNetDriver {
		constexpr auto RollbackNetStartupActors = 0x858; // TMap<FString, FRollbackNetStartupActorInfo>
		constexpr auto CheckpointSaveMaxMSPerFrame = 0xa04; // float
		constexpr auto MulticastRecordOptions = 0xa28; // TArray<FMulticastRecordOptions>
		constexpr auto bIsLocalReplay = 0xa38; // bool
		constexpr auto SpectatorControllers = 0xa40; // TArray<APlayerController*>
	}

	namespace n_UScrollBar {
		constexpr auto WidgetStyle = 0x108; // FScrollBarStyle
		constexpr auto Style = 0x5d8; // USlateWidgetStyleAsset*
		constexpr auto bAlwaysShowScrollbar = 0x5e0; // bool
		constexpr auto bAlwaysShowScrollbarTrack = 0x5e1; // bool
		constexpr auto Orientation = 0x5e2; // EOrientation
		constexpr auto Thickness = 0x5e4; // FVector2D
		constexpr auto Padding = 0x5ec; // FMargin
	}

	namespace n_USGStructureCheckVolumeData {
		constexpr auto OnlyAllowStructureType = 0x28; // TArray<ASGStructure*>
		constexpr auto OnlyPreventStructureType = 0x38; // TArray<ASGStructure*>
	}

	namespace n_UMaterialExpressionLandscapePhysicalMaterialOutput {
		constexpr auto Inputs = 0x40; // TArray<FPhysicalMaterialInput>
	}

	namespace n_UParticleModuleLocationEmitterDirect {
		constexpr auto EmitterName = 0x30; // FName
	}

	namespace n_UParticleModuleRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UDatasmithSpotLightComponentTemplate {
		constexpr auto InnerConeAngle = 0x30; // float
		constexpr auto OuterConeAngle = 0x34; // float
	}

	namespace n_UPlatformMediaSource {
		constexpr auto MediaSource = 0x80; // UMediaSource*
	}

	namespace n_UWBP_AudioSystemSetting_C {
		constexpr auto BgmSoundVolume = 0x290; // UWBP_AudioSettingSliderItem_C*
		constexpr auto EffectSoundVolume = 0x298; // UWBP_AudioSettingSliderItem_C*
		constexpr auto MainSoundVolume = 0x2a0; // UWBP_AudioSettingSliderItem_C*
		constexpr auto TitleImage = 0x2a8; // UImage*
	}

	namespace n_UMeshSimplificationSettings {
		constexpr auto MeshReductionModuleName = 0x38; // FName
	}

	namespace n_UParticleSystemComponent {
		constexpr auto Template = 0x488; // UParticleSystem*
		constexpr auto EmitterMaterials = 0x490; // TArray<UMaterialInterface*>
		constexpr auto SkelMeshComponents = 0x4a0; // TArray<USkeletalMeshComponent*>
		constexpr auto bResetOnDetach = 0x4b1; // char : 1
		constexpr auto bUpdateOnDedicatedServer = 0x4b1; // char : 1
		constexpr auto bAllowRecycling = 0x4b1; // char : 1
		constexpr auto bAutoManageAttachment = 0x4b1; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x4b1; // char : 1
		constexpr auto bWarmingUp = 0x4b2; // char : 1
		constexpr auto bOverrideLODMethod = 0x4b2; // char : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x4b2; // char : 1
		constexpr auto LODMethod = 0x4bd; // ParticleSystemLODMethod
		constexpr auto RequiredSignificance = 0x4be; // EParticleSignificanceLevel
		constexpr auto InstanceParameters = 0x4c0; // TArray<FParticleSysParam>
		constexpr auto OnParticleSpawn = 0x4d0; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x4e0; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x500; // FMulticastInlineDelegate
		constexpr auto bOldPositionValid = 0x510; // bool
		constexpr auto OldPosition = 0x514; // FVector
		constexpr auto PartSysVelocity = 0x520; // FVector
		constexpr auto WarmupTime = 0x52c; // float
		constexpr auto WarmupTickRate = 0x530; // float
		constexpr auto SecondsBeforeInactive = 0x538; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x540; // float
		constexpr auto ReplayClips = 0x568; // TArray<UParticleSystemReplay*>
		constexpr auto CustomTimeDilation = 0x580; // float
		constexpr auto AutoAttachParent = 0x5d8; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x5e0; // FName
		constexpr auto AutoAttachLocationRule = 0x5e8; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5e9; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5ea; // EAttachmentRule
		constexpr auto OnSystemFinished = 0x618; // FMulticastInlineDelegate
	}

	namespace n_ULevelStreaming {
		constexpr auto WorldAsset = 0x28; // TSoftObjectPtr<UWorld>
		constexpr auto PackageNameToLoad = 0x50; // FName
		constexpr auto LODPackageNames = 0x58; // TArray<FName>
		constexpr auto LevelTransform = 0x80; // FTransform
		constexpr auto LevelLODIndex = 0xb0; // int32_t
		constexpr auto StreamingPriority = 0xb4; // int32_t
		constexpr auto bShouldBeVisible = 0xba; // char : 1
		constexpr auto bShouldBeLoaded = 0xba; // char : 1
		constexpr auto bLocked = 0xba; // char : 1
		constexpr auto bIsStatic = 0xba; // char : 1
		constexpr auto bShouldBlockOnLoad = 0xba; // char : 1
		constexpr auto bShouldBlockOnUnload = 0xbb; // char : 1
		constexpr auto bDisableDistanceStreaming = 0xbb; // char : 1
		constexpr auto bDrawOnLevelStatusMap = 0xbb; // char : 1
		constexpr auto LevelColor = 0xbc; // FLinearColor
		constexpr auto EditorStreamingVolumes = 0xd0; // TArray<ALevelStreamingVolume*>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe0; // float
		constexpr auto OnLevelLoaded = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnLevelUnloaded = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnLevelShown = 0x108; // FMulticastInlineDelegate
		constexpr auto OnLevelHidden = 0x118; // FMulticastInlineDelegate
		constexpr auto LoadedLevel = 0x128; // ULevel*
		constexpr auto PendingUnloadLevel = 0x130; // ULevel*
	}

	namespace n_URewardCondition_Bool {
		constexpr auto Value = 0x50; // bool
	}

	namespace n_USGGameData {
		constexpr auto SPMul = 0x28; // float
		constexpr auto PlayerStartLocalizationTable = 0x30; // UDataTable*
		constexpr auto AllItemTable = 0x88; // UDataTable*
		constexpr auto AllBuffTable = 0x140; // UDataTable*
		constexpr auto BaoZangPositionTable = 0x1e8; // UDataTable*
		constexpr auto FishBaitTable = 0x2e0; // UDataTable*
		constexpr auto BattleGamePlayDataObject = 0x338; // USGBattleGamePlayData*
		constexpr auto AllNpc = 0x348; // USGGameDataAllNpc*
		constexpr auto AllGeneralNpc = 0x358; // USGGameDataAllGeneralNpc*
		constexpr auto AllHorse = 0x368; // USGGameDataAllHorse*
		constexpr auto AllPlayerPerkTable = 0x378; // UDataTable*
		constexpr auto AllVehiclePerkTable = 0x380; // UDataTable*
		constexpr auto AllGeneralPerkTable = 0x388; // UDataTable*
		constexpr auto AllCraftPerkGroupTable = 0x390; // UDataTable*
		constexpr auto GuildCraftPerkGroupTable = 0x398; // UDataTable*
		constexpr auto DrawArtofWarTableTest = 0x3a0; // UDataTable*
		constexpr auto AllCropTable = 0x638; // UDataTable*
		constexpr auto AllSaltCropTable = 0x640; // UDataTable*
		constexpr auto AllQuest = 0x788; // USGGameDataAllQuest*
		constexpr auto JueWei = 0x798; // USGGameDataJueWei*
		constexpr auto GuildClass = 0x7a8; // USGGameDataGuild*
		constexpr auto AllianceClass = 0x7b8; // USGGameDataAlliance*
		constexpr auto AllLegendGeneralsTable = 0x7c8; // UDataTable*
		constexpr auto GameDataActivityClass = 0x820; // USGGameDataActivity*
		constexpr auto AddSkillExpExtraAddInfo = 0x830; // TMap<ESkillAddExpAction, FAddSkillExtraAdd>
		constexpr auto CityGuanAiRelatedInfos = 0x880; // TMap<int32_t, FGuanAiIDArray>
		constexpr auto BigMapJunDataTable = 0x8d0; // UDataTable*
		constexpr auto BigMapCityDataTable = 0x8d8; // UDataTable*
		constexpr auto BigMapXianChengDataTable = 0x8e0; // UDataTable*
		constexpr auto BigMapGuanAiDataTable = 0x8e8; // UDataTable*
		constexpr auto GuanAiActivityUITable = 0x8f0; // UDataTable*
		constexpr auto BattleGobalParam = 0x8f8; // FBattleGlobalParam
		constexpr auto ServerDistrictIdText = 0x900; // FText [0x5]
		constexpr auto StatisticsEvent = 0x978; // USGGameDataStatisticsEvent*
		constexpr auto ConditionReward = 0x988; // USGGameDataConditionReward* [0x2]
		constexpr auto RegionRespawnPointDataTable = 0x9a8; // UDataTable*
		constexpr auto WeatherControlLocalizationDataTable = 0x9b0; // UDataTable*
		constexpr auto DroppedItemContainerTemplate = 0x9b8; // ASGStructureItemContainer*
		constexpr auto CharacterDeathItemContainerTemplate = 0x9c0; // ASGStructureItemContainer*
		constexpr auto FullWalletItemTemplate = 0x9c8; // USGItem*
		constexpr auto AddLifeCountItemTemplate = 0x9d0; // TArray<USGItem*>
		constexpr auto AccRebornItemTemplate = 0x9e0; // TArray<USGItem*>
		constexpr auto AddAnimalLifeCountItemTemplate = 0x9f0; // TArray<USGItem*>
		constexpr auto AccAnimalRebornItemTemplate = 0xa00; // TArray<USGItem*>
		constexpr auto AppearanceDataTable = 0xa10; // UDataTable*
		constexpr auto LoadingScreenDataTable = 0xa18; // UDataTable*
		constexpr auto PhyscisAssetMapInfo = 0xa20; // TMap<UPhysicsAsset*, UPhysicsAsset*>
		constexpr auto WoundDataTable = 0xa70; // UDataTable*
		constexpr auto TaiShouKillTileDT = 0xa78; // UDataTable*
		constexpr auto WorldRankDT = 0xa80; // UDataTable*
		constexpr auto StaticMiniMapPOIDataTable = 0xa98; // UDataTable*
		constexpr auto GivePerkMiniMapPOIDataDataTable = 0xaa0; // UDataTable*
		constexpr auto MiniMapMarkDataTable = 0xaa8; // UDataTable*
		constexpr auto LocalMarkLimitNum = 0xab0; // int32_t
		constexpr auto GuildMarkLimitNum = 0xab4; // int32_t
		constexpr auto StaticMarkVisualRange = 0xab8; // float
		constexpr auto TitleDataTable = 0xac0; // UDataTable*
		constexpr auto AchievementTypeDataTable = 0xac8; // UDataTable*
		constexpr auto SkillUIInfoDataTable = 0xad0; // UDataTable*
		constexpr auto DropWrapperTable = 0xad8; // UDataTable*
		constexpr auto DropRuleTable = 0xae0; // UDataTable*
		constexpr auto DropFixTable = 0xae8; // UDataTable*
		constexpr auto FilterWordTable = 0xbe0; // UDataTable*
		constexpr auto CNDedicateFilterWordTable = 0xbe8; // UDataTable*
		constexpr auto FoulLanguageTable = 0xbf0; // UDataTable*
		constexpr auto FilterWords = 0xbf8; // TArray<FString>
		constexpr auto CNDedicateFilterWords = 0xc08; // TArray<FString>
		constexpr auto FoulLanguageWords = 0xc18; // TArray<FString>
		constexpr auto ReplaceMaskList = 0xc28; // TArray<FString>
		constexpr auto ScalabilityDetailsDataTable = 0xc38; // UDataTable*
		constexpr auto PreviewCharacterClass = 0xc40; // ASGCharacter*
		constexpr auto StructureCheckVolumeLocalizationTable = 0xc48; // UDataTable*
		constexpr auto CreateStructurePreventReasons = 0xca0; // TArray<FText>
		constexpr auto CreateStructureDatas = 0xcb0; // USGGameDataCreateStructureData*
		constexpr auto CannotCreateStructureSoundID = 0xcc0; // FName
		constexpr auto OccupyStructureData = 0xcc8; // USGGameDataOccupyStructureData*
		constexpr auto OccupyStructurePrestigeDataTable = 0xcd8; // UCurveTable*
		constexpr auto OverFlowPrestigeValue = 0xce0; // int32_t
		constexpr auto MinPrestigeValue = 0xce4; // int32_t
		constexpr auto MaxPrestigeValue = 0xce8; // int32_t
		constexpr auto InitProtectTime = 0xcec; // int32_t
		constexpr auto OreDensityData = 0xcf0; // TArray<FOreInfoData>
		constexpr auto LevelUpParticle = 0xd00; // UParticleSystem*
		constexpr auto DeathInventoryClassOnDeposit = 0xd08; // ASGStructureItemContainer*
		constexpr auto EnvironmentVolumePostProcessData = 0xd10; // FEnvironmentVolumePostProcessData [0x4]
		constexpr auto EVBuff = 0xd90; // USGBuff* [0x4]
		constexpr auto BuffPostProcess = 0xdb0; // TArray<UMaterialInstance*>
		constexpr auto StatePostProcess = 0xdc0; // TArray<UMaterialInstance*>
		constexpr auto StatusStateTip = 0xdd0; // TArray<FCharacterStatusStateTip>
		constexpr auto WaterBuff = 0xde0; // USGBuff*
		constexpr auto AchievementBuff = 0xde8; // USGBuff*
		constexpr auto AchievementDamageMultiplyDataTable = 0xdf0; // UDataTable*
		constexpr auto SGCanBeDamageBuff = 0xdf8; // USGBuff*
		constexpr auto CrossServerItem = 0xe00; // USGItem*
		constexpr auto FormationData = 0xe08; // UDataTable*
		constexpr auto TeamAttitudeData = 0xe10; // UDataTable*
		constexpr auto BuffKillTexture = 0xe18; // TMap<FName, FSoftObjectPath>
		constexpr auto ProjectileLineMesh = 0xe68; // UStaticMesh*
		constexpr auto MaterialHardnessDT = 0xe70; // UDataTable*
		constexpr auto ShopDataModuleClass = 0xe78; // USGShopData*
		constexpr auto ShopDataModulePtr = 0xe80; // USGShopData*
		constexpr auto ItemPackageTemplate = 0xe88; // USGItem*
		constexpr auto NewsRecordCD = 0xe90; // float [0x11]
		constexpr auto SeasonPerLevelRewardDT = 0xed8; // UDataTable*
		constexpr auto SeasonLevelExpCurve = 0xee0; // UCurveTable*
		constexpr auto SeasonAllRewardsDT = 0xee8; // UDataTable*
		constexpr auto SGSeasonClass = 0xef0; // USGSeason*
		constexpr auto SeasonDefineDT = 0xf48; // UDataTable*
		constexpr auto StructureMiniMapPOIStyleTable = 0xfb0; // UDataTable*
		constexpr auto AnimalFleeingIcon = 0xfb8; // UTexture2D*
		constexpr auto AnimalFeedingIcon = 0xfc0; // UTexture2D*
		constexpr auto AnimalStarvingIcon = 0xfc8; // UTexture2D*
		constexpr auto AnimalPregnancyIcon = 0xfd0; // UTexture2D*
		constexpr auto AnimalToolTipWidget = 0xfd8; // USGToolTipsAnimal*
		constexpr auto GeneralToolTipWidget = 0xfe0; // USGToolTipsGeneral*
		constexpr auto AnimalRealNameDataTable = 0xfe8; // UDataTable*
		constexpr auto AnimalQualityTypeString = 0x1000; // TMap<EAnimalQualityType, FText>
		constexpr auto AnimalPerkTypeText = 0x1050; // TMap<EVehiclePerkType, FText>
		constexpr auto AnimalPerkCorrectionTypeText = 0x10a0; // TMap<EAttributeCorrectionType, FText>
		constexpr auto AnimalAgeTypeText = 0x10f0; // TMap<EAnimalAgeType, FText>
		constexpr auto OfficialJobInfos = 0x1140; // TMap<int32_t, FOfficialJobInfo>
		constexpr auto Job_Di_DiKuaiMinCount = 0x1190; // int32_t
		constexpr auto Job_Wang_DiKuaiMinCount = 0x1194; // int32_t
		constexpr auto Job_ZhouMu_DiKuaiMinCount = 0x1198; // int32_t
		constexpr auto Job_CiShi_DiKuaiMinCount = 0x119c; // int32_t
		constexpr auto ExpRatioTable = 0x11a0; // UCurveTable*
		constexpr auto SharedExpRatio = 0x11a8; // float
		constexpr auto SharedExpRadius = 0x11ac; // float
		constexpr auto SkillExpRatioTable = 0x11b0; // UCurveTable*
		constexpr auto AnimalsAgeModifyBoneData = 0x11b8; // TArray<FAnimalsModifyBoneData>
		constexpr auto AnimalsPregnancyModifyBoneData = 0x11c8; // TArray<FAnimalsModifyBoneData>
		constexpr auto AnimalFurRelationDataTable = 0x11d8; // UDataTable*
		constexpr auto ServerLevelDataConfig = 0x11f0; // USGServerLevelData*
		constexpr auto ClothMaskDataClass = 0x1200; // USGGameDataClothMask*
		constexpr auto FoliageTypeExtraInfosTemplate = 0x1210; // UFoliageTypeExtraInfos*
		constexpr auto NPCTalkDatas = 0x1220; // USGGameDataNPCTalkData*
		constexpr auto InteractiveImages = 0x1230; // USGGameDataInteractiveImageData*
		constexpr auto GiveOneDayWagesAddLoyalty = 0x1240; // float
		constexpr auto NoWagesReduceLoyaltyOneDay = 0x1244; // float
		constexpr auto OneDayMaxGiveWages = 0x1248; // int32_t
		constexpr auto QualityWagesCopperMulti = 0x124c; // float [0x6]
		constexpr auto SpecialWagesCopperMulti = 0x1264; // float [0x4]
		constexpr auto OneDayWageGiveCopperTable = 0x1278; // UCurveTable*
		constexpr auto HuKouItemAwards = 0x1280; // FHuKouItemAward [0x2]
		constexpr auto TaiShouBattleOpenTimeInfoArray = 0x12b0; // TArray<FTaishouBattleOpenTimeInfo>
		constexpr auto PlayerShowDatas = 0x12c0; // USGGameDataPlayerShowData*
		constexpr auto VehicleFavoriteFoodDataTable = 0x12d8; // UDataTable*
		constexpr auto RideTameRequiredEquipItems = 0x12f0; // TMap<EAnimalQualityType, FRideTameRequireItemData>
		constexpr auto AuctionShopItemTable = 0x1390; // UDataTable*
		constexpr auto AuctionShopTaxRate = 0x1398; // float
		constexpr auto AuctionShopCustodyFee = 0x139c; // float
		constexpr auto AuctionShopItemGuidePriceMin = 0x13a0; // float
		constexpr auto AuctionShopItemGuidePriceMax = 0x13a4; // float
		constexpr auto AuctionShopWeaponGuidePriceMin = 0x13a8; // float
		constexpr auto AuctionShopWeaponGuidePriceMax = 0x13ac; // float
		constexpr auto AuctionShopEquipmentGuidePriceMin = 0x13b0; // float
		constexpr auto AuctionShopEquipmentGuidePriceMax = 0x13b4; // float
		constexpr auto AuctionShopHorseGuidePriceMin = 0x13b8; // float
		constexpr auto AuctionShopHorseGuidePriceMax = 0x13bc; // float
		constexpr auto AuctionShopGeneralGuidePriceMin = 0x13c0; // float
		constexpr auto AuctionShopGeneralGuidePriceMax = 0x13c4; // float
		constexpr auto AuctionShopLowestPrice = 0x13c8; // int32_t
		constexpr auto AuctionShopLockTime = 0x13cc; // int32_t
		constexpr auto AuctionShopClosedStartTimeHour = 0x13d0; // int32_t
		constexpr auto AuctionShopClosedTimes = 0x13d4; // int32_t
		constexpr auto AllGuildEventConfig = 0x13d8; // UGuildEventConfig*
		constexpr auto SGTrafficGoodsClass = 0x13e0; // USGTrafficGoods*
		constexpr auto SGTrafficGoodsPtr = 0x13e8; // USGTrafficGoods*
		constexpr auto TrafficGoodsItemTemplate = 0x13f0; // USGItem*
		constexpr auto PlayerWoundConfig = 0x1400; // FPlayerWoundConfig
		constexpr auto StrengthenPropertyTable = 0x1438; // TMap<FString, UDataTable*>
		constexpr auto SGNotifyConfigClass = 0x14d8; // USGNotifyText*
		constexpr auto BattleEventDamageIconArray = 0x14e8; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto BattleEventHorseDamageIconIndex = 0x14f8; // int32_t
		constexpr auto BattleEventInstrumentDamageIconIndex = 0x14fc; // int32_t
		constexpr auto ItemTransportPriceTable = 0x1500; // UDataTable*
		constexpr auto DBLogSwitchCfgDT = 0x1510; // UDataTable*
		constexpr auto TaxGoldPrice = 0x15b8; // int32_t
		constexpr auto TaxGoldItemTemplate = 0x15c0; // USGItem*
		constexpr auto TaxResponseNotifyTexts = 0x15c8; // FText [0xe]
		constexpr auto TaxJobTexts = 0x1718; // FText [0x3]
		constexpr auto OfficalTaxConfig = 0x1760; // FOfficalTaxConfig [0x3]
		constexpr auto DLCAppIDList = 0x17a8; // TArray<int32_t>
		constexpr auto CapitalGoldIcon = 0x17b8; // UTexture2D*
		constexpr auto CapitalSilverIcon = 0x17c0; // UTexture2D*
		constexpr auto CapitalCopperIcon = 0x17c8; // UTexture2D*
		constexpr auto CommaText = 0x17d0; // FText
		constexpr auto AppearanceKitDataTable = 0x17e8; // UDataTable*
		constexpr auto FashionKitDataTable = 0x1840; // UDataTable*
		constexpr auto WorshipConfig = 0x1898; // TArray<FWorshipConfig>
		constexpr auto FlagMaterialParams = 0x18a8; // FName [0x5]
		constexpr auto FlagAlphaParamName = 0x18d0; // FName
		constexpr auto FlagImageParamName = 0x18d8; // FName
		constexpr auto FlagImageMaterialInst = 0x18e0; // UMaterialInstance*
		constexpr auto NoviceBuff = 0x18e8; // USGBuff*
		constexpr auto AnimalSpeciesDataTable = 0x18f0; // UDataTable*
		constexpr auto ServerCheckInventoryOperationDistance = 0x1908; // float
		constexpr auto TranslateKeyText = 0x1910; // TMap<FKey, FText>
	}

	namespace n_ASGStructurePackageStation {
		constexpr auto UsePackageStationCoolTime = 0x1010; // int32_t
		constexpr auto UseMenuTime = 0x1014; // int32_t
	}

	namespace n_UGetGeoLocationAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_CheckDesiredLocation {
		constexpr auto FinishedDistance = 0xd0; // float
		constexpr auto bUpdateKeepAwayDesiredActor = 0xd4; // char : 1
		constexpr auto bUpdateKeepInPlaceLoc = 0xd4; // char : 1
		constexpr auto bUpdateDesiredLocOnActor = 0xd4; // char : 1
		constexpr auto bUpdateDesiredLocOnFormation = 0xd4; // char : 1
	}

	namespace n_UGuildBeInviteSlot {
		constexpr auto AllianceNameText = 0x2d8; // UTextBlock*
		constexpr auto AllianceOwnerNameText = 0x2e0; // UTextBlock*
		constexpr auto InviteInfoText = 0x2e8; // UTextBlock*
		constexpr auto AgreeDataButton = 0x2f0; // UDataButton*
		constexpr auto RejectDataButton = 0x2f8; // UDataButton*
	}

	namespace n_UPaperTileMap {
		constexpr auto MapWidth = 0x28; // int32_t
		constexpr auto MapHeight = 0x2c; // int32_t
		constexpr auto TileWidth = 0x30; // int32_t
		constexpr auto TileHeight = 0x34; // int32_t
		constexpr auto PixelsPerUnrealUnit = 0x38; // float
		constexpr auto SeparationPerTileX = 0x3c; // float
		constexpr auto SeparationPerTileY = 0x40; // float
		constexpr auto SeparationPerLayer = 0x44; // float
		constexpr auto SelectedTileSet = 0x48; // TSoftObjectPtr<UPaperTileSet>
		constexpr auto Material = 0x70; // UMaterialInterface*
		constexpr auto TileLayers = 0x78; // TArray<UPaperTileLayer*>
		constexpr auto CollisionThickness = 0x88; // float
		constexpr auto SpriteCollisionDomain = 0x8c; // ESpriteCollisionMode
		constexpr auto ProjectionMode = 0x8d; // ETileMapProjectionMode
		constexpr auto HexSideLength = 0x90; // int32_t
		constexpr auto BodySetup = 0x98; // UBodySetup*
		constexpr auto LayerNameIndex = 0xa0; // int32_t
	}

	namespace n_UNPCSoundData {
		constexpr auto PatrolSound = 0x88; // FName
		constexpr auto AggroSound = 0x90; // FName
		constexpr auto FleeSound = 0x98; // FName
		constexpr auto KillPlayerOrGeneralSound = 0xa0; // FName
		constexpr auto StunSound = 0xa8; // FName
		constexpr auto WeaponEffectSound = 0xb0; // TArray<FName>
		constexpr auto ResponseSound = 0xc0; // TMap<EGeneralShortCutSlotType, FName>
		constexpr auto StartRescuePlayerSound = 0x110; // FName
		constexpr auto ReliveSound = 0x118; // FName
	}

	namespace n_ASGStructureLandBase {
		constexpr auto CropLandOperateComponent = 0x1010; // UStaticMeshComponent*
		constexpr auto CanPlantCrops = 0x1018; // TArray<ASGStructure*>
		constexpr auto CanPlantCropsTexts = 0x1028; // FText
		constexpr auto bWildCropLand = 0x1040; // char : 1
		constexpr auto CropLandGrowthMultiplier = 0x1044; // float
		constexpr auto MaxCropWater = 0x1048; // float
		constexpr auto CropWater = 0x104c; // float
		constexpr auto WaterUpdateInterval = 0x1050; // float
		constexpr auto AutoUseWaterRatio = 0x1054; // float
		constexpr auto WaterItemClass = 0x1058; // USGItem*
		constexpr auto WeatherSupportWaterValue = 0x1060; // float
		constexpr auto ContainerSupportWaterValue = 0x1064; // float
		constexpr auto SeedItemClass = 0x1068; // USGItem*
		constexpr auto NearbyWaterStructureTemplate = 0x1070; // ASGStructureItemContainer*
		constexpr auto NearbyWaterStructureRange = 0x1078; // float
		constexpr auto LinkedPerkStructure = 0x1080; // ASGStructure*
		constexpr auto bWildCropLandHasOwner = 0x1088; // char : 1
	}

	namespace n_UUI_N_AllFunction {
		constexpr auto OrderType = 0x2d8; // TArray<EUIFunctionSlotType>
		constexpr auto CurrentActiveSlot = 0x2e8; // TWeakObjectPtr<UN_FunctionSlot>
		constexpr auto FunctionsPanel = 0x2f0; // UHorizontalBox*
		constexpr auto FunctionslotTemplate = 0x2f8; // UN_FunctionSlot*
		constexpr auto FunctionSlotList = 0x300; // TArray<UN_FunctionSlot*>
		constexpr auto CloseButton = 0x310; // UButton*
		constexpr auto AllFunctionImage = 0x318; // UImage*
		constexpr auto AllFunctionText = 0x320; // UTextBlock*
		constexpr auto ActiveTexture2D = 0x328; // TSoftObjectPtr<UTexture2D> [0x13]
		constexpr auto ActiveText = 0x620; // FText [0x13]
	}

	namespace n_ULuminRuntimeSettings {
		constexpr auto PackageName = 0x28; // FString
		constexpr auto ApplicationDisplayName = 0x38; // FString
		constexpr auto FrameTimingHint = 0x48; // ELuminFrameTimingHint
		constexpr auto bProtectedContent = 0x49; // bool
		constexpr auto bManualCallToAppReady = 0x4a; // bool
		constexpr auto bUseMobileRendering = 0x4b; // bool
		constexpr auto bUseVulkan = 0x4c; // bool
		constexpr auto Certificate = 0x50; // FFilePath
		constexpr auto IconModelPath = 0x60; // FDirectoryPath
		constexpr auto IconPortalPath = 0x70; // FDirectoryPath
		constexpr auto LocalizedIconInfos = 0x80; // FLocalizedIconInfos
		constexpr auto VersionCode = 0x90; // int32_t
		constexpr auto MinimumAPILevel = 0x94; // int32_t
		constexpr auto AppPrivileges = 0x98; // TArray<ELuminPrivilege>
		constexpr auto ExtraComponentSubElements = 0xa8; // TArray<FLuminComponentSubElement>
		constexpr auto ExtraComponentElements = 0xb8; // TArray<FLuminComponentElement>
		constexpr auto SpatializationPlugin = 0xc8; // FString
		constexpr auto ReverbPlugin = 0xd8; // FString
		constexpr auto OcclusionPlugin = 0xe8; // FString
		constexpr auto SoundCueCookQualityIndex = 0xf8; // int32_t
		constexpr auto bRemoveDebugInfo = 0xfc; // bool
		constexpr auto VulkanValidationLayerLibs = 0x100; // FDirectoryPath
		constexpr auto bFrameVignette = 0x110; // bool
		constexpr auto LocalizedAppNames = 0x118; // TArray<FLocalizedAppName>
	}

	namespace n_UUI_GenericConfirmationDialog {
		constexpr auto BindGenericConfirmationParams = 0x2e8; // FGenericConfirmationParam
		constexpr auto AcceptButton = 0x368; // UButton*
		constexpr auto CancelButton = 0x370; // UButton*
		constexpr auto CancelButton2 = 0x378; // UButton*
		constexpr auto TitleTextBlock = 0x380; // UTextBlock*
		constexpr auto TimerTextBlock = 0x388; // UTextBlock*
		constexpr auto MessageTextBlock = 0x390; // URichTextBlock*
		constexpr auto AcceptButtonTextBlock = 0x398; // UTextBlock*
		constexpr auto CancelButtonTextBlock = 0x3a0; // UTextBlock*
		constexpr auto AllBg = 0x3a8; // UImage*
		constexpr auto CancelButtonPanel = 0x3b0; // UCanvasPanel*
		constexpr auto ItemCheckPanel = 0x3b8; // UCanvasPanel*
		constexpr auto ItemGrid = 0x3c0; // UUniformGridPanel*
		constexpr auto CheckBoxSelected = 0x3c8; // UCheckBox*
		constexpr auto CheckBoxSelectedTextBlock = 0x3d0; // URichTextBlock*
		constexpr auto MaxShowItemAmount = 0x3e0; // int32_t
		constexpr auto CurRowCounts = 0x3e4; // int32_t
		constexpr auto CheckItemTemplate = 0x3e8; // UGenericConfirmationCheckItemSlot*
		constexpr auto CheckItemSlotList = 0x3f0; // TArray<UGenericConfirmationCheckItemSlot*>
	}

	namespace n_USafeZone {
		constexpr auto PadLeft = 0x120; // bool
		constexpr auto PadRight = 0x121; // bool
		constexpr auto PadTop = 0x122; // bool
		constexpr auto PadBottom = 0x123; // bool
	}

	namespace n_ASGStructureSeat {
		constexpr auto SeatedCharacter = 0xd68; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto NumSeats = 0xd70; // int32_t
		constexpr auto CheckCanSeatBoxCollision = 0xd78; // TMap<int32_t, FVector>
		constexpr auto SeatedCharacterLocationOffset = 0xdc8; // FVector
		constexpr auto SeatedCharacterRotationOffset = 0xdd4; // FRotator
		constexpr auto SeatSocketName = 0xde0; // TArray<FName>
		constexpr auto SocketWorkingMontage = 0xdf0; // TArray<UAnimMontage*>
		constexpr auto PassengerAnimsConfig = 0xe00; // FPassengerAnimsConfig
		constexpr auto SeatWorkingMontage = 0xe10; // UAnimMontage*
		constexpr auto SeatNumToWorkingMontage = 0xe18; // int32_t
		constexpr auto bGeneralAttachToSkeletalMesh = 0xe1c; // char : 1
		constexpr auto AllSeatedCharacter = 0xe20; // TArray<ABaseCharacter*>
		constexpr auto SaveGameAllSeatedCharacter = 0xe40; // TArray<ABaseCharacter*>
		constexpr auto SetKilledCharacter = 0xe50; // TArray<ABaseCharacter*>
		constexpr auto GeneralSiegeDamageMulAdd = 0xe60; // float
		constexpr auto bUseSkeletalMesh = 0xe64; // char : 1
		constexpr auto bIsSeatPossess = 0xe64; // char : 1
		constexpr auto RideSoundID = 0xe68; // FName
		constexpr auto UnRideSoundID = 0xe70; // FName
		constexpr auto StartSeatWorkSoundID = 0xe78; // FName
		constexpr auto SeatWorkingSoundID = 0xe80; // FName
		constexpr auto StopSeatWorkSoundID = 0xe88; // FName
		constexpr auto WantDemolishPC = 0xe90; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto ServerCheckControlDistance = 0xe98; // float
		constexpr auto bCheckRelease = 0xe9c; // char : 1
		constexpr auto bReleaseInOriginLocation = 0xe9c; // char : 1
		constexpr auto ReleaseForwardMoveDistance = 0xea0; // float
		constexpr auto bCanPlayerUse = 0xea4; // char : 1
		constexpr auto SkillType = 0xea5; // ESkillType
		constexpr auto bSeatUnEquipWeapon = 0xea6; // char : 1
		constexpr auto bNPCSeatUnEquipWeapon = 0xea6; // char : 1
		constexpr auto bNPCReleaseEquipWeapon = 0xea6; // char : 1
		constexpr auto bNPCSeatDestroyController = 0xea6; // char : 1
		constexpr auto ReleaseSocket = 0xea8; // FName
		constexpr auto SupportControllerItemClassList = 0xeb0; // TArray<USGItem*>
		constexpr auto bShowStructureArea = 0xec0; // char : 1
		constexpr auto bToggleStructureArea = 0xec0; // char : 1
		constexpr auto StructureAreaRadius = 0xec4; // float
		constexpr auto SetAreaRadiusSpeed = 0xec8; // float
		constexpr auto AreaScaleTarget = 0xecc; // float
		constexpr auto StructureAreaComponent = 0xed8; // UStaticMeshComponent*
		constexpr auto bIsSentryTower = 0xee0; // char : 1
		constexpr auto bIsSentryActive = 0xee0; // char : 1
		constexpr auto SentryRadius = 0xee4; // float
		constexpr auto CheckSentryTimeHandle = 0xee8; // FTimerHandle
		constexpr auto CheckSentryTimeInterval = 0xef0; // float
		constexpr auto bDebugSentrySphere = 0xef4; // char : 1
		constexpr auto SentrySawBaseCharacters = 0xef8; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto PassagerHeadExtraHeight = 0xf08; // float
		constexpr auto SeatHungerAdd = 0xf0c; // float
		constexpr auto bWorkNeedCheckInventoryFood = 0xf10; // char : 1
		constexpr auto SeatWorkHungerAdd = 0xf14; // float
		constexpr auto SeatTimerHandle = 0xf18; // FTimerHandle
		constexpr auto SeatWorkerUpdateTimerHandle = 0xf20; // FTimerHandle
		constexpr auto bIsWorking = 0xf28; // char : 1
		constexpr auto UpdateDataInterval = 0xf2c; // float
		constexpr auto bIsCreateAlwaysWork = 0xf30; // char : 1
		constexpr auto bStructureWorkWaitCharacter = 0xf30; // char : 1
		constexpr auto bStructureHasCharacterWaitWork = 0xf30; // char : 1
		constexpr auto bWorkingCondition = 0xf30; // char : 1
		constexpr auto OnStructureSeat = 0xf38; // FMulticastInlineDelegate
		constexpr auto OnStructureRelease = 0xf48; // FMulticastInlineDelegate
		constexpr auto InstrumentAnimConfig = 0xf58; // TArray<FInstrumentAnimType>
		constexpr auto SeatWorkingAudioComponent = 0xf68; // USGAudioComponent*
	}

	namespace n_UNavigationInvokerComponent {
		constexpr auto TileGenerationRadius = 0xc0; // float
		constexpr auto TileRemovalRadius = 0xc4; // float
	}

	namespace n_USiegeAnimInstance {
		constexpr auto SG_SiegeCharacter = 0x2c0; // ASG_SiegeCharacter*
		constexpr auto SGCapsuleComponent = 0x2c8; // UCapsuleComponent*
		constexpr auto SGCharacterMovementComponent = 0x2d0; // UCharacterMovementComponent*
		constexpr auto bIsMoving = 0x2d8; // char : 1
		constexpr auto bMoveForward = 0x2d8; // char : 1
		constexpr auto fSpeedRatio = 0x2dc; // float
		constexpr auto ArchDirection = 0x2e0; // float
		constexpr auto ArchDirectionInterpSpeed = 0x2e4; // float
		constexpr auto RotateSpeed = 0x2e8; // float
	}

	namespace n_UQuickHelpSlot {
		constexpr auto QuickSloBorder = 0x260; // UBorder*
		constexpr auto QuickSlotText = 0x268; // UTextBlock*
		constexpr auto QuickText = 0x270; // UTextBlock*
		constexpr auto QuickType = 0x278; // EInventoryQuickInstructions
		constexpr auto ActionName = 0x27c; // FName [0x5]
		constexpr auto ActionText = 0x2a8; // FText [0x5]
	}

	namespace n_UMagicLeapImageTrackerComponent {
		constexpr auto TargetImageTexture = 0x208; // UTexture2D*
		constexpr auto Name = 0x210; // FString
		constexpr auto LongerDimension = 0x220; // float
		constexpr auto bIsStationary = 0x224; // bool
		constexpr auto bUseUnreliablePose = 0x225; // bool
		constexpr auto AxisOrientation = 0x226; // EMagicLeapImageTargetOrientation
		constexpr auto OnSetImageTargetSucceeded = 0x228; // FMulticastInlineDelegate
		constexpr auto OnSetImageTargetFailed = 0x238; // FMulticastInlineDelegate
		constexpr auto OnImageTargetFound = 0x248; // FMulticastInlineDelegate
		constexpr auto OnImageTargetLost = 0x258; // FMulticastInlineDelegate
		constexpr auto OnImageTargetUnreliableTracking = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UAISenseConfig_Hearing {
		constexpr auto Implementation = 0x48; // UAISense_Hearing*
		constexpr auto HearingRange = 0x50; // float
		constexpr auto LoSHearingRange = 0x54; // float
		constexpr auto bUseLoSHearing = 0x58; // char : 1
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
	}

	namespace n_UGameRecordDataRow {
		constexpr auto ActiveBGColor = 0x260; // FLinearColor
		constexpr auto NormalBGColor = 0x270; // FLinearColor
		constexpr auto EnterBGColor = 0x280; // FLinearColor
		constexpr auto BackGroundBorder = 0x290; // UBorder*
		constexpr auto GameRecordDataNameEditableText = 0x298; // UEditableTextBox*
		constexpr auto GameRecordDataNameTextBlock = 0x2a0; // UTextBlock*
		constexpr auto bActive = 0x2b8; // char : 1
	}

	namespace n_UGenericMultiItemSlot {
		constexpr auto ImgIcon = 0x260; // UImage*
		constexpr auto AmountText = 0x268; // UTextBlock*
		constexpr auto BindCheckInventory = 0x270; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindItem = 0x278; // TWeakObjectPtr<USGItem>
		constexpr auto SlotWidth = 0x280; // float
		constexpr auto SlotHeight = 0x284; // float
		constexpr auto SlotSizeBox = 0x288; // USizeBox*
		constexpr auto AddButton = 0x290; // UButton*
		constexpr auto ReduceButton = 0x298; // UButton*
		constexpr auto OperationAmountText = 0x2a0; // UEditableText*
		constexpr auto MaxAmount = 0x2a8; // int32_t
		constexpr auto CurrentAmount = 0x2ac; // int32_t
		constexpr auto AllowAddMaxAmount = 0x2b0; // int32_t
		constexpr auto FontSize = 0x2b4; // int32_t
		constexpr auto ParnetUI = 0x2b8; // UUI_GenericMultiItemDialog*
	}

	namespace n_AGlobalMapManager {
		constexpr auto GetServerListInfoInvertal = 0x310; // float
		constexpr auto OfficalLogicGameServers = 0x338; // TArray<int32_t>
		constexpr auto OccupyDetailInfoRequestList = 0x348; // TArray<FRequestOccupyDetailInfo>
		constexpr auto MaxCityGroupId = 0x358; // int32_t
		constexpr auto SiteServerInfo = 0x360; // FGameServerInfo
	}

	namespace n_UGameplayTask {
		constexpr auto InstanceName = 0x30; // FName
		constexpr auto ResourceOverlapPolicy = 0x3a; // ETaskResourceOverlapPolicy
		constexpr auto ChildTask = 0x60; // UGameplayTask*
	}

	namespace n_ULuminApplicationLifecycleComponent {
		constexpr auto DeviceHasReactivatedDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto DeviceWillEnterRealityModeDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto DeviceWillGoInStandbyDelegate = 0x170; // FMulticastInlineDelegate
		constexpr auto FocusLostDelegate = 0x180; // FMulticastInlineDelegate
		constexpr auto FocusGainedDelegate = 0x190; // FMulticastInlineDelegate
	}

	namespace n_UAbilityTask_VisualizeTargeting {
		constexpr auto TimeElapsed = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithSceneComponentTemplate {
		constexpr auto RelativeTransform = 0x30; // FTransform
		constexpr auto Mobility = 0x60; // EComponentMobility
		constexpr auto AttachParent = 0x68; // TSoftObjectPtr<USceneComponent>
		constexpr auto bVisible = 0x90; // bool
		constexpr auto Tags = 0x98; // TSet<FName>
	}

	namespace n_UMockDataMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x208; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x218; // bool
		constexpr auto RequestNormals = 0x219; // bool
		constexpr auto RequestVertexConfidence = 0x21a; // bool
		constexpr auto VertexColorMode = 0x21b; // EMeshTrackerVertexColorMode
		constexpr auto BlockVertexColors = 0x220; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x230; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x240; // FLinearColor
		constexpr auto UpdateInterval = 0x250; // float
		constexpr auto MRMesh = 0x258; // UMRMeshComponent*
	}

	namespace n_UMaterialExpressionPreviousFrameSwitch {
		constexpr auto CurrentFrame = 0x40; // FExpressionInput
		constexpr auto PreviousFrame = 0x54; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceArrayInt32 {
		constexpr auto IntData = 0x50; // TArray<int32_t>
	}

	namespace n_ASGStructureSaltLand {
		constexpr auto ServerSaltInfoArray = 0x1090; // TArray<UServerSaltInfo*>
		constexpr auto ClientSaltInfoArray = 0x10a0; // TArray<UClientSaltInfo*>
		constexpr auto SaltCropInstancedArray = 0x10b0; // TArray<uint16_t>
		constexpr auto SavedTickTimeSeconds = 0x10c8; // float
	}

	namespace n_UInterpCurveEdSetup {
		constexpr auto Tabs = 0x28; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x38; // int32_t
	}

	namespace n_UHorizonFlipbookWidget {
		constexpr auto bIsStartTick = 0x220; // bool
		constexpr auto NumOfLoop = 0x224; // int32_t
		constexpr auto PaperFlipbook = 0x228; // UPaperFlipbook*
	}

	namespace n_APrecomputedVisibilityOverrideVolume {
		constexpr auto OverrideVisibleActors = 0x348; // TArray<AActor*>
		constexpr auto OverrideInvisibleActors = 0x358; // TArray<AActor*>
		constexpr auto OverrideInvisibleLevels = 0x368; // TArray<FName>
	}

	namespace n_UMaterialExpressionSmoothStep {
		constexpr auto Min = 0x40; // FExpressionInput
		constexpr auto Max = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstMin = 0x7c; // float
		constexpr auto ConstMax = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
	}

	namespace n_ANpcSpawnInfo {
		constexpr auto bGenerateNpcEnable = 0x310; // bool
		constexpr auto NpcSpawnTemplateClass = 0x318; // UNpcSpawnTemplate*
		constexpr auto NpcVolumes = 0x320; // TArray<ANpcVolume*>
		constexpr auto NpcSpawnVolumeDatas = 0x330; // TArray<FNpcSpawnVolumeData>
		constexpr auto DefaultSpawnVolumeFloors = 0x340; // TArray<AActor*>
		constexpr auto DefaultSpawnVolumeFloorTags = 0x350; // TArray<FName>
		constexpr auto MaxNumberValidSpawnDataChecks = 0x360; // int32_t
		constexpr auto InitNpcTotalTime = 0x364; // float
		constexpr auto IncreaseDecreaseNpcIntervalTime = 0x368; // float
		constexpr auto MinDesiredNumberOfNPC = 0x36c; // int32_t
		constexpr auto MaxNumberOfNPC = 0x370; // int32_t
		constexpr auto CheckPlayerDistance = 0x374; // float
		constexpr auto CheckStructureDistance = 0x378; // float
		constexpr auto bCheckStaticSpawnVolume = 0x37c; // char : 1
		constexpr auto bNotGenerateAfterOccupy = 0x37c; // char : 1
		constexpr auto SpecialNpcSpawnInfos = 0x380; // TArray<FSpecialNpcSpawnInfo>
		constexpr auto bXianChengGuardSpawner = 0x390; // char : 1
		constexpr auto XianChengGuardLevelOffset = 0x394; // int32_t
		constexpr auto bUseJournal = 0x398; // char : 1
	}

	namespace n_USubmixEffectReverbPluginPreset {
		constexpr auto Settings = 0x91; // FSubmixEffectReverbPluginSettings
	}

	namespace n_UBTTask_SGBlueprintBase {
		constexpr auto SG_AIController = 0xa8; // TWeakObjectPtr<ASG_AIController>
		constexpr auto SG_GeneralAIController = 0xb0; // TWeakObjectPtr<ASGGeneralAIController>
		constexpr auto SG_GeneralCharacter = 0xb8; // TWeakObjectPtr<ASGGeneralCharacter>
	}

	namespace n_ANatureController {
		constexpr auto Component = 0x320; // UWeatherControlComponent*
		constexpr auto DayTimeAtPresent = 0x328; // float
		constexpr auto DayTimeTotal = 0x32c; // float
		constexpr auto DayTimeStart = 0x330; // float
		constexpr auto DayTimeEnd = 0x334; // float
		constexpr auto DayTimeStartWhenPlay = 0x338; // float
		constexpr auto WaterLightIntensity = 0x33c; // float
		constexpr auto MoonMeshLightIntensity = 0x340; // float
		constexpr auto StarMeshLightIntensity = 0x344; // float
		constexpr auto StarDensityAttention = 0x348; // float
		constexpr auto HighLevelCloudScatteringCoeff = 0x34c; // float
		constexpr auto HighLevelCloudAltocumulusORCirrusPower = 0x350; // float
		constexpr auto SunDiskIntensity = 0x354; // float
		constexpr auto CloudShadowContrast = 0x358; // float
		constexpr auto CurrentTemperature = 0x35c; // float
		constexpr auto HitShakeDuration = 0x360; // float
		constexpr auto HitShakeSpeed = 0x364; // float
		constexpr auto FogBaseZHeight = 0x368; // float
		constexpr auto FogRelativeZHeight = 0x370; // FRuntimeFloatCurve
		constexpr auto CloudColour = 0x3f8; // FLinearColor
		constexpr auto CloudOpacity = 0x408; // float
		constexpr auto CloudWindSpeed = 0x40c; // float
		constexpr auto StratusPower = 0x410; // float
		constexpr auto CumulusPower = 0x414; // float
		constexpr auto PluvialCumulusPower = 0x418; // float
		constexpr auto bEnableWeather = 0x41c; // char : 1
		constexpr auto bEnableDebug = 0x41c; // char : 1
		constexpr auto bEnableDebugNatureRes = 0x41c; // char : 1
		constexpr auto CurrentDay = 0x420; // int32_t
		constexpr auto LeaderMainLoopResource = 0x428; // AMatineeActor*
		constexpr auto DirectionalLight = 0x430; // ADirectionalLight*
		constexpr auto MoonLight = 0x438; // ADirectionalLight*
		constexpr auto LightningLight = 0x440; // ADirectionalLight*
		constexpr auto SkyLight = 0x448; // ASkyLight*
		constexpr auto NatureWether = 0x450; // ANatureWeather*
		constexpr auto GlobalWindSource = 0x458; // AWindDirectionalSource*
		constexpr auto VolumetricCloud = 0x460; // AVolumetricCloud*
		constexpr auto SkyAtmosphere = 0x468; // ASkyAtmosphere*
		constexpr auto GloablPostProcessVolume = 0x470; // APostProcessVolume*
		constexpr auto ExponentialHeightFog = 0x478; // AExponentialHeightFog*
		constexpr auto Moon = 0x480; // AStaticMeshActor*
		constexpr auto Star = 0x488; // AStaticMeshActor*
		constexpr auto HighLevelCloud = 0x490; // AStaticMeshActor*
		constexpr auto WeatherVolumetricFog = 0x498; // AWeatherVolumetricFog*
		constexpr auto WeatherSnow = 0x4a0; // AWeatherSnow*
		constexpr auto NatureMPC = 0x4a8; // UMaterialParameterCollection*
		constexpr auto NatureMPCInst = 0x4b0; // UMaterialParameterCollectionInstance*
		constexpr auto WaterControlMPC = 0x4b8; // UMaterialParameterCollection*
		constexpr auto WaterControlMPCInst = 0x4c0; // UMaterialParameterCollectionInstance*
		constexpr auto HotWavePPMat = 0x4c8; // UMaterialInterface*
		constexpr auto HotWavePPMID = 0x4d0; // UMaterialInstanceDynamic*
		constexpr auto CloudShadowMat = 0x4d8; // UMaterialInterface*
		constexpr auto CloudShadowMatMID = 0x4e0; // UMaterialInstanceDynamic*
		constexpr auto BaseMainLoopInterpDataClass = 0x4e8; // UWeatherMainLoopInterpData*
		constexpr auto BaseTransInterpDataClass = 0x4f0; // UWeatherTransInterpData*
		constexpr auto LightningEmitterTemplate = 0x4f8; // ALightningEmitter*
		constexpr auto FarLightningEmitterTemplates = 0x500; // TArray<ALightningEmitter*>
		constexpr auto FarLightningMinInterval = 0x510; // float
		constexpr auto FarLightningMaxInterval = 0x514; // float
		constexpr auto FarLightningMinExtent = 0x518; // float
		constexpr auto FarLightningMaxExtent = 0x51c; // float
		constexpr auto FarLightningMinDistance = 0x520; // float
		constexpr auto FarLightningMaxDistance = 0x524; // float
		constexpr auto FarHighFrequencyWeight = 0x528; // float
		constexpr auto FarHighFrequencyInterval = 0x52c; // float
		constexpr auto FarHighFrequencyMinTimes = 0x530; // int32_t
		constexpr auto FarHighFrequencyMaxTimes = 0x534; // int32_t
		constexpr auto LightningCloudMinRadius = 0x538; // float
		constexpr auto LightningCloudMaxRadius = 0x53c; // float
		constexpr auto LightningCloudMaxIntensity = 0x540; // float
		constexpr auto LightningDirLightCastShadowThreshold = 0x544; // float
		constexpr auto LightningDirLightIntensityMultiplier = 0x548; // float
		constexpr auto LightningDamageType = 0x550; // USGDamageType*
		constexpr auto LightningDamageDelayTime = 0x558; // float
		constexpr auto LightningBaseDamage = 0x55c; // float
		constexpr auto LightningInnerRadius = 0x560; // float
		constexpr auto LightningOuterRadius = 0x564; // float
		constexpr auto LightningDamageFallOff = 0x568; // float
		constexpr auto CurrentWeatherControlComponent = 0x570; // UWeatherControlComponent*
		constexpr auto PrevWeatherControlComponent = 0x578; // UWeatherControlComponent*
		constexpr auto GlobalActors = 0x620; // AActor* [0x10]
		constexpr auto AgainstEnvironmentStructures = 0x6a8; // TArray<ASGStructureItemContainer*>
		constexpr auto AgainstEnvironmentVolumesBoxes = 0x6b8; // TArray<FBox>
		constexpr auto LightningEvents = 0x728; // FWeatherLightningEvent [0x3]
		constexpr auto ControlVolumes = 0x7a0; // TArray<ANatureWeatherAreaVolume*>
		constexpr auto ControlVolumesBoundingBoxes = 0x7b0; // TArray<FBox>
		constexpr auto EnvironmentVolumes = 0x7c0; // TArray<ANatureEnvironmentVolume*>
		constexpr auto EnvironmentVolumesBoxes = 0x7d0; // TArray<FBox>
	}

	namespace n_UGroomHairGroupsPreview {
		constexpr auto Groups = 0x28; // TArray<FGroomHairGroupPreview>
	}

	namespace n_UGizmoPlaneScaleParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0xb0; // float
		constexpr auto Parameter = 0xb4; // FVector2D
		constexpr auto LastChange = 0xbc; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0xcc; // FVector
		constexpr auto CurScaleNormal = 0xd8; // FVector
		constexpr auto CurScaleAxisX = 0xe4; // FVector
		constexpr auto CurScaleAxisY = 0xf0; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_ASGProjectile {
		constexpr auto VirtualRoot = 0x310; // USceneComponent*
		constexpr auto ProjectileMesh = 0x318; // UStaticMeshComponent*
		constexpr auto ProjectileMovementComponent = 0x320; // UProjectileMovementComponent*
		constexpr auto TrailParticleSystemComponent = 0x328; // UParticleSystemComponent*
		constexpr auto TrailParticleSetting = 0x330; // FConstructAttachMeshParticle
		constexpr auto AutoActiveParticleSystemComponent = 0x368; // UParticleSystemComponent*
		constexpr auto AutoActiveParticleSetting = 0x370; // FConstructAttachMeshParticle
		constexpr auto TrapSphereComponent = 0x3a8; // USphereComponent*
		constexpr auto FlySoundID = 0x3b0; // FName
		constexpr auto bAutoActiveStopInFire = 0x3b8; // char : 1
		constexpr auto bAutoActiveStopOnHit = 0x3b8; // char : 1
		constexpr auto StandSocketName = 0x3c8; // FName
		constexpr auto SeatedCharacterLocationOffset = 0x3d0; // FVector
		constexpr auto SeatedCharacterRotationOffset = 0x3dc; // FRotator
		constexpr auto DamageType = 0x3e8; // USGDamageType*
		constexpr auto bOnlyUseServerTrace = 0x3f0; // char : 1
		constexpr auto bHideMeshInFly = 0x3f0; // char : 1
		constexpr auto Tenacity = 0x3f4; // int32_t
		constexpr auto bIsHit = 0x3f8; // char : 1
		constexpr auto bHasFired = 0x3f8; // char : 1
		constexpr auto bProjectileHasStopped = 0x3f8; // char : 1
		constexpr auto ServerCheckImpactActorDistance = 0x3fc; // float
		constexpr auto ServerCheckImpactComponentDistance = 0x400; // float
		constexpr auto ServerCheckImpactPointDistance = 0x404; // float
		constexpr auto MakeDamageTimes = 0x408; // int32_t
		constexpr auto FireFlyScale = 0x40c; // FVector
		constexpr auto DistanceAttenuationCurve = 0x418; // UCurveFloat*
		constexpr auto ProjectileRange = 0x420; // float
		constexpr auto ChangedGravityRange = 0x424; // float
		constexpr auto StartLocation = 0x428; // FVector
		constexpr auto bTickRotation = 0x434; // char : 1
		constexpr auto AddRotatorDetla = 0x438; // FRotator
		constexpr auto ProjectileDefaultDamageType = 0x444; // EDamageType
		constexpr auto SlashingDamage = 0x448; // float
		constexpr auto PiercingDamage = 0x44c; // float
		constexpr auto CrushingDamage = 0x450; // float
		constexpr auto CollectionDamage = 0x454; // float
		constexpr auto SiegeDamage = 0x458; // float
		constexpr auto Hardness = 0x45c; // int32_t
		constexpr auto AmmoPierceness = 0x460; // int32_t
		constexpr auto OriginAmmoPierceness = 0x464; // int32_t
		constexpr auto bCreateTrap = 0x474; // char : 1
		constexpr auto TrapDecal = 0x478; // UMaterialInterface*
		constexpr auto bUseCustomRelativeLocation = 0x480; // char : 1
		constexpr auto CustomMeshRelativeLocation = 0x484; // FVector
		constexpr auto bUseCustomRelativeActorFixLocation = 0x490; // char : 1
		constexpr auto bUseCustomRelativeRotation = 0x490; // char : 1
		constexpr auto CustomMeshRelativeRotation = 0x494; // FRotator
		constexpr auto DecalSize = 0x4a0; // FVector
		constexpr auto DecalRotationOffset = 0x4ac; // FRotator
		constexpr auto DecalLocationOffset = 0x4b8; // FVector
		constexpr auto TrapLifeTime = 0x4c4; // float
		constexpr auto bCreateTrapParticle = 0x4c8; // char : 1
		constexpr auto TrapParticleSoundID = 0x4cc; // FName
		constexpr auto TrapParticle = 0x4d8; // UParticleSystem*
		constexpr auto bParticleFollowHitRotation = 0x4e0; // char : 1
		constexpr auto TrapParticleLocationOffset = 0x4e4; // FVector
		constexpr auto TrapParticleRotationOffset = 0x4f0; // FRotator
		constexpr auto TrapParticleScale = 0x4fc; // FVector
		constexpr auto OverlapBuff = 0x508; // USGBuff*
		constexpr auto bKongmingLanternActivity = 0x510; // char : 1
		constexpr auto bDrawProjectileLine = 0x510; // char : 1
		constexpr auto ProjectileLineMaxDistance = 0x514; // float
		constexpr auto bHitDestroy = 0x518; // char : 1
		constexpr auto bStopSetNoCollision = 0x518; // char : 1
		constexpr auto bHitMakeNoise = 0x518; // char : 1
		constexpr auto bHitCharacterDestory = 0x518; // char : 1
		constexpr auto AfterHitLifeTime = 0x51c; // float
		constexpr auto bPointDamage = 0x520; // char : 1
		constexpr auto StopSpawnParticles = 0x528; // TArray<FSpawnParticle>
		constexpr auto ParticleParam = 0x538; // FName
		constexpr auto bDrawDebug = 0x540; // char : 1
		constexpr auto MaxDamage = 0x544; // float [0x4]
		constexpr auto MinDamage = 0x554; // float [0x4]
		constexpr auto MaxCollectionDamage = 0x564; // float
		constexpr auto MinCollectionDamage = 0x568; // float
		constexpr auto InnerRadius = 0x56c; // float
		constexpr auto OuterRadius = 0x570; // float
		constexpr auto DamageFalloff = 0x574; // float
		constexpr auto ProjectileFollowSocket = 0x5c4; // FName
		constexpr auto OverlapInfos = 0x5d0; // TArray<FTrapOverlapInfo>
		constexpr auto ItemClassTemplate = 0x600; // USGItem*
		constexpr auto AttachBoneMeshOffset = 0x608; // FVector
		constexpr auto bHitAdjustRotation = 0x614; // char : 1
		constexpr auto bHitSetZeroRotator = 0x614; // char : 1
		constexpr auto MinHitThrowRandPitch = 0x650; // float
		constexpr auto MaxHitThrowRandPitch = 0x654; // float
		constexpr auto MinHitThrowRandYaw = 0x658; // float
		constexpr auto MaxHitThrowRandYaw = 0x65c; // float
		constexpr auto FixHitThrowRotator = 0x660; // FRotator
		constexpr auto DelayDamageTimeMax = 0x66c; // float
		constexpr auto DelayDamageTimeMin = 0x670; // float
		constexpr auto FlyTime = 0x674; // float
		constexpr auto WeaponType = 0x678; // EWeaponType
		constexpr auto DamageToArmor = 0x67c; // float
		constexpr auto DamageToSheild = 0x680; // float
		constexpr auto DamageToWeapon = 0x684; // float
		constexpr auto DamageToHP = 0x688; // float
		constexpr auto DamageToStructure = 0x68c; // float
		constexpr auto ExtraStunRatio = 0x690; // float
		constexpr auto bStopInitializeSceneManagerState = 0x694; // char : 1
		constexpr auto bRangeChangeVelocity = 0x694; // char : 1
		constexpr auto RangeChangeVelocityMul = 0x698; // float
		constexpr auto bDelayFlySetGravity = 0x69c; // char : 1
		constexpr auto ChangedGravity = 0x6a0; // float
		constexpr auto QualityType = 0x6a4; // EAnimalQualityType
		constexpr auto bFixedConsumeDurable = 0x6a5; // char : 1
		constexpr auto bCanStunTarget = 0x6a5; // char : 1
		constexpr auto PassengerAnimsConfig = 0x6a8; // FPassengerAnimsConfig
		constexpr auto Level = 0x6b8; // int32_t
		constexpr auto DamageIconIndex = 0x6bc; // int32_t
	}

	namespace n_UUI_SystemSetting {
		constexpr auto RadioButtonViewList = 0x260; // TArray<FName>
		constexpr auto SGGameUserSettings = 0x270; // USGGameUserSettings*
		constexpr auto ParentUI = 0x278; // USGUI*
	}

	namespace n_UNavArea {
		constexpr auto DefaultCost = 0x30; // float
		constexpr auto FixedAreaEnteringCost = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto SupportedAgents = 0x3c; // FNavAgentSelector
		constexpr auto bSupportsAgent0 = 0x40; // char : 1
		constexpr auto bSupportsAgent1 = 0x40; // char : 1
		constexpr auto bSupportsAgent2 = 0x40; // char : 1
		constexpr auto bSupportsAgent3 = 0x40; // char : 1
		constexpr auto bSupportsAgent4 = 0x40; // char : 1
		constexpr auto bSupportsAgent5 = 0x40; // char : 1
		constexpr auto bSupportsAgent6 = 0x40; // char : 1
		constexpr auto bSupportsAgent7 = 0x40; // char : 1
		constexpr auto bSupportsAgent8 = 0x41; // char : 1
		constexpr auto bSupportsAgent9 = 0x41; // char : 1
		constexpr auto bSupportsAgent10 = 0x41; // char : 1
		constexpr auto bSupportsAgent11 = 0x41; // char : 1
		constexpr auto bSupportsAgent12 = 0x41; // char : 1
		constexpr auto bSupportsAgent13 = 0x41; // char : 1
		constexpr auto bSupportsAgent14 = 0x41; // char : 1
		constexpr auto bSupportsAgent15 = 0x41; // char : 1
	}

	namespace n_ULandscapeSplinesComponent {
		constexpr auto ControlPoints = 0x488; // TArray<ULandscapeSplineControlPoint*>
		constexpr auto Segments = 0x498; // TArray<ULandscapeSplineSegment*>
		constexpr auto CookedForeignMeshComponents = 0x4a8; // TArray<UMeshComponent*>
	}

	namespace n_UInterpTrackInstBoolProp {
		constexpr auto ResetBool = 0x60; // bool
	}

	namespace n_UEnvQueryGenerator_CurrentLocation {
		constexpr auto QueryContext = 0x50; // UEnvQueryContext*
	}

	namespace n_UMaterialExpressionLandscapeLayerWeight {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Layer = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewWeight = 0x70; // float
		constexpr auto ConstBase = 0x74; // FVector
		constexpr auto ExpressionGUID = 0x80; // FGuid
	}

	namespace n_UMaterialExpressionLogarithm2 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_USubmixEffectConvolutionReverbPreset {
		constexpr auto ImpulseResponse = 0x68; // UAudioImpulseResponse*
		constexpr auto Settings = 0x70; // FSubmixEffectConvolutionReverbSettings
		constexpr auto BlockSize = 0x98; // ESubmixEffectConvolutionReverbBlockSize
		constexpr auto bEnableHardwareAcceleration = 0x99; // bool
	}

	namespace n_UBlackboardData {
		constexpr auto Parent = 0x30; // UBlackboardData*
		constexpr auto Keys = 0x38; // TArray<FBlackboardEntry>
		constexpr auto bHasSynchronizedKeys = 0x48; // char : 1
	}

	namespace n_UWeightMapSetProperties {
		constexpr auto WeightMap = 0x60; // FName
		constexpr auto WeightMapsList = 0x68; // TArray<FString>
		constexpr auto bInvertWeightMap = 0x78; // bool
	}

	namespace n_UMovieSceneCameraShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ABP_LightningEffect_C {
		constexpr auto UberGraphFrame = 0x698; // FPointerToUberGraphFrame
		constexpr auto LightningNiagaraComponent = 0x6a0; // UNiagaraComponent*
	}

	namespace n_UDatasmithAreaLightActorTemplate {
		constexpr auto LightType = 0x30; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x31; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x34; // FVector2D
		constexpr auto Color = 0x3c; // FLinearColor
		constexpr auto Intensity = 0x4c; // float
		constexpr auto IntensityUnits = 0x50; // ELightUnits
		constexpr auto Temperature = 0x54; // float
		constexpr auto IESTexture = 0x58; // TSoftObjectPtr<UTextureLightProfile>
		constexpr auto bUseIESBrightness = 0x80; // bool
		constexpr auto IESBrightnessScale = 0x84; // float
		constexpr auto Rotation = 0x88; // FRotator
		constexpr auto SourceRadius = 0x94; // float
		constexpr auto SourceLength = 0x98; // float
		constexpr auto AttenuationRadius = 0x9c; // float
	}

	namespace n_UBTTask_PlaySound {
		constexpr auto SoundToPlay = 0x70; // USoundCue*
	}

	namespace n_UMagicLeapHeadTrackingNotificationsComponent {
		constexpr auto OnHeadTrackingLost = 0x150; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecovered = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingRecoveryFailed = 0x170; // FMulticastInlineDelegate
		constexpr auto OnHeadTrackingNewSessionStarted = 0x180; // FMulticastInlineDelegate
	}

	namespace n_UUI_N_VehiclePerk {
		constexpr auto PerRowCount = 0x2d8; // int32_t
		constexpr auto VehiclePerkSlotTemplate = 0x2e0; // UVehiclePerkSlot*
		constexpr auto ForbidPlacePerkPanel = 0x2e8; // UUniformGridPanel*
		constexpr auto AllowPlacePerkPanel = 0x2f0; // UUniformGridPanel*
		constexpr auto SpecialPerkPanel = 0x2f8; // UUniformGridPanel*
		constexpr auto RecessivePerkPanel = 0x300; // UUniformGridPanel*
		constexpr auto BindHorseCharacter = 0x308; // TWeakObjectPtr<ASG_HorseCharacter>
	}

	namespace n_UAISense_Blueprint {
		constexpr auto ListenerDataType = 0x80; // UUserDefinedStruct*
		constexpr auto ListenerContainer = 0x88; // TArray<UAIPerceptionComponent*>
		constexpr auto UnprocessedEvents = 0x98; // TArray<UAISenseEvent*>
	}

	namespace n_UMaterialExpressionComponentMask {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto R = 0x54; // char : 1
		constexpr auto G = 0x54; // char : 1
		constexpr auto B = 0x54; // char : 1
		constexpr auto A = 0x54; // char : 1
	}

	namespace n_UActorComponent {
		constexpr auto PrimaryComponentTick = 0x38; // FActorComponentTickFunction
		constexpr auto ComponentTags = 0x68; // TArray<FName>
		constexpr auto AssetUserData = 0x78; // TArray<UAssetUserData*>
		constexpr auto UCSSerializationIndex = 0x8c; // int32_t
		constexpr auto bNetAddressable = 0x90; // char : 1
		constexpr auto bReplicates = 0x90; // char : 1
		constexpr auto bAutoActivate = 0x93; // char : 1
		constexpr auto bIsActive = 0x93; // char : 1
		constexpr auto bEditableWhenInherited = 0x93; // char : 1
		constexpr auto bCanEverAffectNavigation = 0x94; // char : 1
		constexpr auto bIsEditorOnly = 0x94; // char : 1
		constexpr auto CreationMethod = 0x96; // EComponentCreationMethod
		constexpr auto OnComponentActivated = 0x97; // FMulticastSparseDelegate
		constexpr auto OnComponentDeactivated = 0x98; // FMulticastSparseDelegate
		constexpr auto UCSModifiedProperties = 0xa0; // TArray<FSimpleMemberReference>
	}

	namespace n_UMaterialExpressionRayTracingQualitySwitch {
		constexpr auto Normal = 0x40; // FExpressionInput
		constexpr auto RayTraced = 0x54; // FExpressionInput
	}

	namespace n_AOnlineBeacon {
		constexpr auto BeaconConnectionInitialTimeout = 0x318; // float
		constexpr auto BeaconConnectionTimeout = 0x31c; // float
		constexpr auto NetDriver = 0x320; // UNetDriver*
	}

	namespace n_UBasicOverlays {
		constexpr auto Overlays = 0x28; // TArray<FOverlayItem>
	}

	namespace n_UEnvQueryOption {
		constexpr auto Generator = 0x28; // UEnvQueryGenerator*
		constexpr auto Tests = 0x30; // TArray<UEnvQueryTest*>
	}

	namespace n_UPhysicsAsset {
		constexpr auto BoundsBodies = 0x30; // TArray<int32_t>
		constexpr auto SkeletalBodySetups = 0x40; // TArray<USkeletalBodySetup*>
		constexpr auto ConstraintSetup = 0x50; // TArray<UPhysicsConstraintTemplate*>
		constexpr auto SolverIterations = 0x60; // FSolverIterations
		constexpr auto bNotForDedicatedServer = 0x7c; // char : 1
		constexpr auto ThumbnailInfo = 0x120; // UThumbnailInfo*
		constexpr auto BodySetup = 0x128; // TArray<UBodySetup*>
	}

	namespace n_UDistributionVector {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bIsDirty = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UDataTable {
		constexpr auto RowStruct = 0x28; // UScriptStruct*
		constexpr auto bStripFromClientBuilds = 0x80; // char : 1
		constexpr auto bIgnoreExtraFields = 0x80; // char : 1
		constexpr auto bIgnoreMissingFields = 0x80; // char : 1
		constexpr auto ImportKeyField = 0x88; // FString
	}

	namespace n_AArchVisCharacter {
		constexpr auto LookUpAxisName = 0x5c8; // FString
		constexpr auto LookUpAtRateAxisName = 0x5d8; // FString
		constexpr auto TurnAxisName = 0x5e8; // FString
		constexpr auto TurnAtRateAxisName = 0x5f8; // FString
		constexpr auto MoveForwardAxisName = 0x608; // FString
		constexpr auto MoveRightAxisName = 0x618; // FString
		constexpr auto MouseSensitivityScale_Pitch = 0x628; // float
		constexpr auto MouseSensitivityScale_Yaw = 0x62c; // float
	}

	namespace n_UEditableTextBoxWidgetStyle {
		constexpr auto EditableTextBoxStyle = 0x30; // FEditableTextBoxStyle
	}

	namespace n_UStandaloneMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_UN_EquipPanel {
		constexpr auto PreviewWidget = 0x260; // UPreviewSceneWidget*
		constexpr auto EquipCanvasName = 0x268; // TArray<FName>
		constexpr auto RemoteShortCutCanvasName = 0x278; // TArray<FName>
		constexpr auto bOverrideShowPosition = 0x288; // char : 1
		constexpr auto bShowLeft = 0x288; // char : 1
		constexpr auto bEnableOverridePreviewWidget = 0x288; // char : 1
		constexpr auto OverridePreviewWidgetDistance = 0x28c; // float
		constexpr auto OverridePreviewWidgetMeshLocation = 0x290; // FVector
		constexpr auto OverridePreviewWidgetMeshLocationOffset = 0x29c; // FVector
		constexpr auto OverridePreviewWidgetMeshRotation = 0x2a8; // FRotator
		constexpr auto OverridePreviewWidgetCameraLocationOffset = 0x2b4; // FVector
		constexpr auto OverridePreviewWidgetCameraRotation = 0x2c0; // FRotator
		constexpr auto OverridePreviewScale = 0x2cc; // float
		constexpr auto OverridePreviewWidgetDefaultAnim = 0x2d0; // UAnimMontage*
		constexpr auto bOverrideSet = 0x2d8; // char : 1
		constexpr auto DefaultPreviewSetting = 0x2dc; // FPreviewCameraSetting
		constexpr auto bRemote = 0x320; // char : 1
		constexpr auto bPlayer = 0x320; // char : 1
		constexpr auto ParentUI = 0x328; // USGUI*
		constexpr auto VirtualImageList = 0x330; // TArray<UImage*>
		constexpr auto InventorySlotList = 0x340; // TArray<UN_InventorySlot*>
		constexpr auto ShortCutSlotList = 0x350; // TArray<UN_InventorySlot*>
		constexpr auto BindInventoryComponent = 0x360; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindActor = 0x368; // TWeakObjectPtr<AActor>
		constexpr auto BindCharacter = 0x370; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto VirtualHumanImageTexture2D = 0x378; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto VirtualImageHorseTexture2D = 0x418; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto VirtualImageSiegeTexture2D = 0x4b8; // TSoftObjectPtr<UTexture2D> [0x2]
		constexpr auto bSlotAllowDrag = 0x508; // char : 1
		constexpr auto bWatchDead = 0x508; // char : 1
		constexpr auto PVEButton = 0x510; // UButton*
		constexpr auto PVEText = 0x518; // UTextBlock*
		constexpr auto PVPOpenStyle = 0x520; // FButtonStyle
		constexpr auto PVPCloseStyle = 0x798; // FButtonStyle
		constexpr auto PVPOpenColor = 0xa10; // FSlateColor
		constexpr auto PVPCloseColor = 0xa38; // FSlateColor
		constexpr auto CloudDataMark = 0xa60; // UCanvasPanel*
		constexpr auto CloudDataTimeText = 0xa68; // UTextBlock*
		constexpr auto bOnlyShowPreview = 0xa70; // char : 1
		constexpr auto RecordTransportItem = 0xa74; // TWeakObjectPtr<USGItem>
		constexpr auto RecordTransportItemInventoyType = 0xa7c; // EInventoryTypes
		constexpr auto RecordTransportItemTargetInventoyType = 0xa7d; // EInventoryTypes
		constexpr auto RecordSlot = 0xa80; // int32_t
		constexpr auto ShowAppearanceBtn = 0xa88; // UButton*
		constexpr auto SACheckBox = 0xa90; // UCheckBox*
	}

	namespace n_UMaterialExpressionTransform {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0x55; // EMaterialVectorCoordTransform
	}

	namespace n_UARTrackedImage {
		constexpr auto DetectedImage = 0xf8; // UARCandidateImage*
		constexpr auto EstimatedSize = 0x100; // FVector2D
	}

	namespace n_UGlobalMap_WorshipItem {
		constexpr auto ImgWorshipIcon = 0x260; // UImage*
		constexpr auto TbWorshipInfo = 0x268; // UTextBlock*
		constexpr auto TbRemainTime = 0x270; // UTextBlock*
	}

	namespace n_UUI_PrivateSessionList {
		constexpr auto RowTemplate = 0x2d8; // UUI_PrivateSessionListRow*
		constexpr auto RowNumPerPage = 0x2e0; // int32_t
		constexpr auto SessionDescriptionTemplate = 0x2e8; // UPrivateSessionDescription*
		constexpr auto MapConfigDataTable = 0x2f0; // UDataTable*
		constexpr auto SessionPasswordTemplate = 0x2f8; // UPrivateSessionPassword*
		constexpr auto UGPSessionList = 0x300; // UUniformGridPanel*
		constexpr auto UGPLastLoginSession = 0x308; // UUniformGridPanel*
		constexpr auto BtnJoin = 0x310; // UButton*
		constexpr auto BtnRefresh = 0x318; // UButton*
		constexpr auto BtnBack = 0x320; // UButton*
		constexpr auto BtnLastPage = 0x328; // UButton*
		constexpr auto BtnNextPage = 0x330; // UButton*
		constexpr auto TbCurPage = 0x338; // UTextBlock*
		constexpr auto TbMaxPage = 0x340; // UTextBlock*
		constexpr auto EtbSearch = 0x348; // UEditableText*
		constexpr auto CircularThrobber = 0x350; // UCircularThrobber*
		constexpr auto CbMap = 0x358; // UComboBoxString*
		constexpr auto CbPVPType = 0x360; // UComboBoxString*
		constexpr auto CbVersion = 0x368; // UComboBoxString*
		constexpr auto BtnMOD = 0x370; // UButton*
		constexpr auto BtnPlayerNumUp = 0x378; // UButton*
		constexpr auto BtnPlayerNumDown = 0x380; // UButton*
		constexpr auto BtnFavorite = 0x388; // UButton*
		constexpr auto CircularThrobberHandle = 0x390; // FTimerHandle
		constexpr auto SessionRows = 0x398; // TArray<UUI_PrivateSessionListRow*>
		constexpr auto LastLoginSessionRow = 0x3a8; // UUI_PrivateSessionListRow*
		constexpr auto CurPage = 0x3b0; // int32_t
		constexpr auto MaxPage = 0x3b4; // int32_t
		constexpr auto SelectSessionRow = 0x3b8; // UUI_PrivateSessionListRow*
		constexpr auto SearchString = 0x3c0; // FString
		constexpr auto PrivateSessionDescription = 0x3d0; // UPrivateSessionDescription*
		constexpr auto PrivateSessionPassword = 0x3d8; // UPrivateSessionPassword*
		constexpr auto bMODSort = 0x3e0; // char : 1
		constexpr auto bPlayerNumUpSort = 0x3e0; // char : 1
		constexpr auto bPlayerNumDownSort = 0x3e0; // char : 1
		constexpr auto bFavoriteSort = 0x3e0; // char : 1
		constexpr auto GetPingTimer = 0x3e8; // FTimerHandle
		constexpr auto GetPingServerIndexList = 0x3f0; // TArray<int32_t>
	}

	namespace n_UMaterialBillboardComponent {
		constexpr auto Elements = 0x488; // TArray<FMaterialSpriteElement>
	}

	namespace n_UHorizontalBoxSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto Size = 0x50; // FSlateChildSize
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UEditableGameplayTagQueryExpression_AllExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UAddPrimitiveTool {
		constexpr auto ShapeSettings = 0x90; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto LastGenerated = 0xa8; // ULastActorInfo*
		constexpr auto AssetName = 0xb0; // FString
	}

	namespace n_AVolumetricLightmapDensityVolume {
		constexpr auto AllowedMipLevelRange = 0x348; // FInt32Interval
	}

	namespace n_UNiagaraEffectType {
		constexpr auto UpdateFrequency = 0x28; // ENiagaraScalabilityUpdateFrequency
		constexpr auto CullReaction = 0x2c; // ENiagaraCullReaction
		constexpr auto SignificanceHandler = 0x30; // UNiagaraSignificanceHandler*
		constexpr auto DetailLevelScalabilitySettings = 0x38; // TArray<FNiagaraSystemScalabilitySettings>
		constexpr auto SystemScalabilitySettings = 0x48; // FNiagaraSystemScalabilitySettingsArray
		constexpr auto EmitterScalabilitySettings = 0x58; // FNiagaraEmitterScalabilitySettingsArray
	}

	namespace n_URadarChart {
		constexpr auto Segments = 0x108; // TArray<FRadarChartSegment>
		constexpr auto bWrapWithInvalidationPanel = 0x118; // char : 1
		constexpr auto bDrawLabels = 0x118; // char : 1
		constexpr auto bDrawBackground = 0x118; // char : 1
		constexpr auto bDrawOutline = 0x118; // char : 1
		constexpr auto bDrawSegmentCuts = 0x118; // char : 1
		constexpr auto bDrawCutsOnTop = 0x118; // char : 1
		constexpr auto bDrawSegmentDividers = 0x118; // char : 1
		constexpr auto bDrawDividersOnTop = 0x118; // char : 1
		constexpr auto bKeepAspectRatio = 0x119; // char : 1
		constexpr auto ChartScale = 0x11c; // float
		constexpr auto Margin = 0x120; // FVector2D
		constexpr auto LabelColor = 0x128; // FRadarChartColorOverwrite
		constexpr auto LabelFont = 0x140; // FSlateFontInfo
		constexpr auto IconSize = 0x198; // FVector2D
		constexpr auto BGAppearance = 0x1a0; // FRadarChartAppearance
		constexpr auto BGColorOverwrite = 0x1c8; // FRadarChartColorOverwrite
		constexpr auto OutlineThickness = 0x1dc; // float
		constexpr auto OutlineColor = 0x1e0; // FLinearColor
		constexpr auto SegmentCutsThickness = 0x1f0; // float
		constexpr auto SegmentCutsColor = 0x1f4; // FLinearColor
		constexpr auto SegmentDividerThickness = 0x204; // float
		constexpr auto SegmentDividersCount = 0x208; // char
		constexpr auto FromSegmentDividersCount = 0x209; // char
		constexpr auto SegmentDividerColor = 0x20c; // FLinearColor
		constexpr auto ValuesAppearance = 0x220; // FRadarChartAppearance
		constexpr auto ValueLayers = 0x248; // TArray<FRadarChartValueLayer>
		constexpr auto BackgroundMID = 0x268; // UMaterialInstanceDynamic*
		constexpr auto ValuesMID = 0x270; // UMaterialInstanceDynamic*
		constexpr auto OpaqueMaterial = 0x278; // UMaterialInterface*
		constexpr auto TranslucentMaterial = 0x280; // UMaterialInterface*
		constexpr auto AdditiveMaterial = 0x288; // UMaterialInterface*
	}

	namespace n_USkeleton {
		constexpr auto BoneTree = 0x38; // TArray<FBoneNode>
		constexpr auto RefLocalPoses = 0x48; // TArray<FTransform>
		constexpr auto VirtualBoneGuid = 0x170; // FGuid
		constexpr auto VirtualBones = 0x180; // TArray<FVirtualBone>
		constexpr auto Sockets = 0x190; // TArray<USkeletalMeshSocket*>
		constexpr auto SmartNames = 0x1f0; // FSmartNameContainer
		constexpr auto BlendProfiles = 0x270; // TArray<UBlendProfile*>
		constexpr auto SlotGroups = 0x280; // TArray<FAnimSlotGroup>
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
	}

	namespace n_UBTTask_RunBehavior {
		constexpr auto BehaviorAsset = 0x70; // UBehaviorTree*
	}

	namespace n_ASGStructureTurret {
		constexpr auto SkeletalMesh = 0xf70; // USkeletalMeshComponent*
		constexpr auto LoopFireAudio = 0xf78; // USGAudioComponent*
		constexpr auto SiegeType = 0xf80; // ESiegeType
		constexpr auto TurnRotaionMulti = 0xf84; // float
		constexpr auto TPVCameraPitchMin = 0xf88; // float
		constexpr auto TPVCameraPitchMax = 0xf8c; // float
		constexpr auto TPVCameraYawMin = 0xf90; // float
		constexpr auto TPVCameraYawMax = 0xf94; // float
		constexpr auto bDrawDebugRotate = 0xf98; // char : 1
		constexpr auto bDrawChargeDebug = 0xf98; // char : 1
		constexpr auto LastServerUpdateSent = 0xfa0; // double
		constexpr auto WantYawViewRotation = 0xfa8; // float
		constexpr auto WantPitchViewRotation = 0xfac; // float
		constexpr auto YawViewRotation = 0xfb0; // float
		constexpr auto PitchViewRotation = 0xfb4; // float
		constexpr auto LocalViewYaw = 0xfb8; // float
		constexpr auto LocalViewPitch = 0xfbc; // float
		constexpr auto LoopFireSoundID = 0xfc0; // FName
		constexpr auto FireMode = 0xfc8; // ETurretFireMode
		constexpr auto ProjectileFireDelayTime = 0xfcc; // float
		constexpr auto ProjectileFireDelayTimerHandle = 0xfd0; // FTimerHandle
		constexpr auto ProjectileRange = 0xfd8; // float
		constexpr auto ChangedGravityProjectileRangeMulti = 0xfdc; // float
		constexpr auto FireStageMaxNum = 0xfe0; // int32_t
		constexpr auto PerStageVelocityMul = 0xfe8; // TArray<float>
		constexpr auto bFireNeedAmmo = 0xff8; // char : 1
		constexpr auto MaxAmmo = 0xffc; // int32_t
		constexpr auto bReloadMustdReloadMaxAmmo = 0x1000; // char : 1
		constexpr auto PerAmmoSpawnProjectileAmount = 0x1004; // int32_t
		constexpr auto CurrentAmmo = 0x1008; // int32_t
		constexpr auto AmmoPiercenessOverride = 0x100c; // int32_t
		constexpr auto bSpawnProjectile = 0x1010; // char : 1
		constexpr auto bReloadActionSpawnProjectile = 0x1010; // char : 1
		constexpr auto ProjectileSocketName = 0x1018; // TArray<FName>
		constexpr auto Projectile = 0x1028; // TArray<ASGProjectile*>
		constexpr auto LastProjectile = 0x1038; // TWeakObjectPtr<ASGProjectile>
		constexpr auto DefaultAmmoItemTemplate = 0x1040; // USGItem*
		constexpr auto CurrentAmmoItemTemplate = 0x1048; // USGItem*
		constexpr auto AllAmmoItemTemplates = 0x1050; // TArray<USGItem*>
		constexpr auto FreeAmmoForNPC = 0x1060; // USGItem*
		constexpr auto bRecordNetPlayFireLocation = 0x1068; // char : 1
		constexpr auto NetPlayFireLocation = 0x106c; // FVector
		constexpr auto NetPlayFireRotation = 0x1078; // FRotator
		constexpr auto FireAllAmmo = 0x1084; // char : 1
		constexpr auto NeedReloadTime = 0x1088; // float
		constexpr auto MinStoreFreeVelocityMul = 0x108c; // float
		constexpr auto MaxStoreFreeVelocityMul = 0x1090; // float
		constexpr auto CurrentStoringTime = 0x1094; // float
		constexpr auto bSpawnFireParticle = 0x1098; // char : 1
		constexpr auto bCreateParticleWhenPress = 0x1098; // char : 1
		constexpr auto FireParticleSystem = 0x10a0; // UParticleSystem*
		constexpr auto bCanNpcAIControl = 0x10b0; // char : 1
		constexpr auto bNeedNpcActiveAI = 0x10b0; // char : 1
		constexpr auto bAIControlSwitch = 0x10b0; // char : 1
		constexpr auto bAttackHostileUntamed = 0x10b0; // char : 1
		constexpr auto bAttackUnhostileUntamed = 0x10b1; // char : 1
		constexpr auto bAttackPlayerUints = 0x10b1; // char : 1
		constexpr auto bAttackPlayer = 0x10b1; // char : 1
		constexpr auto bAttackStructures = 0x10b1; // char : 1
		constexpr auto AIAttackRangeMode = 0x10b2; // ETurretAIAttackRangeMode
		constexpr auto SightCheckTurretBodyRadius = 0x10b4; // int32_t
		constexpr auto SightCheckRadiusMin = 0x10b8; // int32_t
		constexpr auto SightCheckRadiusMidddle = 0x10bc; // int32_t
		constexpr auto SightCheckRadiusMax = 0x10c0; // int32_t
		constexpr auto NpcAIControlEnterWoking = 0x10c4; // char : 1
		constexpr auto PlayerControlEnterWoking = 0x10c4; // char : 1
		constexpr auto AllowNpcControlClass = 0x10c8; // TArray<ABaseCharacter*>
		constexpr auto bShowAIDebug = 0x10d8; // char : 1
		constexpr auto bDebugTraceProjectile = 0x10d8; // char : 1
		constexpr auto AttackHoldTime = 0x10dc; // float
		constexpr auto AttackWaitTime = 0x10e0; // float
		constexpr auto LockTargetTime = 0x10e4; // float
		constexpr auto MaxLockTargetTime = 0x10e8; // float
		constexpr auto RotateTickInterval = 0x10f4; // float
		constexpr auto TurretTurnSpeed = 0x10f8; // float
		constexpr auto TurretPitchTurnSpeed = 0x10fc; // float
		constexpr auto TurretYawTolerance = 0x1100; // float
		constexpr auto TurretPitchTolerance = 0x1104; // float
		constexpr auto AimBoneName = 0x1108; // FName
		constexpr auto bAIAttackTargetBehindWall = 0x1110; // char : 1
		constexpr auto AIUseFollowProjectileRatio = 0x1114; // float
		constexpr auto FollowProjectileParticleSystem = 0x1118; // UParticleSystem*
		constexpr auto FollowProjectileParticleSocket = 0x1120; // FName
		constexpr auto ProjectileParticleLengthRatio = 0x1128; // float
		constexpr auto LoadAmmoWithoutTarget = 0x112c; // char : 1
		constexpr auto bHideControlNPCByBox = 0x112c; // char : 1
		constexpr auto HideControlNPCBoxTag = 0x1130; // FName
		constexpr auto AIMustHitInterval = 0x1138; // float
		constexpr auto LastAIMustHitTime = 0x1140; // FDateTime
		constexpr auto bIsFireOilJar = 0x1148; // char : 1
		constexpr auto TriggerBoxScale = 0x114c; // FVector
		constexpr auto TriggerBoxOffset = 0x1158; // FVector
		constexpr auto DefaultTraceHeight = 0x1164; // float
		constexpr auto FireOilJarBoxComp = 0x1168; // UBoxComponent*
		constexpr auto EnemyActor = 0x1194; // TWeakObjectPtr<AActor>
		constexpr auto EnemyPlayers = 0x11a0; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EnemyGenerals = 0x11b0; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EnemyStructures = 0x11c0; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EnemyHorses = 0x11d0; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto EnemyAnimals = 0x11e0; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto DelayStartAITime = 0x11f4; // float
		constexpr auto AttackedTargetRecordNumLimit = 0x1200; // int32_t
		constexpr auto bEnableAIAttackLog = 0x1204; // char : 1
		constexpr auto AttackedTargetsInfoArray = 0x1208; // TArray<FAIAttackedTargetInfo>
		constexpr auto bUseLaserProjectile = 0x1220; // char
		constexpr auto bBattlePlatNeedEnemyFire = 0x1248; // char : 1
		constexpr auto bPlayerAutoAttackCheckNeedEnemyFire = 0x1248; // char : 1
		constexpr auto bCanotSetAttackRange = 0x1248; // char : 1
		constexpr auto bSupportPlayerAutoAttack = 0x1248; // char : 1
		constexpr auto bPlayerAutoAttackSwitch = 0x1248; // char : 1
		constexpr auto bPlayerFireCameraFree = 0x1248; // char : 1
		constexpr auto FireCameraArmLength = 0x124c; // float
		constexpr auto FireCameraOffset = 0x1250; // FVector
		constexpr auto BattlePlatEnemyCheckAllTargets = 0x1260; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto ControllerWeaponAttackRadiusExtra = 0x1270; // float
		constexpr auto ControllerWeaponAttackAngle = 0x1274; // float
		constexpr auto LastSendControllerRotationTime = 0x1278; // double
		constexpr auto IsCheckTraceForDamage = 0x1280; // char : 1
		constexpr auto IsCheckInWaterForAttack = 0x1280; // char : 1
		constexpr auto InWaterDistance = 0x1284; // float
		constexpr auto bEnableLaunchCharacter = 0x1288; // char : 1
		constexpr auto CurrentFireStage = 0x128c; // int32_t
		constexpr auto TurretFireStatus = 0x1290; // ETurretFireStatus
		constexpr auto FireMontage = 0x1298; // UAnimMontage*
		constexpr auto StopFireMontage = 0x12a0; // UAnimMontage*
		constexpr auto ReloadMontage = 0x12a8; // UAnimMontage*
		constexpr auto CharacterFireMontage = 0x12b0; // UAnimMontage*
		constexpr auto CharacterStopFireMontage = 0x12b8; // UAnimMontage*
		constexpr auto CharacterReloadMontage = 0x12c0; // UAnimMontage*
		constexpr auto bOverrideProjectileDamageType = 0x12c8; // char : 1
		constexpr auto OverrideProjectileDamageType = 0x12c9; // EDamageType
		constexpr auto ShootHalfAngle = 0x12cc; // float
		constexpr auto StartFireSocket = 0x12d0; // TArray<FName>
		constexpr auto MaxFollowDistance = 0x12e0; // float
		constexpr auto PitchDemostartion = 0x1334; // float
		constexpr auto YawDemostartion = 0x1338; // float
		constexpr auto Demonstration = 0x133c; // int32_t
		constexpr auto DemonstrationWave = 0x1340; // int32_t
		constexpr auto DemonstrationPerWaveTime = 0x1344; // float
		constexpr auto PerDelayDemonstrationTime = 0x1348; // float
		constexpr auto DemoLength = 0x134c; // float
		constexpr auto bUseStoreFreeReloadCanFire = 0x1350; // char : 1
		constexpr auto bStoreFreeReloadCanFire = 0x1350; // char : 1
		constexpr auto ReloadMontagePlayRate = 0x1354; // float
		constexpr auto bShowCrossHair = 0x1359; // char : 1
		constexpr auto TipsText = 0x1360; // FText
		constexpr auto DelayReloadHandle = 0x1378; // FTimerHandle
		constexpr auto CurrentAttacker = 0x1384; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto FollowProjectileTime = 0x138c; // float
		constexpr auto StopFollowProjectileTime = 0x1390; // float
		constexpr auto ProjectileDamageMulti = 0x1394; // float
		constexpr auto CollectionDamageMulti = 0x1398; // float
		constexpr auto FireProjectileVelocityMulti = 0x139c; // float
		constexpr auto bEnableDurable = 0x13a0; // char : 1
		constexpr auto bEnableDamageDurable = 0x13a0; // char : 1
		constexpr auto HPLossRatioPerFire = 0x13a4; // float
		constexpr auto ChargeDamage = 0x13ac; // float
		constexpr auto SeatFunction = 0x13b0; // TMap<int32_t, ESiegeSeatFunction>
		constexpr auto MinStoreFreeStartTime = 0x1404; // float
		constexpr auto SelfChargeBox = 0x1408; // FVector
		constexpr auto SelfChargeStartSocketName = 0x1414; // FName
		constexpr auto SelfChargeEndSocketName = 0x141c; // FName
		constexpr auto MeleeAttackIgnoreActors = 0x1428; // TArray<AActor*>
		constexpr auto ChargeAttackDamageType = 0x1438; // EDamageType
		constexpr auto ChargeCollectionDamage = 0x143c; // float
		constexpr auto ChargeDamageType = 0x1440; // USGDamageType*
		constexpr auto bCanRotateFire = 0x1448; // char : 1
		constexpr auto bIsBreakDefense = 0x1460; // char : 1
		constexpr auto FireParticleSocket = 0x1464; // FName
		constexpr auto bPlayFireCameraShake = 0x146c; // char : 1
		constexpr auto MaxShakeMoveCameraRotator = 0x1470; // FRotator
		constexpr auto MinShakeMoveCameraRotator = 0x147c; // FRotator
		constexpr auto FireCameraShake = 0x1488; // UMatineeCameraShake*
		constexpr auto GeneralSkillDamageMultiAddMulti = 0x1490; // float
		constexpr auto GeneralPerkDamageMultiAddMulti = 0x1494; // float
		constexpr auto DistanceAttenuationCurve = 0x1498; // UCurveFloat*
		constexpr auto bIgnoreSkillPunish = 0x14a0; // char : 1
		constexpr auto FireAddSkillExp = 0x14a4; // float
		constexpr auto AttackAddSkillExp = 0x14a8; // float
		constexpr auto bShowScaleplate = 0x14b8; // char : 1
		constexpr auto AttackTenacity = 0x14bc; // int32_t
		constexpr auto bAddAggroToSeatedCharacter = 0x14d0; // char : 1
		constexpr auto DispalyTurretAreaCheckRadius = 0x14d4; // float
	}

	namespace n_UUI_TransportMachineGeneral {
		constexpr auto TransportGeneralItemTemplate = 0x2f8; // UUI_TransportGeneralItem*
		constexpr auto ScrollLevelList = 0x308; // UScrollBox*
		constexpr auto ScrollDBList = 0x310; // UScrollBox*
		constexpr auto BtnTotalAdd = 0x338; // UButton*
		constexpr auto BtbTotalRemove = 0x340; // UButton*
		constexpr auto BtnSelectedAdd = 0x348; // UButton*
		constexpr auto BtbSelectedRemove = 0x350; // UButton*
		constexpr auto TbChunkNum = 0x358; // UTextBlock*
	}

	namespace n_UNN_CraftPerkSlot {
		constexpr auto icon = 0x260; // UImage*
		constexpr auto BindCraftPerk = 0x268; // USGCraftPerk*
		constexpr auto BindItem = 0x270; // TWeakObjectPtr<USGItem>
		constexpr auto ParentUI = 0x278; // UNN_CraftPerkGroupSlot*
		constexpr auto bLearned = 0x280; // char : 1
		constexpr auto RootUI = 0x288; // USGUI*
		constexpr auto DefaultToolTipsClass = 0x290; // USGToolTipWidget*
	}

	namespace n_UNetworkSettings {
		constexpr auto bVerifyPeer = 0x38; // char : 1
		constexpr auto bEnableMultiplayerWorldOriginRebasing = 0x38; // char : 1
		constexpr auto MaxRepArraySize = 0x3c; // int32_t
		constexpr auto MaxRepArrayMemory = 0x40; // int32_t
		constexpr auto NetworkEmulationProfiles = 0x48; // TArray<FNetworkEmulationProfileDescription>
	}

	namespace n_UMRMeshComponent {
		constexpr auto Material = 0x498; // UMaterialInterface*
		constexpr auto WireframeMaterial = 0x4a0; // UMaterialInterface*
		constexpr auto bCreateMeshProxySections = 0x4a8; // bool
		constexpr auto bUpdateNavMeshOnMeshUpdate = 0x4a9; // bool
		constexpr auto bNeverCreateCollisionMesh = 0x4aa; // bool
		constexpr auto CachedBodySetup = 0x4b0; // UBodySetup*
		constexpr auto BodySetups = 0x4b8; // TArray<UBodySetup*>
	}

	namespace n_UUI_ZhanLing {
		constexpr auto ZhanLingVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto PrePageButton = 0x2e0; // UButton*
		constexpr auto NextPageButton = 0x2e8; // UButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto ClearAllButton = 0x2f8; // UButton*
		constexpr auto CloseButton = 0x300; // UButton*
		constexpr auto SaveButton = 0x308; // UButton*
		constexpr auto ZhanLingSlotClass = 0x310; // UZhanLingSlot*
		constexpr auto ConfirmSaveUIOverride = 0x318; // UUI_GenericConfirmationDialog*
		constexpr auto NumPerPage = 0x320; // int32_t
	}

	namespace n_UJunSelectorItem {
		constexpr auto NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalColor = 0x288; // FLinearColor
		constexpr auto HoverTexture = 0x298; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverColor = 0x2c0; // FLinearColor
		constexpr auto SelectTexture = 0x2d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectColor = 0x2f8; // FLinearColor
		constexpr auto NormalTextColor = 0x308; // FLinearColor
		constexpr auto HoverTextColor = 0x318; // FLinearColor
		constexpr auto SelectTextColor = 0x328; // FLinearColor
		constexpr auto RollingSubtitlesSpeed = 0x338; // float
		constexpr auto bHovered = 0x33c; // char : 1
		constexpr auto bSelected = 0x33c; // char : 1
		constexpr auto BindJunId = 0x340; // int32_t
		constexpr auto bIsNewJun = 0x344; // char : 1
		constexpr auto JunNameSlot = 0x348; // UCanvasPanelSlot*
		constexpr auto MaxJunNameLength = 0x350; // float
		constexpr auto JunNameLength = 0x354; // float
		constexpr auto BtnBg = 0x368; // UButton*
		constexpr auto TbJunName = 0x370; // UTextBlock*
		constexpr auto ImgBg = 0x378; // UImage*
		constexpr auto JunNameCanvas = 0x380; // UCanvasPanel*
		constexpr auto ImgNewServer = 0x388; // UImage*
		constexpr auto ImgSite = 0x390; // UImage*
	}

	namespace n_UUI_NewsNotice {
		constexpr auto KeyName = 0x268; // FString
		constexpr auto NewsCount = 0x278; // int32_t
		constexpr auto bPopIn = 0x27c; // char : 1
		constexpr auto TbContent = 0x280; // UTextBlock*
		constexpr auto PopInAnim = 0x288; // UWidgetAnimation*
	}

	namespace n_UMaterialExpressionArcsineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USpaceDeformerOperatorFactory {
		constexpr auto SpaceDeformerTool = 0x30; // UMeshSpaceDeformerTool*
	}

	namespace n_UAnimSharingInstance {
		constexpr auto RegisteredActors = 0x28; // TArray<AActor*>
		constexpr auto StateProcessor = 0x88; // UAnimationSharingStateProcessor*
		constexpr auto UsedAnimationSequences = 0xc8; // TArray<UAnimSequence*>
		constexpr auto StateEnum = 0xe8; // UEnum*
		constexpr auto SharingActor = 0xf0; // AActor*
	}

	namespace n_UNiagaraDataInterfaceFieldSystem {
		constexpr auto BlueprintSource = 0x38; // UBlueprint*
		constexpr auto SourceActor = 0x40; // AActor*
		constexpr auto FieldDimensions = 0x48; // FIntVector
		constexpr auto MinBounds = 0x54; // FVector
		constexpr auto MaxBounds = 0x60; // FVector
	}

	namespace n_AFishManagerVolume {
		constexpr auto FlockTypes = 0x348; // TArray<AFlockFish*>
		constexpr auto NumInFlock = 0x358; // TArray<float>
		constexpr auto OptimizationCheckTime = 0x368; // float
		constexpr auto OptimizationDistance = 0x36c; // float
		constexpr auto HideResetTime = 0x374; // float
		constexpr auto DebugShowArea = 0x378; // bool
		constexpr auto DebugFishMove = 0x379; // bool
		constexpr auto DeathExploitComponentTemplate = 0x380; // USGExploitComponent*
	}

	namespace n_UAnimSkill_LadderData {
		constexpr auto TMap_AnimCurvesName = 0x30; // TMap<EAnimCurve, FName>
		constexpr auto LadderTraceSettings = 0x80; // FLadderTraceSettings
		constexpr auto LadderStepUpStartOffset = 0x128; // FVector
		constexpr auto LadderParams = 0x138; // TArray<FLadderParams>
		constexpr auto LadderComplexParams = 0x150; // FLadderComplexParams
	}

	namespace n_UAsyncActionChangePrimaryAssetBundles {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_USoundSourceBus {
		constexpr auto SourceBusChannels = 0x370; // ESourceBusChannels
		constexpr auto SourceBusDuration = 0x374; // float
		constexpr auto AudioBus = 0x378; // UAudioBus*
		constexpr auto bAutoDeactivateWhenSilent = 0x380; // char : 1
	}

	namespace n_UVoxelBlendMeshesTool {
		constexpr auto BlendProperties = 0x108; // UVoxelBlendMeshesToolProperties*
	}

	namespace n_UGameSpBar {
		constexpr auto SPProgressBarName = 0x260; // FName
		constexpr auto SPImageName = 0x268; // FName
		constexpr auto SPMaterial = 0x270; // UMaterialInterface*
		constexpr auto MaxSPLossImageName = 0x278; // FName
		constexpr auto PbSPMinPercent = 0x280; // float
		constexpr auto PbSPMaxPercent = 0x284; // float
		constexpr auto bShowMaxSPLoss = 0x288; // char : 1
		constexpr auto DynamicSPMat = 0x2d8; // UMaterialInstanceDynamic*
	}

	namespace n_USlider {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto MinValue = 0x11c; // float
		constexpr auto MaxValue = 0x120; // float
		constexpr auto WidgetStyle = 0x128; // FSliderStyle
		constexpr auto Orientation = 0x468; // EOrientation
		constexpr auto SliderBarColor = 0x46c; // FLinearColor
		constexpr auto SliderHandleColor = 0x47c; // FLinearColor
		constexpr auto IndentHandle = 0x48c; // bool
		constexpr auto Locked = 0x48d; // bool
		constexpr auto MouseUsesStep = 0x48e; // bool
		constexpr auto RequiresControllerLock = 0x48f; // bool
		constexpr auto StepSize = 0x490; // float
		constexpr auto IsFocusable = 0x494; // bool
		constexpr auto OnMouseCaptureBegin = 0x498; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x4d8; // FMulticastInlineDelegate
	}

	namespace n_UBakeMeshAttributeMapsToolProperties {
		constexpr auto MapType = 0x60; // EBakeMapType
		constexpr auto Resolution = 0x64; // EBakeTextureResolution
		constexpr auto UVLayer = 0x68; // FString
		constexpr auto UVLayerNamesList = 0x78; // TArray<FString>
		constexpr auto bUseWorldSpace = 0x88; // bool
		constexpr auto Result = 0x90; // UTexture2D*
	}

	namespace n_UMiniMapPOI_Actor {
		constexpr auto bShowHeightIndicator = 0x390; // char : 1
		constexpr auto AcceptableHeightDiff = 0x394; // float
		constexpr auto bFollowActorRotation = 0x398; // char : 1
		constexpr auto UpArrow = 0x3a8; // UImage*
		constexpr auto DownArrow = 0x3b0; // UImage*
	}

	namespace n_UUI_JueWei {
		constexpr auto CurrentUniformGrid = 0x2d8; // UUniformGridPanel*
		constexpr auto PreviewUniformGrid = 0x2e0; // UUniformGridPanel*
		constexpr auto ConditionBox = 0x2e8; // UVerticalBox*
		constexpr auto UpgradeButton = 0x2f0; // UButton*
		constexpr auto HonorPointText = 0x2f8; // UTextBlock*
		constexpr auto HonorPointProgressBar = 0x300; // UProgressBar*
		constexpr auto UpgradeTextBlock = 0x308; // UTextBlock*
		constexpr auto JueweiSlotNames = 0x310; // TArray<FName>
		constexpr auto JueWeiPropSlotTemplate = 0x320; // UJueWeiPropSlot*
		constexpr auto JueWeiConditionSlotTemplate = 0x328; // UJueWeiConditionSlot*
		constexpr auto CountsPerRow = 0x330; // int32_t
		constexpr auto AvailableColor = 0x334; // FLinearColor
		constexpr auto UnavailableColor = 0x344; // FLinearColor
		constexpr auto SelectJueWei = 0x354; // int32_t
		constexpr auto JueWeiLevel = 0x358; // int32_t
		constexpr auto LastPlayerJueWei = 0x35c; // int32_t
		constexpr auto NewJueWeiLevel = 0x360; // int32_t
	}

	namespace n_UPhysicsHandleComponent {
		constexpr auto GrabbedComponent = 0xc0; // UPrimitiveComponent*
		constexpr auto bSoftAngularConstraint = 0xd0; // char : 1
		constexpr auto bSoftLinearConstraint = 0xd0; // char : 1
		constexpr auto bInterpolateTarget = 0xd0; // char : 1
		constexpr auto LinearDamping = 0xd4; // float
		constexpr auto LinearStiffness = 0xd8; // float
		constexpr auto AngularDamping = 0xdc; // float
		constexpr auto AngularStiffness = 0xe0; // float
		constexpr auto InterpolationSpeed = 0x150; // float
	}

	namespace n_UNavRelevantComponent {
		constexpr auto bAttachToOwnersRoot = 0xe4; // char : 1
		constexpr auto CachedNavParent = 0xe8; // UObject*
	}

	namespace n_USynthComponent {
		constexpr auto bAutoDestroy = 0x208; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x208; // char : 1
		constexpr auto bAllowSpatialization = 0x208; // char : 1
		constexpr auto bOverrideAttenuation = 0x208; // char : 1
		constexpr auto bOutputToBusOnly = 0x20c; // char : 1
		constexpr auto AttenuationSettings = 0x210; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x218; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x5b8; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x5c0; // TSet<USoundConcurrency*>
		constexpr auto SoundClass = 0x610; // USoundClass*
		constexpr auto SourceEffectChain = 0x618; // USoundEffectSourcePresetChain*
		constexpr auto SoundSubmix = 0x620; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x628; // TArray<FSoundSubmixSendInfo>
		constexpr auto BusSends = 0x638; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x648; // TArray<FSoundSourceBusSendInfo>
		constexpr auto bIsUISound = 0x658; // char : 1
		constexpr auto bIsPreviewSound = 0x658; // char : 1
		constexpr auto EnvelopeFollowerAttackTime = 0x65c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x660; // int32_t
		constexpr auto OnAudioEnvelopeValue = 0x668; // FMulticastInlineDelegate
		constexpr auto Synth = 0x698; // USynthSound*
		constexpr auto AudioComponent = 0x6a0; // UAudioComponent*
	}

	namespace n_UVOIPTalker {
		constexpr auto Settings = 0xc0; // FVoiceSettings
	}

	namespace n_UMovieSceneWidgetMaterialTrack {
		constexpr auto BrushPropertyNamePath = 0x90; // TArray<FName>
		constexpr auto TrackName = 0xa0; // FName
	}

	namespace n_USynthComponentToneGenerator {
		constexpr auto Frequency = 0x6d0; // float
		constexpr auto Volume = 0x6d4; // float
	}

	namespace n_UJueWeiButtonSlot {
		constexpr auto IconImage = 0x2d8; // UImage*
		constexpr auto UnlockImage = 0x2e0; // UImage*
		constexpr auto BGImage = 0x2e8; // UImage*
		constexpr auto NameTextBlock = 0x2f0; // UTextBlock*
		constexpr auto NormalTexture = 0x2f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ActiveTexture = 0x320; // TSoftObjectPtr<UTexture2D>
		constexpr auto JueWeiLevel = 0x348; // int32_t
		constexpr auto PlayerJueWeiLevel = 0x34c; // int32_t
		constexpr auto NewJueWeiLevel = 0x350; // int32_t
	}

	namespace n_UAxisAngleGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto AngleSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bInInteraction = 0x88; // bool
		constexpr auto RotationOrigin = 0x8c; // FVector
		constexpr auto RotationAxis = 0x98; // FVector
		constexpr auto RotationPlaneX = 0xa4; // FVector
		constexpr auto RotationPlaneY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartAngle = 0xd4; // float
		constexpr auto InteractionCurAngle = 0xd8; // float
	}

	namespace n_UUI_ApplyGuildConfirm {
		constexpr auto AlertCheckBox = 0x3e8; // UCheckBox*
		constexpr auto AlertText = 0x3f0; // UTextBlock*
		constexpr auto NormalAlertColor = 0x3f8; // FSlateColor
		constexpr auto InvalidAlertColor = 0x420; // FSlateColor
		constexpr auto bDefaultAlertChecked = 0x448; // char : 1
	}

	namespace n_UGameCharacterQuestItem {
		constexpr auto QuestObjectTemplate = 0x2d8; // UGameCharacterQuestObject*
		constexpr auto ObjectListVertical = 0x2e0; // UVerticalBox*
		constexpr auto RewardButton = 0x2e8; // UButton*
		constexpr auto RewardPanel = 0x2f0; // UCanvasPanel*
		constexpr auto BGImage = 0x2f8; // UImage*
		constexpr auto QuestObjMargin = 0x300; // FMargin
		constexpr auto AnimPlaySpeed = 0x310; // float
		constexpr auto CompleteAnimName = 0x314; // FName
		constexpr auto TrunkQuestBG = 0x320; // TSoftObjectPtr<UTexture2D>
		constexpr auto BranchQuestBG = 0x348; // TSoftObjectPtr<UTexture2D>
		constexpr auto DailyQuestBG = 0x370; // TSoftObjectPtr<UTexture2D>
		constexpr auto WeeklyQuestBG = 0x398; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMiniMapPOI_Self {
		constexpr auto LightCanvas = 0x3c0; // UCanvasPanel*
		constexpr auto OutCanvas = 0x3c8; // UCanvasPanel*
	}

	namespace n_UMaterialExpressionGIReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto StaticIndirect = 0x54; // FExpressionInput
		constexpr auto DynamicIndirect = 0x68; // FExpressionInput
	}

	namespace n_UUI_Game {
		constexpr auto bHideAllExistingWidgetsType = 0x2d8; // int32_t
		constexpr auto MainPanel = 0x2e0; // UCanvasPanel*
		constexpr auto OnlyShortCutPanel = 0x2e8; // UCanvasPanel*
		constexpr auto OtherPanel = 0x2f0; // UCanvasPanel*
		constexpr auto ShortCutPanel = 0x2f8; // UN_ShortCutPanel*
		constexpr auto ShortCutVerticalBox = 0x300; // UVerticalBox*
		constexpr auto ShortCutCanvasPanel = 0x308; // UCanvasPanel*
		constexpr auto GeneralShortCutPanel = 0x310; // UGeneralShortCutPanel*
		constexpr auto CharacterStatusPanel = 0x318; // UGameCharacterStatusPanel*
		constexpr auto CharacterBuffPanel = 0x320; // UGameCharacterBuffPanel*
		constexpr auto QuestPanel = 0x328; // UGameCharacterQuestPanel*
		constexpr auto AttackTargetCrosshairs = 0x330; // UUI_Crosshairs*
		constexpr auto PbBreathe = 0x338; // UProgressBar*
		constexpr auto OccupyFlagPanel = 0x340; // UOccupyFlagPanel*
		constexpr auto PbOperation = 0x348; // UProgressBar*
		constexpr auto PbRescue = 0x350; // UProgressBar*
		constexpr auto TbResueTips = 0x358; // UTextBlock*
		constexpr auto RescueText = 0x360; // FText
		constexpr auto BeRescueText = 0x378; // FText
		constexpr auto CoolDownTimeCanvas = 0x390; // UCanvasPanel*
		constexpr auto TbCoolDownTime = 0x398; // UTextBlock*
		constexpr auto AimPointSizeBox = 0x3a0; // USizeBox*
		constexpr auto CreateStructureInfoPanel = 0x3a8; // UCreateStructureInfoPanel*
		constexpr auto ChatPannel = 0x3b0; // UUI_Chat*
		constexpr auto TbCapitalGold = 0x3b8; // UTextBlock*
		constexpr auto InteractiveMenuText = 0x3c0; // UTextBlock*
		constexpr auto InteractivePanel = 0x3c8; // UCanvasPanel*
		constexpr auto ViewGeneralPanel = 0x3d0; // UCanvasPanel*
		constexpr auto SelfItemCraftSlot = 0x3d8; // UN_ItemCraftQueueSlot*
		constexpr auto StructureItemCraftSlot = 0x3e0; // UN_ItemCraftQueueSlot*
		constexpr auto AimDirectionWidget = 0x3e8; // UUI_AimDirection*
		constexpr auto NewsNotice = 0x3f0; // UUI_NewsNotice*
		constexpr auto WeatherPendant = 0x3f8; // UWeatherPendantWidget*
		constexpr auto GuildEventToolTips = 0x400; // UGuildEventToolTips*
		constexpr auto StatusProgressPanel = 0x408; // UStatusProgressPanel*
		constexpr auto OpenHelpTipsBorder = 0x410; // UBorder*
		constexpr auto GodModeText = 0x418; // UTextBlock*
		constexpr auto GMBillBoardText = 0x420; // UTextBlock*
		constexpr auto InteractiveVolumeCanvas = 0x428; // UCanvasPanel*
		constexpr auto ViewGeneral = 0x430; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto bStartViewGeneral = 0x438; // char : 1
		constexpr auto FinishGeneralTime = 0x43c; // float
		constexpr auto LongHoldTime = 0x440; // float
		constexpr auto ViewGeneralTimer = 0x448; // FTimerHandle
		constexpr auto ViewGeneralTime = 0x450; // float
		constexpr auto bStartViewPackageStation = 0x454; // char : 1
		constexpr auto ViewPackageStationTime = 0x458; // int32_t
		constexpr auto RotateE = 0x460; // UImage*
		constexpr auto FrameRotateE = 0x468; // UImage*
		constexpr auto bCoolTimeForFrame = 0x470; // char : 1
		constexpr auto ViewFrameTimer = 0x478; // FTimerHandle
		constexpr auto GameSiegeTipsUITemplate = 0x480; // UUI_GameSiegeTips*
		constexpr auto GameSiegeTipsUIZOrder = 0x488; // int32_t
		constexpr auto GameHelpTipsTexture = 0x490; // TSoftObjectPtr<UTexture2D>
		constexpr auto OpenedGameHelpTipsTexture = 0x4b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto GameSiegeTipsUI = 0x4e0; // UUI_GameSiegeTips*
		constexpr auto HelpTipsVertical = 0x4e8; // UVerticalBox*
		constexpr auto HelpTipsCanvas = 0x4f0; // UCanvasPanel*
		constexpr auto GameHelpTips = 0x4f8; // FHelpTips [0xa]
		constexpr auto ToggleShowHelpPanelSetting = 0x598; // FHelpTipsSlotSetting
		constexpr auto CurrentGameHelpTipType = 0x608; // EGameHelpTipsType
		constexpr auto bShowInWaterTips = 0x609; // char : 1
		constexpr auto InWaterTipsSlot = 0x610; // TArray<FHelpTipsSlotSetting>
		constexpr auto HelpSlotTemplate = 0x620; // UHelpTipsSlot*
		constexpr auto HelpTipsSlotPadding = 0x630; // FVector4
		constexpr auto bShowRiderBattleTips = 0x640; // char : 1
		constexpr auto ArmorRemindCanvas = 0x648; // UCanvasPanel*
		constexpr auto ArmorRemindBg = 0x650; // UImage*
		constexpr auto ArmorRemindBody = 0x658; // UImage*
		constexpr auto ArmorRemindHead = 0x660; // UImage*
		constexpr auto ArmorRemindLeg = 0x668; // UImage*
		constexpr auto ArmorRemindMainHand = 0x670; // UImage*
		constexpr auto ArmorRemindOffHand = 0x678; // UImage*
		constexpr auto NeedRemindArray = 0x680; // TArray<bool>
		constexpr auto bShowHelpPanel = 0x690; // bool
		constexpr auto bShowQuestPanel = 0x691; // bool
		constexpr auto BattleKillEventSlotClass = 0x698; // UBattleKillEventSlot*
		constexpr auto BattleKillEventShowTimeSec = 0x6a0; // float
		constexpr auto BattleKillEventShowMaxNum = 0x6a4; // int32_t
		constexpr auto BattleKillEventShowPos = 0x6a8; // FVector2D
		constexpr auto BattleKillEventShowYInterval = 0x6b0; // float
		constexpr auto AllBattleKillEventSlot = 0x6b8; // TArray<UBattleKillEventSlot*>
		constexpr auto HelpTipsSlotList = 0x6c8; // TArray<UHelpTipsSlot*>
		constexpr auto OpenHelpTipsText = 0x6e0; // UTextBlock*
		constexpr auto OpenHelpTipsActionName = 0x6e8; // FString
	}

	namespace n_UWidgetSwitcher {
		constexpr auto ActiveWidgetIndex = 0x120; // int32_t
	}

	namespace n_UInterpTrackInstFloatParticleParam {
		constexpr auto ResetFloat = 0x28; // float
	}

	namespace n_ASGStructureFunctionTable {
		constexpr auto bCanNPCUse = 0xf78; // char : 1
		constexpr auto bOnlySeatCharacterCanOpenInventory = 0xf78; // char : 1
	}

	namespace n_UUI_CountySeatAltarSlot {
		constexpr auto Button_Worship = 0x2d8; // UButton*
		constexpr auto Button_Background = 0x2e0; // UButton*
		constexpr auto Image_Icon = 0x2e8; // UImage*
		constexpr auto TextBlock_CapitalCopper = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_EndTime = 0x2f8; // UTextBlock*
		constexpr auto ComboBox_Day = 0x300; // UComboBoxString*
		constexpr auto CanvasPanel_Time = 0x308; // UCanvasPanel*
		constexpr auto CanvasPanel_EndTime = 0x310; // UCanvasPanel*
	}

	namespace n_UEnvQueryTest_Pathfinding {
		constexpr auto TestMode = 0x1f8; // EEnvTestPathfinding
		constexpr auto Context = 0x200; // UEnvQueryContext*
		constexpr auto PathFromContext = 0x208; // FAIDataProviderBoolValue
		constexpr auto SkipUnreachable = 0x240; // FAIDataProviderBoolValue
		constexpr auto FilterClass = 0x278; // UNavigationQueryFilter*
	}

	namespace n_UDistributionVectorUniform {
		constexpr auto Max = 0x38; // FVector
		constexpr auto Min = 0x44; // FVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x55; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x58; // char : 1
	}

	namespace n_UGameplayTasksComponent {
		constexpr auto bIsNetDirty = 0xcc; // char : 1
		constexpr auto SimulatedTasks = 0xd0; // TArray<UGameplayTask*>
		constexpr auto TaskPriorityQueue = 0xe0; // TArray<UGameplayTask*>
		constexpr auto TickingTasks = 0x100; // TArray<UGameplayTask*>
		constexpr auto KnownTasks = 0x110; // TArray<UGameplayTask*>
		constexpr auto OnClaimedResourcesChange = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UGizmoUniformScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // FVector2D
		constexpr auto LastChange = 0x74; // FGizmoVec2ParameterChange
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto CurScaleNormal = 0x90; // FVector
		constexpr auto CurScaleAxisX = 0x9c; // FVector
		constexpr auto CurScaleAxisY = 0xa8; // FVector
		constexpr auto InitialTransform = 0xc0; // FTransform
	}

	namespace n_UMaterialExpressionArctangent2Fast {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
	}

	namespace n_UNiagaraDataInterfaceArrayBool {
		constexpr auto BoolData = 0x50; // TArray<bool>
	}

	namespace n_AUIWSCapture {
		constexpr auto SceneCaptureComp = 0x310; // USceneCaptureComponent2D*
		constexpr auto SceneRoot = 0x318; // USceneComponent*
		constexpr auto DrawMID = 0x320; // UMaterialInstanceDynamic*
		constexpr auto moveoffset = 0x328; // FVector
		constexpr auto RTPersistent = 0x338; // UTextureRenderTarget2D*
		constexpr auto RTCapture = 0x340; // UTextureRenderTarget2D*
		constexpr auto MPC_UIWSWaterBodies = 0x348; // UMaterialParameterCollection*
	}

	namespace n_ARecastNavMesh {
		constexpr auto bDrawTriangleEdges = 0x518; // char : 1
		constexpr auto bDrawPolyEdges = 0x518; // char : 1
		constexpr auto bDrawFilledPolys = 0x518; // char : 1
		constexpr auto bDrawNavMeshEdges = 0x518; // char : 1
		constexpr auto bDrawTileBounds = 0x518; // char : 1
		constexpr auto bDrawPathCollidingGeometry = 0x518; // char : 1
		constexpr auto bDrawTileLabels = 0x518; // char : 1
		constexpr auto bDrawPolygonLabels = 0x518; // char : 1
		constexpr auto bDrawDefaultPolygonCost = 0x519; // char : 1
		constexpr auto bDrawLabelsOnPathNodes = 0x519; // char : 1
		constexpr auto bDrawNavLinks = 0x519; // char : 1
		constexpr auto bDrawFailedNavLinks = 0x519; // char : 1
		constexpr auto bDrawClusters = 0x519; // char : 1
		constexpr auto bDrawOctree = 0x519; // char : 1
		constexpr auto bDrawOctreeDetails = 0x519; // char : 1
		constexpr auto bDrawMarkedForbiddenPolys = 0x519; // char : 1
		constexpr auto bDistinctlyDrawTilesBeingBuilt = 0x51a; // char : 1
		constexpr auto DrawOffset = 0x51c; // float
		constexpr auto bFixedTilePoolSize = 0x520; // char : 1
		constexpr auto TilePoolSize = 0x524; // int32_t
		constexpr auto TileSizeUU = 0x528; // float
		constexpr auto CellSize = 0x52c; // float
		constexpr auto CellHeight = 0x530; // float
		constexpr auto AgentRadius = 0x534; // float
		constexpr auto AgentHeight = 0x538; // float
		constexpr auto AgentMaxSlope = 0x53c; // float
		constexpr auto AgentMaxStepHeight = 0x540; // float
		constexpr auto MinRegionArea = 0x544; // float
		constexpr auto MergeRegionSize = 0x548; // float
		constexpr auto MaxSimplificationError = 0x54c; // float
		constexpr auto MaxSimultaneousTileGenerationJobsCount = 0x550; // int32_t
		constexpr auto TileNumberHardLimit = 0x554; // int32_t
		constexpr auto PolyRefTileBits = 0x558; // int32_t
		constexpr auto PolyRefNavPolyBits = 0x55c; // int32_t
		constexpr auto PolyRefSaltBits = 0x560; // int32_t
		constexpr auto NavMeshOriginOffset = 0x564; // FVector
		constexpr auto DefaultDrawDistance = 0x570; // float
		constexpr auto DefaultMaxSearchNodes = 0x574; // float
		constexpr auto DefaultMaxHierarchicalSearchNodes = 0x578; // float
		constexpr auto RegionPartitioning = 0x57c; // ERecastPartitioning
		constexpr auto LayerPartitioning = 0x57d; // ERecastPartitioning
		constexpr auto RegionChunkSplits = 0x580; // int32_t
		constexpr auto LayerChunkSplits = 0x584; // int32_t
		constexpr auto bSortNavigationAreasByCost = 0x588; // char : 1
		constexpr auto bPerformVoxelFiltering = 0x588; // char : 1
		constexpr auto bMarkLowHeightAreas = 0x588; // char : 1
		constexpr auto bUseExtraTopCellWhenMarkingAreas = 0x588; // char : 1
		constexpr auto bFilterLowSpanSequences = 0x588; // char : 1
		constexpr auto bFilterLowSpanFromTileCache = 0x588; // char : 1
		constexpr auto bDoFullyAsyncNavDataGathering = 0x588; // char : 1
		constexpr auto bUseBetterOffsetsFromCorners = 0x588; // char : 1
		constexpr auto bStoreEmptyTileLayers = 0x589; // char : 1
		constexpr auto bUseVirtualFilters = 0x589; // char : 1
		constexpr auto bAllowNavLinkAsPathEnd = 0x589; // char : 1
		constexpr auto bUseVoxelCache = 0x589; // char : 1
		constexpr auto TileSetUpdateInterval = 0x58c; // float
		constexpr auto HeuristicScale = 0x590; // float
		constexpr auto VerticalDeviationFromGroundCompensation = 0x594; // float
	}

	namespace n_UHuangLiEffectText {
		constexpr auto TitleText = 0x260; // UTextBlock*
	}

	namespace n_AAmbientSound {
		constexpr auto AudioComponent = 0x310; // UAudioComponent*
	}

	namespace n_UTransAllianceOfficialSlot {
		constexpr auto GuildNameText = 0x2d8; // UTextBlock*
		constexpr auto GuildLevelText = 0x2e0; // UTextBlock*
		constexpr auto GuildOwnerText = 0x2e8; // UTextBlock*
		constexpr auto MemberCountText = 0x2f0; // UTextBlock*
		constexpr auto BGImage = 0x2f8; // UImage*
		constexpr auto NormalBGTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x328; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UARSaveWorldAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UAnimationSharingStateProcessor {
		constexpr auto AnimationStateEnum = 0x28; // TSoftObjectPtr<UEnum>
	}

	namespace n_USlateVectorArtData {
		constexpr auto VertexData = 0x28; // TArray<FSlateMeshVertex>
		constexpr auto IndexData = 0x38; // TArray<uint32_t>
		constexpr auto Material = 0x48; // UMaterialInterface*
		constexpr auto ExtentMin = 0x50; // FVector2D
		constexpr auto ExtentMax = 0x58; // FVector2D
	}

	namespace n_UBTTask_RunEQSQuery {
		constexpr auto QueryTemplate = 0x98; // UEnvQuery*
		constexpr auto QueryParams = 0xa0; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0xb0; // TArray<FAIDynamicParam>
		constexpr auto RunMode = 0xc0; // EEnvQueryRunMode
		constexpr auto EQSQueryBlackboardKey = 0xc8; // FBlackboardKeySelector
		constexpr auto bUseBBKey = 0xf0; // bool
		constexpr auto EQSRequest = 0xf8; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UBTDecorator_CheckGameplayTagsOnActor {
		constexpr auto ActorToCheck = 0x68; // FBlackboardKeySelector
		constexpr auto TagsToMatch = 0x90; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x98; // FGameplayTagContainer
		constexpr auto CachedDescription = 0xb8; // FString
	}

	namespace n_UAllianceApplySlot {
		constexpr auto ApplyNameText = 0x2d8; // UTextBlock*
		constexpr auto ApplyTimeText = 0x2e0; // UTextBlock*
		constexpr auto ApplyVerifyText = 0x2e8; // UTextBlock*
		constexpr auto AgreeDataButton = 0x2f0; // UDataButton*
		constexpr auto RejectDataButton = 0x2f8; // UDataButton*
	}

	namespace n_UParticleModuleLocationPrimitiveTriangle {
		constexpr auto StartOffset = 0x30; // FRawDistributionVector
		constexpr auto Height = 0x78; // FRawDistributionFloat
		constexpr auto Angle = 0xa8; // FRawDistributionFloat
		constexpr auto Thickness = 0xd8; // FRawDistributionFloat
	}

	namespace n_UParticleModuleVectorFieldScaleOverLife {
		constexpr auto VectorFieldScaleOverLife = 0x30; // UDistributionFloat*
		constexpr auto VectorFieldScaleOverLifeRaw = 0x38; // FRawDistributionFloat
	}

	namespace n_UServerSaltInfo {
		constexpr auto CropIndex = 0x28; // char
		constexpr auto CropDefaultObject = 0x30; // ASGStructureSaltCrop*
		constexpr auto CropLand = 0x38; // ASGStructureSaltLand*
		constexpr auto GrowthRatio = 0x40; // float
		constexpr auto RipeTime = 0x44; // float
		constexpr auto WaterConsumed = 0x48; // float
		constexpr auto HP = 0x4c; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamInt32 {
		constexpr auto Min = 0x38; // int32_t
		constexpr auto Max = 0x3c; // int32_t
	}

	namespace n_USoundNodeModulatorContinuous {
		constexpr auto PitchModulationParams = 0x48; // FModulatorContinuousParams
		constexpr auto VolumeModulationParams = 0x68; // FModulatorContinuousParams
	}

	namespace n_UWheeledVehicleMovementComponent {
		constexpr auto bDeprecatedSpringOffsetMode = 0x150; // char : 1
		constexpr auto bReverseAsBrake = 0x150; // char : 1
		constexpr auto bUseRVOAvoidance = 0x150; // char : 1
		constexpr auto bRawHandbrakeInput = 0x150; // char : 1
		constexpr auto bRawGearUpInput = 0x150; // char : 1
		constexpr auto bRawGearDownInput = 0x150; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x154; // char : 1
		constexpr auto Mass = 0x158; // float
		constexpr auto WheelSetups = 0x160; // TArray<FWheelSetup>
		constexpr auto DragCoefficient = 0x170; // float
		constexpr auto ChassisWidth = 0x174; // float
		constexpr auto ChassisHeight = 0x178; // float
		constexpr auto DragArea = 0x17c; // float
		constexpr auto EstimatedMaxEngineSpeed = 0x180; // float
		constexpr auto MaxEngineRPM = 0x184; // float
		constexpr auto DebugDragMagnitude = 0x188; // float
		constexpr auto InertiaTensorScale = 0x18c; // FVector
		constexpr auto MinNormalizedTireLoad = 0x198; // float
		constexpr auto MinNormalizedTireLoadFiltered = 0x19c; // float
		constexpr auto MaxNormalizedTireLoad = 0x1a0; // float
		constexpr auto MaxNormalizedTireLoadFiltered = 0x1a4; // float
		constexpr auto ThresholdLongitudinalSpeed = 0x1a8; // float
		constexpr auto LowForwardSpeedSubStepCount = 0x1ac; // int32_t
		constexpr auto HighForwardSpeedSubStepCount = 0x1b0; // int32_t
		constexpr auto Wheels = 0x1b8; // TArray<UVehicleWheel*>
		constexpr auto RVOAvoidanceRadius = 0x1e0; // float
		constexpr auto RVOAvoidanceHeight = 0x1e4; // float
		constexpr auto AvoidanceConsiderationRadius = 0x1e8; // float
		constexpr auto RVOSteeringStep = 0x1ec; // float
		constexpr auto RVOThrottleStep = 0x1f0; // float
		constexpr auto AvoidanceUID = 0x1f4; // int32_t
		constexpr auto AvoidanceGroup = 0x1f8; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x1fc; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x200; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x204; // float
		constexpr auto PendingLaunchVelocity = 0x208; // FVector
		constexpr auto ReplicatedState = 0x214; // FReplicatedVehicleState
		constexpr auto RawSteeringInput = 0x22c; // float
		constexpr auto RawThrottleInput = 0x230; // float
		constexpr auto RawBrakeInput = 0x234; // float
		constexpr auto SteeringInput = 0x238; // float
		constexpr auto ThrottleInput = 0x23c; // float
		constexpr auto BrakeInput = 0x240; // float
		constexpr auto HandbrakeInput = 0x244; // float
		constexpr auto IdleBrakeInput = 0x248; // float
		constexpr auto StopThreshold = 0x24c; // float
		constexpr auto WrongDirectionThreshold = 0x250; // float
		constexpr auto ThrottleInputRate = 0x254; // FVehicleInputRate
		constexpr auto BrakeInputRate = 0x25c; // FVehicleInputRate
		constexpr auto HandbrakeInputRate = 0x264; // FVehicleInputRate
		constexpr auto SteeringInputRate = 0x26c; // FVehicleInputRate
		constexpr auto OverrideController = 0x298; // AController*
	}

	namespace n_UParticleModuleColorOverLife {
		constexpr auto ColorOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_UTouchInterface {
		constexpr auto Controls = 0x28; // TArray<FTouchInputControl>
		constexpr auto ActiveOpacity = 0x38; // float
		constexpr auto InactiveOpacity = 0x3c; // float
		constexpr auto TimeUntilDeactive = 0x40; // float
		constexpr auto TimeUntilReset = 0x44; // float
		constexpr auto ActivationDelay = 0x48; // float
		constexpr auto bPreventRecenter = 0x4c; // bool
		constexpr auto StartupDelay = 0x50; // float
	}

	namespace n_UParticleModuleVelocityOverLifetime {
		constexpr auto VelOverLife = 0x38; // FRawDistributionVector
		constexpr auto Absolute = 0x80; // char : 1
	}

	namespace n_UUI_CountySeatAltarPanel {
		constexpr auto VerticalBox_Info = 0x2d8; // UVerticalBox*
		constexpr auto EscButton = 0x2e0; // UButton*
		constexpr auto TextBlock_Capital = 0x2e8; // UTextBlock*
		constexpr auto CountySeatAltarSlotClass = 0x2f0; // UUI_CountySeatAltarSlot*
	}

	namespace n_UEditableGeometryCollectionAdapter {
		constexpr auto GeometryCollection = 0x28; // UGeometryCollection*
		constexpr auto OriginalGeometryCollection = 0x30; // UGeometryCollection*
		constexpr auto GeometryCollectionLODIndex = 0x38; // int32_t
	}

	namespace n_UCollisionProfile {
		constexpr auto Profiles = 0x38; // TArray<FCollisionResponseTemplate>
		constexpr auto DefaultChannelResponses = 0x48; // TArray<FCustomChannelSetup>
		constexpr auto EditProfiles = 0x58; // TArray<FCustomProfile>
		constexpr auto ProfileRedirects = 0x68; // TArray<FRedirector>
		constexpr auto CollisionChannelRedirects = 0x78; // TArray<FRedirector>
	}

	namespace n_UUI_ReportReason {
		constexpr auto MainBorder = 0x260; // UBorder*
		constexpr auto ReasonText = 0x268; // UTextBlock*
		constexpr auto SelectedIcon = 0x270; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalIcon = 0x298; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReportReason = 0x2c0; // EReportReasonType
		constexpr auto ReasonShowText = 0x2c8; // FText
	}

	namespace n_UWBP_KeySettingRadioButton_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto BtnBg = 0x548; // UButton*
		constexpr auto TbTitle = 0x550; // UTextBlock*
		constexpr auto Title = 0x558; // FText
	}

	namespace n_UBTService_Shooting {
		constexpr auto BBKey_ShouldMoving = 0x118; // FBlackboardKeySelector
		constexpr auto BBKey_RunAway = 0x140; // FBlackboardKeySelector
		constexpr auto bIsDrawDebugAttackTrace = 0x230; // char : 1
		constexpr auto AttackTraceChannel = 0x231; // ETraceTypeQuery
		constexpr auto CustomArcParamDistance = 0x234; // FVector2D
		constexpr auto CustomArcParamValue = 0x23c; // FVector2D
		constexpr auto ShootingUpCurve = 0x248; // UCurveFloat*
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector {
		constexpr auto Min = 0x38; // FVector
		constexpr auto Max = 0x44; // FVector
	}

	namespace n_USkeletalMeshLODSettings {
		constexpr auto MinLOD = 0x30; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x34; // FPerPlatformBool
		constexpr auto bOverrideLODStreamingSettings = 0x35; // bool
		constexpr auto bSupportLODStreaming = 0x36; // FPerPlatformBool
		constexpr auto MaxNumStreamedLODs = 0x38; // FPerPlatformInt
		constexpr auto MaxNumOptionalLODs = 0x3c; // FPerPlatformInt
		constexpr auto LODGroups = 0x40; // TArray<FSkeletalMeshLODGroupSettings>
	}

	namespace n_UUI_PreviewMeshInteraction {
		constexpr auto DefaultRotator = 0x260; // FRotator
		constexpr auto DragRotatorSpeed = 0x26c; // float
		constexpr auto DragRotatorMaxSpeed = 0x270; // float
		constexpr auto DragRotatorDeceleration = 0x274; // float
		constexpr auto AutoRotateInterpDuration = 0x278; // float
		constexpr auto AutoRotateInterpCurve = 0x280; // UCurveFloat*
	}

	namespace n_UWidgetTree {
		constexpr auto RootWidget = 0x28; // UWidget*
	}

	namespace n_UTextureRenderTargetCube {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto ClearColor = 0xe4; // FLinearColor
		constexpr auto OverrideFormat = 0xf4; // EPixelFormat
		constexpr auto bHDR = 0xf5; // char : 1
		constexpr auto bForceLinearGamma = 0xf5; // char : 1
	}

	namespace n_UHorizonDialogueMsgTextBlock {
		constexpr auto OnHypertextClickedDelegate = 0x138; // FMulticastInlineDelegate
		constexpr auto OnHypertextPressedDelegate = 0x160; // FMulticastInlineDelegate
		constexpr auto OnHypertextReleasedDelegate = 0x188; // FMulticastInlineDelegate
		constexpr auto OnHypertextHoveredDelegate = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnHypertextUnhoveredDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto OnDialogueMsgLoopFunction = 0x200; // FMulticastInlineDelegate
		constexpr auto OnDialogueMsgCompleteFunction = 0x228; // FMulticastInlineDelegate
		constexpr auto OnSetDialoguePageFunction = 0x250; // FMulticastInlineDelegate
		constexpr auto OnDialoguePageEndFunction = 0x278; // FMulticastInlineDelegate
		constexpr auto OnRebuildDialogueDelegate = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnCustomEventDelegate = 0x2c8; // FMulticastInlineDelegate
		constexpr auto OnCharAdvancedDelegate = 0x2f0; // FMulticastInlineDelegate
		constexpr auto Text = 0x318; // FText
		constexpr auto TextOverFlowWrapMethod = 0x330; // EHorizonDialogueTextOverflowWrapMethod
		constexpr auto TextOverFlowWarpMethod = 0x331; // EHorizonDialogueTextOverflowWarpMethod_DEPRECATED
		constexpr auto DialogueMsgSpeed = 0x388; // float
		constexpr auto bIsStartTickDialogueMsg = 0x38c; // bool
		constexpr auto bIsRepeatDialogueMsg = 0x38d; // bool
		constexpr auto RepeatDialogueMsgInterval = 0x390; // float
		constexpr auto bIsDialogueMsgText = 0x394; // bool
		constexpr auto bIsAutoNextDialogueMsgPage = 0x395; // bool
		constexpr auto AutoNextDialogueMsgPageIntervalRate = 0x398; // float
		constexpr auto AutoNextDialogueMsgPageIntervalMin = 0x39c; // float
		constexpr auto AutoNextDialogueMsgPageIntervalMax = 0x3a0; // float
		constexpr auto bIgnoreTimeDilation = 0x3a4; // bool
		constexpr auto CustomTimeDilation = 0x3a8; // float
		constexpr auto bForceRebuildDialogueMsgText = 0x3ac; // bool
		constexpr auto StyleInfoClassList = 0x3b0; // TArray<UHorizonDialogueStyleInfo*>
		constexpr auto SegmentStyleList = 0x3c0; // TArray<FHorizonDialogueSegmentInfoStyle>
		constexpr auto bIsRichText = 0x3d0; // bool
		constexpr auto ColorAndOpacity = 0x3d8; // FSlateColor
		constexpr auto Font = 0x400; // FSlateFontInfo
		constexpr auto ShadowOffset = 0x458; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x460; // FLinearColor
		constexpr auto Justification = 0x470; // ETextJustify
		constexpr auto LineMargin = 0x474; // FMargin
		constexpr auto DefaultButtonStyleWidgetClass = 0x488; // UHorizonButton*
		constexpr auto DecoratorClasses = 0x490; // TArray<UHorizonDialogueMsgDecorator*>
		constexpr auto StyleInfoList = 0x4f0; // TArray<UHorizonDialogueStyleInfo*>
	}

	namespace n_UCorpsePOITips {
		constexpr auto TbCorpseRemainingTime = 0x288; // UTextBlock*
		constexpr auto LoadingCanvas = 0x290; // UCanvasPanel*
		constexpr auto MainCanvas = 0x298; // UCanvasPanel*
	}

	namespace n_UGuildEventToolTips {
		constexpr auto MainPanel = 0x260; // UCanvasPanel*
		constexpr auto GuildEventImg = 0x268; // UImage*
		constexpr auto GuildEventText = 0x270; // UTextBlock*
		constexpr auto VisibilityTime = 0x278; // float
	}

	namespace n_URewardCondition_Int {
		constexpr auto ConditionType = 0x50; // EValueConditionType
		constexpr auto Value = 0x58; // int64_t
		constexpr auto bSingleCondition = 0x60; // bool
	}

	namespace n_USGGameDataConditionReward {
		constexpr auto ConfigDataTable = 0x28; // UDataTable*
		constexpr auto RewardConditionParam = 0x30; // FRewardConditionParamGroup
		constexpr auto RewardConditionMap = 0x48; // TMap<EStatisticsSetParamReference, FRewardConditionParamMap>
	}

	namespace n_UWBP_ModsManage_C {
		constexpr auto Image = 0x2e8; // UImage*
		constexpr auto Image_31 = 0x2f0; // UImage*
		constexpr auto Image_139 = 0x2f8; // UImage*
	}

	namespace n_UInterpTrackMove {
		constexpr auto PosTrack = 0x70; // FInterpCurveVector
		constexpr auto EulerTrack = 0x88; // FInterpCurveVector
		constexpr auto LookupTrack = 0xa0; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xb0; // FName
		constexpr auto LinCurveTension = 0xb8; // float
		constexpr auto AngCurveTension = 0xbc; // float
		constexpr auto bUseQuatInterpolation = 0xc0; // char : 1
		constexpr auto bShowArrowAtKeys = 0xc0; // char : 1
		constexpr auto bDisableMovement = 0xc0; // char : 1
		constexpr auto bShowTranslationOnCurveEd = 0xc0; // char : 1
		constexpr auto bShowRotationOnCurveEd = 0xc0; // char : 1
		constexpr auto bHide3DTrack = 0xc0; // char : 1
		constexpr auto RotMode = 0xc4; // EInterpTrackMoveRotMode
	}

	namespace n_USpotLightComponent {
		constexpr auto InnerConeAngle = 0x368; // float
		constexpr auto OuterConeAngle = 0x36c; // float
	}

	namespace n_UGridPanel {
		constexpr auto ColumnFill = 0x120; // TArray<float>
		constexpr auto RowFill = 0x130; // TArray<float>
	}

	namespace n_UImgMediaSettings {
		constexpr auto DefaultFrameRate = 0x28; // FFrameRate
		constexpr auto CacheBehindPercentage = 0x30; // float
		constexpr auto CacheSizeGB = 0x34; // float
		constexpr auto CacheThreads = 0x38; // int32_t
		constexpr auto CacheThreadStackSizeKB = 0x3c; // int32_t
		constexpr auto GlobalCacheSizeGB = 0x40; // float
		constexpr auto UseGlobalCache = 0x44; // bool
		constexpr auto ExrDecoderThreads = 0x48; // uint32_t
		constexpr auto DefaultProxy = 0x50; // FString
		constexpr auto UseDefaultProxy = 0x60; // bool
	}

	namespace n_UGameplayTagReponseTable {
		constexpr auto Entries = 0x30; // TArray<FGameplayTagResponseTableEntry>
	}

	namespace n_UMovieSceneCaptureProtocolBase {
		constexpr auto State = 0x50; // EMovieSceneCaptureProtocolState
	}

	namespace n_UMaterialExpressionFmod {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UAISenseConfig_Sight {
		constexpr auto Implementation = 0x48; // UAISense_Sight*
		constexpr auto SightRadius = 0x50; // float
		constexpr auto LoseSightRadius = 0x54; // float
		constexpr auto PeripheralVisionAngleDegrees = 0x58; // float
		constexpr auto DetectionByAffiliation = 0x5c; // FAISenseAffiliationFilter
		constexpr auto AutoSuccessRangeFromLastSeenLocation = 0x60; // float
		constexpr auto PointOfViewBackwardOffset = 0x64; // float
		constexpr auto NearClippingRadius = 0x68; // float
	}

	namespace n_UUI_AllianceApplyList {
		constexpr auto ApplyListPanel = 0x2d8; // UScrollBox*
		constexpr auto PrePageDataButton = 0x2e0; // UDataButton*
		constexpr auto NextPageDataButton = 0x2e8; // UDataButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto ExitButton = 0x2f8; // UButton*
		constexpr auto AllowJoinCheckBox = 0x300; // UCheckBox*
		constexpr auto NameTitleSlot = 0x308; // USortableTitleSlot*
		constexpr auto TimeTitleSlot = 0x310; // USortableTitleSlot*
		constexpr auto ApplyNumPerPage = 0x318; // int32_t
		constexpr auto AllianceApplySlotClass = 0x320; // UAllianceApplySlot*
	}

	namespace n_UMaterialExpressionSine {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UBoneMaskFilter {
		constexpr auto BlendPoses = 0x28; // TArray<FInputBlendPose>
	}

	namespace n_UBrushSculptProperties {
		constexpr auto bIsRemeshingEnabled = 0x60; // bool
		constexpr auto PrimaryBrushType = 0x61; // EDynamicMeshSculptBrushType
		constexpr auto PrimaryBrushSpeed = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
		constexpr auto bFreezeTarget = 0x69; // bool
		constexpr auto SmoothBrushSpeed = 0x6c; // float
		constexpr auto bDetailPreservingSmooth = 0x70; // bool
	}

	namespace n_UUI_N_Shop_BannerStateBtn {
		constexpr auto BannerIndex = 0x3f8; // int32_t
		constexpr auto ParentWptr = 0x3fc; // TWeakObjectPtr<UUI_N_ShopBanner>
	}

	namespace n_UMaterialExpressionFrac {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGuildStoreItemPriceSlot {
		constexpr auto InventorySlot = 0x2d8; // UN_InventorySlot*
		constexpr auto GeneralCampSlot = 0x2e0; // UN_GeneralCampSlot*
		constexpr auto VehicleCampSlot = 0x2e8; // UVehicleCampSlot*
		constexpr auto PriceText = 0x2f0; // UTextBlock*
		constexpr auto PriceTextBox = 0x2f8; // UEditableTextBox*
		constexpr auto StoreTypeText = 0x300; // UTextBlock*
		constexpr auto DescText = 0x308; // UTextBlock*
		constexpr auto AmountText = 0x310; // UTextBlock*
	}

	namespace n_USGSoundDatabase {
		constexpr auto FootStepDataTables = 0x28; // UDataTable* [0x9]
		constexpr auto HitSound = 0x70; // FName
		constexpr auto WillDeadSound = 0x78; // FName
		constexpr auto DeathSound = 0x80; // FName
	}

	namespace n_UUI_N_GuildSkill {
		constexpr auto GuildExpText = 0x2d8; // UTextBlock*
		constexpr auto GuildMoneyText = 0x2e0; // UTextBlock*
		constexpr auto BackButton = 0x2e8; // UButton*
		constexpr auto GuildSkillGroupVerticalBox = 0x2f0; // UVerticalBox*
		constexpr auto UpgradeGuildSkillCanvas = 0x2f8; // UCanvasPanel*
		constexpr auto NeedGuildActiveText = 0x300; // UTextBlock*
		constexpr auto NeedGuildSilverText = 0x308; // UTextBlock*
		constexpr auto UseSelfCopperCheckBox = 0x310; // UCheckBox*
		constexpr auto ConfirmUpgradeButton = 0x318; // UButton*
		constexpr auto CancelUpgradeButton = 0x320; // UButton*
		constexpr auto GuildSkillGroupSlotTemplate = 0x328; // UGuildSkillGroupSlot*
		constexpr auto GuildSkillDrawGroups = 0x330; // TArray<FGuildSkillDrawGroup>
		constexpr auto EnoughColor = 0x340; // FLinearColor
		constexpr auto NotEnoughColor = 0x350; // FLinearColor
		constexpr auto ConfirmUsePersonalUIOverride = 0x360; // UUI_GenericConfirmationDialog*
	}

	namespace n_UUI_SelectRole {
		constexpr auto SelectRoleCameraTemplate = 0x2d8; // ACreateRoleCameraActor*
		constexpr auto DeleteRoleDialogTemplate = 0x2e0; // UDeleteRoleDialog*
		constexpr auto TbServerName = 0x2f0; // UTextBlock*
		constexpr auto TbName = 0x2f8; // UTextBlock*
		constexpr auto DeleteRoleDialog = 0x300; // UDeleteRoleDialog*
		constexpr auto SGPlayerController = 0x308; // ASGPlayerController*
	}

	namespace n_ANavSystemConfigOverride {
		constexpr auto NavigationSystemConfig = 0x310; // UNavigationSystemConfig*
		constexpr auto OverridePolicy = 0x318; // ENavSystemOverridePolicy
		constexpr auto bLoadOnClient = 0x319; // char : 1
	}

	namespace n_UReload_AnimNotify {
		constexpr auto SpawnProjectile = 0x38; // char : 1
		constexpr auto ClearAimState = 0x38; // char : 1
	}

	namespace n_UBrushBaseProperties {
		constexpr auto BrushSize = 0x60; // float
		constexpr auto bSpecifyRadius = 0x64; // bool
		constexpr auto BrushRadius = 0x68; // float
		constexpr auto BrushStrength = 0x6c; // float
		constexpr auto BrushFalloffAmount = 0x70; // float
		constexpr auto bShowStrength = 0x74; // bool
		constexpr auto bShowFalloff = 0x75; // bool
	}

	namespace n_ULocalizedOverlays {
		constexpr auto DefaultOverlays = 0x28; // UBasicOverlays*
		constexpr auto LocaleToOverlaysMap = 0x30; // TMap<FString, UBasicOverlays*>
	}

	namespace n_UItemAuctionSearchNameSlot {
		constexpr auto ButtonSelected = 0x260; // UButton*
		constexpr auto NameText = 0x268; // UTextBlock*
		constexpr auto ButtonCheckedStyle = 0x270; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x4e8; // FButtonStyle
		constexpr auto ParentUI = 0x760; // TWeakObjectPtr<USGUI>
	}

	namespace n_ASGStructureOreFactory {
		constexpr auto CurrentOreDensityData = 0x1010; // TArray<FCurrentOreInfoData>
		constexpr auto CurrentOreType = 0x1020; // int32_t
		constexpr auto CoperWrapperId = 0x1024; // int32_t
		constexpr auto IronWrapperId = 0x1028; // int32_t
		constexpr auto SaltWrapperId = 0x102c; // int32_t
	}

	namespace n_UUIWSGerstnerWaterWaveGeneratorSimple {
		constexpr auto NumWaves = 0x28; // int32_t
		constexpr auto Seed = 0x2c; // int32_t
		constexpr auto Randomness = 0x30; // float
		constexpr auto MinWavelength = 0x34; // float
		constexpr auto MaxWavelength = 0x38; // float
		constexpr auto WavelengthFalloff = 0x3c; // float
		constexpr auto MinAmplitude = 0x40; // float
		constexpr auto MaxAmplitude = 0x44; // float
		constexpr auto AmplitudeFalloff = 0x48; // float
		constexpr auto WindAngleDeg = 0x4c; // float
		constexpr auto DirectionAngularSpreadDeg = 0x50; // float
		constexpr auto SmallWaveSteepness = 0x54; // float
		constexpr auto LargeWaveSteepness = 0x58; // float
		constexpr auto SteepnessFalloff = 0x5c; // float
	}

	namespace n_UUI_ProducerList {
		constexpr auto Image_Mirror = 0x2d8; // UImage*
		constexpr auto Button_Acc = 0x2e0; // UButton*
		constexpr auto Button_Pause = 0x2e8; // UButton*
		constexpr auto Button_Esc = 0x2f0; // UButton*
		constexpr auto MainScrollBox = 0x2f8; // UScrollBox*
		constexpr auto PlayButtonStyle = 0x300; // FButtonStyle
		constexpr auto PasuseButtonStyle = 0x578; // FButtonStyle
		constexpr auto Speed1ButtonStyle = 0x7f0; // FButtonStyle
		constexpr auto Speed2ButtonStyle = 0xa68; // FButtonStyle
		constexpr auto Speed3ButtonStyle = 0xce0; // FButtonStyle
		constexpr auto ScrollSpeedLow = 0xf60; // float
		constexpr auto ScrollSpeedMid = 0xf64; // float
		constexpr auto ScrollSpeedHigh = 0xf68; // float
	}

	namespace n_UBodySetup {
		constexpr auto AggGeom = 0x48; // FKAggregateGeom
		constexpr auto bAlwaysFullAnimWeight = 0xa0; // char : 1
		constexpr auto bConsiderForBounds = 0xa0; // char : 1
		constexpr auto bMeshCollideAll = 0xa0; // char : 1
		constexpr auto bDoubleSidedGeometry = 0xa0; // char : 1
		constexpr auto bGenerateNonMirroredCollision = 0xa0; // char : 1
		constexpr auto bSharedCookedData = 0xa0; // char : 1
		constexpr auto bGenerateMirroredCollision = 0xa0; // char : 1
		constexpr auto bSupportUVsAndFaceRemap = 0xa0; // char : 1
		constexpr auto PhysMaterial = 0xa8; // UPhysicalMaterial*
		constexpr auto WalkableSlopeOverride = 0xb0; // FWalkableSlopeOverride
		constexpr auto DefaultInstance = 0x128; // FBodyInstance
		constexpr auto BuildScale3D = 0x290; // FVector
	}

	namespace n_UGeneralInfoSlot {
		constexpr auto GeneralNameBg = 0x260; // UImage*
		constexpr auto GeneralQualityImage = 0x268; // UImage*
		constexpr auto GeneralName = 0x270; // UTextBlock*
		constexpr auto GeneralNameLevelText = 0x278; // UTextBlock*
		constexpr auto GeneralNameExpProgress = 0x280; // UProgressBar*
		constexpr auto GeneralUpButton = 0x288; // UButton*
		constexpr auto GeneralNameBgBrush = 0x290; // FSlateBrush [0x4]
		constexpr auto GeneralCharacterQuality = 0x4b0; // FSlateBrush [0x6]
		constexpr auto GeneralCharacterNameBgColor = 0x7e0; // FLinearColor [0x6]
		constexpr auto ParentUI = 0x840; // UUI_GeneralLegend*
		constexpr auto BindGeneralCharacter = 0x848; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto BindGeneralChunkData = 0x850; // FBaseGeneralChunkData
	}

	namespace n_UStreamableRenderAsset {
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x40; // double
		constexpr auto NumCinematicMipLevels = 0x48; // int32_t
		constexpr auto StreamingIndex = 0x4c; // int32_t
		constexpr auto CachedCombinedLODBias = 0x50; // int32_t
		constexpr auto NeverStream = 0x54; // char : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x54; // char : 1
		constexpr auto bHasStreamingUpdatePending = 0x54; // char : 1
		constexpr auto bForceMiplevelsToBeResident = 0x54; // char : 1
		constexpr auto bIgnoreStreamingMipBias = 0x54; // char : 1
		constexpr auto bUseCinematicMipLevels = 0x54; // char : 1
	}

	namespace n_UGeneralAuctionSellSlot {
		constexpr auto ButtonCheckedStyle = 0x2d8; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x550; // FButtonStyle
		constexpr auto GeneralQuality = 0x7c8; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto ButtonSelected = 0x8b8; // UButton*
		constexpr auto TextBlock_Level = 0x8c0; // UTextBlock*
		constexpr auto TextBlock_Name = 0x8c8; // UTextBlock*
		constexpr auto TextBlock_Statue = 0x8d0; // UTextBlock*
		constexpr auto TextBlock_SpecialType = 0x8d8; // UTextBlock*
		constexpr auto TextBlock_Price = 0x8e0; // UTextBlock*
		constexpr auto TextBlock_Time = 0x8e8; // UTextBlock*
		constexpr auto Image_Quality = 0x8f0; // UImage*
		constexpr auto ParentUI = 0x9d0; // TWeakObjectPtr<USGUI>
	}

	namespace n_ULODSyncComponent {
		constexpr auto NumLODs = 0xc0; // int32_t
		constexpr auto ForcedLOD = 0xc4; // int32_t
		constexpr auto ComponentsToSync = 0xc8; // TArray<FComponentSync>
		constexpr auto CustomLODMapping = 0xd8; // TMap<FName, FLODMappingData>
		constexpr auto CurrentLOD = 0x128; // int32_t
		constexpr auto CurrentNumLODs = 0x12c; // int32_t
		constexpr auto DriveComponents = 0x130; // TArray<UPrimitiveComponent*>
		constexpr auto SubComponents = 0x140; // TArray<UPrimitiveComponent*>
	}

	namespace n_UCheckBox {
		constexpr auto CheckedState = 0x120; // ECheckBoxState
		constexpr auto CheckedStateDelegate = 0x124; // FDelegate
		constexpr auto WidgetStyle = 0x138; // FCheckBoxStyle
		constexpr auto Style = 0x6b8; // USlateWidgetStyleAsset*
		constexpr auto UncheckedImage = 0x6c0; // USlateBrushAsset*
		constexpr auto UncheckedHoveredImage = 0x6c8; // USlateBrushAsset*
		constexpr auto UncheckedPressedImage = 0x6d0; // USlateBrushAsset*
		constexpr auto CheckedImage = 0x6d8; // USlateBrushAsset*
		constexpr auto CheckedHoveredImage = 0x6e0; // USlateBrushAsset*
		constexpr auto CheckedPressedImage = 0x6e8; // USlateBrushAsset*
		constexpr auto UndeterminedImage = 0x6f0; // USlateBrushAsset*
		constexpr auto UndeterminedHoveredImage = 0x6f8; // USlateBrushAsset*
		constexpr auto UndeterminedPressedImage = 0x700; // USlateBrushAsset*
		constexpr auto HorizontalAlignment = 0x708; // EHorizontalAlignment
		constexpr auto Padding = 0x70c; // FMargin
		constexpr auto BorderBackgroundColor = 0x720; // FSlateColor
		constexpr auto ClickMethod = 0x748; // EButtonClickMethod
		constexpr auto TouchMethod = 0x749; // EButtonTouchMethod
		constexpr auto PressMethod = 0x74a; // EButtonPressMethod
		constexpr auto IsFocusable = 0x74b; // bool
		constexpr auto OnCheckStateChanged = 0x750; // FMulticastInlineDelegate
	}

	namespace n_UNiagaraDataInterfaceLandscape {
		constexpr auto SourceLandscape = 0x38; // AActor*
	}

	namespace n_UAchievementNearAccomplishItem {
		constexpr auto ToolTipTemplate = 0x260; // USGToolTipWidget*
		constexpr auto ImgIcon = 0x280; // UImage*
		constexpr auto TbName = 0x288; // UTextBlock*
	}

	namespace n_UGuildStoreDetailPanel {
		constexpr auto StoreNoticeText = 0x2d8; // UTextBlock*
		constexpr auto AuthorityCanvasPanel = 0x2e0; // UCanvasPanel*
		constexpr auto ChangeNoticeButton = 0x2e8; // UButton*
		constexpr auto AuthorityGridCols = 0x2f0; // int32_t
		constexpr auto GuildAuthoritySlotClass = 0x2f8; // UGuildAuthoritySlot*
		constexpr auto ChangeNoticeUIOverride = 0x300; // UUI_ModifyText*
		constexpr auto AuthorityShowList = 0x308; // TArray<FGuildAuthorityShow>
		constexpr auto ColumnDistance = 0x318; // float
		constexpr auto RowDistance = 0x31c; // float
		constexpr auto AuthoritySlotSize = 0x320; // FVector2D
	}

	namespace n_ASGGameState {
		constexpr auto NotifyRefreshBattleInfoSignature = 0x390; // FMulticastInlineDelegate
		constexpr auto NotifyRefreshGuanAiBattleInfoSignature = 0x3a0; // FMulticastInlineDelegate
		constexpr auto XianchengSignInfo = 0x3b0; // FXianchengSignInfo
		constexpr auto XianchengOpenTimeRule = 0x400; // FBattleOpenTimeRule
		constexpr auto TaishouSignInfo = 0x438; // FTaishouSignInfo
		constexpr auto GMTaiShouOverrideInfo = 0x4f8; // FTaishouBattleOpenTimeInfo
		constexpr auto GMGuanAiBattleParamMap = 0x510; // TMap<int32_t, FGuanAiBattleParam>
		constexpr auto AllGuanAiSignInfo = 0x560; // TArray<FGuanAiSignInfo>
		constexpr auto PlayerBattleDatas = 0x570; // TArray<FPlayerBattleData>
		constexpr auto BattleGroupDynamicInfos = 0x580; // TArray<FBattleGroupDynamicInfo>
		constexpr auto FHighKillerArray = 0x590; // TArray<TWeakObjectPtr<ASGCharacter>>
		constexpr auto ServerFrameRate = 0x5a0; // float
		constexpr auto ActorsNum = 0x5a8; // TArray<int32_t>
		constexpr auto GameMultiplier = 0x5b8; // FServerMultiplier
		constexpr auto SkillAddExpAction = 0xb08; // FSkillAddExpAction
		constexpr auto BlockList = 0xca0; // TArray<FString>
		constexpr auto CityGroupId = 0xcc0; // int32_t
		constexpr auto CityId = 0xcc4; // int32_t
		constexpr auto DistrictId = 0xcc8; // int32_t
		constexpr auto XianChengId = 0xccc; // int32_t
		constexpr auto ServerId = 0xcd0; // int32_t
		constexpr auto ServerSessionName = 0xcd8; // FString
		constexpr auto ServerType = 0xce8; // EGameServerType
		constexpr auto DataStoreType = 0xce9; // EDataStoreType
		constexpr auto BattleType = 0xcea; // EBattleType
		constexpr auto GameServerPVPType = 0xceb; // EGameServerPVPType
		constexpr auto BattleGuildRelation2D = 0xcf0; // FBattleGuildRelation2D
		constexpr auto MyBattleGuildRelationIndex = 0xd00; // int32_t
		constexpr auto bStructureDestoryNoMesh = 0xd04; // char : 1
		constexpr auto HuangLiDay = 0xd08; // int32_t
		constexpr auto HuangLiNextDayTick = 0xd10; // int64_t
		constexpr auto MaxStructureNumInRadius = 0xd18; // int32_t
		constexpr auto SeasonIndex = 0xd40; // int32_t
		constexpr auto SeasonWeekIndex = 0xd58; // int32_t
		constexpr auto BattleGroundState = 0xd80; // EBattleGroundState
		constexpr auto BattleGroundMusicState = 0xd81; // EBattleGroundMusicState
		constexpr auto BattleGroundCountDownTick = 0xda8; // int64_t
		constexpr auto SuccessGuildGuid = 0xdf8; // FGuid
		constexpr auto SuccessGenericTeamId = 0xe08; // char
		constexpr auto BattleTimeStop = 0xe0c; // int32_t
		constexpr auto GMInitProtectTime = 0xe10; // int32_t
		constexpr auto NextWorldSaveTime = 0xe18; // int64_t
		constexpr auto CurrentServerLevel = 0xe24; // int32_t
		constexpr auto XianChengOwner = 0xe28; // FGuid
		constexpr auto TaiShouOwner = 0xe38; // FGuid
		constexpr auto CiShiOwner = 0xe48; // FGuid
		constexpr auto XianLingHuKouAwardInfo = 0xe68; // FXianLingHuKouAwardInfo
		constexpr auto XianChengJinXianArray = 0xe90; // TArray<FXianChengJinXian>
		constexpr auto bGuardHostileWithXiangLing = 0xea0; // char : 1
		constexpr auto WorshipEffect = 0xeb8; // TArray<FWorship>
		constexpr auto LimitedQuestIndex = 0xec8; // int32_t
		constexpr auto LimitedGuildShopIndex = 0xee0; // int32_t
		constexpr auto HideAppearanceKitArray = 0xef8; // TArray<FAppearanceKitInfo>
		constexpr auto UTCAR_LastSettlementTicks = 0xf10; // int64_t
		constexpr auto ActivityRank_RewardArray = 0xf18; // TArray<FString>
		constexpr auto ActivityRankRule = 0xf28; // FActivityRankRule
	}

	namespace n_UProceduralFoliageComponent {
		constexpr auto FoliageSpawner = 0xc0; // UProceduralFoliageSpawner*
		constexpr auto TileOverlap = 0xc8; // float
		constexpr auto SpawningVolume = 0xd0; // AVolume*
		constexpr auto ProceduralGuid = 0xd8; // FGuid
	}

	namespace n_UNiagaraDataInterfaceSkeletalMesh {
		constexpr auto SourceMode = 0x38; // ENDISkeletalMesh_SourceMode
		constexpr auto Source = 0x40; // AActor*
		constexpr auto MeshUserParameter = 0x48; // FNiagaraUserParameterBinding
		constexpr auto SourceComponent = 0x68; // USkeletalMeshComponent*
		constexpr auto SkinningMode = 0x70; // ENDISkeletalMesh_SkinningMode
		constexpr auto SamplingRegions = 0x78; // TArray<FName>
		constexpr auto WholeMeshLOD = 0x88; // int32_t
		constexpr auto FilteredBones = 0x90; // TArray<FName>
		constexpr auto FilteredSockets = 0xa0; // TArray<FName>
		constexpr auto ExcludeBoneName = 0xb0; // FName
		constexpr auto bExcludeBone = 0xb8; // char : 1
		constexpr auto bRequireCurrentFrameData = 0xb9; // bool
	}

	namespace n_USoundMix {
		constexpr auto bApplyEQ = 0x28; // char : 1
		constexpr auto EQPriority = 0x2c; // float
		constexpr auto EQSettings = 0x30; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x70; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x80; // float
		constexpr auto FadeInTime = 0x84; // float
		constexpr auto Duration = 0x88; // float
		constexpr auto FadeOutTime = 0x8c; // float
	}

	namespace n_UMovementMode_AnimNotify {
		constexpr auto PlayOnReversed = 0x38; // char : 1
		constexpr auto OnlyAnimInstance = 0x38; // char : 1
		constexpr auto Enum_NewMovementMode = 0x39; // EMovementMode
		constexpr auto Enum_NewCustomMovementMode = 0x3a; // ECustomMovementMode
	}

	namespace n_UItemAuctionOrderPanel {
		constexpr auto ItemListVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto ItemOrderListVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto SearchEditableBox = 0x2e8; // UEditableTextBox*
		constexpr auto ItemTypeComboBox = 0x2f0; // UComboBoxString*
		constexpr auto ItemSubTypeComboBox = 0x2f8; // UComboBoxString*
		constexpr auto Button_Search = 0x300; // UButton*
		constexpr auto Button_Recall = 0x308; // UButton*
		constexpr auto Button_Refresh = 0x310; // UButton*
		constexpr auto TipsPanel = 0x318; // UCanvasPanel*
		constexpr auto InventorySlot = 0x320; // UN_InventorySlot*
		constexpr auto EquipPanel = 0x328; // UN_EquipPanel*
		constexpr auto ItemAuctionOrderSlot = 0x330; // UItemAuctionOrderSlot*
		constexpr auto ItemSlotSelected = 0x338; // TWeakObjectPtr<UItemAuctionOrderSlot>
		constexpr auto ItemOrderSlotSelected = 0x340; // TWeakObjectPtr<UItemAuctionOrderSlot>
		constexpr auto RootUI = 0x348; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied {
		constexpr auto ExternalOwner = 0x1a8; // UAbilitySystemComponent*
	}

	namespace n_UEnvQueryGenerator_ActorsOfClass {
		constexpr auto SearchedActorClass = 0x50; // AActor*
		constexpr auto GenerateOnlyActorsInRadius = 0x58; // FAIDataProviderBoolValue
		constexpr auto SearchRadius = 0x90; // FAIDataProviderFloatValue
		constexpr auto SearchCenter = 0xc8; // UEnvQueryContext*
	}

	namespace n_UParticleModuleLocationEmitter {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto SelectionMethod = 0x38; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x3c; // char : 1
		constexpr auto InheritSourceVelocityScale = 0x40; // float
		constexpr auto bInheritSourceRotation = 0x44; // char : 1
		constexpr auto InheritSourceRotationScale = 0x48; // float
	}

	namespace n_UIpConnection {
		constexpr auto SocketErrorDisconnectDelay = 0x1b40; // float
	}

	namespace n_UParticleModuleEventReceiverBase {
		constexpr auto EventGeneratorType = 0x30; // EParticleEventType
		constexpr auto EventName = 0x34; // FName
	}

	namespace n_UMaterialExpressionSkyAtmosphereAerialPerspective {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_AMagicLeapSharedWorldGameMode {
		constexpr auto SharedWorldData = 0x3f8; // FMagicLeapSharedWorldSharedData
		constexpr auto OnNewLocalDataFromClients = 0x408; // FMulticastInlineDelegate
		constexpr auto PinSelectionConfidenceThreshold = 0x418; // float
		constexpr auto ChosenOne = 0x4c0; // AMagicLeapSharedWorldPlayerController*
	}

	namespace n_ULightPropagationVolumeBlendable {
		constexpr auto Settings = 0x30; // FLightPropagationVolumeSettings
		constexpr auto BlendWeight = 0x70; // float
	}

	namespace n_UAREnvironmentCaptureProbeTexture {
		constexpr auto TextureType = 0x130; // EARTextureType
		constexpr auto Timestamp = 0x134; // float
		constexpr auto ExternalTextureGuid = 0x138; // FGuid
		constexpr auto Size = 0x148; // FVector2D
	}

	namespace n_UNiagaraDataInterfaceRWBase {
		constexpr auto OutputShaderStages = 0x38; // TSet<int32_t>
		constexpr auto IterationShaderStages = 0x88; // TSet<int32_t>
	}

	namespace n_ABaseCharacter {
		constexpr auto InventoryComponent = 0x5e8; // USGInventoryComponent*
		constexpr auto BuffComponent = 0x5f0; // USGBuffComponent*
		constexpr auto BeginPlayNextTickTimer = 0x5f8; // FTimerHandle
		constexpr auto CharacterType = 0x600; // ECharacterType
		constexpr auto CharacterName = 0x608; // FString
		constexpr auto CharacterDisplayName = 0x618; // FText
		constexpr auto GuildName = 0x630; // FString
		constexpr auto GuildImage = 0x640; // FString
		constexpr auto bDisplayLevel = 0x670; // char : 1
		constexpr auto bCanRebound = 0x670; // char : 1
		constexpr auto LevelNameHUDWidgetComponent = 0x674; // TWeakObjectPtr<UWidgetComponent>
		constexpr auto LevelNameHUDLocation = 0x67c; // FVector
		constexpr auto BillBoardHUDLocation = 0x688; // FVector
		constexpr auto DisplayHUDShowWidgetTemplate = 0x698; // UUserWidget*
		constexpr auto BeSawSentryTower = 0x6a0; // TArray<ASGStructure*>
		constexpr auto bHasCheckedBillBoard = 0x6b0; // char : 1
		constexpr auto bBillBoardNeedShow = 0x6b0; // char : 1
		constexpr auto BillBoardFriendly = 0x6b1; // EBillBoardFriendly
		constexpr auto BillboardComponent = 0x6b4; // TWeakObjectPtr<UMaterialBillboardComponent>
		constexpr auto SnapShotRenderTarget = 0x6c0; // UTextureRenderTarget2D*
		constexpr auto SnapShotDynamicMaterial = 0x6c8; // UMaterialInstanceDynamic*
		constexpr auto SnapShotCameraDistance = 0x6d0; // float
		constexpr auto SnapShotCameraPivotOffset = 0x6d4; // FVector
		constexpr auto SnapShotLocation = 0x6e0; // FVector
		constexpr auto SnapShotYaw = 0x6ec; // float
		constexpr auto RaceID = 0x6f0; // int32_t
		constexpr auto bShowHeadLevel = 0x6f4; // char : 1
		constexpr auto bIsLockMovement = 0x700; // char : 1
		constexpr auto bIsLockRotation = 0x700; // char : 1
		constexpr auto CustomMaxSpeed = 0x718; // float
		constexpr auto CustomGroundFriction = 0x71c; // float
		constexpr auto CustomMaxAcceleration = 0x720; // float
		constexpr auto CustomBrakingDeceleration = 0x724; // float
		constexpr auto CustomBarkingFriction = 0x728; // float
		constexpr auto RemoveBuffsClass = 0x730; // TArray<USGBuff*>
		constexpr auto IsMoving = 0x740; // char : 1
		constexpr auto HasMovmentInput = 0x740; // char : 1
		constexpr auto bIsPlayerInput = 0x740; // char : 1
		constexpr auto bPressedForward = 0x740; // char : 1
		constexpr auto bPressedBackward = 0x740; // char : 1
		constexpr auto bPressedLeft = 0x740; // char : 1
		constexpr auto bPressedRight = 0x740; // char : 1
		constexpr auto JumpRotation = 0x744; // FRotator
		constexpr auto LookingRotation = 0x750; // FRotator
		constexpr auto LastVelocityRotation = 0x75c; // FRotator
		constexpr auto LastMovementInputRotation = 0x768; // FRotator
		constexpr auto PreAimYaw = 0x774; // float
		constexpr auto AimYawDelta = 0x778; // float
		constexpr auto AimPitchDelta = 0x77c; // float
		constexpr auto AimYawRate = 0x780; // float
		constexpr auto MovingDirection = 0x784; // float
		constexpr auto RotationOffset = 0x788; // float
		constexpr auto RotationRateMultiplier = 0x78c; // float
		constexpr auto MoveForwardAxis = 0x790; // float
		constexpr auto MoveRightAxis = 0x794; // float
		constexpr auto TurnSpeed = 0x798; // float
		constexpr auto MovementInput = 0x79c; // FVector
		constexpr auto AttackAimOffset = 0x7a8; // FVector2D
		constexpr auto ConditionAimOffset = 0x7b0; // FVector2D
		constexpr auto ConditionAimOffsetAngle = 0x7b8; // FVector2D
		constexpr auto Enum_MovementMode = 0x7c0; // ECustomMovementMode
		constexpr auto Enum_PrevMovementMode = 0x7c1; // ECustomMovementMode
		constexpr auto Enum_RotationMode = 0x7c2; // ERotationMode
		constexpr auto Enum_LastRotationMode = 0x7c3; // ERotationMode
		constexpr auto Enum_MovementDirection = 0x7c4; // EMovementDirection
		constexpr auto Enum_CardinalDirection = 0x7c5; // EInputDirection
		constexpr auto Enum_InputDirection = 0x7c6; // EInputDirection
		constexpr auto TurnMontage = 0x7c8; // UAnimMontage*
		constexpr auto MovingTurnMontage = 0x7d0; // UAnimMontage*
		constexpr auto bIsJumpping = 0x7d8; // char : 1
		constexpr auto bIsCustomJumpping = 0x7d8; // char : 1
		constexpr auto TumblingMontage = 0x7e0; // UAnimMontage* [0x4]
		constexpr auto GetUpMontage = 0x800; // UAnimMontage*
		constexpr auto Enum_ViewMode = 0x809; // EViewMode
		constexpr auto FallingHeightCostHPConfig = 0x80c; // FVector2D
		constexpr auto StartFallLocation = 0x814; // FVector
		constexpr auto Enum_CurrentTickPoseState = 0x834; // EVisibilityBasedAnimTickOption
		constexpr auto MinSlopeAngle = 0x848; // float
		constexpr auto MaxSlopeWalkSpeed = 0x84c; // float
		constexpr auto bUseFourAimDirection = 0x86c; // char : 1
		constexpr auto CustomInteractActor = 0x870; // AActor*
		constexpr auto FullBodyMontage = 0x878; // UAnimMontage*
		constexpr auto FootStepTraceDistance = 0x880; // float
		constexpr auto FootDecalRefreshTime = 0x884; // float
		constexpr auto FootDecalLifeTime = 0x888; // float
		constexpr auto TMap_FootName = 0x890; // TMap<EFootDirectionType, FName>
		constexpr auto UpdateBeforeSurfaceTypeTimer = 0x8e0; // FTimerHandle
		constexpr auto ShowFootEffectDistanceSquare = 0x8e8; // float
		constexpr auto Enum_BeforeSurfaceType = 0x8ec; // EPhysicalSurface
		constexpr auto Enum_NewSurfaceType = 0x8ed; // EPhysicalSurface
		constexpr auto InteractionMontage = 0x8f8; // UAnimMontage*
		constexpr auto CurrentAttackDamageNum = 0x900; // int32_t
		constexpr auto CurrentAttackExploitDamageNum = 0x904; // int32_t
		constexpr auto PlayerShowMontage = 0x908; // UAnimMontage*
		constexpr auto SwimTraceChannel = 0x910; // ETraceTypeQuery
		constexpr auto IsCustomWaterVolum = 0x911; // char : 1
		constexpr auto IsCustomSwimRotation = 0x911; // char : 1
		constexpr auto bShouldSwim = 0x911; // char : 1
		constexpr auto bShouldSwimUp = 0x911; // char : 1
		constexpr auto bUseCustomUpdateSpeed = 0x911; // char : 1
		constexpr auto EnterWaterDistance = 0x914; // float
		constexpr auto EnterSwimmingDistance = 0x918; // float
		constexpr auto CrouchEnterSwimmingDistance = 0x91c; // float
		constexpr auto SwimmingWaterSurfaceDistance = 0x920; // float
		constexpr auto ExtraSwimmingUpDistance = 0x924; // float
		constexpr auto SwimmingRotationRate = 0x928; // float
		constexpr auto LeftSwimmingTime = 0x92c; // float
		constexpr auto SwimmingUpAxis = 0x930; // float
		constexpr auto LeftSwimmingTimer = 0x938; // FTimerHandle
		constexpr auto bUseFrameUpdateSwimSpeed = 0x944; // char : 1
		constexpr auto TMap_CustomSwimCurves = 0x948; // TMap<ECustomSwimState, UCurveFloat*>
		constexpr auto UpdateSwimSpeedTime = 0x998; // float
		constexpr auto CurrentSwimSpeedCurve = 0x9a0; // UCurveFloat*
		constexpr auto SwimSpeedRate = 0x9a8; // float
		constexpr auto SwimSpeedRateTime = 0x9ac; // float
		constexpr auto UpdateSwimSpeedTimer = 0x9b0; // FTimerHandle
		constexpr auto DefaultPhysicsVolumn = 0x9b8; // APhysicsVolume*
		constexpr auto BlockCameraScale = 0x9d0; // float
		constexpr auto AttackCameraScale = 0x9d4; // float
		constexpr auto TPVCameraOffset = 0x9d8; // FVector
		constexpr auto TPVArmLength = 0x9e4; // float
		constexpr auto TPVFOV = 0x9e8; // float
		constexpr auto TPVAimCameraOffset = 0x9ec; // FVector
		constexpr auto TPVAimArmLength = 0x9f8; // float
		constexpr auto WeaponCameraTransitionDuration = 0x9fc; // float
		constexpr auto bIsADS = 0xa00; // char : 1
		constexpr auto FPVCameraOffset = 0xa04; // FVector
		constexpr auto FPVSocketName = 0xa10; // FName
		constexpr auto bIsRightShoulder = 0xa18; // char : 1
		constexpr auto Vector2D_CameraMaxAngle = 0xa1c; // FVector2D
		constexpr auto CameraInterpSpeed = 0xa24; // float
		constexpr auto RiderCameraInterpSpeed = 0xa28; // float
		constexpr auto CameraPitchTargetValue = 0xa2c; // float
		constexpr auto CameraYawTargetValue = 0xa30; // float
		constexpr auto CameraZoomFactorMax = 0xa48; // float
		constexpr auto CameraZoomFactorMin = 0xa4c; // float
		constexpr auto UpdateCostSprintSPDateTime = 0xa50; // int64_t
		constexpr auto UpdateCostSprintSPTimer = 0xa58; // FTimerHandle
		constexpr auto bIsRunCostSP = 0xa60; // char : 1
		constexpr auto TestSoliderType = 0xa64; // int32_t
		constexpr auto Enum_CurrentAimDirection = 0xa68; // EAimDirection
		constexpr auto CachedAttackDirection = 0xa69; // EAimDirection
		constexpr auto Enum_CustomAimDirection = 0xa6a; // EAimDirection
		constexpr auto EquipMontage = 0xa70; // UAnimMontage*
		constexpr auto BodyTraces = 0xa78; // TArray<FWeaponTraceInfo>
		constexpr auto bIsPressedAttack = 0xa88; // char : 1
		constexpr auto Enum_OpposeMovementMode = 0xa90; // TArray<ECustomMovementMode>
		constexpr auto Struct_PreAttackConfig = 0xaa0; // FPreAttackConfig
		constexpr auto AttackMontage = 0xac0; // UAnimMontage*
		constexpr auto CollectionAttackMontage = 0xac8; // UAnimMontage*
		constexpr auto OffHandAttackMontage = 0xad0; // UAnimMontage*
		constexpr auto AttackReboundMontage = 0xad8; // UAnimMontage*
		constexpr auto RiderSprintAttackMontage = 0xae0; // UAnimMontage*
		constexpr auto bIsAttacking = 0xae8; // char : 1
		constexpr auto bIsKickAttacking = 0xae8; // char : 1
		constexpr auto bIsAttackEnd = 0xae8; // char : 1
		constexpr auto bIsAttackCauserDamage = 0xae8; // char : 1
		constexpr auto TMap_AttackSocketNames = 0xaf0; // TMap<EAttackSocketType, FName>
		constexpr auto Struct_CurrentAttackInfo = 0xb40; // FAttackInfo
		constexpr auto Enum_CurrentAttackDamageType = 0xba0; // EDamageType
		constexpr auto bIsWantAttack = 0xba1; // char : 1
		constexpr auto bAutoPutPolearms = 0xba1; // char : 1
		constexpr auto bIsRiderSprintAttackCooling = 0xba1; // char : 1
		constexpr auto TMap_CameraShakes = 0xba8; // TMap<EAimDirection, UMatineeCameraShake*>
		constexpr auto AttackReboundStopPosition = 0xbf8; // float
		constexpr auto AttackReboundStopBlendTime = 0xbfc; // float
		constexpr auto AttackReboundHitMontage = 0xc00; // UAnimMontage*
		constexpr auto AttackReboundRateCurve = 0xc08; // FRuntimeFloatCurve
		constexpr auto bIsAttackRebound = 0xc90; // char : 1
		constexpr auto AttackReboundRateTimer = 0xc98; // FTimerHandle
		constexpr auto BlockMontage = 0xca8; // UAnimMontage*
		constexpr auto ActionMontage = 0xcb0; // UAnimMontage*
		constexpr auto bIsBlocking = 0xcb8; // char : 1
		constexpr auto IsOffHandBlocking = 0xcb8; // char : 1
		constexpr auto Enum_BlockAimDirection = 0xcb9; // EAimDirection
		constexpr auto OutFightingDuration = 0xcbc; // float
		constexpr auto CurrentAIAggroActor = 0xcc8; // TWeakObjectPtr<AActor>
		constexpr auto InFightingServerEnemys = 0xcd0; // TArray<FFightingEnemyServerData>
		constexpr auto AggroSoundID = 0xce0; // FName
		constexpr auto SoundDatabase = 0xce8; // USGSoundDatabase*
		constexpr auto InFightingClientEnemys = 0xcf0; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto UpdateFightingBGMInterval = 0xd08; // float
		constexpr auto LastUpdateFightingBGMTime = 0xd10; // double
		constexpr auto InFightingEnemyCount = 0xd18; // int32_t
		constexpr auto bIsTumble = 0xd28; // char : 1
		constexpr auto TumbleState = 0xd29; // ETumbleState
		constexpr auto GetUpCountDownDuration = 0xd2c; // float
		constexpr auto GetUpCountDownTimer = 0xd30; // FTimerHandle
		constexpr auto ApplyTumblingMontage = 0xd38; // UAnimMontage*
		constexpr auto Struct_BodyBoneConfig = 0xd40; // FBodyBoneName
		constexpr auto Enum_DamageDirection = 0xd90; // EInputDirection
		constexpr auto HitMontage = 0xd98; // UAnimMontage*
		constexpr auto IgnoreHardStraightHitMontage = 0xda0; // UAnimMontage*
		constexpr auto bIsHit = 0xda8; // char : 1
		constexpr auto bIsBlockHit = 0xda8; // char : 1
		constexpr auto bIsDead = 0xda8; // char : 1
		constexpr auto bIsWillDead = 0xdf0; // char : 1
		constexpr auto bWillDeadReduceDurable = 0xdf0; // char : 1
		constexpr auto CharacterLastDamageTime = 0xdf8; // double
		constexpr auto MurderDeathCount = 0xe00; // int32_t
		constexpr auto AccidentDeathCount = 0xe04; // int32_t
		constexpr auto CharacterLastDeathTime = 0xe08; // FDateTime
		constexpr auto LastMakeDamageTime = 0xe10; // float
		constexpr auto LastAttackUniqueId = 0xe14; // FGuid
		constexpr auto Enum_LastAimDirection = 0xe24; // EAimDirection
		constexpr auto Hardness = 0xe28; // int32_t
		constexpr auto RuleDamageRate = 0xe2c; // float [0x4]
		constexpr auto SGCanBeDamaged = 0xe3c; // int32_t
		constexpr auto MaxReductionRate = 0xe40; // float
		constexpr auto ReductionRateSlashing = 0xe44; // float
		constexpr auto ReductionRateSlashingAdd = 0xe48; // float
		constexpr auto ReductionRateSlashingConfig = 0xe4c; // float
		constexpr auto ReductionRatePiercing = 0xe50; // float
		constexpr auto ReductionRatePiercingAdd = 0xe54; // float
		constexpr auto ReductionRatePiercingConfig = 0xe58; // float
		constexpr auto ReductionRateCrushing = 0xe5c; // float
		constexpr auto ReductionRateCrushingAdd = 0xe60; // float
		constexpr auto ReductionRateCrushingConfig = 0xe64; // float
		constexpr auto ReductionRateSiege = 0xe68; // float
		constexpr auto ReductionRateSiegeAdd = 0xe6c; // float
		constexpr auto ReductionRateSiegeConfig = 0xe70; // float
		constexpr auto Charge = 0xe74; // float
		constexpr auto ChargeAdd = 0xe78; // float
		constexpr auto ChargeConfig = 0xe7c; // float
		constexpr auto EmptyKickCharge = 0xe80; // float
		constexpr auto ShieldCharge = 0xe84; // float
		constexpr auto ChargeRes = 0xe88; // float
		constexpr auto ChargeResAdd = 0xe8c; // float
		constexpr auto ChargeResConfig = 0xe90; // float
		constexpr auto ReductionRateFallAdd = 0xe94; // float
		constexpr auto BuffSpeedMulAdd = 0xe98; // float
		constexpr auto BuffDamageMulAdd = 0xe9c; // float
		constexpr auto LightArmorSpeedMulAdd = 0xea0; // float
		constexpr auto HeavyArmorSpeedMulAdd = 0xea4; // float
		constexpr auto LightArmorDurableResMulAdd = 0xea8; // float
		constexpr auto HeavyArmorDurableResMulAdd = 0xeac; // float
		constexpr auto DefaultLinearDamping = 0xeb0; // float
		constexpr auto DefaultAngularDamping = 0xeb4; // float
		constexpr auto DeathTargetBoneName = 0xeb8; // FName
		constexpr auto CanImpluseRagdoll = 0xec0; // char : 1
		constexpr auto DeathImpulseMultiplier = 0xec4; // float
		constexpr auto DeathLinearDamping = 0xec8; // float
		constexpr auto DeathAngularDamping = 0xecc; // float
		constexpr auto DeathItemContainer = 0xed0; // TWeakObjectPtr<ASGStructureItemContainer>
		constexpr auto CollectionDamageMultiply = 0xee8; // float
		constexpr auto bShowChargeDebug = 0xef8; // char : 1
		constexpr auto ChargeDamageTypeData = 0xefc; // FChargeDamageTypeData [0x9]
		constexpr auto DeathExploitConifg = 0xf48; // TArray<FDeathExploitConifg>
		constexpr auto DeathDropTypeName = 0xf58; // FString
		constexpr auto DeathDropTable = 0xf68; // UDataTable*
		constexpr auto ExtraDeathDropTable = 0xf70; // UDataTable*
		constexpr auto DeathExploitComponent = 0xf78; // USGExploitComponent*
		constexpr auto bUseCorpseDissolve = 0xf90; // char : 1
		constexpr auto CorpseDissolveTime = 0xf94; // float
		constexpr auto CorpseDissolveFinishTime = 0xf98; // float
		constexpr auto SavedCorpseLeftTime = 0xf9c; // float
		constexpr auto CorpseLeftTimeTick = 0xfa0; // int64_t
		constexpr auto CorpseDraggedDecayRate = 0xfa8; // float
		constexpr auto bIsDragged = 0xfac; // char : 1
		constexpr auto bOnlyInteractiveInventorySameTeam = 0xfac; // char : 1
		constexpr auto bBeMountSkipAnim = 0xfac; // char : 1
		constexpr auto RemindDurableLine = 0xfd0; // float
		constexpr auto MainHandWeapon = 0xfd8; // ASGWeapon*
		constexpr auto HolsterWeapon = 0xfe0; // ASGWeapon*
		constexpr auto OffHandWeapon = 0xfe8; // ASGWeapon*
		constexpr auto DefaultWeapon = 0xff0; // ASGWeapon*
		constexpr auto ContinueUseQuickItemHandle = 0xff8; // FTimerHandle
		constexpr auto AttachWeaponMorphValues = 0x1000; // TMap<FName, float>
		constexpr auto MainHandWeaponSlot = 0x1050; // int32_t
		constexpr auto OffHandWeaponSlot = 0x1054; // int32_t
		constexpr auto bSpawnDefaultWeapon = 0x106d; // char : 1
		constexpr auto DefaultWeaponTemplate = 0x1070; // ASGWeapon* [0x2]
		constexpr auto ConsumeMontage = 0x1098; // UAnimMontage*
		constexpr auto PostCloudTime = 0x10a8; // int64_t
		constexpr auto PostCloudDataTimer = 0x10b0; // FTimerHandle
		constexpr auto bGameManager = 0x10b8; // char : 1
		constexpr auto ViewTraceDistatnce = 0x10bc; // float
		constexpr auto ViewTraceRadius = 0x10c0; // float
		constexpr auto ViewOverlapDistatnce = 0x10c4; // float
		constexpr auto ViewOverlapRadius = 0x10c8; // float
		constexpr auto LadderReverseCoolingMaxTime = 0x10d0; // float
		constexpr auto LadderMontage = 0x10d8; // UAnimMontage*
		constexpr auto LadderExitMontage = 0x10e0; // UAnimMontage*
		constexpr auto LadderSourceMontage = 0x10e8; // UAnimMontage*
		constexpr auto ClimbingLadder = 0x10f4; // TWeakObjectPtr<ASGStructureLadder>
		constexpr auto AerialLadderMontage = 0x1118; // UAnimMontage*
		constexpr auto ActiveLadder = 0x1120; // TWeakObjectPtr<ASGStructureLadder>
		constexpr auto bCanBeClimbUp = 0x1128; // char : 1
		constexpr auto FoodStructures = 0x1130; // TArray<TWeakObjectPtr<ASGStructureAmmoBox>>
		constexpr auto SeatingStructure = 0x1140; // ASGStructureSeat*
		constexpr auto SaveGameSeatingStructure = 0x1148; // ASGStructureSeat*
		constexpr auto SeatIndex = 0x1150; // int32_t
		constexpr auto LastUsedItemStateArray = 0x1158; // TArray<FLastItemState>
		constexpr auto SeatStructureUnRegisteredComponents = 0x1168; // TArray<TWeakObjectPtr<UActorComponent>>
		constexpr auto ServerSeatedViewRotationYaw = 0x1188; // float
		constexpr auto ServerSeatedViewRotationPitch = 0x118c; // float
		constexpr auto ShowDebugTrace = 0x1190; // char : 1
		constexpr auto ExtraMaxSpeedModifier = 0x1194; // float
		constexpr auto MaxHP = 0x1198; // float
		constexpr auto bMaxHPChanged = 0x119c; // char : 1
		constexpr auto MaxHPAdd = 0x11a0; // float
		constexpr auto MaxHPMulAdd = 0x11a4; // float
		constexpr auto MAXHPConfig = 0x11a8; // float
		constexpr auto MaxHPRandom = 0x11ac; // float
		constexpr auto HP = 0x11b0; // float
		constexpr auto LocalHP = 0x11b4; // float
		constexpr auto LastRestHP = 0x11b8; // float
		constexpr auto bHPChanged = 0x11bc; // char : 1
		constexpr auto HPRecover = 0x11c0; // float
		constexpr auto HPRecoverConfig = 0x11c4; // float
		constexpr auto HPRecoverAdd = 0x11c8; // float
		constexpr auto HPRecoverRandom = 0x11cc; // float
		constexpr auto HPRecoverMulAdd = 0x11d0; // float
		constexpr auto HPRecoverMaxHpMul = 0x11d4; // float
		constexpr auto CharacterSPConfig = 0x11d8; // FCharacterSPConfig
		constexpr auto MaxSP = 0x12b0; // float
		constexpr auto MaxSPAdd = 0x12b4; // float
		constexpr auto MaxSPMulAdd = 0x12b8; // float
		constexpr auto MaxSPConfig = 0x12bc; // float
		constexpr auto MaxSPRandom = 0x12c0; // float
		constexpr auto WildHPMulAdd = 0x12c4; // float
		constexpr auto WildAttackMulAdd = 0x12c8; // float
		constexpr auto WildDefenseMulAdd = 0x12cc; // float
		constexpr auto WildExpMulAdd = 0x12d0; // float
		constexpr auto WildAttackStructureMulAdd = 0x12d4; // float
		constexpr auto BuffFireDamageMulAdd = 0x12d8; // float
		constexpr auto BuffFireResMulAdd = 0x12dc; // float
		constexpr auto BuffBleedDamageMulAdd = 0x12e0; // float
		constexpr auto BuffBleedResMulAdd = 0x12e4; // float
		constexpr auto TumbleOnGroundResMulAdd = 0x12e8; // float
		constexpr auto TumbleOnVehicleResMulAdd = 0x12ec; // float
		constexpr auto SlashingArmorMulAdd = 0x12f0; // float
		constexpr auto PiercingArmorMulAdd = 0x12f4; // float
		constexpr auto CrushingArmorMulAdd = 0x12f8; // float
		constexpr auto SiegeArmorMulAdd = 0x12fc; // float
		constexpr auto LightArmorMulAdd = 0x1300; // float
		constexpr auto HeavyArmorMulAdd = 0x1304; // float
		constexpr auto ShieldBlockArrowAddItemRate = 0x1308; // float
		constexpr auto TiredTimer = 0x1310; // FTimerHandle
		constexpr auto TiredLockTime = 0x1318; // float
		constexpr auto TiredAttackSpeedMul = 0x131c; // float
		constexpr auto TiredAttackDamageMul = 0x1320; // float
		constexpr auto SP = 0x1328; // float
		constexpr auto SPRecover = 0x132c; // float
		constexpr auto SPRecoverConfig = 0x1330; // float
		constexpr auto SPRecoverAdd = 0x1334; // float
		constexpr auto SPRecoverRandom = 0x1338; // float
		constexpr auto SPRecoverMulAdd = 0x133c; // float
		constexpr auto MaxHunger = 0x1340; // float
		constexpr auto bMaxHungerChanged = 0x1344; // char : 1
		constexpr auto MaxHungerAdd = 0x1348; // float
		constexpr auto MaxHungerMulAdd = 0x134c; // float
		constexpr auto MaxHungerConfig = 0x1350; // float
		constexpr auto MaxHungerRandom = 0x1354; // float
		constexpr auto Hunger = 0x1358; // float
		constexpr auto bHungerChanged = 0x135c; // char : 1
		constexpr auto HungerRecover = 0x1360; // float
		constexpr auto HungerRecoverConfig = 0x1364; // float
		constexpr auto HungerRecoverAdd = 0x1368; // float
		constexpr auto HungerRecoverRandom = 0x136c; // float
		constexpr auto LastHungerValue = 0x1370; // float
		constexpr auto OnLineHungerConsume = 0x1374; // float
		constexpr auto OffLineHungerConsume = 0x1378; // float
		constexpr auto HungerToHPConsume = 0x137c; // float
		constexpr auto HungerToSPConsume = 0x1380; // float
		constexpr auto HungerConsumeHPMul = 0x1384; // float
		constexpr auto HungerRecoverHPMul = 0x1388; // float
		constexpr auto BreatheConsumeHPMul = 0x138c; // float
		constexpr auto HungerConsumeMulAdd = 0x1390; // float
		constexpr auto WillDeadHPConsume = 0x1394; // float
		constexpr auto Breathe = 0x1398; // float
		constexpr auto BreatheRecover = 0x139c; // float
		constexpr auto BreatheRecoverConfig = 0x13a0; // float
		constexpr auto BreatheRecoverAdd = 0x13a4; // float
		constexpr auto BreatheConsume = 0x13a8; // float
		constexpr auto BreatheConsumeConfig = 0x13ac; // float
		constexpr auto BreatheConsumeAdd = 0x13b0; // float
		constexpr auto Weight = 0x13b4; // float
		constexpr auto MaxWeight = 0x13b8; // float
		constexpr auto MaxWeightConfig = 0x13bc; // float
		constexpr auto MaxWeightAdd = 0x13c0; // float
		constexpr auto MaxWeightRandom = 0x13c4; // float
		constexpr auto MaxWeightMulAdd = 0x13c8; // float
		constexpr auto OverWeightRatio = 0x13cc; // float
		constexpr auto OverWeightSpeedMul = 0x13d0; // float
		constexpr auto ShieldsMoveSpeedBonusAdd = 0x13d4; // float
		constexpr auto bCanStun = 0x13d8; // char : 1
		constexpr auto StunProbability = 0x13dc; // float
		constexpr auto TamedStunProbability = 0x13e0; // float
		constexpr auto bIsStun = 0x13e4; // char : 1
		constexpr auto MaxStun = 0x13e8; // float
		constexpr auto MaxStunAdd = 0x13ec; // float
		constexpr auto MaxStunMulAdd = 0x13f0; // float
		constexpr auto MaxStunConfig = 0x13f4; // float
		constexpr auto MaxStunRandom = 0x13f8; // float
		constexpr auto InfluenceHungerRecoverMulStunned = 0x13fc; // float
		constexpr auto stun = 0x1400; // float
		constexpr auto StunRecover = 0x1404; // float
		constexpr auto StunRecoverConfig = 0x1408; // float
		constexpr auto StunRecoverAdd = 0x140c; // float
		constexpr auto StunRecoverRandom = 0x1410; // float
		constexpr auto StunAnim = 0x1418; // FStunAnim
		constexpr auto VirtualCarriedCharacter = 0x1458; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto SaveGameCarriedCharacter = 0x1460; // ABaseCharacter*
		constexpr auto CarriedCharacter = 0x1468; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto CarriedCharacterTarget = 0x1470; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto CarriedVectorAxis = 0x1478; // FVector
		constexpr auto CarriedCharacterParent = 0x1484; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto CarriedStructureParent = 0x148c; // TWeakObjectPtr<ASGStructureFunctionRack>
		constexpr auto CarriedMontage = 0x1498; // UAnimMontage*
		constexpr auto CarryUpMoveMulti = 0x14a0; // float
		constexpr auto CarryUpSocket = 0x14a4; // FName
		constexpr auto CarryUpMaxDistance = 0x14ac; // float
		constexpr auto StunStatusType = 0x14b0; // EGeneralsStunStatusType
		constexpr auto bCanTame = 0x14b2; // char : 1
		constexpr auto bIsRackFinishTamed = 0x14b2; // char : 1
		constexpr auto TamingOwnerId = 0x14b4; // FGuid
		constexpr auto TamingGuildId = 0x14c4; // FGuid
		constexpr auto TamingOwnerCharacterName = 0x14d8; // FString
		constexpr auto AfterStunTameTime = 0x14e8; // float
		constexpr auto DamageTameRatio = 0x14ec; // float
		constexpr auto StunnedDamageTameRatio = 0x14f0; // float
		constexpr auto MaxTame = 0x14f4; // float
		constexpr auto MaxTameAdd = 0x14f8; // float
		constexpr auto MaxTameMulAdd = 0x14fc; // float
		constexpr auto MaxTameConfig = 0x1500; // float
		constexpr auto MaxTameRandom = 0x1504; // float
		constexpr auto tame = 0x1508; // float
		constexpr auto TameLeftTimeTimer = 0x1510; // FTimerHandle
		constexpr auto TameRecover = 0x1518; // float
		constexpr auto TameRecoverConfig = 0x151c; // float
		constexpr auto TameRecoverAdd = 0x1520; // float
		constexpr auto TameRecoverRandom = 0x1524; // float
		constexpr auto OccupyLimitTotalNum = 0x1528; // float
		constexpr auto OccupyLimitTotalNumConfig = 0x152c; // float
		constexpr auto OccupyLimitTotalPrice = 0x1530; // float
		constexpr auto OccupyLimitTotalPriceConfig = 0x1534; // float
		constexpr auto DefaultLifeCount = 0x1538; // int32_t
		constexpr auto DefaultDeathReduceLife = 0x153c; // int32_t
		constexpr auto DeathReduceLifeMulAdd = 0x1540; // float
		constexpr auto Level = 0x1568; // int32_t
		constexpr auto RandomLevel = 0x156c; // float
		constexpr auto MaxLevel = 0x1570; // int32_t
		constexpr auto CurrentExp = 0x1574; // float
		constexpr auto LevelUpExp = 0x1578; // float
		constexpr auto ExpMulAdd = 0x157c; // float
		constexpr auto HorseAddExpMulAdd = 0x1580; // float
		constexpr auto NeedGenerateBaseData = 0x1584; // bool
		constexpr auto BelongPlayerController = 0x1590; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto BelongPlayer = 0x1598; // TWeakObjectPtr<ASGCharacter>
		constexpr auto BelongPlayerName = 0x15a0; // FString
		constexpr auto CreatedSkillExp = 0x15b0; // float
		constexpr auto CurrentSkillPoints = 0x15b4; // int32_t
		constexpr auto AttributeCurveTable = 0x15b8; // UCurveTable*
		constexpr auto SkillDataTable = 0x15c0; // UCurveTable*
		constexpr auto AddSkillDataTable = 0x15c8; // UCurveTable*
		constexpr auto SkillMasteryDataTable = 0x15d0; // UCurveTable*
		constexpr auto SKillPointsConsumeTable = 0x15d8; // UCurveTable*
		constexpr auto SKillPointsAddPerkPointsTable = 0x15e0; // UCurveTable*
		constexpr auto SkillAndPerkPointsDataTable = 0x15e8; // UCurveTable*
		constexpr auto HungerRecoverHPThreshold = 0x15f0; // float
		constexpr auto UpdateDataInterval = 0x15f4; // float
		constexpr auto UpdateDataITimer = 0x15f8; // FTimerHandle
		constexpr auto bCheatAccRecovery = 0x1600; // char : 1
		constexpr auto ReplicatedBuffData = 0x1608; // TArray<FBuffNetData>
		constexpr auto bAppearanceEnabled = 0x1628; // bool
		constexpr auto Sex = 0x1629; // ECharacterSex
		constexpr auto bAutoDecayDust = 0x168c; // char : 1
		constexpr auto DustAmountRange = 0x1690; // FVector2D
		constexpr auto DustKeepDuration = 0x1698; // float
		constexpr auto DustDecaySpeed = 0x169c; // float
		constexpr auto DustAmount = 0x16a0; // float
		constexpr auto BloodAmountRange = 0x16a4; // FVector2D
		constexpr auto BloodAmountCurve = 0x16b0; // UCurveFloat*
		constexpr auto BloodAmount = 0x16b8; // float
		constexpr auto bAutoDecayBurn = 0x16bc; // char : 1
		constexpr auto BurnAmountRange = 0x16c0; // FVector2D
		constexpr auto BurnKeepDuration = 0x16c8; // float
		constexpr auto BurnDecaySpeed = 0x16cc; // float
		constexpr auto BurnAmount = 0x16d0; // float
		constexpr auto LevelUpEffectSpeed = 0x16d8; // float
		constexpr auto LevelUpEffectAmount = 0x16dc; // float
		constexpr auto PlatformInfo = 0x16e0; // FPlatformInfo
		constexpr auto PlatformStructures = 0x16f8; // TArray<FPlatformStructure>
		constexpr auto bSupportPlatformStructure = 0x1708; // char : 1
		constexpr auto bMaxStructures = 0x1708; // char : 1
		constexpr auto MaxPlatformStructuresNum = 0x170c; // int32_t
		constexpr auto MaxPlatformStructuresHeight = 0x1710; // int32_t
		constexpr auto MaxPlatformStructuresDistance2D = 0x1714; // int32_t
		constexpr auto PlatformAutoSpawnStructure = 0x1718; // ASGStructure*
		constexpr auto AutoSpawnStructureLocOffset = 0x1720; // FVector
		constexpr auto AutoSpawnStructureRotOffset = 0x172c; // FRotator
		constexpr auto bAutoSpawnPlatform = 0x1738; // char : 1
		constexpr auto AutoSpawnPlatformItem = 0x1740; // USGItem*
		constexpr auto bIsSleeping = 0x1748; // char : 1
		constexpr auto bIsPlaySleepMontage = 0x1748; // char : 1
		constexpr auto SleepMontage = 0x1750; // UAnimMontage*
		constexpr auto SleepDays = 0x1758; // int32_t
		constexpr auto SleepTimer = 0x1760; // FTimerHandle
		constexpr auto bIsDormant = 0x1768; // char : 1
		constexpr auto bVolumnStatistics = 0x1768; // char : 1
		constexpr auto bCheckStaticSpawnVolume = 0x1768; // char : 1
		constexpr auto bManualGenerated = 0x1768; // char : 1
		constexpr auto bIsReturnSpawnLocation = 0x1768; // char : 1
		constexpr auto bIsStronghold = 0x1768; // char : 1
		constexpr auto StrongholdRange = 0x176c; // float
		constexpr auto ChaseRange = 0x1770; // float
		constexpr auto SpawnLocation = 0x1774; // FVector
		constexpr auto SpawnRotation = 0x1780; // FRotator
		constexpr auto SleepLocation = 0x178c; // FVector
		constexpr auto SleepRotation = 0x1798; // FRotator
		constexpr auto RandomOriginLocation = 0x17a4; // FVector
		constexpr auto RandomRange = 0x17b0; // float
		constexpr auto bIsKeepingInPlace = 0x17b4; // char : 1
		constexpr auto KeepInPlaceLocation = 0x17b8; // FVector
		constexpr auto Struct_IgnoreActorData = 0x17c4; // FIgnoreActorData
		constexpr auto RelaxedReplicationData = 0x17d0; // FMontageReplicationData
		constexpr auto RelaxedMontage = 0x17e8; // UAnimMontage*
		constexpr auto VirtualPropStaticMeshs = 0x17f0; // TArray<FVirtualStaticMeshData>
		constexpr auto VirtualPropSkeletalMeshs = 0x1800; // TArray<FVirtualSkeletalMeshData>
		constexpr auto bClientWantUseCantCrouchWeapon = 0x1810; // char : 1
		constexpr auto bClientCanCrouch = 0x1810; // char : 1
		constexpr auto SukenTimer = 0x1818; // FTimerHandle
		constexpr auto CanFloatingInWater = 0x1821; // bool
		constexpr auto BoneFloatingMap = 0x1828; // TMap<FName, FBoneFloatingData>
		constexpr auto SunkenDuration = 0x1878; // float
		constexpr auto FloatingLinearDamping = 0x187c; // float
		constexpr auto FloatingAngularDamping = 0x1880; // float
		constexpr auto VoiceData = 0x1888; // FVoiceData
		constexpr auto Struct_MountConfig = 0x1898; // FMountConfig
		constexpr auto MountMontage = 0x1968; // UAnimMontage*
		constexpr auto DismountMontage = 0x1970; // UAnimMontage*
		constexpr auto GaitChangedMontage = 0x1978; // UAnimMontage*
		constexpr auto RiderData = 0x1998; // FRiderData
		constexpr auto VehicleBaseCharacter = 0x19c8; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto SG_AnimalVehicleCharacter = 0x19d0; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
		constexpr auto SG_HorseCharacter = 0x19d8; // TWeakObjectPtr<ASG_HorseCharacter>
		constexpr auto VirtualVehiclePawn = 0x19e0; // TWeakObjectPtr<APawn>
		constexpr auto VirtualRecusePawn = 0x19e8; // TWeakObjectPtr<ACharacter>
		constexpr auto IgnoreCollisionCharacter = 0x19f0; // TWeakObjectPtr<ACharacter>
		constexpr auto VirtualRiderData = 0x19f8; // TArray<FRiderData>
		constexpr auto bIsMovingCapsuleCollision = 0x1a08; // char : 1
		constexpr auto TMap_RiderAnims = 0x1a10; // TMap<EVehicleType, FAnimalsAnimsConfig>
		constexpr auto bEnableFastMount = 0x1a60; // int32_t
		constexpr auto bEnableFastDismount = 0x1a64; // int32_t
		constexpr auto bEnableMovingMount = 0x1a68; // int32_t
		constexpr auto bEnableFastControlVehicle = 0x1a70; // int32_t
		constexpr auto HeavyArmorPunishTable = 0x1a78; // UCurveTable*
		constexpr auto LightArmorPunishTable = 0x1a80; // UCurveTable*
		constexpr auto RiderCharacter = 0x1a88; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto SaveGameRiderCharacter = 0x1a90; // ABaseCharacter*
		constexpr auto BePulledCharacter = 0x1ab8; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto bReceiveUpCharacterSetsWeight = 0x1ad8; // char : 1
		constexpr auto bIgnoreOtherCapsuleImpulse = 0x1bfc; // char : 1
		constexpr auto bCanCapsuleImpulse = 0x1bfc; // char : 1
		constexpr auto CapsuleImpulseDistance = 0x1c00; // float
		constexpr auto bImmobilized = 0x1c04; // char : 1
		constexpr auto bPreventImmobilize = 0x1c04; // char : 1
		constexpr auto BeFollowCharacters = 0x1c08; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto FormationIndex = 0x1c18; // char
		constexpr auto bShowDamageDebug = 0x1c28; // char : 1
		constexpr auto StartNewMoveRightAxisTime = 0x1c30; // double
		constexpr auto CallFollowRadius = 0x1c38; // float
		constexpr auto KillTexture = 0x1c40; // UTexture2D*
		constexpr auto bCanCreateBloodDecal = 0x1c48; // char : 1
		constexpr auto DestroyNoDropFlag = 0x1c48; // char : 1
		constexpr auto bAllowLogicInactive = 0x1c48; // char : 1
		constexpr auto bLogicInactiveDestroy = 0x1c48; // char : 1
		constexpr auto LastLogicInactiveTime = 0x1c50; // double
		constexpr auto bLogicInactive = 0x1c58; // char : 1
		constexpr auto TotalLogicInactiveTime = 0x1c5c; // float
		constexpr auto LastLogicInactiveDateTime = 0x1c60; // FDateTime
		constexpr auto bParentManageLogicActive = 0x1c68; // char : 1
		constexpr auto LogicInactiveUnRegisteredComponents = 0x1ce8; // TArray<TWeakObjectPtr<UActorComponent>>
		constexpr auto UpCharacterSets = 0x1d30; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto BaseFloorActor = 0x1d40; // TWeakObjectPtr<AActor>
		constexpr auto UpdateRateShiftBucket = 0x1d48; // EUpdateRateShiftBucket
		constexpr auto BaseNonRenderedUpdateRate = 0x1d4c; // int32_t
		constexpr auto bShouldUseLodMap = 0x1d50; // char : 1
		constexpr auto LODToFrameSkipMap = 0x1d58; // TMap<int32_t, int32_t>
		constexpr auto BaseVisibleDistanceFactorThesholds = 0x1da8; // TArray<float>
		constexpr auto bStepShouldMakeNoise = 0x1db8; // char : 1
		constexpr auto bShowMakeNoise = 0x1db8; // char : 1
		constexpr auto BaseMakeNoiseRange = 0x1dbc; // float
		constexpr auto WeaponDefaultNoiseValue = 0x1dc0; // float
		constexpr auto EquippedItemDefaultNoiseValue = 0x1dc4; // float
		constexpr auto TeleportToPlayerActorTimer = 0x1de8; // FTimerHandle
		constexpr auto Enum_AIAggressionType = 0x1df1; // EAIAggressionType
		constexpr auto AIAttackFilters = 0x1df8; // TArray<bool>
		constexpr auto ChunkLifeCount = 0x1e08; // int32_t
		constexpr auto ChunkUid = 0x1e0c; // FGuid
		constexpr auto ReceiveCommandRange = 0x1e28; // float
		constexpr auto ExtraGravityZMulAdd = 0x1e2c; // float
		constexpr auto ExtraJumpZVelocityMulAdd = 0x1e30; // float
		constexpr auto OverrideWalkableFloorAngle = 0x1e34; // float
		constexpr auto HasForcedAttackEnemy = 0x1e38; // char : 1
		constexpr auto bUseJournal = 0x1e38; // char : 1
		constexpr auto TMap_FollowDistanceConfig = 0x1e40; // TMap<EAIFollowType, float>
		constexpr auto Enum_AIFollowType = 0x1e90; // EAIFollowType
		constexpr auto Enum_AISenseSightRadiusType = 0x1e91; // EAISenseSightRadiusType
		constexpr auto AISenseSightRadiusMulAdd = 0x1e94; // float
		constexpr auto AISenseHearRadiusMulAdd = 0x1e98; // float
		constexpr auto SG_RoadPathConfig = 0x1ea0; // FRoadPathConfig
		constexpr auto CustomDesiredFollowOffset = 0x1ef0; // FVector2D
		constexpr auto bIsLeader = 0x1ef8; // char : 1
		constexpr auto SpecialSpawnDestroyDistanceToPlayer = 0x1efc; // float
		constexpr auto SpecialSpawnDestroyAngleToPlayer = 0x1f00; // float
		constexpr auto RefreshSpecialSpawnNpcDataInterval = 0x1f04; // float
		constexpr auto bIsGuildEventSpawnNpc = 0x1f08; // char : 1
		constexpr auto bIsSpecialSpawnNpc = 0x1f08; // char : 1
		constexpr auto bShouldCheckDestroyTime = 0x1f08; // char : 1
		constexpr auto bIsWithinDestroyTime = 0x1f08; // char : 1
		constexpr auto SpecialSpawnStartDestroyTime = 0x1f0c; // float
		constexpr auto SpecialSpawnStopDestroyTime = 0x1f10; // float
		constexpr auto SpecialNpcSpawnInfo = 0x1f14; // TWeakObjectPtr<ANpcSpawnInfo>
		constexpr auto SpecialNpcEnemy = 0x1f1c; // TWeakObjectPtr<AActor>
		constexpr auto SpecialTargetLoc = 0x1f24; // FVector
		constexpr auto SpecialNpcAISenseSightRadiusMulAdd = 0x1f30; // float
		constexpr auto SpecialNpcSpawnInfoIndex = 0x1f34; // int32_t
		constexpr auto LastRefreshSpecialSpawnNpcDataTime = 0x1f38; // double
		constexpr auto BindNpcSpawnVolume = 0x1f40; // TWeakObjectPtr<ANpcSpawnVolume>
		constexpr auto CurGuardIndex = 0x1f48; // int32_t
		constexpr auto bIsEquipWeaponGuard = 0x1f4c; // char : 1
		constexpr auto bIsWaitingChangeGuard = 0x1f4c; // char : 1
		constexpr auto WaitingChangeGuardTimer = 0x1f50; // FTimerHandle
		constexpr auto WaitGuardTime = 0x1f58; // float
		constexpr auto bWantControlStructure = 0x1f5c; // char : 1
		constexpr auto AISenseSightCheckSocketName = 0x1f60; // TArray<FName>
		constexpr auto OfficialJob = 0x1f70; // int32_t
		constexpr auto bCheatToggleRole = 0x1f74; // char : 1
		constexpr auto PreviewRiderAnim = 0x1f78; // UAnimSequence*
		constexpr auto PreviewVehicleAnim = 0x1f80; // UAnimSequence*
		constexpr auto bAllowSleep = 0x1f88; // char : 1
		constexpr auto bForceSleep = 0x1f88; // char : 1
		constexpr auto StartSleepTime = 0x1f90; // FString
		constexpr auto EndSleepTime = 0x1fa0; // FString
		constexpr auto SleepSensesRangeMul = 0x1fb0; // float
		constexpr auto bIsFleeing = 0x1fb4; // char : 1
		constexpr auto bXianChengGuard = 0x1fb4; // char : 1
		constexpr auto DeadPreviewSetting = 0x1fc8; // FPreviewCameraSetting
		constexpr auto CurrentVigilanceValue = 0x200c; // float
		constexpr auto WorkingProgress = 0x2010; // float
		constexpr auto MaxWorkingProgress = 0x2014; // float
		constexpr auto bShowWorkingProgress = 0x2018; // char : 1
		constexpr auto bHadBattleSafeVolumeHandle = 0x2070; // char : 1
		constexpr auto bIsWorking = 0x2070; // char : 1
		constexpr auto bEnvironmentChanged = 0x2070; // char : 1
		constexpr auto InAgainstEnvironmentStructure = 0x2078; // TArray<ASGStructureItemContainer*>
		constexpr auto CurrentEffectEV = 0x2088; // ANatureEnvironmentVolume*
		constexpr auto CurrentEffectEVType = 0x2090; // EEnvironmentVolumeType
		constexpr auto AddBuffEnvironmentType = 0x2091; // EEnvironmentVolumeType
		constexpr auto ResistanceHot = 0x2094; // float
		constexpr auto ResistanceCold = 0x2098; // float
		constexpr auto ResistancePoison = 0x209c; // float
		constexpr auto ResistanceHotAdd = 0x20a0; // float
		constexpr auto ResistanceColdAdd = 0x20a4; // float
		constexpr auto ResistancePoisonAdd = 0x20a8; // float
		constexpr auto ResistanceHotAddMultiAdd = 0x20ac; // float
		constexpr auto ResistanceColdAddMultiAdd = 0x20b0; // float
		constexpr auto ResistancePoisonAddMultiAdd = 0x20b4; // float
		constexpr auto ResistanceHotMultiAdd = 0x20b8; // float
		constexpr auto ResistanceColdMultiAdd = 0x20bc; // float
		constexpr auto ResistancePoisonMultiAdd = 0x20c0; // float
		constexpr auto ProtectionEVValue = 0x20c8; // TArray<float>
		constexpr auto WoundMaxHPMulAdd = 0x20e0; // float
		constexpr auto WoundMaxSPMulAdd = 0x20e4; // float
		constexpr auto WoundMaxWeightMulAdd = 0x20e8; // float
	}

	namespace n_UWrapBox {
		constexpr auto InnerSlotPadding = 0x120; // FVector2D
		constexpr auto WrapWidth = 0x128; // float
		constexpr auto WrapSize = 0x12c; // float
		constexpr auto bExplicitWrapWidth = 0x130; // bool
		constexpr auto bExplicitWrapSize = 0x131; // bool
		constexpr auto Orientation = 0x132; // EOrientation
	}

	namespace n_UAchievementRow {
		constexpr auto RewardDamageMultiplyClass = 0x260; // UAchievementRewardDamageMultiply*
		constexpr auto RewardTitleClass = 0x268; // UAchievementRewardTitle*
		constexpr auto IntConditionClass = 0x270; // UAchievementConditionWidget*
		constexpr auto Uint8ConditionClass = 0x278; // UAchievementConditionWidget*
		constexpr auto FloatConditionClass = 0x280; // UAchievementConditionWidget*
		constexpr auto BoolConditionClass = 0x288; // UAchievementConditionWidget*
		constexpr auto BindAchievementConfig = 0x2d8; // USGAchievement*
		constexpr auto TbAccomplishTime = 0x2e0; // UTextBlock*
		constexpr auto TbTitle = 0x2e8; // UTextBlock*
		constexpr auto TbDescription = 0x2f0; // UTextBlock*
		constexpr auto TbHonorPoint = 0x2f8; // UTextBlock*
		constexpr auto HbHonorPoint = 0x300; // UHorizontalBox*
		constexpr auto UGPRewardTitle = 0x308; // UUniformGridPanel*
		constexpr auto UGPConditions = 0x310; // UUniformGridPanel*
		constexpr auto UGPDamageMultiply = 0x318; // UUniformGridPanel*
		constexpr auto ImgIcon = 0x320; // UImage*
		constexpr auto TbExp = 0x328; // UTextBlock*
		constexpr auto HbExp = 0x330; // UHorizontalBox*
		constexpr auto TbCopper = 0x338; // UTextBlock*
		constexpr auto HbCopper = 0x340; // UHorizontalBox*
		constexpr auto ImgGuildImageTexture = 0x348; // UImage*
		constexpr auto UnlockImage = 0x350; // UCanvasPanel*
	}

	namespace n_UMaterialFunction {
		constexpr auto Description = 0x40; // FString
		constexpr auto bExposeToLibrary = 0x50; // char : 1
		constexpr auto bPrefixParameterNames = 0x50; // char : 1
	}

	namespace n_UUI_StructureHelp {
		constexpr auto NameText = 0x2d8; // UTextBlock*
		constexpr auto MultiLineEditableText_Help = 0x2e0; // UMultiLineEditableText*
	}

	namespace n_UWeatherInterpData {
		constexpr auto bIsMainLoopInterp = 0x28; // bool
	}

	namespace n_UAchievementPanel {
		constexpr auto AchievementRowClass = 0x260; // UAchievementRow*
		constexpr auto BindAchievementConfigs = 0x268; // TMap<FString, USGAchievement*>
		constexpr auto AllAchievementRows = 0x2b8; // TArray<UAchievementRow*>
		constexpr auto BindAchievementType = 0x2c8; // FString
		constexpr auto AccomplishAchievementDatas = 0x2d8; // TArray<FAccomplishAchievementData>
		constexpr auto AchievementInitTask = 0x2e8; // TMap<FString, USGAchievement*>
		constexpr auto UGPAchievement = 0x348; // UUniformGridPanel*
		constexpr auto AchievementScroll = 0x350; // UScrollBox*
	}

	namespace n_ASGSpectatorPawn {
		constexpr auto ViewTraceDistatnce = 0x398; // float
		constexpr auto ViewTraceRadius = 0x39c; // float
		constexpr auto LerpSpeed = 0x3a0; // float
	}

	namespace n_UAnimSharingStateInstance {
		constexpr auto AnimationToPlay = 0x2c0; // UAnimSequence*
		constexpr auto PermutationTimeOffset = 0x2c8; // float
		constexpr auto PlayRate = 0x2cc; // float
		constexpr auto bStateBool = 0x2d0; // bool
		constexpr auto Instance = 0x2d8; // UAnimSharingInstance*
	}

	namespace n_UXianChengRelationShipItem {
		constexpr auto AllianBkTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HostileBkTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto AllianTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto HostileTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto WeRiseAllianTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto HostileRiseAllianTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto AlianText = 0x350; // FText
		constexpr auto HostileText = 0x368; // FText
		constexpr auto WeRiseAllianText = 0x380; // FText
		constexpr auto HostileRiseAllianText = 0x398; // FText
		constexpr auto CheckedStyle = 0x3b0; // FButtonStyle
		constexpr auto UnCheckedStyle = 0x628; // FButtonStyle
		constexpr auto ImgBk = 0x8a0; // UImage*
		constexpr auto TbGuildName = 0x8a8; // UTextBlock*
		constexpr auto ImgRelationShip = 0x8b0; // UImage*
		constexpr auto TbRelationShip = 0x8b8; // UTextBlock*
		constexpr auto BtAllian = 0x8c0; // UButton*
		constexpr auto BtHostile = 0x8c8; // UButton*
	}

	namespace n_USourceEffectPhaserPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectPhaserSettings
	}

	namespace n_UWBP_LanguageComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_53 = 0x370; // UCanvasPanel*
		constexpr auto SettingComboBox = 0x378; // UComboBoxString*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto Title = 0x388; // FText
		constexpr auto Cultures = 0x3a0; // TArray<FText>
	}

	namespace n_ASGStructureStable {
		constexpr auto bClearZeroLifeChunk = 0xf70; // char : 1
		constexpr auto SearchCharacterInterval = 0xf74; // float
		constexpr auto bIsDebugSearchCharacter = 0xf78; // char : 1
		constexpr auto LinkAnimalChunkInfo = 0xf98; // TArray<FLinkChunkWithTrainerInfo>
		constexpr auto LinkGeneralChunkGuid = 0xfa8; // TArray<FGuid>
		constexpr auto LinkReborningChunkInfo = 0xfb8; // TArray<FLinkChunkWithTrainerInfo>
		constexpr auto FoodDataTable = 0xfc8; // UDataTable*
		constexpr auto RebornReduceFoodPerSecond = 0xfd0; // float
		constexpr auto TainerSeatSocketName = 0xfe8; // TArray<FName>
		constexpr auto NumTainerSeats = 0xff8; // int32_t
		constexpr auto TrainerDataTable = 0x1000; // UDataTable*
		constexpr auto SystemTrainerConfig = 0x1008; // TMap<ESystemTrainerType, FSystemTrainerInfo>
		constexpr auto TrainerWorkTimeThreshold = 0x1058; // float
		constexpr auto ReleaseTraceOffsetUp = 0x10c0; // float
		constexpr auto ReleaseTraceOffsetDown = 0x10c4; // float
		constexpr auto ReleaseRandomRadiusMin = 0x10c8; // float
		constexpr auto ReleaseRandomRadiusMax = 0x10cc; // float
		constexpr auto ReleaseToleranceHeight = 0x10d0; // float
		constexpr auto ReleaseRandomRadiusMinByOperator = 0x10d4; // float
		constexpr auto ReleaseRandomRadiusMaxByOperator = 0x10d8; // float
		constexpr auto ReleaseToleranceHeightByOperator = 0x10dc; // float
		constexpr auto VaildReleaseLocation = 0x10e0; // FVector
		constexpr auto CalcReborningHandle = 0x10f0; // FTimerHandle
		constexpr auto CalcReborningTimerInterval = 0x10f8; // float
		constexpr auto CalcWorkingHandle = 0x1100; // FTimerHandle
		constexpr auto CalcWorkingTimerInterval = 0x1108; // float
		constexpr auto UpdateAnimalDataHandle = 0x1110; // FTimerHandle
		constexpr auto UpdateAnimalDataTimerInterval = 0x1118; // float
		constexpr auto bUseAnimalNetData = 0x111c; // char : 1
		constexpr auto ShowAnimalMaxNum = 0x1120; // int32_t
		constexpr auto LastAnimalCount = 0x1124; // int32_t
		constexpr auto bUseNiagara = 0x1128; // char : 1
		constexpr auto NiagaraAsset = 0x1130; // UNiagaraSystem*
		constexpr auto NiaAnimalSeparation = 0x1138; // float
		constexpr auto NiaAnimalScale = 0x113c; // FVector
		constexpr auto NiaComponentOffset = 0x1148; // FVector
		constexpr auto AnimalNiagaraComponent = 0x1154; // TWeakObjectPtr<UNiagaraComponent>
	}

	namespace n_UGlobalMapActorWidget {
		constexpr auto IconTexture = 0x260; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto BindGlobalMapActor = 0x2d8; // AGlobalMapActor*
		constexpr auto ImgIcon = 0x2e0; // UImage*
		constexpr auto TbName = 0x2e8; // UTextBlock*
		constexpr auto NameCanvas = 0x2f0; // UCanvasPanel*
		constexpr auto TipsOverlay = 0x2f8; // UOverlay*
		constexpr auto IdCanvas = 0x300; // UCanvasPanel*
		constexpr auto TbId = 0x308; // UTextBlock*
		constexpr auto ImgNewServer = 0x310; // UImage*
		constexpr auto ImgSite = 0x318; // UImage*
	}

	namespace n_UUI_PlayerShowRequirement {
		constexpr auto ItemNameText = 0x260; // UTextBlock*
		constexpr auto ItemAmountText = 0x268; // UTextBlock*
		constexpr auto AmountDivisionText = 0x270; // UTextBlock*
		constexpr auto MaxValueText = 0x278; // UTextBlock*
		constexpr auto MeetColor = 0x280; // FLinearColor
		constexpr auto UnMeetColor = 0x290; // FLinearColor
	}

	namespace n_UAsyncActionLoadPrimaryAssetClass {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UTextRenderComponent {
		constexpr auto Text = 0x488; // FText
		constexpr auto TextMaterial = 0x4a0; // UMaterialInterface*
		constexpr auto Font = 0x4a8; // UFont*
		constexpr auto HorizontalAlignment = 0x4b0; // EHorizTextAligment
		constexpr auto VerticalAlignment = 0x4b1; // EVerticalTextAligment
		constexpr auto TextRenderColor = 0x4b4; // FColor
		constexpr auto XScale = 0x4b8; // float
		constexpr auto YScale = 0x4bc; // float
		constexpr auto WorldSize = 0x4c0; // float
		constexpr auto InvDefaultSize = 0x4c4; // float
		constexpr auto HorizSpacingAdjust = 0x4c8; // float
		constexpr auto VertSpacingAdjust = 0x4cc; // float
		constexpr auto bAlwaysRenderAsText = 0x4d0; // char : 1
	}

	namespace n_UUI_StructureOccupyGuildEventSlot {
		constexpr auto IconBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x7]
		constexpr auto CapitalBrush = 0x378; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto IconImage = 0x440; // UImage*
		constexpr auto ConflictTextBlock = 0x448; // UTextBlock*
		constexpr auto ModifyTextBlock = 0x450; // UTextBlock*
		constexpr auto CapitalImage = 0x458; // UImage*
		constexpr auto CapitalTextBlock = 0x460; // UTextBlock*
		constexpr auto ModifyConflictButton = 0x468; // UButton*
		constexpr auto CurEventGuildType = 0x470; // EEventGuildType
		constexpr auto RemoteActor = 0x474; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x480; // USGUI*
	}

	namespace n_AMagicLeapARPinInfoActorBase {
		constexpr auto PinId = 0x310; // FGuid
		constexpr auto bVisibilityOverride = 0x320; // bool
	}

	namespace n_UUI_TransAllianceOfficial {
		constexpr auto AllianceMemberSlotClass = 0x2d8; // UTransAllianceOfficialSlot*
		constexpr auto GuildListVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto PrePageButton = 0x2e8; // UButton*
		constexpr auto NextPageButton = 0x2f0; // UButton*
		constexpr auto SubmitButton = 0x2f8; // UButton*
		constexpr auto ExitButton = 0x300; // UButton*
		constexpr auto ShowPageText = 0x308; // UTextBlock*
		constexpr auto AllianceMemberNumPerPage = 0x310; // int32_t
	}

	namespace n_URevolveProperties {
		constexpr auto RevolutionDegrees = 0x60; // double
		constexpr auto RevolutionDegreesOffset = 0x68; // double
		constexpr auto Steps = 0x70; // int32_t
		constexpr auto bReverseRevolutionDirection = 0x74; // bool
		constexpr auto bFlipMesh = 0x75; // bool
		constexpr auto bProfileIsCrossSectionOfSide = 0x76; // bool
		constexpr auto PolygroupMode = 0x77; // ERevolvePropertiesPolygroupMode
		constexpr auto QuadSplitMode = 0x78; // ERevolvePropertiesQuadSplit
		constexpr auto DiagonalProportionTolerance = 0x80; // double
		constexpr auto CapFillMode = 0x88; // ERevolvePropertiesCapFillMode
		constexpr auto bWeldFullRevolution = 0x89; // bool
		constexpr auto bWeldVertsOnAxis = 0x8a; // bool
		constexpr auto AxisWeldTolerance = 0x90; // double
		constexpr auto bSharpNormals = 0x98; // bool
		constexpr auto SharpNormalAngleTolerance = 0xa0; // double
		constexpr auto bFlipVs = 0xa8; // bool
		constexpr auto bUVsSkipFullyWeldedEdges = 0xa9; // bool
	}

	namespace n_UMovieSceneEventTrack {
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto EventPosition = 0x84; // EFireEventsAtPosition
		constexpr auto Sections = 0x88; // TArray<UMovieSceneSection*>
	}

	namespace n_UPositionPlaneGizmo {
		constexpr auto CenterBallShape = 0x88; // UPreviewMesh*
		constexpr auto CenterBallMaterial = 0x90; // UMaterialInstance*
	}

	namespace n_UAnimSharingTransitionInstance {
		constexpr auto FromComponent = 0x2c0; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto ToComponent = 0x2c8; // TWeakObjectPtr<USkeletalMeshComponent>
		constexpr auto BlendTime = 0x2d0; // float
		constexpr auto bBlendBool = 0x2d4; // bool
	}

	namespace n_UMeshConstraintProperties {
		constexpr auto bPreserveSharpEdges = 0x60; // bool
		constexpr auto MeshBoundaryConstraint = 0x61; // EMeshBoundaryConstraint
		constexpr auto GroupBoundaryConstraint = 0x62; // EGroupBoundaryConstraint
		constexpr auto MaterialBoundaryConstraint = 0x63; // EMaterialBoundaryConstraint
		constexpr auto bPreventNormalFlips = 0x64; // bool
	}

	namespace n_UVectorFieldAnimated {
		constexpr auto Texture = 0x48; // UTexture2D*
		constexpr auto ConstructionOp = 0x50; // EVectorFieldConstructionOp
		constexpr auto VolumeSizeX = 0x54; // int32_t
		constexpr auto VolumeSizeY = 0x58; // int32_t
		constexpr auto VolumeSizeZ = 0x5c; // int32_t
		constexpr auto SubImagesX = 0x60; // int32_t
		constexpr auto SubImagesY = 0x64; // int32_t
		constexpr auto FrameCount = 0x68; // int32_t
		constexpr auto FramesPerSecond = 0x6c; // float
		constexpr auto bLoop = 0x70; // char : 1
		constexpr auto NoiseField = 0x78; // UVectorFieldStatic*
		constexpr auto NoiseScale = 0x80; // float
		constexpr auto NoiseMax = 0x84; // float
	}

	namespace n_USGDamageType {
		constexpr auto ImpactEffectData = 0x40; // FImpactEffectData
		constexpr auto bIsMeleeAttack = 0x758; // char : 1
		constexpr auto bDamageCropLand = 0x758; // char : 1
		constexpr auto DebugDecal = 0x758; // char : 1
		constexpr auto DebugStaticBloodDecal = 0x758; // char : 1
		constexpr auto CentainlyBuffList = 0x760; // TArray<USGBuff*>
		constexpr auto RandomAddBuffRate = 0x770; // float
		constexpr auto bAllUseRandomAddBuffRate = 0x774; // char : 1
		constexpr auto RandomBuffList = 0x778; // TArray<FBuffEntry>
		constexpr auto bAddBuffToFriendly = 0x788; // char : 1
		constexpr auto DamageAdjustMul = 0x790; // TMap<AActor*, float>
	}

	namespace n_UMaterialExpressionMapARPassthroughCameraUV {
		constexpr auto Coordinates = 0x40; // FExpressionInput
	}

	namespace n_UPaperFlipbook {
		constexpr auto FramesPerSecond = 0x28; // float
		constexpr auto KeyFrames = 0x30; // TArray<FPaperFlipbookKeyFrame>
		constexpr auto DefaultMaterial = 0x40; // UMaterialInterface*
		constexpr auto CollisionSource = 0x48; // EFlipbookCollisionMode
	}

	namespace n_UNiagaraDataInterfaceCurve {
		constexpr auto Curve = 0x70; // FRichCurve
	}

	namespace n_UCharacterRandomAppearanceWeight {
		constexpr auto Sex = 0x28; // float [0x2]
		constexpr auto Height = 0x30; // TArray<FAppearanceFloatWeightData>
		constexpr auto BodyFat = 0x40; // TArray<FAppearanceFloatWeightData>
		constexpr auto strong = 0x50; // TArray<FAppearanceFloatWeightData>
		constexpr auto Dirt = 0x60; // TArray<FAppearanceFloatWeightData>
	}

	namespace n_UMovingTurn_AnimNotifyState {
		constexpr auto TurnMontage = 0x30; // UAnimMontage*
		constexpr auto RotationCurveAsset = 0x38; // UCurveFloat*
		constexpr auto StopBlendTime = 0x40; // float
		constexpr auto bOnlyTriggerOnServer = 0x44; // char : 1
		constexpr auto bIsForbidMove = 0x44; // char : 1
		constexpr auto bForceStopMontage = 0x44; // char : 1
		constexpr auto MaxTurnYaw = 0x48; // float
	}

	namespace n_UUI_Identifies {
		constexpr auto TbIdentifies = 0x2d8; // UTextBlock*
	}

	namespace n_UInterpTrackInstMove {
		constexpr auto ResetLocation = 0x28; // FVector
		constexpr auto ResetRotation = 0x34; // FRotator
	}

	namespace n_UGuildEventColumn {
		constexpr auto BaseConflictImgLength = 0x260; // float
		constexpr auto ExtraConflictImgLength = 0x264; // float
		constexpr auto IconImg = 0x268; // UImage*
		constexpr auto EventGuildTypeText = 0x270; // UTextBlock*
		constexpr auto ConflictImg = 0x278; // UImage*
		constexpr auto DetailBtn = 0x280; // UButton*
		constexpr auto ConflictTb = 0x288; // UTextBlock*
		constexpr auto DescriptionTb = 0x290; // UTextBlock*
		constexpr auto DeclareWarBtn = 0x298; // UButton*
		constexpr auto ParentGuildEventUI = 0x2a0; // TWeakObjectPtr<UUI_GuildEvent>
		constexpr auto EventGuildType = 0x2a8; // EEventGuildType
		constexpr auto DescriptionText = 0x2b0; // FText
	}

	namespace n_UMovieSceneCameraShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
		constexpr auto ShakeClass = 0x108; // UMatineeCameraShake*
		constexpr auto PlayScale = 0x110; // float
		constexpr auto PlaySpace = 0x114; // ECameraShakePlaySpace
		constexpr auto UserDefinedPlaySpace = 0x118; // FRotator
	}

	namespace n_UTimeSynchronizationSource {
		constexpr auto bUseForSynchronization = 0x28; // bool
		constexpr auto FrameOffset = 0x2c; // int32_t
	}

	namespace n_UN_FunctionSlot {
		constexpr auto ParentUI = 0x260; // UUI_N_AllFunction*
		constexpr auto FunctionSlotType = 0x268; // EUIFunctionSlotType
		constexpr auto NormalTexture2D = 0x270; // TSoftObjectPtr<UTexture2D> [0x13]
		constexpr auto HoverTexture2D = 0x568; // TSoftObjectPtr<UTexture2D> [0x13]
		constexpr auto ClickTexture2D = 0x860; // TSoftObjectPtr<UTexture2D> [0x13]
		constexpr auto ActiveTexture2D = 0xb58; // TSoftObjectPtr<UTexture2D> [0x13]
		constexpr auto AllFunctionTipsText = 0xe50; // TArray<FText>
		constexpr auto FunctionImage = 0xe60; // UImage*
		constexpr auto bHover = 0xe68; // char : 1
		constexpr auto bPress = 0xe68; // char : 1
		constexpr auto bIsActive = 0xe68; // char : 1
		constexpr auto PendingImage = 0xe70; // UImage*
		constexpr auto TwinkleImage = 0xe78; // UImage*
	}

	namespace n_ULandscapeLayerInfoObject {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto PhysMaterial = 0x30; // UPhysicalMaterial*
		constexpr auto Hardness = 0x38; // float
		constexpr auto LayerUsageDebugColor = 0x3c; // FLinearColor
	}

	namespace n_AGameplayAbilityTargetActor_GroundTrace {
		constexpr auto CollisionRadius = 0x440; // float
		constexpr auto CollisionHeight = 0x444; // float
	}

	namespace n_USlotRespawnButton {
		constexpr auto RespawnButtonName = 0x260; // FName
		constexpr auto RespawnButtonTextName = 0x268; // FName
		constexpr auto RespawnIconName = 0x270; // FName
		constexpr auto IconConfigTexture = 0x278; // TMap<ESpawnLocationType, TSoftObjectPtr<UTexture2D>>
	}

	namespace n_UGuanAiFlagSlot {
		constexpr auto GuanAiNameText = 0x2d8; // UTextBlock*
		constexpr auto GuanAiImage = 0x2e0; // UImage*
		constexpr auto OwnerGuildPanel = 0x2e8; // UCanvasPanel*
		constexpr auto TeamInfoSlotOwnerGuild = 0x2f0; // UTaishouTeamInfoSlot*
		constexpr auto AttackGuildPanel = 0x2f8; // UCanvasPanel*
		constexpr auto TeamInfoSlotAttackGuild = 0x300; // UTaishouTeamInfoSlot*
		constexpr auto BattleStateImage = 0x308; // UImage*
		constexpr auto BattleDoingStateImage = 0x310; // UImage*
		constexpr auto GuanAiTime = 0x318; // UTextBlock*
		constexpr auto OwnerGuildImagePos = 0x320; // FVector2D
		constexpr auto OwnerGuildImageMiddlePos = 0x328; // FVector2D
		constexpr auto GuanAiId = 0x330; // int32_t
	}

	namespace n_UARObjectComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARObjectUpdatePayload
	}

	namespace n_UARTexture {
		constexpr auto TextureType = 0xd8; // EARTextureType
		constexpr auto Timestamp = 0xdc; // float
		constexpr auto ExternalTextureGuid = 0xe0; // FGuid
		constexpr auto Size = 0xf0; // FVector2D
	}

	namespace n_UBTService_SGBlueprintBase {
		constexpr auto SG_AIController = 0x98; // ASG_AIController*
		constexpr auto SG_GeneralAIController = 0xa0; // ASGGeneralAIController*
		constexpr auto SG_GeneralCharacter = 0xa8; // ASGGeneralCharacter*
	}

	namespace n_UAudioSettings {
		constexpr auto DefaultSoundClassName = 0x38; // FSoftObjectPath
		constexpr auto DefaultMediaSoundClassName = 0x50; // FSoftObjectPath
		constexpr auto DefaultSoundConcurrencyName = 0x68; // FSoftObjectPath
		constexpr auto DefaultBaseSoundMix = 0x80; // FSoftObjectPath
		constexpr auto VoiPSoundClass = 0x98; // FSoftObjectPath
		constexpr auto MasterSubmix = 0xb0; // FSoftObjectPath
		constexpr auto ReverbSubmix = 0xc8; // FSoftObjectPath
		constexpr auto EQSubmix = 0xe0; // FSoftObjectPath
		constexpr auto VoiPSampleRate = 0xf8; // EVoiceSampleRate
		constexpr auto DefaultReverbSendLevel = 0xfc; // float
		constexpr auto MaximumConcurrentStreams = 0x100; // int32_t
		constexpr auto GlobalMinPitchScale = 0x104; // float
		constexpr auto GlobalMaxPitchScale = 0x108; // float
		constexpr auto QualityLevels = 0x110; // TArray<FAudioQualitySettings>
		constexpr auto bAllowPlayWhenSilent = 0x120; // char : 1
		constexpr auto bDisableMasterEQ = 0x120; // char : 1
		constexpr auto bAllowCenterChannel3DPanning = 0x120; // char : 1
		constexpr auto NumStoppingSources = 0x124; // uint32_t
		constexpr auto PanningMethod = 0x128; // EPanningMethod
		constexpr auto MonoChannelUpmixMethod = 0x129; // EMonoChannelUpmixMethod
		constexpr auto DialogueFilenameFormat = 0x130; // FString
	}

	namespace n_UNiagaraSimulationStageGeneric {
		constexpr auto IterationSource = 0x40; // ENiagaraIterationSource
		constexpr auto Iterations = 0x44; // int32_t
		constexpr auto bSpawnOnly = 0x48; // char : 1
		constexpr auto bDisablePartialParticleUpdate = 0x48; // char : 1
		constexpr auto DataInterface = 0x50; // FNiagaraVariableDataInterfaceBinding
	}

	namespace n_UARTrackedGeometry {
		constexpr auto UniqueId = 0x28; // FGuid
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto UnderlyingMesh = 0xb0; // UMRMeshComponent*
		constexpr auto ObjectClassification = 0xb8; // EARObjectClassification
		constexpr auto LastUpdateFrameNumber = 0xd0; // int32_t
		constexpr auto DebugName = 0xe0; // FName
	}

	namespace n_ASGStructureT2Basement {
		constexpr auto AttackBasementFlag = 0x1298; // ASGStructureOccupyFlag*
		constexpr auto DefenseBasementFlag = 0x12a0; // ASGStructureOccupyFlag*
		constexpr auto BattleGroundMusicProgressThreshold = 0x12a8; // float
	}

	namespace n_UVertexBrushSculptProperties {
		constexpr auto PrimaryBrushType = 0x60; // EMeshVertexSculptBrushType
		constexpr auto PrimaryFalloffType = 0x61; // EMeshSculptFalloffType
		constexpr auto bFreezeTarget = 0x62; // bool
		constexpr auto bSmoothErases = 0x63; // bool
	}

	namespace n_USkeletalMeshSimulationComponent {
		constexpr auto PhysicalMaterial = 0xc8; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0xd0; // AChaosSolverActor*
		constexpr auto OverridePhysicsAsset = 0xd8; // UPhysicsAsset*
		constexpr auto bSimulating = 0xe0; // bool
		constexpr auto bNotifyCollisions = 0xe1; // bool
		constexpr auto ObjectType = 0xe2; // EObjectStateTypeEnum
		constexpr auto Density = 0xe4; // float
		constexpr auto MinMass = 0xe8; // float
		constexpr auto MaxMass = 0xec; // float
		constexpr auto CollisionType = 0xf0; // ECollisionTypeEnum
		constexpr auto ImplicitShapeParticlesPerUnitArea = 0xf4; // float
		constexpr auto ImplicitShapeMinNumParticles = 0xf8; // int32_t
		constexpr auto ImplicitShapeMaxNumParticles = 0xfc; // int32_t
		constexpr auto MinLevelSetResolution = 0x100; // int32_t
		constexpr auto MaxLevelSetResolution = 0x104; // int32_t
		constexpr auto CollisionGroup = 0x108; // int32_t
		constexpr auto InitialVelocityType = 0x10c; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x110; // FVector
		constexpr auto InitialAngularVelocity = 0x11c; // FVector
		constexpr auto OnChaosPhysicsCollision = 0x128; // FMulticastInlineDelegate
	}

	namespace n_UUI_XianChengRelationShip {
		constexpr auto ItemTemplate = 0x2d8; // UXianChengRelationShipItem*
		constexpr auto XianChengRelationShipItems = 0x2e0; // TArray<UXianChengRelationShipItem*>
		constexpr auto XianChengRelationShipGridPanel = 0x2f0; // UUniformGridPanel*
	}

	namespace n_UAbilityTask_ApplyRootMotionJumpForce {
		constexpr auto OnFinish = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnLanded = 0xd0; // FMulticastInlineDelegate
		constexpr auto Rotation = 0xe0; // FRotator
		constexpr auto Distance = 0xec; // float
		constexpr auto Height = 0xf0; // float
		constexpr auto Duration = 0xf4; // float
		constexpr auto MinimumLandedTriggerTime = 0xf8; // float
		constexpr auto bFinishOnLanded = 0xfc; // bool
		constexpr auto PathOffsetCurve = 0x100; // UCurveVector*
		constexpr auto TimeMappingCurve = 0x108; // UCurveFloat*
	}

	namespace n_UBTTask_PushPawnAction {
		constexpr auto Action = 0x70; // UPawnAction*
	}

	namespace n_UParticleModuleVelocity_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UARPoseComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARPoseUpdatePayload
	}

	namespace n_UPlaneCutOperatorFactory {
		constexpr auto CutTool = 0x30; // UPlaneCutTool*
	}

	namespace n_AGameMode {
		constexpr auto MatchState = 0x3b0; // FName
		constexpr auto bDelayedStart = 0x3b8; // char : 1
		constexpr auto NumSpectators = 0x3bc; // int32_t
		constexpr auto NumPlayers = 0x3c0; // int32_t
		constexpr auto NumBots = 0x3c4; // int32_t
		constexpr auto MinRespawnDelay = 0x3c8; // float
		constexpr auto NumTravellingPlayers = 0x3cc; // int32_t
		constexpr auto EngineMessageClass = 0x3d0; // ULocalMessage*
		constexpr auto InactivePlayerArray = 0x3d8; // TArray<APlayerState*>
		constexpr auto InactivePlayerStateLifeSpan = 0x3e8; // float
		constexpr auto MaxInactivePlayers = 0x3ec; // int32_t
		constexpr auto bHandleDedicatedServerReplays = 0x3f0; // bool
	}

	namespace n_UARMeshComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARMeshUpdatePayload
	}

	namespace n_USkeletalMesh {
		constexpr auto Skeleton = 0x80; // USkeleton*
		constexpr auto ImportedBounds = 0x88; // FBoxSphereBounds
		constexpr auto ExtendedBounds = 0xa4; // FBoxSphereBounds
		constexpr auto PositiveBoundsExtension = 0xc0; // FVector
		constexpr auto NegativeBoundsExtension = 0xcc; // FVector
		constexpr auto Materials = 0xd8; // TArray<FSkeletalMaterial>
		constexpr auto SkelMirrorTable = 0xe8; // TArray<FBoneMirrorInfo>
		constexpr auto LODInfo = 0xf8; // TArray<FSkeletalMeshLODInfo>
		constexpr auto MinLOD = 0x158; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0x15c; // FPerPlatformBool
		constexpr auto SkelMirrorAxis = 0x15d; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x15e; // EAxis
		constexpr auto bUseFullPrecisionUVs = 0x15f; // char : 1
		constexpr auto bUseHighPrecisionTangentBasis = 0x15f; // char : 1
		constexpr auto bHasBeenSimplified = 0x15f; // char : 1
		constexpr auto bHasVertexColors = 0x15f; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x15f; // char : 1
		constexpr auto BodySetup = 0x160; // UBodySetup*
		constexpr auto PhysicsAsset = 0x168; // UPhysicsAsset*
		constexpr auto ShadowPhysicsAsset = 0x170; // UPhysicsAsset*
		constexpr auto NodeMappingData = 0x178; // TArray<UNodeMappingContainer*>
		constexpr auto MorphTargets = 0x188; // TArray<UMorphTarget*>
		constexpr auto PostProcessAnimBlueprint = 0x310; // UAnimInstance*
		constexpr auto MeshClothingAssets = 0x318; // TArray<UClothingAssetBase*>
		constexpr auto SamplingInfo = 0x328; // FSkeletalMeshSamplingInfo
		constexpr auto AssetUserData = 0x358; // TArray<UAssetUserData*>
		constexpr auto Sockets = 0x368; // TArray<USkeletalMeshSocket*>
		constexpr auto SocketMorphPositionDeltas = 0x388; // TArray<FSocketMorphPositonDeltaEntry>
		constexpr auto SkinWeightProfiles = 0x398; // TArray<FSkinWeightProfileInfo>
	}

	namespace n_USourceEffectWaveShaperPreset {
		constexpr auto Settings = 0x98; // FSourceEffectWaveShaperSettings
	}

	namespace n_UBlendProfile {
		constexpr auto OwningSkeleton = 0x30; // USkeleton*
		constexpr auto ProfileEntries = 0x38; // TArray<FBlendProfileBoneEntry>
	}

	namespace n_UGraphNodeContextMenuContext {
		constexpr auto Blueprint = 0x28; // UBlueprint*
		constexpr auto Graph = 0x30; // UEdGraph*
		constexpr auto Node = 0x38; // UEdGraphNode*
		constexpr auto bIsDebugging = 0x48; // bool
	}

	namespace n_UGameplayEffectUIData_TextOnly {
		constexpr auto Description = 0x28; // FText
	}

	namespace n_UInteractiveToolManager {
		constexpr auto ActiveLeftTool = 0x30; // UInteractiveTool*
		constexpr auto ActiveRightTool = 0x38; // UInteractiveTool*
		constexpr auto ToolBuilders = 0x90; // TMap<FString, UInteractiveToolBuilder*>
	}

	namespace n_UHorizonRadioButtonUserWidget {
		constexpr auto OnCheckedDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto OnUnCheckedDelegate = 0x270; // FMulticastInlineDelegate
		constexpr auto CheckBox_Main = 0x2b0; // UCheckBox*
		constexpr auto TextBlock_Main = 0x2b8; // UTextBlock*
		constexpr auto Text_Main = 0x2c0; // FText
		constexpr auto bCheckedByDefault = 0x2d8; // bool
	}

	namespace n_UAlignObjectsToolProperties {
		constexpr auto AlignType = 0x60; // EAlignObjectsAlignTypes
		constexpr auto AlignTo = 0x64; // EAlignObjectsAlignToOptions
		constexpr auto BoxPosition = 0x68; // EAlignObjectsBoxPoint
		constexpr auto bAlignX = 0x6c; // bool
		constexpr auto bAlignY = 0x6d; // bool
		constexpr auto bAlignZ = 0x6e; // bool
	}

	namespace n_UInterpToMovementComponent {
		constexpr auto Duration = 0x100; // float
		constexpr auto bPauseOnImpact = 0x104; // char : 1
		constexpr auto bSweep = 0x108; // bool
		constexpr auto TeleportType = 0x109; // ETeleportType
		constexpr auto BehaviourType = 0x10a; // EInterpToBehaviourType
		constexpr auto bCheckIfStillInWorld = 0x10b; // bool
		constexpr auto bForceSubStepping = 0x10c; // char : 1
		constexpr auto OnInterpToReverse = 0x110; // FMulticastInlineDelegate
		constexpr auto OnInterpToStop = 0x120; // FMulticastInlineDelegate
		constexpr auto OnWaitBeginDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto OnWaitEndDelegate = 0x140; // FMulticastInlineDelegate
		constexpr auto OnResetDelegate = 0x150; // FMulticastInlineDelegate
		constexpr auto MaxSimulationTimeStep = 0x160; // float
		constexpr auto MaxSimulationIterations = 0x164; // int32_t
		constexpr auto ControlPoints = 0x168; // TArray<FInterpControlPoint>
	}

	namespace n_UNewMeshMaterialProperties {
		constexpr auto Material = 0x60; // TWeakObjectPtr<UMaterialInterface>
		constexpr auto UVScale = 0x68; // float
		constexpr auto bWorldSpaceUVScale = 0x6c; // bool
		constexpr auto bWireframe = 0x6d; // bool
		constexpr auto bShowExtendedOptions = 0x6e; // bool
	}

	namespace n_UNiagaraPreviewAxis_InterpParamBase {
		constexpr auto Param = 0x28; // FName
		constexpr auto Count = 0x30; // int32_t
	}

	namespace n_UInventoryItemTypeFilterSlot {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto bIsSearch = 0x268; // char : 1
		constexpr auto ItemType = 0x269; // EInventoryItemFilterType
		constexpr auto NormalBrushTexture2D = 0x270; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto ActiveBrushTexture2D = 0x360; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto SearchNormalTexture2D = 0x450; // TSoftObjectPtr<UTexture2D>
		constexpr auto SearchActiveTexture2D = 0x478; // TSoftObjectPtr<UTexture2D>
		constexpr auto bIsClick = 0x4b0; // char : 1
	}

	namespace n_UUI_StructureAIAttackLogSlot {
		constexpr auto TargetTypeText = 0x260; // UTextBlock*
		constexpr auto TargetNameText = 0x268; // UTextBlock*
		constexpr auto TargetOwnerNameText = 0x270; // UTextBlock*
		constexpr auto TargetGuildNameText = 0x278; // UTextBlock*
		constexpr auto AttackTimesText = 0x280; // UTextBlock*
		constexpr auto UTCTimeText = 0x288; // UTextBlock*
	}

	namespace n_UGameplayModMagnitudeCalculation {
		constexpr auto bAllowNonNetAuthorityDependencyRegistration = 0x38; // bool
	}

	namespace n_UVoxelProperties {
		constexpr auto VoxelCount = 0x60; // int32_t
		constexpr auto bAutoSimplify = 0x64; // bool
		constexpr auto bRemoveInternalSurfaces = 0x65; // bool
		constexpr auto SimplifyMaxErrorFactor = 0x68; // double
		constexpr auto CubeRootMinComponentVolume = 0x70; // double
	}

	namespace n_UMirrorToolProperties {
		constexpr auto OperationMode = 0x60; // EMirrorOperationMode
		constexpr auto bCropAlongMirrorPlaneFirst = 0x61; // bool
		constexpr auto bWeldVerticesOnMirrorPlane = 0x62; // bool
		constexpr auto bAllowBowtieVertexCreation = 0x63; // bool
		constexpr auto bSnapToWorldGrid = 0x64; // bool
		constexpr auto CtrlClickBehavior = 0x65; // EMirrorCtrlClickBehavior
		constexpr auto bButtonsOnlyChangeOrientation = 0x66; // bool
		constexpr auto bShowPreview = 0x67; // bool
		constexpr auto SaveMode = 0x68; // EMirrorSaveMode
	}

	namespace n_UParticleModuleLocation {
		constexpr auto StartLocation = 0x30; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x78; // float
		constexpr auto DistributeThreshold = 0x7c; // float
	}

	namespace n_UInterpTrackEvent {
		constexpr auto EventTrack = 0x70; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
		constexpr auto bUseCustomEventName = 0x80; // char : 1
	}

	namespace n_UABP_MenuHorse_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_SequencePlayer = 0x2c8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x348; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x378; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x428; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Fabrik_2 = 0x450; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0x5e0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x770; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Root = 0x790; // FAnimNode_Root
		constexpr auto PlayingAnimSequence = 0x7c0; // UAnimSequence*
		constexpr auto Reins_LHandLoc = 0x7c8; // FVector
		constexpr auto Reins_RHandLoc = 0x7d4; // FVector
		constexpr auto LeftReinsEnabled = 0x7e0; // bool
		constexpr auto RightReinsEnabled = 0x7e1; // bool
		constexpr auto CachedHumanMesh = 0x7e8; // USkeletalMeshComponent*
		constexpr auto Saddle_LFootLoc = 0x7f0; // FTransform
		constexpr auto Saddle_RFootLoc = 0x820; // FTransform
		constexpr auto OwnerCharacter = 0x850; // ABP_HorseMC_Login_Base_C*
	}

	namespace n_UAchievementRewardDamageMultiply {
		constexpr auto ToolTipTemplate = 0x260; // USGToolTipWidget*
		constexpr auto ImgIcon = 0x268; // UImage*
		constexpr auto BtnIcon = 0x270; // UButton*
		constexpr auto TbDamageMultiply = 0x278; // UTextBlock*
	}

	namespace n_ULiveLinkCurveRemapSettings {
		constexpr auto CurveConversionSettings = 0xa0; // FLiveLinkCurveConversionSettings
	}

	namespace n_ASGStructureOccupy {
		constexpr auto SameGuildOccupyAreaInnerColor = 0xd68; // FLinearColor
		constexpr auto SameGuildOccupyAreaOuterColor = 0xd78; // FLinearColor
		constexpr auto OtherGuildOccupyAreaInnerColor = 0xd88; // FLinearColor
		constexpr auto OtherGuildOccupyAreaOuterColor = 0xd98; // FLinearColor
		constexpr auto SetScaleSpeed = 0xda8; // float
		constexpr auto InnerStaticMeshComponent = 0xdb0; // UStaticMeshComponent*
		constexpr auto OuterStaticMeshComponent = 0xdb8; // UStaticMeshComponent*
		constexpr auto DispalyOccupyAreaCheckRadius = 0xdc0; // float
		constexpr auto OccupyAreaTime = 0xdc4; // int32_t
		constexpr auto InitUpdateLevelMax = 0xdc8; // int32_t
		constexpr auto ResetTimeResourceRequirements = 0xdd0; // TArray<FCraftResourceRequirement>
		constexpr auto OccupyToggleRefresh = 0xde0; // FMulticastInlineDelegate
		constexpr auto NetOccupyAreaTime = 0xdf0; // double
		constexpr auto NetDestructionTime = 0xdf8; // int32_t
		constexpr auto NewNetDestructionTime = 0xe00; // int64_t
		constexpr auto NetBeforeDestructionTime = 0xe08; // int32_t
		constexpr auto NewNetBeforeDestructionTime = 0xe10; // int64_t
		constexpr auto CurrentOuterRadius = 0xe18; // int32_t
		constexpr auto CurrentLevel = 0xe1c; // int32_t
		constexpr auto bOccupied = 0xe20; // char : 1
		constexpr auto bThisWeekPreventDecay = 0xe20; // char : 1
		constexpr auto bNextWeekPreventDecay = 0xe20; // char : 1
		constexpr auto bInProtectionTime = 0xe20; // char : 1
		constexpr auto CurrentOverMulti = 0xe24; // float
		constexpr auto CurrentStructureNumInArea = 0xe28; // int32_t
		constexpr auto bBuyItems = 0xe2c; // char : 1
		constexpr auto bToggleOccupyArea = 0xe2c; // char : 1
		constexpr auto bShowProtectSetting = 0xe2c; // char : 1
		constexpr auto ProcessOccupyTimerHandle = 0xe30; // FTimerHandle
		constexpr auto bOccupyCreatedDynamicMaterials = 0xe38; // char
		constexpr auto InnerScaleTarget = 0xe3c; // float
		constexpr auto OuterScaleTarget = 0xe40; // float
		constexpr auto bTiro = 0xe50; // char : 1
		constexpr auto TiroResourceMulti = 0xe54; // float
		constexpr auto TiroInnerRadiusMulti = 0xe58; // float
		constexpr auto TiroOuterRadiusMulti = 0xe5c; // float
		constexpr auto TiroInnerRadiusPVEMulti = 0xe60; // float
		constexpr auto TiroOuterRadiusPVEMulti = 0xe64; // float
		constexpr auto bCalResourceMultiByStructureNum = 0xe78; // char : 1
		constexpr auto BaseStructureNum = 0xe7c; // int32_t
		constexpr auto BaseStructurePower = 0xe80; // int32_t
		constexpr auto PlayerSearchDistance = 0xe84; // int32_t
		constexpr auto ThisWeekAddProtectMulti = 0xe88; // float
	}

	namespace n_UControlPointMeshComponent {
		constexpr auto VirtualTextureMainPassMaxDrawDistance = 0x518; // float
	}

	namespace n_UBTDecorator_BlueprintBase {
		constexpr auto AIOwner = 0x68; // AAIController*
		constexpr auto ActorOwner = 0x70; // AActor*
		constexpr auto ObservedKeyNames = 0x78; // TArray<FName>
		constexpr auto bShowPropertyDetails = 0x98; // char : 1
		constexpr auto bCheckConditionOnlyBlackBoardChanges = 0x98; // char : 1
		constexpr auto bIsObservingBB = 0x98; // char : 1
	}

	namespace n_UParticleModuleAttractorParticle {
		constexpr auto EmitterName = 0x30; // FName
		constexpr auto Range = 0x38; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x68; // char : 1
		constexpr auto Strength = 0x70; // FRawDistributionFloat
		constexpr auto bAffectBaseVelocity = 0xa0; // char : 1
		constexpr auto SelectionMethod = 0xa4; // EAttractorParticleSelectionMethod
		constexpr auto bRenewSource = 0xa8; // char : 1
		constexpr auto bInheritSourceVel = 0xa8; // char : 1
		constexpr auto LastSelIndex = 0xac; // int32_t
	}

	namespace n_UAnimalFarmSlot {
		constexpr auto IconImgBG_NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto IconImgBG_WarnTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto IconImg_NormalTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotTitleText = 0x2d8; // FText
		constexpr auto bUseProgressBar = 0x2f0; // char : 1
		constexpr auto SlotTextBG_NormalTexture = 0x2f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotTextBG_WarnTexture = 0x320; // TSoftObjectPtr<UTexture2D>
		constexpr auto IconImgBG = 0x348; // UImage*
		constexpr auto IconImg = 0x350; // UImage*
		constexpr auto SlotTitle = 0x358; // UTextBlock*
		constexpr auto SlotProgressBar = 0x360; // UProgressBar*
		constexpr auto SlotSlider = 0x368; // USlider*
		constexpr auto SlotTextImgBG = 0x370; // UImage*
		constexpr auto SlotText = 0x378; // UTextBlock*
	}

	namespace n_UGameEngine {
		constexpr auto MaxDeltaTime = 0xde0; // float
		constexpr auto ServerFlushLogInterval = 0xde4; // float
		constexpr auto GameInstance = 0xde8; // UGameInstance*
	}

	namespace n_UParticleModuleVectorFieldRotationRate {
		constexpr auto RotationRate = 0x30; // FVector
	}

	namespace n_UTextureRenderTarget2DArray {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto Slices = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UStableSelectTrainerSlot {
		constexpr auto bIsSystemTrainerSlot = 0x260; // char : 1
		constexpr auto SystemTrainerType = 0x261; // ESystemTrainerType
		constexpr auto SystemTrainerTypeText = 0x268; // FText [0x3]
		constexpr auto SystemTrainerQualityTexture = 0x2b0; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto SystemTrainerSpecialTypeTexture = 0x328; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto SystemTrainerName = 0x3a0; // FText
		constexpr auto BGBorder_NormalTexture = 0x3b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_HoverTexture = 0x3e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_SelectTexture = 0x408; // TSoftObjectPtr<UTexture2D>
		constexpr auto TrainerQualityTexture = 0x430; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto TrainerSpecialTypeTexture = 0x520; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto BGBorder = 0x5c0; // UBorder*
		constexpr auto TrainerQualityBG = 0x5c8; // UImage*
		constexpr auto TrainerSpecialTypeBG = 0x5d0; // UImage*
		constexpr auto TrainerIconImg = 0x5d8; // UImage*
		constexpr auto TrainerNameText = 0x5e0; // UTextBlock*
		constexpr auto TrainerLevelText = 0x5e8; // UTextBlock*
		constexpr auto TrainerTameSkillExpHB = 0x5f0; // UHorizontalBox*
		constexpr auto TrainerTameSkillExpText = 0x5f8; // UTextBlock*
		constexpr auto FGBorder = 0x600; // UBorder*
		constexpr auto StatusTipText = 0x6f8; // FText
	}

	namespace n_UPolyEditCommonProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bSelectEdgeLoops = 0x61; // bool
		constexpr auto LocalFrameMode = 0x64; // ELocalFrameMode
		constexpr auto bLockRotation = 0x68; // bool
		constexpr auto bSnapToWorldGrid = 0x69; // bool
	}

	namespace n_UWBP_ControlSystemSetting_C {
		constexpr auto bAlwaysUseRiderBattleMode = 0x290; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bEnableCollectionAttack = 0x298; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bInvertMouseX = 0x2a0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bInvertMouseY = 0x2a8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto MouseSensitivity = 0x2b0; // UWBP_MouseSensitivitySettingSliderItem_C*
		constexpr auto TitleImage = 0x2b8; // UImage*
	}

	namespace n_UBTDecorator_KeepInCone {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto Observed = 0x98; // FBlackboardKeySelector
		constexpr auto bUseSelfAsOrigin = 0xc0; // char : 1
		constexpr auto bUseSelfAsObserved = 0xc0; // char : 1
	}

	namespace n_UGamepadCursorSettings {
		constexpr auto AnalogCursorAccelerationCurve = 0x38; // FRuntimeFloatCurve
		constexpr auto MaxAnalogCursorSpeed = 0xc0; // float
		constexpr auto MaxAnalogCursorSpeedWhenHovered = 0xc4; // float
		constexpr auto AnalogCursorDragCoefficient = 0xc8; // float
		constexpr auto AnalogCursorDragCoefficientWhenHovered = 0xcc; // float
		constexpr auto MinAnalogCursorSpeed = 0xd0; // float
		constexpr auto AnalogCursorDeadZone = 0xd4; // float
		constexpr auto AnalogCursorAccelerationMultiplier = 0xd8; // float
		constexpr auto AnalogCursorSize = 0xdc; // float
		constexpr auto bUseEngineAnalogCursor = 0xe0; // bool
		constexpr auto bAnalogCursorNoAcceleration = 0xe1; // bool
	}

	namespace n_UBTService_DefaultFocus {
		constexpr auto FocusPriority = 0x98; // char
	}

	namespace n_UEditableTextWidgetStyle {
		constexpr auto EditableTextStyle = 0x30; // FEditableTextStyle
	}

	namespace n_UAttackRebound_AnimNotifyState {
		constexpr auto Enum_AttackSocketType = 0x30; // EAttackSocketType
		constexpr auto AttackTag = 0x38; // FString
		constexpr auto bCloseAttackTrace = 0x48; // char : 1
		constexpr auto IsOffHandWeapon = 0x48; // char : 1
		constexpr auto IsKickAttack = 0x48; // char : 1
		constexpr auto ClearAimState = 0x48; // char : 1
		constexpr auto TriggerTime = 0x4c; // float
		constexpr auto AttackAnimBoneData = 0x50; // TArray<FTransform>
	}

	namespace n_ALightningEmitter {
		constexpr auto MainBillboard = 0x310; // UBillboardComponent*
		constexpr auto SourcePoint = 0x318; // UBillboardComponent*
		constexpr auto TargetPoint = 0x320; // UBillboardComponent*
		constexpr auto bAutoActivate = 0x328; // bool
		constexpr auto bLoop = 0x329; // bool
		constexpr auto LoopDuration = 0x32c; // float
		constexpr auto SourceAttachment = 0x330; // FLightningAttachment
		constexpr auto TargetAttachment = 0x390; // FLightningAttachment
		constexpr auto LightningParams = 0x3f0; // FLightningParams
		constexpr auto BranchingParams = 0x4a8; // FBranchingParams
		constexpr auto RootEmissionParams = 0x4d8; // FEmissionParams
		constexpr auto BranchEmissionParams = 0x4ec; // FEmissionParams
		constexpr auto DisplacementMult = 0x500; // float
		constexpr auto TimeMultiplier = 0x504; // float
		constexpr auto bUseSeparateThread = 0x508; // bool
		constexpr auto bGenerateHitEvents = 0x509; // bool
		constexpr auto HitReaction = 0x50a; // EHitReaction
		constexpr auto bGenerateOverlapEvents = 0x50b; // bool
		constexpr auto CollisionResponses = 0x510; // TMap<ECollisionChannel, ECollisionResponse>
		constexpr auto IgnoredActors = 0x560; // TArray<AActor*>
		constexpr auto bDrawBranches = 0x570; // bool
		constexpr auto bDrawCurveWidth = 0x571; // bool
		constexpr auto bCurveCustomColor = 0x572; // bool
		constexpr auto CurveColor = 0x574; // FColor
		constexpr auto AttachmentVolumesColor = 0x578; // FColor
		constexpr auto EventOnRootSpawned = 0x57c; // FMulticastSparseDelegate
		constexpr auto LightningsArray = 0x580; // TArray<ALightningEffect*>
		constexpr auto LightningEffectClass = 0x590; // ALightningEffect*
	}

	namespace n_UClothingAssetCommon {
		constexpr auto PhysicsAsset = 0x48; // UPhysicsAsset*
		constexpr auto ClothConfigs = 0x50; // TMap<FName, UClothConfigBase*>
		constexpr auto ClothSharedSimConfig = 0xa0; // UClothConfigBase*
		constexpr auto ClothSimConfig = 0xa8; // UClothConfigBase*
		constexpr auto ChaosClothSimConfig = 0xb0; // UClothConfigBase*
		constexpr auto ClothLODData = 0xb8; // TArray<UClothLODDataCommon_Legacy*>
		constexpr auto LODData = 0xc8; // TArray<FClothLODDataCommon>
		constexpr auto LodMap = 0xd8; // TArray<int32_t>
		constexpr auto UsedBoneNames = 0xe8; // TArray<FName>
		constexpr auto UsedBoneIndices = 0xf8; // TArray<int32_t>
		constexpr auto ReferenceBoneIndex = 0x108; // int32_t
		constexpr auto CustomData = 0x110; // UClothingAssetCustomData*
		constexpr auto ClothConfig = 0x118; // FClothConfig_Legacy
	}

	namespace n_UArchVisCharMovementComponent {
		constexpr auto RotationalAcceleration = 0xb50; // FRotator
		constexpr auto RotationalDeceleration = 0xb5c; // FRotator
		constexpr auto MaxRotationalVelocity = 0xb68; // FRotator
		constexpr auto MinPitch = 0xb74; // float
		constexpr auto MaxPitch = 0xb78; // float
		constexpr auto WalkingFriction = 0xb7c; // float
		constexpr auto WalkingSpeed = 0xb80; // float
		constexpr auto WalkingAcceleration = 0xb84; // float
	}

	namespace n_USGParticleSystemComponent {
		constexpr auto SoundType = 0x6e8; // ESGSoundType
		constexpr auto SoundID = 0x6ec; // FName
		constexpr auto bSoundStopWhenAttachedToDestroyed = 0x6f4; // char : 1
	}

	namespace n_UUI_Setting {
		constexpr auto SystemSettingUI = 0x2d8; // UUI_SystemSetting*
		constexpr auto KeySettingUI = 0x2e0; // UUI_KeySetting*
		constexpr auto BtnReleaseKey = 0x2e8; // UButton*
		constexpr auto BtnConfirm = 0x2f0; // UButton*
		constexpr auto BtnSetToDefault = 0x2f8; // UButton*
		constexpr auto TbSetToDefault = 0x300; // UTextBlock*
		constexpr auto BtnClose = 0x308; // UButton*
		constexpr auto BtnCancel = 0x310; // UButton*
		constexpr auto CurSettingRadioIndex = 0x318; // int32_t
		constexpr auto MousePosition = 0x31c; // FVector2D
	}

	namespace n_ABP_SGAudioManager_C {
		constexpr auto DefaultSceneRoot = 0x988; // USceneComponent*
	}

	namespace n_UVehicleACPanel {
		constexpr auto RadarChartStartPercent = 0x260; // float
		constexpr auto bShowSumPanel = 0x264; // char : 1
		constexpr auto QualityCorrectionToQualityType = 0x268; // TMap<EGeneralsQualityType, float>
		constexpr auto TextFontOutlineColor = 0x2b8; // FLinearColor [0x6]
		constexpr auto RadarChartPanel = 0x318; // UCanvasPanel*
		constexpr auto SumPanel = 0x320; // UCanvasPanel*
		constexpr auto RadarChart = 0x328; // URadarChart*
		constexpr auto SumText = 0x330; // UTextBlock*
		constexpr auto SpeedText = 0x338; // UTextBlock*
		constexpr auto HPText = 0x340; // UTextBlock*
		constexpr auto SPText = 0x348; // UTextBlock*
		constexpr auto OperateText = 0x350; // UTextBlock*
		constexpr auto WeightText = 0x358; // UTextBlock*
		constexpr auto BindVehicleCharacter = 0x360; // TWeakObjectPtr<ASG_AnimalsCharacter>
	}

	namespace n_UMaterialExpressionSceneDepth {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto Coordinates = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UUI_SeasonQuest {
		constexpr auto QuestNameText = 0x260; // UTextBlock*
		constexpr auto QuestDescText = 0x268; // UTextBlock*
		constexpr auto QuestObjectText = 0x270; // UTextBlock*
		constexpr auto QuestAwardText = 0x278; // UTextBlock*
		constexpr auto QuestListScrollBox = 0x280; // UScrollBox*
		constexpr auto PreviewQuestHBox = 0x288; // UHorizontalBox*
		constexpr auto ButtonLeft = 0x290; // UButton*
		constexpr auto SeasonInfoText = 0x298; // UTextBlock*
		constexpr auto ButtonRight = 0x2a0; // UButton*
		constexpr auto GuildQuestSlotTemplate = 0x2a8; // UGuildQuestSlot*
		constexpr auto QuestSlotMargin = 0x2b0; // FMargin
	}

	namespace n_UMaterialShaderQualitySettings {
		constexpr auto ForwardSettingMap = 0x28; // TMap<FName, UShaderPlatformQualitySettings*>
	}

	namespace n_UWBP_MainMenu_C {
		constexpr auto UberGraphFrame = 0x418; // FPointerToUberGraphFrame
		constexpr auto BtnNotice = 0x420; // UButton*
		constexpr auto ImageActivity = 0x428; // UImage*
		constexpr auto ImageBg = 0x430; // UImage*
		constexpr auto ImageLogo = 0x438; // UImage*
		constexpr auto ImageLogoBg = 0x440; // UImage*
		constexpr auto ImageLogoBg_2 = 0x448; // UImage*
		constexpr auto ImageSpark = 0x450; // UImage*
		constexpr auto ImageSwordFire = 0x458; // UImage*
		constexpr auto ImageWenZiEffect = 0x460; // UImage*
	}

	namespace n_UMovieSceneTrackInstanceSystem {
		constexpr auto Instantiator = 0x40; // UMovieSceneTrackInstanceInstantiator*
	}

	namespace n_UMoviePlayerSettings {
		constexpr auto bWaitForMoviesToComplete = 0x28; // bool
		constexpr auto bMoviesAreSkippable = 0x29; // bool
		constexpr auto StartupMovies = 0x30; // TArray<FString>
	}

	namespace n_UGuildSkillGroupLine {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto LineTexture2D = 0x268; // TSoftObjectPtr<UTexture2D>
		constexpr auto LineLearnedTexture2D = 0x290; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnDownTexture2D = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnDownLearnedTexture2D = 0x2e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnUpTexture2D = 0x308; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnUpLearnedTexture2D = 0x330; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMaterialExpressionSceneDepthWithoutWater {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto ConstInput = 0x58; // FVector2D
		constexpr auto FallbackDepth = 0x60; // float
	}

	namespace n_UGameplayAbility_Montage {
		constexpr auto MontageToPlay = 0x3b0; // UAnimMontage*
		constexpr auto PlayRate = 0x3b8; // float
		constexpr auto SectionName = 0x3bc; // FName
		constexpr auto GameplayEffectClassesWhileAnimating = 0x3c8; // TArray<UGameplayEffect*>
		constexpr auto GameplayEffectsWhileAnimating = 0x3d8; // TArray<UGameplayEffect*>
	}

	namespace n_UUI_ModifyText {
		constexpr auto TitleTextBlock = 0x2d8; // UTextBlock*
		constexpr auto MaxLenTextBlock = 0x2e0; // UTextBlock*
		constexpr auto FilterWordTextBlock = 0x2e8; // UTextBlock*
		constexpr auto EditableTextBox = 0x2f0; // UWidget*
		constexpr auto CancelButton = 0x2f8; // UButton*
		constexpr auto SubmitButton = 0x300; // UButton*
		constexpr auto MaxLenTextNormalColor = 0x308; // FSlateColor
		constexpr auto MaxLenTextInValidColor = 0x330; // FSlateColor
	}

	namespace n_UAchievementTypeItem {
		constexpr auto NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto ChildItemTemplate = 0x2b0; // UAchievementTypeItem*
		constexpr auto ChildItemGrid = 0x2e8; // UGridPanel*
		constexpr auto BtnBg = 0x2f0; // UButton*
		constexpr auto ImgBg = 0x2f8; // UImage*
		constexpr auto TbAchievementType = 0x300; // UTextBlock*
		constexpr auto ImgUnknow = 0x308; // UImage*
		constexpr auto ChildItemList = 0x310; // TArray<UAchievementTypeItem*>
		constexpr auto SelectAchievementTypeItem = 0x320; // UAchievementTypeItem*
		constexpr auto RootAchievementTypePanel = 0x328; // UAchievementTypePanel*
		constexpr auto OnAchievementTypeItemSelectStateChanged = 0x330; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerSection {
		constexpr auto Channel = 0xe8; // FMovieSceneCameraShakeSourceTriggerChannel
	}

	namespace n_UTextureRenderTarget2D {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto ClearColor = 0xe8; // FLinearColor
		constexpr auto AddressX = 0xf8; // TextureAddress
		constexpr auto AddressY = 0xf9; // TextureAddress
		constexpr auto bForceLinearGamma = 0xfa; // char : 1
		constexpr auto bHDR = 0xfa; // char : 1
		constexpr auto bGPUSharedFlag = 0xfa; // char : 1
		constexpr auto RenderTargetFormat = 0xfb; // ETextureRenderTargetFormat
		constexpr auto bAutoGenerateMips = 0xfc; // char : 1
		constexpr auto MipsSamplerFilter = 0xfd; // TextureFilter
		constexpr auto MipsAddressU = 0xfe; // TextureAddress
		constexpr auto MipsAddressV = 0xff; // TextureAddress
		constexpr auto OverrideFormat = 0x100; // EPixelFormat
	}

	namespace n_UConditionPanel {
		constexpr auto ConditionCanvas = 0x260; // UCanvasPanel*
		constexpr auto ST = 0x268; // UOptionButton*
		constexpr auto WI = 0x270; // UOptionButton*
		constexpr auto EN = 0x278; // UOptionButton*
		constexpr auto AG = 0x280; // UOptionButton*
		constexpr auto CH = 0x288; // UOptionButton*
		constexpr auto DetailsPanel = 0x290; // UVerticalBox*
		constexpr auto RadarChart = 0x298; // URadarChart*
		constexpr auto RadarChartStartPercent = 0x2a0; // float
		constexpr auto BindCharacter = 0x2a4; // TWeakObjectPtr<ASGCharacter>
		constexpr auto SlotButtonList = 0x2b0; // TArray<UOptionButton*>
		constexpr auto ConditionSlotTemplate = 0x2c0; // UConditionSlot*
		constexpr auto bUseEditableConditionSlot = 0x2c8; // char : 1
		constexpr auto ConditionEditableSlotList = 0x2d0; // TArray<UConditionEditableSlot*>
		constexpr auto ConditionPanelEditablePanel = 0x2e0; // UConditionPanelEditablePanel*
		constexpr auto ConditionEditableSlotTemplate = 0x2e8; // UConditionEditableSlot*
		constexpr auto MaxLevel = 0x2f0; // int32_t
		constexpr auto bHasInit = 0x2f4; // char : 1
		constexpr auto LastSTRPercent = 0x2f8; // float
		constexpr auto LastDEXPercent = 0x2fc; // float
		constexpr auto LastSTAPercent = 0x300; // float
		constexpr auto LastINTPercent = 0x304; // float
		constexpr auto LastCHAPercent = 0x308; // float
		constexpr auto AddSkillExpPanelTemplate = 0x310; // UGeneralAddSkillExpPanel*
		constexpr auto AddSkillExpPanel = 0x318; // UGeneralAddSkillExpPanel*
	}

	namespace n_UImplicitSmoothProperties {
		constexpr auto SmoothSpeed = 0x60; // float
		constexpr auto Smoothness = 0x64; // float
		constexpr auto bPreserveUVs = 0x68; // bool
		constexpr auto VolumeCorrection = 0x6c; // float
	}

	namespace n_UMaterialExpressionChannelMaskParameter {
		constexpr auto MaskChannel = 0x70; // EChannelMaskParameterColor
	}

	namespace n_USpinBox {
		constexpr auto Value = 0x108; // float
		constexpr auto ValueDelegate = 0x10c; // FDelegate
		constexpr auto WidgetStyle = 0x120; // FSpinBoxStyle
		constexpr auto Style = 0x408; // USlateWidgetStyleAsset*
		constexpr auto MinFractionalDigits = 0x410; // int32_t
		constexpr auto MaxFractionalDigits = 0x414; // int32_t
		constexpr auto bAlwaysUsesDeltaSnap = 0x418; // bool
		constexpr auto Delta = 0x41c; // float
		constexpr auto SliderExponent = 0x420; // float
		constexpr auto Font = 0x428; // FSlateFontInfo
		constexpr auto Justification = 0x480; // ETextJustify
		constexpr auto MinDesiredWidth = 0x484; // float
		constexpr auto ClearKeyboardFocusOnCommit = 0x488; // bool
		constexpr auto SelectAllTextOnCommit = 0x489; // bool
		constexpr auto ForegroundColor = 0x490; // FSlateColor
		constexpr auto OnValueChanged = 0x4b8; // FMulticastInlineDelegate
		constexpr auto OnValueCommitted = 0x4c8; // FMulticastInlineDelegate
		constexpr auto OnBeginSliderMovement = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndSliderMovement = 0x4e8; // FMulticastInlineDelegate
		constexpr auto bOverride_MinValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxValue = 0x4f8; // char : 1
		constexpr auto bOverride_MinSliderValue = 0x4f8; // char : 1
		constexpr auto bOverride_MaxSliderValue = 0x4f8; // char : 1
		constexpr auto MinValue = 0x4fc; // float
		constexpr auto MaxValue = 0x500; // float
		constexpr auto MinSliderValue = 0x504; // float
		constexpr auto MaxSliderValue = 0x508; // float
	}

	namespace n_UTwistKelvinletBrushOpProps {
		constexpr auto Strength = 0x70; // float
		constexpr auto Falloff = 0x74; // float
	}

	namespace n_UVoxelBlendMeshesToolProperties {
		constexpr auto BlendPower = 0x60; // double
		constexpr auto BlendFalloff = 0x68; // double
		constexpr auto bSolidifyInput = 0x70; // bool
		constexpr auto bRemoveInternalsAfterSolidify = 0x71; // bool
		constexpr auto OffsetSolidifySurface = 0x78; // double
	}

	namespace n_AWheeledVehicle {
		constexpr auto Mesh = 0x370; // USkeletalMeshComponent*
		constexpr auto VehicleMovement = 0x378; // UWheeledVehicleMovementComponent*
	}

	namespace n_UAchievementConditionIntWidget {
		constexpr auto ProgressCanvas = 0x288; // UCanvasPanel*
		constexpr auto PbProgress = 0x290; // UProgressBar*
		constexpr auto TbProgress = 0x298; // UTextBlock*
		constexpr auto TbTotalProgress = 0x2a0; // UTextBlock*
	}

	namespace n_USceneCaptureComponentCube {
		constexpr auto TextureTarget = 0x2c8; // UTextureRenderTargetCube*
		constexpr auto bCaptureRotation = 0x2d0; // bool
		constexpr auto TextureTargetLeft = 0x2d8; // UTextureRenderTargetCube*
		constexpr auto TextureTargetRight = 0x2e0; // UTextureRenderTargetCube*
		constexpr auto TextureTargetODS = 0x2e8; // UTextureRenderTarget2D*
		constexpr auto IPD = 0x2f0; // float
	}

	namespace n_UBaseVoxelTool {
		constexpr auto VoxProperties = 0xf0; // UVoxelProperties*
	}

	namespace n_USpringArmComponent {
		constexpr auto TargetArmLength = 0x208; // float
		constexpr auto SocketOffset = 0x20c; // FVector
		constexpr auto TargetOffset = 0x218; // FVector
		constexpr auto ProbeSize = 0x224; // float
		constexpr auto ProbeChannel = 0x228; // ECollisionChannel
		constexpr auto bDoCollisionTest = 0x22c; // char : 1
		constexpr auto bUsePawnControlRotation = 0x22c; // char : 1
		constexpr auto bInheritPitch = 0x22c; // char : 1
		constexpr auto bInheritYaw = 0x22c; // char : 1
		constexpr auto bInheritRoll = 0x22c; // char : 1
		constexpr auto bEnableCameraLag = 0x22c; // char : 1
		constexpr auto bEnableCameraRotationLag = 0x22c; // char : 1
		constexpr auto bUseCameraLagSubstepping = 0x22c; // char : 1
		constexpr auto bDrawDebugLagMarkers = 0x22d; // char : 1
		constexpr auto CameraLagSpeed = 0x230; // float
		constexpr auto CameraRotationLagSpeed = 0x234; // float
		constexpr auto CameraLagMaxTimeStep = 0x238; // float
		constexpr auto CameraLagMaxDistance = 0x23c; // float
	}

	namespace n_UProgressBar {
		constexpr auto WidgetStyle = 0x108; // FProgressBarStyle
		constexpr auto Style = 0x2a8; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImage = 0x2b0; // USlateBrushAsset*
		constexpr auto FillImage = 0x2b8; // USlateBrushAsset*
		constexpr auto MarqueeImage = 0x2c0; // USlateBrushAsset*
		constexpr auto Percent = 0x2c8; // float
		constexpr auto BarFillType = 0x2cc; // EProgressBarFillType
		constexpr auto bIsMarquee = 0x2cd; // bool
		constexpr auto BorderPadding = 0x2d0; // FVector2D
		constexpr auto PercentDelegate = 0x2d8; // FDelegate
		constexpr auto FillColorAndOpacity = 0x2e8; // FLinearColor
		constexpr auto FillColorAndOpacityDelegate = 0x2f8; // FDelegate
	}

	namespace n_UUI_ButtonBase {
		constexpr auto ButtonName = 0x260; // FName
		constexpr auto TwinkleImageName = 0x268; // FName
		constexpr auto ButtonStyle = 0x270; // FButtonStyle
		constexpr auto bCanClick = 0x4e8; // bool
		constexpr auto BgButton = 0x4f0; // UButton*
		constexpr auto TwinkleImage = 0x4f8; // UImage*
	}

	namespace n_UPinchBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto bPerpDamping = 0x6c; // bool
	}

	namespace n_UMovieSceneSkeletalAnimationTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
		constexpr auto bUseLegacySectionIndexBlend = 0x90; // bool
		constexpr auto RootMotionParams = 0x98; // FMovieSceneSkeletalAnimRootMotionTrackParams
		constexpr auto bBlendFirstChildOfRoot = 0xc8; // bool
	}

	namespace n_UPrivateSessionMODItem {
		constexpr auto TbMODName = 0x260; // UTextBlock*
		constexpr auto BtnWorkShop = 0x268; // UButton*
	}

	namespace n_UAbilityTask_SpawnActor {
		constexpr auto Success = 0x80; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UPaperTileSet {
		constexpr auto TileSize = 0x28; // FIntPoint
		constexpr auto TileSheet = 0x30; // UTexture2D*
		constexpr auto AdditionalSourceTextures = 0x38; // TArray<UTexture*>
		constexpr auto BorderMargin = 0x48; // FIntMargin
		constexpr auto PerTileSpacing = 0x58; // FIntPoint
		constexpr auto DrawingOffset = 0x60; // FIntPoint
		constexpr auto WidthInTiles = 0x68; // int32_t
		constexpr auto HeightInTiles = 0x6c; // int32_t
		constexpr auto AllocatedWidth = 0x70; // int32_t
		constexpr auto AllocatedHeight = 0x74; // int32_t
		constexpr auto PerTileData = 0x78; // TArray<FPaperTileMetadata>
		constexpr auto Terrains = 0x88; // TArray<FPaperTileSetTerrain>
		constexpr auto TileWidth = 0x98; // int32_t
		constexpr auto TileHeight = 0x9c; // int32_t
		constexpr auto Margin = 0xa0; // int32_t
		constexpr auto Spacing = 0xa4; // int32_t
	}

	namespace n_UWBP_SettingComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_53 = 0x370; // UCanvasPanel*
		constexpr auto SettingComboBox = 0x378; // UComboBoxString*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto Title = 0x388; // FText
	}

	namespace n_UGameplayTaskResource {
		constexpr auto ManualResourceID = 0x28; // int32_t
		constexpr auto AutoResourceID = 0x2c; // int8_t
		constexpr auto bManuallySetID = 0x30; // char : 1
	}

	namespace n_UGiftPlayerSlot {
		constexpr auto PlayerNameText = 0x2d8; // UTextBlock*
		constexpr auto BGImage = 0x2e0; // UImage*
		constexpr auto GiftDataButton = 0x2e8; // UDataButton*
		constexpr auto TexNormalBG = 0x2f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto TexSelectBG = 0x318; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMovieSceneFolder {
		constexpr auto FolderName = 0x28; // FName
		constexpr auto ChildFolders = 0x30; // TArray<UMovieSceneFolder*>
		constexpr auto ChildMasterTracks = 0x40; // TArray<UMovieSceneTrack*>
		constexpr auto ChildObjectBindingStrings = 0x50; // TArray<FString>
	}

	namespace n_ULastActorInfo {
		constexpr auto Actor = 0x38; // AActor*
		constexpr auto StaticMesh = 0x40; // UStaticMesh*
		constexpr auto ShapeSettings = 0x48; // UProceduralShapeToolProperties*
		constexpr auto MaterialProperties = 0x50; // UNewMeshMaterialProperties*
	}

	namespace n_UDisplaceMeshTextureMapProperties {
		constexpr auto DisplacementMap = 0x60; // UTexture2D*
	}

	namespace n_UBTTask_DoRelaxed {
		constexpr auto FarBrakingDistance = 0xd0; // float
		constexpr auto ProjectToNavInterval = 0xd4; // float
		constexpr auto LastProjectToNavTime = 0xdc; // float
		constexpr auto DesiredLocationToNavigation = 0xe0; // FVector
	}

	namespace n_UBTTask_Sleep {
		constexpr auto bAutoFinished = 0xc0; // char : 1
	}

	namespace n_USelfUnionMeshesTool {
		constexpr auto Properties = 0xf0; // USelfUnionMeshesToolProperties*
		constexpr auto DrawnLineSet = 0xf8; // ULineSetComponent*
	}

	namespace n_UMaterialExpressionTruncate {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UAudioSplineComponent {
		constexpr auto AudioComponent = 0x580; // USGSplineAudioComponent*
		constexpr auto EditDistanceMin = 0x588; // float
		constexpr auto EditDistanceMax = 0x58c; // float
		constexpr auto CameraDistance = 0x590; // float
		constexpr auto SplineAttenuationSettings = 0x598; // TArray<FSplineSoundAttenuationSettings>
	}

	namespace n_UGizmoComponentAxisSource {
		constexpr auto Component = 0x30; // USceneComponent*
		constexpr auto AxisIndex = 0x38; // int32_t
		constexpr auto bLocalAxes = 0x3c; // bool
	}

	namespace n_APaperTileMapActor {
		constexpr auto RenderComponent = 0x310; // UPaperTileMapComponent*
	}

	namespace n_UBTDecorator_ConeCheck {
		constexpr auto ConeHalfAngle = 0x68; // float
		constexpr auto ConeOrigin = 0x70; // FBlackboardKeySelector
		constexpr auto ConeDirection = 0x98; // FBlackboardKeySelector
		constexpr auto Observed = 0xc0; // FBlackboardKeySelector
	}

	namespace n_AEQSTestingPawn {
		constexpr auto QueryTemplate = 0x5d0; // UEnvQuery*
		constexpr auto QueryParams = 0x5d8; // TArray<FEnvNamedValue>
		constexpr auto QueryConfig = 0x5e8; // TArray<FAIDynamicParam>
		constexpr auto TimeLimitPerStep = 0x5f8; // float
		constexpr auto StepToDebugDraw = 0x5fc; // int32_t
		constexpr auto HighlightMode = 0x600; // EEnvQueryHightlightMode
		constexpr auto bDrawLabels = 0x604; // char : 1
		constexpr auto bDrawFailedItems = 0x604; // char : 1
		constexpr auto bReRunQueryOnlyOnFinishedMove = 0x604; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x604; // char : 1
		constexpr auto bTickDuringGame = 0x604; // char : 1
		constexpr auto QueryingMode = 0x608; // EEnvQueryRunMode
		constexpr auto NavAgentProperties = 0x610; // FNavAgentProperties
	}

	namespace n_USignificanceManager {
		constexpr auto SignificanceManagerClassName = 0x108; // FSoftClassPath
	}

	namespace n_UARBasicLightEstimate {
		constexpr auto AmbientIntensityLumens = 0x28; // float
		constexpr auto AmbientColorTemperatureKelvin = 0x2c; // float
		constexpr auto AmbientColor = 0x30; // FLinearColor
	}

	namespace n_UFootStep_AnimNotify {
		constexpr auto PreviewFootSoundsDataTable = 0x38; // UDataTable*
		constexpr auto Enum_FootStepType = 0x40; // EFootStepType
		constexpr auto Enum_FootDirectionType = 0x41; // EFootDirectionType
		constexpr auto PreviewSurfaceType = 0x42; // EPhysicalSurface
		constexpr auto FootStepID = 0x44; // FName
		constexpr auto bPlayFootStepSound = 0x4c; // char : 1
		constexpr auto bSpawnFootStepDecal = 0x4c; // char : 1
		constexpr auto bSpawnFootStepParticle = 0x4c; // char : 1
		constexpr auto bPlayEquipAdditiveSounds = 0x4d; // bool
		constexpr auto PreviewAdditiveSounds = 0x50; // TArray<FCustomSoundSetting>
	}

	namespace n_UPerkSlot {
		constexpr auto ToolTipWidgetTemplateOverride = 0x260; // USGToolTipWidget*
		constexpr auto LockTexture = 0x268; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnlockTexture = 0x290; // TSoftObjectPtr<UTexture2D>
		constexpr auto LearnedTexture = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto IsHover = 0x2e0; // char : 1
		constexpr auto bCanClickLearn = 0x2e0; // char : 1
		constexpr auto bNeedShowSmallSkill = 0x2e0; // char : 1
		constexpr auto OnPerkSlotPressed = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnPerkSlotReleased = 0x2f8; // FMulticastInlineDelegate
		constexpr auto PerkLevel = 0x30c; // int32_t
		constexpr auto ImgBorder = 0x310; // UImage*
		constexpr auto ImgIcon = 0x318; // UImage*
		constexpr auto RootSGUI = 0x320; // USGUI*
		constexpr auto SBPerkSlot = 0x328; // USizeBox*
	}

	namespace n_USGCraftRequirementEntry {
		constexpr auto RequirementLabel = 0x260; // UTextBlock*
		constexpr auto ItemIconList = 0x268; // UHorizontalBox*
	}

	namespace n_UAnimNotifyState_TimedParticleEffect {
		constexpr auto PSTemplate = 0x30; // UParticleSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UAchievementDamageMultiplyItem {
		constexpr auto ImgIcon = 0x260; // UImage*
		constexpr auto TbName = 0x268; // UTextBlock*
		constexpr auto TbDamageMultiply = 0x270; // UTextBlock*
	}

	namespace n_UPlanarReflectionComponent {
		constexpr auto PreviewBox = 0x2c8; // UBoxComponent*
		constexpr auto NormalDistortionStrength = 0x2d0; // float
		constexpr auto PrefilterRoughness = 0x2d4; // float
		constexpr auto PrefilterRoughnessDistance = 0x2d8; // float
		constexpr auto ScreenPercentage = 0x2dc; // int32_t
		constexpr auto ExtraFOV = 0x2e0; // float
		constexpr auto DistanceFromPlaneFadeStart = 0x2e4; // float
		constexpr auto DistanceFromPlaneFadeEnd = 0x2e8; // float
		constexpr auto DistanceFromPlaneFadeoutStart = 0x2ec; // float
		constexpr auto DistanceFromPlaneFadeoutEnd = 0x2f0; // float
		constexpr auto AngleFromPlaneFadeStart = 0x2f4; // float
		constexpr auto AngleFromPlaneFadeEnd = 0x2f8; // float
		constexpr auto bShowPreviewPlane = 0x2fc; // bool
		constexpr auto bRenderSceneTwoSided = 0x2fd; // bool
	}

	namespace n_URadialIntMask {
		constexpr auto Radius = 0xc0; // float
		constexpr auto position = 0xc4; // FVector
		constexpr auto InteriorValue = 0xd0; // int32_t
		constexpr auto ExteriorValue = 0xd4; // int32_t
		constexpr auto SetMaskCondition = 0xd8; // ESetMaskConditionType
	}

	namespace n_UGroomComponent {
		constexpr auto GroomAsset = 0x4b8; // UGroomAsset*
		constexpr auto NiagaraComponents = 0x4c0; // TArray<UNiagaraComponent*>
		constexpr auto SourceSkeletalMesh = 0x4d0; // USkeletalMesh*
		constexpr auto BindingAsset = 0x4d8; // UGroomBindingAsset*
		constexpr auto PhysicsAsset = 0x4e0; // UPhysicsAsset*
		constexpr auto Strands_DebugMaterial = 0x4e8; // UMaterialInterface*
		constexpr auto Strands_DefaultMaterial = 0x4f0; // UMaterialInterface*
		constexpr auto Cards_DefaultMaterial = 0x4f8; // UMaterialInterface*
		constexpr auto Meshes_DefaultMaterial = 0x500; // UMaterialInterface*
		constexpr auto AngularSpringsSystem = 0x508; // UNiagaraSystem*
		constexpr auto CosseratRodsSystem = 0x510; // UNiagaraSystem*
		constexpr auto AttachmentName = 0x518; // FString
		constexpr auto GroomGroupsDesc = 0x570; // TArray<FHairGroupDesc>
	}

	namespace n_UPlayerSoundData {
		constexpr auto BrakingOnHorseSound = 0x88; // FName
		constexpr auto StartingOnHorseSound = 0x90; // FName
		constexpr auto IssueOrderSound = 0x98; // TMap<EGeneralShortCutSlotType, FName>
	}

	namespace n_UWBP_ResolutionScaleSettingSliderItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_53 = 0x370; // UCanvasPanel*
		constexpr auto ImgScrollBg = 0x378; // UImage*
		constexpr auto Slider = 0x380; // USlider*
		constexpr auto TbTitle = 0x388; // UTextBlock*
		constexpr auto TbValue = 0x390; // UTextBlock*
		constexpr auto Name = 0x398; // FText
	}

	namespace n_UWBP_OverallScalabilityLevelSliderView_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto Custom = 0x370; // UTextBlock*
		constexpr auto Epic = 0x378; // UTextBlock*
		constexpr auto Excellent = 0x380; // UTextBlock*
		constexpr auto High = 0x388; // UTextBlock*
		constexpr auto ImgScrollBg = 0x390; // UImage*
		constexpr auto Low = 0x398; // UTextBlock*
		constexpr auto Medium = 0x3a0; // UTextBlock*
		constexpr auto Point1 = 0x3a8; // UImage*
		constexpr auto Point2 = 0x3b0; // UImage*
		constexpr auto Point3 = 0x3b8; // UImage*
		constexpr auto Point4 = 0x3c0; // UImage*
		constexpr auto Point5 = 0x3c8; // UImage*
		constexpr auto Point6 = 0x3d0; // UImage*
		constexpr auto Slider = 0x3d8; // USlider*
		constexpr auto SelectIndex = 0x3e0; // int32_t
		constexpr auto OnSelectIndexChanged = 0x3e8; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeConcatenator {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_UVehiclePerkSlot {
		constexpr auto QualityBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto IconImg = 0x350; // UImage*
		constexpr auto QualityImg = 0x358; // UImage*
		constexpr auto ActiveImg = 0x360; // UImage*
		constexpr auto BindVehiclePerk = 0x368; // USGVehiclePerk*
		constexpr auto VehiclePerkIndex = 0x370; // int32_t
		constexpr auto bIsActivePerk = 0x374; // char : 1
		constexpr auto PerkSlotType = 0x375; // EVehiclePerkSlotType
	}

	namespace n_UUI_N_ShopBanner {
		constexpr auto BannerSwitcher = 0x260; // UWidgetSwitcher*
		constexpr auto TurnLeftBtn = 0x268; // UButton*
		constexpr auto TurnRightBtn = 0x270; // UButton*
		constexpr auto IndexHBox = 0x278; // UHorizontalBox*
		constexpr auto IndexPicPadding = 0x280; // FMargin
		constexpr auto BannerStateBtnTemplate = 0x290; // UUI_N_Shop_BannerStateBtn*
	}

	namespace n_UNiagaraDataInterfaceVector4Curve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
		constexpr auto WCurve = 0x1f0; // FRichCurve
	}

	namespace n_UGuildGroupSlot {
		constexpr auto AddGroupButton = 0x260; // UButton*
		constexpr auto GroupIndexText = 0x268; // UTextBlock*
		constexpr auto GroupNameText = 0x270; // UTextBlock*
		constexpr auto GroupMemberText = 0x278; // UTextBlock*
		constexpr auto ChangeNameButton = 0x280; // UButton*
		constexpr auto DeleteGroupButton = 0x288; // UButton*
		constexpr auto AddGuildGroupUIOverride = 0x290; // UUI_ModifyText*
		constexpr auto ModifyGuildGroupUIOverride = 0x298; // UUI_ModifyText*
		constexpr auto ConfirmDeleteGroupUIOverride = 0x2a0; // UUI_GenericConfirmationDialog*
	}

	namespace n_AMagicLeapSharedWorldGameState {
		constexpr auto SharedWorldData = 0x390; // FMagicLeapSharedWorldSharedData
		constexpr auto AlignmentTransforms = 0x3a0; // FMagicLeapSharedWorldAlignmentTransforms
		constexpr auto OnSharedWorldDataUpdated = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnAlignmentTransformsUpdated = 0x3c0; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackBoolProp {
		constexpr auto BoolTrack = 0x70; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0x80; // FName
	}

	namespace n_UBakedOcclusionMapVisualizationProperties {
		constexpr auto BaseGrayLevel = 0x60; // float
		constexpr auto OcclusionMultiplier = 0x64; // float
	}

	namespace n_UUI_PasswordEntry {
		constexpr auto PasswordTextBox = 0x2d8; // UEditableTextBox*
		constexpr auto SelectButton0 = 0x2e0; // UButton*
		constexpr auto SelectButton1 = 0x2e8; // UButton*
		constexpr auto SelectButton2 = 0x2f0; // UButton*
		constexpr auto SelectButton3 = 0x2f8; // UButton*
		constexpr auto SelectButton4 = 0x300; // UButton*
		constexpr auto SelectButton5 = 0x308; // UButton*
		constexpr auto SelectButton6 = 0x310; // UButton*
		constexpr auto SelectButton7 = 0x318; // UButton*
		constexpr auto SelectButton8 = 0x320; // UButton*
		constexpr auto SelectButton9 = 0x328; // UButton*
		constexpr auto ConfirmButton = 0x330; // UButton*
		constexpr auto DeleteButton = 0x338; // UButton*
		constexpr auto CannelButton = 0x340; // UButton*
	}

	namespace n_UEnvQueryTest_InsideWaterBody {
		constexpr auto bIncludeWaves = 0x1f8; // bool
		constexpr auto bSimpleWaves = 0x1f9; // bool
		constexpr auto bIgnoreExclusionVolumes = 0x1fa; // bool
	}

	namespace n_UNiagaraDataInterfaceRenderTarget2DArray {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_UGeometryCollectionDebugDrawComponent {
		constexpr auto GeometryCollectionDebugDrawActor = 0xc0; // AGeometryCollectionDebugDrawActor*
		constexpr auto GeometryCollectionRenderLevelSetActor = 0xc8; // AGeometryCollectionRenderLevelSetActor*
	}

	namespace n_AControlPointMeshActor {
		constexpr auto ControlPointMeshComponent = 0x310; // UControlPointMeshComponent*
	}

	namespace n_UAISenseConfig_Blueprint {
		constexpr auto Implementation = 0x48; // UAISense_Blueprint*
	}

	namespace n_UEnvQueryTest_Dot {
		constexpr auto LineA = 0x1f8; // FEnvDirection
		constexpr auto LineB = 0x218; // FEnvDirection
		constexpr auto TestMode = 0x238; // EEnvTestDot
		constexpr auto bAbsoluteValue = 0x239; // bool
	}

	namespace n_UMovieSceneMaterialParameterCollectionTrack {
		constexpr auto MPC = 0x90; // UMaterialParameterCollection*
	}

	namespace n_UGroupEdgeInsertionProperties {
		constexpr auto InsertionMode = 0x60; // EGroupEdgeInsertionMode
		constexpr auto bWireframe = 0x64; // bool
		constexpr auto VertexTolerance = 0x68; // double
	}

	namespace n_UBTTask_SetRandomPoint {
		constexpr auto BBKey_DesiredLocation = 0xc0; // FBlackboardKeySelector
	}

	namespace n_UEditMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xd0; // USimpleDynamicMeshComponent*
		constexpr auto CommonProps = 0xd8; // UPolyEditCommonProperties*
		constexpr auto EditActions = 0xe0; // UEditMeshPolygonsToolActions*
		constexpr auto EditActions_Triangles = 0xe8; // UEditMeshPolygonsToolActions_Triangles*
		constexpr auto EditEdgeActions = 0xf0; // UEditMeshPolygonsToolEdgeActions*
		constexpr auto EditEdgeActions_Triangles = 0xf8; // UEditMeshPolygonsToolEdgeActions_Triangles*
		constexpr auto EditUVActions = 0x100; // UEditMeshPolygonsToolUVActions*
		constexpr auto ExtrudeProperties = 0x108; // UPolyEditExtrudeProperties*
		constexpr auto OffsetProperties = 0x110; // UPolyEditOffsetProperties*
		constexpr auto InsetProperties = 0x118; // UPolyEditInsetProperties*
		constexpr auto OutsetProperties = 0x120; // UPolyEditOutsetProperties*
		constexpr auto CutProperties = 0x128; // UPolyEditCutProperties*
		constexpr auto SetUVProperties = 0x130; // UPolyEditSetUVProperties*
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0x148; // UMultiTransformer*
		constexpr auto EditPreview = 0x4a0; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x4b0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x4b8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x4c0; // UCollectSurfacePathMechanic*
	}

	namespace n_UWindDirectionalSourceComponent {
		constexpr auto Strength = 0x208; // float
		constexpr auto Speed = 0x20c; // float
		constexpr auto MinGustAmount = 0x210; // float
		constexpr auto MaxGustAmount = 0x214; // float
		constexpr auto Radius = 0x218; // float
		constexpr auto bPointWind = 0x21c; // char : 1
	}

	namespace n_UFixedPlaneBrushProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_UAITask {
		constexpr auto OwnerController = 0x68; // AAIController*
	}

	namespace n_ULenovoQueryBox {
		constexpr auto OptionTemplate = 0x260; // ULenovoQueryOption*
		constexpr auto MaxOptionNumPerPage = 0x268; // int32_t
		constexpr auto EtbSearch = 0x270; // UEditableText*
		constexpr auto OptionCanvas = 0x278; // UCanvasPanel*
		constexpr auto UGPOptions = 0x280; // UUniformGridPanel*
		constexpr auto BtnLastOption = 0x288; // UButton*
		constexpr auto BtnNextOption = 0x290; // UButton*
		constexpr auto StringOptions = 0x2d8; // TArray<FString>
		constexpr auto ValidOptionIndexes = 0x2e8; // TArray<int32_t>
		constexpr auto LenovoQueryOptions = 0x2f8; // TArray<ULenovoQueryOption*>
		constexpr auto StartIndex = 0x308; // int32_t
		constexpr auto SearchString = 0x310; // FString
		constexpr auto SelectLenovoQuery = 0x320; // ULenovoQueryOption*
		constexpr auto SelectLenovoQueryOptionIndex = 0x328; // int32_t
		constexpr auto bOptionCanvasOpened = 0x32c; // char : 1
	}

	namespace n_UUI_MenuHead {
		constexpr auto HeadImage = 0x260; // UImage*
		constexpr auto MenuIcon = 0x268; // TSoftObjectPtr<UTexture2D>
		constexpr auto HeadText = 0x290; // UTextBlock*
		constexpr auto MenuText = 0x298; // FText
		constexpr auto CloseButton = 0x2b0; // UButton*
		constexpr auto bShowCloseButton = 0x2b8; // char : 1
	}

	namespace n_UUI_StructureOccupyItemSlot {
		constexpr auto BindItem = 0x260; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventoryComponent = 0x268; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ImgIcon = 0x270; // UImage*
		constexpr auto IsHover = 0x278; // char : 1
		constexpr auto RootSGUI = 0x280; // USGUI*
		constexpr auto ProtectItemNumText = 0x288; // UTextBlock*
		constexpr auto BuyItemNumText = 0x290; // UTextBlock*
		constexpr auto LackResouseTextColor = 0x298; // FSlateColor
		constexpr auto UnLackResouseTextColor = 0x2c0; // FSlateColor
	}

	namespace n_UMaterialExpressionReflectionVectorWS {
		constexpr auto CustomWorldNormal = 0x40; // FExpressionInput
		constexpr auto bNormalizeCustomWorldNormal = 0x54; // char : 1
	}

	namespace n_UN_InventoryPanel {
		constexpr auto InventoryExchangeBorder = 0x260; // UBorder*
		constexpr auto BindInventoryType = 0x268; // EInventoryTypes
		constexpr auto BindInventoryComponent = 0x26c; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto InventorySlotList = 0x278; // TArray<UN_InventorySlot*>
		constexpr auto ParentSGUI = 0x288; // USGUI*
		constexpr auto RootSGUI = 0x290; // USGUI*
		constexpr auto bSlotAllowDrag = 0x298; // char : 1
		constexpr auto bRemote = 0x298; // char : 1
		constexpr auto InventoryPanelBgType = 0x299; // EInventoryPanelBgType
		constexpr auto BottomBg = 0x2a0; // UImage*
		constexpr auto InventoryGrid = 0x2a8; // UUniformGridPanel*
		constexpr auto ArrangeButton = 0x2b0; // UInventoryFunctionButton*
		constexpr auto SwitchButton = 0x2b8; // UInventoryFunctionButton*
		constexpr auto DropAllButton = 0x2c0; // UInventoryFunctionButton*
		constexpr auto DropButton = 0x2c8; // UInventoryFunctionButton*
		constexpr auto ShowWeightButton = 0x2d0; // UInventoryFunctionButton*
		constexpr auto ConsumeTypeSlot = 0x2d8; // UInventoryItemTypeFilterSlot*
		constexpr auto EquipTypeSlot = 0x2e0; // UInventoryItemTypeFilterSlot*
		constexpr auto WeaponTypeSlot = 0x2e8; // UInventoryItemTypeFilterSlot*
		constexpr auto AmmoTypeSlot = 0x2f0; // UInventoryItemTypeFilterSlot*
		constexpr auto StructureTypeSlot = 0x2f8; // UInventoryItemTypeFilterSlot*
		constexpr auto ResourceTypeSlot = 0x300; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchTypeSlot = 0x308; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchEditBox = 0x310; // UEditableTextBox*
		constexpr auto FilterPanel = 0x318; // UCanvasPanel*
		constexpr auto PanelButtonPanel = 0x320; // UHorizontalBox*
		constexpr auto TitlePanel = 0x328; // UCanvasPanel*
		constexpr auto TitleText = 0x330; // UTextBlock*
		constexpr auto TitleImage = 0x338; // UImage*
		constexpr auto WeightCanvas = 0x340; // UCanvasPanel*
		constexpr auto WeightText = 0x348; // UTextBlock*
		constexpr auto SlotNumCanvas = 0x350; // UCanvasPanel*
		constexpr auto SlotNumText = 0x358; // UTextBlock*
		constexpr auto AboveTitleImageBrush = 0x360; // FSlateBrush
		constexpr auto RemoteTitleText = 0x3e8; // FText
		constexpr auto GeneralTitleText = 0x400; // FText
		constexpr auto HorseTitleText = 0x418; // FText
		constexpr auto CrossServerTitleText = 0x430; // FText
		constexpr auto BattleTitleText = 0x448; // FText
		constexpr auto UnLockNum = 0x460; // int32_t
		constexpr auto FilterPanelAbovePos = 0x464; // FVector2D
		constexpr auto bDisplayHelpPanel = 0x46c; // char : 1
		constexpr auto bNeedRefreshSlotNum = 0x480; // char : 1
		constexpr auto SearchString = 0x488; // FString
		constexpr auto CurrentActiveFilterSlot = 0x498; // UInventoryItemTypeFilterSlot*
		constexpr auto bForceShowDefaultNum = 0x4a0; // char : 1
		constexpr auto RecordTransportItem = 0x4a4; // TWeakObjectPtr<USGItem>
		constexpr auto RecordTransportItemInventoy = 0x4ac; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto RecordTransportItemInventoyType = 0x4b4; // EInventoryTypes
		constexpr auto bRecordShift = 0x4b5; // char : 1
		constexpr auto bRecordCtrl = 0x4b5; // char : 1
		constexpr auto bNeedShowFuelGuide = 0x4b5; // char : 1
		constexpr auto CountsPerRow = 0x4b8; // int32_t
		constexpr auto CurrentInventoryNum = 0x4bc; // int32_t
		constexpr auto TickUpdateSlotNumber = 0x4c0; // int32_t
		constexpr auto LastInventoryItemNum = 0x4c4; // int32_t
		constexpr auto DefaultShowInventoryNum = 0x4cc; // int32_t
		constexpr auto InventorySlotClass = 0x4d0; // UN_InventorySlot*
		constexpr auto HelpPanelName = 0x4d8; // FName
		constexpr auto HelpPanel = 0x4e0; // UHorizontalBox*
		constexpr auto QuickHelpPanelName = 0x4e8; // FName
		constexpr auto QuickHelpPanel = 0x4f0; // UN_QuickHelpPanel*
		constexpr auto QuickHelpSlotTemplate = 0x4f8; // UQuickHelpSlot*
	}

	namespace n_UPreviewGeometry {
		constexpr auto ParentActor = 0x28; // APreviewGeometryActor*
		constexpr auto LineSets = 0x30; // TMap<FString, ULineSetComponent*>
	}

	namespace n_UPhysicsSettingsCore {
		constexpr auto DefaultGravityZ = 0x38; // float
		constexpr auto DefaultTerminalVelocity = 0x3c; // float
		constexpr auto DefaultFluidFriction = 0x40; // float
		constexpr auto SimulateScratchMemorySize = 0x44; // int32_t
		constexpr auto RagdollAggregateThreshold = 0x48; // int32_t
		constexpr auto TriangleMeshTriangleMinAreaThreshold = 0x4c; // float
		constexpr auto bEnableShapeSharing = 0x50; // bool
		constexpr auto bEnablePCM = 0x51; // bool
		constexpr auto bEnableStabilization = 0x52; // bool
		constexpr auto bWarnMissingLocks = 0x53; // bool
		constexpr auto bEnable2DPhysics = 0x54; // bool
		constexpr auto bDefaultHasComplexCollision = 0x55; // bool
		constexpr auto BounceThresholdVelocity = 0x58; // float
		constexpr auto FrictionCombineMode = 0x5c; // EFrictionCombineMode
		constexpr auto RestitutionCombineMode = 0x5d; // EFrictionCombineMode
		constexpr auto MaxAngularVelocity = 0x60; // float
		constexpr auto MaxDepenetrationVelocity = 0x64; // float
		constexpr auto ContactOffsetMultiplier = 0x68; // float
		constexpr auto MinContactOffset = 0x6c; // float
		constexpr auto MaxContactOffset = 0x70; // float
		constexpr auto bSimulateSkeletalMeshOnDedicatedServer = 0x74; // bool
		constexpr auto DefaultShapeComplexity = 0x75; // ECollisionTraceFlag
		constexpr auto SolverOptions = 0x78; // FChaosSolverConfiguration
	}

	namespace n_UExponentialHeightFogComponent {
		constexpr auto FogDensity = 0x208; // float
		constexpr auto FogHeightFalloff = 0x20c; // float
		constexpr auto SecondFogData = 0x210; // FExponentialHeightFogData
		constexpr auto FogInscatteringColor = 0x21c; // FLinearColor
		constexpr auto InscatteringColorCubemap = 0x230; // UTextureCube*
		constexpr auto InscatteringColorCubemapAngle = 0x238; // float
		constexpr auto InscatteringTextureTint = 0x23c; // FLinearColor
		constexpr auto FullyDirectionalInscatteringColorDistance = 0x24c; // float
		constexpr auto NonDirectionalInscatteringColorDistance = 0x250; // float
		constexpr auto DirectionalInscatteringExponent = 0x254; // float
		constexpr auto DirectionalInscatteringStartDistance = 0x258; // float
		constexpr auto DirectionalInscatteringColor = 0x25c; // FLinearColor
		constexpr auto FogMaxOpacity = 0x26c; // float
		constexpr auto startDistance = 0x270; // float
		constexpr auto FogCutoffDistance = 0x274; // float
		constexpr auto bEnableVolumetricFog = 0x278; // bool
		constexpr auto VolumetricFogScatteringDistribution = 0x27c; // float
		constexpr auto VolumetricFogAlbedo = 0x280; // FColor
		constexpr auto VolumetricFogEmissive = 0x284; // FLinearColor
		constexpr auto VolumetricFogExtinctionScale = 0x294; // float
		constexpr auto VolumetricFogDistance = 0x298; // float
		constexpr auto VolumetricFogStaticLightingScatteringIntensity = 0x29c; // float
		constexpr auto bOverrideLightColorsWithFogInscatteringColors = 0x2a0; // bool
	}

	namespace n_UBoxFalloff {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto MinRange = 0xc4; // float
		constexpr auto MaxRange = 0xc8; // float
		constexpr auto Default = 0xcc; // float
		constexpr auto Transform = 0xd0; // FTransform
		constexpr auto Falloff = 0x100; // EFieldFalloffType
	}

	namespace n_UGuildAuthorityComboBox {
		constexpr auto OnSelectionChanged = 0x260; // FMulticastInlineDelegate
	}

	namespace n_AGlobalMapCameraActor {
		constexpr auto DefaultLocation = 0x8a8; // FVector
		constexpr auto MapCameraPitchCurve = 0x8b8; // UCurveFloat*
		constexpr auto MapCameraDistances = 0x8c0; // TArray<float>
		constexpr auto MapCameraIndexInterpSpeed = 0x8d0; // float
		constexpr auto MapCameraIndexInterpCurve = 0x8d8; // UCurveFloat*
		constexpr auto CurCameraIndex = 0x8e0; // float
		constexpr auto MapCameraMoveSpeed = 0x8e4; // FVector2D
		constexpr auto MapCameraMoveDecelerate = 0x8ec; // FVector2D
		constexpr auto MapCameraDragStep = 0x8f4; // float
		constexpr auto MapCameraXMinClamp = 0x8f8; // FVector2D
		constexpr auto MapCameraXMaxClamp = 0x900; // FVector2D
		constexpr auto MapCameraYMinClamp = 0x908; // FVector2D
		constexpr auto MapCameraYMaxClamp = 0x910; // FVector2D
		constexpr auto LevelVisibilityConfigs = 0x918; // TMap<FString, FGlobalMapLevelVisibilityConfigArray>
		constexpr auto GlobalMapMatParamCollection = 0x968; // UMaterialParameterCollection*
		constexpr auto FixParamCollectionMapCameraDistance = 0x970; // float
		constexpr auto GlobalMapMatParamCollectionInstance = 0xa48; // UMaterialParameterCollectionInstance*
	}

	namespace n_UNiagaraComponent {
		constexpr auto Asset = 0x488; // UNiagaraSystem*
		constexpr auto TickBehavior = 0x490; // ENiagaraTickBehavior
		constexpr auto OverrideParameters = 0x498; // FNiagaraUserRedirectionParameterStore
		constexpr auto bForceSolo = 0x560; // char : 1
		constexpr auto bEnableGpuComputeDebug = 0x560; // char : 1
		constexpr auto bAutoDestroy = 0x58c; // char : 1
		constexpr auto bRenderingEnabled = 0x58c; // char : 1
		constexpr auto bAutoManageAttachment = 0x58c; // char : 1
		constexpr auto bAutoAttachWeldSimulatedBodies = 0x58c; // char : 1
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x590; // float
		constexpr auto EmitterMaterials = 0x598; // TArray<FNiagaraMaterialOverride>
		constexpr auto OnSystemFinished = 0x5b0; // FMulticastInlineDelegate
		constexpr auto AutoAttachParent = 0x5c0; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x5c8; // FName
		constexpr auto AutoAttachLocationRule = 0x5d0; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x5d1; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x5d2; // EAttachmentRule
	}

	namespace n_USCS_Node {
		constexpr auto ComponentClass = 0x28; // UObject*
		constexpr auto ComponentTemplate = 0x30; // UActorComponent*
		constexpr auto CookedComponentInstancingData = 0x38; // FBlueprintCookedComponentInstancingData
		constexpr auto AttachToName = 0x80; // FName
		constexpr auto ParentComponentOrVariableName = 0x88; // FName
		constexpr auto ParentComponentOwnerClassName = 0x90; // FName
		constexpr auto bIsParentComponentNative = 0x98; // bool
		constexpr auto ChildNodes = 0xa0; // TArray<USCS_Node*>
		constexpr auto MetaDataArray = 0xb0; // TArray<FBPVariableMetaDataEntry>
		constexpr auto VariableGuid = 0xc0; // FGuid
		constexpr auto InternalVariableName = 0xd0; // FName
	}

	namespace n_UWaterSubsystem {
		constexpr auto OnCameraUnderwaterStateChanged = 0x70; // FMulticastInlineDelegate
		constexpr auto OnWaterScalabilityChanged = 0x80; // FMulticastInlineDelegate
		constexpr auto DefaultRiverMesh = 0x90; // UStaticMesh*
		constexpr auto DefaultLakeMesh = 0x98; // UStaticMesh*
		constexpr auto WaterMeshActor = 0xa0; // AWaterMeshActor*
		constexpr auto MaterialParameterCollection = 0xd0; // UMaterialParameterCollection*
	}

	namespace n_UVariant {
		constexpr auto Dependencies = 0x28; // TArray<FVariantDependency>
		constexpr auto DisplayText = 0x38; // FText
		constexpr auto ObjectBindings = 0x68; // TArray<UVariantObjectBinding*>
		constexpr auto Thumbnail = 0x78; // UTexture2D*
	}

	namespace n_UNiagaraDataInterfaceVectorField {
		constexpr auto Field = 0x38; // UVectorField*
		constexpr auto bTileX = 0x40; // bool
		constexpr auto bTileY = 0x41; // bool
		constexpr auto bTileZ = 0x42; // bool
	}

	namespace n_UPawnAction_Wait {
		constexpr auto TimeToWait = 0x98; // float
	}

	namespace n_UNiagaraDataInterface2DArrayTexture {
		constexpr auto Texture = 0x38; // UTexture2DArray*
	}

	namespace n_UMontageEvent_AnimNotify {
		constexpr auto PlayMontage = 0x38; // UAnimMontage*
		constexpr auto Enum_MontageCustomBindType = 0x40; // EMontageCustomBindType
		constexpr auto VirtualPropData = 0x48; // FVirtualPropData
		constexpr auto StopBlendTime = 0x70; // float
		constexpr auto bStopMontageAsTriggerNotify = 0x74; // char : 1
		constexpr auto bPlayOtherMontageAsTriggerNotify = 0x74; // char : 1
		constexpr auto PlayOtherMontage = 0x78; // UAnimMontage*
	}

	namespace n_UNiagaraDataInterfaceAudioSubmix {
		constexpr auto Submix = 0x38; // USoundSubmix*
	}

	namespace n_ATransformGizmoActor {
		constexpr auto TranslateX = 0x310; // UPrimitiveComponent*
		constexpr auto TranslateY = 0x318; // UPrimitiveComponent*
		constexpr auto TranslateZ = 0x320; // UPrimitiveComponent*
		constexpr auto TranslateYZ = 0x328; // UPrimitiveComponent*
		constexpr auto TranslateXZ = 0x330; // UPrimitiveComponent*
		constexpr auto TranslateXY = 0x338; // UPrimitiveComponent*
		constexpr auto RotateX = 0x340; // UPrimitiveComponent*
		constexpr auto RotateY = 0x348; // UPrimitiveComponent*
		constexpr auto RotateZ = 0x350; // UPrimitiveComponent*
		constexpr auto UniformScale = 0x358; // UPrimitiveComponent*
		constexpr auto AxisScaleX = 0x360; // UPrimitiveComponent*
		constexpr auto AxisScaleY = 0x368; // UPrimitiveComponent*
		constexpr auto AxisScaleZ = 0x370; // UPrimitiveComponent*
		constexpr auto PlaneScaleYZ = 0x378; // UPrimitiveComponent*
		constexpr auto PlaneScaleXZ = 0x380; // UPrimitiveComponent*
		constexpr auto PlaneScaleXY = 0x388; // UPrimitiveComponent*
	}

	namespace n_UParticleModuleBeamModifier {
		constexpr auto ModifierType = 0x30; // BeamModifierType
		constexpr auto PositionOptions = 0x34; // FBeamModifierOptions
		constexpr auto position = 0x38; // FRawDistributionVector
		constexpr auto TangentOptions = 0x80; // FBeamModifierOptions
		constexpr auto Tangent = 0x88; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xd0; // char : 1
		constexpr auto StrengthOptions = 0xd4; // FBeamModifierOptions
		constexpr auto Strength = 0xd8; // FRawDistributionFloat
	}

	namespace n_UParticleModuleAccelerationDragScaleOverLife {
		constexpr auto DragScale = 0x38; // UDistributionFloat*
		constexpr auto DragScaleRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UNatureWeatherComponent {
		constexpr auto WetLevel = 0x208; // float
		constexpr auto PuddleNoiseExponent = 0x20c; // float
		constexpr auto PuddleSpeed = 0x210; // float
		constexpr auto PuddleIntensity = 0x214; // float
		constexpr auto RippleSpeed = 0x218; // float
		constexpr auto RippleIntensity = 0x21c; // float
		constexpr auto FlowSpeed = 0x220; // float
		constexpr auto FlowIntensity = 0x224; // float
		constexpr auto WindOffset = 0x228; // FVector
		constexpr auto RainIntensity = 0x234; // float
		constexpr auto RainMeshRadius = 0x238; // float
		constexpr auto RainLightingIntensity = 0x23c; // float
		constexpr auto RainDropSpeed = 0x240; // float
		constexpr auto RainDensity = 0x244; // float
		constexpr auto OcclusionDepthZOffset = 0x248; // float
		constexpr auto OcclusionCaptureZHeight = 0x24c; // float
		constexpr auto OcclusionCaptureSnapMaxDistance = 0x250; // float
		constexpr auto OcclusionDepthWidth = 0x254; // float
		constexpr auto OcclusionDepthTextureResolution = 0x258; // int32_t
		constexpr auto CenterSimOnPawn = 0x25c; // bool
		constexpr auto EnableRainRotationRealisticLimitation = 0x25d; // bool
		constexpr auto RainRotationRealisticLimitationMaxValue = 0x260; // float
		constexpr auto RainRotation = 0x264; // FRotator
		constexpr auto OcclusionDepthTexture = 0x270; // UTextureRenderTarget2D*
		constexpr auto NoiseTexture = 0x278; // UTexture2D*
		constexpr auto FlowNoiseTexture = 0x280; // UTexture2D*
		constexpr auto RippleFlipTexture = 0x288; // UTexture2D*
		constexpr auto RainFallTexture = 0x290; // UTexture2D*
		constexpr auto RainFallNormalTexture = 0x298; // UTexture2D*
	}

	namespace n_UDisplaceMeshPerlinNoiseProperties {
		constexpr auto PerlinLayerProperties = 0x60; // TArray<FPerlinLayerProperties>
	}

	namespace n_UHuangLiAllEffectsPanel {
		constexpr auto XingShenView = 0x260; // UHuangLiEffectsView*
		constexpr auto XingXiuView = 0x268; // UHuangLiEffectsView*
		constexpr auto JianChuView = 0x270; // UHuangLiEffectsView*
		constexpr auto BackButton = 0x278; // UButton*
	}

	namespace n_UUI_GuildImage {
		constexpr auto CloseButton = 0x2d8; // UButton*
		constexpr auto SubbmitButton = 0x2e0; // UButton*
		constexpr auto RemoveLayerButton = 0x2e8; // UButton*
		constexpr auto ResetButton = 0x2f0; // UButton*
		constexpr auto GuildImageSlot = 0x2f8; // UGuildImageSlot*
		constexpr auto UMSlider = 0x300; // USlider*
		constexpr auto VMSlider = 0x308; // USlider*
		constexpr auto UVMSlider = 0x310; // USlider*
		constexpr auto RSlider = 0x318; // USlider*
		constexpr auto SXSlider = 0x320; // USlider*
		constexpr auto SYSlider = 0x328; // USlider*
		constexpr auto SXYSlider = 0x330; // USlider*
		constexpr auto MirrorSlider = 0x338; // USlider*
		constexpr auto UMoveTextBlock = 0x340; // UTextBlock*
		constexpr auto VMoveTextBlock = 0x348; // UTextBlock*
		constexpr auto UVMoveTextBlock = 0x350; // UTextBlock*
		constexpr auto RTextBlock = 0x358; // UTextBlock*
		constexpr auto SXTextBlock = 0x360; // UTextBlock*
		constexpr auto SYTextBlock = 0x368; // UTextBlock*
		constexpr auto SXYTextBlock = 0x370; // UTextBlock*
		constexpr auto MirrorTextBlock = 0x378; // UTextBlock*
		constexpr auto SignUniformGrid = 0x380; // UUniformGridPanel*
		constexpr auto ColorUniformGrid = 0x388; // UUniformGridPanel*
		constexpr auto SignCountsPerRow = 0x390; // int32_t
		constexpr auto ColorCountsPerRow = 0x394; // int32_t
		constexpr auto SignWidgetSlotTemplate = 0x398; // USelectWidgetSlot*
		constexpr auto ColorWidgetSlotTemplate = 0x3a0; // USelectWidgetSlot*
		constexpr auto ShowMaxNormalLayerNum = 0x3a8; // int32_t
		constexpr auto ConfirmSubmitUIOverride = 0x3b0; // UUI_GenericConfirmationDialog*
	}

	namespace n_UMaterialExpressionTemporalSobol {
		constexpr auto Index = 0x40; // FExpressionInput
		constexpr auto Seed = 0x54; // FExpressionInput
		constexpr auto ConstIndex = 0x68; // uint32_t
		constexpr auto ConstSeed = 0x6c; // FVector2D
	}

	namespace n_UEnvQueryGenerator_OnCircle {
		constexpr auto CircleRadius = 0x80; // FAIDataProviderFloatValue
		constexpr auto SpaceBetween = 0xb8; // FAIDataProviderFloatValue
		constexpr auto NumberOfPoints = 0xf0; // FAIDataProviderIntValue
		constexpr auto PointOnCircleSpacingMethod = 0x128; // EPointOnCircleSpacingMethod
		constexpr auto ArcDirection = 0x130; // FEnvDirection
		constexpr auto ArcAngle = 0x150; // FAIDataProviderFloatValue
		constexpr auto AngleRadians = 0x188; // float
		constexpr auto CircleCenter = 0x190; // UEnvQueryContext*
		constexpr auto bIgnoreAnyContextActorsWhenGeneratingCircle = 0x198; // bool
		constexpr auto CircleCenterZOffset = 0x1a0; // FAIDataProviderFloatValue
		constexpr auto TraceData = 0x1d8; // FEnvTraceData
		constexpr auto bDefineArc = 0x208; // char : 1
	}

	namespace n_USGCheatManager {
		constexpr auto bGameModeCheatManager = 0x78; // bool
		constexpr auto GeneralCharacterClass = 0x80; // TArray<ASGGeneralCharacter*>
	}

	namespace n_USGUI {
		constexpr auto bValidateInput = 0x260; // char : 1
		constexpr auto SceneStackPriority = 0x264; // int32_t
		constexpr auto UIInputMode = 0x268; // EUIInputMode
		constexpr auto bShowCursor = 0x269; // char : 1
		constexpr auto bEscExit = 0x269; // char : 1
		constexpr auto RadioButtonViewList = 0x270; // TArray<FName>
		constexpr auto CacheSlateVisibility = 0x280; // ESlateVisibility
		constexpr auto bTopUI = 0x281; // char : 1
		constexpr auto bIsClosing = 0x282; // bool
	}

	namespace n_UHierarchicalLODSetup {
		constexpr auto HierarchicalLODSetup = 0x28; // TArray<FHierarchicalSimplification>
		constexpr auto OverrideBaseMaterial = 0x38; // TSoftObjectPtr<UMaterialInterface>
	}

	namespace n_USynth2DSlider {
		constexpr auto ValueX = 0x108; // float
		constexpr auto ValueY = 0x10c; // float
		constexpr auto ValueXDelegate = 0x110; // FDelegate
		constexpr auto ValueYDelegate = 0x120; // FDelegate
		constexpr auto WidgetStyle = 0x130; // FSynth2DSliderStyle
		constexpr auto SliderHandleColor = 0x3e8; // FLinearColor
		constexpr auto IndentHandle = 0x3f8; // bool
		constexpr auto Locked = 0x3f9; // bool
		constexpr auto StepSize = 0x3fc; // float
		constexpr auto IsFocusable = 0x400; // bool
		constexpr auto OnMouseCaptureBegin = 0x408; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x418; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x428; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x438; // FMulticastInlineDelegate
		constexpr auto OnValueChangedX = 0x448; // FMulticastInlineDelegate
		constexpr auto OnValueChangedY = 0x458; // FMulticastInlineDelegate
	}

	namespace n_UInGameAdManager {
		constexpr auto bShouldPauseWhileAdOpen = 0x38; // char : 1
		constexpr auto ClickedBannerDelegates = 0x40; // TArray<FDelegate>
		constexpr auto ClosedAdDelegates = 0x50; // TArray<FDelegate>
	}

	namespace n_AMaterialInstanceActor {
		constexpr auto TargetActors = 0x310; // TArray<AActor*>
	}

	namespace n_UFontFace {
		constexpr auto SourceFilename = 0x30; // FString
		constexpr auto Hinting = 0x40; // EFontHinting
		constexpr auto LoadingPolicy = 0x41; // EFontLoadingPolicy
		constexpr auto LayoutMethod = 0x42; // EFontLayoutMethod
	}

	namespace n_UOperationModeItem {
		constexpr auto NormalBGTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverBgTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BtnBg = 0x2e8; // UButton*
		constexpr auto ImgBg = 0x2f0; // UImage*
	}

	namespace n_UInputRouter {
		constexpr auto bAutoInvalidateOnHover = 0x28; // bool
		constexpr auto bAutoInvalidateOnCapture = 0x29; // bool
		constexpr auto ActiveInputBehaviors = 0x38; // UInputBehaviorSet*
	}

	namespace n_UWBP_KeySetting_C {
		constexpr auto KeySetting = 0x2b8; // UCanvasPanel*
		constexpr auto KeySettingRadioView = 0x2c0; // UWBP_KeySettingRadioView_C*
		constexpr auto TitleImage = 0x2c8; // UImage*
		constexpr auto TitleImage_2 = 0x2d0; // UImage*
		constexpr auto TitleImage_3 = 0x2d8; // UImage*
		constexpr auto TitleImage_4 = 0x2e0; // UImage*
		constexpr auto TitleImage_5 = 0x2e8; // UImage*
		constexpr auto TitleImage_6 = 0x2f0; // UImage*
		constexpr auto TitleImage_7 = 0x2f8; // UImage*
		constexpr auto TitleImage_8 = 0x300; // UImage*
		constexpr auto TitleImage_9 = 0x308; // UImage*
		constexpr auto SelectKeySettingItem_1 = 0x310; // UWBP_KeySettingItem_C*
	}

	namespace n_UN_DragDropItem {
		constexpr auto BindItem = 0xb8; // TWeakObjectPtr<USGItem>
	}

	namespace n_UFormationSlot {
		constexpr auto KeyName = 0x260; // FName
		constexpr auto FormationIndex = 0x268; // char
		constexpr auto TbKey = 0x270; // UTextBlock*
		constexpr auto ImgPressedBorder = 0x278; // UImage*
	}

	namespace n_UUI_AnimalRest {
		constexpr auto BindAnimalRest = 0x2d8; // TWeakObjectPtr<ASGStructureAnimalRest>
		constexpr auto DeadlyAnimalVertical = 0x2e0; // UVerticalBox*
		constexpr auto RestAnimalVertical = 0x2e8; // UVerticalBox*
		constexpr auto AddFoodButton = 0x2f0; // UButton*
		constexpr auto AddLifeCountButton = 0x2f8; // UButton*
		constexpr auto ReleaseAnimalButton = 0x300; // UButton*
		constexpr auto RebornAnimalButton = 0x308; // UButton*
		constexpr auto LeftFoodAmount = 0x310; // UTextBlock*
		constexpr auto CloseButton = 0x318; // UButton*
		constexpr auto AnimalRestSlotTemplate = 0x320; // UAnimalRestSlot*
		constexpr auto AnimalRestSlotList = 0x328; // TArray<UAnimalRestSlot*>
		constexpr auto SelectedAnimalGuid = 0x340; // FGuid
		constexpr auto ReduceRebornAnimalGuid = 0x350; // FGuid
		constexpr auto OtherUsingText = 0x360; // UTextBlock*
		constexpr auto BindInventory = 0x368; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto FinalRebornTime = 0x370; // FDateTime
	}

	namespace n_USGGameDataStatisticsEvent {
		constexpr auto StatisticEventParamConfig = 0x28; // UEnum* [0x15]
		constexpr auto EventParams = 0xd0; // TArray<FStatisticEventParamGroup>
	}

	namespace n_UParticleModuleLifetime_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_UGizmoPlaneTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // FVector2D
		constexpr auto LastChange = 0xb8; // FGizmoVec2ParameterChange
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto CurTranslationNormal = 0xd4; // FVector
		constexpr auto CurTranslationAxisX = 0xe0; // FVector
		constexpr auto CurTranslationAxisY = 0xec; // FVector
		constexpr auto InitialTransform = 0x100; // FTransform
	}

	namespace n_URadialForceComponent {
		constexpr auto Radius = 0x208; // float
		constexpr auto Falloff = 0x20c; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x210; // float
		constexpr auto bImpulseVelChange = 0x214; // char : 1
		constexpr auto bIgnoreOwningActor = 0x214; // char : 1
		constexpr auto ForceStrength = 0x218; // float
		constexpr auto DestructibleDamage = 0x21c; // float
		constexpr auto ObjectTypesToAffect = 0x220; // TArray<EObjectTypeQuery>
	}

	namespace n_UDestructibleFractureSettings {
		constexpr auto CellSiteCount = 0x28; // int32_t
		constexpr auto FractureMaterialDesc = 0x2c; // FFractureMaterial
		constexpr auto RandomSeed = 0x50; // int32_t
		constexpr auto VoronoiSites = 0x58; // TArray<FVector>
		constexpr auto OriginalSubmeshCount = 0x68; // int32_t
		constexpr auto Materials = 0x70; // TArray<UMaterialInterface*>
		constexpr auto ChunkParameters = 0x80; // TArray<FDestructibleChunkParameters>
	}

	namespace n_UUI_NPCTalkSlot {
		constexpr auto bLeftMouseButtonDown = 0x260; // char : 1
		constexpr auto bCanNotPress = 0x260; // char : 1
		constexpr auto bg = 0x268; // UBorder*
		constexpr auto NPCQuestionImage = 0x270; // UImage*
		constexpr auto NPCQuestionText = 0x278; // UTextBlock*
		constexpr auto BGUnSelected = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGSelected = 0x2a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto TextCanNotPressColor = 0x2d0; // FLinearColor
		constexpr auto TextWarningColor = 0x2e0; // FLinearColor
		constexpr auto TextErrorColor = 0x2f0; // FLinearColor
		constexpr auto IsHover = 0x300; // char : 1
		constexpr auto bPressed = 0x300; // char : 1
		constexpr auto RootSGUI = 0x308; // USGUI*
		constexpr auto BindGeneralCharacter = 0x310; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto BindTalkInfo = 0x318; // FNPCTalkInfo
		constexpr auto BindTalkID = 0x388; // int32_t
	}

	namespace n_UPaperFlipbookComponent {
		constexpr auto SourceFlipbook = 0x4b0; // UPaperFlipbook*
		constexpr auto Material = 0x4b8; // UMaterialInterface*
		constexpr auto PlayRate = 0x4c0; // float
		constexpr auto bLooping = 0x4c4; // char : 1
		constexpr auto bReversePlayback = 0x4c4; // char : 1
		constexpr auto bPlaying = 0x4c4; // char : 1
		constexpr auto AccumulatedTime = 0x4c8; // float
		constexpr auto CachedFrameIndex = 0x4cc; // int32_t
		constexpr auto SpriteColor = 0x4d0; // FLinearColor
		constexpr auto CachedBodySetup = 0x4e0; // UBodySetup*
		constexpr auto OnFinishedPlaying = 0x4e8; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_PlayAnimation {
		constexpr auto AnimationToPlay = 0x70; // UAnimationAsset*
		constexpr auto bLooping = 0x78; // char : 1
		constexpr auto bNonBlocking = 0x78; // char : 1
		constexpr auto MyOwnerComp = 0x80; // UBehaviorTreeComponent*
		constexpr auto CachedSkelMesh = 0x88; // USkeletalMeshComponent*
	}

	namespace n_UDrawPolyPathProperties {
		constexpr auto OutputType = 0x60; // EDrawPolyPathOutputMode
		constexpr auto WidthMode = 0x64; // EDrawPolyPathWidthMode
		constexpr auto Width = 0x68; // float
		constexpr auto HeightMode = 0x6c; // EDrawPolyPathHeightMode
		constexpr auto Height = 0x70; // float
		constexpr auto RampStartRatio = 0x74; // float
		constexpr auto bSnapToWorldGrid = 0x78; // bool
	}

	namespace n_UAnimNotify_PlaySound {
		constexpr auto Sound = 0x38; // USoundBase*
		constexpr auto VolumeMultiplier = 0x40; // float
		constexpr auto PitchMultiplier = 0x44; // float
		constexpr auto bFollow = 0x48; // char : 1
		constexpr auto AttachName = 0x4c; // FName
	}

	namespace n_UAbilityTask_WaitMovementModeChange {
		constexpr auto OnChange = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UIntSerialization {
		constexpr auto UnsignedInt16Variable = 0x28; // uint16_t
		constexpr auto UnsignedInt32Variable = 0x2c; // uint32_t
		constexpr auto UnsignedInt64Variable = 0x30; // uint64_t
		constexpr auto SignedInt8Variable = 0x38; // int8_t
		constexpr auto SignedInt16Variable = 0x3a; // int16_t
		constexpr auto SignedInt64Variable = 0x40; // int64_t
		constexpr auto UnsignedInt8Variable = 0x48; // char
		constexpr auto SignedInt32Variable = 0x4c; // int32_t
	}

	namespace n_UNavLinkDefinition {
		constexpr auto Links = 0x28; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x38; // TArray<FNavigationSegmentLink>
	}

	namespace n_UGizmoCircleComponent {
		constexpr auto Normal = 0x4a8; // FVector
		constexpr auto Radius = 0x4b4; // float
		constexpr auto Thickness = 0x4b8; // float
		constexpr auto NumSides = 0x4bc; // int32_t
		constexpr auto bViewAligned = 0x4c0; // bool
		constexpr auto bOnlyAllowFrontFacingHits = 0x4c1; // bool
	}

	namespace n_UParticleModuleTrailSource {
		constexpr auto SourceMethod = 0x30; // ETrail2SourceMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto SourceStrength = 0x40; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x70; // char : 1
		constexpr auto SourceOffsetCount = 0x74; // int32_t
		constexpr auto SourceOffsetDefaults = 0x78; // TArray<FVector>
		constexpr auto SelectionMethod = 0x88; // EParticleSourceSelectionMethod
		constexpr auto bInheritRotation = 0x8c; // char : 1
	}

	namespace n_UBTDecorator_Cooldown {
		constexpr auto CooldownTime = 0x68; // float
	}

	namespace n_ALevelBounds {
		constexpr auto BoxComponent = 0x310; // UBoxComponent*
		constexpr auto bAutoUpdateBounds = 0x318; // bool
	}

	namespace n_UGizmoTransformProxyTransformSource {
		constexpr auto Proxy = 0x48; // UTransformProxy*
	}

	namespace n_UHorseAuctionPanel {
		constexpr auto ScrollHorseList = 0x2d8; // UScrollBox*
		constexpr auto VehicleEquipPanel = 0x2e0; // UVehicleEquipPanel*
		constexpr auto AttributePanel = 0x2e8; // UVehicleAttributePanel*
		constexpr auto PerkPanel = 0x2f0; // UUI_VehiclePerk*
		constexpr auto CanvasPanel_Preview = 0x2f8; // UCanvasPanel*
		constexpr auto AttributeButton = 0x300; // UOptionButton*
		constexpr auto PerkButton = 0x308; // UOptionButton*
		constexpr auto ComboBoxQuality = 0x310; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxVehicleType = 0x318; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxLevel = 0x320; // UGuildAuthorityComboBox*
		constexpr auto SearchButton = 0x328; // UButton*
		constexpr auto BuyButton = 0x330; // UButton*
		constexpr auto Button_Previous = 0x338; // UButton*
		constexpr auto Button_Next = 0x340; // UButton*
		constexpr auto TextBlock_CurrentPage = 0x348; // UTextBlock*
		constexpr auto HorseAuctionSellSlot = 0x350; // UHorseAuctionSellSlot*
		constexpr auto MaxLevel = 0x358; // int32_t
		constexpr auto MaxPage = 0x35c; // int32_t
		constexpr auto OnePageDataCount = 0x360; // int32_t
		constexpr auto ParentUI = 0x378; // TWeakObjectPtr<UUI_GuildAuctionHouse>
		constexpr auto HorseSlotSelected = 0x380; // TWeakObjectPtr<UHorseAuctionSellSlot>
	}

	namespace n_UNiagaraDataInterfaceVolumeTexture {
		constexpr auto Texture = 0x38; // UVolumeTexture*
	}

	namespace n_UGuildEventConfig {
		constexpr auto GuildEventCommonCD = 0x28; // float
		constexpr auto ConfigEntries = 0x30; // TMap<EEventGuildType, FGuildEventConfigEntry>
	}

	namespace n_UUI_ModifyVehiclePerk {
		constexpr auto PerRowCount = 0x2d8; // int32_t
		constexpr auto VehiclePerkSlotTemplate = 0x2e0; // UVehiclePerkSlot*
		constexpr auto EmptyPerkSlotTemplate = 0x2e8; // UUserWidget*
		constexpr auto ForbidPlacePerkBtn = 0x2f0; // UOptionButton*
		constexpr auto AllowPlacePerkBtn = 0x2f8; // UOptionButton*
		constexpr auto SpecialPerkBtn = 0x300; // UOptionButton*
		constexpr auto RecessivePerkBtn = 0x308; // UOptionButton*
		constexpr auto SelectedPerkPanel = 0x310; // UUniformGridPanel*
		constexpr auto AllPerkPanel = 0x318; // UUniformGridPanel*
		constexpr auto ConfirmBtn = 0x320; // UButton*
		constexpr auto CancelBtn = 0x328; // UButton*
		constexpr auto BindHorseCharacter = 0x330; // TWeakObjectPtr<ASG_HorseCharacter>
		constexpr auto CurPerkSlotType = 0x388; // EVehiclePerkSlotType
	}

	namespace n_AAudioVolume {
		constexpr auto Priority = 0x348; // float
		constexpr auto bEnabled = 0x34c; // char : 1
		constexpr auto Settings = 0x350; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x370; // FInteriorSettings
		constexpr auto SubmixSendSettings = 0x398; // TArray<FAudioVolumeSubmixSendSettings>
		constexpr auto SubmixOverrideSettings = 0x3a8; // TArray<FAudioVolumeSubmixOverrideSettings>
	}

	namespace n_UUI_ServerParamBool {
		constexpr auto CheckBoxSelected = 0x260; // UCheckBox*
		constexpr auto TbParamName = 0x268; // UTextBlock*
		constexpr auto ButtonSet = 0x270; // UButton*
		constexpr auto StrParamName = 0x278; // FString
		constexpr auto StrCommand = 0x288; // FString
	}

	namespace n_UPolygonSelectionMechanic {
		constexpr auto Properties = 0x50; // UPolygonSelectionMechanicProperties*
		constexpr auto PreviewGeometryActor = 0x360; // APreviewGeometryActor*
		constexpr auto DrawnTriangleSetComponent = 0x368; // UTriangleSetComponent*
		constexpr auto HighlightedFaceMaterial = 0x3c0; // UMaterialInterface*
	}

	namespace n_UN_ShortCutSlot {
		constexpr auto AmmoAmountText = 0xf80; // UTextBlock*
		constexpr auto KeyTextblockName = 0xf88; // FName
		constexpr auto ShortCutSlotIndex = 0xf90; // UTextBlock*
		constexpr auto ShortCutSlotBorder = 0xf98; // UBorder*
		constexpr auto bIsZeroShortCutCraft = 0xfa0; // char : 1
	}

	namespace n_UUI_StructureOccupyShelterPanel {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto ProtectBox = 0x270; // UVerticalBox*
		constexpr auto OccupyShelterSlotClass = 0x278; // UUI_StructureOccupyShelterSlot*
		constexpr auto BuyThisWeekCheckBox = 0x280; // UCheckBox*
	}

	namespace n_UUI_ServerParamFloat {
		constexpr auto SliderValue = 0x260; // USlider*
		constexpr auto TbParamName = 0x268; // UTextBlock*
		constexpr auto SpinValue = 0x270; // USpinBox*
		constexpr auto ButtonSet = 0x278; // UButton*
		constexpr auto StrParamName = 0x280; // FString
		constexpr auto StrCommand = 0x290; // FString
	}

	namespace n_UFoliageType_InstancedStaticMesh {
		constexpr auto Mesh = 0x3d8; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x3e0; // TArray<UMaterialInterface*>
		constexpr auto ComponentClass = 0x3f0; // UFoliageInstancedStaticMeshComponent*
	}

	namespace n_UScrollBarWidgetStyle {
		constexpr auto ScrollBarStyle = 0x30; // FScrollBarStyle
	}

	namespace n_UABP_HorseMC_Preview_C {
		constexpr auto UberGraphFrame = 0xff0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Fabrik_2 = 0x1000; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_AnimDynamics_4 = 0x1190; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x15d0; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_Fabrik = 0x15f0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_SequencePlayer = 0x1780; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x1800; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root = 0x1820; // FAnimNode_Root
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1850; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x1958; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_AnimDynamics_3 = 0x1a60; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x1ea0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x22e0; // FAnimNode_AnimDynamics
		constexpr auto ReinsLLoc = 0x2720; // FVector
		constexpr auto ReinsRLoc = 0x272c; // FVector
		constexpr auto SaddleLTrans = 0x2740; // FTransform
		constexpr auto SaddleRTrans = 0x2770; // FTransform
		constexpr auto NewVar_1 = 0x27a0; // bool
	}

	namespace n_UMirrorTool {
		constexpr auto Settings = 0x98; // UMirrorToolProperties*
		constexpr auto ToolActions = 0xa0; // UMirrorToolActionPropertySet*
		constexpr auto MeshesToMirror = 0xa8; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto Previews = 0xb8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PlaneMechanic = 0x110; // UConstructionPlaneMechanic*
	}

	namespace n_ASGWeapon {
		constexpr auto AssociatedItem = 0x310; // TWeakObjectPtr<USGItem>
		constexpr auto AssociatedItemNetInfo = 0x318; // FSGItemNetInfo
		constexpr auto Enum_WeaponEquipState = 0x444; // EWeaponEquipState
		constexpr auto EquipStateMaterialSetting = 0x448; // TMap<EWeaponEquipState, FChangeEquipStateMaterialSetting>
		constexpr auto AttackStartOffset = 0x498; // FVector
		constexpr auto bShowTrace = 0x4a4; // char : 1
		constexpr auto bCanContinuousAttack = 0x4a4; // char : 1
		constexpr auto bIgnoreStandBlockAnimation = 0x4a4; // char : 1
		constexpr auto bStopAimCameraFromReload = 0x4a4; // char : 1
		constexpr auto bCanRiderSprintAttack = 0x4a4; // char : 1
		constexpr auto ShowTraceTime = 0x4a8; // float
		constexpr auto bUseServerTrace = 0x4ac; // char : 1
		constexpr auto Enum_PrimaryWeaponType = 0x4ad; // EPrimaryWeaponType
		constexpr auto bIgnoreRiderBlock = 0x4ae; // char : 1
		constexpr auto bCrouchDirectAttack = 0x4ae; // char : 1
		constexpr auto ActionMontageBindType = 0x4af; // EMontageCustomBindType
		constexpr auto CameraSocket = 0x4b0; // FName
		constexpr auto CameraOffset = 0x4b8; // FVector
		constexpr auto DamageIconIndex = 0x4c4; // int32_t
		constexpr auto bRiderOneHandAttack = 0x4c8; // char : 1
		constexpr auto bRiderOneHandBlock = 0x4c8; // char : 1
		constexpr auto EquipAnimsConfig = 0x4d0; // FEquipAnims
		constexpr auto CollectionTraceLength = 0x590; // float
		constexpr auto CollectionTraceCapsuleSize = 0x594; // FVector2D
		constexpr auto CollectionTraceCapsuleOffset = 0x59c; // FVector
		constexpr auto CollectionAnimsData = 0x5a8; // TArray<FAttackInfo>
		constexpr auto Stand_Rlx_AnimsConfig = 0x5b8; // FAnimsConfig
		constexpr auto Stand_Aim_AnimsConfig = 0x1e90; // FAnimsConfig
		constexpr auto Crouch_Rlx_AnimsConfig = 0x3768; // FAnimsConfig
		constexpr auto Crouch_Aim_AnimsConfig = 0x5040; // FAnimsConfig
		constexpr auto Struct_WepRlxSpeedConfig = 0x6918; // FCharacterMovingSpeedConfig
		constexpr auto Struct_WepAimSpeedConfig = 0x6be8; // FCharacterMovingSpeedConfig
		constexpr auto Struct_WepRlxAnimSpeedConfig = 0x6eb8; // FCharacterMovingSpeedConfig
		constexpr auto Struct_WepAimAnimSpeedConfig = 0x7188; // FCharacterMovingSpeedConfig
		constexpr auto HolsterSocket = 0x7458; // TMap<EEquipWeaponSlot, FName>
		constexpr auto EquipSocket = 0x74a8; // FName
		constexpr auto EquipSocketTransform = 0x74b0; // FTransform
		constexpr auto EquipPivotTransform = 0x74e0; // FTransform
		constexpr auto PitchUpTransform = 0x7510; // FTransform
		constexpr auto PitchDownTransform = 0x7540; // FTransform
		constexpr auto WeaponImpulse = 0x7570; // float
		constexpr auto WeaponBlockImpulse = 0x7574; // float
		constexpr auto EquipSoundID = 0x7578; // FName
		constexpr auto HolsterSoundID = 0x7580; // FName
		constexpr auto WeaponScatteringData = 0x7588; // FWeaponScatteringData
		constexpr auto CustomProjectileLaunchVelocity = 0x75c4; // FVector
		constexpr auto CanBlockAngle = 0x75d0; // float
		constexpr auto AimOffsetYawLimitAngle = 0x75d4; // FVector2D
		constexpr auto AimOffsetPitchLimitAngle = 0x75dc; // FVector2D
		constexpr auto MeleeAttackIgnoreActors = 0x75e8; // TArray<AActor*>
		constexpr auto IsMeleeAttackFrame = 0x75f8; // char
		constexpr auto CustomChildActors = 0x7600; // TArray<AActor*>
		constexpr auto EquipSlot = 0x7610; // EEquipWeaponSlot
		constexpr auto CurrentCrosshairsDegrees = 0x7614; // float
		constexpr auto TPVAimCameraOffsetOveride = 0x7658; // FVector
		constexpr auto TPVAimArmLengthOveride = 0x7664; // float
		constexpr auto TPVAimArmLengthOverideAdditionRange = 0x7668; // FVector2D
		constexpr auto RiderTPVAimArmLengthOveride = 0x7670; // float
		constexpr auto RiderTPVAimArmLengthOverideAdditionRange = 0x7674; // FVector2D
		constexpr auto RiderTPVAimCameraOffsetOveride = 0x767c; // FVector
		constexpr auto TransitionDuration = 0x7688; // float
		constexpr auto UseAddSkillType = 0x768c; // ESkillType
		constexpr auto UseAddSkillExp = 0x7690; // float
		constexpr auto Tenacity = 0x7694; // int32_t
		constexpr auto bCanCancelShooterAttack = 0x7698; // char : 1
		constexpr auto DamageType = 0x76a0; // USGDamageType*
		constexpr auto Hardness = 0x76a8; // int32_t
		constexpr auto WeaponData = 0x76b0; // FMeleeWeaponData
		constexpr auto MeleeWeaponTraces = 0x7748; // TArray<FWeaponTraceInfo>
		constexpr auto BodyTraces = 0x7758; // TArray<FWeaponTraceInfo>
		constexpr auto ServerCheckImpactComponentDistance = 0x7768; // float
		constexpr auto ServerCheckImpactActorDistance = 0x776c; // float
		constexpr auto ServerCheckImpactDeathCharacterDistance = 0x7770; // float
		constexpr auto ServerCheckImpactPointDistance = 0x7774; // float
		constexpr auto ServerCheckImpactDeathCharacterPointDistance = 0x7778; // float
		constexpr auto BrokenParticleVelocityMin = 0x777c; // float
		constexpr auto BrokenParticleVelocityMax = 0x7780; // float
		constexpr auto BrokenSoundID = 0x7784; // FName
		constexpr auto BrokenParticle = 0x7790; // UParticleSystem*
		constexpr auto RuleDamageRate = 0x7798; // float [0x4]
		constexpr auto HoslterShiledBlockPassRatio = 0x77a8; // float
		constexpr auto bFixedConsumeDurable = 0x77ac; // char : 1
		constexpr auto bCanStunTarget = 0x77ac; // char : 1
		constexpr auto WeaponDurableMulti = 0x77b0; // float
		constexpr auto DestroyedMesh = 0x77b8; // FSoftObjectPath
		constexpr auto DestroyedMeshActorClass = 0x77d0; // ASGDestructibleActor*
		constexpr auto Level = 0x77d8; // int32_t
		constexpr auto bSearchOrePlace = 0x77dc; // char : 1
		constexpr auto bCanDamageLandscape = 0x77dc; // char : 1
		constexpr auto bCanSearchOre = 0x77dc; // char : 1
		constexpr auto bCanSpawnOre = 0x77dc; // char : 1
		constexpr auto SpawnOreActorTemplate = 0x77e0; // ASGStructure*
		constexpr auto NearbyOreStructureRange = 0x77e8; // float
		constexpr auto LimitNormalValue = 0x77ec; // int32_t
		constexpr auto OreDurable = 0x77f0; // int32_t
		constexpr auto WarnOreRadius = 0x77f4; // int32_t
		constexpr auto WarnOreDistance = 0x77f8; // int32_t
		constexpr auto SearchOreRadius = 0x77fc; // int32_t
		constexpr auto SearchOreDistance = 0x7800; // int32_t
		constexpr auto SearchOreTurnSpeed = 0x7804; // int32_t
		constexpr auto SearchOreDirectionTurnSpeed = 0x7808; // int32_t
		constexpr auto SearchOreDirectionRange = 0x780c; // int32_t
		constexpr auto SearchOreColorData = 0x7810; // TArray<FOreColorData>
		constexpr auto ForgeUseRowName = 0x7820; // TMap<EDamageType, FName>
		constexpr auto bFaker = 0x7870; // char : 1
		constexpr auto ExtraStunRatio = 0x7874; // float
		constexpr auto AssociatedSkinItemClass = 0x7878; // USGItem*
		constexpr auto bIsPreview = 0x7880; // char : 1
		constexpr auto DurableSEConsumed = 0x7884; // int32_t
	}

	namespace n_UMiniMapPOI_GenericTeamGroupActor {
		constexpr auto DefenseTeamInMiniMapTexture = 0x3b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto DefenseTeamInMiniMapColor = 0x3e0; // FLinearColor
		constexpr auto DefenseTeamOutOfMiniMapTexture = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DefenseTeamOutOfMiniMapColor = 0x418; // FLinearColor
		constexpr auto NoTeamInMiniMapTexture = 0x428; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoTeamInMiniMapColor = 0x450; // FLinearColor
		constexpr auto NoTeamOutOfMiniMapTexture = 0x460; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoTeamOutOfMiniMapColor = 0x488; // FLinearColor
	}

	namespace n_UCrowdFollowingComponent {
		constexpr auto CrowdAgentMoveDirection = 0x278; // FVector
	}

	namespace n_UN_CraftPanel {
		constexpr auto CraftGridPanel = 0x260; // UUniformGridPanel*
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto ParentUI = 0x270; // USGUI*
		constexpr auto BindInventoryComponent = 0x278; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindSeatCharacterInventory = 0x280; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto bRemote = 0x288; // char : 1
		constexpr auto ShowRow = 0x28c; // int32_t
		constexpr auto CraftValidIndex = 0x290; // int32_t
		constexpr auto InventorySlotClass = 0x298; // UN_InventorySlot*
		constexpr auto CraftPanelSlotList = 0x2a0; // TArray<UN_InventorySlot*>
		constexpr auto bSortByLearnOrder = 0x2b0; // char : 1
		constexpr auto CraftSearchString = 0x2b8; // FString
		constexpr auto CountsPerRow = 0x2c8; // int32_t
		constexpr auto DefaultShowCraftNum = 0x2cc; // int32_t
		constexpr auto ConsumeTypeSlot = 0x2d0; // UInventoryItemTypeFilterSlot*
		constexpr auto EquipTypeSlot = 0x2d8; // UInventoryItemTypeFilterSlot*
		constexpr auto WeaponTypeSlot = 0x2e0; // UInventoryItemTypeFilterSlot*
		constexpr auto AmmoTypeSlot = 0x2e8; // UInventoryItemTypeFilterSlot*
		constexpr auto StructureTypeSlot = 0x2f0; // UInventoryItemTypeFilterSlot*
		constexpr auto ResourceTypeSlot = 0x2f8; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchTypeSlot = 0x300; // UInventoryItemTypeFilterSlot*
		constexpr auto SearchEditBox = 0x308; // UEditableTextBox*
		constexpr auto CraftQueueCanvas = 0x310; // UCanvasPanel*
		constexpr auto CraftQueuePanel = 0x318; // UN_CraftQueuePanel*
		constexpr auto CurrentActiveFilterSlot = 0x320; // UInventoryItemTypeFilterSlot*
		constexpr auto DragStartX = 0x328; // float
		constexpr auto DragStartY = 0x32c; // float
		constexpr auto OriginPosition = 0x330; // FVector2D
		constexpr auto CraftQueueCanvasSlot = 0x338; // UCanvasPanelSlot*
		constexpr auto bIsDrag = 0x340; // char : 1
		constexpr auto SkillExpRatio = 0x348; // UTextBlock*
		constexpr auto StructureWorker = 0x350; // TWeakObjectPtr<ASGCharacter>
		constexpr auto bIsFunctionTable = 0x358; // char : 1
		constexpr auto ItemCraftSkillType = 0x359; // ESkillType
		constexpr auto ItemCraftSkillAddActionType = 0x35a; // ESkillAddExpAction
		constexpr auto TargetItemLevel = 0x35c; // int32_t
		constexpr auto bIsCraftWorkTable = 0x360; // char : 1
	}

	namespace n_UAbilityTask_WaitGameplayTag {
		constexpr auto OptionalExternalTarget = 0x90; // UAbilitySystemComponent*
	}

	namespace n_UStaticPOITips {
		constexpr auto TbName = 0x288; // UTextBlock*
		constexpr auto ImgIcon = 0x290; // UImage*
	}

	namespace n_UMultiLineEditableTextBox {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FEditableTextBoxStyle
		constexpr auto TextStyle = 0x960; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0xbd0; // bool
		constexpr auto AllowContextMenu = 0xbd1; // bool
		constexpr auto VirtualKeyboardOptions = 0xbd2; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0xbd3; // EVirtualKeyboardDismissAction
		constexpr auto Style = 0xbd8; // USlateWidgetStyleAsset*
		constexpr auto Font = 0xbe0; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xc38; // FLinearColor
		constexpr auto BackgroundColor = 0xc48; // FLinearColor
		constexpr auto ReadOnlyForegroundColor = 0xc58; // FLinearColor
		constexpr auto OnTextChanged = 0xc68; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0xc78; // FMulticastInlineDelegate
	}

	namespace n_UAttack_AnimNotify {
		constexpr auto AttackTag = 0x38; // FString
		constexpr auto ClearAimState = 0x48; // char : 1
		constexpr auto ClearAnimInstanceAimState = 0x48; // char : 1
	}

	namespace n_UMaterialExpressionHairAttributes {
		constexpr auto bUseTangentSpace = 0x40; // char : 1
	}

	namespace n_UMovieSceneParticleTrack {
		constexpr auto ParticleSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UVehiclePerkRandomPool {
		constexpr auto RandomPoolName = 0x28; // FName
		constexpr auto PerkRandomData = 0x30; // UVehiclePerkRandomData*
		constexpr auto RandomChance = 0x38; // float
		constexpr auto PerkSlotType = 0x3c; // EVehiclePerkSlotType
		constexpr auto PerkModifyType = 0x3d; // EVehiclePerkModifyType
	}

	namespace n_UAbilityTask_WaitConfirm {
		constexpr auto OnConfirm = 0x80; // FMulticastInlineDelegate
	}

	namespace n_USkillInfoSlot {
		constexpr auto ImageIcon = 0x260; // UImage*
		constexpr auto ImageBorder = 0x268; // UImage*
		constexpr auto TextBlockText = 0x270; // UTextBlock*
	}

	namespace n_UStatisticsInfoSlot {
		constexpr auto StatisticsName = 0x260; // FText
		constexpr auto StatisticsDesc = 0x278; // FText
		constexpr auto StatisticsUnit = 0x290; // FText
		constexpr auto ToolTipWidgetTemplateOverride = 0x2a8; // USGToolTipWidget*
		constexpr auto IsHover = 0x2b0; // char : 1
		constexpr auto RootSGUI = 0x2b8; // USGUI*
	}

	namespace n_UUIWSInteractorComponent {
		constexpr auto bShouldInteract = 0xc0; // bool
		constexpr auto bEnableInteractiveStateSwitching = 0xc1; // bool
		constexpr auto MinInteractionVelocity = 0xc4; // float
	}

	namespace n_UReplicationGraphNode_GridCell {
		constexpr auto DynamicNode = 0x110; // UReplicationGraphNode*
		constexpr auto DormancyNode = 0x118; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UCanvasRenderTarget2D {
		constexpr auto OnCanvasRenderTargetUpdate = 0x108; // FMulticastInlineDelegate
		constexpr auto World = 0x118; // TWeakObjectPtr<UWorld>
		constexpr auto bShouldClearRenderTargetOnReceiveUpdate = 0x120; // bool
	}

	namespace n_UDLSSOverrideSettings {
		constexpr auto EnableDLSSInEditorViewportsOverride = 0x28; // EDLSSSettingOverride
		constexpr auto EnableScreenpercentageManipulationInDLSSEditorViewportsOverride = 0x29; // EDLSSSettingOverride
		constexpr auto EnableDLSSInPlayInEditorViewportsOverride = 0x2a; // EDLSSSettingOverride
		constexpr auto bShowDLSSIncompatiblePluginsToolsWarnings = 0x2b; // bool
		constexpr auto ShowDLSSSDebugOnScreenMessages = 0x2c; // EDLSSSettingOverride
	}

	namespace n_UAllianceListSlot {
		constexpr auto AllianceNameText = 0x2d8; // UTextBlock*
		constexpr auto PlayerCountText = 0x2e0; // UTextBlock*
		constexpr auto AllianceOwnerText = 0x2e8; // UTextBlock*
		constexpr auto MemberCountText = 0x2f0; // UTextBlock*
		constexpr auto BGImage = 0x2f8; // UImage*
		constexpr auto JoinDataButton = 0x300; // UDataButton*
		constexpr auto NormalBGTexture = 0x308; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x330; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UPhononProbeComponent {
		constexpr auto ProbeLocations = 0x208; // TArray<FVector>
	}

	namespace n_UGuildStoreHorsePanel {
		constexpr auto BindGuildStore = 0x2d8; // TWeakObjectPtr<ASGStructureGuildStore>
		constexpr auto GuildStoreHorseItemTemplate = 0x2e0; // UGuildStoreHorseItem*
		constexpr auto ScrollLevelList = 0x2f0; // UScrollBox*
		constexpr auto ScrollDBList = 0x2f8; // UScrollBox*
		constexpr auto SelectedToPlayerButton = 0x300; // UButton*
		constexpr auto AllToPlayerButton = 0x308; // UButton*
		constexpr auto SelectedToStoreButton = 0x310; // UButton*
		constexpr auto AllToStoreButton = 0x318; // UButton*
		constexpr auto ConfirmGetHorseUIOverride = 0x320; // UUI_GenericConfirmationDialog*
	}

	namespace n_AServerStatReplicator {
		constexpr auto bUpdateStatNet = 0x310; // bool
		constexpr auto bOverwriteClientStats = 0x311; // bool
		constexpr auto Channels = 0x314; // uint32_t
		constexpr auto InRate = 0x318; // uint32_t
		constexpr auto OutRate = 0x31c; // uint32_t
		constexpr auto MaxPacketOverhead = 0x324; // uint32_t
		constexpr auto InRateClientMax = 0x328; // uint32_t
		constexpr auto InRateClientMin = 0x32c; // uint32_t
		constexpr auto InRateClientAvg = 0x330; // uint32_t
		constexpr auto InPacketsClientMax = 0x334; // uint32_t
		constexpr auto InPacketsClientMin = 0x338; // uint32_t
		constexpr auto InPacketsClientAvg = 0x33c; // uint32_t
		constexpr auto OutRateClientMax = 0x340; // uint32_t
		constexpr auto OutRateClientMin = 0x344; // uint32_t
		constexpr auto OutRateClientAvg = 0x348; // uint32_t
		constexpr auto OutPacketsClientMax = 0x34c; // uint32_t
		constexpr auto OutPacketsClientMin = 0x350; // uint32_t
		constexpr auto OutPacketsClientAvg = 0x354; // uint32_t
		constexpr auto NetNumClients = 0x358; // uint32_t
		constexpr auto InPackets = 0x35c; // uint32_t
		constexpr auto OutPackets = 0x360; // uint32_t
		constexpr auto InBunches = 0x364; // uint32_t
		constexpr auto OutBunches = 0x368; // uint32_t
		constexpr auto OutLoss = 0x36c; // uint32_t
		constexpr auto InLoss = 0x370; // uint32_t
		constexpr auto VoiceBytesSent = 0x374; // uint32_t
		constexpr auto VoiceBytesRecv = 0x378; // uint32_t
		constexpr auto VoicePacketsSent = 0x37c; // uint32_t
		constexpr auto VoicePacketsRecv = 0x380; // uint32_t
		constexpr auto PercentInVoice = 0x384; // uint32_t
		constexpr auto PercentOutVoice = 0x388; // uint32_t
		constexpr auto NumActorChannels = 0x38c; // uint32_t
		constexpr auto NumConsideredActors = 0x390; // uint32_t
		constexpr auto PrioritizedActors = 0x394; // uint32_t
		constexpr auto NumRelevantActors = 0x398; // uint32_t
		constexpr auto NumRelevantDeletedActors = 0x39c; // uint32_t
		constexpr auto NumReplicatedActorAttempts = 0x3a0; // uint32_t
		constexpr auto NumReplicatedActors = 0x3a4; // uint32_t
		constexpr auto NumActors = 0x3a8; // uint32_t
		constexpr auto NumNetActors = 0x3ac; // uint32_t
		constexpr auto NumDormantActors = 0x3b0; // uint32_t
		constexpr auto NumInitiallyDormantActors = 0x3b4; // uint32_t
		constexpr auto NumNetGUIDsAckd = 0x3b8; // uint32_t
		constexpr auto NumNetGUIDsPending = 0x3bc; // uint32_t
		constexpr auto NumNetGUIDsUnAckd = 0x3c0; // uint32_t
		constexpr auto ObjPathBytes = 0x3c4; // uint32_t
		constexpr auto NetGUIDOutRate = 0x3c8; // uint32_t
		constexpr auto NetGUIDInRate = 0x3cc; // uint32_t
		constexpr auto NetSaturated = 0x3d0; // uint32_t
	}

	namespace n_UAnimNotify_Harvest {
		constexpr auto AttackTag = 0x38; // FString
	}

	namespace n_UParticleModuleSizeScaleBySpeed {
		constexpr auto SpeedScale = 0x30; // FVector2D
		constexpr auto MaxScale = 0x38; // FVector2D
	}

	namespace n_UNiagaraDataInterfaceArrayColor {
		constexpr auto ColorData = 0x50; // TArray<FLinearColor>
	}

	namespace n_UScrollBoxWidgetStyle {
		constexpr auto ScrollBoxStyle = 0x30; // FScrollBoxStyle
	}

	namespace n_AMiniMapMarkActor {
		constexpr auto Distance = 0x358; // float
	}

	namespace n_UUI_News {
		constexpr auto ItemTemplate = 0x2d8; // UNewsItem*
		constexpr auto NewsItems = 0x2e0; // TArray<UNewsItem*>
		constexpr auto RemoveNewsMaps = 0x2f0; // TMap<FGuid, char>
		constexpr auto UGPNewsItem = 0x340; // UUniformGridPanel*
		constexpr auto ScrollNews = 0x348; // UScrollBox*
		constexpr auto BtnClearNews = 0x350; // UButton*
	}

	namespace n_ULandscapeSettings {
		constexpr auto MaxNumberOfLayers = 0x38; // int32_t
	}

	namespace n_UMaterialExpressionQualitySwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x4]
	}

	namespace n_UTexture2DDynamic {
		constexpr auto Format = 0xe0; // EPixelFormat
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMagicLeapPlanesComponent {
		constexpr auto QueryFlags = 0x208; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto SearchVolume = 0x218; // UBoxComponent*
		constexpr auto MaxResults = 0x220; // int32_t
		constexpr auto MinHolePerimeter = 0x224; // float
		constexpr auto MinPlaneArea = 0x228; // float
		constexpr auto QueryType = 0x22c; // EMagicLeapPlaneQueryType
		constexpr auto SimilarityThreshold = 0x230; // float
		constexpr auto OnPlanesQueryResult = 0x238; // FMulticastInlineDelegate
		constexpr auto OnPersistentPlanesQueryResult = 0x248; // FMulticastInlineDelegate
	}

	namespace n_UMonoWaveTableSynthPreset {
		constexpr auto PresetName = 0x28; // FString
		constexpr auto bLockKeyframesToGridBool = 0x38; // char : 1
		constexpr auto LockKeyframesToGrid = 0x3c; // int32_t
		constexpr auto WaveTableResolution = 0x40; // int32_t
		constexpr auto WaveTable = 0x48; // TArray<FRuntimeFloatCurve>
		constexpr auto bNormalizeWaveTables = 0x58; // char : 1
	}

	namespace n_UMagicLeapARPinContentBindings {
		constexpr auto AllContentBindings = 0x28; // TMap<FGuid, FMagicLeapARPinObjectIdList>
	}

	namespace n_UNiagaraDataInterfaceParticleRead {
		constexpr auto EmitterName = 0xd8; // FString
	}

	namespace n_UAsyncTaskDownloadImage {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UFileMediaSource {
		constexpr auto FilePath = 0x88; // FString
		constexpr auto PrecacheFile = 0x98; // bool
	}

	namespace n_UUI_N_ShopItemHot {
		constexpr auto ActiveBorder = 0x260; // UBorder*
		constexpr auto ItemImg = 0x268; // UImage*
		constexpr auto TagBorder = 0x270; // UBorder*
		constexpr auto TagText = 0x278; // UTextBlock*
		constexpr auto ItemNameText = 0x280; // UTextBlock*
		constexpr auto ItemIntroText = 0x288; // UTextBlock*
		constexpr auto BottomSwitcher = 0x290; // UWidgetSwitcher*
		constexpr auto NowPriceText = 0x298; // UTextBlock*
		constexpr auto OldPriceText = 0x2a0; // UTextBlock*
		constexpr auto NoPriceText = 0x2a8; // UTextBlock*
		constexpr auto CapitalImage = 0x2b0; // UImage*
		constexpr auto BorderColor = 0x2b8; // FLinearColor
		constexpr auto DiscountColor = 0x2c8; // FLinearColor
		constexpr auto CommonColor = 0x2d8; // FLinearColor
		constexpr auto iconGold = 0x2e8; // UTexture2D*
		constexpr auto iconSilver = 0x2f0; // UTexture2D*
		constexpr auto iconCopper = 0x2f8; // UTexture2D*
	}

	namespace n_ALODActor {
		constexpr auto StaticMeshComponent = 0x310; // UStaticMeshComponent*
		constexpr auto ImpostersStaticMeshComponents = 0x318; // TMap<UMaterialInterface*, UInstancedStaticMeshComponent*>
		constexpr auto Proxy = 0x368; // UHLODProxy*
		constexpr auto Key = 0x370; // FName
		constexpr auto LODDrawDistance = 0x378; // float
		constexpr auto LODLevel = 0x37c; // int32_t
		constexpr auto SubActors = 0x380; // TArray<AActor*>
		constexpr auto CachedNumHLODLevels = 0x390; // char
	}

	namespace n_UMaterialExpressionFunctionInput {
		constexpr auto Preview = 0x40; // FExpressionInput
		constexpr auto InputName = 0x54; // FName
		constexpr auto Description = 0x60; // FString
		constexpr auto ID = 0x70; // FGuid
		constexpr auto InputType = 0x80; // EFunctionInputType
		constexpr auto PreviewValue = 0x90; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0xa0; // char : 1
		constexpr auto SortPriority = 0xa4; // int32_t
		constexpr auto bCompilingFunctionPreview = 0xa8; // char : 1
	}

	namespace n_UStereoLayerShapeEquirect {
		constexpr auto LeftUVRect = 0x28; // FBox2D
		constexpr auto RightUVRect = 0x3c; // FBox2D
		constexpr auto LeftScale = 0x50; // FVector2D
		constexpr auto RightScale = 0x58; // FVector2D
		constexpr auto LeftBias = 0x60; // FVector2D
		constexpr auto RightBias = 0x68; // FVector2D
	}

	namespace n_AWaterMeshActor {
		constexpr auto WaterVelocityTexture = 0x310; // UTexture2D*
		constexpr auto WaterMesh = 0x318; // UWaterMeshComponent*
	}

	namespace n_USGSeason {
		constexpr auto LongTickInterval = 0x38; // int32_t
		constexpr auto ShortTickInterval = 0x3c; // int32_t
		constexpr auto bEnableSeason = 0x58; // char : 1
		constexpr auto bDebugSeason = 0x58; // char : 1
	}

	namespace n_ULevelSequenceDirector {
		constexpr auto Player = 0x28; // ULevelSequencePlayer*
	}

	namespace n_AGeometryCollectionDebugDrawActor {
		constexpr auto WarningMessage = 0x310; // FGeometryCollectionDebugDrawWarningMessage
		constexpr auto SelectedRigidBody = 0x318; // FGeometryCollectionDebugDrawActorSelectedRigidBody
		constexpr auto bDebugDrawWholeCollection = 0x330; // bool
		constexpr auto bDebugDrawHierarchy = 0x331; // bool
		constexpr auto bDebugDrawClustering = 0x332; // bool
		constexpr auto HideGeometry = 0x333; // EGeometryCollectionDebugDrawActorHideGeometry
		constexpr auto bShowRigidBodyId = 0x334; // bool
		constexpr auto bShowRigidBodyCollision = 0x335; // bool
		constexpr auto bCollisionAtOrigin = 0x336; // bool
		constexpr auto bShowRigidBodyTransform = 0x337; // bool
		constexpr auto bShowRigidBodyInertia = 0x338; // bool
		constexpr auto bShowRigidBodyVelocity = 0x339; // bool
		constexpr auto bShowRigidBodyForce = 0x33a; // bool
		constexpr auto bShowRigidBodyInfos = 0x33b; // bool
		constexpr auto bShowTransformIndex = 0x33c; // bool
		constexpr auto bShowTransform = 0x33d; // bool
		constexpr auto bShowParent = 0x33e; // bool
		constexpr auto bShowLevel = 0x33f; // bool
		constexpr auto bShowConnectivityEdges = 0x340; // bool
		constexpr auto bShowGeometryIndex = 0x341; // bool
		constexpr auto bShowGeometryTransform = 0x342; // bool
		constexpr auto bShowBoundingBox = 0x343; // bool
		constexpr auto bShowFaces = 0x344; // bool
		constexpr auto bShowFaceIndices = 0x345; // bool
		constexpr auto bShowFaceNormals = 0x346; // bool
		constexpr auto bShowSingleFace = 0x347; // bool
		constexpr auto SingleFaceIndex = 0x348; // int32_t
		constexpr auto bShowVertices = 0x34c; // bool
		constexpr auto bShowVertexIndices = 0x34d; // bool
		constexpr auto bShowVertexNormals = 0x34e; // bool
		constexpr auto bUseActiveVisualization = 0x34f; // bool
		constexpr auto PointThickness = 0x350; // float
		constexpr auto LineThickness = 0x354; // float
		constexpr auto bTextShadow = 0x358; // bool
		constexpr auto TextScale = 0x35c; // float
		constexpr auto NormalScale = 0x360; // float
		constexpr auto AxisScale = 0x364; // float
		constexpr auto ArrowScale = 0x368; // float
		constexpr auto RigidBodyIdColor = 0x36c; // FColor
		constexpr auto RigidBodyTransformScale = 0x370; // float
		constexpr auto RigidBodyCollisionColor = 0x374; // FColor
		constexpr auto RigidBodyInertiaColor = 0x378; // FColor
		constexpr auto RigidBodyVelocityColor = 0x37c; // FColor
		constexpr auto RigidBodyForceColor = 0x380; // FColor
		constexpr auto RigidBodyInfoColor = 0x384; // FColor
		constexpr auto TransformIndexColor = 0x388; // FColor
		constexpr auto TransformScale = 0x38c; // float
		constexpr auto LevelColor = 0x390; // FColor
		constexpr auto ParentColor = 0x394; // FColor
		constexpr auto ConnectivityEdgeThickness = 0x398; // float
		constexpr auto GeometryIndexColor = 0x39c; // FColor
		constexpr auto GeometryTransformScale = 0x3a0; // float
		constexpr auto BoundingBoxColor = 0x3a4; // FColor
		constexpr auto FaceColor = 0x3a8; // FColor
		constexpr auto FaceIndexColor = 0x3ac; // FColor
		constexpr auto FaceNormalColor = 0x3b0; // FColor
		constexpr auto SingleFaceColor = 0x3b4; // FColor
		constexpr auto VertexColor = 0x3b8; // FColor
		constexpr auto VertexIndexColor = 0x3bc; // FColor
		constexpr auto VertexNormalColor = 0x3c0; // FColor
		constexpr auto SpriteComponent = 0x3c8; // UBillboardComponent*
	}

	namespace n_UGroomBindingAsset {
		constexpr auto Groom = 0x28; // UGroomAsset*
		constexpr auto SourceSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x38; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x40; // int32_t
		constexpr auto MatchingSection = 0x44; // int32_t
		constexpr auto GroupInfos = 0x48; // TArray<FGoomBindingGroupInfo>
	}

	namespace n_UDatasmithStaticMeshTemplate {
		constexpr auto SectionInfoMap = 0x30; // FDatasmithMeshSectionInfoMapTemplate
		constexpr auto LightMapCoordinateIndex = 0x80; // int32_t
		constexpr auto LightMapResolution = 0x84; // int32_t
		constexpr auto BuildSettings = 0x88; // TArray<FDatasmithMeshBuildSettingsTemplate>
		constexpr auto StaticMaterials = 0x98; // TArray<FDatasmithStaticMaterialTemplate>
	}

	namespace n_UGuildPanel {
		constexpr auto GuildDetailsSlot = 0x2d8; // UGuildDetailsSlot*
		constexpr auto GuildMemberListPanel = 0x2e0; // UGuildMemberListPanel*
		constexpr auto GuildStructureListPanel = 0x2e8; // UGuildStructureListPanel*
	}

	namespace n_UParticleModuleColor {
		constexpr auto StartColor = 0x30; // FRawDistributionVector
		constexpr auto StartAlpha = 0x78; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xa8; // char : 1
	}

	namespace n_AOnlineBeaconHostObject {
		constexpr auto BeaconTypeName = 0x310; // FString
		constexpr auto ClientBeaconActorClass = 0x320; // AOnlineBeaconClient*
		constexpr auto ClientActors = 0x328; // TArray<AOnlineBeaconClient*>
	}

	namespace n_USGCraftPerkGroup {
		constexpr auto CPGName = 0x28; // FText
		constexpr auto CPGDescription = 0x40; // FText
		constexpr auto CPGTexture = 0x58; // TSoftObjectPtr<UTexture2D>
		constexpr auto CPGCircleBg = 0x80; // TSoftObjectPtr<UTexture2D>
		constexpr auto CPGTypeIndex = 0xa8; // int32_t
		constexpr auto CPGTimes = 0xac; // ECraftPerkTimes
		constexpr auto RequiredCharacterLevel = 0xb0; // int32_t
		constexpr auto RequiredCraftPoints = 0xb4; // int32_t
		constexpr auto CraftRequirement = 0xb8; // FCraftEntries
		constexpr auto RequireCopper = 0xd8; // int32_t
		constexpr auto RequireItems = 0xe0; // TArray<FPerkItemRequirement>
		constexpr auto bHasLearned = 0xf0; // char : 1
		constexpr auto bCanLearned = 0xf0; // char : 1
		constexpr auto bHideInCraftPerkUI = 0xf0; // char : 1
		constexpr auto bHideInCraftPerkUIMainLand = 0xf0; // char : 1
		constexpr auto RequireGuildLevel = 0xf4; // int32_t
		constexpr auto GuildExperience = 0xf8; // int32_t
		constexpr auto GuildCapital = 0xfc; // int32_t
		constexpr auto NeedCheckDLC = 0x100; // bool
		constexpr auto DLCList = 0x108; // TArray<int32_t>
		constexpr auto Rows = 0x118; // int32_t
		constexpr auto Column = 0x11c; // int32_t
		constexpr auto CraftPerks = 0x120; // TArray<USGCraftPerk*>
	}

	namespace n_UFoliageType {
		constexpr auto UpdateGuid = 0x28; // FGuid
		constexpr auto Density = 0x38; // float
		constexpr auto DensityAdjustmentFactor = 0x3c; // float
		constexpr auto Radius = 0x40; // float
		constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // bool
		constexpr auto SingleInstanceModeRadius = 0x48; // float
		constexpr auto Scaling = 0x4c; // EFoliageScaling
		constexpr auto ScaleX = 0x50; // FFloatInterval
		constexpr auto ScaleY = 0x58; // FFloatInterval
		constexpr auto ScaleZ = 0x60; // FFloatInterval
		constexpr auto VertexColorMaskByChannel = 0x68; // FFoliageVertexColorChannelMask [0x4]
		constexpr auto VertexColorMask = 0x98; // FoliageVertexColorMask
		constexpr auto VertexColorMaskThreshold = 0x9c; // float
		constexpr auto VertexColorMaskInvert = 0xa0; // char : 1
		constexpr auto ZOffset = 0xa4; // FFloatInterval
		constexpr auto AlignToNormal = 0xac; // char : 1
		constexpr auto AlignMaxAngle = 0xb0; // float
		constexpr auto RandomYaw = 0xb4; // char : 1
		constexpr auto RandomPitchAngle = 0xb8; // float
		constexpr auto GroundSlopeAngle = 0xbc; // FFloatInterval
		constexpr auto Height = 0xc4; // FFloatInterval
		constexpr auto LandscapeLayers = 0xd0; // TArray<FName>
		constexpr auto MinimumLayerWeight = 0xe0; // float
		constexpr auto ExclusionLandscapeLayers = 0xe8; // TArray<FName>
		constexpr auto MinimumExclusionLayerWeight = 0xf8; // float
		constexpr auto LandscapeLayer = 0xfc; // FName
		constexpr auto CollisionWithWorld = 0x104; // char : 1
		constexpr auto CollisionScale = 0x108; // FVector
		constexpr auto MeshBounds = 0x114; // FBoxSphereBounds
		constexpr auto LowBoundOriginRadius = 0x130; // FVector
		constexpr auto Mobility = 0x13c; // EComponentMobility
		constexpr auto CullDistance = 0x140; // FInt32Interval
		constexpr auto bEnableStaticLighting = 0x148; // char : 1
		constexpr auto CastShadow = 0x148; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x148; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x148; // char : 1
		constexpr auto bCastDynamicShadow = 0x148; // char : 1
		constexpr auto bCastStaticShadow = 0x148; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x148; // char : 1
		constexpr auto bReceivesDecals = 0x148; // char : 1
		constexpr auto bOverrideLightMapRes = 0x149; // char : 1
		constexpr auto OverriddenLightMapRes = 0x14c; // int32_t
		constexpr auto LightmapType = 0x150; // ELightmapType
		constexpr auto bUseAsOccluder = 0x154; // char : 1
		constexpr auto bVisibleInRayTracing = 0x158; // char : 1
		constexpr auto bEvaluateWorldPositionOffset = 0x158; // char : 1
		constexpr auto BodyInstance = 0x160; // FBodyInstance
		constexpr auto CustomNavigableGeometry = 0x2c0; // EHasCustomNavigableGeometry
		constexpr auto LightingChannels = 0x2c1; // FLightingChannels
		constexpr auto bRenderCustomDepth = 0x2c4; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x2c8; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x2cc; // int32_t
		constexpr auto TranslucencySortPriority = 0x2d0; // int32_t
		constexpr auto CollisionRadius = 0x2d4; // float
		constexpr auto ShadeRadius = 0x2d8; // float
		constexpr auto NumSteps = 0x2dc; // int32_t
		constexpr auto InitialSeedDensity = 0x2e0; // float
		constexpr auto AverageSpreadDistance = 0x2e4; // float
		constexpr auto SpreadVariance = 0x2e8; // float
		constexpr auto SeedsPerStep = 0x2ec; // int32_t
		constexpr auto DistributionSeed = 0x2f0; // int32_t
		constexpr auto MaxInitialSeedOffset = 0x2f4; // float
		constexpr auto ProceduralCloseToFoliages = 0x2f8; // TArray<FRelatedFoliageTypeEntry>
		constexpr auto ProceduralFarFromFoliages = 0x308; // TArray<FRelatedFoliageTypeEntry>
		constexpr auto bCanGrowInShade = 0x318; // bool
		constexpr auto bSpawnsInShade = 0x319; // bool
		constexpr auto MaxInitialAge = 0x31c; // float
		constexpr auto MaxAge = 0x320; // float
		constexpr auto OverlapPriority = 0x324; // float
		constexpr auto ProceduralScale = 0x328; // FFloatInterval
		constexpr auto ScaleCurve = 0x330; // FRuntimeFloatCurve
		constexpr auto ChangeCount = 0x3b8; // int32_t
		constexpr auto ReapplyDensity = 0x3bc; // char : 1
		constexpr auto ReapplyRadius = 0x3bc; // char : 1
		constexpr auto ReapplyAlignToNormal = 0x3bc; // char : 1
		constexpr auto ReapplyRandomYaw = 0x3bc; // char : 1
		constexpr auto ReapplyScaling = 0x3bc; // char : 1
		constexpr auto ReapplyScaleX = 0x3bc; // char : 1
		constexpr auto ReapplyScaleY = 0x3bc; // char : 1
		constexpr auto ReapplyScaleZ = 0x3bc; // char : 1
		constexpr auto ReapplyRandomPitchAngle = 0x3bd; // char : 1
		constexpr auto ReapplyGroundSlope = 0x3bd; // char : 1
		constexpr auto ReapplyHeight = 0x3bd; // char : 1
		constexpr auto ReapplyLandscapeLayers = 0x3bd; // char : 1
		constexpr auto ReapplyZOffset = 0x3bd; // char : 1
		constexpr auto ReapplyCollisionWithWorld = 0x3bd; // char : 1
		constexpr auto ReapplyVertexColorMask = 0x3bd; // char : 1
		constexpr auto bEnableDensityScaling = 0x3bd; // char : 1
		constexpr auto bEnableDiscardOnLoad = 0x3be; // char : 1
		constexpr auto RuntimeVirtualTextures = 0x3c0; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureCullMips = 0x3d0; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3d4; // ERuntimeVirtualTextureMainPassType
	}

	namespace n_URewardCondition_Uint8 {
		constexpr auto ConditionType = 0x50; // EValueConditionType
		constexpr auto Value = 0x51; // char
		constexpr auto bSingleCondition = 0x52; // bool
	}

	namespace n_UCombineMeshesToolProperties {
		constexpr auto bIsDuplicateMode = 0x60; // bool
		constexpr auto WriteOutputTo = 0x64; // ECombineTargetType
		constexpr auto OutputName = 0x68; // FString
		constexpr auto OutputAsset = 0x78; // FString
	}

	namespace n_UBTTask_MoveTo {
		constexpr auto AcceptableRadius = 0x98; // float
		constexpr auto FilterClass = 0xa0; // UNavigationQueryFilter*
		constexpr auto ObservedBlackboardValueTolerance = 0xa8; // float
		constexpr auto bObserveBlackboardValue = 0xac; // char : 1
		constexpr auto bAllowStrafe = 0xac; // char : 1
		constexpr auto bAllowPartialPath = 0xac; // char : 1
		constexpr auto bTrackMovingGoal = 0xac; // char : 1
		constexpr auto bProjectGoalLocation = 0xac; // char : 1
		constexpr auto bIsStopOnAbort = 0xb0; // char : 1
		constexpr auto bIsStopOnFinish = 0xb0; // char : 1
		constexpr auto bReachTestIncludesAgentRadius = 0xb4; // char : 1
		constexpr auto bReachTestIncludesGoalRadius = 0xb4; // char : 1
		constexpr auto bStopOnOverlap = 0xb4; // char : 1
		constexpr auto bStopOnOverlapNeedsUpdate = 0xb4; // char : 1
	}

	namespace n_UARTrackedObject {
		constexpr auto DetectedObject = 0xf8; // UARCandidateObject*
	}

	namespace n_UFoliageType_Actor {
		constexpr auto ActorClass = 0x3d8; // AActor*
		constexpr auto bShouldAttachToBaseComponent = 0x3e0; // bool
	}

	namespace n_UGameplayTask_SpawnActor {
		constexpr auto Success = 0x68; // FMulticastInlineDelegate
		constexpr auto DidNotSpawn = 0x78; // FMulticastInlineDelegate
		constexpr auto ClassToSpawn = 0xa0; // AActor*
	}

	namespace n_UWBP_PrivateSessionPassword_C {
		constexpr auto Image = 0x298; // UImage*
		constexpr auto Image_131 = 0x2a0; // UImage*
		constexpr auto Image_250 = 0x2a8; // UImage*
		constexpr auto ImgBg = 0x2b0; // UImage*
		constexpr auto ImgBorder = 0x2b8; // UImage*
		constexpr auto ImgNameInputBg = 0x2c0; // UImage*
	}

	namespace n_UClientSaltInfo {
		constexpr auto CropLand = 0x28; // ASGStructureSaltLand*
		constexpr auto LastVisualUpdateTime = 0x30; // float
		constexpr auto CurrentVisualScale = 0x34; // float
		constexpr auto NexVisualScale = 0x38; // float
		constexpr auto InnerScaleTolerance = 0x3c; // float
		constexpr auto MeshComponent = 0x40; // UStaticMeshComponent*
	}

	namespace n_URichTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextStyleSet = 0x140; // UDataTable*
		constexpr auto DecoratorClasses = 0x148; // TArray<URichTextBlockDecorator*>
		constexpr auto bOverrideDefaultStyle = 0x158; // bool
		constexpr auto DefaultTextStyleOverride = 0x160; // FTextBlockStyle
		constexpr auto MinDesiredWidth = 0x3d0; // float
		constexpr auto TextTransformPolicy = 0x3d4; // ETextTransformPolicy
		constexpr auto DefaultTextStyle = 0x3d8; // FTextBlockStyle
		constexpr auto InstanceDecorators = 0x648; // TArray<URichTextBlockDecorator*>
	}

	namespace n_UMovieScenePropertySystem {
		constexpr auto InstantiatorSystem = 0x40; // UMovieScenePropertyInstantiatorSystem*
	}

	namespace n_UStructureInfoHUD {
		constexpr auto RepairCanvas = 0x278; // UCanvasPanel*
		constexpr auto RepairText = 0x280; // UTextBlock*
		constexpr auto NameText = 0x288; // UTextBlock*
		constexpr auto InfoVerticalBox = 0x290; // UVerticalBox*
		constexpr auto RepairVerticalBox = 0x298; // UVerticalBox*
		constexpr auto HPText = 0x2a0; // UStructureInfoHUDSlot*
		constexpr auto GuildText = 0x2a8; // UStructureInfoHUDSlot*
		constexpr auto OwnerText = 0x2b0; // UStructureInfoHUDSlot*
		constexpr auto SkillText = 0x2b8; // UStructureInfoHUDSlot*
		constexpr auto DecomposesText = 0x2c0; // UStructureInfoHUDSlot*
		constexpr auto DecayText = 0x2c8; // UStructureInfoHUDSlot*
		constexpr auto TenacityText = 0x2d0; // UStructureInfoHUDSlot*
		constexpr auto UserText = 0x2d8; // UStructureInfoHUDSlot*
		constexpr auto OreText = 0x2e0; // UStructureInfoHUDSlot*
		constexpr auto AuthorityText = 0x2e8; // UStructureInfoHUDSlot*
		constexpr auto AIAttackTargetName = 0x2f0; // UStructureInfoHUDSlot*
		constexpr auto StatusText = 0x2f8; // UStructureInfoHUDSlot*
		constexpr auto RepairTextList = 0x300; // TArray<UStructureInfoHUDSlot*>
		constexpr auto BindStructure = 0x310; // TWeakObjectPtr<ASGStructure>
		constexpr auto FriendColor = 0x318; // FLinearColor
		constexpr auto NeutralColor = 0x328; // FLinearColor
		constexpr auto EnemyColor = 0x338; // FLinearColor
		constexpr auto StructureInfoHUDSlot = 0x348; // UStructureInfoHUDSlot*
		constexpr auto DecayColor = 0x350; // FLinearColor
	}

	namespace n_UUI_ServerAdminBlockListRow {
		constexpr auto TbAccountId = 0x260; // UTextBlock*
		constexpr auto ButtonPlayer = 0x268; // UButton*
		constexpr auto ImageSelected = 0x270; // UImage*
		constexpr auto BindAdminBlockListPanel = 0x278; // UUI_AdminBlockListPanel*
	}

	namespace n_UGameplayAbilitySet {
		constexpr auto Abilities = 0x30; // TArray<FGameplayAbilityBindInfo>
	}

	namespace n_UAnimSequence {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto TrackToSkeletonMapTable = 0xb0; // TArray<FTrackToSkeletonMap>
		constexpr auto BoneCompressionSettings = 0xd0; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd8; // UAnimCurveCompressionSettings*
		constexpr auto AdditiveAnimType = 0x150; // EAdditiveAnimationType
		constexpr auto RefPoseType = 0x151; // EAdditiveBasePoseType
		constexpr auto RefPoseSeq = 0x158; // UAnimSequence*
		constexpr auto RefFrameIndex = 0x160; // int32_t
		constexpr auto RetargetSource = 0x164; // FName
		constexpr auto Interpolation = 0x16c; // EAnimInterpolationType
		constexpr auto bEnableRootMotion = 0x16d; // bool
		constexpr auto RootMotionRootLock = 0x16e; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0x16f; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0x170; // bool
		constexpr auto bRootMotionSettingsCopiedFromMontage = 0x171; // bool
		constexpr auto AuthoredSyncMarkers = 0x178; // TArray<FAnimSyncMarker>
		constexpr auto BakedPerBoneCustomAttributeData = 0x1a0; // TArray<FBakedCustomAttributePerBoneData>
	}

	namespace n_AStaticMeshActor {
		constexpr auto StaticMeshComponent = 0x310; // UStaticMeshComponent*
		constexpr auto bStaticMeshReplicateMovement = 0x318; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x319; // ENavDataGatheringMode
	}

	namespace n_UMaterialExpressionDDY {
		constexpr auto Value = 0x40; // FExpressionInput
	}

	namespace n_UEnvQueryTest {
		constexpr auto TestOrder = 0x30; // int32_t
		constexpr auto TestPurpose = 0x34; // EEnvTestPurpose
		constexpr auto TestComment = 0x38; // FString
		constexpr auto MultipleContextFilterOp = 0x48; // EEnvTestFilterOperator
		constexpr auto MultipleContextScoreOp = 0x49; // EEnvTestScoreOperator
		constexpr auto FilterType = 0x4a; // EEnvTestFilterType
		constexpr auto BoolValue = 0x50; // FAIDataProviderBoolValue
		constexpr auto FloatValueMin = 0x88; // FAIDataProviderFloatValue
		constexpr auto FloatValueMax = 0xc0; // FAIDataProviderFloatValue
		constexpr auto ScoringEquation = 0xf9; // EEnvTestScoreEquation
		constexpr auto ClampMinType = 0xfa; // EEnvQueryTestClamping
		constexpr auto ClampMaxType = 0xfb; // EEnvQueryTestClamping
		constexpr auto NormalizationType = 0xfc; // EEQSNormalizationType
		constexpr auto ScoreClampMin = 0x100; // FAIDataProviderFloatValue
		constexpr auto ScoreClampMax = 0x138; // FAIDataProviderFloatValue
		constexpr auto ScoringFactor = 0x170; // FAIDataProviderFloatValue
		constexpr auto ReferenceValue = 0x1a8; // FAIDataProviderFloatValue
		constexpr auto bDefineReferenceValue = 0x1e0; // bool
		constexpr auto bWorkOnFloatValues = 0x1f0; // char : 1
	}

	namespace n_UBTTask_Wait {
		constexpr auto WaitTime = 0x70; // float
		constexpr auto RandomDeviation = 0x74; // float
	}

	namespace n_USoundfieldEndpointSubmix {
		constexpr auto SoundfieldEndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // USoundfieldEndpointSettingsBase*
		constexpr auto EncodingSettingsClass = 0x50; // USoundfieldEncodingSettingsBase*
		constexpr auto EncodingSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x60; // TArray<USoundfieldEffectBase*>
	}

	namespace n_UNetAnalyticsAggregatorConfig {
		constexpr auto NetAnalyticsData = 0x28; // TArray<FNetAnalyticsDataConfig>
	}

	namespace n_UAddPatchTool {
		constexpr auto ShapeSettings = 0x90; // UAddPatchToolProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
	}

	namespace n_UMaterialExpressionTextureProperty {
		constexpr auto TextureObject = 0x40; // FExpressionInput
		constexpr auto Property = 0x54; // EMaterialExposedTextureProperty
	}

	namespace n_UParticleModuleSubUV {
		constexpr auto Animation = 0x30; // USubUVAnimation*
		constexpr auto SubImageIndex = 0x38; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x68; // char : 1
	}

	namespace n_UPacketHandlerProfileConfig {
		constexpr auto Components = 0x28; // TArray<FString>
	}

	namespace n_AAtmosphericFog {
		constexpr auto AtmosphericFogComponent = 0x310; // UAtmosphericFogComponent*
	}

	namespace n_UEdGraph {
		constexpr auto Schema = 0x28; // UEdGraphSchema*
		constexpr auto Nodes = 0x30; // TArray<UEdGraphNode*>
		constexpr auto bEditable = 0x40; // char : 1
		constexpr auto bAllowDeletion = 0x40; // char : 1
		constexpr auto bAllowRenaming = 0x40; // char : 1
	}

	namespace n_APainCausingVolume {
		constexpr auto bPainCausing = 0x358; // char : 1
		constexpr auto DamagePerSec = 0x35c; // float
		constexpr auto DamageType = 0x360; // UDamageType*
		constexpr auto PainInterval = 0x368; // float
		constexpr auto bEntryPain = 0x36c; // char : 1
		constexpr auto BACKUP_bPainCausing = 0x36c; // char : 1
		constexpr auto DamageInstigator = 0x370; // AController*
	}

	namespace n_UParticleModuleMeshRotationRateOverLife {
		constexpr auto RotRate = 0x30; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x78; // char : 1
	}

	namespace n_UNiagaraDataInterfaceNeighborGrid3D {
		constexpr auto MaxNeighborsPerCell = 0x100; // uint32_t
	}

	namespace n_UAREnvironmentProbeComponent {
		constexpr auto ReplicatedPayload = 0x290; // FAREnvironmentProbeUpdatePayload
	}

	namespace n_USGAchievementReward {
		constexpr auto HonorPoint = 0x28; // int32_t
		constexpr auto DamageMultiply = 0x30; // TArray<FAchievementDamageMultiply>
		constexpr auto Titles = 0x40; // TArray<FString>
		constexpr auto Exp = 0x50; // float
		constexpr auto copper = 0x54; // int32_t
		constexpr auto GuildImageIndex = 0x58; // int32_t
		constexpr auto GuildImageTexture = 0x60; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UPreviewMesh {
		constexpr auto bBuildSpatialDataStructure = 0x40; // bool
		constexpr auto bDrawOnTop = 0x41; // bool
		constexpr auto DynamicMeshComponent = 0x50; // USimpleDynamicMeshComponent*
	}

	namespace n_UVehicleShortCutSlot {
		constexpr auto VehiclePerkQualityBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto ShortCutPerkImg = 0x350; // UImage*
		constexpr auto ShortCutPerkTimePB = 0x358; // UProgressBar*
		constexpr auto ShortCutPerkTimeText = 0x360; // UTextBlock*
		constexpr auto ShortCutPerkQualityImg = 0x368; // UImage*
		constexpr auto ShortCutPerkDruationTimeImg = 0x370; // UImage*
		constexpr auto ShortCutPerkKeyBorder = 0x378; // UBorder*
		constexpr auto ShortCutPerkTbKey = 0x380; // UTextBlock*
	}

	namespace n_UPawnAction {
		constexpr auto ChildAction = 0x28; // UPawnAction*
		constexpr auto ParentAction = 0x30; // UPawnAction*
		constexpr auto OwnerComponent = 0x38; // UPawnActionsComponent*
		constexpr auto Instigator = 0x40; // UObject*
		constexpr auto BrainComp = 0x48; // UBrainComponent*
		constexpr auto bAllowNewSameClassInstance = 0x80; // char : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // char : 1
		constexpr auto bShouldPauseMovement = 0x80; // char : 1
		constexpr auto bAlwaysNotifyOnFinished = 0x80; // char : 1
	}

	namespace n_UDistributionFloatUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector2D
	}

	namespace n_UMasterAudioSubmixCaptureProtocol {
		constexpr auto Filename = 0x58; // FString
	}

	namespace n_ASGStructureFunctionRack {
		constexpr auto bCarriedNeedItem = 0xf80; // char : 1
		constexpr auto SaveGameCarriedCharacter = 0xf88; // ABaseCharacter*
		constexpr auto CarriedCharacter = 0xf90; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto CarriedCharacterTarget = 0xf98; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto BindSocketName = 0xfa0; // FName
		constexpr auto AutoTameAdd = 0xfa8; // float
		constexpr auto BindToRackAnim = 0xfb0; // UAnimMontage*
		constexpr auto TameTimerHandle = 0xfb8; // FTimerHandle
	}

	namespace n_UABP_Bristle_02_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x2d8; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_KawaiiPhysics_9 = 0x300; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_8 = 0x560; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_7 = 0x7c0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_6 = 0xa20; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0xc80; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xe58; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root = 0xe78; // FAnimNode_Root
		constexpr auto AnimGraphNode_KawaiiPhysics_5 = 0xeb0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_4 = 0x1110; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_3 = 0x1370; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics_2 = 0x15d0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x1830; // FAnimNode_KawaiiPhysics
		constexpr auto SourceMeshComponent_1 = 0x1a90; // USkeletalMeshComponent*
	}

	namespace n_UMovementComponent {
		constexpr auto UpdatedComponent = 0xc0; // USceneComponent*
		constexpr auto UpdatedPrimitive = 0xc8; // UPrimitiveComponent*
		constexpr auto Velocity = 0xd4; // FVector
		constexpr auto PlaneConstraintNormal = 0xe0; // FVector
		constexpr auto PlaneConstraintOrigin = 0xec; // FVector
		constexpr auto bUpdateOnlyIfRendered = 0xf8; // char : 1
		constexpr auto bAutoUpdateTickRegistration = 0xf8; // char : 1
		constexpr auto bTickBeforeOwner = 0xf8; // char : 1
		constexpr auto bAutoRegisterUpdatedComponent = 0xf8; // char : 1
		constexpr auto bConstrainToPlane = 0xf8; // char : 1
		constexpr auto bSnapToPlaneAtStart = 0xf8; // char : 1
		constexpr auto bAutoRegisterPhysicsVolumeUpdates = 0xf8; // char : 1
		constexpr auto bComponentShouldUpdatePhysicsVolume = 0xf8; // char : 1
		constexpr auto PlaneConstraintAxisSetting = 0xfb; // EPlaneConstraintAxisSetting
	}

	namespace n_UAsyncActionHandleSaveGame {
		constexpr auto Completed = 0x30; // FMulticastInlineDelegate
		constexpr auto SaveGameObject = 0x60; // USaveGame*
	}

	namespace n_UTransformMeshesToolProperties {
		constexpr auto TransformMode = 0x60; // ETransformMeshesTransformMode
		constexpr auto bSetPivot = 0x61; // bool
		constexpr auto bEnableSnapDragging = 0x62; // bool
		constexpr auto SnapDragSource = 0x63; // ETransformMeshesSnapDragSource
		constexpr auto RotationMode = 0x64; // ETransformMeshesSnapDragRotationMode
	}

	namespace n_USoundNodeSoundClass {
		constexpr auto SoundClassOverride = 0x48; // USoundClass*
	}

	namespace n_UAbilityTask_WaitGameplayTagAdded {
		constexpr auto Added = 0xa8; // FMulticastInlineDelegate
	}

	namespace n_UUVLayoutPreviewProperties {
		constexpr auto bVisible = 0x60; // bool
		constexpr auto ScaleFactor = 0x64; // float
		constexpr auto WhichSide = 0x68; // EUVLayoutPreviewSide
		constexpr auto bShowWireframe = 0x6c; // bool
		constexpr auto Shift = 0x70; // FVector2D
	}

	namespace n_UMultiLineEditableText {
		constexpr auto Text = 0x128; // FText
		constexpr auto HintText = 0x140; // FText
		constexpr auto HintTextDelegate = 0x158; // FDelegate
		constexpr auto WidgetStyle = 0x168; // FTextBlockStyle
		constexpr auto bIsReadOnly = 0x3d8; // bool
		constexpr auto Font = 0x3e0; // FSlateFontInfo
		constexpr auto SelectAllTextWhenFocused = 0x438; // bool
		constexpr auto ClearTextSelectionOnFocusLoss = 0x439; // bool
		constexpr auto RevertTextOnEscape = 0x43a; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x43b; // bool
		constexpr auto AllowContextMenu = 0x43c; // bool
		constexpr auto VirtualKeyboardOptions = 0x43d; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardDismissAction = 0x43e; // EVirtualKeyboardDismissAction
		constexpr auto OnTextChanged = 0x440; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x450; // FMulticastInlineDelegate
	}

	namespace n_UBTNode {
		constexpr auto NodeName = 0x30; // FString
		constexpr auto TreeAsset = 0x40; // UBehaviorTree*
		constexpr auto ParentNode = 0x48; // UBTCompositeNode*
	}

	namespace n_UParticleModuleBeamNoise {
		constexpr auto bLowFreq_Enabled = 0x30; // char : 1
		constexpr auto Frequency = 0x34; // int32_t
		constexpr auto Frequency_LowRange = 0x38; // int32_t
		constexpr auto NoiseRange = 0x40; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x88; // FRawDistributionFloat
		constexpr auto bNRScaleEmitterTime = 0xb8; // char : 1
		constexpr auto NoiseSpeed = 0xc0; // FRawDistributionVector
		constexpr auto bSmooth = 0x108; // char : 1
		constexpr auto NoiseLockRadius = 0x10c; // float
		constexpr auto bNoiseLock = 0x110; // char : 1
		constexpr auto bOscillate = 0x110; // char : 1
		constexpr auto NoiseLockTime = 0x114; // float
		constexpr auto NoiseTension = 0x118; // float
		constexpr auto bUseNoiseTangents = 0x11c; // char : 1
		constexpr auto NoiseTangentStrength = 0x120; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x150; // int32_t
		constexpr auto bTargetNoise = 0x154; // char : 1
		constexpr auto FrequencyDistance = 0x158; // float
		constexpr auto bApplyNoiseScale = 0x15c; // char : 1
		constexpr auto NoiseScale = 0x160; // FRawDistributionFloat
	}

	namespace n_UEnvQueryGenerator_ProjectedPoints {
		constexpr auto ProjectionData = 0x50; // FEnvTraceData
	}

	namespace n_UMediaPlayer {
		constexpr auto OnEndReached = 0x28; // FMulticastInlineDelegate
		constexpr auto OnMediaClosed = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMediaOpened = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMediaOpenFailed = 0x58; // FMulticastInlineDelegate
		constexpr auto OnPlaybackResumed = 0x68; // FMulticastInlineDelegate
		constexpr auto OnPlaybackSuspended = 0x78; // FMulticastInlineDelegate
		constexpr auto OnSeekCompleted = 0x88; // FMulticastInlineDelegate
		constexpr auto OnTracksChanged = 0x98; // FMulticastInlineDelegate
		constexpr auto CacheAhead = 0xa8; // FTimespan
		constexpr auto CacheBehind = 0xb0; // FTimespan
		constexpr auto CacheBehindGame = 0xb8; // FTimespan
		constexpr auto NativeAudioOut = 0xc0; // bool
		constexpr auto PlayOnOpen = 0xc1; // bool
		constexpr auto Shuffle = 0xc4; // char : 1
		constexpr auto Loop = 0xc4; // char : 1
		constexpr auto Playlist = 0xc8; // UMediaPlaylist*
		constexpr auto PlaylistIndex = 0xd0; // int32_t
		constexpr auto TimeDelay = 0xd8; // FTimespan
		constexpr auto HorizontalFieldOfView = 0xe0; // float
		constexpr auto VerticalFieldOfView = 0xe4; // float
		constexpr auto ViewRotation = 0xe8; // FRotator
		constexpr auto PlayerGuid = 0x120; // FGuid
	}

	namespace n_UBTTask_ToggleStanceType {
		constexpr auto Enum_DesiredAnimalsStanceType = 0xd0; // EAnimalsStanceType
		constexpr auto Enum_DesiredAnimalsBehaviorType = 0xd1; // EAnimalsBehaviorType
	}

	namespace n_UUI_StructureOccupyBlessPanel {
		constexpr auto SaveButton = 0x260; // UButton*
		constexpr auto ReturnButton = 0x268; // UButton*
		constexpr auto SetButton = 0x270; // UButton*
		constexpr auto AddButton = 0x278; // UButton*
		constexpr auto AddSaveButton = 0x280; // UButton*
		constexpr auto AddReturnButton = 0x288; // UButton*
		constexpr auto CurrentWeekSizeBox = 0x290; // USizeBox*
		constexpr auto CurrentWeekDataSizeBox = 0x298; // USizeBox*
		constexpr auto NextWeekSizeBox = 0x2a0; // USizeBox*
		constexpr auto NextWeekDataSizeBox = 0x2a8; // USizeBox*
		constexpr auto NextWeekTitlePanel = 0x2b0; // UCanvasPanel*
		constexpr auto W1Head = 0x2b8; // UTextBlock*
		constexpr auto W1_1TextBox = 0x2c0; // UEditableTextBox*
		constexpr auto W1_2TextBox = 0x2c8; // UEditableTextBox*
		constexpr auto W1_3TextBox = 0x2d0; // UEditableTextBox*
		constexpr auto W1_4TextBox = 0x2d8; // UEditableTextBox*
		constexpr auto W2Head = 0x2e0; // UTextBlock*
		constexpr auto W2_1TextBox = 0x2e8; // UEditableTextBox*
		constexpr auto W2_2TextBox = 0x2f0; // UEditableTextBox*
		constexpr auto W2_3TextBox = 0x2f8; // UEditableTextBox*
		constexpr auto W2_4TextBox = 0x300; // UEditableTextBox*
		constexpr auto W3Head = 0x308; // UTextBlock*
		constexpr auto W3_1TextBox = 0x310; // UEditableTextBox*
		constexpr auto W3_2TextBox = 0x318; // UEditableTextBox*
		constexpr auto W3_3TextBox = 0x320; // UEditableTextBox*
		constexpr auto W3_4TextBox = 0x328; // UEditableTextBox*
		constexpr auto W4Head = 0x330; // UTextBlock*
		constexpr auto W4_1TextBox = 0x338; // UEditableTextBox*
		constexpr auto W4_2TextBox = 0x340; // UEditableTextBox*
		constexpr auto W4_3TextBox = 0x348; // UEditableTextBox*
		constexpr auto W4_4TextBox = 0x350; // UEditableTextBox*
		constexpr auto W5Head = 0x358; // UTextBlock*
		constexpr auto W5_1TextBox = 0x360; // UEditableTextBox*
		constexpr auto W5_2TextBox = 0x368; // UEditableTextBox*
		constexpr auto W5_3TextBox = 0x370; // UEditableTextBox*
		constexpr auto W5_4TextBox = 0x378; // UEditableTextBox*
		constexpr auto W6Head = 0x380; // UTextBlock*
		constexpr auto W6_1TextBox = 0x388; // UEditableTextBox*
		constexpr auto W6_2TextBox = 0x390; // UEditableTextBox*
		constexpr auto W6_3TextBox = 0x398; // UEditableTextBox*
		constexpr auto W6_4TextBox = 0x3a0; // UEditableTextBox*
		constexpr auto W7Head = 0x3a8; // UTextBlock*
		constexpr auto W7_1TextBox = 0x3b0; // UEditableTextBox*
		constexpr auto W7_2TextBox = 0x3b8; // UEditableTextBox*
		constexpr auto W7_3TextBox = 0x3c0; // UEditableTextBox*
		constexpr auto W7_4TextBox = 0x3c8; // UEditableTextBox*
		constexpr auto W8Head = 0x3d0; // UTextBlock*
		constexpr auto W8_1TextBox = 0x3d8; // UEditableTextBox*
		constexpr auto W8_2TextBox = 0x3e0; // UEditableTextBox*
		constexpr auto W8_3TextBox = 0x3e8; // UEditableTextBox*
		constexpr auto W8_4TextBox = 0x3f0; // UEditableTextBox*
		constexpr auto W1Data = 0x3f8; // URichTextBlock*
		constexpr auto W2Data = 0x400; // URichTextBlock*
		constexpr auto W3Data = 0x408; // URichTextBlock*
		constexpr auto W4Data = 0x410; // URichTextBlock*
		constexpr auto W5Data = 0x418; // URichTextBlock*
		constexpr auto W6Data = 0x420; // URichTextBlock*
		constexpr auto W7Data = 0x428; // URichTextBlock*
		constexpr auto W8Data = 0x430; // URichTextBlock*
		constexpr auto NW1Head = 0x438; // UTextBlock*
		constexpr auto NW1_1TextBox = 0x440; // UEditableTextBox*
		constexpr auto NW1_2TextBox = 0x448; // UEditableTextBox*
		constexpr auto NW1_3TextBox = 0x450; // UEditableTextBox*
		constexpr auto NW1_4TextBox = 0x458; // UEditableTextBox*
		constexpr auto NW2Head = 0x460; // UTextBlock*
		constexpr auto NW2_1TextBox = 0x468; // UEditableTextBox*
		constexpr auto NW2_2TextBox = 0x470; // UEditableTextBox*
		constexpr auto NW2_3TextBox = 0x478; // UEditableTextBox*
		constexpr auto NW2_4TextBox = 0x480; // UEditableTextBox*
		constexpr auto NW3Head = 0x488; // UTextBlock*
		constexpr auto NW3_1TextBox = 0x490; // UEditableTextBox*
		constexpr auto NW3_2TextBox = 0x498; // UEditableTextBox*
		constexpr auto NW3_3TextBox = 0x4a0; // UEditableTextBox*
		constexpr auto NW3_4TextBox = 0x4a8; // UEditableTextBox*
		constexpr auto NW4Head = 0x4b0; // UTextBlock*
		constexpr auto NW4_1TextBox = 0x4b8; // UEditableTextBox*
		constexpr auto NW4_2TextBox = 0x4c0; // UEditableTextBox*
		constexpr auto NW4_3TextBox = 0x4c8; // UEditableTextBox*
		constexpr auto NW4_4TextBox = 0x4d0; // UEditableTextBox*
		constexpr auto NW5Head = 0x4d8; // UTextBlock*
		constexpr auto NW5_1TextBox = 0x4e0; // UEditableTextBox*
		constexpr auto NW5_2TextBox = 0x4e8; // UEditableTextBox*
		constexpr auto NW5_3TextBox = 0x4f0; // UEditableTextBox*
		constexpr auto NW5_4TextBox = 0x4f8; // UEditableTextBox*
		constexpr auto NW6Head = 0x500; // UTextBlock*
		constexpr auto NW6_1TextBox = 0x508; // UEditableTextBox*
		constexpr auto NW6_2TextBox = 0x510; // UEditableTextBox*
		constexpr auto NW6_3TextBox = 0x518; // UEditableTextBox*
		constexpr auto NW6_4TextBox = 0x520; // UEditableTextBox*
		constexpr auto NW7Head = 0x528; // UTextBlock*
		constexpr auto NW7_1TextBox = 0x530; // UEditableTextBox*
		constexpr auto NW7_2TextBox = 0x538; // UEditableTextBox*
		constexpr auto NW7_3TextBox = 0x540; // UEditableTextBox*
		constexpr auto NW7_4TextBox = 0x548; // UEditableTextBox*
		constexpr auto NW8Head = 0x550; // UTextBlock*
		constexpr auto NW8_1TextBox = 0x558; // UEditableTextBox*
		constexpr auto NW8_2TextBox = 0x560; // UEditableTextBox*
		constexpr auto NW8_3TextBox = 0x568; // UEditableTextBox*
		constexpr auto NW8_4TextBox = 0x570; // UEditableTextBox*
		constexpr auto NW1Data = 0x578; // URichTextBlock*
		constexpr auto NW2Data = 0x580; // URichTextBlock*
		constexpr auto NW3Data = 0x588; // URichTextBlock*
		constexpr auto NW4Data = 0x590; // URichTextBlock*
		constexpr auto NW5Data = 0x598; // URichTextBlock*
		constexpr auto NW6Data = 0x5a0; // URichTextBlock*
		constexpr auto NW7Data = 0x5a8; // URichTextBlock*
		constexpr auto NW8Data = 0x5b0; // URichTextBlock*
		constexpr auto CurrentWeekTitleRichText = 0x5b8; // URichTextBlock*
		constexpr auto NextWeekTitleRichText = 0x5c0; // URichTextBlock*
		constexpr auto BlessMessageRichText = 0x5c8; // URichTextBlock*
		constexpr auto ThisWeekRangeText = 0x5d0; // URichTextBlock*
		constexpr auto NextWeekRangeText = 0x5d8; // URichTextBlock*
		constexpr auto ThisSetAfterSizeBox = 0x5e0; // USizeBox*
		constexpr auto NextSetAfterSizeBox = 0x5e8; // USizeBox*
		constexpr auto RemoteActor = 0x5f0; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x5f8; // USGUI*
		constexpr auto bFirstCreateOccupy = 0x600; // char : 1
		constexpr auto ProtectIDs = 0x608; // TArray<int32_t>
		constexpr auto CurrentProtectTimeRange = 0x618; // TArray<FProtectTimeRange>
		constexpr auto NextProtectTimeRange = 0x628; // TArray<FProtectTimeRange>
	}

	namespace n_USharpPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UMovieSceneNiagaraParameterTrack {
		constexpr auto Parameter = 0x88; // FNiagaraVariable
	}

	namespace n_UMaterialExpressionTextureSampleParameter {
		constexpr auto ParameterName = 0x60; // FName
		constexpr auto ExpressionGUID = 0x68; // FGuid
		constexpr auto Group = 0x78; // FName
	}

	namespace n_UDestructibleMesh {
		constexpr auto DefaultDestructibleParameters = 0x3a8; // FDestructibleParameters
		constexpr auto FractureEffects = 0x430; // TArray<FFractureEffect>
		constexpr auto CustomChunkIndex = 0x448; // TArray<int32_t>
		constexpr auto CustomExplodeDirection = 0x458; // TArray<FVector>
		constexpr auto IsStaticChunk = 0x468; // TArray<char>
		constexpr auto ChunkAggGeoms = 0x478; // TArray<FKAggregateGeom>
	}

	namespace n_UEditableText {
		constexpr auto Text = 0x108; // FText
		constexpr auto TextDelegate = 0x120; // FDelegate
		constexpr auto HintText = 0x130; // FText
		constexpr auto HintTextDelegate = 0x148; // FDelegate
		constexpr auto WidgetStyle = 0x158; // FEditableTextStyle
		constexpr auto Style = 0x378; // USlateWidgetStyleAsset*
		constexpr auto BackgroundImageSelected = 0x380; // USlateBrushAsset*
		constexpr auto BackgroundImageComposing = 0x388; // USlateBrushAsset*
		constexpr auto CaretImage = 0x390; // USlateBrushAsset*
		constexpr auto Font = 0x398; // FSlateFontInfo
		constexpr auto ColorAndOpacity = 0x3f0; // FSlateColor
		constexpr auto IsReadOnly = 0x418; // bool
		constexpr auto IsPassword = 0x419; // bool
		constexpr auto MinimumDesiredWidth = 0x41c; // float
		constexpr auto IsCaretMovedWhenGainFocus = 0x420; // bool
		constexpr auto SelectAllTextWhenFocused = 0x421; // bool
		constexpr auto RevertTextOnEscape = 0x422; // bool
		constexpr auto ClearKeyboardFocusOnCommit = 0x423; // bool
		constexpr auto SelectAllTextOnCommit = 0x424; // bool
		constexpr auto AllowContextMenu = 0x425; // bool
		constexpr auto KeyboardType = 0x426; // EVirtualKeyboardType
		constexpr auto VirtualKeyboardOptions = 0x427; // FVirtualKeyboardOptions
		constexpr auto VirtualKeyboardTrigger = 0x428; // EVirtualKeyboardTrigger
		constexpr auto VirtualKeyboardDismissAction = 0x429; // EVirtualKeyboardDismissAction
		constexpr auto Justification = 0x42a; // ETextJustify
		constexpr auto ShapedTextOptions = 0x42b; // FShapedTextOptions
		constexpr auto OnTextChanged = 0x430; // FMulticastInlineDelegate
		constexpr auto OnTextCommitted = 0x440; // FMulticastInlineDelegate
	}

	namespace n_UMaterialInstance {
		constexpr auto PhysMaterial = 0x88; // UPhysicalMaterial*
		constexpr auto PhysicalMaterialMap = 0x90; // UPhysicalMaterial* [0x8]
		constexpr auto Parent = 0xd0; // UMaterialInterface*
		constexpr auto bHasStaticPermutationResource = 0xd8; // char : 1
		constexpr auto bOverrideSubsurfaceProfile = 0xd8; // char : 1
		constexpr auto ScalarParameterValues = 0xe0; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0xf0; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x100; // TArray<FTextureParameterValue>
		constexpr auto RuntimeVirtualTextureParameterValues = 0x110; // TArray<FRuntimeVirtualTextureParameterValue>
		constexpr auto FontParameterValues = 0x120; // TArray<FFontParameterValue>
		constexpr auto BasePropertyOverrides = 0x130; // FMaterialInstanceBasePropertyOverrides
		constexpr auto StaticParameters = 0x148; // FStaticParameterSet
		constexpr auto CachedLayerParameters = 0x188; // FMaterialCachedParameters
		constexpr auto CachedReferencedTextures = 0x328; // TArray<UObject*>
	}

	namespace n_UDistributionFloatConstant {
		constexpr auto Constant = 0x38; // float
	}

	namespace n_UMaterialExpressionArctangent {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGizmoComponentWorldTransformSource {
		constexpr auto Component = 0x48; // USceneComponent*
		constexpr auto bModifyComponentOnTransform = 0x50; // bool
	}

	namespace n_UMovieSceneObjectPropertySection {
		constexpr auto ObjectChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UMovieSceneBuiltInEasingFunction {
		constexpr auto Type = 0x30; // EMovieSceneBuiltInEasing
	}

	namespace n_UAtmosphericFogComponent {
		constexpr auto SunMultiplier = 0x208; // float
		constexpr auto FogMultiplier = 0x20c; // float
		constexpr auto DensityMultiplier = 0x210; // float
		constexpr auto DensityOffset = 0x214; // float
		constexpr auto DistanceScale = 0x218; // float
		constexpr auto AltitudeScale = 0x21c; // float
		constexpr auto DistanceOffset = 0x220; // float
		constexpr auto GroundOffset = 0x224; // float
		constexpr auto startDistance = 0x228; // float
		constexpr auto SunDiscScale = 0x22c; // float
		constexpr auto DefaultBrightness = 0x230; // float
		constexpr auto DefaultLightColor = 0x234; // FColor
		constexpr auto bDisableSunDisk = 0x238; // char : 1
		constexpr auto bAtmosphereAffectsSunIlluminance = 0x238; // char : 1
		constexpr auto bDisableGroundScattering = 0x238; // char : 1
		constexpr auto PrecomputeParams = 0x23c; // FAtmospherePrecomputeParameters
		constexpr auto TransmittanceTexture = 0x268; // UTexture2D*
		constexpr auto IrradianceTexture = 0x270; // UTexture2D*
	}

	namespace n_UMaterialExpressionStep {
		constexpr auto Y = 0x40; // FExpressionInput
		constexpr auto X = 0x54; // FExpressionInput
		constexpr auto ConstY = 0x68; // float
		constexpr auto ConstX = 0x6c; // float
	}

	namespace n_UParticleModuleParameterDynamic_Seeded {
		constexpr auto RandomSeedInfo = 0x48; // FParticleRandomSeedInfo
	}

	namespace n_UStandardSculptBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_UChargeAIAttackState {
		constexpr auto ChargeDurationTime = 0x108; // float
		constexpr auto ChargingSpeedMulAdd = 0x10c; // float
		constexpr auto ChargingAccelerationMulAdd = 0x110; // float
	}

	namespace n_UInterpTrackToggle {
		constexpr auto ToggleTrack = 0x70; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0x80; // char : 1
		constexpr auto bActivateWithJustAttachedFlag = 0x80; // char : 1
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UPaperTerrainComponent {
		constexpr auto TerrainMaterial = 0x488; // UPaperTerrainMaterial*
		constexpr auto bClosedSpline = 0x490; // bool
		constexpr auto bFilledSpline = 0x491; // bool
		constexpr auto AssociatedSpline = 0x498; // UPaperTerrainSplineComponent*
		constexpr auto RandomSeed = 0x4a0; // int32_t
		constexpr auto SegmentOverlapAmount = 0x4a4; // float
		constexpr auto TerrainColor = 0x4a8; // FLinearColor
		constexpr auto ReparamStepsPerSegment = 0x4b8; // int32_t
		constexpr auto SpriteCollisionDomain = 0x4bc; // ESpriteCollisionMode
		constexpr auto CollisionThickness = 0x4c0; // float
		constexpr auto CachedBodySetup = 0x4c8; // UBodySetup*
	}

	namespace n_ASplineRouteActor {
		constexpr auto SplineComponent = 0x310; // USplineComponent*
	}

	namespace n_AUIWSCustomBody {
		constexpr auto CustomStaticMesh = 0x6b0; // UStaticMesh*
	}

	namespace n_UNavigationQueryFilter {
		constexpr auto Areas = 0x28; // TArray<FNavigationFilterArea>
		constexpr auto IncludeFlags = 0x38; // FNavigationFilterFlags
		constexpr auto ExcludeFlags = 0x3c; // FNavigationFilterFlags
	}

	namespace n_UCustomMeshGenerator {
		constexpr auto MeshComp = 0x28; // UStaticMeshComponent*
	}

	namespace n_UOccupyFlagPanel {
		constexpr auto OccupyFlagItemClass = 0x260; // UOccupyFlagItem*
		constexpr auto TbBattleGroundCountDown = 0x268; // UTextBlock*
		constexpr auto TbBattleQueue = 0x270; // UTextBlock*
		constexpr auto UGPFlag = 0x278; // UUniformGridPanel*
		constexpr auto CurrentCountDownTimeInt = 0x280; // int32_t
		constexpr auto OwnerPlayerController = 0x288; // ASGPlayerController*
		constexpr auto LastFlags = 0x290; // TArray<ASGStructureOccupyFlag*>
	}

	namespace n_ANavigationTestingActor {
		constexpr auto CapsuleComponent = 0x320; // UCapsuleComponent*
		constexpr auto InvokerComponent = 0x328; // UNavigationInvokerComponent*
		constexpr auto bActAsNavigationInvoker = 0x330; // char : 1
		constexpr auto NavAgentProps = 0x338; // FNavAgentProperties
		constexpr auto QueryingExtent = 0x368; // FVector
		constexpr auto MyNavData = 0x378; // ANavigationData*
		constexpr auto ProjectedLocation = 0x380; // FVector
		constexpr auto bProjectedLocationValid = 0x38c; // char : 1
		constexpr auto bSearchStart = 0x38c; // char : 1
		constexpr auto CostLimitFactor = 0x390; // float
		constexpr auto MinimumCostLimit = 0x394; // float
		constexpr auto bBacktracking = 0x398; // char : 1
		constexpr auto bUseHierarchicalPathfinding = 0x398; // char : 1
		constexpr auto bGatherDetailedInfo = 0x398; // char : 1
		constexpr auto bDrawDistanceToWall = 0x398; // char : 1
		constexpr auto bShowNodePool = 0x398; // char : 1
		constexpr auto bShowBestPath = 0x398; // char : 1
		constexpr auto bShowDiffWithPreviousStep = 0x398; // char : 1
		constexpr auto bShouldBeVisibleInGame = 0x398; // char : 1
		constexpr auto CostDisplayMode = 0x39c; // ENavCostDisplay
		constexpr auto TextCanvasOffset = 0x3a0; // FVector2D
		constexpr auto bPathExist = 0x3a8; // char : 1
		constexpr auto bPathIsPartial = 0x3a8; // char : 1
		constexpr auto bPathSearchOutOfNodes = 0x3a8; // char : 1
		constexpr auto PathfindingTime = 0x3ac; // float
		constexpr auto PathCost = 0x3b0; // float
		constexpr auto PathfindingSteps = 0x3b4; // int32_t
		constexpr auto OtherActor = 0x3b8; // ANavigationTestingActor*
		constexpr auto FilterClass = 0x3c0; // UNavigationQueryFilter*
		constexpr auto ShowStepIndex = 0x3c8; // int32_t
		constexpr auto OffsetFromCornersDistance = 0x3cc; // float
	}

	namespace n_UParticleSystem {
		constexpr auto UpdateTime_FPS = 0x30; // float
		constexpr auto UpdateTime_Delta = 0x34; // float
		constexpr auto WarmupTime = 0x38; // float
		constexpr auto WarmupTickRate = 0x3c; // float
		constexpr auto Emitters = 0x40; // TArray<UParticleEmitter*>
		constexpr auto PreviewComponent = 0x50; // UParticleSystemComponent*
		constexpr auto CurveEdSetup = 0x58; // UInterpCurveEdSetup*
		constexpr auto LODDistanceCheckTime = 0x60; // float
		constexpr auto MacroUVRadius = 0x64; // float
		constexpr auto LODDistances = 0x68; // TArray<float>
		constexpr auto LODSettings = 0x78; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0x88; // FBox
		constexpr auto SecondsBeforeInactive = 0xa4; // float
		constexpr auto Delay = 0xa8; // float
		constexpr auto DelayLow = 0xac; // float
		constexpr auto bOrientZAxisTowardCamera = 0xb0; // char : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0xb0; // char : 1
		constexpr auto bShouldResetPeakCounts = 0xb0; // char : 1
		constexpr auto bHasPhysics = 0xb0; // char : 1
		constexpr auto bUseRealtimeThumbnail = 0xb0; // char : 1
		constexpr auto ThumbnailImageOutOfDate = 0xb0; // char : 1
		constexpr auto bUseDelayRange = 0xb1; // char : 1
		constexpr auto bAllowManagedTicking = 0xb1; // char : 1
		constexpr auto bAutoDeactivate = 0xb1; // char : 1
		constexpr auto bRegenerateLODDuplicate = 0xb1; // char : 1
		constexpr auto SystemUpdateMode = 0xb2; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0xb3; // ParticleSystemLODMethod
		constexpr auto InsignificantReaction = 0xb4; // EParticleSystemInsignificanceReaction
		constexpr auto OcclusionBoundsMethod = 0xb5; // EParticleSystemOcclusionBoundsMethod
		constexpr auto MaxSignificanceLevel = 0xb7; // EParticleSignificanceLevel
		constexpr auto MinTimeBetweenTicks = 0xb8; // uint32_t
		constexpr auto InsignificanceDelay = 0xbc; // float
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto CustomOcclusionBounds = 0xcc; // FBox
		constexpr auto SoloTracking = 0xe8; // TArray<FLODSoloTrack>
		constexpr auto NamedMaterialSlots = 0xf8; // TArray<FNamedEmitterMaterial>
	}

	namespace n_UPolyEditInsetProperties {
		constexpr auto bReproject = 0x60; // bool
		constexpr auto Softness = 0x64; // float
		constexpr auto bBoundaryOnly = 0x68; // bool
		constexpr auto AreaScale = 0x6c; // float
	}

	namespace n_USteamAudioSettings {
		constexpr auto OutputSubmix = 0x28; // FSoftObjectPath
		constexpr auto AudioEngine = 0x40; // EIplAudioEngine
		constexpr auto RayTracer = 0x41; // EIplRayTracerType
		constexpr auto ConvolutionType = 0x42; // EIplConvolutionType
		constexpr auto ExportBSPGeometry = 0x43; // bool
		constexpr auto ExportLandscapeGeometry = 0x44; // bool
		constexpr auto StaticMeshMaterialPreset = 0x45; // EPhononMaterial
		constexpr auto StaticMeshLowFreqAbsorption = 0x48; // float
		constexpr auto StaticMeshMidFreqAbsorption = 0x4c; // float
		constexpr auto StaticMeshHighFreqAbsorption = 0x50; // float
		constexpr auto StaticMeshLowFreqTransmission = 0x54; // float
		constexpr auto StaticMeshMidFreqTransmission = 0x58; // float
		constexpr auto StaticMeshHighFreqTransmission = 0x5c; // float
		constexpr auto StaticMeshScattering = 0x60; // float
		constexpr auto BSPMaterialPreset = 0x64; // EPhononMaterial
		constexpr auto BSPLowFreqAbsorption = 0x68; // float
		constexpr auto BSPMidFreqAbsorption = 0x6c; // float
		constexpr auto BSPHighFreqAbsorption = 0x70; // float
		constexpr auto BSPLowFreqTransmission = 0x74; // float
		constexpr auto BSPMidFreqTransmission = 0x78; // float
		constexpr auto BSPHighFreqTransmission = 0x7c; // float
		constexpr auto BSPScattering = 0x80; // float
		constexpr auto LandscapeMaterialPreset = 0x84; // EPhononMaterial
		constexpr auto LandscapeLowFreqAbsorption = 0x88; // float
		constexpr auto LandscapeMidFreqAbsorption = 0x8c; // float
		constexpr auto LandscapeHighFreqAbsorption = 0x90; // float
		constexpr auto LandscapeLowFreqTransmission = 0x94; // float
		constexpr auto LandscapeMidFreqTransmission = 0x98; // float
		constexpr auto LandscapeHighFreqTransmission = 0x9c; // float
		constexpr auto LandscapeScattering = 0xa0; // float
		constexpr auto OcclusionSampleCount = 0xa4; // int32_t
		constexpr auto ListenerReverbSimulationType = 0xa8; // EIplSimulationType
		constexpr auto ListenerReverbContribution = 0xac; // float
		constexpr auto IndirectImpulseResponseOrder = 0xb0; // int32_t
		constexpr auto IndirectImpulseResponseDuration = 0xb4; // float
		constexpr auto IndirectSpatializationMethod = 0xb8; // EIplSpatializationMethod
		constexpr auto IrradianceMinDistance = 0xbc; // float
		constexpr auto MaxSources = 0xc0; // uint32_t
		constexpr auto RealtimeQualityPreset = 0xc4; // EQualitySettings
		constexpr auto RealTimeCPUCoresPercentage = 0xc8; // int32_t
		constexpr auto RealtimeBounces = 0xcc; // int32_t
		constexpr auto RealtimeRays = 0xd0; // int32_t
		constexpr auto RealtimeSecondaryRays = 0xd4; // int32_t
		constexpr auto BakedQualityPreset = 0xd8; // EQualitySettings
		constexpr auto BakingCPUCoresPercentage = 0xdc; // int32_t
		constexpr auto BakedBounces = 0xe0; // int32_t
		constexpr auto BakedRays = 0xe4; // int32_t
		constexpr auto BakedSecondaryRays = 0xe8; // int32_t
		constexpr auto MaxComputeUnits = 0xec; // int32_t
		constexpr auto FractionComputeUnitsForIRUpdate = 0xf0; // float
		constexpr auto TANIndirectImpulseResponseOrder = 0xf4; // int32_t
		constexpr auto TANIndirectImpulseResponseDuration = 0xf8; // float
		constexpr auto TANMaxSources = 0xfc; // uint32_t
		constexpr auto RadeonRaysBakingBatchSize = 0x100; // int32_t
	}

	namespace n_ASGStructureItemContainer_Crate {
		constexpr auto bUseDeathDrop = 0xd68; // char : 1
		constexpr auto CraftItems = 0xd70; // TArray<FCrateItemSet>
		constexpr auto DeathDropItemConfig = 0xd80; // TArray<FDeathDropItemConfig>
		constexpr auto CrateLevel = 0xd90; // int32_t
		constexpr auto CraftType = 0xd94; // EStructureCraftType
		constexpr auto bDisposable = 0xd95; // char : 1
		constexpr auto DisposableLifeSpan = 0xd98; // float
		constexpr auto bAutoRefresh = 0xd9c; // char : 1
		constexpr auto EmptyStaticMesh = 0xda0; // UStaticMesh*
		constexpr auto OpenedStaticMesh = 0xda8; // UStaticMesh*
		constexpr auto UnOpenedStaticMesh = 0xdb0; // UStaticMesh*
		constexpr auto RefreshCheckBox = 0xdb8; // FVector
		constexpr auto bNeedCheckAround = 0xdc4; // char : 1
		constexpr auto bDrawDebug = 0xdc4; // char : 1
		constexpr auto RefreshTime = 0xdc8; // int32_t
		constexpr auto bNeedNewInitItem = 0xdcc; // char : 1
		constexpr auto RefreshGameTime = 0xdd0; // double
		constexpr auto bNeedRefresh = 0xdd8; // char : 1
		constexpr auto OpenedColor = 0xddc; // int32_t
		constexpr auto UnOpenedColor = 0xde0; // int32_t
	}

	namespace n_UMeshOpPreviewWithBackgroundCompute {
		constexpr auto PreviewMesh = 0x58; // UPreviewMesh*
		constexpr auto StandardMaterials = 0x60; // TArray<UMaterialInterface*>
		constexpr auto OverrideMaterial = 0x70; // UMaterialInterface*
		constexpr auto WorkingMaterial = 0x78; // UMaterialInterface*
	}

	namespace n_USourceEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xb8; // FSourceEffectDynamicsProcessorSettings
	}

	namespace n_UUI_ChatSettingSlot {
		constexpr auto ChatSettingCheckBox = 0x260; // UCheckBox*
		constexpr auto ChatSettingText = 0x268; // UTextBlock*
		constexpr auto SettingText = 0x270; // FText
		constexpr auto ChannelType = 0x288; // EChatSlotType
		constexpr auto DefaultSettingState = 0x289; // ECheckBoxState
	}

	namespace n_UMaterialExpressionMaterialFunctionCall {
		constexpr auto MaterialFunction = 0x40; // UMaterialFunctionInterface*
		constexpr auto FunctionParameterInfo = 0x48; // FMaterialParameterInfo
	}

	namespace n_USGFurDatabase {
		constexpr auto GroomComponents = 0x28; // TArray<FGroomComponentInstance>
		constexpr auto SkeletalMeshComponents = 0x38; // TArray<FSkeletalMeshComponentInstance>
	}

	namespace n_UClientCropInfo {
		constexpr auto CropLand = 0x28; // ASGStructureCropLand*
		constexpr auto LastVisualUpdateTime = 0x30; // float
		constexpr auto CurrentVisualScale = 0x34; // float
		constexpr auto NexVisualScale = 0x38; // float
		constexpr auto InnerScaleTolerance = 0x3c; // float
		constexpr auto MeshComponent = 0x40; // UStaticMeshComponent*
	}

	namespace n_UExporter {
		constexpr auto SupportedClass = 0x28; // UObject*
		constexpr auto ExportRootScope = 0x30; // UObject*
		constexpr auto FormatExtension = 0x38; // TArray<FString>
		constexpr auto FormatDescription = 0x48; // TArray<FString>
		constexpr auto PreferredFormatIndex = 0x58; // int32_t
		constexpr auto TextIndent = 0x5c; // int32_t
		constexpr auto bText = 0x60; // char : 1
		constexpr auto bSelectedOnly = 0x60; // char : 1
		constexpr auto bForceFileOperations = 0x60; // char : 1
		constexpr auto ExportTask = 0x68; // UAssetExportTask*
	}

	namespace n_UFoliageInstancedStaticMeshComponent {
		constexpr auto OnInstanceTakePointDamage = 0x6b0; // FMulticastInlineDelegate
		constexpr auto OnInstanceTakeRadialDamage = 0x6c0; // FMulticastInlineDelegate
		constexpr auto GenerationGuid = 0x6d0; // FGuid
	}

	namespace n_UMaterialExpressionTextureCoordinate {
		constexpr auto CoordinateIndex = 0x40; // int32_t
		constexpr auto UTiling = 0x44; // float
		constexpr auto VTiling = 0x48; // float
		constexpr auto UnMirrorU = 0x4c; // char : 1
		constexpr auto UnMirrorV = 0x4c; // char : 1
	}

	namespace n_UParticleModuleOrbit {
		constexpr auto ChainMode = 0x38; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x40; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x88; // FOrbitOptions
		constexpr auto RotationAmount = 0x90; // FRawDistributionVector
		constexpr auto RotationOptions = 0xd8; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xe0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0x128; // FOrbitOptions
	}

	namespace n_UEnvQuery {
		constexpr auto QueryName = 0x30; // FName
		constexpr auto Options = 0x38; // TArray<UEnvQueryOption*>
	}

	namespace n_ASGStructureCropBase {
		constexpr auto CropPhaseData = 0xb98; // TArray<FCropPhaseData>
		constexpr auto ScaleTolerance = 0xba8; // float
		constexpr auto GrowthTotalTime = 0xbac; // float
		constexpr auto ProductionItem = 0xbb0; // USGItem*
		constexpr auto MinProduction = 0xbb8; // float
		constexpr auto MaxProduction = 0xbbc; // float
		constexpr auto SkillExpAdd = 0xbc0; // float
		constexpr auto CollectSound = 0xbc8; // USoundBase*
		constexpr auto DestroySound = 0xbd0; // USoundBase*
		constexpr auto BaseExploitExperienceToAdd = 0xbd8; // float
	}

	namespace n_UWorkPlaneProperties {
		constexpr auto bPropertySetEnabled = 0x60; // bool
		constexpr auto bShowGizmo = 0x61; // bool
		constexpr auto bSnapToGrid = 0x62; // bool
		constexpr auto position = 0x64; // FVector
		constexpr auto Rotation = 0x70; // FQuat
	}

	namespace n_UMovieSceneEnumSection {
		constexpr auto EnumCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UCheckBoxStyleAsset {
		constexpr auto CheckBoxStyle = 0x28; // FCheckBoxStyle
	}

	namespace n_UTextBlockWidgetStyle {
		constexpr auto TextBlockStyle = 0x30; // FTextBlockStyle
	}

	namespace n_UParticleModuleSourceMovement {
		constexpr auto SourceMovementScale = 0x30; // FRawDistributionVector
	}

	namespace n_UAbilityTask_WaitAttributeChange {
		constexpr auto OnChange = 0x80; // FMulticastInlineDelegate
		constexpr auto ExternalOwner = 0xf0; // UAbilitySystemComponent*
	}

	namespace n_UMaterialExpressionVectorNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto NoiseFunction = 0x54; // EVectorNoiseFunction
		constexpr auto Quality = 0x58; // int32_t
		constexpr auto bTiling = 0x5c; // char : 1
		constexpr auto TileSize = 0x60; // uint32_t
	}

	namespace n_UBTTask_RotateToFaceBBEntry {
		constexpr auto Precision = 0x98; // float
	}

	namespace n_UUniformVector {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto Direction = 0xc4; // FVector
	}

	namespace n_UMaterialExpressionNoise {
		constexpr auto position = 0x40; // FExpressionInput
		constexpr auto FilterWidth = 0x54; // FExpressionInput
		constexpr auto Scale = 0x68; // float
		constexpr auto Quality = 0x6c; // int32_t
		constexpr auto NoiseFunction = 0x70; // ENoiseFunction
		constexpr auto bTurbulence = 0x74; // char : 1
		constexpr auto Levels = 0x78; // int32_t
		constexpr auto OutputMin = 0x7c; // float
		constexpr auto OutputMax = 0x80; // float
		constexpr auto LevelScale = 0x84; // float
		constexpr auto bTiling = 0x88; // char : 1
		constexpr auto RepeatSize = 0x8c; // uint32_t
	}

	namespace n_UMovieSceneCameraCutSection {
		constexpr auto bLockPreviousCamera = 0xf0; // bool
		constexpr auto CameraGuid = 0xf4; // FGuid
		constexpr auto CameraBindingID = 0x104; // FMovieSceneObjectBindingID
		constexpr auto InitialCameraCutTransform = 0x120; // FTransform
		constexpr auto bHasInitialCameraCutTransform = 0x150; // bool
	}

	namespace n_UEraseBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
	}

	namespace n_USimpleConstructionScript {
		constexpr auto RootNodes = 0x28; // TArray<USCS_Node*>
		constexpr auto AllNodes = 0x38; // TArray<USCS_Node*>
		constexpr auto DefaultSceneRootNode = 0x48; // USCS_Node*
	}

	namespace n_UInteractiveGizmoManager {
		constexpr auto ActiveGizmos = 0x30; // TArray<FActiveGizmo>
		constexpr auto GizmoBuilders = 0x58; // TMap<FString, UInteractiveGizmoBuilder*>
	}

	namespace n_UMaterialExpressionPower {
		constexpr auto Base = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // FExpressionInput
		constexpr auto ConstExponent = 0x68; // float
	}

	namespace n_UPrimaryAssetLabel {
		constexpr auto Rules = 0x30; // FPrimaryAssetRules
		constexpr auto bLabelAssetsInMyDirectory = 0x3c; // char : 1
		constexpr auto bIsRuntimeLabel = 0x3c; // char : 1
		constexpr auto ExplicitAssets = 0x40; // TArray<TSoftObjectPtr<UObject>>
		constexpr auto ExplicitBlueprints = 0x50; // TArray<TSoftClassPtr<UObject>>
		constexpr auto AssetCollection = 0x60; // FCollectionReference
	}

	namespace n_ASGStructureBianPao {
		constexpr auto NeedWeaponClass = 0xb98; // ASGWeapon*
		constexpr auto FireMontage = 0xba0; // UAnimMontage*
		constexpr auto BianPaoEndTimer = 0xba8; // int32_t
	}

	namespace n_UUI_ServerAdminPlayerRow {
		constexpr auto TbNikeName = 0x260; // UTextBlock*
		constexpr auto TbAccountId = 0x268; // UTextBlock*
		constexpr auto TbCharacterName = 0x270; // UTextBlock*
		constexpr auto TbOnline = 0x278; // UTextBlock*
		constexpr auto ButtonPlayer = 0x280; // UButton*
		constexpr auto ImageSelected = 0x288; // UImage*
		constexpr auto BindAdminPlayerPanel = 0x290; // UUI_AdminPlayerPanel*
	}

	namespace n_UAnimClassData {
		constexpr auto BakedStateMachines = 0x30; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x40; // USkeleton*
		constexpr auto AnimNotifies = 0x48; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x58; // TMap<FName, FCachedPoseIndices>
		constexpr auto AnimBlueprintFunctions = 0xa8; // TArray<FAnimBlueprintFunction>
		constexpr auto AnimBlueprintFunctionData = 0xb8; // TArray<FAnimBlueprintFunctionData>
		constexpr auto AnimNodeProperties = 0xc8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimGraphNodeProperties = 0xe8; // TArray<TFieldPath<FStructProperty>>
		constexpr auto LinkedAnimLayerNodeProperties = 0x108; // TArray<TFieldPath<FStructProperty>>
		constexpr auto PreUpdateNodeProperties = 0x128; // TArray<TFieldPath<FStructProperty>>
		constexpr auto DynamicResetNodeProperties = 0x148; // TArray<TFieldPath<FStructProperty>>
		constexpr auto StateMachineNodeProperties = 0x168; // TArray<TFieldPath<FStructProperty>>
		constexpr auto InitializationNodeProperties = 0x188; // TArray<TFieldPath<FStructProperty>>
		constexpr auto GraphNameAssetPlayers = 0x1a8; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto SyncGroupNames = 0x1f8; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x208; // TArray<FExposedValueHandler>
		constexpr auto GraphBlendOptions = 0x218; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x268; // FPropertyAccessLibrary
	}

	namespace n_UMaterialExpressionAtmosphericFogColor {
		constexpr auto WorldPosition = 0x40; // FExpressionInput
	}

	namespace n_ULevelActorContainer {
		constexpr auto Actors = 0x28; // TArray<AActor*>
	}

	namespace n_UDynamicEntryBoxBase {
		constexpr auto EntryBoxType = 0x108; // EDynamicBoxType
		constexpr auto EntrySpacing = 0x10c; // FVector2D
		constexpr auto SpacingPattern = 0x118; // TArray<FVector2D>
		constexpr auto EntrySizeRule = 0x128; // FSlateChildSize
		constexpr auto EntryHorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto EntryVerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto MaxElementSize = 0x134; // int32_t
		constexpr auto RadialBoxSettings = 0x138; // FRadialBoxSettings
		constexpr auto EntryWidgetPool = 0x158; // FUserWidgetPool
	}

	namespace n_UMaterialExpressionTransformPosition {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto TransformSourceType = 0x54; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0x55; // EMaterialPositionTransformSource
	}

	namespace n_UUMGSequenceTickManager {
		constexpr auto WeakUserWidgets = 0x28; // TSet<TWeakObjectPtr<UUserWidget>>
		constexpr auto Linker = 0x78; // UMovieSceneEntitySystemLinker*
	}

	namespace n_UBTComposite_SimpleParallel {
		constexpr auto FinishMode = 0x90; // EBTParallelMode
	}

	namespace n_USGItem {
		constexpr auto ItemIcon = 0x28; // TSoftObjectPtr<UTexture2D>
		constexpr auto ComsumedIcon = 0x50; // TSoftObjectPtr<UTexture2D>
		constexpr auto ItemName = 0x78; // FText
		constexpr auto bCustomItemName = 0x90; // char : 1
		constexpr auto Description = 0x98; // FText
		constexpr auto Param1 = 0xb0; // FString
		constexpr auto Param2 = 0xc0; // FString
		constexpr auto Param3 = 0xd0; // FString
		constexpr auto Param4 = 0xe0; // FString
		constexpr auto Param5 = 0xf0; // FString
		constexpr auto MaxAmount = 0x100; // int32_t
		constexpr auto InitMaxDurable = 0x104; // int32_t
		constexpr auto bUseQuality = 0x108; // char : 1
		constexpr auto bUseDurableCanMerge = 0x108; // char : 1
		constexpr auto ItemQualityType = 0x109; // EItemQualityType
		constexpr auto ArmorQualityMul = 0x10c; // float [0x7]
		constexpr auto ArmorDurableQualityMul = 0x128; // float [0x7]
		constexpr auto WeaponQualityMul = 0x144; // float [0x7]
		constexpr auto WeaponCollectionQualityMul = 0x160; // float [0x7]
		constexpr auto WeaponDurableQualityMul = 0x17c; // float [0x7]
		constexpr auto HumanEquipmentSlotType = 0x198; // EHumanEquipmentSlotType
		constexpr auto HorseEquipmentSlotType = 0x199; // EHorseEquipmentSlotType
		constexpr auto SiegeEquipmentSlotType = 0x19a; // ESiegeEquipmentSlotType
		constexpr auto EquipmentType = 0x19b; // EEquipmentType
		constexpr auto EquipmentFlagSetting = 0x19c; // FChangeEquipStateMaterialSetting
		constexpr auto CanEquipedTypes = 0x1b8; // TArray<ECharacterType>
		constexpr auto bShowUnderwaist = 0x1c8; // char : 1
		constexpr auto ClothBrokenParticle = 0x1d0; // UParticleSystem*
		constexpr auto DestroyedMesh_Male = 0x1d8; // FSoftObjectPath
		constexpr auto DestroyedMesh_Female = 0x1f0; // FSoftObjectPath
		constexpr auto BrokenParticleVelocityMin = 0x208; // float
		constexpr auto BrokenParticleVelocityMax = 0x20c; // float
		constexpr auto WeaponHoldType = 0x210; // EWeaponHoldType
		constexpr auto ComponentToAttach_Male = 0x218; // UActorComponent*
		constexpr auto GroomToAttach_Male = 0x220; // UActorComponent*
		constexpr auto ComponentToAttach_Female = 0x228; // UActorComponent*
		constexpr auto GroomToAttach_Female = 0x230; // UActorComponent*
		constexpr auto ClothMaterial = 0x238; // TArray<UMaterialInterface*>
		constexpr auto SocketToAttachTo = 0x248; // FName
		constexpr auto LocationOffset = 0x250; // FVector
		constexpr auto RotatorOffset = 0x25c; // FRotator
		constexpr auto UsePoisonIndexTypeMap = 0x268; // TMap<int32_t, USGItem*>
		constexpr auto PoisonAmount = 0x2b8; // int32_t
		constexpr auto PoisonBuff = 0x2c0; // USGBuff*
		constexpr auto PoisonBuffRate = 0x2c8; // float
		constexpr auto CreatePoisonProjectileTemplate = 0x2d0; // TArray<USGItem*>
		constexpr auto UniqueId = 0x2e0; // FGuid
		constexpr auto SlotIndex = 0x2f0; // int32_t
		constexpr auto EquipWeaponSlot = 0x2f4; // EEquipWeaponSlot
		constexpr auto Amount = 0x2f8; // int32_t
		constexpr auto ExtraAmount = 0x2fc; // int32_t
		constexpr auto LuckAmount = 0x300; // int32_t
		constexpr auto PerkAddAmount = 0x304; // int32_t
		constexpr auto Durable = 0x308; // int32_t
		constexpr auto MaxDurable = 0x30c; // int32_t
		constexpr auto ItemQuality = 0x310; // EItemQuality
		constexpr auto LeftPoison = 0x314; // int32_t
		constexpr auto CurUsePoisonIndex = 0x318; // int32_t
		constexpr auto TransportMachineGuid = 0x31c; // FGuid
		constexpr auto TransportXianChengKey = 0x32c; // int32_t
		constexpr auto TransportTick = 0x330; // int64_t
		constexpr auto TransportPVPType = 0x338; // EGameServerPVPType
		constexpr auto bSavedToPlayer = 0x339; // char : 1
		constexpr auto ShopPropsIndex = 0x33c; // int32_t
		constexpr auto CapitalType = 0x340; // ECapitalType
		constexpr auto FoodBoxInfo = 0x348; // TArray<FSGFoodBoxInfo>
		constexpr auto CompressFlag = 0x358; // char
		constexpr auto OwnerInventory = 0x35c; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto AssociatedWeapon = 0x364; // TWeakObjectPtr<ASGWeapon>
		constexpr auto Level = 0x36c; // int32_t
		constexpr auto GenerateBuffLevel = 0x370; // int32_t
		constexpr auto TameLevel = 0x374; // int32_t
		constexpr auto QualityCorrection = 0x378; // float
		constexpr auto SoftItemActorClass = 0x380; // FSoftClassPath
		constexpr auto SoftItemToStructure = 0x398; // TArray<FSoftClassPath>
		constexpr auto bEquipAutoSpawnStructure = 0x3a8; // char : 1
		constexpr auto QuenchCraftItem = 0x3b0; // USGItem*
		constexpr auto BeforeQuenchItem = 0x3b8; // USGItem*
		constexpr auto FurDatabase = 0x3c0; // USGFurDatabase* [0x2]
		constexpr auto bCanUse = 0x3d0; // char : 1
		constexpr auto bCanCrouchUse = 0x3d0; // char : 1
		constexpr auto bCanRideUse = 0x3d0; // char : 1
		constexpr auto bCanGeneralUse = 0x3d0; // char : 1
		constexpr auto bCanSiegeUse = 0x3d0; // char : 1
		constexpr auto bCanRideTameUse = 0x3d0; // char : 1
		constexpr auto RideTameComponentToAttach = 0x3d8; // UActorComponent*
		constexpr auto SaddleReinsComponentToAttach = 0x3e0; // USkeletalMeshComponent*
		constexpr auto bCanRecharge = 0x3e8; // char : 1
		constexpr auto bCanCosumeForTarget = 0x3e8; // char : 1
		constexpr auto ConsumeTargetTypes = 0x3f0; // TArray<AActor*>
		constexpr auto bCanCosumeForSelf = 0x400; // char : 1
		constexpr auto bUseDurable = 0x400; // char : 1
		constexpr auto bInitDurableFull = 0x400; // char : 1
		constexpr auto bCanDrop = 0x400; // char : 1
		constexpr auto bCanMove = 0x400; // char : 1
		constexpr auto bCanTransport = 0x400; // char : 1
		constexpr auto bCanPVETransport = 0x400; // char : 1
		constexpr auto bIsCraftInStructure = 0x400; // char : 1
		constexpr auto bCraftNeedGuildAuthority = 0x401; // char : 1
		constexpr auto bNeedGuildIsXianZhang = 0x401; // char : 1
		constexpr auto CraftInStructureItem = 0x408; // TArray<USGItem*>
		constexpr auto bIsUseInStructure = 0x418; // char : 1
		constexpr auto bIsCraftInActiveStructure = 0x418; // char : 1
		constexpr auto CraftInActiveStructureTemperature = 0x41c; // int32_t
		constexpr auto MaxCanCraftAmount = 0x420; // int32_t
		constexpr auto bPreventGivingFromDemolish = 0x424; // char : 1
		constexpr auto bExpireAfterXianChengOccupied = 0x424; // char : 1
		constexpr auto bCanCreateStructure = 0x424; // char : 1
		constexpr auto bCanSetGuildID = 0x424; // char : 1
		constexpr auto GuildId = 0x428; // FGuid
		constexpr auto bFromTrapAnimal = 0x438; // char : 1
		constexpr auto TrapAnimalLevelMin = 0x43c; // int32_t
		constexpr auto TrapAnimalLevelMax = 0x440; // int32_t
		constexpr auto TrapAnimalSpeciesIndex = 0x444; // int32_t
		constexpr auto TrapAnimalName = 0x448; // FString
		constexpr auto TrapAnimalScale = 0x458; // FVector
		constexpr auto TrapAnimalLevel = 0x464; // int32_t
		constexpr auto TrapAnimalSex = 0x468; // ECharacterSex
		constexpr auto TrapAnimalSpecies = 0x46c; // int32_t
		constexpr auto BaseCraftResourceRequirements = 0x470; // TArray<FCraftResourceRequirement>
		constexpr auto AddCraftQuantity = 0x480; // int32_t
		constexpr auto TimeToCraft = 0x484; // float
		constexpr auto bAutoCraft = 0x488; // char : 1
		constexpr auto BaseCraftExperienceToAdd = 0x48c; // float
		constexpr auto BaseExploitExperienceToAdd = 0x490; // float
		constexpr auto ItemCraftSkillType = 0x494; // EItemCraftSkillType
		constexpr auto NextCraftRemainTime = 0x498; // float
		constexpr auto ExpiredItem = 0x4a0; // USGItem*
		constexpr auto ExpireTime = 0x4a8; // float
		constexpr auto bStopExpireTime = 0x4ac; // char : 1
		constexpr auto ExpireRemaingTime = 0x4b0; // float
		constexpr auto ItemType = 0x4b4; // EItemType
		constexpr auto ItemSubType = 0x4b5; // EItemSubType
		constexpr auto bUseItemSubTypeShowTips = 0x4b6; // char : 1
		constexpr auto AmmoType = 0x4b7; // EAmmoType
		constexpr auto ItemConsumeType = 0x4b8; // TArray<EConsumeItemType>
		constexpr auto ItemConsumeCD = 0x4c8; // float
		constexpr auto ResourceType = 0x4cc; // EResourceType
		constexpr auto bCanEquip = 0x4cd; // char : 1
		constexpr auto SortWeight = 0x4d0; // int32_t
		constexpr auto bPlayConsumeMontage = 0x4d4; // char : 1
		constexpr auto ConsumeSoundID = 0x4d8; // FName
		constexpr auto PlayConsumeMontageType = 0x4e0; // EPlayConsumeMontageType
		constexpr auto ConsumeMontage = 0x4e8; // UAnimMontage*
		constexpr auto SlashingArmor = 0x4f0; // float
		constexpr auto PiercingArmor = 0x4f4; // float
		constexpr auto CrushingArmor = 0x4f8; // float
		constexpr auto SiegeArmor = 0x4fc; // float
		constexpr auto IsHeavyArmor = 0x500; // bool
		constexpr auto Hardness = 0x504; // int32_t
		constexpr auto ChargeRes = 0x508; // float
		constexpr auto Charge = 0x50c; // float
		constexpr auto BaseChargeDamage = 0x510; // float
		constexpr auto SpeedBonusRate = 0x514; // float
		constexpr auto MoveSpeedPunish = 0x518; // float
		constexpr auto UseAmmoIndexTypeMap = 0x520; // TMap<int32_t, USGItem*>
		constexpr auto CurUseAmmoIndex = 0x570; // int32_t
		constexpr auto AddBuffs = 0x578; // TArray<USGBuff*>
		constexpr auto ModifyData = 0x588; // TArray<FModifyData>
		constexpr auto ServerCheckConsumeItemDistance = 0x598; // float
		constexpr auto bCanExchange = 0x59c; // char : 1
		constexpr auto bCanRepair = 0x59c; // char : 1
		constexpr auto bPerkStructureRepairInSelf = 0x59c; // char : 1
		constexpr auto bRepairRequiresInStructure = 0x59c; // char : 1
		constexpr auto FullRepairExperienceToAdd = 0x5a0; // float
		constexpr auto FuelTemperature = 0x5a4; // int32_t
		constexpr auto RepairResourceRequirements = 0x5a8; // TArray<FCraftResourceRequirement>
		constexpr auto bBrokenDestroy = 0x5b8; // char : 1
		constexpr auto BrokenGiveItemClass = 0x5c0; // USGItem*
		constexpr auto BrokenVelocity = 0x5c8; // FVector
		constexpr auto RepairReduceDurablePercent = 0x5d4; // float
		constexpr auto bDeadChangeDurable = 0x5d8; // char : 1
		constexpr auto bZeroDurableRemoveAmount = 0x5d8; // char : 1
		constexpr auto ZeroDurableGiveItemClass = 0x5e0; // USGItem*
		constexpr auto bMaxDurableRemoveAmount = 0x5e8; // char : 1
		constexpr auto MaxDurableGiveItemClass = 0x5f0; // USGItem*
		constexpr auto bNeedQuench = 0x5f8; // char : 1
		constexpr auto QuenchTime = 0x5fc; // float
		constexpr auto QuenchResourceRequirement = 0x600; // TMap<EItemQuality, FFunctionResourceArray>
		constexpr auto Weight = 0x650; // float
		constexpr auto MinNPCSpawnRadius = 0x654; // float
		constexpr auto MaxNPCSpawnRadius = 0x658; // float
		constexpr auto TooltipsClass = 0x660; // USGToolTipWidget*
		constexpr auto HuKouBindPlayerID = 0x668; // FGuid
		constexpr auto HuKouBindServerID = 0x678; // int32_t
		constexpr auto HuKouBindXianchengKey = 0x67c; // int32_t
		constexpr auto HuKouExpireTime = 0x680; // float
		constexpr auto AdditiveSoundID = 0x684; // FName
		constexpr auto NoiseValue = 0x68c; // float
		constexpr auto EquippedAddInventoryMaxAmount = 0x690; // int32_t
		constexpr auto PriceType = 0x694; // ECapitalType
		constexpr auto Price = 0x698; // int32_t
		constexpr auto OccupySellPrice = 0x69c; // float
		constexpr auto bDontCalTotal = 0x6a0; // char : 1
		constexpr auto ReduceRebornMinutes = 0x6a4; // float
		constexpr auto AddLifeCount = 0x6a8; // int32_t
		constexpr auto AddStoreFoods = 0x6ac; // float
		constexpr auto AddStoreMoods = 0x6b0; // float
		constexpr auto AWEffectPerk = 0x6b8; // TArray<FArtofWarItem>
		constexpr auto AddLoyalty = 0x6c8; // float
		constexpr auto MaxAddToLoyalty = 0x6cc; // float
		constexpr auto AddTame = 0x6d0; // float
		constexpr auto HerbCraftMoreAmount = 0x6d4; // int32_t
		constexpr auto ResourceItemType = 0x6d8; // EResourceItemType
		constexpr auto ItemActorClassRef = 0x6f0; // AActor*
		constexpr auto ItemToStructureRef = 0x6f8; // TArray<ASGStructure*>
		constexpr auto BaoZangPositionIndex = 0x708; // int32_t
		constexpr auto BaoZangType = 0x70c; // EBaoZangType
		constexpr auto CraftAddSkillExp = 0x710; // float
		constexpr auto RepairAddSkillExp = 0x714; // float
		constexpr auto UseAddSkillExp = 0x718; // float
		constexpr auto FinishCraftRepairAddSkillType = 0x71c; // EItemCraftSkillType
		constexpr auto FoodBoxMaxFoodAmount = 0x720; // int32_t
		constexpr auto LegendId = 0x724; // int32_t
		constexpr auto LegendItemType = 0x728; // ELegendItemType
		constexpr auto LegendAddHPMul = 0x72c; // float
		constexpr auto AssociatedSkinItemClass = 0x730; // USGItem*
		constexpr auto SkinArmorSlashingMul = 0x738; // float
		constexpr auto SkinArmorPiercingMul = 0x73c; // float
		constexpr auto SkinArmorCrushingMul = 0x740; // float
		constexpr auto SkinArmorSiegeMul = 0x744; // float
		constexpr auto SkinWeaponSlashingMul = 0x748; // float
		constexpr auto SkinWeaponPiercingMul = 0x74c; // float
		constexpr auto SkinWeaponCrushingMul = 0x750; // float
		constexpr auto SkinWeaponSiegeMul = 0x754; // float
		constexpr auto bUseDateExpire = 0x758; // char : 1
		constexpr auto ExpiredDays = 0x75c; // int32_t
		constexpr auto ExpireDateTime = 0x760; // FDateTime
		constexpr auto ProtectionEVValue = 0x768; // float [0x4]
		constexpr auto Strengthen_Index = 0x778; // int32_t
		constexpr auto Strengthen_Durable = 0x77c; // int32_t
		constexpr auto StrengthenItem = 0x780; // TArray<USGItem*>
		constexpr auto StrengthenKey = 0x790; // FString
		constexpr auto StrengthenCount = 0x7a0; // int32_t
		constexpr auto Strengthen_DurablePCT = 0x7a4; // float
		constexpr auto Strengthen_SlashingDamage = 0x7a8; // float
		constexpr auto Strengthen_PiercingDamage = 0x7ac; // float
		constexpr auto Strengthen_CrushingDamage = 0x7b0; // float
		constexpr auto Strengthen_SiegeDamage = 0x7b4; // float
		constexpr auto Strengthen_CollectionDamage = 0x7b8; // float
		constexpr auto Strengthen_Tenacity = 0x7bc; // int32_t
		constexpr auto Strengthen_SlashingArmor = 0x7c0; // float
		constexpr auto Strengthen_PiercingArmor = 0x7c4; // float
		constexpr auto Strengthen_CrushingArmor = 0x7c8; // float
		constexpr auto Strengthen_SiegeArmor = 0x7cc; // float
		constexpr auto bHasInitStrengh = 0x7d0; // char : 1
		constexpr auto CanUsedByGeneral = 0x7d1; // bool
		constexpr auto CanUsedByPlayer = 0x7d2; // bool
		constexpr auto PlayerUseLevelLimit = 0x7d4; // int32_t
		constexpr auto GeneralUseLevelLimit = 0x7d8; // int32_t
		constexpr auto PlayerUseSkillLevelLimit = 0x7dc; // int32_t
		constexpr auto GeneralUseSkillLevellLimit = 0x7e0; // int32_t
		constexpr auto AddSkillValue = 0x7e8; // double
		constexpr auto AddSkillType = 0x7f0; // ESkillType
		constexpr auto TrafficGoodsIndex = 0x7f4; // int32_t
		constexpr auto GoodsType = 0x7f8; // TrafficGoodsType
		constexpr auto LockTime = 0x800; // FDateTime
		constexpr auto NeedCheckDLC = 0x808; // bool
		constexpr auto DLCList = 0x810; // TArray<int32_t>
		constexpr auto AddItemReason = 0x820; // EInventoryItemChangeReason
		constexpr auto ItemLogLevel = 0x821; // EItemDBLogLevel
		constexpr auto AppraisalDistance = 0x824; // int32_t
		constexpr auto TelescopeDurationTime = 0x828; // int32_t
		constexpr auto WalletCapitalAmount = 0x82c; // int32_t
		constexpr auto WalletCapitalType = 0x830; // ECapitalType
		constexpr auto RiderPlevisModifyData = 0x834; // FModifyConfig
		constexpr auto RiderLeftCalfModifyData = 0x880; // FModifyConfig
		constexpr auto RiderLeftFootModifyData = 0x8cc; // FModifyConfig
		constexpr auto RiderRightCalfModifyData = 0x918; // FModifyConfig
		constexpr auto RiderRightFootModifyData = 0x964; // FModifyConfig
		constexpr auto bCustomFlag = 0x9b0; // char : 1
		constexpr auto FlagPreviewIcon = 0x9b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto FlagImageModifies = 0x9e0; // float [0x5]
		constexpr auto FlagMaterialSlotName = 0x9f4; // FName
		constexpr auto FlagImageString = 0xa00; // FString
		constexpr auto bExistOnlyOnStructureSeat = 0xa10; // char : 1
		constexpr auto bIsFuelGuideItem = 0xa10; // char : 1
		constexpr auto ActivityNumber = 0xa11; // EActivityNumber
		constexpr auto ActivityUseMaxCount = 0xa14; // int32_t
		constexpr auto SpwanCharacterList = 0xa18; // TArray<FItemSpwanCharacter>
		constexpr auto UseDropItem = 0xa28; // bool
		constexpr auto DropItemData = 0xa2c; // FDeathDropItemData
		constexpr auto FireworksClass = 0xa38; // AActor*
		constexpr auto NeedWeaponClass = 0xa40; // ASGWeapon*
	}

	namespace n_UUI_OccupyGuildEventPanel {
		constexpr auto CapitalBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto RemoteActor = 0x328; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x330; // USGUI*
		constexpr auto LoadingCanvas = 0x338; // UCanvasPanel*
		constexpr auto StartedSizeBox = 0x340; // USizeBox*
		constexpr auto RansomCapitalImage = 0x348; // UImage*
		constexpr auto RansomCapitalTextBlock = 0x350; // UTextBlock*
		constexpr auto RansomButton = 0x358; // UButton*
		constexpr auto SlotVerticalBox = 0x360; // UVerticalBox*
		constexpr auto OccupyGuildEventSlotClass = 0x368; // UUI_StructureOccupyGuildEventSlot*
	}

	namespace n_UVehicleCampPanel {
		constexpr auto DefaultShowNum = 0x260; // int32_t
		constexpr auto VehicleCampSlotTemplate = 0x268; // UVehicleCampSlot*
		constexpr auto VehicleCampSlotMargin = 0x270; // FMargin
		constexpr auto VehicleCampSlotWidth = 0x280; // float
		constexpr auto ParentUI = 0x288; // UUI_VehicleCamp*
		constexpr auto GeneralButton = 0x290; // UOptionButton*
		constexpr auto HorseButton = 0x298; // UOptionButton*
		constexpr auto VehicleNum = 0x2a0; // UTextBlock*
		constexpr auto WarTypePanel = 0x2a8; // UHorizontalBox*
		constexpr auto WarPagePanel = 0x2b0; // UCanvasPanel*
		constexpr auto WarPageUpBtn = 0x2b8; // UButton*
		constexpr auto WarPageText = 0x2c0; // UTextBlock*
		constexpr auto WarPageDownBtn = 0x2c8; // UButton*
		constexpr auto WorkTypePanel = 0x2d0; // UHorizontalBox*
		constexpr auto WorkPagePanel = 0x2d8; // UCanvasPanel*
		constexpr auto WorkPageUpBtn = 0x2e0; // UButton*
		constexpr auto WorkPageText = 0x2e8; // UTextBlock*
		constexpr auto WorkPageDownBtn = 0x2f0; // UButton*
		constexpr auto RestTypePanel = 0x2f8; // UHorizontalBox*
		constexpr auto RestPagePanel = 0x300; // UCanvasPanel*
		constexpr auto RestPageUpBtn = 0x308; // UButton*
		constexpr auto RestPageText = 0x310; // UTextBlock*
		constexpr auto RestPageDownBtn = 0x318; // UButton*
		constexpr auto VehicleCampSlotList = 0x320; // TArray<UVehicleCampSlot*>
	}

	namespace n_UVideoCaptureProtocol {
		constexpr auto bUseCompression = 0x68; // bool
		constexpr auto CompressionQuality = 0x6c; // float
	}

	namespace n_UVectorField {
		constexpr auto Bounds = 0x28; // FBox
		constexpr auto Intensity = 0x44; // float
	}

	namespace n_UOccupyPOITips {
		constexpr auto GuildText = 0x288; // UTextBlock*
		constexpr auto ProtectionRadius = 0x290; // UTextBlock*
		constexpr auto Prestige = 0x298; // UTextBlock*
		constexpr auto ProtectDay = 0x2a0; // URichTextBlock*
		constexpr auto SearchTimeText = 0x2a8; // UTextBlock*
	}

	namespace n_UMediaPlaylist {
		constexpr auto Items = 0x28; // TArray<UMediaSource*>
	}

	namespace n_USGAchievementToolTipWidget {
		constexpr auto TbName = 0x288; // UTextBlock*
		constexpr auto HbName = 0x290; // UHorizontalBox*
		constexpr auto TbDescription = 0x298; // UTextBlock*
		constexpr auto HbDescription = 0x2a0; // UHorizontalBox*
	}

	namespace n_USplineComponent {
		constexpr auto SplineCurves = 0x488; // FSplineCurves
		constexpr auto SplineInfo = 0x4f8; // FInterpCurveVector
		constexpr auto SplineRotInfo = 0x510; // FInterpCurveQuat
		constexpr auto SplineScaleInfo = 0x528; // FInterpCurveVector
		constexpr auto SplineReparamTable = 0x540; // FInterpCurveFloat
		constexpr auto bAllowSplineEditingPerInstance = 0x558; // bool
		constexpr auto ReparamStepsPerSegment = 0x55c; // int32_t
		constexpr auto Duration = 0x560; // float
		constexpr auto bStationaryEndpoints = 0x564; // bool
		constexpr auto bSplineHasBeenEdited = 0x565; // bool
		constexpr auto bModifiedByConstructionScript = 0x566; // bool
		constexpr auto bInputSplinePointsToConstructionScript = 0x567; // bool
		constexpr auto bDrawDebug = 0x568; // bool
		constexpr auto bClosedLoop = 0x569; // bool
		constexpr auto bLoopPositionOverride = 0x56a; // bool
		constexpr auto LoopPosition = 0x56c; // float
		constexpr auto DefaultUpVector = 0x570; // FVector
	}

	namespace n_USkillPanel {
		constexpr auto NormalPerkPanel = 0x260; // UUniformGridPanel*
		constexpr auto WeakPerkPanel = 0x268; // UHorizontalBox*
		constexpr auto AngryPerkPanel = 0x270; // UHorizontalBox*
		constexpr auto GodPerkPanel = 0x278; // UHorizontalBox*
		constexpr auto BindCharacter = 0x280; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto GeneralPerkSlotTemplate = 0x288; // UPerkSlot*
		constexpr auto ParentUI = 0x290; // USGUI*
	}

	namespace n_UInAppPurchaseRestoreCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureOutput {
		constexpr auto BaseColor = 0x40; // FExpressionInput
		constexpr auto Specular = 0x54; // FExpressionInput
		constexpr auto Roughness = 0x68; // FExpressionInput
		constexpr auto Normal = 0x7c; // FExpressionInput
		constexpr auto WorldHeight = 0x90; // FExpressionInput
		constexpr auto Opacity = 0xa4; // FExpressionInput
		constexpr auto Mask = 0xb8; // FExpressionInput
	}

	namespace n_UAnimNotify_PlayMontageNotify {
		constexpr auto NotifyName = 0x38; // FName
	}

	namespace n_UUI_StructureOccupyBuffPanel {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto ProtectBox = 0x270; // UVerticalBox*
		constexpr auto OccupyBuffSlotClass = 0x278; // UUI_StructureOccupyBuffSlot*
	}

	namespace n_UPartyBeaconState {
		constexpr auto SessionName = 0x28; // FName
		constexpr auto NumConsumedReservations = 0x30; // int32_t
		constexpr auto MaxReservations = 0x34; // int32_t
		constexpr auto NumTeams = 0x38; // int32_t
		constexpr auto NumPlayersPerTeam = 0x3c; // int32_t
		constexpr auto TeamAssignmentMethod = 0x40; // FName
		constexpr auto ReservedHostTeamNum = 0x48; // int32_t
		constexpr auto ForceTeamNum = 0x4c; // int32_t
		constexpr auto bRestrictCrossConsole = 0x50; // bool
		constexpr auto bEnableRemovalRequests = 0x51; // bool
		constexpr auto Reservations = 0x58; // TArray<FPartyReservation>
	}

	namespace n_ANavigationObjectBase {
		constexpr auto CapsuleComponent = 0x318; // UCapsuleComponent*
		constexpr auto GoodSprite = 0x320; // UBillboardComponent*
		constexpr auto BadSprite = 0x328; // UBillboardComponent*
		constexpr auto bIsPIEPlayerStart = 0x330; // char : 1
	}

	namespace n_UMotoSynthPreset {
		constexpr auto Settings = 0x28; // FMotoSynthRuntimeSettings
	}

	namespace n_UMovieSceneSection {
		constexpr auto EvalOptions = 0x50; // FMovieSceneSectionEvalOptions
		constexpr auto Easing = 0x58; // FMovieSceneEasingSettings
		constexpr auto SectionRange = 0x90; // FMovieSceneFrameRange
		constexpr auto PreRollFrames = 0xa0; // FFrameNumber
		constexpr auto PostRollFrames = 0xa4; // FFrameNumber
		constexpr auto RowIndex = 0xa8; // int32_t
		constexpr auto OverlapPriority = 0xac; // int32_t
		constexpr auto bIsActive = 0xb0; // char : 1
		constexpr auto bIsLocked = 0xb0; // char : 1
		constexpr auto StartTime = 0xb4; // float
		constexpr auto EndTime = 0xb8; // float
		constexpr auto PrerollTime = 0xbc; // float
		constexpr auto PostrollTime = 0xc0; // float
		constexpr auto bIsInfinite = 0xc4; // char : 1
		constexpr auto bSupportsInfiniteRange = 0xc8; // bool
		constexpr auto BlendType = 0xc9; // FOptionalMovieSceneBlendType
	}

	namespace n_UMaterialExpressionConstant {
		constexpr auto R = 0x40; // float
	}

	namespace n_UBlueprint {
		constexpr auto ParentClass = 0x50; // UObject*
		constexpr auto BlueprintType = 0x58; // EBlueprintType
		constexpr auto bRecompileOnLoad = 0x59; // char : 1
		constexpr auto bHasBeenRegenerated = 0x59; // char : 1
		constexpr auto bIsRegeneratingOnLoad = 0x59; // char : 1
		constexpr auto BlueprintSystemVersion = 0x5c; // int32_t
		constexpr auto SimpleConstructionScript = 0x60; // USimpleConstructionScript*
		constexpr auto ComponentTemplates = 0x68; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x78; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x88; // TArray<FBPComponentClassOverride>
		constexpr auto InheritableComponentHandler = 0x98; // UInheritableComponentHandler*
	}

	namespace n_UAbilityTask_WaitOverlap {
		constexpr auto OnOverlap = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UVolumetricCloudComponent {
		constexpr auto LayerBottomAltitude = 0x208; // float
		constexpr auto LayerHeight = 0x20c; // float
		constexpr auto TracingStartMaxDistance = 0x210; // float
		constexpr auto TracingMaxDistance = 0x214; // float
		constexpr auto PlanetRadius = 0x218; // float
		constexpr auto GroundAlbedo = 0x21c; // FColor
		constexpr auto Material = 0x220; // UMaterialInterface*
		constexpr auto bUsePerSampleAtmosphericLightTransmittance = 0x228; // char : 1
		constexpr auto SkyLightCloudBottomOcclusion = 0x22c; // float
		constexpr auto ViewSampleCountScale = 0x230; // float
		constexpr auto ReflectionSampleCountScale = 0x234; // float
		constexpr auto ShadowViewSampleCountScale = 0x238; // float
		constexpr auto ShadowReflectionSampleCountScale = 0x23c; // float
		constexpr auto ShadowTracingDistance = 0x240; // float
	}

	namespace n_UAIPerceptionStimuliSourceComponent {
		constexpr auto bAutoRegisterAsSource = 0xc0; // char : 1
		constexpr auto RegisterAsSourceForSenses = 0xc8; // TArray<UAISense*>
	}

	namespace n_ABP_HorseMC_C {
		constexpr auto UberGraphFrame = 0x3c00; // FPointerToUberGraphFrame
		constexpr auto Eff_Oth_Smoke_Trail_V0 = 0x3c08; // UParticleSystemComponent*
	}

	namespace n_UMovieSceneByteSection {
		constexpr auto ByteCurve = 0xe8; // FMovieSceneByteChannel
	}

	namespace n_UInstancedStaticMeshComponent {
		constexpr auto PerInstanceSMData = 0x518; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumCustomDataFloats = 0x528; // int32_t
		constexpr auto PerInstanceSMCustomData = 0x530; // TArray<float>
		constexpr auto InstancingRandomSeed = 0x540; // int32_t
		constexpr auto InstanceStartCullDistance = 0x544; // int32_t
		constexpr auto InstanceEndCullDistance = 0x548; // int32_t
		constexpr auto bForceRequireCPUAccess = 0x54c; // char : 1
		constexpr auto InstanceReorderTable = 0x550; // TArray<int32_t>
		constexpr auto NumPendingLightmaps = 0x5a8; // int32_t
		constexpr auto CachedMappings = 0x5b0; // TArray<FInstancedStaticMeshMappingInfo>
	}

	namespace n_UMediaComponent {
		constexpr auto MediaTexture = 0xc0; // UMediaTexture*
		constexpr auto MediaPlayer = 0xc8; // UMediaPlayer*
	}

	namespace n_UMovieSceneCameraCutTrack {
		constexpr auto bCanBlend = 0x78; // bool
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieSceneAudioTrack {
		constexpr auto AudioSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UParticleModule {
		constexpr auto bSpawnModule = 0x28; // char : 1
		constexpr auto bUpdateModule = 0x28; // char : 1
		constexpr auto bFinalUpdateModule = 0x28; // char : 1
		constexpr auto bUpdateForGPUEmitter = 0x28; // char : 1
		constexpr auto bCurvesAsColor = 0x28; // char : 1
		constexpr auto b3DDrawMode = 0x28; // char : 1
		constexpr auto bSupported3DDrawMode = 0x28; // char : 1
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto bEditable = 0x29; // char : 1
		constexpr auto LODDuplicate = 0x29; // char : 1
		constexpr auto bSupportsRandomSeed = 0x29; // char : 1
		constexpr auto bRequiresLoopingNotification = 0x29; // char : 1
		constexpr auto LODValidity = 0x2a; // char
	}

	namespace n_UParticleModuleTypeDataAnimTrail {
		constexpr auto bDeadTrailsOnDeactivate = 0x30; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x30; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x30; // char : 1
		constexpr auto TilingDistance = 0x34; // float
		constexpr auto DistanceTessellationStepSize = 0x38; // float
		constexpr auto TangentTessellationStepSize = 0x3c; // float
		constexpr auto WidthTessellationStepSize = 0x40; // float
	}

	namespace n_UResonanceAudioReverbPluginPreset {
		constexpr auto Settings = 0xe0; // FResonanceAudioReverbPluginSettings
	}

	namespace n_UTimelineTemplate {
		constexpr auto TimelineLength = 0x28; // float
		constexpr auto LengthMode = 0x2c; // ETimelineLengthMode
		constexpr auto bAutoPlay = 0x2d; // char : 1
		constexpr auto bLoop = 0x2d; // char : 1
		constexpr auto bReplicated = 0x2d; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x2d; // char : 1
		constexpr auto EventTracks = 0x30; // TArray<FTTEventTrack>
		constexpr auto FloatTracks = 0x40; // TArray<FTTFloatTrack>
		constexpr auto VectorTracks = 0x50; // TArray<FTTVectorTrack>
		constexpr auto LinearColorTracks = 0x60; // TArray<FTTLinearColorTrack>
		constexpr auto MetaDataArray = 0x70; // TArray<FBPVariableMetaDataEntry>
		constexpr auto TimelineGuid = 0x80; // FGuid
		constexpr auto VariableName = 0x90; // FName
		constexpr auto DirectionPropertyName = 0x98; // FName
		constexpr auto UpdateFunctionName = 0xa0; // FName
		constexpr auto FinishedFunctionName = 0xa8; // FName
	}

	namespace n_UDatasmithLightComponentTemplate {
		constexpr auto bVisible = 0x30; // char : 1
		constexpr auto CastShadows = 0x34; // char : 1
		constexpr auto bUseTemperature = 0x34; // char : 1
		constexpr auto bUseIESBrightness = 0x34; // char : 1
		constexpr auto Intensity = 0x38; // float
		constexpr auto Temperature = 0x3c; // float
		constexpr auto IESBrightnessScale = 0x40; // float
		constexpr auto LightColor = 0x44; // FLinearColor
		constexpr auto LightFunctionMaterial = 0x58; // UMaterialInterface*
		constexpr auto IESTexture = 0x60; // UTextureLightProfile*
	}

	namespace n_UNetConnection {
		constexpr auto Children = 0x48; // TArray<UChildConnection*>
		constexpr auto Driver = 0x58; // UNetDriver*
		constexpr auto PackageMapClass = 0x60; // UPackageMap*
		constexpr auto PackageMap = 0x68; // UPackageMap*
		constexpr auto OpenChannels = 0x70; // TArray<UChannel*>
		constexpr auto SentTemporaries = 0x80; // TArray<AActor*>
		constexpr auto ViewTarget = 0x90; // AActor*
		constexpr auto OwningActor = 0x98; // AActor*
		constexpr auto MaxPacket = 0xa0; // int32_t
		constexpr auto InternalAck = 0xa4; // char : 1
		constexpr auto PlayerId = 0x160; // FUniqueNetIdRepl
		constexpr auto LastReceiveTime = 0x1d0; // double
		constexpr auto ChannelsToTick = 0x1518; // TArray<UChannel*>
	}

	namespace n_UMovieSceneTrackInstance {
		constexpr auto AnimatedObject = 0x28; // UObject*
		constexpr auto bIsMasterTrackInstance = 0x30; // bool
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
		constexpr auto Inputs = 0x40; // TArray<FMovieSceneTrackInstanceInput>
	}

	namespace n_UGizmoAxisScaleParameterSource {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0x58; // TScriptInterface<IGizmoTransformSource>
		constexpr auto ScaleMultiplier = 0x68; // float
		constexpr auto Parameter = 0x6c; // float
		constexpr auto LastChange = 0x70; // FGizmoFloatParameterChange
		constexpr auto CurScaleAxis = 0x78; // FVector
		constexpr auto CurScaleOrigin = 0x84; // FVector
		constexpr auto InitialTransform = 0x90; // FTransform
	}

	namespace n_UMovieSceneColorTrack {
		constexpr auto bIsSlateColor = 0xb0; // bool
	}

	namespace n_UMaterialExpressionArccosine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UCrowdManager {
		constexpr auto MyNavData = 0x28; // ANavigationData*
		constexpr auto AvoidanceConfig = 0x30; // TArray<FCrowdAvoidanceConfig>
		constexpr auto SamplingPatterns = 0x40; // TArray<FCrowdAvoidanceSamplingPattern>
		constexpr auto MaxAgents = 0x50; // int32_t
		constexpr auto MaxAgentRadius = 0x54; // float
		constexpr auto MaxAvoidedAgents = 0x58; // int32_t
		constexpr auto MaxAvoidedWalls = 0x5c; // int32_t
		constexpr auto NavmeshCheckInterval = 0x60; // float
		constexpr auto PathOptimizationInterval = 0x64; // float
		constexpr auto SeparationDirClamp = 0x68; // float
		constexpr auto PathOffsetRadiusMultiplier = 0x6c; // float
		constexpr auto bResolveCollisions = 0x70; // char : 1
	}

	namespace n_UDLSSSettings {
		constexpr auto bEnableDLSSD3D12 = 0x28; // bool
		constexpr auto bEnableDLSSD3D11 = 0x29; // bool
		constexpr auto bEnableDLSSVulkan = 0x2a; // bool
		constexpr auto bEnableDLSSInEditorViewports = 0x2b; // bool
		constexpr auto bEnableScreenpercentageManipulationInDLSSEditorViewports = 0x2c; // bool
		constexpr auto bEnableDLSSInPlayInEditorViewports = 0x2d; // bool
		constexpr auto bShowDLSSSDebugOnScreenMessages = 0x2e; // bool
		constexpr auto GenericDLSSBinaryPath = 0x30; // FString
		constexpr auto bGenericDLSSBinaryExists = 0x40; // bool
		constexpr auto NVIDIANGXApplicationId = 0x44; // uint32_t
		constexpr auto CustomDLSSBinaryPath = 0x48; // FString
		constexpr auto bCustomDLSSBinaryExists = 0x58; // bool
	}

	namespace n_UInterpTrackInstLinearColorProp {
		constexpr auto ResetColor = 0x58; // FLinearColor
	}

	namespace n_UJunSelectorWidget {
		constexpr auto ItemTemplate = 0x260; // UJunSelectorItem*
		constexpr auto DistrictFilterTemplate = 0x268; // UJunDistrictFilterWidget*
		constexpr auto UGPItem = 0x270; // UUniformGridPanel*
		constexpr auto MainScrollBox = 0x278; // UScrollBox*
		constexpr auto UGPDistrict = 0x280; // UUniformGridPanel*
		constexpr auto SelectItem = 0x298; // UJunSelectorItem*
		constexpr auto ItemList = 0x2a0; // TArray<UJunSelectorItem*>
		constexpr auto JunList = 0x2b0; // TArray<FJunSelectorConfig>
		constexpr auto Districts = 0x2c0; // TArray<int32_t>
		constexpr auto DistrictFilters = 0x2d0; // TArray<UJunDistrictFilterWidget*>
		constexpr auto CheckedDistricts = 0x2e0; // TArray<int32_t>
	}

	namespace n_USGTrafficGoods {
		constexpr auto TrafficGoodsTable = 0x28; // UDataTable*
		constexpr auto SellerTable = 0x30; // UDataTable*
		constexpr auto SellerLVCurve = 0x38; // UCurveTable*
		constexpr auto PriceRatioRefrehInterval = 0x40; // int32_t
		constexpr auto GoodsSellerNameMap = 0x48; // TMap<GoodsSellerType, FText>
		constexpr auto GoodsPriceRatioMap = 0x98; // TMap<TrafficGoodsType, FVector2D>
	}

	namespace n_UMovieSceneActorReferenceSection {
		constexpr auto ActorReferenceData = 0xe8; // FMovieSceneActorReferenceData
		constexpr auto ActorGuidIndexCurve = 0x198; // FIntegralCurve
		constexpr auto ActorGuidStrings = 0x218; // TArray<FString>
	}

	namespace n_APaperTerrainActor {
		constexpr auto DummyRoot = 0x310; // USceneComponent*
		constexpr auto SplineComponent = 0x318; // UPaperTerrainSplineComponent*
		constexpr auto RenderComponent = 0x320; // UPaperTerrainComponent*
	}

	namespace n_UMaterialExpressionStaticBool {
		constexpr auto Value = 0x40; // char : 1
	}

	namespace n_UConnectionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_USoundNodeDistanceCrossFade {
		constexpr auto CrossFadeInput = 0x48; // TArray<FDistanceDatum>
	}

	namespace n_UProceduralDiscToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto RadialSlices = 0x74; // int32_t
		constexpr auto RadialSubdivisions = 0x78; // int32_t
	}

	namespace n_UUVProjectionToolProperties {
		constexpr auto UVProjectionMethod = 0x60; // EUVProjectionMethod
		constexpr auto ProjectionPrimitiveScale = 0x64; // FVector
		constexpr auto CylinderProjectToTopOrBottomAngleThreshold = 0x70; // float
		constexpr auto UVScale = 0x74; // FVector2D
		constexpr auto UVOffset = 0x7c; // FVector2D
		constexpr auto bWorldSpaceUVScale = 0x84; // bool
	}

	namespace n_UScaleBox {
		constexpr auto Stretch = 0x120; // EStretch
		constexpr auto StretchDirection = 0x121; // EStretchDirection
		constexpr auto UserSpecifiedScale = 0x124; // float
		constexpr auto IgnoreInheritedScale = 0x128; // bool
	}

	namespace n_UPaperTileMapComponent {
		constexpr auto MapWidth = 0x4b0; // int32_t
		constexpr auto MapHeight = 0x4b4; // int32_t
		constexpr auto TileWidth = 0x4b8; // int32_t
		constexpr auto TileHeight = 0x4bc; // int32_t
		constexpr auto DefaultLayerTileSet = 0x4c0; // UPaperTileSet*
		constexpr auto Material = 0x4c8; // UMaterialInterface*
		constexpr auto TileLayers = 0x4d0; // TArray<UPaperTileLayer*>
		constexpr auto TileMapColor = 0x4e0; // FLinearColor
		constexpr auto UseSingleLayerIndex = 0x4f0; // int32_t
		constexpr auto bUseSingleLayer = 0x4f4; // bool
		constexpr auto TileMap = 0x4f8; // UPaperTileMap*
	}

	namespace n_UReplicationGraphNode {
		constexpr auto AllChildNodes = 0x28; // TArray<UReplicationGraphNode*>
	}

	namespace n_UAnimNotify_PlayNiagaraEffect {
		constexpr auto Template = 0x38; // UNiagaraSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto bAbsoluteScale = 0x64; // bool
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_USGDestructibleComponent {
		constexpr auto bUseExplode = 0x7c8; // char : 1
		constexpr auto bUseFrame = 0x7c8; // char : 1
		constexpr auto ExplodeAmountLerpCurve = 0x7d0; // UCurveFloat*
		constexpr auto ExplodeDirection = 0x7d8; // FVector
		constexpr auto ExplodeInterval = 0x7e4; // float
		constexpr auto bHasStaticChunk = 0x7e8; // char : 1
		constexpr auto InitAngularVelocity = 0x7ec; // float
		constexpr auto CustomChunkCount = 0x7f0; // int32_t
		constexpr auto ChunkStartExplodeTime = 0x7f8; // TArray<double>
		constexpr auto FrameChunkIndex = 0x808; // int32_t
		constexpr auto OnEndExplode = 0x810; // FMulticastInlineDelegate
	}

	namespace n_USGRichTextBlock {
		constexpr auto Text = 0x108; // FText
		constexpr auto WidgetStyle = 0x120; // FTextBlockStyle
		constexpr auto AutoWrapText = 0x390; // bool
		constexpr auto WrapTextAt = 0x394; // float
		constexpr auto Justification = 0x398; // ETextJustify
		constexpr auto Margin = 0x39c; // FMargin
		constexpr auto LineHeightPercentage = 0x3ac; // float
	}

	namespace n_UUI_CreateRole {
		constexpr auto BtnConfirm = 0x680; // UButton*
		constexpr auto TbConfirmCreate = 0x688; // UTextBlock*
		constexpr auto EtbName = 0x690; // UEditableTextBox*
		constexpr auto SexView = 0x698; // UUI_RadioButtonView*
	}

	namespace n_UBreakpoint {
		constexpr auto bEnabled = 0x28; // char : 1
		constexpr auto Node = 0x30; // UEdGraphNode*
		constexpr auto bStepOnce = 0x38; // char : 1
		constexpr auto bStepOnce_WasPreviouslyDisabled = 0x38; // char : 1
		constexpr auto bStepOnce_RemoveAfterHit = 0x38; // char : 1
	}

	namespace n_UMaterialExpressionLogarithm10 {
		constexpr auto X = 0x40; // FExpressionInput
	}

	namespace n_USourceEffectFoldbackDistortionPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectFoldbackDistortionSettings
	}

	namespace n_UAbilityTask_WaitGameplayEffectApplied_Self {
		constexpr auto OnApplied = 0x1b8; // FMulticastInlineDelegate
	}

	namespace n_USimpleItemSlot {
		constexpr auto ImgIcon = 0x260; // UImage*
		constexpr auto OutBorder = 0x268; // UBorder*
		constexpr auto UnactivedColor = 0x270; // FLinearColor
		constexpr auto OutBorder_Normal = 0x280; // FSlateBrush
		constexpr auto OutBorder_Hover = 0x308; // FSlateBrush
		constexpr auto Active_Brush = 0x390; // FSlateBrush
		constexpr auto IsHover = 0x418; // char : 1
		constexpr auto RootSGUI = 0x420; // USGUI*
		constexpr auto ParentUI = 0x428; // USGUI*
		constexpr auto bActived = 0x430; // char : 1
		constexpr auto iLeftDays = 0x434; // int32_t
		constexpr auto iTotalDays = 0x438; // float
		constexpr auto BindItemClass = 0x440; // USGItem*
		constexpr auto ToolTipsTemplate = 0x448; // USGToolTipWidget*
	}

	namespace n_UBookMark {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto HiddenLevels = 0x40; // TArray<FString>
	}

	namespace n_UMaterialExpressionClamp {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Min = 0x54; // FExpressionInput
		constexpr auto Max = 0x68; // FExpressionInput
		constexpr auto ClampMode = 0x7c; // EClampMode
		constexpr auto MinDefault = 0x80; // float
		constexpr auto MaxDefault = 0x84; // float
	}

	namespace n_UMaterialExpressionLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Alpha = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstAlpha = 0x84; // float
	}

	namespace n_UDistributionFloatUniform {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UBehaviorTree {
		constexpr auto RootNode = 0x30; // UBTCompositeNode*
		constexpr auto BlackboardAsset = 0x38; // UBlackboardData*
		constexpr auto RootDecorators = 0x40; // TArray<UBTDecorator*>
		constexpr auto RootDecoratorOps = 0x50; // TArray<FBTDecoratorLogic>
	}

	namespace n_ASG_AIController {
		constexpr auto SG_BaseCharacter = 0x418; // ABaseCharacter*
		constexpr auto BehaviorTreeAsset = 0x420; // UBehaviorTree*
		constexpr auto ExecutionTaskFrequency = 0x428; // int32_t
		constexpr auto bEnableUpdateRateOptimizations = 0x430; // char : 1
		constexpr auto FrequencyToSkipUpdateMap = 0x438; // TMap<float, float>
		constexpr auto ControlRotationInterpSpeed = 0x4a4; // float
		constexpr auto bIsDrawDebugPath = 0x4b4; // char : 1
		constexpr auto TetherTime = 0x4b8; // float
		constexpr auto TetherDistance = 0x4bc; // float
		constexpr auto NavPathPointNumber = 0x4c0; // int32_t
		constexpr auto CurrentNavPathIndex = 0x4c4; // int32_t
		constexpr auto NavPathEndLocation = 0x4c8; // FVector
		constexpr auto NavPathPathPoints = 0x4d8; // TArray<FVector>
		constexpr auto Struct_PathfindingStatusData = 0x4e8; // FSGPathfindingStatusData
		constexpr auto bIsValidNavPathToDesiredActor = 0x5d0; // char : 1
		constexpr auto bPauseAI = 0x5d0; // char : 1
		constexpr auto Enum_AIStatus = 0x5d2; // EAIStatusType
		constexpr auto Enum_AIPrevStatus = 0x5d3; // EAIStatusType
		constexpr auto CustomDesiredFollowLocation = 0x630; // FVector
		constexpr auto CustomAttackDesiredLocation = 0x63c; // FVector
		constexpr auto bProjectNavPathOnFormationLoc = 0x664; // char : 1
		constexpr auto ProjectNavPathQueryExtentOnFormation = 0x668; // FVector
		constexpr auto bIsForceFormation = 0x674; // char : 1
		constexpr auto SG_RoadPathConfigs = 0x678; // TArray<FRoadPathConfig>
		constexpr auto bAllowTagetPlayerCorpses = 0x688; // char : 1
		constexpr auto bAllowTagetCorpses = 0x688; // char : 1
		constexpr auto BaseAggroAmountToPlayer = 0x68c; // float
		constexpr auto BaseAggroAmountToAnimal = 0x690; // float
		constexpr auto BaseAggroAmountToWillDead = 0x694; // float
		constexpr auto BaseAggroAmountToCorpse = 0x698; // float
		constexpr auto BaseAggroAmountToStructure = 0x69c; // float
		constexpr auto BaseAggroAmountToSpecial = 0x6a0; // float
		constexpr auto AggroAmountToMultiplier = 0x6a8; // TMap<AActor*, float>
		constexpr auto ReceivedDamageToAggroMultiplier = 0x6f8; // float
		constexpr auto ReceivedDamageToAggroMultiplierByStructure = 0x6fc; // float
		constexpr auto CausedDamageToAggroMultiplier = 0x700; // float
		constexpr auto CausedDamageToAggroMultiplierByStructure = 0x704; // float
		constexpr auto AggroDecreaseInterval = 0x708; // float
		constexpr auto bUseFroceAggroDecrease = 0x70c; // char : 1
		constexpr auto FroceAggroDecreaseInterval = 0x710; // float
		constexpr auto AggroInvalidInterval = 0x714; // float
		constexpr auto bShouldCheckAttackDistance = 0x718; // char : 1
		constexpr auto bOnlyCheckAttackDistanceForPlayer = 0x718; // char : 1
		constexpr auto CurrentEnemy = 0x740; // TWeakObjectPtr<AActor>
		constexpr auto ForcedAttackEnemy = 0x748; // TWeakObjectPtr<AActor>
		constexpr auto ForcedAttackComponent = 0x750; // TWeakObjectPtr<UPrimitiveComponent>
		constexpr auto ForcedAttackLocation = 0x758; // FVector
		constexpr auto bNotifyFriendsSameClass = 0x764; // char : 1
		constexpr auto InclusionFriendsClass = 0x768; // TArray<ABaseCharacter*>
		constexpr auto NotifyFriendsMinAggro = 0x778; // float
		constexpr auto NotifyFriendsAggroMultiplier = 0x77c; // float
		constexpr auto NotifyFriendsSightMultiplier = 0x780; // float
		constexpr auto UpdateStimulusInterval = 0x784; // float
		constexpr auto UpdateStimulusStructureInterval = 0x788; // float
		constexpr auto SensesConfig_Sight = 0x790; // TArray<FSGAISenseConfig_Sight>
		constexpr auto SensesConfig_Hearing = 0x7a0; // FSGAISenseConfig_Hearing
		constexpr auto bCheckPlayerDistanceSquare = 0x7a8; // char : 1
		constexpr auto MinDisSqFromPlayerUpdateSightStimulus = 0x7ac; // float
		constexpr auto UpdateStimulusFrequency = 0x7d8; // TArray<int32_t>
		constexpr auto UpdateStimulusRate = 0x7e8; // int32_t
		constexpr auto UpdateStimulusCounter = 0x7ec; // int32_t
		constexpr auto bAllowSightStimulusStructure = 0x7f0; // char : 1
		constexpr auto bShowAIDebug = 0x7f0; // char : 1
		constexpr auto bCanForceFlee = 0x7f0; // char : 1
		constexpr auto StartForceFleeHealthPercentage = 0x7f4; // float
		constexpr auto EndForceFleeHealthPercentage = 0x7f8; // float
		constexpr auto FleeFixedDistance = 0x7fc; // float
		constexpr auto FleeRandomDistance = 0x800; // float
		constexpr auto EndFleeHPPercentage = 0x804; // float
		constexpr auto StartFleeHPPercentage = 0x808; // float
		constexpr auto bEnableVigilance = 0x818; // char : 1
		constexpr auto VigilanceMinRange = 0x81c; // float
		constexpr auto CrouchVigilanceAddValuePerSecond = 0x820; // float
		constexpr auto NormalVigilanceAddValuePerSecond = 0x824; // float
		constexpr auto SprintVigilanceAddValuePerSecond = 0x828; // float
		constexpr auto VigilanceReduceValuePerSecond = 0x82c; // float
		constexpr auto VigilanceReduceTimeInterval = 0x830; // float
		constexpr auto bAllowAttackBlockadeStrcuture = 0x840; // char : 1
	}

	namespace n_UMovieSceneCameraShakeSourceShakeTrack {
		constexpr auto CameraShakeSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UPolygonSelectionMechanicProperties {
		constexpr auto bSelectFaces = 0x60; // bool
		constexpr auto bSelectEdges = 0x61; // bool
		constexpr auto bSelectVertices = 0x62; // bool
		constexpr auto bPreferProjectedElement = 0x63; // bool
		constexpr auto bSelectDownRay = 0x64; // bool
		constexpr auto bIgnoreOcclusion = 0x65; // bool
	}

	namespace n_USGChatSubsystem {
		constexpr auto SignInTimerHandle = 0x278; // FTimerHandle
		constexpr auto CheckNoResponseTimerHandle = 0x280; // FTimerHandle
	}

	namespace n_UBattleAwardItemSlot {
		constexpr auto Image_ItemIcon = 0x2d8; // UImage*
		constexpr auto QualityBorder = 0x2e0; // UBorder*
		constexpr auto AmountText = 0x2e8; // UTextBlock*
		constexpr auto QualityBorderTexs = 0x2f0; // TSoftObjectPtr<UTexture2D> [0x7]
	}

	namespace n_UUI_PicBtn {
		constexpr auto BtnNormalCorlor = 0x260; // FSlateColor
		constexpr auto BtnActiveCorlor = 0x288; // FSlateColor
		constexpr auto BtnHoverColor = 0x2b0; // FSlateColor
		constexpr auto BtnClickColor = 0x2d8; // FSlateColor
		constexpr auto NormalIcon = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto ActiveIcon = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverIcon = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto ClickIcon = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto NShopMainBtnText = 0x3a0; // FText
		constexpr auto RootSizeBox = 0x3b8; // USizeBox*
		constexpr auto MainImage = 0x3c0; // UBorder*
		constexpr auto BtnText = 0x3c8; // UTextBlock*
	}

	namespace n_UVerticalBoxSlot {
		constexpr auto Size = 0x38; // FSlateChildSize
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UGuildStructureSlot {
		constexpr auto NameText = 0x260; // UTextBlock*
		constexpr auto AmountText = 0x268; // UTextBlock*
		constexpr auto IconImage = 0x270; // UImage*
		constexpr auto NoLimitString = 0x278; // FString
	}

	namespace n_UUI_KeySetting {
		constexpr auto KeySettingDataTable = 0x260; // UDataTable*
		constexpr auto ItemTemplate = 0x268; // UKeySettingItem*
		constexpr auto RadioButtonViewList = 0x270; // TArray<FName>
		constexpr auto SettingItemList = 0x290; // TArray<UKeySettingItem*>
		constexpr auto SelectKeySettingItem = 0x2a0; // UKeySettingItem*
		constexpr auto MainScrollBox = 0x2b0; // UScrollBox*
	}

	namespace n_ANavModifierVolume {
		constexpr auto AreaClass = 0x350; // UNavArea*
		constexpr auto bMaskFillCollisionUnderneathForNavmesh = 0x358; // bool
	}

	namespace n_UUI_AdminPrivateServerPanel {
		constexpr auto AdminBlockListPanel = 0x2d8; // UUI_AdminBlockListPanel*
	}

	namespace n_UInterpTrackParticleReplay {
		constexpr auto TrackKeys = 0x70; // TArray<FParticleReplayTrackKey>
	}

	namespace n_USoundEffectSourcePresetChain {
		constexpr auto Chain = 0x28; // TArray<FSourceEffectChainEntry>
		constexpr auto bPlayEffectChainTails = 0x38; // char : 1
	}

	namespace n_UBookMark2D {
		constexpr auto Zoom2D = 0x28; // float
		constexpr auto Location = 0x2c; // FIntPoint
	}

	namespace n_UBTDecorator_Blackboard {
		constexpr auto IntValue = 0x90; // int32_t
		constexpr auto FloatValue = 0x94; // float
		constexpr auto StringValue = 0x98; // FString
		constexpr auto CachedDescription = 0xa8; // FString
		constexpr auto OperationType = 0xb8; // char
		constexpr auto NotifyObserver = 0xb9; // EBTBlackboardRestart
	}

	namespace n_ALandscapeStreamingProxy {
		constexpr auto LandscapeActor = 0x690; // LazyObjectProperty
	}

	namespace n_UAnimBoneCompressionCodec {
		constexpr auto Description = 0x28; // FString
	}

	namespace n_AWaterBodyExclusionVolume {
		constexpr auto bIgnoreAllOverlappingWaterBodies = 0x358; // bool
		constexpr auto WaterBodiesToIgnore = 0x360; // TArray<AWaterBody*>
	}

	namespace n_ADatasmithImportedSequencesActor {
		constexpr auto ImportedSequences = 0x310; // TArray<ULevelSequence*>
	}

	namespace n_ULiveLinkSourceSettings {
		constexpr auto Mode = 0x28; // ELiveLinkSourceMode
		constexpr auto BufferSettings = 0x30; // FLiveLinkSourceBufferManagementSettings
		constexpr auto ConnectionString = 0x88; // FString
		constexpr auto Factory = 0x98; // ULiveLinkSourceFactory*
	}

	namespace n_UStatusProgressPanel {
		constexpr auto HungerProgress = 0x268; // UProgressBar*
		constexpr auto SPProgress = 0x270; // UProgressBar*
		constexpr auto WeightProgress = 0x278; // UProgressBar*
		constexpr auto EVProgress = 0x280; // UProgressBar*
		constexpr auto HungerWarning = 0x288; // UImage*
		constexpr auto SPWarning = 0x290; // UImage*
		constexpr auto WeightWarning = 0x298; // UImage*
		constexpr auto EVWarning = 0x2a0; // UImage*
		constexpr auto EVProgressImageBg = 0x2a8; // FSlateBrush [0x4]
		constexpr auto EVProgressImage = 0x4c8; // FSlateBrush [0x4]
		constexpr auto EVProgressTargetValue = 0x6e8; // float
		constexpr auto EVProgressSpeed = 0x6ec; // float
		constexpr auto bShowHungerProgress = 0x6f0; // char : 1
		constexpr auto bShowSPProgress = 0x6f0; // char : 1
		constexpr auto bShowWeightProgress = 0x6f0; // char : 1
		constexpr auto bShowEVProgress = 0x6f0; // char : 1
		constexpr auto bShowHungerProgressUp = 0x6f0; // char : 1
		constexpr auto bShowSPProgressUp = 0x6f0; // char : 1
		constexpr auto bShowWeightProgressUp = 0x6f0; // char : 1
		constexpr auto bShowEVProgressUp = 0x6f0; // char : 1
		constexpr auto WarningSpeed = 0x6f4; // float
		constexpr auto HungerThreshold = 0x6f8; // float
		constexpr auto SPThreshold = 0x6fc; // float
		constexpr auto WeightThreshold = 0x700; // float
		constexpr auto EVThreshold = 0x704; // float
	}

	namespace n_UUI_ServerAdminItemRow {
		constexpr auto TbItemName = 0x260; // UTextBlock*
		constexpr auto ButtonAddItem = 0x268; // UButton*
		constexpr auto ImageItemIcon = 0x270; // UImage*
		constexpr auto BindAdminItemPanel = 0x278; // UUI_AdminItemPanel*
		constexpr auto BindAdminSubPanelNpcl = 0x280; // UUI_AdminSubPanelNpc*
		constexpr auto BindAdminSubPanelGeneral = 0x288; // UUI_AdminSubPanelGeneral*
		constexpr auto BindAdminSubPanelHorse = 0x290; // UUI_AdminSubPanelHorse*
		constexpr auto BindIndex = 0x298; // int32_t
		constexpr auto BindSGItem = 0x2a0; // USGItem*
		constexpr auto BindSGBuff = 0x2a8; // USGBuff*
		constexpr auto BindBaseCharacter = 0x2b0; // ABaseCharacter*
		constexpr auto BindSGGeneralCharacter = 0x2b8; // ASGGeneralCharacter*
		constexpr auto BindSG_AnimalsCharacter = 0x2c0; // ASG_AnimalsCharacter*
	}

	namespace n_UComboBoxWidgetStyle {
		constexpr auto ComboBoxStyle = 0x30; // FComboBoxStyle
	}

	namespace n_ASG_RoadPath {
		constexpr auto CustomSceneComponent = 0x310; // USceneComponent*
		constexpr auto CustomRoadPathComponent = 0x318; // USplineComponent*
		constexpr auto bDrawDebugPath = 0x320; // char : 1
		constexpr auto RoadPathName = 0x324; // FName
		constexpr auto RoadPathLocations = 0x330; // TArray<FVector>
	}

	namespace n_ASGStructureGivePerkPoints {
		constexpr auto GivePerkPointDataIndex = 0xb98; // int32_t
		constexpr auto GivePerkPoints = 0xb9c; // int32_t
		constexpr auto ReceiveEmitter = 0xba0; // UParticleSystem*
		constexpr auto ReceiveEmitterLocationOffset = 0xba8; // FVector
		constexpr auto GivePerkPointsTimeTicker = 0xbb4; // float
	}

	namespace n_UProceduralMeshComponent {
		constexpr auto bUseComplexAsSimpleCollision = 0x4b8; // bool
		constexpr auto bUseAsyncCooking = 0x4b9; // bool
		constexpr auto ProcMeshBodySetup = 0x4c0; // UBodySetup*
		constexpr auto ProcMeshSections = 0x4c8; // TArray<FProcMeshSection>
		constexpr auto CollisionConvexElems = 0x4d8; // TArray<FKConvexElem>
		constexpr auto LocalBounds = 0x4e8; // FBoxSphereBounds
		constexpr auto AsyncBodySetupQueue = 0x508; // TArray<UBodySetup*>
	}

	namespace n_UChannel {
		constexpr auto Connection = 0x28; // UNetConnection*
	}

	namespace n_UMontageEvent_AnimNotifyState {
		constexpr auto PlayMontage = 0x30; // UAnimMontage*
		constexpr auto Enum_CustomMontageEvent = 0x38; // EMontageCustomBindType
		constexpr auto bStopMontageOnMoving = 0x39; // char : 1
		constexpr auto bStopMontageOnPlayerInput = 0x39; // char : 1
		constexpr auto Enum_AimDirection = 0x3a; // EAimDirection
		constexpr auto bStopMontageOnFighting = 0x3b; // char : 1
		constexpr auto bChangeMontageOnFighting = 0x3b; // char : 1
		constexpr auto StopBlendTime = 0x3c; // float
		constexpr auto StartPosition = 0x40; // float
		constexpr auto NotifyLength = 0x44; // float
	}

	namespace n_UNiagaraDataInterfaceSpline {
		constexpr auto Source = 0x38; // AActor*
	}

	namespace n_UPointSetComponent {
		constexpr auto PointMaterial = 0x4b0; // UMaterialInterface*
		constexpr auto Bounds = 0x4b8; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x4d4; // bool
	}

	namespace n_ANpcStaticSpawnInfo {
		constexpr auto bManualGenerate = 0x400; // bool
		constexpr auto ManualNpcNum = 0x404; // int32_t
		constexpr auto FunctionId = 0x408; // int32_t
		constexpr auto bUseAllNPCSpawnDatas = 0x40c; // char : 1
	}

	namespace n_UHudSettings {
		constexpr auto bShowHUD = 0x28; // char : 1
		constexpr auto DebugDisplay = 0x30; // TArray<FName>
	}

	namespace n_UUI_AdminSubPanelHorse {
		constexpr auto AdminPlayerPanel = 0x2d8; // UUI_AdminPlayerPanel*
		constexpr auto ScrollBoxNpcList = 0x2e0; // UScrollBox*
		constexpr auto SearchTextBoxNpc = 0x2e8; // UEditableTextBox*
		constexpr auto ServerAdminItemRowTemplate = 0x300; // UUI_ServerAdminItemRow*
		constexpr auto EditableTextBoxCreateLevel = 0x308; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateTameLevel = 0x310; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateTeamId = 0x318; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateNum = 0x320; // UEditableTextBox*
		constexpr auto EditableTextBoxHorseQuality = 0x328; // UEditableTextBox*
		constexpr auto CheckBoxIsTamed = 0x330; // UCheckBox*
		constexpr auto CheckBoxIsCheckQualityMax = 0x338; // UCheckBox*
		constexpr auto CheckBoxRandAC = 0x340; // UCheckBox*
		constexpr auto EditableTextBoxCreateSpeed = 0x348; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateHP = 0x350; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateWeight = 0x358; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateSP = 0x360; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateOperate = 0x368; // UEditableTextBox*
		constexpr auto EditableTextBoxCreatePerk = 0x370; // UEditableTextBox*
	}

	namespace n_UN_QuickHelpPanel {
		constexpr auto AllKeyText = 0x260; // TArray<FHelpKeyButton>
		constexpr auto QuickText = 0x270; // TArray<FText>
		constexpr auto QuickHelpPanel = 0x280; // UHorizontalBox*
		constexpr auto QuickHelpSlotTemplate = 0x288; // UN_QuickHelpSlot*
	}

	namespace n_UMaterialExpressionAdd {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_ABandwidthTestActor {
		constexpr auto BandwidthGenerator = 0x310; // FBandwidthTestGenerator
	}

	namespace n_UMaterialExpressionSphereMask {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Radius = 0x68; // FExpressionInput
		constexpr auto Hardness = 0x7c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x90; // float
		constexpr auto HardnessPercent = 0x94; // float
	}

	namespace n_UDataButton {
		constexpr auto DataSource = 0x428; // FString
		constexpr auto bIsSimulateDisabled = 0x438; // bool
		constexpr auto SimulateDisabledStyle = 0x440; // FButtonStyle
		constexpr auto CachedNormalStyle = 0x6b8; // FButtonStyle
		constexpr auto OnDataButtonClicked = 0x930; // FMulticastInlineDelegate
		constexpr auto OnDataButtonPressed = 0x940; // FMulticastInlineDelegate
		constexpr auto OnDataButtonReleased = 0x950; // FMulticastInlineDelegate
		constexpr auto OnDataButtonHovered = 0x960; // FMulticastInlineDelegate
		constexpr auto OnDataButtonUnhovered = 0x970; // FMulticastInlineDelegate
	}

	namespace n_UPolyEditOffsetProperties {
		constexpr auto bUseFaceNormals = 0x60; // bool
	}

	namespace n_USGGameUserSettings {
		constexpr auto MainSoundVolume = 0x12c; // float
		constexpr auto BgmSoundVolume = 0x130; // float
		constexpr auto EffectSoundVolume = 0x134; // float
		constexpr auto Gamma = 0x138; // float
		constexpr auto bRayTracing = 0x13c; // bool
		constexpr auto bRayTracingShadow = 0x13d; // bool
		constexpr auto bRayTracingReflections = 0x13e; // bool
		constexpr auto bAntiAliasingDLSS = 0x13f; // bool
		constexpr auto DLSSQuality = 0x140; // int32_t
		constexpr auto bAntiAliasingFSR = 0x144; // bool
		constexpr auto FSRQuality = 0x148; // int32_t
		constexpr auto FSRSoftness = 0x14c; // float
		constexpr auto MotionBlurQuality = 0x150; // int32_t
		constexpr auto bColorBlindness = 0x154; // bool
		constexpr auto SingleCellHP = 0x158; // int32_t
		constexpr auto bShowGroom = 0x15c; // bool
		constexpr auto bEnableLightningShake = 0x15d; // bool
		constexpr auto bCustomOverallScalabilityLevel = 0x15e; // bool
		constexpr auto bCustomViewDistanceQuality = 0x15f; // bool
		constexpr auto bCustomAntiAliasingQuality = 0x160; // bool
		constexpr auto bCustomShadowQuality = 0x161; // bool
		constexpr auto bCustomPostProcessQuality = 0x162; // bool
		constexpr auto bCustomTextureQuality = 0x163; // bool
		constexpr auto bCustomEffectsQuality = 0x164; // bool
		constexpr auto bCustomFoliageQuality = 0x165; // bool
		constexpr auto bCustomShadingQuality = 0x166; // bool
		constexpr auto ViewDistanceScalabilityFloatDetails = 0x168; // TMap<FString, float>
		constexpr auto AntiAliasingScalabilityFloatDetails = 0x1b8; // TMap<FString, float>
		constexpr auto ShadowScalabilityFloatDetails = 0x208; // TMap<FString, float>
		constexpr auto PostProcessScalabilityFloatDetails = 0x258; // TMap<FString, float>
		constexpr auto TextureScalabilityFloatDetails = 0x2a8; // TMap<FString, float>
		constexpr auto EffectsScalabilityFloatDetails = 0x2f8; // TMap<FString, float>
		constexpr auto FoliageScalabilityFloatDetails = 0x348; // TMap<FString, float>
		constexpr auto ShadingScalabilityFloatDetails = 0x398; // TMap<FString, float>
		constexpr auto ViewDistanceScalabilityIntDetails = 0x3e8; // TMap<FString, int32_t>
		constexpr auto AntiAliasingScalabilityIntDetails = 0x438; // TMap<FString, int32_t>
		constexpr auto ShadowScalabilityIntDetails = 0x488; // TMap<FString, int32_t>
		constexpr auto PostProcessScalabilityIntDetails = 0x4d8; // TMap<FString, int32_t>
		constexpr auto TextureScalabilityIntDetails = 0x528; // TMap<FString, int32_t>
		constexpr auto EffectsScalabilityIntDetails = 0x578; // TMap<FString, int32_t>
		constexpr auto FoliageScalabilityIntDetails = 0x5c8; // TMap<FString, int32_t>
		constexpr auto ShadingScalabilityIntDetails = 0x618; // TMap<FString, int32_t>
		constexpr auto MiniMapFilterState = 0x668; // TMap<FString, bool>
		constexpr auto bAlwaysUseRiderBattleMode = 0x708; // bool
		constexpr auto bEnableCollectionAttack = 0x709; // bool
		constexpr auto MouseSensitivity = 0x70c; // float
		constexpr auto bInvertMouseX = 0x710; // bool
		constexpr auto bInvertMouseY = 0x711; // bool
		constexpr auto bShowNetStat = 0x712; // bool
		constexpr auto bClientEnableUpdateRateOptimizations = 0x713; // bool
		constexpr auto bAnchorMode = 0x714; // bool
		constexpr auto bShowFleshPhysicialMaterialEffect = 0x715; // bool
		constexpr auto bShowSelfInMiniMap = 0x716; // bool
		constexpr auto bShowCustomGuildIcon = 0x717; // bool
		constexpr auto bReceiveNearbyVoice = 0x718; // bool
		constexpr auto bPlayViolentAudio = 0x719; // bool
		constexpr auto bShowCustomName = 0x71a; // bool
		constexpr auto bShowLocationServer = 0x71b; // bool
		constexpr auto bFilterFoulLanguage = 0x71c; // bool
		constexpr auto ChatCheckedSlots = 0x720; // TArray<int32_t>
		constexpr auto ChatUncheckedSlots = 0x730; // TArray<int32_t>
		constexpr auto bCraftPerkSwitch = 0x740; // bool
		constexpr auto bMailSwitch = 0x741; // bool
		constexpr auto bQuestSwitch = 0x742; // bool
		constexpr auto bGuildEventSwitch = 0x743; // bool
		constexpr auto bHorseEventSwitch = 0x744; // bool
		constexpr auto bGuildSwitch = 0x745; // bool
		constexpr auto RoleClusterDistrictMap = 0x748; // TMap<int32_t, int32_t>
		constexpr auto bBenchmarkScalability = 0x798; // bool
		constexpr auto KeySettingVersion = 0x79c; // int32_t
		constexpr auto ActionMappings = 0x7a0; // TMap<FName, FInputActionKeyMappingMap>
		constexpr auto AxisMappings = 0x7f0; // TMap<FName, FInputAxisKeyMappingMap>
		constexpr auto bSettingRegistered = 0x860; // char : 1
		constexpr auto ConfigMap = 0x868; // TMap<FString, FGameUserSettingConfigMap>
		constexpr auto ScalabilityDetailsDataTable = 0x8b8; // UDataTable*
		constexpr auto GameState = 0x8c0; // ASGGameState*
		constexpr auto DefaultRHI = 0x8c8; // int32_t
		constexpr auto bRunHardwareBenchmark = 0x8cc; // char : 1
	}

	namespace n_UUI_Cursor {
		constexpr auto CursorStyle = 0x260; // TMap<EMouseCursor, FMouseCursorStyle>
		constexpr auto ImgBg = 0x2b0; // UImage*
	}

	namespace n_ASGStructureXianChengBasement {
		constexpr auto XianChengAttackSucessType = 0x1298; // EXianChengAttackSucessType
		constexpr auto bLocked = 0x1299; // char : 1
		constexpr auto BattleGroundMusicHpThreshold = 0x129c; // float
	}

	namespace n_UGizmoRectangleComponent {
		constexpr auto DirectionX = 0x4a8; // FVector
		constexpr auto DirectionY = 0x4b4; // FVector
		constexpr auto OffsetX = 0x4c0; // float
		constexpr auto OffsetY = 0x4c4; // float
		constexpr auto LengthX = 0x4c8; // float
		constexpr auto LengthY = 0x4cc; // float
		constexpr auto Thickness = 0x4d0; // float
		constexpr auto SegmentFlags = 0x4d4; // char
	}

	namespace n_UMovieSceneLevelVisibilitySection {
		constexpr auto Visibility = 0xf0; // ELevelVisibility
		constexpr auto LevelNames = 0xf8; // TArray<FName>
	}

	namespace n_UEdGraphPin_Deprecated {
		constexpr auto PinName = 0x28; // FString
		constexpr auto PinToolTip = 0x38; // FString
		constexpr auto Direction = 0x48; // EEdGraphPinDirection
		constexpr auto PinType = 0x50; // FEdGraphPinType
		constexpr auto DefaultValue = 0xa8; // FString
		constexpr auto AutogeneratedDefaultValue = 0xb8; // FString
		constexpr auto DefaultObject = 0xc8; // UObject*
		constexpr auto DefaultTextValue = 0xd0; // FText
		constexpr auto LinkedTo = 0xe8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto SubPins = 0xf8; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto ParentPin = 0x108; // UEdGraphPin_Deprecated*
		constexpr auto ReferencePassThroughConnection = 0x110; // UEdGraphPin_Deprecated*
	}

	namespace n_ULightmappedSurfaceCollection {
		constexpr auto SourceModel = 0x28; // UModel*
		constexpr auto Surfaces = 0x30; // TArray<int32_t>
	}

	namespace n_UNiagaraDataInterfacePlatformSet {
		constexpr auto Platforms = 0x38; // FNiagaraPlatformSet
	}

	namespace n_ASkyLight {
		constexpr auto LightComponent = 0x310; // USkyLightComponent*
		constexpr auto bEnabled = 0x318; // char : 1
	}

	namespace n_UMaterialInterface {
		constexpr auto SubsurfaceProfile = 0x38; // USubsurfaceProfile*
		constexpr auto LightmassSettings = 0x50; // FLightmassMaterialInterfaceSettings
		constexpr auto TextureStreamingData = 0x60; // TArray<FMaterialTextureInfo>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UAnimCompress_RemoveTrivialKeys {
		constexpr auto MaxPosDiff = 0x40; // float
		constexpr auto MaxAngleDiff = 0x44; // float
		constexpr auto MaxScaleDiff = 0x48; // float
	}

	namespace n_ULightComponent {
		constexpr auto Temperature = 0x238; // float
		constexpr auto MaxDrawDistance = 0x23c; // float
		constexpr auto MaxDistanceFadeRange = 0x240; // float
		constexpr auto bUseTemperature = 0x244; // char : 1
		constexpr auto ShadowMapChannel = 0x248; // int32_t
		constexpr auto MinRoughness = 0x250; // float
		constexpr auto SpecularScale = 0x254; // float
		constexpr auto ShadowResolutionScale = 0x258; // float
		constexpr auto ShadowBias = 0x25c; // float
		constexpr auto ShadowSlopeBias = 0x260; // float
		constexpr auto ShadowSharpen = 0x264; // float
		constexpr auto ContactShadowLength = 0x268; // float
		constexpr auto ContactShadowLengthInWS = 0x26c; // char : 1
		constexpr auto InverseSquaredFalloff = 0x26c; // char : 1
		constexpr auto CastTranslucentShadows = 0x26c; // char : 1
		constexpr auto bCastShadowsFromCinematicObjectsOnly = 0x26c; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x26c; // char : 1
		constexpr auto bForceCachedShadowsForMovablePrimitives = 0x26c; // char : 1
		constexpr auto LightingChannels = 0x270; // FLightingChannels
		constexpr auto LightFunctionMaterial = 0x278; // UMaterialInterface*
		constexpr auto LightFunctionScale = 0x280; // FVector
		constexpr auto IESTexture = 0x290; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x298; // char : 1
		constexpr auto IESBrightnessScale = 0x29c; // float
		constexpr auto LightFunctionFadeDistance = 0x2a0; // float
		constexpr auto DisabledBrightness = 0x2a4; // float
		constexpr auto bEnableLightShaftBloom = 0x2a8; // char : 1
		constexpr auto BloomScale = 0x2ac; // float
		constexpr auto BloomThreshold = 0x2b0; // float
		constexpr auto BloomMaxBrightness = 0x2b4; // float
		constexpr auto BloomTint = 0x2b8; // FColor
		constexpr auto bUseRayTracedDistanceFieldShadows = 0x2bc; // bool
		constexpr auto RayStartOffsetDepthScale = 0x2c0; // float
	}

	namespace n_UMaterialExpressionReflectionCapturePassSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Reflection = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionThinTranslucentMaterialOutput {
		constexpr auto TransmittanceColor = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionFloat
	}

	namespace n_UAbilityTask_WaitTargetData {
		constexpr auto ValidData = 0x80; // FMulticastInlineDelegate
		constexpr auto Cancelled = 0x90; // FMulticastInlineDelegate
		constexpr auto TargetClass = 0xa0; // AGameplayAbilityTargetActor*
		constexpr auto TargetActor = 0xa8; // AGameplayAbilityTargetActor*
	}

	namespace n_UDecalComponent {
		constexpr auto DecalMaterial = 0x208; // UMaterialInterface*
		constexpr auto SortOrder = 0x210; // int32_t
		constexpr auto FadeScreenSize = 0x214; // float
		constexpr auto FadeStartDelay = 0x218; // float
		constexpr auto FadeDuration = 0x21c; // float
		constexpr auto FadeInDuration = 0x220; // float
		constexpr auto FadeInStartDelay = 0x224; // float
		constexpr auto bDestroyOwnerAfterFade = 0x228; // char : 1
		constexpr auto DecalSize = 0x22c; // FVector
	}

	namespace n_UFixedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_USculptBrushProperties {
		constexpr auto Depth = 0x78; // float
		constexpr auto bHitBackFaces = 0x7c; // bool
		constexpr auto Lazyness = 0x80; // float
		constexpr auto bShowPerBrushProps = 0x84; // bool
	}

	namespace n_UNotificationSlot {
		constexpr auto MessageType = 0x2f8; // EMsgType
		constexpr auto NotifyMessageType = 0x2f9; // ENotifyMessageType
		constexpr auto SGObject = 0x3a8; // UObject*
		constexpr auto ImageSize = 0x3b0; // FVector2D
		constexpr auto bg = 0x3b8; // UImage*
		constexpr auto TextureImage = 0x3c0; // UImage*
		constexpr auto LeftNotifyText = 0x3c8; // UTextBlock*
		constexpr auto NotifyText = 0x3d0; // UTextBlock*
		constexpr auto BattleUpTextColor = 0x3d8; // FLinearColor
		constexpr auto IsBattleWorld = 0x3e8; // bool
	}

	namespace n_ASGPlayerStart {
		constexpr auto FunctionId = 0x350; // int32_t
		constexpr auto PlayerStartId = 0x354; // int32_t
		constexpr auto CooldownTime = 0x358; // float
		constexpr auto RandomRadius = 0x35c; // float
		constexpr auto CheckRandomMax = 0x360; // int32_t
		constexpr auto bIsSubPlayerStart = 0x364; // char : 1
		constexpr auto SubPlayerStartArray = 0x368; // TArray<ASGPlayerStart*>
		constexpr auto DefaultSpawnVolumeFloorTags = 0x378; // TArray<FName>
		constexpr auto NextUseTime = 0x388; // double
		constexpr auto RegionRaduis = 0x390; // float
	}

	namespace n_UUI_Activity {
		constexpr auto SlotXiancheng = 0x2d8; // UOptionButton*
		constexpr auto SlotTaishou = 0x2e0; // UOptionButton*
		constexpr auto SlotGuanai = 0x2e8; // UOptionButton*
		constexpr auto Image_Xiancheng = 0x2f0; // UImage*
		constexpr auto Image_Taishou = 0x2f8; // UImage*
		constexpr auto Image_Guanai = 0x300; // UImage*
		constexpr auto MultiLineEditableText_Rules = 0x308; // UMultiLineEditableText*
		constexpr auto UI_Activity_Xiancheng = 0x310; // UUI_Activity_Xiancheng*
		constexpr auto UI_Activity_Taishou = 0x318; // UUI_Activity_Taishou*
		constexpr auto UI_Activity_Guanai = 0x320; // UUI_Activity_Guanai*
		constexpr auto CapitalText = 0x328; // UTextBlock*
		constexpr auto XianchengRules = 0x330; // FText
		constexpr auto TaishouRules = 0x348; // FText
		constexpr auto GuanaiRules = 0x360; // FText
	}

	namespace n_AProceduralFoliageVolume {
		constexpr auto ProceduralComponent = 0x348; // UProceduralFoliageComponent*
	}

	namespace n_ULandscapeSplineControlPoint {
		constexpr auto Location = 0x28; // FVector
		constexpr auto Rotation = 0x34; // FRotator
		constexpr auto Width = 0x40; // float
		constexpr auto LayerWidthRatio = 0x44; // float
		constexpr auto SideFalloff = 0x48; // float
		constexpr auto LeftSideFalloffFactor = 0x4c; // float
		constexpr auto RightSideFalloffFactor = 0x50; // float
		constexpr auto LeftSideLayerFalloffFactor = 0x54; // float
		constexpr auto RightSideLayerFalloffFactor = 0x58; // float
		constexpr auto EndFalloff = 0x5c; // float
		constexpr auto ConnectedSegments = 0x60; // TArray<FLandscapeSplineConnection>
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponent = 0xa0; // UControlPointMeshComponent*
	}

	namespace n_UGroomCreateFollicleMaskOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto RootRadius = 0x2c; // int32_t
		constexpr auto Grooms = 0x30; // TArray<FFollicleMaskOptions>
	}

	namespace n_UEditableGameplayTagQueryExpression_AnyTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UWBP_ResolutionSettingComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto SettingComboBox = 0x370; // UComboBoxString*
		constexpr auto TbTitle = 0x378; // UTextBlock*
		constexpr auto Title = 0x380; // FText
		constexpr auto SelectIndex = 0x398; // int32_t
	}

	namespace n_UABP_HorseMC_C {
		constexpr auto UberGraphFrame = 0xff0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_TwoWayBlend_6 = 0xff8; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_13 = 0x10c0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_SaveCachedPose_5 = 0x11a8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_12 = 0x1300; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LayeredBoneBlend_3 = 0x1348; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_Slot_11 = 0x1408; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_11 = 0x1450; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_10 = 0x1478; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_5 = 0x14a0; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose_4 = 0x14d0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_10 = 0x1628; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_9 = 0x1670; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend_2 = 0x1698; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_8 = 0x1758; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendSpacePlayer_12 = 0x1780; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_11 = 0x1868; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_TwoWayBlend_5 = 0x1950; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_Root_4 = 0x1a18; // FAnimNode_Root
		constexpr auto AnimGraphNode_LinkedInputPose = 0x1a48; // FAnimNode_LinkedInputPose
		constexpr auto AnimGraphNode_Fabrik_2 = 0x1b60; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_Fabrik = 0x1cf0; // FAnimNode_Fabrik
		constexpr auto AnimGraphNode_ModifyBone_2 = 0x1e80; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0x1f88; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_AnimDynamics_2 = 0x2090; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_AnimDynamics = 0x24d0; // FAnimNode_AnimDynamics
		constexpr auto AnimGraphNode_SequencePlayer_4 = 0x2910; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_Root_3 = 0x2990; // FAnimNode_Root
		constexpr auto AnimGraphNode_RigidBody = 0x29c0; // FAnimNode_RigidBody
		constexpr auto AnimGraphNode_ComponentToLocalSpace_2 = 0x3010; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto SGAnimGraphNode_ModifyBone = 0x3030; // FSGAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x3118; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace_2 = 0x3138; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_UseCachedPose_7 = 0x3158; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_BlendListByBool = 0x3180; // FAnimNode_BlendListByBool
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x3220; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_SaveCachedPose_3 = 0x3240; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_6 = 0x3398; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Root_2 = 0x33c0; // FAnimNode_Root
		constexpr auto AnimGraphNode_SaveCachedPose_2 = 0x33f0; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_Slot_9 = 0x3548; // FAnimNode_Slot
		constexpr auto AnimGraphNode_UseCachedPose_5 = 0x3590; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_LayeredBoneBlend = 0x35b8; // FAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_UseCachedPose_4 = 0x3678; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_TransitionResult_67 = 0x36a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_66 = 0x36c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_65 = 0x36f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_64 = 0x3718; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_63 = 0x3740; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_62 = 0x3768; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_61 = 0x3790; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_60 = 0x37b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_10 = 0x37e0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_21 = 0x38c8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_9 = 0x38f8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_20 = 0x39e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_8 = 0x3a10; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_19 = 0x3af8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TwoWayBlend_4 = 0x3b28; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_BlendSpacePlayer_7 = 0x3bf0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_BlendSpacePlayer_6 = 0x3cd8; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_18 = 0x3dc0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose_3 = 0x3df0; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_17 = 0x3e08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_3 = 0x3e38; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Root = 0x3ee8; // FAnimNode_Root
		constexpr auto AnimGraphNode_Slot_8 = 0x3f18; // FAnimNode_Slot
		constexpr auto AnimGraphNode_LinkedAnimLayer_4 = 0x3f60; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_TransitionResult_59 = 0x4010; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_58 = 0x4038; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_57 = 0x4060; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_56 = 0x4088; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_55 = 0x40b0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_54 = 0x40d8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_53 = 0x4100; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_52 = 0x4128; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_51 = 0x4150; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_50 = 0x4178; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_49 = 0x41a0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_48 = 0x41c8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_47 = 0x41f0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_46 = 0x4218; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_45 = 0x4240; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_44 = 0x4268; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_43 = 0x4290; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_42 = 0x42b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_41 = 0x42e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_40 = 0x4308; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_39 = 0x4330; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_38 = 0x4358; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_37 = 0x4380; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_36 = 0x43a8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_35 = 0x43d0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_34 = 0x43f8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_33 = 0x4420; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_32 = 0x4448; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_31 = 0x4470; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_30 = 0x4498; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_29 = 0x44c0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_28 = 0x44e8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_27 = 0x4510; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_26 = 0x4538; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_25 = 0x4560; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_24 = 0x4588; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LinkedAnimLayer_3 = 0x45b0; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_16 = 0x4660; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_23 = 0x4690; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_22 = 0x46b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_21 = 0x46e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_20 = 0x4708; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LinkedAnimLayer_2 = 0x4730; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_15 = 0x47e0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_5 = 0x4810; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_14 = 0x48f8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_19 = 0x4928; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_18 = 0x4950; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_17 = 0x4978; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_PoseSnapshot_2 = 0x49a0; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_StateResult_13 = 0x4a30; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_PoseSnapshot = 0x4a60; // FAnimNode_PoseSnapshot
		constexpr auto AnimGraphNode_StateResult_12 = 0x4af0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_16 = 0x4b20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_15 = 0x4b48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequencePlayer_3 = 0x4b70; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_11 = 0x4bf0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_14 = 0x4c20; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_13 = 0x4c48; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_SequenceEvaluator_2 = 0x4c70; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_TwoWayBlend_3 = 0x4cc0; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequencePlayer_2 = 0x4d88; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_10 = 0x4e08; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_SequencePlayer = 0x4e38; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult_9 = 0x4eb8; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult_12 = 0x4ee8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_11 = 0x4f10; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_10 = 0x4f38; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LinkedAnimLayer = 0x4f60; // FAnimNode_LinkedAnimLayer
		constexpr auto AnimGraphNode_StateResult_8 = 0x5010; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_Slot_7 = 0x5040; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_6 = 0x5088; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot_5 = 0x50d0; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TransitionResult_9 = 0x5118; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_8 = 0x5140; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_7 = 0x5168; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_6 = 0x5190; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_5 = 0x51b8; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_4 = 0x51e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_3 = 0x5208; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_TransitionResult_2 = 0x5230; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_4 = 0x5258; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_7 = 0x5340; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_3 = 0x5370; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_6 = 0x5458; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer_2 = 0x5488; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_5 = 0x5570; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_BlendSpacePlayer = 0x55a0; // FAnimNode_BlendSpacePlayer
		constexpr auto AnimGraphNode_StateResult_4 = 0x5688; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_LocalRefPose_2 = 0x56b8; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult_3 = 0x56d0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine_2 = 0x5700; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_StateResult_2 = 0x57b0; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_TransitionResult = 0x57e0; // FAnimNode_TransitionResult
		constexpr auto AnimGraphNode_LocalRefPose = 0x5808; // FAnimNode_RefPose
		constexpr auto AnimGraphNode_StateResult = 0x5820; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x5850; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_Slot_4 = 0x5900; // FAnimNode_Slot
		constexpr auto AnimGraphNode_TwoWayBlend_2 = 0x5948; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_SequenceEvaluator = 0x5a10; // FAnimNode_SequenceEvaluator
		constexpr auto AnimGraphNode_Slot_3 = 0x5a60; // FAnimNode_Slot
		constexpr auto AnimGraphNode_SaveCachedPose = 0x5aa8; // FAnimNode_SaveCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_3 = 0x5c00; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_UseCachedPose_2 = 0x5c28; // FAnimNode_UseCachedPose
		constexpr auto SGAnimGraphNode_LayeredBoneBlend = 0x5c50; // FSGAnimNode_LayeredBoneBlend
		constexpr auto AnimGraphNode_TwoWayBlend = 0x5d10; // FAnimNode_TwoWayBlend
		constexpr auto AnimGraphNode_UseCachedPose = 0x5dd8; // FAnimNode_UseCachedPose
		constexpr auto AnimGraphNode_Slot_2 = 0x5e00; // FAnimNode_Slot
		constexpr auto AnimGraphNode_Slot = 0x5e48; // FAnimNode_Slot
		constexpr auto tail = 0x5e90; // FVector
		constexpr auto EnableTail = 0x5e9c; // bool
		constexpr auto Struct_DamageBoneLayerConfig = 0x5ea0; // FSGInputBlendPose
	}

	namespace n_UNewsItem {
		constexpr auto RollingSubtitlesSpeed = 0x260; // float
		constexpr auto NewsCanvas = 0x268; // UCanvasPanel*
		constexpr auto RTbNews = 0x270; // URichTextBlock*
		constexpr auto BtnNews = 0x278; // UButton*
		constexpr auto BtnClose = 0x280; // UButton*
		constexpr auto BindNewsClientData = 0x2a8; // UNewsClientData*
		constexpr auto RootUI = 0x2b0; // UUI_News*
	}

	namespace n_AWaterBodyLake {
		constexpr auto LakeGenerator = 0xee0; // ULakeGenerator*
	}

	namespace n_UStereoLayerShapeCylinder {
		constexpr auto Radius = 0x28; // float
		constexpr auto OverlayArc = 0x2c; // float
		constexpr auto Height = 0x30; // int32_t
	}

	namespace n_ASG_SiegeCharacter {
		constexpr auto bServerMeshRefreshBones = 0x2678; // char : 1
		constexpr auto bTowerIsDown = 0x2678; // char : 1
		constexpr auto LoopFireAudio = 0x2680; // USGAudioComponent*
		constexpr auto SpawnSoundID = 0x2688; // FName
		constexpr auto SiegeType = 0x2690; // ESiegeType
		constexpr auto DestroyedMesh = 0x2698; // FSoftObjectPath
		constexpr auto DestroyedMeshActorClass = 0x26b0; // ASGDestructibleActor*
		constexpr auto DestructibleRelativeLocation = 0x26b8; // FVector
		constexpr auto DestructibleRelativeRotation = 0x26c4; // FRotator
		constexpr auto DeadSoundID = 0x26d0; // FName
		constexpr auto TPVCameraPitchMin = 0x26d8; // float
		constexpr auto TPVCameraPitchMax = 0x26dc; // float
		constexpr auto TPVCameraYawMin = 0x26e0; // float
		constexpr auto TPVCameraYawMax = 0x26e4; // float
		constexpr auto TPVCameraYawMinWithPower = 0x26e8; // float
		constexpr auto TPVCameraYawMaxWithPower = 0x26ec; // float
		constexpr auto bDrawDebugRotate = 0x26f0; // char : 1
		constexpr auto LastServerUpdateSent = 0x26f8; // double
		constexpr auto WantYawViewRotation = 0x2700; // float
		constexpr auto WantPitchViewRotation = 0x2704; // float
		constexpr auto YawViewRotation = 0x2708; // float
		constexpr auto PitchViewRotation = 0x270c; // float
		constexpr auto LocalViewYaw = 0x2710; // float
		constexpr auto LocalViewPitch = 0x2714; // float
		constexpr auto YawBoneSocketName = 0x2718; // FName
		constexpr auto PitchBoneSocketName = 0x2720; // FName
		constexpr auto TurnRotaionMulti = 0x2728; // TArray<float>
		constexpr auto bCanAim = 0x2738; // char : 1
		constexpr auto LoopFireSoundID = 0x273c; // FName
		constexpr auto FireMode = 0x2744; // ETurretFireMode
		constexpr auto ProjectileFireDelayTime = 0x2748; // float
		constexpr auto ProjectileFireDelayTimerHandle = 0x2750; // FTimerHandle
		constexpr auto ProjectileRange = 0x2758; // float
		constexpr auto ChangedGravityProjectileRangeMulti = 0x275c; // float
		constexpr auto FireStageMaxNum = 0x2760; // int32_t
		constexpr auto PerStageVelocityMul = 0x2768; // TArray<float>
		constexpr auto bFireNeedAmmo = 0x2778; // char : 1
		constexpr auto MaxAmmo = 0x277c; // int32_t
		constexpr auto bReloadMustdReloadMaxAmmo = 0x2780; // char : 1
		constexpr auto PerAmmoSpawnProjectileAmount = 0x2784; // int32_t
		constexpr auto AmmoPiercenessOverride = 0x2788; // int32_t
		constexpr auto CurrentAmmo = 0x278c; // int32_t
		constexpr auto bSpawnProjectile = 0x2790; // char : 1
		constexpr auto ProjectileSocketName = 0x2798; // TArray<FName>
		constexpr auto Projectile = 0x27a8; // TArray<ASGProjectile*>
		constexpr auto LastProjectile = 0x27b8; // TWeakObjectPtr<ASGProjectile>
		constexpr auto DefaultAmmoItemTemplate = 0x27c0; // USGItem*
		constexpr auto CurrentAmmoItemTemplate = 0x27c8; // USGItem*
		constexpr auto AllAmmoItemTemplates = 0x27d0; // TArray<USGItem*>
		constexpr auto bRecordNetPlayFireLocation = 0x27e0; // char : 1
		constexpr auto NetPlayFireLocation = 0x27e4; // FVector
		constexpr auto NetPlayFireRotation = 0x27f0; // FRotator
		constexpr auto bCanRotateFire = 0x27fc; // char : 1
		constexpr auto MinStoreFreeVelocityMul = 0x2800; // float
		constexpr auto MaxStoreFreeVelocityMul = 0x2804; // float
		constexpr auto CurrentStoringTime = 0x2808; // float
		constexpr auto bSpawnFireParticle = 0x280c; // char : 1
		constexpr auto bCreateParticleWhenPress = 0x280c; // char : 1
		constexpr auto FireParticleSystem = 0x2810; // UParticleSystem*
		constexpr auto bReloading = 0x2820; // char : 1
		constexpr auto SiegeFireStatus = 0x2821; // ETurretFireStatus
		constexpr auto CurrentFireStage = 0x2824; // int32_t
		constexpr auto FireMontage = 0x2830; // UAnimMontage*
		constexpr auto StopFireMontage = 0x2838; // UAnimMontage*
		constexpr auto ReloadMontage = 0x2840; // UAnimMontage*
		constexpr auto LeftCharacterFireMontage = 0x2848; // UAnimMontage*
		constexpr auto RightCharacterFireMontage = 0x2850; // UAnimMontage*
		constexpr auto CharacterFireMontage = 0x2858; // UAnimMontage*
		constexpr auto CharacterStopFireMontage = 0x2860; // UAnimMontage*
		constexpr auto CharacterReloadMontage = 0x2868; // UAnimMontage*
		constexpr auto bOverrideProjectileDamageType = 0x2870; // char : 1
		constexpr auto OverrideProjectileDamageType = 0x2871; // EDamageType
		constexpr auto ShootHalfAngle = 0x2874; // float
		constexpr auto FireParentSocket = 0x2878; // TArray<FName>
		constexpr auto StartFireSocket = 0x2888; // TArray<FName>
		constexpr auto MaxFollowDistance = 0x2898; // float
		constexpr auto bStoreFreeReloadCanFire = 0x289c; // char : 1
		constexpr auto bShowCrossHair = 0x289c; // char : 1
		constexpr auto TipsText = 0x28a0; // FText
		constexpr auto NeedReloadTime = 0x28b8; // float
		constexpr auto MinStoreFreeStartTime = 0x28c0; // float
		constexpr auto ReloadMontagePlayRate = 0x28c8; // float
		constexpr auto BaseMoveSpeed = 0x28d8; // float
		constexpr auto PeopleNumberSpeed = 0x28e0; // TArray<float>
		constexpr auto PeopleNumberRotateSpeedMul = 0x28f0; // TArray<float>
		constexpr auto FireAllAmmo = 0x2900; // char : 1
		constexpr auto FollowProjectileTime = 0x2904; // float
		constexpr auto StopFollowProjectileTime = 0x2908; // float
		constexpr auto bEnableDurable = 0x2910; // char : 1
		constexpr auto HPLossRatioPerFire = 0x2914; // float
		constexpr auto bUseStoreFreeReloadCanFire = 0x2918; // char : 1
		constexpr auto SeatFunction = 0x2920; // TMap<int32_t, ESiegeSeatFunction>
		constexpr auto SelfChargeBox = 0x2970; // FVector
		constexpr auto SelfChargeStartSocketName = 0x297c; // FName
		constexpr auto SelfChargeEndSocketName = 0x2984; // FName
		constexpr auto MeleeAttackIgnoreActors = 0x2990; // TArray<AActor*>
		constexpr auto ChargeAttackDamageType = 0x29a0; // EDamageType
		constexpr auto ChargeDamage = 0x29a4; // float
		constexpr auto ChargeCollectionDamage = 0x29a8; // float
		constexpr auto ChargeDamageType = 0x29b0; // USGDamageType*
		constexpr auto CurrentAttacker = 0x29b8; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto bIsBreakDefense = 0x29d0; // char : 1
		constexpr auto ProjectileDamageMulti = 0x29d4; // float
		constexpr auto CollectionDamageMulti = 0x29d8; // float
		constexpr auto FireProjectileVelocityMulti = 0x29dc; // float
		constexpr auto FireParticleSocket = 0x29e0; // FName
		constexpr auto GeneralSkillDamageMultiAddMulti = 0x29e8; // float
		constexpr auto GeneralPerkDamageMultiAddMulti = 0x29ec; // float
		constexpr auto DamageToStructure = 0x29f0; // float
		constexpr auto bReloadActionSpawnProjectile = 0x29f4; // char : 1
		constexpr auto FireAddSkillExp = 0x29f8; // float
		constexpr auto AttackAddSkillExp = 0x29fc; // float
		constexpr auto bShowScaleplate = 0x2a08; // char : 1
		constexpr auto DistanceAttenuationCurve = 0x2a10; // UCurveFloat*
		constexpr auto bIgnoreSkillPunish = 0x2a18; // char : 1
		constexpr auto AttackTenacity = 0x2a1c; // int32_t
		constexpr auto OverridePreviewScale = 0x2a20; // float
		constexpr auto BoneTransformMap = 0x2a28; // TMap<FName, FBoneLocalTransform>
		constexpr auto bCanEquipFlag = 0x2a78; // char : 1
		constexpr auto Flag = 0x2a80; // USGItem*
		constexpr auto DMI_FlagImage = 0x2a90; // UMaterialInstanceDynamic*
		constexpr auto RT_FlagImage = 0x2a98; // UTextureRenderTarget2D*
		constexpr auto FlagImageString = 0x2aa8; // FString
	}

	namespace n_ACharacter {
		constexpr auto Mesh = 0x370; // USkeletalMeshComponent*
		constexpr auto CharacterMovement = 0x378; // UCharacterMovementComponent*
		constexpr auto CapsuleComponent = 0x380; // UCapsuleComponent*
		constexpr auto BasedMovement = 0x388; // FBasedMovementInfo
		constexpr auto ReplicatedBasedMovement = 0x3c0; // FBasedMovementInfo
		constexpr auto AnimRootMotionTranslationScale = 0x3f8; // float
		constexpr auto BaseTranslationOffset = 0x3fc; // FVector
		constexpr auto BaseRotationOffset = 0x410; // FQuat
		constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x420; // float
		constexpr auto ReplayLastTransformUpdateTimeStamp = 0x428; // double
		constexpr auto ReplicatedMovementMode = 0x430; // char
		constexpr auto bInBaseReplication = 0x431; // bool
		constexpr auto CrouchedEyeHeight = 0x434; // float
		constexpr auto bIsCrouched = 0x438; // char : 1
		constexpr auto bProxyIsJumpForceApplied = 0x438; // char : 1
		constexpr auto bPressedJump = 0x438; // char : 1
		constexpr auto bClientUpdating = 0x438; // char : 1
		constexpr auto bClientWasFalling = 0x438; // char : 1
		constexpr auto bClientResimulateRootMotion = 0x438; // char : 1
		constexpr auto bClientResimulateRootMotionSources = 0x438; // char : 1
		constexpr auto bSimGravityDisabled = 0x438; // char : 1
		constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x439; // char : 1
		constexpr auto bServerMoveIgnoreRootMotion = 0x439; // char : 1
		constexpr auto bWasJumping = 0x439; // char : 1
		constexpr auto JumpKeyHoldTime = 0x43c; // float
		constexpr auto JumpForceTimeRemaining = 0x440; // float
		constexpr auto ProxyJumpForceStartedTime = 0x444; // float
		constexpr auto JumpMaxHoldTime = 0x448; // float
		constexpr auto JumpMaxCount = 0x44c; // int32_t
		constexpr auto JumpCurrentCount = 0x450; // int32_t
		constexpr auto JumpCurrentCountPreJump = 0x454; // int32_t
		constexpr auto OnReachedJumpApex = 0x460; // FMulticastInlineDelegate
		constexpr auto MovementModeChangedDelegate = 0x480; // FMulticastInlineDelegate
		constexpr auto OnCharacterMovementUpdated = 0x490; // FMulticastInlineDelegate
		constexpr auto SavedRootMotion = 0x4a0; // FRootMotionSourceGroup
		constexpr auto ClientRootMotionParams = 0x4e0; // FRootMotionMovementParams
		constexpr auto RootMotionRepMoves = 0x520; // TArray<FSimulatedRootMotionReplicatedMove>
		constexpr auto RepRootMotion = 0x530; // FRepRootMotionMontage
	}

	namespace n_UMeshSelectionTool {
		constexpr auto SelectionProps = 0x200; // UMeshSelectionToolProperties*
		constexpr auto SelectionActions = 0x208; // UMeshSelectionEditActions*
		constexpr auto EditActions = 0x210; // UMeshSelectionToolActionPropertySet*
		constexpr auto Selection = 0x218; // UMeshSelectionSet*
		constexpr auto SpawnedActors = 0x220; // TArray<AActor*>
	}

	namespace n_UAutoDestroySubsystem {
		constexpr auto ActorsToPoll = 0x38; // TArray<AActor*>
	}

	namespace n_UNN_CraftPerkGroupTips {
		constexpr auto MainVertical = 0x288; // UVerticalBox*
		constexpr auto NameText = 0x290; // UTextBlock*
		constexpr auto LockText = 0x298; // UTextBlock*
		constexpr auto DesText = 0x2a0; // UTextBlock*
		constexpr auto RequireCanvas = 0x2a8; // UCanvasPanel*
		constexpr auto RequireVertical = 0x2b0; // UVerticalBox*
		constexpr auto RequireCraftPerkCanvas = 0x2b8; // UCanvasPanel*
		constexpr auto RequireCraftPerkVertical = 0x2c0; // UVerticalBox*
		constexpr auto RequirePerkCanvas = 0x2c8; // UCanvasPanel*
		constexpr auto RequirePerkVertical = 0x2d0; // UVerticalBox*
		constexpr auto RequireItemsCanvas = 0x2d8; // UCanvasPanel*
		constexpr auto RequireItemsVertical = 0x2e0; // UVerticalBox*
		constexpr auto RequireBottomLineCanvas = 0x2e8; // UCanvasPanel*
		constexpr auto CraftNameCanvas = 0x2f0; // UCanvasPanel*
		constexpr auto CraftNameVertical = 0x2f8; // UVerticalBox*
		constexpr auto CraftNameBottomLineCanvas = 0x300; // UCanvasPanel*
		constexpr auto CraftLockText = 0x308; // FText
		constexpr auto CraftUnLockText = 0x320; // FText
		constexpr auto TextFontInfo = 0x338; // FSlateFontInfo
		constexpr auto EnoughColor = 0x390; // FLinearColor
		constexpr auto NotEnoughColot = 0x3a0; // FLinearColor
		constexpr auto BindCraftPerkGroup = 0x3b0; // TWeakObjectPtr<USGCraftPerkGroup>
		constexpr auto ImageNameTipsTemplate = 0x3b8; // USGImageNameTips*
		constexpr auto ToolTipsDescriptionTextWrapDelta = 0x3c0; // float
	}

	namespace n_UPhononReverbSourceSettings {
		constexpr auto SourceReverbSimulationType = 0x28; // EIplSimulationType
		constexpr auto SourceReverbContribution = 0x2c; // float
	}

	namespace n_UUI_MapItem {
		constexpr auto NormalRowTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverRowTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectRowTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto PingMsColor = 0x2d8; // TMap<int32_t, FLinearColor>
		constexpr auto TbSessionName = 0x328; // UTextBlock*
		constexpr auto TbPlayerNum = 0x330; // UTextBlock*
		constexpr auto TbPingMS = 0x338; // UTextBlock*
		constexpr auto BtnBg = 0x340; // UButton*
		constexpr auto ImgBg = 0x348; // UImage*
		constexpr auto OnMapItemClicked = 0x350; // FMulticastInlineDelegate
		constexpr auto BindServerInfoIndex = 0x360; // int32_t
		constexpr auto bHovered = 0x364; // char : 1
		constexpr auto bSelected = 0x364; // char : 1
		constexpr auto bFavorite = 0x364; // char : 1
	}

	namespace n_UWidgetInteractionComponent {
		constexpr auto OnHoveredWidgetChanged = 0x208; // FMulticastInlineDelegate
		constexpr auto VirtualUserIndex = 0x228; // int32_t
		constexpr auto PointerIndex = 0x22c; // int32_t
		constexpr auto TraceChannel = 0x230; // ECollisionChannel
		constexpr auto InteractionDistance = 0x234; // float
		constexpr auto InteractionSource = 0x238; // EWidgetInteractionSource
		constexpr auto bEnableHitTesting = 0x239; // bool
		constexpr auto bShowDebug = 0x23a; // bool
		constexpr auto DebugSphereLineThickness = 0x23c; // float
		constexpr auto DebugLineThickness = 0x240; // float
		constexpr auto DebugColor = 0x244; // FLinearColor
		constexpr auto CustomHitResult = 0x2d0; // FHitResult
		constexpr auto LocalHitLocation = 0x35c; // FVector2D
		constexpr auto LastLocalHitLocation = 0x364; // FVector2D
		constexpr auto HoveredWidgetComponent = 0x370; // UWidgetComponent*
		constexpr auto LastHitResult = 0x378; // FHitResult
		constexpr auto bIsHoveredWidgetInteractable = 0x404; // bool
		constexpr auto bIsHoveredWidgetFocusable = 0x405; // bool
		constexpr auto bIsHoveredWidgetHitTestVisible = 0x406; // bool
	}

	namespace n_UMaterialExpressionSpeedTree {
		constexpr auto GeometryInput = 0x40; // FExpressionInput
		constexpr auto WindInput = 0x54; // FExpressionInput
		constexpr auto LODInput = 0x68; // FExpressionInput
		constexpr auto ExtraBendWS = 0x7c; // FExpressionInput
		constexpr auto GeometryType = 0x90; // ESpeedTreeGeometryType
		constexpr auto WindType = 0x91; // ESpeedTreeWindType
		constexpr auto LODType = 0x92; // ESpeedTreeLODType
		constexpr auto BillboardThreshold = 0x94; // float
		constexpr auto bAccurateWindVelocities = 0x98; // bool
	}

	namespace n_UCustomPlaySound_AnimNotify {
		constexpr auto SoundType = 0x38; // ESGSoundType
		constexpr auto SoundID = 0x3c; // FName
		constexpr auto PreviewVoiceData = 0x44; // FVoiceData
		constexpr auto PreviewSex = 0x4c; // ECharacterSex
		constexpr auto UseWeaponSound = 0x4d; // char : 1
		constexpr auto IsEquip = 0x4d; // char : 1
		constexpr auto PlayMode = 0x4e; // ENotifySoundPlayMode
		constexpr auto SoundTag = 0x50; // FName
		constexpr auto bFollow = 0x58; // char : 1
		constexpr auto AttachName = 0x5c; // FName
		constexpr auto ReplaySound = 0x64; // char : 1
		constexpr auto ForcePlay = 0x64; // char : 1
		constexpr auto StopWhenAnimInterrupe = 0x64; // char : 1
		constexpr auto StopLooping = 0x64; // char : 1
	}

	namespace n_UEditNormalsTool {
		constexpr auto BasicProperties = 0x90; // UEditNormalsToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UEditNormalsAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
	}

	namespace n_UMovieSceneCameraAnimTrack {
		constexpr auto CameraAnimSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBTTask_DoRoadPath {
		constexpr auto BrakingDistance = 0xd0; // float
	}

	namespace n_USoundNodeBranch {
		constexpr auto BoolParameterName = 0x48; // FName
	}

	namespace n_URemeshMeshTool {
		constexpr auto BasicProperties = 0x98; // URemeshMeshToolProperties*
		constexpr auto MeshStatisticsProperties = 0xa0; // UMeshStatisticsProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UUI_N_Shop_MainBtn {
		constexpr auto BtnIndex = 0x3f8; // EShopUIMainIndex
		constexpr auto ParentWptr = 0x3fc; // TWeakObjectPtr<UUI_N_Shop>
	}

	namespace n_UUI_ModsManageBase {
		constexpr auto mListView_PassiveMos = 0x260; // UListView*
		constexpr auto mListView_ActiveMods = 0x268; // UListView*
		constexpr auto mButton_PassiveMod = 0x270; // UButton*
		constexpr auto mButton_ActiveMod = 0x278; // UButton*
		constexpr auto mButton_Close = 0x280; // UButton*
		constexpr auto mButton_Refresh = 0x288; // UButton*
		constexpr auto mTextBlock_Log = 0x290; // UTextBlock*
	}

	namespace n_ASGStructureEnergy {
		constexpr auto MaxEnergyAmount = 0xf80; // float
		constexpr auto PerSceondAdd = 0xf84; // float
		constexpr auto ActiveConsumeEnergyPerSecond = 0xf88; // float
		constexpr auto CurrentEnergyAmount = 0xf8c; // float
		constexpr auto StoreEnergyHandle = 0xf90; // FTimerHandle
		constexpr auto bIsUsingEnergy = 0xf98; // char : 1
		constexpr auto Power = 0xf9c; // float
	}

	namespace n_UHelpTipsSlot {
		constexpr auto Border = 0x260; // UBorder*
		constexpr auto LeftText = 0x268; // UTextBlock*
		constexpr auto RightText = 0x270; // UTextBlock*
		constexpr auto BorderText = 0x278; // UTextBlock*
		constexpr auto CDProgressBar = 0x280; // UProgressBar*
		constexpr auto TipsSetting = 0x288; // FHelpTipsSlotSetting
		constexpr auto bIsLeft = 0x2f8; // char : 1
		constexpr auto ActionName = 0x2fc; // FName [0x23]
		constexpr auto ChangeSeatActionName = 0x418; // TArray<FName>
		constexpr auto LeftButtonTexture = 0x428; // TSoftObjectPtr<UTexture2D>
		constexpr auto RightButtonTexture = 0x450; // TSoftObjectPtr<UTexture2D>
		constexpr auto MiddleButtonTexture = 0x478; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutMapingText = 0x4a0; // TMap<FString, FText>
		constexpr auto ActiveBorderTex = 0x4f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalBorderTex = 0x518; // TSoftObjectPtr<UTexture2D>
		constexpr auto bBorderActive = 0x540; // char : 1
		constexpr auto NeedTickType = 0x548; // TArray<EHelpTipInstructions>
		constexpr auto BindType = 0x558; // EHelpTipInstructions
		constexpr auto AltText = 0x560; // FText
		constexpr auto ShiftText = 0x578; // FText
		constexpr auto CmdText = 0x590; // FText
		constexpr auto CtrlText = 0x5a8; // FText
		constexpr auto BindChangeSeatIndex = 0x5c0; // int32_t
	}

	namespace n_UN_CraftPanelTips {
		constexpr auto MainVerticalBox = 0x288; // UVerticalBox*
		constexpr auto ItemIcon = 0x290; // UImage*
		constexpr auto TextName = 0x298; // UTextBlock*
		constexpr auto TbWeaponType = 0x2a0; // UTextBlock*
		constexpr auto VbBase = 0x2a8; // UVerticalBox*
		constexpr auto CraftPanel = 0x2b0; // UCanvasPanel*
		constexpr auto CraftResouceVertical = 0x2b8; // UVerticalBox*
		constexpr auto DescriptionTipsItem = 0x2c0; // UToolTipsItem*
		constexpr auto bOnlyShowStepPanel = 0x2c8; // char : 1
		constexpr auto StepPanel = 0x2d0; // UCanvasPanel*
		constexpr auto StepResouceVertical = 0x2d8; // UVerticalBox*
		constexpr auto MysponsorWidget = 0x2e0; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto BindInventory = 0x2e8; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindItem = 0x2f0; // TWeakObjectPtr<USGItem>
		constexpr auto ToolTipsItemTempalte = 0x2f8; // UToolTipsItem*
		constexpr auto ResourceItemTempalte = 0x300; // UN_CraftPanelTipsSlot*
		constexpr auto WeaponSkillTypeText = 0x308; // FText [0x8]
		constexpr auto WeaponTypeText = 0x3c8; // FText [0xd]
		constexpr auto AmmoTypeText = 0x500; // FText [0xd]
		constexpr auto ToolTipsDescriptionTextWrapDelta = 0x63c; // float
	}

	namespace n_UChaosGameplayEventDispatcher {
		constexpr auto CollisionEventRegistrations = 0x1d8; // TMap<UPrimitiveComponent*, FChaosHandlerSet>
		constexpr auto BreakEventRegistrations = 0x228; // TMap<UPrimitiveComponent*, FBreakEventCallbackWrapper>
	}

	namespace n_UUI_SetGuildLanguage {
		constexpr auto LanguageCanvasPanel = 0x2d8; // UCanvasPanel*
		constexpr auto ExitButton = 0x2e0; // UButton*
		constexpr auto LanguageGridCols = 0x2e8; // int32_t
		constexpr auto GuildLanguageSlotClass = 0x2f0; // UGuildLanguageSlot*
		constexpr auto ColumnDistance = 0x2f8; // float
		constexpr auto RowDistance = 0x2fc; // float
		constexpr auto LanguageSlotSize = 0x300; // FVector2D
		constexpr auto ShowLanguageTypeMax = 0x308; // int32_t
		constexpr auto ShowLanguageTypeMin = 0x30c; // int32_t
	}

	namespace n_UMaterialFunctionInterface {
		constexpr auto StateId = 0x28; // FGuid
		constexpr auto MaterialFunctionUsage = 0x38; // EMaterialFunctionUsage
	}

	namespace n_UMaterialExpressionInverseLinearInterpolate {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto Value = 0x68; // FExpressionInput
		constexpr auto ConstA = 0x7c; // float
		constexpr auto ConstB = 0x80; // float
		constexpr auto ConstValue = 0x84; // float
		constexpr auto bClampResult = 0x88; // bool
	}

	namespace n_ASceneCapture {
		constexpr auto MeshComp = 0x310; // UStaticMeshComponent*
		constexpr auto SceneComponent = 0x318; // USceneComponent*
	}

	namespace n_UTriangleSetComponent {
		constexpr auto Bounds = 0x4b0; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x4cc; // bool
	}

	namespace n_ANatureBGMVolume {
		constexpr auto Priority = 0x348; // int32_t
		constexpr auto ModifyBGM = 0x350; // FBGMDetailData [0xa]
	}

	namespace n_UVehiclePerkColumn {
		constexpr auto PerkSlotTemplate = 0x260; // UVehiclePerkSlot*
		constexpr auto RequiredLevelText = 0x268; // UTextBlock*
		constexpr auto PerkSlotWrapBox = 0x270; // UWrapBox*
	}

	namespace n_UWBP_SystemSetting_C {
		constexpr auto AnchorModeSetting = 0x280; // UWBP_AnchorModeSystemSetting_C*
		constexpr auto AudioSetting = 0x288; // UWBP_AudioSystemSetting_C*
		constexpr auto ControlSetting = 0x290; // UWBP_ControlSystemSetting_C*
		constexpr auto GraphSetting = 0x298; // UWBP_GraphSystemSetting_C*
		constexpr auto LanguageSetting = 0x2a0; // UWBP_LanguageSystemSetting_C*
		constexpr auto NetworkSetting = 0x2a8; // UWBP_NetworkSystemSetting_C*
		constexpr auto SwitchSetting = 0x2b0; // UWBP_SwitchSystemSetting_C*
		constexpr auto SystemSetting = 0x2b8; // UCanvasPanel*
		constexpr auto SystemSettingRadioView = 0x2c0; // UWBP_SystemSettingRadioView_C*
	}

	namespace n_ALightmassPortal {
		constexpr auto PortalComponent = 0x310; // ULightmassPortalComponent*
	}

	namespace n_UAbilityTask_WaitAbilityCommit {
		constexpr auto OnCommit = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_Overlap {
		constexpr auto OverlapData = 0x1f8; // FEnvOverlapData
	}

	namespace n_UMovieSceneVectorSection {
		constexpr auto Curves = 0xe8; // FMovieSceneFloatChannel [0x4]
		constexpr auto ChannelsUsed = 0x368; // int32_t
	}

	namespace n_UAllianceMemberSlot {
		constexpr auto KickOutDataButton = 0x2d8; // UDataButton*
		constexpr auto TransGuildDataButton = 0x2e0; // UDataButton*
		constexpr auto GuildNameText = 0x2e8; // UTextBlock*
		constexpr auto GuildLevelText = 0x2f0; // UTextBlock*
		constexpr auto GuildOwnerText = 0x2f8; // UTextBlock*
		constexpr auto MemberCountText = 0x300; // UTextBlock*
		constexpr auto StructureProssessAuthText = 0x308; // UTextBlock*
		constexpr auto BGImage = 0x310; // UImage*
		constexpr auto NormalBGTexture = 0x318; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x340; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UTileView {
		constexpr auto EntryHeight = 0x368; // float
		constexpr auto EntryWidth = 0x36c; // float
		constexpr auto TileAlignment = 0x370; // EListItemAlignment
		constexpr auto bWrapHorizontalNavigation = 0x371; // bool
	}

	namespace n_UViewport {
		constexpr auto BackgroundColor = 0x120; // FLinearColor
	}

	namespace n_UUI_GuildQuest {
		constexpr auto GetAwardButton = 0x2d8; // UDataButton*
		constexpr auto QuestListScrollBox = 0x2e0; // UScrollBox*
		constexpr auto QuestDescText = 0x2e8; // UTextBlock*
		constexpr auto QuestObjectVertical = 0x2f0; // UVerticalBox*
		constexpr auto QuestAwardText = 0x2f8; // UTextBlock*
		constexpr auto CapitalText = 0x300; // UTextBlock*
		constexpr auto ShortCutPanel = 0x308; // UN_ShortCutPanel*
		constexpr auto SelfItemCraftSlot = 0x310; // UN_ItemCraftQueueSlot*
		constexpr auto StructureItemCraftSlot = 0x318; // UN_ItemCraftQueueSlot*
		constexpr auto DescIconCanvasPanel = 0x320; // UCanvasPanel*
		constexpr auto CloseDescIconButton = 0x328; // UButton*
		constexpr auto DescIconImage = 0x330; // UImage*
		constexpr auto DescIconButton = 0x338; // UButton*
		constexpr auto WikiJumpBtn = 0x340; // UButton*
		constexpr auto GuildQuestSlotTemplate = 0x348; // UGuildQuestSlot*
		constexpr auto SignItemSlotClass = 0x350; // UGuildItemSlot*
		constexpr auto QuestObjectTemplate = 0x358; // UGameCharacterQuestObject*
		constexpr auto CountsPerRow = 0x360; // int32_t
		constexpr auto QuestSlotMargin = 0x364; // FMargin
		constexpr auto RadioImageName = 0x374; // FName
		constexpr auto QuestObjMargin = 0x37c; // FMargin
		constexpr auto DisableAwardTips = 0x390; // FString
		constexpr auto DisableAwardTipWidgetTemplate = 0x3a0; // USGToolTipWidget*
		constexpr auto NormalStyle = 0x3a8; // FButtonStyle
		constexpr auto DisableStyle = 0x620; // FButtonStyle
	}

	namespace n_UAbilityTask_StartAbilityState {
		constexpr auto OnStateEnded = 0x80; // FMulticastInlineDelegate
		constexpr auto OnStateInterrupted = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UBrushRemeshProperties {
		constexpr auto bEnableRemeshing = 0x70; // bool
		constexpr auto TriangleSize = 0x74; // int32_t
		constexpr auto PreserveDetail = 0x78; // int32_t
	}

	namespace n_UPrefabAsset {
		constexpr auto AssetReferences = 0x28; // TMap<FString, FSoftObjectPath>
		constexpr auto GeneratedBlueprintAssetReference = 0x78; // FSoftObjectPath
		constexpr auto PrefabId = 0x90; // FGuid
		constexpr auto PrefabContent = 0xa0; // FString
		constexpr auto PrefabHash = 0xb0; // FString
		constexpr auto NumActors = 0xc0; // int32_t
		constexpr auto PrefabPivot = 0xc4; // FVector
	}

	namespace n_UHapticFeedbackEffect_SoundWave {
		constexpr auto SoundWave = 0x28; // USoundWave*
	}

	namespace n_UVariantObjectBinding {
		constexpr auto CachedActorLabel = 0x28; // FString
		constexpr auto ObjectPtr = 0x38; // FSoftObjectPath
		constexpr auto LazyObjectPtr = 0x50; // LazyObjectProperty
		constexpr auto CapturedProperties = 0x70; // TArray<UPropertyValue*>
		constexpr auto FunctionCallers = 0x80; // TArray<FFunctionCaller>
	}

	namespace n_UPawnAction_Move {
		constexpr auto GoalActor = 0x98; // AActor*
		constexpr auto GoalLocation = 0xa0; // FVector
		constexpr auto AcceptableRadius = 0xac; // float
		constexpr auto FilterClass = 0xb0; // UNavigationQueryFilter*
		constexpr auto bAllowStrafe = 0xb8; // char : 1
		constexpr auto bFinishOnOverlap = 0xb8; // char : 1
		constexpr auto bUsePathfinding = 0xb8; // char : 1
		constexpr auto bAllowPartialPath = 0xb8; // char : 1
		constexpr auto bProjectGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatePathToGoal = 0xb8; // char : 1
		constexpr auto bAbortChildActionOnPathChange = 0xb8; // char : 1
	}

	namespace n_UParticleModuleAttractorPoint {
		constexpr auto position = 0x30; // FRawDistributionVector
		constexpr auto Range = 0x78; // FRawDistributionFloat
		constexpr auto Strength = 0xa8; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd8; // char : 1
		constexpr auto bAffectBaseVelocity = 0xd8; // char : 1
		constexpr auto bOverrideVelocity = 0xd8; // char : 1
		constexpr auto bUseWorldSpacePosition = 0xd8; // char : 1
		constexpr auto Positive_X = 0xd8; // char : 1
		constexpr auto Positive_Y = 0xd8; // char : 1
		constexpr auto Positive_Z = 0xd8; // char : 1
		constexpr auto Negative_X = 0xd8; // char : 1
		constexpr auto Negative_Y = 0xd9; // char : 1
		constexpr auto Negative_Z = 0xd9; // char : 1
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightIlluminance {
		constexpr auto LightIndex = 0x40; // int32_t
		constexpr auto WorldPosition = 0x44; // FExpressionInput
	}

	namespace n_UInterpGroupInst {
		constexpr auto Group = 0x28; // UInterpGroup*
		constexpr auto GroupActor = 0x30; // AActor*
		constexpr auto TrackInst = 0x38; // TArray<UInterpTrackInst*>
	}

	namespace n_UPlaneReflectionCaptureComponent {
		constexpr auto InfluenceRadiusScale = 0x280; // float
		constexpr auto PreviewInfluenceRadius = 0x288; // UDrawSphereComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_USingleClickInputBehavior {
		constexpr auto HitTestOnRelease = 0xc0; // bool
	}

	namespace n_ABrush {
		constexpr auto BrushType = 0x310; // EBrushType
		constexpr auto BrushColor = 0x314; // FColor
		constexpr auto PolyFlags = 0x318; // int32_t
		constexpr auto bColored = 0x31c; // char : 1
		constexpr auto bSolidWhenSelected = 0x31c; // char : 1
		constexpr auto bPlaceableFromClassBrowser = 0x31c; // char : 1
		constexpr auto bNotForClientOrServer = 0x31c; // char : 1
		constexpr auto Brush = 0x320; // UModel*
		constexpr auto BrushComponent = 0x328; // UBrushComponent*
		constexpr auto bInManipulation = 0x330; // char : 1
		constexpr auto SavedSelections = 0x338; // TArray<FGeomSelection>
	}

	namespace n_UMeshSelectionToolProperties {
		constexpr auto SelectionMode = 0x60; // EMeshSelectionToolPrimaryMode
		constexpr auto AngleTolerance = 0x64; // float
		constexpr auto bHitBackFaces = 0x68; // bool
		constexpr auto bShowWireframe = 0x69; // bool
		constexpr auto FaceColorMode = 0x6c; // EMeshFacesColorMode
	}

	namespace n_UChaosClothSharedSimConfig {
		constexpr auto IterationCount = 0x28; // int32_t
		constexpr auto SubdivisionCount = 0x2c; // int32_t
		constexpr auto SelfCollisionThickness = 0x30; // float
		constexpr auto CollisionThickness = 0x34; // float
		constexpr auto bUseDampingOverride = 0x38; // bool
		constexpr auto Damping = 0x3c; // float
		constexpr auto bUseGravityOverride = 0x40; // bool
		constexpr auto GravityScale = 0x44; // float
		constexpr auto Gravity = 0x48; // FVector
		constexpr auto bUseLocalSpaceSimulation = 0x54; // bool
		constexpr auto bUseXPBDConstraints = 0x55; // bool
	}

	namespace n_UBattleStatisticsItem {
		constexpr auto SameTeamBgTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffTeamBgTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto OwnerBgTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto TbName = 0x2d8; // UTextBlock*
		constexpr auto TbKillNum = 0x2e0; // UTextBlock*
		constexpr auto TbDeathNum = 0x2e8; // UTextBlock*
		constexpr auto TbAssistNum = 0x2f0; // UTextBlock*
		constexpr auto TbScore = 0x2f8; // UTextBlock*
		constexpr auto ImgBg = 0x300; // UImage*
		constexpr auto ImageMVP = 0x308; // UImage*
	}

	namespace n_UWBP_NetworkSystemSetting_C {
		constexpr auto bClientEnableUpdateRateOptimizations = 0x290; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowNetStat = 0x298; // UWBP_SystemSettingCheckBox_C*
		constexpr auto TitleImage = 0x2a0; // UImage*
	}

	namespace n_UAnimSet {
		constexpr auto bAnimRotationOnly = 0x28; // char : 1
		constexpr auto TrackBoneNames = 0x30; // TArray<FName>
		constexpr auto LinkupCache = 0x40; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0x50; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0x60; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0x70; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x80; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x90; // FName
		constexpr auto BestRatioSkelMeshName = 0x98; // FName
	}

	namespace n_UInterpTrackInstProperty {
		constexpr auto InterpProperty = 0x28; // TFieldPath<FProperty>
		constexpr auto PropertyOuterObjectInst = 0x48; // UObject*
	}

	namespace n_UProceduralShapeToolProperties {
		constexpr auto bInstanceIfPossible = 0x60; // bool
		constexpr auto PolygroupMode = 0x61; // EMakeMeshPolygroupMode
		constexpr auto PlaceMode = 0x62; // EMakeMeshPlacementType
		constexpr auto bSnapToGrid = 0x63; // bool
		constexpr auto PivotLocation = 0x64; // EMakeMeshPivotLocation
		constexpr auto Rotation = 0x68; // float
		constexpr auto bAlignShapeToPlacementSurface = 0x6c; // bool
	}

	namespace n_UDecorationAnimInstance {
		constexpr auto SourceMeshComponent = 0x2c0; // USkeletalMeshComponent*
	}

	namespace n_UUI_GameSiegeTips {
		constexpr auto bIsFireSeat = 0x2f8; // char : 1
		constexpr auto bIsControlSeat = 0x2f8; // char : 1
		constexpr auto bActive = 0x2f8; // char : 1
		constexpr auto FireMode = 0x2f9; // ETurretFireMode
		constexpr auto bShowAngle = 0x2fa; // char : 1
		constexpr auto BindInventory = 0x2fc; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ScaleplateImg = 0x308; // UImage*
		constexpr auto ReloadCanvas = 0x310; // UCanvasPanel*
		constexpr auto ReloadAmmoText = 0x318; // UTextBlock*
		constexpr auto ReloadProgressBar = 0x320; // UProgressBar*
		constexpr auto AnglePanel = 0x328; // UCanvasPanel*
		constexpr auto AngleText = 0x330; // UTextBlock*
		constexpr auto StoreCanvas = 0x338; // UCanvasPanel*
		constexpr auto StoreProgressBar = 0x340; // UProgressBar*
		constexpr auto StoreProgressBarText = 0x348; // UTextBlock*
		constexpr auto LeftTimeCanvas = 0x350; // UCanvasPanel*
		constexpr auto LeftTimeProgressBar = 0x358; // UProgressBar*
		constexpr auto LeftTimeText = 0x360; // UTextBlock*
		constexpr auto TipsText = 0x368; // USGRichTextBlock*
		constexpr auto WarningCanvas = 0x370; // UCanvasPanel*
		constexpr auto ScaleplateCanvas = 0x378; // UCanvasPanel*
		constexpr auto BottomHelpHorizontal = 0x380; // UHorizontalBox*
		constexpr auto AmmoGridPanel = 0x388; // UUniformGridPanel*
		constexpr auto ColumnMaxAmount = 0x390; // int32_t
		constexpr auto SiegeAmmoSlotTemplate = 0x398; // USiegeTipsAmmoSlot*
		constexpr auto bIsNeedShowScaleplate = 0x3a0; // char : 1
		constexpr auto SiegeTipsHelpSlotTemplate = 0x3a8; // UHelpTipsSlot*
		constexpr auto NotControlSeatCollapsedSlotList = 0x3b0; // TArray<UHelpTipsSlot*>
		constexpr auto NotFireSeatCollapsedSlotList = 0x3c0; // TArray<UHelpTipsSlot*>
		constexpr auto BottomSlotPadding = 0x3d0; // FVector4
		constexpr auto bShowScaleplate = 0x3e0; // char : 1
		constexpr auto SiegeTypeToHelpTip = 0x3e8; // FHelpTips [0xa]
		constexpr auto ChangeOperationText = 0x488; // FText
		constexpr auto ChangeFireSeatText = 0x4a0; // FText
		constexpr auto ChangeHelpSeatText = 0x4b8; // FText
		constexpr auto FireStopTime = 0x4d0; // float
		constexpr auto AmmoSlotList = 0x4e0; // TArray<USiegeTipsAmmoSlot*>
	}

	namespace n_UNiagaraPrecompileContainer {
		constexpr auto Scripts = 0x28; // TArray<UNiagaraScript*>
		constexpr auto System = 0x38; // UNiagaraSystem*
	}

	namespace n_UGroomAssetImportData {
		constexpr auto ImportOptions = 0x28; // UGroomImportOptions*
	}

	namespace n_UAxisPositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoFloatParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bInInteraction = 0x89; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionAxis = 0x98; // FVector
		constexpr auto InteractionStartPoint = 0xa4; // FVector
		constexpr auto InteractionCurPoint = 0xb0; // FVector
		constexpr auto InteractionStartParameter = 0xbc; // float
		constexpr auto InteractionCurParameter = 0xc0; // float
		constexpr auto ParameterSign = 0xc4; // float
	}

	namespace n_UBlackboardKeyType_String {
		constexpr auto StringValue = 0x30; // FString
	}

	namespace n_UGuildStorePanel {
		constexpr auto GuildStoreDetailPanel = 0x2d8; // UGuildStoreDetailPanel*
		constexpr auto GuildStoreHorsePanel = 0x2e0; // UGuildStoreHorsePanel*
		constexpr auto GuildStoreGeneralPanel = 0x2e8; // UGuildStoreGeneralPanel*
		constexpr auto GuildStoreItemPanel = 0x2f0; // UGuildStoreItemPanel*
	}

	namespace n_ASGStructureRecoveryProjectile {
		constexpr auto RecoveryRate = 0xd68; // float
		constexpr auto bRecoveryFriend = 0xd6c; // char : 1
		constexpr auto bRecoveryOthers = 0xd6c; // char : 1
		constexpr auto CanRecoveryAmmoType = 0xd70; // TArray<EAmmoType>
		constexpr auto bCanRecoveryThrowWeapon = 0xd80; // char : 1
	}

	namespace n_UUI_OfficalSessionListRow {
		constexpr auto NormalRowTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverRowTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectRowTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto PingMsColor = 0x2d8; // TMap<int32_t, FLinearColor>
		constexpr auto SessionNameDataTable = 0x328; // UDataTable*
		constexpr auto TbSessionName = 0x330; // UTextBlock*
		constexpr auto TbPingMS = 0x338; // UTextBlock*
		constexpr auto BtnBg = 0x340; // UButton*
		constexpr auto ImgBg = 0x348; // UImage*
		constexpr auto OnOfficalSessionListRowClicked = 0x350; // FMulticastInlineDelegate
		constexpr auto BindServerInfoIndex = 0x360; // int32_t
		constexpr auto bHovered = 0x364; // char : 1
		constexpr auto bSelected = 0x364; // char : 1
		constexpr auto bFavorite = 0x364; // char : 1
	}

	namespace n_UMaterialExpressionLandscapeLayerSwitch {
		constexpr auto LayerUsed = 0x40; // FExpressionInput
		constexpr auto LayerNotUsed = 0x54; // FExpressionInput
		constexpr auto ParameterName = 0x68; // FName
		constexpr auto PreviewUsed = 0x70; // char : 1
		constexpr auto ExpressionGUID = 0x74; // FGuid
	}

	namespace n_ULogicReplicationGraph {
		constexpr auto SpatializedClasses = 0x4a8; // TArray<UObject*>
		constexpr auto NonSpatializedChildClasses = 0x4b8; // TArray<UObject*>
		constexpr auto AlwaysRelevantClasses = 0x4c8; // TArray<UObject*>
		constexpr auto GridNode = 0x4d8; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto GridNodeDormancy = 0x4e0; // UReplicationGraphNode_GridSpatialization2D*
		constexpr auto AlwaysRelevantNode = 0x4e8; // UReplicationGraphNode_ActorList*
		constexpr auto AlwaysRelevantDormancyNode = 0x4f0; // UReplicationGraphNode_DormancyNode*
	}

	namespace n_UWBP_ProducerName_4_C {
		constexpr auto WBP_ProducerSlot = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_7 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_8 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_9 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_10 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_11 = 0x298; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSplitLine = 0x2a0; // UWBP_ProducerSplitLine_C*
	}

	namespace n_ASGDestructibleActor {
		constexpr auto bCheckLocalPlayer = 0x328; // char : 1
		constexpr auto bUseDissolve = 0x328; // char : 1
		constexpr auto DissolveDuration = 0x32c; // float
		constexpr auto DissolveStartTime = 0x330; // float
		constexpr auto MinDistanceFormPlayerShouldDestroy = 0x334; // float
		constexpr auto CheckLocalPlayerInterval = 0x338; // float
		constexpr auto LastCheckLocalPlayerTime = 0x340; // double
		constexpr auto DissolvesMeshMats = 0x348; // TArray<UMaterialInstanceDynamic*>
	}

	namespace n_UUserInterfaceSettings {
		constexpr auto RenderFocusRule = 0x38; // ERenderFocusRule
		constexpr auto HardwareCursors = 0x40; // TMap<EMouseCursor, FHardwareCursorReference>
		constexpr auto SoftwareCursors = 0x90; // TMap<EMouseCursor, FSoftClassPath>
		constexpr auto DefaultCursor = 0xe0; // FSoftClassPath
		constexpr auto TextEditBeamCursor = 0xf8; // FSoftClassPath
		constexpr auto CrosshairsCursor = 0x110; // FSoftClassPath
		constexpr auto HandCursor = 0x128; // FSoftClassPath
		constexpr auto GrabHandCursor = 0x140; // FSoftClassPath
		constexpr auto GrabHandClosedCursor = 0x158; // FSoftClassPath
		constexpr auto SlashedCircleCursor = 0x170; // FSoftClassPath
		constexpr auto ApplicationScale = 0x188; // float
		constexpr auto UIScaleRule = 0x18c; // EUIScalingRule
		constexpr auto CustomScalingRuleClass = 0x190; // FSoftClassPath
		constexpr auto UIScaleCurve = 0x1a8; // FRuntimeFloatCurve
		constexpr auto bAllowHighDPIInGameMode = 0x230; // bool
		constexpr auto DesignScreenSize = 0x234; // FIntPoint
		constexpr auto bLoadWidgetsOnDedicatedServer = 0x23c; // bool
		constexpr auto CursorClasses = 0x240; // TArray<UObject*>
		constexpr auto CustomScalingRuleClassInstance = 0x250; // UObject*
		constexpr auto CustomScalingRule = 0x258; // UDPICustomScalingRule*
	}

	namespace n_ASGStructureAmmoBox {
		constexpr auto ValidDistance = 0xf80; // float
		constexpr auto bCanAmmoStructure = 0xf84; // char : 1
		constexpr auto CheckStructureInterval = 0xf88; // int32_t
		constexpr auto bCanRepairStructure = 0xf8c; // char : 1
		constexpr auto CheckRepairInterval = 0xf90; // int32_t
		constexpr auto bCanFoodStructure = 0xf94; // char : 1
		constexpr auto CheckFoodInterval = 0xf98; // int32_t
	}

	namespace n_UMaterialExpressionDistanceFieldGradient {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_UTaishouTeamInfoSlot {
		constexpr auto GuildTipsTemplate = 0x2d8; // UBattleGuildTips*
		constexpr auto Image_GuildIcon = 0x2e0; // UImage*
		constexpr auto SelectedImage = 0x2e8; // UImage*
		constexpr auto ParentUIPtr = 0x310; // TWeakObjectPtr<USGUI>
		constexpr auto BindTipsGuildID = 0x318; // FGuid
		constexpr auto BindTipsAllianceID = 0x328; // FGuid
		constexpr auto LastToolTipSizeX = 0x338; // float
		constexpr auto LastToolTipSizeY = 0x33c; // float
	}

	namespace n_UParticleModuleAttractorLine {
		constexpr auto EndPoint0 = 0x30; // FVector
		constexpr auto EndPoint1 = 0x3c; // FVector
		constexpr auto Range = 0x48; // FRawDistributionFloat
		constexpr auto Strength = 0x78; // FRawDistributionFloat
	}

	namespace n_UUI_Activity_Guanai {
		constexpr auto BtShowCrossTransport = 0x2d8; // UButton*
		constexpr auto BtShowBattle = 0x2e0; // UButton*
		constexpr auto BtShowInventory = 0x2e8; // UButton*
		constexpr auto CityMapImage = 0x2f0; // UImage*
		constexpr auto CityGuanAiPanel = 0x2f8; // UCanvasPanel*
		constexpr auto GuanAiListPanel = 0x300; // UScrollBox*
		constexpr auto CityFlagSlot = 0x308; // UCityFlagSlot*
		constexpr auto BtSwitchBigMap = 0x310; // UButton*
		constexpr auto BtBattleInfo = 0x318; // UButton*
		constexpr auto GuanAiFlagSlotClass = 0x320; // UGuanAiFlagSlot*
		constexpr auto GuanAiRowSlotClass = 0x328; // UGuanAiRowSlot*
		constexpr auto JunGuanAiBattleUI = 0x330; // TWeakObjectPtr<UUI_JunGuanAiBattle>
		constexpr auto JunGuanAiBattleUITemplate = 0x338; // UUI_JunGuanAiBattle*
	}

	namespace n_UMaterialExpressionMultiply {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UWidget {
		constexpr auto Slot = 0x28; // UPanelSlot*
		constexpr auto bIsEnabledDelegate = 0x30; // FDelegate
		constexpr auto ToolTipText = 0x40; // FText
		constexpr auto ToolTipTextDelegate = 0x58; // FDelegate
		constexpr auto ToolTipWidget = 0x68; // UWidget*
		constexpr auto ToolTipWidgetDelegate = 0x70; // FDelegate
		constexpr auto VisibilityDelegate = 0x80; // FDelegate
		constexpr auto RenderTransform = 0x90; // FWidgetTransform
		constexpr auto RenderTransformPivot = 0xac; // FVector2D
		constexpr auto bIsVariable = 0xb4; // char : 1
		constexpr auto bCreatedByConstructionScript = 0xb4; // char : 1
		constexpr auto bIsEnabled = 0xb4; // char : 1
		constexpr auto bOverride_Cursor = 0xb4; // char : 1
		constexpr auto AccessibleWidgetData = 0xb8; // USlateAccessibleWidgetData*
		constexpr auto bIsVolatile = 0xc0; // char : 1
		constexpr auto Cursor = 0xc1; // EMouseCursor
		constexpr auto Clipping = 0xc2; // EWidgetClipping
		constexpr auto Visibility = 0xc3; // ESlateVisibility
		constexpr auto RenderOpacity = 0xc4; // float
		constexpr auto Navigation = 0xc8; // UWidgetNavigation*
		constexpr auto FlowDirectionPreference = 0xd0; // EFlowDirectionPreference
		constexpr auto NativeBindings = 0xf8; // TArray<UPropertyBinding*>
	}

	namespace n_UUI_ReSpawn {
		constexpr auto GetSpawnLocationInterval = 0x2d8; // float
		constexpr auto RespawnButtonTemplate = 0x2e0; // USlotRespawnButton*
		constexpr auto GroupRespawnPointTemplate = 0x2e8; // URespawnPointGroup*
		constexpr auto NoviceRespawnPanelTemplate = 0x2f0; // UNoviceRespawnPanel*
		constexpr auto MiniMap = 0x2f8; // USGMiniMap*
		constexpr auto UGPRespawnButton = 0x300; // UUniformGridPanel*
		constexpr auto EtbSearch = 0x308; // UEditableText*
		constexpr auto TbRespawnName = 0x310; // UTextBlock*
		constexpr auto RespawnButton = 0x318; // UButton*
		constexpr auto RespawnTextPanel = 0x320; // UCanvasPanel*
		constexpr auto TravelButton = 0x328; // UButton*
		constexpr auto NoviceRespawnPanel = 0x330; // UNoviceRespawnPanel*
		constexpr auto TravalBedID = 0x360; // int32_t
		constexpr auto bFirstOpenRespawnUI = 0x364; // char : 1
	}

	namespace n_USceneComponent {
		constexpr auto PhysicsVolume = 0xc8; // TWeakObjectPtr<APhysicsVolume>
		constexpr auto AttachParent = 0xd0; // USceneComponent*
		constexpr auto AttachSocketName = 0xd8; // FName
		constexpr auto AttachChildren = 0xe0; // TArray<USceneComponent*>
		constexpr auto ClientAttachedChildren = 0xf0; // TArray<USceneComponent*>
		constexpr auto RelativeLocation = 0x12c; // FVector
		constexpr auto RelativeRotation = 0x138; // FRotator
		constexpr auto RelativeScale3D = 0x144; // FVector
		constexpr auto ComponentVelocity = 0x150; // FVector
		constexpr auto bComponentToWorldUpdated = 0x15c; // char : 1
		constexpr auto bAbsoluteLocation = 0x15c; // char : 1
		constexpr auto bAbsoluteRotation = 0x15c; // char : 1
		constexpr auto bAbsoluteScale = 0x15c; // char : 1
		constexpr auto bVisible = 0x15c; // char : 1
		constexpr auto bShouldBeAttached = 0x15c; // char : 1
		constexpr auto bShouldSnapLocationWhenAttached = 0x15c; // char : 1
		constexpr auto bShouldSnapRotationWhenAttached = 0x15d; // char : 1
		constexpr auto bShouldUpdatePhysicsVolume = 0x15d; // char : 1
		constexpr auto bHiddenInGame = 0x15d; // char : 1
		constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x15d; // char : 1
		constexpr auto bUseAttachParentBound = 0x15d; // char : 1
		constexpr auto Mobility = 0x15f; // EComponentMobility
		constexpr auto DetailMode = 0x160; // EDetailMode
		constexpr auto PhysicsVolumeChangedDelegate = 0x161; // FMulticastSparseDelegate
	}

	namespace n_UMultiTransformer {
		constexpr auto GizmoManager = 0x70; // UInteractiveGizmoManager*
		constexpr auto TransformGizmo = 0xe0; // UTransformGizmo*
		constexpr auto TransformProxy = 0xe8; // UTransformProxy*
	}

	namespace n_ASGAnimalAIController {
		constexpr auto bAllowRandomWander = 0x848; // char : 1
		constexpr auto WanderFixedDistance = 0x84c; // float
		constexpr auto WanderRandomDistance = 0x850; // float
		constexpr auto WanderLimitFixedTime = 0x854; // float
		constexpr auto FleeMaxYaw = 0x858; // float
		constexpr auto FleeWaitEnemyInterval = 0x85c; // float
		constexpr auto FleeWaitEnemyChance = 0x860; // float
		constexpr auto FleeLimitFixedTime = 0x864; // float
		constexpr auto AnimalFleeConfigs = 0x868; // TArray<FAIFleeConfigAnimal>
		constexpr auto TraceGroundLength = 0x878; // float
		constexpr auto bIsMoveAroundBlockade = 0x87c; // char : 1
		constexpr auto AnimalAggressionType = 0x87d; // EAnimalAggressionType
		constexpr auto bIsAmphibious = 0x87e; // char : 1
		constexpr auto CurrentFood = 0x898; // TWeakObjectPtr<AActor>
		constexpr auto bIsFeeding = 0x8a0; // char : 1
		constexpr auto bIsRideTaming = 0x8a0; // char : 1
		constexpr auto bUseAutoBrakingCondition = 0x8a0; // char : 1
		constexpr auto Enum_AnimalAIPrevStatus = 0x8a1; // EAnimalAIStatusType
		constexpr auto Enum_AnimalAIStatus = 0x8a2; // EAnimalAIStatusType
		constexpr auto bUseNavPath = 0x8c0; // char : 1
		constexpr auto bEnableAggroTamed = 0x8c0; // char : 1
	}

	namespace n_ADatasmithAreaLightActor {
		constexpr auto LightType = 0x310; // EDatasmithAreaLightActorType
		constexpr auto LightShape = 0x311; // EDatasmithAreaLightActorShape
		constexpr auto Dimensions = 0x314; // FVector2D
		constexpr auto Intensity = 0x31c; // float
		constexpr auto IntensityUnits = 0x320; // ELightUnits
		constexpr auto Color = 0x324; // FLinearColor
		constexpr auto Temperature = 0x334; // float
		constexpr auto IESTexture = 0x338; // UTextureLightProfile*
		constexpr auto bUseIESBrightness = 0x340; // bool
		constexpr auto IESBrightnessScale = 0x344; // float
		constexpr auto Rotation = 0x348; // FRotator
		constexpr auto SourceRadius = 0x354; // float
		constexpr auto SourceLength = 0x358; // float
		constexpr auto AttenuationRadius = 0x35c; // float
		constexpr auto SpotlightInnerAngle = 0x360; // float
		constexpr auto SpotlightOuterAngle = 0x364; // float
	}

	namespace n_UUI_Domain {
		constexpr auto Teleport3DUI = 0x2d8; // UUI_Teleport3D*
		constexpr auto AlliancePowerUI = 0x2e0; // UUI_AlliancePower*
		constexpr auto SGMiniMap = 0x2e8; // USGMiniMap*
		constexpr auto CapitalText = 0x2f0; // UTextBlock*
	}

	namespace n_UAlliancePanel {
		constexpr auto AllianceDetailsSlot = 0x2d8; // UAllianceDetailsSlot*
		constexpr auto LeaveAllianceButton = 0x2e0; // UButton*
		constexpr auto DisBandAllianceButton = 0x2e8; // UButton*
		constexpr auto PrePageDataButton = 0x2f0; // UDataButton*
		constexpr auto NextPageDataButton = 0x2f8; // UDataButton*
		constexpr auto ShowPageText = 0x300; // UTextBlock*
		constexpr auto MemberListPanel = 0x308; // UScrollBox*
		constexpr auto SortNameSlot = 0x310; // USortableTitleSlot*
		constexpr auto SortLevelSlot = 0x318; // USortableTitleSlot*
		constexpr auto SortGuildOwnerSlot = 0x320; // USortableTitleSlot*
		constexpr auto SortMemberCountSlot = 0x328; // USortableTitleSlot*
		constexpr auto SortStructureProssessAuthSlot = 0x330; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x338; // USortableTitleSlot*
		constexpr auto AllianceMemberNumPerPage = 0x340; // int32_t
		constexpr auto AllianceMemberSlotClass = 0x348; // UAllianceMemberSlot*
		constexpr auto ConfirmLeaveAllianceUIOverride = 0x350; // UUI_GenericConfirmationDialog*
		constexpr auto ConfirmDisBandAllianceUIOverride = 0x358; // UUI_GenericConfirmationDialog*
		constexpr auto ConfirmKickOutAllianceMemberUIOverride = 0x360; // UUI_GenericConfirmationDialog*
		constexpr auto ConfirmLeaveGuildUIOverride = 0x368; // UUI_ApplyGuildConfirm*
	}

	namespace n_USoundSimple {
		constexpr auto Variations = 0x1b8; // TArray<FSoundVariation>
		constexpr auto SoundWave = 0x1c8; // USoundWave*
	}

	namespace n_UTimecodeProvider {
		constexpr auto FrameDelay = 0x28; // float
	}

	namespace n_APlanarReflection {
		constexpr auto PlanarReflectionComponent = 0x320; // UPlanarReflectionComponent*
		constexpr auto bShowPreviewPlane = 0x328; // bool
	}

	namespace n_UGizmoLocalVec2ParameterSource {
		constexpr auto Value = 0x48; // FVector2D
		constexpr auto LastChange = 0x50; // FGizmoVec2ParameterChange
	}

	namespace n_AWaterBodyIsland {
		constexpr auto SplineComp = 0x318; // UWaterSplineComponent*
	}

	namespace n_UAnimationSettings {
		constexpr auto CompressCommandletVersion = 0x38; // int32_t
		constexpr auto KeyEndEffectorsMatchNameArray = 0x40; // TArray<FString>
		constexpr auto ForceRecompression = 0x50; // bool
		constexpr auto bForceBelowThreshold = 0x51; // bool
		constexpr auto bFirstRecompressUsingCurrentOrDefault = 0x52; // bool
		constexpr auto bRaiseMaxErrorToExisting = 0x53; // bool
		constexpr auto bEnablePerformanceLog = 0x54; // bool
		constexpr auto bStripAnimationDataOnDedicatedServer = 0x55; // bool
		constexpr auto bTickAnimationOnSkeletalMeshInit = 0x56; // bool
		constexpr auto BoneCustomAttributesNames = 0x58; // TArray<FCustomAttributeSetting>
		constexpr auto BoneNamesWithCustomAttributes = 0x68; // TArray<FString>
		constexpr auto AttributeBlendModes = 0x78; // TMap<FName, ECustomAttributeBlendType>
		constexpr auto DefaultAttributeBlendMode = 0xc8; // ECustomAttributeBlendType
	}

	namespace n_AARSharedWorldGameState {
		constexpr auto PreviewImageData = 0x390; // TArray<char>
		constexpr auto ARWorldData = 0x3a0; // TArray<char>
		constexpr auto PreviewImageBytesTotal = 0x3b0; // int32_t
		constexpr auto ARWorldBytesTotal = 0x3b4; // int32_t
		constexpr auto PreviewImageBytesDelivered = 0x3b8; // int32_t
		constexpr auto ARWorldBytesDelivered = 0x3bc; // int32_t
	}

	namespace n_UOffsetMeshTool {
		constexpr auto OffsetProperties = 0x400; // UOffsetMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeOffsetProperties*
		constexpr auto ImplicitProperties = 0x410; // UImplicitOffsetProperties*
		constexpr auto WeightMapProperties = 0x418; // UOffsetWeightMapSetProperties*
	}

	namespace n_UCompositeCurveTable {
		constexpr auto ParentTables = 0xa0; // TArray<UCurveTable*>
		constexpr auto OldParentTables = 0xb0; // TArray<UCurveTable*>
	}

	namespace n_UMaterialExpressionMin {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UUI_ChatSiftBtn {
		constexpr auto SiftType = 0x400; // EMsgSiftType
		constexpr auto HighlightIcon = 0x408; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_AFieldSystemActor {
		constexpr auto FieldSystemComponent = 0x310; // UFieldSystemComponent*
	}

	namespace n_UOverlaySlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UListView {
		constexpr auto Orientation = 0x2d8; // EOrientation
		constexpr auto SelectionMode = 0x2d9; // ESelectionMode
		constexpr auto ConsumeMouseWheel = 0x2da; // EConsumeMouseWheel
		constexpr auto bClearSelectionOnClick = 0x2db; // bool
		constexpr auto bIsFocusable = 0x2dc; // bool
		constexpr auto EntrySpacing = 0x2e0; // float
		constexpr auto bReturnFocusToSelection = 0x2e4; // bool
		constexpr auto ListItems = 0x2e8; // TArray<UObject*>
		constexpr auto BP_OnEntryInitialized = 0x308; // FMulticastInlineDelegate
		constexpr auto BP_OnItemClicked = 0x318; // FMulticastInlineDelegate
		constexpr auto BP_OnItemDoubleClicked = 0x328; // FMulticastInlineDelegate
		constexpr auto BP_OnItemIsHoveredChanged = 0x338; // FMulticastInlineDelegate
		constexpr auto BP_OnItemSelectionChanged = 0x348; // FMulticastInlineDelegate
		constexpr auto BP_OnItemScrolledIntoView = 0x358; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionRound {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UForceFeedbackComponent {
		constexpr auto ForceFeedbackEffect = 0x208; // UForceFeedbackEffect*
		constexpr auto bAutoDestroy = 0x210; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x210; // char : 1
		constexpr auto bLooping = 0x210; // char : 1
		constexpr auto bIgnoreTimeDilation = 0x210; // char : 1
		constexpr auto bOverrideAttenuation = 0x210; // char : 1
		constexpr auto IntensityMultiplier = 0x214; // float
		constexpr auto AttenuationSettings = 0x218; // UForceFeedbackAttenuation*
		constexpr auto AttenuationOverrides = 0x220; // FForceFeedbackAttenuationSettings
		constexpr auto OnForceFeedbackFinished = 0x2d0; // FMulticastInlineDelegate
	}

	namespace n_UPlaneCutTool {
		constexpr auto BasicProperties = 0x98; // UPlaneCutToolProperties*
		constexpr auto AcceptProperties = 0xa0; // UAcceptOutputProperties*
		constexpr auto CutPlaneOrigin = 0xa8; // FVector
		constexpr auto CutPlaneOrientation = 0xc0; // FQuat
		constexpr auto Previews = 0xd0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto MeshesToCut = 0xe0; // TArray<UDynamicMeshReplacementChangeTarget*>
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
	}

	namespace n_UUdpMessagingSettings {
		constexpr auto EnabledByDefault = 0x28; // bool
		constexpr auto EnableTransport = 0x29; // bool
		constexpr auto bAutoRepair = 0x2a; // bool
		constexpr auto bStopServiceWhenAppDeactivates = 0x2b; // bool
		constexpr auto UnicastEndpoint = 0x30; // FString
		constexpr auto MulticastEndpoint = 0x40; // FString
		constexpr auto MessageFormat = 0x50; // EUdpMessageFormat
		constexpr auto MulticastTimeToLive = 0x51; // char
		constexpr auto StaticEndpoints = 0x58; // TArray<FString>
		constexpr auto EnableTunnel = 0x68; // bool
		constexpr auto TunnelUnicastEndpoint = 0x70; // FString
		constexpr auto TunnelMulticastEndpoint = 0x80; // FString
		constexpr auto RemoteTunnelEndpoints = 0x90; // TArray<FString>
	}

	namespace n_UParticleModuleLocationBoneSocket {
		constexpr auto SourceType = 0x30; // ELocationBoneSocketSource
		constexpr auto UniversalOffset = 0x34; // FVector
		constexpr auto SourceLocations = 0x40; // TArray<FLocationBoneSocketInfo>
		constexpr auto SelectionMethod = 0x50; // ELocationBoneSocketSelectionMethod
		constexpr auto bUpdatePositionEachFrame = 0x54; // char : 1
		constexpr auto bOrientMeshEmitters = 0x54; // char : 1
		constexpr auto bInheritBoneVelocity = 0x54; // char : 1
		constexpr auto InheritVelocityScale = 0x58; // float
		constexpr auto SkelMeshActorParamName = 0x5c; // FName
		constexpr auto NumPreSelectedIndices = 0x64; // int32_t
	}

	namespace n_UNavigationSystemModuleConfig {
		constexpr auto bStrictlyStatic = 0x50; // char : 1
		constexpr auto bCreateOnClient = 0x50; // char : 1
		constexpr auto bAutoSpawnMissingNavData = 0x50; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x50; // char : 1
	}

	namespace n_UPawnMovementComponent {
		constexpr auto PawnOwner = 0x140; // APawn*
	}

	namespace n_UInputTouchDelegateBinding {
		constexpr auto InputTouchDelegateBindings = 0x28; // TArray<FBlueprintInputTouchDelegateBinding>
	}

	namespace n_UARTrackedQRCode {
		constexpr auto QRCode = 0x108; // FString
		constexpr auto Version = 0x118; // int32_t
	}

	namespace n_UMovieSceneCameraShakeSourceTriggerTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UPhysicsInspectorTool {
		constexpr auto VizSettings = 0x90; // UCollisionGeometryVisualizationProperties*
		constexpr auto ObjectData = 0x98; // TArray<UPhysicsObjectToolPropertySet*>
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewElements = 0xb0; // TArray<UPreviewGeometry*>
	}

	namespace n_UGuildListPanel {
		constexpr auto GuildDetailsSlot = 0x2d8; // UGuildDetailsSlot*
		constexpr auto LanguageFilterComboBox = 0x2e0; // UGuildAuthorityComboBox*
		constexpr auto StructureAuthFilterComboBox = 0x2e8; // UGuildAuthorityComboBox*
		constexpr auto SearchGuildEditBox = 0x2f0; // UEditableTextBox*
		constexpr auto HideFullGuildCheckBox = 0x2f8; // UCheckBox*
		constexpr auto HideOtherServerGuildCheckBox = 0x300; // UCheckBox*
		constexpr auto PrePageDataButton = 0x308; // UDataButton*
		constexpr auto NextPageDataButton = 0x310; // UDataButton*
		constexpr auto ShowPageText = 0x318; // UTextBlock*
		constexpr auto GuildListPanel = 0x320; // UScrollBox*
		constexpr auto CreateGuildButton = 0x328; // UButton*
		constexpr auto InviteToAllianceButton = 0x330; // UButton*
		constexpr auto SortNameSlot = 0x338; // USortableTitleSlot*
		constexpr auto SortLevelSlot = 0x340; // USortableTitleSlot*
		constexpr auto SortGuildOwnerSlot = 0x348; // USortableTitleSlot*
		constexpr auto SortMemberCountSlot = 0x350; // USortableTitleSlot*
		constexpr auto SortStructureProssessAuthSlot = 0x358; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x360; // USortableTitleSlot*
		constexpr auto LoadingCanvasPanel = 0x368; // UCanvasPanel*
		constexpr auto GuildListNumPerPage = 0x370; // int32_t
		constexpr auto GuildListSlotClass = 0x378; // UGuildListSlot*
		constexpr auto CreateGuildConfirmUIOverride = 0x380; // UUI_CreateGuildConfirm*
		constexpr auto InviteGuildUIOverride = 0x388; // UUI_ModifyText*
		constexpr auto RequestGuildListCount = 0x390; // int32_t
	}

	namespace n_UNpcSpawnTemplate {
		constexpr auto NPCSpawnDatas = 0x28; // TArray<FNPCSpawnData>
		constexpr auto NPCSpawnLimits = 0x38; // TArray<FNPCSpawnLimit>
	}

	namespace n_UFindTurnBasedMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ULevelVariantSets {
		constexpr auto DirectorClass = 0x28; // UObject*
		constexpr auto VariantSets = 0x30; // TArray<UVariantSet*>
	}

	namespace n_USmoothMeshTool {
		constexpr auto SmoothProperties = 0x400; // USmoothMeshToolProperties*
		constexpr auto IterativeProperties = 0x408; // UIterativeSmoothProperties*
		constexpr auto DiffusionProperties = 0x410; // UDiffusionSmoothProperties*
		constexpr auto ImplicitProperties = 0x418; // UImplicitSmoothProperties*
		constexpr auto WeightMapProperties = 0x420; // USmoothWeightMapSetProperties*
	}

	namespace n_UInterpTrackFloatBase {
		constexpr auto FloatTrack = 0x70; // FInterpCurveFloat
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UAbilityTask_ApplyRootMotionConstantForce {
		constexpr auto OnFinish = 0xc0; // FMulticastInlineDelegate
		constexpr auto WorldDirection = 0xd0; // FVector
		constexpr auto Strength = 0xdc; // float
		constexpr auto Duration = 0xe0; // float
		constexpr auto bIsAdditive = 0xe4; // bool
		constexpr auto StrengthOverTime = 0xe8; // UCurveFloat*
		constexpr auto bEnableGravity = 0xf0; // bool
	}

	namespace n_UMovieSceneSequence {
		constexpr auto CompiledData = 0x50; // UMovieSceneCompiledData*
		constexpr auto DefaultCompletionMode = 0x58; // EMovieSceneCompletionMode
		constexpr auto bParentContextsAreSignificant = 0x59; // bool
		constexpr auto bPlayableDirectly = 0x5a; // bool
		constexpr auto SequenceFlags = 0x5b; // EMovieSceneSequenceFlags
	}

	namespace n_UStaticMeshSocket {
		constexpr auto SocketName = 0x28; // FName
		constexpr auto RelativeLocation = 0x30; // FVector
		constexpr auto RelativeRotation = 0x3c; // FRotator
		constexpr auto RelativeScale = 0x48; // FVector
		constexpr auto Tag = 0x58; // FString
	}

	namespace n_UOceanCollisionComponent {
		constexpr auto CachedBodySetup = 0x488; // UBodySetup*
	}

	namespace n_UBTTask_BlackboardBase {
		constexpr auto BlackboardKey = 0x70; // FBlackboardKeySelector
	}

	namespace n_UMovieSceneParticleSection {
		constexpr auto ParticleKeys = 0xe8; // FMovieSceneParticleChannel
	}

	namespace n_UWeatherTransInterpData {
		constexpr auto RainIntensity = 0x50; // FWeatherFloatTrack
		constexpr auto RainDropSpeed = 0xf0; // FWeatherFloatTrack
		constexpr auto RainDensity = 0x190; // FWeatherFloatTrack
		constexpr auto WetLevel = 0x230; // FWeatherFloatTrack
		constexpr auto PuddleNoiseExponent = 0x2d0; // FWeatherFloatTrack
		constexpr auto PuddleIntensity = 0x370; // FWeatherFloatTrack
		constexpr auto PuddleSpeed = 0x410; // FWeatherFloatTrack
		constexpr auto RippleIntensity = 0x4b0; // FWeatherFloatTrack
		constexpr auto RippleSpeed = 0x550; // FWeatherFloatTrack
		constexpr auto FlowIntensity = 0x5f0; // FWeatherFloatTrack
		constexpr auto VolumeFogIntensity = 0x690; // FWeatherFloatTrack
		constexpr auto VolumeFogDistance = 0x730; // FWeatherFloatTrack
		constexpr auto VolumeFogFallOff = 0x7d0; // FWeatherFloatTrack
		constexpr auto VolumeFogDistanceFar = 0x870; // FWeatherFloatTrack
		constexpr auto VolumeFogFallOffFar = 0x910; // FWeatherFloatTrack
		constexpr auto VolumeFogFarAmount = 0x9b0; // FWeatherFloatTrack
		constexpr auto VolumeFogColor = 0xa50; // FWeatherLinearColorTrack
		constexpr auto VolumeFogColor2 = 0xc78; // FWeatherLinearColorTrack
		constexpr auto VolumeFogEmissiveColor = 0xea0; // FWeatherLinearColorTrack
		constexpr auto VolumeFogScale = 0x10c8; // FWeatherFloatTrack
		constexpr auto VolumeFogSpeed1X = 0x1168; // FWeatherLinearColorTrack
		constexpr auto SandStormsIntensity = 0x1390; // FWeatherFloatTrack
		constexpr auto SandStormsColor = 0x1430; // FWeatherLinearColorTrack
		constexpr auto SandStormsAlpha = 0x1658; // FWeatherFloatTrack
		constexpr auto SnowParticleIndex = 0x16f8; // FWeatherFloatTrack
	}

	namespace n_UEdgeLoopInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UEdgeLoopInsertionTool*
	}

	namespace n_UBodySetupCore {
		constexpr auto BoneName = 0x28; // FName
		constexpr auto PhysicsType = 0x30; // EPhysicsType
		constexpr auto CollisionTraceFlag = 0x31; // ECollisionTraceFlag
		constexpr auto CollisionReponse = 0x32; // EBodyCollisionResponse
	}

	namespace n_UMovieSceneNiagaraVectorParameterTrack {
		constexpr auto ChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UMovieSceneSignedObject {
		constexpr auto Signature = 0x28; // FGuid
	}

	namespace n_UUI_Perk {
		constexpr auto SKillPointsConsumeTable = 0x2d8; // UCurveTable*
		constexpr auto SKillMasteryMultipleTable = 0x2e0; // UCurveTable*
		constexpr auto SKillTable = 0x2e8; // UCurveTable*
		constexpr auto AddSKillTable = 0x2f0; // UCurveTable*
		constexpr auto PerkLevelDivisionLineClass = 0x2f8; // UPerkLevelDivisionLine*
		constexpr auto AddSkillExpPanelClass = 0x300; // UAddSkillExpPanel*
		constexpr auto RpbSTPanel = 0x308; // UPerkPanel*
		constexpr auto RpbAGPanel = 0x310; // UPerkPanel*
		constexpr auto RpbWIPanel = 0x318; // UPerkPanel*
		constexpr auto RpbENPanel = 0x320; // UPerkPanel*
		constexpr auto RpbCHPanel = 0x328; // UPerkPanel*
		constexpr auto TbPublicSkillExp = 0x330; // UTextBlock*
		constexpr auto TbPerkPoint = 0x338; // UTextBlock*
		constexpr auto TbMasteryPoint = 0x340; // UTextBlock*
		constexpr auto LocalSkillValueMap = 0x388; // TMap<ESkillType, FSkillLocalData>
		constexpr auto SkillLevelLineCanvas = 0x3e0; // UCanvasPanel*
		constexpr auto MainCanvas = 0x3e8; // UCanvasPanel*
		constexpr auto SkillTipsCanvas = 0x3f0; // UCanvasPanel*
		constexpr auto TbDescription = 0x3f8; // UTextBlock*
		constexpr auto TbSkillExp = 0x400; // UTextBlock*
		constexpr auto TbSkillMultiple = 0x408; // UTextBlock*
		constexpr auto SkillTipsScrollBox = 0x410; // UScrollBox*
		constexpr auto ImgSkillIcon = 0x418; // UImage*
		constexpr auto TbGetSkillExpType = 0x420; // UTextBlock*
		constexpr auto CapitalText = 0x428; // UTextBlock*
		constexpr auto TbWeekFree = 0x430; // UTextBlock*
		constexpr auto TbItemFree = 0x438; // UTextBlock*
		constexpr auto CurPerkPoint = 0x440; // int32_t
		constexpr auto SkillLevelLineCanvasSlot = 0x448; // UCanvasPanelSlot*
		constexpr auto AddSkillExpPanel = 0x450; // UAddSkillExpPanel*
		constexpr auto CurShowTipsSkillType = 0x458; // ESkillType
	}

	namespace n_USGToolTipsBuff {
		constexpr auto TbDescription = 0x288; // UTextBlock*
	}

	namespace n_ANiagaraPreviewGrid {
		constexpr auto System = 0x310; // UNiagaraSystem*
		constexpr auto ResetMode = 0x318; // ENiagaraPreviewGridResetMode
		constexpr auto PreviewAxisX = 0x320; // UNiagaraPreviewAxis*
		constexpr auto PreviewAxisY = 0x328; // UNiagaraPreviewAxis*
		constexpr auto PreviewClass = 0x330; // ANiagaraPreviewBase*
		constexpr auto SpacingX = 0x338; // float
		constexpr auto SpacingY = 0x33c; // float
		constexpr auto NumX = 0x340; // int32_t
		constexpr auto NumY = 0x344; // int32_t
		constexpr auto PreviewComponents = 0x348; // TArray<UChildActorComponent*>
	}

	namespace n_ADefaultPawn {
		constexpr auto BaseTurnRate = 0x370; // float
		constexpr auto BaseLookUpRate = 0x374; // float
		constexpr auto MovementComponent = 0x378; // UPawnMovementComponent*
		constexpr auto CollisionComponent = 0x380; // USphereComponent*
		constexpr auto MeshComponent = 0x388; // UStaticMeshComponent*
		constexpr auto bAddDefaultMovementBindings = 0x390; // char : 1
	}

	namespace n_ARectLight {
		constexpr auto RectLightComponent = 0x320; // URectLightComponent*
	}

	namespace n_USGNotifyText {
		constexpr auto ColorDefine = 0x28; // FLinearColor [0x6]
		constexpr auto BackgroundTex = 0x88; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto BgTexType = 0x150; // ENotifyBgTex [0x2a]
		constexpr auto BattleUpBgTex = 0x180; // TSoftObjectPtr<UTexture2D>
		constexpr auto DisplayInfoNameArray = 0x1a8; // FString [0x2a]
		constexpr auto NotifyDisplayInfoTable = 0x448; // UDataTable*
		constexpr auto DamageBodyText = 0x450; // FText [0x3]
		constexpr auto DamageModifyText = 0x498; // FText [0x19]
		constexpr auto ExpModifyText = 0x6f0; // FText [0xe]
	}

	namespace n_UEnvQueryGenerator_Cone {
		constexpr auto AlignedPointsDistance = 0x80; // FAIDataProviderFloatValue
		constexpr auto ConeDegrees = 0xb8; // FAIDataProviderFloatValue
		constexpr auto AngleStep = 0xf0; // FAIDataProviderFloatValue
		constexpr auto Range = 0x128; // FAIDataProviderFloatValue
		constexpr auto CenterActor = 0x160; // UEnvQueryContext*
		constexpr auto bIncludeContextLocation = 0x168; // char : 1
	}

	namespace n_UMaterialExpressionVertexInterpolator {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_AWaterBodyOcean {
		constexpr auto OceanGenerator = 0xee0; // UOceanGenerator*
		constexpr auto CollisionExtents = 0xee8; // FVector
		constexpr auto HeightOffset = 0xef4; // float
	}

	namespace n_UEnvQueryInstanceBlueprintWrapper {
		constexpr auto QueryID = 0x30; // int32_t
		constexpr auto ItemType = 0x58; // UEnvQueryItemType*
		constexpr auto OptionIndex = 0x60; // int32_t
		constexpr auto OnQueryFinishedEvent = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UWBP_ProducerSplitLine_C {
		constexpr auto Image_76 = 0x280; // UImage*
		constexpr auto Image_135 = 0x288; // UImage*
	}

	namespace n_UBehaviorTreeManager {
		constexpr auto MaxDebuggerSteps = 0x28; // int32_t
		constexpr auto LoadedTemplates = 0x30; // TArray<FBehaviorTreeTemplateInfo>
		constexpr auto ActiveComponents = 0x40; // TArray<UBehaviorTreeComponent*>
	}

	namespace n_URemoveOccludedTrianglesToolProperties {
		constexpr auto OcclusionTestMethod = 0x60; // EOcclusionCalculationUIMode
		constexpr auto TriangleSampling = 0x61; // EOcclusionTriangleSamplingUIMode
		constexpr auto WindingIsoValue = 0x68; // double
		constexpr auto AddRandomRays = 0x70; // int32_t
		constexpr auto AddTriangleSamples = 0x74; // int32_t
		constexpr auto bOnlySelfOcclude = 0x78; // bool
	}

	namespace n_UMovieSceneCameraAnimSection {
		constexpr auto AnimData = 0xe8; // FMovieSceneCameraAnimSectionData
		constexpr auto CameraAnim = 0x108; // UCameraAnim*
		constexpr auto PlayRate = 0x110; // float
		constexpr auto PlayScale = 0x114; // float
		constexpr auto BlendInTime = 0x118; // float
		constexpr auto BlendOutTime = 0x11c; // float
		constexpr auto bLooping = 0x120; // bool
	}

	namespace n_UMaterialExpressionTangent {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Period = 0x54; // float
	}

	namespace n_UUI_TransportMachineInventory {
		constexpr auto InventoryPanel = 0x2d8; // UN_InventoryPanel*
		constexpr auto StorePanel = 0x2e0; // UN_InventoryPanel*
	}

	namespace n_UNN_CraftPerkGroupSlot {
		constexpr auto CraftPerkGroupCanvas = 0x260; // UCanvasPanel*
		constexpr auto HighLightBg = 0x268; // UImage*
		constexpr auto bg = 0x270; // UImage*
		constexpr auto CircleBg = 0x278; // UImage*
		constexpr auto icon = 0x280; // UImage*
		constexpr auto NameText = 0x288; // UTextBlock*
		constexpr auto CraftPerkPanel = 0x290; // UHorizontalBox*
		constexpr auto LearnStateImage = 0x298; // UImage*
		constexpr auto RootUI = 0x2a0; // USGUI*
		constexpr auto BindCraftPerk = 0x2a8; // USGCraftPerkGroup*
		constexpr auto TimesBg = 0x2b0; // TSoftObjectPtr<UTexture2D> [0x8]
		constexpr auto TimesCanLearnBg = 0x3f0; // TSoftObjectPtr<UTexture2D> [0x8]
		constexpr auto LearnStateImageTexture = 0x530; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto CraftPerkSlotTemplate = 0x5a8; // UNN_CraftPerkSlot*
		constexpr auto CraftPerkSlotList = 0x5b0; // TArray<UNN_CraftPerkSlot*>
		constexpr auto bLearned = 0x5c0; // char : 1
		constexpr auto ToolTipsTemplate = 0x5c8; // USGToolTipWidget*
		constexpr auto bIsMouseIn = 0x5d0; // char : 1
	}

	namespace n_UMovieScenePrimitiveMaterialSection {
		constexpr auto MaterialChannel = 0xe8; // FMovieSceneObjectPathChannel
	}

	namespace n_UItemAuctionDealDonePanel {
		constexpr auto ItemListVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto ItemOrderListVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto Button_RefreshBuyList = 0x2e8; // UButton*
		constexpr auto Button_RefreshSellList = 0x2f0; // UButton*
		constexpr auto ItemAuctionDealDoneSlotClass = 0x2f8; // UItemAuctionDealDoneSlot*
		constexpr auto RootSGUI = 0x300; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask {
		constexpr auto Threshold = 0x80; // float
		constexpr auto Channel = 0x84; // ETextureColorChannel
	}

	namespace n_USlateAccessibleWidgetData {
		constexpr auto bCanChildrenBeAccessible = 0x28; // bool
		constexpr auto AccessibleBehavior = 0x29; // ESlateAccessibleBehavior
		constexpr auto AccessibleSummaryBehavior = 0x2a; // ESlateAccessibleBehavior
		constexpr auto AccessibleText = 0x30; // FText
		constexpr auto AccessibleTextDelegate = 0x48; // FDelegate
		constexpr auto AccessibleSummaryText = 0x58; // FText
		constexpr auto AccessibleSummaryTextDelegate = 0x70; // FDelegate
	}

	namespace n_UAsyncActionLoadPrimaryAssetList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UWindowTitleBarArea {
		constexpr auto bWindowButtonsEnabled = 0x120; // bool
		constexpr auto bDoubleClickTogglesFullscreen = 0x121; // bool
	}

	namespace n_ULevelSequencePlayer {
		constexpr auto OnCameraCut = 0x688; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionShadowReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Shadow = 0x54; // FExpressionInput
	}

	namespace n_UCheatManager {
		constexpr auto DebugCameraControllerRef = 0x28; // ADebugCameraController*
		constexpr auto DebugCameraControllerClass = 0x30; // ADebugCameraController*
	}

	namespace n_UNiagaraDataInterfaceChaosDestruction {
		constexpr auto ChaosSolverActorSet = 0x38; // TSet<AChaosSolverActor*>
		constexpr auto DataSourceType = 0x88; // EDataSourceTypeEnum
		constexpr auto DataProcessFrequency = 0x8c; // int32_t
		constexpr auto MaxNumberOfDataEntriesToSpawn = 0x90; // int32_t
		constexpr auto DoSpawn = 0x94; // bool
		constexpr auto SpawnMultiplierMinMax = 0x98; // FVector2D
		constexpr auto SpawnChance = 0xa0; // float
		constexpr auto ImpulseToSpawnMinMax = 0xa4; // FVector2D
		constexpr auto SpeedToSpawnMinMax = 0xac; // FVector2D
		constexpr auto MassToSpawnMinMax = 0xb4; // FVector2D
		constexpr auto ExtentMinToSpawnMinMax = 0xbc; // FVector2D
		constexpr auto ExtentMaxToSpawnMinMax = 0xc4; // FVector2D
		constexpr auto VolumeToSpawnMinMax = 0xcc; // FVector2D
		constexpr auto SolverTimeToSpawnMinMax = 0xd4; // FVector2D
		constexpr auto SurfaceTypeToSpawn = 0xdc; // int32_t
		constexpr auto LocationFilteringMode = 0xe0; // ELocationFilteringModeEnum
		constexpr auto LocationXToSpawn = 0xe1; // ELocationXToSpawnEnum
		constexpr auto LocationXToSpawnMinMax = 0xe4; // FVector2D
		constexpr auto LocationYToSpawn = 0xec; // ELocationYToSpawnEnum
		constexpr auto LocationYToSpawnMinMax = 0xf0; // FVector2D
		constexpr auto LocationZToSpawn = 0xf8; // ELocationZToSpawnEnum
		constexpr auto LocationZToSpawnMinMax = 0xfc; // FVector2D
		constexpr auto DataSortingType = 0x104; // EDataSortTypeEnum
		constexpr auto bGetExternalCollisionData = 0x105; // bool
		constexpr auto DoSpatialHash = 0x106; // bool
		constexpr auto SpatialHashVolumeMin = 0x108; // FVector
		constexpr auto SpatialHashVolumeMax = 0x114; // FVector
		constexpr auto SpatialHashVolumeCellSize = 0x120; // FVector
		constexpr auto MaxDataPerCell = 0x12c; // int32_t
		constexpr auto bApplyMaterialsFilter = 0x130; // bool
		constexpr auto ChaosBreakingMaterialSet = 0x138; // TSet<UPhysicalMaterial*>
		constexpr auto bGetExternalBreakingData = 0x188; // bool
		constexpr auto bGetExternalTrailingData = 0x189; // bool
		constexpr auto RandomPositionMagnitudeMinMax = 0x18c; // FVector2D
		constexpr auto InheritedVelocityMultiplier = 0x194; // float
		constexpr auto RandomVelocityGenerationType = 0x198; // ERandomVelocityGenerationTypeEnum
		constexpr auto RandomVelocityMagnitudeMinMax = 0x19c; // FVector2D
		constexpr auto SpreadAngleMax = 0x1a4; // float
		constexpr auto VelocityOffsetMin = 0x1a8; // FVector
		constexpr auto VelocityOffsetMax = 0x1b4; // FVector
		constexpr auto FinalVelocityMagnitudeMinMax = 0x1c0; // FVector2D
		constexpr auto MaxLatency = 0x1c8; // float
		constexpr auto DebugType = 0x1cc; // EDebugTypeEnum
		constexpr auto LastSpawnedPointID = 0x1d0; // int32_t
		constexpr auto LastSpawnTime = 0x1d4; // float
		constexpr auto SolverTime = 0x1e8; // float
		constexpr auto TimeStampOfLastProcessedData = 0x1ec; // float
	}

	namespace n_UBTService_RunEQS {
		constexpr auto EQSRequest = 0x98; // FEQSParametrizedQueryExecutionRequest
	}

	namespace n_UBTDecorator {
		constexpr auto bInverseCondition = 0x60; // char : 1
		constexpr auto FlowAbortMode = 0x64; // EBTFlowAbortMode
	}

	namespace n_UAbilityTask_WaitAbilityActivate {
		constexpr auto OnActivate = 0x80; // FMulticastInlineDelegate
	}

	namespace n_ASGStructure {
		constexpr auto StructureRootComponent = 0x518; // USceneComponent*
		constexpr auto StructureStaticMeshComponent = 0x520; // UStaticMeshComponent*
		constexpr auto StructurePointLightComponent = 0x528; // UPointLightComponent*
		constexpr auto Level = 0x530; // int32_t
		constexpr auto bPreviewStructure = 0x534; // char : 1
		constexpr auto PreviewInstances = 0x538; // TArray<UMaterialInstanceDynamic*>
		constexpr auto PreviewCreateMaterial = 0x548; // UMaterialInterface*
		constexpr auto PreviewCreateMesh = 0x550; // UStaticMesh*
		constexpr auto PreviewCreateMeshMaterial = 0x558; // TArray<UMaterialInterface*>
		constexpr auto PreviewCreateMeshErrorMaterial = 0x568; // TArray<UMaterialInterface*>
		constexpr auto bDeletePreviewCreateMeshWhenFinish = 0x578; // char : 1
		constexpr auto bShowParticleWhenCreatePreview = 0x578; // char : 1
		constexpr auto bForceCreateOnGround = 0x578; // char : 1
		constexpr auto bForceCreateOnFloor = 0x578; // char : 1
		constexpr auto bCheckOtherPointOnFloor = 0x578; // char : 1
		constexpr auto MaxCreateRange = 0x57c; // float
		constexpr auto BindType = 0x580; // int32_t
		constexpr auto BindPoints = 0x588; // TArray<FBindPointInfo>
		constexpr auto SearchBindPointRadius = 0x598; // float
		constexpr auto MaxBindPointRadius = 0x59c; // float
		constexpr auto bBindPointTransRotation = 0x5a0; // char : 1
		constexpr auto CreateHitLocationOffset = 0x5a4; // FVector
		constexpr auto CreateCheckBox = 0x5b0; // FVector
		constexpr auto CreateCheckBoxOffset = 0x5bc; // FVector
		constexpr auto CreateCheckBoxRotOffset = 0x5c8; // FRotator
		constexpr auto CreateCheckBoxScale = 0x5d4; // FVector
		constexpr auto OtherCreateCheckBox = 0x5e0; // FVector
		constexpr auto OtherCreateCheckBoxOffset = 0x5ec; // FVector
		constexpr auto OtherPointOnFloorLocation = 0x5f8; // FVector
		constexpr auto CreateCheckDirections = 0x608; // TArray<FVector>
		constexpr auto SimpleFoundationBox = 0x618; // FVector
		constexpr auto SimpleBoxLocOffset = 0x624; // FVector
		constexpr auto MeshForSimple = 0x630; // TArray<UStaticMesh*>
		constexpr auto bNeedBindPointForCreate = 0x640; // char : 1
		constexpr auto bCreateSelectDirection = 0x640; // char : 1
		constexpr auto MaxHeightToWorldGround = 0x644; // float
		constexpr auto OfficalRoadOffset = 0x648; // float
		constexpr auto bFoundation = 0x64c; // char : 1
		constexpr auto bSimpleFoundation = 0x64c; // char : 1
		constexpr auto bWall = 0x64c; // char : 1
		constexpr auto bXianChengDoor = 0x64c; // char : 1
		constexpr auto bOutDoor = 0x64c; // char : 1
		constexpr auto bFloor = 0x64c; // char : 1
		constexpr auto bPillar = 0x64c; // char : 1
		constexpr auto bGuildShop = 0x64c; // char : 1
		constexpr auto GuildShopLevel = 0x650; // int32_t
		constexpr auto bGuildAuctionHouse = 0x654; // char : 1
		constexpr auto bNeedNearByFoundation = 0x654; // char : 1
		constexpr auto MaxDistanceBindPointNearByFoundation = 0x658; // float
		constexpr auto bOnlyFoundationWhenBindedToFoundation = 0x65c; // char : 1
		constexpr auto CanReplaceByStructureClass = 0x660; // ASGStructure*
		constexpr auto PreventReplaceByStructureClass = 0x668; // ASGStructure*
		constexpr auto bMovableStructure = 0x670; // char : 1
		constexpr auto TriggerBoxComponent = 0x678; // UShapeComponent*
		constexpr auto TriggerBoxDamageInterval = 0x680; // float
		constexpr auto TriggerBoxDamageAmount = 0x684; // float
		constexpr auto TriggerBoxCollectionDamageAmount = 0x688; // float
		constexpr auto TriggerBoxCollectionReduceHPPercent = 0x68c; // float
		constexpr auto TriggerBoxDamageReduceHPPercent = 0x690; // float
		constexpr auto TriggerBoxDamageImpulse = 0x694; // float
		constexpr auto TriggerBoxDamageType = 0x698; // USGDamageType*
		constexpr auto bTriggerBoxCollection = 0x6a0; // char : 1
		constexpr auto bNeedPlayerInputForCollection = 0x6a0; // char : 1
		constexpr auto bDoNotUseSceneObjectSearchForCollect = 0x6a0; // char : 1
		constexpr auto bNeedPlayerInputForDamage = 0x6a0; // char : 1
		constexpr auto bShowMiniMapPOI = 0x6a0; // char : 1
		constexpr auto MiniMapPOIStyleID = 0x6a8; // FString
		constexpr auto MiniMapPOIVisibleType = 0x6b8; // EMiniMapStructureVisibleType
		constexpr auto bForceCreateOnWall = 0x6b9; // char : 1
		constexpr auto bCanBebDemolished = 0x6b9; // char : 1
		constexpr auto CheckFloorZUp = 0x6bc; // float
		constexpr auto CheckFloorZDown = 0x6c0; // float
		constexpr auto SpawnSoundID = 0x6c4; // FName
		constexpr auto bAllowPlacingOnOtherGuildStructure = 0x6cc; // char : 1
		constexpr auto CheckEnemyFoundationRadius = 0x6d0; // float
		constexpr auto bCheckNearByEnemyFoundation = 0x6d4; // char : 1
		constexpr auto bPreventNearByEnemyFoundation = 0x6d4; // char : 1
		constexpr auto bPreventCreateOnFloor = 0x6d4; // char : 1
		constexpr auto bCreateOnGroundWhenBinded = 0x6d4; // char : 1
		constexpr auto bRealFoundation = 0x6d4; // char : 1
		constexpr auto bFoundationStack = 0x6d4; // char : 1
		constexpr auto bCreateHPByInterval = 0x6d4; // char : 1
		constexpr auto InitHPPercentageWhenCreate = 0x6d8; // float
		constexpr auto CreateHPInterval = 0x6dc; // float
		constexpr auto CreateHPPerInterval = 0x6e0; // float
		constexpr auto bOnlyCreateInWater = 0x6e4; // char : 1
		constexpr auto bCannotCreateInWater = 0x6e4; // char : 1
		constexpr auto CheckWaterLocationOffset = 0x6e8; // FVector
		constexpr auto CheckMinWaterHeight = 0x6f4; // float
		constexpr auto CheckEnemyPlayerRadius = 0x6f8; // float
		constexpr auto AllowRotationMarkList = 0x700; // TArray<FString>
		constexpr auto NeedRotationMark = 0x710; // FString
		constexpr auto bCreateInTimeRange = 0x720; // char : 1
		constexpr auto AllowCreateStartHour = 0x724; // int32_t
		constexpr auto AllowCreateEndHour = 0x728; // int32_t
		constexpr auto IgnorePreventStructureClasses = 0x730; // TArray<ASGStructure*>
		constexpr auto bPreventOtherCreate = 0x740; // char : 1
		constexpr auto bAllowAttachToStaticMeshSocket = 0x740; // char : 1
		constexpr auto AttachToStaticMeshSocketName = 0x744; // FName
		constexpr auto bGuildStructure = 0x74c; // char : 1
		constexpr auto GuildStructureUniqueId = 0x750; // int32_t
		constexpr auto RequireGuildLevel = 0x754; // int32_t
		constexpr auto GuildCreateCoolTime = 0x758; // float
		constexpr auto GuildStructureSettings = 0x760; // TArray<FGuildStructureSetting>
		constexpr auto bPersonalStructure = 0x770; // char : 1
		constexpr auto PersonalStructureUniqueId = 0x774; // int32_t
		constexpr auto PersonalStructureMaxNum = 0x778; // int32_t
		constexpr auto AddPersonalStructureMaxNumClass = 0x780; // ASGStructure*
		constexpr auto bUseGroundTraceNormal = 0x788; // char : 1
		constexpr auto bPerkStructure = 0x788; // char : 1
		constexpr auto bIgnoreEnemyFoundationWhenPerk = 0x788; // char : 1
		constexpr auto bPerkStructureSetPlayerOwnerId = 0x788; // char : 1
		constexpr auto bPerkStructureHiddenWhenBuilded = 0x788; // char : 1
		constexpr auto bUsePerkStructureRotation = 0x788; // char : 1
		constexpr auto bPerkSelectDirection = 0x788; // char : 1
		constexpr auto IgnoreStructureCheckVolumes = 0x788; // char : 1
		constexpr auto PerkStructureCreateCoolTime = 0x78c; // int32_t
		constexpr auto SpawnPerkStructureLocationOffset = 0x790; // FVector
		constexpr auto LinkStructureCheckVolumes = 0x7a0; // TArray<TWeakObjectPtr<ASGStructureCheckVolume>>
		constexpr auto GivingItemFromDemolishPercentage = 0x7d0; // float
		constexpr auto EnvironmentAllowStructureClasses = 0x7d8; // TArray<ASGStructure*>
		constexpr auto bOnlyInteractiveInventorySameTeam = 0x7e8; // char : 1
		constexpr auto bCannotOperateInCountryCombat = 0x7e8; // char : 1
		constexpr auto LinkFrameStructure = 0x7f0; // ASGStructureFrame*
		constexpr auto bIgnoreMaxStructureNumInRadius = 0x7f8; // char : 1
		constexpr auto bCanRepair = 0x7f8; // char : 1
		constexpr auto bRepairing = 0x7f8; // char : 1
		constexpr auto NextAllowRepairTime = 0x800; // double
		constexpr auto RepairCooldownTime = 0x808; // int32_t
		constexpr auto RepairInterval = 0x80c; // float
		constexpr auto RepairHPPerInterval = 0x810; // float
		constexpr auto RepairHPRemainRep = 0x814; // float
		constexpr auto RepairHPRemain = 0x818; // float
		constexpr auto RepairHandle = 0x820; // FTimerHandle
		constexpr auto RepairHPPerMul = 0x828; // float
		constexpr auto ConsumeItem = 0x830; // USGItem*
		constexpr auto bOccupyStructure = 0x838; // char : 1
		constexpr auto bCheckOtherTeamArea = 0x838; // char : 1
		constexpr auto bOnlyInMyTeamArea = 0x838; // char : 1
		constexpr auto CheckOtherTeamAreaRadius = 0x83c; // float
		constexpr auto bDecay = 0x840; // char : 1
		constexpr auto bInnerStructure = 0x840; // char : 1
		constexpr auto bNeedDecay = 0x840; // char : 1
		constexpr auto bInOtherOccupyArea = 0x840; // char : 1
		constexpr auto NoTeamAreaDecayInterval = 0x844; // float
		constexpr auto NoTeamAreaDecayHPPercent = 0x848; // float
		constexpr auto TeamAreaDecayInterval = 0x84c; // float
		constexpr auto TeamAreaDecayHPPercent = 0x850; // float
		constexpr auto DecayHP = 0x854; // float
		constexpr auto DecayStructureHandle = 0x858; // FTimerHandle
		constexpr auto bGiveCauserDamage = 0x860; // char : 1
		constexpr auto GiveCauserDamageImpulse = 0x864; // float
		constexpr auto GiveCauserDamage = 0x868; // float
		constexpr auto PreventGiveCauserDamageTypes = 0x870; // TArray<USGDamageType*>
		constexpr auto GiveCauserDamageType = 0x880; // USGDamageType*
		constexpr auto AttackDamageType = 0x888; // EDamageType
		constexpr auto BeAIAttackSocketName = 0x88c; // FName
		constexpr auto bAllowCreateOnPlatform = 0x894; // char : 1
		constexpr auto PlatformCharacter = 0x898; // ABaseCharacter*
		constexpr auto PlatformWeightMul = 0x8a0; // float
		constexpr auto bAllowLogicInactive = 0x8a4; // char : 1
		constexpr auto bLogicInactiveDestroy = 0x8a4; // char : 1
		constexpr auto LastLogicInactiveTime = 0x8a8; // double
		constexpr auto TotalLogicInactiveTime = 0x8b0; // float
		constexpr auto LastLogicInactiveDateTime = 0x8b8; // FDateTime
		constexpr auto bLogicInactive = 0x8c0; // char : 1
		constexpr auto LogicInactiveUnRegisteredComponents = 0x940; // TArray<TWeakObjectPtr<UActorComponent>>
		constexpr auto bParentManageLogicActive = 0x950; // char : 1
		constexpr auto bPendingDeadWhenInActive = 0x960; // char : 1
		constexpr auto OwnerPlayerName = 0x968; // FString
		constexpr auto OwnerName = 0x978; // FString
		constexpr auto StructureID = 0x988; // uint32_t
		constexpr auto BindedStructuresByID = 0x990; // TArray<uint32_t>
		constexpr auto BindedStructures = 0x9a0; // TArray<ASGStructure*>
		constexpr auto StructuresOnFloor = 0x9b0; // TArray<ASGStructure*>
		constexpr auto CreateOnFloorStructure = 0x9c0; // ASGStructure*
		constexpr auto bPendingRemove = 0x9c8; // char : 1
		constexpr auto bChangeFoundation = 0x9c8; // char : 1
		constexpr auto bHiddenInGame = 0x9c8; // char : 1
		constexpr auto bDoNotRestPerkLink = 0x9c8; // char : 1
		constexpr auto LinkPerkStructure = 0x9d0; // ASGStructure*
		constexpr auto LinkPerkSpawnedActor = 0x9d8; // AActor*
		constexpr auto LastPerkStructureCreateTime = 0x9e0; // double
		constexpr auto TriggerOverlapActors = 0x9e8; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto TriggerHandle = 0x9f8; // FTimerHandle
		constexpr auto LastPreventStructure = 0xa08; // ASGStructure*
		constexpr auto PreventStructureMaterials = 0xa10; // TArray<UMaterialInterface*>
		constexpr auto bGuildStoreStructure = 0xa28; // char : 1
		constexpr auto bDemolished = 0xa28; // char : 1
		constexpr auto bSetMovable = 0xa28; // char : 1
		constexpr auto HelpText = 0xa30; // FText
		constexpr auto bIgnoreStructureAuthority = 0xa48; // char : 1
		constexpr auto bCanSetStructureAuthority = 0xa48; // char : 1
		constexpr auto StructureAuthority = 0xa4c; // int32_t
		constexpr auto CurrentStructureProssessAuth = 0xa50; // int32_t
		constexpr auto CurrentStructureAllianceDoor = 0xa54; // int32_t
		constexpr auto CurrentStructureAllianceInventory = 0xa58; // int32_t
		constexpr auto CurrentStructureAllianceCreate = 0xa5c; // int32_t
		constexpr auto DisplayHUDShowWidgetTemplate = 0xa60; // UUserWidget*
		constexpr auto bUseDestructibleExplode = 0xa68; // char : 1
		constexpr auto OverrideExplodeAmountLerpCurve = 0xa70; // UCurveFloat*
		constexpr auto OverrideExplodeDirection = 0xa78; // FVector
		constexpr auto OverrideExplodeInterval = 0xa84; // float
		constexpr auto bShowStructureDebugInfo = 0xa88; // char : 1
		constexpr auto CreateHPRemain = 0xa8c; // float
		constexpr auto CreateHPHandle = 0xa90; // FTimerHandle
		constexpr auto CreateHPRemainRep = 0xa98; // float
		constexpr auto BindPointNum = 0xa9c; // int32_t
		constexpr auto NextBindPointIndex = 0xaa0; // int32_t
		constexpr auto SpawnActorTemplate = 0xaa8; // AActor*
		constexpr auto SplineRouteActor = 0xab0; // ASplineRouteActor*
		constexpr auto bUseAutoFollowSplineRoute = 0xab8; // char : 1
		constexpr auto DamageToStructure = 0xabc; // float
		constexpr auto bNPCSpawnIgnoreCheck = 0xb00; // char : 1
		constexpr auto PlatformMultiplyAdd = 0xb04; // float
		constexpr auto bDamageAddSkillExp = 0xb08; // char : 1
		constexpr auto CreatedSkillExp = 0xb0c; // float
		constexpr auto GuildEventCheckInterval = 0xb10; // float
		constexpr auto GuildEventCheckHandle = 0xb18; // FTimerHandle
		constexpr auto bUseGuildImage = 0xb20; // char : 1
		constexpr auto GuildImageMaterialNames = 0xb28; // TArray<FName>
		constexpr auto FlagImageModifies = 0xb38; // float [0x5]
		constexpr auto GuildImage = 0xb50; // FString
		constexpr auto GuildImageMeshComponent = 0xb60; // TWeakObjectPtr<UStaticMeshComponent>
		constexpr auto DMI_FlagImage = 0xb68; // UMaterialInstanceDynamic*
		constexpr auto RT_FlagImage = 0xb70; // UTextureRenderTarget2D*
		constexpr auto bUseCustomFlag = 0xb78; // char : 1
		constexpr auto FlagImageString = 0xb80; // FString
		constexpr auto bCanClimb = 0xb90; // char : 1
	}

	namespace n_UUI_GuildAuctionHouse {
		constexpr auto EscButton = 0x2d8; // UButton*
		constexpr auto ButtonItem = 0x2e0; // UButton*
		constexpr auto ButtonGeneral = 0x2e8; // UButton*
		constexpr auto ButtonHorse = 0x2f0; // UButton*
		constexpr auto ButtonDealDone = 0x2f8; // UButton*
		constexpr auto ButtonBuy = 0x300; // UButton*
		constexpr auto ButtonSell = 0x308; // UButton*
		constexpr auto ButtonOrder = 0x310; // UButton*
		constexpr auto CanvasPanel_Item = 0x318; // UCanvasPanel*
		constexpr auto CanvasPanel_General = 0x320; // UCanvasPanel*
		constexpr auto CanvasPanel_Horse = 0x328; // UCanvasPanel*
		constexpr auto CanvasPanel_ItemSell = 0x330; // UCanvasPanel*
		constexpr auto CanvasPanel_ItemAuction = 0x338; // UCanvasPanel*
		constexpr auto CanvasPanel_ItemOrder = 0x340; // UCanvasPanel*
		constexpr auto CanvasPanel_DealDone = 0x348; // UCanvasPanel*
		constexpr auto ItemAuctionPanel = 0x350; // UItemAuctionPanel*
		constexpr auto ItemAuctionSellPanel = 0x358; // UItemSellPanel*
		constexpr auto ItemAuctionOrderPanel = 0x360; // UItemAuctionOrderPanel*
		constexpr auto ItemAuctionDealDonePanel = 0x368; // UItemAuctionDealDonePanel*
		constexpr auto CanvasPanel_HorseSell = 0x370; // UCanvasPanel*
		constexpr auto HorseAuctionSellPanel = 0x378; // UHorseAuctionSellPanel*
		constexpr auto CanvasPanel_HorseBuy = 0x380; // UCanvasPanel*
		constexpr auto HorseAuctionPanel = 0x388; // UHorseAuctionPanel*
		constexpr auto CanvasPanel_GeneralSell = 0x390; // UCanvasPanel*
		constexpr auto GeneralAuctionSellPanel = 0x398; // UGeneralAuctionSellPanel*
		constexpr auto CanvasPanel_GeneralBuy = 0x3a0; // UCanvasPanel*
		constexpr auto GeneralAuctionPanel = 0x3a8; // UGeneralAuctionPanel*
		constexpr auto TextBlock_Capital = 0x3b0; // UTextBlock*
		constexpr auto TextBlock_Name = 0x3b8; // UTextBlock*
		constexpr auto CanvasPanel_RadioView = 0x3c0; // UCanvasPanel*
		constexpr auto ItemAuctionSellConfirmPanel = 0x3c8; // UItemAuctionSellConfirmPanel*
		constexpr auto CanvasPanel_SellConfirm = 0x3d0; // UCanvasPanel*
		constexpr auto CanvasPanel_BuyConfirm = 0x3d8; // UCanvasPanel*
		constexpr auto ItemAuctionBuyConfirmPanel = 0x3e0; // UItemAuctionBuyConfirmPanel*
		constexpr auto OnwerStructure = 0x3f0; // TWeakObjectPtr<ASGStructure>
	}

	namespace n_UInterpTrackInstDirector {
		constexpr auto OldViewTarget = 0x28; // AActor*
	}

	namespace n_UExistingMeshMaterialProperties {
		constexpr auto MaterialMode = 0x60; // ESetMeshMaterialMode
		constexpr auto CheckerDensity = 0x64; // float
		constexpr auto OverrideMaterial = 0x68; // UMaterialInterface*
		constexpr auto CheckerMaterial = 0x70; // UMaterialInstanceDynamic*
	}

	namespace n_ANavLinkProxy {
		constexpr auto PointLinks = 0x320; // TArray<FNavigationLink>
		constexpr auto SegmentLinks = 0x330; // TArray<FNavigationSegmentLink>
		constexpr auto SmartLinkComp = 0x340; // UNavLinkCustomComponent*
		constexpr auto bSmartLinkIsRelevant = 0x348; // bool
		constexpr auto OnSmartLinkReached = 0x350; // FMulticastInlineDelegate
	}

	namespace n_UInventoryFunctionButton {
		constexpr auto InventoryFunctionButtonType = 0x260; // EInventoryFunctionButtonType
		constexpr auto ButtonTexts = 0x268; // TArray<FText>
		constexpr auto FunctionButton = 0x278; // UButton*
		constexpr auto ButtonNormal = 0x280; // FSlateBrush [0x7]
		constexpr auto ButtonHover = 0x638; // FSlateBrush [0x7]
		constexpr auto ButtonClick = 0x9f0; // FSlateBrush [0x7]
		constexpr auto ExchangeBorder = 0xdc0; // UImage*
	}

	namespace n_UCompositeDataTable {
		constexpr auto ParentTables = 0xb0; // TArray<UDataTable*>
		constexpr auto OldParentTables = 0xc0; // TArray<UDataTable*>
	}

	namespace n_UMovieSceneEntitySystemLinker {
		constexpr auto SystemGraph = 0x238; // FMovieSceneEntitySystemGraph
	}

	namespace n_UCageInfoHUDSlot {
		constexpr auto SexFemaleTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexMaleTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto AnimalNameText = 0x2b0; // UTextBlock*
		constexpr auto AnimalSexImg = 0x2b8; // UImage*
		constexpr auto AnimalEscapeTimeText = 0x2c0; // UTextBlock*
		constexpr auto BindCageStructure = 0x2c8; // TWeakObjectPtr<ASGStructureAnimalCage>
	}

	namespace n_USlateBrushAsset {
		constexpr auto Brush = 0x28; // FSlateBrush
	}

	namespace n_UGuildMemberSlot {
		constexpr auto NameText = 0x2d8; // UTextBlock*
		constexpr auto LevelText = 0x2e0; // UTextBlock*
		constexpr auto TitleText = 0x2e8; // UTextBlock*
		constexpr auto GongXunText = 0x2f0; // UTextBlock*
		constexpr auto OfficialJobText = 0x2f8; // UTextBlock*
		constexpr auto CustomGroupText = 0x300; // UTextBlock*
		constexpr auto DKPText = 0x308; // UTextBlock*
		constexpr auto OnlineStatusText = 0x310; // UTextBlock*
		constexpr auto OnlineStatusDataButton = 0x318; // UDataButton*
		constexpr auto OfficialJobComboBox = 0x320; // UGuildAuthorityComboBox*
		constexpr auto TitleComboBox = 0x328; // UGuildAuthorityComboBox*
		constexpr auto CustomGroupComboBox = 0x330; // UGuildAuthorityComboBox*
		constexpr auto KickOutDataButton = 0x338; // UDataButton*
		constexpr auto BGImage = 0x340; // UImage*
		constexpr auto NormalBGTexture = 0x348; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x370; // TSoftObjectPtr<UTexture2D>
		constexpr auto ButtonTipWidgetTemplate = 0x398; // USGToolTipWidget*
	}

	namespace n_UN_DraggedItem {
		constexpr auto icon = 0x260; // UImage*
		constexpr auto IconTexture = 0x268; // UTexture2D*
		constexpr auto NumLabelInt = 0x270; // int32_t
		constexpr auto BindItem = 0x274; // TWeakObjectPtr<USGItem>
		constexpr auto ItemIndex = 0x27c; // int32_t
		constexpr auto ItemAmount = 0x280; // int32_t
	}

	namespace n_UOccupyFlagItem {
		constexpr auto OccupyFlagMaterial = 0x260; // UMaterialInstance*
		constexpr auto SameTeamProgressColor = 0x268; // FLinearColor
		constexpr auto OtherTeamProgressColor = 0x278; // FLinearColor
		constexpr auto ImgFlag = 0x290; // UImage*
		constexpr auto ImgOccupyFlag = 0x298; // UImage*
		constexpr auto TbProgress = 0x2a0; // UTextBlock*
		constexpr auto TbPercent = 0x2a8; // UTextBlock*
	}

	namespace n_UPerkLevelDivisionLine {
		constexpr auto TbLv = 0x260; // UTextBlock*
	}

	namespace n_ASGMenuHUD {
		constexpr auto OfficalSessionListTemplate = 0x408; // UUI_OfficalSessionList*
		constexpr auto PrivateSessionListTemplate = 0x410; // UUI_PrivateSessionList*
		constexpr auto MainMenuTemplate = 0x418; // UUI_MainMenu*
		constexpr auto SettingTemplate = 0x420; // UUI_Setting*
		constexpr auto GameNoticeTemplate = 0x428; // USGUI*
		constexpr auto ModManageTemplate = 0x430; // UUI_ModsManageBase*
		constexpr auto ProducerListTemplate = 0x438; // UUI_ProducerList*
		constexpr auto PrivateSessionEntryTemplate = 0x440; // UUI_PrivateSessionEntry*
		constexpr auto OfficalSessionListUI = 0x448; // UUI_OfficalSessionList*
		constexpr auto PrivateSessionListUI = 0x450; // UUI_PrivateSessionList*
		constexpr auto MainMenuUI = 0x458; // UUI_MainMenu*
		constexpr auto SettingUI = 0x460; // UUI_Setting*
		constexpr auto GameNoticeUI = 0x468; // USGUI*
		constexpr auto ModManageUI = 0x470; // UUI_ModsManageBase*
		constexpr auto ProducerListUI = 0x478; // UUI_ProducerList*
		constexpr auto PrivateSessionEntryUI = 0x480; // UUI_PrivateSessionEntry*
	}

	namespace n_UGizmoTransformChangeStateTarget {
		constexpr auto TransactionManager = 0x50; // TScriptInterface<IToolContextTransactionProvider>
	}

	namespace n_UGameplayTask_TimeLimitedExecution {
		constexpr auto OnFinished = 0x68; // FMulticastInlineDelegate
		constexpr auto OnTimeExpired = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UUI_ColorItem {
		constexpr auto BorderNormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderSelectTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto BtnBg = 0x2c0; // UButton*
		constexpr auto ImgColor = 0x2c8; // UImage*
		constexpr auto ImgBorder = 0x2d0; // UImage*
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded {
		constexpr auto RandomSeedInfo = 0x120; // FParticleRandomSeedInfo
	}

	namespace n_UVRNotificationsComponent {
		constexpr auto HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto HMDTrackingInitializedDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto HMDRecenteredDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto HMDLostDelegate = 0xf0; // FMulticastInlineDelegate
		constexpr auto HMDReconnectedDelegate = 0x100; // FMulticastInlineDelegate
		constexpr auto HMDConnectCanceledDelegate = 0x110; // FMulticastInlineDelegate
		constexpr auto HMDPutOnHeadDelegate = 0x120; // FMulticastInlineDelegate
		constexpr auto HMDRemovedFromHeadDelegate = 0x130; // FMulticastInlineDelegate
		constexpr auto VRControllerRecenteredDelegate = 0x140; // FMulticastInlineDelegate
	}

	namespace n_UPendingNetGame {
		constexpr auto NetDriver = 0x30; // UNetDriver*
		constexpr auto DemoNetDriver = 0x38; // UDemoNetDriver*
	}

	namespace n_UARTextureCameraDepth {
		constexpr auto DepthQuality = 0xf8; // EARDepthQuality
		constexpr auto DepthAccuracy = 0xf9; // EARDepthAccuracy
		constexpr auto bIsTemporallySmoothed = 0xfa; // bool
	}

	namespace n_UUI_Achievement {
		constexpr auto AchievementProgressTemplate = 0x2d8; // UAchievementProgress*
		constexpr auto TitleItemTemplate = 0x2e0; // UTitleItem*
		constexpr auto DamageMultiplyItemTemplate = 0x2e8; // UAchievementDamageMultiplyItem*
		constexpr auto NearAccomplishItemTemplate = 0x2f0; // UAchievementNearAccomplishItem*
		constexpr auto TbCurAchievementNum = 0x2f8; // UTextBlock*
		constexpr auto TbTotalAchievementNum = 0x300; // UTextBlock*
		constexpr auto CurTitleItem = 0x308; // UTitleItem*
		constexpr auto BtnChangeTitle = 0x310; // UButton*
		constexpr auto TbChangeTitle = 0x318; // UTextBlock*
		constexpr auto ChangeTitlePanel = 0x320; // UCanvasPanel*
		constexpr auto UGPChangeTitle = 0x328; // UUniformGridPanel*
		constexpr auto AchievementProgressCanvas = 0x330; // UCanvasPanel*
		constexpr auto AchievementTypePanel = 0x338; // UAchievementTypePanel*
		constexpr auto AchievementPanel = 0x340; // UAchievementPanel*
		constexpr auto RecentlyAcquiredCanvas = 0x348; // UCanvasPanel*
		constexpr auto RpbAchievementNavigationView = 0x350; // UUI_RadioButtonView*
		constexpr auto UGPDamageMultiply = 0x358; // UUniformGridPanel*
		constexpr auto UGPAchievementProgress = 0x360; // UUniformGridPanel*
		constexpr auto UGPNearAccomplish = 0x368; // UUniformGridPanel*
		constexpr auto AccomplishAchievementMap = 0x370; // TMap<FString, FAccomplishAchievementDataArray>
		constexpr auto AllTitleItems = 0x3c0; // TArray<UTitleItem*>
		constexpr auto DamageMultiplyItems = 0x3d0; // TMap<FString, UAchievementDamageMultiplyItem*>
		constexpr auto NearAccomplishItems = 0x420; // TArray<UAchievementNearAccomplishItem*>
		constexpr auto AchievementProgresses = 0x430; // TArray<UAchievementProgress*>
		constexpr auto AchievementMap = 0x488; // TMap<FString, FSGAchievementMap>
		constexpr auto CurSelectType = 0x4d8; // FString
	}

	namespace n_UNetDriver {
		constexpr auto NetConnectionClassName = 0x30; // FString
		constexpr auto ReplicationDriverClassName = 0x40; // FString
		constexpr auto MaxDownloadSize = 0x50; // int32_t
		constexpr auto bClampListenServerTickRate = 0x54; // char : 1
		constexpr auto NetServerMaxTickRate = 0x58; // int32_t
		constexpr auto MaxNetTickRate = 0x5c; // int32_t
		constexpr auto MaxInternetClientRate = 0x60; // int32_t
		constexpr auto MaxClientRate = 0x64; // int32_t
		constexpr auto ServerTravelPause = 0x68; // float
		constexpr auto SpawnPrioritySeconds = 0x6c; // float
		constexpr auto RelevantTimeout = 0x70; // float
		constexpr auto KeepAliveTime = 0x74; // float
		constexpr auto InitialConnectTimeout = 0x78; // float
		constexpr auto ConnectionTimeout = 0x7c; // float
		constexpr auto TimeoutMultiplierForUnoptimizedBuilds = 0x80; // float
		constexpr auto bNoTimeouts = 0x84; // bool
		constexpr auto bNeverApplyNetworkEmulationSettings = 0x85; // bool
		constexpr auto ServerConnection = 0x88; // UNetConnection*
		constexpr auto ClientConnections = 0x90; // TArray<UNetConnection*>
		constexpr auto RecentlyDisconnectedTrackingTime = 0x100; // int32_t
		constexpr auto World = 0x140; // UWorld*
		constexpr auto WorldPackage = 0x148; // UPackage*
		constexpr auto NetConnectionClass = 0x170; // UObject*
		constexpr auto ReplicationDriverClass = 0x178; // UObject*
		constexpr auto NetDriverName = 0x190; // FName
		constexpr auto ChannelDefinitions = 0x198; // TArray<FChannelDefinition>
		constexpr auto ChannelDefinitionMap = 0x1a8; // TMap<FName, FChannelDefinition>
		constexpr auto ActorChannelPool = 0x1f8; // TArray<UChannel*>
		constexpr auto Time = 0x210; // float
		constexpr auto ReplicationDriver = 0x700; // UReplicationDriver*
	}

	namespace n_URadialFalloff {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto MinRange = 0xc4; // float
		constexpr auto MaxRange = 0xc8; // float
		constexpr auto Default = 0xcc; // float
		constexpr auto Radius = 0xd0; // float
		constexpr auto position = 0xd4; // FVector
		constexpr auto Falloff = 0xe0; // EFieldFalloffType
	}

	namespace n_UPostProcessComponent {
		constexpr auto Settings = 0x210; // FPostProcessSettings
		constexpr auto OnEncompassesPoint = 0x770; // FMulticastInlineDelegate
		constexpr auto Priority = 0x780; // float
		constexpr auto BlendRadius = 0x784; // float
		constexpr auto BlendWeight = 0x788; // float
		constexpr auto bEnabled = 0x78c; // char : 1
		constexpr auto bUnbound = 0x78c; // char : 1
	}

	namespace n_UBasePlayerData {
		constexpr auto LogicServerXianChengKey = 0x98; // int32_t
		constexpr auto BasePlayerDataInfo = 0xa0; // FBasePlayerDataInfo
		constexpr auto PreviewAppearanceData = 0x120; // FPreviewAppearanceData
		constexpr auto BasePlayerDataStatisticInfo = 0x2f8; // FBasePlayerDataStatisticInfo
		constexpr auto BasePlayerDataDeadInfo = 0x320; // FBasePlayerDataDeadInfo
		constexpr auto bIsFirstLogin = 0x360; // bool
		constexpr auto NoviceBuffState = 0x364; // int32_t
		constexpr auto bHasCapitalGold = 0x368; // char : 1
		constexpr auto CapitalGold = 0x36c; // int32_t
		constexpr auto CapitalGold64 = 0x370; // int64_t
		constexpr auto CapitalSilver = 0x378; // int32_t
		constexpr auto CapitalSilver64 = 0x380; // int64_t
		constexpr auto CapitalCopper = 0x388; // int32_t
		constexpr auto CapitalCopper64 = 0x390; // int64_t
		constexpr auto CapitalSeason = 0x398; // int32_t
		constexpr auto CapitalSeason64 = 0x3a0; // int64_t
		constexpr auto GuildActivityPoint = 0x3a8; // float
		constexpr auto GeneralChunksArray = 0x3b0; // TArray<FBaseGeneralChunkData>
		constexpr auto AnimalChunksArray = 0x3c0; // TArray<FBaseAnimalChunkData>
		constexpr auto CharacterStatisticsInfo = 0x3d0; // FCharacterStatisticsInfo
		constexpr auto Achievements = 0x5d0; // TArray<FAccomplishAchievementData>
		constexpr auto BlockAchievements = 0x5e0; // TArray<FString>
		constexpr auto Titles = 0x5f0; // TArray<FString>
		constexpr auto ShopUnlockeds = 0x600; // TArray<FShopUnlockedData>
		constexpr auto SeasonDataInfo = 0x610; // FSeasonDataInfo
		constexpr auto LastLeaveGuildTime = 0x638; // FDateTime
		constexpr auto bOpenPVP = 0x648; // char : 1
		constexpr auto NextCrossServerTime = 0x650; // FDateTime
		constexpr auto HuKouInfo = 0x658; // TArray<FHuKouNode>
		constexpr auto ForbiddenSpeakDate = 0x668; // FDateTime
		constexpr auto BeWhiteTime = 0x670; // FDateTime
		constexpr auto LegendGeneralsArray = 0x678; // TArray<FLegendGeneralDataInfo>
		constexpr auto AppearanceKitIndexArray = 0x6f0; // TArray<int32_t>
		constexpr auto AppearanceExpiredKitIndexArray = 0x700; // TArray<int32_t>
		constexpr auto AppearanceKitIndex = 0x710; // int32_t
		constexpr auto FashionKitIndexArray = 0x718; // TArray<int32_t>
		constexpr auto FashionKitExpiredIndexArray = 0x728; // TArray<int32_t>
		constexpr auto FashionKitIndex = 0x738; // int32_t
		constexpr auto bSaveToPlayer = 0x73c; // char : 1
		constexpr auto TransportChunkInfo = 0x740; // FTransportChunkInfo
		constexpr auto AccomplishAchievementsPacket = 0x7b8; // FAccomplishAchievementArray [0x3]
		constexpr auto ShopUnlockedPacket = 0x7e8; // TArray<FShopUnlockedData>
		constexpr auto PlayerNews = 0x848; // TMap<FGuid, FString>
		constexpr auto PlayerNewsRecordTime = 0x898; // TMap<char, FDateTime>
		constexpr auto bLimitReportActivityRank = 0x8e8; // char : 1
	}

	namespace n_UPubCommonField {
		constexpr auto PubSwitchBlockClass = 0x30; // UPubSwitchBlockLogic*
		constexpr auto SGPubSwitchBlockLogic = 0x38; // UPubSwitchBlockLogic*
		constexpr auto PubPlayerStateBlockClass = 0x40; // UPubPlayerStateBlockLogic*
		constexpr auto SGPubPlayerStateBlockLogic = 0x48; // UPubPlayerStateBlockLogic*
		constexpr auto PubOfficialSealBlockClass = 0x50; // UPubOfficialSealBlockLogic*
		constexpr auto SGPubOfficialSealBlockLogic = 0x58; // UPubOfficialSealBlockLogic*
		constexpr auto PubBattleFieldBlockClass = 0x60; // UPubBattleFieldBlockLogic*
		constexpr auto SGPubBattleFieldBlockLogic = 0x68; // UPubBattleFieldBlockLogic*
		constexpr auto PubServerStateBlockClass = 0x70; // UPubServerStateBlockLogic*
		constexpr auto SGPubServerStateBlockLogic = 0x78; // UPubServerStateBlockLogic*
		constexpr auto PubOfficialDataBlockLogicClass = 0x80; // UPubOfficialTaxBlockLogic*
		constexpr auto SGPubOfficialTaxBlockLogic = 0x88; // UPubOfficialTaxBlockLogic*
		constexpr auto PubWorshipLogicClass = 0x90; // UPubWorshipBlockLogic*
		constexpr auto SGPubWorshipBlockLogic = 0x98; // UPubWorshipBlockLogic*
	}

	namespace n_UVehicleGenealogySlot {
		constexpr auto DefaultVehicleTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto CastratedTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexFemaleTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexMaleTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_NormalTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_HoverTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_SelectTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto QualityCorrectionToQualityType = 0x378; // TMap<EGeneralsQualityType, float>
		constexpr auto VehicleQualityBGTexture = 0x3c8; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto VehicleQualityTexture = 0x4b8; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto BGBorder = 0x5a8; // UBorder*
		constexpr auto VehicleIconImg = 0x5b0; // UImage*
		constexpr auto DetailPanel = 0x5b8; // UCanvasPanel*
		constexpr auto VehicleQualityBG = 0x5c0; // UImage*
		constexpr auto VehicleQualityImage = 0x5c8; // UImage*
		constexpr auto VehicleRealNameImage = 0x5d0; // UImage*
		constexpr auto SexImg = 0x5d8; // UImage*
		constexpr auto NameText = 0x5e0; // UTextBlock*
		constexpr auto LevelText = 0x5e8; // UTextBlock*
		constexpr auto SumText = 0x5f0; // UTextBlock*
		constexpr auto GenerationText = 0x5f8; // UTextBlock*
		constexpr auto StatusText = 0x600; // UTextBlock*
		constexpr auto NoneText = 0x608; // UTextBlock*
		constexpr auto VehicleACPanel = 0x610; // UVehicleACPanel*
		constexpr auto ForwardImg = 0x618; // UImage*
		constexpr auto BackwardImg = 0x620; // UImage*
	}

	namespace n_URevolveBoundaryOperatorFactory {
		constexpr auto RevolveBoundaryTool = 0x30; // URevolveBoundaryTool*
	}

	namespace n_USoundNodeLooping {
		constexpr auto LoopCount = 0x48; // int32_t
		constexpr auto bLoopIndefinitely = 0x4c; // char : 1
	}

	namespace n_UWBP_PasswordConfirmDialog_C {
		constexpr auto CheckBoxSelectedTextBlock = 0x328; // URichTextBlock*
		constexpr auto Image = 0x330; // UImage*
		constexpr auto Image_131 = 0x338; // UImage*
		constexpr auto Image_250 = 0x340; // UImage*
		constexpr auto ImgBg = 0x348; // UImage*
		constexpr auto ImgBorder = 0x350; // UImage*
		constexpr auto ImgNameInputBg = 0x358; // UImage*
		constexpr auto ImgNameInputBgAgain = 0x360; // UImage*
		constexpr auto ImgNameInputBgAgain_2 = 0x368; // UImage*
	}

	namespace n_UUI_Activity_Xiancheng {
		constexpr auto AllianceGuildSlotTemplate = 0x2d8; // UTaishouTeamInfoSlot*
		constexpr auto AllianceGuildShowColNum = 0x2e0; // int32_t
		constexpr auto Image_Mask = 0x2e8; // UImage*
		constexpr auto TbBattleState = 0x2f0; // UTextBlock*
		constexpr auto TbBattleTimeValue = 0x2f8; // UTextBlock*
		constexpr auto BtEnterBattle = 0x300; // UButton*
		constexpr auto BtShowCrossTransport = 0x308; // UButton*
		constexpr auto BtShowBattle = 0x310; // UButton*
		constexpr auto BtShowInventory = 0x318; // UButton*
		constexpr auto TbEnterBattle = 0x320; // UTextBlock*
		constexpr auto XianChengOwnerPanel = 0x328; // UCanvasPanel*
		constexpr auto TeamInfoSlotXianChengOwner = 0x330; // UTaishouTeamInfoSlot*
		constexpr auto XianChengAttackPanel = 0x338; // UCanvasPanel*
		constexpr auto TeamInfoSlotXianChengAttack = 0x340; // UTaishouTeamInfoSlot*
		constexpr auto JinXianPanel = 0x348; // UCanvasPanel*
		constexpr auto BtJinXian = 0x350; // UButton*
		constexpr auto TbJinXianTotalNum = 0x358; // UTextBlock*
		constexpr auto EtJinXianNum = 0x360; // UEditableTextBox*
		constexpr auto ScbOwnerAllianceGuilds = 0x368; // UScrollBox*
		constexpr auto UgpOwnerAllianceGuilds = 0x370; // UUniformGridPanel*
		constexpr auto ScbAttackerAllianceGuilds = 0x378; // UScrollBox*
		constexpr auto UgpAttackerAllianceGuilds = 0x380; // UUniformGridPanel*
		constexpr auto BattleServiceQueueCountInfo = 0x388; // FBattleServiceQueueCountInfo
		constexpr auto XianChengOwnerPanelMiddlePos = 0x390; // FVector2D
		constexpr auto XianChengOwnerPanelLeftPos = 0x398; // FVector2D
		constexpr auto OwnerGuildList = 0x3a0; // TArray<FGuid>
		constexpr auto OwnerGuildShowIndex = 0x3b0; // int32_t
		constexpr auto AttackerGuildList = 0x3b8; // TArray<FGuid>
		constexpr auto AttackerGuildShowIndex = 0x3c8; // int32_t
		constexpr auto LastShowAllianceGuildsType = 0x3cc; // int32_t
	}

	namespace n_UInterpTrackInstToggle {
		constexpr auto Action = 0x28; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x2c; // float
		constexpr auto bSavedActiveState = 0x30; // char : 1
	}

	namespace n_UDrawPolyPathExtrudeProperties {
		constexpr auto Direction = 0x60; // EDrawPolyPathExtrudeDirection
	}

	namespace n_UUI_AnimalFarmRecord {
		constexpr auto RecordCount = 0x2d8; // int32_t
		constexpr auto LoadingCanvas = 0x2e0; // UCanvasPanel*
		constexpr auto RecordScrollBox = 0x2e8; // UScrollBox*
		constexpr auto RtbRecord = 0x2f0; // URichTextBlock*
		constexpr auto CloseButton = 0x2f8; // UButton*
		constexpr auto CurRecords = 0x300; // TArray<FAnimalFarmRecord>
		constexpr auto CurRecordBeginIndex = 0x310; // int32_t
		constexpr auto CurRecordEndIndex = 0x314; // int32_t
	}

	namespace n_UWBP_ProducerList_C {
		constexpr auto RotateMirror = 0xf70; // UWidgetAnimation*
		constexpr auto BottomBlack = 0xf78; // UImage*
		constexpr auto HeadBlack = 0xf80; // UImage*
		constexpr auto Image_Bg = 0xf88; // UImage*
		constexpr auto ImageLogo = 0xf90; // UImage*
		constexpr auto ImageLogoBg = 0xf98; // UImage*
		constexpr auto ImageLogoBg_Texture = 0xfa0; // UImage*
		constexpr auto ImageSpark = 0xfa8; // UImage*
		constexpr auto ImageSwordFire = 0xfb0; // UImage*
		constexpr auto ImageWenZiEffect = 0xfb8; // UImage*
		constexpr auto OrnaLeft = 0xfc0; // UImage*
		constexpr auto WBP_ProducerName = 0xfc8; // UWBP_ProducerName_C*
		constexpr auto WBP_ProducerName_3 = 0xfd0; // UWBP_ProducerName_2_C*
		constexpr auto WBP_ProducerName_4 = 0xfd8; // UWBP_ProducerName_3_C*
		constexpr auto WBP_ProducerName_5 = 0xfe0; // UWBP_ProducerName_4_C*
		constexpr auto WBP_ProducerName_6 = 0xfe8; // UWBP_ProducerName_5_C*
		constexpr auto WBP_ProducerName_7 = 0xff0; // UWBP_ProducerName_6_C*
		constexpr auto WBP_ProducerName_8 = 0xff8; // UWBP_ProducerName_7_C*
	}

	namespace n_UMaterialExpressionConstantBiasScale {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Bias = 0x54; // float
		constexpr auto Scale = 0x58; // float
	}

	namespace n_UAbilityTask_ApplyRootMotionMoveToForce {
		constexpr auto OnTimedOut = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnTimedOutAndDestinationReached = 0xd0; // FMulticastInlineDelegate
		constexpr auto StartLocation = 0xe0; // FVector
		constexpr auto TargetLocation = 0xec; // FVector
		constexpr auto Duration = 0xf8; // float
		constexpr auto bSetNewMovementMode = 0xfc; // bool
		constexpr auto NewMovementMode = 0xfd; // EMovementMode
		constexpr auto bRestrictSpeedToExpected = 0xfe; // bool
		constexpr auto PathOffsetCurve = 0x100; // UCurveVector*
	}

	namespace n_USGAssetManager {
		constexpr auto AssetStatuses = 0x458; // TArray<FAssetStatus>
	}

	namespace n_UBTService_BlueprintBase {
		constexpr auto AIOwner = 0x70; // AAIController*
		constexpr auto ActorOwner = 0x78; // AActor*
		constexpr auto bShowPropertyDetails = 0x90; // char : 1
		constexpr auto bShowEventDetails = 0x90; // char : 1
	}

	namespace n_UAnimBoneCompressionSettings {
		constexpr auto Codecs = 0x28; // TArray<UAnimBoneCompressionCodec*>
	}

	namespace n_UCloudStorageBase {
		constexpr auto LocalCloudFiles = 0x38; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x48; // char : 1
	}

	namespace n_UInvalidationBox {
		constexpr auto bCanCache = 0x120; // bool
		constexpr auto CacheRelativeTransforms = 0x121; // bool
	}

	namespace n_UGroomAsset {
		constexpr auto HairGroupsInfo = 0x30; // TArray<FHairGroupInfoWithVisibility>
		constexpr auto HairGroupsRendering = 0x40; // TArray<FHairGroupsRendering>
		constexpr auto HairGroupsPhysics = 0x50; // TArray<FHairGroupsPhysics>
		constexpr auto HairGroupsInterpolation = 0x60; // TArray<FHairGroupsInterpolation>
		constexpr auto HairGroupsLOD = 0x70; // TArray<FHairGroupsLOD>
		constexpr auto HairGroupsCards = 0x80; // TArray<FHairGroupsCardsSourceDescription>
		constexpr auto HairGroupsMeshes = 0x90; // TArray<FHairGroupsMeshesSourceDescription>
		constexpr auto HairGroupsMaterials = 0xa0; // TArray<FHairGroupsMaterial>
		constexpr auto EnableGlobalInterpolation = 0xc0; // bool
		constexpr auto HairInterpolationType = 0xc1; // EGroomInterpolationType
		constexpr auto LODSelectionType = 0xc2; // EHairLODSelectionType
		constexpr auto MinLOD = 0xc4; // FPerPlatformInt
		constexpr auto DisableBelowMinLodStripping = 0xc8; // FPerPlatformBool
		constexpr auto EffectiveLODBias = 0xd0; // TArray<float>
		constexpr auto AssetUserData = 0xe0; // TArray<UAssetUserData*>
	}

	namespace n_USoundNodeQualityLevel {
		constexpr auto CookedQualityLevelIndex = 0x48; // int32_t
	}

	namespace n_UParticleModuleSpawnBase {
		constexpr auto bProcessSpawnRate = 0x30; // char : 1
		constexpr auto bProcessBurstList = 0x30; // char : 1
	}

	namespace n_USystemTimeTimecodeProvider {
		constexpr auto FrameRate = 0x30; // FFrameRate
		constexpr auto bGenerateFullFrame = 0x38; // bool
		constexpr auto bUseHighPerformanceClock = 0x39; // bool
	}

	namespace n_UNavigationDataChunk {
		constexpr auto NavigationDataName = 0x28; // FName
	}

	namespace n_UDatasmithMaterialInstanceTemplate {
		constexpr auto ParentMaterial = 0x30; // TSoftObjectPtr<UMaterialInterface>
		constexpr auto ScalarParameterValues = 0x58; // TMap<FName, float>
		constexpr auto VectorParameterValues = 0xa8; // TMap<FName, FLinearColor>
		constexpr auto TextureParameterValues = 0xf8; // TMap<FName, TSoftObjectPtr<UTexture>>
		constexpr auto StaticParameters = 0x148; // FDatasmithStaticParameterSetTemplate
	}

	namespace n_UARComponent {
		constexpr auto NativeID = 0x208; // FGuid
		constexpr auto bUseDefaultReplication = 0x248; // bool
		constexpr auto DefaultMeshMaterial = 0x250; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x258; // UMaterialInterface*
		constexpr auto MRMeshComponent = 0x260; // UMRMeshComponent*
		constexpr auto MyTrackedGeometry = 0x268; // UARTrackedGeometry*
	}

	namespace n_UARFaceGeometry {
		constexpr auto LookAtTarget = 0xf8; // FVector
		constexpr auto bIsTracked = 0x104; // bool
		constexpr auto BlendShapes = 0x108; // TMap<EARFaceBlendShape, float>
		constexpr auto LeftEyeTransform = 0x190; // FTransform
		constexpr auto RightEyeTransform = 0x1c0; // FTransform
	}

	namespace n_UMovieSceneMaterialTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UABP_Ponytail_C {
		constexpr auto UberGraphFrame = 0x2d0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_CopyPoseFromMesh = 0x2d8; // FAnimNode_CopyPoseFromMesh
		constexpr auto AnimGraphNode_KawaiiPhysics = 0x4b0; // FAnimNode_KawaiiPhysics
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0x710; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0x730; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_Root = 0x750; // FAnimNode_Root
	}

	namespace n_UDatasmithActorTemplate {
		constexpr auto Layers = 0x30; // TSet<FName>
		constexpr auto Tags = 0x80; // TSet<FName>
	}

	namespace n_UParticleModuleAccelerationDrag {
		constexpr auto DragCoefficient = 0x38; // UDistributionFloat*
		constexpr auto DragCoefficientRaw = 0x40; // FRawDistributionFloat
	}

	namespace n_UDatasmithPostProcessVolumeTemplate {
		constexpr auto Settings = 0x30; // FDatasmithPostProcessSettingsTemplate
		constexpr auto bEnabled = 0x70; // char : 1
		constexpr auto bUnbound = 0x70; // char : 1
	}

	namespace n_UInteractiveToolsContext {
		constexpr auto InputRouter = 0x58; // UInputRouter*
		constexpr auto ToolManager = 0x60; // UInteractiveToolManager*
		constexpr auto GizmoManager = 0x68; // UInteractiveGizmoManager*
		constexpr auto ToolManagerClass = 0x70; // TSoftClassPtr<UObject>
	}

	namespace n_UMeshSelectionSet {
		constexpr auto Vertices = 0x40; // TArray<int32_t>
		constexpr auto Edges = 0x50; // TArray<int32_t>
		constexpr auto Faces = 0x60; // TArray<int32_t>
		constexpr auto Groups = 0x70; // TArray<int32_t>
	}

	namespace n_UDraggedVehiclePerk {
		constexpr auto PerkIcon = 0x260; // UImage*
	}

	namespace n_APlayerController {
		constexpr auto Player = 0x388; // UPlayer*
		constexpr auto AcknowledgedPawn = 0x390; // APawn*
		constexpr auto ControllingDirTrackInst = 0x398; // UInterpTrackInstDirector*
		constexpr auto MyHUD = 0x3a0; // AHUD*
		constexpr auto PlayerCameraManager = 0x3a8; // APlayerCameraManager*
		constexpr auto PlayerCameraManagerClass = 0x3b0; // APlayerCameraManager*
		constexpr auto bAutoManageActiveCameraTarget = 0x3b8; // bool
		constexpr auto TargetViewRotation = 0x3bc; // FRotator
		constexpr auto SmoothTargetViewRotationSpeed = 0x3d4; // float
		constexpr auto HiddenActors = 0x3e0; // TArray<AActor*>
		constexpr auto HiddenPrimitiveComponents = 0x3f0; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto LastSpectatorStateSynchTime = 0x408; // double
		constexpr auto LastSpectatorSyncLocation = 0x410; // FVector
		constexpr auto LastSpectatorSyncRotation = 0x41c; // FRotator
		constexpr auto ClientCap = 0x428; // int32_t
		constexpr auto CheatManager = 0x430; // UCheatManager*
		constexpr auto CheatClass = 0x438; // UCheatManager*
		constexpr auto PlayerInput = 0x440; // UPlayerInput*
		constexpr auto ActiveForceFeedbackEffects = 0x448; // TArray<FActiveForceFeedbackEffect>
		constexpr auto bPlayerIsWaiting = 0x4c8; // char : 1
		constexpr auto NetPlayerIndex = 0x4cc; // char
		constexpr auto PendingSwapConnection = 0x508; // UNetConnection*
		constexpr auto NetConnection = 0x510; // UNetConnection*
		constexpr auto InputYawScale = 0x524; // float
		constexpr auto InputPitchScale = 0x528; // float
		constexpr auto InputRollScale = 0x52c; // float
		constexpr auto bShowMouseCursor = 0x530; // char : 1
		constexpr auto bEnableClickEvents = 0x530; // char : 1
		constexpr auto bEnableTouchEvents = 0x530; // char : 1
		constexpr auto bEnableMouseOverEvents = 0x530; // char : 1
		constexpr auto bEnableTouchOverEvents = 0x530; // char : 1
		constexpr auto bForceFeedbackEnabled = 0x530; // char : 1
		constexpr auto ForceFeedbackScale = 0x534; // float
		constexpr auto ClickEventKeys = 0x538; // TArray<FKey>
		constexpr auto DefaultMouseCursor = 0x548; // EMouseCursor
		constexpr auto CurrentMouseCursor = 0x549; // EMouseCursor
		constexpr auto DefaultClickTraceChannel = 0x54a; // ECollisionChannel
		constexpr auto CurrentClickTraceChannel = 0x54b; // ECollisionChannel
		constexpr auto HitResultTraceDistance = 0x54c; // float
		constexpr auto SeamlessTravelCount = 0x550; // uint16_t
		constexpr auto LastCompletedSeamlessTravelCount = 0x552; // uint16_t
		constexpr auto CheatAdminLevel = 0x554; // int32_t
		constexpr auto InactiveStateInputComponent = 0x5c8; // UInputComponent*
		constexpr auto bShouldPerformFullTickWhenPaused = 0x5d0; // char : 1
		constexpr auto CurrentTouchInterface = 0x5e8; // UTouchInterface*
		constexpr auto SpectatorPawn = 0x640; // ASpectatorPawn*
		constexpr auto bIsLocalPlayerController = 0x650; // bool
		constexpr auto SpawnLocation = 0x654; // FVector
	}

	namespace n_ULandscapeWeightmapUsage {
		constexpr auto ChannelUsage = 0x28; // ULandscapeComponent* [0x4]
		constexpr auto LayerGuid = 0x48; // FGuid
	}

	namespace n_UUI_SystemSettingPanel {
		constexpr auto ScalabilityDetailPanelNames = 0x260; // TArray<FName>
		constexpr auto SGGameUserSettings = 0x270; // USGGameUserSettings*
		constexpr auto MainScrollBox = 0x278; // UScrollBox*
		constexpr auto SystemSettingItems = 0x280; // TArray<USystemSettingItem*>
	}

	namespace n_UTextBlock {
		constexpr auto Text = 0x128; // FText
		constexpr auto TextDelegate = 0x140; // FDelegate
		constexpr auto ColorAndOpacity = 0x150; // FSlateColor
		constexpr auto ColorAndOpacityDelegate = 0x178; // FDelegate
		constexpr auto Font = 0x188; // FSlateFontInfo
		constexpr auto StrikeBrush = 0x1e0; // FSlateBrush
		constexpr auto ShadowOffset = 0x268; // FVector2D
		constexpr auto ShadowColorAndOpacity = 0x270; // FLinearColor
		constexpr auto ShadowColorAndOpacityDelegate = 0x280; // FDelegate
		constexpr auto MinDesiredWidth = 0x290; // float
		constexpr auto bWrapWithInvalidationPanel = 0x294; // bool
		constexpr auto bAutoWrapText = 0x295; // bool
		constexpr auto TextTransformPolicy = 0x296; // ETextTransformPolicy
		constexpr auto bSimpleTextMode = 0x297; // bool
	}

	namespace n_ANiagaraActor {
		constexpr auto NiagaraComponent = 0x310; // UNiagaraComponent*
		constexpr auto bDestroyOnSystemFinish = 0x318; // char : 1
	}

	namespace n_UMagicLeapARPinComponent {
		constexpr auto ObjectUID = 0x208; // FString
		constexpr auto UserIndex = 0x218; // int32_t
		constexpr auto AutoPinType = 0x21c; // EMagicLeapAutoPinType
		constexpr auto bShouldPinActor = 0x21d; // bool
		constexpr auto PinDataClass = 0x220; // UMagicLeapARPinSaveGame*
		constexpr auto SearchPinTypes = 0x228; // TSet<EMagicLeapARPinType>
		constexpr auto SearchVolume = 0x278; // USphereComponent*
		constexpr auto OnPersistentEntityPinned = 0x280; // FMulticastInlineDelegate
		constexpr auto OnPersistentEntityPinLost = 0x290; // FMulticastInlineDelegate
		constexpr auto OnPinDataLoadAttemptCompleted = 0x2a0; // FMulticastInlineDelegate
		constexpr auto PinnedCFUID = 0x2b0; // FGuid
		constexpr auto PinnedSceneComponent = 0x2c0; // USceneComponent*
		constexpr auto PinData = 0x2c8; // UMagicLeapARPinSaveGame*
	}

	namespace n_UMotionControllerComponent {
		constexpr auto PlayerIndex = 0x488; // int32_t
		constexpr auto Hand = 0x48c; // EControllerHand
		constexpr auto MotionSource = 0x490; // FName
		constexpr auto bDisableLowLatencyUpdate = 0x498; // char : 1
		constexpr auto CurrentTrackingStatus = 0x49c; // ETrackingStatus
		constexpr auto bDisplayDeviceModel = 0x49d; // bool
		constexpr auto DisplayModelSource = 0x4a0; // FName
		constexpr auto CustomDisplayMesh = 0x4a8; // UStaticMesh*
		constexpr auto DisplayMeshMaterialOverrides = 0x4b0; // TArray<UMaterialInterface*>
		constexpr auto DisplayComponent = 0x520; // UPrimitiveComponent*
	}

	namespace n_UMaterialExpressionPanner {
		constexpr auto Coordinate = 0x40; // FExpressionInput
		constexpr auto Time = 0x54; // FExpressionInput
		constexpr auto Speed = 0x68; // FExpressionInput
		constexpr auto SpeedX = 0x7c; // float
		constexpr auto SpeedY = 0x80; // float
		constexpr auto ConstCoordinate = 0x84; // uint32_t
		constexpr auto bFractionalPart = 0x88; // bool
	}

	namespace n_UTurnInPlace_AnimNotifyState {
		constexpr auto TurnMontage = 0x30; // UAnimMontage*
		constexpr auto RotationCurveAsset = 0x38; // UCurveFloat*
		constexpr auto bIsRightTurn = 0x40; // char : 1
		constexpr auto StopBlendTime = 0x44; // float
		constexpr auto bOnlyTriggerOnServer = 0x48; // char : 1
		constexpr auto TotalTurnYaw = 0x54; // float
		constexpr auto bUseLineTurn = 0x58; // char : 1
	}

	namespace n_UToIntegerField {
		constexpr auto FloatField = 0xc0; // UFieldNodeFloat*
	}

	namespace n_UGeometryCacheComponent {
		constexpr auto GeometryCache = 0x4b0; // UGeometryCache*
		constexpr auto bRunning = 0x4b8; // bool
		constexpr auto bLooping = 0x4b9; // bool
		constexpr auto StartTimeOffset = 0x4bc; // float
		constexpr auto PlaybackSpeed = 0x4c0; // float
		constexpr auto NumTracks = 0x4c4; // int32_t
		constexpr auto ElapsedTime = 0x4c8; // float
		constexpr auto Duration = 0x4fc; // float
		constexpr auto bManualTick = 0x500; // bool
	}

	namespace n_USequenceCameraShakeSequencePlayer {
		constexpr auto BoundObjectOverride = 0x480; // UObject*
		constexpr auto Sequence = 0x488; // UMovieSceneSequence*
		constexpr auto RootTemplateInstance = 0x490; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UTextureLODSettings {
		constexpr auto TextureLODGroups = 0x28; // TArray<FTextureLODGroup>
	}

	namespace n_AWeatherSnow {
		constexpr auto SnowParticleIndex = 0x318; // float
		constexpr auto ParticleSize = 0x31c; // float
		constexpr auto SnowParticle = 0x320; // UParticleSystem* [0x3]
		constexpr auto SnowMat = 0x338; // UMaterialInterface* [0x2]
		constexpr auto OcclusionDepthTexture = 0x348; // UTextureRenderTarget2D*
	}

	namespace n_UUI_ChatSetting {
		constexpr auto AllSettingsGrid = 0x260; // UUniformGridPanel*
		constexpr auto SystemChatSettingSlot = 0x268; // UUI_ChatSettingSlot*
		constexpr auto NearbyChatSettingSlot = 0x270; // UUI_ChatSettingSlot*
		constexpr auto XianChatSettingSlot = 0x278; // UUI_ChatSettingSlot*
		constexpr auto JunChatSettingSlot = 0x280; // UUI_ChatSettingSlot*
		constexpr auto WorldChatSettingSlot = 0x288; // UUI_ChatSettingSlot*
		constexpr auto GuildChatSettingSlot = 0x290; // UUI_ChatSettingSlot*
		constexpr auto AllianceChatSettingSlot = 0x298; // UUI_ChatSettingSlot*
		constexpr auto PrivateChatSettingSlot = 0x2a0; // UUI_ChatSettingSlot*
		constexpr auto SettingSlotColorArray = 0x2a8; // TArray<FSlateColor>
		constexpr auto SettingSlotNameArray = 0x2b8; // TArray<FName>
	}

	namespace n_UN_GuildSkillSlot {
		constexpr auto BorderImage = 0x2d8; // UImage*
		constexpr auto MaskImage = 0x2e0; // UImage*
		constexpr auto LevelText = 0x2e8; // UTextBlock*
		constexpr auto IconImage = 0x2f0; // UImage*
		constexpr auto LevelUpImage = 0x2f8; // UImage*
		constexpr auto LevelCanvasPanel = 0x300; // UCanvasPanel*
		constexpr auto ToolTipWidgetTemplateOverride = 0x308; // UGuildSkillToolTipWidget*
		constexpr auto NormalBorderTexture = 0x310; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalMaskTexture = 0x338; // TSoftObjectPtr<UTexture2D>
		constexpr auto CanUpdateBorderTexture = 0x360; // TSoftObjectPtr<UTexture2D>
		constexpr auto CanUpdateMaskTexture = 0x388; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnlockBorderTexture = 0x3b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnlockMaskTexture = 0x3d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectedBorderTexture = 0x400; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectedMaskTexture = 0x428; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UVectorFieldStatic {
		constexpr auto SizeX = 0x48; // int32_t
		constexpr auto SizeY = 0x4c; // int32_t
		constexpr auto SizeZ = 0x50; // int32_t
		constexpr auto bAllowCPUAccess = 0x54; // bool
	}

	namespace n_UNavAreaMeta_SwitchByAgent {
		constexpr auto Agent0Area = 0x48; // UNavArea*
		constexpr auto Agent1Area = 0x50; // UNavArea*
		constexpr auto Agent2Area = 0x58; // UNavArea*
		constexpr auto Agent3Area = 0x60; // UNavArea*
		constexpr auto Agent4Area = 0x68; // UNavArea*
		constexpr auto Agent5Area = 0x70; // UNavArea*
		constexpr auto Agent6Area = 0x78; // UNavArea*
		constexpr auto Agent7Area = 0x80; // UNavArea*
		constexpr auto Agent8Area = 0x88; // UNavArea*
		constexpr auto Agent9Area = 0x90; // UNavArea*
		constexpr auto Agent10Area = 0x98; // UNavArea*
		constexpr auto Agent11Area = 0xa0; // UNavArea*
		constexpr auto Agent12Area = 0xa8; // UNavArea*
		constexpr auto Agent13Area = 0xb0; // UNavArea*
		constexpr auto Agent14Area = 0xb8; // UNavArea*
		constexpr auto Agent15Area = 0xc0; // UNavArea*
	}

	namespace n_UNavLinkComponent {
		constexpr auto Links = 0x490; // TArray<FNavigationLink>
	}

	namespace n_UGeometryCollection {
		constexpr auto GeometrySource = 0x30; // TArray<FGeometryCollectionSource>
		constexpr auto Materials = 0x40; // TArray<UMaterialInterface*>
		constexpr auto CollisionType = 0x50; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0x51; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0x54; // int32_t
		constexpr auto MaxLevelSetResolution = 0x58; // int32_t
		constexpr auto MinClusterLevelSetResolution = 0x5c; // int32_t
		constexpr auto MaxClusterLevelSetResolution = 0x60; // int32_t
		constexpr auto CollisionObjectReductionPercentage = 0x64; // float
		constexpr auto bMassAsDensity = 0x68; // bool
		constexpr auto Mass = 0x6c; // float
		constexpr auto MinimumMassClamp = 0x70; // float
		constexpr auto CollisionParticlesFraction = 0x74; // float
		constexpr auto MaximumCollisionParticles = 0x78; // int32_t
		constexpr auto SizeSpecificData = 0x80; // TArray<FGeometryCollectionSizeSpecificData>
		constexpr auto EnableRemovePiecesOnFracture = 0x90; // bool
		constexpr auto RemoveOnFractureMaterials = 0x98; // TArray<UMaterialInterface*>
		constexpr auto PersistentGuid = 0xa8; // FGuid
		constexpr auto StateGuid = 0xb8; // FGuid
		constexpr auto BoneSelectedMaterialIndex = 0xc8; // int32_t
	}

	namespace n_UInterpTrackInstSound {
		constexpr auto LastUpdatePosition = 0x28; // float
		constexpr auto PlayAudioComp = 0x30; // UAudioComponent*
	}

	namespace n_UWBP_KeySettingItem_C {
		constexpr auto UberGraphFrame = 0x2c8; // FPointerToUberGraphFrame
		constexpr auto ImgBg = 0x2d0; // UImage*
	}

	namespace n_ASpotLight {
		constexpr auto SpotLightComponent = 0x320; // USpotLightComponent*
	}

	namespace n_UMediaTimeStampInfo {
		constexpr auto Time = 0x28; // FTimespan
		constexpr auto SequenceIndex = 0x30; // int64_t
	}

	namespace n_UAIDataProvider_QueryParams {
		constexpr auto ParamName = 0x28; // FName
		constexpr auto FloatValue = 0x30; // float
		constexpr auto IntValue = 0x34; // int32_t
		constexpr auto BoolValue = 0x38; // bool
	}

	namespace n_AChaosSolverActor {
		constexpr auto Properties = 0x310; // FChaosSolverConfiguration
		constexpr auto TimeStepMultiplier = 0x378; // float
		constexpr auto CollisionIterations = 0x37c; // int32_t
		constexpr auto PushOutIterations = 0x380; // int32_t
		constexpr auto PushOutPairIterations = 0x384; // int32_t
		constexpr auto ClusterConnectionFactor = 0x388; // float
		constexpr auto ClusterUnionConnectionType = 0x38c; // EClusterConnectionTypeEnum
		constexpr auto DoGenerateCollisionData = 0x38d; // bool
		constexpr auto CollisionFilterSettings = 0x390; // FSolverCollisionFilterSettings
		constexpr auto DoGenerateBreakingData = 0x3a0; // bool
		constexpr auto BreakingFilterSettings = 0x3a4; // FSolverBreakingFilterSettings
		constexpr auto DoGenerateTrailingData = 0x3b4; // bool
		constexpr auto TrailingFilterSettings = 0x3b8; // FSolverTrailingFilterSettings
		constexpr auto MassScale = 0x3c8; // float
		constexpr auto bGenerateContactGraph = 0x3cc; // bool
		constexpr auto bHasFloor = 0x3cd; // bool
		constexpr auto FloorHeight = 0x3d0; // float
		constexpr auto ChaosDebugSubstepControl = 0x3d4; // FChaosDebugSubstepControl
		constexpr auto SpriteComponent = 0x3d8; // UBillboardComponent*
		constexpr auto GameplayEventDispatcherComponent = 0x3f8; // UChaosGameplayEventDispatcher*
	}

	namespace n_UPrimitiveComponent {
		constexpr auto MinDrawDistance = 0x210; // float
		constexpr auto LDMaxDrawDistance = 0x214; // float
		constexpr auto CachedMaxDrawDistance = 0x218; // float
		constexpr auto DepthPriorityGroup = 0x21c; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x21d; // ESceneDepthPriorityGroup
		constexpr auto IndirectLightingCacheQuality = 0x21e; // EIndirectLightingCacheQuality
		constexpr auto LightmapType = 0x21f; // ELightmapType
		constexpr auto bUseMaxLODAsImposter = 0x220; // char : 1
		constexpr auto bBatchImpostersAsInstances = 0x220; // char : 1
		constexpr auto bNeverDistanceCull = 0x220; // char : 1
		constexpr auto bDisallowAddToPhysicsScene = 0x220; // char : 1
		constexpr auto bAlwaysCreatePhysicsState = 0x221; // char : 1
		constexpr auto bGenerateOverlapEvents = 0x221; // char : 1
		constexpr auto bMultiBodyOverlap = 0x221; // char : 1
		constexpr auto bTraceComplexOnMove = 0x221; // char : 1
		constexpr auto bReturnMaterialOnMove = 0x221; // char : 1
		constexpr auto bOptimizeForceDynamicPhysicalState = 0x221; // char : 1
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x221; // char : 1
		constexpr auto bAllowCullDistanceVolume = 0x222; // char : 1
		constexpr auto bHasMotionBlurVelocityMeshes = 0x222; // char : 1
		constexpr auto bVisibleInReflectionCaptures = 0x222; // char : 1
		constexpr auto bVisibleInRealTimeSkyCaptures = 0x222; // char : 1
		constexpr auto bVisibleInRayTracing = 0x222; // char : 1
		constexpr auto bRenderInMainPass = 0x222; // char : 1
		constexpr auto bRenderInDepthPass = 0x222; // char : 1
		constexpr auto bReceivesDecals = 0x222; // char : 1
		constexpr auto bOwnerNoSee = 0x223; // char : 1
		constexpr auto bOnlyOwnerSee = 0x223; // char : 1
		constexpr auto bTreatAsBackgroundForOcclusion = 0x223; // char : 1
		constexpr auto bUseAsOccluder = 0x223; // char : 1
		constexpr auto bSelectable = 0x223; // char : 1
		constexpr auto bForceMipStreaming = 0x223; // char : 1
		constexpr auto bHasPerInstanceHitProxies = 0x223; // char : 1
		constexpr auto CastShadow = 0x223; // char : 1
		constexpr auto bAffectDynamicIndirectLighting = 0x224; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x224; // char : 1
		constexpr auto bCastDynamicShadow = 0x224; // char : 1
		constexpr auto bCastStaticShadow = 0x224; // char : 1
		constexpr auto bCastVolumetricTranslucentShadow = 0x224; // char : 1
		constexpr auto bCastContactShadow = 0x224; // char : 1
		constexpr auto bSelfShadowOnly = 0x224; // char : 1
		constexpr auto bCastFarShadow = 0x224; // char : 1
		constexpr auto bCastInsetShadow = 0x225; // char : 1
		constexpr auto bCastCinematicShadow = 0x225; // char : 1
		constexpr auto bCastHiddenShadow = 0x225; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x225; // char : 1
		constexpr auto bLightAsIfStatic = 0x225; // char : 1
		constexpr auto bLightAttachmentsAsGroup = 0x225; // char : 1
		constexpr auto bExcludeFromLightAttachmentGroup = 0x225; // char : 1
		constexpr auto bReceiveMobileCSMShadows = 0x225; // char : 1
		constexpr auto bSingleSampleShadowFromStationaryLights = 0x226; // char : 1
		constexpr auto bIgnoreRadialImpulse = 0x226; // char : 1
		constexpr auto bIgnoreRadialForce = 0x226; // char : 1
		constexpr auto bApplyImpulseOnDamage = 0x226; // char : 1
		constexpr auto bReplicatePhysicsToAutonomousProxy = 0x226; // char : 1
		constexpr auto bFillCollisionUnderneathForNavmesh = 0x226; // char : 1
		constexpr auto AlwaysLoadOnClient = 0x226; // char : 1
		constexpr auto AlwaysLoadOnServer = 0x226; // char : 1
		constexpr auto bUseEditorCompositing = 0x227; // char : 1
		constexpr auto bRenderCustomDepth = 0x227; // char : 1
		constexpr auto bHasCustomNavigableGeometry = 0x22e; // EHasCustomNavigableGeometry
		constexpr auto CanCharacterStepUpOn = 0x230; // ECanBeCharacterBase
		constexpr auto LightingChannels = 0x231; // FLightingChannels
		constexpr auto CustomDepthStencilWriteMask = 0x232; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x234; // int32_t
		constexpr auto CustomPrimitiveData = 0x238; // FCustomPrimitiveData
		constexpr auto CustomPrimitiveDataInternal = 0x248; // FCustomPrimitiveData
		constexpr auto TranslucencySortPriority = 0x260; // int32_t
		constexpr auto VisibilityId = 0x264; // int32_t
		constexpr auto RuntimeVirtualTextures = 0x268; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureLodBias = 0x278; // int8_t
		constexpr auto VirtualTextureCullMips = 0x279; // int8_t
		constexpr auto VirtualTextureMinCoverage = 0x27a; // int8_t
		constexpr auto VirtualTextureRenderPassType = 0x27b; // ERuntimeVirtualTextureMainPassType
		constexpr auto LpvBiasMultiplier = 0x280; // float
		constexpr auto OverrideStepHeight = 0x284; // float
		constexpr auto BoundsScale = 0x298; // float
		constexpr auto MoveIgnoreActors = 0x2b8; // TArray<AActor*>
		constexpr auto MoveIgnoreComponents = 0x2c8; // TArray<UPrimitiveComponent*>
		constexpr auto BodyInstance = 0x2e8; // FBodyInstance
		constexpr auto OnComponentHit = 0x448; // FMulticastSparseDelegate
		constexpr auto OnComponentBeginOverlap = 0x449; // FMulticastSparseDelegate
		constexpr auto OnComponentEndOverlap = 0x44a; // FMulticastSparseDelegate
		constexpr auto OnComponentWake = 0x44b; // FMulticastSparseDelegate
		constexpr auto OnComponentSleep = 0x44c; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x44e; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x44f; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x450; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x451; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x452; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x453; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x454; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x455; // FMulticastSparseDelegate
		constexpr auto LODParentPrimitive = 0x470; // UPrimitiveComponent*
	}

	namespace n_UMovieSceneColorSection {
		constexpr auto RedCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto GreenCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto BlueCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto AlphaCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_ASGWorldSettings {
		constexpr auto SGGameDataClass = 0x498; // USGGameData*
		constexpr auto BattleType = 0x4a0; // EBattleType
		constexpr auto bGenerateNpcEnable = 0x4a1; // bool
		constexpr auto WorldExtent = 0x4a4; // float
		constexpr auto WorldTopLeftLoc = 0x4a8; // FVector
		constexpr auto DefaultCameraLocation = 0x4b4; // FVector
		constexpr auto MaxLogicActiveCheckRange = 0x4c0; // float
		constexpr auto CameraActorArray = 0x4c8; // TArray<ACameraActor*>
		constexpr auto MiniMapTexture = 0x4d8; // UTexture2D*
		constexpr auto MapLengthInTexture = 0x4e0; // float
		constexpr auto MapOriginPoint = 0x4e4; // FVector
		constexpr auto InterpZoomSpeed = 0x4f0; // float
		constexpr auto Zoom = 0x4f4; // float
		constexpr auto MaxZoom = 0x4f8; // float
		constexpr auto MinZoom = 0x4fc; // float
		constexpr auto ZoomStep = 0x500; // float
		constexpr auto AnimationNotifyConfig = 0x504; // int32_t [0x4]
		constexpr auto bEnableLogicInactive = 0x8d0; // char : 1
		constexpr auto LogicInactiveFramePasses = 0x928; // int32_t
		constexpr auto IntervalLogicInactiveFrame = 0x92c; // uint32_t
		constexpr auto MaxActiveCharacterCount = 0x934; // int32_t
		constexpr auto AddActiveCharacterCount = 0x938; // int32_t
		constexpr auto MaxActiveStructureCount = 0x940; // int32_t
		constexpr auto AddActiveStructureCount = 0x944; // int32_t
	}

	namespace n_UUI_GuildKPI {
		constexpr auto KPIListCanvasPanel = 0x2d8; // UCanvasPanel*
		constexpr auto PrePageButton = 0x2e0; // UButton*
		constexpr auto NextPageButton = 0x2e8; // UButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto CloseButton = 0x2f8; // UButton*
		constexpr auto SaveButton = 0x300; // UButton*
		constexpr auto GuildKPIItemSettingPanel = 0x308; // UGuildKPIItemSettingPanel*
		constexpr auto GuildKPISlotClass = 0x310; // UGuildKPISlot*
		constexpr auto ConfirmSaveUIOverride = 0x318; // UUI_GenericConfirmationDialog*
		constexpr auto NumPerPage = 0x320; // int32_t
		constexpr auto KPISlotRowDistance = 0x324; // float
		constexpr auto KPISlotSize = 0x328; // FVector2D
		constexpr auto KPILogMaxCount = 0x330; // int32_t
	}

	namespace n_UUI_N_Shop {
		constexpr auto MainScrollBox = 0x2d8; // UScrollBox*
		constexpr auto HotSaleBtn = 0x2e0; // UUI_N_Shop_MainBtn*
		constexpr auto FashionBtn = 0x2e8; // UUI_N_Shop_MainBtn*
		constexpr auto PrivilegeBtn = 0x2f0; // UUI_N_Shop_MainBtn*
		constexpr auto GoldNumText = 0x2f8; // UTextBlock*
		constexpr auto RechargeBtn = 0x300; // UButton*
		constexpr auto BannerTemplate = 0x308; // UUI_N_ShopBanner*
		constexpr auto BannerItemTemplate = 0x310; // UUI_N_ShopBannerItem*
		constexpr auto ItemRowHotTemplate = 0x318; // UUI_N_ShopItemRowHot*
		constexpr auto ItemHotTemplate = 0x320; // UUI_N_ShopItemHot*
		constexpr auto MainScrollBoxSlotPadding = 0x328; // FMargin
		constexpr auto CurShowPage = 0x338; // EShopUIMainIndex
	}

	namespace n_AGameRecordManager {
		constexpr auto ShowStepSize = 0x320; // float
	}

	namespace n_UKeyItem {
		constexpr auto NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto PressTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalTextColor = 0x300; // FSlateColor
		constexpr auto HoverTextColor = 0x328; // FSlateColor
		constexpr auto PressTextColor = 0x350; // FSlateColor
		constexpr auto SelectTextColor = 0x378; // FSlateColor
		constexpr auto BtnKey = 0x3a0; // UButton*
		constexpr auto ImgKey = 0x3a8; // UImage*
		constexpr auto TbKey = 0x3b0; // UTextBlock*
		constexpr auto bHovered = 0x3c8; // char : 1
		constexpr auto bPressed = 0x3c8; // char : 1
		constexpr auto bSelected = 0x3c8; // char : 1
		constexpr auto BindKeyMappingConfig = 0x3d0; // FKeyMappingConfig
		constexpr auto BindButtonType = 0x400; // EKeyMappingButtonType
	}

	namespace n_UDatasmithStaticMeshGLTFImportData {
		constexpr auto SourceMeshName = 0x28; // FString
	}

	namespace n_UAddPatchToolProperties {
		constexpr auto Width = 0x60; // float
		constexpr auto Rotation = 0x64; // float
		constexpr auto Subdivisions = 0x68; // int32_t
		constexpr auto Shift = 0x6c; // float
	}

	namespace n_UBTTask_GameplayTaskBase {
		constexpr auto bWaitForGameplayTask = 0x70; // char : 1
	}

	namespace n_UEnvQueryManager {
		constexpr auto InstanceCache = 0xa8; // TArray<FEnvQueryInstanceCache>
		constexpr auto LocalContexts = 0xb8; // TArray<UEnvQueryContext*>
		constexpr auto GCShieldedWrappers = 0xc8; // TArray<UEnvQueryInstanceBlueprintWrapper*>
		constexpr auto MaxAllowedTestingTime = 0x12c; // float
		constexpr auto bTestQueriesUsingBreadth = 0x130; // bool
		constexpr auto QueryCountWarningThreshold = 0x134; // int32_t
		constexpr auto QueryCountWarningInterval = 0x138; // double
	}

	namespace n_UResonanceAudioSettings {
		constexpr auto OutputSubmix = 0x28; // FSoftObjectPath
		constexpr auto QualityMode = 0x40; // ERaQualityMode
		constexpr auto GlobalReverbPreset = 0x48; // FSoftObjectPath
		constexpr auto GlobalSourcePreset = 0x60; // FSoftObjectPath
	}

	namespace n_UMovieSceneSubTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UMovieScene {
		constexpr auto Spawnables = 0x50; // TArray<FMovieSceneSpawnable>
		constexpr auto Possessables = 0x60; // TArray<FMovieScenePossessable>
		constexpr auto ObjectBindings = 0x70; // TArray<FMovieSceneBinding>
		constexpr auto BindingGroups = 0x80; // TMap<FName, FMovieSceneObjectBindingIDs>
		constexpr auto MasterTracks = 0xd0; // TArray<UMovieSceneTrack*>
		constexpr auto CameraCutTrack = 0xe0; // UMovieSceneTrack*
		constexpr auto SelectionRange = 0xe8; // FMovieSceneFrameRange
		constexpr auto PlaybackRange = 0xf8; // FMovieSceneFrameRange
		constexpr auto TickResolution = 0x108; // FFrameRate
		constexpr auto DisplayRate = 0x110; // FFrameRate
		constexpr auto EvaluationType = 0x118; // EMovieSceneEvaluationType
		constexpr auto ClockSource = 0x119; // EUpdateClockSource
		constexpr auto CustomClockSourcePath = 0x120; // FSoftObjectPath
		constexpr auto MarkedFrames = 0x138; // TArray<FMovieSceneMarkedFrame>
	}

	namespace n_UUI_SystemNotify {
		constexpr auto Border_bg = 0x260; // UBorder*
		constexpr auto TextBlock_notify = 0x268; // UTextBlock*
		constexpr auto SpeedRate = 0x270; // float
	}

	namespace n_ABP_LightningEffect_Naturebolt_C {
		constexpr auto UberGraphFrame = 0x6a8; // FPointerToUberGraphFrame
		constexpr auto StrikeSound = 0x6b0; // USoundBase*
		constexpr auto GrowthSound = 0x6b8; // USoundBase*
	}

	namespace n_UMovieSceneComponentMaterialTrack {
		constexpr auto MaterialIndex = 0x90; // int32_t
	}

	namespace n_UMovieSceneSpawnTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
		constexpr auto ObjectGuid = 0x88; // FGuid
	}

	namespace n_UBTTask_AnimalBase {
		constexpr auto BTTaskDebugName = 0x70; // FString
		constexpr auto AnglePrecision = 0x80; // float
		constexpr auto bUseNavPath = 0x84; // char : 1
		constexpr auto NavPathFilterClass = 0x88; // UNavigationQueryFilter*
		constexpr auto AcceptableRadiusOnPathEnd = 0x90; // float
		constexpr auto ProjectedQueryExtent = 0x94; // FVector
		constexpr auto FindNavPathIntervalMin = 0xa0; // float
		constexpr auto FindNavPathIntervalMax = 0xa4; // float
		constexpr auto bIsWaitTurnToAnglePrecision = 0xa8; // char : 1
		constexpr auto SGAnimalAIOwner = 0xb0; // ASGAnimalAIController*
		constexpr auto LastFindNavPathTime = 0xb8; // float
		constexpr auto FindNavPathInterval = 0xbc; // float
		constexpr auto LastDesiredLocation = 0xc0; // FVector
	}

	namespace n_USynthComponentMonoWaveTable {
		constexpr auto OnTableAltered = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnNumTablesChanged = 0x6e0; // FMulticastInlineDelegate
		constexpr auto CurrentPreset = 0x6f0; // UMonoWaveTableSynthPreset*
	}

	namespace n_UVectorFieldComponent {
		constexpr auto VectorField = 0x488; // UVectorField*
		constexpr auto Intensity = 0x490; // float
		constexpr auto Tightness = 0x494; // float
		constexpr auto bPreviewVectorField = 0x498; // char : 1
	}

	namespace n_UBoundsCopyComponent {
		constexpr auto BoundsSourceActor = 0xc0; // TSoftObjectPtr<AActor>
		constexpr auto bUseCollidingComponentsForSourceBounds = 0xe8; // bool
		constexpr auto bKeepOwnBoundsScale = 0xe9; // bool
		constexpr auto bUseCollidingComponentsForOwnBounds = 0xea; // bool
		constexpr auto PostTransform = 0xf0; // FTransform
		constexpr auto bCopyXBounds = 0x120; // bool
		constexpr auto bCopyYBounds = 0x121; // bool
		constexpr auto bCopyZBounds = 0x122; // bool
	}

	namespace n_UPhysicsCollisionHandler {
		constexpr auto ImpactThreshold = 0x28; // float
		constexpr auto ImpactReFireDelay = 0x2c; // float
		constexpr auto DefaultImpactSound = 0x30; // USoundBase*
		constexpr auto LastImpactSoundTime = 0x38; // double
	}

	namespace n_URevolveOperatorFactory {
		constexpr auto RevolveTool = 0x30; // UDrawAndRevolveTool*
	}

	namespace n_UViewAlignedPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UNiagaraDataInterfaceHairStrands {
		constexpr auto DefaultSource = 0x38; // UGroomAsset*
		constexpr auto SourceActor = 0x40; // AActor*
	}

	namespace n_UPubDataManager {
		constexpr auto PubCommonFieldClass = 0x28; // UPubCommonField*
		constexpr auto SGPubCommonField = 0x30; // UPubCommonField*
		constexpr auto PubGuildFieldClass = 0x38; // UPubGuildField*
		constexpr auto SGPubGuildField = 0x40; // UPubGuildField*
		constexpr auto PubAllianceFieldClass = 0x48; // UPubAllianceField*
		constexpr auto SGPubAllianceField = 0x50; // UPubAllianceField*
	}

	namespace n_USGGameDataAlliance {
		constexpr auto MaxAllianceNameLength = 0x28; // int32_t
		constexpr auto MaxBillboardLength = 0x2c; // int32_t
		constexpr auto CreateAllianceSelfTips = 0x30; // FText [0xa]
		constexpr auto RenameAllianceSelfTips = 0x120; // FText [0x7]
		constexpr auto RenameAllianceMemberTip = 0x1c8; // FText
		constexpr auto InviteGuildJoinSelfTips = 0x1e0; // FText [0xa]
		constexpr auto InviteGuildJoinTargetTip = 0x2d0; // FText
		constexpr auto InviteGuildJoinMemberTip = 0x2e8; // FText
		constexpr auto InviteAllianceJoinSelfTips = 0x300; // FText [0x9]
		constexpr auto InviteAllianceJoinTargetTip = 0x3d8; // FText
		constexpr auto InviteAllianceJoinMemberTip = 0x3f0; // FText
		constexpr auto GuildLeaveSelfTips = 0x408; // FText [0x7]
		constexpr auto GuildLeaveMemberTip = 0x4b0; // FText
		constexpr auto AllianceLeaveSelfTips = 0x4c8; // FText [0x6]
		constexpr auto AllianceLeaveMemberTip = 0x558; // FText
		constexpr auto GuildKickOutSelfTips = 0x570; // FText [0x6]
		constexpr auto GuildKickOutTargetTip = 0x600; // FText
		constexpr auto GuildKickOutMemberTip = 0x618; // FText
		constexpr auto AllianceKickOutSelfTips = 0x630; // FText [0x6]
		constexpr auto AllianceKickOutTargetTip = 0x6c0; // FText
		constexpr auto AllianceKickOutMemberTip = 0x6d8; // FText
		constexpr auto DisBandAllianceSelfTips = 0x6f0; // FText [0x4]
		constexpr auto DisBandAllianceMemberTip = 0x750; // FText
		constexpr auto SetBillboardSelfTips = 0x768; // FText [0x5]
		constexpr auto SetBillboardMemberTip = 0x7e0; // FText
		constexpr auto GiveOfficialJobSelfTips = 0x7f8; // FText [0x6]
		constexpr auto GiveOfficialJobTargetTip = 0x888; // FText
		constexpr auto MaxApplyCount = 0x8a0; // uint32_t
		constexpr auto MaxApplyVerfiyLen = 0x8a4; // int32_t
	}

	namespace n_UUI_Facelift {
		constexpr auto BtnReturn = 0x6a0; // UButton*
		constexpr auto BtnConfirm = 0x6a8; // UButton*
	}

	namespace n_UMeshBoundaryToolBase {
		constexpr auto SelectionMechanic = 0x138; // UPolygonSelectionMechanic*
		constexpr auto LoopSelectClickBehavior = 0x140; // USingleClickInputBehavior*
	}

	namespace n_UMatineeCameraShake {
		constexpr auto OscillationDuration = 0x98; // float
		constexpr auto OscillationBlendInTime = 0x9c; // float
		constexpr auto OscillationBlendOutTime = 0xa0; // float
		constexpr auto RotOscillation = 0xa4; // FROscillator
		constexpr auto LocOscillation = 0xc8; // FVOscillator
		constexpr auto FOVOscillation = 0xec; // FFOscillator
		constexpr auto AnimPlayRate = 0xf8; // float
		constexpr auto AnimScale = 0xfc; // float
		constexpr auto AnimBlendInTime = 0x100; // float
		constexpr auto AnimBlendOutTime = 0x104; // float
		constexpr auto RandomAnimSegmentDuration = 0x108; // float
		constexpr auto Anim = 0x110; // UCameraAnim*
		constexpr auto bRandomAnimSegment = 0x118; // char : 1
		constexpr auto OscillatorTimeRemaining = 0x11c; // float
		constexpr auto AnimInst = 0x120; // UCameraAnimInst*
	}

	namespace n_UCreateStructureInfoPanel {
		constexpr auto SelectTypeText = 0x260; // UTextBlock*
		constexpr auto SelectBindPointText = 0x268; // UTextBlock*
		constexpr auto SelectRotationText = 0x270; // UTextBlock*
		constexpr auto RotationBorder = 0x278; // UBorder*
		constexpr auto UseBindPointBorder = 0x280; // UBorder*
		constexpr auto UseBindPointText = 0x288; // UTextBlock*
		constexpr auto CurrentItem = 0x290; // USGItem*
	}

	namespace n_ASG_AnimalsCharacter {
		constexpr auto BaseChargeVelocity = 0x20f0; // float
		constexpr auto ChargeVelocityModify = 0x20f4; // float
		constexpr auto StarvingHungerThreshold = 0x20f8; // float
		constexpr auto Operate = 0x20fc; // float
		constexpr auto OperateMultiply = 0x2100; // float
		constexpr auto MaxHealthConfig = 0x2104; // float
		constexpr auto MaxHealthAdd = 0x2108; // float
		constexpr auto MaxHealth = 0x210c; // float
		constexpr auto MaxHealthMulAdd = 0x2110; // float
		constexpr auto Health = 0x2114; // float
		constexpr auto HealthRecover = 0x2118; // float
		constexpr auto HealthRecoverConfig = 0x211c; // float
		constexpr auto HealthRecoverAdd = 0x2120; // float
		constexpr auto HealthRecoverRandom = 0x2124; // float
		constexpr auto HealthRecoverMulAdd = 0x2128; // float
		constexpr auto HealthToHPConsume = 0x212c; // float
		constexpr auto HealthToStunConsume = 0x2130; // float
		constexpr auto HealthToHungerConsume = 0x2134; // float
		constexpr auto InfluenceHealthRecoverSP = 0x2138; // float
		constexpr auto HealthToSPConsume = 0x213c; // float
		constexpr auto InfluenceHealthRecoverWeight = 0x2140; // float
		constexpr auto HealthToWeightConsume = 0x2144; // float
		constexpr auto HealthInfluencePropertyMul = 0x2148; // TMap<float, float>
		constexpr auto LevelNameHUDShowHealthMaxValue = 0x2198; // float
		constexpr auto HealthConsumeMulAdd = 0x219c; // float
		constexpr auto MaxTameMulAddByQualityCorrection = 0x21a0; // TMap<float, float>
		constexpr auto bIsInitialized = 0x21f0; // char : 1
		constexpr auto Struct_AnimalsAnims = 0x21f8; // FAnimalsAnimsConfig
		constexpr auto BaseAccelerationMul = 0x2970; // float
		constexpr auto BaseRotationMul = 0x2974; // float
		constexpr auto BaseRotationMulInterpSpeedMul = 0x2978; // float
		constexpr auto BaseSpeedMul = 0x297c; // float
		constexpr auto PlatformRotationMulAdd = 0x2980; // float
		constexpr auto AnimalBuffSpeedMulAdd = 0x2984; // float
		constexpr auto bEnableHorseFastStop = 0x2988; // int32_t
		constexpr auto bEnableHorseFastTurn = 0x298c; // int32_t
		constexpr auto DoubleClickMaxTime = 0x29c0; // float
		constexpr auto PressedDoubleClickMaxTime = 0x29c4; // float
		constexpr auto bCustomCanMoving = 0x29c8; // char : 1
		constexpr auto bUseRootMotionTurnInPlace = 0x29c8; // char : 1
		constexpr auto UpdateMovingGaitModeTime = 0x29cc; // float
		constexpr auto TransitionBackwarkSpeed = 0x29d0; // float
		constexpr auto bIsAutoMoving = 0x29d4; // char : 1
		constexpr auto bIsAccelerationCooling = 0x29d4; // char : 1
		constexpr auto Enum_AnimalsMovingGaitType = 0x29d5; // EAnimalsMovingGaitType
		constexpr auto Enum_PlayerAnimalsMovingGaitType = 0x29d6; // EAnimalsMovingGaitType
		constexpr auto UpdateAcclerationMovingGaitModeTimer = 0x29d8; // FTimerHandle
		constexpr auto UpdateBrakingMovingGaitModeTimer = 0x29e0; // FTimerHandle
		constexpr auto UpdateMovingGaitModeCoolingTimer = 0x29e8; // FTimerHandle
		constexpr auto RotationMultiply = 0x29f0; // float
		constexpr auto RotationInterpSpeed = 0x29f4; // float
		constexpr auto UpdateRotationMultiplyInterpSpeed = 0x29f8; // float
		constexpr auto UpdateRotationMultiplyInterpSpeed_InPlace = 0x29fc; // float
		constexpr auto CurrentRotationMultiply = 0x2a00; // float
		constexpr auto TurnInPlaceMontage = 0x2a08; // UAnimMontage*
		constexpr auto ExtraAccelerationAdd = 0x2a10; // float
		constexpr auto ExtraRotationMultiplyAdd = 0x2a14; // float
		constexpr auto ExtraRotationMulInterpSpeedAdd = 0x2a18; // float
		constexpr auto TurnInPlaceAnglePrecision = 0x2a1c; // float
		constexpr auto RideTameTurnInPlaceAnglePrecision = 0x2a20; // float
		constexpr auto bUseNewCalcRotation = 0x2a24; // char : 1
		constexpr auto Struct_AnimalsNeighConfig = 0x2a28; // FAnimalsNeighConfig
		constexpr auto NeighMontage = 0x2a80; // UAnimMontage*
		constexpr auto AttackTurnDesiredRotationYaw = 0x2a88; // float
		constexpr auto AnimalBoneDamageAdjusters = 0x2a90; // TArray<FAnimalsBoneDamageAdjusterConfig>
		constexpr auto BaseChargeDamage = 0x2aa0; // float
		constexpr auto ChargeDamageType = 0x2aa8; // USGDamageType*
		constexpr auto ForceToStopDuration = 0x2ab0; // float
		constexpr auto bCanForceToStop = 0x2ac0; // char : 1
		constexpr auto ChargeDamageShieldList = 0x2ac8; // TArray<FAnimalsChargeShieldData>
		constexpr auto ServerCheckChargeDamageDistance = 0x2ad8; // float
		constexpr auto CurrentDestLoc = 0x2adc; // FVector
		constexpr auto CurrentMoveToDestLoc = 0x2ae8; // FVector
		constexpr auto Enum_DesiredAnimalsStanceType = 0x2af4; // EAnimalsStanceType
		constexpr auto bIsIdleBehavior = 0x2af5; // char : 1
		constexpr auto NavWalkingFindFloorHit = 0x2af8; // FHitResult
		constexpr auto LasNavWalkingFindFloorTime = 0x2b84; // float
		constexpr auto PlayHitMontageChance = 0x2b88; // float
		constexpr auto AIAttackInfos = 0x2b90; // TArray<FAIAttackInfo>
		constexpr auto BeAIAttackSocketName = 0x2ba0; // FName
		constexpr auto CurAIAttackState = 0x2ba8; // TWeakObjectPtr<UBaseAIAttackState>
		constexpr auto CurAttackInfoIndex = 0x2bb0; // int32_t
		constexpr auto CurrentEnemy = 0x2bb4; // TWeakObjectPtr<AActor>
		constexpr auto ScareSoundID = 0x2bbc; // FName
		constexpr auto bCanAttackTurnAround = 0x2bc4; // char : 1
		constexpr auto LastEndAttackStateTime = 0x2bc8; // double
		constexpr auto LastRandomAttackInfoTime = 0x2bd0; // float
		constexpr auto bShouldRun = 0x2bd4; // char : 1
		constexpr auto bForbidMove = 0x2bd4; // char : 1
		constexpr auto bForbidRotation = 0x2bd4; // char : 1
		constexpr auto FeedFoods = 0x2bd8; // TArray<FFeedFoodEntry>
		constexpr auto FeedAnimMontage = 0x2be8; // UAnimMontage*
		constexpr auto RideTameFeedTimeMul = 0x2bf0; // TMap<EAnimalQualityType, float>
		constexpr auto FeedAddToTamePerSecond = 0x2c40; // float
		constexpr auto bIsFeeding = 0x2c44; // char : 1
		constexpr auto bCheckSameOwnerID = 0x2c44; // char : 1
		constexpr auto bCanRide = 0x2c44; // char : 1
		constexpr auto bRiderRequireSaddle = 0x2c44; // char : 1
		constexpr auto bEnableLineTraceForRide = 0x2c44; // char : 1
		constexpr auto bCanOpenInventory = 0x2c44; // char : 1
		constexpr auto bCanRideTame = 0x2c44; // char : 1
		constexpr auto RideTameFailedCDTime = 0x2c48; // TMap<EAnimalQualityType, float>
		constexpr auto BaseAddTamePerSecond = 0x2c98; // float
		constexpr auto RideTameRequiredEquipItems = 0x2ca0; // TMap<EAnimalQualityType, FRideTameRequireItemData>
		constexpr auto BaseAddTamePerSecondInStructure = 0x2cf0; // float
		constexpr auto BaseAddTamePerSecondInStructureTrainer = 0x2cf4; // float
		constexpr auto TameTimeToHealthBaseMul = 0x2cf8; // float
		constexpr auto TameTimeToHealthMul = 0x2cfc; // float
		constexpr auto MinTameTimeToHealthMul = 0x2d00; // float
		constexpr auto MaxTameTimeToHealthMul = 0x2d04; // float
		constexpr auto DefaultHealthTameSuccess = 0x2d08; // float
		constexpr auto MaxRideTameTime = 0x2d0c; // float
		constexpr auto bIsRideTaming = 0x2d10; // char : 1
		constexpr auto bIsStartedTaming = 0x2d10; // char : 1
		constexpr auto RealTamingTime = 0x2d14; // float
		constexpr auto bIsWithinRideTameCDTime = 0x2d18; // char : 1
		constexpr auto LastTamingTime = 0x2d20; // double
		constexpr auto CurrentRunaway = 0x2d28; // float
		constexpr auto MaxRunaway = 0x2d2c; // float
		constexpr auto StruggleDurationTimeMin = 0x2d30; // float
		constexpr auto StruggleDurationTimeMax = 0x2d34; // float
		constexpr auto TotalStruggleDurationTimeMax = 0x2d38; // float
		constexpr auto StruggleCDMin = 0x2d3c; // float
		constexpr auto StruggleCDMax = 0x2d40; // float
		constexpr auto BaseAddRunawayPerSecond = 0x2d44; // float
		constexpr auto AddRunawaySpeedPerFrequency = 0x2d48; // float
		constexpr auto RunawaySpeedAddFrequency = 0x2d4c; // int32_t
		constexpr auto ReduceRunawayPerSecond = 0x2d50; // float
		constexpr auto ConsumeRiderSPPerSecond = 0x2d54; // float
		constexpr auto AddTamePressedPerSecond = 0x2d58; // float
		constexpr auto ConsumeRiderItemDurablePerKeyPress = 0x2d5c; // float
		constexpr auto StruggleConsumeRiderItemDurablePerSecond = 0x2d60; // float
		constexpr auto ConsumeRiderItemDurablePerSecond = 0x2d64; // float
		constexpr auto ConsumeRiderItemDurableFailedTame = 0x2d68; // float
		constexpr auto ConsumeRiderItemDurableCancelTame = 0x2d6c; // float
		constexpr auto AnimalStruggleMontage = 0x2d70; // UAnimMontage*
		constexpr auto RiderStruggleMontage = 0x2d78; // UAnimMontage*
		constexpr auto RandomRequirePlayerPressedKeyIntervalMin = 0x2d80; // float
		constexpr auto RandomRequirePlayerPressedKeyIntervalMax = 0x2d84; // float
		constexpr auto WaitStrugglingInterval = 0x2d88; // float
		constexpr auto AddSkillExpByTame = 0x2d8c; // float
		constexpr auto AddSkillByTameExpMul = 0x2d90; // float
		constexpr auto EndStruggleTime = 0x2d98; // double
		constexpr auto CurrentStruggleNum = 0x2da0; // float
		constexpr auto StartWaitStrugglingTime = 0x2da4; // float
		constexpr auto bIsWaitStruggling = 0x2da8; // char : 1
		constexpr auto bIsStruggling = 0x2da8; // char : 1
		constexpr auto RequirePlayerLeftMousePressed = 0x2da8; // char : 1
		constexpr auto NextRandomRequirePlayerPressedKeyTime = 0x2dac; // float
		constexpr auto bCanAnger = 0x2db0; // char : 1
		constexpr auto AddAngerValuePerSecond = 0x2db4; // float
		constexpr auto ReduceAngerValuePerSecond = 0x2db8; // float
		constexpr auto AddAngerValuePerKeyPress = 0x2dbc; // float
		constexpr auto AddAngerValueBlocked = 0x2dc0; // float
		constexpr auto ReduceAngerValueEndStruggle = 0x2dc4; // float
		constexpr auto MaxAngerValue = 0x2dc8; // TMap<EAnimalQualityType, float>
		constexpr auto AngerValueTriggerAnger = 0x2e18; // TMap<EAnimalQualityType, float>
		constexpr auto AngerValueTriggerStruggle = 0x2e68; // TMap<EAnimalQualityType, float>
		constexpr auto CurAngerValue = 0x2eb8; // float
		constexpr auto LastBlockedAddAngerTime = 0x2ebc; // float
		constexpr auto BaseInfluenceTurnByKeyPress = 0x2ec0; // float
		constexpr auto InfluenceTurnIncreaseByKeyPress = 0x2ec4; // float
		constexpr auto StartRideTameMontage = 0x2ec8; // UAnimMontage*
		constexpr auto bShowTameDebug = 0x2ed0; // char : 1
		constexpr auto RideTameDesiredLocation = 0x2ed4; // FVector
		constexpr auto LastAddTameValue = 0x2ee0; // float
		constexpr auto WaitNeighFinishTimer = 0x2ee8; // FTimerHandle
		constexpr auto bAutoForceTame = 0x2ef0; // char : 1
		constexpr auto AutoForceTameTimer = 0x2ef8; // FTimerHandle
		constexpr auto FavoriteFoodAddMul = 0x2f00; // TMap<int32_t, float>
		constexpr auto FoodTamingAddExpValue = 0x2f50; // float
		constexpr auto FoodAddHungerMulAdd = 0x2f54; // float
		constexpr auto BindTameCage = 0x2f58; // TWeakObjectPtr<ASGStructureAnimalTameCage>
		constexpr auto bAllowRandomWander = 0x2f60; // char : 1
		constexpr auto bOnlyOwnerAllowRide = 0x2f60; // char : 1
		constexpr auto bOnlyMateWithSameOwner = 0x2f60; // char : 1
		constexpr auto bAllowReceiveCall = 0x2f60; // char : 1
		constexpr auto bOnlyOwnerAllowCall = 0x2f60; // char : 1
		constexpr auto bOnlyOwnerAllowOpenInventory = 0x2f60; // char : 1
		constexpr auto Struct_AnimalsAI_Config = 0x2f64; // FAnimalsAI_Config
		constexpr auto bIsAutoMove = 0x2f8c; // char : 1
		constexpr auto bAttackTurnAround = 0x2f8c; // char : 1
		constexpr auto TamedFollowActor = 0x2f90; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto Enum_AnimalsStanceType = 0x2f98; // EAnimalsStanceType
		constexpr auto Enum_AnimalsDeadStanceType = 0x2f99; // EAnimalsStanceType
		constexpr auto BehaviorMontage = 0x2fa0; // UAnimMontage*
		constexpr auto Struct_PreAnimalsBehavior = 0x2fa8; // FAnimalsBehavior
		constexpr auto TMap_OldBehaviorTransitionMontages = 0x2fb8; // TMap<EAnimalsBehaviorType, FAnimalsCustomBehavior>
		constexpr auto Enum_AnimalsBehaviorType = 0x3008; // EAnimalsBehaviorType
		constexpr auto Enum_DesiredAnimalsBehaviorType = 0x3009; // EAnimalsBehaviorType
		constexpr auto FloatingHUDIconOffset = 0x300c; // FVector
		constexpr auto bDisplayStatusIcon = 0x3018; // char : 1
		constexpr auto bCostSPByGaitType = 0x3018; // char : 1
		constexpr auto NeedDecelerationSP = 0x301c; // float
		constexpr auto Enum_GaitTypeWhenTried = 0x3020; // EAnimalsMovingGaitType
		constexpr auto AllowAccelerationSP = 0x3024; // float
		constexpr auto AnimalCostSPMulAdd = 0x3028; // float
		constexpr auto SatietyRatio = 0x302c; // float
		constexpr auto HPRecoverMulWhileSatiety = 0x3030; // float
		constexpr auto HealthRecoverMulWhileSatiety = 0x3034; // float
		constexpr auto HungerToHealthConsume = 0x3038; // float
		constexpr auto MaxHungerMin = 0x303c; // float
		constexpr auto AllowAccelerationHP = 0x3040; // float
		constexpr auto Enum_GaitTypeWhenInjured = 0x3044; // EAnimalsMovingGaitType
		constexpr auto AnimalToolTipWidgetOverride = 0x3048; // USGToolTipsAnimal*
		constexpr auto AnimalToolTip = 0x3050; // USGToolTipsAnimal*
		constexpr auto bUseAttributeCorrection = 0x3058; // char : 1
		constexpr auto AttributeCorrectionMinMul = 0x305c; // float
		constexpr auto AttributeCorrectionMaxMul = 0x3060; // float
		constexpr auto AttributeCorrectionPerAdd = 0x3064; // float
		constexpr auto AttributeCorrectionRandomCountRideTame = 0x3068; // int32_t
		constexpr auto AttributeCorrectionRandomCountStunTame = 0x306c; // int32_t
		constexpr auto AttributeCorrectionRandomCount = 0x3070; // int32_t
		constexpr auto ThinACBaseChance = 0x3074; // int32_t
		constexpr auto NormalACBaseChance = 0x3078; // int32_t
		constexpr auto StrongACBaseChance = 0x307c; // int32_t
		constexpr auto MinACChanceMul = 0x3080; // float
		constexpr auto MaxACChanceMul = 0x3084; // float
		constexpr auto PerkAttributeCorrectionMul = 0x3088; // float
		constexpr auto RandomAttributeCorrectionChance = 0x3090; // TArray<float>
		constexpr auto FinalAttributeCorrectionMul = 0x30a0; // TArray<float>
		constexpr auto bMorphEnabled = 0x30b0; // char : 1
		constexpr auto AnimalAppearanceInfos = 0x30b8; // TMap<EAnimalQualityType, UAnimalAppearanceInfo*>
		constexpr auto AnimalHuaSeInfoClass = 0x3108; // UAnimalHuaSeInfo*
		constexpr auto AnimalAppearanceData = 0x3110; // FAnimalAppearanceData
		constexpr auto FurSkeletalMeshComps = 0x3160; // TMap<int32_t, USkeletalMeshComponent*>
		constexpr auto FurGroomComps = 0x31b0; // TMap<int32_t, UGroomComponent*>
		constexpr auto bIsGroomFur = 0x3200; // char : 1
		constexpr auto QualityType = 0x3201; // EAnimalQualityType
		constexpr auto bUseRandomQuality = 0x3202; // char : 1
		constexpr auto BaseQualityMin = 0x3204; // float
		constexpr auto BaseQualityMax = 0x3208; // float
		constexpr auto AttributeCorrectionQualityWeight = 0x3210; // TMap<EAttributeCorrectionType, float>
		constexpr auto QualityCorrectionToQualityType = 0x3260; // TMap<EAnimalQualityType, float>
		constexpr auto FinalQualityCorrection = 0x32b0; // float
		constexpr auto BaseQualityCorrection = 0x32b4; // float
		constexpr auto WildLevel = 0x32b8; // int32_t
		constexpr auto RealNamePerkDatas = 0x32c0; // TArray<FAnimalRealNamePerkData>
		constexpr auto MaxHPTrain = 0x32d0; // float
		constexpr auto HPRecoverTrain = 0x32d4; // float
		constexpr auto MaxStunTrain = 0x32d8; // float
		constexpr auto MaxWeightTrain = 0x32dc; // float
		constexpr auto MaxSPTrain = 0x32e0; // float
		constexpr auto SPRecoverTrain = 0x32e4; // float
		constexpr auto ChargeResTrain = 0x32e8; // float
		constexpr auto MaxHungerTrain = 0x32ec; // float
		constexpr auto MaxHealthTrain = 0x32f0; // float
		constexpr auto bCanLevelUp = 0x32f4; // char : 1
		constexpr auto bInfiniteState = 0x32f8; // char : 1
		constexpr auto ExtraOverWeightRatioAdd = 0x32fc; // float
		constexpr auto ExtraSiegeDamageMulAdd = 0x3300; // float
		constexpr auto ExtraProjectileDamageMulAdd = 0x3304; // float
		constexpr auto bUseCharacterSex = 0x3308; // char : 1
		constexpr auto bEnableRandomSex = 0x3308; // char : 1
		constexpr auto AutoAddExpTimer = 0x3310; // FTimerHandle
		constexpr auto AutoAddExpInterval = 0x3318; // float
		constexpr auto LevelAutoAddExp = 0x331c; // float
		constexpr auto AutoAddExpRemainTime = 0x3320; // float
		constexpr auto AnimalTypeString = 0x3328; // FString
		constexpr auto GenerationCount = 0x3338; // int32_t
		constexpr auto bCanMate = 0x333c; // char : 1
		constexpr auto MateCheckRange = 0x3340; // float
		constexpr auto MateRange = 0x3344; // float
		constexpr auto MateCDInterval = 0x3348; // float
		constexpr auto AddMateValuePerSecond = 0x334c; // float
		constexpr auto MateSuccessReduceLifeCount = 0x3350; // int32_t
		constexpr auto AnimalMatingAnims = 0x3358; // FAnimalsAnimInstanceConfig
		constexpr auto MatingParticle = 0x33d8; // UParticleSystem*
		constexpr auto MaxMateValue = 0x33e0; // float
		constexpr auto NextMateRemainTime = 0x33e4; // float
		constexpr auto MateCDReduceMulAdd = 0x33e8; // float
		constexpr auto MateValue = 0x33ec; // float
		constexpr auto bIsMating = 0x33f0; // char : 1
		constexpr auto WithMateAnimal = 0x33f8; // ASG_AnimalsCharacter*
		constexpr auto PregnancyChance = 0x3400; // float
		constexpr auto AddPregnancyValuePerSecond = 0x3404; // float
		constexpr auto PregnancyHungerConsumeMulAdd = 0x3408; // float
		constexpr auto PregnancyMinHealthRatio = 0x340c; // float
		constexpr auto PregnancyMinHPRatio = 0x3410; // float
		constexpr auto BabyInheritHighQualityChance = 0x3414; // float
		constexpr auto BabyRandomAttributeCorrectionChance = 0x3418; // float
		constexpr auto EndPregnancyReduceLifeCount = 0x341c; // int32_t
		constexpr auto AnimalPregnancyAnims = 0x3420; // FAnimalsAnimInstanceConfig
		constexpr auto PregnancyWaitPlayerDataTime = 0x34a0; // float
		constexpr auto PregnancyValue = 0x34a4; // float
		constexpr auto MaxPregnancyValue = 0x34a8; // float
		constexpr auto bIsPregnancy = 0x34ac; // char : 1
		constexpr auto HorsePregnancyChanceAdd = 0x34b0; // float
		constexpr auto FoodAddHealthToBabyValue = 0x34b4; // float
		constexpr auto FoodAddExpToBabyValue = 0x34b8; // float
		constexpr auto bPregnancyWaitPlayerData = 0x34bc; // char : 1
		constexpr auto PregnancyWaitPlayerDataRemainTime = 0x34c0; // float
		constexpr auto BabyInheritData = 0x34c8; // FAnimalBabyInheritData
		constexpr auto BabyVariationChanceFurQualityRealName = 0x3560; // FVariationChanceConfig
		constexpr auto BabyVariationChanceRealName = 0x356c; // FVariationChanceConfig
		constexpr auto BabyVariationChanceFurQuality = 0x3578; // FVariationChanceConfig
		constexpr auto BabyVariationChanceNoRealName = 0x3584; // FVariationChanceConfig
		constexpr auto BabyVariationMinLevel = 0x3590; // int32_t
		constexpr auto BabyVariationMaxLevel = 0x3594; // int32_t
		constexpr auto VariationAttributeCorrectionRandomCount = 0x3598; // int32_t
		constexpr auto MaxVariationCount = 0x359c; // int32_t
		constexpr auto VariationCount = 0x35a0; // int32_t
		constexpr auto AnimalBabyScale = 0x35a4; // float
		constexpr auto AnimalMaxScale = 0x35a8; // float
		constexpr auto AnimalBabyTemplate = 0x35b0; // ASG_AnimalsCharacter*
		constexpr auto BabyHungerConsumeHPMul = 0x35b8; // float
		constexpr auto bIsWaitingClaim = 0x35bc; // char : 1
		constexpr auto AnimalBabySpawnMontage = 0x35c0; // UAnimMontage*
		constexpr auto bAnimalBabyAllowBeg = 0x35c8; // char : 1
		constexpr auto AnimalBabyBegMinInterval = 0x35cc; // float
		constexpr auto AnimalBabyBegMaxInterval = 0x35d0; // float
		constexpr auto AnimalBabyBegItems = 0x35d8; // TArray<USGItem*>
		constexpr auto AnimalBabyBegWalkDistance = 0x35e8; // float
		constexpr auto AnimalBabyBegFinishMontage = 0x35f0; // UAnimMontage*
		constexpr auto MaxBegValue = 0x35f8; // float
		constexpr auto FinishBegAddValue = 0x35fc; // float
		constexpr auto AnimalBabyBegRemainTime = 0x3600; // float
		constexpr auto CurAnimalBabyBegType = 0x3604; // EAnimalBegType
		constexpr auto AnimalBabyBegFoodIndex = 0x3608; // int32_t
		constexpr auto BegWalkStartLocation = 0x360c; // FVector
		constexpr auto CurBegValue = 0x3618; // float
		constexpr auto bUseAnimalAge = 0x361c; // char : 1
		constexpr auto AddAnimalAgePerSecondByQuality = 0x3620; // TMap<EAnimalQualityType, float>
		constexpr auto AnimalAgeModifyPropConfig = 0x3670; // TMap<EAnimalAgeType, FAnimalAgeModifyPropConfig>
		constexpr auto AnimalAge = 0x36c0; // float
		constexpr auto BabySavedLifeCount = 0x36c4; // int32_t
		constexpr auto bCanModifyBone = 0x36d8; // char : 1
		constexpr auto CurrentAnimalBoneModifier = 0x36e0; // FAnimalsModifyBoneSettings
		constexpr auto bAllowBackward = 0x36f8; // char : 1
		constexpr auto CurDebugInfos = 0x3700; // FAnimalDebugInfo
		constexpr auto LastUpdateDebugInfoTime = 0x3780; // double
		constexpr auto DrawDebugPCs = 0x3788; // TArray<TWeakObjectPtr<ASGPlayerController>>
		constexpr auto TurnAngle = 0x379c; // float
		constexpr auto RelaxedLocation = 0x37bc; // FVector
		constexpr auto RelaxedRotation = 0x37c8; // FRotator
		constexpr auto bIsAmphibious = 0x37d4; // char : 1
		constexpr auto FleeFixedDistance = 0x37d8; // float
		constexpr auto FleeRandomDistance = 0x37dc; // float
		constexpr auto FleeMaxYaw = 0x37e0; // float
		constexpr auto TraceGroundLength = 0x37e4; // float
		constexpr auto MoveAroundBlockadeRotationMultiply = 0x37e8; // float
		constexpr auto MoveAroundMinDistance = 0x37ec; // float
		constexpr auto MoveAroundPerRotator = 0x37f0; // FRotator
		constexpr auto FollowMoveAroundMaxDist = 0x37fc; // float
		constexpr auto bIsMoveAroundBlockade = 0x3800; // char : 1
		constexpr auto MoveAroundBlockadePoint = 0x3804; // FVector
		constexpr auto LastMoveAroundBlockadeActor = 0x3810; // TWeakObjectPtr<AActor>
		constexpr auto TrainRequiredAnimalHunger = 0x3840; // float
		constexpr auto TrainRequiredGeneralHunger = 0x3844; // float
		constexpr auto TrainRewardInterval = 0x3848; // float
		constexpr auto TrainRewardCount = 0x384c; // int32_t
		constexpr auto TrainReward = 0x3850; // FTrainRewardConfig
		constexpr auto MaxGenealogyCount = 0x38d8; // int32_t
		constexpr auto GenealogyDatas = 0x38e0; // TArray<FAnimalGenealogyData>
		constexpr auto FatherChunkUid = 0x38f0; // FGuid
		constexpr auto MotherChunkUid = 0x3900; // FGuid
		constexpr auto bCanBeCastrate = 0x3920; // char : 1
		constexpr auto CastrateMaxTameLevel = 0x3924; // int32_t
		constexpr auto CastrateItem = 0x3928; // USGItem*
		constexpr auto bIsCastrated = 0x3930; // char : 1
		constexpr auto CastrateLifeCount = 0x3934; // int32_t
		constexpr auto bCanBeLeader = 0x3938; // char : 1
		constexpr auto WildFollowFixedDistance = 0x393c; // float
		constexpr auto WildFollowRandomDistance = 0x3940; // float
		constexpr auto WildFollowMaxRange = 0x3944; // float
		constexpr auto WildFollowMaxNum = 0x3948; // int32_t
		constexpr auto InclusionWildFollowClass = 0x3950; // TArray<ASG_AnimalsCharacter*>
		constexpr auto bIsWildLeader = 0x3960; // char : 1
		constexpr auto BeWildFollowCharacters = 0x3968; // TArray<TWeakObjectPtr<ASG_AnimalsCharacter>>
		constexpr auto WildFollowTarget = 0x3978; // TWeakObjectPtr<ASG_AnimalsCharacter>
		constexpr auto bMoveToStructureTrap = 0x3980; // char : 1
		constexpr auto bHasStructureTrap = 0x3980; // char : 1
		constexpr auto TrapAnimalMontage = 0x3988; // UAnimMontage*
		constexpr auto bAIUseCrouch = 0x3990; // char : 1
		constexpr auto bMoveIgnorePlatformStructures = 0x3990; // char : 1
		constexpr auto MoveIgnorePlatformActors = 0x39a8; // TArray<AActor*>
		constexpr auto bSetCollisionEquippedPlatform = 0x39b8; // char : 1
		constexpr auto bRefreshBonesEquippedPlatform = 0x39b8; // char : 1
		constexpr auto bSpawnByAnimalWatch = 0x39b8; // char : 1
		constexpr auto bNoEnemyDestroy = 0x39b8; // char : 1
		constexpr auto bSetNoEnemyDestroy = 0x39b8; // char : 1
		constexpr auto NoTargetDeadTime = 0x39bc; // float
		constexpr auto Tenacity = 0x39c0; // int32_t
		constexpr auto TamedTenacity = 0x39c4; // int32_t
		constexpr auto RemoteViewingPlayerControllers = 0x39c8; // TArray<TWeakObjectPtr<ASGPlayerController>>
		constexpr auto CanResetPos = 0x39d8; // char : 1
		constexpr auto bEnableLineTraceForResetPos = 0x39d8; // char : 1
		constexpr auto ResetPosCoolTime = 0x39dc; // int32_t
		constexpr auto ResetPosRadius = 0x39e0; // float
		constexpr auto BuildStructureClass = 0x39e8; // ASGStructure*
		constexpr auto LastResetPosDate = 0x39f0; // FDateTime
		constexpr auto DeathReplaceStaticMesh = 0x39f8; // UStaticMesh*
		constexpr auto DeathReplaceSkeletalMesh = 0x3a00; // USkeletalMesh*
		constexpr auto DeathReplaceAnimClass = 0x3a08; // UAnimInstance*
		constexpr auto bEquipPlatformCheckCollision = 0x3a10; // char : 1
		constexpr auto EquipPlatformCheckBoxs = 0x3a18; // TArray<FEquipPlatformCheckBox>
	}

	namespace n_UUI_StructureOccupyShelterSlot {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto ProtectionReq = 0x270; // FProtectionRequirement
		constexpr auto ProtectionGuildActivityPoint = 0x2c0; // int32_t
		constexpr auto ProtectionGAPImageIndex = 0x2c4; // int32_t
		constexpr auto ProtectTitleText = 0x2c8; // UTextBlock*
		constexpr auto ProtectTimeRichText = 0x2d0; // URichTextBlock*
		constexpr auto ResourceHorizontalBox = 0x2d8; // UHorizontalBox*
		constexpr auto StructureOccupyItemSlotClass = 0x2e0; // UUI_StructureOccupyItemSlot*
		constexpr auto ProtectButton = 0x2e8; // UButton*
		constexpr auto ProtectButtonText = 0x2f0; // UTextBlock*
		constexpr auto ProtectBorder = 0x2f8; // UBorder*
		constexpr auto ProtectBrush = 0x300; // FSlateBrush
		constexpr auto UnProtectBrush = 0x388; // FSlateBrush
		constexpr auto BuyProtectButton = 0x410; // UButton*
	}

	namespace n_UWBP_ProducerName_7_C {
		constexpr auto WBP_ProducerSlot = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_3 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_5 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_6 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSplitLine = 0x290; // UWBP_ProducerSplitLine_C*
	}

	namespace n_UStructureOccupyInfoHUD {
		constexpr auto OccupationRemainingTimeText = 0x360; // UStructureInfoHUDSlot*
		constexpr auto ProtectingText = 0x368; // UStructureInfoHUDSlot*
		constexpr auto NoProtectionText = 0x370; // UStructureInfoHUDSlot*
		constexpr auto LifeSpanText = 0x378; // UStructureInfoHUDSlot*
		constexpr auto BindStructureOccupy = 0x380; // TWeakObjectPtr<ASGStructureOccupy>
	}

	namespace n_UInterpTrackInstSlomo {
		constexpr auto OldTimeDilation = 0x28; // float
	}

	namespace n_USynthComponentMoto {
		constexpr auto MotoSynthPreset = 0x6d0; // UMotoSynthPreset*
		constexpr auto RPM = 0x6d8; // float
	}

	namespace n_ULakeCollisionComponent {
		constexpr auto CachedBodySetup = 0x488; // UBodySetup*
		constexpr auto BoxExtent = 0x490; // FVector
	}

	namespace n_UMovieSceneCameraShakeSourceShakeSection {
		constexpr auto ShakeData = 0xe8; // FMovieSceneCameraShakeSectionData
	}

	namespace n_UARSessionConfig {
		constexpr auto bGenerateMeshDataFromTrackedGeometry = 0x30; // bool
		constexpr auto bGenerateCollisionForMeshData = 0x31; // bool
		constexpr auto bGenerateNavMeshForMeshData = 0x32; // bool
		constexpr auto bUseMeshDataForOcclusion = 0x33; // bool
		constexpr auto bRenderMeshDataInWireframe = 0x34; // bool
		constexpr auto bTrackSceneObjects = 0x35; // bool
		constexpr auto bUsePersonSegmentationForOcclusion = 0x36; // bool
		constexpr auto bUseSceneDepthForOcclusion = 0x37; // bool
		constexpr auto bUseAutomaticImageScaleEstimation = 0x38; // bool
		constexpr auto bUseStandardOnboardingUX = 0x39; // bool
		constexpr auto WorldAlignment = 0x3a; // EARWorldAlignment
		constexpr auto SessionType = 0x3b; // EARSessionType
		constexpr auto PlaneDetectionMode = 0x3c; // EARPlaneDetectionMode
		constexpr auto bHorizontalPlaneDetection = 0x3d; // bool
		constexpr auto bVerticalPlaneDetection = 0x3e; // bool
		constexpr auto bEnableAutoFocus = 0x3f; // bool
		constexpr auto LightEstimationMode = 0x40; // EARLightEstimationMode
		constexpr auto FrameSyncMode = 0x41; // EARFrameSyncMode
		constexpr auto bEnableAutomaticCameraOverlay = 0x42; // bool
		constexpr auto bEnableAutomaticCameraTracking = 0x43; // bool
		constexpr auto bResetCameraTracking = 0x44; // bool
		constexpr auto bResetTrackedObjects = 0x45; // bool
		constexpr auto CandidateImages = 0x48; // TArray<UARCandidateImage*>
		constexpr auto MaxNumSimultaneousImagesTracked = 0x58; // int32_t
		constexpr auto EnvironmentCaptureProbeType = 0x5c; // EAREnvironmentCaptureProbeType
		constexpr auto WorldMapData = 0x60; // TArray<char>
		constexpr auto CandidateObjects = 0x70; // TArray<UARCandidateObject*>
		constexpr auto DesiredVideoFormat = 0x80; // FARVideoFormat
		constexpr auto bUseOptimalVideoFormat = 0x8c; // bool
		constexpr auto FaceTrackingDirection = 0x8d; // EARFaceTrackingDirection
		constexpr auto FaceTrackingUpdate = 0x8e; // EARFaceTrackingUpdate
		constexpr auto MaxNumberOfTrackedFaces = 0x90; // int32_t
		constexpr auto SerializedARCandidateImageDatabase = 0x98; // TArray<char>
		constexpr auto EnabledSessionTrackingFeature = 0xa8; // EARSessionTrackingFeature
		constexpr auto SceneReconstructionMethod = 0xa9; // EARSceneReconstruction
		constexpr auto PlaneComponentClass = 0xb0; // UARPlaneComponent*
		constexpr auto PointComponentClass = 0xb8; // UARPointComponent*
		constexpr auto FaceComponentClass = 0xc0; // UARFaceComponent*
		constexpr auto ImageComponentClass = 0xc8; // UARImageComponent*
		constexpr auto QRCodeComponentClass = 0xd0; // UARQRCodeComponent*
		constexpr auto PoseComponentClass = 0xd8; // UARPoseComponent*
		constexpr auto EnvironmentProbeComponentClass = 0xe0; // UAREnvironmentProbeComponent*
		constexpr auto ObjectComponentClass = 0xe8; // UARObjectComponent*
		constexpr auto MeshComponentClass = 0xf0; // UARMeshComponent*
		constexpr auto GeoAnchorComponentClass = 0xf8; // UARGeoAnchorComponent*
		constexpr auto DefaultMeshMaterial = 0x100; // UMaterialInterface*
		constexpr auto DefaultWireframeMeshMaterial = 0x108; // UMaterialInterface*
	}

	namespace n_UHuangLiEffectsView {
		constexpr auto TitleText = 0x260; // UTextBlock*
		constexpr auto SlotsUniformGridPanel = 0x268; // UUniformGridPanel*
		constexpr auto EffectSlotClass = 0x270; // UHuangLiEffectSlot*
		constexpr auto CountsPerRow = 0x278; // int32_t
	}

	namespace n_UMiniMapPOI_GenericTeamActor {
		constexpr auto DifferentTeamInMiniMapTexture = 0x3b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentTeamInMiniMapColor = 0x3e0; // FLinearColor
		constexpr auto DifferentTeamOutOfMiniMapTexture = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentTeamOutOfMiniMapColor = 0x418; // FLinearColor
	}

	namespace n_USoundNodeLevel {
		constexpr auto Volume = 0x48; // TArray<FSGSoundLevelVolumeData>
	}

	namespace n_USceneCaptureComponent2D {
		constexpr auto ProjectionType = 0x2c8; // ECameraProjectionMode
		constexpr auto FOVAngle = 0x2cc; // float
		constexpr auto OrthoWidth = 0x2d0; // float
		constexpr auto TextureTarget = 0x2d8; // UTextureRenderTarget2D*
		constexpr auto CompositeMode = 0x2e0; // ESceneCaptureCompositeMode
		constexpr auto PostProcessSettings = 0x2f0; // FPostProcessSettings
		constexpr auto PostProcessBlendWeight = 0x850; // float
		constexpr auto bOverride_CustomNearClippingPlane = 0x854; // char : 1
		constexpr auto CustomNearClippingPlane = 0x858; // float
		constexpr auto bUseCustomProjectionMatrix = 0x85c; // bool
		constexpr auto CustomProjectionMatrix = 0x860; // FMatrix
		constexpr auto bEnableClipPlane = 0x8a0; // bool
		constexpr auto ClipPlaneBase = 0x8a4; // FVector
		constexpr auto ClipPlaneNormal = 0x8b0; // FVector
		constexpr auto bCameraCutThisFrame = 0x8bc; // char : 1
		constexpr auto bConsiderUnrenderedOpaquePixelAsFullyTranslucent = 0x8bc; // char : 1
		constexpr auto bDisableFlipCopyGLES = 0x8c0; // bool
	}

	namespace n_USoundfieldEffectBase {
		constexpr auto Settings = 0x28; // USoundfieldEffectSettingsBase*
	}

	namespace n_UParticleModuleEventGenerator {
		constexpr auto Events = 0x30; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UInterpFilter {
		constexpr auto Caption = 0x28; // FString
	}

	namespace n_UCloudChunkDataSubSystem {
		constexpr auto CloudChunkDataDict = 0x30; // TMap<FGuid, FCloudChunkData>
	}

	namespace n_UUI_CustomFlag {
		constexpr auto InventoryGrid = 0x2d8; // UUniformGridPanel*
		constexpr auto SearchEditBox = 0x2e0; // UEditableTextBox*
		constexpr auto TemplateUniformGrid = 0x2e8; // UUniformGridPanel*
		constexpr auto CloseButton = 0x2f0; // UButton*
		constexpr auto SubmitButton = 0x2f8; // UButton*
		constexpr auto ResetButton = 0x300; // UButton*
		constexpr auto DeleteButton = 0x308; // UButton*
		constexpr auto FlagPrevireImage = 0x310; // UImage*
		constexpr auto UMSlider = 0x318; // USlider*
		constexpr auto VMSlider = 0x320; // USlider*
		constexpr auto UVMSlider = 0x328; // USlider*
		constexpr auto RSlider = 0x330; // USlider*
		constexpr auto SXSlider = 0x338; // USlider*
		constexpr auto SYSlider = 0x340; // USlider*
		constexpr auto SXYSlider = 0x348; // USlider*
		constexpr auto MirrorSlider = 0x350; // USlider*
		constexpr auto UMoveTextBlock = 0x358; // UTextBlock*
		constexpr auto VMoveTextBlock = 0x360; // UTextBlock*
		constexpr auto UVMoveTextBlock = 0x368; // UTextBlock*
		constexpr auto RTextBlock = 0x370; // UTextBlock*
		constexpr auto SXTextBlock = 0x378; // UTextBlock*
		constexpr auto SYTextBlock = 0x380; // UTextBlock*
		constexpr auto SXYTextBlock = 0x388; // UTextBlock*
		constexpr auto MirrorTextBlock = 0x390; // UTextBlock*
		constexpr auto SearchString = 0x398; // FString
		constexpr auto RTMaterialInst = 0x3a8; // UMaterialInstance*
		constexpr auto RTSize = 0x3b0; // FVector2D
		constexpr auto ImageMatParamNames = 0x3b8; // TArray<FName>
		constexpr auto BGAlphaParamName = 0x3c8; // FName
		constexpr auto BGColorParamName = 0x3d0; // FName
		constexpr auto MaskParamName = 0x3d8; // FName
		constexpr auto TexParamName = 0x3e0; // FName
		constexpr auto ImageCountsPerRow = 0x3e8; // int32_t
		constexpr auto ImageWidgetSlotTemplate = 0x3f0; // USelectWidgetSlot*
		constexpr auto ItemCountsPerRow = 0x3f8; // int32_t
		constexpr auto InventorySlotClass = 0x400; // UN_InventorySlot*
		constexpr auto LastSelectedItem = 0x408; // TWeakObjectPtr<USGItem>
		constexpr auto PressedSlot = 0x410; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto InventorySlotList = 0x418; // TArray<UN_InventorySlot*>
		constexpr auto SelectedImageSlot = 0x430; // TWeakObjectPtr<USelectWidgetSlot>
		constexpr auto DefaultScale = 0x438; // float
		constexpr auto CurTextureRenderTarget2D = 0x440; // UTextureRenderTarget2D*
		constexpr auto CurImageMaterial = 0x448; // UMaterialInstanceDynamic*
		constexpr auto bNeedRefreshAll = 0x46d; // char : 1
	}

	namespace n_AUIWSManager {
		constexpr auto UpdateLightInfo = 0x310; // bool
		constexpr auto ContinuousLightUpdate = 0x311; // bool
		constexpr auto CenterSimOnPawn = 0x312; // bool
		constexpr auto bEnableCapture = 0x313; // bool
		constexpr auto WindVector = 0x314; // FVector
		constexpr auto WindTurbulence = 0x320; // float
		constexpr auto UnderWaterEffectBias = 0x324; // float
		constexpr auto CausticBrightnessMult = 0x328; // float
		constexpr auto CaptureRes = 0x32c; // int32_t
		constexpr auto PPUnderWaterMat = 0x330; // UMaterialInterface*
		constexpr auto PPUnderWaterMID = 0x338; // UMaterialInstanceDynamic*
		constexpr auto CaptureRT = 0x340; // UTextureRenderTarget2D*
		constexpr auto EpicPPUnderWaterMat = 0x350; // UMaterialInterface*
		constexpr auto EpicPPUnderWaterMID = 0x358; // UMaterialInstanceDynamic*
		constexpr auto UnderWaterScreenWaveMat = 0x360; // UMaterialInterface*
		constexpr auto UnderWaterScreenWaveMID = 0x368; // UMaterialInstanceDynamic*
		constexpr auto DepthOfFieldFstop = 0x370; // float
		constexpr auto DepthOfFieldFocalDistance = 0x374; // float
		constexpr auto CanUseGerstnerWaterWave = 0x378; // bool
		constexpr auto MPC_UIWSWaterBodies = 0x380; // UMaterialParameterCollection*
		constexpr auto CurrentPriorityBody = 0x3a0; // AUIWSWaterBody*
		constexpr auto LastPriorityBody = 0x3a8; // AUIWSWaterBody*
		constexpr auto CaptureActor = 0x3b0; // AUIWSCapture*
	}

	namespace n_UCanvas {
		constexpr auto OrgX = 0x28; // float
		constexpr auto OrgY = 0x2c; // float
		constexpr auto ClipX = 0x30; // float
		constexpr auto ClipY = 0x34; // float
		constexpr auto DrawColor = 0x38; // FColor
		constexpr auto bCenterX = 0x3c; // char : 1
		constexpr auto bCenterY = 0x3c; // char : 1
		constexpr auto bNoSmooth = 0x3c; // char : 1
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto ColorModulate = 0x50; // FPlane
		constexpr auto DefaultTexture = 0x60; // UTexture2D*
		constexpr auto GradientTexture0 = 0x68; // UTexture2D*
		constexpr auto ReporterGraph = 0x70; // UReporterGraph*
	}

	namespace n_UBlueprintCore {
		constexpr auto SkeletonGeneratedClass = 0x28; // UObject*
		constexpr auto GeneratedClass = 0x30; // UObject*
		constexpr auto bLegacyNeedToPurgeSkelRefs = 0x38; // bool
		constexpr auto BlueprintGuid = 0x3c; // FGuid
	}

	namespace n_UMaterialExpressionParticleSubUV {
		constexpr auto bBlend = 0x60; // char : 1
	}

	namespace n_UParticleModuleMeshRotation {
		constexpr auto StartRotation = 0x30; // FRawDistributionVector
		constexpr auto bInheritParent = 0x78; // char : 1
	}

	namespace n_UBakedCurvatureMapToolProperties {
		constexpr auto CurvatureType = 0x60; // EBakedCurvatureTypeMode
		constexpr auto ColorMode = 0x64; // EBakedCurvatureColorMode
		constexpr auto RangeMultiplier = 0x68; // float
		constexpr auto MinRangeMultiplier = 0x6c; // float
		constexpr auto Clamping = 0x70; // EBakedCurvatureClampMode
		constexpr auto bGaussianBlur = 0x74; // bool
		constexpr auto BlurRadius = 0x78; // float
	}

	namespace n_UInterpTrackAnimControl {
		constexpr auto SlotName = 0x90; // FName
		constexpr auto AnimSeqs = 0x98; // TArray<FAnimControlTrackKey>
		constexpr auto bSkipAnimNotifiers = 0xa8; // char : 1
	}

	namespace n_UNiagaraDataInterfaceArrayQuat {
		constexpr auto QuatData = 0x50; // TArray<FQuat>
	}

	namespace n_UNiagaraDataInterfaceArray {
		constexpr auto MaxElements = 0x40; // int32_t
	}

	namespace n_UParticleModuleVelocityCone {
		constexpr auto Angle = 0x38; // FRawDistributionFloat
		constexpr auto Velocity = 0x68; // FRawDistributionFloat
		constexpr auto Direction = 0x98; // FVector
	}

	namespace n_UNodeMappingContainer {
		constexpr auto SourceItems = 0x28; // TMap<FName, FNodeItem>
		constexpr auto TargetItems = 0x78; // TMap<FName, FNodeItem>
		constexpr auto SourceToTarget = 0xc8; // TMap<FName, FName>
		constexpr auto SourceAsset = 0x118; // TSoftObjectPtr<UObject>
		constexpr auto TargetAsset = 0x140; // TSoftObjectPtr<UObject>
	}

	namespace n_USpaceCurveDeformationMechanic {
		constexpr auto ClickBehavior = 0x40; // USingleClickInputBehavior*
		constexpr auto HoverBehavior = 0x48; // UMouseHoverBehavior*
		constexpr auto TransformProperties = 0x68; // USpaceCurveDeformationMechanicPropertySet*
		constexpr auto PreviewGeometryActor = 0x168; // APreviewGeometryActor*
		constexpr auto RenderPoints = 0x170; // UPointSetComponent*
		constexpr auto RenderSegments = 0x178; // ULineSetComponent*
		constexpr auto PointTransformProxy = 0x1b8; // UTransformProxy*
		constexpr auto PointTransformGizmo = 0x1c0; // UTransformGizmo*
	}

	namespace n_UWaterWavesAssetReference {
		constexpr auto WaterWavesAsset = 0x28; // UWaterWavesAsset*
	}

	namespace n_UPlatformInterfaceBase {
		constexpr auto AllDelegates = 0x28; // TArray<FDelegateArray>
	}

	namespace n_UBTTask_WaitBlackboardTime {
		constexpr auto BlackboardKey = 0x78; // FBlackboardKeySelector
	}

	namespace n_UAsyncTask_LoadXRDeviceVisComponent {
		constexpr auto OnModelLoaded = 0x30; // FMulticastInlineDelegate
		constexpr auto OnLoadFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto SpawnedComponent = 0x58; // UPrimitiveComponent*
	}

	namespace n_URemoveOccludedTrianglesOperatorFactory {
		constexpr auto Tool = 0x30; // URemoveOccludedTrianglesTool*
	}

	namespace n_UEndTurnCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UOffsetWeightMapSetProperties {
		constexpr auto MinDistance = 0x80; // float
	}

	namespace n_UMovieSceneCinematicShotSection {
		constexpr auto ShotDisplayName = 0x160; // FString
		constexpr auto DisplayName = 0x170; // FText
	}

	namespace n_USequenceCameraShake {
		constexpr auto Sequence = 0x98; // UCameraAnimationSequence*
		constexpr auto PlayRate = 0xa0; // float
		constexpr auto Scale = 0xa4; // float
		constexpr auto BlendInTime = 0xa8; // float
		constexpr auto BlendOutTime = 0xac; // float
		constexpr auto RandomSegmentDuration = 0xb0; // float
		constexpr auto bRandomSegment = 0xb4; // bool
		constexpr auto Player = 0xb8; // USequenceCameraShakeSequencePlayer*
		constexpr auto CameraStandIn = 0xc0; // USequenceCameraShakeCameraStandIn*
	}

	namespace n_ATemplateSequenceActor {
		constexpr auto PlaybackSettings = 0x318; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x330; // UTemplateSequencePlayer*
		constexpr auto TemplateSequence = 0x338; // FSoftObjectPath
		constexpr auto BindingOverride = 0x350; // FTemplateSequenceBindingOverrideData
	}

	namespace n_UAllianceDetailsSlot {
		constexpr auto AllianceNameText = 0x2d8; // UTextBlock*
		constexpr auto AllianceGuildCountText = 0x2e0; // UTextBlock*
		constexpr auto AllianceOwnerText = 0x2e8; // UTextBlock*
		constexpr auto AllianceNoticeText = 0x2f0; // UTextBlock*
		constexpr auto AllianceImage = 0x2f8; // UImage*
		constexpr auto AllianceRelationButton = 0x300; // UButton*
		constexpr auto ChangeAllianceNameButton = 0x308; // UButton*
		constexpr auto ChangeAllianceNoticeButton = 0x310; // UButton*
		constexpr auto GuildListButton = 0x318; // UButton*
		constexpr auto AllianceApplyButton = 0x320; // UButton*
		constexpr auto ApplyAlertImage = 0x328; // UImage*
		constexpr auto ChangeNameUIOverride = 0x330; // UUI_ModifyText*
		constexpr auto ChangeNoticeUIOverride = 0x338; // UUI_ModifyText*
		constexpr auto MaxNoticeLen = 0x340; // int32_t
	}

	namespace n_URewardCondition_Float {
		constexpr auto ConditionType = 0x50; // EValueConditionType
		constexpr auto Value = 0x54; // float
	}

	namespace n_UParticleModuleSizeMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
		constexpr auto MultiplyX = 0x78; // char : 1
		constexpr auto MultiplyY = 0x78; // char : 1
		constexpr auto MultiplyZ = 0x78; // char : 1
	}

	namespace n_UMovieSceneCompiledDataManager {
		constexpr auto Hierarchies = 0xd8; // TMap<int32_t, FMovieSceneSequenceHierarchy>
		constexpr auto TrackTemplates = 0x128; // TMap<int32_t, FMovieSceneEvaluationTemplate>
		constexpr auto TrackTemplateFields = 0x178; // TMap<int32_t, FMovieSceneEvaluationField>
		constexpr auto EntityComponentFields = 0x1c8; // TMap<int32_t, FMovieSceneEntityComponentField>
	}

	namespace n_UImage {
		constexpr auto Brush = 0x108; // FSlateBrush
		constexpr auto BrushDelegate = 0x190; // FDelegate
		constexpr auto ColorAndOpacity = 0x1a0; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x1b0; // FDelegate
		constexpr auto bFlipForRightToLeftFlowDirection = 0x1c0; // bool
		constexpr auto OnMouseButtonDownEvent = 0x1c4; // FDelegate
	}

	namespace n_ASGGamePlayActor {
		constexpr auto bCalFriendDamage = 0x328; // char : 1
		constexpr auto CalFriendDamageRate = 0x32c; // float
		constexpr auto DescriptionName = 0x348; // FText
		constexpr auto HP = 0x360; // float
		constexpr auto MaxHP = 0x364; // float
		constexpr auto MaxHPMul = 0x368; // float
		constexpr auto ReplicatedHP = 0x36c; // float
		constexpr auto bIsDead = 0x370; // char : 1
		constexpr auto bTakeOneDamage = 0x378; // char : 1
		constexpr auto ClientSpawnMesh = 0x380; // FSoftObjectPath
		constexpr auto DestroyedMesh = 0x398; // FSoftObjectPath
		constexpr auto DestructibleRelativeLocation = 0x3b0; // FVector
		constexpr auto DestructibleRelativeRotation = 0x3bc; // FRotator
		constexpr auto DestroyedMeshActorClass = 0x3c8; // ASGDestructibleActor*
		constexpr auto DestroyedMeshActorLifeTime = 0x3d0; // int32_t
		constexpr auto DestroyedStaticMesh = 0x3d8; // UStaticMesh*
		constexpr auto DeadSoundID = 0x3e0; // FName
		constexpr auto bUseMultiDestroyedMesh = 0x3e8; // char : 1
		constexpr auto MultiDestroyedMesh = 0x3f0; // TArray<FMultiDestroyedMesh>
		constexpr auto bUseDissolveMaterial = 0x400; // char : 1
		constexpr auto Hardness = 0x404; // int32_t
		constexpr auto RuleDamageRate = 0x408; // float [0x4]
		constexpr auto ReductionRate = 0x418; // float [0x4]
		constexpr auto bHostileGuildDamageOnly = 0x428; // char : 1
		constexpr auto bAnyPlayerCanUse = 0x428; // char : 1
		constexpr auto ServerLevelEffectPropCurveTable = 0x430; // UCurveTable*
		constexpr auto InitHPMaterialValue = 0x438; // float
		constexpr auto UpdateHPTimer = 0x440; // FTimerHandle
		constexpr auto UpdataHPDelta = 0x448; // float
		constexpr auto FireBuffSimpleInfo = 0x4a0; // FBuffSimpleInfo
		constexpr auto FireBuffParticle = 0x4c8; // UParticleSystemComponent*
		constexpr auto Tenacity = 0x4f0; // int32_t
		constexpr auto UpCharacterSets = 0x4f8; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto PVETakeDamageMultiAdd = 0x508; // float
	}

	namespace n_USoundfieldSubmix {
		constexpr auto SoundfieldEncodingFormat = 0x40; // FName
		constexpr auto EncodingSettings = 0x48; // USoundfieldEncodingSettingsBase*
		constexpr auto SoundfieldEffectChain = 0x50; // TArray<USoundfieldEffectBase*>
		constexpr auto EncodingSettingsClass = 0x60; // USoundfieldEncodingSettingsBase*
	}

	namespace n_UAbilityTask_WaitGameplayEvent {
		constexpr auto EventReceived = 0x80; // FMulticastInlineDelegate
		constexpr auto OptionalExternalTarget = 0x98; // UAbilitySystemComponent*
	}

	namespace n_UWBP_GenericMultiItemSlot_C {
		constexpr auto AddBg = 0x2c0; // UImage*
		constexpr auto LocalString = 0x2c8; // FString
	}

	namespace n_USGLegendGeneral {
		constexpr auto Title = 0x28; // FText
		constexpr auto Name = 0x40; // FText
		constexpr auto GeneralDesc = 0x58; // FText
		constexpr auto SkillDesc = 0x70; // FText
		constexpr auto FunctionDesc = 0x88; // FText
		constexpr auto AssignDesc = 0xa0; // FText
		constexpr auto Mesh = 0xb8; // USkeletalMesh*
		constexpr auto PerkSkills = 0xc0; // TArray<int32_t>
		constexpr auto RequiredTokenItems = 0xd0; // TArray<USGItem*>
		constexpr auto RequiredLevel = 0xe0; // int32_t
		constexpr auto RequiredQulityType = 0xe4; // EGeneralsQualityType
		constexpr auto RequiredSkillTypeEntries = 0xe8; // TArray<FRequiredGeneralSkillType>
	}

	namespace n_UPanelSlot {
		constexpr auto Parent = 0x28; // UPanelWidget*
		constexpr auto Content = 0x30; // UWidget*
	}

	namespace n_ABP_MenuHUD_C {
		constexpr auto DefaultSceneRoot = 0x490; // USceneComponent*
	}

	namespace n_UParticleModuleRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x60; // FParticleRandomSeedInfo
	}

	namespace n_AGeometryCacheActor {
		constexpr auto GeometryCacheComponent = 0x310; // UGeometryCacheComponent*
	}

	namespace n_UMovieSceneGeometryCollectionSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCollectionParams
	}

	namespace n_UUI_AddMoneyPannel {
		constexpr auto OperationText = 0x260; // UTextBlock*
		constexpr auto OperationAmountText = 0x268; // UEditableText*
		constexpr auto AddButton = 0x270; // UButton*
		constexpr auto ReduceButton = 0x278; // UButton*
		constexpr auto OperationSlider = 0x280; // USlider*
		constexpr auto AcceptButton = 0x288; // UButton*
		constexpr auto CancelButton = 0x290; // UButton*
		constexpr auto EditableTextBox = 0x298; // UEditableTextBox*
		constexpr auto GivePlayerName = 0x2a0; // FString
		constexpr auto GiveCapitalNum = 0x2b0; // int32_t
		constexpr auto BindItem = 0x2b4; // TWeakObjectPtr<USGItem>
		constexpr auto WidgetOffset = 0x2bc; // FVector2D
	}

	namespace n_UPhysicsConstraintTemplate {
		constexpr auto DefaultInstance = 0x28; // FConstraintInstance
		constexpr auto ProfileHandles = 0x1e8; // TArray<FPhysicsConstraintProfileHandle>
		constexpr auto DefaultProfile = 0x1f8; // FConstraintProfileProperties
	}

	namespace n_UVehiclePerkDragDropOperation {
		constexpr auto BindVehiclePerk = 0x88; // TWeakObjectPtr<USGVehiclePerk>
	}

	namespace n_UConstructionPlaneMechanic {
		constexpr auto PlaneTransformGizmo = 0xc8; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0xd0; // UTransformProxy*
		constexpr auto ClickToSetPlaneBehavior = 0xe8; // USingleClickInputBehavior*
	}

	namespace n_UUI_N_Inventory {
		constexpr auto EquipPanel = 0x2d8; // UN_EquipPanel*
		constexpr auto CraftPanel = 0x2e0; // UN_CraftPanel*
		constexpr auto ShortCutPanel = 0x2e8; // UN_ShortCutPanel*
		constexpr auto InventoryPanel = 0x2f0; // UN_InventoryPanel*
		constexpr auto RemoteInventoryNoCraftPanel = 0x2f8; // UN_InventoryPanel*
		constexpr auto RemoteCraftInventoryPanel = 0x300; // UN_RemoteCraftInventoryPanel*
		constexpr auto CraftPanelCanvas = 0x308; // UCanvasPanel*
		constexpr auto ChangeAppearanceCanvas = 0x310; // UCanvasPanel*
		constexpr auto ChangeAppearancePanel = 0x318; // UUI_ChangeAppearancePanel*
		constexpr auto DetailPanel = 0x320; // UCanvasPanel*
		constexpr auto RemoteDetailPanel = 0x328; // UCanvasPanel*
		constexpr auto RemoteInventoryNoCraftPanelCanvas = 0x330; // UCanvasPanel*
		constexpr auto RemoteEquipPanel = 0x338; // UN_EquipPanel*
		constexpr auto GeneralStatusPanel = 0x340; // UN_GeneralStatusPanel*
		constexpr auto bShowGeneralStatusPanel = 0x348; // char : 1
		constexpr auto RemotePerkPanel = 0x350; // USkillPanel*
		constexpr auto AttributePanel = 0x358; // UAttributePanel*
		constexpr auto ConditionPanel = 0x360; // UConditionPanel*
		constexpr auto TalentPanel = 0x368; // UTalentPanel*
		constexpr auto StructureOccupyPanel = 0x370; // UN_StructureOccupyPanel*
		constexpr auto RemoteAnimalFarmPanel = 0x378; // UAnimalFarmPanel*
		constexpr auto RemoteFunctionPanel = 0x380; // UN_RemoteFunctionPanel*
		constexpr auto AttributeButton = 0x388; // UOptionButton*
		constexpr auto ConditionButton = 0x390; // UOptionButton*
		constexpr auto TalentButton = 0x398; // UOptionButton*
		constexpr auto RemoteEquipButton = 0x3a0; // UOptionButton*
		constexpr auto RemoteAttributeButton = 0x3a8; // UOptionButton*
		constexpr auto RemoteConditionButton = 0x3b0; // UOptionButton*
		constexpr auto RemoteTalentButton = 0x3b8; // UOptionButton*
		constexpr auto RemotePerkButton = 0x3c0; // UOptionButton*
		constexpr auto SelfItemCraftSlot = 0x3c8; // UN_ItemCraftQueueSlot*
		constexpr auto StructureItemCraftSlot = 0x3d0; // UN_ItemCraftQueueSlot*
		constexpr auto CapitalText = 0x3d8; // UTextBlock*
		constexpr auto CloseButton = 0x3e0; // UButton*
		constexpr auto CurrentRemoteInventoryType = 0x3e8; // EUIInventoryRemoteType
		constexpr auto RemoteAnimalVehicleDetailPanel = 0x3f0; // UCanvasPanel*
		constexpr auto RemoteAnimalVehicleEquipButton = 0x3f8; // UOptionButton*
		constexpr auto RemoteAnimalVehicleAttributeButton = 0x400; // UOptionButton*
		constexpr auto RemoteAnimalVehiclePerkButton = 0x408; // UOptionButton*
		constexpr auto RemoteAnimalVehicleEquipPanel = 0x410; // UVehicleEquipPanel*
		constexpr auto RemoteAnimalVehicleAttributePanel = 0x418; // UVehicleAttributePanel*
		constexpr auto RemoteAnimalVehiclePerkPanel = 0x420; // UUI_VehiclePerk*
		constexpr auto RemoteStableDetailPanel = 0x428; // UStableDetailPanel*
		constexpr auto bShowHelp = 0x430; // char : 1
		constexpr auto bOpenRemoteInventory = 0x430; // char : 1
		constexpr auto bOpenRemoteCraft = 0x430; // char : 1
		constexpr auto bOpenSafeBox = 0x430; // char : 1
		constexpr auto RemoteInventoryComponent = 0x434; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindCharacter = 0x450; // TWeakObjectPtr<ASGCharacter>
		constexpr auto SplitPanel = 0x458; // TWeakObjectPtr<UN_SplitItemPanel>
		constexpr auto SplitItemPanelTemplate = 0x460; // UN_SplitItemPanel*
		constexpr auto SetPriorityPanel = 0x468; // TWeakObjectPtr<UN_SetPriorityPanel>
		constexpr auto SetPriorityPanelTemplate = 0x470; // UN_SetPriorityPanel*
		constexpr auto GiftGuildPanel = 0x478; // TWeakObjectPtr<UN_GiftGuildPanel>
		constexpr auto GiftGuildPanelTemplate = 0x480; // UN_GiftGuildPanel*
		constexpr auto ChangeItemNamePanel = 0x488; // TWeakObjectPtr<UN_ChangeItemNamePanel>
		constexpr auto ChangeItemNamePanelTemplate = 0x490; // UN_ChangeItemNamePanel*
		constexpr auto AddMoneyPannelTemplate = 0x498; // UUI_AddMoneyPannel*
		constexpr auto MouseInventorySlot = 0x4a8; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto OnInventorySingleSlotPressed = 0x4c0; // FMulticastInlineDelegate
		constexpr auto OnInventorySingleSlotReleased = 0x4d0; // FMulticastInlineDelegate
		constexpr auto PressedSlot = 0x4e0; // TWeakObjectPtr<UN_InventorySlot>
	}

	namespace n_UDistributionVectorConstant {
		constexpr auto Constant = 0x38; // FVector
		constexpr auto bLockAxes = 0x44; // char : 1
		constexpr auto LockedAxes = 0x48; // EDistributionVectorLockFlags
	}

	namespace n_USceneCaptureComponent {
		constexpr auto PrimitiveRenderMode = 0x208; // ESceneCapturePrimitiveRenderMode
		constexpr auto CaptureSource = 0x209; // ESceneCaptureSource
		constexpr auto bCaptureEveryFrame = 0x20a; // char : 1
		constexpr auto bCaptureOnMovement = 0x20a; // char : 1
		constexpr auto bAlwaysPersistRenderingState = 0x20b; // bool
		constexpr auto HiddenComponents = 0x210; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto HiddenActors = 0x220; // TArray<AActor*>
		constexpr auto ShowOnlyComponents = 0x230; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
		constexpr auto ShowOnlyActors = 0x240; // TArray<AActor*>
		constexpr auto bDepthOnlyDrawStaticOnly = 0x250; // bool
		constexpr auto bDepthOnlyNotDrawMask = 0x251; // bool
		constexpr auto LODDistanceFactor = 0x254; // float
		constexpr auto MaxViewDistanceOverride = 0x258; // float
		constexpr auto CaptureSortPriority = 0x25c; // int32_t
		constexpr auto bUseRayTracingIfEnabled = 0x260; // bool
		constexpr auto ShowFlagSettings = 0x268; // TArray<FEngineShowFlagsSetting>
		constexpr auto ProfilingEventName = 0x2a8; // FString
	}

	namespace n_UUI_ChangeAppearancePanel {
		constexpr auto ItemGridPanel = 0x260; // UUniformGridPanel*
		constexpr auto AppearanceTagBtn = 0x268; // UUI_PicBtn*
		constexpr auto FashionTagBtn = 0x270; // UUI_PicBtn*
		constexpr auto TagHBox = 0x278; // UHorizontalBox*
		constexpr auto ShowAllItemCheckBox = 0x280; // UCheckBox*
		constexpr auto ItemPanelSlotList = 0x288; // TArray<UN_AppearanceSlot*>
		constexpr auto CountsPerRow = 0x298; // int32_t
		constexpr auto DefaultShowNum = 0x29c; // int32_t
		constexpr auto InventorySlotClass = 0x2a0; // UN_AppearanceSlot*
		constexpr auto ShowRow = 0x2a8; // int32_t
		constexpr auto LastSlotIndex = 0x2ac; // int32_t
		constexpr auto RootSGUI = 0x2b0; // USGUI*
		constexpr auto BindSGChar = 0x2b8; // TWeakObjectPtr<ASGPlayerCharacter>
		constexpr auto BindInventoryComp = 0x2c0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto PressedSlot = 0x2cc; // TWeakObjectPtr<UN_AppearanceSlot>
	}

	namespace n_UEnvelopeFollowerListener {
		constexpr auto OnEnvelopeFollowerUpdate = 0xc0; // FMulticastInlineDelegate
	}

	namespace n_UTestMovieSceneSequence {
		constexpr auto MovieScene = 0x60; // UMovieScene*
	}

	namespace n_UMovieSceneSkeletalAnimationSection {
		constexpr auto Params = 0xe8; // FMovieSceneSkeletalAnimationParams
		constexpr auto AnimSequence = 0x1c0; // UAnimSequence*
		constexpr auto Animation = 0x1c8; // UAnimSequenceBase*
		constexpr auto StartOffset = 0x1d0; // float
		constexpr auto EndOffset = 0x1d4; // float
		constexpr auto PlayRate = 0x1d8; // float
		constexpr auto bReverse = 0x1dc; // char : 1
		constexpr auto SlotName = 0x1e0; // FName
		constexpr auto StartLocationOffset = 0x1e8; // FVector
		constexpr auto StartRotationOffset = 0x1f4; // FRotator
		constexpr auto bMatchWithPrevious = 0x200; // bool
		constexpr auto MatchedBoneName = 0x204; // FName
		constexpr auto MatchedLocationOffset = 0x20c; // FVector
		constexpr auto MatchedRotationOffset = 0x218; // FRotator
		constexpr auto bMatchTranslation = 0x224; // bool
		constexpr auto bMatchIncludeZHeight = 0x225; // bool
		constexpr auto bMatchRotationYaw = 0x226; // bool
		constexpr auto bMatchRotationPitch = 0x227; // bool
		constexpr auto bMatchRotationRoll = 0x228; // bool
	}

	namespace n_UUI_WorldRank {
		constexpr auto RankListVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto RankVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto HeaderCanvasPanel = 0x2e8; // UCanvasPanel*
		constexpr auto PrePageButton = 0x2f0; // UButton*
		constexpr auto NextPageButton = 0x2f8; // UButton*
		constexpr auto ShowPageText = 0x300; // UTextBlock*
		constexpr auto Button_this = 0x308; // UButton*
		constexpr auto Button_last = 0x310; // UButton*
		constexpr auto TextBlock_this = 0x318; // UTextBlock*
		constexpr auto TextBlock_last = 0x320; // UTextBlock*
		constexpr auto CanvasPanel_self = 0x328; // UCanvasPanel*
		constexpr auto TextBlock_rankdate = 0x330; // UTextBlock*
		constexpr auto TextBlock_datatime = 0x338; // UTextBlock*
		constexpr auto Button_Refresh = 0x340; // UButton*
		constexpr auto Button_Reward = 0x348; // UButton*
		constexpr auto WorldRankButtonSlotClass = 0x350; // UWorldRankButtonSlot*
		constexpr auto NumPerPage = 0x358; // int32_t
		constexpr auto ShowMaxNum = 0x35c; // int32_t
		constexpr auto TextSelectColor = 0x360; // FLinearColor
		constexpr auto TextUnSelectColor = 0x370; // FLinearColor
		constexpr auto RefreshInterval = 0x380; // int32_t
		constexpr auto UIRankDebug = 0x384; // char : 1
	}

	namespace n_UGuildStoreGeneralItem {
		constexpr auto ButtonCheckedStyle = 0x260; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x4d8; // FButtonStyle
		constexpr auto BtSelected = 0x750; // UButton*
		constexpr auto TbNameName = 0x758; // UTextBlock*
		constexpr auto TbLevel = 0x760; // UTextBlock*
		constexpr auto TbStatue = 0x768; // UTextBlock*
	}

	namespace n_UInterpTrackInstVisibility {
		constexpr auto Action = 0x28; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x2c; // float
	}

	namespace n_UUMGSequencePlayer {
		constexpr auto Animation = 0x410; // UWidgetAnimation*
		constexpr auto RootTemplateInstance = 0x420; // FMovieSceneRootEvaluationTemplateInstance
	}

	namespace n_UInterpTrackVectorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UMovieSceneFadeSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto FadeColor = 0x188; // FLinearColor
		constexpr auto bFadeAudio = 0x198; // char : 1
	}

	namespace n_UJueWeiPropSlot {
		constexpr auto IconImage = 0x2d8; // UImage*
		constexpr auto PropText = 0x2e0; // UTextBlock*
		constexpr auto TipWidgetTemplate = 0x2e8; // USGToolTipWidget*
		constexpr auto TipText = 0x2f0; // FText
	}

	namespace n_ALight {
		constexpr auto LightComponent = 0x310; // ULightComponent*
		constexpr auto bEnabled = 0x318; // char : 1
	}

	namespace n_UMaterialExpressionFontSample {
		constexpr auto Font = 0x40; // UFont*
		constexpr auto FontTexturePage = 0x48; // int32_t
	}

	namespace n_UMovieSceneEntitySystem {
		constexpr auto Linker = 0x28; // UMovieSceneEntitySystemLinker*
	}

	namespace n_USeamSculptToolProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto bHitBackFaces = 0x61; // bool
	}

	namespace n_UHoleFillTool {
		constexpr auto SmoothHoleFillProperties = 0x98; // USmoothHoleFillProperties*
		constexpr auto Properties = 0xa0; // UHoleFillToolProperties*
		constexpr auto Actions = 0xa8; // UHoleFillToolActions*
		constexpr auto Statistics = 0xb0; // UHoleFillStatisticsProperties*
		constexpr auto Preview = 0xb8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto SelectionMechanic = 0xc0; // UPolygonSelectionMechanic*
	}

	namespace n_UMaterialExpressionBentNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTalentSlot {
		constexpr auto bIsArmor = 0x260; // char : 1
		constexpr auto ItemNameText = 0x268; // UTextBlock*
		constexpr auto SlashImage = 0x270; // UImage*
		constexpr auto CrushImage = 0x278; // UImage*
		constexpr auto SlashText = 0x280; // UTextBlock*
		constexpr auto CrushText = 0x288; // UTextBlock*
		constexpr auto PierceImage = 0x290; // UImage*
		constexpr auto SiegeImage = 0x298; // UImage*
		constexpr auto PierceText = 0x2a0; // UTextBlock*
		constexpr auto SiegeText = 0x2a8; // UTextBlock*
		constexpr auto SlotBg = 0x2b0; // UImage*
		constexpr auto SlotBg2 = 0x2b8; // UImage*
		constexpr auto SlotBg3 = 0x2c0; // UImage*
		constexpr auto SlotBg4 = 0x2c8; // UImage*
		constexpr auto ProtectEVPanel = 0x2d0; // UCanvasPanel*
		constexpr auto ProtectEVPanel1 = 0x2d8; // UCanvasPanel*
		constexpr auto ProtectHotText = 0x2e0; // UTextBlock*
		constexpr auto ProtectColdText = 0x2e8; // UTextBlock*
		constexpr auto ProtectPoisonText = 0x2f0; // UTextBlock*
		constexpr auto ItemBg = 0x2f8; // UImage*
		constexpr auto ItemIcon = 0x300; // UImage*
		constexpr auto AttackImage = 0x308; // FSlateBrush [0x4]
		constexpr auto DefenceImage = 0x528; // FSlateBrush [0x4]
		constexpr auto AttackBg = 0x748; // FSlateBrush
		constexpr auto DefenceBg = 0x7d0; // FSlateBrush
		constexpr auto NoneBg = 0x858; // FSlateBrush
		constexpr auto BindItem = 0x8e0; // TWeakObjectPtr<USGItem>
		constexpr auto BindCharacter = 0x8e8; // TWeakObjectPtr<ASGCharacter>
		constexpr auto NoneArmorText = 0x8f0; // FText
		constexpr auto SlotIndex = 0x908; // int32_t
	}

	namespace n_AFishingRod {
		constexpr auto CableComponent = 0x7ab0; // UCableComponent*
		constexpr auto HookRootComponent = 0x7ab8; // UStaticMeshComponent*
		constexpr auto HookComponent = 0x7ac0; // UStaticMeshComponent*
		constexpr auto HandlePointComponent = 0x7ac8; // USceneComponent*
		constexpr auto CastLineComponent = 0x7ad0; // USplineComponent*
		constexpr auto HookPointComponent = 0x7ad8; // USceneComponent*
		constexpr auto FishingPodState = 0x7ae0; // EFishingPodState
		constexpr auto ConsumedDurableEveryCast = 0x7af0; // int32_t
		constexpr auto CastWaterDepth = 0x7af4; // float
		constexpr auto CastMinTime = 0x7af8; // float
		constexpr auto CastMaxTime = 0x7afc; // float
		constexpr auto CastMinDist = 0x7b00; // float
		constexpr auto CastMaxDist = 0x7b04; // float
		constexpr auto CastTargetLocation = 0x7b08; // FVector
		constexpr auto CastSpeed = 0x7b14; // float
		constexpr auto CharacterMoveDistToReel = 0x7b24; // float
		constexpr auto CharacterMoveYawToReel = 0x7b28; // float
		constexpr auto ConsumedBaitType = 0x7b30; // USGItem*
		constexpr auto ReelSpeedRatio = 0x7b3c; // float
		constexpr auto ReelWaitTotalTime = 0x7b44; // float
		constexpr auto WaitFishParamA = 0x7b58; // float
		constexpr auto WaitFishParamB = 0x7b5c; // float
		constexpr auto ResourceParam = 0x7b60; // float
		constexpr auto bUsingResourceParamForTest = 0x7b64; // char : 1
		constexpr auto FishStruggleMinTime = 0x7b68; // float
		constexpr auto FishStruggleMaxTime = 0x7b6c; // float
		constexpr auto CatchFishRatio = 0x7b70; // float
		constexpr auto BobRandomRange = 0x7b7c; // float
		constexpr auto NoFishReelingMontageRate = 0x7b88; // float
		constexpr auto CableRatio = 0x7b8c; // float
		constexpr auto ReelCableRatio = 0x7b90; // float
		constexpr auto BobActorClass = 0x7b98; // AStaticMeshFloatingActor*
		constexpr auto RestBobVelocityZ = 0x7ba8; // float
		constexpr auto CatchFishSocket = 0x7bb8; // FName
		constexpr auto FishEatingSound = 0x7bc0; // USoundBase*
		constexpr auto AudioComponent = 0x7bc8; // TWeakObjectPtr<USGAudioComponent>
	}

	namespace n_UAlignObjectsTool {
		constexpr auto AlignProps = 0x98; // UAlignObjectsToolProperties*
	}

	namespace n_ULogicReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0x270; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_UFieldSystemMetaDataIteration {
		constexpr auto Iterations = 0xc0; // int32_t
	}

	namespace n_USourceEffectBitCrusherPreset {
		constexpr auto Settings = 0xc0; // FSourceEffectBitCrusherSettings
	}

	namespace n_UToFloatField {
		constexpr auto IntField = 0xc0; // UFieldNodeInt*
	}

	namespace n_UAbilitySystemGlobals {
		constexpr auto AbilitySystemGlobalsClassName = 0x28; // FSoftClassPath
		constexpr auto ActivateFailIsDeadTag = 0x68; // FGameplayTag
		constexpr auto ActivateFailIsDeadName = 0x70; // FName
		constexpr auto ActivateFailCooldownTag = 0x78; // FGameplayTag
		constexpr auto ActivateFailCooldownName = 0x80; // FName
		constexpr auto ActivateFailCostTag = 0x88; // FGameplayTag
		constexpr auto ActivateFailCostName = 0x90; // FName
		constexpr auto ActivateFailTagsBlockedTag = 0x98; // FGameplayTag
		constexpr auto ActivateFailTagsBlockedName = 0xa0; // FName
		constexpr auto ActivateFailTagsMissingTag = 0xa8; // FGameplayTag
		constexpr auto ActivateFailTagsMissingName = 0xb0; // FName
		constexpr auto ActivateFailNetworkingTag = 0xb8; // FGameplayTag
		constexpr auto ActivateFailNetworkingName = 0xc0; // FName
		constexpr auto MinimalReplicationTagCountBits = 0xc8; // int32_t
		constexpr auto TargetDataStructCache = 0xd0; // FNetSerializeScriptStructCache
		constexpr auto bAllowGameplayModEvaluationChannels = 0xe0; // bool
		constexpr auto DefaultGameplayModEvaluationChannel = 0xe1; // EGameplayModEvaluationChannel
		constexpr auto GameplayModEvaluationChannelAliases = 0xe4; // FName [0xa]
		constexpr auto GlobalCurveTableName = 0x138; // FSoftObjectPath
		constexpr auto GlobalCurveTable = 0x150; // UCurveTable*
		constexpr auto GlobalAttributeMetaDataTableName = 0x158; // FSoftObjectPath
		constexpr auto GlobalAttributeMetaDataTable = 0x170; // UDataTable*
		constexpr auto GlobalAttributeSetDefaultsTableName = 0x178; // FSoftObjectPath
		constexpr auto GlobalAttributeSetDefaultsTableNames = 0x190; // TArray<FSoftObjectPath>
		constexpr auto GlobalAttributeDefaultsTables = 0x1a0; // TArray<UCurveTable*>
		constexpr auto GlobalGameplayCueManagerClass = 0x1b0; // FSoftObjectPath
		constexpr auto GlobalGameplayCueManagerName = 0x1c8; // FSoftObjectPath
		constexpr auto GameplayCueNotifyPaths = 0x1e0; // TArray<FString>
		constexpr auto GameplayTagResponseTableName = 0x1f0; // FSoftObjectPath
		constexpr auto GameplayTagResponseTable = 0x208; // UGameplayTagReponseTable*
		constexpr auto PredictTargetGameplayEffects = 0x210; // bool
		constexpr auto GlobalGameplayCueManager = 0x218; // UGameplayCueManager*
	}

	namespace n_APaperSpriteActor {
		constexpr auto RenderComponent = 0x310; // UPaperSpriteComponent*
	}

	namespace n_UMaterialExpressionRotateAboutAxis {
		constexpr auto NormalizedRotationAxis = 0x40; // FExpressionInput
		constexpr auto RotationAngle = 0x54; // FExpressionInput
		constexpr auto PivotPoint = 0x68; // FExpressionInput
		constexpr auto position = 0x7c; // FExpressionInput
		constexpr auto Period = 0x90; // float
	}

	namespace n_UUI_GuideSkillMastery {
		constexpr auto ImageTwinkleCircular = 0x2d8; // UImage*
	}

	namespace n_UBTService {
		constexpr auto Interval = 0x60; // float
		constexpr auto RandomDeviation = 0x64; // float
		constexpr auto bCallTickOnSearchStart = 0x68; // char : 1
		constexpr auto bRestartTimerOnEachActivation = 0x68; // char : 1
	}

	namespace n_UParticleModuleAccelerationOverLifetime {
		constexpr auto AccelOverLife = 0x38; // FRawDistributionVector
	}

	namespace n_UPerkPanel {
		constexpr auto PerkRowNames = 0x260; // TArray<FName>
		constexpr auto PerkRowClass = 0x270; // UPerkRow*
		constexpr auto RadioButtonViewList = 0x278; // TArray<FName>
	}

	namespace n_UGenlockedTimecodeProvider {
		constexpr auto bUseGenlockToCount = 0x30; // bool
	}

	namespace n_UAchievementWriteCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UAbilityTask_Repeat {
		constexpr auto OnPerformAction = 0x80; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneMediaPlayerPropertySection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLoop = 0xf0; // bool
	}

	namespace n_UAISense_Team {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAITeamStimulusEvent>
	}

	namespace n_UBoxComponent {
		constexpr auto BoxExtent = 0x4a0; // FVector
		constexpr auto LineThickness = 0x4ac; // float
	}

	namespace n_UMeshStatisticsProperties {
		constexpr auto Mesh = 0x60; // FString
		constexpr auto UV = 0x70; // FString
		constexpr auto Attributes = 0x80; // FString
	}

	namespace n_UN_RemoteCraftStatusPanel {
		constexpr auto ToggleActiveButton = 0x260; // UButton*
		constexpr auto ToggleActiveLabel = 0x268; // UTextBlock*
		constexpr auto RemoteActor = 0x278; // TWeakObjectPtr<ASGGamePlayActor>
		constexpr auto BindInventoryComponent = 0x280; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_UTireType {
		constexpr auto FrictionScale = 0x30; // float
	}

	namespace n_UUserWidget {
		constexpr auto ColorAndOpacity = 0x110; // FLinearColor
		constexpr auto ColorAndOpacityDelegate = 0x120; // FDelegate
		constexpr auto ForegroundColor = 0x130; // FSlateColor
		constexpr auto ForegroundColorDelegate = 0x158; // FDelegate
		constexpr auto OnVisibilityChanged = 0x168; // FMulticastInlineDelegate
		constexpr auto Padding = 0x190; // FMargin
		constexpr auto ActiveSequencePlayers = 0x1a0; // TArray<UUMGSequencePlayer*>
		constexpr auto AnimationTickManager = 0x1b0; // UUMGSequenceTickManager*
		constexpr auto StoppedSequencePlayers = 0x1b8; // TArray<UUMGSequencePlayer*>
		constexpr auto NamedSlotBindings = 0x1c8; // TArray<FNamedSlotBinding>
		constexpr auto WidgetTree = 0x1d8; // UWidgetTree*
		constexpr auto Priority = 0x1e0; // int32_t
		constexpr auto bSupportsKeyboardFocus = 0x1e4; // char : 1
		constexpr auto bIsFocusable = 0x1e4; // char : 1
		constexpr auto bStopAction = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedTick = 0x1e4; // char : 1
		constexpr auto bHasScriptImplementedPaint = 0x1e4; // char : 1
		constexpr auto TickFrequency = 0x1f0; // EWidgetTickFrequency
		constexpr auto InputComponent = 0x1f8; // UInputComponent*
		constexpr auto AnimationCallbacks = 0x200; // TArray<FAnimationEventBinding>
	}

	namespace n_USGGameDataAllQuest {
		constexpr auto GuideQuestTable = 0x28; // UDataTable*
		constexpr auto GuildQuestTable = 0x30; // UDataTable*
		constexpr auto ActivityQuestTable = 0x38; // UDataTable*
		constexpr auto SeasonQuestTable = 0x40; // UDataTable*
		constexpr auto SeasonWeekQuestTable = 0x48; // UDataTable*
		constexpr auto QuestGroups = 0x50; // TMap<int32_t, FQuestList>
		constexpr auto QuestTextTable = 0xa0; // UDataTable*
		constexpr auto QuestStateText = 0xa8; // FText [0x3]
		constexpr auto QuestObjectText = 0xf0; // FText [0x41]
		constexpr auto QuestRewardText = 0x708; // FText [0xb]
		constexpr auto QuestNofityText = 0x810; // FText [0x2]
		constexpr auto MaxShowTraceNum = 0x840; // int32_t
	}

	namespace n_UPhononSourceComponent {
		constexpr auto BakingRadius = 0x208; // float
		constexpr auto UniqueIdentifier = 0x20c; // FName
	}

	namespace n_USoundNodeDelay {
		constexpr auto DelayMin = 0x48; // float
		constexpr auto DelayMax = 0x4c; // float
	}

	namespace n_UAnimSequenceBase {
		constexpr auto Notifies = 0x80; // TArray<FAnimNotifyEvent>
		constexpr auto SequenceLength = 0x90; // float
		constexpr auto RateScale = 0x94; // float
		constexpr auto RawCurveData = 0x98; // FRawCurveTracks
	}

	namespace n_UARPointComponent {
		constexpr auto ReplicatedPayload = 0x288; // FARPointUpdatePayload
	}

	namespace n_UAssetManager {
		constexpr auto ObjectReferenceList = 0x2c0; // TArray<UObject*>
		constexpr auto bIsGlobalAsyncScanEnvironment = 0x2d0; // bool
		constexpr auto bShouldGuessTypeAndName = 0x2d1; // bool
		constexpr auto bShouldUseSynchronousLoad = 0x2d2; // bool
		constexpr auto bIsLoadingFromPakFiles = 0x2d3; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x2d4; // bool
		constexpr auto bOnlyCookProductionAssets = 0x2d5; // bool
		constexpr auto bIsBulkScanning = 0x2d6; // bool
		constexpr auto bIsPrimaryAssetDirectoryCurrent = 0x2d7; // bool
		constexpr auto bIsManagementDatabaseCurrent = 0x2d8; // bool
		constexpr auto bUpdateManagementDatabaseAfterScan = 0x2d9; // bool
		constexpr auto bIncludeOnlyOnDiskAssets = 0x2da; // bool
		constexpr auto bHasCompletedInitialScan = 0x2db; // bool
		constexpr auto NumberOfSpawnedNotifications = 0x2dc; // int32_t
	}

	namespace n_ASGStructureItemBaoZangBox {
		constexpr auto SphereRadiusComponent = 0xd68; // UStaticMeshComponent*
		constexpr auto BaoZangType = 0xd70; // EBaoZangType
		constexpr auto DeathDropItemConfig = 0xd78; // TArray<FDeathDropItemConfig>
		constexpr auto RefreshTime = 0xd88; // int32_t
		constexpr auto BaoZangPositionIndex = 0xd8c; // int32_t
		constexpr auto SoftClassPathKeyItem = 0xd90; // FSoftClassPath
		constexpr auto CanOpenAngle = 0xda8; // float
		constexpr auto NpcSpawnInfoFunctionId = 0xdac; // int32_t
		constexpr auto NpcForceRefreshTime = 0xdb0; // float
		constexpr auto FuBenStartPlayerStartFunctionId = 0xdb4; // int32_t
		constexpr auto FuBenEndPlayerStartFunctionId = 0xdb8; // int32_t
		constexpr auto FuBenVolumeId = 0xdbc; // int32_t
		constexpr auto FuBenTotalTime = 0xdc0; // float
		constexpr auto FuBenLeaveTimeAfterKilledAll = 0xdc4; // float
		constexpr auto FuBenStartTeleportTimeTicker = 0xdc8; // float
		constexpr auto FuBenTeleportPlayerMaxNum = 0xdcc; // float
		constexpr auto OpenedStaticMesh = 0xdd0; // UStaticMesh*
		constexpr auto OpenedEmptyStaticMesh = 0xdd8; // UStaticMesh*
		constexpr auto UnOpenedStaticMesh = 0xde0; // UStaticMesh*
		constexpr auto bOpened = 0xde8; // char : 1
		constexpr auto bIsEmptyBox = 0xde8; // char : 1
		constexpr auto bIsCoolDown = 0xde8; // char : 1
		constexpr auto RefreshTimeTick = 0xdf0; // int64_t
		constexpr auto bShowFuBenTeleportRadius = 0xdf8; // char : 1
		constexpr auto LeftTeleportTime = 0xdfc; // float
	}

	namespace n_UUI_GuildBeInviteList {
		constexpr auto BeInviteListPanel = 0x2d8; // UScrollBox*
		constexpr auto PrePageDataButton = 0x2e0; // UDataButton*
		constexpr auto NextPageDataButton = 0x2e8; // UDataButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto ExitButton = 0x2f8; // UButton*
		constexpr auto InviteSwitchCheckBox = 0x300; // UCheckBox*
		constexpr auto AllianceNameTitleSlot = 0x308; // USortableTitleSlot*
		constexpr auto PlayerNameTitleSlot = 0x310; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x318; // USortableTitleSlot*
		constexpr auto ApplyNumPerPage = 0x320; // int32_t
		constexpr auto GuildBeInviteSlotClass = 0x328; // UGuildBeInviteSlot*
	}

	namespace n_UWBP_ProducerName_5_C {
		constexpr auto WBP_ProducerSlot = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_3 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_5 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_6 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_7 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_9 = 0x298; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_10 = 0x2a0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_11 = 0x2a8; // UWBP_ProducerSlot_C*
	}

	namespace n_UNiagaraDataInterfaceGrid3DCollection {
		constexpr auto NumAttributes = 0x100; // int32_t
		constexpr auto RenderTargetUserParameter = 0x108; // FNiagaraUserParameterBinding
		constexpr auto BufferFormat = 0x128; // ENiagaraGpuBufferFormat
	}

	namespace n_UN_GeneralCampSlot {
		constexpr auto ImgIconBorder = 0x260; // UImage*
		constexpr auto ImgIcon = 0x268; // UImage*
		constexpr auto StatusIcon = 0x270; // UImage*
		constexpr auto DesText = 0x278; // UTextBlock*
		constexpr auto DesImage = 0x280; // UImage*
		constexpr auto DesPanel = 0x288; // UCanvasPanel*
		constexpr auto NormalPanel = 0x290; // UCanvasPanel*
		constexpr auto OutBorder = 0x298; // UBorder*
		constexpr auto CampSlotBg = 0x2a0; // UImage*
		constexpr auto PendingImage = 0x2a8; // UImage*
		constexpr auto WageButton = 0x2b0; // UButton*
		constexpr auto bShouldHidePendingImage = 0x2b8; // bool
		constexpr auto bShouldHideWageButton = 0x2b9; // bool
		constexpr auto WarTypeDesText = 0x2c0; // FText
		constexpr auto WorkTypeDesText = 0x2d8; // FText
		constexpr auto RestTypeDesText = 0x2f0; // FText
		constexpr auto bIsDesSlot = 0x308; // char : 1
		constexpr auto WarType = 0x309; // EWarType
		constexpr auto WarDesImageTexture2D = 0x310; // TSoftObjectPtr<UTexture2D>
		constexpr auto WorkDesImageTexture2D = 0x338; // TSoftObjectPtr<UTexture2D>
		constexpr auto RestDesImageTexture2D = 0x360; // TSoftObjectPtr<UTexture2D>
		constexpr auto BindGeneralChar = 0x388; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto BindGeneralChunkData = 0x390; // FBaseGeneralChunkData
		constexpr auto OutBorder_SelectTexture2D = 0x478; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorder_HoverTexture2D = 0x4a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorder_NormalTexture2D = 0x4c8; // TSoftObjectPtr<UTexture2D>
		constexpr auto OnGeneralCampSlotPressed = 0x4f0; // FMulticastInlineDelegate
		constexpr auto OnGeneralCampSlotReleased = 0x500; // FMulticastInlineDelegate
		constexpr auto OnGeneralCampSlotPressedWage = 0x510; // FMulticastInlineDelegate
		constexpr auto CanGiveWagesImage = 0x520; // FButtonStyle
		constexpr auto CantGiveWagesImage = 0x798; // FButtonStyle
		constexpr auto IsHover = 0xa10; // char : 1
		constexpr auto bPressed = 0xa10; // char : 1
		constexpr auto WarTypeStatusTexture2D = 0xa18; // TSoftObjectPtr<UTexture2D> [0xd]
		constexpr auto DBTypeStatusTexture2D = 0xc20; // TSoftObjectPtr<UTexture2D>
		constexpr auto GuildStoreTypeStatusTexture2D = 0xc48; // TSoftObjectPtr<UTexture2D>
		constexpr auto WorkTypeStatusTexture2D = 0xc70; // TSoftObjectPtr<UTexture2D>
		constexpr auto DeathTypeStatusTexture2D = 0xc98; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReborningTypeStatusTexture2D = 0xcc0; // TSoftObjectPtr<UTexture2D>
		constexpr auto RestTypeStatusTexture2D = 0xce8; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnKnownGeneralTexture2D = 0xd10; // TSoftObjectPtr<UTexture2D>
		constexpr auto QualityBg = 0xd38; // UImage*
		constexpr auto QualityTexture = 0xd40; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto GeneralBorder = 0xe30; // TSoftObjectPtr<UTexture2D> [0x4]
	}

	namespace n_UAnimCurveCompressionSettings {
		constexpr auto Codec = 0x28; // UAnimCurveCompressionCodec*
	}

	namespace n_UPlayMontageCallbackProxy {
		constexpr auto OnCompleted = 0x28; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnNotifyBegin = 0x58; // FMulticastInlineDelegate
		constexpr auto OnNotifyEnd = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionTangentOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMaterialExpressionArcsine {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_USoundClass {
		constexpr auto Properties = 0x28; // FSoundClassProperties
		constexpr auto ChildClasses = 0xa8; // TArray<USoundClass*>
		constexpr auto PassiveSoundMixModifiers = 0xb8; // TArray<FPassiveSoundMixModifier>
		constexpr auto ParentClass = 0xc8; // USoundClass*
	}

	namespace n_UKawaiiPhysicsLimitsDataAsset {
		constexpr auto SphericalLimits = 0x30; // TArray<FSphericalLimit>
		constexpr auto CapsuleLimits = 0x40; // TArray<FCapsuleLimit>
		constexpr auto PlanarLimits = 0x50; // TArray<FPlanarLimit>
	}

	namespace n_UMaterialExpressionSceneTexture {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto SceneTextureId = 0x54; // ESceneTextureId
		constexpr auto bFiltered = 0x55; // bool
	}

	namespace n_UWBP_SystemSettingTips_C {
		constexpr auto ImgBack = 0x290; // UImage*
	}

	namespace n_UNiagaraDataInterfaceArrayFloat3 {
		constexpr auto FloatData = 0x50; // TArray<FVector>
	}

	namespace n_UUI_ChatReportBtn {
		constexpr auto ExtraButton = 0x260; // UButton*
	}

	namespace n_UN_RemoteCraftInventorySlotPanel {
		constexpr auto ParentUI = 0x260; // UN_RemoteCraftInventoryPanel*
		constexpr auto InventoryGrid = 0x268; // UUniformGridPanel*
	}

	namespace n_UUI_Notification {
		constexpr auto NotificationTemplate = 0x2d8; // UNotificationSlot*
		constexpr auto LeftNotifyPanel = 0x310; // UVerticalBox*
		constexpr auto UpNotifyPanel = 0x318; // UVerticalBox*
		constexpr auto RightNotifyPanel = 0x320; // UVerticalBox*
		constexpr auto BottomNotifyPanel = 0x328; // UVerticalBox*
		constexpr auto SystemNotifySlot = 0x330; // UUI_SystemNotify*
		constexpr auto SystemNotifyPopupSlot = 0x338; // UUI_SystemNotifyPopup*
		constexpr auto LeftString = 0x350; // FString
		constexpr auto RightString = 0x360; // FString
		constexpr auto LeftTextColor = 0x370; // FSlateColor
		constexpr auto DefaultRightStringDataTable = 0x398; // UDataTable*
		constexpr auto TipsTextDataTable = 0x3a0; // UDataTable*
		constexpr auto SkillText = 0x3a8; // FText [0x33]
		constexpr auto NotificationFightTemplate = 0x870; // UNotificationFightSlot*
		constexpr auto FightDisplayTime = 0x878; // float
		constexpr auto KillTexture = 0x880; // TSoftObjectPtr<UTexture2D>
		constexpr auto DamageHeadTex = 0x8a8; // TSoftObjectPtr<UTexture2D>
		constexpr auto StunTex = 0x8d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DamageTexture = 0x8f8; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto DamageHeadColor = 0x998; // FLinearColor
		constexpr auto DamageYellowColor = 0x9a8; // FLinearColor
		constexpr auto BattleUpNotifyPos = 0x9b8; // FVector2D
		constexpr auto NotificationTaxTemplate = 0xa00; // UNotificationTaxSlot*
		constexpr auto TaxDisplayTime = 0xa08; // float
		constexpr auto XianLingTex = 0xa10; // TSoftObjectPtr<UTexture2D>
		constexpr auto TaiShouTex = 0xa38; // TSoftObjectPtr<UTexture2D>
		constexpr auto CiShiTex = 0xa60; // TSoftObjectPtr<UTexture2D>
		constexpr auto GuildMatIns = 0xa88; // TSoftObjectPtr<UMaterialInstance>
	}

	namespace n_UClothPhysicalMeshDataNv_Legacy {
		constexpr auto MaxDistances = 0xe0; // TArray<float>
		constexpr auto BackstopDistances = 0xf0; // TArray<float>
		constexpr auto BackstopRadiuses = 0x100; // TArray<float>
		constexpr auto AnimDriveMultipliers = 0x110; // TArray<float>
	}

	namespace n_ANatureEnvironmentVolume {
		constexpr auto NatureController = 0x348; // TWeakObjectPtr<ANatureController>
		constexpr auto Priority = 0x350; // int32_t
		constexpr auto VolumeType = 0x354; // EEnvironmentVolumeType
		constexpr auto ReduceResistance = 0x358; // float
	}

	namespace n_UParticleModuleSubUVMovie {
		constexpr auto bUseEmitterTime = 0x70; // char : 1
		constexpr auto FrameRate = 0x78; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xa8; // int32_t
	}

	namespace n_UUI_MailDetails {
		constexpr auto ContentTitle = 0x260; // UTextBlock*
		constexpr auto ContentCreateTimeText = 0x268; // UTextBlock*
		constexpr auto ValidityDateText = 0x270; // UTextBlock*
		constexpr auto ContentRichText = 0x278; // URichTextBlock*
		constexpr auto AttachText = 0x280; // UTextBlock*
		constexpr auto AttachGridPanel = 0x288; // UUniformGridPanel*
		constexpr auto Btn_Attach = 0x290; // UButton*
		constexpr auto Btn_Del = 0x298; // UButton*
		constexpr auto SlotClass = 0x2a0; // UN_InventorySlot*
		constexpr auto AppearanceSlotClass = 0x2a8; // UN_AppearanceSlot*
		constexpr auto AttachSlotList = 0x2b8; // TArray<UN_InventorySlot*>
		constexpr auto AttachItems = 0x2c8; // TArray<USGItem*>
		constexpr auto RootSGUI = 0x2d8; // USGUI*
		constexpr auto BindInventoryComponent = 0x2e0; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_UUI_AnimationNotify {
		constexpr auto AnimationNotifyWidgetTemplate = 0x2d8; // FAnimationNotifyConfig [0x4]
		constexpr auto TaskList = 0x318; // TArray<FAnimationNotifyTask>
		constexpr auto AnimationNotifyOverlay = 0x338; // UOverlay*
	}

	namespace n_UARTrackedPose {
		constexpr auto TrackedPose = 0xf8; // FARPose3D
	}

	namespace n_UBaseCreateFromSelectedTool {
		constexpr auto TransformProperties = 0x98; // UTransformInputsToolProperties*
		constexpr auto HandleSourcesProperties = 0xa0; // UBaseCreateFromSelectedHandleSourceProperties*
		constexpr auto Preview = 0xa8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto TransformProxies = 0xb0; // TArray<UTransformProxy*>
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformInitialScales = 0xd0; // TArray<FVector>
	}

	namespace n_UDrawFrustumComponent {
		constexpr auto FrustumColor = 0x488; // FColor
		constexpr auto FrustumAngle = 0x48c; // float
		constexpr auto FrustumAspectRatio = 0x490; // float
		constexpr auto FrustumStartDist = 0x494; // float
		constexpr auto FrustumEndDist = 0x498; // float
		constexpr auto Texture = 0x4a0; // UTexture*
	}

	namespace n_UMaterialExpressionHairColor {
		constexpr auto Melanin = 0x40; // FExpressionInput
		constexpr auto Redness = 0x54; // FExpressionInput
		constexpr auto DyeColor = 0x68; // FExpressionInput
	}

	namespace n_UPlatformInterfaceWebResponse {
		constexpr auto OriginalURL = 0x28; // FString
		constexpr auto ResponseCode = 0x38; // int32_t
		constexpr auto Tag = 0x3c; // int32_t
		constexpr auto StringResponse = 0x40; // FString
		constexpr auto BinaryResponse = 0x50; // TArray<char>
	}

	namespace n_USculptMaxBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto MaxHeight = 0x68; // float
		constexpr auto bUseFixedHeight = 0x6c; // bool
		constexpr auto FixedHeight = 0x70; // float
	}

	namespace n_USGGameInstance {
		constexpr auto SceneObjectsManager = 0x258; // USceneObjectsManager*
		constexpr auto ClientOnlineLobbySession = 0x338; // UOnlineLobbySession*
		constexpr auto bFirstPreLoadMap = 0x340; // char : 1
	}

	namespace n_UActorChannel {
		constexpr auto Actor = 0x70; // AActor*
		constexpr auto CreateSubObjects = 0x160; // TArray<UObject*>
	}

	namespace n_UUI_AdminSubPanelSelfItem {
		constexpr auto AdminItemPanel = 0x2d8; // UUI_AdminItemPanel*
	}

	namespace n_UMaterialExpressionShaderStageSwitch {
		constexpr auto PixelShader = 0x40; // FExpressionInput
		constexpr auto VertexShader = 0x54; // FExpressionInput
	}

	namespace n_UParticleModuleAcceleration {
		constexpr auto Acceleration = 0x38; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x80; // char : 1
	}

	namespace n_ASGStructureBanner {
		constexpr auto MyBannerRootComponent = 0xb98; // USceneComponent*
		constexpr auto SkeletalMesh = 0xba0; // USkeletalMeshComponent*
		constexpr auto BannerLength = 0xba8; // float
		constexpr auto BannerUpSpeed = 0xbac; // float
		constexpr auto BannerDownSpeed = 0xbb0; // float
		constexpr auto EffectPrestigePercent = 0xbb4; // float
		constexpr auto AfterFinishToDestoryTime = 0xbb8; // int32_t
		constexpr auto bSwitching = 0xbbc; // char : 1
		constexpr auto BannerSwitchState = 0xbbd; // int8_t
		constexpr auto ClientBannerSwitchState = 0xbbe; // int8_t
		constexpr auto bInitLoc = 0xbbf; // char : 1
		constexpr auto CurrentLocZ = 0xbc0; // float
		constexpr auto BannerDefaultRelativeLoc = 0xbc4; // FVector
		constexpr auto bFinished = 0xbd0; // char : 1
		constexpr auto CharacterInBannerArea = 0xbd8; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto MoveSecond = 0xbe8; // float
		constexpr auto LifeTime = 0xbf0; // double
		constexpr auto PlayerBannerWeiWangMulAdd = 0xbf8; // float
	}

	namespace n_UAnimCompress {
		constexpr auto bNeedsSkeleton = 0x38; // char : 1
		constexpr auto TranslationCompressionFormat = 0x3c; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x3d; // AnimationCompressionFormat
		constexpr auto ScaleCompressionFormat = 0x3e; // AnimationCompressionFormat
	}

	namespace n_UUI_GuildShop {
		constexpr auto InventoryGrid = 0x2d8; // UUniformGridPanel*
		constexpr auto BuyButton = 0x2e0; // UButton*
		constexpr auto DecNumDataButton = 0x2e8; // UDataButton*
		constexpr auto AddNumDataButton = 0x2f0; // UDataButton*
		constexpr auto SearchEditableText = 0x2f8; // UEditableText*
		constexpr auto ComboSort = 0x300; // UGuildAuthorityComboBox*
		constexpr auto BuyNumSlider = 0x308; // USlider*
		constexpr auto BuyNumText = 0x310; // UTextBlock*
		constexpr auto GuildLevelText = 0x318; // UTextBlock*
		constexpr auto PlayerLevelText = 0x320; // UTextBlock*
		constexpr auto GongXunText = 0x328; // UTextBlock*
		constexpr auto NeedGuildLevelText = 0x330; // UTextBlock*
		constexpr auto NeedPlayerLevelText = 0x338; // UTextBlock*
		constexpr auto NeedGongXunText = 0x340; // UTextBlock*
		constexpr auto ToolTipsPanel = 0x348; // UCanvasPanel*
		constexpr auto ItemTypeComboBox = 0x350; // UComboBoxString*
		constexpr auto ItemSubTypeComboBox = 0x358; // UComboBoxString*
		constexpr auto RefreshTimeTextBlock = 0x360; // UTextBlock*
		constexpr auto DetailPanel = 0x368; // UCanvasPanel*
		constexpr auto CountsPerRow = 0x370; // int32_t
		constexpr auto InventorySlotClass = 0x378; // UN_InventorySlot*
		constexpr auto ItemsMap = 0x3d0; // TMap<USGItem*, USGItem*>
		constexpr auto PressedSlot = 0x420; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto SGToolTipWidget = 0x428; // TWeakObjectPtr<USGToolTipWidget>
	}

	namespace n_UUI_PlayerShowSetting {
		constexpr auto MenuHead = 0x2d8; // UUI_MenuHead*
		constexpr auto EquipPanel = 0x2e0; // UN_EquipPanel*
		constexpr auto SettingSlot_1 = 0x2e8; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_2 = 0x2f0; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_3 = 0x2f8; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_4 = 0x300; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_5 = 0x308; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_6 = 0x310; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_7 = 0x318; // UUI_PlayerShowSlot*
		constexpr auto SettingSlot_8 = 0x320; // UUI_PlayerShowSlot*
		constexpr auto AllPlayerShowGrid = 0x328; // UUniformGridPanel*
		constexpr auto SlotTemplate = 0x330; // UUI_PlayerShowSlot*
		constexpr auto CountsPerRow = 0x338; // int32_t
		constexpr auto DefaultShowNum = 0x33c; // int32_t
		constexpr auto ShowRow = 0x340; // int32_t
		constexpr auto LastSlotIndex = 0x344; // int32_t
		constexpr auto SlotList = 0x348; // TArray<UUI_PlayerShowSlot*>
	}

	namespace n_UBTDecorator_SetTagCooldown {
		constexpr auto CooldownTag = 0x68; // FGameplayTag
		constexpr auto CooldownDuration = 0x70; // float
		constexpr auto bAddToExistingDuration = 0x74; // bool
	}

	namespace n_UAbilityTask_WaitVelocityChange {
		constexpr auto OnVelocityChage = 0x80; // FMulticastInlineDelegate
		constexpr auto CachedMovementComponent = 0x90; // UMovementComponent*
	}

	namespace n_UBaseBrushTool {
		constexpr auto BrushProperties = 0xc0; // UBrushBaseProperties*
		constexpr auto bInBrushStroke = 0xc8; // bool
		constexpr auto WorldToLocalScale = 0xcc; // float
		constexpr auto LastBrushStamp = 0xd0; // FBrushStampData
		constexpr auto PropertyClass = 0x190; // TSoftClassPtr<UObject>
		constexpr auto BrushStampIndicator = 0x1b8; // UBrushStampIndicator*
	}

	namespace n_ASGHUD {
		constexpr auto bHoldInteractive = 0x408; // char : 1
		constexpr auto bEnableGMDebug = 0x408; // char : 1
		constexpr auto UISettingsDataTable = 0x410; // UDataTable*
		constexpr auto N_InventoryUI = 0x418; // UUI_N_Inventory*
		constexpr auto QuickRemoteInventoryUI = 0x420; // UUI_QuickRemoteInventory*
		constexpr auto PerkUI = 0x428; // UUI_Perk*
		constexpr auto ArtofWarPanel = 0x430; // UUIArtofWarPanel*
		constexpr auto NN_CraftPerkUI = 0x438; // UUI_NN_CraftPerk*
		constexpr auto ActivityUI = 0x440; // UUI_Activity*
		constexpr auto NPCInfoUI = 0x448; // UUI_NPCInfo*
		constexpr auto StatisticsInfoUI = 0x450; // UUI_StatisticsInfo*
		constexpr auto MiniMapUI = 0x458; // UUI_MiniMap*
		constexpr auto MapListUI = 0x460; // UUI_MapList*
		constexpr auto CreateRoleUI = 0x468; // UUI_CreateRole*
		constexpr auto FaceliftUI = 0x470; // UUI_Facelift*
		constexpr auto SelectRoleUI = 0x478; // UUI_SelectRole*
		constexpr auto AltarUI = 0x480; // UUI_Altar*
		constexpr auto AnimalRestUI = 0x488; // UUI_AnimalRest*
		constexpr auto GameUI = 0x490; // UUI_Game*
		constexpr auto NotificationUI = 0x498; // UUI_Notification*
		constexpr auto AllFunctionUI = 0x4a0; // UUI_N_AllFunction*
		constexpr auto GuildUI = 0x4a8; // UUI_Guild*
		constexpr auto SetGuildAuthorityUI = 0x4b0; // UUI_SetGuildAuthority*
		constexpr auto SetGuildLanguageUI = 0x4b8; // UUI_SetGuildLanguage*
		constexpr auto GuildApplyListUI = 0x4c0; // UUI_GuildApplyList*
		constexpr auto AllianceApplyListUI = 0x4c8; // UUI_AllianceApplyList*
		constexpr auto GuildBeInviteListUI = 0x4d0; // UUI_GuildBeInviteList*
		constexpr auto GuildQuestUI = 0x4d8; // UUI_GuildQuest*
		constexpr auto GuildImageUI = 0x4e0; // UUI_GuildImage*
		constexpr auto GuildShopUI = 0x4e8; // UUI_GuildShop*
		constexpr auto ApplyGuildConfirm = 0x4f0; // UUI_ApplyGuildConfirm*
		constexpr auto CreateGuildConfirm = 0x4f8; // UUI_CreateGuildConfirm*
		constexpr auto GuildSilverStoreUI = 0x500; // UUI_GuildSilverStore*
		constexpr auto GuildSkillUI = 0x508; // UUI_N_GuildSkill*
		constexpr auto ZhanLingUI = 0x510; // UUI_ZhanLing*
		constexpr auto GuildKPIUI = 0x518; // UUI_GuildKPI*
		constexpr auto GuildKPILogUI = 0x520; // UUI_GuildKPILog*
		constexpr auto GuildTechUI = 0x528; // UUI_NN_CraftPerk*
		constexpr auto TransGuildActivityPointUI = 0x530; // UUI_TransGuildActivityPoint*
		constexpr auto TransGuildExpPointUI = 0x538; // UUI_TransGuildExpPoint*
		constexpr auto GuildGroupUI = 0x540; // UUI_GuildGroup*
		constexpr auto GuildAuctionHouseUI = 0x548; // UUI_GuildAuctionHouse*
		constexpr auto GuildStoreUI = 0x550; // UUI_GuildStore*
		constexpr auto AllianceRelationUI = 0x558; // UUI_AllianceRelation*
		constexpr auto TransAllianceOfficialUI = 0x560; // UUI_TransAllianceOfficial*
		constexpr auto InteractiveUI = 0x568; // UUI_InteractiveMenu*
		constexpr auto ReSpawnUI = 0x570; // UUI_ReSpawn*
		constexpr auto CrosshairsUI = 0x578; // UUI_Crosshairs*
		constexpr auto EscMenuUI = 0x580; // UUI_EscMenu*
		constexpr auto PasswordEntryUI = 0x588; // UUI_PasswordEntry*
		constexpr auto ChangeNameUI = 0x590; // UUI_ChangeName*
		constexpr auto BattleGroupUI = 0x598; // UUI_BattleGroup*
		constexpr auto XianChengBattleRelationShipUI = 0x5a0; // UUI_XianChengRelationShip*
		constexpr auto RideTamingUI = 0x5a8; // UUI_RideTaming*
		constexpr auto ServerAdminUI = 0x5b0; // UUI_ServerAdmin*
		constexpr auto SettingUI = 0x5b8; // UUI_Setting*
		constexpr auto PlayerShowSettingUI = 0x5c0; // UUI_PlayerShowSetting*
		constexpr auto MyOverlayHUD = 0x5c8; // USGHudOverlay*
		constexpr auto TransportMachineUI = 0x5d0; // UUI_TransportMachine*
		constexpr auto HuangLiUI = 0x5d8; // UUI_HuangLi*
		constexpr auto MsgRecordUI = 0x5e0; // UUI_MsgRecord*
		constexpr auto AchievementUI = 0x5e8; // UUI_Achievement*
		constexpr auto JueWeiUI = 0x5f0; // UUI_JueWei*
		constexpr auto GlobalMapUI = 0x5f8; // UUI_GlobalMap*
		constexpr auto DomainUI = 0x600; // UUI_Domain*
		constexpr auto Teleport3DUI = 0x608; // UUI_Teleport3D*
		constexpr auto BenchmarkScalabilityUI = 0x610; // UUI_BenchmarkScalability*
		constexpr auto OperationModeUI = 0x618; // UUI_OperationMode*
		constexpr auto SGGameRecordUI = 0x620; // UUI_SGGameRecord*
		constexpr auto ShopUI = 0x628; // UUI_N_Shop*
		constexpr auto ShopConfirmBuyUI = 0x630; // UUI_N_ShopConfirmBuy*
		constexpr auto BattleStatisticsUI = 0x638; // UUI_BattleStatistics*
		constexpr auto BattleAwardUI = 0x640; // UUI_BattleAward*
		constexpr auto JunGuanAiBattle_UI = 0x648; // UUI_JunGuanAiBattle*
		constexpr auto NPCTalkUI = 0x650; // UUI_NPCTalk*
		constexpr auto InteractiveSelected = 0x658; // USGToolTipWidget*
		constexpr auto StructureSelectType = 0x660; // USGToolTipWidget*
		constexpr auto SeasonUI = 0x668; // UUI_Season*
		constexpr auto AnimationNotifyUI = 0x670; // UUI_AnimationNotify*
		constexpr auto ModifyTextUI = 0x678; // UUI_ModifyText*
		constexpr auto DLSSDebugUI = 0x680; // UUI_DLSSDebug*
		constexpr auto NewsUI = 0x688; // UUI_News*
		constexpr auto MainMailUI = 0x690; // UUI_MainMail*
		constexpr auto IdentifiesUI = 0x698; // UUI_Identifies*
		constexpr auto StructureContainerLogUI = 0x6a0; // UUI_StructureContainerLog*
		constexpr auto StructureAIAttackLogUI = 0x6a8; // UUI_StructureAIAttackLog*
		constexpr auto AnimalFarmRecordUI = 0x6b0; // UUI_AnimalFarmRecord*
		constexpr auto TrafficGoodsUI = 0x6b8; // UUI_TrafficGoods*
		constexpr auto TrafficGoodsConfirmUI = 0x6c0; // UUI_TrafficGoodsConfirm*
		constexpr auto StructureHelpUI = 0x6c8; // UUI_StructureHelp*
		constexpr auto NoviceProtectionPanel = 0x6d0; // UUINoviceProtectionPanel*
		constexpr auto ReportChatUI = 0x6d8; // UUI_ReportChat*
		constexpr auto MiniMapPOIData = 0x6e0; // UMiniMapPOI* [0x13]
		constexpr auto MiniMapGroupTemplate = 0x778; // TArray<UMiniMapPOI_Group*>
		constexpr auto bEnableXianChengRelationShipUI = 0x788; // bool
		constexpr auto DisplayFont = 0x7b8; // UFont*
		constexpr auto UnSelectedImage = 0x7c0; // UTexture*
		constexpr auto ReplaceStructureImage = 0x7c8; // UTexture*
		constexpr auto ExplorationFoliageBuffTemplate = 0x7d0; // TMap<USGBuff*, FExploitTypes>
		constexpr auto ExplorationAnimalBuffTemplate = 0x820; // USGBuff*
		constexpr auto ExplorationOreImage = 0x828; // UTexture*
		constexpr auto ExplorationTreeImage = 0x830; // UTexture*
		constexpr auto ExplorationAnimalImage = 0x838; // UTexture*
		constexpr auto ExplorationImageSizeMax = 0x840; // float
		constexpr auto ExplorationImageSizeMin = 0x844; // float
		constexpr auto DistanceSizeRatio = 0x848; // float
		constexpr auto InteractiveSelectedToolTipWidget = 0x850; // USGToolTipWidget*
		constexpr auto StructureSelectTypeToolTipWidget = 0x858; // USGToolTipWidget*
		constexpr auto StructureSelectTypeQuestID = 0x860; // int32_t
		constexpr auto bShowHUDInfo = 0x864; // char : 1
		constexpr auto bShowPerkEntriesLine = 0x86c; // char : 1
		constexpr auto SnapShotBaseMaterial = 0x888; // UMaterialInterface*
		constexpr auto SnapShotArray = 0x890; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto SnapShotCurrent = 0x8a0; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto PreviewWorld = 0x8b8; // UWorld*
		constexpr auto CaptureComponent = 0x8c0; // USceneCaptureComponent2D*
		constexpr auto PreviewCharacterStruct = 0x8c8; // FPreviewCharacterStruct
		constexpr auto CachedTextureRenderTarget2D = 0x908; // TMap<UTextureRenderTarget2D*, TWeakObjectPtr<USceneCaptureComponent2D>>
		constexpr auto ShowLevelNameHUDCharacterList = 0x958; // TArray<ABaseCharacter*>
		constexpr auto ShowHUDWidgetComponent = 0x968; // TWeakObjectPtr<UWidgetComponent>
		constexpr auto ViewGeneralCharacter = 0x970; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto GuildEventUI = 0x978; // UUI_GuildEvent*
		constexpr auto WorldRankUI = 0x980; // UUI_WorldRank*
		constexpr auto ViewGeneralUI = 0x988; // UUI_ViewGeneral*
		constexpr auto TaxRevenuePanelUI = 0x990; // UTaxRevenuePanel*
		constexpr auto CountySeatAltarPanelUI = 0x998; // UUI_CountySeatAltarPanel*
		constexpr auto GuideSkillMasteryUI = 0x9a0; // UUI_GuideSkillMastery*
		constexpr auto FlagImageUI = 0x9a8; // UUI_FlagImage*
		constexpr auto CustomFlagUI = 0x9b0; // UUI_CustomFlag*
	}

	namespace n_ASGStructureTaiShouBasement {
		constexpr auto ShowHighKillEnemyLimit = 0x1298; // int32_t
		constexpr auto WinMoraleThreshold = 0x129c; // int32_t
		constexpr auto FlagSupplyOccupyScore = 0x12a0; // int32_t
		constexpr auto FlagWatchTowerOccupyScore = 0x12a4; // int32_t
		constexpr auto HighKillerKillsDownLimit = 0x12a8; // int32_t
		constexpr auto HighKillerDeadDownLimit = 0x12ac; // int32_t
		constexpr auto KillNPCScoreRatio = 0x12b0; // float
		constexpr auto PlayerRespawnProtectBuff = 0x12b8; // USGBuff*
		constexpr auto FlagSupplyArray = 0x12c0; // TArray<ASGStructureOccupyFlag*>
		constexpr auto FlagWatchTowerArray = 0x12d0; // TArray<ASGStructureOccupyFlag*>
		constexpr auto FlagFortressArray = 0x12e0; // TArray<ASGStructureOccupyFlag*>
		constexpr auto WatchTowerBuffArray = 0x12f0; // TArray<USGBuff*>
		constexpr auto CurWatchBuffMapArray = 0x1300; // TArray<FPlayerBuffMap>
	}

	namespace n_UMediaSoundComponent {
		constexpr auto Channels = 0x6d0; // EMediaSoundChannels
		constexpr auto DynamicRateAdjustment = 0x6d4; // bool
		constexpr auto RateAdjustmentFactor = 0x6d8; // float
		constexpr auto RateAdjustmentRange = 0x6dc; // FFloatRange
		constexpr auto MediaPlayer = 0x6f0; // UMediaPlayer*
	}

	namespace n_UUI_TransportMachine {
		constexpr auto BtnInventory = 0x2e8; // UOptionButton*
		constexpr auto BtnGeneral = 0x2f0; // UOptionButton*
		constexpr auto BtnHorse = 0x2f8; // UOptionButton*
		constexpr auto CloseButton = 0x300; // UButton*
		constexpr auto EquipPanel = 0x308; // UN_EquipPanel*
		constexpr auto ShortCutPanel = 0x310; // UN_ShortCutPanel*
		constexpr auto CapitalText = 0x318; // UTextBlock*
		constexpr auto TransportMachineInventory = 0x320; // UUI_TransportMachineInventory*
		constexpr auto TransportMachineGeneral = 0x328; // UUI_TransportMachineGeneral*
		constexpr auto TransportMachineHorse = 0x330; // UUI_TransportMachineHorse*
		constexpr auto TransportType = 0x338; // ETransportType
		constexpr auto SplitItemPanelTemplate = 0x350; // UN_SplitItemPanel*
		constexpr auto CrossServerTitleText = 0x360; // FText
		constexpr auto CrossServerSubTitleText = 0x378; // FText
		constexpr auto CrossServerDescText = 0x390; // FText
		constexpr auto BattleTitleText = 0x3a8; // FText
		constexpr auto BattleSubTitleText = 0x3c0; // FText
		constexpr auto BattleDescText = 0x3d8; // FText
		constexpr auto TitleText = 0x3f0; // UTextBlock*
		constexpr auto SubTitleText = 0x3f8; // UTextBlock*
		constexpr auto DescText = 0x400; // UMultiLineEditableText*
	}

	namespace n_UBTTask_WaitFollow {
		constexpr auto BBKey_DesiredLocation = 0xc0; // FBlackboardKeySelector
		constexpr auto FollowDistance = 0xe8; // float
		constexpr auto bUpdateDesiredLocationOnActor = 0xec; // char : 1
		constexpr auto bUpdateDesiredLocationOnFormation = 0xec; // char : 1
	}

	namespace n_UUIArtofWarPanel {
		constexpr auto RichTextBlock_LevelInfo = 0x2d8; // URichTextBlock*
		constexpr auto RichTextBlock_NextLevelInfo = 0x2e0; // URichTextBlock*
		constexpr auto Button_Skill = 0x2e8; // UButton*
		constexpr auto Button_Angry = 0x2f0; // UButton*
		constexpr auto Button_Weak = 0x2f8; // UButton*
		constexpr auto Button_Search = 0x300; // UButton*
		constexpr auto UniformGridPanel_ArtofWar = 0x308; // UUniformGridPanel*
		constexpr auto EditableTextBox_Find = 0x310; // UEditableTextBox*
		constexpr auto ScrollBox_Info = 0x318; // UScrollBox*
		constexpr auto TextBlock_Name = 0x320; // UTextBlock*
		constexpr auto TextBlock_NextName = 0x328; // UTextBlock*
		constexpr auto TextBlock_Skill = 0x330; // UTextBlock*
		constexpr auto TextBlock_Angry = 0x338; // UTextBlock*
		constexpr auto TextBlock_Weak = 0x340; // UTextBlock*
		constexpr auto ArtofWarSlotClass = 0x348; // UUIArtofWarSlot*
		constexpr auto TextSelectColor = 0x350; // FLinearColor
		constexpr auto TextUnSelectColor = 0x360; // FLinearColor
		constexpr auto WeakStartIndex = 0x370; // int32_t
		constexpr auto AngryStartIndex = 0x374; // int32_t
		constexpr auto SelectSlot = 0x378; // TWeakObjectPtr<UUIArtofWarSlot>
		constexpr auto CurrentSkillType = 0x380; // EUIGeneralSkillType
	}

	namespace n_ULandscapeMeshCollisionComponent {
		constexpr auto MeshGuid = 0x568; // FGuid
	}

	namespace n_UGridPathFollowingComponent {
		constexpr auto GridManager = 0x260; // UNavLocalGridManager*
	}

	namespace n_UMaterialExpressionConstant3Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_UMovieSceneSubSection {
		constexpr auto Parameters = 0xe8; // FMovieSceneSectionParameters
		constexpr auto StartOffset = 0x10c; // float
		constexpr auto TimeScale = 0x110; // float
		constexpr auto PrerollTime = 0x114; // float
		constexpr auto SubSequence = 0x118; // UMovieSceneSequence*
		constexpr auto ActorToRecord = 0x120; // LazyObjectProperty
		constexpr auto TargetSequenceName = 0x140; // FString
		constexpr auto TargetPathToRecordTo = 0x150; // FDirectoryPath
	}

	namespace n_UMovieSceneParticleParameterTrack {
		constexpr auto Sections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UMaterialExpressionFeatureLevelSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
	}

	namespace n_UN_RemoteCraftInventoryPanel {
		constexpr auto RemoteTitle = 0x260; // UTextBlock*
		constexpr auto RemoteIcon = 0x268; // UImage*
		constexpr auto FuelCanvas = 0x270; // UCanvasPanel*
		constexpr auto ActiveButtonHighLight = 0x278; // UImage*
		constexpr auto ActiveButton = 0x280; // UButton*
		constexpr auto ActiveText = 0x288; // UTextBlock*
		constexpr auto LeftFuelText = 0x290; // UTextBlock*
		constexpr auto FuelInventorySlot = 0x298; // UN_InventorySlot*
		constexpr auto FuelTemperatureProgress = 0x2a0; // UProgressBar*
		constexpr auto FuelTemperatureText = 0x2a8; // UTextBlock*
		constexpr auto FoodTitle = 0x2b0; // UTextBlock*
		constexpr auto SlotNumCanvas = 0x2b8; // UCanvasPanel*
		constexpr auto SlotNumText = 0x2c0; // UTextBlock*
		constexpr auto bNeedRefreshSlotNum = 0x2c8; // char : 1
		constexpr auto TemperatureSpeed = 0x2cc; // float
		constexpr auto FuelTemperatureToPostPercentMap = 0x2d0; // TMap<int32_t, float>
		constexpr auto RemoteInvnetoryTitle = 0x320; // UTextBlock*
		constexpr auto RemoteCraftInventorySlotPanel = 0x328; // UN_RemoteCraftInventorySlotPanel*
		constexpr auto RemoteCraftInventoryFoodPanel = 0x330; // UN_RemoteCraftInventoryFoodPanel*
		constexpr auto ArrangeButton = 0x338; // UButton*
		constexpr auto SwitchButton = 0x340; // UButton*
		constexpr auto InventoryExchangeBorder = 0x348; // UBorder*
		constexpr auto FoodExchangeBorder = 0x350; // UBorder*
		constexpr auto FoodCanvas = 0x358; // UCanvasPanel*
		constexpr auto FoodLeftTime = 0x360; // UTextBlock*
		constexpr auto bIsFuelStructure = 0x368; // char
		constexpr auto bHasFuelItem = 0x369; // char : 1
		constexpr auto bStructureIsActived = 0x369; // char : 1
		constexpr auto BindFuelItem = 0x36c; // TWeakObjectPtr<USGItem>
		constexpr auto bForceShowDefaultNum = 0x374; // char : 1
		constexpr auto SearchString = 0x378; // FString
		constexpr auto UnLockNum = 0x388; // int32_t
		constexpr auto ParentSGUI = 0x390; // USGUI*
		constexpr auto RootSGUI = 0x398; // USGUI*
		constexpr auto BindInventoryType = 0x3a0; // EInventoryTypes
		constexpr auto bSlotAllowDrag = 0x3a1; // char : 1
		constexpr auto BindInventoryComponent = 0x3a4; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindStructureSeat = 0x3ac; // TWeakObjectPtr<ASGStructureSeat>
		constexpr auto InventorySlotList = 0x3b8; // TArray<UN_InventorySlot*>
		constexpr auto FoodInventorySlotList = 0x3c8; // TArray<UN_InventorySlot*>
		constexpr auto bNeedShowFuelGuide = 0x3d8; // char : 1
		constexpr auto FuelSlotFinishQuestID = 0x3dc; // int32_t
		constexpr auto UnLockFoodSlotFinishQuestID = 0x3e0; // int32_t
		constexpr auto CountsPerRow = 0x3e4; // int32_t
		constexpr auto CurrentInventoryNum = 0x3e8; // int32_t
		constexpr auto TickUpdateSlotNumber = 0x3ec; // int32_t
		constexpr auto LastInventoryItemNum = 0x400; // int32_t
		constexpr auto DefaultShowInventoryNum = 0x408; // int32_t
		constexpr auto InventorySlotClass = 0x410; // UN_InventorySlot*
		constexpr auto InventorySlotFoodsNames = 0x418; // TArray<FName>
		constexpr auto bNeedRefreshFoodLeftTime = 0x428; // char : 1
	}

	namespace n_UUI_ProducerSplitLine {
		constexpr auto SplitNameTextBlock = 0x260; // UTextBlock*
		constexpr auto SplitName = 0x268; // FText
	}

	namespace n_UBTDecorator_BlackboardBase {
		constexpr auto BlackboardKey = 0x68; // FBlackboardKeySelector
	}

	namespace n_UOnsetNRT {
		constexpr auto Settings = 0x78; // UOnsetNRTSettings*
	}

	namespace n_ULandscapeSplineSegment {
		constexpr auto Connections = 0x28; // FLandscapeSplineSegmentConnection [0x2]
		constexpr auto SplineInfo = 0x58; // FInterpCurveVector
		constexpr auto Points = 0x70; // TArray<FLandscapeSplineInterpPoint>
		constexpr auto Bounds = 0x80; // FBox
		constexpr auto LocalMeshComponents = 0xa0; // TArray<USplineMeshComponent*>
	}

	namespace n_UCameraAnimInst {
		constexpr auto CamAnim = 0x28; // UCameraAnim*
		constexpr auto InterpGroupInst = 0x30; // UInterpGroupInst*
		constexpr auto PlayRate = 0x50; // float
		constexpr auto MoveTrack = 0x68; // UInterpTrackMove*
		constexpr auto MoveInst = 0x70; // UInterpTrackInstMove*
		constexpr auto PlaySpace = 0x78; // ECameraShakePlaySpace
	}

	namespace n_UUI_AdminBlockListPanel {
		constexpr auto ScrollBoxPlayerList = 0x2d8; // UScrollBox*
		constexpr auto SearchTextBoxPlayer = 0x2e0; // UEditableTextBox*
		constexpr auto UUI_ServerAdminBlockListRowTemplate = 0x308; // UUI_ServerAdminBlockListRow*
		constexpr auto CachedServerBlockPlayerRow = 0x310; // TArray<UUI_ServerAdminBlockListRow*>
		constexpr auto InputUIOverride = 0x320; // UUI_ModifyText*
		constexpr auto Button_Add = 0x328; // UButton*
		constexpr auto Button_Remove = 0x330; // UButton*
		constexpr auto Button_Clear = 0x338; // UButton*
	}

	namespace n_USoundAttenuation {
		constexpr auto Attenuation = 0x28; // FSoundAttenuationSettings
	}

	namespace n_ASGAudioManager {
		constexpr auto MaleCreateRolePreviewSound = 0x310; // TArray<FVoiceSoundDataArray>
		constexpr auto FemaleCreateRolePreviewSound = 0x320; // TArray<FVoiceSoundDataArray>
		constexpr auto MapBGMDataTable = 0x330; // UDataTable*
		constexpr auto MapAmbientSoundDataTable = 0x338; // UDataTable*
		constexpr auto DragInventoryItemSound = 0x340; // FName [0x13]
		constexpr auto DropInventoryItemSound = 0x3d8; // FName [0x13]
		constexpr auto EnterInventoryItemSound = 0x470; // FName [0x13]
		constexpr auto StartMakeItemSound = 0x508; // FName [0x13]
		constexpr auto EndMakeItemSound = 0x5a0; // FName [0x13]
		constexpr auto HoverAddSkillPointSoundID = 0x638; // FName
		constexpr auto PressAddSkillPointSoundID = 0x640; // FName
		constexpr auto HoverPerkSoundID = 0x648; // FName
		constexpr auto PressPerkSoundID = 0x650; // FName
		constexpr auto FirstEnterSceneSoundID = 0x658; // FName
		constexpr auto StateSound = 0x660; // FName [0x10]
		constexpr auto RespawnSoundID = 0x6e0; // FName
		constexpr auto AccomplishAchievementSoundID = 0x6e8; // FName
		constexpr auto IntensifySuccessSoundID = 0x6f0; // FName
		constexpr auto TimeStateSetting = 0x6f8; // FTimeStateSetting [0x2]
		constexpr auto WindStateSetting = 0x718; // FVector2D [0x4]
		constexpr auto MainSoundClass = 0x738; // USoundClass*
		constexpr auto MainSoundMixModifier = 0x740; // USoundMix*
		constexpr auto BgmSoundClass = 0x748; // USoundClass*
		constexpr auto BgmSoundMixModifier = 0x750; // USoundMix*
		constexpr auto EffectSoundClass = 0x758; // USoundClass*
		constexpr auto EffectSoundMixModifier = 0x760; // USoundMix*
		constexpr auto DT_SoundSettings = 0x778; // UDataTable* [0xd]
		constexpr auto EffectStateSourcePresetChain = 0x7e8; // USGSoundEffectSourcePresetChain*
		constexpr auto MainEffectStateSourcePresetChain = 0x7f0; // USGSoundEffectSourcePresetChain*
		constexpr auto bIsInitTime = 0x820; // char : 1
		constexpr auto InitBGMData = 0x828; // FBGMData
		constexpr auto BGMVolumes = 0x918; // TArray<ANatureBGMVolume*>
		constexpr auto BGMVolumesBoxes = 0x928; // TArray<FBox>
		constexpr auto CurBGMVolume = 0x938; // ANatureBGMVolume*
		constexpr auto EnteringBGMVolumes = 0x940; // TArray<ANatureBGMVolume*>
		constexpr auto AmbientSoundVolumes = 0x950; // TArray<ANatureAmbientSoundVolume*>
		constexpr auto AmbientSoundVolumesBoxes = 0x960; // TArray<FBox>
		constexpr auto CurAmbientSoundVolume = 0x970; // ANatureAmbientSoundVolume*
		constexpr auto EnteringAmbientSoundVolumes = 0x978; // TArray<ANatureAmbientSoundVolume*>
	}

	namespace n_UAbilityTask_WaitAttributeChangeRatioThreshold {
		constexpr auto OnChange = 0x80; // FMulticastInlineDelegate
		constexpr auto ExternalOwner = 0x138; // UAbilitySystemComponent*
	}

	namespace n_ASGStructureYaoQianShu {
		constexpr auto GiveItem = 0xb98; // USGItem*
		constexpr auto DeleteItem = 0xba0; // USGItem*
		constexpr auto PlayerLevelLimit = 0xba8; // int32_t
		constexpr auto PlayerMontage = 0xbb0; // UAnimMontage*
		constexpr auto PlayMontageDelay = 0xbb8; // int32_t
		constexpr auto YaoQianShuMontage = 0xbc0; // UAnimMontage*
		constexpr auto MaxUseCount = 0xbc8; // int32_t
		constexpr auto UsedCount = 0xbcc; // int32_t
		constexpr auto LastClearDay = 0xbd0; // int32_t
	}

	namespace n_ASG_HorseCharacter {
		constexpr auto ForbidPlacePerkBabyInheritWeight = 0x3aa8; // float
		constexpr auto ForbidPlacePerkIndexes = 0x3ab0; // TArray<int32_t>
		constexpr auto AllowPlacePerkBabyInheritWeight = 0x3ac0; // float
		constexpr auto AllowPlacePerkIndexes = 0x3ac8; // TArray<int32_t>
		constexpr auto SpecialPerkIndexes = 0x3ad8; // TArray<int32_t>
		constexpr auto EquippedRealNameDataIndex = 0x3ae8; // int32_t
		constexpr auto RecessivePerkBabyInheritWeight = 0x3aec; // float
		constexpr auto RecessivePerkIndexes = 0x3af0; // TArray<int32_t>
		constexpr auto TriggerPerkEventLevels = 0x3b00; // TArray<int32_t>
		constexpr auto bAddedHealyEmptyEvent = 0x3b10; // char : 1
		constexpr auto VehiclePerkSlotMaxCount = 0x3b18; // TMap<EVehiclePerkSlotType, int32_t>
		constexpr auto AllowPlacePerkSlotMaxCountLevels = 0x3b68; // TArray<int32_t>
		constexpr auto AddAllowPlacePerkSlotMaxCountEntries = 0x3b78; // TArray<FAddPerkSlotMaxCountEntry>
		constexpr auto GiveVehiclePerkToBabyChance = 0x3b88; // float
		constexpr auto AllVehiclePerkEvent = 0x3b90; // UVehiclePerkEvent*
		constexpr auto DefaultForbidPlaceVehiclePerks = 0x3ba0; // TArray<USGVehiclePerk*>
		constexpr auto DefaultAllowPlaceVehiclePerks = 0x3bb0; // TArray<USGVehiclePerk*>
		constexpr auto DefaultSpecialVehiclePerks = 0x3bc0; // TArray<USGVehiclePerk*>
		constexpr auto OnUpdateEquippedVehiclePerk = 0x3bd0; // FMulticastInlineDelegate
		constexpr auto OnUpdateEquippedRealNameVehiclePerk = 0x3be0; // FMulticastInlineDelegate
		constexpr auto AddSkillExpDelta = 0x3bf4; // float
	}

	namespace n_ULandscapeHeightfieldCollisionComponent {
		constexpr auto ComponentLayerInfos = 0x488; // TArray<ULandscapeLayerInfoObject*>
		constexpr auto SectionBaseX = 0x498; // int32_t
		constexpr auto SectionBaseY = 0x49c; // int32_t
		constexpr auto CollisionSizeQuads = 0x4a0; // int32_t
		constexpr auto CollisionScale = 0x4a4; // float
		constexpr auto SimpleCollisionSizeQuads = 0x4a8; // int32_t
		constexpr auto CollisionQuadFlags = 0x4b0; // TArray<char>
		constexpr auto HeightfieldGuid = 0x4c0; // FGuid
		constexpr auto CachedLocalBox = 0x4d0; // FBox
		constexpr auto RenderComponent = 0x4ec; // LazyObjectProperty
		constexpr auto CookedPhysicalMaterials = 0x518; // TArray<UPhysicalMaterial*>
	}

	namespace n_UUI_ReportChat {
		constexpr auto ReportText = 0x2d8; // UTextBlock*
		constexpr auto PlayerInputReasonText = 0x2e0; // UMultiLineEditableTextBox*
		constexpr auto ReasonContainerVBox = 0x2e8; // UVerticalBox*
		constexpr auto ButtonCancel = 0x2f0; // UButton*
		constexpr auto ButtonConfirm = 0x2f8; // UButton*
		constexpr auto ReportSecIntervalLimit = 0x300; // int32_t
	}

	namespace n_UEdGraphNode_Documentation {
		constexpr auto Link = 0x98; // FString
		constexpr auto Excerpt = 0xa8; // FString
	}

	namespace n_UUI_ServerParamRegion {
		constexpr auto TbRegionName = 0x260; // UTextBlock*
	}

	namespace n_UBakeMeshAttributeMapsTool {
		constexpr auto Settings = 0x90; // UBakeMeshAttributeMapsToolProperties*
		constexpr auto NormalMapProps = 0x98; // UBakedNormalMapToolProperties*
		constexpr auto OcclusionMapProps = 0xa0; // UBakedOcclusionMapToolProperties*
		constexpr auto CurvatureMapProps = 0xa8; // UBakedCurvatureMapToolProperties*
		constexpr auto Texture2DProps = 0xb0; // UBakedTexture2DImageProperties*
		constexpr auto VisualizationProps = 0xb8; // UBakedOcclusionMapVisualizationProperties*
		constexpr auto PreviewMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto CachedNormalMap = 0x430; // UTexture2D*
		constexpr auto CachedOcclusionMap = 0x450; // UTexture2D*
		constexpr auto CachedCurvatureMap = 0x480; // UTexture2D*
		constexpr auto CachedMeshPropertyMap = 0x498; // UTexture2D*
		constexpr auto CachedTexture2DImageMap = 0x4b0; // UTexture2D*
		constexpr auto EmptyNormalMap = 0x4b8; // UTexture2D*
		constexpr auto EmptyColorMapBlack = 0x4c0; // UTexture2D*
		constexpr auto EmptyColorMapWhite = 0x4c8; // UTexture2D*
	}

	namespace n_UCreateSessionCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UFlagImageTipSlot {
		constexpr auto ItemImage = 0x260; // UImage*
		constexpr auto ItemNameText = 0x268; // UTextBlock*
		constexpr auto AmountDivisionText = 0x270; // UTextBlock*
		constexpr auto ItemAmountText = 0x278; // UTextBlock*
		constexpr auto NeedAmountText = 0x280; // UTextBlock*
		constexpr auto EnoughColor = 0x288; // FLinearColor
		constexpr auto NotEnoughColor = 0x298; // FLinearColor
	}

	namespace n_UPreviewSceneWidget {
		constexpr auto PreviewMontageHandle = 0x260; // FTimerHandle
		constexpr auto FOV = 0x270; // float
		constexpr auto DynamicMaterial = 0x278; // UMaterialInstanceDynamic*
		constexpr auto BaseMaterial = 0x280; // UMaterialInterface*
		constexpr auto MeshLocation = 0x288; // FVector
		constexpr auto MeshLocationOffset = 0x294; // FVector
		constexpr auto MeshRotation = 0x2a0; // FRotator
		constexpr auto OrbitRotation = 0x2ac; // FRotator
		constexpr auto PreviewScale = 0x2b8; // float
		constexpr auto CameraPivotOffset = 0x2bc; // FVector
		constexpr auto CameraDistance = 0x2c8; // float
		constexpr auto BrakeSpeed = 0x2cc; // float
		constexpr auto RotationSpeed = 0x2d0; // float
		constexpr auto AutoRotator = 0x2d4; // FRotator
		constexpr auto DefaultAnim = 0x2e0; // UAnimMontage*
		constexpr auto GameWorld = 0x2e8; // UWorld*
		constexpr auto PreviewComponents = 0x2f0; // TArray<USceneComponent*>
		constexpr auto RotationVelocity = 0x300; // FVector2D
		constexpr auto PreviewCharacterStruct = 0x308; // FPreviewCharacterStruct
		constexpr auto PreviewWorld = 0x348; // UWorld*
		constexpr auto CaptureComponent = 0x350; // USceneCaptureComponent2D*
	}

	namespace n_UPrivateSessionDescription {
		constexpr auto MODItemTemplate = 0x260; // UPrivateSessionMODItem*
		constexpr auto MaxMODItemNumPerPage = 0x268; // int32_t
		constexpr auto MODItemSizeY = 0x26c; // float
		constexpr auto TbSessionName = 0x280; // UTextBlock*
		constexpr auto RtbDescription = 0x288; // URichTextBlock*
		constexpr auto BtnConfirm = 0x290; // UButton*
		constexpr auto MODCanvas = 0x298; // UCanvasPanel*
		constexpr auto MODSizeBox = 0x2a0; // USizeBox*
		constexpr auto UGPMODList = 0x2a8; // UUniformGridPanel*
		constexpr auto MODItemList = 0x2b0; // TArray<UPrivateSessionMODItem*>
	}

	namespace n_UMovieSceneCapture {
		constexpr auto ImageCaptureProtocolType = 0x38; // FSoftClassPath
		constexpr auto AudioCaptureProtocolType = 0x50; // FSoftClassPath
		constexpr auto ImageCaptureProtocol = 0x68; // UMovieSceneImageCaptureProtocolBase*
		constexpr auto AudioCaptureProtocol = 0x70; // UMovieSceneAudioCaptureProtocolBase*
		constexpr auto Settings = 0x78; // FMovieSceneCaptureSettings
		constexpr auto bUseSeparateProcess = 0xe8; // bool
		constexpr auto bCloseEditorWhenCaptureStarts = 0xe9; // bool
		constexpr auto AdditionalCommandLineArguments = 0xf0; // FString
		constexpr auto InheritedCommandLineArguments = 0x100; // FString
	}

	namespace n_UN_AppearanceSlot {
		constexpr auto InUseBg = 0xf80; // UImage*
		constexpr auto InUseText = 0xf88; // UTextBlock*
		constexpr auto LockBgAlpha = 0xf90; // float
		constexpr auto ExpiredIcon = 0xf98; // TSoftObjectPtr<UTexture2D>
		constexpr auto AppearanceItemType = 0xfc0; // ECharacterAppearanceType
		constexpr auto ItemTemplateForShow = 0xfd0; // USGItem*
	}

	namespace n_UWaterSplineComponent {
		constexpr auto WaterSplineDefaults = 0x580; // FWaterSplineCurveDefaults
		constexpr auto PreviousWaterSplineDefaults = 0x590; // FWaterSplineCurveDefaults
	}

	namespace n_AEmitter {
		constexpr auto ParticleSystemComponent = 0x310; // UParticleSystemComponent*
		constexpr auto bDestroyOnSystemFinish = 0x318; // char : 1
		constexpr auto bPostUpdateTickGroup = 0x318; // char : 1
		constexpr auto bCurrentlyActive = 0x318; // char : 1
		constexpr auto OnParticleSpawn = 0x320; // FMulticastInlineDelegate
		constexpr auto OnParticleBurst = 0x330; // FMulticastInlineDelegate
		constexpr auto OnParticleDeath = 0x340; // FMulticastInlineDelegate
		constexpr auto OnParticleCollide = 0x350; // FMulticastInlineDelegate
	}

	namespace n_UChaosSolverSettings {
		constexpr auto DefaultChaosSolverActorClass = 0x40; // FSoftClassPath
	}

	namespace n_UARPin {
		constexpr auto TrackedGeometry = 0x28; // UARTrackedGeometry*
		constexpr auto PinnedComponent = 0x30; // USceneComponent*
		constexpr auto LocalToTrackingTransform = 0x40; // FTransform
		constexpr auto LocalToAlignedTrackingTransform = 0x70; // FTransform
		constexpr auto TrackingState = 0xa0; // EARTrackingState
		constexpr auto OnARTrackingStateChanged = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnARTransformUpdated = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_UN_CraftQueuePanel {
		constexpr auto ParentUI = 0x260; // UN_CraftPanel*
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto CraftingQueueSlotNames = 0x270; // TArray<FName>
		constexpr auto CraftingQueueSlots = 0x280; // TArray<UN_ItemCraftQueueSlot*>
		constexpr auto LastItemCraftQueueEntries = 0x290; // TArray<FItemCraftQueueEntry>
		constexpr auto BindInventoryComponent = 0x2a0; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector2D {
		constexpr auto Min = 0x38; // FVector2D
		constexpr auto Max = 0x40; // FVector2D
	}

	namespace n_UParticleModulePivotOffset {
		constexpr auto PivotOffset = 0x30; // FVector2D
	}

	namespace n_UPhysicsObjectToolPropertySet {
		constexpr auto ObjectName = 0x60; // FString
		constexpr auto CollisionType = 0x70; // ECollisionGeometryMode
		constexpr auto Spheres = 0x78; // TArray<FPhysicsSphereData>
		constexpr auto Boxes = 0x88; // TArray<FPhysicsBoxData>
		constexpr auto Capsules = 0x98; // TArray<FPhysicsCapsuleData>
		constexpr auto Convexes = 0xa8; // TArray<FPhysicsConvexData>
	}

	namespace n_UMenuAnchor {
		constexpr auto MenuClass = 0x120; // UUserWidget*
		constexpr auto OnGetMenuContentEvent = 0x128; // FDelegate
		constexpr auto OnGetUserMenuContentEvent = 0x138; // FDelegate
		constexpr auto Placement = 0x148; // EMenuPlacement
		constexpr auto bFitInWindow = 0x149; // bool
		constexpr auto ShouldDeferPaintingAfterWindowContent = 0x14a; // bool
		constexpr auto UseApplicationMenuStack = 0x14b; // bool
		constexpr auto OnMenuOpenChanged = 0x150; // FMulticastInlineDelegate
	}

	namespace n_UAnimalRestSlot {
		constexpr auto HeadIcon = 0x260; // UImage*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto NameText = 0x270; // UTextBlock*
		constexpr auto StatusText = 0x278; // UTextBlock*
		constexpr auto LifeCountText = 0x280; // UTextBlock*
		constexpr auto RebornTimeText = 0x288; // UTextBlock*
		constexpr auto bg = 0x290; // UImage*
		constexpr auto ReduceRebornTimeButton = 0x298; // UButton*
		constexpr auto StopRestButton = 0x2a0; // UButton*
		constexpr auto ParentUI = 0x2a8; // USGUI*
		constexpr auto ChunkAnimalData = 0x2b0; // FBaseAnimalChunkData
		constexpr auto RestColor = 0x360; // FLinearColor
		constexpr auto NoLifeCountColor = 0x370; // FLinearColor
		constexpr auto UnKnownVehicleIcon = 0x380; // TSoftObjectPtr<UTexture2D>
		constexpr auto VehicleIcons = 0x3a8; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto SelectTexture = 0x470; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalTexture = 0x498; // TSoftObjectPtr<UTexture2D>
		constexpr auto AnimalDeathStatusText = 0x4c0; // FText
		constexpr auto AnimalReborningStatusText = 0x4d8; // FText
		constexpr auto AnimalNoLifeCountStatusText = 0x4f0; // FText
		constexpr auto AnimalRestStatusText = 0x508; // FText
		constexpr auto ChunkGuid = 0x520; // FGuid
	}

	namespace n_UGuildListSlot {
		constexpr auto GuildNameText = 0x2d8; // UTextBlock*
		constexpr auto GuildLevelText = 0x2e0; // UTextBlock*
		constexpr auto GuildOwnerText = 0x2e8; // UTextBlock*
		constexpr auto MemberCountText = 0x2f0; // UTextBlock*
		constexpr auto StructureProssessAuthText = 0x2f8; // UTextBlock*
		constexpr auto BGImage = 0x300; // UImage*
		constexpr auto JoinDataButton = 0x308; // UDataButton*
		constexpr auto CheatGuildDataButton = 0x310; // UDataButton*
		constexpr auto NormalBGTexture = 0x318; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x340; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UGameplayTagsManager {
		constexpr auto TagSources = 0xc0; // TArray<FGameplayTagSource>
		constexpr auto GameplayTagTables = 0x1b0; // TArray<UDataTable*>
	}

	namespace n_UDistributionVectorConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveVector
		constexpr auto bLockAxes = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags
	}

	namespace n_UInputKeyDelegateBinding {
		constexpr auto InputKeyDelegateBindings = 0x28; // TArray<FBlueprintInputKeyDelegateBinding>
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureReplace {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto VirtualTextureOutput = 0x54; // FExpressionInput
	}

	namespace n_ARuntimeVirtualTextureVolume {
		constexpr auto VirtualTextureComponent = 0x310; // URuntimeVirtualTextureComponent*
	}

	namespace n_UCurveLinearColor {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x4]
		constexpr auto AdjustHue = 0x230; // float
		constexpr auto AdjustSaturation = 0x234; // float
		constexpr auto AdjustBrightness = 0x238; // float
		constexpr auto AdjustBrightnessCurve = 0x23c; // float
		constexpr auto AdjustVibrance = 0x240; // float
		constexpr auto AdjustMinAlpha = 0x244; // float
		constexpr auto AdjustMaxAlpha = 0x248; // float
	}

	namespace n_UUniformGridPanel {
		constexpr auto SlotPadding = 0x120; // FMargin
		constexpr auto MinDesiredSlotWidth = 0x130; // float
		constexpr auto MinDesiredSlotHeight = 0x134; // float
	}

	namespace n_UUniformGridSlot {
		constexpr auto HorizontalAlignment = 0x38; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x39; // EVerticalAlignment
		constexpr auto Row = 0x3c; // int32_t
		constexpr auto Column = 0x40; // int32_t
	}

	namespace n_AReflectionCapture {
		constexpr auto CaptureComponent = 0x310; // UReflectionCaptureComponent*
	}

	namespace n_UProceduralArrowToolProperties {
		constexpr auto ShaftRadius = 0x70; // float
		constexpr auto ShaftHeight = 0x74; // float
		constexpr auto HeadRadius = 0x78; // float
		constexpr auto HeadHeight = 0x7c; // float
		constexpr auto RadialSlices = 0x80; // int32_t
		constexpr auto TotalSubdivisions = 0x84; // int32_t
	}

	namespace n_UWaterMeshComponent {
		constexpr auto ForceCollapseDensityLevel = 0x4b0; // int32_t
		constexpr auto TileSize = 0x4b4; // float
		constexpr auto ExtentInTiles = 0x4b8; // FIntPoint
		constexpr auto FarDistanceMaterial = 0x4c0; // UMaterialInterface*
		constexpr auto FarDistanceMeshExtent = 0x4c8; // float
		constexpr auto RTWorldLocation = 0x4cc; // FVector
		constexpr auto RTWorldSizeVector = 0x4d8; // FVector
		constexpr auto TessellationFactor = 0x5c8; // int32_t
		constexpr auto LODScale = 0x5cc; // float
	}

	namespace n_UHorseAuctionSellSlot {
		constexpr auto ButtonCheckedStyle = 0x2d8; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x550; // FButtonStyle
		constexpr auto ButtonSelected = 0x7c8; // UButton*
		constexpr auto TextBlock_Name = 0x7d0; // UTextBlock*
		constexpr auto TextBlock_Level = 0x7d8; // UTextBlock*
		constexpr auto TextBlock_Statue = 0x7e0; // UTextBlock*
		constexpr auto TextBlock_Quality = 0x7e8; // UTextBlock*
		constexpr auto TextBlock_VehicleType = 0x7f0; // UTextBlock*
		constexpr auto TextBlock_Price = 0x7f8; // UTextBlock*
		constexpr auto TextBlock_Time = 0x800; // UTextBlock*
		constexpr auto HorseAuctionSellPanel = 0x818; // TWeakObjectPtr<UHorseAuctionSellPanel>
		constexpr auto HorseAuctionPanel = 0x820; // TWeakObjectPtr<UHorseAuctionPanel>
	}

	namespace n_ASGStructureAccessories {
		constexpr auto SkeletalMesh = 0xb98; // USkeletalMeshComponent*
	}

	namespace n_UUI_Guild {
		constexpr auto GuildListPanel = 0x2d8; // UGuildListPanel*
		constexpr auto GuildPanel = 0x2e0; // UGuildPanel*
		constexpr auto AlliancePanel = 0x2e8; // UAlliancePanel*
		constexpr auto AllianceListPanel = 0x2f0; // UAllianceListPanel*
	}

	namespace n_USGToolTipsGeneral {
		constexpr auto HPText = 0x288; // UTextBlock*
		constexpr auto TameText = 0x290; // UTextBlock*
		constexpr auto StunText = 0x298; // UTextBlock*
		constexpr auto HPProgressBar = 0x2a0; // UProgressBar*
		constexpr auto TameProgressBar = 0x2a8; // UProgressBar*
		constexpr auto StunProgressBar = 0x2b0; // UProgressBar*
		constexpr auto TamingPanel = 0x2b8; // UCanvasPanel*
	}

	namespace n_USGServerLevelData {
		constexpr auto ServerLevelMin = 0x28; // int32_t
		constexpr auto ServerLevelMax = 0x2c; // int32_t
		constexpr auto CheckServerLevelInterval = 0x30; // float
		constexpr auto ServerLevelFormPlayerNum = 0x34; // int32_t
		constexpr auto ServerLevelCurveTable = 0x38; // UCurveTable*
		constexpr auto ServerLevelEffectPlayerExpCurveTable = 0x40; // UCurveTable*
	}

	namespace n_ASGStructureTeleportGate {
		constexpr auto FuBenVolumeId = 0xb98; // int32_t
	}

	namespace n_ADestructableInstanceActor {
		constexpr auto DefaultSceneRoot = 0x310; // USceneComponent*
		constexpr auto AutoGenBlockSolider = 0x318; // UHierarchicalInstancedStaticMeshComponent*
	}

	namespace n_UMaterialExpressionFresnel {
		constexpr auto ExponentIn = 0x40; // FExpressionInput
		constexpr auto Exponent = 0x54; // float
		constexpr auto BaseReflectFractionIn = 0x58; // FExpressionInput
		constexpr auto BaseReflectFraction = 0x6c; // float
		constexpr auto Normal = 0x70; // FExpressionInput
	}

	namespace n_UWrapBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto bFillEmptySpace = 0x48; // bool
		constexpr auto FillSpanWhenLessThan = 0x4c; // float
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_ULiveLinkSubjectSettings {
		constexpr auto PreProcessors = 0x28; // TArray<ULiveLinkFramePreProcessor*>
		constexpr auto InterpolationProcessor = 0x38; // ULiveLinkFrameInterpolationProcessor*
		constexpr auto Translators = 0x40; // TArray<ULiveLinkFrameTranslator*>
		constexpr auto Role = 0x50; // ULiveLinkRole*
		constexpr auto FrameRate = 0x58; // FFrameRate
		constexpr auto bRebroadcastSubject = 0x60; // bool
	}

	namespace n_ASGStructureTrapProtect {
		constexpr auto TriggerTrapComponent = 0xba0; // UShapeComponent*
		constexpr auto TrapOverlapTypes = 0xbb8; // TArray<FTrapTypeEntry>
		constexpr auto TrapDamageInterval = 0xbc8; // float
		constexpr auto TrapDamageAmount = 0xbcc; // float
		constexpr auto LimitDamagePercent = 0xbd0; // float
		constexpr auto AutoResetTime = 0xbd4; // float
		constexpr auto bOnlyTriggerOtherTeam = 0xbd8; // char : 1
		constexpr auto MeshMoveSpeed = 0xbdc; // float
		constexpr auto bUsed = 0xbf0; // char : 1
	}

	namespace n_UEnvQueryTest_PathfindingBatch {
		constexpr auto ScanRangeMultiplier = 0x280; // FAIDataProviderFloatValue
	}

	namespace n_UWorld {
		constexpr auto PersistentLevel = 0x30; // ULevel*
		constexpr auto NetDriver = 0x38; // UNetDriver*
		constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
		constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
		constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
		constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
		constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
		constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
		constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
		constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
		constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
		constexpr auto StreamingLevelsPrefix = 0xc0; // FString
		constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
		constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
		constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
		constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
		constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
		constexpr auto bAreConstraintsDirty = 0x10e; // char : 1
		constexpr auto NavigationSystem = 0x110; // UNavigationSystemBase*
		constexpr auto AuthorityGameMode = 0x118; // AGameModeBase*
		constexpr auto GameState = 0x120; // AGameStateBase*
		constexpr auto AISystem = 0x128; // UAISystemBase*
		constexpr auto AvoidanceManager = 0x130; // UAvoidanceManager*
		constexpr auto Levels = 0x138; // TArray<ULevel*>
		constexpr auto LevelCollections = 0x148; // TArray<FLevelCollection>
		constexpr auto OwningGameInstance = 0x180; // UGameInstance*
		constexpr auto ParameterCollectionInstances = 0x188; // TArray<UMaterialParameterCollectionInstance*>
		constexpr auto CanvasForRenderingToTarget = 0x198; // UCanvas*
		constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1a0; // UCanvas*
		constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x1f8; // TSet<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x248; // TArray<UActorComponent*>
		constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x258; // TArray<UActorComponent*>
		constexpr auto WorldComposition = 0x5f8; // UWorldComposition*
		constexpr auto PSCPool = 0x688; // FWorldPSCPool
	}

	namespace n_ASGStructureFireworks {
		constexpr auto FireworksClass = 0xb98; // AActor*
		constexpr auto NeedWeaponClass = 0xba0; // ASGWeapon*
		constexpr auto FireworksMontage = 0xba8; // UAnimMontage*
		constexpr auto Count = 0xbb0; // int32_t
		constexpr auto TickTimeInterval = 0xbb4; // float
		constexpr auto RandomRadius = 0xbb8; // float
	}

	namespace n_UStructureBannerInfoHUD {
		constexpr auto MoveSecondText = 0x360; // UStructureInfoHUDSlot*
		constexpr auto RemainLifeTimeText = 0x368; // UStructureInfoHUDSlot*
		constexpr auto BindStructureBanner = 0x370; // TWeakObjectPtr<ASGStructureBanner>
	}

	namespace n_UUI_ModEntryTemplate {
		constexpr auto mTextBlockName = 0x268; // UTextBlock*
	}

	namespace n_UUIArtofWarSlot {
		constexpr auto Button_Background = 0x2d8; // UButton*
		constexpr auto Image_Icon = 0x2e0; // UImage*
		constexpr auto Image_IconBG = 0x2e8; // UImage*
		constexpr auto TextBlock_Name = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_Exp = 0x2f8; // UTextBlock*
		constexpr auto TextBlock_Level = 0x300; // UTextBlock*
		constexpr auto ProgressBar_Exp = 0x308; // UProgressBar*
		constexpr auto HasLearnButtonStyle = 0x310; // FButtonStyle
		constexpr auto HasNotLearnButtonStyle = 0x588; // FButtonStyle
		constexpr auto BindPerk = 0x800; // TWeakObjectPtr<USGPerk>
		constexpr auto ParentUI = 0x808; // TWeakObjectPtr<UUIArtofWarPanel>
	}

	namespace n_USGPerkToolTipWidget {
		constexpr auto CraftRequirementEntry = 0x288; // USGCraftRequirementEntry*
		constexpr auto BindPerkSlot = 0x290; // TWeakObjectPtr<UPerkSlot>
		constexpr auto BindCharacter = 0x298; // TWeakObjectPtr<ASGCharacter>
		constexpr auto MainCanvas = 0x2a0; // UCanvasPanel*
		constexpr auto TbPerkName = 0x2a8; // UTextBlock*
		constexpr auto TbPerkDescription = 0x2b0; // UTextBlock*
		constexpr auto TbNeedCharacterLevel = 0x2b8; // UTextBlock*
		constexpr auto TbSmallSkill = 0x2c0; // UTextBlock*
		constexpr auto TbNeedSkillLevel = 0x2c8; // UTextBlock*
		constexpr auto TbNeedPoint = 0x2d0; // UTextBlock*
		constexpr auto TbNeedCapital = 0x2d8; // UTextBlock*
		constexpr auto TbNeedPerk = 0x2e0; // UTextBlock*
		constexpr auto RequireVertical = 0x2e8; // UVerticalBox*
		constexpr auto CraftRequirementsList = 0x2f0; // UVerticalBox*
		constexpr auto RequireCharacterLevelCanvas = 0x2f8; // UCanvasPanel*
		constexpr auto RequireSmallSkillCanvas = 0x300; // UCanvasPanel*
		constexpr auto RequireSkillLevelCanvas = 0x308; // UCanvasPanel*
		constexpr auto RequirePerkCanvas = 0x310; // UCanvasPanel*
		constexpr auto RequirePointCanvas = 0x318; // UCanvasPanel*
		constexpr auto RequireCapitalCanvas = 0x320; // UCanvasPanel*
		constexpr auto RequireItemCanvas = 0x328; // UHorizontalBox*
		constexpr auto RequireMultiCompulsorySkillCanvas = 0x330; // UCanvasPanel*
		constexpr auto RequireMultiElectiveSkillCanvas = 0x338; // UCanvasPanel*
		constexpr auto NeedCharacterLevelText = 0x340; // UTextBlock*
		constexpr auto NeedSmallSkillText = 0x348; // UTextBlock*
		constexpr auto NeedSkillLevelText = 0x350; // UTextBlock*
		constexpr auto NeedPerkText = 0x358; // UTextBlock*
		constexpr auto NeedItemsText = 0x360; // UTextBlock*
		constexpr auto NeedPointText = 0x368; // UTextBlock*
		constexpr auto NeedCapitalText = 0x370; // UTextBlock*
		constexpr auto RequireMultiCompulsorySkillText = 0x378; // UTextBlock*
		constexpr auto RequireMultiElectiveSkillText = 0x380; // UTextBlock*
		constexpr auto CompulsorySkillVertical = 0x388; // UVerticalBox*
		constexpr auto ElectiveSkillVertical = 0x390; // UVerticalBox*
		constexpr auto PerkTipMultiSkillTemplate = 0x398; // USGPerkTipMultiSkillText*
		constexpr auto SmallSkillText = 0x3a0; // FSPSmallSkillText [0x5]
		constexpr auto EnoughColor = 0x3f0; // FLinearColor
		constexpr auto NotEnoughColor = 0x400; // FLinearColor
		constexpr auto SavedLearnPerkItemEnoughText = 0x410; // FText
		constexpr auto PerkLevel = 0x428; // int32_t
		constexpr auto ToolTipsDescriptionTextWrapDelta = 0x42c; // float
	}

	namespace n_UBaseKelvinletBrushOpProps {
		constexpr auto Stiffness = 0x60; // float
		constexpr auto Incompressiblity = 0x64; // float
		constexpr auto BrushSteps = 0x68; // int32_t
	}

	namespace n_UMovieSceneStringSection {
		constexpr auto StringCurve = 0xe8; // FMovieSceneStringChannel
	}

	namespace n_AUIWSWaterBody {
		constexpr auto MyManager = 0x310; // AUIWSManager*
		constexpr auto CausticsDecal = 0x380; // UDecalComponent*
		constexpr auto UseHISM = 0x389; // bool
		constexpr auto HISMScaleOffset = 0x38c; // FVector
		constexpr auto CanUseGerstnerWave = 0x3a0; // bool
		constexpr auto WaterBodyIndex = 0x3a4; // int32_t
		constexpr auto MaxWaveHeightOffset = 0x3a8; // float
		constexpr auto WaterWaves = 0x3b0; // UWaterWavesBase*
		constexpr auto EpicWaterMaterials = 0x3c8; // bool
		constexpr auto CullDistance = 0x3cc; // float
		constexpr auto WaterBodyMat = 0x3d0; // UMaterialInterface*
		constexpr auto WaterBodyMatLOD1 = 0x3d8; // UMaterialInterface*
		constexpr auto WaterCustomBodyMat = 0x3e0; // UMaterialInterface*
		constexpr auto WaterCustomBodyMatLOD1 = 0x3e8; // UMaterialInterface*
		constexpr auto WaterRiverMat = 0x3f0; // UMaterialInterface*
		constexpr auto WaterRiverMatLOD1 = 0x3f8; // UMaterialInterface*
		constexpr auto MPC_Water = 0x400; // UMaterialParameterCollection*
		constexpr auto FogIntensity = 0x408; // float
		constexpr auto MaxDepth = 0x40c; // float
		constexpr auto NearPlane = 0x410; // float
		constexpr auto ScatteringAniso = 0x414; // float
		constexpr auto PPAbsorption = 0x418; // FLinearColor
		constexpr auto PPAbsorptionDark = 0x428; // FLinearColor
		constexpr auto FogAmbientColor = 0x438; // FLinearColor
		constexpr auto FogAmbientColorDark = 0x448; // FLinearColor
		constexpr auto FogScatterColor = 0x458; // FLinearColor
		constexpr auto FogScatterColorDark = 0x468; // FLinearColor
		constexpr auto Wave_Intensity = 0x478; // float
		constexpr auto OverrideWaterMaterials = 0x490; // bool
		constexpr auto CustomWaterMaterial = 0x498; // UMaterialInterface*
		constexpr auto CustomWaterMaterialDistant = 0x4a0; // UMaterialInterface*
		constexpr auto bIsInteractive = 0x4a9; // bool
		constexpr auto bDisableAutomaticInteraction = 0x4aa; // bool
		constexpr auto bDisableAutomaticInteractionXbox = 0x4ab; // bool
		constexpr auto bDisableAutomaticInteractionPS4 = 0x4ac; // bool
		constexpr auto bDisableAutomaticInteractionNintendoSwitch = 0x4ad; // bool
		constexpr auto bDisableAutomaticInteractionAndroid = 0x4ae; // bool
		constexpr auto bDisableAutomaticInteractionIOS = 0x4af; // bool
		constexpr auto MaxTileScale = 0x4b0; // int32_t
		constexpr auto SimResMin = 0x4b4; // int32_t
		constexpr auto bTieSimToFPS = 0x4b8; // bool
		constexpr auto InteractOnDamage = 0x4b9; // bool
		constexpr auto bLimitTickRate = 0x4ba; // bool
		constexpr auto TickRate = 0x4bc; // float
		constexpr auto DamageScale = 0x4c0; // float
		constexpr auto WaterColor = 0x4c8; // FLinearColor
		constexpr auto DeepOpacity = 0x4d8; // FLinearColor
		constexpr auto ShallowOpacity = 0x4e8; // FLinearColor
		constexpr auto DepthTransitionDistance = 0x4f8; // float
		constexpr auto UnderWaterBrightnessMult = 0x4fc; // float
		constexpr auto ShallowEdgeFadeDistance = 0x500; // float
		constexpr auto ShallowEdgeFadePower = 0x504; // float
		constexpr auto bEnableParticleOnDamage = 0x508; // bool
		constexpr auto bEnableParticleOnCollision = 0x509; // bool
		constexpr auto bOverrideParticleSettings = 0x50a; // bool
		constexpr auto InteractionEffectScaleMin = 0x50c; // float
		constexpr auto InteractionEffectScaleMax = 0x510; // float
		constexpr auto InteractionEffect = 0x518; // UParticleSystem*
		constexpr auto DamageEffectScaleMin = 0x520; // float
		constexpr auto DamageEffectScaleMax = 0x524; // float
		constexpr auto DamageEffect = 0x528; // UParticleSystem*
		constexpr auto activeheight0 = 0x560; // UTextureRenderTarget2D*
		constexpr auto activeheight1 = 0x568; // UTextureRenderTarget2D*
		constexpr auto activeheight2 = 0x570; // UTextureRenderTarget2D*
		constexpr auto activenormal = 0x578; // UTextureRenderTarget2D*
		constexpr auto localheight0 = 0x580; // UTextureRenderTarget2D*
		constexpr auto localheight1 = 0x588; // UTextureRenderTarget2D*
		constexpr auto localheight2 = 0x590; // UTextureRenderTarget2D*
		constexpr auto localnormal = 0x598; // UTextureRenderTarget2D*
		constexpr auto globalheight0 = 0x5a0; // UTextureRenderTarget2D*
		constexpr auto globalheight1 = 0x5a8; // UTextureRenderTarget2D*
		constexpr auto globalheight2 = 0x5b0; // UTextureRenderTarget2D*
		constexpr auto globalnormal = 0x5b8; // UTextureRenderTarget2D*
		constexpr auto DefaultSplashEffect = 0x5e8; // UParticleSystem*
		constexpr auto WaterMID = 0x5f0; // UMaterialInstanceDynamic*
		constexpr auto WaterMIDLOD1 = 0x5f8; // UMaterialInstanceDynamic*
		constexpr auto HeightSimInst = 0x610; // UMaterialInstanceDynamic*
		constexpr auto ForceSplatInst = 0x618; // UMaterialInstanceDynamic*
		constexpr auto ManualSplatInst = 0x620; // UMaterialInstanceDynamic*
		constexpr auto ManualBoxSplatInst = 0x628; // UMaterialInstanceDynamic*
		constexpr auto ComputeNormalInst = 0x630; // UMaterialInstanceDynamic*
		constexpr auto Canvas = 0x638; // UCanvas*
		constexpr auto Size = 0x640; // FVector2D
		constexpr auto Context = 0x648; // FDrawToRenderTargetContext
		constexpr auto CanvasMan = 0x658; // UCanvas*
		constexpr auto SizeMan = 0x660; // FVector2D
		constexpr auto ContextMan = 0x668; // FDrawToRenderTargetContext
		constexpr auto ActivateCaustics = 0x678; // bool
		constexpr auto CausticsMat = 0x688; // UMaterialInterface*
		constexpr auto CausticsStartHeight = 0x690; // float
		constexpr auto CausticsDecalSizeZ = 0x694; // float
		constexpr auto EmisiveColor = 0x698; // FLinearColor
		constexpr auto EnableRayTraceCaustics = 0x6ac; // bool
	}

	namespace n_ASGStructureFunctionFacelift {
		constexpr auto ThumbnailTexture = 0xf80; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UMovieSceneByteTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_UUI_Chat {
		constexpr auto VoiceOpenBg = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto VoiceCloseBg = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto ChatReportBtnWidget = 0x330; // UUI_ChatReportBtn*
		constexpr auto UnSelectButtonStyle = 0x340; // FButtonStyle
		constexpr auto BtnClass = 0x5c0; // UConversationBtn*
		constexpr auto MsgRowClass = 0x5c8; // UMsgRow*
		constexpr auto SystemMsgRowClass = 0x5d0; // UUI_SystemMsgRow*
		constexpr auto MsgArea = 0x5d8; // UCanvasPanel*
		constexpr auto MsgBox = 0x5e0; // UScrollBox*
		constexpr auto InputArea = 0x5e8; // UCanvasPanel*
		constexpr auto ChatInputBox = 0x5f0; // UUI_ChatInputBox*
		constexpr auto ConvVerticalBox = 0x5f8; // UVerticalBox*
		constexpr auto ChatFoldAnim = 0x600; // UWidgetAnimation*
		constexpr auto FoldImgBorder = 0x608; // UBorder*
		constexpr auto MainBorder = 0x610; // UBorder*
		constexpr auto ConvBorder = 0x618; // UBorder*
		constexpr auto ChatSettingPannel = 0x620; // UUI_ChatSetting*
		constexpr auto MenuHBox = 0x628; // UHorizontalBox*
		constexpr auto VoicePanel = 0x630; // UCanvasPanel*
		constexpr auto VoiceStateBorder = 0x638; // UBorder*
		constexpr auto VoiceText = 0x640; // UTextBlock*
		constexpr auto KeyText = 0x648; // UTextBlock*
		constexpr auto InputTextNumLimit = 0x650; // int32_t
		constexpr auto AnimPlaySpeed = 0x654; // float
		constexpr auto FoldIconNormal = 0x658; // TSoftObjectPtr<UTexture2D>
		constexpr auto FoldIconActive = 0x680; // TSoftObjectPtr<UTexture2D>
		constexpr auto MsgRowOffset = 0x6a8; // FMargin
		constexpr auto ClientCacheMsgNumLimit = 0x6b8; // int32_t
		constexpr auto SecondaryMsgTypes = 0x6c0; // TArray<EChatSlotType>
		constexpr auto SecondaryMsgSiftTypes = 0x6d0; // TArray<EMsgSiftType>
		constexpr auto bDefaultShow = 0x6e0; // char : 1
	}

	namespace n_AGeometryCollectionActor {
		constexpr auto GeometryCollectionComponent = 0x310; // UGeometryCollectionComponent*
		constexpr auto GeometryCollectionDebugDrawComponent = 0x318; // UGeometryCollectionDebugDrawComponent*
	}

	namespace n_UBattleKillEventSlot {
		constexpr auto HobEventRow = 0x2d8; // UHorizontalBox*
		constexpr auto TbKillPlayerName = 0x2e0; // UTextBlock*
		constexpr auto TbBeKillPlayerName = 0x2e8; // UTextBlock*
		constexpr auto TbConnect = 0x2f0; // UTextBlock*
		constexpr auto TbBeKillerName = 0x2f8; // UTextBlock*
		constexpr auto TbExtra = 0x300; // UTextBlock*
		constexpr auto ImgDamageIcon = 0x308; // UImage*
		constexpr auto DamageIconPanel = 0x310; // UCanvasPanel*
		constexpr auto ImgStateIcon = 0x318; // UImage*
		constexpr auto StatePanel = 0x320; // UCanvasPanel*
		constexpr auto AttackGroupColor = 0x328; // FLinearColor
		constexpr auto DefenseGroupColor = 0x338; // FLinearColor
		constexpr auto IconDeadState = 0x348; // TSoftObjectPtr<UTexture2D>
		constexpr auto IconWillDeadState = 0x370; // TSoftObjectPtr<UTexture2D>
		constexpr auto LeftShowTimeSec = 0x398; // float
	}

	namespace n_UPlatformGameInstance {
		constexpr auto ApplicationWillDeactivateDelegate = 0x1a8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasReactivatedDelegate = 0x1b8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillEnterBackgroundDelegate = 0x1c8; // FMulticastInlineDelegate
		constexpr auto ApplicationHasEnteredForegroundDelegate = 0x1d8; // FMulticastInlineDelegate
		constexpr auto ApplicationWillTerminateDelegate = 0x1e8; // FMulticastInlineDelegate
		constexpr auto ApplicationShouldUnloadResourcesDelegate = 0x1f8; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedStartupArgumentsDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForRemoteNotificationsDelegate = 0x218; // FMulticastInlineDelegate
		constexpr auto ApplicationRegisteredForUserNotificationsDelegate = 0x228; // FMulticastInlineDelegate
		constexpr auto ApplicationFailedToRegisterForRemoteNotificationsDelegate = 0x238; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedRemoteNotificationDelegate = 0x248; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedLocalNotificationDelegate = 0x258; // FMulticastInlineDelegate
		constexpr auto ApplicationReceivedScreenOrientationChangedNotificationDelegate = 0x268; // FMulticastInlineDelegate
	}

	namespace n_UInterpTrackFloatMaterialParam {
		constexpr auto TargetMaterials = 0x90; // TArray<UMaterialInterface*>
		constexpr auto ParamName = 0xa0; // FName
	}

	namespace n_UNavigationSystemV1 {
		constexpr auto MainNavData = 0x28; // ANavigationData*
		constexpr auto AbstractNavData = 0x30; // ANavigationData*
		constexpr auto DefaultAgentName = 0x38; // FName
		constexpr auto CrowdManagerClass = 0x40; // TSoftClassPtr<UObject>
		constexpr auto bAutoCreateNavigationData = 0x68; // char : 1
		constexpr auto bSpawnNavDataInNavBoundsLevel = 0x68; // char : 1
		constexpr auto bAllowClientSideNavigation = 0x68; // char : 1
		constexpr auto bShouldDiscardSubLevelNavData = 0x68; // char : 1
		constexpr auto bTickWhilePaused = 0x68; // char : 1
		constexpr auto bSupportRebuilding = 0x68; // char : 1
		constexpr auto bInitialBuildingLocked = 0x68; // char : 1
		constexpr auto bSkipAgentHeightCheckWhenPickingNavData = 0x69; // char : 1
		constexpr auto bGenerateNavigationOnlyAroundNavigationInvokers = 0x69; // char : 1
		constexpr auto ActiveTilesUpdateInterval = 0x6c; // float
		constexpr auto ActiveTilesUpdateBucketNum = 0x70; // int32_t
		constexpr auto DataGatheringMode = 0x74; // ENavDataGatheringModeConfig
		constexpr auto DirtyAreaWarningSizeThreshold = 0x78; // float
		constexpr auto SupportedAgents = 0x80; // TArray<FNavDataConfig>
		constexpr auto SupportedAgentsMask = 0x90; // FNavAgentSelector
		constexpr auto NavDataSet = 0x98; // TArray<ANavigationData*>
		constexpr auto NavDataRegistrationQueue = 0xa8; // TArray<ANavigationData*>
		constexpr auto OnNavDataRegisteredEvent = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnNavigationGenerationFinishedDelegate = 0xd8; // FMulticastInlineDelegate
		constexpr auto OperationMode = 0x220; // FNavigationSystemRunMode
		constexpr auto DirtyAreasUpdateFreq = 0x1624; // float
	}

	namespace n_UBrushComponent {
		constexpr auto Brush = 0x488; // UModel*
		constexpr auto BrushBodySetup = 0x490; // UBodySetup*
	}

	namespace n_UAudioCurveSourceComponent {
		constexpr auto CurveSourceBindingName = 0x880; // FName
		constexpr auto CurveSyncOffset = 0x888; // float
	}

	namespace n_UUI_TrafficGoodsSlot {
		constexpr auto MainCanvas = 0x260; // UCanvasPanel*
		constexpr auto MainBorder = 0x268; // UBorder*
		constexpr auto QualityImage = 0x270; // UImage*
		constexpr auto ItemImage = 0x278; // UImage*
		constexpr auto RecycleStatePannel = 0x280; // UCanvasPanel*
		constexpr auto Button_Minus = 0x288; // UButton*
		constexpr auto ItemNumText = 0x290; // UEditableText*
		constexpr auto Button_Add = 0x298; // UButton*
		constexpr auto MarketPriceText = 0x2a0; // UTextBlock*
		constexpr auto SellNameText = 0x2a8; // UTextBlock*
		constexpr auto OwnedNumText = 0x2b0; // UTextBlock*
		constexpr auto SellStateVerticalBox = 0x2b8; // UVerticalBox*
		constexpr auto ItemNameText = 0x2c0; // UTextBlock*
		constexpr auto PriceRatioText = 0x2c8; // UTextBlock*
		constexpr auto ItemStockNumText = 0x2d0; // UTextBlock*
		constexpr auto PriceText = 0x2d8; // UTextBlock*
		constexpr auto QualityImageMap = 0x2e0; // TMap<EItemQuality, FSoftObjectPath>
		constexpr auto SlotNormalBg = 0x330; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotActiveBg = 0x358; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotClickBg = 0x380; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotDisableBg = 0x3a8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UGameCharacterQuestPanel {
		constexpr auto QuestItemTemplate = 0x260; // UGameCharacterQuestItem*
		constexpr auto TopCanvasPanel = 0x268; // UCanvasPanel*
		constexpr auto QuestsPanel = 0x270; // UCanvasPanel*
		constexpr auto QuestListVertical = 0x278; // UVerticalBox*
		constexpr auto CollapsedButton = 0x280; // UButton*
		constexpr auto QuestItemMargin = 0x288; // FMargin
	}

	namespace n_UInterpTrackVectorBase {
		constexpr auto VectorTrack = 0x70; // FInterpCurveVector
		constexpr auto CurveTension = 0x88; // float
	}

	namespace n_UProceduralSphereToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto LatitudeSlices = 0x74; // int32_t
		constexpr auto LongitudeSlices = 0x78; // int32_t
	}

	namespace n_UAITask_MoveTo {
		constexpr auto OnRequestFailed = 0x70; // FMulticastInlineDelegate
		constexpr auto OnMoveFinished = 0x80; // FMulticastInlineDelegate
		constexpr auto MoveRequest = 0x90; // FAIMoveRequest
	}

	namespace n_ABehaviorPointActor {
		constexpr auto BehaviorPointLightComponent = 0x310; // UPointLightComponent*
		constexpr auto PointConfig = 0x318; // TArray<FPointConfig>
	}

	namespace n_UGizmoBoxComponent {
		constexpr auto Origin = 0x4a8; // FVector
		constexpr auto Rotation = 0x4c0; // FQuat
		constexpr auto Dimensions = 0x4d0; // FVector
		constexpr auto LineThickness = 0x4dc; // float
		constexpr auto bRemoveHiddenLines = 0x4e0; // bool
		constexpr auto bEnableAxisFlip = 0x4e1; // bool
	}

	namespace n_UHoleFillStatisticsProperties {
		constexpr auto InitialHoles = 0x60; // FString
		constexpr auto SelectedHoles = 0x70; // FString
		constexpr auto SuccessfulFills = 0x80; // FString
		constexpr auto FailedFills = 0x90; // FString
		constexpr auto RemainingHoles = 0xa0; // FString
	}

	namespace n_UBaseCreateFromSelectedHandleSourceProperties {
		constexpr auto WriteOutputTo = 0x68; // EBaseCreateFromSelectedTargetType
		constexpr auto OutputName = 0x70; // FString
		constexpr auto OutputAsset = 0x80; // FString
	}

	namespace n_UMovieScene3DPathSection {
		constexpr auto TimingCurve = 0x110; // FMovieSceneFloatChannel
		constexpr auto FrontAxisEnum = 0x1b0; // MovieScene3DPathSection_Axis
		constexpr auto UpAxisEnum = 0x1b1; // MovieScene3DPathSection_Axis
		constexpr auto bFollow = 0x1b4; // char : 1
		constexpr auto bReverse = 0x1b4; // char : 1
		constexpr auto bForceUpright = 0x1b4; // char : 1
	}

	namespace n_UPhysicalAnimationComponent {
		constexpr auto StrengthMultiplyer = 0xc0; // float
		constexpr auto SkeletalMeshComponent = 0xc8; // USkeletalMeshComponent*
	}

	namespace n_UParticleModuleTypeDataMesh {
		constexpr auto Mesh = 0x30; // UStaticMesh*
		constexpr auto LODSizeScale = 0x40; // float
		constexpr auto bUseStaticMeshLODs = 0x44; // char : 1
		constexpr auto CastShadows = 0x44; // char : 1
		constexpr auto DoCollisions = 0x44; // char : 1
		constexpr auto MeshAlignment = 0x45; // EMeshScreenAlignment
		constexpr auto bOverrideMaterial = 0x46; // char : 1
		constexpr auto bOverrideDefaultMotionBlurSettings = 0x46; // char : 1
		constexpr auto bEnableMotionBlur = 0x46; // char : 1
		constexpr auto RollPitchYawRange = 0x48; // FRawDistributionVector
		constexpr auto AxisLockOption = 0x90; // EParticleAxisLock
		constexpr auto bCameraFacing = 0x91; // char : 1
		constexpr auto CameraFacingUpAxisOption = 0x92; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x93; // EMeshCameraFacingOptions
		constexpr auto bApplyParticleRotationAsSpin = 0x94; // char : 1
		constexpr auto bFaceCameraDirectionRatherThanPosition = 0x94; // char : 1
		constexpr auto bCollisionsConsiderPartilceSize = 0x94; // char : 1
	}

	namespace n_UMovieSceneVectorTrack {
		constexpr auto NumChannelsUsed = 0xb0; // int32_t
	}

	namespace n_UGeneralAuctionSellPanel {
		constexpr auto ScrollSellGeneralList = 0x2d8; // UScrollBox*
		constexpr auto ScrollMyGeneralList = 0x2e0; // UScrollBox*
		constexpr auto Button_Recall = 0x2e8; // UButton*
		constexpr auto Button_Sell = 0x2f0; // UButton*
		constexpr auto Button_RefreshSellList = 0x2f8; // UButton*
		constexpr auto Button_RefreshMyList = 0x300; // UButton*
		constexpr auto EquipPanel = 0x308; // UN_EquipPanel*
		constexpr auto AttributePanel = 0x310; // UAttributePanel*
		constexpr auto ConditionPanel = 0x318; // UConditionPanel*
		constexpr auto SkillPanel = 0x320; // USkillPanel*
		constexpr auto AttributeButton = 0x328; // UOptionButton*
		constexpr auto ConditionButton = 0x330; // UOptionButton*
		constexpr auto SkillButton = 0x338; // UOptionButton*
		constexpr auto CanvasPanel_Preview = 0x340; // UCanvasPanel*
		constexpr auto TextBlock_GeneralName = 0x348; // UTextBlock*
		constexpr auto TextBlock_GeneralLevel = 0x350; // UTextBlock*
		constexpr auto GeneralQualityImage = 0x358; // UImage*
		constexpr auto GeneralNameBg = 0x360; // UImage*
		constexpr auto GeneralAuctionSellSlot = 0x368; // UGeneralAuctionSellSlot*
		constexpr auto GeneralQuality = 0x370; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto GeneralNameBrush = 0x460; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto GeneralNameColor = 0x500; // FLinearColor [0x6]
		constexpr auto MyGeneralSlotSelected = 0x560; // TWeakObjectPtr<UGeneralAuctionSellSlot>
		constexpr auto SellGeneralSlotSelected = 0x568; // TWeakObjectPtr<UGeneralAuctionSellSlot>
		constexpr auto ParentUI = 0x570; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_USGBattleGamePlayData {
		constexpr auto AllBattleGamePlayData = 0x28; // TArray<FBattleGamePlayData>
	}

	namespace n_UInterpTrack {
		constexpr auto SubTracks = 0x38; // TArray<UInterpTrack*>
		constexpr auto TrackInstClass = 0x48; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x50; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x58; // FString
		constexpr auto bOnePerGroup = 0x68; // char : 1
		constexpr auto bDirGroupOnly = 0x68; // char : 1
		constexpr auto bDisableTrack = 0x68; // char : 1
		constexpr auto bIsSelected = 0x68; // char : 1
		constexpr auto bIsAnimControlTrack = 0x68; // char : 1
		constexpr auto bSubTrackOnly = 0x68; // char : 1
		constexpr auto bVisible = 0x68; // char : 1
		constexpr auto bIsRecording = 0x68; // char : 1
	}

	namespace n_UMaterialExpressionDotProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UUI_AdminItemPanel {
		constexpr auto ScrollBoxItemList = 0x2d8; // UScrollBox*
		constexpr auto SearchTextBoxItem = 0x2e0; // UEditableTextBox*
		constexpr auto ServerAdminItemRowTemplate = 0x2e8; // UUI_ServerAdminItemRow*
		constexpr auto ComboBoxItemQuality = 0x310; // UComboBoxString*
		constexpr auto EditableTextBoxItemNum = 0x318; // UEditableTextBox*
		constexpr auto ScrollBoxBuffList = 0x320; // UScrollBox*
		constexpr auto SearchTextBoxBuff = 0x328; // UEditableTextBox*
	}

	namespace n_UNiagaraSettings {
		constexpr auto DefaultEffectType = 0x38; // FSoftObjectPath
		constexpr auto QualityLevels = 0x50; // TArray<FText>
		constexpr auto ComponentRendererWarningsPerClass = 0x60; // TMap<FString, FText>
		constexpr auto DefaultRenderTargetFormat = 0xb0; // ETextureRenderTargetFormat
		constexpr auto DefaultGridFormat = 0xb1; // ENiagaraGpuBufferFormat
		constexpr auto DefaultEffectTypePtr = 0xb8; // UNiagaraEffectType*
	}

	namespace n_ULenovoQueryOption {
		constexpr auto NormalBackgroundTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverBackgroundTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectedBackgroundTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NormalBackgroundColor = 0x2d8; // FLinearColor
		constexpr auto HoverBackgroundColor = 0x2e8; // FLinearColor
		constexpr auto SelectedBackgroundColor = 0x2f8; // FLinearColor
		constexpr auto BtnBg = 0x338; // UButton*
		constexpr auto ImgBg = 0x340; // UImage*
		constexpr auto TbOption = 0x348; // UTextBlock*
		constexpr auto bSelected = 0x350; // char : 1
		constexpr auto bHovered = 0x350; // char : 1
		constexpr auto BindOptionIndex = 0x354; // int32_t
		constexpr auto BindIndex = 0x358; // int32_t
	}

	namespace n_UEdgeLoopInsertionTool {
		constexpr auto Settings = 0x98; // UEdgeLoopInsertionProperties*
		constexpr auto Preview = 0x300; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UHierarchicalInstancedStaticMeshComponent {
		constexpr auto SortedInstances = 0x5d0; // TArray<int32_t>
		constexpr auto NumBuiltInstances = 0x5e0; // int32_t
		constexpr auto BuiltInstanceBounds = 0x5e8; // FBox
		constexpr auto UnbuiltInstanceBounds = 0x604; // FBox
		constexpr auto UnbuiltInstanceBoundsList = 0x620; // TArray<FBox>
		constexpr auto bEnableDensityScaling = 0x630; // char : 1
		constexpr auto OcclusionLayerNumNodes = 0x638; // int32_t
		constexpr auto CacheMeshExtendedBounds = 0x63c; // FBoxSphereBounds
		constexpr auto bDisableCollision = 0x658; // bool
		constexpr auto InstanceCountToRender = 0x65c; // int32_t
	}

	namespace n_UProceduralBoxToolProperties {
		constexpr auto Height = 0x80; // float
		constexpr auto HeightSubdivisions = 0x84; // int32_t
	}

	namespace n_UGlobalMapFilter {
		constexpr auto FilterName = 0x260; // FText
		constexpr auto FilterType = 0x278; // EGlobalMapFilterType
		constexpr auto CbFilter = 0x290; // UCheckBox*
		constexpr auto TbFilterName = 0x298; // UTextBlock*
		constexpr auto BtnFilter = 0x2a0; // UButton*
	}

	namespace n_AGameModeBase {
		constexpr auto OptionsString = 0x310; // FString
		constexpr auto GameSessionClass = 0x320; // AGameSession*
		constexpr auto GameStateClass = 0x328; // AGameStateBase*
		constexpr auto PlayerControllerClass = 0x330; // APlayerController*
		constexpr auto PlayerStateClass = 0x338; // APlayerState*
		constexpr auto HUDClass = 0x340; // AHUD*
		constexpr auto DefaultPawnClass = 0x348; // APawn*
		constexpr auto SpectatorClass = 0x350; // ASpectatorPawn*
		constexpr auto ReplaySpectatorPlayerControllerClass = 0x358; // APlayerController*
		constexpr auto ServerStatReplicatorClass = 0x360; // AServerStatReplicator*
		constexpr auto GameSession = 0x368; // AGameSession*
		constexpr auto GameState = 0x370; // AGameStateBase*
		constexpr auto ServerStatReplicator = 0x378; // AServerStatReplicator*
		constexpr auto DefaultPlayerName = 0x380; // FText
		constexpr auto bUseSeamlessTravel = 0x398; // char : 1
		constexpr auto bStartPlayersAsSpectators = 0x398; // char : 1
		constexpr auto bPauseable = 0x398; // char : 1
	}

	namespace n_ASG_AnimalVehicleCharacter {
		constexpr auto Armor = 0x3a28; // USGItem*
		constexpr auto Saddle = 0x3a30; // USGItem*
		constexpr auto Flag = 0x3a38; // USGItem*
		constexpr auto FlagImageString = 0x3a40; // FString
		constexpr auto DMI_FlagImage = 0x3a50; // UMaterialInstanceDynamic*
		constexpr auto RT_FlagImage = 0x3a58; // UTextureRenderTarget2D*
		constexpr auto LockTime = 0x3a68; // FDateTime
		constexpr auto AttackArray = 0x3a70; // TArray<FAttackData>
		constexpr auto bCanRideUseWeapon = 0x3a98; // char : 1
		constexpr auto bRiderDrawInteractive = 0x3a98; // char : 1
	}

	namespace n_ASGKongmingLantern {
		constexpr auto MoveSpeed = 0x510; // float
		constexpr auto TraceDistance = 0x514; // float
		constexpr auto RandPitchMin = 0x518; // float
		constexpr auto RandPitchMax = 0x51c; // float
		constexpr auto SyncLocInterval = 0x520; // float
		constexpr auto CurLoc = 0x524; // FVector
		constexpr auto BeginLoc = 0x530; // FVector
		constexpr auto EndLoc = 0x53c; // FVector
		constexpr auto MoveDis = 0x548; // float
		constexpr auto ContainerStructureClass = 0x550; // ASGStructureItemContainer_Crate*
		constexpr auto CreateBaoZangHandle = 0x560; // FTimerHandle
	}

	namespace n_USGGameDataActivity {
		constexpr auto KongmingLanternTable = 0x28; // UDataTable*
		constexpr auto PlayerKongmingLanternOffset = 0x40; // FVector
		constexpr auto PlayerKongmingLanternData = 0x50; // TArray<FKongmingLanternDropData>
	}

	namespace n_ASGStructureT3Basement {
		constexpr auto PreConditionActors = 0x1298; // TArray<ASGGamePlayActor*>
		constexpr auto OccupyPreConditionType = 0x12a8; // EOccupyPreConditionType
		constexpr auto Gate = 0x12b0; // ASGGamePlayActor*
		constexpr auto BaseGate = 0x12b8; // ASGGamePlayActor*
	}

	namespace n_UGameRecordTrack {
		constexpr auto BGBrush = 0x108; // FSlateBrush
		constexpr auto SliderBrush = 0x190; // FSlateBrush
		constexpr auto KeyBGHeight = 0x218; // float
		constexpr auto KeyBGBrush = 0x220; // FSlateBrush
		constexpr auto KeySize = 0x2a8; // FVector2D
		constexpr auto KeyBrush = 0x2b0; // FSlateBrush
		constexpr auto HitKeyBrush = 0x338; // FSlateBrush
		constexpr auto ViewMinSize = 0x3c0; // FVector2D
		constexpr auto TangentBrush = 0x3c8; // FSlateBrush
		constexpr auto MarqueeBrush = 0x450; // FSlateBrush
		constexpr auto OnKeyChanged = 0x4d8; // FMulticastInlineDelegate
		constexpr auto OnEndPlay = 0x4e8; // FMulticastInlineDelegate
		constexpr auto OnSelectKeyChanged = 0x4f8; // FMulticastInlineDelegate
		constexpr auto OnSelectKeyDataChanged = 0x508; // FMulticastInlineDelegate
	}

	namespace n_ASceneEffectProcVolume {
		constexpr auto SceneEffectSpawners = 0x348; // TArray<FSceneEffectSpawnerWrapper>
		constexpr auto bDebugDraw = 0x358; // char : 1
		constexpr auto bDebugNotSpawnInstance = 0x358; // char : 1
		constexpr auto DebugSphereRadius = 0x35c; // float
		constexpr auto DebugDrawColors = 0x360; // TArray<FLinearColor>
		constexpr auto bClearResidualActors = 0x370; // char : 1
		constexpr auto bSpawnInWater = 0x370; // char : 1
		constexpr auto DensityInWater = 0x374; // float
		constexpr auto MaxDistanceToSide = 0x378; // float
		constexpr auto RandomSeed = 0x37c; // int32_t
		constexpr auto InWaterDepth = 0x380; // float
		constexpr auto MinPlaceDepth = 0x384; // float
		constexpr auto SweepUnit = 0x388; // int32_t
		constexpr auto MaxStepCount = 0x38c; // int32_t
		constexpr auto bAverageRandom = 0x390; // char : 1
		constexpr auto MaxRandomCount = 0x394; // int32_t
		constexpr auto bDrawSidePoints = 0x398; // char : 1
		constexpr auto bDrawInWaterBounds = 0x398; // char : 1
		constexpr auto SidePointsDebugDrawInterval = 0x39c; // int32_t
		constexpr auto SidePointsDebugDrawRaduis = 0x3a0; // int32_t
		constexpr auto DirectArrawDebugDrawLength = 0x3a4; // int32_t
		constexpr auto SidePoints = 0x3a8; // TArray<FVector>
		constexpr auto VectorSidePoints = 0x3b8; // TArray<FVector>
		constexpr auto TransInWaters = 0x3c8; // TArray<FTransform>
	}

	namespace n_UComponentDelegateBinding {
		constexpr auto ComponentDelegateBindings = 0x28; // TArray<FBlueprintComponentDelegateBinding>
	}

	namespace n_UCheckBoxWidgetStyle {
		constexpr auto CheckBoxStyle = 0x30; // FCheckBoxStyle
	}

	namespace n_UMaterialExpressionMaterialAttributeLayers {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto ExpressionGUID = 0x48; // FGuid
		constexpr auto Input = 0x58; // FMaterialAttributesInput
		constexpr auto DefaultLayers = 0x70; // FMaterialLayersFunctions
		constexpr auto LayerCallers = 0xb0; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveLayerCallers = 0xc0; // int32_t
		constexpr auto BlendCallers = 0xc8; // TArray<UMaterialExpressionMaterialFunctionCall*>
		constexpr auto NumActiveBlendCallers = 0xd8; // int32_t
		constexpr auto bIsLayerGraphBuilt = 0xdc; // bool
	}

	namespace n_ASGStructureAnimalFarm {
		constexpr auto PutAnimalInMaxNum = 0xf88; // int32_t
		constexpr auto SetPutAnimalMaxNumInterval = 0xf8c; // float
		constexpr auto TooMuchAnimalPercentage = 0xf90; // float
		constexpr auto EnvironmentBadPercentage = 0xf94; // float
		constexpr auto FoodStarvationPercentage = 0xf98; // float
		constexpr auto MoodLackPercentage = 0xf9c; // float
		constexpr auto MoodLackDropFixTable = 0xfa0; // UDataTable*
		constexpr auto AnimalDropMaxCount = 0xfa8; // int32_t
		constexpr auto AnimalFarmConfigs = 0xfb0; // TArray<FAnimalFarmConfig>
		constexpr auto WanderPoints = 0xfc0; // TArray<FTransform>
		constexpr auto SearchInterval = 0xfd0; // float
		constexpr auto SearchRadius = 0xfd4; // float
		constexpr auto DamageCheckDistSquared = 0xfd8; // float
		constexpr auto bIsDebugSearch = 0xfdc; // char : 1
		constexpr auto AnimalFarmData = 0xfe0; // FAnimalFarmData
		constexpr auto MaxStoreFoods = 0x1050; // float
		constexpr auto StoreFoods = 0x1054; // float
		constexpr auto AddStoreFoodTemplate = 0x1058; // TArray<USGItem*>
		constexpr auto WorkingAutoAddFoodMin = 0x1068; // float
		constexpr auto MaxStoreMoods = 0x106c; // float
		constexpr auto StoreMoods = 0x1070; // float
		constexpr auto MaxAnimalFarmRecordCount = 0x1074; // int32_t
		constexpr auto AnimalFarmRecords = 0x1078; // TArray<FAnimalFarmRecord>
		constexpr auto AddWorkerSkillInterval = 0x1088; // float
		constexpr auto bDifferentBisexual = 0x10a0; // char : 1
		constexpr auto MaleNiagaraComponent = 0x10a8; // UNiagaraComponent*
		constexpr auto FemaleNiagaraComponent = 0x10b0; // UNiagaraComponent*
		constexpr auto BoxComponent = 0x10b8; // UBoxComponent*
		constexpr auto ProjectileCheckInterval = 0x10c0; // float
		constexpr auto ProjectileOverlapTimeHandle = 0x10c8; // FTimerHandle
		constexpr auto HitAnimalEffectOffsetZ = 0x10d8; // float
		constexpr auto TraceRaduisOverwrite = 0x10e4; // float
		constexpr auto MaxAnimalSpecies = 0x1100; // int32_t
		constexpr auto bDebugShow = 0x1104; // char : 1
		constexpr auto ShowTraceTime = 0x1108; // float
		constexpr auto AttachedSkeletalMeshComps = 0x1188; // TMap<FGuid, USkeletalMeshComponent*>
		constexpr auto CalcFoodHandle = 0x11d8; // FTimerHandle
		constexpr auto CalcFoodTimerRemaining = 0x11e0; // float
		constexpr auto CalcMoodHandle = 0x11e8; // FTimerHandle
		constexpr auto CalcMoodTimerRemaining = 0x11f0; // float
		constexpr auto CalcDeathHandle = 0x11f8; // FTimerHandle
		constexpr auto CalcDeathTimerRemaining = 0x1200; // float
		constexpr auto CalcBirthHandle = 0x1208; // FTimerHandle
		constexpr auto CalcBirthTimerRemaining = 0x1210; // float
		constexpr auto CalcGrowHandle = 0x1218; // FTimerHandle
		constexpr auto CalcGrowTimerRemaining = 0x1220; // float
		constexpr auto CalcDropHandle = 0x1228; // FTimerHandle
		constexpr auto CalcDropTimerRemaining = 0x1230; // float
		constexpr auto CalcHealthHandle = 0x1238; // FTimerHandle
		constexpr auto CalcHealthTimerRemaining = 0x1240; // float
		constexpr auto CalcCorpseHandle = 0x1248; // FTimerHandle
		constexpr auto CalcTamingSkillTimerRemaining = 0x1250; // float
		constexpr auto CalcTamingSkillHandle = 0x1258; // FTimerHandle
		constexpr auto CurPutAnimalMaxNum = 0x1264; // int32_t
		constexpr auto LastSetPutAnimalMaxNumTime = 0x1268; // FDateTime
	}

	namespace n_ULevelCapture {
		constexpr auto bAutoStartCapture = 0x220; // bool
		constexpr auto PrerequisiteActorId = 0x22c; // FGuid
	}

	namespace n_UWBP_ConnectWaitingDialog_C {
		constexpr auto CircularThrobber_194 = 0x2e0; // UCircularThrobber*
		constexpr auto Image_94 = 0x2e8; // UImage*
	}

	namespace n_UMaterialExpressionSubtract {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UMorphTarget {
		constexpr auto BaseSkelMesh = 0x28; // USkeletalMesh*
	}

	namespace n_ABP_LightningEffect_FarThunderbolt_C {
		constexpr auto UberGraphFrame = 0x6a8; // FPointerToUberGraphFrame
		constexpr auto StrikeSound = 0x6b0; // USoundBase*
		constexpr auto GrowthSoundFar = 0x6b8; // USoundBase*
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend {
		constexpr auto Layers = 0x40; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0x50; // FGuid
	}

	namespace n_USGAudioComponent {
		constexpr auto OverrideStartTime = 0x878; // float
		constexpr auto FadeInDuration = 0x87c; // float
		constexpr auto FadeInVolumeLevel = 0x880; // float
		constexpr auto FadeOutDuration = 0x884; // float
		constexpr auto FadeOutVolumeLevel = 0x888; // float
		constexpr auto FadeCurve = 0x88c; // EAudioFaderCurve
		constexpr auto CurrentPlaybackTime = 0x890; // float
		constexpr auto SGSynthSoundCue = 0x894; // TWeakObjectPtr<USoundCue>
	}

	namespace n_UWidgetAnimationDelegateBinding {
		constexpr auto WidgetAnimationDelegateBindings = 0x28; // TArray<FBlueprintWidgetAnimationDelegateBinding>
	}

	namespace n_UAmbisonicsEncodingSettings {
		constexpr auto AmbisonicsOrder = 0x28; // int32_t
	}

	namespace n_UPlayerInput {
		constexpr auto DebugExecBindings = 0x120; // TArray<FKeyBind>
		constexpr auto InvertedAxis = 0x160; // TArray<FName>
	}

	namespace n_UUI_PasswordConfirmationDialog {
		constexpr auto BtnAccept = 0x2e8; // UButton*
		constexpr auto EtbPassword = 0x2f0; // UEditableTextBox*
		constexpr auto EtbConfirmPassword = 0x2f8; // UEditableTextBox*
		constexpr auto EtbEmail = 0x300; // UEditableTextBox*
		constexpr auto TbTitle = 0x308; // UTextBlock*
		constexpr auto TbContent = 0x310; // UTextBlock*
		constexpr auto TbError = 0x318; // UTextBlock*
		constexpr auto CheckBoxShowPassword = 0x320; // UCheckBox*
	}

	namespace n_AOnlineBeaconClient {
		constexpr auto BeaconOwner = 0x340; // AOnlineBeaconHostObject*
		constexpr auto BeaconConnection = 0x348; // UNetConnection*
		constexpr auto ConnectionState = 0x350; // EBeaconConnectionState
	}

	namespace n_UAISense_Prediction {
		constexpr auto RegisteredEvents = 0x80; // TArray<FAIPredictionEvent>
	}

	namespace n_UTrainRewardSlot {
		constexpr auto UnKnownCountTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto ExpTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto CapitalTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto RewardCountTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ImgBg = 0x300; // UImage*
		constexpr auto AddValueText = 0x308; // UTextBlock*
	}

	namespace n_UBuoyancyComponent {
		constexpr auto Pontoons = 0xc0; // TArray<FSphericalPontoon>
		constexpr auto OnEnteredWaterDelegate = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnExitedWaterDelegate = 0xe0; // FMulticastInlineDelegate
		constexpr auto BuoyancyData = 0xf0; // FBuoyancyData
		constexpr auto CurrentWaterBodies = 0x140; // TArray<AWaterBody*>
		constexpr auto SimulatingComponent = 0x150; // UPrimitiveComponent*
	}

	namespace n_UGuildStoreGeneralPanel {
		constexpr auto BindGuildStore = 0x2d8; // TWeakObjectPtr<ASGStructureGuildStore>
		constexpr auto GuildStoreGeneralItemTemplate = 0x2e0; // UGuildStoreGeneralItem*
		constexpr auto ScrollLevelList = 0x2f0; // UScrollBox*
		constexpr auto ScrollDBList = 0x2f8; // UScrollBox*
		constexpr auto SelectedToPlayerButton = 0x300; // UButton*
		constexpr auto AllToPlayerButton = 0x308; // UButton*
		constexpr auto SelectedToStoreButton = 0x310; // UButton*
		constexpr auto AllToStoreButton = 0x318; // UButton*
		constexpr auto ConfirmGetGeneralUIOverride = 0x320; // UUI_GenericConfirmationDialog*
	}

	namespace n_UGeneralWagesPanel {
		constexpr auto BindGeneralChunkData = 0x260; // FBaseGeneralChunkData
		constexpr auto ParentUI = 0x348; // TWeakObjectPtr<UUI_N_General>
		constexpr auto LeftWagesTimesText = 0x350; // UTextBlock*
		constexpr auto NextUseWagesText = 0x358; // UTextBlock*
		constexpr auto LeftWagesTimes = 0x360; // UTextBlock*
		constexpr auto WagesNeedText = 0x368; // UTextBlock*
		constexpr auto WagesEditText = 0x370; // UEditableText*
		constexpr auto AcceptButton = 0x378; // UButton*
		constexpr auto CancelButton = 0x380; // UButton*
		constexpr auto WagesSlider = 0x388; // USlider*
		constexpr auto MainVertical = 0x390; // UVerticalBox*
		constexpr auto Description = 0x398; // UTextBlock*
		constexpr auto bIsEnoughCapital = 0x3a0; // char : 1
		constexpr auto bTodayCanGiveWages = 0x3a0; // char : 1
		constexpr auto WantGiveWages = 0x3a4; // int32_t
		constexpr auto ToolTipsDescriptionTextWrapDelta = 0x3a8; // float
	}

	namespace n_UMagicLeapMeshTrackerComponent {
		constexpr auto OnMeshTrackerUpdated = 0x210; // FMulticastInlineDelegate
		constexpr auto ScanWorld = 0x220; // bool
		constexpr auto MeshType = 0x221; // EMagicLeapMeshType
		constexpr auto BoundingVolume = 0x228; // UBoxComponent*
		constexpr auto LevelOfDetail = 0x230; // EMagicLeapMeshLOD
		constexpr auto PerimeterOfGapsToFill = 0x234; // float
		constexpr auto Planarize = 0x238; // bool
		constexpr auto DisconnectedSectionArea = 0x23c; // float
		constexpr auto RequestNormals = 0x240; // bool
		constexpr auto RequestVertexConfidence = 0x241; // bool
		constexpr auto VertexColorMode = 0x242; // EMagicLeapMeshVertexColorMode
		constexpr auto BlockVertexColors = 0x248; // TArray<FColor>
		constexpr auto VertexColorFromConfidenceZero = 0x258; // FLinearColor
		constexpr auto VertexColorFromConfidenceOne = 0x268; // FLinearColor
		constexpr auto RemoveOverlappingTriangles = 0x278; // bool
		constexpr auto MRMesh = 0x280; // UMRMeshComponent*
		constexpr auto BricksPerFrame = 0x288; // int32_t
	}

	namespace n_UBTDecorator_IsBBEntryOfClass {
		constexpr auto TestClass = 0x90; // UObject*
	}

	namespace n_USGProjectileMovementComponent {
		constexpr auto bBounceOnlyComputeVelocityZ = 0x1e0; // char : 1
		constexpr auto VelocityBeforeStop = 0x1e4; // FVector
	}

	namespace n_UIpNetDriver {
		constexpr auto LogPortUnreach = 0x760; // char : 1
		constexpr auto AllowPlayerPortUnreach = 0x760; // char : 1
		constexpr auto MaxPortCountToTry = 0x764; // uint32_t
		constexpr auto ServerDesiredSocketReceiveBufferBytes = 0x774; // uint32_t
		constexpr auto ServerDesiredSocketSendBufferBytes = 0x778; // uint32_t
		constexpr auto ClientDesiredSocketReceiveBufferBytes = 0x77c; // uint32_t
		constexpr auto ClientDesiredSocketSendBufferBytes = 0x780; // uint32_t
		constexpr auto MaxSecondsInReceive = 0x788; // double
		constexpr auto NbPacketsBetweenReceiveTimeTest = 0x790; // int32_t
		constexpr auto ResolutionConnectionTimeout = 0x794; // float
	}

	namespace n_UNiagaraComponentPool {
		constexpr auto WorldParticleSystemPools = 0x28; // TMap<UNiagaraSystem*, FNCPool>
	}

	namespace n_UUI_SystemMsgRow {
		constexpr auto ChannelText = 0x260; // UTextBlock*
		constexpr auto MsgVerticalBox = 0x268; // UVerticalBox*
		constexpr auto WidgetWidthParm = 0x270; // int32_t
		constexpr auto MsgFont = 0x278; // FSlateFontInfo
		constexpr auto ChannelNameColorMap = 0x2d0; // TMap<EChatSlotType, FLinearColor>
		constexpr auto WrapAdjustVal = 0x320; // int32_t
	}

	namespace n_UAnimNotifyState_TimedNiagaraEffect {
		constexpr auto Template = 0x30; // UNiagaraSystem*
		constexpr auto SocketName = 0x38; // FName
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto bDestroyAtEnd = 0x58; // bool
	}

	namespace n_UMeshInspectorProperties {
		constexpr auto bWireframe = 0x60; // bool
		constexpr auto bBoundaryEdges = 0x61; // bool
		constexpr auto bBowtieVertices = 0x62; // bool
		constexpr auto bPolygonBorders = 0x63; // bool
		constexpr auto bUVSeams = 0x64; // bool
		constexpr auto bUVBowties = 0x65; // bool
		constexpr auto bNormalSeams = 0x66; // bool
		constexpr auto bNormalVectors = 0x67; // bool
		constexpr auto bTangentVectors = 0x68; // bool
		constexpr auto NormalLength = 0x6c; // float
		constexpr auto TangentLength = 0x70; // float
	}

	namespace n_UStructureInfoHUDSlot {
		constexpr auto TextBlock = 0x260; // UTextBlock*
	}

	namespace n_UNavModifierComponent {
		constexpr auto AreaClass = 0xf0; // UNavArea*
		constexpr auto FailsafeExtent = 0xf8; // FVector
		constexpr auto bIncludeAgentHeight = 0x104; // char : 1
	}

	namespace n_USubmixEffectFilterPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectFilterSettings
	}

	namespace n_AWaterManager {
		constexpr auto NaturalResTextureCenter = 0x310; // FVector
		constexpr auto NaturalResTextureExtent = 0x31c; // FVector
		constexpr auto PersistLevelString = 0x328; // FString
		constexpr auto WaterBlockVolumes = 0x338; // TArray<ANatureWaterBlockVolume*>
		constexpr auto WaterBlockVolumeBoxes = 0x348; // TArray<FBox>
		constexpr auto WaterBox = 0x358; // FBox
		constexpr auto WaterTileCount = 0x374; // FIntPoint
		constexpr auto NaturalResTextureSize = 0x37c; // FIntPoint
		constexpr auto NaturalResTileCount = 0x384; // FIntPoint
	}

	namespace n_UUI_StructureAIAttackLog {
		constexpr auto LogVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto PrePageButton = 0x2e0; // UButton*
		constexpr auto NextPageButton = 0x2e8; // UButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto CloseButton = 0x2f8; // UButton*
		constexpr auto AIAttackLogSlotClass = 0x300; // UUI_StructureAIAttackLogSlot*
		constexpr auto NumPerPage = 0x308; // int32_t
	}

	namespace n_UItemAuctionBuyConfirmPanel {
		constexpr auto EditableTextBox_BuyCount = 0x2d8; // UEditableTextBox*
		constexpr auto Image_Icon = 0x2e0; // UImage*
		constexpr auto TextBlock_Name = 0x2e8; // UTextBlock*
		constexpr auto TextBlock_UnitPrice = 0x2f0; // UTextBlock*
		constexpr auto TextBlock_Price = 0x2f8; // UTextBlock*
		constexpr auto Button_OK = 0x300; // UButton*
		constexpr auto Button_Cancel = 0x308; // UButton*
		constexpr auto GeneralIcon = 0x310; // TSoftObjectPtr<UTexture2D>
		constexpr auto HorseIcon = 0x338; // TSoftObjectPtr<UTexture2D>
		constexpr auto RootUI = 0x360; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_USizeBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x58; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x59; // EVerticalAlignment
	}

	namespace n_UGuildKPILogSlot {
		constexpr auto PointCanvasPanel = 0x260; // UCanvasPanel*
		constexpr auto AddCanvasPanel = 0x268; // UCanvasPanel*
		constexpr auto TimeText = 0x270; // UTextBlock*
		constexpr auto ContentTextBox = 0x278; // UEditableTextBox*
		constexpr auto PointTextBox = 0x280; // UEditableTextBox*
		constexpr auto AddSlotButton = 0x288; // UButton*
		constexpr auto DeleteSlotButton = 0x290; // UButton*
	}

	namespace n_USGSoundEffectSourcePresetChain {
		constexpr auto ApplyEffectConfig = 0x40; // FSoundEffectSourcePresetChainIDArray [0x10]
	}

	namespace n_ULuminARSessionConfig {
		constexpr auto PlanesQuery = 0x110; // FMagicLeapPlanesQuery
		constexpr auto MaxPlaneQueryResults = 0x170; // int32_t
		constexpr auto MinPlaneArea = 0x174; // int32_t
		constexpr auto bArbitraryOrientationPlaneDetection = 0x178; // bool
		constexpr auto PlaneSearchExtents = 0x17c; // FVector
		constexpr auto PlaneQueryFlags = 0x188; // TArray<EMagicLeapPlaneQueryFlags>
		constexpr auto bDiscardZeroExtentPlanes = 0x198; // bool
		constexpr auto bDefaultUseUnreliablePose = 0x199; // bool
	}

	namespace n_UAbilitySystemComponent {
		constexpr auto DefaultStartingData = 0x140; // TArray<FAttributeDefaults>
		constexpr auto SpawnedAttributes = 0x150; // TArray<UAttributeSet*>
		constexpr auto AffectedAnimInstanceTag = 0x160; // FName
		constexpr auto OutgoingDuration = 0x300; // float
		constexpr auto IncomingDuration = 0x304; // float
		constexpr auto ClientDebugStrings = 0x328; // TArray<FString>
		constexpr auto ServerDebugStrings = 0x338; // TArray<FString>
		constexpr auto UserAbilityActivationInhibited = 0x3a0; // bool
		constexpr auto ReplicationProxyEnabled = 0x3a1; // bool
		constexpr auto bSuppressGrantAbility = 0x3a2; // bool
		constexpr auto bSuppressGameplayCues = 0x3a3; // bool
		constexpr auto SpawnedTargetActors = 0x3a8; // TArray<AGameplayAbilityTargetActor*>
		constexpr auto OwnerActor = 0x3e0; // AActor*
		constexpr auto AvatarActor = 0x3e8; // AActor*
		constexpr auto ActivatableAbilities = 0x400; // FGameplayAbilitySpecContainer
		constexpr auto AllReplicatedInstancedAbilities = 0x550; // TArray<UGameplayAbility*>
		constexpr auto RepAnimMontageInfo = 0x768; // FGameplayAbilityRepAnimMontage
		constexpr auto bCachedIsNetSimulated = 0x798; // bool
		constexpr auto bPendingMontageRep = 0x799; // bool
		constexpr auto LocalAnimMontageInfo = 0x7a0; // FGameplayAbilityLocalAnimMontage
		constexpr auto ActiveGameplayEffects = 0x868; // FActiveGameplayEffectsContainer
		constexpr auto ActiveGameplayCues = 0xce0; // FActiveGameplayCueContainer
		constexpr auto MinimalReplicationGameplayCues = 0xe08; // FActiveGameplayCueContainer
		constexpr auto BlockedAbilityBindings = 0x1058; // TArray<char>
		constexpr auto MinimalReplicationTags = 0x1190; // FMinimalReplicationTagCountMap
		constexpr auto ReplicatedPredictionKeyMap = 0x1208; // FReplicatedPredictionKeyMap
	}

	namespace n_USubmixEffectReverbPreset {
		constexpr auto Settings = 0xd0; // FSubmixEffectReverbSettings
	}

	namespace n_UInterpTrackLinearColorProp {
		constexpr auto PropertyName = 0x90; // FName
	}

	namespace n_UParticleModuleCollision {
		constexpr auto DampingFactor = 0x30; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x78; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xc0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xf0; // EParticleCollisionComplete
		constexpr auto CollisionTypes = 0xf8; // TArray<EObjectTypeQuery>
		constexpr auto bApplyPhysics = 0x110; // char : 1
		constexpr auto bIgnoreTriggerVolumes = 0x110; // char : 1
		constexpr auto ParticleMass = 0x118; // FRawDistributionFloat
		constexpr auto DirScalar = 0x148; // float
		constexpr auto bPawnsDoNotDecrementCount = 0x14c; // char : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0x14c; // char : 1
		constexpr auto VerticalFudgeFactor = 0x150; // float
		constexpr auto DelayAmount = 0x158; // FRawDistributionFloat
		constexpr auto bDropDetail = 0x188; // char : 1
		constexpr auto bCollideOnlyIfVisible = 0x188; // char : 1
		constexpr auto bIgnoreSourceActor = 0x188; // char : 1
		constexpr auto MaxCollisionDistance = 0x18c; // float
	}

	namespace n_UTextureLightProfile {
		constexpr auto Brightness = 0x100; // float
		constexpr auto TextureMultiplier = 0x104; // float
	}

	namespace n_UAsyncActionLoadPrimaryAssetClassList {
		constexpr auto Completed = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UPhononOcclusionSourceSettings {
		constexpr auto DirectOcclusionMode = 0x28; // EIplDirectOcclusionMode
		constexpr auto DirectOcclusionMethod = 0x29; // EIplDirectOcclusionMethod
		constexpr auto DirectOcclusionSourceRadius = 0x2c; // float
		constexpr auto DirectAttenuation = 0x30; // bool
		constexpr auto AirAbsorption = 0x31; // bool
	}

	namespace n_UProceduralSphericalBoxToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Subdivisions = 0x74; // int32_t
	}

	namespace n_UWebBrowserAssetManager {
		constexpr auto DefaultMaterial = 0x28; // TSoftObjectPtr<UMaterial>
	}

	namespace n_UDatasmithPointLightComponentTemplate {
		constexpr auto IntensityUnits = 0x30; // ELightUnits
		constexpr auto SourceRadius = 0x34; // float
		constexpr auto SourceLength = 0x38; // float
		constexpr auto AttenuationRadius = 0x3c; // float
	}

	namespace n_UUI_HuangLi {
		constexpr auto MenuHorizontalBox = 0x2d8; // UHorizontalBox*
		constexpr auto HuangLiMainPanel = 0x2e0; // UHuangLiMainPanel*
		constexpr auto HuangLiAllEffectsPanel = 0x2e8; // UHuangLiAllEffectsPanel*
		constexpr auto HuangLiEffectPanel = 0x2f0; // UHuangLiEffectPanel*
		constexpr auto MenuSlotClass = 0x2f8; // UHuangLiMenuSlot*
		constexpr auto SlotsName = 0x300; // FText [0x4]
	}

	namespace n_UUI_InteractiveRadialMenu {
		constexpr auto IndexRaw = 0x2d8; // float
		constexpr auto bInDeadzone = 0x2dc; // char : 1
		constexpr auto Index = 0x2e0; // int32_t
		constexpr auto CurrentInput = 0x2e4; // FVector2D
		constexpr auto ItemOffsetRadius = 0x300; // float
		constexpr auto MouseDeadZone = 0x304; // float
		constexpr auto JoystickDeadzone = 0x308; // float
		constexpr auto Segments = 0x30c; // int32_t
		constexpr auto bAutoRotateForUp = 0x310; // char : 1
		constexpr auto bAllowResizing = 0x310; // char : 1
		constexpr auto SelectionChanged = 0x318; // FMulticastInlineDelegate
		constexpr auto MouseDirecct = 0x328; // UImage*
		constexpr auto RadiusDebug = 0x330; // UImage*
		constexpr auto RootOverlay = 0x338; // UOverlay*
	}

	namespace n_UParticleModuleTypeDataBeam2 {
		constexpr auto BeamMethod = 0x30; // EBeam2Method
		constexpr auto TextureTile = 0x34; // int32_t
		constexpr auto TextureTileDistance = 0x38; // float
		constexpr auto Sheets = 0x3c; // int32_t
		constexpr auto MaxBeamCount = 0x40; // int32_t
		constexpr auto Speed = 0x44; // float
		constexpr auto InterpolationPoints = 0x48; // int32_t
		constexpr auto bAlwaysOn = 0x4c; // char : 1
		constexpr auto UpVectorStepSize = 0x50; // int32_t
		constexpr auto BranchParentName = 0x54; // FName
		constexpr auto Distance = 0x60; // FRawDistributionFloat
		constexpr auto TaperMethod = 0x90; // EBeamTaperMethod
		constexpr auto TaperFactor = 0x98; // FRawDistributionFloat
		constexpr auto TaperScale = 0xc8; // FRawDistributionFloat
		constexpr auto RenderGeometry = 0xf8; // char : 1
		constexpr auto RenderDirectLine = 0xf8; // char : 1
		constexpr auto RenderLines = 0xf8; // char : 1
		constexpr auto RenderTessellation = 0xf8; // char : 1
	}

	namespace n_UWeldMeshEdgesTool {
		constexpr auto Tolerance = 0x88; // float
		constexpr auto bOnlyUnique = 0x8c; // bool
	}

	namespace n_UGameMapsSettings {
		constexpr auto LocalMapOptions = 0x28; // FString
		constexpr auto TransitionMap = 0x38; // FSoftObjectPath
		constexpr auto bUseSplitscreen = 0x50; // bool
		constexpr auto TwoPlayerSplitscreenLayout = 0x51; // ETwoPlayerSplitScreenType
		constexpr auto ThreePlayerSplitscreenLayout = 0x52; // EThreePlayerSplitScreenType
		constexpr auto FourPlayerSplitscreenLayout = 0x53; // EFourPlayerSplitScreenType
		constexpr auto bOffsetPlayerGamepadIds = 0x54; // bool
		constexpr auto GameInstanceClass = 0x58; // FSoftClassPath
		constexpr auto GameDefaultMap = 0x70; // FSoftObjectPath
		constexpr auto ServerDefaultMap = 0x88; // FSoftObjectPath
		constexpr auto GlobalDefaultGameMode = 0xa0; // FSoftClassPath
		constexpr auto GlobalDefaultServerGameMode = 0xb8; // FSoftClassPath
		constexpr auto GameModeMapPrefixes = 0xd0; // TArray<FGameModeName>
		constexpr auto GameModeClassAliases = 0xe0; // TArray<FGameModeName>
	}

	namespace n_AGlobalMapActor {
		constexpr auto GlobalMapWidget = 0x320; // UWidgetComponent*
		constexpr auto GlobalMapActorID = 0x328; // int32_t
		constexpr auto ActorType = 0x32c; // EGlobalMapActorType
		constexpr auto IconShowDistance = 0x330; // FVector2D
		constexpr auto TipsShowDistance = 0x338; // FVector2D
		constexpr auto GroupTipsShowDistance = 0x340; // FVector2D
		constexpr auto bDisplayName = 0x348; // char : 1
		constexpr auto ShowNameDistance = 0x34c; // FVector2D
		constexpr auto GlobalMapActorTipsTemplate = 0x358; // USGToolTipWidget*
		constexpr auto ActorWidget = 0x360; // UGlobalMapActorWidget*
		constexpr auto bEnable = 0x368; // char : 1
		constexpr auto bHovered = 0x368; // char : 1
		constexpr auto bSelected = 0x368; // char : 1
		constexpr auto bAllianceOccupied = 0x368; // char : 1
		constexpr auto bGuildOccupied = 0x368; // char : 1
		constexpr auto bShowTips = 0x368; // char : 1
		constexpr auto bShowGroupTips = 0x368; // char : 1
		constexpr auto bShowName = 0x368; // char : 1
		constexpr auto BindGameServerInfoIndexs = 0x370; // TArray<int32_t>
		constexpr auto BindOfficalSealInfos = 0x380; // TArray<FOfficalSealInfo>
		constexpr auto ParentGlobalMapActors = 0x390; // TArray<AGlobalMapActor*>
		constexpr auto ChildGlobalMapActors = 0x3a0; // TArray<AGlobalMapActor*>
		constexpr auto SGWorldSettings = 0x3b0; // ASGWorldSettings*
		constexpr auto CurCameraDistance = 0x3b8; // float
		constexpr auto LastCameraDistance = 0x3bc; // float
	}

	namespace n_ASGStructureAnimalCage {
		constexpr auto PutAnimalInMaxNum = 0xb98; // int32_t
		constexpr auto AnimalCofigs = 0xba0; // TArray<FAnimalCageConfig>
		constexpr auto AttachSocketNames = 0xbb0; // TArray<FName>
		constexpr auto SearchInterval = 0xbc0; // float
		constexpr auto SearchRadius = 0xbc4; // float
		constexpr auto bIsDebugSearch = 0xbc8; // char : 1
		constexpr auto CalcEscapeInterval = 0xbcc; // float
		constexpr auto InCageAnimalDatas = 0xbd0; // TArray<FAnimalCageData>
		constexpr auto AttachedSkeletalMeshComps = 0xc08; // TArray<USkeletalMeshComponent*>
		constexpr auto CageCalcEscapeHandle = 0xc18; // FTimerHandle
	}

	namespace n_UUI_SetGuildAuthority {
		constexpr auto AuthorityCanvasPanel = 0x2d8; // UCanvasPanel*
		constexpr auto ExitButton = 0x2e0; // UButton*
		constexpr auto AuthorityGridCols = 0x2e8; // int32_t
		constexpr auto GuildAuthoritySlotClass = 0x2f0; // UGuildAuthoritySlot*
		constexpr auto AuthorityShowList = 0x2f8; // TArray<FGuildAuthorityShow>
		constexpr auto ColumnDistance = 0x308; // float
		constexpr auto RowDistance = 0x30c; // float
		constexpr auto AuthoritySlotSize = 0x310; // FVector2D
	}

	namespace n_UDisplaceMeshDirectionalFilterProperties {
		constexpr auto bEnableFilter = 0x60; // bool
		constexpr auto FilterDirection = 0x64; // FVector
		constexpr auto FilterWidth = 0x70; // float
	}

	namespace n_UZhanLingSlot {
		constexpr auto NameText = 0x260; // UTextBlock*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto TitleText = 0x270; // UTextBlock*
		constexpr auto GroupText = 0x278; // UTextBlock*
		constexpr auto ZhanLingTextBox = 0x280; // UEditableTextBox*
		constexpr auto ZhanLingText = 0x288; // UTextBlock*
	}

	namespace n_USGAchievement {
		constexpr auto UnaccomplishedIconTexture = 0x50; // TSoftObjectPtr<UTexture2D>
		constexpr auto AccomplishedIconTexture = 0x78; // TSoftObjectPtr<UTexture2D>
		constexpr auto Name = 0xa0; // FText
		constexpr auto Description = 0xb8; // FText
		constexpr auto AchievementType = 0xd0; // FString
	}

	namespace n_UClothConfigNv {
		constexpr auto ClothingWindMethod = 0x28; // EClothingWindMethodNv
		constexpr auto VerticalConstraint = 0x2c; // FClothConstraintSetupNv
		constexpr auto HorizontalConstraint = 0x3c; // FClothConstraintSetupNv
		constexpr auto BendConstraint = 0x4c; // FClothConstraintSetupNv
		constexpr auto ShearConstraint = 0x5c; // FClothConstraintSetupNv
		constexpr auto SelfCollisionRadius = 0x6c; // float
		constexpr auto SelfCollisionStiffness = 0x70; // float
		constexpr auto SelfCollisionCullScale = 0x74; // float
		constexpr auto Damping = 0x78; // FVector
		constexpr auto Friction = 0x84; // float
		constexpr auto WindDragCoefficient = 0x88; // float
		constexpr auto WindLiftCoefficient = 0x8c; // float
		constexpr auto LinearDrag = 0x90; // FVector
		constexpr auto AngularDrag = 0x9c; // FVector
		constexpr auto LinearInertiaScale = 0xa8; // FVector
		constexpr auto AngularInertiaScale = 0xb4; // FVector
		constexpr auto CentrifugalInertiaScale = 0xc0; // FVector
		constexpr auto SolverFrequency = 0xcc; // float
		constexpr auto StiffnessFrequency = 0xd0; // float
		constexpr auto GravityScale = 0xd4; // float
		constexpr auto GravityOverride = 0xd8; // FVector
		constexpr auto bUseGravityOverride = 0xe4; // bool
		constexpr auto TetherStiffness = 0xe8; // float
		constexpr auto TetherLimit = 0xec; // float
		constexpr auto CollisionThickness = 0xf0; // float
		constexpr auto AnimDriveSpringStiffness = 0xf4; // float
		constexpr auto AnimDriveDamperStiffness = 0xf8; // float
		constexpr auto WindMethod = 0xfc; // EClothingWindMethod_Legacy
		constexpr auto VerticalConstraintConfig = 0x100; // FClothConstraintSetup_Legacy
		constexpr auto HorizontalConstraintConfig = 0x110; // FClothConstraintSetup_Legacy
		constexpr auto BendConstraintConfig = 0x120; // FClothConstraintSetup_Legacy
		constexpr auto ShearConstraintConfig = 0x130; // FClothConstraintSetup_Legacy
	}

	namespace n_UQuitMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UN_ItemTips {
		constexpr auto MainCanvas = 0x288; // UCanvasPanel*
		constexpr auto ItemDetailPanel = 0x290; // UCanvasPanel*
		constexpr auto CraftPanelTips = 0x298; // UN_CraftPanelTips*
		constexpr auto ImgIcon = 0x2a0; // UImage*
		constexpr auto TbName = 0x2a8; // UTextBlock*
		constexpr auto TbWeaponType = 0x2b0; // UTextBlock*
		constexpr auto QualityItem = 0x2b8; // UToolTipsItem*
		constexpr auto NormalDetailVb = 0x2c0; // UVerticalBox*
		constexpr auto NormalDetailText = 0x2c8; // UTextBlock*
		constexpr auto AdditionDetailVb = 0x2d0; // UVerticalBox*
		constexpr auto AdditionDetailText = 0x2d8; // UTextBlock*
		constexpr auto RequireDetailVb = 0x2e0; // UVerticalBox*
		constexpr auto RequireDetailText = 0x2e8; // UTextBlock*
		constexpr auto PunishDetailVb = 0x2f0; // UVerticalBox*
		constexpr auto PunishDetailText = 0x2f8; // UTextBlock*
		constexpr auto DescriptionItem = 0x300; // UToolTipsItem*
		constexpr auto QualityBorder = 0x308; // UBorder*
		constexpr auto VbBase = 0x310; // UVerticalBox*
		constexpr auto NorAddDivisionImage = 0x318; // UImage*
		constexpr auto AddReqDivisionImage = 0x320; // UImage*
		constexpr auto ReqPunDivisionImage = 0x328; // UImage*
		constexpr auto QualityColor = 0x330; // FLinearColor [0x7]
		constexpr auto QualityBorderColor = 0x3a0; // FSlateBrush [0x7]
		constexpr auto StatusItemTemplate = 0x758; // UToolTipsItem*
		constexpr auto TipsItemTemplate = 0x760; // UToolTipsItem*
		constexpr auto DamageTipsItemTemplate = 0x768; // UToolTipsItem*
		constexpr auto FoodBoxItemTemplate = 0x770; // UToolTipsItem*
		constexpr auto ItemTypeToTipsType = 0x778; // TMap<EItemTipsItemType, FTipsTypes>
		constexpr auto ItemTypeToStatusType = 0x7c8; // TMap<EItemTipsItemType, FTipsTypes>
		constexpr auto CurrentTipsType = 0x818; // EItemTipsItemType
		constexpr auto WeaponSkillTypeText = 0x828; // FText [0x8]
		constexpr auto WeaponTypeText = 0x8e8; // FText [0xd]
		constexpr auto AmmoTypeText = 0xa20; // FText [0xd]
		constexpr auto BindItem = 0xb58; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventorySlot = 0xb60; // UN_InventorySlot*
		constexpr auto ToolTipsDescriptionTextWrapDelta = 0xb6c; // float
	}

	namespace n_UNiagaraDataInterfaceArrayFloat {
		constexpr auto FloatData = 0x50; // TArray<float>
	}

	namespace n_UGuanAiBattleInfoSlot {
		constexpr auto TbName = 0x2d8; // UTextBlock*
		constexpr auto TbOwnerGuildName = 0x2e0; // UTextBlock*
		constexpr auto TbAttackGuildName = 0x2e8; // UTextBlock*
		constexpr auto TbPlayerNum = 0x2f0; // UTextBlock*
		constexpr auto TbProgress = 0x2f8; // UTextBlock*
		constexpr auto TbResult = 0x300; // UTextBlock*
		constexpr auto TbOverTime = 0x308; // UTextBlock*
		constexpr auto GuanAiId = 0x310; // int32_t
	}

	namespace n_UParticleModuleColorScaleOverLife {
		constexpr auto ColorScaleOverLife = 0x30; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x78; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xa8; // char : 1
	}

	namespace n_UInputKeySelector {
		constexpr auto WidgetStyle = 0x108; // FButtonStyle
		constexpr auto TextStyle = 0x380; // FTextBlockStyle
		constexpr auto SelectedKey = 0x5f0; // FInputChord
		constexpr auto Font = 0x610; // FSlateFontInfo
		constexpr auto Margin = 0x668; // FMargin
		constexpr auto ColorAndOpacity = 0x678; // FLinearColor
		constexpr auto KeySelectionText = 0x688; // FText
		constexpr auto NoKeySpecifiedText = 0x6a0; // FText
		constexpr auto bAllowModifierKeys = 0x6b8; // bool
		constexpr auto bAllowGamepadKeys = 0x6b9; // bool
		constexpr auto EscapeKeys = 0x6c0; // TArray<FKey>
		constexpr auto OnKeySelected = 0x6d0; // FMulticastInlineDelegate
		constexpr auto OnIsSelectingKeyChanged = 0x6e0; // FMulticastInlineDelegate
	}

	namespace n_UEditNormalsOperatorFactory {
		constexpr auto Tool = 0x30; // UEditNormalsTool*
	}

	namespace n_UMagicLeapTouchpadGesturesComponent {
		constexpr auto OnTouchpadGestureStart = 0xc8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureContinue = 0xd8; // FMulticastInlineDelegate
		constexpr auto OnTouchpadGestureEnd = 0xe8; // FMulticastInlineDelegate
	}

	namespace n_UGameHpBar {
		constexpr auto HPProgressBarName = 0x260; // FName
		constexpr auto HPImageName = 0x268; // FName
		constexpr auto MaxHPLossImageName = 0x270; // FName
		constexpr auto HPGridImageName = 0x278; // FName
		constexpr auto WillDeadProgressBarName = 0x280; // FName
		constexpr auto HPMaterial = 0x288; // UMaterialInterface*
		constexpr auto HPGridMaterial = 0x290; // UMaterialInterface*
		constexpr auto PbHPMinPercent = 0x298; // float
		constexpr auto PbHPMaxPercent = 0x29c; // float
		constexpr auto bShowWillDead = 0x2a0; // char : 1
		constexpr auto bShowMaxHPLoss = 0x2a0; // char : 1
		constexpr auto ImgHPFriendHPColor = 0x2a4; // FLinearColor
		constexpr auto ImgHPEnemyHPColor = 0x2b4; // FLinearColor
		constexpr auto ImgMaxHPLossFriendHPColor = 0x2c4; // FLinearColor
		constexpr auto ImgMaxHPLossEnemyHPColor = 0x2d4; // FLinearColor
		constexpr auto bIsFriend = 0x2e4; // char : 1
		constexpr auto DynamicHPMat = 0x340; // UMaterialInstanceDynamic*
		constexpr auto DynamicHPGridMat = 0x348; // UMaterialInstanceDynamic*
	}

	namespace n_UOptionButton {
		constexpr auto ButtonSizeBox = 0x260; // USizeBox*
		constexpr auto BindParentUI = 0x268; // USGUI*
		constexpr auto ButtonBorder = 0x270; // UBorder*
		constexpr auto ButtonImage = 0x278; // UImage*
		constexpr auto TextButton = 0x280; // UTextBlock*
		constexpr auto TextButtonSizeBoxWrap = 0x288; // USizeBox*
		constexpr auto NormalTextColor = 0x290; // FLinearColor
		constexpr auto ActiveTextColor = 0x2a0; // FLinearColor
		constexpr auto bActive = 0x2b0; // char : 1
		constexpr auto ButtonNormal = 0x2b8; // FSlateBrush
		constexpr auto ButtonHover = 0x340; // FSlateBrush
		constexpr auto ButtonActive = 0x3c8; // FSlateBrush
		constexpr auto ButtonImageVisiblity = 0x450; // ESlateVisibility
		constexpr auto ButtonImageNormal = 0x458; // FSlateBrush
		constexpr auto ButtonImageActive = 0x4e0; // FSlateBrush
		constexpr auto bToggleActive = 0x568; // char : 1
		constexpr auto bAutoWrap = 0x580; // char : 1
		constexpr auto OverrideWrapTextAt = 0x584; // float
		constexpr auto TextFont = 0x588; // FSlateFontInfo
		constexpr auto ButtonSize = 0x5e0; // FVector2D
		constexpr auto TextButtonPadding = 0x5f0; // FVector4
		constexpr auto IssuesImage = 0x600; // UImage*
		constexpr auto bShowTips = 0x608; // char : 1
		constexpr auto TipsText = 0x610; // FText
	}

	namespace n_Alogin_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
		constexpr auto CameraActor_0_ExecuteUbergraph_login_RefProperty = 0x320; // ACameraActor*
	}

	namespace n_UAISense {
		constexpr auto DefaultExpirationAge = 0x28; // float
		constexpr auto NotifyType = 0x2c; // EAISenseNotifyType
		constexpr auto bWantsNewPawnNotification = 0x30; // char : 1
		constexpr auto bAutoRegisterAllPawnsAsSources = 0x30; // char : 1
		constexpr auto PerceptionSystemInstance = 0x38; // UAIPerceptionSystem*
	}

	namespace n_AActor {
		constexpr auto PrimaryActorTick = 0x30; // FActorTickFunction
		constexpr auto bNetTemporary = 0x60; // char : 1
		constexpr auto bNetStartup = 0x60; // char : 1
		constexpr auto bOnlyRelevantToOwner = 0x60; // char : 1
		constexpr auto bAlwaysRelevant = 0x60; // char : 1
		constexpr auto bReplicateMovement = 0x60; // char : 1
		constexpr auto bHidden = 0x60; // char : 1
		constexpr auto bTearOff = 0x60; // char : 1
		constexpr auto bExchangedRoles = 0x60; // char : 1
		constexpr auto bNetLoadOnClient = 0x61; // char : 1
		constexpr auto bNetUseOwnerRelevancy = 0x61; // char : 1
		constexpr auto bRelevantForNetworkReplays = 0x61; // char : 1
		constexpr auto bRelevantForLevelBounds = 0x61; // char : 1
		constexpr auto bReplayRewindable = 0x61; // char : 1
		constexpr auto bAllowTickBeforeBeginPlay = 0x61; // char : 1
		constexpr auto bAutoDestroyWhenFinished = 0x61; // char : 1
		constexpr auto bCanBeDamaged = 0x61; // char : 1
		constexpr auto bBlockInput = 0x62; // char : 1
		constexpr auto bCollideWhenPlacing = 0x62; // char : 1
		constexpr auto bFindCameraComponentWhenViewTarget = 0x62; // char : 1
		constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x62; // char : 1
		constexpr auto bIgnoresOriginShifting = 0x62; // char : 1
		constexpr auto bEnableAutoLODGeneration = 0x62; // char : 1
		constexpr auto bIsEditorOnlyActor = 0x62; // char : 1
		constexpr auto bActorSeamlessTraveled = 0x62; // char : 1
		constexpr auto bReplicates = 0x63; // char : 1
		constexpr auto bCanBeInCluster = 0x63; // char : 1
		constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x63; // char : 1
		constexpr auto bActorEnableCollision = 0x64; // char : 1
		constexpr auto bActorIsBeingDestroyed = 0x64; // char : 1
		constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x65; // EActorUpdateOverlapsMethod
		constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x66; // EActorUpdateOverlapsMethod
		constexpr auto RemoteRole = 0x67; // ENetRole
		constexpr auto ReplicatedMovement = 0x68; // FRepMovement
		constexpr auto InitialLifeSpan = 0x9c; // float
		constexpr auto CustomTimeDilation = 0xa0; // float
		constexpr auto AttachmentReplication = 0xb0; // FRepAttachment
		constexpr auto Owner = 0xf0; // AActor*
		constexpr auto NetDriverName = 0xf8; // FName
		constexpr auto Role = 0x100; // ENetRole
		constexpr auto NetDormancy = 0x101; // ENetDormancy
		constexpr auto SpawnCollisionHandlingMethod = 0x102; // ESpawnActorCollisionHandlingMethod
		constexpr auto AutoReceiveInput = 0x103; // EAutoReceiveInput
		constexpr auto InputPriority = 0x104; // int32_t
		constexpr auto InputComponent = 0x108; // UInputComponent*
		constexpr auto NetCullDistanceSquared = 0x110; // float
		constexpr auto NetTag = 0x114; // int32_t
		constexpr auto NetUpdateFrequency = 0x118; // float
		constexpr auto MinNetUpdateFrequency = 0x11c; // float
		constexpr auto NetPriority = 0x120; // float
		constexpr auto Instigator = 0x130; // APawn*
		constexpr auto Children = 0x138; // TArray<AActor*>
		constexpr auto RootComponent = 0x150; // USceneComponent*
		constexpr auto ControllingMatineeActors = 0x158; // TArray<AMatineeActor*>
		constexpr auto Layers = 0x170; // TArray<FName>
		constexpr auto ParentComponent = 0x180; // TWeakObjectPtr<UChildActorComponent>
		constexpr auto Tags = 0x190; // TArray<FName>
		constexpr auto OnTakeAnyDamage = 0x1a0; // FMulticastSparseDelegate
		constexpr auto OnTakePointDamage = 0x1a1; // FMulticastSparseDelegate
		constexpr auto OnTakeRadialDamage = 0x1a2; // FMulticastSparseDelegate
		constexpr auto OnActorBeginOverlap = 0x1a3; // FMulticastSparseDelegate
		constexpr auto OnActorEndOverlap = 0x1a4; // FMulticastSparseDelegate
		constexpr auto OnBeginCursorOver = 0x1f8; // FMulticastSparseDelegate
		constexpr auto OnEndCursorOver = 0x1f9; // FMulticastSparseDelegate
		constexpr auto OnClicked = 0x1fa; // FMulticastSparseDelegate
		constexpr auto OnReleased = 0x1fb; // FMulticastSparseDelegate
		constexpr auto OnInputTouchBegin = 0x1fc; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnd = 0x1fd; // FMulticastSparseDelegate
		constexpr auto OnInputTouchEnter = 0x1fe; // FMulticastSparseDelegate
		constexpr auto OnInputTouchLeave = 0x1ff; // FMulticastSparseDelegate
		constexpr auto OnActorHit = 0x200; // FMulticastSparseDelegate
		constexpr auto OnDestroyed = 0x201; // FMulticastSparseDelegate
		constexpr auto OnEndPlay = 0x202; // FMulticastSparseDelegate
		constexpr auto InstanceComponents = 0x268; // TArray<UActorComponent*>
		constexpr auto BlueprintCreatedComponents = 0x278; // TArray<UActorComponent*>
		constexpr auto bAllowInteractive = 0x2c0; // char : 1
		constexpr auto bDSDestroyDirectly = 0x2c0; // char : 1
		constexpr auto bAllowSaving = 0x2c0; // char : 1
		constexpr auto bUseSceneObjectsManager = 0x2c0; // char : 1
		constexpr auto bUseSceneObjectsManagerOnClient = 0x2c0; // char : 1
		constexpr auto SceneObjectsManagerMask = 0x2d0; // int32_t
		constexpr auto SceneObjectsManagerRadius = 0x2d4; // float
		constexpr auto GenericTeamId = 0x2d8; // char
		constexpr auto ActorOwnerGuid = 0x2dc; // FGuid
		constexpr auto GuildOwnerGuid = 0x2ec; // FGuid
		constexpr auto AllianceOwnerGuid = 0x2fc; // FGuid
	}

	namespace n_ANatureWeather {
		constexpr auto EnableRainParticle = 0x318; // bool
		constexpr auto RainParticleSpawnCount = 0x31c; // float
		constexpr auto RainParticleDirection = 0x320; // FVector
		constexpr auto RainParticle = 0x330; // UParticleSystem*
		constexpr auto RainParticleMat = 0x338; // UMaterialInterface*
		constexpr auto Component = 0x340; // UNatureWeatherComponent*
		constexpr auto SceneCaptureComp = 0x348; // USceneCaptureComponent2D*
	}

	namespace n_ACameraRig_Rail {
		constexpr auto CurrentPositionOnRail = 0x310; // float
		constexpr auto bLockOrientationToRail = 0x314; // bool
		constexpr auto TransformComponent = 0x318; // USceneComponent*
		constexpr auto RailSplineComponent = 0x320; // USplineComponent*
		constexpr auto RailCameraMount = 0x328; // USceneComponent*
	}

	namespace n_USoundNodeSynthWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto PitchSemiTones = 0x70; // float
		constexpr auto bLooping = 0x74; // char : 1
		constexpr auto GroupName = 0x78; // FName
		constexpr auto WaveTag = 0x80; // FName
		constexpr auto ReleaseTime = 0x88; // int64_t
	}

	namespace n_ASwitchActor {
		constexpr auto SceneComponent = 0x328; // USceneComponent*
		constexpr auto LastSelectedOption = 0x330; // int32_t
	}

	namespace n_UStableFeedPanel {
		constexpr auto StableFeedSlotTemplate = 0x260; // UStableFeedSlot*
		constexpr auto EmptySlotTemplate = 0x268; // UUserWidget*
		constexpr auto StableSelectTrainerTemplate = 0x270; // UUI_StableSelectTrainer*
		constexpr auto TrainRewardUITemplate = 0x278; // UUI_TrainReward*
		constexpr auto MateFailedTexts = 0x280; // TArray<FText>
		constexpr auto PageMaxNum = 0x290; // int32_t
		constexpr auto LastPageBtn = 0x298; // UButton*
		constexpr auto CurPageText = 0x2a0; // UTextBlock*
		constexpr auto MaxPageText = 0x2a8; // UTextBlock*
		constexpr auto NextPageBtn = 0x2b0; // UButton*
		constexpr auto NumText = 0x2b8; // UTextBlock*
		constexpr auto SlotVerticalBox = 0x2c0; // UVerticalBox*
		constexpr auto MateBtn = 0x2c8; // UOptionButton*
		constexpr auto AddLifeBtn = 0x2d0; // UButton*
		constexpr auto StopRestBtn = 0x2d8; // UButton*
		constexpr auto TrainBtn = 0x2e0; // UButton*
		constexpr auto StableFeedSlotList = 0x478; // TArray<UStableFeedSlot*>
		constexpr auto StableEmptySlotList = 0x488; // TArray<UUserWidget*>
	}

	namespace n_URetainerBox {
		constexpr auto bRetainRender = 0x120; // bool
		constexpr auto RenderOnInvalidation = 0x121; // bool
		constexpr auto RenderOnPhase = 0x122; // bool
		constexpr auto Phase = 0x124; // int32_t
		constexpr auto PhaseCount = 0x128; // int32_t
		constexpr auto EffectMaterial = 0x130; // UMaterialInterface*
		constexpr auto TextureParameter = 0x138; // FName
	}

	namespace n_UDistributionVectorParameterBase {
		constexpr auto ParameterName = 0x50; // FName
		constexpr auto MinInput = 0x58; // FVector
		constexpr auto MaxInput = 0x64; // FVector
		constexpr auto MinOutput = 0x70; // FVector
		constexpr auto MaxOutput = 0x7c; // FVector
		constexpr auto ParamModes = 0x88; // DistributionParamMode [0x3]
	}

	namespace n_UMaterialExpressionCollectionParameter {
		constexpr auto Collection = 0x40; // UMaterialParameterCollection*
		constexpr auto ParameterName = 0x48; // FName
		constexpr auto ParameterId = 0x50; // FGuid
	}

	namespace n_UProgressWidgetStyle {
		constexpr auto ProgressBarStyle = 0x30; // FProgressBarStyle
	}

	namespace n_UUI_RadioButtonView {
		constexpr auto RadioButtonMap = 0x260; // TMap<FString, UUI_RadioButton*>
		constexpr auto OnRadioButtonViewButtonPressed = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnRadioButtonViewButtonReleased = 0x2c0; // FMulticastInlineDelegate
		constexpr auto DefaultActiveIndex = 0x2d0; // int32_t
		constexpr auto ActiveRadioButton = 0x2d8; // UUI_RadioButton*
		constexpr auto RadioButtonPanel = 0x2e0; // UPanelWidget*
	}

	namespace n_UMeshVertexSculptTool {
		constexpr auto SculptProperties = 0x9d8; // UVertexBrushSculptProperties*
		constexpr auto DynamicMeshComponent = 0x9e0; // USimpleDynamicMeshComponent*
	}

	namespace n_UAndroidPermissionCallbackProxy {
		constexpr auto OnPermissionsGrantedDynamicDelegate = 0x28; // FMulticastInlineDelegate
	}

	namespace n_UFlagImageTips {
		constexpr auto TextName = 0x288; // UTextBlock*
		constexpr auto RequirementList = 0x290; // UVerticalBox*
		constexpr auto ResourceItemTempalte = 0x298; // UFlagImageTipSlot*
		constexpr auto BindImageSlotWidget = 0x2a0; // TWeakObjectPtr<USelectWidgetSlot>
		constexpr auto BindInventory = 0x2a8; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_UGuildStoreSettingPanel {
		constexpr auto LeftVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto RightVerticalBox = 0x2e0; // UVerticalBox*
		constexpr auto PrePageButton = 0x2e8; // UButton*
		constexpr auto NextPageButton = 0x2f0; // UButton*
		constexpr auto ShowPageText = 0x2f8; // UTextBlock*
		constexpr auto SaveButton = 0x300; // UButton*
		constexpr auto GuildStoreItemPriceSlotClass = 0x308; // UGuildStoreItemPriceSlot*
		constexpr auto ConfirmSaveUIOverride = 0x310; // UUI_GenericConfirmationDialog*
		constexpr auto NumPerPage = 0x318; // int32_t
	}

	namespace n_UStructureCageInfoHUD {
		constexpr auto CageInfoHUDSlotTemplate = 0x360; // UCageInfoHUDSlot*
		constexpr auto CageCanvasPanel = 0x368; // UCanvasPanel*
		constexpr auto CageInfoVerticalBox = 0x370; // UVerticalBox*
		constexpr auto CageInfoHUDSlots = 0x378; // TArray<UCageInfoHUDSlot*>
		constexpr auto BindStructureCage = 0x388; // TWeakObjectPtr<ASGStructureAnimalCage>
	}

	namespace n_UUI_OfficalSessionList {
		constexpr auto RowTemplate = 0x2d8; // UUI_OfficalSessionListRow*
		constexpr auto RowNumPerPage = 0x2e0; // int32_t
		constexpr auto UGPSessionList = 0x2e8; // UUniformGridPanel*
		constexpr auto UGPLastLoginSession = 0x2f0; // UUniformGridPanel*
		constexpr auto BtnJoin = 0x2f8; // UButton*
		constexpr auto BtnRefresh = 0x300; // UButton*
		constexpr auto BtnBack = 0x308; // UButton*
		constexpr auto BtnLastPage = 0x310; // UButton*
		constexpr auto BtnNextPage = 0x318; // UButton*
		constexpr auto TbCurPage = 0x320; // UTextBlock*
		constexpr auto TbMaxPage = 0x328; // UTextBlock*
		constexpr auto EtbSearch = 0x330; // UEditableText*
		constexpr auto CircularThrobber = 0x338; // UCircularThrobber*
		constexpr auto BtnPingMs = 0x340; // UButton*
		constexpr auto HbNoServer = 0x348; // UHorizontalBox*
		constexpr auto CircularThrobberHandle = 0x350; // FTimerHandle
		constexpr auto SessionRows = 0x358; // TArray<UUI_OfficalSessionListRow*>
		constexpr auto LastLoginSessionRow = 0x368; // UUI_OfficalSessionListRow*
		constexpr auto CurPage = 0x370; // int32_t
		constexpr auto MaxPage = 0x374; // int32_t
		constexpr auto SelectSessionRow = 0x378; // UUI_OfficalSessionListRow*
		constexpr auto SearchString = 0x380; // FString
		constexpr auto bPingMsSort = 0x390; // char : 1
		constexpr auto GetPingTimer = 0x398; // FTimerHandle
		constexpr auto GetPingServerIndexList = 0x3a0; // TArray<int32_t>
	}

	namespace n_UGeometryCollectionComponent {
		constexpr auto ChaosSolverActor = 0x4b8; // AChaosSolverActor*
		constexpr auto RestCollection = 0x5a0; // UGeometryCollection*
		constexpr auto InitializationFields = 0x5a8; // TArray<AFieldSystemActor*>
		constexpr auto Simulating = 0x5b8; // bool
		constexpr auto ObjectType = 0x5c0; // EObjectStateTypeEnum
		constexpr auto EnableClustering = 0x5c1; // bool
		constexpr auto ClusterGroupIndex = 0x5c4; // int32_t
		constexpr auto MaxClusterLevel = 0x5c8; // int32_t
		constexpr auto DamageThreshold = 0x5d0; // TArray<float>
		constexpr auto ClusterConnectionType = 0x5e0; // EClusterConnectionTypeEnum
		constexpr auto CollisionGroup = 0x5e4; // int32_t
		constexpr auto CollisionSampleFraction = 0x5e8; // float
		constexpr auto LinearEtherDrag = 0x5ec; // float
		constexpr auto AngularEtherDrag = 0x5f0; // float
		constexpr auto PhysicalMaterial = 0x5f8; // UChaosPhysicalMaterial*
		constexpr auto InitialVelocityType = 0x600; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0x604; // FVector
		constexpr auto InitialAngularVelocity = 0x610; // FVector
		constexpr auto PhysicalMaterialOverride = 0x620; // UPhysicalMaterial*
		constexpr auto CacheParameters = 0x628; // FGeomComponentCacheParameters
		constexpr auto NotifyGeometryCollectionPhysicsStateChange = 0x678; // FMulticastInlineDelegate
		constexpr auto NotifyGeometryCollectionPhysicsLoadingStateChange = 0x688; // FMulticastInlineDelegate
		constexpr auto OnChaosBreakEvent = 0x6b0; // FMulticastInlineDelegate
		constexpr auto DesiredCacheTime = 0x6c0; // float
		constexpr auto CachePlayback = 0x6c4; // bool
		constexpr auto OnChaosPhysicsCollision = 0x6c8; // FMulticastInlineDelegate
		constexpr auto bNotifyBreaks = 0x6d8; // bool
		constexpr auto bNotifyCollisions = 0x6d9; // bool
		constexpr auto bEnableReplication = 0x6da; // bool
		constexpr auto bEnableAbandonAfterLevel = 0x6db; // bool
		constexpr auto ReplicationAbandonClusterLevel = 0x6dc; // int32_t
		constexpr auto RepData = 0x6e0; // FGeometryCollectionRepData
		constexpr auto DummyBodySetup = 0x918; // UBodySetup*
	}

	namespace n_UActorInfoHUD {
		constexpr auto BindActor = 0x260; // TWeakObjectPtr<AActor>
		constexpr auto LocationOffset = 0x268; // FVector
	}

	namespace n_UProxyLODMeshSimplificationSettings {
		constexpr auto ProxyLODMeshReductionModuleName = 0x38; // FName
	}

	namespace n_UParticleModuleMeshMaterial {
		constexpr auto MeshMaterials = 0x30; // TArray<UMaterialInterface*>
	}

	namespace n_UMovieSceneGeometryCacheSection {
		constexpr auto Params = 0xe8; // FMovieSceneGeometryCacheParams
	}

	namespace n_UMovieSceneBindingOverrides {
		constexpr auto BindingData = 0x28; // TArray<FMovieSceneBindingOverrideData>
	}

	namespace n_UUI_AllianceRelation {
		constexpr auto AllianceRelationSlotClass = 0x2d8; // UAllianceRelationSlot*
		constexpr auto RelationLineBgClass = 0x2e0; // UUserWidget*
		constexpr auto RelationLineWidth = 0x2e8; // float
		constexpr auto RelationSlotSize = 0x2ec; // FVector2D
		constexpr auto RelationSlotPadding = 0x2f4; // FVector2D
		constexpr auto VerticalLineLen = 0x2fc; // float
		constexpr auto RelationPanel = 0x300; // UCanvasPanel*
		constexpr auto OutRelationPanel = 0x308; // UCanvasPanel*
	}

	namespace n_UDatasmithImportOptions {
		constexpr auto SearchPackagePolicy = 0x28; // EDatasmithImportSearchPackagePolicy
		constexpr auto MaterialConflictPolicy = 0x29; // EDatasmithImportAssetConflictPolicy
		constexpr auto TextureConflictPolicy = 0x2a; // EDatasmithImportAssetConflictPolicy
		constexpr auto StaticMeshActorImportPolicy = 0x2b; // EDatasmithImportActorPolicy
		constexpr auto LightImportPolicy = 0x2c; // EDatasmithImportActorPolicy
		constexpr auto CameraImportPolicy = 0x2d; // EDatasmithImportActorPolicy
		constexpr auto OtherActorImportPolicy = 0x2e; // EDatasmithImportActorPolicy
		constexpr auto MaterialQuality = 0x2f; // EDatasmithImportMaterialQuality
		constexpr auto BaseOptions = 0x34; // FDatasmithImportBaseOptions
		constexpr auto ReimportOptions = 0x48; // FDatasmithReimportOptions
		constexpr auto Filename = 0x50; // FString
		constexpr auto FilePath = 0x60; // FString
	}

	namespace n_UPaperSpriteComponent {
		constexpr auto SourceSprite = 0x4b0; // UPaperSprite*
		constexpr auto MaterialOverride = 0x4b8; // UMaterialInterface*
		constexpr auto SpriteColor = 0x4c0; // FLinearColor
	}

	namespace n_UMaterialExpressionDistanceToNearestSurface {
		constexpr auto position = 0x40; // FExpressionInput
	}

	namespace n_UAnimStreamable {
		constexpr auto NumFrames = 0xa8; // int32_t
		constexpr auto Interpolation = 0xac; // EAnimInterpolationType
		constexpr auto RetargetSource = 0xb0; // FName
		constexpr auto BoneCompressionSettings = 0xc8; // UAnimBoneCompressionSettings*
		constexpr auto CurveCompressionSettings = 0xd0; // UAnimCurveCompressionSettings*
		constexpr auto bEnableRootMotion = 0xd8; // bool
		constexpr auto RootMotionRootLock = 0xd9; // ERootMotionRootLock
		constexpr auto bForceRootLock = 0xda; // bool
		constexpr auto bUseNormalizedRootMotionScale = 0xdb; // bool
	}

	namespace n_UMaterialFunctionInstance {
		constexpr auto Parent = 0x40; // UMaterialFunctionInterface*
		constexpr auto Base = 0x48; // UMaterialFunctionInterface*
		constexpr auto ScalarParameterValues = 0x50; // TArray<FScalarParameterValue>
		constexpr auto VectorParameterValues = 0x60; // TArray<FVectorParameterValue>
		constexpr auto TextureParameterValues = 0x70; // TArray<FTextureParameterValue>
		constexpr auto FontParameterValues = 0x80; // TArray<FFontParameterValue>
		constexpr auto StaticSwitchParameterValues = 0x90; // TArray<FStaticSwitchParameter>
		constexpr auto StaticComponentMaskParameterValues = 0xa0; // TArray<FStaticComponentMaskParameter>
		constexpr auto RuntimeVirtualTextureParameterValues = 0xb0; // TArray<FRuntimeVirtualTextureParameterValue>
	}

	namespace n_UUserDefinedEnum {
		constexpr auto DisplayNameMap = 0x60; // TMap<FName, FText>
	}

	namespace n_AWaterBodyCustom {
		constexpr auto CustomGenerator = 0xee0; // UCustomMeshGenerator*
	}

	namespace n_UNiagaraDataInterfaceExport {
		constexpr auto CallbackHandlerParameter = 0x38; // FNiagaraUserParameterBinding
		constexpr auto GPUAllocationMode = 0x58; // ENDIExport_GPUAllocationMode
		constexpr auto GPUAllocationFixedSize = 0x5c; // int32_t
		constexpr auto GPUAllocationPerParticleSize = 0x60; // float
	}

	namespace n_UMaterialExpressionDecalMipmapLevel {
		constexpr auto TextureSize = 0x40; // FExpressionInput
		constexpr auto ConstWidth = 0x54; // float
		constexpr auto ConstHeight = 0x58; // float
	}

	namespace n_UClickDragInputBehavior {
		constexpr auto bUpdateModifiersDuringDrag = 0x120; // bool
	}

	namespace n_ASGStructureHorn {
		constexpr auto EffectRadius = 0xb98; // float
		constexpr auto EffectBuffs = 0xba0; // TArray<USGBuff*>
		constexpr auto ContinuousActiveMaxTime = 0xbb0; // float
		constexpr auto ActiveProgressTime = 0xbb4; // float
		constexpr auto ActiveCoolTime = 0xbb8; // float
		constexpr auto LastActivedTimeTicks = 0xbc0; // int64_t
		constexpr auto ActiveOffsetPos = 0xbc8; // FVector
		constexpr auto ActiveOffsetRot = 0xbd4; // FRotator
		constexpr auto ActiveNeedXianChengGuard = 0xbe0; // char : 1
		constexpr auto ActiveMontage = 0xbe8; // UAnimMontage*
		constexpr auto ActiveSoundID = 0xbf0; // FName
		constexpr auto NotifyPlayerRadius = 0xbf8; // float
		constexpr auto ContinuousActiveCount = 0xbfc; // int32_t
		constexpr auto BindGeneralChar = 0xc00; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto ActiveProgressHandle = 0xc08; // FTimerHandle
		constexpr auto ActiveAudioComponent = 0xc10; // TWeakObjectPtr<USGAudioComponent>
	}

	namespace n_UInputActionDelegateBinding {
		constexpr auto InputActionDelegateBindings = 0x28; // TArray<FBlueprintInputActionDelegateBinding>
	}

	namespace n_UMaterialExpressionClearCoatNormalCustomOutput {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleTypeDataGpu {
		constexpr auto EmitterInfo = 0x30; // FGPUSpriteEmitterInfo
		constexpr auto ResourceData = 0x2b0; // FGPUSpriteResourceData
		constexpr auto CameraMotionBlurAmount = 0x410; // float
		constexpr auto bClearExistingParticlesOnInit = 0x414; // char : 1
	}

	namespace n_ALandscapeProxy {
		constexpr auto SplineComponent = 0x310; // ULandscapeSplinesComponent*
		constexpr auto LandscapeGuid = 0x318; // FGuid
		constexpr auto LandscapeSectionOffset = 0x328; // FIntPoint
		constexpr auto MaxLODLevel = 0x330; // int32_t
		constexpr auto LODDistanceFactor = 0x334; // float
		constexpr auto LODFalloff = 0x338; // ELandscapeLODFalloff
		constexpr auto ComponentScreenSizeToUseSubSections = 0x33c; // float
		constexpr auto LOD0ScreenSize = 0x340; // float
		constexpr auto LOD0DistributionSetting = 0x344; // float
		constexpr auto LODDistributionSetting = 0x348; // float
		constexpr auto TessellationComponentScreenSize = 0x34c; // float
		constexpr auto UseTessellationComponentScreenSizeFalloff = 0x350; // bool
		constexpr auto TessellationComponentScreenSizeFalloff = 0x354; // float
		constexpr auto OccluderGeometryLOD = 0x358; // int32_t
		constexpr auto StaticLightingLOD = 0x35c; // int32_t
		constexpr auto DefaultPhysMaterial = 0x360; // UPhysicalMaterial*
		constexpr auto StreamingDistanceMultiplier = 0x368; // float
		constexpr auto LandscapeMaterial = 0x370; // UMaterialInterface*
		constexpr auto LandscapeHoleMaterial = 0x398; // UMaterialInterface*
		constexpr auto LandscapeMaterialsOverride = 0x3a0; // TArray<FLandscapeProxyMaterialOverride>
		constexpr auto bMeshHoles = 0x3b0; // bool
		constexpr auto MeshHolesMaxLod = 0x3b1; // char
		constexpr auto RuntimeVirtualTextures = 0x3b8; // TArray<URuntimeVirtualTexture*>
		constexpr auto VirtualTextureNumLods = 0x3c8; // int32_t
		constexpr auto VirtualTextureLodBias = 0x3cc; // int32_t
		constexpr auto VirtualTextureRenderPassType = 0x3d0; // ERuntimeVirtualTextureMainPassType
		constexpr auto NegativeZBoundsExtension = 0x3d4; // float
		constexpr auto PositiveZBoundsExtension = 0x3d8; // float
		constexpr auto LandscapeComponents = 0x3e0; // TArray<ULandscapeComponent*>
		constexpr auto CollisionComponents = 0x3f0; // TArray<ULandscapeHeightfieldCollisionComponent*>
		constexpr auto FoliageComponents = 0x400; // TArray<UHierarchicalInstancedStaticMeshComponent*>
		constexpr auto bHasLandscapeGrass = 0x474; // bool
		constexpr auto StaticLightingResolution = 0x478; // float
		constexpr auto CastShadow = 0x47c; // char : 1
		constexpr auto bCastDynamicShadow = 0x47c; // char : 1
		constexpr auto bCastStaticShadow = 0x47c; // char : 1
		constexpr auto bCastFarShadow = 0x480; // char : 1
		constexpr auto bCastHiddenShadow = 0x484; // char : 1
		constexpr auto bCastShadowAsTwoSided = 0x488; // char : 1
		constexpr auto bAffectDistanceFieldLighting = 0x48c; // char : 1
		constexpr auto LightingChannels = 0x48d; // FLightingChannels
		constexpr auto bUseMaterialPositionOffsetInStaticLighting = 0x490; // char : 1
		constexpr auto bRenderCustomDepth = 0x490; // char : 1
		constexpr auto CustomDepthStencilWriteMask = 0x494; // ERendererStencilMask
		constexpr auto CustomDepthStencilValue = 0x498; // int32_t
		constexpr auto LDMaxDrawDistance = 0x49c; // float
		constexpr auto LightmassSettings = 0x4a0; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x4b8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x4bc; // int32_t
		constexpr auto CollisionThickness = 0x4c0; // float
		constexpr auto BodyInstance = 0x4c8; // FBodyInstance
		constexpr auto bGenerateOverlapEvents = 0x628; // char : 1
		constexpr auto bBakeMaterialPositionOffsetIntoCollision = 0x628; // char : 1
		constexpr auto ComponentSizeQuads = 0x62c; // int32_t
		constexpr auto SubsectionSizeQuads = 0x630; // int32_t
		constexpr auto NumSubsections = 0x634; // int32_t
		constexpr auto bUsedForNavigation = 0x638; // char : 1
		constexpr auto bFillCollisionUnderLandscapeForNavmesh = 0x638; // char : 1
		constexpr auto bUseDynamicMaterialInstance = 0x63c; // bool
		constexpr auto NavigationGeometryGatheringMode = 0x63d; // ENavDataGatheringMode
		constexpr auto bUseLandscapeForCullingInvisibleHLODVertices = 0x63e; // bool
		constexpr auto bHasLayersContent = 0x63f; // bool
		constexpr auto WeightmapUsageMap = 0x640; // TMap<UTexture2D*, ULandscapeWeightmapUsage*>
	}

	namespace n_UMiniMapImageFilter {
		constexpr auto FilterName = 0x260; // FText
		constexpr auto ImageFilterConfigs = 0x278; // TArray<FImageFilterParamConfig>
		constexpr auto CbFilter = 0x298; // UCheckBox*
		constexpr auto TbFilterName = 0x2a0; // UTextBlock*
	}

	namespace n_UWBP_Setting_C {
		constexpr auto bg = 0x328; // UImage*
		constexpr auto BottomBg = 0x330; // UImage*
		constexpr auto ImgBottom = 0x338; // UImage*
		constexpr auto ImgLeftBg = 0x340; // UImage*
		constexpr auto ImgMidBg = 0x348; // UImage*
		constexpr auto ImgRightBg = 0x350; // UImage*
		constexpr auto ImgTop = 0x358; // UImage*
		constexpr auto SettingRadioButtonView = 0x360; // UWBP_SettingRadioButtonView_C*
	}

	namespace n_UGizmoScaledTransformSource {
		constexpr auto ChildTransformSource = 0x48; // TScriptInterface<IGizmoTransformSource>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamVector4 {
		constexpr auto Min = 0x40; // FVector4
		constexpr auto Max = 0x50; // FVector4
	}

	namespace n_ULandscapeInfo {
		constexpr auto LandscapeActor = 0x28; // LazyObjectProperty
		constexpr auto LandscapeGuid = 0x44; // FGuid
		constexpr auto ComponentSizeQuads = 0x54; // int32_t
		constexpr auto SubsectionSizeQuads = 0x58; // int32_t
		constexpr auto ComponentNumSubsections = 0x5c; // int32_t
		constexpr auto DrawScale = 0x60; // FVector
		constexpr auto Proxies = 0x110; // TArray<ALandscapeStreamingProxy*>
	}

	namespace n_UTextLayoutWidget {
		constexpr auto ShapedTextOptions = 0x108; // FShapedTextOptions
		constexpr auto Justification = 0x10b; // ETextJustify
		constexpr auto WrappingPolicy = 0x10c; // ETextWrappingPolicy
		constexpr auto AutoWrapText = 0x10d; // char : 1
		constexpr auto WrapTextAt = 0x110; // float
		constexpr auto Margin = 0x114; // FMargin
		constexpr auto LineHeightPercentage = 0x124; // float
	}

	namespace n_UARTrackableNotifyComponent {
		constexpr auto OnAddTrackedGeometry = 0xc0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedGeometry = 0xd0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedGeometry = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPlane = 0xf0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPlane = 0x100; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPlane = 0x110; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedPoint = 0x120; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedPoint = 0x130; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedPoint = 0x140; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedImage = 0x150; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedImage = 0x160; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedImage = 0x170; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedFace = 0x180; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedFace = 0x190; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedFace = 0x1a0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedEnvProbe = 0x1b0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedEnvProbe = 0x1c0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedEnvProbe = 0x1d0; // FMulticastInlineDelegate
		constexpr auto OnAddTrackedObject = 0x1e0; // FMulticastInlineDelegate
		constexpr auto OnUpdateTrackedObject = 0x1f0; // FMulticastInlineDelegate
		constexpr auto OnRemoveTrackedObject = 0x200; // FMulticastInlineDelegate
	}

	namespace n_ASGPlayerController {
		constexpr auto bIsMovingForward = 0x6b0; // bool
		constexpr auto bIsMovingBackward = 0x6b1; // bool
		constexpr auto bIsMovingLeft = 0x6b2; // bool
		constexpr auto bIsMovingRight = 0x6b3; // bool
		constexpr auto CurShowShortCutPage = 0x6bc; // int32_t
		constexpr auto OnShortCutPageRefresh = 0x6c0; // FMulticastInlineDelegate
		constexpr auto bUseRiderBattleMode = 0x6f8; // char : 1
		constexpr auto CheckHaceReplicatedTimeInterval = 0x6fc; // float
		constexpr auto UseFormationCoolingTime = 0x714; // float
		constexpr auto bIsUseFormationCooling = 0x718; // char : 1
		constexpr auto UseFormationCoolingTimer = 0x720; // FTimerHandle
		constexpr auto bToggleOccupyArea = 0x728; // char : 1
		constexpr auto bToggleTurretArea = 0x728; // char : 1
		constexpr auto LastCallVehicleTime = 0x730; // double
		constexpr auto SG_AIManager = 0x738; // ASG_AIManager*
		constexpr auto SG_AIManagerClass = 0x740; // ASG_AIManager*
		constexpr auto bIsDemonstration = 0x748; // char : 1
		constexpr auto SwitchInspectorPawn = 0x74c; // TWeakObjectPtr<APawn>
		constexpr auto AdminPlayerInfo = 0x758; // TArray<FAdminPlayerInfo>
		constexpr auto ClientAdminPlayerInfoTimer = 0x768; // FTimerHandle
		constexpr auto CheatNpcs = 0x770; // TArray<TWeakObjectPtr<ABaseCharacter>>
		constexpr auto GMTargetActor = 0x780; // TWeakObjectPtr<AActor>
		constexpr auto bHasPassport = 0x788; // char : 1
		constexpr auto PassportServerList = 0x790; // TArray<int32_t>
		constexpr auto bGMOperateAllInventory = 0x7a0; // char : 1
		constexpr auto ActorViewBasePropertyActor = 0x7b4; // TWeakObjectPtr<ASGCharacter>
		constexpr auto ViewPropertyTimer = 0x7c8; // FTimerHandle
		constexpr auto ViewRemoteInventory = 0x7d0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ViewRemoteVehiclePawnInventory = 0x7d8; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ViewRemoteSeatCharacterInventory = 0x7e0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ViewRemoteMyGeneralInventory = 0x7e8; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ViewRemoteMyHorseInventory = 0x7f0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto RefreshStoreInventoryHandle = 0x7f8; // FTimerHandle
		constexpr auto PassengerLastLocation = 0x800; // FVector
		constexpr auto StructureManager = 0x810; // ASGStructureManager*
		constexpr auto SearchPointLightComponentRadius = 0x818; // float
		constexpr auto UpdatePointLightComponentInterval = 0x81c; // float
		constexpr auto LastUpdatePointLightComponentTime = 0x820; // double
		constexpr auto StructureManagerClass = 0x830; // ASGStructureManager*
		constexpr auto bInitalizedGeneralChunks = 0x840; // char : 1
		constexpr auto ReplicatedGeneralChunkArray = 0x848; // TArray<FBaseGeneralChunkData>
		constexpr auto UpdateChunkInfoTimer = 0x888; // FTimerHandle
		constexpr auto UpdateChunkDelta = 0x890; // float
		constexpr auto ReplicatedChunkInfoArray = 0x898; // TArray<FGeneralChunkInfoHighFrequency>
		constexpr auto bInitalizedAnimalChunks = 0x8b8; // char : 1
		constexpr auto ReplicatedAnimalChunkArray = 0x8c0; // TArray<FBaseAnimalChunkData>
		constexpr auto LongViewGeneral = 0x8e0; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto RefreshDeathGeneralLifeCountHandle = 0x8e8; // FTimerHandle
		constexpr auto RefreshDeathAnimalLifeCountHandle = 0x8f0; // FTimerHandle
		constexpr auto RefreshDeathLifeCountTime = 0x8f8; // float
		constexpr auto ViewGuildStoreStructure = 0x928; // TWeakObjectPtr<ASGStructureGuildStore>
		constexpr auto ViewGeneralLongDistance = 0x930; // float
		constexpr auto LastUsePackageStation = 0x980; // FDateTime
		constexpr auto bHideAllExistingWidgetsType = 0x988; // int32_t
		constexpr auto CurrentRespawnTime = 0x998; // float
		constexpr auto LastDeathCharacterInfoList = 0xb90; // TArray<FDeathCharacterInfo>
		constexpr auto LastDeathTipsComponentList = 0xbc0; // TArray<TWeakObjectPtr<UWidgetComponent>>
		constexpr auto DeathTipsComponentTemplate = 0xbd0; // UDeathLocationHUD*
		constexpr auto ShowDeathTipsComponentDistance = 0xbd8; // float
		constexpr auto LevelNameHUDTemplate = 0xbe0; // UUserWidget*
		constexpr auto GuildBillBoardMaterial = 0xbe8; // UMaterialInterface*
		constexpr auto FriendMaterial = 0xbf0; // UMaterialInterface*
		constexpr auto EnemyMaterial = 0xbf8; // UMaterialInterface*
		constexpr auto GM_ADMINISTRATORMaterial = 0xc00; // UMaterialInterface*
		constexpr auto GM_SeniorOperatorMaterial = 0xc08; // UMaterialInterface*
		constexpr auto GM_OperatorMaterial = 0xc10; // UMaterialInterface*
		constexpr auto GM_CustomerServicerMaterial = 0xc18; // UMaterialInterface*
		constexpr auto BillBoardCurve = 0xc20; // UCurveFloat*
		constexpr auto LastSuicideUTCTime = 0xc28; // FDateTime
		constexpr auto SuicideCoolingSeconds = 0xc30; // int32_t
		constexpr auto OnGenericTeamIdChanged = 0xc40; // FMulticastInlineDelegate
		constexpr auto BattleServiceQueueCountInfo = 0xc80; // FBattleServiceQueueCountInfo
		constexpr auto PingUpdateInterval = 0xc98; // float
		constexpr auto LastPingUpdateTime = 0xca0; // double
		constexpr auto bShowAimPoint = 0xcf0; // char : 1
		constexpr auto bIsFirstLogin = 0xcf1; // bool
		constexpr auto ClientNewsDatas = 0xd38; // TArray<UNewsClientData*>
		constexpr auto ChatServerInfo = 0xd48; // FChatServerInfo
		constexpr auto CurrentFuBenVolume = 0xd70; // TWeakObjectPtr<AFuBenVolume>
		constexpr auto CurrentSGStructureItemBaoZangBox = 0xd78; // TWeakObjectPtr<ASGStructureItemBaoZangBox>
		constexpr auto CurrentOverlapFlag = 0xd80; // TWeakObjectPtr<ASGStructureOccupyFlag>
		constexpr auto GuildActivityPoint = 0xd88; // float
		constexpr auto CapitalGold64 = 0xd90; // int64_t
		constexpr auto CapitalSilver64 = 0xd98; // int64_t
		constexpr auto CapitalCopper64 = 0xda0; // int64_t
		constexpr auto CapitalSeason64 = 0xda8; // int64_t
		constexpr auto CharacterSpawnTime = 0xe30; // int32_t
		constexpr auto LastUpdateNatureControllerTime = 0xe38; // double
		constexpr auto UpdateNatureControllerInterval = 0xe40; // float
		constexpr auto SurviveDay = 0xe44; // int32_t
		constexpr auto bCanUpdateNatureControllerTime = 0xe48; // bool
		constexpr auto MaxSeasonLevel = 0xea0; // int32_t
		constexpr auto SeasonLevel = 0xea4; // int32_t
		constexpr auto SeasonExp = 0xeb8; // float
		constexpr auto HasSeasonPassport = 0xed4; // char : 1
		constexpr auto SeasonPassportExpireTime = 0xee8; // FDateTime
		constexpr auto SeasonCanReceiveRewardArray = 0xef0; // TArray<FSeasonRewardItemState>
		constexpr auto ClientDecalPool = 0xf10; // TArray<FClientDecalPool>
		constexpr auto ClientDecalMaxAmount = 0xf20; // int32_t
		constexpr auto bOpenPVP = 0xf38; // char : 1
		constexpr auto bCreativeMode = 0xf50; // char : 1
		constexpr auto LogicServerXianChengKey = 0xf54; // int32_t
		constexpr auto HuKouInfo = 0xf68; // TArray<FHuKouNode>
		constexpr auto HuKouTimerHandle = 0xf78; // FTimerHandle
		constexpr auto LastRequestGuildMembersTime = 0xf80; // double
		constexpr auto LastTaiShouBattleSignTime = 0xf88; // double
		constexpr auto LastRequestReturnServerTime = 0xf90; // double
		constexpr auto LastRequestOccupyEmptyGuanAi = 0xf98; // double
		constexpr auto LastSignUpAttackGuanAiTime = 0xfa0; // double
		constexpr auto LastCancelSignUpAttackGuanAiTime = 0xfa8; // double
		constexpr auto ReplicatedLegendDataArray = 0xfc0; // TArray<FLegendGeneralDataInfo>
		constexpr auto IsUpdateSellList = 0xfe8; // bool
		constexpr auto IsUpdateBuyList = 0xfe9; // bool
		constexpr auto bForbiddenSpeakState = 0xfea; // bool
		constexpr auto ForbiddenSpeakTimerHandle = 0xff0; // FTimerHandle
		constexpr auto bOpenCheatEyesStructures = 0xff8; // bool
		constexpr auto bOpenCheatEyesPlayers = 0xff9; // bool
		constexpr auto BEWhiteEndTime = 0x1000; // FDateTime
		constexpr auto GetStructureMiniMapDatasInterval = 0x1008; // float
		constexpr auto LastGetStructureMiniMapDatasTime = 0x100c; // float
		constexpr auto StructureMiniMapDatas = 0x1020; // TArray<FStructureMiniMapData>
		constexpr auto IsAttachPlayerForWatch = 0x1040; // bool
		constexpr auto AttachPlayerForWatch = 0x1044; // TWeakObjectPtr<ABaseCharacter>
		constexpr auto AttachPlayerConForWatch = 0x104c; // TWeakObjectPtr<ASGPlayerController>
		constexpr auto LastGMViewPlayerAccountID = 0x1058; // FString
		constexpr auto GroomFurAnimals = 0x1090; // TArray<TWeakObjectPtr<ASG_AnimalsCharacter>>
		constexpr auto AnimalDebugInfos = 0x10a0; // TArray<FAnimalDebugInfo>
		constexpr auto CacheAnimalDebugInfos = 0x10b0; // TArray<FAnimalDebugInfo>
		constexpr auto LastSERequestTime = 0x10c0; // double
		constexpr auto ViewRemoteAnimalVehicleCharacter = 0x10c8; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
		constexpr auto NoviceBuffState = 0x10d1; // ENoviceBuffState
		constexpr auto HasBattleAward = 0x10fc; // char : 1
	}

	namespace n_USpectatorPawnMovement {
		constexpr auto bIgnoreTimeDilation = 0x160; // char : 1
	}

	namespace n_UParticleModuleVelocityBase {
		constexpr auto bInWorldSpace = 0x30; // char : 1
		constexpr auto bApplyOwnerScale = 0x30; // char : 1
	}

	namespace n_UInterpData {
		constexpr auto InterpLength = 0x28; // float
		constexpr auto PathBuildTime = 0x2c; // float
		constexpr auto InterpGroups = 0x30; // TArray<UInterpGroup*>
		constexpr auto CurveEdSetup = 0x40; // UInterpCurveEdSetup*
		constexpr auto EdSectionStart = 0x48; // float
		constexpr auto EdSectionEnd = 0x4c; // float
		constexpr auto bShouldBakeAndPrune = 0x50; // char : 1
		constexpr auto CachedDirectorGroup = 0x58; // UInterpGroupDirector*
		constexpr auto AllEventNames = 0x60; // TArray<FName>
	}

	namespace n_UPaperGroupedSpriteComponent {
		constexpr auto InstanceMaterials = 0x4b0; // TArray<UMaterialInterface*>
		constexpr auto PerInstanceSpriteData = 0x4c0; // TArray<FSpriteInstanceData>
	}

	namespace n_UScalabilityDetailItem {
		constexpr auto RootUI = 0x260; // UUI_SystemSetting*
		constexpr auto BindScalabilityDetailType = 0x268; // EScalabilityDetailType
		constexpr auto BindVariable = 0x270; // FString
		constexpr auto BindScalabilitySettingsValue = 0x280; // FScalabilitySettingsValue
		constexpr auto BindScalabilitySettingsConfig = 0x2b0; // FScalabilitySettingsConfig
		constexpr auto SGGameUserSettings = 0x2d8; // USGGameUserSettings*
	}

	namespace n_AWorldSettings {
		constexpr auto VisibilityCellSize = 0x318; // int32_t
		constexpr auto VisibilityAggressiveness = 0x31c; // EVisibilityAggressiveness
		constexpr auto bPrecomputeVisibility = 0x31d; // char : 1
		constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x31d; // char : 1
		constexpr auto bEnableWorldBoundsChecks = 0x31d; // char : 1
		constexpr auto bEnableNavigationSystem = 0x31d; // char : 1
		constexpr auto bEnableAISystem = 0x31d; // char : 1
		constexpr auto bEnableWorldComposition = 0x31d; // char : 1
		constexpr auto bUseClientSideLevelStreamingVolumes = 0x31d; // char : 1
		constexpr auto bEnableWorldOriginRebasing = 0x31d; // char : 1
		constexpr auto bWorldGravitySet = 0x31e; // char : 1
		constexpr auto bGlobalGravitySet = 0x31e; // char : 1
		constexpr auto bMinimizeBSPSections = 0x31e; // char : 1
		constexpr auto bForceNoPrecomputedLighting = 0x31e; // char : 1
		constexpr auto bHighPriorityLoading = 0x31e; // char : 1
		constexpr auto bHighPriorityLoadingLocal = 0x31e; // char : 1
		constexpr auto bOverrideDefaultBroadphaseSettings = 0x31e; // char : 1
		constexpr auto NavigationSystemConfig = 0x320; // UNavigationSystemConfig*
		constexpr auto NavigationSystemConfigOverride = 0x328; // UNavigationSystemConfig*
		constexpr auto WorldToMeters = 0x330; // float
		constexpr auto KillZ = 0x334; // float
		constexpr auto KillZDamageType = 0x338; // UDamageType*
		constexpr auto WorldGravityZ = 0x340; // float
		constexpr auto GlobalGravityZ = 0x344; // float
		constexpr auto DefaultPhysicsVolumeClass = 0x348; // ADefaultPhysicsVolume*
		constexpr auto PhysicsCollisionHandlerClass = 0x350; // UPhysicsCollisionHandler*
		constexpr auto DefaultGameMode = 0x358; // AGameModeBase*
		constexpr auto GameNetworkManagerClass = 0x360; // AGameNetworkManager*
		constexpr auto PackedLightAndShadowMapTextureSize = 0x368; // int32_t
		constexpr auto DefaultColorScale = 0x36c; // FVector
		constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x378; // float
		constexpr auto GlobalDistanceFieldViewDistance = 0x37c; // float
		constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x380; // float
		constexpr auto DefaultReverbSettings = 0x388; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x3a8; // FInteriorSettings
		constexpr auto MonoCullingDistance = 0x3cc; // float
		constexpr auto DefaultBaseSoundMix = 0x3d0; // USoundMix*
		constexpr auto TimeDilation = 0x3d8; // float
		constexpr auto MatineeTimeDilation = 0x3dc; // float
		constexpr auto DemoPlayTimeDilation = 0x3e0; // float
		constexpr auto MinGlobalTimeDilation = 0x3e4; // float
		constexpr auto MaxGlobalTimeDilation = 0x3e8; // float
		constexpr auto MinUndilatedFrameTime = 0x3ec; // float
		constexpr auto MaxUndilatedFrameTime = 0x3f0; // float
		constexpr auto BroadphaseSettings = 0x3f4; // FBroadphaseSettings
		constexpr auto Pauser = 0x438; // APlayerState*
		constexpr auto ReplicationViewers = 0x440; // TArray<FNetViewer>
		constexpr auto AssetUserData = 0x450; // TArray<UAssetUserData*>
		constexpr auto PauserPlayerState = 0x460; // APlayerState*
		constexpr auto MaxNumberOfBookmarks = 0x468; // int32_t
		constexpr auto DefaultBookmarkClass = 0x470; // UBookmarkBase*
		constexpr auto BookmarkArray = 0x478; // TArray<UBookmarkBase*>
		constexpr auto LastBookmarkClass = 0x488; // UBookmarkBase*
		constexpr auto GlobalPostProcessVolume = 0x490; // APostProcessVolume*
	}

	namespace n_UWebBrowser {
		constexpr auto OnUrlChanged = 0x108; // FMulticastInlineDelegate
		constexpr auto OnBeforePopup = 0x118; // FMulticastInlineDelegate
		constexpr auto OnLoadCompleted = 0x128; // FMulticastInlineDelegate
		constexpr auto InitialURL = 0x138; // FString
		constexpr auto bSupportsTransparency = 0x148; // bool
	}

	namespace n_UShadowMapTexture2D {
		constexpr auto ShadowmapFlags = 0x100; // EShadowMapFlags
	}

	namespace n_UInteractiveTool {
		constexpr auto InputBehaviors = 0x48; // UInputBehaviorSet*
		constexpr auto ToolPropertyObjects = 0x50; // TArray<UObject*>
	}

	namespace n_UDistributionFloatParameterBase {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto MinInput = 0x48; // float
		constexpr auto MaxInput = 0x4c; // float
		constexpr auto MinOutput = 0x50; // float
		constexpr auto MaxOutput = 0x54; // float
		constexpr auto ParamMode = 0x58; // DistributionParamMode
	}

	namespace n_UMaterialExpressionDivide {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder {
		constexpr auto RadialVelocity = 0xb0; // char : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xe8; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x118; // CylinderHeightAxis
	}

	namespace n_UDatasmithCommonTessellationOptions {
		constexpr auto Options = 0x28; // FDatasmithTessellationOptions
	}

	namespace n_UIntervalGizmo {
		constexpr auto StateTarget = 0x38; // UGizmoTransformChangeStateTarget*
		constexpr auto TransformProxy = 0x50; // UTransformProxy*
		constexpr auto ActiveComponents = 0x58; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x68; // TArray<UInteractiveGizmo*>
		constexpr auto AxisYSource = 0x90; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x98; // UGizmoComponentAxisSource*
	}

	namespace n_UEditPivotToolActionPropertySet {
		constexpr auto bUseWorldBox = 0x68; // bool
	}

	namespace n_UAbilityTask_WaitInputRelease {
		constexpr auto OnRelease = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UImgMediaSource {
		constexpr auto FrameRateOverride = 0x88; // FFrameRate
		constexpr auto ProxyOverride = 0x90; // FString
		constexpr auto SequencePath = 0xa0; // FDirectoryPath
	}

	namespace n_UInterpGroupCamera {
		constexpr auto CameraAnimInst = 0x50; // UCameraAnim*
		constexpr auto CompressTolerance = 0x58; // float
	}

	namespace n_UMaterialExpressionCustom {
		constexpr auto Code = 0x40; // FString
		constexpr auto OutputType = 0x50; // ECustomMaterialOutputType
		constexpr auto Description = 0x58; // FString
		constexpr auto Inputs = 0x68; // TArray<FCustomInput>
		constexpr auto AdditionalOutputs = 0x78; // TArray<FCustomOutput>
		constexpr auto AdditionalDefines = 0x88; // TArray<FCustomDefine>
		constexpr auto IncludeFilePaths = 0x98; // TArray<FString>
	}

	namespace n_UScaleBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UDatasmithAssetUserData {
		constexpr auto MetaData = 0x28; // TMap<FName, FString>
	}

	namespace n_UCompositionGraphCaptureProtocol {
		constexpr auto IncludeRenderPasses = 0x58; // FCompositionGraphCapturePasses
		constexpr auto bCaptureFramesInHDR = 0x68; // bool
		constexpr auto HDRCompressionQuality = 0x6c; // int32_t
		constexpr auto CaptureGamut = 0x70; // EHDRCaptureGamut
		constexpr auto PostProcessingMaterial = 0x78; // FSoftObjectPath
		constexpr auto bDisableScreenPercentage = 0x90; // bool
		constexpr auto PostProcessingMaterialPtr = 0x98; // UMaterialInterface*
	}

	namespace n_UPhononSpatializationSourceSettings {
		constexpr auto SpatializationMethod = 0x28; // EIplSpatializationMethod
		constexpr auto HrtfInterpolationMethod = 0x29; // EIplHrtfInterpolationMethod
	}

	namespace n_UUniformScalar {
		constexpr auto Magnitude = 0xc0; // float
	}

	namespace n_USoundBase {
		constexpr auto SoundClassObject = 0x30; // USoundClass*
		constexpr auto bDebug = 0x38; // char : 1
		constexpr auto bOverrideConcurrency = 0x38; // char : 1
		constexpr auto bOutputToBusOnly = 0x38; // char : 1
		constexpr auto bHasDelayNode = 0x38; // char : 1
		constexpr auto bHasConcatenatorNode = 0x38; // char : 1
		constexpr auto bBypassVolumeScaleForPriority = 0x38; // char : 1
		constexpr auto VirtualizationMode = 0x39; // EVirtualizationMode
		constexpr auto ConcurrencySet = 0x90; // TSet<USoundConcurrency*>
		constexpr auto ConcurrencyOverrides = 0xe0; // FSoundConcurrencySettings
		constexpr auto Duration = 0x108; // float
		constexpr auto MaxDistance = 0x10c; // float
		constexpr auto TotalSamples = 0x110; // float
		constexpr auto Priority = 0x114; // float
		constexpr auto AttenuationSettings = 0x118; // USoundAttenuation*
		constexpr auto ModulationSettings = 0x120; // FSoundModulationDefaultRoutingSettings
		constexpr auto SoundSubmixObject = 0x168; // USoundSubmixBase*
		constexpr auto SoundSubmixSends = 0x170; // TArray<FSoundSubmixSendInfo>
		constexpr auto SourceEffectChain = 0x180; // USoundEffectSourcePresetChain*
		constexpr auto BusSends = 0x188; // TArray<FSoundSourceBusSendInfo>
		constexpr auto PreEffectBusSends = 0x198; // TArray<FSoundSourceBusSendInfo>
		constexpr auto AssetUserData = 0x1a8; // TArray<UAssetUserData*>
	}

	namespace n_UWaterWavesAsset {
		constexpr auto WaterWaves = 0x28; // UWaterWaves*
	}

	namespace n_UAccomplishAchievementAnimationNotifyWidget {
		constexpr auto AccomplishNotifyAnim = 0x278; // UWidgetAnimation*
		constexpr auto RotateAnim = 0x280; // UWidgetAnimation*
		constexpr auto ImgAchievement = 0x288; // UImage*
		constexpr auto TbAchievement = 0x290; // UTextBlock*
	}

	namespace n_UGameplayCueManager {
		constexpr auto RuntimeGameplayCueObjectLibrary = 0x48; // FGameplayCueObjectLibrary
		constexpr auto EditorGameplayCueObjectLibrary = 0x98; // FGameplayCueObjectLibrary
		constexpr auto LoadedGameplayCueNotifyClasses = 0x2b0; // TArray<UObject*>
		constexpr auto GameplayCueClassesForPreallocation = 0x2c0; // TArray<AGameplayCueNotify_Actor*>
		constexpr auto PendingExecuteCues = 0x2d0; // TArray<FGameplayCuePendingExecute>
		constexpr auto GameplayCueSendContextCount = 0x2e0; // int32_t
		constexpr auto PreallocationInfoList_Internal = 0x2e8; // TArray<FPreallocationInfo>
	}

	namespace n_UNiagaraMeshRendererProperties {
		constexpr auto ParticleMesh = 0x80; // UStaticMesh*
		constexpr auto SortMode = 0x88; // ENiagaraSortMode
		constexpr auto bOverrideMaterials = 0x8c; // char : 1
		constexpr auto bSortOnlyWhenTranslucent = 0x8c; // char : 1
		constexpr auto OverrideMaterials = 0x90; // TArray<FNiagaraMeshMaterialOverride>
		constexpr auto SubImageSize = 0xa0; // FVector2D
		constexpr auto bSubImageBlend = 0xa8; // char : 1
		constexpr auto FacingMode = 0xac; // ENiagaraMeshFacingMode
		constexpr auto bLockedAxisEnable = 0xb0; // char : 1
		constexpr auto LockedAxis = 0xb4; // FVector
		constexpr auto LockedAxisSpace = 0xc0; // ENiagaraMeshLockedAxisSpace
		constexpr auto PivotOffset = 0xc4; // FVector
		constexpr auto PivotOffsetSpace = 0xd0; // ENiagaraMeshPivotOffsetSpace
		constexpr auto bEnableFrustumCulling = 0xd4; // char : 1
		constexpr auto bEnableCameraDistanceCulling = 0xd4; // char : 1
		constexpr auto MinCameraDistance = 0xd8; // float
		constexpr auto MaxCameraDistance = 0xdc; // float
		constexpr auto RendererVisibility = 0xe0; // uint32_t
		constexpr auto PositionBinding = 0xe8; // FNiagaraVariableAttributeBinding
		constexpr auto ColorBinding = 0x140; // FNiagaraVariableAttributeBinding
		constexpr auto VelocityBinding = 0x198; // FNiagaraVariableAttributeBinding
		constexpr auto MeshOrientationBinding = 0x1f0; // FNiagaraVariableAttributeBinding
		constexpr auto ScaleBinding = 0x248; // FNiagaraVariableAttributeBinding
		constexpr auto SubImageIndexBinding = 0x2a0; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterialBinding = 0x2f8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial1Binding = 0x350; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial2Binding = 0x3a8; // FNiagaraVariableAttributeBinding
		constexpr auto DynamicMaterial3Binding = 0x400; // FNiagaraVariableAttributeBinding
		constexpr auto MaterialRandomBinding = 0x458; // FNiagaraVariableAttributeBinding
		constexpr auto CustomSortingBinding = 0x4b0; // FNiagaraVariableAttributeBinding
		constexpr auto NormalizedAgeBinding = 0x508; // FNiagaraVariableAttributeBinding
		constexpr auto CameraOffsetBinding = 0x560; // FNiagaraVariableAttributeBinding
		constexpr auto RendererVisibilityTagBinding = 0x5b8; // FNiagaraVariableAttributeBinding
	}

	namespace n_USelfUnionMeshesToolProperties {
		constexpr auto bAttemptFixHoles = 0x60; // bool
		constexpr auto bShowNewBoundaryEdges = 0x61; // bool
		constexpr auto bTrimFlaps = 0x62; // bool
		constexpr auto WindingNumberThreshold = 0x68; // double
		constexpr auto bOnlyUseFirstMeshMaterials = 0x70; // bool
	}

	namespace n_ULandscapeGrassType {
		constexpr auto GrassVarieties = 0x28; // TArray<FGrassVariety>
		constexpr auto bEnableDensityScaling = 0x38; // char : 1
		constexpr auto GrassMesh = 0x40; // UStaticMesh*
		constexpr auto GrassDensity = 0x48; // float
		constexpr auto PlacementJitter = 0x4c; // float
		constexpr auto StartCullDistance = 0x50; // int32_t
		constexpr auto EndCullDistance = 0x54; // int32_t
		constexpr auto RandomRotation = 0x58; // bool
		constexpr auto AlignToSurface = 0x59; // bool
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant_ForConnection {
		constexpr auto PastRelevantActors = 0xe0; // TArray<FAlwaysRelevantActorInfo>
	}

	namespace n_USGGameDataOccupyStructureData {
		constexpr auto OccupyStructureSetting = 0x28; // TArray<FOccupyStructureSettings>
		constexpr auto OccupyStructureGuildLevelSetting = 0x38; // TArray<FOccupyStructureGuildLevelSettings>
		constexpr auto OccupyAllSellItem = 0x48; // TArray<USGItem*>
	}

	namespace n_ABattleManager {
		constexpr auto GroupMembers = 0x310; // TArray<FBattlePlayerInfo>
		constexpr auto SetPlayerTask = 0x330; // TArray<FSetPlayerTaskInfo>
		constexpr auto bEnableBattle = 0x340; // bool
		constexpr auto bEnableStatistics = 0x341; // bool
		constexpr auto BattleSoliderInfos = 0x348; // TArray<FBattleSoliderInfo>
		constexpr auto MaxVaildPointCheck = 0x358; // int32_t
		constexpr auto FinishCountDownTime = 0x35c; // float
		constexpr auto StartCountDownPlayerNum = 0x360; // int32_t
		constexpr auto SelectThresholdPlayerNum = 0x364; // int32_t
		constexpr auto PlayerInitCoin = 0x368; // int32_t
		constexpr auto PlayerDeadGainCoin = 0x36c; // int32_t
		constexpr auto KillPlayerGainCoin = 0x370; // int32_t
		constexpr auto KillHorseGainCoin = 0x374; // int32_t
		constexpr auto CopperCoinIcon = 0x378; // UTexture2D*
		constexpr auto GuildSkillLevels = 0x380; // int32_t [0x33]
	}

	namespace n_UMaterialExpressionVirtualTextureFeatureSwitch {
		constexpr auto No = 0x40; // FExpressionInput
		constexpr auto Yes = 0x54; // FExpressionInput
	}

	namespace n_AGameplayAbilityWorldReticle_ActorVisualization {
		constexpr auto CollisionComponent = 0x330; // UCapsuleComponent*
		constexpr auto VisualizationComponents = 0x338; // TArray<UActorComponent*>
	}

	namespace n_UBTTaskNode {
		constexpr auto Services = 0x58; // TArray<UBTService*>
		constexpr auto bIgnoreRestartSelf = 0x68; // char : 1
	}

	namespace n_UAlliancePowerSlot {
		constexpr auto GuildImage = 0x2d8; // UImage*
		constexpr auto GrayImage = 0x2e0; // UImage*
		constexpr auto ExpandButton = 0x2e8; // UButton*
		constexpr auto CollapsedButton = 0x2f0; // UButton*
		constexpr auto ExpandSizeBox = 0x2f8; // USizeBox*
		constexpr auto OfficialNameSizeBox = 0x300; // USizeBox*
		constexpr auto OfficialNameText = 0x308; // UTextBlock*
		constexpr auto OwnerNameSizeBox = 0x310; // USizeBox*
		constexpr auto OwnerNameText = 0x318; // UTextBlock*
	}

	namespace n_UBlackboardKeyType_Enum {
		constexpr auto EnumType = 0x30; // UEnum*
		constexpr auto EnumName = 0x38; // FString
		constexpr auto bIsEnumNameValid = 0x48; // char : 1
	}

	namespace n_UARQRCodeComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARQRCodeUpdatePayload
	}

	namespace n_USGGameDataClothMask {
		constexpr auto NoMaskTexture = 0x28; // UTexture2D*
		constexpr auto ClothMaskMap = 0x30; // TMap<USkeletalMesh*, FClothMaskConfig>
	}

	namespace n_ANavMeshBoundsVolume {
		constexpr auto SupportedAgents = 0x348; // FNavAgentSelector
	}

	namespace n_UAbilityTask_WaitDelay {
		constexpr auto OnFinish = 0x80; // FMulticastInlineDelegate
	}

	namespace n_ULandscapeMaterialInstanceConstant {
		constexpr auto TextureStreamingInfo = 0x368; // TArray<FLandscapeMaterialTextureStreamingInfo>
		constexpr auto bIsLayerThumbnail = 0x378; // char : 1
		constexpr auto bDisableTessellation = 0x378; // char : 1
		constexpr auto bMobile = 0x378; // char : 1
		constexpr auto bEditorToolUsage = 0x378; // char : 1
	}

	namespace n_ASGStructureFrame {
		constexpr auto BuildCoolTime = 0xb98; // float
		constexpr auto NextAllowBuildTime = 0xba0; // double
		constexpr auto FrameStepSkillExp = 0xba8; // float
		constexpr auto StructureFrameSteps = 0xbb0; // TArray<FStructureFrameStep>
		constexpr auto FrameSpawnActorTemplate = 0xbc0; // AActor*
		constexpr auto FrameSpawnLocOffSet = 0xbc8; // FVector
		constexpr auto MeshSelectedColor = 0xbd4; // FLinearColor
		constexpr auto MeshUnSelectedColor = 0xbe4; // FLinearColor
		constexpr auto bEnableMeshSpawnEffect = 0xbf4; // char : 1
		constexpr auto MeshSpawnEffectInterval = 0xbf8; // float
		constexpr auto StepIndex = 0xbfc; // int32_t
		constexpr auto CurrentStepCreatedMesh = 0xc00; // TArray<FName>
		constexpr auto LastSelectedMesh = 0xc10; // FName
		constexpr auto SavedStepNum = 0xc18; // int32_t
		constexpr auto MeshSpawnEffectHandle = 0xc20; // FTimerHandle
	}

	namespace n_UEndpointSubmix {
		constexpr auto EndpointType = 0x38; // FName
		constexpr auto EndpointSettingsClass = 0x40; // UAudioEndpointSettingsBase*
		constexpr auto EndpointSettings = 0x48; // UAudioEndpointSettingsBase*
	}

	namespace n_UMyPluginObject {
		constexpr auto MyStruct = 0x28; // FMyPluginStruct
	}

	namespace n_UMiniMapWidgetFilter {
		constexpr auto FilterName = 0x260; // FText
		constexpr auto FilterWidgetNames = 0x278; // TArray<FName>
		constexpr auto CbFilter = 0x298; // UCheckBox*
		constexpr auto TbFilterName = 0x2a0; // UTextBlock*
	}

	namespace n_USourceEffectEQPreset {
		constexpr auto Settings = 0xa0; // FSourceEffectEQSettings
	}

	namespace n_UBakedTexture2DImageProperties {
		constexpr auto SourceTexture = 0x60; // UTexture2D*
		constexpr auto UVLayer = 0x68; // int32_t
	}

	namespace n_UMeshAttributePaintToolProperties {
		constexpr auto Attributes = 0x60; // TArray<FName>
		constexpr auto SelectedAttribute = 0x70; // int32_t
		constexpr auto AttributeName = 0x78; // FString
	}

	namespace n_ASGStructureInstrument {
		constexpr auto SeatRotationOffset = 0xf70; // TArray<FRotator>
		constexpr auto CameraSocketName = 0xf80; // TArray<FName>
		constexpr auto bCanNPCHelp = 0xf90; // char : 1
		constexpr auto AllowNpcControlClass = 0xf98; // TArray<ABaseCharacter*>
		constexpr auto InstrumentStickMesh = 0xfa8; // UStaticMesh*
		constexpr auto InstrumentStickSocketNames = 0xfb0; // TArray<FName>
		constexpr auto bShowCrossHair = 0xfc0; // char : 1
		constexpr auto TipsText = 0xfc8; // FText
		constexpr auto SiegeType = 0xfe0; // ESiegeType
		constexpr auto InstrumentStickComponents = 0xfe8; // TArray<UStaticMeshComponent*>
	}

	namespace n_UPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto FrictionCombineMode = 0x30; // EFrictionCombineMode
		constexpr auto bOverrideFrictionCombineMode = 0x31; // bool
		constexpr auto Restitution = 0x34; // float
		constexpr auto RestitutionCombineMode = 0x38; // EFrictionCombineMode
		constexpr auto bOverrideRestitutionCombineMode = 0x39; // bool
		constexpr auto Density = 0x3c; // float
		constexpr auto SleepLinearVelocityThreshold = 0x40; // float
		constexpr auto SleepAngularVelocityThreshold = 0x44; // float
		constexpr auto SleepCounterThreshold = 0x48; // int32_t
		constexpr auto RaiseMassToPower = 0x4c; // float
		constexpr auto DestructibleDamageThresholdScale = 0x50; // float
		constexpr auto PhysicalMaterialProperty = 0x58; // UPhysicalMaterialPropertyBase*
		constexpr auto SurfaceType = 0x60; // EPhysicalSurface
	}

	namespace n_UUI_MainMenuBtn {
		constexpr auto ButtonName = 0x260; // FText
		constexpr auto TextCommonCorlor = 0x278; // FLinearColor
		constexpr auto TextCommonOutlineCorlor = 0x288; // FLinearColor
		constexpr auto TextHorverCorlor = 0x298; // FLinearColor
		constexpr auto TextHorverOutlineCorlor = 0x2a8; // FLinearColor
		constexpr auto ButtonHoverTexure = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto ButtonClickedTexture = 0x2e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto CommonFontSize = 0x308; // int32_t
		constexpr auto SelectedFontSize = 0x30c; // int32_t
		constexpr auto ButtonText = 0x310; // UTextBlock*
		constexpr auto MainBorder = 0x318; // UBorder*
	}

	namespace n_UStableDetailPanel {
		constexpr auto OtherUsingPanel = 0x260; // UCanvasPanel*
		constexpr auto OtherUsingText = 0x268; // UTextBlock*
		constexpr auto StableFeedButton = 0x270; // UOptionButton*
		constexpr auto StableRebornButton = 0x278; // UOptionButton*
		constexpr auto StableTrainerButton = 0x280; // UOptionButton*
		constexpr auto StableFeedPanel = 0x288; // UStableFeedPanel*
		constexpr auto StableRebornPanel = 0x290; // UStableRebornPanel*
		constexpr auto StableTrainerPanel = 0x298; // UStableTrainerPanel*
		constexpr auto BindInventoryComponent = 0x2a8; // TWeakObjectPtr<USGInventoryComponent>
	}

	namespace n_UAchievementProgress {
		constexpr auto TbName = 0x260; // UTextBlock*
		constexpr auto TbCurNum = 0x268; // UTextBlock*
		constexpr auto TbTotalNum = 0x270; // UTextBlock*
		constexpr auto RootUI = 0x278; // UUI_Achievement*
		constexpr auto BindAchievementType = 0x280; // FString
	}

	namespace n_UEditableGameplayTagQueryExpression_NoTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UConsole {
		constexpr auto ConsoleTargetPlayer = 0x38; // ULocalPlayer*
		constexpr auto DefaultTexture_Black = 0x40; // UTexture2D*
		constexpr auto DefaultTexture_White = 0x48; // UTexture2D*
		constexpr auto HistoryBuffer = 0x68; // TArray<FString>
	}

	namespace n_UPawnNoiseEmitterComponent {
		constexpr auto bAIPerceptionSystemCompatibilityMode = 0xc0; // char : 1
		constexpr auto LastRemoteNoisePosition = 0xc4; // FVector
		constexpr auto NoiseLifetime = 0xd0; // float
		constexpr auto LastRemoteNoiseVolume = 0xd4; // float
		constexpr auto LastRemoteNoiseTime = 0xd8; // double
		constexpr auto LastLocalNoiseVolume = 0xe0; // float
		constexpr auto LastLocalNoiseTime = 0xe8; // double
	}

	namespace n_USizeBox {
		constexpr auto WidthOverride = 0x130; // float
		constexpr auto HeightOverride = 0x134; // float
		constexpr auto MinDesiredWidth = 0x138; // float
		constexpr auto MinDesiredHeight = 0x13c; // float
		constexpr auto MaxDesiredWidth = 0x140; // float
		constexpr auto MaxDesiredHeight = 0x144; // float
		constexpr auto MinAspectRatio = 0x148; // float
		constexpr auto MaxAspectRatio = 0x14c; // float
		constexpr auto bOverride_WidthOverride = 0x150; // char : 1
		constexpr auto bOverride_HeightOverride = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MinDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredWidth = 0x150; // char : 1
		constexpr auto bOverride_MaxDesiredHeight = 0x150; // char : 1
		constexpr auto bOverride_MinAspectRatio = 0x150; // char : 1
		constexpr auto bOverride_MaxAspectRatio = 0x150; // char : 1
	}

	namespace n_UDrawPolyPathTool {
		constexpr auto TransformProps = 0xa0; // UDrawPolyPathProperties*
		constexpr auto ExtrudeProperties = 0xa8; // UDrawPolyPathExtrudeProperties*
		constexpr auto MaterialProperties = 0xb0; // UNewMeshMaterialProperties*
		constexpr auto PlaneMechanic = 0x140; // UConstructionPlaneMechanic*
		constexpr auto EditPreview = 0x1e8; // UPolyEditPreviewMesh*
		constexpr auto ExtrudeHeightMechanic = 0x1f0; // UPlaneDistanceFromHitMechanic*
		constexpr auto CurveDistMechanic = 0x1f8; // USpatialCurveDistanceMechanic*
		constexpr auto SurfacePathMechanic = 0x200; // UCollectSurfacePathMechanic*
	}

	namespace n_UUserDefinedStruct {
		constexpr auto Status = 0xc0; // EUserDefinedStructureStatus
		constexpr auto Guid = 0xc4; // FGuid
	}

	namespace n_ASGStructureCropLand {
		constexpr auto ServerCropInfoArray = 0x1090; // TArray<UServerCropInfo*>
		constexpr auto ClientCropInfoArray = 0x10a0; // TArray<UClientCropInfo*>
		constexpr auto CropInstancedArray = 0x10b0; // TArray<uint16_t>
		constexpr auto MaxSoilLoose = 0x10c0; // float
		constexpr auto SoilLoose = 0x10c4; // float
		constexpr auto LooseDecreaseUpdateValue = 0x10c8; // float
		constexpr auto MaxNFertilizer = 0x10cc; // float
		constexpr auto NFertilizer = 0x10d0; // float
		constexpr auto MaxPFertilizer = 0x10d4; // float
		constexpr auto PFertilizer = 0x10d8; // float
		constexpr auto MaxKFertilizer = 0x10dc; // float
		constexpr auto KFertilizer = 0x10e0; // float
		constexpr auto SoilPropertyUpdateInterval = 0x10e4; // float
		constexpr auto NFertilizerAutoUpdateValue = 0x10e8; // float
		constexpr auto PFertilizerAutoUpdateValue = 0x10ec; // float
		constexpr auto KFertilizerAutoUpdateValue = 0x10f0; // float
		constexpr auto NFertilizerUpdateValue = 0x10f4; // float
		constexpr auto PFertilizerUpdateValue = 0x10f8; // float
		constexpr auto KFertilizerUpdateValue = 0x10fc; // float
		constexpr auto MaxApplyFertilizerCount = 0x1100; // int32_t
		constexpr auto ApplyFertilizerCount = 0x1104; // int32_t
		constexpr auto ApplyFertilizerCountUpdateInterval = 0x1108; // float
		constexpr auto AutoUseFertilizerRatio = 0x110c; // float
		constexpr auto FertilizerItemClass = 0x1110; // USGItem*
		constexpr auto AutoLooseIncreaseUpdateValue = 0x1118; // float
		constexpr auto NFertilizerBuff = 0x1120; // float
		constexpr auto PFertilizerBuff = 0x1124; // float
		constexpr auto KFertilizerBuff = 0x1128; // float
		constexpr auto BaseAddSoilLooseExperienceToAdd = 0x112c; // float
		constexpr auto SavedTickTimeSeconds = 0x1144; // float
	}

	namespace n_USlateWidgetStyleAsset {
		constexpr auto CustomStyle = 0x28; // USlateWidgetStyleContainerBase*
	}

	namespace n_UAnimCompress_RemoveEverySecondKey {
		constexpr auto MinKeys = 0x40; // int32_t
		constexpr auto bStartAtSecondKey = 0x44; // char : 1
	}

	namespace n_UBlueprintGeneratedClass {
		constexpr auto NumReplicatedProperties = 0x230; // int32_t
		constexpr auto bHasNativizedParent = 0x234; // char : 1
		constexpr auto bHasCookedComponentInstancingData = 0x234; // char : 1
		constexpr auto DynamicBindingObjects = 0x238; // TArray<UDynamicBlueprintBinding*>
		constexpr auto ComponentTemplates = 0x248; // TArray<UActorComponent*>
		constexpr auto Timelines = 0x258; // TArray<UTimelineTemplate*>
		constexpr auto ComponentClassOverrides = 0x268; // TArray<FBPComponentClassOverride>
		constexpr auto SimpleConstructionScript = 0x278; // USimpleConstructionScript*
		constexpr auto InheritableComponentHandler = 0x280; // UInheritableComponentHandler*
		constexpr auto UberGraphFramePointerProperty = 0x288; // UStructProperty*
		constexpr auto UberGraphFunction = 0x298; // UFunction*
		constexpr auto CookedComponentInstancingData = 0x2a0; // TMap<FName, FBlueprintCookedComponentInstancingData>
	}

	namespace n_USequenceCameraShakeCameraStandIn {
		constexpr auto FieldOfView = 0x30; // float
	}

	namespace n_UN_InventorySlot {
		constexpr auto BindItem = 0x264; // TWeakObjectPtr<USGItem>
		constexpr auto BindItemTemplate = 0x270; // USGItem*
		constexpr auto bIsCraftQueue = 0x278; // char : 1
		constexpr auto bg = 0x280; // UBorder*
		constexpr auto OutBorder = 0x288; // UBorder*
		constexpr auto InBorder = 0x290; // UBorder*
		constexpr auto QualityBorder = 0x298; // UBorder*
		constexpr auto ImgIcon = 0x2a0; // UImage*
		constexpr auto GuideImage = 0x2a8; // UImage*
		constexpr auto CanDropImage = 0x2b0; // UImage*
		constexpr auto CantDropImage = 0x2b8; // UImage*
		constexpr auto OccupyBorder = 0x2c0; // UBorder*
		constexpr auto StrengthIcon = 0x2c8; // UImage*
		constexpr auto GuildImageUnlockIcon = 0x2d0; // UImage*
		constexpr auto ConsumeItemCD = 0x2d8; // UProgressBar*
		constexpr auto SaveTimeProgress = 0x2e0; // UProgressBar*
		constexpr auto SaveTimeTextBlock = 0x2e8; // UTextBlock*
		constexpr auto IsUseImage = 0x2f0; // UImage*
		constexpr auto WeightBorder = 0x2f8; // UBorder*
		constexpr auto WeightText = 0x300; // UTextBlock*
		constexpr auto WeightBorderName = 0x308; // FName
		constexpr auto WeightTextName = 0x310; // FName
		constexpr auto RepairingImageName = 0x318; // FName
		constexpr auto RepairingImage = 0x320; // UImage*
		constexpr auto FlagPrintIconName = 0x328; // FName
		constexpr auto FlagPrintIcon = 0x330; // UImage*
		constexpr auto StrengthTextureInfo = 0x338; // TArray<FStrengthTextureInfo>
		constexpr auto RootSGUI = 0x348; // USGUI*
		constexpr auto ParentUI = 0x350; // UUserWidget*
		constexpr auto BindInventoryComponent = 0x358; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindSlot = 0x360; // int32_t
		constexpr auto InventoryType = 0x364; // EInventoryTypes
		constexpr auto Bg_Equip = 0x368; // FSlateBrush
		constexpr auto Bg_Inventory = 0x3f0; // FSlateBrush
		constexpr auto Bg_Craft = 0x478; // FSlateBrush
		constexpr auto Bg_CraftCanCraft = 0x500; // FSlateBrush
		constexpr auto Bg_CraftQueue = 0x588; // FSlateBrush
		constexpr auto Bg_ShortCut = 0x610; // FSlateBrush
		constexpr auto Bg_RemoteBag = 0x698; // FSlateBrush
		constexpr auto OutBorder_Normal = 0x720; // FSlateBrush
		constexpr auto OutBorder_CanCraft = 0x7a8; // FSlateBrush
		constexpr auto OutBorder_Hover = 0x830; // FSlateBrush
		constexpr auto OutBorder_InUse = 0x8b8; // FSlateBrush
		constexpr auto OutBorder_Select = 0x940; // FSlateBrush
		constexpr auto InBorder_Empty = 0x9c8; // FSlateBrush
		constexpr auto QualityBorderBrush = 0xa50; // FSlateBrush [0x7]
		constexpr auto LockBrush = 0xe08; // FSlateBrush
		constexpr auto RightButtonShowMenu = 0xe90; // char : 1
		constexpr auto bIsUsed = 0xe90; // char : 1
		constexpr auto bPressed = 0xe90; // char : 1
		constexpr auto IsHover = 0xe90; // char : 1
		constexpr auto bPlayDropSound = 0xe90; // char : 1
		constexpr auto IsRightMouseButtonDown = 0xe90; // char : 1
		constexpr auto bCanDrag = 0xe90; // char : 1
		constexpr auto bCanRightButtonClick = 0xe90; // char : 1
		constexpr auto bCanLeftButtonDoubleClick = 0xe91; // char : 1
		constexpr auto bCanCraft = 0xe91; // char : 1
		constexpr auto bUseItemIndex = 0xe91; // char : 1
		constexpr auto ItemIndex = 0xe94; // int32_t
		constexpr auto ItemAmount = 0xe98; // int32_t
		constexpr auto CraftPanelTipsTemplate = 0xea0; // UN_CraftPanelTips*
		constexpr auto ExtraMenuWidgetTemplate = 0xea8; // UN_SlotExtraMenu*
		constexpr auto DraggedItemClass = 0xeb0; // UN_DraggedItem*
		constexpr auto DefaultToolTipsClass = 0xeb8; // USGToolTipWidget*
		constexpr auto CanDropImages = 0xec0; // TArray<UImage*>
		constexpr auto CanFocusLost = 0xed0; // char : 1
		constexpr auto OnInventorySlotPressed = 0xed8; // FMulticastInlineDelegate
		constexpr auto OnInventorySlotReleased = 0xee8; // FMulticastInlineDelegate
		constexpr auto OnInventorySlotMouseEnter = 0xef8; // FMulticastInlineDelegate
		constexpr auto OnInventorySlotMouseLeave = 0xf08; // FMulticastInlineDelegate
		constexpr auto OnInventorySlotSinglePressed = 0xf18; // FMulticastInlineDelegate
		constexpr auto OnInventorySlotSingleReleased = 0xf28; // FMulticastInlineDelegate
		constexpr auto DialogSavedItemDragOperation = 0xf38; // UN_DragDropItem*
		constexpr auto bDialogSavedItemShift = 0xf40; // char : 1
		constexpr auto bDialogSavedItemCtrl = 0xf40; // char : 1
		constexpr auto BindTransportUI = 0xf48; // UUI_TransportMachine*
		constexpr auto RecordTransportItem = 0xf50; // TWeakObjectPtr<USGItem>
		constexpr auto RecordTransportItemInventoyType = 0xf58; // EInventoryTypes
		constexpr auto RecordTransportItemTargetInventoyType = 0xf59; // EInventoryTypes
		constexpr auto bRecordShift = 0xf5a; // char : 1
		constexpr auto bRecordCtrl = 0xf5a; // char : 1
		constexpr auto bShowInUse = 0xf5a; // char : 1
		constexpr auto PriorityPanel = 0xf60; // UHorizontalBox*
		constexpr auto HighImage = 0xf68; // UImage*
		constexpr auto MiddleImage = 0xf70; // UImage*
		constexpr auto LowImage = 0xf78; // UImage*
	}

	namespace n_UHuangLiEffectSlot {
		constexpr auto TitleText = 0x260; // UTextBlock*
		constexpr auto EffectsBox = 0x268; // UVerticalBox*
		constexpr auto EffectTextClass = 0x270; // UHuangLiEffectText*
	}

	namespace n_UPrefabComponent {
		constexpr auto bConnected = 0x488; // char : 1
		constexpr auto bLockSelection = 0x488; // char : 1
		constexpr auto Prefab = 0x490; // UPrefabAsset*
		constexpr auto GeneratedBlueprint = 0x498; // UBlueprint*
		constexpr auto PrefabInstancesMap = 0x4a0; // TMap<FName, AActor*>
		constexpr auto VariantRulesOverwrite = 0x4f0; // TArray<FPrefabVariantRule>
		constexpr auto bTransient = 0x500; // char : 1
	}

	namespace n_ULevelUpColWidget {
		constexpr auto LevelUpRewardText = 0x260; // UTextBlock*
	}

	namespace n_USiegeTipsAmmoSlot {
		constexpr auto AmountText = 0x270; // UTextBlock*
		constexpr auto SelectBorder = 0x278; // UBorder*
		constexpr auto ImgIcon = 0x280; // UImage*
	}

	namespace n_UStructureFrameInfoHUD {
		constexpr auto BindStructureFrame = 0x360; // TWeakObjectPtr<ASGStructureFrame>
		constexpr auto FrameCanvas = 0x368; // UCanvasPanel*
		constexpr auto FrameVerticalBox = 0x370; // UVerticalBox*
		constexpr auto StepIndex = 0x378; // int32_t
		constexpr auto CurrentStepCreatedMesh = 0x380; // TArray<FName>
		constexpr auto FrameTextList = 0x390; // TArray<UStructureInfoHUDSlot*>
	}

	namespace n_UParticleEmitter {
		constexpr auto EmitterName = 0x28; // FName
		constexpr auto SubUVDataOffset = 0x30; // int32_t
		constexpr auto EmitterRenderMode = 0x34; // EEmitterRenderMode
		constexpr auto SignificanceLevel = 0x35; // EParticleSignificanceLevel
		constexpr auto bUseLegacySpawningBehavior = 0x37; // char : 1
		constexpr auto ConvertedModules = 0x37; // char : 1
		constexpr auto bIsSoloing = 0x37; // char : 1
		constexpr auto bCookedOut = 0x37; // char : 1
		constexpr auto bDisabledLODsKeepEmitterAlive = 0x37; // char : 1
		constexpr auto bDisableWhenInsignficant = 0x38; // char : 1
		constexpr auto LODLevels = 0x40; // TArray<UParticleLODLevel*>
		constexpr auto PeakActiveParticles = 0x50; // int32_t
		constexpr auto InitialAllocationCount = 0x54; // int32_t
		constexpr auto QualityLevelSpawnRateScale = 0x58; // float
		constexpr auto DetailModeBitmask = 0x5c; // uint32_t
	}

	namespace n_UParticleLODLevel {
		constexpr auto Level = 0x28; // int32_t
		constexpr auto bEnabled = 0x2c; // char : 1
		constexpr auto RequiredModule = 0x30; // UParticleModuleRequired*
		constexpr auto Modules = 0x38; // TArray<UParticleModule*>
		constexpr auto TypeDataModule = 0x48; // UParticleModuleTypeDataBase*
		constexpr auto SpawnModule = 0x50; // UParticleModuleSpawn*
		constexpr auto EventGenerator = 0x58; // UParticleModuleEventGenerator*
		constexpr auto SpawningModules = 0x60; // TArray<UParticleModuleSpawnBase*>
		constexpr auto SpawnModules = 0x70; // TArray<UParticleModule*>
		constexpr auto UpdateModules = 0x80; // TArray<UParticleModule*>
		constexpr auto OrbitModules = 0x90; // TArray<UParticleModuleOrbit*>
		constexpr auto EventReceiverModules = 0xa0; // TArray<UParticleModuleEventReceiverBase*>
		constexpr auto ConvertedModules = 0xb0; // char : 1
		constexpr auto PeakActiveParticles = 0xb4; // int32_t
	}

	namespace n_UPolyEditExtrudeProperties {
		constexpr auto Direction = 0x60; // EPolyEditExtrudeDirection
		constexpr auto bShellsToSolids = 0x64; // bool
	}

	namespace n_UWBP_KeyItemTips_C {
		constexpr auto ImgBack = 0x288; // UImage*
	}

	namespace n_UBoxReflectionCaptureComponent {
		constexpr auto BoxTransitionDistance = 0x280; // float
		constexpr auto PreviewInfluenceBox = 0x288; // UBoxComponent*
		constexpr auto PreviewCaptureBox = 0x290; // UBoxComponent*
	}

	namespace n_UBlackboardKeyType_Object {
		constexpr auto BaseClass = 0x30; // UObject*
	}

	namespace n_UNiagaraDataInterfaceVelocityGrid {
		constexpr auto GridSize = 0xd8; // FIntVector
	}

	namespace n_ALevelScriptActor {
		constexpr auto bInputEnabled = 0x310; // char : 1
	}

	namespace n_UUI_StructureContainerLogSlot {
		constexpr auto StructureItemLogSlot = 0x2d8; // UUI_StructureOccupyItemSlot*
		constexpr auto PlayerNameText = 0x2e0; // UTextBlock*
		constexpr auto GuildNameText = 0x2e8; // UTextBlock*
		constexpr auto ItemNumText = 0x2f0; // UTextBlock*
		constexpr auto ItemOptionTypeText = 0x2f8; // URichTextBlock*
		constexpr auto UTCTimeText = 0x300; // UTextBlock*
	}

	namespace n_UMaterialExpressionWorldPosition {
		constexpr auto WorldPositionShaderOffset = 0x40; // EWorldPositionIncludedOffsets
	}

	namespace n_UUIWSGerstnerWaterWaves {
		constexpr auto GerstnerWaveGenerator = 0x28; // UUIWSGerstnerWaterWaveGeneratorBase*
		constexpr auto GerstnerWaves = 0x30; // TArray<FUIWSGerstnerWave>
		constexpr auto MaxWaveHeight = 0x40; // float
	}

	namespace n_UWBP_PrivateSessionListEntry_C {
		constexpr auto Image = 0x2f0; // UImage*
		constexpr auto Image_1 = 0x2f8; // UImage*
		constexpr auto ImgClose = 0x300; // UImage*
		constexpr auto ImgDetailBottom = 0x308; // UImage*
		constexpr auto ImgDetailTop = 0x310; // UImage*
		constexpr auto ImgMapListTitle = 0x318; // UImage*
		constexpr auto ImgSessionBg = 0x320; // UImage*
	}

	namespace n_UGerstnerWaterWaves {
		constexpr auto GerstnerWaveGenerator = 0x28; // UGerstnerWaterWaveGeneratorBase*
		constexpr auto GerstnerWaves = 0x30; // TArray<FGerstnerWave>
		constexpr auto MaxWaveHeight = 0x40; // float
	}

	namespace n_UPhononMaterialComponent {
		constexpr auto MaterialIndex = 0xc0; // int32_t
		constexpr auto MaterialPreset = 0xc4; // EPhononMaterial
		constexpr auto LowFreqAbsorption = 0xc8; // float
		constexpr auto MidFreqAbsorption = 0xcc; // float
		constexpr auto HighFreqAbsorption = 0xd0; // float
		constexpr auto LowFreqTransmission = 0xd4; // float
		constexpr auto MidFreqTransmission = 0xd8; // float
		constexpr auto HighFreqTransmission = 0xdc; // float
		constexpr auto Scattering = 0xe0; // float
	}

	namespace n_UParticleModuleColor_Seeded {
		constexpr auto RandomSeedInfo = 0xb0; // FParticleRandomSeedInfo
	}

	namespace n_UAssetExportTask {
		constexpr auto Object = 0x28; // UObject*
		constexpr auto Exporter = 0x30; // UExporter*
		constexpr auto Filename = 0x38; // FString
		constexpr auto bSelected = 0x48; // bool
		constexpr auto bReplaceIdentical = 0x49; // bool
		constexpr auto bPrompt = 0x4a; // bool
		constexpr auto bAutomated = 0x4b; // bool
		constexpr auto bUseFileArchive = 0x4c; // bool
		constexpr auto bWriteEmptyFiles = 0x4d; // bool
		constexpr auto IgnoreObjectList = 0x50; // TArray<UObject*>
		constexpr auto Options = 0x60; // UObject*
		constexpr auto Errors = 0x68; // TArray<FString>
	}

	namespace n_UMaterialParameterCollectionInstance {
		constexpr auto Collection = 0x30; // UMaterialParameterCollection*
	}

	namespace n_AGameSession {
		constexpr auto MaxSpectators = 0x310; // int32_t
		constexpr auto MaxPlayers = 0x314; // int32_t
		constexpr auto MaxPartySize = 0x318; // int32_t
		constexpr auto MaxSplitscreensPerConnection = 0x31c; // char
		constexpr auto bRequiresPushToTalk = 0x31d; // bool
		constexpr auto SessionName = 0x320; // FName
	}

	namespace n_UUI_PlayerShowSlot {
		constexpr auto BGBorder = 0x260; // UBorder*
		constexpr auto OutBorder = 0x268; // UBorder*
		constexpr auto SlotBg = 0x270; // UImage*
		constexpr auto AnimIcon = 0x278; // UImage*
		constexpr auto SelectedImg = 0x280; // UImage*
		constexpr auto LockImg = 0x288; // UImage*
		constexpr auto NormalBorderIcon = 0x298; // TSoftObjectPtr<UTexture2D>
		constexpr auto HorverBorderIcon = 0x2c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectedBorderIcon = 0x2e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto CommonSlotBGIcon = 0x310; // TSoftObjectPtr<UTexture2D>
		constexpr auto CanDropSlotBGIcon = 0x338; // TSoftObjectPtr<UTexture2D>
		constexpr auto DraggedItemClass = 0x360; // UN_DraggedItem*
		constexpr auto PlayerShowTipsClass = 0x368; // UUI_PlayerShowTips*
		constexpr auto ExtraMenuWidgetTemplate = 0x370; // UUI_PlayerShowExtraMenu*
		constexpr auto bCanFocus = 0x378; // char
		constexpr auto bPressed = 0x379; // char : 1
		constexpr auto IsHover = 0x379; // char : 1
		constexpr auto bCanDrag = 0x379; // char : 1
		constexpr auto bEquipMode = 0x379; // char : 1
		constexpr auto IsRightMouseButtonDown = 0x379; // char : 1
		constexpr auto bIsLocked = 0x379; // char : 1
		constexpr auto AnimIconSoftTexture = 0x380; // TSoftObjectPtr<UTexture2D>
		constexpr auto RootUI = 0x3a8; // TWeakObjectPtr<UUI_PlayerShowSetting>
		constexpr auto OnPlayerShowSlotPressed = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnPlayerShowSlotReleased = 0x3c0; // FMulticastInlineDelegate
	}

	namespace n_UAbilityTask_WaitCancel {
		constexpr auto OnCancel = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneFloatSection {
		constexpr auto FloatCurve = 0xf0; // FMovieSceneFloatChannel
	}

	namespace n_UAbilityTask_WaitConfirmCancel {
		constexpr auto OnConfirm = 0x80; // FMulticastInlineDelegate
		constexpr auto OnCancel = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UClothLODDataCommon_Legacy {
		constexpr auto PhysicalMeshData = 0x28; // UClothPhysicalMeshDataBase_Legacy*
		constexpr auto ClothPhysicalMeshData = 0x30; // FClothPhysicalMeshData
		constexpr auto CollisionData = 0x128; // FClothCollisionData
	}

	namespace n_UDynamicMeshBrushTool {
		constexpr auto PreviewMesh = 0x1c0; // UPreviewMesh*
	}

	namespace n_UDeathLocationHUD {
		constexpr auto DeathCharacterInfo = 0x260; // FDeathCharacterInfo
		constexpr auto LocationText = 0x298; // UTextBlock*
	}

	namespace n_ASkyAtmosphere {
		constexpr auto SkyAtmosphereComponent = 0x310; // USkyAtmosphereComponent*
	}

	namespace n_UWBP_GammaSettingSliderItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto ImgScrollBg = 0x370; // UImage*
		constexpr auto Slider = 0x378; // USlider*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto TbValue = 0x388; // UTextBlock*
		constexpr auto StepSize = 0x390; // float
	}

	namespace n_ANpcSpawnVolume {
		constexpr auto bNeedCheckFloor = 0x348; // char : 1
		constexpr auto bStaticSpawnVolume = 0x348; // char : 1
		constexpr auto ChangeGuardCDTimeMin = 0x34c; // float
		constexpr auto ChangeGuardCDTimeMax = 0x350; // float
		constexpr auto ChangeGuardWaitTime = 0x354; // float
		constexpr auto bCheckSameGuard = 0x358; // char : 1
		constexpr auto BehaviorPointConfig = 0x360; // TArray<FBehaviorPointConfig>
		constexpr auto SpawnPoints = 0x370; // TArray<FTransform>
		constexpr auto SpawnVolumeFloors = 0x3a0; // TArray<AActor*>
		constexpr auto VolumeName = 0x3b0; // FText
		constexpr auto NPCDeathDropType = 0x3c8; // FString
	}

	namespace n_UResonanceAudioSpatializationSourceSettings {
		constexpr auto SpatializationMethod = 0x28; // ERaSpatializationMethod
		constexpr auto Pattern = 0x2c; // float
		constexpr auto Sharpness = 0x30; // float
		constexpr auto bToggleVisualization = 0x34; // bool
		constexpr auto Scale = 0x38; // float
		constexpr auto Spread = 0x3c; // float
		constexpr auto Rolloff = 0x40; // ERaDistanceRolloffModel
		constexpr auto MinDistance = 0x44; // float
		constexpr auto MaxDistance = 0x48; // float
	}

	namespace n_UCurveFloat {
		constexpr auto FloatCurve = 0x30; // FRichCurve
		constexpr auto bIsEventCurve = 0xb0; // bool
	}

	namespace n_UPaletteWidget {
		constexpr auto ColorTemplateClass = 0x260; // UColorTemplate*
		constexpr auto ColorTemplates = 0x268; // TArray<FVector2D>
		constexpr auto UGPColorTemplate = 0x288; // UUniformGridPanel*
		constexpr auto ColorSelector = 0x290; // UColorSelector*
	}

	namespace n_UGameplayCueNotify_HitImpact {
		constexpr auto Sound = 0x40; // USoundBase*
		constexpr auto ParticleSystem = 0x48; // UParticleSystem*
	}

	namespace n_UMaterialExpressionComment {
		constexpr auto SizeX = 0x40; // int32_t
		constexpr auto SizeY = 0x44; // int32_t
		constexpr auto Text = 0x48; // FString
		constexpr auto CommentColor = 0x58; // FLinearColor
		constexpr auto FontSize = 0x68; // int32_t
	}

	namespace n_UOnlinePIESettings {
		constexpr auto bOnlinePIEEnabled = 0x38; // bool
		constexpr auto Logins = 0x40; // TArray<FPIELoginSettingsInternal>
	}

	namespace n_UParticleModuleRequired {
		constexpr auto Material = 0x30; // UMaterialInterface*
		constexpr auto MinFacingCameraBlendDistance = 0x38; // float
		constexpr auto MaxFacingCameraBlendDistance = 0x3c; // float
		constexpr auto EmitterOrigin = 0x40; // FVector
		constexpr auto EmitterRotation = 0x4c; // FRotator
		constexpr auto ScreenAlignment = 0x58; // EParticleScreenAlignment
		constexpr auto bUseLocalSpace = 0x59; // char : 1
		constexpr auto bKillOnDeactivate = 0x59; // char : 1
		constexpr auto bKillOnCompleted = 0x59; // char : 1
		constexpr auto SortMode = 0x5a; // EParticleSortMode
		constexpr auto bUseLegacyEmitterTime = 0x5b; // char : 1
		constexpr auto bRemoveHMDRoll = 0x5b; // char : 1
		constexpr auto bEmitterDurationUseRange = 0x5b; // char : 1
		constexpr auto EmitterDuration = 0x5c; // float
		constexpr auto SpawnRate = 0x60; // FRawDistributionFloat
		constexpr auto BurstList = 0x90; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xa0; // float
		constexpr auto EmitterDelayLow = 0xa4; // float
		constexpr auto bDelayFirstLoopOnly = 0xa8; // char : 1
		constexpr auto InterpolationMethod = 0xa9; // EParticleSubUVInterpMethod
		constexpr auto bScaleUV = 0xaa; // char : 1
		constexpr auto bEmitterDelayUseRange = 0xaa; // char : 1
		constexpr auto ParticleBurstMethod = 0xab; // EParticleBurstMethod
		constexpr auto bOverrideSystemMacroUV = 0xac; // char : 1
		constexpr auto bUseMaxDrawCount = 0xac; // char : 1
		constexpr auto OpacitySourceMode = 0xad; // EOpacitySourceMode
		constexpr auto EmitterNormalsMode = 0xae; // EEmitterNormalsMode
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0xaf; // char : 1
		constexpr auto SubImages_Horizontal = 0xb0; // int32_t
		constexpr auto SubImages_Vertical = 0xb4; // int32_t
		constexpr auto RandomImageTime = 0xb8; // float
		constexpr auto RandomImageChanges = 0xbc; // int32_t
		constexpr auto MacroUVPosition = 0xc0; // FVector
		constexpr auto MacroUVRadius = 0xcc; // float
		constexpr auto UVFlippingMode = 0xd0; // EParticleUVFlipMode
		constexpr auto BoundingMode = 0xd1; // ESubUVBoundingVertexCount
		constexpr auto bDurationRecalcEachLoop = 0xd2; // char : 1
		constexpr auto NormalsSphereCenter = 0xd4; // FVector
		constexpr auto AlphaThreshold = 0xe0; // float
		constexpr auto EmitterLoops = 0xe4; // int32_t
		constexpr auto CutoutTexture = 0xe8; // UTexture2D*
		constexpr auto MaxDrawCount = 0xf0; // int32_t
		constexpr auto EmitterDurationLow = 0xf4; // float
		constexpr auto NormalsCylinderDirection = 0xf8; // FVector
		constexpr auto NamedMaterialOverrides = 0x108; // TArray<FName>
	}

	namespace n_USGGameDataJueWei {
		constexpr auto AllJueWei = 0x28; // TMap<int32_t, FJueWeiConfig>
		constexpr auto RenownExpAdd = 0x78; // float [0xd]
		constexpr auto JueWeiPropTip = 0xb0; // TArray<FText>
	}

	namespace n_UClothPhysicalMeshDataBase_Legacy {
		constexpr auto Vertices = 0x28; // TArray<FVector>
		constexpr auto Normals = 0x38; // TArray<FVector>
		constexpr auto Indices = 0x48; // TArray<uint32_t>
		constexpr auto InverseMasses = 0x58; // TArray<float>
		constexpr auto BoneData = 0x68; // TArray<FClothVertBoneData>
		constexpr auto NumFixedVerts = 0x78; // int32_t
		constexpr auto MaxBoneWeights = 0x7c; // int32_t
		constexpr auto SelfCollisionIndices = 0x80; // TArray<uint32_t>
	}

	namespace n_UN_RemoteFunctionSlot {
		constexpr auto RootUI = 0x260; // TWeakObjectPtr<USGUI>
		constexpr auto ParentUI = 0x268; // TWeakObjectPtr<UUserWidget>
		constexpr auto BindInventory = 0x270; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto ItemGrid = 0x278; // UUniformGridPanel*
		constexpr auto AcceptButton = 0x280; // UButton*
		constexpr auto EnoughText = 0x288; // UTextBlock*
		constexpr auto ShowEnoughtText = 0x290; // FText
		constexpr auto ShowNotEnoughText = 0x2a8; // FText
		constexpr auto EnoughColor = 0x2c0; // FLinearColor
		constexpr auto NotEnoughColor = 0x2d0; // FLinearColor
		constexpr auto CheckItemSlotTemplate = 0x2e0; // UGenericConfirmationCheckItemSlot*
		constexpr auto CheckItemList = 0x2e8; // TArray<UGenericConfirmationCheckItemSlot*>
		constexpr auto SlotWidth = 0x2f8; // float
		constexpr auto SlotHeight = 0x2fc; // float
		constexpr auto SlotFontSize = 0x300; // int32_t
		constexpr auto CancelButton = 0x308; // UButton*
	}

	namespace n_ASGStructureInteractiveVolume {
		constexpr auto StaticLinkStructure = 0x348; // ASGStructure*
		constexpr auto VolumePlayers = 0x350; // TArray<TWeakObjectPtr<ASGPlayerCharacter>>
		constexpr auto TriggerHandle = 0x360; // FTimerHandle
	}

	namespace n_URichTextBlockImageDecorator {
		constexpr auto ImageSet = 0x28; // UDataTable*
	}

	namespace n_UGeneralAuctionPanel {
		constexpr auto ScrollGeneralList = 0x2d8; // UScrollBox*
		constexpr auto ComboBoxQuality = 0x2e0; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxSpecialType = 0x2e8; // UGuildAuthorityComboBox*
		constexpr auto ComboBoxLevel = 0x2f0; // UGuildAuthorityComboBox*
		constexpr auto SearchButton = 0x2f8; // UButton*
		constexpr auto BuyButton = 0x300; // UButton*
		constexpr auto EquipPanel = 0x308; // UN_EquipPanel*
		constexpr auto AttributePanel = 0x310; // UAttributePanel*
		constexpr auto ConditionPanel = 0x318; // UConditionPanel*
		constexpr auto SkillPanel = 0x320; // USkillPanel*
		constexpr auto AttributeButton = 0x328; // UOptionButton*
		constexpr auto ConditionButton = 0x330; // UOptionButton*
		constexpr auto SkillButton = 0x338; // UOptionButton*
		constexpr auto CanvasPanel_Preview = 0x340; // UCanvasPanel*
		constexpr auto TextBlock_GeneralName = 0x348; // UTextBlock*
		constexpr auto TextBlock_GeneralLevel = 0x350; // UTextBlock*
		constexpr auto GeneralQualityImage = 0x358; // UImage*
		constexpr auto GeneralNameBg = 0x360; // UImage*
		constexpr auto Button_Previous = 0x368; // UButton*
		constexpr auto Button_Next = 0x370; // UButton*
		constexpr auto TextBlock_CurrentPage = 0x378; // UTextBlock*
		constexpr auto GeneralAuctionSellSlot = 0x380; // UGeneralAuctionSellSlot*
		constexpr auto GeneralQuality = 0x388; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto GeneralNameBrush = 0x478; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto GeneralNameColor = 0x518; // FLinearColor [0x6]
		constexpr auto MaxLevel = 0x578; // int32_t
		constexpr auto MaxPage = 0x57c; // int32_t
		constexpr auto OnePageDataCount = 0x580; // int32_t
		constexpr auto GeneralSlotSelected = 0x598; // TWeakObjectPtr<UGeneralAuctionSellSlot>
		constexpr auto ParentUI = 0x5a0; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UDatasmithCineCameraActorTemplate {
		constexpr auto LookatTrackingSettings = 0x30; // FDatasmithCameraLookatTrackingSettingsTemplate
	}

	namespace n_UParticleModuleEventReceiverSpawn {
		constexpr auto SpawnCount = 0x40; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x70; // char : 1
		constexpr auto bUsePSysLocation = 0x70; // char : 1
		constexpr auto bInheritVelocity = 0x70; // char : 1
		constexpr auto InheritVelocityScale = 0x78; // FRawDistributionVector
		constexpr auto PhysicalMaterials = 0xc0; // TArray<UPhysicalMaterial*>
		constexpr auto bBanPhysicalMaterials = 0xd0; // char : 1
	}

	namespace n_USGPerk {
		constexpr auto Name = 0x28; // FText
		constexpr auto Description = 0x40; // FText
		constexpr auto Param1 = 0x58; // FString
		constexpr auto Param2 = 0x68; // FString
		constexpr auto Param3 = 0x78; // FString
		constexpr auto Param4 = 0x88; // FString
		constexpr auto Param5 = 0x98; // FString
		constexpr auto PerkTexture = 0xa8; // TSoftObjectPtr<UTexture2D>
		constexpr auto RequiredCharacterLevel = 0xd0; // int32_t
		constexpr auto RequiredPerkPoints = 0xd4; // int32_t
		constexpr auto PerkRequirement = 0xd8; // FPerkEntries
		constexpr auto PerkState = 0xe8; // EPerkState
		constexpr auto RequiredSmallSkillLevel = 0xec; // int32_t
		constexpr auto SPType = 0xf0; // ESPType
		constexpr auto SPSmallSkillType = 0xf4; // int32_t
		constexpr auto SkillColumnIndex = 0xf8; // int32_t
		constexpr auto bIsGeneralSkill = 0xfc; // char : 1
		constexpr auto GeneralSkillRowIndex = 0x100; // int32_t
		constexpr auto GeneralSkillColumnIndex = 0x104; // int32_t
		constexpr auto LevelBuff = 0x108; // TArray<USGBuff*>
		constexpr auto LearnSkillCondition = 0x118; // TArray<EGeneralsLearnSkillConditionType>
		constexpr auto GeneralRequireSmallSkillCondition = 0x128; // TArray<FGeneralSkillCondition>
		constexpr auto BindBuff = 0x138; // USGBuff*
		constexpr auto LevelPerk = 0x140; // TArray<FLevelPerk>
		constexpr auto RequireItems = 0x150; // TArray<FPerkItemRequirement>
		constexpr auto RequireCopper = 0x160; // int32_t
	}

	namespace n_UUI_MakeAppearance {
		constexpr auto LobbyCreateRoleCameraTemplate = 0x2d8; // ACreateRoleCameraActor*
		constexpr auto PrivateCreateRoleCameraTemplate = 0x2e0; // ACreateRoleCameraActor*
		constexpr auto LobbyPreviewMeshTransform = 0x2f0; // FTransform
		constexpr auto PreviewMeshTransform = 0x320; // FTransform
		constexpr auto VoiceRadioTemplate = 0x350; // UVoiceRadio*
		constexpr auto VoiceAuditionTemplate = 0x358; // UVoiceAudition*
		constexpr auto TattooLayerRadioTemplate = 0x360; // UTattooLayerRadio*
		constexpr auto DefaultCreateInfo = 0x368; // FCreateInfo
		constexpr auto SGAudioManager = 0x4e8; // ASGAudioManager*
		constexpr auto MorphSliderViewMap = 0x4f0; // TMap<FName, UUI_SliderView*>
		constexpr auto IsFreeCamera = 0x540; // char : 1
		constexpr auto PreviewMeshInteraction = 0x558; // UUI_PreviewMeshInteraction*
		constexpr auto BtnFreeCamera = 0x560; // UButton*
		constexpr auto TbFreeCamera = 0x568; // UTextBlock*
		constexpr auto HairColorSelector = 0x570; // UUI_ColorSelector*
		constexpr auto MoustacheColorSelector = 0x578; // UUI_ColorSelector*
		constexpr auto SkinPaletteCanvas = 0x580; // UPaletteWidget*
		constexpr auto BtnRandomTemplate = 0x588; // UButton*
		constexpr auto BtnSaveTemplate = 0x590; // UButton*
		constexpr auto BtnLoadTemplate = 0x598; // UButton*
		constexpr auto BtnReset = 0x5a0; // UButton*
		constexpr auto VoiceView = 0x5a8; // UUI_RadioButtonView*
		constexpr auto VoicePitchSlider = 0x5b0; // UUI_SliderView*
		constexpr auto UGPAuditionVoice = 0x5b8; // UUniformGridPanel*
		constexpr auto HeightSlider = 0x5c0; // UUI_SliderView*
		constexpr auto DirtSlider = 0x5c8; // UUI_SliderView*
		constexpr auto MuscleSlider = 0x5d0; // UUI_SliderView*
		constexpr auto BodyFatSlider = 0x5d8; // UUI_SliderView*
		constexpr auto FeatureListView = 0x5e0; // UFeatureListView*
		constexpr auto HairListView = 0x5e8; // UHairListView*
		constexpr auto MoustacheListView = 0x5f0; // UMoustacheListView*
		constexpr auto TattooListView = 0x5f8; // UTattooListView*
		constexpr auto TattooPartsView = 0x600; // UUI_RadioButtonView*
		constexpr auto TattooLayerView = 0x608; // UTattooLayerRadioView*
		constexpr auto TattooUMove = 0x610; // UUI_SliderView*
		constexpr auto TattooVMove = 0x618; // UUI_SliderView*
		constexpr auto TattooUSize = 0x620; // UUI_SliderView*
		constexpr auto TattooVSize = 0x628; // UUI_SliderView*
		constexpr auto TattooRotation = 0x630; // UUI_SliderView*
		constexpr auto TattooAlpha = 0x638; // UUI_SliderView*
		constexpr auto BodyPanelView = 0x640; // UUI_RadioButtonView*
		constexpr auto FacePanelView = 0x648; // UUI_RadioButtonView*
		constexpr auto UGPTattoo = 0x650; // UUniformGridPanel*
		constexpr auto LeftNavigationView = 0x658; // UNavigationRadioView*
	}

	namespace n_UNiagaraDataInterfaceVectorCurve {
		constexpr auto XCurve = 0x70; // FRichCurve
		constexpr auto YCurve = 0xf0; // FRichCurve
		constexpr auto ZCurve = 0x170; // FRichCurve
	}

	namespace n_UProceduralTorusToolProperties {
		constexpr auto MajorRadius = 0x70; // float
		constexpr auto MinorRadius = 0x74; // float
		constexpr auto TubeSlices = 0x78; // int32_t
		constexpr auto CrossSectionSlices = 0x7c; // int32_t
	}

	namespace n_ULightComponentBase {
		constexpr auto LightGuid = 0x208; // FGuid
		constexpr auto Brightness = 0x218; // float
		constexpr auto Intensity = 0x21c; // float
		constexpr auto LightColor = 0x220; // FColor
		constexpr auto bAffectsWorld = 0x224; // char : 1
		constexpr auto CastShadows = 0x224; // char : 1
		constexpr auto CastStaticShadows = 0x224; // char : 1
		constexpr auto CastDynamicShadows = 0x224; // char : 1
		constexpr auto bAffectTranslucentLighting = 0x224; // char : 1
		constexpr auto bTransmission = 0x224; // char : 1
		constexpr auto bCastVolumetricShadow = 0x224; // char : 1
		constexpr auto bCastDeepShadow = 0x224; // char : 1
		constexpr auto bCastRaytracedShadow = 0x225; // char : 1
		constexpr auto bAffectReflection = 0x225; // char : 1
		constexpr auto bAffectGlobalIllumination = 0x225; // char : 1
		constexpr auto DeepShadowLayerDistribution = 0x228; // float
		constexpr auto IndirectLightingIntensity = 0x22c; // float
		constexpr auto VolumetricScatteringIntensity = 0x230; // float
		constexpr auto SamplesPerPixel = 0x234; // int32_t
	}

	namespace n_UARImageComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARImageUpdatePayload
	}

	namespace n_UConstantQNRTSettings {
		constexpr auto StartingFrequency = 0x28; // float
		constexpr auto NumBands = 0x2c; // int32_t
		constexpr auto NumBandsPerOctave = 0x30; // float
		constexpr auto AnalysisPeriod = 0x34; // float
		constexpr auto bDownmixToMono = 0x38; // bool
		constexpr auto FFTSize = 0x39; // EConstantQFFTSizeEnum
		constexpr auto WindowType = 0x3a; // EFFTWindowType
		constexpr auto SpectrumType = 0x3b; // EAudioSpectrumType
		constexpr auto BandWidthStretch = 0x3c; // float
		constexpr auto CQTNormalization = 0x40; // EConstantQNormalizationEnum
		constexpr auto NoiseFloorDb = 0x44; // float
	}

	namespace n_UN_RemoteCraftInventoryFoodPanel {
		constexpr auto ParentUI = 0x260; // UN_RemoteCraftInventoryPanel*
	}

	namespace n_UUI_NPCInfo {
		constexpr auto GeneralCampUI = 0x2d8; // UUI_N_General*
		constexpr auto VehicleCampUI = 0x2e0; // UUI_VehicleCamp*
	}

	namespace n_UUI_Season {
		constexpr auto SeasonPassportPage = 0x2d8; // UUI_SeasonPassport*
		constexpr auto SeasonInfoText = 0x2e0; // UTextBlock*
		constexpr auto WBP_SeasonQuest = 0x2e8; // UUI_SeasonQuest*
		constexpr auto WBP_SeasonWeekQuest = 0x2f0; // UUI_SeasonQuest*
		constexpr auto WBP_SeasonShop = 0x2f8; // UUI_SeasonShop*
		constexpr auto BtnSeason = 0x300; // UButton*
		constexpr auto BtnSeasonQuest = 0x308; // UButton*
		constexpr auto BtnSeasonWeekQuest = 0x310; // UButton*
		constexpr auto BtnSeasonReward = 0x318; // UButton*
	}

	namespace n_ABP_HorseMC_Login_Base_C {
		constexpr auto UberGraphFrame = 0x5d0; // FPointerToUberGraphFrame
		constexpr auto Armor = 0x5d8; // USkeletalMeshComponent*
		constexpr auto Weapon = 0x5e0; // UStaticMeshComponent*
		constexpr auto Ponytail = 0x5e8; // USkeletalMeshComponent*
		constexpr auto Bristle = 0x5f0; // USkeletalMeshComponent*
		constexpr auto Saddle = 0x5f8; // USkeletalMeshComponent*
		constexpr auto Cuish = 0x600; // USkeletalMeshComponent*
		constexpr auto Chest = 0x608; // USkeletalMeshComponent*
		constexpr auto Helmet = 0x610; // USkeletalMeshComponent*
		constexpr auto Human = 0x618; // USkeletalMeshComponent*
		constexpr auto MenuCharacterAnimInstance = 0x620; // UABP_MenuCharacter_C*
		constexpr auto MenuHorseAnimInstance = 0x628; // UABP_MenuHorse_C*
		constexpr auto HumanAnimation = 0x630; // UAnimSequence*
		constexpr auto HorseAnimation = 0x638; // UAnimSequence*
		constexpr auto Left Reins Enabled = 0x640; // bool
		constexpr auto Right Reins Enabled = 0x641; // bool
	}

	namespace n_UNiagaraEmitter {
		constexpr auto bLocalSpace = 0x28; // bool
		constexpr auto bDeterminism = 0x29; // bool
		constexpr auto RandomSeed = 0x2c; // int32_t
		constexpr auto AllocationMode = 0x30; // EParticleAllocationMode
		constexpr auto PreAllocationCount = 0x34; // int32_t
		constexpr auto UpdateScriptProps = 0x38; // FNiagaraEmitterScriptProperties
		constexpr auto SpawnScriptProps = 0x60; // FNiagaraEmitterScriptProperties
		constexpr auto SimTarget = 0x88; // ENiagaraSimTarget
		constexpr auto FixedBounds = 0x8c; // FBox
		constexpr auto MinDetailLevel = 0xa8; // int32_t
		constexpr auto MaxDetailLevel = 0xac; // int32_t
		constexpr auto GlobalSpawnCountScaleOverrides = 0xb0; // FNiagaraDetailsLevelScaleOverrides
		constexpr auto Platforms = 0xc8; // FNiagaraPlatformSet
		constexpr auto ScalabilityOverrides = 0xf8; // FNiagaraEmitterScalabilityOverrides
		constexpr auto bInterpolatedSpawning = 0x108; // char : 1
		constexpr auto bFixedBounds = 0x108; // char : 1
		constexpr auto bUseMinDetailLevel = 0x108; // char : 1
		constexpr auto bUseMaxDetailLevel = 0x108; // char : 1
		constexpr auto bOverrideGlobalSpawnCountScale = 0x108; // char : 1
		constexpr auto bRequiresPersistentIDs = 0x108; // char : 1
		constexpr auto bCombineEventSpawn = 0x108; // char : 1
		constexpr auto MaxDeltaTimePerTick = 0x10c; // float
		constexpr auto DefaultShaderStageIndex = 0x110; // uint32_t
		constexpr auto MaxUpdateIterations = 0x114; // uint32_t
		constexpr auto SpawnStages = 0x118; // TSet<uint32_t>
		constexpr auto bSimulationStagesEnabled = 0x168; // char : 1
		constexpr auto bDeprecatedShaderStagesEnabled = 0x168; // char : 1
		constexpr auto bLimitDeltaTime = 0x168; // char : 1
		constexpr auto UniqueEmitterName = 0x170; // FString
		constexpr auto RendererProperties = 0x180; // TArray<UNiagaraRendererProperties*>
		constexpr auto EventHandlerScriptProps = 0x190; // TArray<FNiagaraEventScriptProperties>
		constexpr auto SimulationStages = 0x1a0; // TArray<UNiagaraSimulationStageBase*>
		constexpr auto GPUComputeScript = 0x1b0; // UNiagaraScript*
		constexpr auto SharedEventGeneratorIds = 0x1b8; // TArray<FName>
	}

	namespace n_UGroupEdgeInsertionTool {
		constexpr auto Settings = 0x98; // UGroupEdgeInsertionProperties*
		constexpr auto Preview = 0xa0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_USourceEffectSimpleDelayPreset {
		constexpr auto Settings = 0xa8; // FSourceEffectSimpleDelaySettings
	}

	namespace n_UParticleModuleOrbitBase {
		constexpr auto bUseEmitterTime = 0x30; // char : 1
	}

	namespace n_UEngine {
		constexpr auto TinyFont = 0x30; // UFont*
		constexpr auto TinyFontName = 0x38; // FSoftObjectPath
		constexpr auto SmallFont = 0x50; // UFont*
		constexpr auto SmallFontName = 0x58; // FSoftObjectPath
		constexpr auto MediumFont = 0x70; // UFont*
		constexpr auto MediumFontName = 0x78; // FSoftObjectPath
		constexpr auto LargeFont = 0x90; // UFont*
		constexpr auto LargeFontName = 0x98; // FSoftObjectPath
		constexpr auto SubtitleFont = 0xb0; // UFont*
		constexpr auto SubtitleFontName = 0xb8; // FSoftObjectPath
		constexpr auto AdditionalFonts = 0xd0; // TArray<UFont*>
		constexpr auto AdditionalFontNames = 0xe0; // TArray<FString>
		constexpr auto ConsoleClass = 0xf0; // UConsole*
		constexpr auto ConsoleClassName = 0xf8; // FSoftClassPath
		constexpr auto GameViewportClientClass = 0x110; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x118; // FSoftClassPath
		constexpr auto LocalPlayerClass = 0x130; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x138; // FSoftClassPath
		constexpr auto WorldSettingsClass = 0x150; // AWorldSettings*
		constexpr auto WorldSettingsClassName = 0x158; // FSoftClassPath
		constexpr auto NavigationSystemClassName = 0x170; // FSoftClassPath
		constexpr auto NavigationSystemClass = 0x188; // UNavigationSystemBase*
		constexpr auto NavigationSystemConfigClassName = 0x190; // FSoftClassPath
		constexpr auto NavigationSystemConfigClass = 0x1a8; // UNavigationSystemConfig*
		constexpr auto AvoidanceManagerClassName = 0x1b0; // FSoftClassPath
		constexpr auto AvoidanceManagerClass = 0x1c8; // UAvoidanceManager*
		constexpr auto AIControllerClassName = 0x1d0; // FSoftClassPath
		constexpr auto PhysicsCollisionHandlerClass = 0x1e8; // UPhysicsCollisionHandler*
		constexpr auto PhysicsCollisionHandlerClassName = 0x1f0; // FSoftClassPath
		constexpr auto GameUserSettingsClassName = 0x208; // FSoftClassPath
		constexpr auto GameUserSettingsClass = 0x220; // UGameUserSettings*
		constexpr auto GameUserSettings = 0x228; // UGameUserSettings*
		constexpr auto LevelScriptActorClass = 0x230; // ALevelScriptActor*
		constexpr auto LevelScriptActorClassName = 0x238; // FSoftClassPath
		constexpr auto DefaultBlueprintBaseClassName = 0x250; // FSoftClassPath
		constexpr auto GameSingletonClassName = 0x268; // FSoftClassPath
		constexpr auto GameSingleton = 0x280; // UObject*
		constexpr auto AssetManagerClassName = 0x288; // FSoftClassPath
		constexpr auto AssetManager = 0x2a0; // UAssetManager*
		constexpr auto DefaultTexture = 0x2a8; // UTexture2D*
		constexpr auto DefaultTextureName = 0x2b0; // FSoftObjectPath
		constexpr auto DefaultDiffuseTexture = 0x2c8; // UTexture*
		constexpr auto DefaultDiffuseTextureName = 0x2d0; // FSoftObjectPath
		constexpr auto DefaultBSPVertexTexture = 0x2e8; // UTexture2D*
		constexpr auto DefaultBSPVertexTextureName = 0x2f0; // FSoftObjectPath
		constexpr auto HighFrequencyNoiseTexture = 0x308; // UTexture2D*
		constexpr auto HighFrequencyNoiseTextureName = 0x310; // FSoftObjectPath
		constexpr auto DefaultBokehTexture = 0x328; // UTexture2D*
		constexpr auto DefaultBokehTextureName = 0x330; // FSoftObjectPath
		constexpr auto DefaultBloomKernelTexture = 0x348; // UTexture2D*
		constexpr auto DefaultBloomKernelTextureName = 0x350; // FSoftObjectPath
		constexpr auto WireframeMaterial = 0x368; // UMaterial*
		constexpr auto WireframeMaterialName = 0x370; // FString
		constexpr auto DebugMeshMaterial = 0x380; // UMaterial*
		constexpr auto DebugMeshMaterialName = 0x388; // FSoftObjectPath
		constexpr auto EmissiveMeshMaterial = 0x3a0; // UMaterial*
		constexpr auto EmissiveMeshMaterialName = 0x3a8; // FSoftObjectPath
		constexpr auto LevelColorationLitMaterial = 0x3c0; // UMaterial*
		constexpr auto LevelColorationLitMaterialName = 0x3c8; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x3d8; // UMaterial*
		constexpr auto LevelColorationUnlitMaterialName = 0x3e0; // FString
		constexpr auto LightingTexelDensityMaterial = 0x3f0; // UMaterial*
		constexpr auto LightingTexelDensityName = 0x3f8; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x408; // UMaterial*
		constexpr auto ShadedLevelColorationLitMaterialName = 0x410; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x420; // UMaterial*
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x428; // FString
		constexpr auto RemoveSurfaceMaterial = 0x438; // UMaterial*
		constexpr auto RemoveSurfaceMaterialName = 0x440; // FSoftObjectPath
		constexpr auto VertexColorMaterial = 0x458; // UMaterial*
		constexpr auto VertexColorMaterialName = 0x460; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x470; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x478; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x488; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x490; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x4a0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x4a8; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x4b8; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x4c0; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x4d0; // UMaterial*
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x4d8; // FString
		constexpr auto DebugEditorMaterialName = 0x4e8; // FSoftObjectPath
		constexpr auto ConstraintLimitMaterial = 0x500; // UMaterial*
		constexpr auto ConstraintLimitMaterialX = 0x508; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialXAxis = 0x510; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialY = 0x518; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialYAxis = 0x520; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZ = 0x528; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialZAxis = 0x530; // UMaterialInstanceDynamic*
		constexpr auto ConstraintLimitMaterialPrismatic = 0x538; // UMaterialInstanceDynamic*
		constexpr auto InvalidLightmapSettingsMaterial = 0x540; // UMaterial*
		constexpr auto InvalidLightmapSettingsMaterialName = 0x548; // FSoftObjectPath
		constexpr auto PreviewShadowsIndicatorMaterial = 0x560; // UMaterial*
		constexpr auto PreviewShadowsIndicatorMaterialName = 0x568; // FSoftObjectPath
		constexpr auto ArrowMaterial = 0x580; // UMaterial*
		constexpr auto ArrowMaterialYellow = 0x588; // UMaterialInstanceDynamic*
		constexpr auto ArrowMaterialName = 0x590; // FSoftObjectPath
		constexpr auto LightingOnlyBrightness = 0x5a8; // FLinearColor
		constexpr auto ShaderComplexityColors = 0x5b8; // TArray<FLinearColor>
		constexpr auto QuadComplexityColors = 0x5c8; // TArray<FLinearColor>
		constexpr auto LightComplexityColors = 0x5d8; // TArray<FLinearColor>
		constexpr auto StationaryLightOverlapColors = 0x5e8; // TArray<FLinearColor>
		constexpr auto LODColorationColors = 0x5f8; // TArray<FLinearColor>
		constexpr auto HLODColorationColors = 0x608; // TArray<FLinearColor>
		constexpr auto StreamingAccuracyColors = 0x618; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x628; // float
		constexpr auto MaxES3PixelShaderAdditiveComplexityCount = 0x62c; // float
		constexpr auto MinLightMapDensity = 0x630; // float
		constexpr auto IdealLightMapDensity = 0x634; // float
		constexpr auto MaxLightMapDensity = 0x638; // float
		constexpr auto bRenderLightMapDensityGrayscale = 0x63c; // char : 1
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x640; // float
		constexpr auto RenderLightMapDensityColorScale = 0x644; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x648; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x658; // FLinearColor
		constexpr auto StatColorMappings = 0x668; // TArray<FStatColorMapping>
		constexpr auto DefaultPhysMaterial = 0x678; // UPhysicalMaterial*
		constexpr auto DefaultPhysMaterialName = 0x680; // FSoftObjectPath
		constexpr auto ActiveGameNameRedirects = 0x698; // TArray<FGameNameRedirect>
		constexpr auto ActiveClassRedirects = 0x6a8; // TArray<FClassRedirect>
		constexpr auto ActivePluginRedirects = 0x6b8; // TArray<FPluginRedirect>
		constexpr auto ActiveStructRedirects = 0x6c8; // TArray<FStructRedirect>
		constexpr auto PreIntegratedSkinBRDFTexture = 0x6d8; // UTexture2D*
		constexpr auto PreIntegratedSkinBRDFTextureName = 0x6e0; // FSoftObjectPath
		constexpr auto BlueNoiseTexture = 0x6f8; // UTexture2D*
		constexpr auto BlueNoiseTextureName = 0x700; // FSoftObjectPath
		constexpr auto MiniFontTexture = 0x718; // UTexture2D*
		constexpr auto MiniFontTextureName = 0x720; // FSoftObjectPath
		constexpr auto WeightMapPlaceholderTexture = 0x738; // UTexture*
		constexpr auto WeightMapPlaceholderTextureName = 0x740; // FSoftObjectPath
		constexpr auto LightMapDensityTexture = 0x758; // UTexture2D*
		constexpr auto LightMapDensityTextureName = 0x760; // FSoftObjectPath
		constexpr auto GameViewport = 0x780; // UGameViewportClient*
		constexpr auto DeferredCommands = 0x788; // TArray<FString>
		constexpr auto NearClipPlane = 0x798; // float
		constexpr auto bSubtitlesEnabled = 0x79c; // char : 1
		constexpr auto bSubtitlesForcedOff = 0x79c; // char : 1
		constexpr auto MaximumLoopIterationCount = 0x7a0; // int32_t
		constexpr auto bCanBlueprintsTickByDefault = 0x7a4; // char : 1
		constexpr auto bOptimizeAnimBlueprintMemberVariableAccess = 0x7a4; // char : 1
		constexpr auto bAllowMultiThreadedAnimationUpdate = 0x7a4; // char : 1
		constexpr auto bEnableEditorPSysRealtimeLOD = 0x7a4; // char : 1
		constexpr auto bSmoothFrameRate = 0x7a4; // char : 1
		constexpr auto bUseFixedFrameRate = 0x7a4; // char : 1
		constexpr auto FixedFrameRate = 0x7a8; // float
		constexpr auto SmoothedFrameRateRange = 0x7ac; // FFloatRange
		constexpr auto CustomTimeStep = 0x7c0; // UEngineCustomTimeStep*
		constexpr auto CustomTimeStepClassName = 0x7e8; // FSoftClassPath
		constexpr auto TimecodeProvider = 0x800; // UTimecodeProvider*
		constexpr auto TimecodeProviderClassName = 0x828; // FSoftClassPath
		constexpr auto bGenerateDefaultTimecode = 0x840; // bool
		constexpr auto GenerateDefaultTimecodeFrameRate = 0x844; // FFrameRate
		constexpr auto GenerateDefaultTimecodeFrameDelay = 0x84c; // float
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x850; // char : 1
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x854; // int32_t
		constexpr auto bShouldGenerateLowQualityLightmaps = 0x858; // char : 1
		constexpr auto C_WorldBox = 0x85c; // FColor
		constexpr auto C_BrushWire = 0x860; // FColor
		constexpr auto C_AddWire = 0x864; // FColor
		constexpr auto C_SubtractWire = 0x868; // FColor
		constexpr auto C_SemiSolidWire = 0x86c; // FColor
		constexpr auto C_NonSolidWire = 0x870; // FColor
		constexpr auto C_WireBackground = 0x874; // FColor
		constexpr auto C_ScaleBoxHi = 0x878; // FColor
		constexpr auto C_VolumeCollision = 0x87c; // FColor
		constexpr auto C_BSPCollision = 0x880; // FColor
		constexpr auto C_OrthoBackground = 0x884; // FColor
		constexpr auto C_Volume = 0x888; // FColor
		constexpr auto C_BrushShape = 0x88c; // FColor
		constexpr auto StreamingDistanceFactor = 0x890; // float
		constexpr auto GameScreenshotSaveDirectory = 0x898; // FDirectoryPath
		constexpr auto TransitionType = 0x8a8; // ETransitionType
		constexpr auto TransitionDescription = 0x8b0; // FString
		constexpr auto TransitionGameMode = 0x8c0; // FString
		constexpr auto bAllowMatureLanguage = 0x8d0; // char : 1
		constexpr auto CameraRotationThreshold = 0x8d4; // float
		constexpr auto CameraTranslationThreshold = 0x8d8; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x8dc; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x8e0; // float
		constexpr auto bPauseOnLossOfFocus = 0x8e4; // char : 1
		constexpr auto MaxParticleResize = 0x8e8; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x8ec; // int32_t
		constexpr auto PendingDroppedNotes = 0x8f0; // TArray<FDropNoteInfo>
		constexpr auto NetClientTicksPerSecond = 0x900; // float
		constexpr auto DisplayGamma = 0x904; // float
		constexpr auto MinDesiredFrameRate = 0x908; // float
		constexpr auto DefaultSelectedMaterialColor = 0x90c; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x91c; // FLinearColor
		constexpr auto SelectionOutlineColor = 0x92c; // FLinearColor
		constexpr auto SubduedSelectionOutlineColor = 0x93c; // FLinearColor
		constexpr auto SelectedMaterialColorOverride = 0x94c; // FLinearColor
		constexpr auto bIsOverridingSelectedColor = 0x95c; // bool
		constexpr auto bEnableOnScreenDebugMessages = 0x960; // char : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x960; // char : 1
		constexpr auto bSuppressMapWarnings = 0x960; // char : 1
		constexpr auto bDisableAILogging = 0x960; // char : 1
		constexpr auto bEnableVisualLogRecordingOnStart = 0x964; // uint32_t
		constexpr auto ScreenSaverInhibitorSemaphore = 0x968; // int32_t
		constexpr auto bLockReadOnlyLevels = 0x96c; // char : 1
		constexpr auto ParticleEventManagerClassPath = 0x970; // FString
		constexpr auto SelectionHighlightIntensity = 0x980; // float
		constexpr auto BSPSelectionHighlightIntensity = 0x984; // float
		constexpr auto SelectionHighlightIntensityBillboards = 0x988; // float
		constexpr auto NetDriverDefinitions = 0xbf8; // TArray<FNetDriverDefinition>
		constexpr auto ServerActors = 0xc08; // TArray<FString>
		constexpr auto RuntimeServerActors = 0xc18; // TArray<FString>
		constexpr auto NetErrorLogInterval = 0xc28; // float
		constexpr auto bStartedLoadMapMovie = 0xc2c; // char : 1
		constexpr auto NextWorldContextHandle = 0xc48; // int32_t
	}

	namespace n_UMaterialExpressionConstant2Vector {
		constexpr auto R = 0x40; // float
		constexpr auto G = 0x44; // float
	}

	namespace n_UAchievementConditionFloatWidget {
		constexpr auto ProgressCanvas = 0x288; // UCanvasPanel*
		constexpr auto PbProgress = 0x290; // UProgressBar*
		constexpr auto TbProgress = 0x298; // UTextBlock*
		constexpr auto TbTotalProgress = 0x2a0; // UTextBlock*
	}

	namespace n_UTattooLayerRadioView {
		constexpr auto TattooAddLayerButtonTemplate = 0x2f0; // UTattooAddLayerButton*
		constexpr auto TattooAddLayerButton = 0x2f8; // UTattooAddLayerButton*
	}

	namespace n_ATriggerBase {
		constexpr auto CollisionComponent = 0x310; // UShapeComponent*
	}

	namespace n_ULakeGenerator {
		constexpr auto LakeMeshComp = 0x28; // UStaticMeshComponent*
		constexpr auto LakeCollisionComp = 0x30; // UBoxComponent*
		constexpr auto LakeCollision = 0x38; // ULakeCollisionComponent*
	}

	namespace n_URestrictedGameplayTagsList {
		constexpr auto ConfigFileName = 0x28; // FString
		constexpr auto RestrictedGameplayTagList = 0x38; // TArray<FRestrictedGameplayTagTableRow>
	}

	namespace n_UIterativeSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bSmoothBoundary = 0x68; // bool
	}

	namespace n_UUI_AdminPlayerAction {
		constexpr auto Button_Admin = 0x2e8; // UButton*
		constexpr auto Button_SeniorOperator = 0x2f0; // UButton*
		constexpr auto Button_Operator = 0x2f8; // UButton*
		constexpr auto Button_CustomerServicer = 0x300; // UButton*
		constexpr auto Button_NoneGM = 0x308; // UButton*
		constexpr auto Button_KickOff = 0x310; // UButton*
		constexpr auto Button_Goto = 0x318; // UButton*
		constexpr auto Button_Pull = 0x320; // UButton*
		constexpr auto Button_Kill = 0x328; // UButton*
		constexpr auto Button_Kill_NoDrop = 0x330; // UButton*
		constexpr auto Button_Empty = 0x338; // UButton*
		constexpr auto Button_AttachWatch = 0x340; // UButton*
		constexpr auto Button_UnAttachWatch = 0x348; // UButton*
		constexpr auto Button_AddExp = 0x350; // UButton*
		constexpr auto EditableTextBox_AddExpNum = 0x358; // UEditableTextBox*
		constexpr auto Button_AddCopper = 0x360; // UButton*
		constexpr auto EditableTextBox_AddCopperNum = 0x368; // UEditableTextBox*
		constexpr auto Button_AddCapitalSeason = 0x370; // UButton*
		constexpr auto EditableTextBox_AddCapitalSeasonNum = 0x378; // UEditableTextBox*
		constexpr auto Button_Ghost = 0x380; // UButton*
		constexpr auto Button_GiveHuKouItem = 0x388; // UButton*
		constexpr auto Button_AddSkillPublicExp = 0x390; // UButton*
		constexpr auto EditableTextBox_AddSkillPublicExpNum = 0x398; // UEditableTextBox*
		constexpr auto Button_AddAddSkillMasteryPoints = 0x3a0; // UButton*
		constexpr auto EditableTextBox_AddAddSkillMasteryPointsNum = 0x3a8; // UEditableTextBox*
		constexpr auto Button_Hide = 0x3b0; // UButton*
		constexpr auto Button_UnLockNextSkillLimitLevel = 0x3b8; // UButton*
		constexpr auto EditableTextBox_UnLockNextSkillLimitIndex = 0x3c0; // UEditableTextBox*
		constexpr auto EditableTextBox_UnLockNextSkillLimitLevel = 0x3c8; // UEditableTextBox*
		constexpr auto Button_AddPerkPoint = 0x3d0; // UButton*
		constexpr auto EditableTextBox_AddPerkPointNum = 0x3d8; // UEditableTextBox*
		constexpr auto Button_AddCraftPoint = 0x3e0; // UButton*
		constexpr auto EditableTextBox_AddCraftPointNum = 0x3e8; // UEditableTextBox*
		constexpr auto Button_ClearTargetCharacterAllTypeGeneral = 0x3f0; // UButton*
		constexpr auto ComboBox_ClearTargetCharacterAllTypeGeneral = 0x3f8; // UComboBoxString*
		constexpr auto Button_ClearTargetCharacterAllTypeHorse = 0x400; // UButton*
		constexpr auto ComboBox_ClearTargetCharacterAllTypeHorse = 0x408; // UComboBoxString*
		constexpr auto Button_AllSkillLevelUpTo = 0x410; // UButton*
		constexpr auto EditableTextBox_SkillLevelUpToPlayer = 0x418; // UEditableTextBox*
		constexpr auto Button_UnLockPerkBySkill = 0x420; // UButton*
		constexpr auto Button_ShowPlayerChunkInfos = 0x428; // UButton*
	}

	namespace n_UVoiceRadio {
		constexpr auto TbTitle = 0x540; // UTextBlock*
		constexpr auto BtnBg = 0x548; // UButton*
	}

	namespace n_UFXSystemAsset {
		constexpr auto MaxPoolSize = 0x28; // uint32_t
		constexpr auto PoolPrimeSize = 0x2c; // uint32_t
	}

	namespace n_UReverbEffect {
		constexpr auto bBypassEarlyReflections = 0x28; // bool
		constexpr auto ReflectionsDelay = 0x2c; // float
		constexpr auto GainHF = 0x30; // float
		constexpr auto ReflectionsGain = 0x34; // float
		constexpr auto bBypassLateReflections = 0x38; // bool
		constexpr auto LateDelay = 0x3c; // float
		constexpr auto DecayTime = 0x40; // float
		constexpr auto Density = 0x44; // float
		constexpr auto Diffusion = 0x48; // float
		constexpr auto AirAbsorptionGainHF = 0x4c; // float
		constexpr auto DecayHFRatio = 0x50; // float
		constexpr auto LateGain = 0x54; // float
		constexpr auto Gain = 0x58; // float
		constexpr auto RoomRolloffFactor = 0x5c; // float
	}

	namespace n_UMiniMapMarkMenu {
		constexpr auto MarkItemClass = 0x260; // UMiniMapMarkItem*
		constexpr auto MarkItemNumPerRow = 0x268; // int32_t
		constexpr auto OnMiniMapMarkMenuClosed = 0x270; // FMulticastInlineDelegate
		constexpr auto BindMiniMap = 0x280; // USGMiniMap*
		constexpr auto SelectedMarkItem = 0x288; // TWeakObjectPtr<UMiniMapMarkItem>
		constexpr auto MiniMapMarkItems = 0x290; // TArray<UMiniMapMarkItem*>
		constexpr auto BtnMark = 0x2a0; // UButton*
		constexpr auto BtnClose = 0x2a8; // UButton*
		constexpr auto UGPMark = 0x2b0; // UUniformGridPanel*
		constexpr auto EtbMarkName = 0x2b8; // UEditableText*
		constexpr auto HbMarkType = 0x2c0; // UHorizontalBox*
		constexpr auto CbGuildMark = 0x2c8; // UCheckBox*
		constexpr auto CbLocalMark = 0x2d0; // UCheckBox*
		constexpr auto BtnGMGoto = 0x2d8; // UButton*
	}

	namespace n_UMovieSceneMarginSection {
		constexpr auto TopCurve = 0xe8; // FMovieSceneFloatChannel
		constexpr auto LeftCurve = 0x188; // FMovieSceneFloatChannel
		constexpr auto RightCurve = 0x228; // FMovieSceneFloatChannel
		constexpr auto BottomCurve = 0x2c8; // FMovieSceneFloatChannel
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionVector
	}

	namespace n_AAmbientSoundSpline {
		constexpr auto AudioSplineComponent = 0x310; // UAudioSplineComponent*
	}

	namespace n_UOperatorField {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto RightField = 0xc8; // UFieldNodeBase*
		constexpr auto LeftField = 0xd0; // UFieldNodeBase*
		constexpr auto Operation = 0xd8; // EFieldOperationType
	}

	namespace n_UWBP_PrivateSessionList_C {
		constexpr auto UberGraphFrame = 0x400; // FPointerToUberGraphFrame
		constexpr auto ImgBg = 0x408; // UImage*
		constexpr auto ImgFavorite = 0x410; // UImage*
		constexpr auto ImgMapListTitle = 0x418; // UImage*
		constexpr auto ImgMOD = 0x420; // UImage*
		constexpr auto ImgPlayerNumDown = 0x428; // UImage*
		constexpr auto ImgPlayerNumUp = 0x430; // UImage*
		constexpr auto ImgSearchBg = 0x438; // UImage*
		constexpr auto ImgSearchIcon = 0x440; // UImage*
		constexpr auto ImgSessionBg = 0x448; // UImage*
		constexpr auto ImgSessionBorder = 0x450; // UImage*
		constexpr auto ImgSessionBottomBg = 0x458; // UImage*
		constexpr auto ImgSessionTopBg = 0x460; // UImage*
		constexpr auto Server Infos = 0x468; // TArray<FGameServerInfo>
	}

	namespace n_ULuminARLightEstimate {
		constexpr auto AmbientIntensityNits = 0x40; // TArray<float>
	}

	namespace n_UParticleModuleAccelerationConstant {
		constexpr auto Acceleration = 0x38; // FVector
	}

	namespace n_ATestPlayerCharacterData {
		constexpr auto BattleSoliderInfos = 0x310; // TArray<FBattleSoliderInfo>
	}

	namespace n_UEditableStaticMeshAdapter {
		constexpr auto StaticMesh = 0x28; // UStaticMesh*
		constexpr auto OriginalStaticMesh = 0x30; // UStaticMesh*
		constexpr auto StaticMeshLODIndex = 0x38; // int32_t
	}

	namespace n_UWindowTitleBarAreaSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_USoundNodeWaveParam {
		constexpr auto WaveParameterName = 0x48; // FName
	}

	namespace n_USubmixEffectSubmixEQPreset {
		constexpr auto Settings = 0xa0; // FSubmixEffectSubmixEQSettings
	}

	namespace n_UMovieSceneSlomoSection {
		constexpr auto FloatCurve = 0xe8; // FMovieSceneFloatChannel
	}

	namespace n_UTimeSynchronizableMediaSource {
		constexpr auto bUseTimeSynchronization = 0x88; // bool
		constexpr auto FrameDelay = 0x8c; // int32_t
		constexpr auto TimeDelay = 0x90; // double
	}

	namespace n_UInterpTrackInstEvent {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UVehicleCampSlot {
		constexpr auto ImgIcon = 0x260; // UImage*
		constexpr auto StatusIcon = 0x268; // UImage*
		constexpr auto DesText = 0x270; // UTextBlock*
		constexpr auto DesImage = 0x278; // UImage*
		constexpr auto DesPanel = 0x280; // UCanvasPanel*
		constexpr auto NormalPanel = 0x288; // UCanvasPanel*
		constexpr auto OutBorder = 0x290; // UBorder*
		constexpr auto CampSlotBg = 0x298; // UImage*
		constexpr auto QualityBg = 0x2a0; // UImage*
		constexpr auto bEnableClick = 0x2a8; // char : 1
		constexpr auto WarTypeDesText = 0x2b0; // FText
		constexpr auto WorkOrRestTypeDesText = 0x2c8; // FText
		constexpr auto DeathTypeDesText = 0x2e0; // FText
		constexpr auto bIsDesSlot = 0x2f8; // char : 1
		constexpr auto WarType = 0x2f9; // EWarType
		constexpr auto WarDesImageTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto WorkOrRestDesImageTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto DeathDesImageTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto BindVehicleChar = 0x378; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
		constexpr auto BindVehicleChunkData = 0x380; // FBaseAnimalChunkData
		constexpr auto OutBorder_SelectTexture = 0x430; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorder_HoverTexture = 0x458; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorder_NormalTexture = 0x480; // TSoftObjectPtr<UTexture2D>
		constexpr auto OnVehicleCampSlotPressed = 0x4a8; // FMulticastInlineDelegate
		constexpr auto OnVehicleCampSlotReleased = 0x4b8; // FMulticastInlineDelegate
		constexpr auto IsHover = 0x4c8; // char : 1
		constexpr auto bPressed = 0x4c8; // char : 1
		constexpr auto DBTypeStatusTexture = 0x4d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto GuildStoreTypeStatusTexture2D = 0x4f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto GrowingStatusTexture = 0x520; // TSoftObjectPtr<UTexture2D>
		constexpr auto MatingStatusTexture = 0x548; // TSoftObjectPtr<UTexture2D>
		constexpr auto PregnancyStatusTexture = 0x570; // TSoftObjectPtr<UTexture2D>
		constexpr auto TrainingStatusTexture = 0x598; // TSoftObjectPtr<UTexture2D>
		constexpr auto RidingStatusTexture = 0x5c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto RecoveryHPStatusTexture = 0x5e8; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffServerStatusTexture = 0x610; // TSoftObjectPtr<UTexture2D>
		constexpr auto WorkTypeStatusTexture = 0x638; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReborningStatusTexture = 0x660; // TSoftObjectPtr<UTexture2D>
		constexpr auto DeathTypeStatusTexture = 0x688; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnKnownVehicleIcon = 0x6b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto VehicleIcons = 0x6d8; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto QualityCorrectionToQualityType = 0x7a0; // TMap<EGeneralsQualityType, float>
		constexpr auto VehicleQualityTexture = 0x7f0; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto StatusTipText = 0x8e0; // FText
	}

	namespace n_UDatasmithDecalComponentTemplate {
		constexpr auto SortOrder = 0x30; // int32_t
		constexpr auto DecalSize = 0x34; // FVector
		constexpr auto Material = 0x40; // UMaterialInterface*
	}

	namespace n_UDistributionFloat {
		constexpr auto bCanBeBaked = 0x30; // char : 1
		constexpr auto bBakedDataSuccesfully = 0x30; // char : 1
	}

	namespace n_UGizmoAxisTranslationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Parameter = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurTranslationAxis = 0xbc; // FVector
		constexpr auto CurTranslationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_UMovieSceneBoolSection {
		constexpr auto DefaultValue = 0xe8; // bool
		constexpr auto BoolCurve = 0xf0; // FMovieSceneBoolChannel
	}

	namespace n_UShowLoginUICallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDatasmithLandscapeTemplate {
		constexpr auto LandscapeMaterial = 0x30; // UMaterialInterface*
		constexpr auto StaticLightingLOD = 0x38; // int32_t
	}

	namespace n_UGuildStructureListPanel {
		constexpr auto ChildGridPanel = 0x2d8; // UUniformGridPanel*
		constexpr auto GuildStructureSlotClass = 0x2e0; // UGuildStructureSlot*
		constexpr auto CountsPerRow = 0x2e8; // int32_t
	}

	namespace n_APaperCharacter {
		constexpr auto Sprite = 0x5c8; // UPaperFlipbookComponent*
	}

	namespace n_USubsurfaceProfile {
		constexpr auto Settings = 0x28; // FSubsurfaceProfileStruct
	}

	namespace n_UImageSequenceProtocol_EXR {
		constexpr auto bCompressed = 0xd8; // bool
		constexpr auto CaptureGamut = 0xd9; // EHDRCaptureGamut
	}

	namespace n_UUI_TransGuildExpPoint {
		constexpr auto GuildLevelText = 0x2d8; // UTextBlock*
		constexpr auto ActivityPointText = 0x2e0; // UTextBlock*
		constexpr auto CurrentPointText = 0x2e8; // UTextBlock*
		constexpr auto ReducePointButton = 0x2f0; // UButton*
		constexpr auto AddPointButton = 0x2f8; // UButton*
		constexpr auto SubmitButton = 0x300; // UButton*
		constexpr auto CancelButton = 0x308; // UButton*
		constexpr auto TransferSlider = 0x310; // USlider*
	}

	namespace n_UPropertyValue {
		constexpr auto Properties = 0x88; // TArray<TFieldPath<FProperty>>
		constexpr auto PropertyIndices = 0x98; // TArray<int32_t>
		constexpr auto CapturedPropSegments = 0xa8; // TArray<FCapturedPropSegment>
		constexpr auto FullDisplayString = 0xb8; // FString
		constexpr auto PropertySetterName = 0xc8; // FName
		constexpr auto PropertySetterParameterDefaults = 0xd0; // TMap<FString, FString>
		constexpr auto bHasRecordedData = 0x120; // bool
		constexpr auto LeafPropertyClass = 0x128; // UObject*
		constexpr auto ValueBytes = 0x138; // TArray<char>
		constexpr auto PropCategory = 0x148; // EPropertyValueCategory
	}

	namespace n_UInterpGroup {
		constexpr auto InterpTracks = 0x30; // TArray<UInterpTrack*>
		constexpr auto GroupName = 0x40; // FName
		constexpr auto GroupColor = 0x48; // FColor
		constexpr auto bCollapsed = 0x4c; // char : 1
		constexpr auto bVisible = 0x4c; // char : 1
		constexpr auto bIsFolder = 0x4c; // char : 1
		constexpr auto bIsParented = 0x4c; // char : 1
		constexpr auto bIsSelected = 0x4c; // char : 1
	}

	namespace n_ASphereReflectionCapture {
		constexpr auto DrawCaptureRadius = 0x318; // UDrawSphereComponent*
	}

	namespace n_UPointLightComponent {
		constexpr auto bUseInverseSquaredFalloff = 0x350; // char : 1
		constexpr auto LightFalloffExponent = 0x354; // float
		constexpr auto SourceRadius = 0x358; // float
		constexpr auto SoftSourceRadius = 0x35c; // float
		constexpr auto SourceLength = 0x360; // float
	}

	namespace n_UDatasmithGLTFSceneImportData {
		constexpr auto Generator = 0x28; // FString
		constexpr auto Version = 0x38; // float
		constexpr auto Author = 0x40; // FString
		constexpr auto License = 0x50; // FString
		constexpr auto Source = 0x60; // FString
	}

	namespace n_UNiagaraDataInterfaceGrid3D {
		constexpr auto NumCells = 0xd8; // FIntVector
		constexpr auto CellSize = 0xe4; // float
		constexpr auto NumCellsMaxAxis = 0xe8; // int32_t
		constexpr auto SetResolutionMethod = 0xec; // ESetResolutionMethod
		constexpr auto WorldBBoxSize = 0xf0; // FVector
	}

	namespace n_UDistributionFloatConstantCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveFloat
	}

	namespace n_USoundNodeOscillator {
		constexpr auto bModulateVolume = 0x48; // char : 1
		constexpr auto bModulatePitch = 0x48; // char : 1
		constexpr auto AmplitudeMin = 0x4c; // float
		constexpr auto AmplitudeMax = 0x50; // float
		constexpr auto FrequencyMin = 0x54; // float
		constexpr auto FrequencyMax = 0x58; // float
		constexpr auto OffsetMin = 0x5c; // float
		constexpr auto OffsetMax = 0x60; // float
		constexpr auto CenterMin = 0x64; // float
		constexpr auto CenterMax = 0x68; // float
	}

	namespace n_UScrollBoxSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_AGameplayAbilityWorldReticle {
		constexpr auto Parameters = 0x310; // FWorldReticleParameters
		constexpr auto bFaceOwnerFlat = 0x31c; // bool
		constexpr auto bSnapToTargetedActor = 0x31d; // bool
		constexpr auto bIsTargetValid = 0x31e; // bool
		constexpr auto bIsTargetAnActor = 0x31f; // bool
		constexpr auto MasterPC = 0x320; // APlayerController*
		constexpr auto TargetingActor = 0x328; // AActor*
	}

	namespace n_UAchievementRewardTitle {
		constexpr auto TbTitle = 0x260; // UTextBlock*
	}

	namespace n_UInAppPurchaseCallbackProxy2 {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_URemeshProperties {
		constexpr auto SmoothingStrength = 0x68; // float
		constexpr auto bFlips = 0x6c; // bool
		constexpr auto bSplits = 0x6d; // bool
		constexpr auto bCollapses = 0x6e; // bool
	}

	namespace n_UEnvQueryGenerator_PathingGrid {
		constexpr auto PathToItem = 0xf8; // FAIDataProviderBoolValue
		constexpr auto NavigationFilter = 0x130; // UNavigationQueryFilter*
		constexpr auto ScanRangeMultiplier = 0x138; // FAIDataProviderFloatValue
	}

	namespace n_UCanvasPanelSlot {
		constexpr auto LayoutData = 0x38; // FAnchorData
		constexpr auto bAutoSize = 0x60; // bool
		constexpr auto ZOrder = 0x64; // int32_t
	}

	namespace n_UUI_TransportHorseItem {
		constexpr auto ButtonDisableStyle = 0x260; // FButtonStyle
		constexpr auto TextDisableColor = 0x4d8; // FSlateColor
		constexpr auto TextNormalColor = 0x500; // FSlateColor
		constexpr auto ButtonCheckedStyle = 0x528; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x7a0; // FButtonStyle
		constexpr auto SaveTimeProgress = 0xa18; // UProgressBar*
		constexpr auto SaveTimeTextBlock = 0xa20; // UTextBlock*
		constexpr auto RootUI = 0xa38; // UUserWidget*
		constexpr auto BindTransportMachineHorse = 0xa40; // UUI_TransportMachineHorse*
		constexpr auto BtSelected = 0xa48; // UButton*
		constexpr auto TbNameName = 0xa50; // UTextBlock*
		constexpr auto TbLevel = 0xa58; // UTextBlock*
		constexpr auto TbStatue = 0xa60; // UTextBlock*
	}

	namespace n_AVectorFieldVolume {
		constexpr auto VectorFieldComponent = 0x310; // UVectorFieldComponent*
	}

	namespace n_UGameplayTagsSettings {
		constexpr auto ImportTagsFromConfig = 0x48; // bool
		constexpr auto WarnOnInvalidTags = 0x49; // bool
		constexpr auto FastReplication = 0x4a; // bool
		constexpr auto InvalidTagCharacters = 0x50; // FString
		constexpr auto CategoryRemapping = 0x60; // TArray<FGameplayTagCategoryRemap>
		constexpr auto GameplayTagTableList = 0x70; // TArray<FSoftObjectPath>
		constexpr auto GameplayTagRedirects = 0x80; // TArray<FGameplayTagRedirect>
		constexpr auto CommonlyReplicatedTags = 0x90; // TArray<FName>
		constexpr auto NumBitsForContainerSize = 0xa0; // int32_t
		constexpr auto NetIndexFirstBitSegment = 0xa4; // int32_t
		constexpr auto RestrictedConfigFiles = 0xa8; // TArray<FRestrictedConfigInfo>
	}

	namespace n_UPolyEditOutsetProperties {
		constexpr auto Softness = 0x60; // float
		constexpr auto bBoundaryOnly = 0x64; // bool
		constexpr auto AreaScale = 0x68; // float
	}

	namespace n_UNiagaraPreviewAxis_InterpParamFloat {
		constexpr auto Min = 0x38; // float
		constexpr auto Max = 0x3c; // float
	}

	namespace n_UVoxelSolidifyMeshesToolProperties {
		constexpr auto WindingThreshold = 0x60; // double
		constexpr auto ExtendBounds = 0x68; // double
		constexpr auto SurfaceSearchSteps = 0x70; // int32_t
		constexpr auto bSolidAtBoundaries = 0x74; // bool
		constexpr auto bMakeOffsetSurfaces = 0x75; // bool
		constexpr auto OffsetThickness = 0x78; // double
	}

	namespace n_UAnimInstance {
		constexpr auto CurrentSkeleton = 0x28; // USkeleton*
		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
		constexpr auto bQueueMontageEvents = 0x31; // char : 1
		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
		constexpr auto NotifyQueue = 0x100; // FAnimNotifyQueue
		constexpr auto ActiveAnimNotifyState = 0x170; // TArray<FAnimNotifyEvent>
	}

	namespace n_UARPlaneGeometry {
		constexpr auto Orientation = 0xf8; // EARPlaneOrientation
		constexpr auto Center = 0xfc; // FVector
		constexpr auto Extent = 0x108; // FVector
		constexpr auto BoundaryPolygon = 0x118; // TArray<FVector>
		constexpr auto SubsumedBy = 0x128; // UARPlaneGeometry*
	}

	namespace n_UUI_BattleGroup {
		constexpr auto tex_win_bg = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_huawen = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_guanxiao = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_text_zh = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_text_en = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_bg = 0x3a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_huawen = 0x3c8; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_guanxiao = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_text_zh = 0x418; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_text_en = 0x440; // TSoftObjectPtr<UTexture2D>
		constexpr auto Img_Bg = 0x468; // UImage*
		constexpr auto Img_HuaWen = 0x470; // UImage*
		constexpr auto Img_GuanXiao = 0x478; // UImage*
		constexpr auto Img_ResultText = 0x480; // UImage*
		constexpr auto CurrentCountDownTimeInt = 0x488; // int32_t
		constexpr auto bShowRespawn = 0x48c; // bool
		constexpr auto SpawnLocationInfos = 0x490; // TArray<FSpawnLocationInfo>
		constexpr auto GetSpawnLocationInterval = 0x4a0; // float
		constexpr auto BattleGamePlayType = 0x4b0; // EBattleGamePlayType
		constexpr auto PlayerBattleDatas = 0x4b8; // TArray<FPlayerBattleData>
		constexpr auto bBattleFinished = 0x4c8; // bool
		constexpr auto bMySuccess = 0x4c9; // bool
	}

	namespace n_UUI_PlayerShowExtraMenu {
		constexpr auto ExtraText = 0x260; // UTextBlock*
		constexpr auto ExtraBtn = 0x268; // UButton*
		constexpr auto RootUI = 0x278; // TWeakObjectPtr<UUI_PlayerShowSetting>
	}

	namespace n_UConstantQNRT {
		constexpr auto Settings = 0x78; // UConstantQNRTSettings*
	}

	namespace n_UAchievementConditionWidget {
		constexpr auto LastUpdateProgressTime = 0x270; // double
		constexpr auto UpdateProgressTimeInterval = 0x278; // float
		constexpr auto bAccomplished = 0x27c; // bool
	}

	namespace n_UWBP_SystemSettingRadioView_C {
		constexpr auto AnchorModeSetting = 0x2f0; // UWBP_SystemSettingRadioButton_C*
		constexpr auto AudioSetting = 0x2f8; // UWBP_SystemSettingRadioButton_C*
		constexpr auto ControlSetting = 0x300; // UWBP_SystemSettingRadioButton_C*
		constexpr auto GraphSetting = 0x308; // UWBP_SystemSettingRadioButton_C*
		constexpr auto LanguageSetting = 0x310; // UWBP_SystemSettingRadioButton_C*
		constexpr auto NetworkSetting = 0x318; // UWBP_SystemSettingRadioButton_C*
		constexpr auto SwitchSetting = 0x320; // UWBP_SystemSettingRadioButton_C*
	}

	namespace n_UProceduralConeToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_UAcceptOutputProperties {
		constexpr auto bExportSeparatedPiecesAsNewMeshAssets = 0x60; // bool
	}

	namespace n_UNiagaraDataInterfaceArrayFloat2 {
		constexpr auto FloatData = 0x50; // TArray<FVector2D>
	}

	namespace n_UNiagaraPreviewAxis_InterpParamLinearColor {
		constexpr auto Min = 0x38; // FLinearColor
		constexpr auto Max = 0x48; // FLinearColor
	}

	namespace n_USubmixEffectStereoDelayPreset {
		constexpr auto Settings = 0xb4; // FSubmixEffectStereoDelaySettings
	}

	namespace n_UParticleModuleKillBox {
		constexpr auto LowerLeftCorner = 0x30; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x78; // FRawDistributionVector
		constexpr auto bAbsolute = 0xc0; // char : 1
		constexpr auto bKillInside = 0xc0; // char : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xc0; // char : 1
	}

	namespace n_UOnsetNRTSettings {
		constexpr auto bDownmixToMono = 0x28; // bool
		constexpr auto GranularityInSeconds = 0x2c; // float
		constexpr auto Sensitivity = 0x30; // float
		constexpr auto MinimumFrequency = 0x34; // float
		constexpr auto MaximumFrequency = 0x38; // float
	}

	namespace n_UPawnAction_Sequence {
		constexpr auto ActionSequence = 0x98; // TArray<UPawnAction*>
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
		constexpr auto RecentActionCopy = 0xb0; // UPawnAction*
	}

	namespace n_UObjectLibrary {
		constexpr auto ObjectBaseClass = 0x28; // UObject*
		constexpr auto bHasBlueprintClasses = 0x30; // bool
		constexpr auto Objects = 0x38; // TArray<UObject*>
		constexpr auto WeakObjects = 0x48; // TArray<TWeakObjectPtr<UObject>>
		constexpr auto bUseWeakReferences = 0x58; // bool
		constexpr auto bIsFullyLoaded = 0x59; // bool
	}

	namespace n_UCurveLinearColorAtlas {
		constexpr auto TextureSize = 0x100; // uint32_t
		constexpr auto GradientCurves = 0x108; // TArray<UCurveLinearColor*>
	}

	namespace n_UNotificationFightSlot {
		constexpr auto Image_Icon = 0x268; // UImage*
		constexpr auto Tb_Damage = 0x270; // UTextBlock*
		constexpr auto Tb_DamageText = 0x278; // UTextBlock*
		constexpr auto Spacer_2 = 0x280; // USpacer*
		constexpr auto Spacer_3 = 0x288; // USpacer*
	}

	namespace n_UNavLinkCustomComponent {
		constexpr auto NavLinkUserId = 0xf8; // uint32_t
		constexpr auto EnabledAreaClass = 0x100; // UNavArea*
		constexpr auto DisabledAreaClass = 0x108; // UNavArea*
		constexpr auto SupportedAgents = 0x110; // FNavAgentSelector
		constexpr auto LinkRelativeStart = 0x114; // FVector
		constexpr auto LinkRelativeEnd = 0x120; // FVector
		constexpr auto LinkDirection = 0x12c; // ENavLinkDirection
		constexpr auto bLinkEnabled = 0x130; // char : 1
		constexpr auto bNotifyWhenEnabled = 0x130; // char : 1
		constexpr auto bNotifyWhenDisabled = 0x130; // char : 1
		constexpr auto bCreateBoxObstacle = 0x130; // char : 1
		constexpr auto ObstacleOffset = 0x134; // FVector
		constexpr auto ObstacleExtent = 0x140; // FVector
		constexpr auto ObstacleAreaClass = 0x150; // UNavArea*
		constexpr auto BroadcastRadius = 0x158; // float
		constexpr auto BroadcastInterval = 0x15c; // float
		constexpr auto BroadcastChannel = 0x160; // ECollisionChannel
	}

	namespace n_UMovieSceneEventRepeaterSection {
		constexpr auto Event = 0xf0; // FMovieSceneEvent
	}

	namespace n_UWeatherMainLoopInterpData {
		constexpr auto DirectionalLightIntensity = 0x50; // FWeatherFloatTrack
		constexpr auto DirectionalLightTemperature = 0xf0; // FWeatherFloatTrack
		constexpr auto DirectionalLightShadowAmount = 0x190; // FWeatherFloatTrack
		constexpr auto DirectionalLightVolumetricScatteringIntensity = 0x230; // FWeatherFloatTrack
		constexpr auto DirectionalLightBloomScale = 0x2d0; // FWeatherFloatTrack
		constexpr auto DirectionalLightColor = 0x370; // FWeatherLinearColorTrack
		constexpr auto DirectionalLightRotation = 0x598; // FWeatherLinearColorTrack
		constexpr auto MoonLightIntensity = 0x7c0; // FWeatherFloatTrack
		constexpr auto MoonLightTemperature = 0x860; // FWeatherFloatTrack
		constexpr auto MoonLightShadowAmount = 0x900; // FWeatherFloatTrack
		constexpr auto MoonLightVolumetricScatteringIntensity = 0x9a0; // FWeatherFloatTrack
		constexpr auto MoonLightBloomScale = 0xa40; // FWeatherFloatTrack
		constexpr auto MoonLightColor = 0xae0; // FWeatherLinearColorTrack
		constexpr auto MoonLightRotation = 0xd08; // FWeatherLinearColorTrack
		constexpr auto SkylightIntensity = 0xf30; // FWeatherFloatTrack
		constexpr auto SkyLightColor = 0xfd0; // FWeatherLinearColorTrack
		constexpr auto CloudShadowContrast = 0x11f8; // FWeatherFloatTrack
		constexpr auto CurrentTemperature = 0x1298; // FWeatherFloatTrack
		constexpr auto FogDensity = 0x1338; // FWeatherFloatTrack
		constexpr auto FogHeightFalloff = 0x13d8; // FWeatherFloatTrack
		constexpr auto SecondFogDensity = 0x1478; // FWeatherFloatTrack
		constexpr auto SecondFogHeightFalloff = 0x1518; // FWeatherFloatTrack
		constexpr auto SecondFogHeightOffset = 0x15b8; // FWeatherFloatTrack
		constexpr auto startDistance = 0x1658; // FWeatherFloatTrack
		constexpr auto FogBaseZHeight = 0x16f8; // FWeatherFloatTrack
		constexpr auto FogInscatteringColor = 0x1798; // FWeatherLinearColorTrack
		constexpr auto BloomIntensity = 0x19c0; // FWeatherFloatTrack
		constexpr auto AutoExposureMinBrightness = 0x1a60; // FWeatherFloatTrack
		constexpr auto AutoExposureMaxBrightness = 0x1b00; // FWeatherFloatTrack
		constexpr auto AutoExposureBias = 0x1ba0; // FWeatherFloatTrack
		constexpr auto WhiteTemp = 0x1c40; // FWeatherFloatTrack
		constexpr auto WhiteTint = 0x1ce0; // FWeatherFloatTrack
		constexpr auto RayleighScatteringScale = 0x1d80; // FWeatherFloatTrack
		constexpr auto RayleighScattering = 0x1e20; // FWeatherLinearColorTrack
		constexpr auto RayleighExponentialDistribution = 0x2048; // FWeatherFloatTrack
		constexpr auto MieScatteringScale = 0x20e8; // FWeatherFloatTrack
		constexpr auto MieExponentialDistribution = 0x2188; // FWeatherFloatTrack
		constexpr auto MieScattering = 0x2228; // FWeatherLinearColorTrack
		constexpr auto SkyLuminanceFactor = 0x2450; // FWeatherLinearColorTrack
		constexpr auto AerialPespectiveViewDistanceScale = 0x2678; // FWeatherFloatTrack
		constexpr auto HeightFogContribution = 0x2718; // FWeatherFloatTrack
		constexpr auto TransmittanceMinLightElevationAngle = 0x27b8; // FWeatherFloatTrack
		constexpr auto WindStrength = 0x2858; // FWeatherFloatTrack
		constexpr auto WindSpeed = 0x28f8; // FWeatherFloatTrack
		constexpr auto WindRotation = 0x2998; // FWeatherLinearColorTrack
		constexpr auto MoonMeshLightIntensity = 0x2bc0; // FWeatherFloatTrack
		constexpr auto MoonRotation = 0x2c60; // FWeatherLinearColorTrack
		constexpr auto StarMeshLightIntensity = 0x2e88; // FWeatherFloatTrack
		constexpr auto StarDensityAttention = 0x2f28; // FWeatherFloatTrack
		constexpr auto StarRotation = 0x2fc8; // FWeatherLinearColorTrack
		constexpr auto ScatteringCoeff = 0x31f0; // FWeatherFloatTrack
		constexpr auto AltocumulusORCirrusPower = 0x3290; // FWeatherFloatTrack
		constexpr auto SunDiskIntensity = 0x3330; // FWeatherFloatTrack
		constexpr auto CloudColour = 0x33d0; // FWeatherLinearColorTrack
		constexpr auto CloudOpacity = 0x35f8; // FWeatherFloatTrack
		constexpr auto CloudWindSpeed = 0x3698; // FWeatherFloatTrack
		constexpr auto StratusPower = 0x3738; // FWeatherFloatTrack
		constexpr auto CumulusPower = 0x37d8; // FWeatherFloatTrack
		constexpr auto PluvialCumulusPower = 0x3878; // FWeatherFloatTrack
	}

	namespace n_USkeletalMeshComponent {
		constexpr auto AnimBlueprintGeneratedClass = 0x6e0; // UObject*
		constexpr auto AnimClass = 0x6e8; // UAnimInstance*
		constexpr auto AnimScriptInstance = 0x6f0; // UAnimInstance*
		constexpr auto PostProcessAnimInstance = 0x6f8; // UAnimInstance*
		constexpr auto AnimationData = 0x700; // FSingleAnimationPlayData
		constexpr auto RootBoneTranslation = 0x728; // FVector
		constexpr auto LineCheckBoundsScale = 0x734; // FVector
		constexpr auto LinkedInstances = 0x770; // TArray<UAnimInstance*>
		constexpr auto CachedBoneSpaceTransforms = 0x780; // TArray<FTransform>
		constexpr auto CachedComponentSpaceTransforms = 0x790; // TArray<FTransform>
		constexpr auto GlobalAnimRateScale = 0x8f0; // float
		constexpr auto KinematicBonesUpdateType = 0x8f4; // EKinematicBonesUpdateToPhysics
		constexpr auto PhysicsTransformUpdateMode = 0x8f5; // EPhysicsTransformUpdateMode
		constexpr auto AnimationMode = 0x8f7; // EAnimationMode
		constexpr auto bDisablePostProcessBlueprint = 0x8f9; // char : 1
		constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x8f9; // char : 1
		constexpr auto bHasValidBodies = 0x8f9; // char : 1
		constexpr auto bBlendPhysics = 0x8f9; // char : 1
		constexpr auto bEnablePhysicsOnDedicatedServer = 0x8f9; // char : 1
		constexpr auto bUpdateJointsFromAnimation = 0x8f9; // char : 1
		constexpr auto bDisableClothSimulation = 0x8fa; // char : 1
		constexpr auto bDisableRigidBodyAnimNode = 0x8fa; // char : 1
		constexpr auto bAllowAnimCurveEvaluation = 0x8fa; // char : 1
		constexpr auto bDisableAnimCurves = 0x8fa; // char : 1
		constexpr auto bCollideWithEnvironment = 0x8fa; // char : 1
		constexpr auto bCollideWithAttachedChildren = 0x8fb; // char : 1
		constexpr auto bLocalSpaceSimulation = 0x8fb; // char : 1
		constexpr auto bResetAfterTeleport = 0x8fb; // char : 1
		constexpr auto bDeferKinematicBoneUpdate = 0x8fb; // char : 1
		constexpr auto bNoSkeletonUpdate = 0x8fb; // char : 1
		constexpr auto bPauseAnims = 0x8fb; // char : 1
		constexpr auto bUseRefPoseOnInitAnim = 0x8fb; // char : 1
		constexpr auto bEnablePerPolyCollision = 0x8fc; // char : 1
		constexpr auto bForceRefpose = 0x8fc; // char : 1
		constexpr auto bOnlyAllowAutonomousTickPose = 0x8fc; // char : 1
		constexpr auto bIsAutonomousTickPose = 0x8fc; // char : 1
		constexpr auto bOldForceRefPose = 0x8fc; // char : 1
		constexpr auto bShowPrePhysBones = 0x8fc; // char : 1
		constexpr auto bRequiredBonesUpToDate = 0x8fc; // char : 1
		constexpr auto bAnimTreeInitialised = 0x8fc; // char : 1
		constexpr auto bIncludeComponentLocationIntoBounds = 0x8fd; // char : 1
		constexpr auto bEnableLineCheckWithBounds = 0x8fd; // char : 1
		constexpr auto bUseBendingElements = 0x8fd; // char : 1
		constexpr auto bUseTetrahedralConstraints = 0x8fd; // char : 1
		constexpr auto bUseThinShellVolumeConstraints = 0x8fd; // char : 1
		constexpr auto bUseSelfCollisions = 0x8fd; // char : 1
		constexpr auto bUseContinuousCollisionDetection = 0x8fd; // char : 1
		constexpr auto bPropagateCurvesToSlaves = 0x8fd; // char : 1
		constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x8fe; // char : 1
		constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x8fe; // char : 1
		constexpr auto bNeedsQueuedAnimEventsDispatched = 0x8fe; // char : 1
		constexpr auto CachedAnimCurveUidVersion = 0x900; // uint16_t
		constexpr auto MassMode = 0x902; // EClothMassMode
		constexpr auto UniformMass = 0x904; // float
		constexpr auto TotalMass = 0x908; // float
		constexpr auto Density = 0x90c; // float
		constexpr auto MinPerParticleMass = 0x910; // float
		constexpr auto ClothBlendWeight = 0x914; // float
		constexpr auto EdgeStiffness = 0x918; // float
		constexpr auto BendingStiffness = 0x91c; // float
		constexpr auto AreaStiffness = 0x920; // float
		constexpr auto VolumeStiffness = 0x924; // float
		constexpr auto StrainLimitingStiffness = 0x928; // float
		constexpr auto ShapeTargetStiffness = 0x92c; // float
		constexpr auto bWaitForParallelClothTask = 0x930; // bool
		constexpr auto DisallowedAnimCurves = 0x938; // TArray<FName>
		constexpr auto BodySetup = 0x948; // UBodySetup*
		constexpr auto OnConstraintBroken = 0x958; // FMulticastInlineDelegate
		constexpr auto ClothingSimulationFactory = 0x968; // UClothingSimulationFactory*
		constexpr auto TeleportDistanceThreshold = 0xa38; // float
		constexpr auto TeleportRotationThreshold = 0xa3c; // float
		constexpr auto LastPoseTickFrame = 0xa48; // uint32_t
		constexpr auto ClothingInteractor = 0xaa0; // UClothingSimulationInteractor*
		constexpr auto OnAnimInitialized = 0xb70; // FMulticastInlineDelegate
	}

	namespace n_UDeformMeshPolygonsTool {
		constexpr auto DynamicMeshComponent = 0xc8; // USimpleDynamicMeshComponent*
		constexpr auto TransformProps = 0xd0; // UDeformMeshPolygonsTransformProperties*
	}

	namespace n_UObjectReferencer {
		constexpr auto ReferencedObjects = 0x28; // TArray<UObject*>
	}

	namespace n_UInputAxisDelegateBinding {
		constexpr auto InputAxisDelegateBindings = 0x28; // TArray<FBlueprintInputAxisDelegateBinding>
	}

	namespace n_ULogoutCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_ASGStructureTransportMachine {
		constexpr auto TransportType = 0xb98; // ETransportType
		constexpr auto SubPlayerStartArray = 0xba0; // TArray<ASGPlayerStart*>
		constexpr auto bIsGMUseage = 0xbb0; // char : 1
		constexpr auto TransportGuid = 0xbb4; // FGuid
	}

	namespace n_UGlobalMapActorTips {
		constexpr auto GuildIconMat = 0x288; // UMaterialInterface*
		constexpr auto MinRequestTime = 0x290; // float
		constexpr auto ImgIcon = 0x298; // UImage*
		constexpr auto TbBaseActorName = 0x2a0; // UTextBlock*
		constexpr auto TbOccupyActorName = 0x2a8; // UTextBlock*
		constexpr auto OccupyInfoCanvas = 0x2b0; // UCanvasPanel*
		constexpr auto BaseInfoCanvas = 0x2b8; // UCanvasPanel*
		constexpr auto VbOccupyInfo = 0x2c0; // UVerticalBox*
		constexpr auto TbGuildName = 0x2c8; // UTextBlock*
		constexpr auto TbGuildOwnerName = 0x2d0; // UTextBlock*
		constexpr auto TbGuildOwnerJob = 0x2d8; // UTextBlock*
		constexpr auto TbGuildLevel = 0x2e0; // UTextBlock*
		constexpr auto TbMemberNum = 0x2e8; // UTextBlock*
		constexpr auto TbOccupyGuanAiNum = 0x2f0; // UTextBlock*
		constexpr auto TbOccupyCityNum = 0x2f8; // UTextBlock*
		constexpr auto TbOccupyXianChengNum = 0x300; // UTextBlock*
		constexpr auto HbAllianceName = 0x308; // UHorizontalBox*
		constexpr auto TbAllianceName = 0x310; // UTextBlock*
		constexpr auto HbAllianceOwnerName = 0x318; // UHorizontalBox*
		constexpr auto TbAllianceOwnerName = 0x320; // UTextBlock*
		constexpr auto LoadingCanvas = 0x328; // UCanvasPanel*
		constexpr auto GlobalMapActor = 0x330; // AGlobalMapActor*
		constexpr auto RequestTime = 0x338; // float
		constexpr auto bRequested = 0x33c; // char : 1
		constexpr auto BindOfficalSealInfo = 0x340; // FOfficalSealInfo
		constexpr auto DynamicGuildIconInstance = 0x390; // UMaterialInstanceDynamic*
	}

	namespace n_UCSGMeshesTool {
		constexpr auto CSGProperties = 0xf0; // UCSGMeshesToolProperties*
		constexpr auto DrawnLineSet = 0x108; // ULineSetComponent*
	}

	namespace n_UUI_AdminPlayerPanel {
		constexpr auto ScrollBoxPlayerList = 0x2d8; // UScrollBox*
		constexpr auto SearchTextBoxPlayer = 0x2e0; // UEditableTextBox*
		constexpr auto CheckBoxOnline = 0x2f8; // UCheckBox*
		constexpr auto CheckBoxOffline = 0x300; // UCheckBox*
		constexpr auto UUI_ServerAdminPlayerRowTemplate = 0x318; // UUI_ServerAdminPlayerRow*
		constexpr auto CachedServerAdminPlayerRow = 0x320; // TArray<UUI_ServerAdminPlayerRow*>
	}

	namespace n_UWBP_PrivateSessionDescription_C {
		constexpr auto ImgBg = 0x2c0; // UImage*
		constexpr auto ImgBottom = 0x2c8; // UImage*
		constexpr auto ImgInnerBorder = 0x2d0; // UImage*
		constexpr auto ImgMODBg = 0x2d8; // UImage*
		constexpr auto ImgSessionBg = 0x2e0; // UImage*
		constexpr auto ImgSessionBorder = 0x2e8; // UImage*
		constexpr auto ImgTitle = 0x2f0; // UImage*
		constexpr auto ImgTop = 0x2f8; // UImage*
		constexpr auto TitleImage = 0x300; // UImage*
	}

	namespace n_UAvfMediaSettings {
		constexpr auto NativeAudioOut = 0x28; // bool
	}

	namespace n_UMaterialExpressionCrossProduct {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_USkinnedMeshComponent {
		constexpr auto SkeletalMesh = 0x4b8; // USkeletalMesh*
		constexpr auto SkeletalMeshSimple = 0x4c0; // USkeletalMesh*
		constexpr auto MasterPoseComponent = 0x4c8; // TWeakObjectPtr<USkinnedMeshComponent>
		constexpr auto SkinCacheUsage = 0x4d0; // TArray<ESkinCacheUsage>
		constexpr auto VertexOffsetUsage = 0x4e0; // TArray<FVertexOffsetUsage>
		constexpr auto PhysicsAssetOverride = 0x5e8; // UPhysicsAsset*
		constexpr auto ForcedLodModel = 0x5f0; // int32_t
		constexpr auto MinLodModel = 0x5f4; // int32_t
		constexpr auto StreamingDistanceMultiplier = 0x600; // float
		constexpr auto LODInfo = 0x610; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto VisibilityBasedAnimTickOption = 0x644; // EVisibilityBasedAnimTickOption
		constexpr auto bNoMeshPhysics = 0x645; // char : 1
		constexpr auto bUseSimpleMesh = 0x645; // char : 1
		constexpr auto bCloseBonesUpdate = 0x645; // char : 1
		constexpr auto bSimulateAnimSwitch = 0x645; // char : 1
		constexpr auto bOverrideMinLod = 0x647; // char : 1
		constexpr auto bUseBoundsFromMasterPoseComponent = 0x647; // char : 1
		constexpr auto bForceWireframe = 0x647; // char : 1
		constexpr auto bDisplayBones = 0x647; // char : 1
		constexpr auto bDisableMorphTarget = 0x647; // char : 1
		constexpr auto bHideSkin = 0x648; // char : 1
		constexpr auto bPerBoneMotionBlur = 0x648; // char : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x648; // char : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x648; // char : 1
		constexpr auto bSyncAttachParentLOD = 0x648; // char : 1
		constexpr auto bCanHighlightSelectedSections = 0x648; // char : 1
		constexpr auto bRecentlyRendered = 0x648; // char : 1
		constexpr auto bCastCapsuleDirectShadow = 0x648; // char : 1
		constexpr auto bCastCapsuleIndirectShadow = 0x649; // char : 1
		constexpr auto bCPUSkinning = 0x649; // char : 1
		constexpr auto bEnableUpdateRateOptimizations = 0x649; // char : 1
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0x649; // char : 1
		constexpr auto bRenderStatic = 0x649; // char : 1
		constexpr auto bIgnoreMasterPoseComponentLOD = 0x649; // char : 1
		constexpr auto bCachedLocalBoundsUpToDate = 0x64a; // char : 1
		constexpr auto bForceMeshObjectUpdate = 0x64a; // char : 1
		constexpr auto CapsuleIndirectShadowMinVisibility = 0x64c; // float
		constexpr auto CachedWorldSpaceBounds = 0x664; // FBoxSphereBounds
		constexpr auto CachedWorldToLocalTransform = 0x680; // FMatrix
	}

	namespace n_ASGStructureDoor {
		constexpr auto MyDoorRootComponent = 0xb98; // USceneComponent*
		constexpr auto RotationSpeed = 0xba0; // float
		constexpr auto CurrentAngle = 0xba4; // float
		constexpr auto bOpenByRotation = 0xba8; // char : 1
		constexpr auto bOpenByUnRotation = 0xba8; // char : 1
		constexpr auto bOpenCloseDirection = 0xba8; // char : 1
		constexpr auto bSwitching = 0xba8; // char : 1
		constexpr auto bIsLocked = 0xba8; // char : 1
		constexpr auto DoorSwitchState = 0xba9; // int8_t
		constexpr auto ClientDoorSwitchState = 0xbaa; // char
		constexpr auto bDoubleDoor = 0xbab; // char : 1
		constexpr auto bInitRotation = 0xbab; // char : 1
		constexpr auto bRotateByPitch = 0xbab; // char : 1
		constexpr auto bRotateByRoll = 0xbab; // char : 1
		constexpr auto bRotateByYaw = 0xbab; // char : 1
		constexpr auto bXianChengMasterOperate = 0xbab; // char : 1
		constexpr auto DoubleDoorMesh = 0xbb0; // UStaticMeshComponent*
		constexpr auto DoubleDoorDefaultRotation = 0xbb8; // FRotator
		constexpr auto OpenSoundID = 0xbc4; // FName
		constexpr auto CloseSoundID = 0xbcc; // FName
		constexpr auto bCanSetPassword = 0xbd4; // char : 1
		constexpr auto CurrentPassword = 0xbd8; // uint32_t
		constexpr auto bLockedByPassword = 0xbdc; // char : 1
		constexpr auto LastInputPwdFailedTime = 0xbe0; // double
	}

	namespace n_UN_QuickHelpSlot {
		constexpr auto QuickSlotText = 0x260; // UTextBlock*
		constexpr auto AddText = 0x268; // UTextBlock*
		constexpr auto QuickSloBorder = 0x270; // UBorder*
		constexpr auto MouseButtonImage = 0x278; // UImage*
		constexpr auto HelpText = 0x280; // UTextBlock*
		constexpr auto LeftMouseTexture2D = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto MiddleMouseTexture2D = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto RightMouseTexture2D = 0x2d8; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UEdgeLoopInsertionProperties {
		constexpr auto PositionMode = 0x60; // EEdgeLoopPositioningMode
		constexpr auto InsertionMode = 0x64; // EEdgeLoopInsertionMode
		constexpr auto NumLoops = 0x68; // int32_t
		constexpr auto ProportionOffset = 0x70; // double
		constexpr auto DistanceOffset = 0x78; // double
		constexpr auto bInteractive = 0x80; // bool
		constexpr auto bFlipOffsetDirection = 0x81; // bool
		constexpr auto bWireframe = 0x82; // bool
		constexpr auto VertexTolerance = 0x88; // double
	}

	namespace n_UMagicLeapLightingTrackingComponent {
		constexpr auto UseGlobalAmbience = 0xc0; // bool
		constexpr auto UseColorTemp = 0xc1; // bool
	}

	namespace n_UWidgetSwitcherSlot {
		constexpr auto Padding = 0x40; // FMargin
		constexpr auto HorizontalAlignment = 0x50; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x51; // EVerticalAlignment
	}

	namespace n_UMirrorOperatorFactory {
		constexpr auto MirrorTool = 0x30; // UMirrorTool*
	}

	namespace n_ACameraShakeSourceActor {
		constexpr auto CameraShakeSourceComponent = 0x310; // UCameraShakeSourceComponent*
	}

	namespace n_UBTDecorator_TimeLimit {
		constexpr auto TimeLimit = 0x68; // float
	}

	namespace n_ASGStructureNPCRest {
		constexpr auto ReduceFoodDeltaTime = 0xb98; // float
		constexpr auto PerReduceDeltaFood = 0xb9c; // float
		constexpr auto PerReduceDeltaFoodWorking = 0xba0; // float
		constexpr auto AddStoreFoodTemplate = 0xba8; // TArray<USGItem*>
		constexpr auto StoreFoods = 0xbb8; // float
		constexpr auto ChunkSpawnSocketName = 0xbc8; // FName
		constexpr auto LinkChunkInfo = 0xbd0; // TArray<FStructureSeatLinkChunkInfo>
		constexpr auto ServerCheckControlDistance = 0xbe0; // float
	}

	namespace n_UGivePerkAnimationNotifyWidget {
		constexpr auto GivePerk = 0x278; // UWidgetAnimation*
		constexpr auto TextBlock_perkpoint = 0x280; // UTextBlock*
	}

	namespace n_UCommandlet {
		constexpr auto HelpDescription = 0x28; // FString
		constexpr auto HelpUsage = 0x38; // FString
		constexpr auto HelpWebLink = 0x48; // FString
		constexpr auto HelpParamNames = 0x58; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0x68; // TArray<FString>
		constexpr auto IsServer = 0x78; // char : 1
		constexpr auto IsClient = 0x78; // char : 1
		constexpr auto IsEditor = 0x78; // char : 1
		constexpr auto LogToConsole = 0x78; // char : 1
		constexpr auto ShowErrorCount = 0x78; // char : 1
		constexpr auto ShowProgress = 0x78; // char : 1
	}

	namespace n_AGameplayAbilityTargetActor_ActorPlacement {
		constexpr auto PlacedActorClass = 0x460; // UObject*
		constexpr auto PlacedActorMaterial = 0x468; // UMaterialInterface*
	}

	namespace n_UGlobalMap_HuKouSignTips {
		constexpr auto TbRemainTime = 0x288; // UTextBlock*
	}

	namespace n_AMeleeWeapon {
		constexpr auto SceneRootComponent = 0x7888; // USceneComponent*
		constexpr auto WeaponStaticMesh = 0x7890; // UStaticMeshComponent*
		constexpr auto BlockCollision = 0x7898; // UBoxComponent*
		constexpr auto ShieldBlockArrowCollision = 0x78a0; // UBoxComponent*
		constexpr auto TrailParticleComponent = 0x78a8; // UParticleSystemComponent*
		constexpr auto WeaponOreStaticMesh = 0x78b0; // UStaticMeshComponent*
		constexpr auto WeaponOreParticleComponent = 0x78b8; // UParticleSystemComponent*
		constexpr auto bUseCustomFlag = 0x78c0; // char : 1
		constexpr auto CustomFlagMaterialNames = 0x78c8; // TArray<FName>
		constexpr auto FlagImageModifies = 0x78d8; // float [0x5]
		constexpr auto DMI_FlagImage = 0x78f0; // UMaterialInstanceDynamic*
		constexpr auto RT_FlagImage = 0x78f8; // UTextureRenderTarget2D*
		constexpr auto FlagImageString = 0x7900; // FString
		constexpr auto NearlyHitDistanceTolerance = 0x7918; // float
		constexpr auto AttackHitsMaxNumber = 0x791c; // int32_t
		constexpr auto AttackFoliageHitsMaxNumber = 0x7920; // int32_t
		constexpr auto bClientUseNewTrace = 0x7924; // char : 1
		constexpr auto bCanAttackRebound = 0x7924; // char : 1
		constexpr auto AttackReboundCurve = 0x7928; // UCurveFloat*
		constexpr auto DeltaTraceNumber = 0x7930; // int32_t
		constexpr auto BodyTraceSphereRadius = 0x7934; // float
		constexpr auto Enum_TrailState = 0x7938; // ETrailState
		constexpr auto AttackReboundIgnoreQuerys = 0x7940; // TArray<ECollisionChannel>
		constexpr auto AttackReboundRateCurve = 0x7950; // FRuntimeFloatCurve
		constexpr auto RiderAttackReboundRateCurve = 0x79d8; // FRuntimeFloatCurve
		constexpr auto TMap_BlockCollisionOffset = 0x7a60; // TMap<EAimDirection, FWeaponBlockCollisionInfo>
		constexpr auto TMap_OffBlockCollisionOffset = 0x7ab0; // TMap<EAimDirection, FWeaponBlockCollisionInfo>
		constexpr auto TMap_RiderBlockCollisionOffset = 0x7b00; // TMap<EAimDirection, FWeaponBlockCollisionInfo>
		constexpr auto TMap_RiderOffBlockCollisionOffset = 0x7b50; // TMap<EAimDirection, FWeaponBlockCollisionInfo>
		constexpr auto Server_LastMeleeWeaponTraces = 0x7ba0; // TArray<FWeaponWorldTraceInfo>
		constexpr auto Server_CurrentMeleeWeaponTraces = 0x7bb0; // TArray<FWeaponWorldTraceInfo>
		constexpr auto Server_LastBodyTraces = 0x7bc0; // TArray<FWeaponWorldTraceInfo>
		constexpr auto Server_CurrentBodyTraces = 0x7bd0; // TArray<FWeaponWorldTraceInfo>
		constexpr auto UpdateWeaponTraceTimer = 0x7be0; // FTimerHandle
		constexpr auto UpdateWeaponReboundTraceTimer = 0x7be8; // FTimerHandle
		constexpr auto Struct_CurrentAttackInfo = 0x7bf0; // FAttackInfo
		constexpr auto bIsAttackRebounding = 0x7c50; // char : 1
		constexpr auto bCauserDamage = 0x7c50; // char : 1
		constexpr auto bSuccessCauserDamage = 0x7c50; // char : 1
		constexpr auto Enum_AttackSocketType = 0x7c51; // EAttackSocketType
		constexpr auto WeaponBlood = 0x7c74; // float
		constexpr auto Mat_Weapon = 0x7c78; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ShieldBlockedArrowMultiAdd = 0x7c98; // TMap<float, float>
		constexpr auto ShowDeltaTime = 0x7cf8; // float
		constexpr auto NiagaraWeaponType = 0x7d14; // ENiagaraWeaponType
	}

	namespace n_UMiniMapPOIFilter {
		constexpr auto FilterTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto FilterName = 0x288; // FText
		constexpr auto POIType = 0x2a0; // TArray<EMapPOIType>
		constexpr auto StaticPOIType = 0x2b0; // TArray<EMapStaticPOIType>
		constexpr auto MarkPOIType = 0x2c0; // TArray<EMiniMapMarkFilterType>
		constexpr auto CbFilter = 0x2e0; // UCheckBox*
		constexpr auto TbFilterName = 0x2e8; // UTextBlock*
		constexpr auto ImgFilter = 0x2f0; // UImage*
	}

	namespace n_UCollisionGeometryVisualizationProperties {
		constexpr auto LineThickness = 0x60; // float
		constexpr auto bShowHidden = 0x64; // bool
		constexpr auto Color = 0x68; // FColor
	}

	namespace n_UNiagaraDataInterfaceTexture {
		constexpr auto Texture = 0x38; // UTexture*
	}

	namespace n_USoundNodeDoppler {
		constexpr auto DopplerIntensity = 0x48; // float
		constexpr auto bUseSmoothing = 0x4c; // bool
		constexpr auto SmoothingInterpSpeed = 0x50; // float
	}

	namespace n_ALightningEffect {
		constexpr auto NiagaraComponent = 0x310; // UNiagaraComponent*
		constexpr auto LightningEmitter = 0x318; // ALightningEmitter*
		constexpr auto Root = 0x320; // ALightningEffect*
		constexpr auto Growth = 0x328; // float
		constexpr auto bActive = 0x32c; // bool
		constexpr auto bIsFadingOut = 0x32d; // bool
		constexpr auto LightningParams = 0x330; // FLightningParams
		constexpr auto IntensityDef = 0x3e8; // FLightningIntensityParams
		constexpr auto IntensityCur = 0x3f4; // FLightningIntensityParams
		constexpr auto EventOnLightningSpawned = 0x400; // FMulticastSparseDelegate
		constexpr auto EventOnLightningSparkMove = 0x401; // FMulticastSparseDelegate
		constexpr auto EventOnLightningSparkEndMove = 0x402; // FMulticastSparseDelegate
		constexpr auto EventOnLightningBranched = 0x404; // FMulticastSparseDelegate
		constexpr auto EventOnIntensityChanged = 0x405; // FMulticastSparseDelegate
		constexpr auto EventOnLightningOverlap = 0x406; // FMulticastSparseDelegate
		constexpr auto EventOnLightningHit = 0x407; // FMulticastSparseDelegate
		constexpr auto Branches = 0x5e0; // TArray<ALightningEffect*>
	}

	namespace n_UGameCharacterBuffPanel {
		constexpr auto ItemClass = 0x260; // UGameCharacterBuffItem*
		constexpr auto ColumnsPerRow = 0x268; // int32_t
		constexpr auto UGPBuff = 0x290; // UUniformGridPanel*
	}

	namespace n_URespawnPointGroup {
		constexpr auto RespawnButtonTemplate = 0x260; // USlotRespawnButton*
		constexpr auto RespawnButtonSizeY = 0x268; // float
		constexpr auto MaxRespawnButtonNumPerPage = 0x26c; // int32_t
		constexpr auto GroupSize = 0x270; // FVector2D
		constexpr auto GroupOffset = 0x278; // FVector2D
		constexpr auto UGPRespawnPointGroup = 0x2a0; // UUniformGridPanel*
		constexpr auto RespawnPointScrollBox = 0x2a8; // UScrollBox*
	}

	namespace n_UUI_Activity_Taishou {
		constexpr auto BattleServiceQueueCountInfo = 0x2d8; // FBattleServiceQueueCountInfo
		constexpr auto BtEnterBattle = 0x2e0; // UButton*
		constexpr auto BtShowCrossTransport = 0x2e8; // UButton*
		constexpr auto BtShowBattle = 0x2f0; // UButton*
		constexpr auto BtShowInventory = 0x2f8; // UButton*
		constexpr auto TbEnterBattle = 0x300; // UTextBlock*
		constexpr auto TbBattleName = 0x308; // UTextBlock*
		constexpr auto TbBattleTime = 0x310; // UTextBlock*
		constexpr auto TeamInfoSlot1_2 = 0x318; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_2 = 0x320; // UImage*
		constexpr auto Image_WinLine1_2 = 0x328; // UImage*
		constexpr auto CoutryGuildName1_2 = 0x330; // UTextBlock*
		constexpr auto TeamInfoSlot1_3 = 0x338; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_3 = 0x340; // UImage*
		constexpr auto Image_WinLine1_3 = 0x348; // UImage*
		constexpr auto CoutryGuildName1_3 = 0x350; // UTextBlock*
		constexpr auto TeamInfoSlot1_4 = 0x358; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_4 = 0x360; // UImage*
		constexpr auto Image_WinLine1_4 = 0x368; // UImage*
		constexpr auto CoutryGuildName1_4 = 0x370; // UTextBlock*
		constexpr auto TeamInfoSlot1_5 = 0x378; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_5 = 0x380; // UImage*
		constexpr auto Image_WinLine1_5 = 0x388; // UImage*
		constexpr auto CoutryGuildName1_5 = 0x390; // UTextBlock*
		constexpr auto TeamInfoSlot1_6 = 0x398; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_6 = 0x3a0; // UImage*
		constexpr auto Image_WinLine1_6 = 0x3a8; // UImage*
		constexpr auto CoutryGuildName1_6 = 0x3b0; // UTextBlock*
		constexpr auto TeamInfoSlot1_7 = 0x3b8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_7 = 0x3c0; // UImage*
		constexpr auto Image_WinLine1_7 = 0x3c8; // UImage*
		constexpr auto CoutryGuildName1_7 = 0x3d0; // UTextBlock*
		constexpr auto TeamInfoSlot1_8 = 0x3d8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_8 = 0x3e0; // UImage*
		constexpr auto Image_WinLine1_8 = 0x3e8; // UImage*
		constexpr auto CoutryGuildName1_8 = 0x3f0; // UTextBlock*
		constexpr auto TeamInfoSlot1_9 = 0x3f8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_9 = 0x400; // UImage*
		constexpr auto Image_WinLine1_9 = 0x408; // UImage*
		constexpr auto CoutryGuildName1_9 = 0x410; // UTextBlock*
		constexpr auto TeamInfoSlot1_10 = 0x418; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_10 = 0x420; // UImage*
		constexpr auto Image_WinLine1_10 = 0x428; // UImage*
		constexpr auto CoutryGuildName1_10 = 0x430; // UTextBlock*
		constexpr auto TeamInfoSlot1_11 = 0x438; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_11 = 0x440; // UImage*
		constexpr auto Image_WinLine1_11 = 0x448; // UImage*
		constexpr auto CoutryGuildName1_11 = 0x450; // UTextBlock*
		constexpr auto TeamInfoSlot1_12 = 0x458; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_12 = 0x460; // UImage*
		constexpr auto Image_WinLine1_12 = 0x468; // UImage*
		constexpr auto CoutryGuildName1_12 = 0x470; // UTextBlock*
		constexpr auto TeamInfoSlot1_13 = 0x478; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_13 = 0x480; // UImage*
		constexpr auto Image_WinLine1_13 = 0x488; // UImage*
		constexpr auto CoutryGuildName1_13 = 0x490; // UTextBlock*
		constexpr auto TeamInfoSlot1_14 = 0x498; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_14 = 0x4a0; // UImage*
		constexpr auto Image_WinLine1_14 = 0x4a8; // UImage*
		constexpr auto CoutryGuildName1_14 = 0x4b0; // UTextBlock*
		constexpr auto TeamInfoSlot1_15 = 0x4b8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_15 = 0x4c0; // UImage*
		constexpr auto Image_WinLine1_15 = 0x4c8; // UImage*
		constexpr auto CoutryGuildName1_15 = 0x4d0; // UTextBlock*
		constexpr auto TeamInfoSlot1_16 = 0x4d8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_16 = 0x4e0; // UImage*
		constexpr auto Image_WinLine1_16 = 0x4e8; // UImage*
		constexpr auto CoutryGuildName1_16 = 0x4f0; // UTextBlock*
		constexpr auto TeamInfoSlot1_17 = 0x4f8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg1_17 = 0x500; // UImage*
		constexpr auto Image_WinLine1_17 = 0x508; // UImage*
		constexpr auto CoutryGuildName1_17 = 0x510; // UTextBlock*
		constexpr auto TeamInfoSlot2_2 = 0x518; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_2 = 0x520; // UImage*
		constexpr auto Image_WinLine2_2 = 0x528; // UImage*
		constexpr auto CoutryGuildName2_2 = 0x530; // UTextBlock*
		constexpr auto TeamInfoSlot2_3 = 0x538; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_3 = 0x540; // UImage*
		constexpr auto Image_WinLine2_3 = 0x548; // UImage*
		constexpr auto CoutryGuildName2_3 = 0x550; // UTextBlock*
		constexpr auto TeamInfoSlot2_4 = 0x558; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_4 = 0x560; // UImage*
		constexpr auto Image_WinLine2_4 = 0x568; // UImage*
		constexpr auto CoutryGuildName2_4 = 0x570; // UTextBlock*
		constexpr auto TeamInfoSlot2_5 = 0x578; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_5 = 0x580; // UImage*
		constexpr auto Image_WinLine2_5 = 0x588; // UImage*
		constexpr auto CoutryGuildName2_5 = 0x590; // UTextBlock*
		constexpr auto TeamInfoSlot2_6 = 0x598; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_6 = 0x5a0; // UImage*
		constexpr auto Image_WinLine2_6 = 0x5a8; // UImage*
		constexpr auto CoutryGuildName2_6 = 0x5b0; // UTextBlock*
		constexpr auto TeamInfoSlot2_7 = 0x5b8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_7 = 0x5c0; // UImage*
		constexpr auto Image_WinLine2_7 = 0x5c8; // UImage*
		constexpr auto CoutryGuildName2_7 = 0x5d0; // UTextBlock*
		constexpr auto TeamInfoSlot2_8 = 0x5d8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_8 = 0x5e0; // UImage*
		constexpr auto Image_WinLine2_8 = 0x5e8; // UImage*
		constexpr auto CoutryGuildName2_8 = 0x5f0; // UTextBlock*
		constexpr auto TeamInfoSlot2_9 = 0x5f8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg2_9 = 0x600; // UImage*
		constexpr auto Image_WinLine2_9 = 0x608; // UImage*
		constexpr auto CoutryGuildName2_9 = 0x610; // UTextBlock*
		constexpr auto TeamInfoSlot3_2 = 0x618; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg3_2 = 0x620; // UImage*
		constexpr auto Image_WinLine3_2 = 0x628; // UImage*
		constexpr auto CoutryGuildName3_2 = 0x630; // UTextBlock*
		constexpr auto TeamInfoSlot3_3 = 0x638; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg3_3 = 0x640; // UImage*
		constexpr auto Image_WinLine3_3 = 0x648; // UImage*
		constexpr auto CoutryGuildName3_3 = 0x650; // UTextBlock*
		constexpr auto TeamInfoSlot3_4 = 0x658; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg3_4 = 0x660; // UImage*
		constexpr auto Image_WinLine3_4 = 0x668; // UImage*
		constexpr auto CoutryGuildName3_4 = 0x670; // UTextBlock*
		constexpr auto TeamInfoSlot3_5 = 0x678; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg3_5 = 0x680; // UImage*
		constexpr auto Image_WinLine3_5 = 0x688; // UImage*
		constexpr auto CoutryGuildName3_5 = 0x690; // UTextBlock*
		constexpr auto TeamInfoSlot4_2 = 0x698; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg4_2 = 0x6a0; // UImage*
		constexpr auto Image_WinLine4_2 = 0x6a8; // UImage*
		constexpr auto CoutryGuildName4_2 = 0x6b0; // UTextBlock*
		constexpr auto TeamInfoSlot4_3 = 0x6b8; // UTaishouTeamInfoSlot*
		constexpr auto Image_GuildNameBg4_3 = 0x6c0; // UImage*
		constexpr auto Image_WinLine4_3 = 0x6c8; // UImage*
		constexpr auto CoutryGuildName4_3 = 0x6d0; // UTextBlock*
		constexpr auto Image_WinGuildEdgeIcon = 0x6d8; // UImage*
		constexpr auto TeamInfoSlotWin = 0x6e0; // UTaishouTeamInfoSlot*
		constexpr auto LastClickEnterTime = 0xaa8; // double
		constexpr auto m_SelectedTeamSlot = 0xab0; // UTaishouTeamInfoSlot*
		constexpr auto EnterBtnState = 0xab8; // int32_t
	}

	namespace n_UWBP_MouseSensitivitySettingSliderItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto ImgScrollBg = 0x370; // UImage*
		constexpr auto Slider = 0x378; // USlider*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto Text = 0x388; // UTextBlock*
		constexpr auto Text1 = 0x390; // UTextBlock*
		constexpr auto StepSize = 0x398; // float
	}

	namespace n_USmoothHoleFillProperties {
		constexpr auto bConstrainToHoleInterior = 0x60; // bool
		constexpr auto RemeshingExteriorRegionWidth = 0x64; // int32_t
		constexpr auto SmoothingExteriorRegionWidth = 0x68; // int32_t
		constexpr auto SmoothingInteriorRegionWidth = 0x6c; // int32_t
		constexpr auto InteriorSmoothness = 0x70; // float
		constexpr auto FillDensityScalar = 0x78; // double
		constexpr auto bProjectDuringRemesh = 0x80; // bool
	}

	namespace n_UNiagaraComponentRendererProperties {
		constexpr auto ComponentType = 0x80; // USceneComponent*
		constexpr auto ComponentCountLimit = 0x88; // uint32_t
		constexpr auto EnabledBinding = 0x90; // FNiagaraVariableAttributeBinding
		constexpr auto bAssignComponentsOnParticleID = 0xe8; // bool
		constexpr auto bOnlyCreateComponentsOnParticleSpawn = 0xe9; // bool
		constexpr auto TemplateComponent = 0xf0; // USceneComponent*
		constexpr auto PropertyBindings = 0xf8; // TArray<FNiagaraComponentPropertyBinding>
	}

	namespace n_UGameplayEffectCalculation {
		constexpr auto RelevantAttributesToCapture = 0x28; // TArray<FGameplayEffectAttributeCaptureDefinition>
	}

	namespace n_UAIPerceptionComponent {
		constexpr auto SensesConfig = 0xc0; // TArray<UAISenseConfig*>
		constexpr auto DominantSense = 0xd0; // UAISense*
		constexpr auto AIOwner = 0xe8; // AAIController*
		constexpr auto OnPerceptionUpdated = 0x170; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionUpdated = 0x180; // FMulticastInlineDelegate
		constexpr auto OnTargetPerceptionInfoUpdated = 0x190; // FMulticastInlineDelegate
	}

	namespace n_UUI_Wound {
		constexpr auto TbEvil = 0x260; // UTextBlock*
		constexpr auto PbEvil = 0x268; // UProgressBar*
		constexpr auto TbTurbid = 0x270; // UTextBlock*
		constexpr auto PbTurbid = 0x278; // UProgressBar*
		constexpr auto TbPoison = 0x280; // UTextBlock*
		constexpr auto PbPoison = 0x288; // UProgressBar*
		constexpr auto TbTrauma = 0x290; // UTextBlock*
		constexpr auto PbTrauma = 0x298; // UProgressBar*
		constexpr auto TbWound = 0x2a0; // UTextBlock*
	}

	namespace n_UMiniMapPOI_Mark {
		constexpr auto SGGameData = 0x3d8; // USGGameData*
		constexpr auto MarkConfig = 0x3e0; // FMiniMapMarkConfig
	}

	namespace n_UWBP_SystemSettingCheckBox_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto BtnTitle = 0x370; // UButton*
		constexpr auto CbSetting = 0x378; // UCheckBox*
		constexpr auto SBMain = 0x380; // USizeBox*
		constexpr auto TbTitle = 0x388; // UTextBlock*
		constexpr auto Title = 0x390; // FText
		constexpr auto OnCheckStateChanged = 0x3a8; // FMulticastInlineDelegate
	}

	namespace n_USGToolTipWidget {
		constexpr auto ToolTipSize = 0x260; // FVector2D
		constexpr auto ToolTipOffset = 0x268; // FVector2D
		constexpr auto HorizontalAlignment = 0x270; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x271; // EVerticalAlignment
	}

	namespace n_UUI_PrivateSessionListRow {
		constexpr auto NormalRowTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto HoverRowTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectRowTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto FavoriteTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto NotFavoriteTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto MapConfigDataTable = 0x328; // UDataTable*
		constexpr auto PingMsColor = 0x330; // TMap<int32_t, FLinearColor>
		constexpr auto ImgHasPassword = 0x380; // UImage*
		constexpr auto TbSessionName = 0x388; // UTextBlock*
		constexpr auto TbMapName = 0x390; // UTextBlock*
		constexpr auto TbPVPType = 0x398; // UTextBlock*
		constexpr auto TbVersion = 0x3a0; // UTextBlock*
		constexpr auto TbMOD = 0x3a8; // UTextBlock*
		constexpr auto TbPlayerNum = 0x3b0; // UTextBlock*
		constexpr auto TbMaxPlayerNum = 0x3b8; // UTextBlock*
		constexpr auto TbPingMS = 0x3c0; // UTextBlock*
		constexpr auto BtnFavorites = 0x3c8; // UButton*
		constexpr auto ImgFavorites = 0x3d0; // UImage*
		constexpr auto BtnDescription = 0x3d8; // UButton*
		constexpr auto BtnBg = 0x3e0; // UButton*
		constexpr auto ImgBg = 0x3e8; // UImage*
		constexpr auto OnPrivateSessionListRowClicked = 0x3f0; // FMulticastInlineDelegate
		constexpr auto OnPrivateSessionListRowDescriptionClicked = 0x400; // FMulticastInlineDelegate
		constexpr auto OnPrivateSessionListRowFavoriteClicked = 0x410; // FMulticastInlineDelegate
		constexpr auto BindServerInfoIndex = 0x420; // int32_t
		constexpr auto bHovered = 0x424; // char : 1
		constexpr auto bSelected = 0x424; // char : 1
		constexpr auto bFavorite = 0x424; // char : 1
	}

	namespace n_USGBuffComponent {
		constexpr auto BuffArray = 0xc0; // TArray<USGBuff*>
		constexpr auto AllowedBuff = 0xd0; // TArray<FStructureBuffEntry>
		constexpr auto ReplicatedBuffMaxAmount = 0xe0; // int32_t
		constexpr auto OnAddBuffEvent = 0xe8; // FMulticastInlineDelegate
		constexpr auto OnUpdateBuffEvent = 0xf8; // FMulticastInlineDelegate
		constexpr auto OnRemoveBuffEvent = 0x108; // FMulticastInlineDelegate
		constexpr auto OnUpdateReplicatedEvent = 0x118; // FMulticastInlineDelegate
		constexpr auto BuffParticleMap = 0x128; // TMap<UObject*, UParticleSystemComponent*>
		constexpr auto CacheBaseCharacter = 0x198; // ABaseCharacter*
	}

	namespace n_UProjectileMovementComponent {
		constexpr auto InitialSpeed = 0x100; // float
		constexpr auto MaxSpeed = 0x104; // float
		constexpr auto bRotationFollowsVelocity = 0x108; // char : 1
		constexpr auto bRotationRemainsVertical = 0x108; // char : 1
		constexpr auto bShouldBounce = 0x108; // char : 1
		constexpr auto bInitialVelocityInLocalSpace = 0x108; // char : 1
		constexpr auto bForceSubStepping = 0x108; // char : 1
		constexpr auto bSimulationEnabled = 0x108; // char : 1
		constexpr auto bSweepCollision = 0x108; // char : 1
		constexpr auto bIsHomingProjectile = 0x108; // char : 1
		constexpr auto bBounceAngleAffectsFriction = 0x109; // char : 1
		constexpr auto bIsSliding = 0x109; // char : 1
		constexpr auto bInterpMovement = 0x109; // char : 1
		constexpr auto bInterpRotation = 0x109; // char : 1
		constexpr auto PreviousHitTime = 0x10c; // float
		constexpr auto PreviousHitNormal = 0x110; // FVector
		constexpr auto ProjectileGravityScale = 0x11c; // float
		constexpr auto Buoyancy = 0x120; // float
		constexpr auto Bounciness = 0x124; // float
		constexpr auto Friction = 0x128; // float
		constexpr auto BounceVelocityStopSimulatingThreshold = 0x12c; // float
		constexpr auto MinFrictionFraction = 0x130; // float
		constexpr auto OnProjectileBounce = 0x138; // FMulticastInlineDelegate
		constexpr auto OnProjectileStop = 0x148; // FMulticastInlineDelegate
		constexpr auto HomingAccelerationMagnitude = 0x158; // float
		constexpr auto HomingTargetComponent = 0x15c; // TWeakObjectPtr<USceneComponent>
		constexpr auto MaxSimulationTimeStep = 0x164; // float
		constexpr auto MaxSimulationIterations = 0x168; // int32_t
		constexpr auto BounceAdditionalIterations = 0x16c; // int32_t
		constexpr auto InterpLocationTime = 0x170; // float
		constexpr auto InterpRotationTime = 0x174; // float
		constexpr auto InterpLocationMaxLagDistance = 0x178; // float
		constexpr auto InterpLocationSnapToTargetDistance = 0x17c; // float
	}

	namespace n_AGameplayCueNotify_Actor {
		constexpr auto bAutoDestroyOnRemove = 0x310; // bool
		constexpr auto AutoDestroyDelay = 0x314; // float
		constexpr auto WarnIfTimelineIsStillRunning = 0x318; // bool
		constexpr auto WarnIfLatentActionIsStillRunning = 0x319; // bool
		constexpr auto GameplayCueTag = 0x31c; // FGameplayTag
		constexpr auto GameplayCueName = 0x324; // FName
		constexpr auto bAutoAttachToOwner = 0x32c; // bool
		constexpr auto IsOverride = 0x32d; // bool
		constexpr auto bUniqueInstancePerInstigator = 0x32e; // bool
		constexpr auto bUniqueInstancePerSourceObject = 0x32f; // bool
		constexpr auto bAllowMultipleOnActiveEvents = 0x330; // bool
		constexpr auto bAllowMultipleWhileActiveEvents = 0x331; // bool
		constexpr auto NumPreallocatedInstances = 0x334; // int32_t
	}

	namespace n_AGroomActor {
		constexpr auto GroomComponent = 0x310; // UGroomComponent*
	}

	namespace n_UTcpMessagingSettings {
		constexpr auto EnableTransport = 0x28; // bool
		constexpr auto ListenEndpoint = 0x30; // FString
		constexpr auto ConnectToEndpoints = 0x40; // TArray<FString>
		constexpr auto ConnectionRetryDelay = 0x50; // int32_t
		constexpr auto bStopServiceWhenAppDeactivates = 0x54; // bool
	}

	namespace n_UAbilityTask {
		constexpr auto Ability = 0x68; // UGameplayAbility*
		constexpr auto AbilitySystemComponent = 0x70; // UAbilitySystemComponent*
	}

	namespace n_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x50; // FMulticastInlineDelegate
		constexpr auto OnFailed = 0x60; // FMulticastInlineDelegate
	}

	namespace n_UCharacterInfoHUD {
		constexpr auto CorpseText = 0x278; // UTextBlock*
		constexpr auto bg = 0x280; // UImage*
		constexpr auto BindCharacter = 0x288; // TWeakObjectPtr<ABaseCharacter>
	}

	namespace n_ATextRenderActor {
		constexpr auto TextRender = 0x310; // UTextRenderComponent*
	}

	namespace n_UAudioAnalyzerNRT {
		constexpr auto Sound = 0x28; // USoundWave*
		constexpr auto DurationInSeconds = 0x30; // float
	}

	namespace n_UPlatformEventsComponent {
		constexpr auto PlatformChangedToLaptopModeDelegate = 0xc0; // FMulticastInlineDelegate
		constexpr auto PlatformChangedToTabletModeDelegate = 0xd0; // FMulticastInlineDelegate
	}

	namespace n_USoundSubmix {
		constexpr auto bMuteWhenBackgrounded = 0x40; // char : 1
		constexpr auto SubmixEffectChain = 0x48; // TArray<USoundEffectSubmixPreset*>
		constexpr auto AmbisonicsPluginSettings = 0x58; // USoundfieldEncodingSettingsBase*
		constexpr auto EnvelopeFollowerAttackTime = 0x60; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x64; // int32_t
		constexpr auto GainMode = 0x68; // EGainParamMode
		constexpr auto OutputVolume = 0x6c; // float
		constexpr auto WetLevel = 0x70; // float
		constexpr auto DryLevel = 0x74; // float
		constexpr auto OnSubmixRecordedFileDone = 0x78; // FMulticastInlineDelegate
	}

	namespace n_UMovieSceneLevelVisibilityTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_ULayer {
		constexpr auto LayerName = 0x28; // FName
		constexpr auto bIsVisible = 0x30; // char : 1
		constexpr auto ActorStats = 0x38; // TArray<FLayerActorStats>
	}

	namespace n_UBattleGuildTips {
		constexpr auto GuildIconMat = 0x288; // UMaterialInterface*
		constexpr auto MinRequestTime = 0x290; // float
		constexpr auto ImgGuildIcon = 0x2a8; // UImage*
		constexpr auto TbOccupyActorName = 0x2b0; // UTextBlock*
		constexpr auto OccupyInfoCanvas = 0x2b8; // UCanvasPanel*
		constexpr auto VbOccupyInfo = 0x2c0; // UVerticalBox*
		constexpr auto TbGuildOwnerName = 0x2c8; // UTextBlock*
		constexpr auto TbGuildOwnerJob = 0x2d0; // UTextBlock*
		constexpr auto TbGuildLevel = 0x2d8; // UTextBlock*
		constexpr auto TbMemberNum = 0x2e0; // UTextBlock*
		constexpr auto TbOccupyGuanAiNum = 0x2e8; // UTextBlock*
		constexpr auto TbOccupyCityNum = 0x2f0; // UTextBlock*
		constexpr auto TbOccupyXianChengNum = 0x2f8; // UTextBlock*
		constexpr auto LoadingCanvas = 0x300; // UCanvasPanel*
		constexpr auto UgpAllianceGuilds = 0x308; // UUniformGridPanel*
		constexpr auto HbAllianceGuild = 0x310; // UHorizontalBox*
		constexpr auto TbAllianceGuildNum = 0x318; // UTextBlock*
		constexpr auto AllianceGuildShowColNum = 0x320; // int32_t
		constexpr auto AllianceGuildShowMaxNum = 0x324; // int32_t
		constexpr auto AllianceGuildSlotTemplate = 0x328; // UTipsGuildIconSlot*
		constexpr auto RequestTime = 0x330; // float
		constexpr auto bRequested = 0x334; // char : 1
		constexpr auto DynamicGuildIconInstance = 0x338; // UMaterialInstanceDynamic*
		constexpr auto BindGuildID = 0x340; // FGuid
		constexpr auto BindAllianceID = 0x350; // FGuid
		constexpr auto GuildList = 0x360; // TArray<FGuid>
		constexpr auto GuildShowIndex = 0x370; // int32_t
	}

	namespace n_UBTTask_DoAttack {
		constexpr auto OverrideBrakingDistance = 0xd0; // float
	}

	namespace n_UPathFollowingComponent {
		constexpr auto MovementComp = 0xf8; // UNavMovementComponent*
		constexpr auto MyNavData = 0x108; // ANavigationData*
	}

	namespace n_UAddSkillExpPanel {
		constexpr auto PbSkill = 0x288; // UProgressBar*
		constexpr auto PbLimitSkill = 0x290; // UProgressBar*
		constexpr auto AddLevelSlider = 0x298; // USlider*
		constexpr auto BtnAddLevel = 0x2a0; // UButton*
		constexpr auto BtnReduceLevel = 0x2a8; // UButton*
		constexpr auto TbExp = 0x2b0; // UTextBlock*
		constexpr auto TbPublicExp = 0x2b8; // UTextBlock*
		constexpr auto BtnConfirm = 0x2c0; // UButton*
		constexpr auto BtnClose = 0x2c8; // UButton*
		constexpr auto EtbSkillLevel = 0x2d0; // UEditableText*
		constexpr auto TbNotEnoughExp = 0x2d8; // UTextBlock*
	}

	namespace n_UMaterialExpressionShadingModel {
		constexpr auto ShadingModel = 0x40; // EMaterialShadingModel
	}

	namespace n_USoundNodeSwitch {
		constexpr auto IntParameterName = 0x48; // FName
	}

	namespace n_UAbilityTask_WaitInputPress {
		constexpr auto OnPress = 0x80; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSign {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UKelvinBrushProperties {
		constexpr auto FalloffDistance = 0x60; // float
		constexpr auto Stiffness = 0x64; // float
		constexpr auto Incompressiblity = 0x68; // float
		constexpr auto BrushSteps = 0x6c; // int32_t
	}

	namespace n_UMovieScene2DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieScene2DTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Rotation = 0x238; // FMovieSceneFloatChannel
		constexpr auto Scale = 0x2d8; // FMovieSceneFloatChannel [0x2]
		constexpr auto Shear = 0x418; // FMovieSceneFloatChannel [0x2]
	}

	namespace n_UNavMovementComponent {
		constexpr auto NavAgentProps = 0x100; // FNavAgentProperties
		constexpr auto FixedPathBrakingDistance = 0x130; // float
		constexpr auto bUpdateNavAgentWithOwnersCollision = 0x134; // char : 1
		constexpr auto bUseAccelerationForPaths = 0x134; // char : 1
		constexpr auto bUseFixedBrakingDistanceForPaths = 0x134; // char : 1
		constexpr auto MovementState = 0x135; // FMovementProperties
		constexpr auto PathFollowingComp = 0x138; // UObject*
	}

	namespace n_UWidgetAnimationPlayCallbackProxy {
		constexpr auto Finished = 0x28; // FMulticastInlineDelegate
	}

	namespace n_ULocationServicesImpl {
		constexpr auto OnLocationChanged = 0x28; // FMulticastInlineDelegate
	}

	namespace n_USGGlobals {
		constexpr auto SGGameData = 0x28; // USGGameData*
		constexpr auto SGModsManage = 0x30; // UModManage*
		constexpr auto GameDataAsset = 0x38; // FSoftObjectPath
		constexpr auto SGRTXQualityClass = 0x50; // ASGRTXQuality*
		constexpr auto PubDataManagerClass = 0x58; // UPubDataManager*
		constexpr auto StandaloneMapName = 0x60; // FString
		constexpr auto LobbyMapName = 0x70; // FString
		constexpr auto GlobalMapName = 0x80; // FString
		constexpr auto MainMenuMapName = 0x90; // FString
		constexpr auto HuangLiClass = 0xa0; // USGHuangLi*
		constexpr auto GlobalGenericConfirmationDialogClass = 0xa8; // UUI_GenericConfirmationDialog*
		constexpr auto ConnectWaitingDialogueClass = 0xb0; // UUI_GenericConnectWaiting*
		constexpr auto GlobalGenericMultiItemDialog = 0xb8; // UUI_GenericMultiItemDialog*
		constexpr auto PasswordDialogTemplate = 0xc0; // UUI_PasswordDialog*
		constexpr auto PasswordConfirmationDialogTemplate = 0xc8; // UUI_PasswordConfirmationDialog*
		constexpr auto UpDatePasswordDialogTemplate = 0xd0; // UUI_UpDatePasswordDialog*
	}

	namespace n_APhononProbeVolume {
		constexpr auto PlacementStrategy = 0x348; // EPhononProbePlacementStrategy
		constexpr auto HorizontalSpacing = 0x34c; // float
		constexpr auto HeightAboveFloor = 0x350; // float
		constexpr auto NumProbes = 0x354; // int32_t
		constexpr auto ProbeDataSize = 0x358; // int32_t
		constexpr auto BakedDataInfo = 0x360; // TArray<FBakedDataInfo>
		constexpr auto PhononProbeComponent = 0x370; // UPhononProbeComponent*
		constexpr auto ProbeBoxFileName = 0x378; // FString
		constexpr auto ProbeBatchFileName = 0x388; // FString
	}

	namespace n_UMaterialExpressionBreakMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
	}

	namespace n_UNavCollisionBase {
		constexpr auto bIsDynamicObstacle = 0x28; // char : 1
	}

	namespace n_AController {
		constexpr auto PlayerState = 0x318; // APlayerState*
		constexpr auto OnInstigatedAnyDamage = 0x328; // FMulticastInlineDelegate
		constexpr auto StateName = 0x338; // FName
		constexpr auto Pawn = 0x340; // APawn*
		constexpr auto Character = 0x350; // ACharacter*
		constexpr auto TransformComponent = 0x358; // USceneComponent*
		constexpr auto ControlRotation = 0x378; // FRotator
		constexpr auto bAttachToPawn = 0x384; // char : 1
	}

	namespace n_UARPlaneComponent {
		constexpr auto ReplicatedPayload = 0x290; // FARPlaneUpdatePayload
	}

	namespace n_UMaterialExpressionDistance {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_UEnvQueryTest_Volume {
		constexpr auto VolumeContext = 0x1f8; // UEnvQueryContext*
		constexpr auto VolumeClass = 0x200; // AVolume*
		constexpr auto bDoComplexVolumeTest = 0x208; // char : 1
	}

	namespace n_UBTTask_CustomMoveTo {
		constexpr auto BBKey_DesiredActor = 0xf0; // FBlackboardKeySelector
		constexpr auto BBKey_DesiredLocation = 0x118; // FBlackboardKeySelector
		constexpr auto BBKey_ForceUpdateNavigationPath = 0x140; // FBlackboardKeySelector
		constexpr auto bLockDesiredActor = 0x184; // char : 1
		constexpr auto bClearForceMoveToLoc = 0x184; // char : 1
		constexpr auto bUpdateKeepAwayDesiredActor = 0x184; // char : 1
		constexpr auto UpdateKeepAwayRandomMaxWaitTimeRange = 0x190; // FVector2D
		constexpr auto UpdateKeepAwayLookDirection = 0x198; // FVector2D
		constexpr auto bUpdateKeepInPlaceLoc = 0x1a0; // char : 1
		constexpr auto bUpdateDesiredLocOnActor = 0x1a0; // char : 1
		constexpr auto bUpdateDesiredLocOnFormation = 0x1a0; // char : 1
		constexpr auto bUseOtherTaskMovement = 0x1a0; // char : 1
		constexpr auto TetherDistance = 0x1b8; // float
		constexpr auto AcceptableRadius = 0x1bc; // float
		constexpr auto AcceptableRadiusOnPathEnd = 0x1c0; // float
		constexpr auto AcceptableRadiusOnPathEndTolerance = 0x1c4; // float
		constexpr auto NavPathFilterClass = 0x1c8; // UNavigationQueryFilter*
		constexpr auto NavPathCoolingTimeRange = 0x1dc; // FVector2D
		constexpr auto bFinishedOnsReachDesiredLocation = 0x1f0; // char : 1
		constexpr auto ToleranceOnProjectedPathEnd = 0x1f4; // float
		constexpr auto NavPathRaycastDistance = 0x204; // float
		constexpr auto NavPathRaycastIndexMultiply = 0x208; // int32_t
		constexpr auto FindNewNavPathCoolingTimeRange = 0x214; // FVector2D
		constexpr auto FollowAcceptableRadius = 0x224; // float
		constexpr auto FindNewNavPathCoolingTimeRangeByFollow = 0x228; // FVector2D
		constexpr auto MaxDeltaSpeed = 0x234; // float
		constexpr auto InvalidNavPathMaxCountOnSelfLocation = 0x23c; // int32_t
		constexpr auto bOverridePlayerInput = 0x240; // char : 1
		constexpr auto bOverrideMovementInput = 0x240; // char : 1
		constexpr auto Enum_InputDirection = 0x241; // EInputDirection
		constexpr auto PlayerInputMaxCoolingTimeRange = 0x24c; // FVector2D
		constexpr auto ClearPlayerInputMaxCoolingTimeRange = 0x25c; // FVector2D
		constexpr auto CollisionDeltaSpeedPercent = 0x2f0; // float
		constexpr auto TrySetActorDistance = 0x2f4; // float
		constexpr auto RunningDistance = 0x300; // float
		constexpr auto RunningMaxCoolingTimeRange = 0x304; // FVector2D
	}

	namespace n_UWBP_PrivateSessionMODItem_C {
		constexpr auto BtnBg = 0x270; // UButton*
		constexpr auto ImgBg = 0x278; // UImage*
	}

	namespace n_UNiagaraEventReceiverEmitterAction_SpawnParticles {
		constexpr auto NumParticles = 0x28; // uint32_t
	}

	namespace n_UBTCompositeNode {
		constexpr auto Children = 0x58; // TArray<FBTCompositeChild>
		constexpr auto Services = 0x68; // TArray<UBTService*>
		constexpr auto bApplyDecoratorScope = 0x88; // char : 1
	}

	namespace n_UNavigationGraphNodeComponent {
		constexpr auto Node = 0x208; // FNavGraphNode
		constexpr auto NextNodeComponent = 0x220; // UNavigationGraphNodeComponent*
		constexpr auto PrevNodeComponent = 0x228; // UNavigationGraphNodeComponent*
	}

	namespace n_UInterpTrackInstFloatMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetFloats = 0x38; // TArray<float>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackFloatMaterialParam*
	}

	namespace n_UParticleModuleRotationRateMultiplyLife {
		constexpr auto LifeMultiplier = 0x30; // FRawDistributionFloat
	}

	namespace n_URevolveBoundaryToolProperties {
		constexpr auto bDisplayOriginalMesh = 0xb0; // bool
		constexpr auto AxisOrigin = 0xb4; // FVector
		constexpr auto AxisYaw = 0xc0; // float
		constexpr auto AxisPitch = 0xc4; // float
		constexpr auto bSnapToWorldGrid = 0xc8; // bool
	}

	namespace n_UParticleModuleMeshRotationRate {
		constexpr auto StartRotationRate = 0x30; // FRawDistributionVector
	}

	namespace n_UUI_AdminSubPanelParam {
		constexpr auto FloatList = 0x2d8; // UScrollBox*
		constexpr auto SearchTextBox = 0x2e0; // UEditableTextBox*
		constexpr auto ServerParamFloatTemplate = 0x2f8; // UUI_ServerParamFloat*
		constexpr auto ServerParamBoolTemplate = 0x300; // UUI_ServerParamBool*
		constexpr auto ServerParamStringTemplate = 0x308; // UUI_ServerParamString*
		constexpr auto ServerParamRegionTemplate = 0x310; // UUI_ServerParamRegion*
		constexpr auto ExploitCompConfigsDataTable = 0x318; // UDataTable*
	}

	namespace n_USubmixEffectDelayPreset {
		constexpr auto Settings = 0x9c; // FSubmixEffectDelaySettings
		constexpr auto DynamicSettings = 0xa8; // FSubmixEffectDelaySettings
	}

	namespace n_UThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto bAnimateHorizontally = 0x10c; // bool
		constexpr auto bAnimateVertically = 0x10d; // bool
		constexpr auto bAnimateOpacity = 0x10e; // bool
		constexpr auto PieceImage = 0x110; // USlateBrushAsset*
		constexpr auto Image = 0x118; // FSlateBrush
	}

	namespace n_AARSharedWorldGameMode {
		constexpr auto BufferSizePerChunk = 0x3f8; // int32_t
	}

	namespace n_UHuangLiMainPanel {
		constexpr auto HuangLiDayText = 0x260; // UTextBlock*
		constexpr auto XingShenText = 0x268; // UTextBlock*
		constexpr auto JianChuText = 0x270; // UTextBlock*
		constexpr auto XingXiuText = 0x278; // UTextBlock*
		constexpr auto TimeText = 0x280; // UTextBlock*
		constexpr auto PreDayButton = 0x288; // UButton*
		constexpr auto NextDayButton = 0x290; // UButton*
		constexpr auto XingShenButton = 0x298; // UButton*
		constexpr auto JianChuButton = 0x2a0; // UButton*
		constexpr auto XingXiuButton = 0x2a8; // UButton*
		constexpr auto ActivityButton = 0x2b0; // UButton*
		constexpr auto DayDiffText = 0x2b8; // UTextBlock*
		constexpr auto EffectText = 0x2c0; // UTextBlock*
	}

	namespace n_UMaterialExpressionTextureSampleParameterSubUV {
		constexpr auto bBlend = 0x80; // char : 1
	}

	namespace n_USteamNetConnection {
		constexpr auto bIsPassthrough = 0x1b90; // bool
	}

	namespace n_UUI_Teleport3D {
		constexpr auto EnterServerConfirmationDialogClass = 0x2d8; // UUI_GenericConfirmationDialog*
		constexpr auto HelpSlotClass = 0x2e0; // UHelpTipsSlot*
		constexpr auto HelpTips = 0x2e8; // FHelpTips
		constexpr auto HelpTipsSlotPadding = 0x300; // FVector4
		constexpr auto GlobalMapCameraTemplate = 0x310; // AGlobalMapCameraActor*
		constexpr auto XianChengLenovoQueryBoxName = 0x318; // FName
		constexpr auto CloseButtonName = 0x320; // FName
		constexpr auto ShowCrossButtonName = 0x328; // FName
		constexpr auto ShowBattleButtonName = 0x330; // FName
		constexpr auto ShowInventoryButtonName = 0x338; // FName
		constexpr auto UGPGlobalMapFilter = 0x340; // UUniformGridPanel*
		constexpr auto JunDetail = 0x348; // UJunDetailWidget*
		constexpr auto BtnRefresh = 0x350; // UButton*
		constexpr auto HbHelpTips = 0x358; // UHorizontalBox*
		constexpr auto CameraActiveArea = 0x360; // UGlobalMapCameraActiveArea*
		constexpr auto JunSelector = 0x368; // UJunSelectorWidget*
		constexpr auto SelectJunActor = 0x370; // AGlobalMapActor*
		constexpr auto SelectServerInfoIndex = 0x378; // int32_t
		constexpr auto LastRefreshTime = 0x380; // FDateTime
		constexpr auto MousePosition = 0x388; // FVector2D
		constexpr auto SGPlayerController = 0x390; // ASGPlayerController*
		constexpr auto SGPlayerCharacter = 0x398; // ASGPlayerCharacter*
		constexpr auto SGGameState = 0x3a0; // ASGGameState*
		constexpr auto XianChengLenovoQueryBox = 0x3a8; // ULenovoQueryBox*
		constexpr auto BtnClose = 0x3b0; // UButton*
		constexpr auto BtnShowCross = 0x3b8; // UButton*
		constexpr auto BtnShowBattle = 0x3c0; // UButton*
		constexpr auto BtnShowInventory = 0x3c8; // UButton*
		constexpr auto TeleportQueueCanvas = 0x3d0; // UCanvasPanel*
		constexpr auto TbTeleportQueue = 0x3d8; // UTextBlock*
		constexpr auto bInTeleportQueue = 0x3e0; // char : 1
		constexpr auto XianChengOptions = 0x3e8; // TArray<FTeleportXianChengOption>
		constexpr auto CurrentToolTipGlobalMapActor = 0x3f8; // AGlobalMapActor*
		constexpr auto CurrentGlobalMapGroupToolTips = 0x400; // TMap<int32_t, FGlobalMapActorTipsDataArray>
		constexpr auto CurrentGlobalMapGroupStableToolTips = 0x450; // TMap<int32_t, FGlobalMapActorTipsDataArray>
	}

	namespace n_UUI_TransportMachineHorse {
		constexpr auto TransportHorseItemTemplate = 0x2f8; // UUI_TransportHorseItem*
		constexpr auto ScrollLevelList = 0x308; // UScrollBox*
		constexpr auto ScrollDBList = 0x310; // UScrollBox*
		constexpr auto BtnTotalAdd = 0x338; // UButton*
		constexpr auto BtbTotalRemove = 0x340; // UButton*
		constexpr auto BtnSelectedAdd = 0x348; // UButton*
		constexpr auto BtbSelectedRemove = 0x350; // UButton*
		constexpr auto TbChunkNum = 0x358; // UTextBlock*
	}

	namespace n_UAchievementConditionBoolWidget {
		constexpr auto ProgressCanvas = 0x288; // UCanvasPanel*
		constexpr auto PbProgress = 0x290; // UProgressBar*
		constexpr auto TbProgress = 0x298; // UTextBlock*
		constexpr auto TbTotalProgress = 0x2a0; // UTextBlock*
	}

	namespace n_UFloatingPawnMovement {
		constexpr auto MaxSpeed = 0x148; // float
		constexpr auto Acceleration = 0x14c; // float
		constexpr auto Deceleration = 0x150; // float
		constexpr auto TurningBoost = 0x154; // float
		constexpr auto bPositionCorrected = 0x158; // char : 1
	}

	namespace n_UDebugCameraControllerSettings {
		constexpr auto CycleViewModes = 0x38; // TArray<FDebugCameraControllerSettingsViewModeIndex>
	}

	namespace n_ANatureWeatherAreaVolume {
		constexpr auto Component = 0x348; // UWeatherControlComponent*
	}

	namespace n_UDisplaceMeshTool {
		constexpr auto CommonProperties = 0x88; // UDisplaceMeshCommonProperties*
		constexpr auto DirectionalFilterProperties = 0x90; // UDisplaceMeshDirectionalFilterProperties*
		constexpr auto TextureMapProperties = 0x98; // UDisplaceMeshTextureMapProperties*
		constexpr auto NoiseProperties = 0xa0; // UDisplaceMeshPerlinNoiseProperties*
		constexpr auto SineWaveProperties = 0xa8; // UDisplaceMeshSineWaveProperties*
	}

	namespace n_UGuildItemSlot {
		constexpr auto ItemImage = 0x2d8; // UImage*
		constexpr auto StateImage = 0x2e0; // UImage*
		constexpr auto StateTexture = 0x2e8; // TSoftObjectPtr<UTexture2D> [0x4]
	}

	namespace n_UGameUserSettings {
		constexpr auto bUseVSync = 0x28; // bool
		constexpr auto bUseDynamicResolution = 0x29; // bool
		constexpr auto ResolutionSizeX = 0x80; // uint32_t
		constexpr auto ResolutionSizeY = 0x84; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeX = 0x88; // uint32_t
		constexpr auto LastUserConfirmedResolutionSizeY = 0x8c; // uint32_t
		constexpr auto WindowPosX = 0x90; // int32_t
		constexpr auto WindowPosY = 0x94; // int32_t
		constexpr auto FullscreenMode = 0x98; // int32_t
		constexpr auto LastConfirmedFullscreenMode = 0x9c; // int32_t
		constexpr auto PreferredFullscreenMode = 0xa0; // int32_t
		constexpr auto Version = 0xa4; // uint32_t
		constexpr auto AudioQualityLevel = 0xa8; // int32_t
		constexpr auto LastConfirmedAudioQualityLevel = 0xac; // int32_t
		constexpr auto FrameRateLimit = 0xb0; // float
		constexpr auto DesiredScreenWidth = 0xb8; // int32_t
		constexpr auto bUseDesiredScreenHeight = 0xbc; // bool
		constexpr auto DesiredScreenHeight = 0xc0; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenWidth = 0xc4; // int32_t
		constexpr auto LastUserConfirmedDesiredScreenHeight = 0xc8; // int32_t
		constexpr auto LastRecommendedScreenWidth = 0xcc; // float
		constexpr auto LastRecommendedScreenHeight = 0xd0; // float
		constexpr auto LastCPUBenchmarkResult = 0xd4; // float
		constexpr auto LastGPUBenchmarkResult = 0xd8; // float
		constexpr auto LastCPUBenchmarkSteps = 0xe0; // TArray<float>
		constexpr auto LastGPUBenchmarkSteps = 0xf0; // TArray<float>
		constexpr auto LastGPUBenchmarkMultiplier = 0x100; // float
		constexpr auto bUseHDRDisplayOutput = 0x104; // bool
		constexpr auto HDRDisplayOutputNits = 0x108; // int32_t
		constexpr auto OnGameUserSettingsUINeedsUpdate = 0x110; // FMulticastInlineDelegate
	}

	namespace n_UCameraModifier_CameraShake {
		constexpr auto ActiveShakes = 0x48; // TArray<FActiveCameraShakeInfo>
		constexpr auto ExpiredPooledShakesMap = 0x58; // TMap<UCameraShakeBase*, FPooledCameraShakes>
		constexpr auto SplitScreenShakeScale = 0xa8; // float
	}

	namespace n_USmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_UMsgRow {
		constexpr auto HDTextBlock = 0x260; // UHorizonDialogueMsgTextBlock*
		constexpr auto BattleChannelNameColor = 0x268; // FSlateColor
	}

	namespace n_ASGNiagaraDroppedActor {
		constexpr auto LifeTimeDropped = 0x418; // float
		constexpr auto DroppedTimeTick = 0x420; // int64_t
		constexpr auto DroppedLifeTimer = 0x428; // FTimerHandle
		constexpr auto InteractiveString = 0x430; // FString
	}

	namespace n_UMaterialExpressionNormalize {
		constexpr auto VectorInput = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneEasingExternalCurve {
		constexpr auto Curve = 0x30; // UCurveFloat*
	}

	namespace n_UN_StructureOccupyPanel {
		constexpr auto RemoteActor = 0x260; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x268; // USGUI*
		constexpr auto StructureOccupyTaxPanel = 0x270; // UUI_StructureOccupyTaxPanel*
		constexpr auto StructureOccupyBlessPanel = 0x278; // UUI_StructureOccupyBlessPanel*
		constexpr auto StructureOccupyShelterPanel = 0x280; // UUI_StructureOccupyShelterPanel*
		constexpr auto StructureOccupyBuffPanel = 0x288; // UUI_StructureOccupyBuffPanel*
		constexpr auto StructureOccupyExpansionPanel = 0x290; // UUI_StructureOccupyExpansionPanel*
		constexpr auto StructureOccupyGuildEventPanel = 0x298; // UUI_OccupyGuildEventPanel*
		constexpr auto TaxButton = 0x2a0; // UOptionButton*
		constexpr auto BlessingButton = 0x2a8; // UOptionButton*
		constexpr auto ShelterButton = 0x2b0; // UOptionButton*
		constexpr auto ExpansionButton = 0x2b8; // UOptionButton*
		constexpr auto BuffButton = 0x2c0; // UOptionButton*
		constexpr auto GuildEventButton = 0x2c8; // UOptionButton*
	}

	namespace n_URiverGenerator {
		constexpr auto SplineMeshComponents = 0x28; // TArray<USplineMeshComponent*>
	}

	namespace n_UWBP_FrameLimitSettingEditableTextblockItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto EtbSetting = 0x370; // UEditableText*
		constexpr auto ImgSettingBg = 0x378; // UImage*
		constexpr auto TbTitle = 0x380; // UTextBlock*
		constexpr auto Title = 0x388; // FText
		constexpr auto LastEditText = 0x3a0; // FText
	}

	namespace n_UGizmoArrowComponent {
		constexpr auto Direction = 0x4a8; // FVector
		constexpr auto Gap = 0x4b4; // float
		constexpr auto Length = 0x4b8; // float
		constexpr auto Thickness = 0x4bc; // float
	}

	namespace n_UMovieSceneMediaSection {
		constexpr auto MediaSource = 0xe8; // UMediaSource*
		constexpr auto bLooping = 0xf0; // bool
		constexpr auto StartFrameOffset = 0xf4; // FFrameNumber
		constexpr auto MediaTexture = 0xf8; // UMediaTexture*
		constexpr auto MediaSoundComponent = 0x100; // UMediaSoundComponent*
		constexpr auto bUseExternalMediaPlayer = 0x108; // bool
		constexpr auto ExternalMediaPlayer = 0x110; // UMediaPlayer*
	}

	namespace n_USubmixEffectTapDelayPreset {
		constexpr auto Settings = 0xa8; // FSubmixEffectTapDelaySettings
	}

	namespace n_UUI_SGGameRecord {
		constexpr auto GameRecordDataRowTemplate = 0x2d8; // UGameRecordDataRow*
		constexpr auto AddGameRecordDataBtn = 0x2e0; // UButton*
		constexpr auto DeleteGameRecordDataBtn = 0x2e8; // UButton*
		constexpr auto DeleteCurveDataBtn = 0x2f0; // UButton*
		constexpr auto LoopPlayCB = 0x2f8; // UCheckBox*
		constexpr auto PlayFromZeroTimeBtn = 0x300; // UButton*
		constexpr auto SetPrevFrameBtn = 0x308; // UButton*
		constexpr auto SetNextFrameBtn = 0x310; // UButton*
		constexpr auto ShowInExplorerBtn = 0x318; // UButton*
		constexpr auto PlayFromCurTimeBtn = 0x320; // UButton*
		constexpr auto StopBtn = 0x328; // UButton*
		constexpr auto GameRecordDataList = 0x330; // UScrollBox*
		constexpr auto GameRecordCurveList = 0x338; // UScrollBox*
		constexpr auto GameRecordTrack = 0x340; // UGameRecordTrack*
		constexpr auto FitHorzBtn = 0x348; // UButton*
		constexpr auto FitVertBtn = 0x350; // UButton*
		constexpr auto CurveKeyValuePanel = 0x358; // UCanvasPanel*
		constexpr auto TimeSpinBox = 0x360; // USpinBox*
		constexpr auto ValueSpinBox = 0x368; // USpinBox*
		constexpr auto MinimizeBtn = 0x370; // UButton*
		constexpr auto CloseBtn = 0x378; // UButton*
		constexpr auto SaveDataBtn = 0x380; // UButton*
		constexpr auto ShowFocusPlaneCB = 0x388; // UCheckBox*
		constexpr auto SavedDataFilename = 0x390; // UTextBlock*
		constexpr auto TipText = 0x398; // UTextBlock*
	}

	namespace n_AUIWSRiver {
		constexpr auto SplineComp = 0x6c0; // USplineComponent*
		constexpr auto AllowCameraUnder = 0x6c8; // bool
	}

	namespace n_ALevelVariantSetsActor {
		constexpr auto LevelVariantSets = 0x310; // FSoftObjectPath
	}

	namespace n_UParticleModuleAccelerationBase {
		constexpr auto bAlwaysInWorldSpace = 0x30; // char : 1
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollectionReader {
		constexpr auto EmitterName = 0xf8; // FString
		constexpr auto DIName = 0x108; // FString
	}

	namespace n_UMovieSceneNiagaraTrack {
		constexpr auto Sections = 0x78; // TArray<UMovieSceneSection*>
	}

	namespace n_UWBP_ModEntryTemplate_C {
		constexpr auto UberGraphFrame = 0x270; // FPointerToUberGraphFrame
		constexpr auto Image_50 = 0x278; // UImage*
	}

	namespace n_URandomVector {
		constexpr auto Magnitude = 0xc0; // float
	}

	namespace n_UMaterialExpressionSceneColor {
		constexpr auto InputMode = 0x40; // EMaterialSceneAttributeInputMode
		constexpr auto Input = 0x44; // FExpressionInput
		constexpr auto OffsetFraction = 0x58; // FExpressionInput
		constexpr auto ConstInput = 0x6c; // FVector2D
	}

	namespace n_UParticleModuleSize {
		constexpr auto StartSize = 0x30; // FRawDistributionVector
	}

	namespace n_UAttributePanel {
		constexpr auto bHasInit = 0x260; // char : 1
		constexpr auto bIsGeneral = 0x260; // char : 1
		constexpr auto BindCharacter = 0x264; // TWeakObjectPtr<ASGCharacter>
		constexpr auto WoundProgressBars = 0x270; // TArray<UProgressBar*>
		constexpr auto WoundProgressTexts = 0x280; // TArray<UTextBlock*>
		constexpr auto WoundNoBuffDescription = 0x290; // TArray<FText>
		constexpr auto LevelText = 0x2a0; // UTextBlock*
		constexpr auto EXPText = 0x2a8; // UTextBlock*
		constexpr auto GuildActivityText = 0x2b0; // UTextBlock*
		constexpr auto EXPProgressBar = 0x2b8; // UProgressBar*
		constexpr auto AttributeSlotNames = 0x2c0; // TArray<FName>
		constexpr auto GeneralLevelUpPanel = 0x2d0; // UCanvasPanel*
		constexpr auto GeneralLevelUpButton = 0x2d8; // UButton*
		constexpr auto GameCharacterBuffPanel = 0x2e0; // UGameCharacterBuffPanel*
		constexpr auto AttributeSlotList = 0x2e8; // TArray<UAttributeSlot*>
	}

	namespace n_UBTTask_DoFollow {
		constexpr auto OverrideBrakingDistance = 0xd0; // float
	}

	namespace n_UGuildStoreHorseItem {
		constexpr auto ButtonCheckedStyle = 0x260; // FButtonStyle
		constexpr auto ButtonUnCheckedStyle = 0x4d8; // FButtonStyle
		constexpr auto BtSelected = 0x750; // UButton*
		constexpr auto TbNameName = 0x758; // UTextBlock*
		constexpr auto TbLevel = 0x760; // UTextBlock*
		constexpr auto TbStatue = 0x768; // UTextBlock*
	}

	namespace n_UMarkPOITips {
		constexpr auto TbMarkName = 0x288; // UTextBlock*
	}

	namespace n_UUniformInteger {
		constexpr auto Magnitude = 0xc0; // int32_t
	}

	namespace n_UWBP_MainMenu_AgeTips_C { // : UUserWidget
		constexpr auto UberGraphFrame = 0x260; // FPointerToUberGraphFrame
		constexpr auto Button_Close = 0x268; // UButton*
		constexpr auto Image_1 = 0x270; // UImage*
		constexpr auto Image_2 = 0x278; // UImage*
		constexpr auto Image_3 = 0x280; // UImage*
		constexpr auto Image_4 = 0x288; // UImage*
		constexpr auto RichTextBlock_AgeTips = 0x290; // URichTextBlock*
		constexpr auto RichTextBlock_AgeTips_2 = 0x298; // URichTextBlock*
	}

	namespace n_USubmixEffectDynamicsProcessorPreset {
		constexpr auto Settings = 0xe0; // FSubmixEffectDynamicsProcessorSettings
	}

	namespace n_UMaterialExpressionStaticSwitch {
		constexpr auto DefaultValue = 0x40; // char : 1
		constexpr auto A = 0x44; // FExpressionInput
		constexpr auto B = 0x58; // FExpressionInput
		constexpr auto Value = 0x6c; // FExpressionInput
	}

	namespace n_UPrefabVariantAsset {
		constexpr auto Parent = 0xd0; // UPrefabAsset*
	}

	namespace n_UUI_Altar {
		constexpr auto BindAltar = 0x2d8; // TWeakObjectPtr<ASGStructureAltar>
		constexpr auto DeadlyGeneralVertical = 0x2e0; // UVerticalBox*
		constexpr auto RestGeneralVertical = 0x2e8; // UVerticalBox*
		constexpr auto AddFoodButton = 0x2f0; // UButton*
		constexpr auto AddLifeCountButton = 0x2f8; // UButton*
		constexpr auto ReleaseGeneralButton = 0x300; // UButton*
		constexpr auto RebornGeneralButton = 0x308; // UButton*
		constexpr auto LeftFoodAmount = 0x310; // UTextBlock*
		constexpr auto CloseButton = 0x318; // UButton*
		constexpr auto AltarGeneralSlotTemplate = 0x320; // UAltarGeneralSlot*
		constexpr auto GeneralSlotList = 0x328; // TArray<UAltarGeneralSlot*>
		constexpr auto SelectedGeneralGuid = 0x340; // FGuid
		constexpr auto ReduceRebornGeneralGuid = 0x350; // FGuid
		constexpr auto OtherUsingText = 0x360; // UTextBlock*
		constexpr auto BindInventory = 0x368; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto FinalRebornTime = 0x370; // FDateTime
	}

	namespace n_ASGStructureItemContainer {
		constexpr auto bCanActivate = 0xb98; // char : 1
		constexpr auto bAutoActivateWhenFuel = 0xb98; // char : 1
		constexpr auto ActivateRequireData = 0xba0; // TArray<FActivateRequireData>
		constexpr auto ContainerActivateString = 0xbb0; // FText
		constexpr auto ContainerDeactivateString = 0xbc8; // FText
		constexpr auto MaxActiveTemperature = 0xbe0; // int32_t
		constexpr auto CurrentActiveTemperature = 0xbe4; // int32_t
		constexpr auto bOnlyUseExpireTimeMultipliersIfActivated = 0xbe8; // char : 1
		constexpr auto InventoryComponent = 0xbf0; // USGInventoryComponent*
		constexpr auto OnItemContainerToggleActivate = 0xbf8; // FMulticastInlineDelegate
		constexpr auto LifeTime = 0xc08; // float
		constexpr auto bIsDropItem = 0xc0c; // char : 1
		constexpr auto bIsDeathDropItem = 0xc0c; // char : 1
		constexpr auto bIsCommonDropItem = 0xc0c; // char : 1
		constexpr auto DropItemTimer = 0xc10; // FTimerHandle
		constexpr auto DestructionTimer = 0xc18; // FTimerHandle
		constexpr auto bIsCharacterDeathItem = 0xc20; // char : 1
		constexpr auto DeathCharacterGuid = 0xc24; // FGuid
		constexpr auto DropItemContainerMergeRange = 0xc34; // FVector
		constexpr auto CharacterDeathItemBrokenLifeSpan = 0xc40; // float
		constexpr auto bCharacterDeathItemIsBroken = 0xc44; // char : 1
		constexpr auto DropItemCurrentLocation = 0xc48; // FVector
		constexpr auto DropActorUpVectorOffset = 0xc54; // FVector
		constexpr auto bWillDestroy = 0xc60; // char : 1
		constexpr auto bEmptyDestroy = 0xc60; // char : 1
		constexpr auto bIsActivated = 0xc64; // char : 1
		constexpr auto ActiveTimerHandle = 0xc68; // FTimerHandle
		constexpr auto NextConsumeFuelGiveItem = 0xc70; // USGItem*
		constexpr auto LastRefreshFuelStateTime = 0xc78; // double
		constexpr auto ContainerName = 0xc80; // FString
		constexpr auto bCanChangeName = 0xc90; // char : 1
		constexpr auto bSpawnInventoryOnDestruction = 0xc90; // char : 1
		constexpr auto SpawnInventoryOffsetLoc = 0xc94; // FVector
		constexpr auto SpawnInventoryOnDestructionLifeSpan = 0xca0; // float
		constexpr auto SavedNetOnDestructionTime = 0xca4; // float
		constexpr auto NetOnDestructionTimeTick = 0xca8; // int64_t
		constexpr auto ActivatedSoundID = 0xcb0; // FName
		constexpr auto DeActivatedSoundID = 0xcb8; // FName
		constexpr auto WorkingSoundID = 0xcc0; // FName
		constexpr auto bSupportWater = 0xcc8; // char : 1
		constexpr auto bShowLogs = 0xcc8; // char : 1
		constexpr auto LogMaxNum = 0xccc; // int32_t
		constexpr auto StructureItemLogs = 0xcd0; // TArray<FItemOptionLogInfo>
		constexpr auto CurrentPassword = 0xce0; // uint32_t
		constexpr auto bLockedByPassword = 0xce4; // char : 1
		constexpr auto bXianChengMasterOperate = 0xcf0; // char : 1
		constexpr auto bRemoveInventoryComponent = 0xcf0; // char : 1
		constexpr auto LastFuelItem = 0xcf8; // USGItem*
		constexpr auto OverridePreviewWidgetDistance = 0xd00; // float
		constexpr auto OverridePreviewWidgetMeshLocationOffset = 0xd04; // FVector
		constexpr auto OverridePreviewWidgetMeshRotation = 0xd10; // FRotator
		constexpr auto OverridePreviewWidgetCameraRotation = 0xd1c; // FRotator
		constexpr auto OverridePreviewWidgetDefaultAnim = 0xd28; // UAnimMontage*
		constexpr auto OverridePreviewScale = 0xd30; // float
		constexpr auto AgainstEnvironmentComponent = 0xd38; // UShapeComponent*
		constexpr auto bIsAgainstEnvironmentStructure = 0xd40; // char : 1
		constexpr auto bIsMoveableAgainstEnvironmentStructure = 0xd40; // char : 1
		constexpr auto MoveableUpdateBoxHandle = 0xd48; // FTimerHandle
		constexpr auto MoveableUpdateBoxDelta = 0xd50; // float
		constexpr auto AgainstEVType = 0xd54; // EEnvironmentVolumeType
		constexpr auto bDebug = 0xd55; // char : 1
		constexpr auto bShowCustomFlag = 0xd55; // char : 1
		constexpr auto TraceGroundHeight = 0xd58; // float
		constexpr auto bPVEInOccupyOnlyInteractiveInventorySameTeam = 0xd5c; // char : 1
		constexpr auto WorkingAudioComponent = 0xd60; // USGAudioComponent*
	}

	namespace n_UGeometryCacheTrack {
		constexpr auto Duration = 0x28; // float
	}

	namespace n_UParticleModuleSpawnPerUnit {
		constexpr auto UnitScalar = 0x38; // float
		constexpr auto MovementTolerance = 0x3c; // float
		constexpr auto SpawnPerUnit = 0x40; // FRawDistributionFloat
		constexpr auto MaxFrameDistance = 0x70; // float
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongX = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongY = 0x74; // char : 1
		constexpr auto bIgnoreMovementAlongZ = 0x74; // char : 1
	}

	namespace n_UTexture {
		constexpr auto LightingGuid = 0x68; // FGuid
		constexpr auto LODBias = 0x78; // int32_t
		constexpr auto CompressionSettings = 0x7c; // TextureCompressionSettings
		constexpr auto Filter = 0x7d; // TextureFilter
		constexpr auto MipLoadOptions = 0x7e; // ETextureMipLoadOptions
		constexpr auto LODGroup = 0x7f; // TextureGroup
		constexpr auto Downscale = 0x80; // FPerPlatformFloat
		constexpr auto DownscaleOptions = 0x84; // ETextureDownscaleOptions
		constexpr auto SRGB = 0x85; // char : 1
		constexpr auto bNoTiling = 0x85; // char : 1
		constexpr auto VirtualTextureStreaming = 0x85; // char : 1
		constexpr auto CompressionYCoCg = 0x85; // char : 1
		constexpr auto bNotOfflineProcessed = 0x85; // char : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x85; // char : 1
		constexpr auto AssetUserData = 0x88; // TArray<UAssetUserData*>
	}

	namespace n_UCapsuleComponent {
		constexpr auto CapsuleHalfHeight = 0x4a0; // float
		constexpr auto CapsuleRadius = 0x4a4; // float
	}

	namespace n_USGViewportClient {
		constexpr auto bDevelopment = 0x360; // char : 1
		constexpr auto UIInputMode = 0x361; // EUIInputMode
		constexpr auto FocusWidget = 0x364; // TWeakObjectPtr<UWidget>
	}

	namespace n_ASG_HemlockCharacter {
		constexpr auto TriggerBoxDamageImpulse = 0x2678; // float
		constexpr auto TriggerBoxDamageAmount = 0x267c; // float
		constexpr auto TriggerBoxDamageTypeClass = 0x2680; // USGDamageType*
		constexpr auto TriggerBoxDamageType = 0x2688; // EDamageType
		constexpr auto bAutoSplineRouteMoveStarted = 0x2689; // char : 1
		constexpr auto DestroyedMesh = 0x2690; // FSoftObjectPath
		constexpr auto DestroyedMeshActorClass = 0x26a8; // ASGDestructibleActor*
		constexpr auto DeadSoundID = 0x26b0; // FName
		constexpr auto MoveMontage = 0x26b8; // UAnimMontage*
	}

	namespace n_UStableRebornPanel {
		constexpr auto StableRebornSlotTemplate = 0x260; // UStableRebornSlot*
		constexpr auto EmptySlotTemplate = 0x268; // UUserWidget*
		constexpr auto PageMaxNum = 0x270; // int32_t
		constexpr auto SlotVerticalBox = 0x278; // UVerticalBox*
		constexpr auto LastPageBtn = 0x280; // UButton*
		constexpr auto CurPageText = 0x288; // UTextBlock*
		constexpr auto MaxPageText = 0x290; // UTextBlock*
		constexpr auto NextPageBtn = 0x298; // UButton*
		constexpr auto ReleaseBtn = 0x2a0; // UButton*
		constexpr auto RebornBtn = 0x2a8; // UButton*
		constexpr auto AddLifeBtn = 0x2b0; // UButton*
	}

	namespace n_UWBP_ProducerName_3_C {
		constexpr auto WBP_ProducerSlot = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_3 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_5 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_6 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_7 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_8 = 0x298; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_9 = 0x2a0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_10 = 0x2a8; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_11 = 0x2b0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSplitLine = 0x2b8; // UWBP_ProducerSplitLine_C*
	}

	namespace n_UCharacterMovementComponent {
		constexpr auto CharacterOwner = 0x158; // ACharacter*
		constexpr auto GravityScale = 0x160; // float
		constexpr auto MaxStepHeight = 0x164; // float
		constexpr auto JumpZVelocity = 0x168; // float
		constexpr auto JumpOffJumpZFactor = 0x16c; // float
		constexpr auto WalkableFloorAngle = 0x170; // float
		constexpr auto WalkableFloorZ = 0x174; // float
		constexpr auto MovementMode = 0x178; // EMovementMode
		constexpr auto CustomMovementMode = 0x179; // char
		constexpr auto NetworkSmoothingMode = 0x17a; // ENetworkSmoothingMode
		constexpr auto GroundFriction = 0x17c; // float
		constexpr auto MaxWalkSpeed = 0x19c; // float
		constexpr auto MaxWalkSpeedCrouched = 0x1a0; // float
		constexpr auto MaxSwimSpeed = 0x1a4; // float
		constexpr auto MaxFlySpeed = 0x1a8; // float
		constexpr auto MaxCustomMovementSpeed = 0x1ac; // float
		constexpr auto MaxAcceleration = 0x1b0; // float
		constexpr auto MinAnalogWalkSpeed = 0x1b4; // float
		constexpr auto BrakingFrictionFactor = 0x1b8; // float
		constexpr auto BrakingFriction = 0x1bc; // float
		constexpr auto BrakingSubStepTime = 0x1c0; // float
		constexpr auto BrakingDecelerationWalking = 0x1c4; // float
		constexpr auto BrakingDecelerationFalling = 0x1c8; // float
		constexpr auto BrakingDecelerationSwimming = 0x1cc; // float
		constexpr auto BrakingDecelerationFlying = 0x1d0; // float
		constexpr auto AirControl = 0x1d4; // float
		constexpr auto AirControlBoostMultiplier = 0x1d8; // float
		constexpr auto AirControlBoostVelocityThreshold = 0x1dc; // float
		constexpr auto FallingLateralFriction = 0x1e0; // float
		constexpr auto CrouchedHalfHeight = 0x1e4; // float
		constexpr auto Buoyancy = 0x1e8; // float
		constexpr auto PerchRadiusThreshold = 0x1ec; // float
		constexpr auto PerchAdditionalHeight = 0x1f0; // float
		constexpr auto RotationRate = 0x1f4; // FRotator
		constexpr auto bUseSeparateBrakingFriction = 0x200; // char : 1
		constexpr auto bApplyGravityWhileJumping = 0x200; // char : 1
		constexpr auto bUseControllerDesiredRotation = 0x200; // char : 1
		constexpr auto bOrientRotationToMovement = 0x200; // char : 1
		constexpr auto bSweepWhileNavWalking = 0x200; // char : 1
		constexpr auto bMovementInProgress = 0x200; // char : 1
		constexpr auto bEnableScopedMovementUpdates = 0x200; // char : 1
		constexpr auto bEnableServerDualMoveScopedMovementUpdates = 0x201; // char : 1
		constexpr auto bForceMaxAccel = 0x201; // char : 1
		constexpr auto bRunPhysicsWithNoController = 0x201; // char : 1
		constexpr auto bForceNextFloorCheck = 0x201; // char : 1
		constexpr auto bShrinkProxyCapsule = 0x201; // char : 1
		constexpr auto bCanWalkOffLedges = 0x201; // char : 1
		constexpr auto bCanWalkOffLedgesWhenCrouching = 0x201; // char : 1
		constexpr auto bNetworkSkipProxyPredictionOnNetUpdate = 0x202; // char : 1
		constexpr auto bNetworkAlwaysReplicateTransformUpdateTimestamp = 0x202; // char : 1
		constexpr auto bDeferUpdateMoveComponent = 0x202; // char : 1
		constexpr auto bEnablePhysicsInteraction = 0x202; // char : 1
		constexpr auto bTouchForceScaledToMass = 0x202; // char : 1
		constexpr auto bPushForceScaledToMass = 0x202; // char : 1
		constexpr auto bPushForceUsingZOffset = 0x202; // char : 1
		constexpr auto bScalePushForceToVelocity = 0x203; // char : 1
		constexpr auto DeferredUpdatedMoveComponent = 0x208; // USceneComponent*
		constexpr auto MaxOutOfWaterStepHeight = 0x210; // float
		constexpr auto OutofWaterZ = 0x214; // float
		constexpr auto Mass = 0x218; // float
		constexpr auto StandingDownwardForceScale = 0x21c; // float
		constexpr auto InitialPushForceFactor = 0x220; // float
		constexpr auto PushForceFactor = 0x224; // float
		constexpr auto PushForcePointZOffsetFactor = 0x228; // float
		constexpr auto TouchForceFactor = 0x22c; // float
		constexpr auto MinTouchForce = 0x230; // float
		constexpr auto MaxTouchForce = 0x234; // float
		constexpr auto RepulsionForce = 0x238; // float
		constexpr auto Acceleration = 0x23c; // FVector
		constexpr auto LastUpdateRotation = 0x250; // FQuat
		constexpr auto LastUpdateLocation = 0x260; // FVector
		constexpr auto LastUpdateVelocity = 0x26c; // FVector
		constexpr auto ServerLastTransformUpdateTimeStamp = 0x278; // double
		constexpr auto ServerLastClientGoodMoveAckTime = 0x280; // double
		constexpr auto ServerLastClientAdjustmentTime = 0x288; // float
		constexpr auto PendingImpulseToApply = 0x28c; // FVector
		constexpr auto PendingForceToApply = 0x298; // FVector
		constexpr auto AnalogInputModifier = 0x2a4; // float
		constexpr auto MaxSimulationTimeStep = 0x2b8; // float
		constexpr auto MaxSimulationIterations = 0x2bc; // int32_t
		constexpr auto MaxJumpApexAttemptsPerSimulation = 0x2c0; // int32_t
		constexpr auto MaxDepenetrationWithGeometry = 0x2c4; // float
		constexpr auto MaxDepenetrationWithGeometryAsProxy = 0x2c8; // float
		constexpr auto MaxDepenetrationWithPawn = 0x2cc; // float
		constexpr auto MaxDepenetrationWithPawnAsProxy = 0x2d0; // float
		constexpr auto NetworkSimulatedSmoothLocationTime = 0x2d4; // float
		constexpr auto NetworkSimulatedSmoothRotationTime = 0x2d8; // float
		constexpr auto ListenServerNetworkSimulatedSmoothLocationTime = 0x2dc; // float
		constexpr auto ListenServerNetworkSimulatedSmoothRotationTime = 0x2e0; // float
		constexpr auto NetProxyShrinkRadius = 0x2e4; // float
		constexpr auto NetProxyShrinkHalfHeight = 0x2e8; // float
		constexpr auto NetworkMaxSmoothUpdateDistance = 0x2ec; // float
		constexpr auto NetworkNoSmoothUpdateDistance = 0x2f0; // float
		constexpr auto NetworkMinTimeBetweenClientAckGoodMoves = 0x2f4; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustments = 0x2f8; // float
		constexpr auto NetworkMinTimeBetweenClientAdjustmentsLargeCorrection = 0x2fc; // float
		constexpr auto NetworkLargeClientCorrectionDistance = 0x300; // float
		constexpr auto LedgeCheckThreshold = 0x304; // float
		constexpr auto JumpOutOfWaterPitch = 0x308; // float
		constexpr auto CurrentFloor = 0x30c; // FFindFloorResult
		constexpr auto DefaultLandMovementMode = 0x3a4; // EMovementMode
		constexpr auto DefaultWaterMovementMode = 0x3a5; // EMovementMode
		constexpr auto GroundMovementMode = 0x3a6; // EMovementMode
		constexpr auto bMaintainHorizontalGroundVelocity = 0x3a7; // char : 1
		constexpr auto bImpartBaseVelocityX = 0x3a7; // char : 1
		constexpr auto bImpartBaseVelocityY = 0x3a7; // char : 1
		constexpr auto bImpartBaseVelocityZ = 0x3a7; // char : 1
		constexpr auto bImpartBaseAngularVelocity = 0x3a7; // char : 1
		constexpr auto bJustTeleported = 0x3a7; // char : 1
		constexpr auto bNetworkUpdateReceived = 0x3a7; // char : 1
		constexpr auto bNetworkMovementModeChanged = 0x3a7; // char : 1
		constexpr auto bIgnoreClientMovementErrorChecksAndCorrection = 0x3a8; // char : 1
		constexpr auto bServerAcceptClientAuthoritativePosition = 0x3a8; // char : 1
		constexpr auto bNotifyApex = 0x3a8; // char : 1
		constexpr auto bCheatFlying = 0x3a8; // char : 1
		constexpr auto bWantsToCrouch = 0x3a8; // char : 1
		constexpr auto bCrouchMaintainsBaseLocation = 0x3a8; // char : 1
		constexpr auto bIgnoreBaseRotation = 0x3a8; // char : 1
		constexpr auto bFastAttachedMove = 0x3a8; // char : 1
		constexpr auto bAlwaysCheckFloor = 0x3a9; // char : 1
		constexpr auto bUseFlatBaseForFloorChecks = 0x3a9; // char : 1
		constexpr auto bPerformingJumpOff = 0x3a9; // char : 1
		constexpr auto bWantsToLeaveNavWalking = 0x3a9; // char : 1
		constexpr auto bUseRVOAvoidance = 0x3a9; // char : 1
		constexpr auto bRequestedMoveUseAcceleration = 0x3a9; // char : 1
		constexpr auto bWasSimulatingRootMotion = 0x3a9; // char : 1
		constexpr auto bAllowPhysicsRotationDuringAnimRootMotion = 0x3aa; // char : 1
		constexpr auto bHasRequestedVelocity = 0x3aa; // char : 1
		constexpr auto bRequestedMoveWithMaxSpeed = 0x3aa; // char : 1
		constexpr auto bWasAvoidanceUpdated = 0x3aa; // char : 1
		constexpr auto bProjectNavMeshWalking = 0x3aa; // char : 1
		constexpr auto bProjectNavMeshOnBothWorldChannels = 0x3aa; // char : 1
		constexpr auto AvoidanceConsiderationRadius = 0x3bc; // float
		constexpr auto RequestedVelocity = 0x3c0; // FVector
		constexpr auto AvoidanceUID = 0x3cc; // int32_t
		constexpr auto AvoidanceGroup = 0x3d0; // FNavAvoidanceMask
		constexpr auto GroupsToAvoid = 0x3d4; // FNavAvoidanceMask
		constexpr auto GroupsToIgnore = 0x3d8; // FNavAvoidanceMask
		constexpr auto AvoidanceWeight = 0x3dc; // float
		constexpr auto PendingLaunchVelocity = 0x3e0; // FVector
		constexpr auto NavMeshProjectionInterval = 0x494; // float
		constexpr auto NavMeshProjectionTimer = 0x498; // float
		constexpr auto NavMeshProjectionInterpSpeed = 0x49c; // float
		constexpr auto NavMeshProjectionHeightScaleUp = 0x4a0; // float
		constexpr auto NavMeshProjectionHeightScaleDown = 0x4a4; // float
		constexpr auto NavWalkingFloorDistTolerance = 0x4a8; // float
		constexpr auto PostPhysicsTickFunction = 0x4b0; // FCharacterMovementComponentPostPhysicsTickFunction
		constexpr auto MinTimeBetweenTimeStampResets = 0x4f8; // float
		constexpr auto CurrentRootMotion = 0x9e0; // FRootMotionSourceGroup
		constexpr auto ServerCorrectionRootMotion = 0xa18; // FRootMotionSourceGroup
		constexpr auto RootMotionParams = 0xae0; // FRootMotionMovementParams
		constexpr auto AnimRootMotionVelocity = 0xb20; // FVector
	}

	namespace n_ASGStructureAnimalRest {
		constexpr auto bClearZeroLifeChunk = 0xbe8; // char : 1
		constexpr auto UsingCharGuid = 0xbec; // FGuid
		constexpr auto UsingCharName = 0xc00; // FString
		constexpr auto bCanAddLifeCount = 0xc10; // char : 1
		constexpr auto bCanReborn = 0xc10; // char : 1
		constexpr auto AllowPutInVehicleTypes = 0xc18; // TArray<EVehicleType>
	}

	namespace n_URotatingMovementComponent {
		constexpr auto RotationRate = 0x100; // FRotator
		constexpr auto PivotTranslation = 0x10c; // FVector
		constexpr auto bRotationInLocalSpace = 0x118; // char : 1
	}

	namespace n_ULevelSequenceBurnIn {
		constexpr auto FrameInformation = 0x260; // FLevelSequencePlayerSnapshot
		constexpr auto LevelSequenceActor = 0x318; // ALevelSequenceActor*
	}

	namespace n_UGenericConfirmationCheckItemSlot {
		constexpr auto ImgIcon = 0x260; // UImage*
		constexpr auto AmountText = 0x268; // UTextBlock*
		constexpr auto NeedAmount = 0x270; // int32_t
		constexpr auto BindItem = 0x274; // TWeakObjectPtr<USGItem>
		constexpr auto BindCheckInventory = 0x27c; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto SlotWidth = 0x284; // float
		constexpr auto SlotHeight = 0x288; // float
		constexpr auto SlotSizeBox = 0x290; // USizeBox*
		constexpr auto RootUI = 0x298; // USGUI*
		constexpr auto bEnough = 0x2a0; // char : 1
		constexpr auto EnoughColor = 0x2a4; // FLinearColor
		constexpr auto NotEnoughColor = 0x2b4; // FLinearColor
		constexpr auto FontSize = 0x2c4; // int32_t
	}

	namespace n_USGConditionReward {
		constexpr auto Conditions = 0x28; // TArray<URewardCondition*>
		constexpr auto Reward = 0x38; // USGReward*
	}

	namespace n_ASGGeneralCharacter {
		constexpr auto BelongPlayerCHHPAdd = 0x11100; // float
		constexpr auto BelongPlayerAddHPMul = 0x11104; // float
		constexpr auto BelongPlayerSkillAddHPMul = 0x11108; // float
		constexpr auto MaxTameSpecialMulAdd = 0x1110c; // float [0x4]
		constexpr auto MaxTameQualityMulAdd = 0x1111c; // float [0x6]
		constexpr auto WildReductionRateSlashing = 0x11134; // float
		constexpr auto WildReductionRatePiercing = 0x11138; // float
		constexpr auto WildReductionRateCrushing = 0x1113c; // float
		constexpr auto WildReductionRateSiege = 0x11140; // float
		constexpr auto WildLevel = 0x11144; // int32_t
		constexpr auto LevelLimitConfig = 0x11148; // TArray<FGeneralLevelUpConfig>
		constexpr auto bShowLevelLimitCondition = 0x11158; // char : 1
		constexpr auto bFinishLevelUpLimit = 0x11158; // char : 1
		constexpr auto NavigationInvokerComponent = 0x11160; // UNavigationInvokerComponent*
		constexpr auto CustomRoadPath = 0x11168; // ASG_RoadPath*
		constexpr auto NPCID = 0x11170; // int32_t
		constexpr auto Dec = 0x11178; // FString
		constexpr auto GeneralsCareer = 0x11188; // EGeneralsCareer
		constexpr auto GeneralsSpecialType = 0x11189; // EGeneralsSpecialType
		constexpr auto GeneralsCareerEquip = 0x11190; // TMap<EGeneralsCareer, FCareerEquip>
		constexpr auto SpawnEquipTable = 0x111e0; // UDataTable*
		constexpr auto bUseQualityWeight = 0x111e8; // char : 1
		constexpr auto QualityWeight = 0x111f0; // TArray<float>
		constexpr auto Quality = 0x11200; // EGeneralsQualityType
		constexpr auto bOverrideQuality = 0x11201; // char : 1
		constexpr auto OverrideQuality = 0x11202; // EGeneralsQualityType
		constexpr auto MinQualityRandomAbility = 0x11204; // float [0x6]
		constexpr auto MaxQualityRandomAbility = 0x1121c; // float [0x6]
		constexpr auto QualityLevelUpAddSkillPoint = 0x11234; // float [0x6]
		constexpr auto TamedFollowActor = 0x11258; // TWeakObjectPtr<ASGCharacter>
		constexpr auto OwnerCharacterName = 0x11260; // FString
		constexpr auto Enum_ForceUsePrimaryWeaponType = 0x11271; // EPrimaryWeaponType
		constexpr auto bForceCheckOffHandItem = 0x11272; // char : 1
		constexpr auto bCanEquipOffHandWep = 0x11273; // bool
		constexpr auto bRefreshItemEquip = 0x11274; // bool
		constexpr auto GeneralToolTipWidgetOverride = 0x11278; // USGToolTipsGeneral*
		constexpr auto GeneralToolTip = 0x11280; // USGToolTipsGeneral*
		constexpr auto DeathAddSkillPointRate = 0x11288; // float
		constexpr auto DeathAddSkillPoint = 0x1128c; // float
		constexpr auto DeathReduceKillerLifeCountRate = 0x11290; // float
		constexpr auto DeathReduceKillerLifeCount = 0x11294; // int32_t
		constexpr auto CanEatFood = 0x11298; // int32_t
		constexpr auto PerkEatItemMap = 0x112a0; // TMap<int32_t, FPerkEatItemArray>
		constexpr auto LevelUpGetMasteryPoints = 0x112f0; // TMap<int32_t, int32_t>
		constexpr auto PerkSkillsLibrary = 0x11340; // TArray<int32_t>
		constexpr auto MPerkSkillsLibrary = 0x11350; // TArray<int32_t>
		constexpr auto HPerkSkillsLibrary = 0x11360; // TArray<int32_t>
		constexpr auto CertainPerkSkillsLibrary = 0x11370; // TArray<int32_t>
		constexpr auto CanLearnPerks = 0x11380; // TArray<int32_t>
		constexpr auto MCanLearnPerks = 0x11390; // TArray<int32_t>
		constexpr auto HCanLearnPerks = 0x113a0; // TArray<int32_t>
		constexpr auto CanCertainLearnPerks = 0x113b0; // TArray<int32_t>
		constexpr auto RandomSkillNumWeight = 0x113c0; // TMap<int32_t, float>
		constexpr auto AngryPerkSkillsLibrary = 0x11410; // TArray<int32_t>
		constexpr auto AngryPerks = 0x11420; // TArray<int32_t>
		constexpr auto RandomAngrySkillNumWeight = 0x11430; // TMap<int32_t, float>
		constexpr auto WeakPerkSkillsLibrary = 0x11480; // TArray<int32_t>
		constexpr auto WeakPerks = 0x11490; // TArray<int32_t>
		constexpr auto RandomWeakSkillNumWeight = 0x114a0; // TMap<int32_t, float>
		constexpr auto bCanLearnSkillCheckPerk = 0x114f0; // char : 1
		constexpr auto Struct_GeneralConfig = 0x114f8; // FGeneralConfig
		constexpr auto Struct_GeneralMeleeConfig = 0x11558; // FGeneralMeleeConfig
		constexpr auto Struct_GeneralShooterConfig = 0x115d4; // FGeneralShooterConfig
		constexpr auto bNeedCheckLearnPerkLevel = 0x11618; // char : 1
		constexpr auto FavoriteFood = 0x11620; // TArray<USGItem*>
		constexpr auto PerkAddFoodItem = 0x11630; // TArray<USGItem*>
		constexpr auto FavoriteHPFood = 0x11640; // TArray<USGItem*>
		constexpr auto FavoriteEnvironmentFood = 0x11650; // TMap<EEnvironmentVolumeType, FEnvironmentEatItemArray>
		constexpr auto CheckTimes = 0x116a0; // int32_t
		constexpr auto OldAIMoveOrderType = 0x116a4; // EAIMoveOrderType
		constexpr auto Enum_AIMoveOrderType = 0x116a5; // EAIMoveOrderType
		constexpr auto OldMoveToLocaiton = 0x116a8; // FVector
		constexpr auto OldMoveToRotation = 0x116b4; // FRotator
		constexpr auto bHiddenFloatingHUD = 0x116c0; // char : 1
		constexpr auto bAutoPick = 0x116c0; // char : 1
		constexpr auto bGeneralCanAutoPick = 0x116c4; // int32_t
		constexpr auto GeneralGetItemAddLoyaltyMultiAdd = 0x116c8; // float
		constexpr auto bCanPeaceTame = 0x116cc; // char : 1
		constexpr auto PeaceTameItem = 0x116d0; // TArray<FGeneralPeaceTameRequireItem>
		constexpr auto PeaceTameWantItem = 0x116e0; // FGeneralPeaceTameItem
		constexpr auto loyalty = 0x116ec; // float
		constexpr auto AddTameReduceLoyaltyRate = 0x116f0; // float
		constexpr auto DeathReduceLoyalty = 0x116f4; // float
		constexpr auto HungerZeroReduceLoyalty = 0x116f8; // float
		constexpr auto TimeReduceLoyalty = 0x116fc; // float
		constexpr auto BlowHungerReduceLoyalty = 0x11700; // float
		constexpr auto DelayBelowHungerReduceLoyaltyTime = 0x11704; // float
		constexpr auto LoyalModify = 0x11708; // TArray<FGeneralLoyaltyModify>
		constexpr auto StartHungerReduceLoyaltyHandle = 0x11718; // FTimerHandle
		constexpr auto bHungerReduceLoyalty = 0x11720; // char : 1
		constexpr auto WagesLevelRatio = 0x11724; // float
		constexpr auto WagesQualityRatio = 0x11728; // float
		constexpr auto WagesSpecialRatio = 0x1172c; // float
		constexpr auto BindToRackUseItem = 0x11730; // TArray<FGeneralBindUseItem>
		constexpr auto PrevFormationWorldLocation = 0x11740; // FVector
		constexpr auto FormationWorldLocation = 0x1174c; // FVector
		constexpr auto FormationWorldRotation = 0x11758; // FRotator
		constexpr auto bCanTalk = 0x11764; // char : 1
		constexpr auto InitAnswerContent = 0x11768; // FText
		constexpr auto NPCTalkSetting = 0x11780; // TArray<int32_t>
		constexpr auto bIsViewdGeneral = 0x11790; // char : 1
		constexpr auto AssignedLegendId = 0x11794; // int32_t
		constexpr auto bIsTrafficGoodsSeller = 0x1179c; // char : 1
		constexpr auto SellerType = 0x1179d; // GoodsSellerType
		constexpr auto VirtualStructureHorn = 0x117a0; // TWeakObjectPtr<ASGStructureHorn>
		constexpr auto LockTime = 0x117a8; // FDateTime
		constexpr auto bReachToggleAIMoveOrder = 0x117b0; // char : 1
		constexpr auto Enum_ReachAIMoveOrderType = 0x117b1; // EAIMoveOrderType
		constexpr auto Tenacity = 0x117b4; // int32_t
		constexpr auto CanResetPos = 0x117b8; // char : 1
		constexpr auto ResetPosCoolTime = 0x117bc; // int32_t
		constexpr auto ResetPosLastAttackCoolTime = 0x117c0; // int32_t
		constexpr auto ResetPosTakeDamageCoolTime = 0x117c4; // int32_t
		constexpr auto ResetPosRadius = 0x117c8; // float
		constexpr auto BuildStructureClass = 0x117d0; // ASGStructure*
		constexpr auto LastResetPosDate = 0x117d8; // FDateTime
		constexpr auto LastWantMakeDamageTime = 0x117e0; // FDateTime
		constexpr auto LastTakeDamageTime = 0x117e8; // FDateTime
	}

	namespace n_ULevelSequenceBurnInOptions {
		constexpr auto bUseBurnIn = 0x28; // bool
		constexpr auto BurnInClass = 0x30; // FSoftClassPath
		constexpr auto Settings = 0x48; // ULevelSequenceBurnInInitSettings*
	}

	namespace n_UUI_StructureOccupyTaxPanel {
		constexpr auto NameText = 0x260; // UTextBlock*
		constexpr auto LevelText = 0x268; // UTextBlock*
		constexpr auto HPText = 0x270; // UTextBlock*
		constexpr auto HPProgressBar = 0x278; // UProgressBar*
		constexpr auto InnerText = 0x280; // UTextBlock*
		constexpr auto OuterText = 0x288; // UTextBlock*
		constexpr auto StructureNumText = 0x290; // UTextBlock*
		constexpr auto MultiText = 0x298; // UTextBlock*
		constexpr auto StatusText = 0x2a0; // UTextBlock*
		constexpr auto UpdateButton = 0x2a8; // UButton*
		constexpr auto UpdateButtonText = 0x2b0; // UTextBlock*
		constexpr auto UpdateGrid = 0x2b8; // UUniformGridPanel*
		constexpr auto BuyProtectionButton = 0x2c0; // UButton*
		constexpr auto ProtectionButton = 0x2c8; // UButton*
		constexpr auto ProtectionButtonText = 0x2d0; // UTextBlock*
		constexpr auto ProtectionGrid = 0x2d8; // UUniformGridPanel*
		constexpr auto OccupyBorderBG = 0x2e0; // UBorder*
		constexpr auto UpdateBorder = 0x2e8; // UBorder*
		constexpr auto ProtectionBrush = 0x2f0; // FSlateBrush
		constexpr auto UnProtectionBrush = 0x378; // FSlateBrush
		constexpr auto InventorySlotClass = 0x400; // UUI_StructureOccupyItemSlot*
		constexpr auto RemoteActor = 0x408; // TWeakObjectPtr<ASGStructureOccupy>
		constexpr auto RootSGUI = 0x410; // USGUI*
	}

	namespace n_USkeletalBodySetup {
		constexpr auto bSkipScaleFromAnimation = 0x2a8; // bool
		constexpr auto PhysicalAnimationData = 0x2b0; // TArray<FPhysicalAnimationProfile>
	}

	namespace n_UListViewBase {
		constexpr auto EntryWidgetClass = 0x108; // UUserWidget*
		constexpr auto WheelScrollMultiplier = 0x110; // float
		constexpr auto bEnableScrollAnimation = 0x114; // bool
		constexpr auto bEnableFixedLineOffset = 0x115; // bool
		constexpr auto FixedLineScrollOffset = 0x118; // float
		constexpr auto BP_OnEntryGenerated = 0x120; // FMulticastInlineDelegate
		constexpr auto BP_OnEntryReleased = 0x130; // FMulticastInlineDelegate
		constexpr auto EntryWidgetPool = 0x140; // FUserWidgetPool
	}

	namespace n_UMaterialExpressionScalarParameter {
		constexpr auto DefaultValue = 0x58; // float
		constexpr auto bUseCustomPrimitiveData = 0x5c; // bool
		constexpr auto PrimitiveDataIndex = 0x5d; // char
	}

	namespace n_UCineCameraComponent {
		constexpr auto FilmbackSettings = 0x7e0; // FCameraFilmbackSettings
		constexpr auto Filmback = 0x7ec; // FCameraFilmbackSettings
		constexpr auto LensSettings = 0x7f8; // FCameraLensSettings
		constexpr auto FocusSettings = 0x810; // FCameraFocusSettings
		constexpr auto CurrentFocalLength = 0x868; // float
		constexpr auto CurrentAperture = 0x86c; // float
		constexpr auto CurrentFocusDistance = 0x870; // float
		constexpr auto FilmbackPresets = 0x880; // TArray<FNamedFilmbackPreset>
		constexpr auto LensPresets = 0x890; // TArray<FNamedLensPreset>
		constexpr auto DefaultFilmbackPresetName = 0x8a0; // FString
		constexpr auto DefaultFilmbackPreset = 0x8b0; // FString
		constexpr auto DefaultLensPresetName = 0x8c0; // FString
		constexpr auto DefaultLensFocalLength = 0x8d0; // float
		constexpr auto DefaultLensFStop = 0x8d4; // float
	}

	namespace n_UMeshSculptToolBase {
		constexpr auto BrushProperties = 0xc0; // USculptBrushProperties*
		constexpr auto GizmoProperties = 0xc8; // UWorkPlaneProperties*
		constexpr auto BrushOpPropSets = 0x1b0; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto SecondaryBrushOpPropSets = 0x250; // TMap<int32_t, UMeshSculptBrushOpProps*>
		constexpr auto ViewProperties = 0x870; // UMeshEditingViewProperties*
		constexpr auto ActiveOverrideMaterial = 0x878; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicator = 0x880; // UBrushStampIndicator*
		constexpr auto BrushIndicatorMaterial = 0x888; // UMaterialInstanceDynamic*
		constexpr auto BrushIndicatorMesh = 0x890; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x898; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x8a0; // UTransformProxy*
	}

	namespace n_UPawnActionsComponent {
		constexpr auto ControlledPawn = 0xc0; // APawn*
		constexpr auto ActionStacks = 0xc8; // TArray<FPawnActionStack>
		constexpr auto ActionEvents = 0xd8; // TArray<FPawnActionEvent>
		constexpr auto CurrentAction = 0xe8; // UPawnAction*
	}

	namespace n_UMovieSceneTrack {
		constexpr auto EvalOptions = 0x50; // FMovieSceneTrackEvalOptions
		constexpr auto bIsEvalDisabled = 0x55; // bool
		constexpr auto EvaluationFieldGuid = 0x58; // FGuid
		constexpr auto EvaluationField = 0x68; // FMovieSceneTrackEvaluationField
	}

	namespace n_UDatasmithSkyLightComponentTemplate {
		constexpr auto SourceType = 0x30; // ESkyLightSourceType
		constexpr auto CubemapResolution = 0x34; // int32_t
		constexpr auto Cubemap = 0x38; // UTextureCube*
	}

	namespace n_UImplicitOffsetProperties {
		constexpr auto Smoothness = 0x60; // float
		constexpr auto bPreserveUVs = 0x64; // bool
	}

	namespace n_UPhysicsSettings {
		constexpr auto PhysicErrorCorrection = 0xe0; // FRigidBodyErrorCorrection
		constexpr auto LockedAxis = 0x114; // ESettingsLockedAxis
		constexpr auto DefaultDegreesOfFreedom = 0x115; // ESettingsDOF
		constexpr auto bSuppressFaceRemapTable = 0x116; // bool
		constexpr auto bSupportUVFromHitResults = 0x117; // bool
		constexpr auto bDisableActiveActors = 0x118; // bool
		constexpr auto bDisableKinematicStaticPairs = 0x119; // bool
		constexpr auto bDisableKinematicKinematicPairs = 0x11a; // bool
		constexpr auto bDisableCCD = 0x11b; // bool
		constexpr auto bEnableEnhancedDeterminism = 0x11c; // bool
		constexpr auto AnimPhysicsMinDeltaTime = 0x120; // float
		constexpr auto bSimulateAnimPhysicsAfterReset = 0x124; // bool
		constexpr auto MaxPhysicsDeltaTime = 0x128; // float
		constexpr auto bSubstepping = 0x12c; // bool
		constexpr auto bSubsteppingAsync = 0x12d; // bool
		constexpr auto MaxSubstepDeltaTime = 0x130; // float
		constexpr auto MaxSubsteps = 0x134; // int32_t
		constexpr auto SyncSceneSmoothingFactor = 0x138; // float
		constexpr auto InitialAverageFrameRate = 0x13c; // float
		constexpr auto PhysXTreeRebuildRate = 0x140; // int32_t
		constexpr auto PhysicalSurfaces = 0x148; // TArray<FPhysicalSurfaceName>
		constexpr auto DefaultBroadphaseSettings = 0x158; // FBroadphaseSettings
		constexpr auto MinDeltaVelocityForHitEvents = 0x198; // float
		constexpr auto ChaosSettings = 0x19c; // FChaosPhysicsSettings
	}

	namespace n_UWBP_UpdatePasswotd_C {
		constexpr auto CheckBoxSelectedTextBlock = 0x330; // URichTextBlock*
		constexpr auto Image = 0x338; // UImage*
		constexpr auto Image_131 = 0x340; // UImage*
		constexpr auto Image_250 = 0x348; // UImage*
		constexpr auto ImgBg = 0x350; // UImage*
		constexpr auto ImgBorder = 0x358; // UImage*
		constexpr auto ImgNameInputBg = 0x360; // UImage*
		constexpr auto ImgNameInputBgAgain = 0x368; // UImage*
		constexpr auto ImgNameInputBgAgain_2 = 0x370; // UImage*
	}

	namespace n_UVirtualTextureBuilder {
		constexpr auto Texture = 0x28; // UVirtualTexture2D*
		constexpr auto BuildHash = 0x30; // uint64_t
	}

	namespace n_UOnlineSessionClient {
		constexpr auto bIsFromInvite = 0x1d8; // bool
		constexpr auto bHandlingDisconnect = 0x1d9; // bool
	}

	namespace n_UEditUVIslandsTool {
		constexpr auto MaterialSettings = 0xc8; // UExistingMeshMaterialProperties*
		constexpr auto CheckerMaterial = 0xd0; // UMaterialInstanceDynamic*
		constexpr auto DynamicMeshComponent = 0xd8; // USimpleDynamicMeshComponent*
		constexpr auto SelectionMechanic = 0xe0; // UPolygonSelectionMechanic*
		constexpr auto MultiTransformer = 0xf0; // UMultiTransformer*
	}

	namespace n_UItemSellPanel {
		constexpr auto InventoryPanel = 0x2d8; // UN_InventoryPanel*
		constexpr auto TipsPanel = 0x2e0; // UCanvasPanel*
		constexpr auto InventorySlot = 0x2e8; // UN_InventorySlot*
		constexpr auto EquipPanel = 0x2f0; // UN_EquipPanel*
		constexpr auto Button_Sell = 0x2f8; // UButton*
		constexpr auto Button_Recall = 0x300; // UButton*
		constexpr auto Button_Refresh = 0x308; // UButton*
		constexpr auto ItemListVerticalBox = 0x310; // UVerticalBox*
		constexpr auto ItemAuctionSlotClass = 0x318; // UItemAuctionSlot*
		constexpr auto PressedSlot = 0x320; // TWeakObjectPtr<UN_InventorySlot>
		constexpr auto ItemSlotSelected = 0x328; // TWeakObjectPtr<UItemAuctionSlot>
		constexpr auto RootSGUI = 0x330; // TWeakObjectPtr<UUI_GuildAuctionHouse>
	}

	namespace n_UN_CraftPanelTipsSlot {
		constexpr auto ItemImage = 0x260; // UImage*
		constexpr auto ItemNameText = 0x268; // UTextBlock*
		constexpr auto AmountDivisionText = 0x270; // UTextBlock*
		constexpr auto ItemAmountText = 0x278; // UTextBlock*
		constexpr auto MaxValueText = 0x280; // UTextBlock*
		constexpr auto BindItem = 0x288; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventory = 0x290; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto BindMaxValue = 0x298; // int32_t
		constexpr auto EnoughColor = 0x29c; // FLinearColor
		constexpr auto NotEnoughColor = 0x2ac; // FLinearColor
		constexpr auto BindCraftResourceRequirement = 0x2c0; // FCraftResourceRequirement
	}

	namespace n_UNiagaraComponentSettings {
		constexpr auto SuppressActivationList = 0x28; // TSet<FName>
		constexpr auto ForceAutoPooolingList = 0x78; // TSet<FName>
		constexpr auto SuppressEmitterList = 0xc8; // TSet<FNiagaraEmitterNameSettingsRef>
	}

	namespace n_UNN_CraftPerkGroupLine {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto LineTexture2D = 0x268; // TSoftObjectPtr<UTexture2D>
		constexpr auto LineLearnedTexture2D = 0x290; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnDownTexture2D = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnDownLearnedTexture2D = 0x2e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnUpTexture2D = 0x308; // TSoftObjectPtr<UTexture2D>
		constexpr auto TurnUpLearnedTexture2D = 0x330; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UBTDecorator_DoesPathExist {
		constexpr auto BlackboardKeyA = 0x68; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x90; // FBlackboardKeySelector
		constexpr auto bUseSelf = 0xb8; // char : 1
		constexpr auto PathQueryType = 0xbc; // EPathExistanceQueryType
		constexpr auto FilterClass = 0xc0; // UNavigationQueryFilter*
	}

	namespace n_UAnimNotify_PlayParticleEffect {
		constexpr auto PSTemplate = 0x38; // UParticleSystem*
		constexpr auto LocationOffset = 0x40; // FVector
		constexpr auto RotationOffset = 0x4c; // FRotator
		constexpr auto Scale = 0x58; // FVector
		constexpr auto Attached = 0x80; // char : 1
		constexpr auto SocketName = 0x84; // FName
	}

	namespace n_AARSkyLight {
		constexpr auto CaptureProbe = 0x320; // UAREnvironmentCaptureProbe*
	}

	namespace n_UFoliageTypeExtraInfos {
		constexpr auto FoliageTypeExtraInfoContainer = 0x28; // TArray<FFoliageTypeExtraInfo>
	}

	namespace n_UNewsClientData_GeneralHungry {
		constexpr auto GeneralChunkId = 0x50; // FGuid
	}

	namespace n_UInAppPurchaseCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionDesaturation {
		constexpr auto Input = 0x40; // FExpressionInput
		constexpr auto Fraction = 0x54; // FExpressionInput
		constexpr auto LuminanceFactors = 0x68; // FLinearColor
	}

	namespace n_AAIController {
		constexpr auto bStartAILogicOnPossess = 0x3c0; // char : 1
		constexpr auto bStopAILogicOnUnposses = 0x3c0; // char : 1
		constexpr auto bLOSflag = 0x3c0; // char : 1
		constexpr auto bSkipExtraLOSChecks = 0x3c0; // char : 1
		constexpr auto bAllowStrafe = 0x3c0; // char : 1
		constexpr auto bWantsPlayerState = 0x3c0; // char : 1
		constexpr auto bSetControlRotationFromPawnOrientation = 0x3c0; // char : 1
		constexpr auto PathFollowingComponent = 0x3c8; // UPathFollowingComponent*
		constexpr auto BrainComponent = 0x3d0; // UBrainComponent*
		constexpr auto PerceptionComponent = 0x3d8; // UAIPerceptionComponent*
		constexpr auto ActionsComp = 0x3e0; // UPawnActionsComponent*
		constexpr auto Blackboard = 0x3e8; // UBlackboardComponent*
		constexpr auto CachedGameplayTasksComponent = 0x3f0; // UGameplayTasksComponent*
		constexpr auto DefaultNavigationFilterClass = 0x3f8; // UNavigationQueryFilter*
		constexpr auto ReceiveMoveCompleted = 0x400; // FMulticastInlineDelegate
	}

	namespace n_UEditableMesh {
		constexpr auto Adapters = 0x3b8; // TArray<UEditableMeshAdapter*>
		constexpr auto TextureCoordinateCount = 0x3d0; // int32_t
		constexpr auto PendingCompactCounter = 0x51c; // int32_t
		constexpr auto SubdivisionCount = 0x520; // int32_t
	}

	namespace n_UToolTipsItem {
		constexpr auto TitleTextblockName = 0x260; // FName
		constexpr auto ValueTextblockName = 0x268; // FName
		constexpr auto TitleValueTextblockName = 0x270; // FName
		constexpr auto ValueGridPanelName = 0x278; // FName
		constexpr auto ImgIconName = 0x280; // FName
		constexpr auto ToolTipsItemType = 0x288; // EToolTipsItemType
		constexpr auto BgName = 0x28c; // FName
		constexpr auto DamageImageName = 0x294; // FName
		constexpr auto QualityBorderName = 0x29c; // FName
		constexpr auto QualityBorderBrush = 0x2a8; // FSlateBrush [0x7]
		constexpr auto QualityTextColor = 0x660; // FSlateColor [0x7]
		constexpr auto DamageBrush = 0x778; // FSlateBrush [0x4]
		constexpr auto ArmorBrush = 0x998; // FSlateBrush [0x4]
		constexpr auto EnvironmentResistance = 0xbb8; // FSlateBrush [0x4]
		constexpr auto DirectionText = 0xdd8; // FText [0x9]
		constexpr auto TitleTextTable = 0xeb0; // UDataTable*
		constexpr auto DamageTypeText = 0xeb8; // FText [0x4]
		constexpr auto YesText = 0xf18; // FText
		constexpr auto NoText = 0xf30; // FText
		constexpr auto CantRiderSprintAttackColor = 0xf48; // FLinearColor
		constexpr auto bShowCrossServerTransport = 0xf58; // char : 1
		constexpr auto BowUseAmmoText = 0xf60; // FText
		constexpr auto CrossBowUseAmmoText = 0xf78; // FText
		constexpr auto HeavyCrossBowUseAmmoText = 0xf90; // FText
		constexpr auto MeetRequireColor = 0xfa8; // FLinearColor
		constexpr auto NotMeetRequireColor = 0xfb8; // FLinearColor
		constexpr auto CapitalText = 0xfc8; // FText [0x5]
		constexpr auto bShowOneItemWeight = 0x1040; // char : 1
		constexpr auto Index = 0x1044; // int32_t
		constexpr auto BindInventorySlot = 0x10b0; // UN_InventorySlot*
	}

	namespace n_ACableActor {
		constexpr auto CableComponent = 0x310; // UCableComponent*
	}

	namespace n_UUI_AdminSubPanelGeneral {
		constexpr auto AdminPlayerPanel = 0x2d8; // UUI_AdminPlayerPanel*
		constexpr auto ScrollBoxNpcList = 0x2e0; // UScrollBox*
		constexpr auto SearchTextBoxNpc = 0x2e8; // UEditableTextBox*
		constexpr auto ServerAdminItemRowTemplate = 0x300; // UUI_ServerAdminItemRow*
		constexpr auto EditableTextBoxCreateLevel = 0x308; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateTameLevel = 0x310; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateTeamId = 0x318; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateNum = 0x320; // UEditableTextBox*
		constexpr auto ComboBoxGeneralQuality = 0x328; // UComboBoxString*
		constexpr auto CheckBoxIsTamed = 0x330; // UCheckBox*
		constexpr auto CheckBoxIsHold = 0x338; // UCheckBox*
	}

	namespace n_UStaticMesh {
		constexpr auto MinLOD = 0x80; // FPerPlatformInt
		constexpr auto LpvBiasMultiplier = 0x84; // float
		constexpr auto StaticMaterials = 0x88; // TArray<FStaticMaterial>
		constexpr auto LightmapUVDensity = 0x98; // float
		constexpr auto LightMapResolution = 0x9c; // int32_t
		constexpr auto LightMapCoordinateIndex = 0xa0; // int32_t
		constexpr auto DistanceFieldSelfShadowBias = 0xa4; // float
		constexpr auto BodySetup = 0xa8; // UBodySetup*
		constexpr auto LODForCollision = 0xb0; // int32_t
		constexpr auto bGenerateMeshDistanceField = 0xb4; // char : 1
		constexpr auto bStripComplexCollisionForConsole = 0xb4; // char : 1
		constexpr auto bHasNavigationData = 0xb4; // char : 1
		constexpr auto bSupportUniformlyDistributedSampling = 0xb4; // char : 1
		constexpr auto bSupportPhysicalMaterialMasks = 0xb4; // char : 1
		constexpr auto bIsBuiltAtRuntime = 0xb4; // char : 1
		constexpr auto bAllowCPUAccess = 0xb4; // char : 1
		constexpr auto bSupportGpuUniformlyDistributedSampling = 0xb5; // char : 1
		constexpr auto Sockets = 0xd8; // TArray<UStaticMeshSocket*>
		constexpr auto PositiveBoundsExtension = 0xf8; // FVector
		constexpr auto NegativeBoundsExtension = 0x104; // FVector
		constexpr auto ExtendedBounds = 0x110; // FBoxSphereBounds
		constexpr auto ElementToIgnoreForTexFactor = 0x12c; // int32_t
		constexpr auto AssetUserData = 0x130; // TArray<UAssetUserData*>
		constexpr auto EditableMesh = 0x140; // UObject*
		constexpr auto NavCollision = 0x148; // UNavCollisionBase*
	}

	namespace n_UMaterialExpressionSobol {
		constexpr auto Cell = 0x40; // FExpressionInput
		constexpr auto Index = 0x54; // FExpressionInput
		constexpr auto Seed = 0x68; // FExpressionInput
		constexpr auto ConstIndex = 0x7c; // uint32_t
		constexpr auto ConstSeed = 0x80; // FVector2D
	}

	namespace n_UStableRebornSlot {
		constexpr auto BGBorder_NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_HoverTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_SelectTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto QualityCorrectionToQualityType = 0x2d8; // TMap<EGeneralsQualityType, float>
		constexpr auto VehicleQualityTexture = 0x328; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto CastratedTexture = 0x418; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexFemaleTexture = 0x440; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexMaleTexture = 0x468; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder = 0x490; // UBorder*
		constexpr auto VehicleQualityBG = 0x498; // UImage*
		constexpr auto SexImg = 0x4a0; // UImage*
		constexpr auto NameText = 0x4a8; // UTextBlock*
		constexpr auto LifeCountText = 0x4b0; // UTextBlock*
		constexpr auto ReduceLifeTitle = 0x4b8; // UTextBlock*
		constexpr auto ReduceLifeText = 0x4c0; // UTextBlock*
		constexpr auto ReduceLifeCountTimePB = 0x4c8; // UProgressBar*
	}

	namespace n_UUI_Crosshairs {
		constexpr auto bIsCustomVisible = 0x2d8; // char : 1
		constexpr auto CurrentShooterWeapon = 0x2e0; // AShooterWeapon*
		constexpr auto CrosshairsDegress = 0x2e8; // float
		constexpr auto ScatteringAngle = 0x2ec; // FVector2D
	}

	namespace n_UShapeComponent {
		constexpr auto ShapeBodySetup = 0x488; // UBodySetup*
		constexpr auto AreaClass = 0x490; // UNavAreaBase*
		constexpr auto ShapeColor = 0x498; // FColor
		constexpr auto bDrawOnlyIfSelected = 0x49c; // char : 1
		constexpr auto bShouldCollideWhenPlacing = 0x49c; // char : 1
		constexpr auto bDynamicObstacle = 0x49c; // char : 1
	}

	namespace n_UUI_MainMenuPicLink {
		constexpr auto LogoImg = 0x260; // UImage*
	}

	namespace n_ANatureWaterBlockVolume {
		constexpr auto WaterManager = 0x348; // TWeakObjectPtr<AWaterManager>
	}

	namespace n_UEnvQueryTest_Project {
		constexpr auto ProjectionData = 0x1f8; // FEnvTraceData
	}

	namespace n_UUI_JunGuanAiBattle {
		constexpr auto GaunAiBattleInfoPanel = 0x2d8; // UScrollBox*
		constexpr auto BtnClose = 0x2e0; // UButton*
		constexpr auto GuanAiBattleInfoSlotClass = 0x2e8; // UGuanAiBattleInfoSlot*
	}

	namespace n_UNavigationPath {
		constexpr auto PathUpdatedNotifier = 0x28; // FMulticastInlineDelegate
		constexpr auto PathPoints = 0x38; // TArray<FVector>
		constexpr auto RecalculateOnInvalidation = 0x48; // ENavigationOptionFlag
	}

	namespace n_USpacer {
		constexpr auto Size = 0x108; // FVector2D
	}

	namespace n_UVehiclePerkEvent {
		constexpr auto PerkEventEntries = 0x28; // TMap<EVehiclePerkEventType, FVehiclePerkEventEntry>
	}

	namespace n_UWBP_GenericMultiItemDialog_C {
		constexpr auto AllBg = 0x4e8; // UImage*
		constexpr auto Image_35 = 0x4f0; // UImage*
		constexpr auto Image_79 = 0x4f8; // UImage*
		constexpr auto Image_137 = 0x500; // UImage*
	}

	namespace n_UParticleModuleLight {
		constexpr auto bUseInverseSquaredFalloff = 0x30; // bool
		constexpr auto bAffectsTranslucency = 0x31; // bool
		constexpr auto bPreviewLightRadius = 0x32; // bool
		constexpr auto SpawnFraction = 0x34; // float
		constexpr auto ColorScaleOverLife = 0x38; // FRawDistributionVector
		constexpr auto BrightnessOverLife = 0x80; // FRawDistributionFloat
		constexpr auto RadiusScale = 0xb0; // FRawDistributionFloat
		constexpr auto LightExponent = 0xe0; // FRawDistributionFloat
		constexpr auto LightingChannels = 0x110; // FLightingChannels
		constexpr auto VolumetricScatteringIntensity = 0x114; // float
		constexpr auto bHighQualityLights = 0x118; // bool
		constexpr auto bShadowCastingLights = 0x119; // bool
	}

	namespace n_UDefaultLevelSequenceInstanceData {
		constexpr auto TransformOriginActor = 0x30; // AActor*
		constexpr auto TransformOrigin = 0x40; // FTransform
	}

	namespace n_UBrushBuilder {
		constexpr auto BitmapFilename = 0x28; // FString
		constexpr auto ToolTip = 0x38; // FString
		constexpr auto NotifyBadParams = 0x48; // char : 1
		constexpr auto Vertices = 0x50; // TArray<FVector>
		constexpr auto Polys = 0x60; // TArray<FBuilderPoly>
		constexpr auto Layer = 0x70; // FName
		constexpr auto MergeCoplanars = 0x78; // char : 1
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded {
		constexpr auto RandomSeedInfo = 0xe0; // FParticleRandomSeedInfo
	}

	namespace n_UAbilityTask_WaitGameplayEffectRemoved {
		constexpr auto OnRemoved = 0x80; // FMulticastInlineDelegate
		constexpr auto InvalidHandle = 0x90; // FMulticastInlineDelegate
	}

	namespace n_UMicroTransactionBase {
		constexpr auto AvailableProducts = 0x38; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x48; // FString
		constexpr auto LastErrorSolution = 0x58; // FString
	}

	namespace n_UAbilityTask_ApplyRootMotionMoveToActorForce {
		constexpr auto OnFinished = 0xc0; // FMulticastInlineDelegate
		constexpr auto StartLocation = 0xd8; // FVector
		constexpr auto TargetLocation = 0xe4; // FVector
		constexpr auto TargetActor = 0xf0; // AActor*
		constexpr auto TargetLocationOffset = 0xf8; // FVector
		constexpr auto OffsetAlignment = 0x104; // ERootMotionMoveToActorTargetOffsetType
		constexpr auto Duration = 0x108; // float
		constexpr auto bDisableDestinationReachedInterrupt = 0x10c; // bool
		constexpr auto bSetNewMovementMode = 0x10d; // bool
		constexpr auto NewMovementMode = 0x10e; // EMovementMode
		constexpr auto bRestrictSpeedToExpected = 0x10f; // bool
		constexpr auto PathOffsetCurve = 0x110; // UCurveVector*
		constexpr auto TimeMappingCurve = 0x118; // UCurveFloat*
		constexpr auto TargetLerpSpeedHorizontalCurve = 0x120; // UCurveFloat*
		constexpr auto TargetLerpSpeedVerticalCurve = 0x128; // UCurveFloat*
	}

	namespace n_UGizmoConstantAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
	}

	namespace n_UInteractiveToolPropertySet {
		constexpr auto CachedProperties = 0x38; // UInteractiveToolPropertySet*
		constexpr auto bIsPropertySetEnabled = 0x40; // bool
	}

	namespace n_UMaterialExpressionFunctionOutput {
		constexpr auto OutputName = 0x40; // FName
		constexpr auto Description = 0x48; // FString
		constexpr auto SortPriority = 0x58; // int32_t
		constexpr auto A = 0x5c; // FExpressionInput
		constexpr auto bLastPreviewed = 0x70; // char : 1
		constexpr auto ID = 0x74; // FGuid
	}

	namespace n_AShooterWeapon {
		constexpr auto SceneRootComponent = 0x7888; // USceneComponent*
		constexpr auto WeaponStaticMesh = 0x7890; // UStaticMeshComponent*
		constexpr auto WeaponSkeletalMesh = 0x7898; // USkeletalMeshComponent*
		constexpr auto bUseSkeletalMesh = 0x78a0; // char : 1
		constexpr auto bIsFullBodyReload = 0x78a0; // char : 1
		constexpr auto BowProjectileClass = 0x78a8; // ASGProjectile*
		constexpr auto NearlyTraceDistance = 0x78b0; // float
		constexpr auto ShooterWeaponData = 0x78b8; // FShooterWeaponData
		constexpr auto ProjectileAttachSocket = 0x7900; // FName
		constexpr auto ProjectileAttachBone = 0x7908; // FName
		constexpr auto ProjectileStartSocket = 0x7910; // FName
		constexpr auto ProjectileEndSocket = 0x7918; // FName
		constexpr auto BowFixRotation = 0x7920; // float
		constexpr auto CharacterShakeMontage = 0x7928; // UAnimMontage*
		constexpr auto WeaponEquipMontage = 0x7930; // UAnimMontage*
		constexpr auto WeaponAimToRlxMontage = 0x7938; // UAnimMontage*
		constexpr auto WeaponBlockMontage = 0x7940; // UAnimMontage*
		constexpr auto WeaponAttackMontage = 0x7948; // UAnimMontage*
		constexpr auto WeaponCancelAttackMontage = 0x7950; // UAnimMontage*
		constexpr auto WeaponShakeMontage = 0x7958; // UAnimMontage*
		constexpr auto BowProjectileArray = 0x7960; // TArray<ASGProjectile*>
		constexpr auto bPullMultiDamage = 0x7970; // char : 1
		constexpr auto ServerCheckAttackDistance = 0x7974; // float
		constexpr auto bNeedBullet = 0x7978; // char : 1
		constexpr auto bOverrideProjectileDamageType = 0x7978; // char : 1
		constexpr auto OverrideProjectileDamageType = 0x7979; // EDamageType
		constexpr auto Demonstration = 0x797c; // int32_t
		constexpr auto DemonstrationWave = 0x7980; // int32_t
		constexpr auto DemonstrationPerWaveTime = 0x7984; // float
		constexpr auto bStartDemostration = 0x7988; // char : 1
		constexpr auto bSpawnDemostration = 0x7988; // char : 1
		constexpr auto PitchDemostartion = 0x798c; // float
		constexpr auto YawDemostartion = 0x7990; // float
		constexpr auto ShooterWeaponType = 0x7a30; // EShooterWeaponType
		constexpr auto PullMultiDamageMin = 0x7a40; // float
		constexpr auto PullMultiDamageMax = 0x7a44; // float
		constexpr auto bUnEquipNeedBackAmmo = 0x7a48; // char : 1
		constexpr auto AmmoPiercenessOverride = 0x7a4c; // int32_t
		constexpr auto bShowDebug = 0x7a50; // char : 1
		constexpr auto DemostrationParticle = 0x7a58; // UParticleSystem*
		constexpr auto DistanceAttenuationCurve = 0x7a90; // UCurveFloat*
		constexpr auto bUseAmmo = 0x7a98; // char : 1
		constexpr auto ClipAmmo = 0x7a9c; // int32_t
		constexpr auto MaxClipAmmo = 0x7aa0; // int32_t
		constexpr auto bHolsterBackAmmo = 0x7aa4; // char : 1
		constexpr auto OnceReloadAndConsumeAmmoAmount = 0x7aa8; // int32_t
		constexpr auto bOnlyClientTraceDemo = 0x7aac; // bool
	}

	namespace n_UReplicationGraphNode_AlwaysRelevant {
		constexpr auto ChildNode = 0x50; // UReplicationGraphNode*
	}

	namespace n_UAnimalAppearanceInfo {
		constexpr auto AnimalAppearanceStruct = 0x28; // TArray<FAnimalAppearanceStruct>
		constexpr auto FurComponentConfigs = 0x38; // TArray<FAnimalFurComponentConfig>
		constexpr auto bRandomSkinHuaSe = 0x48; // char : 1
		constexpr auto SkinHuaSeAlpha = 0x4c; // float
	}

	namespace n_UUI_OneMail {
		constexpr auto TitleText = 0x260; // UTextBlock*
		constexpr auto DateText = 0x268; // UTextBlock*
		constexpr auto ReadImage = 0x270; // UImage*
		constexpr auto AttachImage = 0x278; // UImage*
		constexpr auto OneMailBorder = 0x280; // UBorder*
		constexpr auto OneMailButton = 0x288; // UButton*
		constexpr auto BGImageNormal = 0x290; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGImageNormalRead = 0x2b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGImageHovered = 0x2e0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGImagePressed = 0x308; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGImageDisabled = 0x330; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReadImageNormal = 0x358; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReadImageUsed = 0x380; // TSoftObjectPtr<UTexture2D>
		constexpr auto MainMailUI = 0x3a8; // UUI_MainMail*
	}

	namespace n_UUI_SeasonShop {
		constexpr auto SeasonCapitalNumText = 0x260; // UTextBlock*
	}

	namespace n_UEndMatchCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UUI_GuildSilverStore {
		constexpr auto StoreImage = 0x2d8; // UImage*
		constexpr auto TakeImage = 0x2e0; // UImage*
		constexpr auto StoreButton = 0x2e8; // UButton*
		constexpr auto TakeButton = 0x2f0; // UButton*
		constexpr auto ConfirmButton = 0x2f8; // UButton*
		constexpr auto ConfirmTipsButton = 0x300; // UDataButton*
		constexpr auto CannelButton = 0x308; // UButton*
		constexpr auto GuildSilverText = 0x310; // UTextBlock*
		constexpr auto GuildResultText = 0x318; // UTextBlock*
		constexpr auto PlayerNameText = 0x320; // UTextBlock*
		constexpr auto PlayerSilverText = 0x328; // UTextBlock*
		constexpr auto PlayerResultText = 0x330; // UTextBlock*
		constexpr auto ValueTextBox = 0x338; // UEditableTextBox*
		constexpr auto StoreResultImage = 0x340; // UImage*
		constexpr auto PlayerResultImage = 0x348; // UImage*
		constexpr auto AddResultTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReduceResultTexture = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto AddResultColor = 0x3a0; // FLinearColor
		constexpr auto ReduceResultColor = 0x3b0; // FLinearColor
		constexpr auto ButtonTipWidgetTemplate = 0x3c0; // USGToolTipWidget*
	}

	namespace n_UWBP_KeySettingRadioView_C {
		constexpr auto Attack = 0x2f0; // UWBP_KeySettingRadioButton_C*
		constexpr auto Camera = 0x2f8; // UWBP_KeySettingRadioButton_C*
		constexpr auto General = 0x300; // UWBP_KeySettingRadioButton_C*
		constexpr auto GroundedMovement = 0x308; // UWBP_KeySettingRadioButton_C*
		constexpr auto OtherMovement = 0x310; // UWBP_KeySettingRadioButton_C*
		constexpr auto ShortCut = 0x318; // UWBP_KeySettingRadioButton_C*
		constexpr auto UI = 0x320; // UWBP_KeySettingRadioButton_C*
		constexpr auto Verhicle = 0x328; // UWBP_KeySettingRadioButton_C*
		constexpr auto Voice = 0x330; // UWBP_KeySettingRadioButton_C*
	}

	namespace n_ANatureBlockingVolume {
		constexpr auto VisualMeshComp = 0x310; // UStaticMeshComponent*
		constexpr auto BoxComp = 0x318; // UBoxComponent*
		constexpr auto VisualMeshMargin = 0x320; // float
	}

	namespace n_UReplicationGraphNode_TearOff_ForConnection {
		constexpr auto TearOffActors = 0x50; // TArray<FTearOffActorInfo>
	}

	namespace n_UUI_RadioButton {
		constexpr auto RadioIndex = 0x530; // int32_t
		constexpr auto bEnabled = 0x534; // bool
		constexpr auto ParentView = 0x538; // UUI_RadioButtonView*
	}

	namespace n_UAssetManagerSettings {
		constexpr auto PrimaryAssetTypesToScan = 0x38; // TArray<FPrimaryAssetTypeInfo>
		constexpr auto DirectoriesToExclude = 0x48; // TArray<FDirectoryPath>
		constexpr auto PrimaryAssetRules = 0x58; // TArray<FPrimaryAssetRulesOverride>
		constexpr auto CustomPrimaryAssetRules = 0x68; // TArray<FPrimaryAssetRulesCustomOverride>
		constexpr auto bOnlyCookProductionAssets = 0x78; // bool
		constexpr auto bShouldManagerDetermineTypeAndName = 0x79; // bool
		constexpr auto bShouldGuessTypeAndNameInEditor = 0x7a; // bool
		constexpr auto bShouldAcquireMissingChunksOnLoad = 0x7b; // bool
		constexpr auto PrimaryAssetIdRedirects = 0x80; // TArray<FAssetManagerRedirect>
		constexpr auto PrimaryAssetTypeRedirects = 0x90; // TArray<FAssetManagerRedirect>
		constexpr auto AssetPathRedirects = 0xa0; // TArray<FAssetManagerRedirect>
		constexpr auto MetaDataTagsForAssetRegistry = 0xb0; // TSet<FName>
	}

	namespace n_UUI_AdminSubPanelPlayerItem {
		constexpr auto AdminItemPanel = 0x2d8; // UUI_AdminItemPanel*
		constexpr auto AdminPlayerPanel = 0x2e0; // UUI_AdminPlayerPanel*
		constexpr auto AdminPlayerAction = 0x2e8; // UUI_AdminPlayerAction*
	}

	namespace n_UWeatherPendantWidget {
		constexpr auto WeatherIcon = 0x260; // TSoftObjectPtr<UTexture2D> [0x10]
		constexpr auto TimeIcon = 0x4e0; // TSoftObjectPtr<UTexture2D> [0x2]
		constexpr auto ImgIcon = 0x530; // UImage*
		constexpr auto TbTime = 0x538; // UTextBlock*
		constexpr auto ImgTime = 0x540; // UImage*
		constexpr auto TbLocationArea = 0x548; // UTextBlock*
		constexpr auto CurWeatherControlComponent = 0x560; // UWeatherControlComponent*
	}

	namespace n_UGeneralProjectSettings {
		constexpr auto CompanyName = 0x28; // FString
		constexpr auto CompanyDistinguishedName = 0x38; // FString
		constexpr auto CopyrightNotice = 0x48; // FString
		constexpr auto Description = 0x58; // FString
		constexpr auto Homepage = 0x68; // FString
		constexpr auto LicensingTerms = 0x78; // FString
		constexpr auto PrivacyPolicy = 0x88; // FString
		constexpr auto GameAppID = 0x98; // FString
		constexpr auto ProjectID = 0xa8; // FGuid
		constexpr auto ProjectName = 0xb8; // FString
		constexpr auto ProjectVersion = 0xc8; // FString
		constexpr auto SupportContact = 0xd8; // FString
		constexpr auto ProjectDisplayedTitle = 0xe8; // FText
		constexpr auto ProjectDebugTitleInfo = 0x100; // FText
		constexpr auto bShouldWindowPreserveAspectRatio = 0x118; // bool
		constexpr auto bUseBorderlessWindow = 0x119; // bool
		constexpr auto bStartInVR = 0x11a; // bool
		constexpr auto bAllowWindowResize = 0x11b; // bool
		constexpr auto bAllowClose = 0x11c; // bool
		constexpr auto bAllowMaximize = 0x11d; // bool
		constexpr auto bAllowMinimize = 0x11e; // bool
	}

	namespace n_AWeatherVolumetricFog {
		constexpr auto VolumeFogParticle = 0x318; // UParticleSystem*
		constexpr auto VolumeFogMat = 0x320; // UMaterialInterface*
		constexpr auto ParticleSize = 0x328; // float
		constexpr auto VolumeFogIntensity = 0x32c; // float
		constexpr auto VolumeFogDistance = 0x330; // float
		constexpr auto VolumeFogFallOff = 0x334; // float
		constexpr auto VolumeFogDistanceFar = 0x338; // float
		constexpr auto VolumeFogFallOffFar = 0x33c; // float
		constexpr auto VolumeFogFarAmount = 0x340; // float
		constexpr auto VolumeFogColor = 0x344; // FLinearColor
		constexpr auto VolumeFogColor2 = 0x354; // FLinearColor
		constexpr auto VolumeFogEmissiveColor = 0x364; // FLinearColor
		constexpr auto VolumeFogScale = 0x374; // float
		constexpr auto VolumeFogSpeed1X = 0x378; // FLinearColor
		constexpr auto SandStormsIntensity = 0x388; // float
		constexpr auto SandStormsColor = 0x38c; // FLinearColor
		constexpr auto SandStormsAlpha = 0x39c; // float
		constexpr auto SandStormsParticle = 0x3a0; // UParticleSystem*
		constexpr auto SandStormsLeafParticle = 0x3a8; // UParticleSystem*
		constexpr auto SandStormMat = 0x3b0; // UMaterialInterface*
		constexpr auto SandStormLeafMat = 0x3b8; // UMaterialInterface*
		constexpr auto SandStormLeafMat2 = 0x3c0; // UMaterialInterface*
	}

	namespace n_UModularSynthPresetBank {
		constexpr auto Presets = 0x28; // TArray<FModularSynthPresetBankEntry>
	}

	namespace n_UUI_EscMenu {
		constexpr auto BtnExit = 0x2d8; // UButton*
		constexpr auto BtnHelp = 0x2e0; // UButton*
		constexpr auto BtnAdmin = 0x2e8; // UButton*
		constexpr auto BtnReturn = 0x2f0; // UButton*
		constexpr auto TbReturnSelectRole = 0x2f8; // UTextBlock*
		constexpr auto BtnReturnSelectRole = 0x300; // UButton*
		constexpr auto BtnSetting = 0x308; // UButton*
		constexpr auto BtnSettingPlayerShow = 0x310; // UButton*
		constexpr auto BtnSuicide = 0x318; // UButton*
		constexpr auto TbSuicide = 0x320; // UTextBlock*
		constexpr auto BtnDeleteRole = 0x328; // UButton*
		constexpr auto BtnUpdateDevicePassword = 0x330; // UButton*
	}

	namespace n_UGuildMemberListPanel {
		constexpr auto LeaveGuildButton = 0x2d8; // UButton*
		constexpr auto GuildGroupButton = 0x2e0; // UButton*
		constexpr auto GuildSkillButton = 0x2e8; // UButton*
		constexpr auto GuildTechButton = 0x2f0; // UButton*
		constexpr auto ZhanLingButton = 0x2f8; // UButton*
		constexpr auto KPIManagementButton = 0x300; // UButton*
		constexpr auto PrePageDataButton = 0x308; // UDataButton*
		constexpr auto NextPageDataButton = 0x310; // UDataButton*
		constexpr auto ShowPageText = 0x318; // UTextBlock*
		constexpr auto MemberListPanel = 0x320; // UCanvasPanel*
		constexpr auto PlayerNameTitleSlot = 0x328; // USortableTitleSlot*
		constexpr auto PlayerLevelTitleSlot = 0x330; // USortableTitleSlot*
		constexpr auto MemberLevelTitleSlot = 0x338; // USortableTitleSlot*
		constexpr auto GongXunTitleSlot = 0x340; // USortableTitleSlot*
		constexpr auto OfficialJobTitleSlot = 0x348; // USortableTitleSlot*
		constexpr auto MemberGroupTitleSlot = 0x350; // USortableTitleSlot*
		constexpr auto DKPTitleSlot = 0x358; // USortableTitleSlot*
		constexpr auto OnlineStateTitleSlot = 0x360; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x368; // USortableTitleSlot*
		constexpr auto GuildMemberNumPerPage = 0x370; // int32_t
		constexpr auto MemberSlotSize = 0x374; // FVector2D
		constexpr auto GuildMemberSlotClass = 0x380; // UGuildMemberSlot*
		constexpr auto ConfirmLeaveGuildUIOverride = 0x388; // UUI_ApplyGuildConfirm*
		constexpr auto ConfirmKickOutUIOverride = 0x390; // UUI_GenericConfirmationDialog*
		constexpr auto ConfirmChangeOwnerUIOverride = 0x398; // UUI_GenericConfirmationDialog*
	}

	namespace n_UMovieSceneNiagaraSystemSpawnSection {
		constexpr auto SectionStartBehavior = 0xe8; // ENiagaraSystemSpawnSectionStartBehavior
		constexpr auto SectionEvaluateBehavior = 0xec; // ENiagaraSystemSpawnSectionEvaluateBehavior
		constexpr auto SectionEndBehavior = 0xf0; // ENiagaraSystemSpawnSectionEndBehavior
		constexpr auto AgeUpdateMode = 0xf4; // ENiagaraAgeUpdateMode
	}

	namespace n_UDatasmithFBXSceneImportData {
		constexpr auto bGenerateLightmapUVs = 0x28; // bool
		constexpr auto TexturesDir = 0x30; // FString
		constexpr auto IntermediateSerialization = 0x40; // char
		constexpr auto bColorizeMaterials = 0x41; // bool
	}

	namespace n_UVehicleWheel {
		constexpr auto CollisionMesh = 0x28; // UStaticMesh*
		constexpr auto bDontCreateShape = 0x30; // bool
		constexpr auto bAutoAdjustCollisionSize = 0x31; // bool
		constexpr auto Offset = 0x34; // FVector
		constexpr auto ShapeRadius = 0x40; // float
		constexpr auto ShapeWidth = 0x44; // float
		constexpr auto Mass = 0x48; // float
		constexpr auto DampingRate = 0x4c; // float
		constexpr auto SteerAngle = 0x50; // float
		constexpr auto bAffectedByHandbrake = 0x54; // bool
		constexpr auto TireType = 0x58; // UTireType*
		constexpr auto TireConfig = 0x60; // UTireConfig*
		constexpr auto LatStiffMaxLoad = 0x68; // float
		constexpr auto LatStiffValue = 0x6c; // float
		constexpr auto LongStiffValue = 0x70; // float
		constexpr auto SuspensionForceOffset = 0x74; // float
		constexpr auto SuspensionMaxRaise = 0x78; // float
		constexpr auto SuspensionMaxDrop = 0x7c; // float
		constexpr auto SuspensionNaturalFrequency = 0x80; // float
		constexpr auto SuspensionDampingRatio = 0x84; // float
		constexpr auto SweepType = 0x88; // EWheelSweepType
		constexpr auto MaxBrakeTorque = 0x8c; // float
		constexpr auto MaxHandBrakeTorque = 0x90; // float
		constexpr auto VehicleSim = 0x98; // UWheeledVehicleMovementComponent*
		constexpr auto WheelIndex = 0xa0; // int32_t
		constexpr auto DebugLongSlip = 0xa4; // float
		constexpr auto DebugLatSlip = 0xa8; // float
		constexpr auto DebugNormalizedTireLoad = 0xac; // float
		constexpr auto DebugWheelTorque = 0xb4; // float
		constexpr auto DebugLongForce = 0xb8; // float
		constexpr auto DebugLatForce = 0xbc; // float
		constexpr auto Location = 0xc0; // FVector
		constexpr auto OldLocation = 0xcc; // FVector
		constexpr auto Velocity = 0xd8; // FVector
	}

	namespace n_USynthKnob {
		constexpr auto Value = 0x108; // float
		constexpr auto StepSize = 0x10c; // float
		constexpr auto MouseSpeed = 0x110; // float
		constexpr auto MouseFineTuneSpeed = 0x114; // float
		constexpr auto ShowTooltipInfo = 0x118; // char : 1
		constexpr auto ParameterName = 0x120; // FText
		constexpr auto ParameterUnits = 0x138; // FText
		constexpr auto ValueDelegate = 0x150; // FDelegate
		constexpr auto WidgetStyle = 0x160; // FSynthKnobStyle
		constexpr auto Locked = 0x398; // bool
		constexpr auto IsFocusable = 0x399; // bool
		constexpr auto OnMouseCaptureBegin = 0x3a0; // FMulticastInlineDelegate
		constexpr auto OnMouseCaptureEnd = 0x3b0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureBegin = 0x3c0; // FMulticastInlineDelegate
		constexpr auto OnControllerCaptureEnd = 0x3d0; // FMulticastInlineDelegate
		constexpr auto OnValueChanged = 0x3e0; // FMulticastInlineDelegate
	}

	namespace n_URig {
		constexpr auto TransformBases = 0x30; // TArray<FTransformBase>
		constexpr auto Nodes = 0x40; // TArray<FNode>
	}

	namespace n_UAISystemBase {
		constexpr auto AISystemClassName = 0x28; // FSoftClassPath
		constexpr auto AISystemModuleName = 0x40; // FName
		constexpr auto bInstantiateAISystemOnClient = 0x50; // bool
	}

	namespace n_UParticleModuleMeshRotation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UInterpTrackFade {
		constexpr auto bPersistFade = 0x90; // char : 1
		constexpr auto bFadeAudio = 0x90; // char : 1
		constexpr auto FadeColor = 0x94; // FLinearColor
	}

	namespace n_UEdGraphNode {
		constexpr auto DeprecatedPins = 0x38; // TArray<UEdGraphPin_Deprecated*>
		constexpr auto NodePosX = 0x48; // int32_t
		constexpr auto NodePosY = 0x4c; // int32_t
		constexpr auto NodeWidth = 0x50; // int32_t
		constexpr auto NodeHeight = 0x54; // int32_t
		constexpr auto AdvancedPinDisplay = 0x58; // ENodeAdvancedPins
		constexpr auto EnabledState = 0x59; // ENodeEnabledState
		constexpr auto bDisplayAsDisabled = 0x5b; // char : 1
		constexpr auto bUserSetEnabledState = 0x5b; // char : 1
		constexpr auto bIsNodeEnabled = 0x5b; // char : 1
		constexpr auto bHasCompilerMessage = 0x5b; // char : 1
		constexpr auto NodeComment = 0x60; // FString
		constexpr auto ErrorType = 0x70; // int32_t
		constexpr auto ErrorMsg = 0x78; // FString
		constexpr auto NodeGuid = 0x88; // FGuid
	}

	namespace n_UDiffusionSmoothProperties {
		constexpr auto SmoothingPerStep = 0x60; // float
		constexpr auto Steps = 0x64; // int32_t
		constexpr auto bPreserveUVs = 0x68; // bool
	}

	namespace n_USGLocalPlayer {
		constexpr auto OnGetServersFinish = 0x268; // FMulticastInlineDelegate
		constexpr auto OnServerPingFinish = 0x278; // FMulticastInlineDelegate
		constexpr auto OnGetOfficialSealInfosFinish = 0x288; // FMulticastInlineDelegate
		constexpr auto OnGetOccupyDetailInfoFinish = 0x298; // FMulticastInlineDelegate
		constexpr auto OnGetSteamTicket = 0x2a8; // FMulticastInlineDelegate
		constexpr auto LogicGameServerInfo = 0x2b8; // TArray<FGameServerInfo>
		constexpr auto LobbyServerInfoTotal = 0x2c8; // TArray<FGameServerInfo>
		constexpr auto LobbyServerInfo = 0x2d8; // TArray<FGameServerInfo>
		constexpr auto OfficalSealInfos = 0x2e8; // TArray<FOfficalSealInfo>
	}

	namespace n_UHLODProxy {
		constexpr auto ProxyMeshes = 0x28; // TArray<FHLODProxyMesh>
		constexpr auto HLODActors = 0x38; // TMap<UHLODProxyDesc*, FHLODProxyMesh>
	}

	namespace n_UEquip_AnimNotify {
		constexpr auto IsEquip = 0x38; // char : 1
	}

	namespace n_UInputBehaviorSet {
		constexpr auto Behaviors = 0x28; // TArray<FBehaviorInfo>
	}

	namespace n_UNiagaraDataInterfaceRenderTargetVolume {
		constexpr auto Size = 0xd8; // FIntVector
		constexpr auto OverrideRenderTargetFormat = 0xe4; // ETextureRenderTargetFormat
		constexpr auto bOverrideFormat = 0xe5; // char : 1
		constexpr auto RenderTargetUserParameter = 0xe8; // FNiagaraUserParameterBinding
		constexpr auto ManagedRenderTargets = 0x108; // TMap<uint64_t, UTextureRenderTargetVolume*>
	}

	namespace n_USourceEffectPannerPreset {
		constexpr auto Settings = 0x98; // FSourceEffectPannerSettings
	}

	namespace n_ADebugCameraController {
		constexpr auto bShowSelectedInfo = 0x670; // char : 1
		constexpr auto bIsFrozenRendering = 0x670; // char : 1
		constexpr auto bIsOrbitingSelectedActor = 0x670; // char : 1
		constexpr auto bOrbitPivotUseCenter = 0x670; // char : 1
		constexpr auto bEnableBufferVisualization = 0x670; // char : 1
		constexpr auto bEnableBufferVisualizationFullMode = 0x670; // char : 1
		constexpr auto bIsBufferVisualizationInputSetup = 0x670; // char : 1
		constexpr auto bLastDisplayEnabled = 0x670; // char : 1
		constexpr auto DrawFrustum = 0x678; // UDrawFrustumComponent*
		constexpr auto SelectedActor = 0x680; // AActor*
		constexpr auto SelectedComponent = 0x688; // UPrimitiveComponent*
		constexpr auto SelectedHitPoint = 0x690; // FHitResult
		constexpr auto OriginalControllerRef = 0x720; // APlayerController*
		constexpr auto OriginalPlayer = 0x728; // UPlayer*
		constexpr auto SpeedScale = 0x730; // float
		constexpr auto InitialMaxSpeed = 0x734; // float
		constexpr auto InitialAccel = 0x738; // float
		constexpr auto InitialDecel = 0x73c; // float
	}

	namespace n_ASGGameModeLogic {
		constexpr auto SGHuangLiModule = 0x17c8; // USGHuangLi*
		constexpr auto SGSeasonModule = 0x17d0; // USGSeason*
		constexpr auto XianChengOpenBattleHour = 0x17d8; // int32_t
		constexpr auto BlockList = 0x17e8; // TArray<FString>
		constexpr auto CalOccupyTime = 0x17f8; // int64_t
		constexpr auto CalOccupySellTime = 0x1800; // int32_t
		constexpr auto CalOccupyTriggerTime = 0x1808; // int64_t
		constexpr auto CalOneDayTime = 0x1810; // int64_t
		constexpr auto bStartCheckOneDay = 0x1818; // char : 1
		constexpr auto bCheckFinishOneDay = 0x1818; // char : 1
		constexpr auto NeedDeleteDBChunkArray = 0x1820; // TArray<FGuid>
		constexpr auto NeedDeleteChunkArray = 0x1830; // TArray<FGuid>
		constexpr auto NeedDestroyCharacters = 0x1840; // TArray<TWeakObjectPtr<ASGPlayerCharacter>>
		constexpr auto DefaultSleepPlayerCharacterDestroyDays = 0x1850; // int32_t
		constexpr auto XianLingHuKouAwardInfo = 0x1858; // FXianLingHuKouAwardInfo
		constexpr auto CheckNotifyXianLingHuKouAwardHandle = 0x1870; // FTimerHandle
		constexpr auto bNeedNotifyXianLingHuKouAward = 0x1878; // char : 1
		constexpr auto ServerChatChannelID = 0x1880; // FString
		constexpr auto ServerChatChannelNearByID = 0x1890; // FString
		constexpr auto ServerHuKouInfoMap = 0x18a0; // TMap<FString, FDateTime>
		constexpr auto XianChengJinXianInfo = 0x18f0; // TMap<FGuid, FXianChengJinXian>
		constexpr auto MaxGuildEventRecordCount = 0x19a0; // int32_t
		constexpr auto AutoModifyConflictInterval = 0x19a4; // int32_t
		constexpr auto AutoModifyConflictRemainingTime = 0x19a8; // float
		constexpr auto GuildEventTickInterval = 0x19ac; // int32_t
		constexpr auto GuildEventTickRemainingTime = 0x19b0; // float
		constexpr auto GuildEventDatas = 0x19b8; // TMap<FGuid, FGuildEventData>
		constexpr auto GmExecuteMsgs = 0x1a08; // TArray<FGmExecuteMsg>
		constexpr auto GmExecuteDestroyActors = 0x1a18; // TArray<TWeakObjectPtr<AActor>>
		constexpr auto GmExecutePlayerIDArray = 0x1a28; // TArray<FString>
		constexpr auto WeatherEffectEnvironment = 0x1a38; // TMap<EWeatherType, FWeatherEffectEnvironment>
		constexpr auto GoodsSellerLvMap = 0x1a88; // TMap<GoodsSellerType, FTrafficGoodsSellerLvInfo>
		constexpr auto GoodsSellerInfo = 0x1ad8; // TMap<GoodsSellerType, FTrafficGoodsSellerInfo>
		constexpr auto GoodsPriceRatioMap = 0x1b28; // TMap<TrafficGoodsType, float>
		constexpr auto GoodsRefreshTimeMap = 0x1b78; // TMap<GoodsSellerType, FSellerRefreshTimeInfo>
		constexpr auto NextRefreshGoodsPriceRatioTime = 0x1bc8; // FDateTime
		constexpr auto WorldRankMsgs = 0x1bd0; // TArray<FWorldRankMsgStu>
		constexpr auto UTCAR_LastSettlementTicks = 0x1be8; // int64_t
		constexpr auto ActivityRank_Datas = 0x1bf8; // TMap<FGuid, FActivityRankDataInfo>
		constexpr auto ActivityRankRewardMsgs = 0x1c50; // TArray<FActivityRankRewardMsgStu>
		constexpr auto ActivityRank_PlayerRewards = 0x1c60; // TArray<FString>
		constexpr auto ActivityRankRule = 0x1c70; // FActivityRankRule
	}

	namespace n_UAIPerceptionSystem {
		constexpr auto Senses = 0x88; // TArray<UAISense*>
		constexpr auto PerceptionAgingRate = 0x98; // float
	}

	namespace n_UAISenseConfig_Damage {
		constexpr auto Implementation = 0x48; // UAISense_Damage*
	}

	namespace n_USGGameDataAchievement {
		constexpr auto AchievementNumMap = 0x98; // TMap<FString, int32_t>
		constexpr auto AchievementConfigs = 0xe8; // TMap<FString, USGAchievement*>
	}

	namespace n_UGuildKPIItemImageSlot {
		constexpr auto ItemIconImage = 0x2d8; // UImage*
	}

	namespace n_UPerkRow {
		constexpr auto SkillType = 0x260; // ESkillType
		constexpr auto ItemClass = 0x268; // UPerkSlot*
		constexpr auto LineBgClass = 0x270; // UPerkLine*
		constexpr auto LineFgClass = 0x278; // UPerkLine*
		constexpr auto MasterySlotTemplate = 0x280; // UMasterySlot*
		constexpr auto PerkSlotMap = 0x288; // TMap<int32_t, FPerkSlotArray>
		constexpr auto RootUI = 0x2d8; // USGUI*
		constexpr auto BindPerkList = 0x2e0; // TArray<USGPerk*>
		constexpr auto PerkRowCanvas = 0x2f0; // UCanvasPanel*
		constexpr auto SlotCanvas = 0x2f8; // UCanvasPanel*
		constexpr auto PerkSlotPosCanvas = 0x300; // UCanvasPanel*
		constexpr auto BtnAddSkillLevel = 0x308; // UButton*
		constexpr auto TbExpMultiplier = 0x310; // UTextBlock*
		constexpr auto TbSkillLevel = 0x318; // UTextBlock*
		constexpr auto TbSkillLevelAdd = 0x320; // UTextBlock*
		constexpr auto ImgSkillExpFg = 0x328; // UImage*
		constexpr auto MasteryGrid = 0x330; // UUniformGridPanel*
		constexpr auto BtnReduceMastery = 0x338; // UButton*
		constexpr auto BtnAddMastery = 0x340; // UButton*
		constexpr auto CurSkillLevelCanvas = 0x348; // UCanvasPanel*
		constexpr auto BuoyCanvas = 0x350; // UCanvasPanel*
		constexpr auto ImgSkillLevelLimit = 0x358; // UImage*
		constexpr auto ImgSkillLevelMax = 0x360; // UImage*
		constexpr auto HbSkillAddLevel = 0x368; // UHorizontalBox*
		constexpr auto ImgIcon = 0x370; // UImage*
		constexpr auto TwinkleImg = 0x378; // UImage*
		constexpr auto PerkSlotPosCanvasSlot = 0x380; // UCanvasPanelSlot*
		constexpr auto ImgSkillExpFgSlot = 0x388; // UCanvasPanelSlot*
		constexpr auto Masterys = 0x390; // TArray<UMasterySlot*>
		constexpr auto CurViewportScale = 0x3a0; // float
		constexpr auto ViewportSize = 0x3a4; // FVector2D
		constexpr auto SGViewportClient = 0x3b0; // USGViewportClient*
	}

	namespace n_UTaxSlot {
		constexpr auto ShowServerID = 0x260; // char : 1
		constexpr auto XianName = 0x268; // UTextBlock*
		constexpr auto Slider_Tax = 0x270; // USlider*
		constexpr auto TB_taxText = 0x278; // UTextBlock*
		constexpr auto Button_Left = 0x280; // UButton*
		constexpr auto Button_Right = 0x288; // UButton*
		constexpr auto Border_bg = 0x290; // UBorder*
	}

	namespace n_UUI_ChangeName {
		constexpr auto OriginName = 0x2f0; // UTextBlock*
		constexpr auto ChangeName = 0x2f8; // UEditableTextBox*
		constexpr auto Confirm = 0x300; // UButton*
		constexpr auto Cancel = 0x308; // UButton*
		constexpr auto bForceChangeName = 0x310; // char : 1
	}

	namespace n_ULandscapeComponent {
		constexpr auto SectionBaseX = 0x488; // int32_t
		constexpr auto SectionBaseY = 0x48c; // int32_t
		constexpr auto ComponentSizeQuads = 0x490; // int32_t
		constexpr auto SubsectionSizeQuads = 0x494; // int32_t
		constexpr auto NumSubsections = 0x498; // int32_t
		constexpr auto OverrideMaterial = 0x4a0; // UMaterialInterface*
		constexpr auto OverrideHoleMaterial = 0x4a8; // UMaterialInterface*
		constexpr auto OverrideMaterials = 0x4b0; // TArray<FLandscapeComponentMaterialOverride>
		constexpr auto MaterialInstances = 0x4c0; // TArray<UMaterialInstanceConstant*>
		constexpr auto MaterialInstancesDynamic = 0x4d0; // TArray<UMaterialInstanceDynamic*>
		constexpr auto LODIndexToMaterialIndex = 0x4e0; // TArray<int8_t>
		constexpr auto MaterialIndexToDisabledTessellationMaterial = 0x4f0; // TArray<int8_t>
		constexpr auto XYOffsetmapTexture = 0x500; // UTexture2D*
		constexpr auto WeightmapScaleBias = 0x510; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x520; // float
		constexpr auto HeightmapScaleBias = 0x530; // FVector4
		constexpr auto CachedLocalBox = 0x540; // FBox
		constexpr auto CollisionComponent = 0x55c; // LazyObjectProperty
		constexpr auto HeightmapTexture = 0x578; // UTexture2D*
		constexpr auto WeightmapLayerAllocations = 0x580; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x590; // TArray<UTexture2D*>
		constexpr auto LODStreamingProxy = 0x5a0; // ULandscapeLODStreamingProxy*
		constexpr auto MapBuildDataId = 0x5a8; // FGuid
		constexpr auto IrrelevantLights = 0x5b8; // TArray<FGuid>
		constexpr auto CollisionMipLevel = 0x5c8; // int32_t
		constexpr auto SimpleCollisionMipLevel = 0x5cc; // int32_t
		constexpr auto NegativeZBoundsExtension = 0x5d0; // float
		constexpr auto PositiveZBoundsExtension = 0x5d4; // float
		constexpr auto StaticLightingResolution = 0x5d8; // float
		constexpr auto ForcedLOD = 0x5dc; // int32_t
		constexpr auto LODBias = 0x5e0; // int32_t
		constexpr auto StateId = 0x5e4; // FGuid
		constexpr auto BakedTextureMaterialGuid = 0x5f4; // FGuid
		constexpr auto GIBakedBaseColorTexture = 0x608; // UTexture2D*
		constexpr auto MobileBlendableLayerMask = 0x610; // char
		constexpr auto MobileMaterialInterface = 0x618; // UMaterialInterface*
		constexpr auto MobileMaterialInterfaces = 0x620; // TArray<UMaterialInterface*>
		constexpr auto MobileWeightmapTextures = 0x630; // TArray<UTexture2D*>
	}

	namespace n_UParticleModuleParameterDynamic {
		constexpr auto DynamicParams = 0x30; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x40; // int32_t
		constexpr auto bUsesVelocity = 0x44; // char : 1
	}

	namespace n_UCircularThrobber {
		constexpr auto NumberOfPieces = 0x108; // int32_t
		constexpr auto Period = 0x10c; // float
		constexpr auto Radius = 0x110; // float
		constexpr auto PieceImage = 0x118; // USlateBrushAsset*
		constexpr auto Image = 0x120; // FSlateBrush
		constexpr auto bEnableRadius = 0x1a8; // bool
	}

	namespace n_USynthSound {
		constexpr auto OwningSynthComponent = 0x3c0; // USynthComponent*
	}

	namespace n_UNiagaraDataInterfaceCurveBase {
		constexpr auto ShaderLUT = 0x38; // TArray<float>
		constexpr auto LUTMinTime = 0x48; // float
		constexpr auto LUTMaxTime = 0x4c; // float
		constexpr auto LUTInvTimeRange = 0x50; // float
		constexpr auto LUTNumSamplesMinusOne = 0x54; // float
		constexpr auto bUseLUT = 0x58; // char : 1
		constexpr auto bExposeCurve = 0x58; // char : 1
		constexpr auto ExposedName = 0x5c; // FName
		constexpr auto ExposedTexture = 0x68; // UTexture2D*
	}

	namespace n_UPlanePositionGizmo {
		constexpr auto AxisSource = 0x48; // TScriptInterface<IGizmoAxisSource>
		constexpr auto ParameterSource = 0x58; // TScriptInterface<IGizmoVec2ParameterSource>
		constexpr auto HitTarget = 0x68; // TScriptInterface<IGizmoClickTarget>
		constexpr auto StateTarget = 0x78; // TScriptInterface<IGizmoStateTarget>
		constexpr auto bEnableSignedAxis = 0x88; // bool
		constexpr auto bFlipX = 0x89; // bool
		constexpr auto bFlipY = 0x8a; // bool
		constexpr auto bInInteraction = 0x8b; // bool
		constexpr auto InteractionOrigin = 0x8c; // FVector
		constexpr auto InteractionNormal = 0x98; // FVector
		constexpr auto InteractionAxisX = 0xa4; // FVector
		constexpr auto InteractionAxisY = 0xb0; // FVector
		constexpr auto InteractionStartPoint = 0xbc; // FVector
		constexpr auto InteractionCurPoint = 0xc8; // FVector
		constexpr auto InteractionStartParameter = 0xd4; // FVector2D
		constexpr auto InteractionCurParameter = 0xdc; // FVector2D
		constexpr auto ParameterSigns = 0xe4; // FVector2D
	}

	namespace n_ASceneCaptureCube {
		constexpr auto CaptureComponentCube = 0x320; // USceneCaptureComponentCube*
	}

	namespace n_UComboButtonWidgetStyle {
		constexpr auto ComboButtonStyle = 0x30; // FComboButtonStyle
	}

	namespace n_ACullDistanceVolume {
		constexpr auto CullDistances = 0x348; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x358; // char : 1
	}

	namespace n_UUserDefinedImageCaptureProtocol {
		constexpr auto Format = 0xd8; // EDesiredImageFormat
		constexpr auto bEnableCompression = 0xd9; // bool
		constexpr auto CompressionQuality = 0xdc; // int32_t
	}

	namespace n_UUI_SeasonPassportReward {
		constexpr auto RewardNameText = 0x260; // UTextBlock*
		constexpr auto RewardItemUp1 = 0x268; // UUI_SeasonPassportRewardItem*
		constexpr auto RewardItemUp2 = 0x270; // UUI_SeasonPassportRewardItem*
		constexpr auto RewardItemUp = 0x278; // UUI_SeasonPassportRewardItem*
		constexpr auto RewardItemDown = 0x280; // UUI_SeasonPassportRewardItem*
	}

	namespace n_ULightMapVirtualTexture2D {
		constexpr auto TypeToLayer = 0x100; // TArray<int8_t>
	}

	namespace n_USourceEffectRingModulationPreset {
		constexpr auto Settings = 0xb0; // FSourceEffectRingModulationSettings
	}

	namespace n_ANatureAmbientSoundVolume {
		constexpr auto Priority = 0x348; // int32_t
		constexpr auto ModifyAmbientSoundID = 0x350; // FString
		constexpr auto AdditiveAmbientSoundID = 0x360; // TArray<FString>
	}

	namespace n_UNavigationSystemConfig {
		constexpr auto NavigationSystemClass = 0x28; // FSoftClassPath
		constexpr auto SupportedAgentsMask = 0x40; // FNavAgentSelector
		constexpr auto DefaultAgentName = 0x44; // FName
		constexpr auto bIsOverriden = 0x4c; // char : 1
	}

	namespace n_ASGStructureFunctionCraft {
		constexpr auto ThumbnailTexture = 0xf80; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UParticleModuleOrientationAxisLock {
		constexpr auto LockAxisFlags = 0x30; // EParticleAxisLock
	}

	namespace n_UOnAcceptHandleSourcesProperties {
		constexpr auto OnToolAccept = 0x60; // EHandleSourcesMethod
	}

	namespace n_USeamSculptTool {
		constexpr auto Settings = 0x200; // USeamSculptToolProperties*
		constexpr auto PreviewGeom = 0x208; // UPreviewGeometry*
	}

	namespace n_UUIWSGerstnerWaterWaveGeneratorSpectrum {
		constexpr auto SpectrumType = 0x28; // EUIWSWaveSpectrumType
		constexpr auto Octaves = 0x30; // TArray<FUIWSGerstnerWaveOctave>
	}

	namespace n_UWBP_ProducerName_2_C {
		constexpr auto WBP_ProducerSlot_9 = 0x260; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_10 = 0x268; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_11 = 0x270; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_12 = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_13 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_14 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_15 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_16 = 0x298; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_17 = 0x2a0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_19 = 0x2a8; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_20 = 0x2b0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_21 = 0x2b8; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_22 = 0x2c0; // UWBP_ProducerSlot_C*
	}

	namespace n_UMaterialExpressionAppendVector {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
	}

	namespace n_ULocalPlayer {
		constexpr auto ViewportClient = 0x70; // UGameViewportClient*
		constexpr auto AspectRatioAxisConstraint = 0x94; // EAspectRatioAxisConstraint
		constexpr auto PendingLevelPlayerControllerClass = 0x98; // APlayerController*
		constexpr auto bSentSplitJoin = 0xa0; // char : 1
		constexpr auto ControllerId = 0xb8; // int32_t
	}

	namespace n_UMediaTexture {
		constexpr auto AddressX = 0xd8; // TextureAddress
		constexpr auto AddressY = 0xd9; // TextureAddress
		constexpr auto AutoClear = 0xda; // bool
		constexpr auto ClearColor = 0xdc; // FLinearColor
		constexpr auto EnableGenMips = 0xec; // bool
		constexpr auto NumMips = 0xed; // char
		constexpr auto NewStyleOutput = 0xee; // bool
		constexpr auto OutputFormat = 0xef; // MediaTextureOutputFormat
		constexpr auto CurrentAspectRatio = 0xf0; // float
		constexpr auto CurrentOrientation = 0xf4; // MediaTextureOrientation
		constexpr auto MediaPlayer = 0xf8; // UMediaPlayer*
	}

	namespace n_USGCharacterMovementComponent {
		constexpr auto ClimbFriction = 0xb50; // float
		constexpr auto bAccelerationFollowsRotation = 0xb54; // char : 1
		constexpr auto MinAcceleration = 0xb58; // float
		constexpr auto bRequestedMoveWithMaxSpeedOverride = 0xb5c; // char : 1
		constexpr auto AdditiveNavCheckDistance = 0xb60; // float
		constexpr auto bLimitMoveOnNav = 0xb64; // bool
		constexpr auto bEnableUpdateRateOptimizations = 0xb65; // char : 1
		constexpr auto bClientEnableUpdateRateOptimizations = 0xb65; // char : 1
		constexpr auto FrequencyToSkipUpdateMap = 0xb68; // TMap<int32_t, int32_t>
		constexpr auto bDisplayDebugUpdateRateOptimizations = 0xbb8; // char : 1
		constexpr auto LostDeltaTime = 0xbbc; // float
		constexpr auto ServerDeltaTimeTolerance = 0xbe0; // float
		constexpr auto bFixMoveUpdatedTolerance = 0xbe4; // char : 1
		constexpr auto NavMeshWalkingMode = 0xc01; // ENavMeshMovementMode
		constexpr auto NavMeshLimitBoundaryMode = 0xc02; // ENavMeshLimitBoundaryMode
		constexpr auto NavMeshWalkingSlideRateRange = 0xc04; // FVector2D
		constexpr auto NavMeshWalkingEnterInterval = 0xc0c; // float
		constexpr auto NavMeshWalkingAllowLeaveToleranceNumber = 0xc10; // int32_t
		constexpr auto LeavePointRadiusInNavMesh = 0xc18; // TArray<float>
		constexpr auto bUseFindTeleportSpotEx = 0xc28; // char : 1
		constexpr auto bSetNavWalkingPhysics = 0xc28; // char : 1
		constexpr auto bNavWalkingCheckPath = 0xc28; // char : 1
		constexpr auto bSwimSinkToBottom = 0xc40; // char : 1
		constexpr auto SwimSinkToBottomSpeed = 0xc44; // float
		constexpr auto bCanSwimMove = 0xc48; // char : 1
		constexpr auto bResolvePenetrationByAbove = 0xc48; // char : 1
		constexpr auto OverlapCollisionShapeRadiusMul = 0xc4c; // float
		constexpr auto ExtraSweepHeight = 0xc50; // float
		constexpr auto BaseCharacterOwner = 0xc68; // ABaseCharacter*
	}

	namespace n_UGameCharacterStatusPanel {
		constexpr auto ImgHeadIconBgName = 0x260; // FName
		constexpr auto SelectedBorderName = 0x268; // FName
		constexpr auto HeadImageName = 0x270; // FName
		constexpr auto NameTextblockName = 0x278; // FName
		constexpr auto LVTextblockName = 0x280; // FName
		constexpr auto GameHpBarName = 0x288; // FName
		constexpr auto ExpProgressBarName = 0x290; // FName
		constexpr auto GameSpBarName = 0x298; // FName
		constexpr auto HungerImageName = 0x2a0; // FName
		constexpr auto HealthProgressBarName = 0x2a8; // FName
		constexpr auto VehicleStatusPanelName = 0x2b0; // FName
		constexpr auto TamedGeneralVerticalPanelName = 0x2b8; // FName
		constexpr auto LoyaltyProgressName = 0x2c0; // FName
		constexpr auto AnchorModeIconName = 0x2c8; // FName
		constexpr auto TamedGeneralSlotTemplate = 0x2d0; // UGameCharacterStatusPanel*
		constexpr auto HungerMaterial = 0x2d8; // UMaterialInterface*
		constexpr auto PbHPMinPercent = 0x2e0; // float
		constexpr auto PbHPMaxPercent = 0x2e4; // float
		constexpr auto PbSPMinPercent = 0x2e8; // float
		constexpr auto PbSPMaxPercent = 0x2ec; // float
		constexpr auto GeneralSpecialImage = 0x2f0; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto ArmorRemindCanvasName = 0x390; // FName
		constexpr auto ArmorRemindBgName = 0x398; // FName
		constexpr auto ArmorRemindBodyName = 0x3a0; // FName
		constexpr auto ArmorRemindHeadName = 0x3a8; // FName
		constexpr auto ArmorRemindLegName = 0x3b0; // FName
		constexpr auto ArmorRemindMainHandName = 0x3b8; // FName
		constexpr auto ArmorRemindOffHandName = 0x3c0; // FName
		constexpr auto LevelUpNumChangeDelay = 0x3d0; // float
		constexpr auto DisableGeneralImgHead = 0x3d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto GeneralCharacterQuality = 0x400; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto GeneralCharacterNameBgColor = 0x4f0; // FLinearColor [0x6]
		constexpr auto GameStatusProgressPanelName = 0x550; // FName
		constexpr auto bInitProgressPanel = 0x560; // char : 1
		constexpr auto bWeightWarning = 0x560; // char : 1
		constexpr auto GeneralQualityImage = 0x568; // UImage*
		constexpr auto TbAllSelectKey = 0x570; // UTextBlock*
		constexpr auto TbKey = 0x578; // UTextBlock*
		constexpr auto SelectAllGeneralBorder = 0x580; // UBorder*
		constexpr auto FarTipsText = 0x588; // FText
		constexpr auto EVProgressImageBg = 0x5a0; // FSlateBrush [0x4]
		constexpr auto EVProgressImage = 0x7c0; // FSlateBrush [0x4]
		constexpr auto EVThreshold = 0x9e0; // float
		constexpr auto EVProgressTargetValue = 0x9e4; // float
		constexpr auto EVProgressSpeed = 0x9e8; // float
		constexpr auto bShowEVProgress = 0x9ec; // char : 1
		constexpr auto bPreviewData = 0x9ec; // char : 1
		constexpr auto DynamicHungerMat = 0xb08; // UMaterialInstanceDynamic*
	}

	namespace n_UNiagaraDataInterfaceColorCurve {
		constexpr auto RedCurve = 0x70; // FRichCurve
		constexpr auto GreenCurve = 0xf0; // FRichCurve
		constexpr auto BlueCurve = 0x170; // FRichCurve
		constexpr auto AlphaCurve = 0x1f0; // FRichCurve
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSampleParameter {
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto ExpressionGUID = 0x98; // FGuid
		constexpr auto Group = 0xa8; // FName
	}

	namespace n_ABP_HorseMC_Base_C {
		constexpr auto UberGraphFrame = 0x5d0; // FPointerToUberGraphFrame
		constexpr auto SK_Horse_Ponytail_01 = 0x5d8; // USkeletalMeshComponent*
		constexpr auto SK_Horse_Bristle_01 = 0x5e0; // USkeletalMeshComponent*
		constexpr auto Groom1 = 0x5e8; // UGroomComponent*
		constexpr auto Groom = 0x5f0; // UGroomComponent*
		constexpr auto SK_Horse_FS_Saddle_05 = 0x5f8; // USkeletalMeshComponent*
		constexpr auto Pants = 0x600; // USkeletalMeshComponent*
		constexpr auto Shirt = 0x608; // USkeletalMeshComponent*
		constexpr auto Helmet = 0x610; // USkeletalMeshComponent*
		constexpr auto Human = 0x618; // USkeletalMeshComponent*
		constexpr auto PreviewAnimPosition = 0x620; // float
	}

	namespace n_UAchievementConditionUint8Widget {
		constexpr auto ProgressCanvas = 0x288; // UCanvasPanel*
		constexpr auto PbProgress = 0x290; // UProgressBar*
		constexpr auto TbProgress = 0x298; // UTextBlock*
		constexpr auto TbTotalProgress = 0x2a0; // UTextBlock*
	}

	namespace n_UGuanAiRowSlot {
		constexpr auto GuanAiNameText = 0x2d8; // UTextBlock*
		constexpr auto GuanAiImage = 0x2e0; // UImage*
		constexpr auto BtnEntry = 0x2e8; // UButton*
		constexpr auto TbEntry = 0x2f0; // UTextBlock*
		constexpr auto GuanAiId = 0x2f8; // int32_t
		constexpr auto BtnEntryState = 0x2fc; // int32_t
	}

	namespace n_UUI_GlobalMap {
		constexpr auto EnterServerConfirmationDialogClass = 0x2d8; // UUI_GenericConfirmationDialog*
		constexpr auto HelpSlotClass = 0x2e0; // UHelpTipsSlot*
		constexpr auto HelpTips = 0x2e8; // FHelpTips
		constexpr auto HelpTipsSlotPadding = 0x300; // FVector4
		constexpr auto GlobalMapCameraTemplate = 0x310; // AGlobalMapCameraActor*
		constexpr auto UGPGlobalMapFilter = 0x318; // UUniformGridPanel*
		constexpr auto JunDetail = 0x320; // UJunDetailWidget*
		constexpr auto EventServer = 0x328; // UUI_MapList*
		constexpr auto BtnFastEnter = 0x330; // UButton*
		constexpr auto BtnRefresh = 0x338; // UButton*
		constexpr auto BtnReturnToLobby = 0x340; // UButton*
		constexpr auto TbFastEnterServer = 0x348; // UTextBlock*
		constexpr auto BtnServerList = 0x350; // UButton*
		constexpr auto HbHelpTips = 0x358; // UHorizontalBox*
		constexpr auto XianChengLenovoQueryBox = 0x360; // ULenovoQueryBox*
		constexpr auto CameraActiveArea = 0x368; // UGlobalMapCameraActiveArea*
		constexpr auto JunSelector = 0x370; // UJunSelectorWidget*
		constexpr auto SelectJunActor = 0x378; // AGlobalMapActor*
		constexpr auto InitSelectServerInfoIndex = 0x380; // int32_t
		constexpr auto LastRefreshTime = 0x388; // FDateTime
		constexpr auto MousePosition = 0x390; // FVector2D
		constexpr auto SGPlayerController = 0x398; // ASGPlayerController*
		constexpr auto XianChengOptions = 0x3a0; // TArray<FGlobalMapXianChengOption>
		constexpr auto CurrentToolTipGlobalMapActor = 0x3b0; // AGlobalMapActor*
		constexpr auto CurrentGlobalMapGroupToolTips = 0x3b8; // TMap<int32_t, FGlobalMapActorTipsDataArray>
		constexpr auto CurrentGlobalMapGroupStableToolTips = 0x408; // TMap<int32_t, FGlobalMapActorTipsDataArray>
	}

	namespace n_UUI_MainMail {
		constexpr auto VerticalBox_MailList = 0x2d8; // UVerticalBox*
		constexpr auto btn_last_page = 0x2e0; // UButton*
		constexpr auto btn_next_page = 0x2e8; // UButton*
		constexpr auto Text_page = 0x2f0; // UTextBlock*
		constexpr auto btn_delallread = 0x2f8; // UButton*
		constexpr auto btn_getallattach = 0x300; // UButton*
		constexpr auto MailDetails = 0x308; // UUI_MailDetails*
		constexpr auto OneMailTemplate = 0x310; // UUI_OneMail*
		constexpr auto PageSize = 0x318; // int8_t
		constexpr auto OneMailSlotPadding = 0x31c; // FMargin
		constexpr auto OneMailSlotSize = 0x32c; // FSlateChildSize
	}

	namespace n_APartyBeaconClient {
		constexpr auto DestSessionId = 0x3d0; // FString
		constexpr auto PendingReservation = 0x3e0; // FPartyReservation
		constexpr auto RequestType = 0x430; // EClientRequestType
		constexpr auto bPendingReservationSent = 0x431; // bool
		constexpr auto bCancelReservation = 0x432; // bool
	}

	namespace n_UPawnAction_Repeat {
		constexpr auto ActionToRepeat = 0x98; // UPawnAction*
		constexpr auto RecentActionCopy = 0xa0; // UPawnAction*
		constexpr auto ChildFailureHandlingMode = 0xa8; // EPawnActionFailHandling
	}

	namespace n_ASGStructureOre {
		constexpr auto CurrentOreDensityData = 0xb98; // TArray<FCurrentOreInfoData>
		constexpr auto ChangeMeshHPPer = 0xba8; // float
		constexpr auto LowHPStaticMesh = 0xbb0; // UStaticMesh*
		constexpr auto NoOreFactoryDecayMulti = 0xbb8; // float
		constexpr auto bNoAnyOre = 0xbbc; // char : 1
		constexpr auto bSpawnInClient = 0xbbc; // char : 1
	}

	namespace n_UUpdateAnimInstance_AnimNotify {
		constexpr auto Enum_AnimalsStanceType = 0x38; // EAnimalsStanceType
	}

	namespace n_UMaterialExpressionCeil {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UGlobalMap_ServerItemTips {
		constexpr auto GuildIconMat = 0x288; // UMaterialInterface*
		constexpr auto WorshipItemTemplate = 0x290; // UGlobalMap_WorshipItem*
		constexpr auto MinRequestTime = 0x298; // float
		constexpr auto ImgGuildIcon = 0x2a0; // UImage*
		constexpr auto TbXianChengName = 0x2a8; // UTextBlock*
		constexpr auto VbOccupyInfo = 0x2b0; // UVerticalBox*
		constexpr auto TbGuildName = 0x2b8; // UTextBlock*
		constexpr auto TbGuildOwnerName = 0x2c0; // UTextBlock*
		constexpr auto TbGuildOwnerJob = 0x2c8; // UTextBlock*
		constexpr auto TbGuildLevel = 0x2d0; // UTextBlock*
		constexpr auto TbMemberNum = 0x2d8; // UTextBlock*
		constexpr auto TbOccupyGuanAiNum = 0x2e0; // UTextBlock*
		constexpr auto TbOccupyCityNum = 0x2e8; // UTextBlock*
		constexpr auto TbOccupyXianChengNum = 0x2f0; // UTextBlock*
		constexpr auto TbNoWorship = 0x2f8; // UTextBlock*
		constexpr auto UGPWorship = 0x300; // UUniformGridPanel*
		constexpr auto TbTotalTaxRate = 0x308; // UTextBlock*
		constexpr auto TbTaxRate = 0x310; // UTextBlock*
		constexpr auto LoadingCanvas = 0x318; // UCanvasPanel*
		constexpr auto DynamicGuildIconInstance = 0x378; // UMaterialInstanceDynamic*
		constexpr auto ServerItem = 0x380; // UGlobalMap_ServerItem*
		constexpr auto WorshipItems = 0x388; // TArray<UGlobalMap_WorshipItem*>
	}

	namespace n_UWBP_ScalabilityIntItem_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox = 0x2e8; // UHorizontalBox*
		constexpr auto SettingComboBox = 0x2f0; // UComboBoxString*
		constexpr auto TbTitle = 0x2f8; // UTextBlock*
		constexpr auto TbVariableValue = 0x300; // UTextBlock*
	}

	namespace n_UAnimalFarmDropSlot {
		constexpr auto OutBorder_NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutBorder_HoverTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto ImgIcon = 0x2b0; // UImage*
		constexpr auto NumText = 0x2b8; // UTextBlock*
		constexpr auto OutBorder = 0x2c0; // UBorder*
		constexpr auto BindDropItem = 0x2c8; // TWeakObjectPtr<USGItem>
		constexpr auto BindInventoryComponent = 0x2d0; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto RootSGUI = 0x2d8; // USGUI*
		constexpr auto IsHover = 0x2e0; // char : 1
	}

	namespace n_ASceneCapture2D {
		constexpr auto CaptureComponent2D = 0x320; // USceneCaptureComponent2D*
	}

	namespace n_UGameplayCueSet {
		constexpr auto GameplayCueData = 0x30; // TArray<FGameplayCueNotifyData>
	}

	namespace n_UWheeledVehicleMovementComponent4W {
		constexpr auto EngineSetup = 0x2a0; // FVehicleEngineData
		constexpr auto DifferentialSetup = 0x340; // FVehicleDifferential4WData
		constexpr auto AckermannAccuracy = 0x35c; // float
		constexpr auto TransmissionSetup = 0x360; // FVehicleTransmissionData
		constexpr auto SteeringCurve = 0x390; // FRuntimeFloatCurve
	}

	namespace n_AGameplayAbilityTargetActor_Radius {
		constexpr auto Radius = 0x428; // float
	}

	namespace n_UInterpTrackInstFloatProp {
		constexpr auto ResetFloat = 0x58; // float
	}

	namespace n_UParticleModuleTypeDataRibbon {
		constexpr auto MaxTessellationBetweenParticles = 0x30; // int32_t
		constexpr auto SheetsPerTrail = 0x34; // int32_t
		constexpr auto MaxTrailCount = 0x38; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x3c; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x40; // char : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x40; // char : 1
		constexpr auto bClipSourceSegement = 0x40; // char : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x40; // char : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x40; // char : 1
		constexpr auto bSpawnInitialParticle = 0x40; // char : 1
		constexpr auto RenderAxis = 0x44; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x48; // float
		constexpr auto bRenderGeometry = 0x4c; // char : 1
		constexpr auto bRenderSpawnPoints = 0x4c; // char : 1
		constexpr auto bRenderTangents = 0x4c; // char : 1
		constexpr auto bRenderTessellation = 0x4c; // char : 1
		constexpr auto TilingDistance = 0x50; // float
		constexpr auto DistanceTessellationStepSize = 0x54; // float
		constexpr auto bEnableTangentDiffInterpScale = 0x58; // char : 1
		constexpr auto TangentTessellationScalar = 0x5c; // float
	}

	namespace n_USortableTitleSlot {
		constexpr auto IconImage = 0x260; // UImage*
		constexpr auto SortAscButton = 0x268; // UButton*
		constexpr auto SortDescButton = 0x270; // UButton*
		constexpr auto SortBtnCanvasPanel = 0x278; // UCanvasPanel*
		constexpr auto TipsDataButton = 0x280; // UDataButton*
		constexpr auto TitleText = 0x288; // FText
		constexpr auto bShowSortBtn = 0x2a0; // bool
		constexpr auto bOverride_TextColorOverride = 0x2a1; // char : 1
		constexpr auto TextColorOverride = 0x2a8; // FSlateColor
		constexpr auto IconTexture = 0x2d0; // TSoftObjectPtr<UTexture2D>
		constexpr auto ButtonTipWidgetTemplate = 0x2f8; // USGToolTipWidget*
	}

	namespace n_UBTTask_ClearInput {
		constexpr auto bFinishedTask = 0xc0; // char : 1
	}

	namespace n_UUI_CreateGuildConfirm {
		constexpr auto LanguageComboBox = 0x3e8; // UGuildAuthorityComboBox*
		constexpr auto StructureAuthComboBox = 0x3f0; // UGuildAuthorityComboBox*
	}

	namespace n_USGItemToolTipWidget {
		constexpr auto ItemIconName = 0x288; // FName
		constexpr auto ItemNameTextblockName = 0x290; // FName
		constexpr auto ItemQualityTextblockName = 0x298; // FName
		constexpr auto ItemQualityCanvasName = 0x2a0; // FName
		constexpr auto WeaponTypeCanvasName = 0x2a8; // FName
		constexpr auto WeaponTypeTextblockName = 0x2b0; // FName
		constexpr auto BaseVerticalBoxName = 0x2b8; // FName
		constexpr auto AdditionalVerticalBoxName = 0x2c0; // FName
		constexpr auto DescriptionTipsItemName = 0x2c8; // FName
		constexpr auto ItemStatInfoName = 0x2d0; // FName
		constexpr auto CraftPanelName = 0x2d8; // FName
		constexpr auto CraftRequirementsListName = 0x2e0; // FName
		constexpr auto ItemInfoPanelName = 0x2e8; // FName
		constexpr auto CraftingTitleLabelName = 0x2f0; // FName
		constexpr auto bUseNew = 0x358; // char : 1
	}

	namespace n_UWidgetComponent {
		constexpr auto Space = 0x4b0; // EWidgetSpace
		constexpr auto TimingPolicy = 0x4b1; // EWidgetTimingPolicy
		constexpr auto WidgetClass = 0x4b8; // UUserWidget*
		constexpr auto DrawSize = 0x4c0; // FIntPoint
		constexpr auto bManuallyRedraw = 0x4c8; // bool
		constexpr auto bRedrawRequested = 0x4c9; // bool
		constexpr auto RedrawTime = 0x4cc; // float
		constexpr auto CurrentDrawSize = 0x4d8; // FIntPoint
		constexpr auto bDrawAtDesiredSize = 0x4e0; // bool
		constexpr auto Pivot = 0x4e4; // FVector2D
		constexpr auto bReceiveHardwareInput = 0x4ec; // bool
		constexpr auto bWindowFocusable = 0x4ed; // bool
		constexpr auto WindowVisibility = 0x4ee; // EWindowVisibility
		constexpr auto bApplyGammaCorrection = 0x4ef; // bool
		constexpr auto OwnerPlayer = 0x4f0; // ULocalPlayer*
		constexpr auto BackgroundColor = 0x4f8; // FLinearColor
		constexpr auto TintColorAndOpacity = 0x508; // FLinearColor
		constexpr auto OpacityFromTexture = 0x518; // float
		constexpr auto BlendMode = 0x51c; // EWidgetBlendMode
		constexpr auto bIsTwoSided = 0x51d; // bool
		constexpr auto TickWhenOffscreen = 0x51e; // bool
		constexpr auto BodySetup = 0x520; // UBodySetup*
		constexpr auto TranslucentMaterial = 0x528; // UMaterialInterface*
		constexpr auto TranslucentMaterial_OneSided = 0x530; // UMaterialInterface*
		constexpr auto OpaqueMaterial = 0x538; // UMaterialInterface*
		constexpr auto OpaqueMaterial_OneSided = 0x540; // UMaterialInterface*
		constexpr auto MaskedMaterial = 0x548; // UMaterialInterface*
		constexpr auto MaskedMaterial_OneSided = 0x550; // UMaterialInterface*
		constexpr auto RenderTarget = 0x558; // UTextureRenderTarget2D*
		constexpr auto MaterialInstance = 0x560; // UMaterialInstanceDynamic*
		constexpr auto bAddedToScreen = 0x568; // bool
		constexpr auto bEditTimeUsable = 0x569; // bool
		constexpr auto SharedLayerName = 0x56c; // FName
		constexpr auto LayerZOrder = 0x574; // int32_t
		constexpr auto GeometryMode = 0x578; // EWidgetGeometryMode
		constexpr auto CylinderArcAngle = 0x57c; // float
		constexpr auto TickMode = 0x580; // ETickMode
		constexpr auto Widget = 0x5a8; // UUserWidget*
	}

	namespace n_ULevelSequence {
		constexpr auto MovieScene = 0x68; // UMovieScene*
		constexpr auto ObjectReferences = 0x70; // FLevelSequenceObjectReferenceMap
		constexpr auto BindingReferences = 0xc0; // FLevelSequenceBindingReferences
		constexpr auto PossessedObjects = 0x160; // TMap<FString, FLevelSequenceObject>
		constexpr auto DirectorClass = 0x1b0; // UObject*
		constexpr auto AssetUserData = 0x1b8; // TArray<UAssetUserData*>
	}

	namespace n_UGizmoLocalFloatParameterSource {
		constexpr auto Value = 0x48; // float
		constexpr auto LastChange = 0x4c; // FGizmoFloatParameterChange
	}

	namespace n_UColorTemplate {
		constexpr auto BtnBg = 0x260; // UButton*
		constexpr auto ImgColor = 0x268; // UImage*
		constexpr auto BindColor = 0x270; // FVector2D
	}

	namespace n_UUI_TrafficGoods {
		constexpr auto MenuNameText = 0x2d8; // UTextBlock*
		constexpr auto RefreshTimeText = 0x2e0; // UTextBlock*
		constexpr auto RefreshCapitalTimeText = 0x2e8; // UTextBlock*
		constexpr auto RefreshPriceRatioTimeText = 0x2f0; // UTextBlock*
		constexpr auto MainGridPannel = 0x2f8; // UUniformGridPanel*
		constexpr auto LeftPageButton = 0x300; // UButton*
		constexpr auto PageText = 0x308; // UTextBlock*
		constexpr auto RightPageButton = 0x310; // UButton*
		constexpr auto OwnerCapitalNumText = 0x318; // UTextBlock*
		constexpr auto ButtonCancel = 0x320; // UButton*
		constexpr auto CancelText = 0x328; // UTextBlock*
		constexpr auto ConfirmText = 0x330; // UTextBlock*
		constexpr auto ButtonConfirm = 0x338; // UButton*
		constexpr auto TrafficGoodsSlotClass = 0x340; // UUI_TrafficGoodsSlot*
	}

	namespace n_UBTTask_MakeNoise {
		constexpr auto Loudnes = 0x70; // float
	}

	namespace n_UAISenseConfig {
		constexpr auto DebugColor = 0x28; // FColor
		constexpr auto MaxAge = 0x2c; // float
		constexpr auto bStartsEnabled = 0x30; // char : 1
	}

	namespace n_UUI_AlliancePower {
		constexpr auto AlliancePowerGroupSlotClass = 0x2d8; // UAlliancePowerGroupSlot*
		constexpr auto GroupSlotBox = 0x2e0; // UVerticalBox*
		constexpr auto GroupSlotPadding = 0x2e8; // FMargin
		constexpr auto GroupConfig = 0x2f8; // FAlliancePowerGroupConfig [0x7]
	}

	namespace n_UAnimationAsset {
		constexpr auto Skeleton = 0x38; // USkeleton*
		constexpr auto MetaData = 0x60; // TArray<UAnimMetaData*>
		constexpr auto AssetUserData = 0x70; // TArray<UAssetUserData*>
	}

	namespace n_UParticleModuleCollisionGPU {
		constexpr auto Resilience = 0x30; // FRawDistributionFloat
		constexpr auto ResilienceScaleOverLife = 0x60; // FRawDistributionFloat
		constexpr auto Friction = 0x90; // float
		constexpr auto RandomSpread = 0x94; // float
		constexpr auto RandomDistribution = 0x98; // float
		constexpr auto RadiusScale = 0x9c; // float
		constexpr auto RadiusBias = 0xa0; // float
		constexpr auto Response = 0xa4; // EParticleCollisionResponse
		constexpr auto CollisionMode = 0xa5; // EParticleCollisionMode
	}

	namespace n_UMeshSpaceDeformerTool {
		constexpr auto SelectedOperationType = 0xc0; // ENonlinearOperationType
		constexpr auto UpperBoundsInterval = 0xc4; // float
		constexpr auto LowerBoundsInterval = 0xc8; // float
		constexpr auto ModifierPercent = 0xcc; // float
		constexpr auto bSnapToWorldGrid = 0xd0; // bool
		constexpr auto StateTarget = 0xd8; // UGizmoTransformChangeStateTarget*
		constexpr auto Preview = 0xe8; // UMeshOpPreviewWithBackgroundCompute*
		constexpr auto GizmoCenter = 0x110; // FVector
		constexpr auto GizmoOrientation = 0x120; // FQuat
		constexpr auto IntervalGizmo = 0x130; // UIntervalGizmo*
		constexpr auto TransformGizmo = 0x138; // UTransformGizmo*
		constexpr auto TransformProxy = 0x140; // UTransformProxy*
		constexpr auto UpIntervalSource = 0x148; // UGizmoLocalFloatParameterSource*
		constexpr auto DownIntervalSource = 0x150; // UGizmoLocalFloatParameterSource*
		constexpr auto ForwardIntervalSource = 0x158; // UGizmoLocalFloatParameterSource*
	}

	namespace n_UGeneralShortCutSlot {
		constexpr auto ShortCutText = 0x260; // FText
		constexpr auto KeyName = 0x278; // FName
		constexpr auto GeneralShortCutSlotType = 0x280; // EGeneralShortCutSlotType
		constexpr auto ChildGeneralShortCutPanelTemplate = 0x288; // UGeneralShortCutPanel*
		constexpr auto bClickedRemoveFromParent = 0x290; // char : 1
		constexpr auto ShortCutBrush = 0x298; // FSlateBrush [0x1c]
		constexpr auto ShowStateImage = 0x1178; // UImage*
		constexpr auto TbKey = 0x1180; // UTextBlock*
		constexpr auto ShortCutTextBlock = 0x1188; // UTextBlock*
		constexpr auto TbDifferent = 0x1190; // UTextBlock*
		constexpr auto ShortCutImg = 0x1198; // UImage*
		constexpr auto bIsClicked = 0x11a8; // char : 1
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter {
		constexpr auto DefaultR = 0x58; // char : 1
		constexpr auto DefaultG = 0x58; // char : 1
		constexpr auto DefaultB = 0x58; // char : 1
		constexpr auto DefaultA = 0x58; // char : 1
	}

	namespace n_URendererOverrideSettings {
		constexpr auto bSupportAllShaderPermutations = 0x38; // char : 1
		constexpr auto bForceRecomputeTangents = 0x38; // char : 1
	}

	namespace n_UAnimComposite {
		constexpr auto AnimationTrack = 0xa8; // FAnimTrack
	}

	namespace n_USkeletalMeshSimplificationSettings {
		constexpr auto SkeletalMeshReductionModuleName = 0x38; // FName
	}

	namespace n_USubmixEffectMultibandCompressorPreset {
		constexpr auto Settings = 0xb0; // FSubmixEffectMultibandCompressorSettings
	}

	namespace n_UAISystem {
		constexpr auto PerceptionSystemClassName = 0x58; // FSoftClassPath
		constexpr auto HotSpotManagerClassName = 0x70; // FSoftClassPath
		constexpr auto AcceptanceRadius = 0x88; // float
		constexpr auto PathfollowingRegularPathPointAcceptanceRadius = 0x8c; // float
		constexpr auto PathfollowingNavLinkAcceptanceRadius = 0x90; // float
		constexpr auto bFinishMoveOnGoalOverlap = 0x94; // bool
		constexpr auto bAcceptPartialPaths = 0x95; // bool
		constexpr auto bAllowStrafing = 0x96; // bool
		constexpr auto bEnableBTAITasks = 0x97; // bool
		constexpr auto bAllowControllersAsEQSQuerier = 0x98; // bool
		constexpr auto bEnableDebuggerPlugin = 0x99; // bool
		constexpr auto bForgetStaleActors = 0x9a; // bool
		constexpr auto bAddBlackboardSelfKey = 0x9b; // bool
		constexpr auto DefaultSightCollisionChannel = 0x9c; // ECollisionChannel
		constexpr auto BehaviorTreeManager = 0xa0; // UBehaviorTreeManager*
		constexpr auto EnvironmentQueryManager = 0xa8; // UEnvQueryManager*
		constexpr auto PerceptionSystem = 0xb0; // UAIPerceptionSystem*
		constexpr auto AllProxyObjects = 0xb8; // TArray<UAIAsyncTaskBlueprintProxy*>
		constexpr auto HotSpotManager = 0xc8; // UAIHotSpotManager*
		constexpr auto NavLocalGrids = 0xd0; // UNavLocalGridManager*
	}

	namespace n_UMovieSceneSequenceTickManager {
		constexpr auto SequenceActors = 0x28; // TArray<AActor*>
		constexpr auto Linker = 0x38; // UMovieSceneEntitySystemLinker*
	}

	namespace n_ULevelUpAnimationNotifyWidget {
		constexpr auto BackImg = 0x278; // UImage*
		constexpr auto LevelNum = 0x280; // UTextBlock*
		constexpr auto LevelUpAnim = 0x288; // UWidgetAnimation*
		constexpr auto LevelUpInfoCol = 0x290; // ULevelUpColWidget*
		constexpr auto PerkPointCol = 0x298; // ULevelUpColWidget*
		constexpr auto MasteryPointCol = 0x2a0; // ULevelUpColWidget*
		constexpr auto CraftPointCol = 0x2a8; // ULevelUpColWidget*
		constexpr auto AnimPlaySpeed = 0x2b0; // float
	}

	namespace n_UMeshInspectorTool {
		constexpr auto Settings = 0x88; // UMeshInspectorProperties*
		constexpr auto MaterialSettings = 0x90; // UExistingMeshMaterialProperties*
		constexpr auto PreviewMesh = 0xa0; // UPreviewMesh*
		constexpr auto DrawnLineSet = 0xa8; // ULineSetComponent*
		constexpr auto DefaultMaterial = 0xb0; // UMaterialInterface*
	}

	namespace n_UComboBoxString {
		constexpr auto DefaultOptions = 0x108; // TArray<FString>
		constexpr auto SelectedOption = 0x118; // FString
		constexpr auto WidgetStyle = 0x128; // FComboBoxStyle
		constexpr auto ItemStyle = 0x518; // FTableRowStyle
		constexpr auto ContentPadding = 0xce0; // FMargin
		constexpr auto ItemPadding = 0xcf0; // FMargin
		constexpr auto TextJustification = 0xd00; // ETextJustify
		constexpr auto MaxListHeight = 0xd04; // float
		constexpr auto HasDownArrow = 0xd08; // bool
		constexpr auto EnableGamepadNavigationMode = 0xd09; // bool
		constexpr auto Font = 0xd10; // FSlateFontInfo
		constexpr auto ForegroundColor = 0xd68; // FSlateColor
		constexpr auto bIsFocusable = 0xd90; // bool
		constexpr auto OnGenerateWidgetEvent = 0xd94; // FDelegate
		constexpr auto OnSelectionChanged = 0xda8; // FMulticastInlineDelegate
		constexpr auto OnOpening = 0xdb8; // FMulticastInlineDelegate
	}

	namespace n_UCableComponent {
		constexpr auto bAttachStart = 0x4b0; // bool
		constexpr auto bAttachEnd = 0x4b1; // bool
		constexpr auto AttachEndTo = 0x4b8; // FComponentReference
		constexpr auto AttachEndToSocketName = 0x4e0; // FName
		constexpr auto EndLocation = 0x4e8; // FVector
		constexpr auto CableLength = 0x4f4; // float
		constexpr auto NumSegments = 0x4f8; // int32_t
		constexpr auto SubstepTime = 0x4fc; // float
		constexpr auto SolverIterations = 0x500; // int32_t
		constexpr auto bEnableStiffness = 0x504; // bool
		constexpr auto bUseSubstepping = 0x505; // bool
		constexpr auto bSkipCableUpdateWhenNotVisible = 0x506; // bool
		constexpr auto bSkipCableUpdateWhenNotOwnerRecentlyRendered = 0x507; // bool
		constexpr auto bEnableCollision = 0x508; // bool
		constexpr auto CollisionFriction = 0x50c; // float
		constexpr auto CableForce = 0x510; // FVector
		constexpr auto CableGravityScale = 0x51c; // float
		constexpr auto CableWidth = 0x520; // float
		constexpr auto NumSides = 0x524; // int32_t
		constexpr auto TileMaterial = 0x528; // float
	}

	namespace n_UGuildKPISlot {
		constexpr auto BGBorder = 0x260; // UBorder*
		constexpr auto NameText = 0x268; // UTextBlock*
		constexpr auto LevelText = 0x270; // UTextBlock*
		constexpr auto TitleText = 0x278; // UTextBlock*
		constexpr auto ItemImage1 = 0x280; // UGuildKPIItemImageSlot*
		constexpr auto ItemNeedText1 = 0x288; // UTextBlock*
		constexpr auto SettingButton1 = 0x290; // UButton*
		constexpr auto ItemImage2 = 0x298; // UGuildKPIItemImageSlot*
		constexpr auto ItemNeedText2 = 0x2a0; // UTextBlock*
		constexpr auto SettingButton2 = 0x2a8; // UButton*
		constexpr auto ItemImage3 = 0x2b0; // UGuildKPIItemImageSlot*
		constexpr auto ItemNeedText3 = 0x2b8; // UTextBlock*
		constexpr auto SettingButton3 = 0x2c0; // UButton*
		constexpr auto ItemImage4 = 0x2c8; // UGuildKPIItemImageSlot*
		constexpr auto ItemNeedText4 = 0x2d0; // UTextBlock*
		constexpr auto SettingButton4 = 0x2d8; // UButton*
		constexpr auto ItemImage5 = 0x2e0; // UGuildKPIItemImageSlot*
		constexpr auto ItemNeedText5 = 0x2e8; // UTextBlock*
		constexpr auto SettingButton5 = 0x2f0; // UButton*
		constexpr auto DepotLevelComboBox = 0x2f8; // UGuildAuthorityComboBox*
		constexpr auto TotalPointText = 0x300; // UTextBlock*
		constexpr auto CopyButton = 0x308; // UDataButton*
		constexpr auto PasteButton = 0x310; // UDataButton*
		constexpr auto ClearButton = 0x318; // UDataButton*
		constexpr auto LogButton = 0x320; // UDataButton*
		constexpr auto NormalBGTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto SelectBGTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto ButtonTipWidgetTemplate = 0x378; // USGToolTipWidget*
		constexpr auto CopyButtonTips = 0x380; // FText
		constexpr auto PasteButtonTips = 0x398; // FText
		constexpr auto ClearButtonTips = 0x3b0; // FText
		constexpr auto LogButtonTips = 0x3c8; // FText
	}

	namespace n_UStableTrainerSlot {
		constexpr auto TrainerQualityTexture = 0x260; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto TrainerSpecialTypeTexture = 0x350; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto TrainerQualityBG = 0x3f0; // UImage*
		constexpr auto TrainerSpecialTypeBG = 0x3f8; // UImage*
		constexpr auto TrainerIconImg = 0x400; // UImage*
		constexpr auto StopWorkBtn = 0x408; // UButton*
		constexpr auto TrainerStatusText = 0x410; // UTextBlock*
		constexpr auto TrainerNameText = 0x418; // UTextBlock*
		constexpr auto TrainerLevelText = 0x420; // UTextBlock*
		constexpr auto TrainerLifeCountText = 0x428; // UTextBlock*
		constexpr auto TrainerTameSkillExpText = 0x430; // UTextBlock*
		constexpr auto WorkRemainTimePB = 0x438; // UProgressBar*
		constexpr auto TrainerWorkTimeText = 0x440; // UTextBlock*
		constexpr auto StopRestBtn = 0x448; // UButton*
	}

	namespace n_AProceduralFoliageBlockingVolume {
		constexpr auto ProceduralFoliageVolumes = 0x348; // TArray<AProceduralFoliageVolume*>
	}

	namespace n_UStereoLayerComponent {
		constexpr auto bLiveTexture = 0x208; // char : 1
		constexpr auto bSupportsDepth = 0x208; // char : 1
		constexpr auto bNoAlphaChannel = 0x208; // char : 1
		constexpr auto Texture = 0x210; // UTexture*
		constexpr auto LeftTexture = 0x218; // UTexture*
		constexpr auto bQuadPreserveTextureRatio = 0x220; // char : 1
		constexpr auto QuadSize = 0x224; // FVector2D
		constexpr auto UVRect = 0x22c; // FBox2D
		constexpr auto CylinderRadius = 0x240; // float
		constexpr auto CylinderOverlayArc = 0x244; // float
		constexpr auto CylinderHeight = 0x248; // int32_t
		constexpr auto EquirectProps = 0x24c; // FEquirectProps
		constexpr auto StereoLayerType = 0x294; // EStereoLayerType
		constexpr auto StereoLayerShape = 0x295; // EStereoLayerShape
		constexpr auto Shape = 0x298; // UStereoLayerShape*
		constexpr auto Priority = 0x2a0; // int32_t
	}

	namespace n_UN_SplitItemPanel {
		constexpr auto ItemName = 0x260; // UTextBlock*
		constexpr auto OperationText = 0x268; // UTextBlock*
		constexpr auto OperationAmountText = 0x270; // UEditableText*
		constexpr auto AddButton = 0x278; // UButton*
		constexpr auto ReduceButton = 0x280; // UButton*
		constexpr auto OperationSlider = 0x288; // USlider*
		constexpr auto AcceptButton = 0x290; // UButton*
		constexpr auto CancelButton = 0x298; // UButton*
		constexpr auto BindItem = 0x2a0; // TWeakObjectPtr<USGItem>
		constexpr auto SourceInventoryType = 0x2a8; // EInventoryTypes
		constexpr auto InventoryType = 0x2a9; // EInventoryTypes
		constexpr auto CraftNum = 0x2b4; // int32_t
		constexpr auto SplitText = 0x2b8; // FText
		constexpr auto CraftText = 0x2d0; // FText
		constexpr auto WidgetOffset = 0x2e8; // FVector2D
		constexpr auto SplitType = 0x2f0; // ESplitUIType
		constexpr auto RecordTransportItemInventoyType = 0x2f1; // EInventoryTypes
		constexpr auto RecordSplitNum = 0x2f4; // int32_t
	}

	namespace n_AGeometryCollectionRenderLevelSetActor {
		constexpr auto TargetVolumeTexture = 0x310; // UVolumeTexture*
		constexpr auto RayMarchMaterial = 0x318; // UMaterial*
		constexpr auto SurfaceTolerance = 0x320; // float
		constexpr auto Isovalue = 0x324; // float
		constexpr auto Enabled = 0x328; // bool
		constexpr auto RenderVolumeBoundingBox = 0x329; // bool
	}

	namespace n_UEditableGameplayTagQueryExpression_AllTagsMatch {
		constexpr auto Tags = 0x28; // FGameplayTagContainer
	}

	namespace n_UGroupEdgeInsertionOperatorFactory {
		constexpr auto Tool = 0x30; // UGroupEdgeInsertionTool*
	}

	namespace n_UDatasmithStaticMeshComponentTemplate {
		constexpr auto StaticMesh = 0x30; // UStaticMesh*
		constexpr auto OverrideMaterials = 0x38; // TArray<UMaterialInterface*>
	}

	namespace n_UGroomImportOptions {
		constexpr auto ConversionSettings = 0x28; // FGroomConversionSettings
		constexpr auto InterpolationSettings = 0x40; // TArray<FHairGroupsInterpolation>
	}

	namespace n_UAppleImageUtilsBaseAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
		constexpr auto ConversionResult = 0x60; // FAppleImageUtilsImageConversionResult
	}

	namespace n_UMaterialExpressionSetMaterialAttributes {
		constexpr auto Inputs = 0x40; // TArray<FExpressionInput>
		constexpr auto AttributeSetTypes = 0x50; // TArray<FGuid>
	}

	namespace n_UCameraAnim {
		constexpr auto CameraInterpGroup = 0x28; // UInterpGroup*
		constexpr auto AnimLength = 0x30; // float
		constexpr auto BoundingBox = 0x34; // FBox
		constexpr auto bRelativeToInitialTransform = 0x50; // char : 1
		constexpr auto bRelativeToInitialFOV = 0x50; // char : 1
		constexpr auto BaseFOV = 0x54; // float
		constexpr auto BasePostProcessSettings = 0x60; // FPostProcessSettings
		constexpr auto BasePostProcessBlendWeight = 0x5c0; // float
	}

	namespace n_UBaseMeshProcessingTool {
		constexpr auto Preview = 0xb0; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UAIAsyncTaskBlueprintProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFail = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UEnvQueryTest_GameplayTags {
		constexpr auto TagQueryToMatch = 0x1f8; // FGameplayTagQuery
		constexpr auto bUpdatedToUseQuery = 0x240; // bool
		constexpr auto TagsToMatch = 0x241; // EGameplayContainerMatchType
		constexpr auto GameplayTags = 0x248; // FGameplayTagContainer
	}

	namespace n_UGuildImageSlot {
		constexpr auto MaterialImage = 0x2d8; // UImage*
		constexpr auto GuildImageMaterialSerializerClass = 0x2e0; // UGuildImageMaterialSerializer*
		constexpr auto GuildImageMaterialSerializer = 0x2e8; // UGuildImageMaterialSerializer*
	}

	namespace n_UScrollBox {
		constexpr auto WidgetStyle = 0x120; // FScrollBoxStyle
		constexpr auto WidgetBarStyle = 0x348; // FScrollBarStyle
		constexpr auto Style = 0x818; // USlateWidgetStyleAsset*
		constexpr auto BarStyle = 0x820; // USlateWidgetStyleAsset*
		constexpr auto Orientation = 0x828; // EOrientation
		constexpr auto ScrollBarVisibility = 0x829; // ESlateVisibility
		constexpr auto ConsumeMouseWheel = 0x82a; // EConsumeMouseWheel
		constexpr auto ScrollbarThickness = 0x82c; // FVector2D
		constexpr auto ScrollbarPadding = 0x834; // FMargin
		constexpr auto AlwaysShowScrollbar = 0x844; // bool
		constexpr auto AlwaysShowScrollbarTrack = 0x845; // bool
		constexpr auto AllowOverscroll = 0x846; // bool
		constexpr auto bAnimateWheelScrolling = 0x847; // bool
		constexpr auto NavigationDestination = 0x848; // EDescendantScrollDestination
		constexpr auto NavigationScrollPadding = 0x84c; // float
		constexpr auto ScrollWhenFocusChanges = 0x850; // EScrollWhenFocusChanges
		constexpr auto bAllowRightClickDragScrolling = 0x851; // bool
		constexpr auto WheelScrollMultiplier = 0x854; // float
		constexpr auto OnUserScrolled = 0x858; // FMulticastInlineDelegate
	}

	namespace n_UMasterySlot {
		constexpr auto MasteryBgTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto MasteryFgTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto ImgMasterySlot = 0x2b0; // UImage*
		constexpr auto bHighLighting = 0x2b8; // char : 1
	}

	namespace n_UMaterialExpression {
		constexpr auto Material = 0x28; // UMaterial*
		constexpr auto Function = 0x30; // UMaterialFunction*
		constexpr auto bIsParameterExpression = 0x38; // char : 1
	}

	namespace n_USculptMaxBrushProperties {
		constexpr auto MaxHeight = 0x60; // float
		constexpr auto bFreezeCurrentHeight = 0x64; // bool
	}

	namespace n_USGGameDataAllHorse {
		constexpr auto CheatVehicleNPC = 0x28; // TArray<ASG_AnimalsCharacter*>
	}

	namespace n_UMaterialExpressionViewProperty {
		constexpr auto Property = 0x40; // EMaterialExposedViewProperty
	}

	namespace n_UTexture2D {
		constexpr auto LevelIndex = 0xd8; // int32_t
		constexpr auto FirstResourceMemMip = 0xdc; // int32_t
		constexpr auto bTemporarilyDisableStreaming = 0xe0; // char : 1
		constexpr auto AddressX = 0xe1; // TextureAddress
		constexpr auto AddressY = 0xe2; // TextureAddress
		constexpr auto ImportedSize = 0xe4; // FIntPoint
	}

	namespace n_UGuildColorSlot {
		constexpr auto BGImage = 0x260; // UImage*
		constexpr auto ColorImage = 0x268; // UImage*
		constexpr auto JunNameText = 0x270; // UTextBlock*
		constexpr auto BGNormalTexture = 0x278; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGSelectTexture = 0x2a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NameSelectColor = 0x2c8; // FSlateColor
		constexpr auto NameNormalColor = 0x2f0; // FSlateColor
	}

	namespace n_UWorldComposition {
		constexpr auto TilesStreaming = 0x48; // TArray<ULevelStreaming*>
		constexpr auto TilesStreamingTimeThreshold = 0x58; // double
		constexpr auto bLoadAllTilesDuringCinematic = 0x60; // bool
		constexpr auto bRebaseOriginIn3DSpace = 0x61; // bool
		constexpr auto RebaseOriginDistance = 0x64; // float
	}

	namespace n_ASGStructureRespawn {
		constexpr auto TimerPrecision = 0xb98; // float
		constexpr auto SpawnClass = 0xba0; // ASGStructure*
		constexpr auto RespawnProtectRadius = 0xba8; // float
		constexpr auto RespawnTime = 0xbac; // int32_t
		constexpr auto SpawnDateTicks = 0xbb0; // int64_t
		constexpr auto StructurePtr = 0xbb8; // TWeakObjectPtr<ASGStructure>
	}

	namespace n_UPaperRuntimeSettings {
		constexpr auto bEnableSpriteAtlasGroups = 0x28; // bool
		constexpr auto bEnableTerrainSplineEditing = 0x29; // bool
		constexpr auto bResizeSpriteDataToMatchTextures = 0x2a; // bool
	}

	namespace n_UMeshAttributePaintTool {
		constexpr auto AttribProps = 0x200; // UMeshAttributePaintToolProperties*
	}

	namespace n_UBaseAIAttackState {
		constexpr auto DamageTypeClass = 0x28; // USGDamageType*
		constexpr auto Enum_DamageType = 0x30; // EDamageType
		constexpr auto StateDurationTime = 0x34; // float
		constexpr auto BeginStateTime = 0x38; // double
		constexpr auto bCanBeAbort = 0x40; // char : 1
		constexpr auto CurrentAttackMontage = 0x48; // UAnimMontage*
	}

	namespace n_UConditionPanelEditablePanel {
		constexpr auto LeftMasteryPointText = 0x260; // UTextBlock*
		constexpr auto LeftPointText = 0x268; // UTextBlock*
		constexpr auto ParentUI = 0x270; // UUserWidget*
	}

	namespace n_UInheritableComponentHandler {
		constexpr auto Records = 0x28; // TArray<FComponentOverrideRecord>
		constexpr auto UnnecessaryComponents = 0x38; // TArray<UActorComponent*>
	}

	namespace n_UParticleModuleLocationDirect {
		constexpr auto Location = 0x30; // FRawDistributionVector
		constexpr auto LocationOffset = 0x78; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xc0; // FRawDistributionVector
		constexpr auto Direction = 0x108; // FRawDistributionVector
	}

	namespace n_UNetReplicationGraphConnection {
		constexpr auto NetConnection = 0x28; // UNetConnection*
		constexpr auto DebugActor = 0x1d0; // AReplicationGraphDebugActor*
		constexpr auto LastGatherLocations = 0x1e8; // TArray<FLastLocationGatherInfo>
		constexpr auto ConnectionGraphNodes = 0x200; // TArray<UReplicationGraphNode*>
		constexpr auto TearOffNode = 0x210; // UReplicationGraphNode_TearOff_ForConnection*
	}

	namespace n_UNiagaraDataInterfaceWater {
		constexpr auto SourceBody = 0x38; // AWaterBody*
	}

	namespace n_APhysicsConstraintActor {
		constexpr auto ConstraintComp = 0x310; // UPhysicsConstraintComponent*
		constexpr auto ConstraintActor1 = 0x318; // AActor*
		constexpr auto ConstraintActor2 = 0x320; // AActor*
		constexpr auto bDisableCollision = 0x328; // char : 1
	}

	namespace n_USafeZoneSlot {
		constexpr auto bIsTitleSafe = 0x38; // bool
		constexpr auto SafeAreaScale = 0x3c; // FMargin
		constexpr auto HAlign = 0x4c; // EHorizontalAlignment
		constexpr auto VAlign = 0x4d; // EVerticalAlignment
		constexpr auto Padding = 0x50; // FMargin
	}

	namespace n_USystemSettingItem {
		constexpr auto SettingTipsTemplate = 0x260; // USystemSettingItemTips*
	}

	namespace n_UUI_SliderView {
		constexpr auto SliderValueChanged = 0x260; // FMulticastInlineDelegate
		constexpr auto Slider = 0x270; // USlider*
	}

	namespace n_UShaderPlatformQualitySettings {
		constexpr auto QualityOverrides = 0x28; // FMaterialQualityOverrides [0x4]
	}

	namespace n_UMaterialExpressionTextureSample {
		constexpr auto Coordinates = 0x48; // FExpressionInput
	}

	namespace n_AGameNetworkManager {
		constexpr auto BadPacketLossThreshold = 0x310; // float
		constexpr auto SeverePacketLossThreshold = 0x314; // float
		constexpr auto BadPingThreshold = 0x318; // int32_t
		constexpr auto SeverePingThreshold = 0x31c; // int32_t
		constexpr auto AdjustedNetSpeed = 0x320; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x328; // double
		constexpr auto TotalNetBandwidth = 0x330; // int32_t
		constexpr auto MinDynamicBandwidth = 0x334; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x338; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x33c; // char : 1
		constexpr auto bHasStandbyCheatTriggered = 0x33c; // char : 1
		constexpr auto StandbyRxCheatTime = 0x340; // float
		constexpr auto StandbyTxCheatTime = 0x344; // float
		constexpr auto PercentMissingForRxStandby = 0x348; // float
		constexpr auto PercentMissingForTxStandby = 0x34c; // float
		constexpr auto PercentForBadPing = 0x350; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x354; // float
		constexpr auto MoveRepSize = 0x358; // float
		constexpr auto MAXPOSITIONERRORSQUARED = 0x35c; // float
		constexpr auto MAXNEARZEROVELOCITYSQUARED = 0x360; // float
		constexpr auto CLIENTADJUSTUPDATECOST = 0x364; // float
		constexpr auto MAXCLIENTUPDATEINTERVAL = 0x368; // float
		constexpr auto MaxClientForcedUpdateDuration = 0x36c; // float
		constexpr auto ServerForcedUpdateHitchThreshold = 0x370; // float
		constexpr auto ServerForcedUpdateHitchCooldown = 0x374; // float
		constexpr auto MaxMoveDeltaTime = 0x378; // float
		constexpr auto MaxClientSmoothingDeltaTime = 0x37c; // float
		constexpr auto ClientNetSendMoveDeltaTime = 0x380; // float
		constexpr auto ClientNetSendMoveDeltaTimeThrottled = 0x384; // float
		constexpr auto ClientNetSendMoveDeltaTimeStationary = 0x388; // float
		constexpr auto ClientNetSendMoveThrottleAtNetSpeed = 0x38c; // int32_t
		constexpr auto ClientNetSendMoveThrottleOverPlayerCount = 0x390; // int32_t
		constexpr auto ClientAuthorativePosition = 0x394; // bool
		constexpr auto ClientErrorUpdateRateLimit = 0x398; // float
		constexpr auto ClientNetCamUpdateDeltaTime = 0x39c; // float
		constexpr auto ClientNetCamUpdatePositionLimit = 0x3a0; // float
		constexpr auto bMovementTimeDiscrepancyDetection = 0x3a4; // bool
		constexpr auto bMovementTimeDiscrepancyResolution = 0x3a5; // bool
		constexpr auto MovementTimeDiscrepancyMaxTimeMargin = 0x3a8; // float
		constexpr auto MovementTimeDiscrepancyMinTimeMargin = 0x3ac; // float
		constexpr auto MovementTimeDiscrepancyResolutionRate = 0x3b0; // float
		constexpr auto MovementTimeDiscrepancyDriftAllowance = 0x3b4; // float
		constexpr auto bMovementTimeDiscrepancyForceCorrectionsDuringResolution = 0x3b8; // bool
		constexpr auto bUseDistanceBasedRelevancy = 0x3b9; // bool
	}

	namespace n_AStaticMeshFloatingActor {
		constexpr auto FloatingBox = 0x320; // UBoxComponent*
		constexpr auto WaterResistanceRange = 0x328; // FVector2D
		constexpr auto MinWaterResistanceRange = 0x330; // FVector2D
		constexpr auto FloatingForce = 0x338; // float
		constexpr auto MeshMass = 0x33c; // float
		constexpr auto CenterOfMassOffset = 0x340; // FVector
		constexpr auto DefaultWaveShape = 0x34c; // EWaveShape
		constexpr auto DefaultWaveStrength = 0x350; // float
		constexpr auto DefaultWaveSizePercent = 0x354; // float
		constexpr auto WaveData = 0x358; // TArray<FWaveConfigData>
		constexpr auto WaveRotator = 0x368; // FRotator
	}

	namespace n_ASpectatorBeaconClient {
		constexpr auto DestSessionId = 0x3d0; // FString
		constexpr auto PendingReservation = 0x3e0; // FSpectatorReservation
		constexpr auto RequestType = 0x458; // ESpectatorClientRequestType
		constexpr auto bPendingReservationSent = 0x459; // bool
		constexpr auto bCancelReservation = 0x45a; // bool
	}

	namespace n_UCurveVector {
		constexpr auto FloatCurves = 0x30; // FRichCurve [0x3]
	}

	namespace n_UBakedOcclusionMapToolProperties {
		constexpr auto OcclusionRays = 0x60; // int32_t
		constexpr auto MaxDistance = 0x64; // float
		constexpr auto bGaussianBlur = 0x68; // bool
		constexpr auto BlurRadius = 0x6c; // float
		constexpr auto BiasAngle = 0x70; // float
	}

	namespace n_UConvertToPolygonsTool {
		constexpr auto Settings = 0x88; // UConvertToPolygonsToolProperties*
		constexpr auto PreviewMesh = 0x90; // UPreviewMesh*
	}

	namespace n_USG_AnimalsAnimInstance {
		constexpr auto SG_AnimalsCharacter = 0x2c0; // ASG_AnimalsCharacter*
		constexpr auto SGCapsuleComponent = 0x2c8; // UCapsuleComponent*
		constexpr auto SGCharacterMovementComponent = 0x2d0; // UCharacterMovementComponent*
		constexpr auto SGMoveSeatingCharacter = 0x2d8; // ASG_MoveSeatingCharacter*
		constexpr auto SGSiegeAnimInstance = 0x2e0; // USiegeAnimInstance*
		constexpr auto SiegeSeatIndex = 0x2e8; // int32_t
		constexpr auto IsWantMoving = 0x2ec; // bool
		constexpr auto IsMovingOrTransition = 0x2ed; // bool
		constexpr auto UseUpperBodyLayer = 0x2ee; // bool
		constexpr auto IsGroundMovementMode = 0x2ef; // bool
		constexpr auto IsFallingMovementMode = 0x2f0; // bool
		constexpr auto IsRagdollMovementMode = 0x2f1; // bool
		constexpr auto IsSwimMovementMode = 0x2f2; // bool
		constexpr auto IsPassengerMovementMode = 0x2f3; // char : 1
		constexpr auto IsPassengerShowGround = 0x2f3; // char : 1
		constexpr auto IsInAirVelocity = 0x2f4; // bool
		constexpr auto IsMoveForward = 0x2f5; // bool
		constexpr auto bIsHighStance = 0x2f6; // char : 1
		constexpr auto IsStand = 0x2f7; // bool
		constexpr auto IsStandHind = 0x2f8; // bool
		constexpr auto IsSitting = 0x2f9; // bool
		constexpr auto IsLying = 0x2fa; // bool
		constexpr auto PreviewAnim = 0x300; // UAnimSequence*
		constexpr auto Struct_AnimalsAnims = 0x308; // FAnimalsAnimsConfig
		constexpr auto Struct_AnimalsStandConfig = 0xa80; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsStandHindConfig = 0xb00; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsSittingConfig = 0xb80; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsLyingConfig = 0xc00; // FAnimalsAnimInstanceConfig
		constexpr auto Struct_AnimalsSwimConfig = 0xc80; // FAnimalsAnimInstanceConfig
		constexpr auto Enum_MovementMode = 0xd00; // ECustomMovementMode
		constexpr auto Enum_PrevMovementMode = 0xd01; // ECustomMovementMode
		constexpr auto Enum_DefaultAnimalsStanceType = 0xd02; // EAnimalsStanceType
		constexpr auto Enum_AnimalsStanceType = 0xd03; // EAnimalsStanceType
		constexpr auto Enum_DesiredAnimalsStanceType = 0xd04; // EAnimalsStanceType
		constexpr auto Enum_PrevAnimalsStanceType = 0xd05; // EAnimalsStanceType
		constexpr auto Enum_PrevAnimAnimalsStanceType = 0xd06; // EAnimalsStanceType
		constexpr auto Enum_ActiveLocomotionState = 0xd07; // ELocomotionState
		constexpr auto Enum_DefaultAnimalsDeathDirection = 0xd08; // EInputDirection
		constexpr auto Velocity = 0xd0c; // FVector
		constexpr auto IsDead = 0xd18; // char : 1
		constexpr auto DeathAnimPose = 0xd20; // UAnimSequence*
		constexpr auto PreviewDeathAnimPose = 0xd28; // UAnimSequence*
		constexpr auto IsMoving = 0xd30; // char : 1
		constexpr auto IsPlayerInput = 0xd30; // char : 1
		constexpr auto HasMovementInput = 0xd30; // char : 1
		constexpr auto bUseCustomAdditive = 0xd30; // char : 1
		constexpr auto LookingRotation = 0xd34; // FRotator
		constexpr auto TargetRotation = 0xd40; // FRotator
		constexpr auto LastVelocityRotation = 0xd4c; // FRotator
		constexpr auto LastMovementInputRotation = 0xd58; // FRotator
		constexpr auto AimYawDelta = 0xd64; // float
		constexpr auto AimYawRate = 0xd68; // float
		constexpr auto Speed = 0xd6c; // float
		constexpr auto bUseAnimNotifyPlayTransitionMontage = 0xd70; // char : 1
		constexpr auto IsTransition = 0xd70; // char : 1
		constexpr auto TransitionMontage = 0xd78; // UAnimMontage*
		constexpr auto EnableTurnInPlace = 0xd80; // char : 1
		constexpr auto EnterTurningInPlace = 0xd80; // char : 1
		constexpr auto ShouldTurnInPlace = 0xd80; // char : 1
		constexpr auto TurningInPlace = 0xd80; // char : 1
		constexpr auto TurningRight = 0xd80; // char : 1
		constexpr auto ChangeTurningDirection = 0xd80; // char : 1
		constexpr auto TurnInPlaceDelayCount = 0xd84; // float
		constexpr auto ActiveTurnInPlaceMontage = 0xd88; // UAnimMontage*
		constexpr auto CapsuleCollision = 0xd90; // char : 1
		constexpr auto GroundPlayRateLimit = 0xd94; // FVector2D
		constexpr auto GaitValue = 0xd9c; // float
		constexpr auto MovingDirection = 0xda0; // float
		constexpr auto ArchDirection = 0xda4; // float
		constexpr auto UpDirection = 0xda8; // float
		constexpr auto ArchDirectionScale = 0xdac; // float
		constexpr auto ArchDirectionInterpSpeed = 0xdb0; // float
		constexpr auto AI_ArchDirectionInterpSpeed = 0xdb4; // FVector2D
		constexpr auto BrakingArchDirectionInterpSpeed = 0xdbc; // float
		constexpr auto MoveRightAxis = 0xdc0; // float
		constexpr auto GroundPlayRate = 0xdc4; // float
		constexpr auto MovingStartPosition = 0xdc8; // float
		constexpr auto IdlePlayRate = 0xdcc; // float
		constexpr auto IdlePosition = 0xdd0; // float
		constexpr auto bIsWaterAir = 0xdd4; // char : 1
		constexpr auto JumpDirection = 0xdd8; // float
		constexpr auto LeanInAir = 0xddc; // float
		constexpr auto FlailRate = 0xde0; // float
		constexpr auto FlailBlendAlpha = 0xde4; // float
		constexpr auto LandPredictionAlpha = 0xde8; // float
		constexpr auto FlailAlphaCurve = 0xdf0; // UCurveFloat*
		constexpr auto LandAlphaCurve = 0xdf8; // UCurveFloat*
		constexpr auto AdditiveLandMontage = 0xe00; // UAnimMontage*
		constexpr auto IsAttacking = 0xe08; // char : 1
		constexpr auto bShouldSwim = 0xe08; // char : 1
		constexpr auto bIsSurfaceState = 0xe08; // char : 1
		constexpr auto bIsSwimPivot = 0xe08; // char : 1
		constexpr auto SwimDirection = 0xe0c; // float
		constexpr auto SwimRootHeight = 0xe10; // float
		constexpr auto SwimPelvisRotation = 0xe14; // FRotator
		constexpr auto SwimPelvisBoneReference = 0xe20; // FBoneReference
		constexpr auto SwimPelvisPitch = 0xe30; // float
		constexpr auto SwimRootMaxHeight = 0xe34; // float
		constexpr auto SwimPitchLimitAngle = 0xe38; // FVector2D
		constexpr auto SwimPivotAlpha = 0xe40; // float
		constexpr auto SwimArchDirectionScale = 0xe44; // float
		constexpr auto SwimArchDirectionInterpSpeed = 0xe48; // float
		constexpr auto SwimUpDirectionInterpSpeed = 0xe4c; // float
		constexpr auto bIsSwimBackwardDirection = 0xe50; // char : 1
		constexpr auto SwimArchDirectionRate = 0xe54; // float
		constexpr auto SwimArchDirectionRateInterpSpeed = 0xe58; // float
		constexpr auto SwimArchDirection = 0xe5c; // FVector2D
		constexpr auto SwimPlayRate = 0xe64; // float
		constexpr auto CurrentAnimalBoneModifier = 0xe68; // FAnimalsModifyBoneSettings
		constexpr auto bEnableFootSolver = 0xe80; // char : 1
		constexpr auto bUseFootSolver = 0xe80; // char : 1
		constexpr auto RiderMesh_TEST = 0xe88; // USkeletalMeshComponent*
		constexpr auto bUseFabrikReins = 0xe94; // char : 1
		constexpr auto ReinsLeftSocket = 0xe98; // FName
		constexpr auto ReinsRightSocket = 0xea0; // FName
		constexpr auto ReinsBoneReference = 0xea8; // FBoneReference
		constexpr auto bEnableReinsL = 0xeb8; // char : 1
		constexpr auto bEnableReinsR = 0xeb8; // char : 1
		constexpr auto Reins_LHandLoc = 0xebc; // FVector
		constexpr auto Reins_RHandLoc = 0xec8; // FVector
		constexpr auto Reins_LHandTransform = 0xee0; // FTransform
		constexpr auto Reins_RHandTransform = 0xf10; // FTransform
		constexpr auto SaddleLeftSocket = 0xf44; // FName
		constexpr auto SaddleRightSocket = 0xf4c; // FName
		constexpr auto SaddleBoneReference = 0xf54; // FBoneReference
		constexpr auto bEnableSaddleL = 0xf64; // char : 1
		constexpr auto bEnableSaddleR = 0xf64; // char : 1
		constexpr auto Saddle_LFootLoc = 0xf70; // FTransform
		constexpr auto Saddle_RFootLoc = 0xfa0; // FTransform
		constexpr auto PassengerAnimsConfig = 0xfd0; // FPassengerAnimsConfig
		constexpr auto bIsPreviewSceneAnimInstance = 0xfe0; // char : 1
		constexpr auto bEnableUpDirection = 0xfe0; // char : 1
		constexpr auto DefaultRefreshUpDirectionTime = 0xfe4; // float
		constexpr auto RefreshUpDirectionRemainTime = 0xfe8; // float
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UBaseMediaSource {
		constexpr auto PlayerName = 0x80; // FName
	}

	namespace n_ULiveLinkVirtualSubject {
		constexpr auto Role = 0x30; // ULiveLinkRole*
		constexpr auto Subjects = 0x38; // TArray<FLiveLinkSubjectName>
		constexpr auto FrameTranslators = 0x48; // TArray<ULiveLinkFrameTranslator*>
	}

	namespace n_UUI_N_ShopConfirmBuy {
		constexpr auto ButtonCancel = 0x2d8; // UButton*
		constexpr auto ButtonRight = 0x2e0; // UButton*
		constexpr auto ButtonRightText = 0x2e8; // UTextBlock*
		constexpr auto CapitalImageUp = 0x2f0; // UImage*
		constexpr auto MoneyText = 0x2f8; // UTextBlock*
		constexpr auto ItemNameText = 0x300; // UTextBlock*
		constexpr auto DownHBox = 0x308; // UHorizontalBox*
		constexpr auto CapitalImageDown = 0x310; // UImage*
		constexpr auto CurCapitalNumText = 0x318; // UTextBlock*
		constexpr auto iconGold = 0x320; // UTexture2D*
		constexpr auto iconSilver = 0x328; // UTexture2D*
		constexpr auto iconCopper = 0x330; // UTexture2D*
	}

	namespace n_UUVProjectionTool {
		constexpr auto BasicProperties = 0x90; // UUVProjectionToolProperties*
		constexpr auto AdvancedProperties = 0x98; // UUVProjectionAdvancedProperties*
		constexpr auto MaterialSettings = 0xa0; // UExistingMeshMaterialProperties*
		constexpr auto Previews = 0xa8; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto CheckerMaterial = 0xb8; // UMaterialInstanceDynamic*
		constexpr auto TransformGizmos = 0xc0; // TArray<UTransformGizmo*>
		constexpr auto TransformProxies = 0xd0; // TArray<UTransformProxy*>
	}

	namespace n_UUserDefinedCaptureProtocol {
		constexpr auto World = 0x58; // UWorld*
	}

	namespace n_UGeometryCacheCodecRaw {
		constexpr auto DummyProperty = 0x38; // int32_t
	}

	namespace n_UDrawPolygonTool {
		constexpr auto PolygonProperties = 0x88; // UDrawPolygonToolStandardProperties*
		constexpr auto SnapProperties = 0x90; // UDrawPolygonToolSnapProperties*
		constexpr auto MaterialProperties = 0x98; // UNewMeshMaterialProperties*
		constexpr auto PreviewMesh = 0x150; // UPreviewMesh*
		constexpr auto PlaneTransformGizmo = 0x158; // UTransformGizmo*
		constexpr auto PlaneTransformProxy = 0x160; // UTransformProxy*
		constexpr auto HeightMechanic = 0x540; // UPlaneDistanceFromHitMechanic*
	}

	namespace n_ULoudnessNRTSettings {
		constexpr auto AnalysisPeriod = 0x28; // float
		constexpr auto MinimumFrequency = 0x2c; // float
		constexpr auto MaximumFrequency = 0x30; // float
		constexpr auto CurveType = 0x34; // ELoudnessNRTCurveTypeEnum
		constexpr auto NoiseFloorDb = 0x38; // float
	}

	namespace n_UEditableGameplayTagQueryExpression_NoExprMatch {
		constexpr auto Expressions = 0x28; // TArray<UEditableGameplayTagQueryExpression*>
	}

	namespace n_UMovieScene3DConstraintSection {
		constexpr auto ConstraintId = 0xe8; // FGuid
		constexpr auto ConstraintBindingID = 0xf8; // FMovieSceneObjectBindingID
	}

	namespace n_ASGStructureOccupyFlag {
		constexpr auto OccupySphereComponent = 0xb98; // UStaticMeshComponent*
		constexpr auto FlagSkeletalMeshComponent = 0xba0; // USkeletalMeshComponent*
		constexpr auto SameOrAttackTeamFlagBrush = 0xba8; // FSlateBrush
		constexpr auto SameOrAttackTeamFlagTexture = 0xc30; // TSoftObjectPtr<UTexture2D>
		constexpr auto SameOrAttackTeamFlagColor = 0xc58; // FLinearColor
		constexpr auto DiffOrDefenseTeamFlagBrush = 0xc68; // FSlateBrush
		constexpr auto DiffOrDefenseTeamFlagTexture = 0xcf0; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffOrDefenseTeamFlagColor = 0xd18; // FLinearColor
		constexpr auto NoTeamFlagBrush = 0xd28; // FSlateBrush
		constexpr auto NoTeamFlagTexture = 0xdb0; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoTeamFlagColor = 0xdd8; // FLinearColor
		constexpr auto DiffOrDefenseTeamLockFlagBrush = 0xde8; // FSlateBrush
		constexpr auto DiffOrDefenseTeamLockFlagTexture = 0xe70; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffOrDefenseTeamLockFlagColor = 0xe98; // FLinearColor
		constexpr auto NeutralStaticMesh = 0xea8; // UStaticMesh*
		constexpr auto AttackFlagStaticMesh = 0xeb0; // UStaticMesh*
		constexpr auto DefenseStaticMesh = 0xeb8; // UStaticMesh*
		constexpr auto NeutralSkeletalMesh = 0xec0; // USkeletalMesh*
		constexpr auto AttackFlagSkeletalMesh = 0xec8; // USkeletalMesh*
		constexpr auto DefenseSkeletalMesh = 0xed0; // USkeletalMesh*
		constexpr auto OccupyTimeInterval = 0xed8; // float
		constexpr auto OccupyNotifyInterval = 0xedc; // float
		constexpr auto CheckOccupyTimeInterval = 0xee0; // float
		constexpr auto CheckOccupyRadius = 0xee4; // float
		constexpr auto FlagOccupyType = 0xee8; // EFlagOccupyType
		constexpr auto bHasNoTeamStateInPingPang = 0xee9; // char : 1
		constexpr auto fPlayerOccupySpeed = 0xeec; // float
		constexpr auto PlayerOccupySpeedNumLimit = 0xef0; // int32_t
		constexpr auto MaxOccupyCount = 0xef4; // int32_t
		constexpr auto RelatedActors = 0xef8; // TArray<AActor*>
		constexpr auto OccupyPreConditionType = 0xf08; // EOccupyPreConditionType
		constexpr auto PreConditionActors = 0xf10; // TArray<AActor*>
		constexpr auto AddBattleTime = 0xf20; // float
		constexpr auto ClientShowOrderPriority = 0xf24; // int32_t
		constexpr auto OccupyFlagInfo = 0xf28; // FOccupyFlagInfo
		constexpr auto CacheInitGenericTeamId = 0xf38; // char
		constexpr auto OnOccupyFlagInfoChanged = 0xf70; // FMulticastInlineDelegate
		constexpr auto OnOccupyFlagMaxOccupyCountChanged = 0xf80; // FMulticastInlineDelegate
		constexpr auto OnOccupyFlagGenericTeamIdChanged = 0xf90; // FMulticastInlineDelegate
		constexpr auto LastTimeSeconds = 0xfa0; // float
		constexpr auto LastUpdateLeftOccupyTimer = 0xfa4; // float
	}

	namespace n_UChaosClothConfig {
		constexpr auto MassMode = 0x28; // EClothMassMode
		constexpr auto UniformMass = 0x2c; // float
		constexpr auto TotalMass = 0x30; // float
		constexpr auto Density = 0x34; // float
		constexpr auto MinPerParticleMass = 0x38; // float
		constexpr auto EdgeStiffness = 0x3c; // float
		constexpr auto BendingStiffness = 0x40; // float
		constexpr auto bUseBendingElements = 0x44; // bool
		constexpr auto AreaStiffness = 0x48; // float
		constexpr auto VolumeStiffness = 0x4c; // float
		constexpr auto StrainLimitingStiffness = 0x50; // float
		constexpr auto LimitScale = 0x54; // float
		constexpr auto TetherMode = 0x58; // EChaosClothTetherMode
		constexpr auto bUseGeodesicDistance = 0x59; // bool
		constexpr auto ShapeTargetStiffness = 0x5c; // float
		constexpr auto CollisionThickness = 0x60; // float
		constexpr auto FrictionCoefficient = 0x64; // float
		constexpr auto bUseSelfCollisions = 0x68; // bool
		constexpr auto SelfCollisionThickness = 0x6c; // float
		constexpr auto bUseLegacyBackstop = 0x70; // bool
		constexpr auto DampingCoefficient = 0x74; // float
		constexpr auto bUsePointBasedWindModel = 0x78; // bool
		constexpr auto DragCoefficient = 0x7c; // float
		constexpr auto LiftCoefficient = 0x80; // float
		constexpr auto bUseGravityOverride = 0x84; // bool
		constexpr auto GravityScale = 0x88; // float
		constexpr auto Gravity = 0x8c; // FVector
		constexpr auto AnimDriveSpringStiffness = 0x98; // float
		constexpr auto LinearVelocityScale = 0x9c; // FVector
		constexpr auto AngularVelocityScale = 0xa8; // float
		constexpr auto bUseTetrahedralConstraints = 0xac; // bool
		constexpr auto bUseThinShellVolumeConstraints = 0xad; // bool
		constexpr auto bUseContinuousCollisionDetection = 0xae; // bool
	}

	namespace n_UExpandableArea {
		constexpr auto Style = 0x110; // FExpandableAreaStyle
		constexpr auto BorderBrush = 0x230; // FSlateBrush
		constexpr auto BorderColor = 0x2b8; // FSlateColor
		constexpr auto bIsExpanded = 0x2e0; // bool
		constexpr auto MaxHeight = 0x2e4; // float
		constexpr auto HeaderPadding = 0x2e8; // FMargin
		constexpr auto AreaPadding = 0x2f8; // FMargin
		constexpr auto OnExpansionChanged = 0x308; // FMulticastInlineDelegate
		constexpr auto HeaderContent = 0x318; // UWidget*
		constexpr auto BodyContent = 0x320; // UWidget*
	}

	namespace n_USoundNodeParamCrossFade {
		constexpr auto ParamName = 0x58; // FName
	}

	namespace n_UMaterialExpressionLightmassReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto Lightmass = 0x54; // FExpressionInput
	}

	namespace n_AMagicLeapARPinInfoActor_C {
		constexpr auto UberGraphFrame = 0x328; // FPointerToUberGraphFrame
		constexpr auto Right = 0x330; // UStaticMeshComponent*
		constexpr auto Forward = 0x338; // UStaticMeshComponent*
		constexpr auto Up = 0x340; // UStaticMeshComponent*
		constexpr auto ValidRadiusVisualizer = 0x348; // USphereComponent*
		constexpr auto AxisRoot = 0x350; // USceneComponent*
		constexpr auto VisualizerRoot = 0x358; // USceneComponent*
		constexpr auto TypeValue = 0x360; // UTextRenderComponent*
		constexpr auto TransErrValue = 0x368; // UTextRenderComponent*
		constexpr auto RotErrValue = 0x370; // UTextRenderComponent*
		constexpr auto ConfidenceValue = 0x378; // UTextRenderComponent*
		constexpr auto TransErrLabel = 0x380; // UTextRenderComponent*
		constexpr auto RotErrLabel = 0x388; // UTextRenderComponent*
		constexpr auto ConfidenceLabel = 0x390; // UTextRenderComponent*
		constexpr auto PinIDValue = 0x398; // UTextRenderComponent*
		constexpr auto InfoRoot = 0x3a0; // USceneComponent*
		constexpr auto Root = 0x3a8; // USceneComponent*
		constexpr auto RotationSmoothSpeed = 0x3b0; // float
	}

	namespace n_UModelComponent {
		constexpr auto ModelBodySetup = 0x4a0; // UBodySetup*
	}

	namespace n_ALevelSequenceMediaController {
		constexpr auto Sequence = 0x318; // ALevelSequenceActor*
		constexpr auto MediaComponent = 0x320; // UMediaComponent*
		constexpr auto ServerStartTimeSeconds = 0x328; // float
	}

	namespace n_UMaterialExpressionBlendMaterialAttributes {
		constexpr auto A = 0x40; // FMaterialAttributesInput
		constexpr auto B = 0x58; // FMaterialAttributesInput
		constexpr auto Alpha = 0x70; // FExpressionInput
		constexpr auto PixelAttributeBlendType = 0x84; // EMaterialAttributeBlend
		constexpr auto VertexAttributeBlendType = 0x85; // EMaterialAttributeBlend
	}

	namespace n_UMeshEditingViewProperties {
		constexpr auto bShowWireframe = 0x60; // bool
		constexpr auto MaterialMode = 0x64; // EMeshEditingMaterialModes
		constexpr auto bFlatShading = 0x68; // bool
		constexpr auto Color = 0x6c; // FLinearColor
		constexpr auto Image = 0x80; // UTexture2D*
	}

	namespace n_UFontImportOptions {
		constexpr auto Data = 0x28; // FFontImportOptionsData
	}

	namespace n_ULocalLightComponent {
		constexpr auto IntensityUnits = 0x338; // ELightUnits
		constexpr auto Radius = 0x33c; // float
		constexpr auto AttenuationRadius = 0x340; // float
		constexpr auto LightmassSettings = 0x344; // FLightmassPointLightSettings
	}

	namespace n_ULineSetComponent {
		constexpr auto LineMaterial = 0x4b0; // UMaterialInterface*
		constexpr auto Bounds = 0x4b8; // FBoxSphereBounds
		constexpr auto bBoundsDirty = 0x4d4; // bool
	}

	namespace n_USGVehiclePerkToolTipWidget {
		constexpr auto VehiclePerkQualityBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto QualitySlotBrush = 0x350; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto VehiclePerkQualityOutlineColor = 0x440; // FLinearColor [0x6]
		constexpr auto ACModifyAddTextColor = 0x4a0; // FSlateColor
		constexpr auto ACModifyReduceTextColor = 0x4c8; // FSlateColor
		constexpr auto ACModifyNormalTextColor = 0x4f0; // FSlateColor
		constexpr auto ACModifyAddTexture = 0x518; // TSoftObjectPtr<UTexture2D>
		constexpr auto ACModifyReduceTexture = 0x540; // TSoftObjectPtr<UTexture2D>
		constexpr auto PerkImg = 0x568; // UImage*
		constexpr auto SlotQualityImg = 0x570; // UImage*
		constexpr auto ActiveImg = 0x578; // UImage*
		constexpr auto PerkQualityImg = 0x580; // UImage*
		constexpr auto PerkNameText = 0x588; // UTextBlock*
		constexpr auto TbPerkACModifyHP = 0x590; // UTextBlock*
		constexpr auto ImgPerkACModifyHP = 0x598; // UImage*
		constexpr auto TbPerkACModifySP = 0x5a0; // UTextBlock*
		constexpr auto ImgPerkACModifySP = 0x5a8; // UImage*
		constexpr auto TbPerkACModifyWeight = 0x5b0; // UTextBlock*
		constexpr auto ImgPerkACModifyWeight = 0x5b8; // UImage*
		constexpr auto TbPerkACModifySpeed = 0x5c0; // UTextBlock*
		constexpr auto ImgPerkACModifySpeed = 0x5c8; // UImage*
		constexpr auto TbPerkACModifyOperate = 0x5d0; // UTextBlock*
		constexpr auto ImgPerkACModifyOperate = 0x5d8; // UImage*
		constexpr auto TbPerkDescription = 0x5e0; // UTextBlock*
	}

	namespace n_UBTTask_MoveDirectlyToward {
		constexpr auto bDisablePathUpdateOnGoalLocationChange = 0xb8; // char : 1
		constexpr auto bProjectVectorGoalToNavigation = 0xb8; // char : 1
		constexpr auto bUpdatedDeprecatedProperties = 0xb8; // char : 1
	}

	namespace n_ALevelSequenceActor {
		constexpr auto PlaybackSettings = 0x320; // FMovieSceneSequencePlaybackSettings
		constexpr auto SequencePlayer = 0x338; // ULevelSequencePlayer*
		constexpr auto LevelSequence = 0x340; // FSoftObjectPath
		constexpr auto CameraSettings = 0x358; // FLevelSequenceCameraSettings
		constexpr auto BurnInOptions = 0x360; // ULevelSequenceBurnInOptions*
		constexpr auto BindingOverrides = 0x368; // UMovieSceneBindingOverrides*
		constexpr auto bAutoPlay = 0x370; // char : 1
		constexpr auto bOverrideInstanceData = 0x370; // char : 1
		constexpr auto bReplicatePlayback = 0x370; // char : 1
		constexpr auto DefaultInstanceData = 0x378; // UObject*
		constexpr auto BurnInInstance = 0x380; // ULevelSequenceBurnIn*
		constexpr auto bShowBurnin = 0x388; // bool
	}

	namespace n_UVehicleAnimInstance {
		constexpr auto WheeledVehicleMovementComponent = 0xa40; // UWheeledVehicleMovementComponent*
	}

	namespace n_UAudioBus {
		constexpr auto AudioBusChannels = 0x28; // EAudioBusChannels
		constexpr auto bIsAutomatic = 0x29; // bool
	}

	namespace n_UTexture2DArray {
		constexpr auto AddressX = 0x130; // TextureAddress
		constexpr auto AddressY = 0x131; // TextureAddress
		constexpr auto AddressZ = 0x132; // TextureAddress
	}

	namespace n_UParticleModuleVectorFieldRotation {
		constexpr auto MinInitialRotation = 0x30; // FVector
		constexpr auto MaxInitialRotation = 0x3c; // FVector
	}

	namespace n_UParticleModuleLocationPrimitiveBase {
		constexpr auto Positive_X = 0x30; // char : 1
		constexpr auto Positive_Y = 0x30; // char : 1
		constexpr auto Positive_Z = 0x30; // char : 1
		constexpr auto Negative_X = 0x30; // char : 1
		constexpr auto Negative_Y = 0x30; // char : 1
		constexpr auto Negative_Z = 0x30; // char : 1
		constexpr auto SurfaceOnly = 0x30; // char : 1
		constexpr auto Velocity = 0x30; // char : 1
		constexpr auto VelocityScale = 0x38; // FRawDistributionFloat
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
	}

	namespace n_ACameraActor {
		constexpr auto AutoActivateForPlayer = 0x310; // EAutoReceiveInput
		constexpr auto CameraComponent = 0x318; // UCameraComponent*
		constexpr auto SceneComponent = 0x320; // USceneComponent*
		constexpr auto bConstrainAspectRatio = 0x330; // char : 1
		constexpr auto AspectRatio = 0x334; // float
		constexpr auto FOVAngle = 0x338; // float
		constexpr auto PostProcessBlendWeight = 0x33c; // float
		constexpr auto PostProcessSettings = 0x340; // FPostProcessSettings
	}

	namespace n_USoundNodeMixer {
		constexpr auto InputVolume = 0x48; // TArray<float>
	}

	namespace n_USoundNodeWavePlayer {
		constexpr auto SoundWaveAssetPtr = 0x48; // TSoftObjectPtr<USoundWave>
		constexpr auto SoundWave = 0x70; // USoundWave*
		constexpr auto bLooping = 0x80; // char : 1
	}

	namespace n_ASceneObjectsManageDebuger {
		constexpr auto SceneRoot = 0x310; // USceneComponent*
		constexpr auto bEnableDebug = 0x318; // char : 1
		constexpr auto bEnableDraw = 0x318; // char : 1
		constexpr auto bEnableCount = 0x318; // char : 1
		constexpr auto bOverrideDrawFolaigeTree = 0x318; // char : 1
		constexpr auto bUseBoxOverlap = 0x318; // char : 1
		constexpr auto bUseMainPCLoc = 0x318; // char : 1
		constexpr auto bDrawOverlapSizeBoxInfo = 0x318; // char : 1
		constexpr auto bDrawInsideTreeBox = 0x318; // char : 1
		constexpr auto bUseUnifiedDrawInfoColor = 0x319; // char : 1
		constexpr auto bForceChangeOverlapedElementMask = 0x319; // char : 1
		constexpr auto ForceChangedTargetMask = 0x31c; // int32_t
		constexpr auto DrawInfoDuration = 0x320; // float
		constexpr auto DrawInfoScale = 0x324; // float
		constexpr auto DrawInfoColor = 0x328; // FColor
		constexpr auto RadiusColor = 0x32c; // FColor [0x4]
		constexpr auto OverlapRadiuses = 0x33c; // float [0x4]
		constexpr auto OverlapXExtents = 0x34c; // float [0x4]
		constexpr auto OverlapYExtents = 0x35c; // float [0x4]
		constexpr auto OverlapMasks = 0x36c; // int32_t [0x4]
		constexpr auto OverlapDrawColors = 0x37c; // FColor [0x4]
		constexpr auto InstanceTreeRadiusColor = 0x38c; // FColor
		constexpr auto InstanceTreeOverlapRadius = 0x390; // float
		constexpr auto InstanceTreeOverlapXExtent = 0x394; // float
		constexpr auto InstanceTreeOverlapYExtent = 0x398; // float
		constexpr auto InstanceTreeOverlapDrawColor = 0x39c; // FColor
		constexpr auto CountOverlapRadiusColor = 0x3a0; // FColor
		constexpr auto CountOverlapRadius = 0x3a4; // float
		constexpr auto CountOverlapMask = 0x3a8; // int32_t
		constexpr auto CountOverlapLoopTime = 0x3ac; // int32_t
	}

	namespace n_UTraceBoxComponent {
		constexpr auto ChildrenDataBox = 0x4b0; // TArray<FBodyPartBox>
		constexpr auto bShowDebug = 0x4c0; // char : 1
		constexpr auto ShowDebugTime = 0x4c4; // float
	}

	namespace n_UBTTask_RoadPath {
		constexpr auto BBKey_RoadPathIndex = 0xc0; // FBlackboardKeySelector
		constexpr auto BBKey_DesiredLocation = 0xe8; // FBlackboardKeySelector
		constexpr auto Enum_CustomRoadPathType = 0x168; // ECustomRoadPathType
		constexpr auto AcceptableRadius = 0x16c; // float
		constexpr auto FollowAddDistance = 0x170; // float
		constexpr auto FinishedRoadPathCoolingTimeRange = 0x17c; // FVector2D
		constexpr auto bCheckWaitChangeGuard = 0x184; // char : 1
	}

	namespace n_ASGNiagaraActor {
		constexpr auto OverlapTraceRaduis = 0x328; // float
		constexpr auto RootComp = 0x330; // USceneComponent*
		constexpr auto NiagaraComponent = 0x338; // UNiagaraComponent*
		constexpr auto BoxComponent = 0x340; // UBoxComponent*
		constexpr auto bCheckResourceParam = 0x348; // char : 1
		constexpr auto ResourceParam = 0x34c; // float
		constexpr auto bUnloadDestroy = 0x351; // char : 1
		constexpr auto InitQuantity = 0x358; // int32_t
		constexpr auto bSetQuantity = 0x35c; // char : 1
		constexpr auto MinQuantity = 0x360; // int32_t
		constexpr auto MaxQuantity = 0x364; // int32_t
		constexpr auto bRespawnSelf = 0x368; // char : 1
		constexpr auto RespawnTime = 0x36c; // float
		constexpr auto CreatureActorClass = 0x378; // AActor*
		constexpr auto bUseDropId = 0x380; // char : 1
		constexpr auto DropCount = 0x384; // int32_t
		constexpr auto DropWrapperId = 0x388; // int32_t
		constexpr auto bAddHuntingExp = 0x38c; // char : 1
		constexpr auto AddHuntingExp = 0x390; // double
		constexpr auto CreatureStaticMesh = 0x398; // UStaticMesh*
		constexpr auto Socket_StaticMesh = 0x3a0; // FName
		constexpr auto MeshLocation = 0x3a8; // FVector
		constexpr auto MeshRotation = 0x3b4; // FRotator
		constexpr auto MeshScale = 0x3c0; // FVector
		constexpr auto CreatureSkeletalMesh = 0x3d0; // USkeletalMesh*
		constexpr auto CachedMeleeWeapon = 0x3d8; // TWeakObjectPtr<AMeleeWeapon>
		constexpr auto bAllMeleeWeapon = 0x3e0; // char : 1
		constexpr auto UsableWeaponType = 0x3e1; // ENiagaraWeaponType
		constexpr auto bMeleeTraceHit = 0x3e2; // bool
		constexpr auto bHarvestAll = 0x3e3; // char : 1
		constexpr auto bRunawayDestroy = 0x3e3; // char : 1
		constexpr auto RunawayDestroySeconds = 0x3e4; // float
		constexpr auto bDebugShow = 0x3f0; // char : 1
		constexpr auto DrawRaduis = 0x3f4; // float
		constexpr auto DrawTime = 0x3f8; // float
		constexpr auto MeleeTraceTimeOut = 0x3fc; // float
		constexpr auto bMeleeAttack = 0x401; // char : 1
		constexpr auto bProjectileAttack = 0x401; // char : 1
		constexpr auto MinExploitInterval = 0x404; // float
		constexpr auto bWithFoliage = 0x408; // char : 1
		constexpr auto MaxFoliageWith = 0x40c; // float
	}

	namespace n_UParticleModuleLocationPrimitiveSphere {
		constexpr auto StartRadius = 0xb0; // FRawDistributionFloat
	}

	namespace n_UUI_PasswordDialog {
		constexpr auto BtnAccept = 0x2e8; // UButton*
		constexpr auto EtbPassword = 0x2f0; // UEditableTextBox*
		constexpr auto TbTitle = 0x2f8; // UTextBlock*
		constexpr auto TbContent = 0x300; // UTextBlock*
		constexpr auto TbError = 0x308; // UTextBlock*
		constexpr auto CheckBoxShowPassword = 0x310; // UCheckBox*
	}

	namespace n_UNiagaraDataInterfaceGrid2DCollection {
		constexpr auto RenderTargetUserParameter = 0xf8; // FNiagaraUserParameterBinding
		constexpr auto OverrideBufferFormat = 0x118; // ENiagaraGpuBufferFormat
		constexpr auto bOverrideFormat = 0x119; // char : 1
		constexpr auto ManagedRenderTargets = 0x170; // TMap<uint64_t, UTextureRenderTarget2DArray*>
	}

	namespace n_ALandscapeMeshProxyActor {
		constexpr auto LandscapeMeshProxyComponent = 0x310; // ULandscapeMeshProxyComponent*
	}

	namespace n_UARLifeCycleComponent {
		constexpr auto OnARActorSpawnedDelegate = 0x208; // FMulticastInlineDelegate
		constexpr auto OnARActorToBeDestroyedDelegate = 0x218; // FMulticastInlineDelegate
	}

	namespace n_UGameplayAbility {
		constexpr auto AbilityTags = 0xa8; // FGameplayTagContainer
		constexpr auto bReplicateInputDirectly = 0xc8; // bool
		constexpr auto RemoteInstanceEnded = 0xc9; // bool
		constexpr auto ReplicationPolicy = 0xce; // EGameplayAbilityReplicationPolicy
		constexpr auto InstancingPolicy = 0xcf; // EGameplayAbilityInstancingPolicy
		constexpr auto bServerRespectsRemoteAbilityCancellation = 0xd0; // bool
		constexpr auto bRetriggerInstancedAbility = 0xd1; // bool
		constexpr auto CurrentActivationInfo = 0xd8; // FGameplayAbilityActivationInfo
		constexpr auto CurrentEventData = 0xf0; // FGameplayEventData
		constexpr auto NetExecutionPolicy = 0x1a0; // EGameplayAbilityNetExecutionPolicy
		constexpr auto NetSecurityPolicy = 0x1a1; // EGameplayAbilityNetSecurityPolicy
		constexpr auto CostGameplayEffectClass = 0x1a8; // UGameplayEffect*
		constexpr auto AbilityTriggers = 0x1b0; // TArray<FAbilityTriggerData>
		constexpr auto CooldownGameplayEffectClass = 0x1c0; // UGameplayEffect*
		constexpr auto CancelAbilitiesWithTag = 0x1c8; // FGameplayTagContainer
		constexpr auto BlockAbilitiesWithTag = 0x1e8; // FGameplayTagContainer
		constexpr auto ActivationOwnedTags = 0x208; // FGameplayTagContainer
		constexpr auto ActivationRequiredTags = 0x228; // FGameplayTagContainer
		constexpr auto ActivationBlockedTags = 0x248; // FGameplayTagContainer
		constexpr auto SourceRequiredTags = 0x268; // FGameplayTagContainer
		constexpr auto SourceBlockedTags = 0x288; // FGameplayTagContainer
		constexpr auto TargetRequiredTags = 0x2a8; // FGameplayTagContainer
		constexpr auto TargetBlockedTags = 0x2c8; // FGameplayTagContainer
		constexpr auto ActiveTasks = 0x308; // TArray<UGameplayTask*>
		constexpr auto CurrentMontage = 0x328; // UAnimMontage*
		constexpr auto bIsActive = 0x390; // bool
		constexpr auto bIsCancelable = 0x391; // bool
		constexpr auto bIsBlockingOtherAbilities = 0x392; // bool
		constexpr auto bMarkPendingKillOnAbilityEnd = 0x3a8; // bool
	}

	namespace n_UPhysicsConstraintComponent {
		constexpr auto ConstraintActor1 = 0x208; // AActor*
		constexpr auto ComponentName1 = 0x210; // FConstrainComponentPropName
		constexpr auto ConstraintActor2 = 0x218; // AActor*
		constexpr auto ComponentName2 = 0x220; // FConstrainComponentPropName
		constexpr auto ConstraintSetup = 0x238; // UPhysicsConstraintTemplate*
		constexpr auto OnConstraintBroken = 0x240; // FMulticastInlineDelegate
		constexpr auto ConstraintInstance = 0x250; // FConstraintInstance
	}

	namespace n_USourceEffectEnvelopeFollowerPreset {
		constexpr auto Settings = 0x9c; // FSourceEffectEnvelopeFollowerSettings
	}

	namespace n_UAvoidanceManager {
		constexpr auto DefaultTimeToLive = 0x30; // float
		constexpr auto LockTimeAfterAvoid = 0x34; // float
		constexpr auto LockTimeAfterClean = 0x38; // float
		constexpr auto DeltaTimeToPredict = 0x3c; // float
		constexpr auto ArtificialRadiusExpansion = 0x40; // float
		constexpr auto TestHeightDifference = 0x44; // float
		constexpr auto HeightCheckMargin = 0x48; // float
	}

	namespace n_UInterpTrackDirector {
		constexpr auto CutTrack = 0x70; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0x80; // char : 1
	}

	namespace n_UHorizonButtonUserWidget {
		constexpr auto OnButtonClickedDelegate = 0x260; // FMulticastInlineDelegate
		constexpr auto OnButtonPressedDelegate = 0x270; // FMulticastInlineDelegate
		constexpr auto OnButtonReleasedDelegate = 0x280; // FMulticastInlineDelegate
		constexpr auto OnButtonHoveredDelegate = 0x290; // FMulticastInlineDelegate
		constexpr auto OnButtonUnhoveredDelegate = 0x2a0; // FMulticastInlineDelegate
		constexpr auto OnButtonFocusDelegate = 0x2b0; // FMulticastInlineDelegate
		constexpr auto OnButtonFocusLostDelegate = 0x2c0; // FMulticastInlineDelegate
		constexpr auto Button_Main = 0x378; // UButton*
		constexpr auto TextBlock_Main = 0x380; // UTextBlock*
		constexpr auto Image_Main = 0x388; // UImage*
		constexpr auto Text_Main = 0x390; // FText
		constexpr auto SlateBrush_ImageMain = 0x3a8; // FSlateBrush
		constexpr auto bFocusOnHovered = 0x430; // bool
		constexpr auto bButtonFocused = 0x431; // bool
	}

	namespace n_UNiagaraScript {
		constexpr auto Usage = 0x28; // ENiagaraScriptUsage
		constexpr auto UsageIndex = 0x2c; // int32_t
		constexpr auto UsageId = 0x30; // FGuid
		constexpr auto RapidIterationParameters = 0x40; // FNiagaraParameterStore
		constexpr auto ScriptExecutionParamStore = 0xb8; // FNiagaraScriptExecutionParameterStore
		constexpr auto ScriptExecutionBoundParameters = 0x150; // TArray<FNiagaraBoundParameter>
		constexpr auto CachedScriptVMId = 0x160; // FNiagaraVMExecutableDataId
		constexpr auto CachedScriptVM = 0x1b8; // FNiagaraVMExecutableData
		constexpr auto CachedParameterCollectionReferences = 0x298; // TArray<UNiagaraParameterCollection*>
		constexpr auto CachedDefaultDataInterfaces = 0x2a8; // TArray<FNiagaraScriptDataInterfaceInfo>
	}

	namespace n_UPolyEditCutProperties {
		constexpr auto Orientation = 0x60; // EPolyEditCutPlaneOrientation
		constexpr auto bSnapToVertices = 0x64; // bool
	}

	namespace n_UFormationPanel {
		constexpr auto FormationHorizontalBox = 0x260; // UHorizontalBox*
	}

	namespace n_AVolumetricCloud {
		constexpr auto VolumetricCloudComponent = 0x310; // UVolumetricCloudComponent*
	}

	namespace n_UGameplayTask_WaitDelay {
		constexpr auto OnFinish = 0x68; // FMulticastInlineDelegate
	}

	namespace n_UMaterialExpressionSphericalParticleOpacity {
		constexpr auto Density = 0x40; // FExpressionInput
		constexpr auto ConstantDensity = 0x54; // float
	}

	namespace n_UArrowComponent {
		constexpr auto ArrowColor = 0x488; // FColor
		constexpr auto ArrowSize = 0x48c; // float
		constexpr auto ArrowLength = 0x490; // float
		constexpr auto ScreenSize = 0x494; // float
		constexpr auto bIsScreenSizeScaled = 0x498; // char : 1
		constexpr auto bTreatAsASprite = 0x498; // char : 1
	}

	namespace n_UGeometryCache {
		constexpr auto Materials = 0x30; // TArray<UMaterialInterface*>
		constexpr auto Tracks = 0x40; // TArray<UGeometryCacheTrack*>
		constexpr auto StartFrame = 0x60; // int32_t
		constexpr auto EndFrame = 0x64; // int32_t
	}

	namespace n_USGGameDataInteractiveImageData {
		constexpr auto InteractiveSelectedImage = 0x28; // TMap<EInteractiveMenus, FSoftObjectPath>
		constexpr auto InteractiveSelectedMulImage = 0x78; // TMap<int32_t, FSoftObjectPath>
		constexpr auto InteractiveUnSelectedImage = 0xc8; // TMap<EInteractiveMenus, FSoftObjectPath>
		constexpr auto InteractiveUnSelectedMulImage = 0x118; // TMap<int32_t, FSoftObjectPath>
	}

	namespace n_UUI_AimDirection {
		constexpr auto DirectionArrowImage = 0x260; // UImage*
		constexpr auto FadeAnimation = 0x268; // UWidgetAnimation*
		constexpr auto MaxWaitTime = 0x27c; // float
		constexpr auto FadePlayRateRange = 0x280; // FVector2D
		constexpr auto TMap_DirectionWidgetData = 0x288; // TMap<EAimDirection, FDirectionWidgetData>
	}

	namespace n_UUI_Government {
		constexpr auto GovernmentName = 0x260; // FString
		constexpr auto RegionID = 0x270; // FName
		constexpr auto OccupiedGuildID = 0x278; // FName
	}

	namespace n_USoundNodeGroupControl {
		constexpr auto GroupSizes = 0x48; // TArray<int32_t>
	}

	namespace n_UModularSynthComponent {
		constexpr auto VoiceCount = 0x6d0; // int32_t
	}

	namespace n_UAnimationDataSourceRegistry {
		constexpr auto DataSources = 0x28; // TMap<FName, TWeakObjectPtr<UObject>>
	}

	namespace n_UUI_MiniMap {
		constexpr auto MiniMap = 0x2d8; // USGMiniMap*
		constexpr auto TbMousePosition = 0x2e0; // UTextBlock*
	}

	namespace n_UForceFeedbackAttenuation {
		constexpr auto Attenuation = 0x28; // FForceFeedbackAttenuationSettings
	}

	namespace n_UMaterialExpressionArccosineFast {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UTransformGizmo {
		constexpr auto ActiveTarget = 0x40; // UTransformProxy*
		constexpr auto bSnapToWorldGrid = 0x48; // bool
		constexpr auto bGridSizeIsExplicit = 0x49; // bool
		constexpr auto ExplicitGridSize = 0x4c; // FVector
		constexpr auto bRotationGridSizeIsExplicit = 0x58; // bool
		constexpr auto ExplicitRotationGridSize = 0x5c; // FRotator
		constexpr auto bSnapToWorldRotGrid = 0x68; // bool
		constexpr auto bUseContextCoordinateSystem = 0x69; // bool
		constexpr auto CurrentCoordinateSystem = 0x6c; // EToolContextCoordinateSystem
		constexpr auto ActiveComponents = 0x100; // TArray<UPrimitiveComponent*>
		constexpr auto NonuniformScaleComponents = 0x110; // TArray<UPrimitiveComponent*>
		constexpr auto ActiveGizmos = 0x120; // TArray<UInteractiveGizmo*>
		constexpr auto CameraAxisSource = 0x140; // UGizmoConstantFrameAxisSource*
		constexpr auto AxisXSource = 0x148; // UGizmoComponentAxisSource*
		constexpr auto AxisYSource = 0x150; // UGizmoComponentAxisSource*
		constexpr auto AxisZSource = 0x158; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisXSource = 0x160; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisYSource = 0x168; // UGizmoComponentAxisSource*
		constexpr auto UnitAxisZSource = 0x170; // UGizmoComponentAxisSource*
		constexpr auto StateTarget = 0x178; // UGizmoTransformChangeStateTarget*
		constexpr auto ScaledTransformSource = 0x180; // UGizmoScaledTransformSource*
	}

	namespace n_ASGEnvironmentVolume {
		constexpr auto VolumeName = 0x348; // FText
		constexpr auto OverlapActors = 0x360; // TArray<AActor*>
		constexpr auto OverlapBuff = 0x370; // USGBuff*
		constexpr auto AddBuffTimer = 0x378; // FTimerHandle
		constexpr auto bEnterDestroy = 0x380; // char : 1
		constexpr auto bOnlyAddBuffToSameTeamId = 0x380; // char : 1
	}

	namespace n_UCameraShakeSourceComponent {
		constexpr auto Attenuation = 0x208; // ECameraShakeAttenuation
		constexpr auto InnerAttenuationRadius = 0x20c; // float
		constexpr auto OuterAttenuationRadius = 0x210; // float
		constexpr auto CameraShake = 0x218; // UCameraShakeBase*
		constexpr auto bAutoStart = 0x220; // bool
	}

	namespace n_UDatasmithCineCameraComponentTemplate {
		constexpr auto FilmbackSettings = 0x30; // FDatasmithCameraFilmbackSettingsTemplate
		constexpr auto LensSettings = 0x38; // FDatasmithCameraLensSettingsTemplate
		constexpr auto FocusSettings = 0x3c; // FDatasmithCameraFocusSettingsTemplate
		constexpr auto CurrentFocalLength = 0x44; // float
		constexpr auto CurrentAperture = 0x48; // float
		constexpr auto PostProcessSettings = 0x50; // FDatasmithPostProcessSettingsTemplate
	}

	namespace n_USourceEffectMidSideSpreaderPreset {
		constexpr auto Settings = 0x98; // FSourceEffectMidSideSpreaderSettings
	}

	namespace n_UMaterialExpressionLandscapeLayerSample {
		constexpr auto ParameterName = 0x40; // FName
		constexpr auto PreviewWeight = 0x48; // float
		constexpr auto ExpressionGUID = 0x4c; // FGuid
	}

	namespace n_UInputSettings {
		constexpr auto AxisConfig = 0x28; // TArray<FInputAxisConfigEntry>
		constexpr auto bAltEnterTogglesFullscreen = 0x38; // char : 1
		constexpr auto bF11TogglesFullscreen = 0x38; // char : 1
		constexpr auto bUseMouseForTouch = 0x38; // char : 1
		constexpr auto bEnableMouseSmoothing = 0x38; // char : 1
		constexpr auto bEnableFOVScaling = 0x38; // char : 1
		constexpr auto bCaptureMouseOnLaunch = 0x38; // char : 1
		constexpr auto bDefaultViewportMouseLock = 0x38; // char : 1
		constexpr auto bAlwaysShowTouchInterface = 0x38; // char : 1
		constexpr auto bShowConsoleOnFourFingerTap = 0x39; // char : 1
		constexpr auto bEnableGestureRecognizer = 0x39; // char : 1
		constexpr auto bUseAutocorrect = 0x3a; // bool
		constexpr auto ExcludedAutocorrectOS = 0x40; // TArray<FString>
		constexpr auto ExcludedAutocorrectCultures = 0x50; // TArray<FString>
		constexpr auto ExcludedAutocorrectDeviceModels = 0x60; // TArray<FString>
		constexpr auto DefaultViewportMouseCaptureMode = 0x70; // EMouseCaptureMode
		constexpr auto DefaultViewportMouseLockMode = 0x71; // EMouseLockMode
		constexpr auto FOVScale = 0x74; // float
		constexpr auto DoubleClickTime = 0x78; // float
		constexpr auto ActionMappings = 0x80; // TArray<FInputActionKeyMapping>
		constexpr auto AxisMappings = 0x90; // TArray<FInputAxisKeyMapping>
		constexpr auto SpeechMappings = 0xa0; // TArray<FInputActionSpeechMapping>
		constexpr auto DefaultPlayerInputClass = 0xb0; // TSoftClassPtr<UObject>
		constexpr auto DefaultInputComponentClass = 0xd8; // TSoftClassPtr<UObject>
		constexpr auto DefaultTouchInterface = 0x100; // FSoftObjectPath
		constexpr auto ConsoleKey = 0x118; // FKey
		constexpr auto ConsoleKeys = 0x130; // TArray<FKey>
	}

	namespace n_UWBP_ProducerName_C {
		constexpr auto AngelaLogo = 0x260; // UImage*
		constexpr auto EmpireLogo = 0x268; // UImage*
		constexpr auto StudioLogo = 0x270; // UImage*
		constexpr auto WBP_ProducerSlot = 0x278; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_2 = 0x280; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_3 = 0x288; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_4 = 0x290; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_5 = 0x298; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_6 = 0x2a0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_7 = 0x2a8; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSlot_8 = 0x2b0; // UWBP_ProducerSlot_C*
		constexpr auto WBP_ProducerSplitLine = 0x2b8; // UWBP_ProducerSplitLine_C*
	}

	namespace n_UGameplayCueNotify_Static {
		constexpr auto GameplayCueTag = 0x28; // FGameplayTag
		constexpr auto GameplayCueName = 0x30; // FName
		constexpr auto IsOverride = 0x38; // bool
	}

	namespace n_APartyBeaconHost {
		constexpr auto State = 0x338; // UPartyBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x3a0; // bool
		constexpr auto SessionTimeoutSecs = 0x3a4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x3a8; // float
	}

	namespace n_UReflectionCaptureComponent {
		constexpr auto CaptureOffsetComponent = 0x208; // UBillboardComponent*
		constexpr auto ReflectionSourceType = 0x210; // EReflectionSourceType
		constexpr auto MobileReflectionCompression = 0x211; // EMobileReflectionCompression
		constexpr auto Cubemap = 0x218; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x220; // float
		constexpr auto Brightness = 0x224; // float
		constexpr auto bModifyMaxValueRGBM = 0x228; // bool
		constexpr auto MaxValueRGBM = 0x22c; // float
		constexpr auto CaptureOffset = 0x230; // FVector
		constexpr auto MapBuildDataId = 0x23c; // FGuid
		constexpr auto CachedEncodedHDRCubemap = 0x260; // UTextureCube*
	}

	namespace n_UGizmoWorldAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto AxisIndex = 0x3c; // int32_t
	}

	namespace n_UGameCharacterQuestObject {
		constexpr auto ObjectDescText = 0x260; // UTextBlock*
		constexpr auto ObjectStateImage = 0x268; // UImage*
		constexpr auto CompleteAnim = 0x270; // UWidgetAnimation*
		constexpr auto CompleteColor = 0x278; // FLinearColor
		constexpr auto UnCompleteColor = 0x288; // FLinearColor
		constexpr auto AnimPlaySpeed = 0x298; // float
		constexpr auto TitleFont = 0x2a0; // FSlateFontInfo
		constexpr auto ObjectFont = 0x2f8; // FSlateFontInfo
	}

	namespace n_UGroomCreateBindingOptions {
		constexpr auto SourceSkeletalMesh = 0x28; // USkeletalMesh*
		constexpr auto TargetSkeletalMesh = 0x30; // USkeletalMesh*
		constexpr auto NumInterpolationPoints = 0x38; // int32_t
		constexpr auto MatchingSection = 0x3c; // int32_t
	}

	namespace n_UHuangLiEffectPanel {
		constexpr auto BackButton = 0x2d8; // UButton*
		constexpr auto TitleText = 0x2e0; // UTextBlock*
		constexpr auto DetailText = 0x2e8; // UTextBlock*
	}

	namespace n_URadioPerkRowButton {
		constexpr auto SkillType = 0x540; // ESkillType
		constexpr auto SkillLevelBgPressedTexture = 0x548; // TSoftObjectPtr<UTexture2D>
		constexpr auto SkillLevelBgReleasedTexture = 0x570; // TSoftObjectPtr<UTexture2D>
		constexpr auto PressedColor = 0x598; // FLinearColor
		constexpr auto ReleasedColor = 0x5a8; // FLinearColor
		constexpr auto ImgIcon = 0x5b8; // UImage*
		constexpr auto ImgSkillLevelBg = 0x5c0; // UImage*
		constexpr auto TbSkillName = 0x5c8; // UTextBlock*
		constexpr auto TbSkillLevel = 0x5d0; // UTextBlock*
		constexpr auto HbMastery = 0x5d8; // UHorizontalBox*
		constexpr auto TbMastery = 0x5e0; // UTextBlock*
	}

	namespace n_ASGStructureLadder {
		constexpr auto bUseSkeletalMesh = 0xb98; // char : 1
		constexpr auto CanUseAngle = 0xb9c; // float
		constexpr auto bIsAerialLadder = 0xba0; // char : 1
		constexpr auto bBuilded = 0xba0; // char : 1
		constexpr auto BuildCheckDistance = 0xba4; // float
		constexpr auto PushCheckDistance = 0xba8; // float
		constexpr auto ClimbStartTolerance = 0xbac; // float
		constexpr auto PenetrationTraceHeight = 0xbb0; // float
		constexpr auto PenetrationStartStep = 0xbb4; // int32_t
		constexpr auto LastResponseClimbLadderTime = 0xbb8; // double
		constexpr auto BuildAerialLadderParticle = 0xbc0; // UParticleSystem*
		constexpr auto BuildAerialLadderParticleComp = 0xbc8; // TWeakObjectPtr<UParticleSystemComponent>
		constexpr auto BuildAerialLadderCurve = 0xbd0; // UCurveFloat*
		constexpr auto BuildAerialLadderTransformLS = 0xbe0; // FTransform
		constexpr auto BuildAerialLadderMontage = 0xc10; // UAnimMontage*
		constexpr auto BuildAerialLadderSuccessPosition = 0xc18; // float
		constexpr auto PushAerialLadderParticle = 0xc20; // UParticleSystem*
		constexpr auto PushAerialLadderParticleComp = 0xc28; // TWeakObjectPtr<UParticleSystemComponent>
		constexpr auto PushAerialLadderCurve = 0xc30; // UCurveFloat*
		constexpr auto PushAerialLadderTransformLS = 0xc40; // FTransform
		constexpr auto PushAerialLadderMontage = 0xc70; // UAnimMontage*
		constexpr auto PushAerialLadderSuccessPosition = 0xc78; // float
		constexpr auto OriginRotation = 0xc7c; // FRotator
		constexpr auto FinishRotation = 0xc88; // FRotator
		constexpr auto BuildOneSecondAddLocalPitch = 0xc94; // float
		constexpr auto PushOneSecondAddLocalPitch = 0xc98; // float
		constexpr auto PushUseDurable = 0xc9c; // float
		constexpr auto RotateTimerHandle = 0xca8; // FTimerHandle
		constexpr auto bBuildingRotate = 0xcb0; // char : 1
		constexpr auto AccumulateRotateTime = 0xcb4; // float
		constexpr auto bPushingRotate = 0xcbc; // char : 1
		constexpr auto ClimbCharacters = 0xcc0; // TArray<TWeakObjectPtr<ABaseCharacter>>
	}

	namespace n_AGameState {
		constexpr auto MatchState = 0x370; // FName
		constexpr auto PreviousMatchState = 0x378; // FName
		constexpr auto ElapsedTime = 0x380; // int32_t
	}

	namespace n_UMaterialExpressionReroute {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMiniMapPOI {
		constexpr auto POIType = 0x260; // EMapPOIType
		constexpr auto POIPriority = 0x264; // int32_t
		constexpr auto POIGroupIndex = 0x268; // int32_t
		constexpr auto bNeedUpdateSize = 0x26c; // char : 1
		constexpr auto HitOvodusButtonName = 0x270; // FName
		constexpr auto AdvancedHitTexture = 0x278; // UTexture2D*
		constexpr auto InMiniMapTexture = 0x280; // TSoftObjectPtr<UTexture2D>
		constexpr auto InMiniMapColor = 0x2a8; // FLinearColor
		constexpr auto bShowOutOfMiniMap = 0x2b8; // char : 1
		constexpr auto OutOfMiniMapTexture = 0x2c0; // TSoftObjectPtr<UTexture2D>
		constexpr auto OutOfMiniMapColor = 0x2e8; // FLinearColor
		constexpr auto bShowTips = 0x2f8; // char : 1
		constexpr auto TipsTemplate = 0x300; // USGToolTipWidget*
		constexpr auto LastOwnerLocation = 0x310; // FVector
		constexpr auto LastOwnerRotation = 0x31c; // FRotator
		constexpr auto bIsOut = 0x328; // char : 1
		constexpr auto MyCanvasSlot = 0x330; // UCanvasPanelSlot*
		constexpr auto TargetOpacity = 0x338; // float
		constexpr auto OnMiniMapPOIMouseDown = 0x348; // FMulticastInlineDelegate
		constexpr auto OnMiniMapPOIMouseUp = 0x358; // FMulticastInlineDelegate
		constexpr auto TheImage = 0x370; // UImage*
		constexpr auto MainOverlay = 0x378; // UOverlay*
	}

	namespace n_UARFaceComponent {
		constexpr auto TransformSetting = 0x288; // EARFaceTransformMixing
		constexpr auto bUpdateVertexNormal = 0x289; // bool
		constexpr auto bFaceOutOfScreen = 0x28a; // bool
		constexpr auto ReplicatedPayload = 0x290; // FARFaceUpdatePayload
	}

	namespace n_USoundNodeTime {
		constexpr auto PreviewTimeVolumeMultiplierSet = 0x48; // float [0x2]
	}

	namespace n_UWBP_ScalabilityFloatItem_C {
		constexpr auto UberGraphFrame = 0x2e0; // FPointerToUberGraphFrame
		constexpr auto HorizontalBox = 0x2e8; // UHorizontalBox*
		constexpr auto ImgScrollBg = 0x2f0; // UImage*
		constexpr auto Slider = 0x2f8; // USlider*
		constexpr auto TbTitle = 0x300; // UTextBlock*
		constexpr auto TbValue = 0x308; // UTextBlock*
		constexpr auto TbVariableValue = 0x310; // UTextBlock*
	}

	namespace n_UAnimBlueprint {
		constexpr auto TargetSkeleton = 0xa8; // USkeleton*
		constexpr auto Groups = 0xb0; // TArray<FAnimGroupInfo>
		constexpr auto bUseMultiThreadedAnimationUpdate = 0xc0; // bool
		constexpr auto bWarnAboutBlueprintUsage = 0xc1; // bool
	}

	namespace n_UHorizonImage {
		constexpr auto UVRegion = 0x218; // FBox2D
	}

	namespace n_UPrefabToolSettings {
		constexpr auto bReplaceActorsWithCreatedPrefab = 0x28; // bool
		constexpr auto bAutoIncludeAttachedActorsWhenCreateNewPrefab = 0x29; // bool
		constexpr auto bNestedPrefabSupport = 0x2a; // bool
		constexpr auto bRestorePrefabActorCollapseStatusAfterPIE = 0x2b; // bool
		constexpr auto bCollapseAllPrefabActorsAfterMapOpened = 0x2c; // bool
		constexpr auto bMoveActorsInWorldAfterSetPrefabPivot = 0x2d; // bool
		constexpr auto bDuplicateNoRevertWithOffset = 0x2e; // bool
		constexpr auto NewPrefabNamePattern = 0x30; // FString
		constexpr auto UITheme = 0x40; // EPTUITheme
		constexpr auto bUpdateAllPrefabActorsWhenOpenMap = 0x44; // bool
		constexpr auto bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap = 0x45; // bool
		constexpr auto bUpdateAllPrefabActorsWhenApply = 0x46; // bool
		constexpr auto bApplyToNestedPrefab = 0x47; // bool
		constexpr auto bEnableApplyFromDisconnectedPrefabActor = 0x48; // bool
		constexpr auto bAutoAddRemoveVariantActorPrefix = 0x49; // bool
		constexpr auto VariantActorPrefix = 0x50; // FString
		constexpr auto bEnablePrefabComponentVisualizer = 0x60; // bool
		constexpr auto PrefabComponentVisualizerType = 0x61; // EPrefabVisualizerType
		constexpr auto bDisplayPrefabComponentVisualizerEvenNotSelected = 0x62; // bool
		constexpr auto PrefabViewVisualizerColor = 0x64; // FColor
		constexpr auto TargetActorColor = 0x68; // FColor
		constexpr auto UnLockedConnectedColor = 0x6c; // FColor
		constexpr auto LockedConnectedColor = 0x70; // FColor
		constexpr auto UnLockedDisConnectedColor = 0x74; // FColor
		constexpr auto LockedDisConnectedColor = 0x78; // FColor
		constexpr auto UnLockedNoPrefabAssignedColor = 0x7c; // FColor
		constexpr auto LockedNoPrefabAssignedColor = 0x80; // FColor
		constexpr auto PrefabMaterialPath = 0x88; // FSoftObjectPath
		constexpr auto bShadedPrefabViewVisualizer = 0xc8; // bool
		constexpr auto bLockPrefabSelectionByDefault = 0xc9; // bool
		constexpr auto bDisableLockPrefabSelectionFeature = 0xca; // bool
		constexpr auto bForceApplyPerInstanceVertexColor = 0xcb; // bool
		constexpr auto bHideChildActorsInPIEIfHiddenInEditor = 0xcc; // bool
		constexpr auto bCanToggleChildActorVisibilityInPIE = 0xcd; // bool
		constexpr auto bIgnoreLayersInPrefab = 0xcf; // bool
		constexpr auto bSupportGenerateBlueprint = 0xd0; // bool
		constexpr auto bHarvestComponentsWhenGeneratingBlueprint = 0xd1; // bool
		constexpr auto bUseActorNameAsVariableNameWhenGeneratingBlueprint = 0xd2; // bool
		constexpr auto bForceMobilityToMovableWhenGeneratingBlueprint = 0xd3; // bool
		constexpr auto IgnoreActorClassesWhenGeneratingBlueprint = 0xd8; // TArray<AActor*>
		constexpr auto IgnoreActorTagsWhenGeneratingBlueprint = 0xe8; // TArray<FName>
		constexpr auto bFlashPrefabWindowForTargetPrefabActor = 0xf8; // bool
		constexpr auto bEnablePrefabTextEditor = 0xf9; // bool
		constexpr auto bDebugMode = 0xfa; // bool
		constexpr auto bDisableThumbnailRender = 0xfb; // bool
		constexpr auto bShowPrefabInstanceTagInPrefabToolWindow = 0xfc; // bool
	}

	namespace n_UN_ItemCraftQueueSlot {
		constexpr auto CraftingImage = 0xf80; // UImage*
		constexpr auto InnerPanel = 0xf88; // UCanvasPanel*
		constexpr auto GameInnerPanelOffset = 0xf90; // FVector4
		constexpr auto bIsClear = 0xfa0; // char : 1
		constexpr auto CraftingProgressBar = 0xfa8; // UProgressBar*
		constexpr auto RemaingingTimeText = 0xfb0; // UTextBlock*
	}

	namespace n_UGeometryCacheTrack_FlipbookAnimation {
		constexpr auto NumMeshSamples = 0x58; // uint32_t
	}

	namespace n_ASG_AIManager {
		constexpr auto CustomSceneComponent = 0x310; // USceneComponent*
		constexpr auto PreviewStaticMeshComponent = 0x318; // UStaticMeshComponent*
		constexpr auto PreviewInstancedStaticMeshComponent = 0x320; // UInstancedStaticMeshComponent*
		constexpr auto PointParticle = 0x330; // UParticleSystem*
		constexpr auto PointParticleComponents = 0x338; // TArray<UParticleSystemComponent*>
		constexpr auto FormationData = 0x358; // FFormationData
		constexpr auto DT_FormationConfig = 0x398; // UDataTable*
		constexpr auto DrawDebugFormationNumber = 0x3b0; // int32_t
		constexpr auto bIsPriorityRow = 0x3b4; // char : 1
		constexpr auto bIsPriorityRowForward = 0x3b4; // char : 1
		constexpr auto bIsPriorityColumnForward = 0x3b4; // char : 1
		constexpr auto FormationDistance = 0x3b8; // float
		constexpr auto CircularFormationDistance = 0x3bc; // float
		constexpr auto SpawnPawnClass = 0x3d0; // APawn*
		constexpr auto SpawnCapsuleData = 0x3d8; // FVector2D
		constexpr auto bInGroundOnSpawn = 0x3e0; // char : 1
		constexpr auto DrawDebugTraceTime = 0x3e4; // float
		constexpr auto SpawnHeightTraceLength = 0x3e8; // float
		constexpr auto SpawnTraceChannel = 0x3ec; // ETraceTypeQuery
		constexpr auto bIsFollowFromSpawnManager = 0x3ed; // char : 1
		constexpr auto FollowSphereRadiusOnTrace = 0x3f0; // float
		constexpr auto FollowObjectTypes = 0x3f8; // TArray<EObjectTypeQuery>
		constexpr auto bIsDrawDebugPreviewTrace = 0x4d0; // char : 1
		constexpr auto PreviewFormationTraceDistance = 0x4d4; // float
		constexpr auto AdjustHeightRange = 0x4d8; // FVector2D
		constexpr auto PreviewFormationTraceChannel = 0x4e0; // ETraceTypeQuery
	}

	namespace n_UGameplayEffect {
		constexpr auto DurationPolicy = 0x30; // EGameplayEffectDurationType
		constexpr auto DurationMagnitude = 0x38; // FGameplayEffectModifierMagnitude
		constexpr auto Period = 0x1e0; // FScalableFloat
		constexpr auto bExecutePeriodicEffectOnApplication = 0x200; // bool
		constexpr auto PeriodicInhibitionPolicy = 0x201; // EGameplayEffectPeriodInhibitionRemovedPolicy
		constexpr auto Modifiers = 0x208; // TArray<FGameplayModifierInfo>
		constexpr auto Executions = 0x218; // TArray<FGameplayEffectExecutionDefinition>
		constexpr auto ChanceToApplyToTarget = 0x228; // FScalableFloat
		constexpr auto ApplicationRequirements = 0x248; // TArray<UGameplayEffectCustomApplicationRequirement*>
		constexpr auto TargetEffectClasses = 0x258; // TArray<UGameplayEffect*>
		constexpr auto ConditionalGameplayEffects = 0x268; // TArray<FConditionalGameplayEffect>
		constexpr auto OverflowEffects = 0x278; // TArray<UGameplayEffect*>
		constexpr auto bDenyOverflowApplication = 0x288; // bool
		constexpr auto bClearStackOnOverflow = 0x289; // bool
		constexpr auto PrematureExpirationEffectClasses = 0x290; // TArray<UGameplayEffect*>
		constexpr auto RoutineExpirationEffectClasses = 0x2a0; // TArray<UGameplayEffect*>
		constexpr auto bRequireModifierSuccessToTriggerCues = 0x2b0; // bool
		constexpr auto bSuppressStackingCues = 0x2b1; // bool
		constexpr auto GameplayCues = 0x2b8; // TArray<FGameplayEffectCue>
		constexpr auto UIData = 0x2c8; // UGameplayEffectUIData*
		constexpr auto InheritableGameplayEffectTags = 0x2d0; // FInheritedTagContainer
		constexpr auto InheritableOwnedTagsContainer = 0x330; // FInheritedTagContainer
		constexpr auto OngoingTagRequirements = 0x390; // FGameplayTagRequirements
		constexpr auto ApplicationTagRequirements = 0x3d0; // FGameplayTagRequirements
		constexpr auto RemovalTagRequirements = 0x410; // FGameplayTagRequirements
		constexpr auto RemoveGameplayEffectsWithTags = 0x450; // FInheritedTagContainer
		constexpr auto GrantedApplicationImmunityTags = 0x4b0; // FGameplayTagRequirements
		constexpr auto GrantedApplicationImmunityQuery = 0x4f0; // FGameplayEffectQuery
		constexpr auto RemoveGameplayEffectQuery = 0x648; // FGameplayEffectQuery
		constexpr auto StackingType = 0x799; // EGameplayEffectStackingType
		constexpr auto StackLimitCount = 0x79c; // int32_t
		constexpr auto StackDurationRefreshPolicy = 0x7a0; // EGameplayEffectStackingDurationPolicy
		constexpr auto StackPeriodResetPolicy = 0x7a1; // EGameplayEffectStackingPeriodPolicy
		constexpr auto StackExpirationPolicy = 0x7a2; // EGameplayEffectStackingExpirationPolicy
		constexpr auto GrantedAbilities = 0x7a8; // TArray<FGameplayAbilitySpecDef>
	}

	namespace n_USpaceCurveDeformationMechanicPropertySet {
		constexpr auto TransformMode = 0x60; // ESpaceCurveControlPointTransformMode
		constexpr auto TransformOrigin = 0x64; // ESpaceCurveControlPointOriginMode
		constexpr auto Softness = 0x68; // float
		constexpr auto SoftFalloff = 0x6c; // ESpaceCurveControlPointFalloffType
	}

	namespace n_ASGStructureBed {
		constexpr auto bReSpawnOnlyOwner = 0xba0; // char : 1
		constexpr auto bReSpawnDestroy = 0xba0; // char : 1
		constexpr auto RespawnLocationOffset = 0xba4; // FVector
		constexpr auto RespawnRotOffset = 0xbb0; // FRotator
		constexpr auto CooldownTime = 0xbbc; // float
		constexpr auto ConsumeHpWhenUsed = 0xbc0; // float
		constexpr auto BedID = 0xbc4; // int32_t
		constexpr auto BedName = 0xbc8; // FString
		constexpr auto NextUseTime = 0xbd8; // double
	}

	namespace n_UStructureAnimalWatchInfoHUD {
		constexpr auto AnimalWatchPanel = 0x360; // UCanvasPanel*
		constexpr auto AnimalWatchText = 0x368; // UTextBlock*
		constexpr auto BindStructureAnimalWatch = 0x370; // TWeakObjectPtr<ASGStructureTurretAnimalWatch>
	}

	namespace n_ALargeTerrain_Central_Mainlight_C {
		constexpr auto UberGraphFrame = 0x318; // FPointerToUberGraphFrame
	}

	namespace n_UCombineMeshesTool {
		constexpr auto BasicProperties = 0x90; // UCombineMeshesToolProperties*
		constexpr auto HandleSourceProperties = 0x98; // UOnAcceptHandleSourcesProperties*
	}

	namespace n_UUI_GenericConnectWaiting {
		constexpr auto AutoKillTimer = 0x2d8; // FTimerHandle
	}

	namespace n_UCameraShakeBase {
		constexpr auto bSingleInstance = 0x28; // bool
		constexpr auto ShakeScale = 0x2c; // float
		constexpr auto CameraManager = 0x30; // APlayerCameraManager*
	}

	namespace n_ASkeletalMeshActor {
		constexpr auto bShouldDoAnimNotifies = 0x318; // char : 1
		constexpr auto bWakeOnLevelStart = 0x318; // char : 1
		constexpr auto SkeletalMeshComponent = 0x320; // USkeletalMeshComponent*
		constexpr auto ReplicatedMesh = 0x328; // USkeletalMesh*
		constexpr auto ReplicatedPhysAsset = 0x330; // UPhysicsAsset*
		constexpr auto ReplicatedMaterial0 = 0x338; // UMaterialInterface*
		constexpr auto ReplicatedMaterial1 = 0x340; // UMaterialInterface*
	}

	namespace n_UMovieSceneCompiledData {
		constexpr auto EvaluationTemplate = 0x28; // FMovieSceneEvaluationTemplate
		constexpr auto Hierarchy = 0x188; // FMovieSceneSequenceHierarchy
		constexpr auto EntityComponentField = 0x2a0; // FMovieSceneEntityComponentField
		constexpr auto TrackTemplateField = 0x390; // FMovieSceneEvaluationField
		constexpr auto DeterminismFences = 0x3c0; // TArray<FFrameTime>
		constexpr auto CompiledSignature = 0x3d0; // FGuid
		constexpr auto CompilerVersion = 0x3e0; // FGuid
		constexpr auto AccumulatedMask = 0x3f0; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AllocatedMask = 0x3f1; // FMovieSceneSequenceCompilerMaskStruct
		constexpr auto AccumulatedFlags = 0x3f2; // EMovieSceneSequenceFlags
	}

	namespace n_UParticleModuleLocation_Seeded {
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UPhysicalMaterialMask {
		constexpr auto UVChannelIndex = 0x28; // int32_t
		constexpr auto AddressX = 0x2c; // TextureAddress
		constexpr auto AddressY = 0x2d; // TextureAddress
	}

	namespace n_UTipsGuildIconSlot {
		constexpr auto Image_GuildIcon = 0x2d8; // UImage*
	}

	namespace n_UInterpTrackInstColorProp {
		constexpr auto ResetColor = 0x58; // FColor
	}

	namespace n_UNewsClientData_HorseHungry {
		constexpr auto HorseChunkId = 0x50; // FGuid
	}

	namespace n_USelfPOITips {
		constexpr auto TbLocation = 0x288; // UTextBlock*
	}

	namespace n_ASGPlayerState {
		constexpr auto BasePlayerDataPtr = 0x418; // TWeakObjectPtr<UBasePlayerData>
		constexpr auto bGuildAsyncWaiting = 0x4d0; // char : 1
		constexpr auto bGuildOwner = 0x4e0; // char : 1
		constexpr auto MyGuildDetailData = 0x4e8; // FGuildDetailData
		constexpr auto MyGuildBriefData = 0x7f8; // FGuildBriefData
		constexpr auto bAllianceOwner = 0x8d0; // char : 1
		constexpr auto AllGuildBriefDatas = 0x8d8; // TMap<FGuid, FGuildBriefData>
		constexpr auto MyAllianceDetailDatas = 0x928; // TMap<FGuid, FAllianceDetailData>
		constexpr auto AllAllianceBriefDatas = 0x978; // TMap<FGuid, FAllianceBriefData>
		constexpr auto MyAllianceGuildInfos = 0x9c8; // TArray<FAllianceGuildInfo>
		constexpr auto MyGuildStructureData = 0xa60; // FGuildStructureData
		constexpr auto MyGuildStructureInfoData = 0xb00; // FGuildStructureInfoData
		constexpr auto MyCharacterStructureData = 0xb30; // FCharacterStructureData
		constexpr auto MyCharacterOccupySellInfo = 0xb50; // FOccupySellInfo
		constexpr auto MyGuildEventData = 0xb60; // FGuildEventData
		constexpr auto CharacterStatisticsInfo = 0xca0; // FCharacterStatisticsInfo
		constexpr auto AccomplishAchievements = 0xea8; // TArray<FAccomplishAchievementData>
		constexpr auto ItemOptionLogInfos = 0xf98; // TArray<FItemOptionLogInfo>
		constexpr auto AIAttackedTargetInfos = 0xfa8; // TArray<FAIAttackedTargetInfo>
	}

	namespace n_UDialogueVoice {
		constexpr auto Gender = 0x28; // EGrammaticalGender
		constexpr auto Plurality = 0x29; // EGrammaticalNumber
		constexpr auto LocalizationGUID = 0x2c; // FGuid
	}

	namespace n_UNiagaraParameterCollectionInstance {
		constexpr auto Collection = 0x28; // UNiagaraParameterCollection*
		constexpr auto OverridenParameters = 0x30; // TArray<FNiagaraVariable>
		constexpr auto ParameterStorage = 0x40; // FNiagaraParameterStore
	}

	namespace n_UWorldRankItemSlot {
		constexpr auto IsSelfItem = 0x260; // char : 1
		constexpr auto ItemSlotClass = 0x268; // UN_InventorySlot*
		constexpr auto RewardCanvasPanel = 0x270; // UCanvasPanel*
		constexpr auto RootSGUI = 0x280; // USGUI*
		constexpr auto BindInventoryComponent = 0x288; // TWeakObjectPtr<USGInventoryComponent>
		constexpr auto TempItems = 0x290; // TArray<USGItem*>
	}

	namespace n_ASGEmptyGameTrap {
		constexpr auto SceneRoot = 0x310; // USceneComponent*
		constexpr auto DecalComponent = 0x318; // UDecalComponent*
		constexpr auto BoxCollision = 0x320; // UBoxComponent*
		constexpr auto DecalMaterial = 0x328; // UMaterialInterface*
		constexpr auto DecalSize = 0x330; // FVector
		constexpr auto DecalLocationOffset = 0x33c; // FVector
		constexpr auto DecalRotationOffset = 0x348; // FRotator
		constexpr auto BoxSize = 0x354; // FVector
		constexpr auto BoxLocationOffset = 0x360; // FVector
		constexpr auto BoxRotationOffset = 0x36c; // FRotator
		constexpr auto bEnableBoxOverlap = 0x378; // char : 1
		constexpr auto bIsStartUp = 0x378; // char : 1
		constexpr auto HasStartUpTime = 0x37c; // float
		constexpr auto bUseLifeTime = 0x380; // char : 1
		constexpr auto TrapLiftTime = 0x384; // float
		constexpr auto AddBuffTimer = 0x390; // FTimerHandle
		constexpr auto OverlapActors = 0x398; // TArray<AActor*>
		constexpr auto OverlapBuff = 0x3a8; // USGBuff*
	}

	namespace n_UTireConfig {
		constexpr auto FrictionScale = 0x30; // float
		constexpr auto TireFrictionScales = 0x38; // TArray<FTireConfigMaterialFriction>
	}

	namespace n_UUI_AddView {
		constexpr auto OnValueChanged = 0x260; // FMulticastInlineDelegate
		constexpr auto nValue = 0x288; // int32_t
		constexpr auto nMaxValue = 0x28c; // int32_t
		constexpr auto nMinValue = 0x290; // int32_t
		constexpr auto BtnAdd = 0x298; // UButton*
		constexpr auto BtnReduce = 0x2a0; // UButton*
	}

	namespace n_UMapBuildDataRegistry {
		constexpr auto LevelLightingQuality = 0x28; // ELightingBuildQuality
	}

	namespace n_UGuildStoreItemPanel {
		constexpr auto InventoryPanel = 0x2d8; // UN_InventoryPanel*
		constexpr auto RemoteInventoryPanel = 0x2e0; // UN_InventoryPanel*
		constexpr auto SilverTextBlock = 0x2e8; // UTextBlock*
		constexpr auto SelectedToPlayerButton = 0x2f0; // UButton*
		constexpr auto AllToPlayerButton = 0x2f8; // UButton*
		constexpr auto SelectedToStoreButton = 0x300; // UButton*
		constexpr auto AllToStoreButton = 0x308; // UButton*
		constexpr auto RadioIndexToGuildTitle = 0x310; // TArray<int32_t>
		constexpr auto ConfirmGetItemUIOverride = 0x320; // UUI_GenericConfirmationDialog*
	}

	namespace n_UMaterialExpressionAbs {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBTDecorator_IsAtLocation {
		constexpr auto AcceptableRadius = 0x90; // float
		constexpr auto ParametrizedAcceptableRadius = 0x98; // FAIDataProviderFloatValue
		constexpr auto GeometricDistanceType = 0xd0; // FAIDistanceType
		constexpr auto bUseParametrizedRadius = 0xd4; // char : 1
		constexpr auto bUseNavAgentGoalLocation = 0xd4; // char : 1
		constexpr auto bPathFindingBasedTest = 0xd4; // char : 1
	}

	namespace n_UUI_ProducerSlot {
		constexpr auto IntroTextBlock = 0x260; // UTextBlock*
		constexpr auto NamesVertical = 0x268; // UVerticalBox*
		constexpr auto IntroText = 0x270; // FText
		constexpr auto NameLines = 0x288; // TArray<FString>
		constexpr auto IntroColor = 0x298; // FLinearColor
		constexpr auto IntroFont = 0x2a8; // FSlateFontInfo
		constexpr auto NameColor = 0x300; // FLinearColor
		constexpr auto NameFont = 0x310; // FSlateFontInfo
	}

	namespace n_UMaterialExpressionRuntimeVirtualTextureSample {
		constexpr auto Coordinates = 0x40; // FExpressionInput
		constexpr auto WorldPosition = 0x54; // FExpressionInput
		constexpr auto MipValue = 0x68; // FExpressionInput
		constexpr auto VirtualTexture = 0x80; // URuntimeVirtualTexture*
		constexpr auto MaterialType = 0x88; // ERuntimeVirtualTextureMaterialType
		constexpr auto bSinglePhysicalSpace = 0x89; // bool
		constexpr auto bAdaptive = 0x8a; // bool
		constexpr auto MipValueMode = 0x8b; // ERuntimeVirtualTextureMipValueMode
		constexpr auto TextureAddressMode = 0x8c; // ERuntimeVirtualTextureTextureAddressMode
	}

	namespace n_USpinBoxWidgetStyle {
		constexpr auto SpinBoxStyle = 0x30; // FSpinBoxStyle
	}

	namespace n_UAudioComponent {
		constexpr auto Sound = 0x208; // USoundBase*
		constexpr auto InstanceParameters = 0x210; // TArray<FAudioComponentParam>
		constexpr auto SoundClassOverride = 0x220; // USoundClass*
		constexpr auto bAutoDestroy = 0x228; // char : 1
		constexpr auto bStopWhenOwnerDestroyed = 0x228; // char : 1
		constexpr auto bShouldRemainActiveIfDropped = 0x228; // char : 1
		constexpr auto bAllowSpatialization = 0x228; // char : 1
		constexpr auto bOverrideAttenuation = 0x228; // char : 1
		constexpr auto bOverrideSubtitlePriority = 0x228; // char : 1
		constexpr auto bIsUISound = 0x228; // char : 1
		constexpr auto bEnableLowPassFilter = 0x228; // char : 1
		constexpr auto bOverridePriority = 0x229; // char : 1
		constexpr auto bSuppressSubtitles = 0x229; // char : 1
		constexpr auto bAutoManageAttachment = 0x22a; // char : 1
		constexpr auto AudioComponentUserID = 0x230; // FName
		constexpr auto PitchModulationMin = 0x238; // float
		constexpr auto PitchModulationMax = 0x23c; // float
		constexpr auto VolumeModulationMin = 0x240; // float
		constexpr auto VolumeModulationMax = 0x244; // float
		constexpr auto VolumeMultiplier = 0x248; // float
		constexpr auto EnvelopeFollowerAttackTime = 0x24c; // int32_t
		constexpr auto EnvelopeFollowerReleaseTime = 0x250; // int32_t
		constexpr auto Priority = 0x254; // float
		constexpr auto SubtitlePriority = 0x258; // float
		constexpr auto SourceEffectChain = 0x260; // USoundEffectSourcePresetChain*
		constexpr auto PitchMultiplier = 0x268; // float
		constexpr auto LowPassFilterFrequency = 0x26c; // float
		constexpr auto AttenuationSettings = 0x278; // USoundAttenuation*
		constexpr auto AttenuationOverrides = 0x280; // FSoundAttenuationSettings
		constexpr auto ConcurrencySettings = 0x620; // USoundConcurrency*
		constexpr auto ConcurrencySet = 0x628; // TSet<USoundConcurrency*>
		constexpr auto AutoAttachLocationRule = 0x68c; // EAttachmentRule
		constexpr auto AutoAttachRotationRule = 0x68d; // EAttachmentRule
		constexpr auto AutoAttachScaleRule = 0x68e; // EAttachmentRule
		constexpr auto ModulationRouting = 0x690; // FSoundModulationDefaultRoutingSettings
		constexpr auto OnAudioPlayStateChanged = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnAudioVirtualizationChanged = 0x700; // FMulticastInlineDelegate
		constexpr auto OnAudioFinished = 0x728; // FMulticastInlineDelegate
		constexpr auto OnAudioPlaybackPercent = 0x750; // FMulticastInlineDelegate
		constexpr auto OnAudioSingleEnvelopeValue = 0x778; // FMulticastInlineDelegate
		constexpr auto OnAudioMultiEnvelopeValue = 0x7a0; // FMulticastInlineDelegate
		constexpr auto OnQueueSubtitles = 0x7c8; // FDelegate
		constexpr auto AutoAttachParent = 0x7d8; // TWeakObjectPtr<USceneComponent>
		constexpr auto AutoAttachSocketName = 0x7e0; // FName
	}

	namespace n_USoundSubmixBase {
		constexpr auto ChildSubmixes = 0x28; // TArray<USoundSubmixBase*>
	}

	namespace n_UParticleModuleCameraOffset {
		constexpr auto CameraOffset = 0x30; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x60; // char : 1
		constexpr auto UpdateMethod = 0x64; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UMaterialExpressionSkyAtmosphereLightDirection {
		constexpr auto LightIndex = 0x40; // int32_t
	}

	namespace n_UTextureRenderTargetVolume {
		constexpr auto SizeX = 0xe0; // int32_t
		constexpr auto SizeY = 0xe4; // int32_t
		constexpr auto SizeZ = 0xe8; // int32_t
		constexpr auto ClearColor = 0xec; // FLinearColor
		constexpr auto OverrideFormat = 0xfc; // EPixelFormat
		constexpr auto bHDR = 0xfd; // char : 1
		constexpr auto bForceLinearGamma = 0xfd; // char : 1
	}

	namespace n_UMeleeAIAttackState {
		constexpr auto MeleeAttackIgnoreActors = 0x58; // TArray<AActor*>
		constexpr auto MeleeAttackSocketNames = 0x68; // TArray<FName>
		constexpr auto MeleeAttackBoxSize = 0x78; // FVector
		constexpr auto bShowDebug = 0x84; // char : 1
		constexpr auto ShowDebugTime = 0x88; // float
		constexpr auto MontageCustomCurveMap = 0xa0; // TMap<FName, FMontageCustomCurve>
	}

	namespace n_USetMontageRate_AnimNotify {
		constexpr auto Enum_SetMontageType = 0x38; // ESetMontageType
		constexpr auto IsEnd = 0x39; // char : 1
		constexpr auto UseDirectlyAutoAttack = 0x39; // char : 1
		constexpr auto AnimLength = 0x3c; // float
		constexpr auto PlayMontage = 0x40; // UAnimMontage*
		constexpr auto ConditionComponents = 0x48; // TMap<FName, USceneComponent*>
		constexpr auto BlockComponents = 0x98; // TMap<FName, USceneComponent*>
	}

	namespace n_UDistributionVectorUniformCurve {
		constexpr auto ConstantCurve = 0x38; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x50; // char : 1
		constexpr auto bLockAxes2 = 0x50; // char : 1
		constexpr auto LockedAxes = 0x54; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x56; // EDistributionVectorMirrorFlags [0x3]
		constexpr auto bUseExtremes = 0x5c; // char : 1
	}

	namespace n_UWidgetAnimation {
		constexpr auto MovieScene = 0x60; // UMovieScene*
		constexpr auto AnimationBindings = 0x68; // TArray<FWidgetAnimationBinding>
		constexpr auto bLegacyFinishOnStop = 0x78; // bool
		constexpr auto DisplayLabel = 0x80; // FString
	}

	namespace n_UButtonSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UMovieSceneEventSection {
		constexpr auto Events = 0xe8; // FNameCurve
		constexpr auto EventData = 0x160; // FMovieSceneEventSectionData
	}

	namespace n_UWBP_AnchorModeSystemSetting_C {
		constexpr auto bAnchorMode = 0x290; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bFilterFoulLanguage = 0x298; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bPlayViolentAudio = 0x2a0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bReceiveNearbyVoice = 0x2a8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowCustomGuildIcon = 0x2b0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowCustomName = 0x2b8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowFleshPhysicialMaterialEffect = 0x2c0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowLocationServer = 0x2c8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowSelfInMiniMap = 0x2d0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto TitleImage = 0x2d8; // UImage*
	}

	namespace n_UInputAxisKeyDelegateBinding {
		constexpr auto InputAxisKeyDelegateBindings = 0x28; // TArray<FBlueprintInputAxisKeyDelegateBinding>
	}

	namespace n_UBlackboardComponent {
		constexpr auto BrainComp = 0xc0; // UBrainComponent*
		constexpr auto DefaultBlackboardAsset = 0xc8; // UBlackboardData*
		constexpr auto BlackboardAsset = 0xd0; // UBlackboardData*
		constexpr auto KeyInstances = 0xf8; // TArray<UBlackboardKeyType*>
	}

	namespace n_UGuildImageMaterialSerializer {
		constexpr auto BGLayerDefaultColor = 0x28; // FLinearColor
		constexpr auto OtherLayerDefaultColor = 0x38; // FLinearColor
		constexpr auto DefaultBorder = 0x48; // int32_t
		constexpr auto DefaultInitBackGround = 0x4c; // int32_t
		constexpr auto DefaultInitBorder = 0x50; // int32_t
		constexpr auto DefaultInitBackGroundColors = 0x54; // int32_t [0x3]
		constexpr auto MaterialParamNames = 0x60; // TArray<FMaterialParamName>
		constexpr auto GuildImageMaterial = 0x70; // TWeakObjectPtr<UMaterialInstanceDynamic>
	}

	namespace n_UProceduralCylinderToolProperties {
		constexpr auto Radius = 0x70; // float
		constexpr auto Height = 0x74; // float
		constexpr auto RadialSlices = 0x78; // int32_t
		constexpr auto HeightSubdivisions = 0x7c; // int32_t
	}

	namespace n_ASGStructureGuildStore {
		constexpr auto InventoryComponent2 = 0xd68; // USGInventoryComponent*
		constexpr auto InventoryComponent3 = 0xd70; // USGInventoryComponent*
		constexpr auto InventoryComponent4 = 0xd78; // USGInventoryComponent*
		constexpr auto InventoryComponent5 = 0xd80; // USGInventoryComponent*
		constexpr auto GeneralChunkDatas = 0xd88; // TArray<FBaseGeneralChunkData>
		constexpr auto AnimalChunkDatas = 0xd98; // TArray<FBaseAnimalChunkData>
		constexpr auto PriceDatas = 0xda8; // TArray<FGuildStoreItemPriceData>
		constexpr auto GuildStoreNotice = 0xdb8; // FString
		constexpr auto InventoryMaxGridAdd = 0xdc8; // int32_t
		constexpr auto SearchCharacterInterval = 0xdcc; // float
		constexpr auto SearchCharacterRadius = 0xdd0; // float
		constexpr auto NumGeneralSeats = 0xdd4; // int32_t
		constexpr auto NumAnimalSeats = 0xdd8; // int32_t
		constexpr auto UpdateKPITimerInterval = 0xddc; // float
		constexpr auto UpdateKPIMaxCount = 0xde0; // int32_t
		constexpr auto CopperItemIndex = 0xde4; // int32_t
		constexpr auto OnAnimalDatasChanged = 0xde8; // FMulticastInlineDelegate
		constexpr auto OnGeneralDatasChanged = 0xdf8; // FMulticastInlineDelegate
		constexpr auto OnPriceDatasChanged = 0xe08; // FMulticastInlineDelegate
		constexpr auto OnNoticeChanged = 0xe18; // FMulticastInlineDelegate
		constexpr auto LastSearchCharacterTime = 0xe28; // double
		constexpr auto SearchedTamedAnimals = 0xe30; // TArray<TWeakObjectPtr<ASG_AnimalsCharacter>>
		constexpr auto SearchedTamedGenerals = 0xe40; // TArray<TWeakObjectPtr<ASGGeneralCharacter>>
		constexpr auto RemoteViewingControllers = 0xe50; // TArray<TWeakObjectPtr<ASGPlayerController>>
		constexpr auto UpdateKPITimerHandle = 0xe60; // FTimerHandle
	}

	namespace n_UWBP_RadioSettingButton_C {
		constexpr auto UberGraphFrame = 0x540; // FPointerToUberGraphFrame
		constexpr auto BtnBg = 0x548; // UButton*
		constexpr auto TbSetting = 0x550; // UTextBlock*
		constexpr auto IconNormalBrush = 0x558; // FSlateBrush
		constexpr auto IconSelectBrush = 0x5e0; // FSlateBrush
		constexpr auto Title = 0x668; // FText
	}

	namespace n_UAbilityTask_ApplyRootMotionRadialForce {
		constexpr auto OnFinish = 0xc0; // FMulticastInlineDelegate
		constexpr auto Location = 0xd0; // FVector
		constexpr auto LocationActor = 0xe0; // AActor*
		constexpr auto Strength = 0xe8; // float
		constexpr auto Duration = 0xec; // float
		constexpr auto Radius = 0xf0; // float
		constexpr auto bIsPush = 0xf4; // bool
		constexpr auto bIsAdditive = 0xf5; // bool
		constexpr auto bNoZForce = 0xf6; // bool
		constexpr auto StrengthDistanceFalloff = 0xf8; // UCurveFloat*
		constexpr auto StrengthOverTime = 0x100; // UCurveFloat*
		constexpr auto bUseFixedWorldDirection = 0x108; // bool
		constexpr auto FixedWorldDirection = 0x10c; // FRotator
	}

	namespace n_UEnvQueryNode {
		constexpr auto VerNum = 0x28; // int32_t
	}

	namespace n_AGameplayAbilityTargetActor_Trace {
		constexpr auto MaxRange = 0x428; // float
		constexpr auto TraceProfile = 0x42c; // FCollisionProfileName
		constexpr auto bTraceAffectsAimPitch = 0x434; // bool
	}

	namespace n_UUI_Gate {
		constexpr auto GateName = 0x260; // FString
		constexpr auto RegionIDList = 0x270; // TArray<FName>
		constexpr auto OccupiedGuildID = 0x280; // FName
	}

	namespace n_UUI_MapList {
		constexpr auto ItemTemplate = 0x2d8; // UUI_MapItem*
		constexpr auto RowNumPerPage = 0x2e0; // int32_t
		constexpr auto OnMapListReturnClicked = 0x2e8; // FMulticastInlineDelegate
		constexpr auto OnMapListUpdateServerList = 0x2f8; // FMulticastInlineDelegate
		constexpr auto UGPMapList = 0x308; // UUniformGridPanel*
		constexpr auto UGPLastLoginMap = 0x310; // UUniformGridPanel*
		constexpr auto BtnJoin = 0x318; // UButton*
		constexpr auto BtnRefresh = 0x320; // UButton*
		constexpr auto BtnBack = 0x328; // UButton*
		constexpr auto BtnLastPage = 0x330; // UButton*
		constexpr auto BtnNextPage = 0x338; // UButton*
		constexpr auto TbCurPage = 0x340; // UTextBlock*
		constexpr auto TbMaxPage = 0x348; // UTextBlock*
		constexpr auto BtnPlayerNumUp = 0x350; // UButton*
		constexpr auto BtnPlayerNumDown = 0x358; // UButton*
		constexpr auto EtbSearch = 0x360; // UEditableText*
		constexpr auto CircularThrobber = 0x368; // UCircularThrobber*
		constexpr auto HbNoServer = 0x370; // UHorizontalBox*
		constexpr auto CircularThrobberHandle = 0x378; // FTimerHandle
		constexpr auto MapItems = 0x380; // TArray<UUI_MapItem*>
		constexpr auto LastLoginMapItem = 0x390; // UUI_MapItem*
		constexpr auto CurPage = 0x398; // int32_t
		constexpr auto MaxPage = 0x39c; // int32_t
		constexpr auto bPlayerNumUpSort = 0x3a0; // char : 1
		constexpr auto bPlayerNumDownSort = 0x3a0; // char : 1
		constexpr auto SelectMapItem = 0x3a8; // UUI_MapItem*
		constexpr auto SearchString = 0x3b0; // FString
		constexpr auto GetPingTimer = 0x3c0; // FTimerHandle
		constexpr auto GetPingServerIndexList = 0x3c8; // TArray<int32_t>
	}

	namespace n_UMaterialExpressionShadingPathSwitch {
		constexpr auto Default = 0x40; // FExpressionInput
		constexpr auto Inputs = 0x54; // FExpressionInput [0x3]
	}

	namespace n_USGImageNameTips {
		constexpr auto Image = 0x260; // UImage*
		constexpr auto Text = 0x268; // UTextBlock*
	}

	namespace n_USkyLightComponent {
		constexpr auto bRealTimeCapture = 0x238; // bool
		constexpr auto SourceType = 0x239; // ESkyLightSourceType
		constexpr auto Cubemap = 0x240; // UTextureCube*
		constexpr auto SourceCubemapAngle = 0x248; // float
		constexpr auto CubemapResolution = 0x24c; // int32_t
		constexpr auto SkyDistanceThreshold = 0x250; // float
		constexpr auto bCaptureEmissiveOnly = 0x254; // bool
		constexpr auto bLowerHemisphereIsBlack = 0x255; // bool
		constexpr auto LowerHemisphereColor = 0x258; // FLinearColor
		constexpr auto OcclusionMaxDistance = 0x268; // float
		constexpr auto Contrast = 0x26c; // float
		constexpr auto OcclusionExponent = 0x270; // float
		constexpr auto MinOcclusion = 0x274; // float
		constexpr auto OcclusionTint = 0x278; // FColor
		constexpr auto bCloudAmbientOcclusion = 0x27c; // char : 1
		constexpr auto CloudAmbientOcclusionStrength = 0x280; // float
		constexpr auto CloudAmbientOcclusionExtent = 0x284; // float
		constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x288; // float
		constexpr auto CloudAmbientOcclusionApertureScale = 0x28c; // float
		constexpr auto OcclusionCombineMode = 0x290; // EOcclusionCombineMode
		constexpr auto BlendDestinationCubemap = 0x348; // UTextureCube*
	}

	namespace n_UChaosPhysicalMaterial {
		constexpr auto Friction = 0x28; // float
		constexpr auto StaticFriction = 0x2c; // float
		constexpr auto Restitution = 0x30; // float
		constexpr auto LinearEtherDrag = 0x34; // float
		constexpr auto AngularEtherDrag = 0x38; // float
		constexpr auto SleepingLinearVelocityThreshold = 0x3c; // float
		constexpr auto SleepingAngularVelocityThreshold = 0x40; // float
	}

	namespace n_UInAppPurchaseQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_AGameStateBase {
		constexpr auto GameModeClass = 0x310; // AGameModeBase*
		constexpr auto AuthorityGameMode = 0x318; // AGameModeBase*
		constexpr auto SpectatorClass = 0x320; // ASpectatorPawn*
		constexpr auto PlayerArray = 0x328; // TArray<APlayerState*>
		constexpr auto bReplicatedHasBegunPlay = 0x338; // bool
		constexpr auto ReplicatedWorldTimeSeconds = 0x340; // double
		constexpr auto ServerWorldTimeSecondsDelta = 0x348; // double
		constexpr auto ServerWorldTimeSecondsUpdateFrequency = 0x350; // float
	}

	namespace n_UMovieSceneEventTriggerSection {
		constexpr auto EventChannel = 0xf0; // FMovieSceneEventChannel
	}

	namespace n_USGVehiclePerk {
		constexpr auto Name = 0x28; // FText
		constexpr auto Description = 0x40; // FText
		constexpr auto Param1 = 0x58; // FString
		constexpr auto Param2 = 0x68; // FString
		constexpr auto Param3 = 0x78; // FString
		constexpr auto Param4 = 0x88; // FString
		constexpr auto Param5 = 0x98; // FString
		constexpr auto PerkTexture = 0xa8; // TSoftObjectPtr<UTexture2D>
		constexpr auto VehiclePerkType = 0xd0; // EVehiclePerkType
		constexpr auto VehicleGroupTag = 0xd8; // FString
		constexpr auto RequiredAttributeCorrectionType = 0xe8; // EAttributeCorrectionType
		constexpr auto RequiredAttributeCorrectionCount = 0xec; // int32_t
		constexpr auto RequiredQualityType = 0xf0; // EAnimalQualityType
		constexpr auto RequiredWildLevel = 0xf4; // int32_t
		constexpr auto RequiredTameLevel = 0xf8; // int32_t
		constexpr auto RequiredRealNameDataIndex = 0xfc; // int32_t
		constexpr auto RequiredPerkEntries = 0x100; // TArray<USGVehiclePerk*>
		constexpr auto RequiredStrongMorph = 0x110; // float
		constexpr auto RequiredThinMorph = 0x114; // float
		constexpr auto RequiredSkinColorType = 0x118; // EAnimalFurColorType
		constexpr auto RequiredSex = 0x119; // ECharacterSex
		constexpr auto bRequiredCastrated = 0x11a; // char : 1
		constexpr auto RequiredCastrateLifeCount = 0x11c; // int32_t
		constexpr auto AttributeCorrectionModify = 0x120; // TArray<float>
		constexpr auto PerkQualityType = 0x130; // EVehiclePerkQualityType
		constexpr auto BindBuff = 0x138; // USGBuff*
		constexpr auto TriggerBuff = 0x140; // USGBuff*
		constexpr auto bPassivePerk = 0x148; // char : 1
		constexpr auto bNegativePerk = 0x148; // char : 1
		constexpr auto VehiclePerkState = 0x149; // EVehiclePerkState
	}

	namespace n_ACineCameraActor {
		constexpr auto LookatTrackingSettings = 0x8a0; // FCameraLookatTrackingSettings
	}

	namespace n_UMovieSceneObjectPropertyTrack {
		constexpr auto PropertyClass = 0xb0; // UObject*
	}

	namespace n_UTalentPanel {
		constexpr auto TalentVerticalPanel = 0x260; // UVerticalBox*
		constexpr auto TalentSlotTemplate = 0x270; // UTalentSlot*
	}

	namespace n_UWeapon_AnimInstance {
		constexpr auto SG_ShooterWeapon = 0x2c0; // AShooterWeapon*
		constexpr auto bIsAim = 0x2c8; // char : 1
		constexpr auto bIsAimPull = 0x2c8; // char : 1
		constexpr auto bIsAttack = 0x2c8; // char : 1
		constexpr auto bIsReload = 0x2c8; // char : 1
	}

	namespace n_UNoiseField {
		constexpr auto MinRange = 0xc0; // float
		constexpr auto MaxRange = 0xc4; // float
		constexpr auto Transform = 0xd0; // FTransform
	}

	namespace n_UABP_MenuCharacter_C {
		constexpr auto UberGraphFrame = 0x2c0; // FPointerToUberGraphFrame
		constexpr auto AnimGraphNode_Root = 0x2c8; // FAnimNode_Root
		constexpr auto AnimGraphNode_SequencePlayer = 0x2f8; // FAnimNode_SequencePlayer
		constexpr auto AnimGraphNode_StateResult = 0x378; // FAnimNode_StateResult
		constexpr auto AnimGraphNode_StateMachine = 0x3a8; // FAnimNode_StateMachine
		constexpr auto AnimGraphNode_TwoBoneIK_2 = 0x460; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_TwoBoneIK = 0x640; // FAnimNode_TwoBoneIK
		constexpr auto AnimGraphNode_ModifyBone_5 = 0x820; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_4 = 0x928; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_3 = 0xa30; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone_2 = 0xb38; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_ModifyBone = 0xc40; // FAnimNode_ModifyBone
		constexpr auto AnimGraphNode_LocalToComponentSpace = 0xd48; // FAnimNode_ConvertLocalToComponentSpace
		constexpr auto AnimGraphNode_ComponentToLocalSpace = 0xd68; // FAnimNode_ConvertComponentToLocalSpace
		constexpr auto PlayingAnimSequence = 0xd88; // UAnimSequence*
	}

	namespace n_UARCandidateObject {
		constexpr auto CandidateObjectData = 0x30; // TArray<char>
		constexpr auto FriendlyName = 0x40; // FString
		constexpr auto BoundingBox = 0x50; // FBox
	}

	namespace n_UAREnvironmentCaptureProbe {
		constexpr auto Extent = 0xf8; // FVector
		constexpr auto EnvironmentCaptureTexture = 0x108; // UAREnvironmentCaptureProbeTexture*
	}

	namespace n_UMovieScene3DTransformSection {
		constexpr auto TransformMask = 0xf0; // FMovieSceneTransformMask
		constexpr auto Translation = 0xf8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Rotation = 0x2d8; // FMovieSceneFloatChannel [0x3]
		constexpr auto Scale = 0x4b8; // FMovieSceneFloatChannel [0x3]
		constexpr auto ManualWeight = 0x698; // FMovieSceneFloatChannel
		constexpr auto bUseQuaternionInterpolation = 0x738; // bool
	}

	namespace n_UAnimBlueprintGeneratedClass {
		constexpr auto BakedStateMachines = 0x330; // TArray<FBakedAnimationStateMachine>
		constexpr auto TargetSkeleton = 0x340; // USkeleton*
		constexpr auto AnimNotifies = 0x348; // TArray<FAnimNotifyEvent>
		constexpr auto OrderedSavedPoseIndicesMap = 0x358; // TMap<FName, FCachedPoseIndices>
		constexpr auto SyncGroupNames = 0x428; // TArray<FName>
		constexpr auto EvaluateGraphExposedInputs = 0x438; // TArray<FExposedValueHandler>
		constexpr auto GraphAssetPlayerInformation = 0x448; // TMap<FName, FGraphAssetPlayerInformation>
		constexpr auto GraphBlendOptions = 0x498; // TMap<FName, FAnimGraphBlendOptions>
		constexpr auto PropertyAccessLibrary = 0x4e8; // FPropertyAccessLibrary
	}

	namespace n_UColorSelector {
		constexpr auto Hue = 0x260; // float
		constexpr auto ColorStaturation = 0x264; // FVector2D
		constexpr auto ColorValue = 0x26c; // FVector2D
		constexpr auto SBMain = 0x278; // USizeBox*
		constexpr auto ImgColorBg = 0x280; // UImage*
		constexpr auto ImgCursor = 0x288; // UImage*
		constexpr auto ImgCursorSlot = 0x2a0; // UCanvasPanelSlot*
		constexpr auto bStartColorSelector = 0x2a8; // char : 1
	}

	namespace n_UN_VehiclePerkSlot {
		constexpr auto VehiclePerkQualityBrush = 0x260; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto VehiclePerkSlotBrush = 0x350; // TSoftObjectPtr<UTexture2D> [0x5]
		constexpr auto VehiclePerkQualityOutlineColor = 0x418; // FLinearColor [0x6]
		constexpr auto ACModifyAddTextColor = 0x478; // FSlateColor
		constexpr auto ACModifyReduceTextColor = 0x4a0; // FSlateColor
		constexpr auto ACModifyNormalTextColor = 0x4c8; // FSlateColor
		constexpr auto ACModifyAddTexture = 0x4f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto ACModifyReduceTexture = 0x518; // TSoftObjectPtr<UTexture2D>
		constexpr auto PerkBGBorder = 0x540; // UBorder*
		constexpr auto PerkImg = 0x548; // UImage*
		constexpr auto PerkEquipImg = 0x550; // UImage*
		constexpr auto PerkRecessiveImg = 0x558; // UImage*
		constexpr auto PerkQualityImg = 0x560; // UImage*
		constexpr auto PerkNameText = 0x568; // UTextBlock*
		constexpr auto TbPerkACModifyHP = 0x570; // UTextBlock*
		constexpr auto ImgPerkACModifyHP = 0x578; // UImage*
		constexpr auto TbPerkACModifySP = 0x580; // UTextBlock*
		constexpr auto ImgPerkACModifySP = 0x588; // UImage*
		constexpr auto TbPerkACModifyWeight = 0x590; // UTextBlock*
		constexpr auto ImgPerkACModifyWeight = 0x598; // UImage*
		constexpr auto TbPerkACModifySpeed = 0x5a0; // UTextBlock*
		constexpr auto ImgPerkACModifySpeed = 0x5a8; // UImage*
		constexpr auto TbPerkACModifyOperate = 0x5b0; // UTextBlock*
		constexpr auto ImgPerkACModifyOperate = 0x5b8; // UImage*
		constexpr auto TbPerkDescription = 0x5c0; // UTextBlock*
	}

	namespace n_UShutDownService {
		constexpr auto CheatManager = 0x60; // USGCheatManager*
	}

	namespace n_UAnimalFarmPanel {
		constexpr auto FoodSlotClass = 0x260; // UAnimalFarmDropSlot*
		constexpr auto DropSlotClass = 0x268; // UAnimalFarmDropSlot*
		constexpr auto FoodPageMaxNum = 0x270; // int32_t
		constexpr auto DropPerRowCount = 0x274; // int32_t
		constexpr auto DropPageMaxNum = 0x278; // int32_t
		constexpr auto SlotTotalNum = 0x280; // UAnimalFarmSlot*
		constexpr auto SlotAverageLevelNum = 0x288; // UAnimalFarmSlot*
		constexpr auto SlotFemaleNum = 0x290; // UAnimalFarmSlot*
		constexpr auto SlotMaleNum = 0x298; // UAnimalFarmSlot*
		constexpr auto SlotBabyNum = 0x2a0; // UAnimalFarmSlot*
		constexpr auto SlotBirthNum = 0x2a8; // UAnimalFarmSlot*
		constexpr auto SlotDeathNum = 0x2b0; // UAnimalFarmSlot*
		constexpr auto SlotMood = 0x2b8; // UAnimalFarmSlot*
		constexpr auto SlotConsumeFoodSpeed = 0x2c0; // UAnimalFarmSlot*
		constexpr auto SlotFood = 0x2c8; // UAnimalFarmSlot*
		constexpr auto SlotAddHealthPerSecond = 0x2d0; // UAnimalFarmSlot*
		constexpr auto SlotHealth = 0x2d8; // UAnimalFarmSlot*
		constexpr auto SetMaxNumBtn = 0x2e0; // UButton*
		constexpr auto AddFoodBtn = 0x2e8; // UButton*
		constexpr auto LastFoodPageBtn = 0x2f0; // UButton*
		constexpr auto CurFoodPageText = 0x2f8; // UTextBlock*
		constexpr auto MaxFoodPageText = 0x300; // UTextBlock*
		constexpr auto NextFoodPageBtn = 0x308; // UButton*
		constexpr auto FoodHorizontalBox = 0x310; // UHorizontalBox*
		constexpr auto LastLikeFoodPageBtn = 0x318; // UButton*
		constexpr auto CurLikeFoodPageText = 0x320; // UTextBlock*
		constexpr auto MaxLikeFoodPageText = 0x328; // UTextBlock*
		constexpr auto NextLikeFoodPageBtn = 0x330; // UButton*
		constexpr auto LikeFoodHorizontalBox = 0x338; // UHorizontalBox*
		constexpr auto DropCountText = 0x340; // UTextBlock*
		constexpr auto LastDropPageBtn = 0x348; // UButton*
		constexpr auto CurDropPageText = 0x350; // UTextBlock*
		constexpr auto MaxDropPageText = 0x358; // UTextBlock*
		constexpr auto NextDropPageBtn = 0x360; // UButton*
		constexpr auto DropGridPanel = 0x368; // UUniformGridPanel*
		constexpr auto TakeDropsBtn = 0x370; // UButton*
		constexpr auto SetMaxNumPanel = 0x378; // UCanvasPanel*
		constexpr auto ReduceMaxNumBtn = 0x380; // UButton*
		constexpr auto SetMaxNumSpinBox = 0x388; // USpinBox*
		constexpr auto AddMaxNumBtn = 0x390; // UButton*
		constexpr auto SetMaxNumSlider = 0x398; // USlider*
		constexpr auto AcceptSetMaxNumBtn = 0x3a0; // UButton*
		constexpr auto CancelSetMaxNumBtn = 0x3a8; // UButton*
	}

	namespace n_UBTDecorator_CompareBBEntries {
		constexpr auto Operator = 0x68; // EBlackBoardEntryComparison
		constexpr auto BlackboardKeyA = 0x70; // FBlackboardKeySelector
		constexpr auto BlackboardKeyB = 0x98; // FBlackboardKeySelector
	}

	namespace n_UGameNetworkManagerSettings {
		constexpr auto MinDynamicBandwidth = 0x28; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x2c; // int32_t
		constexpr auto TotalNetBandwidth = 0x30; // int32_t
		constexpr auto BadPingThreshold = 0x34; // int32_t
		constexpr auto bIsStandbyCheckingEnabled = 0x38; // char : 1
		constexpr auto StandbyRxCheatTime = 0x3c; // float
		constexpr auto StandbyTxCheatTime = 0x40; // float
		constexpr auto PercentMissingForRxStandby = 0x44; // float
		constexpr auto PercentMissingForTxStandby = 0x48; // float
		constexpr auto PercentForBadPing = 0x4c; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x50; // float
	}

	namespace n_UAbilityTask_WaitGameplayTagRemoved {
		constexpr auto Removed = 0xa8; // FMulticastInlineDelegate
	}

	namespace n_UGroomCreateStrandsTexturesOptions {
		constexpr auto Resolution = 0x28; // int32_t
		constexpr auto TraceType = 0x2c; // EStrandsTexturesTraceType
		constexpr auto TraceDistance = 0x30; // float
		constexpr auto MeshType = 0x34; // EStrandsTexturesMeshType
		constexpr auto StaticMesh = 0x38; // UStaticMesh*
		constexpr auto SkeletalMesh = 0x40; // USkeletalMesh*
		constexpr auto LODIndex = 0x48; // int32_t
		constexpr auto SectionIndex = 0x4c; // int32_t
		constexpr auto UVChannelIndex = 0x50; // int32_t
		constexpr auto GroupIndex = 0x58; // TArray<int32_t>
	}

	namespace n_ASpectatorBeaconHost {
		constexpr auto State = 0x338; // USpectatorBeaconState*
		constexpr auto bLogoutOnSessionTimeout = 0x3a0; // bool
		constexpr auto SessionTimeoutSecs = 0x3a4; // float
		constexpr auto TravelSessionTimeoutSecs = 0x3a8; // float
	}

	namespace n_USoundNodeEnveloper {
		constexpr auto LoopStart = 0x48; // float
		constexpr auto LoopEnd = 0x4c; // float
		constexpr auto DurationAfterLoop = 0x50; // float
		constexpr auto LoopCount = 0x54; // int32_t
		constexpr auto bLoopIndefinitely = 0x58; // char : 1
		constexpr auto bLoop = 0x58; // char : 1
		constexpr auto VolumeInterpCurve = 0x60; // UDistributionFloatConstantCurve*
		constexpr auto PitchInterpCurve = 0x68; // UDistributionFloatConstantCurve*
		constexpr auto VolumeCurve = 0x70; // FRuntimeFloatCurve
		constexpr auto PitchCurve = 0xf8; // FRuntimeFloatCurve
		constexpr auto PitchMin = 0x180; // float
		constexpr auto PitchMax = 0x184; // float
		constexpr auto VolumeMin = 0x188; // float
		constexpr auto VolumeMax = 0x18c; // float
	}

	namespace n_UGarbageCollectionSettings {
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x38; // float
		constexpr auto FlushStreamingOnGC = 0x3c; // char : 1
		constexpr auto AllowParallelGC = 0x3c; // char : 1
		constexpr auto IncrementalBeginDestroyEnabled = 0x3c; // char : 1
		constexpr auto MultithreadedDestructionEnabled = 0x3c; // char : 1
		constexpr auto CreateGCClusters = 0x3c; // char : 1
		constexpr auto AssetClusteringEnabled = 0x3c; // char : 1
		constexpr auto ActorClusteringEnabled = 0x3c; // char : 1
		constexpr auto BlueprintClusteringEnabled = 0x3c; // char : 1
		constexpr auto UseDisregardForGCOnDedicatedServers = 0x3d; // char : 1
		constexpr auto MinGCClusterSize = 0x40; // int32_t
		constexpr auto NumRetriesBeforeForcingGC = 0x44; // int32_t
		constexpr auto MaxObjectsNotConsideredByGC = 0x48; // int32_t
		constexpr auto SizeOfPermanentObjectPool = 0x4c; // int32_t
		constexpr auto MaxObjectsInGame = 0x50; // int32_t
		constexpr auto MaxObjectsInEditor = 0x54; // int32_t
	}

	namespace n_AGameplayAbilityTargetActor {
		constexpr auto ShouldProduceTargetDataOnServer = 0x310; // bool
		constexpr auto StartLocation = 0x320; // FGameplayAbilityTargetingLocationInfo
		constexpr auto MasterPC = 0x3c0; // APlayerController*
		constexpr auto OwningAbility = 0x3c8; // UGameplayAbility*
		constexpr auto bDestroyOnConfirmation = 0x3d0; // bool
		constexpr auto SourceActor = 0x3d8; // AActor*
		constexpr auto ReticleParams = 0x3e0; // FWorldReticleParameters
		constexpr auto ReticleClass = 0x3f0; // AGameplayAbilityWorldReticle*
		constexpr auto Filter = 0x3f8; // FGameplayTargetDataFilterHandle
		constexpr auto bDebug = 0x408; // bool
		constexpr auto GenericDelegateBoundASC = 0x420; // UAbilitySystemComponent*
	}

	namespace n_UWBP_FSRSettingComboBoxItem_C {
		constexpr auto UberGraphFrame = 0x368; // FPointerToUberGraphFrame
		constexpr auto CanvasPanel_53 = 0x370; // UCanvasPanel*
		constexpr auto RichTextBlock = 0x378; // URichTextBlock*
		constexpr auto RichTextBlock_2 = 0x380; // URichTextBlock*
		constexpr auto RichTextBlock_3 = 0x388; // URichTextBlock*
		constexpr auto RichTextBlock_121 = 0x390; // URichTextBlock*
		constexpr auto SettingComboBox = 0x398; // UComboBoxString*
		constexpr auto TbTitle = 0x3a0; // UTextBlock*
		constexpr auto Title = 0x3a8; // FText
	}

	namespace n_UHorizonDialogueStyleInfo {
		constexpr auto SegmentStyleList = 0x28; // TArray<FHorizonDialogueSegmentInfoStyle>
	}

	namespace n_ADecalActor {
		constexpr auto Decal = 0x310; // UDecalComponent*
	}

	namespace n_UHoleFillToolProperties {
		constexpr auto FillType = 0x60; // EHoleFillOpFillType
		constexpr auto bRemoveIsolatedTriangles = 0x61; // bool
	}

	namespace n_AResonanceAudioDirectivityVisualizer {
		constexpr auto Material = 0x380; // UMaterial*
		constexpr auto Settings = 0x388; // UResonanceAudioSpatializationSourceSettings*
	}

	namespace n_UInterpTrackInstAnimControl {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_UN_GeneralStatusPanel {
		constexpr auto BindGeneralCharacter = 0x260; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto GeneralBg = 0x268; // UImage*
		constexpr auto GeneralNameBg = 0x270; // UImage*
		constexpr auto GeneralQualityImage = 0x278; // UImage*
		constexpr auto GeneralName = 0x280; // UTextBlock*
		constexpr auto GeneralNameLevelText = 0x288; // UTextBlock*
		constexpr auto GeneralNameExpText = 0x290; // UTextBlock*
		constexpr auto GeneralNameExpProgress = 0x298; // UProgressBar*
		constexpr auto GeneralNameBgTexture2D = 0x2a0; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto GeneralCharacterNameBgColor = 0x340; // FLinearColor [0x6]
		constexpr auto GeneralCharacterTexture2D = 0x3a0; // TSoftObjectPtr<UTexture2D> [0x6]
	}

	namespace n_UUI_MainMenu {
		constexpr auto WebPicCfgChina = 0x2d8; // FPicLinkConfig
		constexpr auto WebPicCfgForign = 0x318; // FPicLinkConfig
		constexpr auto PicLinkConfigArray = 0x358; // TArray<FPicLinkConfig>
		constexpr auto MainMenuPickLinkTemplate = 0x368; // UUI_MainMenuPicLink*
		constexpr auto HelpTransPicCfg = 0x370; // FPicLinkConfig
		constexpr auto CooperatorHBox = 0x3b0; // UHorizontalBox*
		constexpr auto StartOfficalGameBtnSlot = 0x3b8; // UUI_MainMenuBtn*
		constexpr auto StartPrivateGameBtnSlot = 0x3c0; // UUI_MainMenuBtn*
		constexpr auto CreatePrivateGameBtnSlot = 0x3c8; // UUI_MainMenuBtn*
		constexpr auto GameSettingsBtnSlot = 0x3d0; // UUI_MainMenuBtn*
		constexpr auto ProducerListBtnSlot = 0x3d8; // UUI_MainMenuBtn*
		constexpr auto ExitGameBtnSlot = 0x3e0; // UUI_MainMenuBtn*
		constexpr auto VersionText = 0x3e8; // UTextBlock*
		constexpr auto HelpTransPic = 0x3f0; // UUI_MainMenuPicLink*
		constexpr auto HelpTransButton = 0x3f8; // UButton*
		constexpr auto BtnAgeTips = 0x400; // UButton*
		constexpr auto MainMenu_AgeTips = 0x408; // UUserWidget*
	}

	namespace n_UNiagaraRendererProperties {
		constexpr auto Platforms = 0x28; // FNiagaraPlatformSet
		constexpr auto SortOrderHint = 0x58; // int32_t
		constexpr auto bIsEnabled = 0x5c; // bool
		constexpr auto bMotionBlurEnabled = 0x5d; // bool
	}

	namespace n_UPullKelvinletBrushOpProps {
		constexpr auto Falloff = 0x70; // float
		constexpr auto Depth = 0x74; // float
	}

	namespace n_UBTService_UpdateStatus {
		constexpr auto BBKey_PrimaryWeaponType = 0xb8; // FBlackboardKeySelector
		constexpr auto BreakAwayAttackMaxWaitTime = 0xe8; // float
		constexpr auto StopFollowMaxWaitTimeRange = 0xfc; // FVector2D
		constexpr auto FollowTolerance = 0x1e8; // float
		constexpr auto bUseForceAnimalsGait = 0x1f0; // char : 1
		constexpr auto Enum_ForceAnimalsMovingGaitType = 0x1f1; // EAnimalsMovingGaitType
	}

	namespace n_UGerstnerWaterWaveGeneratorSpectrum {
		constexpr auto SpectrumType = 0x28; // EWaveSpectrumType
		constexpr auto Octaves = 0x30; // TArray<FGerstnerWaveOctave>
	}

	namespace n_UUI_StructureContainerLog {
		constexpr auto LogVerticalBox = 0x2d8; // UVerticalBox*
		constexpr auto PrePageButton = 0x2e0; // UButton*
		constexpr auto NextPageButton = 0x2e8; // UButton*
		constexpr auto ShowPageText = 0x2f0; // UTextBlock*
		constexpr auto CloseButton = 0x2f8; // UButton*
		constexpr auto ContainerLogSlotClass = 0x300; // UUI_StructureContainerLogSlot*
		constexpr auto NumPerPage = 0x308; // int32_t
	}

	namespace n_UNiagaraDataInterfaceAudioSpectrum {
		constexpr auto Resolution = 0x40; // int32_t
		constexpr auto MinimumFrequency = 0x44; // float
		constexpr auto MaximumFrequency = 0x48; // float
		constexpr auto NoiseFloorDb = 0x4c; // float
	}

	namespace n_UUI_AdminSubPanelNpc {
		constexpr auto ScrollBoxNpcList = 0x2d8; // UScrollBox*
		constexpr auto SearchTextBoxNpc = 0x2e0; // UEditableTextBox*
		constexpr auto ServerAdminItemRowTemplate = 0x2f8; // UUI_ServerAdminItemRow*
		constexpr auto EditableTextBoxCreateDistance = 0x300; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateLevel = 0x308; // UEditableTextBox*
		constexpr auto EditableTextBoxCreateNum = 0x310; // UEditableTextBox*
		constexpr auto ButtonKillAll = 0x318; // UButton*
	}

	namespace n_UFixedFrameRateCustomTimeStep {
		constexpr auto FixedFrameRate = 0x28; // FFrameRate
	}

	namespace n_UBTTask_DoWander {
		constexpr auto CheckStaticSpawnVolumeInterval = 0xd0; // float
	}

	namespace n_APlayerState {
		constexpr auto Score = 0x310; // float
		constexpr auto PlayerId = 0x314; // int32_t
		constexpr auto Ping = 0x318; // char
		constexpr auto bShouldUpdateReplicatedPing = 0x31a; // char : 1
		constexpr auto bIsSpectator = 0x31a; // char : 1
		constexpr auto bOnlySpectator = 0x31a; // char : 1
		constexpr auto bIsABot = 0x31a; // char : 1
		constexpr auto bIsInactive = 0x31a; // char : 1
		constexpr auto bFromPreviousLevel = 0x31a; // char : 1
		constexpr auto StartTime = 0x31c; // int32_t
		constexpr auto EngineMessageClass = 0x320; // ULocalMessage*
		constexpr auto SavedNetworkAddress = 0x330; // FString
		constexpr auto UniqueId = 0x340; // FUniqueNetIdRepl
		constexpr auto PawnPrivate = 0x370; // APawn*
		constexpr auto PlayerNamePrivate = 0x3f0; // FString
	}

	namespace n_UVirtualTexturePoolConfig {
		constexpr auto DefaultSizeInMegabyte = 0x28; // int32_t
		constexpr auto Pools = 0x30; // TArray<FVirtualTextureSpacePoolConfig>
	}

	namespace n_UMaterialExpressionMaterialProxyReplace {
		constexpr auto Realtime = 0x40; // FExpressionInput
		constexpr auto MaterialProxy = 0x54; // FExpressionInput
	}

	namespace n_UMaterialExpressionMax {
		constexpr auto A = 0x40; // FExpressionInput
		constexpr auto B = 0x54; // FExpressionInput
		constexpr auto ConstA = 0x68; // float
		constexpr auto ConstB = 0x6c; // float
	}

	namespace n_USoundNodeDialoguePlayer {
		constexpr auto DialogueWaveParameter = 0x48; // FDialogueWaveParameter
		constexpr auto bLooping = 0x68; // char : 1
	}

	namespace n_UNiagaraSimulationStageBase {
		constexpr auto Script = 0x28; // UNiagaraScript*
		constexpr auto SimulationStageName = 0x30; // FName
		constexpr auto bEnabled = 0x38; // char : 1
	}

	namespace n_UGizmoAxisRotationParameterSource {
		constexpr auto AxisSource = 0x90; // TScriptInterface<IGizmoAxisSource>
		constexpr auto TransformSource = 0xa0; // TScriptInterface<IGizmoTransformSource>
		constexpr auto Angle = 0xb0; // float
		constexpr auto LastChange = 0xb4; // FGizmoFloatParameterChange
		constexpr auto CurRotationAxis = 0xbc; // FVector
		constexpr auto CurRotationOrigin = 0xc8; // FVector
		constexpr auto InitialTransform = 0xe0; // FTransform
	}

	namespace n_APawn {
		constexpr auto bUseControllerRotationPitch = 0x318; // char : 1
		constexpr auto bUseControllerRotationYaw = 0x318; // char : 1
		constexpr auto bUseControllerRotationRoll = 0x318; // char : 1
		constexpr auto bCanAffectNavigationGeneration = 0x318; // char : 1
		constexpr auto BaseEyeHeight = 0x31c; // float
		constexpr auto AutoPossessPlayer = 0x320; // EAutoReceiveInput
		constexpr auto AutoPossessAI = 0x321; // EAutoPossessAI
		constexpr auto RemoteViewPitch = 0x322; // char
		constexpr auto AIControllerClass = 0x328; // AController*
		constexpr auto PlayerState = 0x330; // APlayerState*
		constexpr auto LastHitBy = 0x340; // AController*
		constexpr auto Controller = 0x348; // AController*
		constexpr auto ControlInputVector = 0x354; // FVector
		constexpr auto LastControlInputVector = 0x360; // FVector
	}

	namespace n_UAllianceListPanel {
		constexpr auto AllianceDetailsSlot = 0x2d8; // UAllianceDetailsSlot*
		constexpr auto SearchAllianceEditBox = 0x2e0; // UEditableTextBox*
		constexpr auto PrePageDataButton = 0x2e8; // UDataButton*
		constexpr auto NextPageDataButton = 0x2f0; // UDataButton*
		constexpr auto ShowPageText = 0x2f8; // UTextBlock*
		constexpr auto AllianceListPanel = 0x300; // UScrollBox*
		constexpr auto CreateAllianceButton = 0x308; // UButton*
		constexpr auto InviteToAllianceButton = 0x310; // UButton*
		constexpr auto NameTitleSlot = 0x318; // USortableTitleSlot*
		constexpr auto OwnerTitleSlot = 0x320; // USortableTitleSlot*
		constexpr auto MemberCountTitleSlot = 0x328; // USortableTitleSlot*
		constexpr auto GuildCountTitleSlot = 0x330; // USortableTitleSlot*
		constexpr auto ManagementTitleSlot = 0x338; // USortableTitleSlot*
		constexpr auto LoadingCanvasPanel = 0x340; // UCanvasPanel*
		constexpr auto AllianceListNumPerPage = 0x348; // int32_t
		constexpr auto AllianceListSlotClass = 0x350; // UAllianceListSlot*
		constexpr auto CreateAllianceUIOverride = 0x358; // UUI_ModifyText*
		constexpr auto InviteToAllianceUIOverride = 0x360; // UUI_ModifyText*
		constexpr auto ApplyAllianceUIOverride = 0x368; // UUI_ModifyText*
		constexpr auto RequestAllianceListCount = 0x370; // int32_t
	}

	namespace n_UConditionSlot {
		constexpr auto BindCharacter = 0x260; // TWeakObjectPtr<ASGCharacter>
		constexpr auto ConditionImage = 0x268; // UImage*
		constexpr auto LevelProgress = 0x270; // UProgressBar*
		constexpr auto ConditionName = 0x278; // UTextBlock*
		constexpr auto LevelText = 0x280; // UTextBlock*
		constexpr auto MaxAmount = 0x288; // float
		constexpr auto SlotType = 0x28c; // ESPType
		constexpr auto Index = 0x290; // int32_t
		constexpr auto STRImageTexture2D = 0x298; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto DEXImageTexture2D = 0x2a8; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto STAImageTexture2D = 0x2b8; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto INTImageTexture2D = 0x2c8; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto CHAImageTexture2D = 0x2d8; // TArray<TSoftObjectPtr<UTexture2D>>
		constexpr auto OneHandedWeaponsText = 0x2e8; // FText
		constexpr auto ShieldsText = 0x300; // FText
		constexpr auto TowHandedWeaponsText = 0x318; // FText
		constexpr auto PolearmsText = 0x330; // FText
		constexpr auto HeavyArmorsText = 0x348; // FText
		constexpr auto ThrowingText = 0x360; // FText
		constexpr auto ArcheryText = 0x378; // FText
		constexpr auto CrossbowsText = 0x390; // FText
		constexpr auto RidingText = 0x3a8; // FText
		constexpr auto LightArmorsText = 0x3c0; // FText
		constexpr auto PhysiqueText = 0x3d8; // FText
		constexpr auto MiningText = 0x3f0; // FText
		constexpr auto LumberingText = 0x408; // FText
		constexpr auto HuntingText = 0x420; // FText
		constexpr auto PlantingText = 0x438; // FText
		constexpr auto HandMakingText = 0x450; // FText
		constexpr auto SiegeWorkingText = 0x468; // FText
		constexpr auto BuildingText = 0x480; // FText
		constexpr auto ArmorerText = 0x498; // FText
		constexpr auto HerbText = 0x4b0; // FText
		constexpr auto TamingText = 0x4c8; // FText
		constexpr auto LeaderShipText = 0x4e0; // FText
		constexpr auto RecruitText = 0x4f8; // FText
		constexpr auto TrainingText = 0x510; // FText
		constexpr auto RenownText = 0x528; // FText
	}

	namespace n_UUI_BattleStatistics {
		constexpr auto tex_win_bg = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_huawen = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_guanxiao = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_text_zh = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_win_text_en = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_bg = 0x3a0; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_huawen = 0x3c8; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_guanxiao = 0x3f0; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_text_zh = 0x418; // TSoftObjectPtr<UTexture2D>
		constexpr auto tex_fail_text_en = 0x440; // TSoftObjectPtr<UTexture2D>
		constexpr auto Img_Bg = 0x468; // UImage*
		constexpr auto Img_HuaWen = 0x470; // UImage*
		constexpr auto Img_GuanXiao = 0x478; // UImage*
		constexpr auto Img_ResultText = 0x480; // UImage*
		constexpr auto ItemTemplate = 0x488; // UBattleStatisticsItem*
		constexpr auto EnemyStatisticsBgTexture = 0x490; // TSoftObjectPtr<UTexture2D>
		constexpr auto PartnerStatisticsBgTexture = 0x4b8; // TSoftObjectPtr<UTexture2D>
		constexpr auto BtLeaveBattle = 0x4e0; // UButton*
		constexpr auto BtGainAward = 0x4e8; // UButton*
		constexpr auto LastClickTime = 0x4f0; // double
		constexpr auto bBattleFinished = 0x4f8; // bool
		constexpr auto bMySuccess = 0x4f9; // bool
		constexpr auto EnemyBattleStatisticsItems = 0x500; // TArray<UBattleStatisticsItem*>
		constexpr auto PartnerBattleStatisticsItems = 0x510; // TArray<UBattleStatisticsItem*>
		constexpr auto PlayerBattleDatas = 0x520; // TArray<FPlayerBattleData>
		constexpr auto TbEnemyNum = 0x530; // UTextBlock*
		constexpr auto TbEnemyScore = 0x538; // UTextBlock*
		constexpr auto TbPartnerNum = 0x540; // UTextBlock*
		constexpr auto TbPartnerScore = 0x548; // UTextBlock*
		constexpr auto UGPEnemy = 0x550; // UUniformGridPanel*
		constexpr auto UGPPartner = 0x558; // UUniformGridPanel*
		constexpr auto ImgEnemyStatisticsBg = 0x560; // UImage*
		constexpr auto ImgPartnerStatisticsBg = 0x568; // UImage*
	}

	namespace n_UGameSessionSettings {
		constexpr auto MaxSpectators = 0x28; // int32_t
		constexpr auto MaxPlayers = 0x2c; // int32_t
		constexpr auto bRequiresPushToTalk = 0x30; // char : 1
	}

	namespace n_UParticleModuleKillHeight {
		constexpr auto Height = 0x30; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x60; // char : 1
		constexpr auto bFloor = 0x60; // char : 1
		constexpr auto bApplyPSysScale = 0x60; // char : 1
	}

	namespace n_ULightmassPrimitiveSettingsObject {
		constexpr auto LightmassSettings = 0x28; // FLightmassPrimitiveSettings
	}

	namespace n_UMiniMapPOI_OccupyStructure {
		constexpr auto DifferentTeamInMiniMapTexture = 0x390; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentTeamInMiniMapColor = 0x3b8; // FLinearColor
		constexpr auto DifferentTeamOutOfMiniMapTexture = 0x3c8; // TSoftObjectPtr<UTexture2D>
		constexpr auto DifferentTeamOutOfMiniMapColor = 0x3f0; // FLinearColor
		constexpr auto NoProtectInMiniMapTexture = 0x400; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoProtectInMiniMapColor = 0x428; // FLinearColor
		constexpr auto NoProtectOutOfMiniMapTexture = 0x438; // TSoftObjectPtr<UTexture2D>
		constexpr auto NoProtectOutOfMiniMapColor = 0x460; // FLinearColor
		constexpr auto StructureRPC = 0x470; // FOccupyStructureRPC
	}

	namespace n_UParticleModuleVectorFieldGlobal {
		constexpr auto bOverrideGlobalVectorFieldTightness = 0x30; // char : 1
		constexpr auto GlobalVectorFieldScale = 0x34; // float
		constexpr auto GlobalVectorFieldTightness = 0x38; // float
	}

	namespace n_UNewsClientData_GetRankReward_Activity {
		constexpr auto RankID = 0x50; // FString
		constexpr auto Rankings = 0x60; // int32_t
	}

	namespace n_UInterpTrackInstParticleReplay {
		constexpr auto LastUpdatePosition = 0x28; // float
	}

	namespace n_USGGameDataCreateStructureData {
		constexpr auto CreateStructureArray = 0x28; // TArray<ASGStructure*>
	}

	namespace n_UFindSessionsCallbackProxy {
		constexpr auto OnSuccess = 0x30; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x40; // FMulticastInlineDelegate
	}

	namespace n_UDrawAndRevolveTool {
		constexpr auto ControlPointsMechanic = 0xf8; // UCurveControlPointsMechanic*
		constexpr auto PlaneMechanic = 0x100; // UConstructionPlaneMechanic*
		constexpr auto Settings = 0x108; // URevolveToolProperties*
		constexpr auto MaterialProperties = 0x110; // UNewMeshMaterialProperties*
		constexpr auto Preview = 0x118; // UMeshOpPreviewWithBackgroundCompute*
	}

	namespace n_UNiagaraDataInterfaceCamera {
		constexpr auto PlayerControllerIndex = 0x38; // int32_t
		constexpr auto bRequireCurrentFrameData = 0x3c; // bool
	}

	namespace n_UWBP_GraphSystemSetting_C {
		constexpr auto AntiAliasingQuality = 0x290; // UWBP_SettingComboBoxItem_C*
		constexpr auto AntiAliasingQualityDetail = 0x298; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto bAntiAliasingDLSS = 0x2a0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bAntiAliasingFSR = 0x2a8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bColorBlindness = 0x2b0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bEnableLightningShake = 0x2b8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bRayTracing = 0x2c0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bRayTracingReflections = 0x2c8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bRayTracingShadow = 0x2d0; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bShowGroom = 0x2d8; // UWBP_SystemSettingCheckBox_C*
		constexpr auto bUseDynamicResolution = 0x2e0; // UWBP_SettingComboBoxItem_C*
		constexpr auto bUseVSync = 0x2e8; // UWBP_SettingComboBoxItem_C*
		constexpr auto DefaultRHI = 0x2f0; // UWBP_SettingComboBoxItem_C*
		constexpr auto DLSSQuality = 0x2f8; // UWBP_DLSSQualitySettingComboBoxItem_C*
		constexpr auto EffectsQualityDetail = 0x300; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto FoliageQuality = 0x308; // UWBP_SettingComboBoxItem_C*
		constexpr auto FoliageQualityDetail = 0x310; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto FrameRateLimit = 0x318; // UWBP_FrameLimitSettingEditableTextblockItem_C*
		constexpr auto FSRQuality = 0x320; // UWBP_FSRSettingComboBoxItem_C*
		constexpr auto Gamma = 0x328; // UWBP_GammaSettingSliderItem_C*
		constexpr auto MotionBlurQuality = 0x330; // UWBP_SettingComboBoxItem_C*
		constexpr auto OverallScalability = 0x338; // UWBP_OverallScalabilityLevelSliderView_C*
		constexpr auto PostProcessQuality = 0x340; // UWBP_SettingComboBoxItem_C*
		constexpr auto PostProcessQualityDetail = 0x348; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto ResolutionQuality = 0x350; // UWBP_ResolutionScaleSettingSliderItem_C*
		constexpr auto ScreenResolution = 0x358; // UWBP_ResolutionSettingComboBoxItem_C*
		constexpr auto ShadingQuality = 0x360; // UWBP_SettingComboBoxItem_C*
		constexpr auto ShadingQualityDetail = 0x368; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto ShadowQuality = 0x370; // UWBP_SettingComboBoxItem_C*
		constexpr auto ShadowQualityDetail = 0x378; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto SingleCellHP = 0x380; // UWBP_SingleCellHPSettingComboBoxItem_C*
		constexpr auto TextureQuality = 0x388; // UWBP_SettingComboBoxItem_C*
		constexpr auto TextureQualityDetail = 0x390; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto TitleImage = 0x398; // UImage*
		constexpr auto TitleImage_2 = 0x3a0; // UImage*
		constexpr auto ViewDistanceQuality = 0x3a8; // UWBP_SettingComboBoxItem_C*
		constexpr auto ViewDistanceQualityDetail = 0x3b0; // UWBP_ScalabilityDetailSetting_C*
		constexpr auto VisualEffectQuality = 0x3b8; // UWBP_SettingComboBoxItem_C*
		constexpr auto WindowMode = 0x3c0; // UWBP_SettingComboBoxItem_C*
		constexpr auto ResolutionList = 0x3c8; // TArray<FIntPoint>
	}

	namespace n_ULightmassPortalComponent {
		constexpr auto PreviewBox = 0x208; // UBoxComponent*
	}

	namespace n_UMaterialExpressionSquareRoot {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UParticleModuleBeamTarget {
		constexpr auto TargetMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto TargetName = 0x34; // FName
		constexpr auto Target = 0x40; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0x88; // char : 1
		constexpr auto bLockTarget = 0x88; // char : 1
		constexpr auto TargetTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto TargetTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockTargetTangent = 0xd8; // char : 1
		constexpr auto TargetStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockTargetStength = 0x110; // char : 1
		constexpr auto LockRadius = 0x114; // float
	}

	namespace n_UAchievementRewardBuff {
		constexpr auto ImgIcon = 0x260; // UImage*
	}

	namespace n_UStableFeedSlot {
		constexpr auto BGBorder_NormalTexture = 0x260; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_HoverTexture = 0x288; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder_SelectTexture = 0x2b0; // TSoftObjectPtr<UTexture2D>
		constexpr auto CastratedTexture = 0x2d8; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexFemaleTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto SexMaleTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto SystemTrainerTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto DefaultVehicleTexture = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto QualityCorrectionToQualityType = 0x3a0; // TMap<EGeneralsQualityType, float>
		constexpr auto VehicleQualityTexture = 0x3f0; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto SystemTrainerQualityTexture = 0x4e0; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto SystemTrainerSpecialTypeTexture = 0x558; // TSoftObjectPtr<UTexture2D> [0x3]
		constexpr auto TrainerQualityTexture = 0x5d0; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto TrainerSpecialTypeTexture = 0x6c0; // TSoftObjectPtr<UTexture2D> [0x4]
		constexpr auto DisableClickTexts = 0x760; // FText [0x2b]
		constexpr auto PregnancyToolTipText = 0xb68; // FText
		constexpr auto DBTypeStatusTexture = 0xb80; // TSoftObjectPtr<UTexture2D>
		constexpr auto GrowingStatusTexture = 0xba8; // TSoftObjectPtr<UTexture2D>
		constexpr auto MatingStatusTexture = 0xbd0; // TSoftObjectPtr<UTexture2D>
		constexpr auto PregnancyStatusTexture = 0xbf8; // TSoftObjectPtr<UTexture2D>
		constexpr auto TrainingStatusTexture = 0xc20; // TSoftObjectPtr<UTexture2D>
		constexpr auto StarvingStatusTexture = 0xc48; // TSoftObjectPtr<UTexture2D>
		constexpr auto RidingStatusTexture = 0xc70; // TSoftObjectPtr<UTexture2D>
		constexpr auto RecoveryHPStatusTexture = 0xc98; // TSoftObjectPtr<UTexture2D>
		constexpr auto DiffServerStatusTexture = 0xcc0; // TSoftObjectPtr<UTexture2D>
		constexpr auto UnknownStatusTexture = 0xce8; // TSoftObjectPtr<UTexture2D>
		constexpr auto WorkTypeStatusTexture = 0xd10; // TSoftObjectPtr<UTexture2D>
		constexpr auto TamingStatusTexture = 0xd38; // TSoftObjectPtr<UTexture2D>
		constexpr auto MateCDStatusTexture = 0xd60; // TSoftObjectPtr<UTexture2D>
		constexpr auto ReborningStatusTexture = 0xd88; // TSoftObjectPtr<UTexture2D>
		constexpr auto DeathTypeStatusTexture = 0xdb0; // TSoftObjectPtr<UTexture2D>
		constexpr auto BGBorder = 0xdd8; // UBorder*
		constexpr auto FGBorder = 0xde0; // UBorder*
		constexpr auto DisableClickTB = 0xde8; // UTextBlock*
		constexpr auto VehicleStatusIcon = 0xdf0; // UImage*
		constexpr auto VehicleQualityBG = 0xdf8; // UImage*
		constexpr auto VehicleIconImg = 0xe00; // UImage*
		constexpr auto VehicleDetailBtn = 0xe08; // UButton*
		constexpr auto MiddlePanel = 0xe10; // UCanvasPanel*
		constexpr auto NameText = 0xe18; // UTextBlock*
		constexpr auto LevelText = 0xe20; // UTextBlock*
		constexpr auto SexImg = 0xe28; // UImage*
		constexpr auto SchedulePB = 0xe30; // UProgressBar*
		constexpr auto ScheduleText = 0xe38; // UTextBlock*
		constexpr auto TrainerPanel = 0xe40; // UCanvasPanel*
		constexpr auto TrainerIconBG = 0xe48; // UBorder*
		constexpr auto TrainerQualityPanel = 0xe50; // UCanvasPanel*
		constexpr auto TrainerQualityBG = 0xe58; // UImage*
		constexpr auto TrainerSpecialTypeBG = 0xe60; // UImage*
		constexpr auto TrainerIconImg = 0xe68; // UImage*
		constexpr auto BindTrainerImg = 0xe70; // UImage*
		constexpr auto StopTrainBtn = 0xe78; // UButton*
		constexpr auto TakeTrainRewardBtn = 0xe80; // UButton*
		constexpr auto AccRebornBtn = 0xe88; // UButton*
		constexpr auto ChunkVehicleData = 0xea0; // FBaseAnimalChunkData
		constexpr auto LinkAnimalNetData = 0xf50; // FStableLinkAnimalNetData
		constexpr auto VehicleStatusTipText = 0xf80; // FText
		constexpr auto BindVehicleChar = 0xf98; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
		constexpr auto bUseCloudData = 0xfa0; // char : 1
	}

	namespace n_UBTTask_KeepFormation {
		constexpr auto BBKey_DesiredLocation = 0xc0; // FBlackboardKeySelector
		constexpr auto BBKey_VirtualStatus = 0xe8; // FBlackboardKeySelector
		constexpr auto bGetCustomConfigFromCharacter = 0x110; // char : 1
		constexpr auto FollowDistance = 0x114; // float
		constexpr auto FollowDistanceTolerance = 0x11c; // float
		constexpr auto FollowFinishWaitTimeInRange = 0x128; // FVector2D
		constexpr auto bIgnoreAgainFollowDistance = 0x130; // char : 1
		constexpr auto bUpdateKeepInPlaceLoc = 0x130; // char : 1
		constexpr auto bUpdateDesiredLocationOnActor = 0x130; // char : 1
		constexpr auto bUpdateDesiredLocationOnFormation = 0x130; // char : 1
		constexpr auto bFinishedTask = 0x130; // char : 1
		constexpr auto bEnableReachStatuType = 0x130; // char : 1
		constexpr auto Enum_ReachStatuType = 0x131; // EAIStatusType
		constexpr auto bReachToggleAIMoveOrder = 0x132; // char : 1
		constexpr auto UpdateFormationMaxWaitTime = 0x150; // float
		constexpr auto UpdateFormationMaxWaitTimeInRange = 0x154; // FVector2D
		constexpr auto bUpdateFormationLocation = 0x2a8; // char : 1
		constexpr auto bUseSmoothActorLocation = 0x2a8; // char : 1
		constexpr auto FormationLocationCapsuleCheckMultiply = 0x2ac; // float
		constexpr auto FormationLocationTolerance = 0x2b0; // float
		constexpr auto FormationLocationSmoothTolerance = 0x2b4; // float
		constexpr auto FormationLocationMaxTolerance = 0x2b8; // float
		constexpr auto FormationLocationInterpSpeed = 0x2bc; // float
		constexpr auto FormationCustomVelocityInterpSpeed = 0x2c0; // float
		constexpr auto FormationLocationClampSize = 0x2c4; // FVector2D
		constexpr auto RotationWaitTimeInRange = 0x2d8; // FVector2D
		constexpr auto TurnInPlaceWaitTimeInRange = 0x2ec; // FVector2D
		constexpr auto TurnInPlaceAddRotationInRange = 0x2f4; // FVector2D
		constexpr auto bUpdateFormationRotation = 0x2fc; // char : 1
		constexpr auto bUseSmoothActorRotation = 0x2fc; // char : 1
		constexpr auto FollowDeltaAngle = 0x300; // float
		constexpr auto FormationRotationTolerance = 0x304; // float
		constexpr auto FormationRotationInterpSpeed = 0x30c; // float
		constexpr auto ImpulseMaxWaitTime = 0x318; // float
		constexpr auto ImpulseMaxWaitTimeInRange = 0x31c; // FVector2D
		constexpr auto CollisionMaxWaitTimeInRange = 0x32c; // FVector2D
		constexpr auto SetActorLocationTolerance = 0x334; // float
		constexpr auto bCheckWaitChangeGuard = 0x338; // char : 1
	}

	namespace n_UUI_SeasonPassportRewardItem {
		constexpr auto ItemImage = 0x260; // UImage*
		constexpr auto LockImage = 0x268; // UImage*
		constexpr auto AlreadyGetImage = 0x270; // UImage*
		constexpr auto RewardNumText = 0x278; // UTextBlock*
	}

	namespace n_UStaticMeshSimulationComponent {
		constexpr auto Simulating = 0xc8; // bool
		constexpr auto bNotifyCollisions = 0xc9; // bool
		constexpr auto ObjectType = 0xca; // EObjectStateTypeEnum
		constexpr auto Mass = 0xcc; // float
		constexpr auto CollisionType = 0xd0; // ECollisionTypeEnum
		constexpr auto ImplicitType = 0xd1; // EImplicitTypeEnum
		constexpr auto MinLevelSetResolution = 0xd4; // int32_t
		constexpr auto MaxLevelSetResolution = 0xd8; // int32_t
		constexpr auto InitialVelocityType = 0xdc; // EInitialVelocityTypeEnum
		constexpr auto InitialLinearVelocity = 0xe0; // FVector
		constexpr auto InitialAngularVelocity = 0xec; // FVector
		constexpr auto DamageThreshold = 0xf8; // float
		constexpr auto PhysicalMaterial = 0x100; // UChaosPhysicalMaterial*
		constexpr auto ChaosSolverActor = 0x108; // AChaosSolverActor*
		constexpr auto OnChaosPhysicsCollision = 0x110; // FMulticastInlineDelegate
		constexpr auto SimulatedComponents = 0x130; // TArray<UPrimitiveComponent*>
	}

	namespace n_UMovieSceneGeometryCacheTrack {
		constexpr auto AnimationSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_ASGStructureDrum {
		constexpr auto PlayerPromoteBuff = 0xf70; // USGBuff*
		constexpr auto SeatRotationOffset = 0xf78; // TArray<FRotator>
		constexpr auto CameraSocketName = 0xf88; // TArray<FName>
		constexpr auto DrumEffetRadius = 0xf98; // float
		constexpr auto DrumRefreshInterval = 0xfa8; // int32_t
		constexpr auto ActivePlayerArray = 0xfb0; // TArray<TWeakObjectPtr<ASGCharacter>>
		constexpr auto bCanNPCHelp = 0xfc0; // char : 1
		constexpr auto AllowNpcControlClass = 0xfc8; // TArray<ABaseCharacter*>
	}

	namespace n_UGizmoConstantFrameAxisSource {
		constexpr auto Origin = 0x30; // FVector
		constexpr auto Direction = 0x3c; // FVector
		constexpr auto TangentX = 0x48; // FVector
		constexpr auto TangentY = 0x54; // FVector
	}

	namespace n_AIntervalGizmoActor {
		constexpr auto UpIntervalComponent = 0x310; // UGizmoLineHandleComponent*
		constexpr auto DownIntervalComponent = 0x318; // UGizmoLineHandleComponent*
		constexpr auto ForwardIntervalComponent = 0x320; // UGizmoLineHandleComponent*
	}

	namespace n_UMagicLeapARPinSettings {
		constexpr auto UpdateCheckFrequency = 0x28; // float
		constexpr auto OnUpdatedEventTriggerDelta = 0x2c; // FMagicLeapARPinState
	}

	namespace n_UInterpTrackVisibility {
		constexpr auto VisibilityTrack = 0x70; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenBackwards = 0x80; // char : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0x80; // char : 1
	}

	namespace n_UParticleModuleVectorFieldLocal {
		constexpr auto VectorField = 0x30; // UVectorField*
		constexpr auto RelativeTranslation = 0x38; // FVector
		constexpr auto RelativeRotation = 0x44; // FRotator
		constexpr auto RelativeScale3D = 0x50; // FVector
		constexpr auto Intensity = 0x5c; // float
		constexpr auto Tightness = 0x60; // float
		constexpr auto bIgnoreComponentTransform = 0x64; // char : 1
		constexpr auto bTileX = 0x64; // char : 1
		constexpr auto bTileY = 0x64; // char : 1
		constexpr auto bTileZ = 0x64; // char : 1
		constexpr auto bUseFixDT = 0x64; // char : 1
	}

	namespace n_UMaterialExpressionDeriveNormalZ {
		constexpr auto InXY = 0x40; // FExpressionInput
	}

	namespace n_USkyAtmosphereComponent {
		constexpr auto TransformMode = 0x208; // ESkyAtmosphereTransformMode
		constexpr auto BottomRadius = 0x20c; // float
		constexpr auto GroundAlbedo = 0x210; // FColor
		constexpr auto AtmosphereHeight = 0x214; // float
		constexpr auto MultiScatteringFactor = 0x218; // float
		constexpr auto TraceSampleCountScale = 0x21c; // float
		constexpr auto RayleighScatteringScale = 0x220; // float
		constexpr auto RayleighScattering = 0x224; // FLinearColor
		constexpr auto RayleighExponentialDistribution = 0x234; // float
		constexpr auto MieScatteringScale = 0x238; // float
		constexpr auto MieScattering = 0x23c; // FLinearColor
		constexpr auto MieAbsorptionScale = 0x24c; // float
		constexpr auto MieAbsorption = 0x250; // FLinearColor
		constexpr auto MieAnisotropy = 0x260; // float
		constexpr auto MieExponentialDistribution = 0x264; // float
		constexpr auto OtherAbsorptionScale = 0x268; // float
		constexpr auto OtherAbsorption = 0x26c; // FLinearColor
		constexpr auto OtherTentDistribution = 0x27c; // FTentDistribution
		constexpr auto SkyLuminanceFactor = 0x288; // FLinearColor
		constexpr auto AerialPespectiveViewDistanceScale = 0x298; // float
		constexpr auto HeightFogContribution = 0x29c; // float
		constexpr auto TransmittanceMinLightElevationAngle = 0x2a0; // float
		constexpr auto AerialPerspectiveStartDepth = 0x2a4; // float
		constexpr auto bStaticLightingBuiltGUID = 0x2cc; // FGuid
	}

	namespace n_UPlaneBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto Depth = 0x68; // float
		constexpr auto WhichSide = 0x6c; // EPlaneBrushSideMode
	}

	namespace n_UInAppPurchaseComponent {
		constexpr auto InAppPurchaseLogMessage = 0xc0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsSuccess = 0xd0; // FMulticastInlineDelegate
		constexpr auto GetItemsDetailsFailure = 0xe0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationSuccess = 0xf0; // FMulticastInlineDelegate
		constexpr auto PurchaseConfirmationFailure = 0x100; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistorySuccess = 0x110; // FMulticastInlineDelegate
		constexpr auto GetPurchaseHistoryFailure = 0x120; // FMulticastInlineDelegate
	}

	namespace n_UBTTask_Relaxed {
		constexpr auto bAutoChooseStatus = 0xc0; // char : 1
	}

	namespace n_UMaterialInstanceConstant {
		constexpr auto PhysMaterialMask = 0x360; // UPhysicalMaterialMask*
	}

	namespace n_UAbilityTask_WaitGameplayEffectBlockedImmunity {
		constexpr auto bLocked = 0x80; // FMulticastInlineDelegate
		constexpr auto ExternalOwner = 0x118; // UAbilitySystemComponent*
	}

	namespace n_ASGGameMode {
		constexpr auto PrivateServerPlayerNameSet = 0x428; // TArray<FString>
		constexpr auto LobbySpawnCharacterTemplate = 0x438; // ASGCharacter*
		constexpr auto LobbyLoginWaitTime = 0x514; // float
		constexpr auto ExploitCompConfigsDataTable = 0x5b8; // UDataTable*
		constexpr auto AdminSGCheatManager = 0x628; // USGCheatManager*
		constexpr auto OnlineLobbySessionList = 0x630; // TArray<UOnlineLobbySession*>
		constexpr auto ShutDownServiceSocket = 0x648; // UShutDownService*
		constexpr auto BasePlayerDatas = 0x650; // TMap<FString, UBasePlayerData*>
		constexpr auto PlayerPresenceStaus = 0x6a0; // TMap<FString, FPlayerPresenceStaus>
		constexpr auto ServerInfoData = 0x6f0; // FServerInfoData
		constexpr auto SkillAddExpAction = 0x7e8; // FSkillAddExpAction
		constexpr auto GameMultiplier = 0x9b0; // FServerMultiplier
		constexpr auto LastClearGuildGongXunTime = 0xf10; // FDateTime
		constexpr auto GuildSingleServerDatas = 0xf18; // TMap<FGuid, FGuildSingleServerData>
		constexpr auto GuildDetailDatas = 0xf68; // TMap<FGuid, FGuildDetailData>
		constexpr auto GuildBriefDatas = 0xfb8; // TMap<FGuid, FGuildBriefData>
		constexpr auto ServerOpenTime = 0x1008; // int64_t
		constexpr auto PubDataManager = 0x1010; // UPubDataManager*
		constexpr auto bPubDataAllLoaded = 0x1018; // char : 1
		constexpr auto PlayerMsgRecords = 0x1040; // TMap<FGuid, FMsgRecordList>
		constexpr auto GuildMsgRecords = 0x1090; // TMap<FGuid, FMsgRecordList>
		constexpr auto MaxGuildContainerRecCount = 0x10e0; // int32_t
		constexpr auto GuildContainerLogs = 0x10e8; // TMap<FGuid, FGuildContainerRecSets>
		constexpr auto bApplyToGameStateAfterLoadWorldCompleted = 0x1138; // char : 1
		constexpr auto CurrentServerLevel = 0x113c; // int32_t
		constexpr auto TaishouSignInfoBackup = 0x1140; // FTaishouSignInfo
		constexpr auto bWorldIsSaveGame = 0x1259; // char : 1
		constexpr auto ClearDBChunkMinutes = 0x125c; // float
		constexpr auto ClearChunkMinutes = 0x1260; // float
		constexpr auto DefaultRebornTime = 0x1264; // float
		constexpr auto DefaultDeathReduceLifeCount = 0x1268; // int32_t
		constexpr auto DeathReduceLifeCount = 0x1270; // TMap<ECharacterType, int32_t>
		constexpr auto ChunkInfoMap = 0x12c0; // TMap<FGuid, FBaseChunkDataInfo>
		constexpr auto BattleType = 0x1310; // EBattleType
		constexpr auto DefenseGuildGuid = 0x1324; // FGuid
		constexpr auto AttackGuildGuid = 0x1334; // FGuid
		constexpr auto DefenseAllianGuid = 0x1344; // FGuid
		constexpr auto AttackAllianGuid = 0x1354; // FGuid
		constexpr auto DeleteRoleCoolDownMinutes = 0x1388; // uint32_t
		constexpr auto CalProtectionInterval = 0x138c; // int32_t
		constexpr auto LastCalProtectionTime = 0x1390; // double
		constexpr auto bOpenQuestSystem = 0x1398; // char : 1
		constexpr auto GuildStructureDatas = 0x13a0; // TMap<FGuid, FGuildStructureData>
		constexpr auto PlayerMiniMapMarkDatas = 0x13f0; // TMap<FGuid, FMiniMapMarkDataArray>
		constexpr auto GuildMiniMapMarkDatas = 0x1440; // TMap<FGuid, FMiniMapMarkDataArray>
		constexpr auto GuildStructureInfoDatas = 0x1490; // TMap<FGuid, FGuildStructureInfoData>
		constexpr auto ServerCharacterStructureDatas = 0x14e0; // TMap<FGuid, FCharacterStructureData>
		constexpr auto PlayerOccupySellDatas = 0x1530; // TMap<FString, FOccupySellInfo>
		constexpr auto GMInitProtectTime = 0x1580; // int32_t
		constexpr auto PlayerLastDeathLocations = 0x1588; // TMap<FGuid, FVector>
		constexpr auto SaveLastDeathInfoNum = 0x15d8; // int32_t
		constexpr auto DeathCharacterInfoMap = 0x15e0; // TMap<FGuid, FDeathCharacterInfoList>
		constexpr auto PlayerVoiceDistance = 0x1630; // int32_t
		constexpr auto CurrentWorshipEffect = 0x16c0; // TArray<FWorship>
		constexpr auto XianChengOwner = 0x16d0; // FGuid
		constexpr auto StandalonePlayerData = 0x1738; // TArray<char>
		constexpr auto StandaloneCharacterData = 0x1748; // TArray<char>
	}

	namespace n_UUI_ViewGeneral {
		constexpr auto VGOptionConfig = 0x2d8; // TArray<FVGOptionConfig>
		constexpr auto SkillInfoSlotTemplate = 0x2e8; // USkillInfoSlot*
		constexpr auto ViewGeneralShowTime = 0x2f4; // float
		constexpr auto RadarChartStartPercent = 0x2f8; // float
		constexpr auto BorderTexture = 0x300; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderHTexture = 0x328; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderLockTexture = 0x350; // TSoftObjectPtr<UTexture2D>
		constexpr auto BorderUnLockTexture = 0x378; // TSoftObjectPtr<UTexture2D>
		constexpr auto SlotPadding = 0x3a0; // FMargin
		constexpr auto RightVerticalBoxName = 0x3b0; // FName
		constexpr auto GeneralCharacterQuality = 0x3b8; // TSoftObjectPtr<UTexture2D> [0x6]
		constexpr auto bUseTestViewGeneralLevel = 0x4a8; // char : 1
		constexpr auto TestViewGeneralLevel = 0x4ac; // int32_t
		constexpr auto ViewGeneralTips = 0x4b0; // FText [0x6]
		constexpr auto NormalPerkPanel = 0x540; // UUniformGridPanel*
		constexpr auto AngryPerkPanel = 0x548; // UVerticalBox*
		constexpr auto WeakPerkPanel = 0x550; // UVerticalBox*
		constexpr auto ViewGeneralLevelText = 0x558; // UTextBlock*
		constexpr auto QualityImage = 0x560; // UImage*
		constexpr auto TextBlockTips = 0x568; // UTextBlock*
		constexpr auto SizeBox_check = 0x570; // USizeBox*
		constexpr auto SizeBox_Normal = 0x578; // USizeBox*
		constexpr auto SizeBox_Angry = 0x580; // USizeBox*
		constexpr auto SizeBox_Weak = 0x588; // USizeBox*
		constexpr auto SizeBox_Prop = 0x590; // USizeBox*
		constexpr auto Image_Rotate = 0x598; // UImage*
		constexpr auto LastViewGeneralChar = 0x5a0; // TWeakObjectPtr<ASGGeneralCharacter>
		constexpr auto BindViewGeneralLevel = 0x5a8; // int32_t
		constexpr auto BindCharacter = 0x5ac; // TWeakObjectPtr<ASGGeneralCharacter>
	}

	namespace n_UVehicleAttributePanel {
		constexpr auto HPText = 0x260; // UTextBlock*
		constexpr auto StunText = 0x268; // UTextBlock*
		constexpr auto SPText = 0x270; // UTextBlock*
		constexpr auto MaxSpeedText = 0x278; // UTextBlock*
		constexpr auto OperateText = 0x280; // UTextBlock*
		constexpr auto HungryText = 0x288; // UTextBlock*
		constexpr auto WeightText = 0x290; // UTextBlock*
		constexpr auto HealthText = 0x298; // UTextBlock*
		constexpr auto ImpactText = 0x2a0; // UTextBlock*
		constexpr auto LifeCountText = 0x2a8; // UTextBlock*
		constexpr auto SlashArmorText = 0x2b0; // UTextBlock*
		constexpr auto PierceArmorText = 0x2b8; // UTextBlock*
		constexpr auto CrushArmorText = 0x2c0; // UTextBlock*
		constexpr auto SiegeArmorText = 0x2c8; // UTextBlock*
		constexpr auto BindVehicleCharacter = 0x2d0; // TWeakObjectPtr<ASG_AnimalVehicleCharacter>
	}

	namespace n_UProceduralFoliageSpawner {
		constexpr auto RandomSeed = 0x28; // int32_t
		constexpr auto TileSize = 0x2c; // float
		constexpr auto NumUniqueTiles = 0x30; // int32_t
		constexpr auto MinimumQuadTreeSize = 0x34; // float
		constexpr auto FoliageTypes = 0x40; // TArray<FFoliageTypeObject>
	}

	namespace n_ULevelSequenceAnimSequenceLink {
		constexpr auto AnimSequenceLinks = 0x28; // TArray<FLevelSequenceAnimSequenceLinkItem>
	}

	namespace n_UButtonStyleAsset {
		constexpr auto ButtonStyle = 0x28; // FButtonStyle
	}

	namespace n_USynthSamplePlayer {
		constexpr auto SoundWave = 0x6d0; // USoundWave*
		constexpr auto OnSampleLoaded = 0x6d8; // FMulticastInlineDelegate
		constexpr auto OnSamplePlaybackProgress = 0x6e8; // FMulticastInlineDelegate
	}

	namespace n_UPlaneFalloff {
		constexpr auto Magnitude = 0xc0; // float
		constexpr auto MinRange = 0xc4; // float
		constexpr auto MaxRange = 0xc8; // float
		constexpr auto Default = 0xcc; // float
		constexpr auto Distance = 0xd0; // float
		constexpr auto position = 0xd4; // FVector
		constexpr auto Normal = 0xe0; // FVector
		constexpr auto Falloff = 0xec; // EFieldFalloffType
	}

	namespace n_UWBP_LanguageSystemSetting_C {
		constexpr auto Culture = 0x290; // UWBP_LanguageComboBoxItem_C*
		constexpr auto TitleImage = 0x298; // UImage*
	}

	namespace n_URendererSettings {
		constexpr auto bMobileDisableVertexFog = 0x38; // char : 1
		constexpr auto MaxMobileCascades = 0x3c; // int32_t
		constexpr auto MobileMSAASampleCount = 0x40; // EMobileMSAASampleCount
		constexpr auto bMobileAllowDitheredLODTransition = 0x44; // char : 1
		constexpr auto bMobileAllowSoftwareOcclusionCulling = 0x44; // char : 1
		constexpr auto bMobileVirtualTextures = 0x44; // char : 1
		constexpr auto bDiscardUnusedQualityLevels = 0x44; // char : 1
		constexpr auto bOcclusionCulling = 0x44; // char : 1
		constexpr auto MinScreenRadiusForLights = 0x48; // float
		constexpr auto MinScreenRadiusForEarlyZPass = 0x4c; // float
		constexpr auto MinScreenRadiusForCSMdepth = 0x50; // float
		constexpr auto bPrecomputedVisibilityWarning = 0x54; // char : 1
		constexpr auto bTextureStreaming = 0x54; // char : 1
		constexpr auto bUseDXT5NormalMaps = 0x54; // char : 1
		constexpr auto bVirtualTextures = 0x54; // char : 1
		constexpr auto bVirtualTexturedLightmaps = 0x54; // char : 1
		constexpr auto VirtualTextureTileSize = 0x58; // uint32_t
		constexpr auto VirtualTextureTileBorderSize = 0x5c; // uint32_t
		constexpr auto VirtualTextureFeedbackFactor = 0x60; // uint32_t
		constexpr auto bVirtualTextureEnableCompressZlib = 0x64; // char : 1
		constexpr auto bVirtualTextureEnableCompressCrunch = 0x64; // char : 1
		constexpr auto bClearCoatEnableSecondNormal = 0x64; // char : 1
		constexpr auto ReflectionCaptureResolution = 0x68; // int32_t
		constexpr auto bReflectionCaptureCompression = 0x6c; // char : 1
		constexpr auto ReflectionEnvironmentLightmapMixBasedOnRoughness = 0x6c; // char : 1
		constexpr auto bForwardShading = 0x6c; // char : 1
		constexpr auto bVertexFoggingForOpaque = 0x6c; // char : 1
		constexpr auto bAllowStaticLighting = 0x6c; // char : 1
		constexpr auto bUseNormalMapsForStaticLighting = 0x6c; // char : 1
		constexpr auto bGenerateMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bEightBitMeshDistanceFields = 0x6c; // char : 1
		constexpr auto bGenerateLandscapeGIData = 0x6d; // char : 1
		constexpr auto bCompressMeshDistanceFields = 0x6d; // char : 1
		constexpr auto TessellationAdaptivePixelsPerTriangle = 0x70; // float
		constexpr auto bSeparateTranslucency = 0x74; // char : 1
		constexpr auto TranslucentSortPolicy = 0x78; // ETranslucentSortPolicy
		constexpr auto TranslucentSortAxis = 0x7c; // FVector
		constexpr auto CustomDepthStencil = 0x88; // ECustomDepthStencil
		constexpr auto bCustomDepthTaaJitter = 0x8c; // char : 1
		constexpr auto bEnableAlphaChannelInPostProcessing = 0x90; // EAlphaChannelMode
		constexpr auto bDefaultFeatureBloom = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusion = 0x94; // char : 1
		constexpr auto bDefaultFeatureAmbientOcclusionStaticFraction = 0x94; // char : 1
		constexpr auto bDefaultFeatureAutoExposure = 0x94; // char : 1
		constexpr auto DefaultFeatureAutoExposure = 0x98; // EAutoExposureMethodUI
		constexpr auto DefaultFeatureAutoExposureBias = 0x9c; // float
		constexpr auto bExtendDefaultLuminanceRangeInAutoExposureSettings = 0xa0; // char : 1
		constexpr auto bUsePreExposure = 0xa0; // char : 1
		constexpr auto bEnablePreExposureOnlyInTheEditor = 0xa0; // char : 1
		constexpr auto bDefaultFeatureMotionBlur = 0xa0; // char : 1
		constexpr auto bDefaultFeatureLensFlare = 0xa0; // char : 1
		constexpr auto bTemporalUpsampling = 0xa0; // char : 1
		constexpr auto bSSGI = 0xa0; // char : 1
		constexpr auto DefaultFeatureAntiAliasing = 0xa4; // EAntiAliasingMethod
		constexpr auto DefaultLightUnits = 0xa5; // ELightUnits
		constexpr auto DefaultBackBufferPixelFormat = 0xa6; // EDefaultBackBufferPixelFormat
		constexpr auto bRenderUnbuiltPreviewShadowsInGame = 0xa8; // char : 1
		constexpr auto bStencilForLODDither = 0xa8; // char : 1
		constexpr auto EarlyZPass = 0xac; // EEarlyZPass
		constexpr auto bEarlyZPassOnlyMaterialMasking = 0xb0; // char : 1
		constexpr auto bDBuffer = 0xb0; // char : 1
		constexpr auto ClearSceneMethod = 0xb4; // EClearSceneOptions
		constexpr auto bBasePassOutputsVelocity = 0xb8; // char : 1
		constexpr auto bVertexDeformationOutputsVelocity = 0xb8; // char : 1
		constexpr auto bSelectiveBasePassOutputs = 0xb8; // char : 1
		constexpr auto bDefaultParticleCutouts = 0xb8; // char : 1
		constexpr auto GPUSimulationTextureSizeX = 0xbc; // int32_t
		constexpr auto GPUSimulationTextureSizeY = 0xc0; // int32_t
		constexpr auto bGlobalClipPlane = 0xc4; // char : 1
		constexpr auto GBufferFormat = 0xc8; // EGBufferFormat
		constexpr auto bUseGPUMorphTargets = 0xcc; // char : 1
		constexpr auto bNvidiaAftermathEnabled = 0xcc; // char : 1
		constexpr auto bMultiView = 0xcc; // char : 1
		constexpr auto bMobilePostProcessing = 0xcc; // char : 1
		constexpr auto bMobileMultiView = 0xcc; // char : 1
		constexpr auto bMobileUseHWsRGBEncoding = 0xcc; // char : 1
		constexpr auto bRoundRobinOcclusion = 0xcc; // char : 1
		constexpr auto bODSCapture = 0xcc; // char : 1
		constexpr auto bMeshStreaming = 0xcd; // char : 1
		constexpr auto WireframeCullThreshold = 0xd0; // float
		constexpr auto bEnableRayTracing = 0xd4; // char : 1
		constexpr auto bEnableRayTracingTextureLOD = 0xd4; // char : 1
		constexpr auto bEnableHybridTranslucency = 0xd4; // char : 1
		constexpr auto bSupportStationarySkylight = 0xd4; // char : 1
		constexpr auto bSupportLowQualityLightmaps = 0xd4; // char : 1
		constexpr auto bSupportPointLightWholeSceneShadows = 0xd4; // char : 1
		constexpr auto bSupportAtmosphericFog = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphere = 0xd4; // char : 1
		constexpr auto bSupportSkyAtmosphereAffectsHeightFog = 0xd5; // char : 1
		constexpr auto bSupportSkinCacheShaders = 0xd5; // char : 1
		constexpr auto DefaultSkinCacheBehavior = 0xd8; // ESkinCacheDefaultBehavior
		constexpr auto SkinCacheSceneMemoryLimitInMB = 0xdc; // float
		constexpr auto bMobileEnableStaticAndCSMShadowReceivers = 0xe0; // char : 1
		constexpr auto bMobileEnableMovableLightCSMShaderCulling = 0xe0; // char : 1
		constexpr auto bMobileAllowDistanceFieldShadows = 0xe0; // char : 1
		constexpr auto bMobileAllowMovableDirectionalLights = 0xe0; // char : 1
		constexpr auto MobileNumDynamicPointLights = 0xe4; // uint32_t
		constexpr auto bMobileDynamicPointLightsUseStaticBranch = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlights = 0xe8; // char : 1
		constexpr auto bMobileAllowMovableSpotlightShadows = 0xe8; // char : 1
		constexpr auto bSupport16BitBoneIndex = 0xe8; // char : 1
		constexpr auto bGPUSkinLimit2BoneInfluences = 0xe8; // char : 1
		constexpr auto bSupportDepthOnlyIndexBuffers = 0xe8; // char : 1
		constexpr auto bSupportReversedIndexBuffers = 0xe8; // char : 1
		constexpr auto bLPV = 0xe8; // char : 1
		constexpr auto bMobileAmbientOcclusion = 0xe9; // char : 1
		constexpr auto bUseUnlimitedBoneInfluences = 0xe9; // char : 1
		constexpr auto UnlimitedBonInfluencesThreshold = 0xec; // int32_t
		constexpr auto MobilePlanarReflectionMode = 0xf0; // EMobilePlanarReflectionMode
		constexpr auto bStreamSkeletalMeshLODs = 0xf1; // FPerPlatformBool
		constexpr auto bDiscardSkeletalMeshOptionalLODs = 0xf2; // FPerPlatformBool
		constexpr auto VisualizeCalibrationColorMaterialPath = 0xf8; // FSoftObjectPath
		constexpr auto VisualizeCalibrationCustomMaterialPath = 0x110; // FSoftObjectPath
		constexpr auto VisualizeCalibrationGrayscaleMaterialPath = 0x128; // FSoftObjectPath
	}

	namespace n_UDatasmithDeltaGenSceneImportData {
		constexpr auto bMergeNodes = 0x48; // bool
		constexpr auto bOptimizeDuplicatedNodes = 0x49; // bool
		constexpr auto bRemoveInvisibleNodes = 0x4a; // bool
		constexpr auto bSimplifyNodeHierarchy = 0x4b; // bool
		constexpr auto bImportVar = 0x4c; // bool
		constexpr auto VarPath = 0x50; // FString
		constexpr auto bImportPos = 0x60; // bool
		constexpr auto PosPath = 0x68; // FString
		constexpr auto bImportTml = 0x78; // bool
		constexpr auto TmlPath = 0x80; // FString
	}

	namespace n_URemoveOccludedTrianglesTool {
		constexpr auto BasicProperties = 0x90; // URemoveOccludedTrianglesToolProperties*
		constexpr auto AdvancedProperties = 0x98; // URemoveOccludedTrianglesAdvancedProperties*
		constexpr auto Previews = 0xa0; // TArray<UMeshOpPreviewWithBackgroundCompute*>
		constexpr auto PreviewCopies = 0xb0; // TArray<UPreviewMesh*>
	}

	namespace n_UAchievementTypePanel {
		constexpr auto AchievementTypeItemTemplate = 0x260; // UAchievementTypeItem*
		constexpr auto AchievementTypeGrid = 0x268; // UGridPanel*
		constexpr auto ItemList = 0x280; // TArray<UAchievementTypeItem*>
		constexpr auto SelectAchievementTypeItem = 0x290; // UAchievementTypeItem*
	}

	namespace n_ULeaderboardQueryCallbackProxy {
		constexpr auto OnSuccess = 0x28; // FMulticastInlineDelegate
		constexpr auto OnFailure = 0x38; // FMulticastInlineDelegate
	}

	namespace n_UWBP_PasswordDialog_C {
		constexpr auto CheckBoxSelectedTextBlock = 0x318; // URichTextBlock*
		constexpr auto Image = 0x320; // UImage*
		constexpr auto Image_131 = 0x328; // UImage*
		constexpr auto Image_250 = 0x330; // UImage*
		constexpr auto ImgBg = 0x338; // UImage*
		constexpr auto ImgBorder = 0x340; // UImage*
		constexpr auto ImgNameInputBg = 0x348; // UImage*
	}

	namespace n_UGerstnerWaterWaveGeneratorSimple {
		constexpr auto NumWaves = 0x28; // int32_t
		constexpr auto Seed = 0x2c; // int32_t
		constexpr auto Randomness = 0x30; // float
		constexpr auto MinWavelength = 0x34; // float
		constexpr auto MaxWavelength = 0x38; // float
		constexpr auto WavelengthFalloff = 0x3c; // float
		constexpr auto MinAmplitude = 0x40; // float
		constexpr auto MaxAmplitude = 0x44; // float
		constexpr auto AmplitudeFalloff = 0x48; // float
		constexpr auto WindAngleDeg = 0x4c; // float
		constexpr auto DirectionAngularSpreadDeg = 0x50; // float
		constexpr auto SmallWaveSteepness = 0x54; // float
		constexpr auto LargeWaveSteepness = 0x58; // float
		constexpr auto SteepnessFalloff = 0x5c; // float
	}

	namespace n_UGameViewportClient {
		constexpr auto ViewportConsole = 0x40; // UConsole*
		constexpr auto DebugProperties = 0x48; // TArray<FDebugDisplayProperty>
		constexpr auto MaxSplitscreenPlayers = 0x68; // int32_t
		constexpr auto World = 0x78; // UWorld*
		constexpr auto GameInstance = 0x80; // UGameInstance*
	}

	namespace n_UTextPropertyTestObject {
		constexpr auto DefaultedText = 0x28; // FText
		constexpr auto UndefaultedText = 0x40; // FText
		constexpr auto TransientText = 0x58; // FText
	}

	namespace n_UDestructibleComponent {
		constexpr auto bFractureEffectOverride = 0x6e0; // char : 1
		constexpr auto FractureEffects = 0x6e8; // TArray<FFractureEffect>
		constexpr auto bEnableHardSleeping = 0x6f8; // bool
		constexpr auto LargeChunkThreshold = 0x6fc; // float
		constexpr auto OnComponentFracture = 0x710; // FMulticastInlineDelegate
		constexpr auto bUseApexDestructibleActor = 0x7b4; // char : 1
	}

	namespace n_ASGGameModeLobby {
		constexpr auto LobbyType = 0x1758; // ESGLobbyType
	}

	namespace n_UClothingAssetBase {
		constexpr auto ImportedFilePath = 0x28; // FString
		constexpr auto AssetGuid = 0x38; // FGuid
	}

	namespace n_UAnimSingleNodeInstance {
		constexpr auto CurrentAsset = 0x2c0; // UAnimationAsset*
		constexpr auto PostEvaluateAnimEvent = 0x2c8; // FDelegate
		constexpr auto bShouldTriggerAnimNotifyState = 0x2d8; // char : 1
	}

	namespace n_UBorderSlot {
		constexpr auto Padding = 0x38; // FMargin
		constexpr auto HorizontalAlignment = 0x48; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x49; // EVerticalAlignment
	}

	namespace n_UUI_FlagImage {
		constexpr auto NewButton = 0x400; // UButton*
	}

	namespace n_UPhysicsSpringComponent {
		constexpr auto SpringStiffness = 0x208; // float
		constexpr auto SpringDamping = 0x20c; // float
		constexpr auto SpringLengthAtRest = 0x210; // float
		constexpr auto SpringRadius = 0x214; // float
		constexpr auto SpringChannel = 0x218; // ECollisionChannel
		constexpr auto bIgnoreSelf = 0x219; // bool
		constexpr auto SpringCompression = 0x21c; // float
	}

	namespace n_UMaterialExpressionFloor {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UMovieSceneMediaTrack {
		constexpr auto MediaSections = 0x80; // TArray<UMovieSceneSection*>
	}

	namespace n_UBackgroundBlur {
		constexpr auto Padding = 0x120; // FMargin
		constexpr auto HorizontalAlignment = 0x130; // EHorizontalAlignment
		constexpr auto VerticalAlignment = 0x131; // EVerticalAlignment
		constexpr auto bApplyAlphaToBlur = 0x132; // bool
		constexpr auto BlurStrength = 0x134; // float
		constexpr auto bOverrideAutoRadiusCalculation = 0x138; // bool
		constexpr auto BlurRadius = 0x13c; // int32_t
		constexpr auto LowQualityFallbackBrush = 0x140; // FSlateBrush
	}

	namespace n_UTransformProxy {
		constexpr auto bRotatePerObject = 0x70; // bool
		constexpr auto bSetPivotMode = 0x71; // bool
		constexpr auto SharedTransform = 0x90; // FTransform
		constexpr auto InitialSharedTransform = 0xc0; // FTransform
	}

	namespace n_AHUD {
		constexpr auto PlayerOwner = 0x310; // APlayerController*
		constexpr auto bLostFocusPaused = 0x318; // char : 1
		constexpr auto bShowHUD = 0x318; // char : 1
		constexpr auto bShowDebugInfo = 0x318; // char : 1
		constexpr auto CurrentTargetIndex = 0x31c; // int32_t
		constexpr auto bShowHitBoxDebugInfo = 0x320; // char : 1
		constexpr auto bShowOverlays = 0x320; // char : 1
		constexpr auto bEnableDebugTextShadow = 0x320; // char : 1
		constexpr auto PostRenderedActors = 0x328; // TArray<AActor*>
		constexpr auto DebugDisplay = 0x348; // TArray<FName>
		constexpr auto ToggledDebugCategories = 0x358; // TArray<FName>
		constexpr auto Canvas = 0x368; // UCanvas*
		constexpr auto DebugCanvas = 0x370; // UCanvas*
		constexpr auto DebugTextList = 0x378; // TArray<FDebugTextInfo>
		constexpr auto ShowDebugTargetDesiredClass = 0x388; // AActor*
		constexpr auto ShowDebugTargetActor = 0x390; // AActor*
	}

	namespace n_UPoseAsset {
		constexpr auto PoseContainer = 0x80; // FPoseDataContainer
		constexpr auto bAdditivePose = 0x110; // bool
		constexpr auto BasePoseIndex = 0x114; // int32_t
		constexpr auto RetargetSource = 0x118; // FName
	}

	namespace n_UActorSequenceComponent {
		constexpr auto PlaybackSettings = 0xc0; // FMovieSceneSequencePlaybackSettings
		constexpr auto Sequence = 0xd8; // UActorSequence*
		constexpr auto SequencePlayer = 0xe0; // UActorSequencePlayer*
	}

	namespace n_UBTTask_DoFeed {
		constexpr auto OverrideBrakingDistance = 0xd0; // float
	}

	namespace n_UUI_TrainReward {
		constexpr auto TrainRewardSlotTemplate = 0x2d8; // UTrainRewardSlot*
		constexpr auto PerRowCount = 0x2e0; // int32_t
		constexpr auto SlotMinCount = 0x2e4; // int32_t
		constexpr auto RewardGridPanel = 0x2e8; // UUniformGridPanel*
		constexpr auto RewardTipsPanel = 0x2f0; // UCanvasPanel*
		constexpr auto SelectPerkPanel = 0x2f8; // UCanvasPanel*
		constexpr auto SelectPerkCheckBox = 0x300; // UCheckBox*
		constexpr auto ConfirmButton = 0x308; // UButton*
		constexpr auto ChunkVehicleData = 0x318; // FBaseAnimalChunkData
	}

	namespace n_ASGStructureAltar {
		constexpr auto bClearZeroLifeChunk = 0xbe8; // char : 1
		constexpr auto UsingCharGuid = 0xbec; // FGuid
		constexpr auto UsingCharName = 0xc00; // FString
		constexpr auto bCanReborn = 0xc10; // char : 1
	}

	namespace n_ALevelStreamingVolume {
		constexpr auto StreamingLevelNames = 0x348; // TArray<FName>
		constexpr auto bEditorPreVisOnly = 0x358; // char : 1
		constexpr auto bDisabled = 0x358; // char : 1
		constexpr auto StreamingUsage = 0x35c; // EStreamingVolumeUsage
	}

	namespace n_UMovieScenePropertyTrack {
		constexpr auto SectionToKey = 0x78; // UMovieSceneSection*
		constexpr auto PropertyBinding = 0x80; // FMovieScenePropertyBinding
		constexpr auto Sections = 0x98; // TArray<UMovieSceneSection*>
	}

	namespace n_UAbilityTask_PlayMontageAndWait {
		constexpr auto OnCompleted = 0x80; // FMulticastInlineDelegate
		constexpr auto OnBlendOut = 0x90; // FMulticastInlineDelegate
		constexpr auto OnInterrupted = 0xa0; // FMulticastInlineDelegate
		constexpr auto OnCancelled = 0xb0; // FMulticastInlineDelegate
		constexpr auto MontageToPlay = 0xe8; // UAnimMontage*
		constexpr auto Rate = 0xf0; // float
		constexpr auto StartSection = 0xf4; // FName
		constexpr auto AnimRootMotionTranslationScale = 0xfc; // float
		constexpr auto StartTimeSeconds = 0x100; // float
		constexpr auto bStopWhenAbilityEnds = 0x104; // bool
	}

	namespace n_UPubOfficialSealBlockLogic {
		constexpr auto OfficialSealConfigMap = 0x30; // TMap<EBattleType, FOfficalSealConfig>
	}

	namespace n_UMagicLeapSettings {
		constexpr auto bEnableZI = 0x28; // bool
		constexpr auto bUseVulkanForZI = 0x29; // bool
		constexpr auto bUseMLAudioForZI = 0x2a; // bool
	}

	namespace n_UUI_ScalabilityDetailPanel {
		constexpr auto ScalabilityDetailType = 0x260; // EScalabilityDetailType
		constexpr auto ItemTemplate = 0x268; // UScalabilityDetailItem* [0x2]
		constexpr auto ItemNumPerRow = 0x278; // int32_t
		constexpr auto VBItem = 0x280; // UVerticalBox*
		constexpr auto TbName = 0x288; // UTextBlock*
		constexpr auto ItemList = 0x290; // TArray<UScalabilityDetailItem*>
	}

	namespace n_UDatasmithStaticMeshIFCImportData {
		constexpr auto SourceGlobalId = 0x28; // FString
	}

	namespace n_UAnimationSharingManager {
		constexpr auto Skeletons = 0x28; // TArray<USkeleton*>
		constexpr auto PerSkeletonData = 0x38; // TArray<UAnimSharingInstance*>
	}

	namespace n_UPaperTileLayer {
		constexpr auto LayerName = 0x28; // FText
		constexpr auto LayerWidth = 0x40; // int32_t
		constexpr auto LayerHeight = 0x44; // int32_t
		constexpr auto bHiddenInGame = 0x48; // char : 1
		constexpr auto bLayerCollides = 0x48; // char : 1
		constexpr auto bOverrideCollisionThickness = 0x48; // char : 1
		constexpr auto bOverrideCollisionOffset = 0x48; // char : 1
		constexpr auto CollisionThicknessOverride = 0x4c; // float
		constexpr auto CollisionOffsetOverride = 0x50; // float
		constexpr auto LayerColor = 0x54; // FLinearColor
		constexpr auto AllocatedWidth = 0x64; // int32_t
		constexpr auto AllocatedHeight = 0x68; // int32_t
		constexpr auto AllocatedCells = 0x70; // TArray<FPaperTileInfo>
		constexpr auto TileSet = 0x80; // UPaperTileSet*
		constexpr auto AllocatedGrid = 0x88; // TArray<int32_t>
	}

	namespace n_APaperGroupedSpriteActor {
		constexpr auto RenderComponent = 0x310; // UPaperGroupedSpriteComponent*
	}

	namespace n_UMovieSceneSequencePlayer {
		constexpr auto OnPlay = 0x418; // FMulticastInlineDelegate
		constexpr auto OnPlayReverse = 0x428; // FMulticastInlineDelegate
		constexpr auto OnStop = 0x438; // FMulticastInlineDelegate
		constexpr auto OnPause = 0x448; // FMulticastInlineDelegate
		constexpr auto OnFinished = 0x458; // FMulticastInlineDelegate
		constexpr auto Status = 0x468; // EMovieScenePlayerStatus
		constexpr auto bReversePlayback = 0x46c; // char : 1
		constexpr auto Sequence = 0x470; // UMovieSceneSequence*
		constexpr auto StartTime = 0x478; // FFrameNumber
		constexpr auto DurationFrames = 0x47c; // int32_t
		constexpr auto DurationSubFrames = 0x480; // float
		constexpr auto CurrentNumLoops = 0x484; // int32_t
		constexpr auto PlaybackSettings = 0x488; // FMovieSceneSequencePlaybackSettings
		constexpr auto RootTemplateInstance = 0x4a0; // FMovieSceneRootEvaluationTemplateInstance
		constexpr auto NetSyncProps = 0x5f0; // FMovieSceneSequenceReplProperties
		constexpr auto PlaybackClient = 0x600; // TScriptInterface<IMovieScenePlaybackClient>
		constexpr auto TickManager = 0x610; // UMovieSceneSequenceTickManager*
	}

	namespace n_UUI_InteractiveRadialIcon {
		constexpr auto InteractiveImageIndex = 0x2d8; // int32_t
		constexpr auto InteractiveString = 0x2e0; // FString
		constexpr auto bIsSubMenu = 0x2f0; // char : 1
		constexpr auto SelectedColor = 0x2f4; // FLinearColor
		constexpr auto UnSelectedColor = 0x304; // FLinearColor
		constexpr auto DelayMaterial = 0x318; // UMaterialInstance*
		constexpr auto DelayProgressColor = 0x320; // FLinearColor
		constexpr auto DelayDynamicMaterial = 0x330; // UMaterialInstanceDynamic*
		constexpr auto InteractiveDelayImage = 0x338; // UImage*
		constexpr auto InteractiveImage = 0x340; // UImage*
		constexpr auto InteractiveText = 0x348; // UTextBlock*
		constexpr auto LeftDelayTime = 0x350; // float
		constexpr auto SpecificSelectedIcon = 0x358; // TSoftObjectPtr<UTexture2D>
		constexpr auto SpecificUnSelectedIcon = 0x380; // TSoftObjectPtr<UTexture2D>
	}

	namespace n_UDialogueWave {
		constexpr auto bMature = 0x28; // char : 1
		constexpr auto bOverride_SubtitleOverride = 0x28; // char : 1
		constexpr auto SpokenText = 0x30; // FString
		constexpr auto SubtitleOverride = 0x40; // FString
		constexpr auto ContextMappings = 0x50; // TArray<FDialogueContextMapping>
		constexpr auto LocalizationGUID = 0x60; // FGuid
	}

	namespace n_UMaterialExpressionLandscapeLayerCoords {
		constexpr auto MappingType = 0x40; // ETerrainCoordMappingType
		constexpr auto CustomUVType = 0x41; // ELandscapeCustomizedCoordType
		constexpr auto MappingScale = 0x44; // float
		constexpr auto MappingRotation = 0x48; // float
		constexpr auto MappingPanU = 0x4c; // float
		constexpr auto MappingPanV = 0x50; // float
	}

	namespace n_UMaterialExpressionGetMaterialAttributes {
		constexpr auto MaterialAttributes = 0x40; // FMaterialAttributesInput
		constexpr auto AttributeGetTypes = 0x58; // TArray<FGuid>
	}

	namespace n_UBehaviorTreeComponent {
		constexpr auto NodeInstances = 0x138; // TArray<UBTNode*>
		constexpr auto DefaultBehaviorTreeAsset = 0x288; // UBehaviorTree*
	}

	namespace n_UEnvQueryTest_Distance {
		constexpr auto TestMode = 0x1f8; // EEnvTestDistance
		constexpr auto DistanceTo = 0x200; // UEnvQueryContext*
	}

	namespace n_UAutomationTestSettings {
		constexpr auto EngineTestModules = 0x28; // TArray<FString>
		constexpr auto EditorTestModules = 0x38; // TArray<FString>
		constexpr auto AutomationTestmap = 0x48; // FSoftObjectPath
		constexpr auto EditorPerformanceTestMaps = 0x60; // TArray<FEditorMapPerformanceTestDefinition>
		constexpr auto AssetsToOpen = 0x70; // TArray<FSoftObjectPath>
		constexpr auto MapsToPIETest = 0x80; // TArray<FString>
		constexpr auto BuildPromotionTest = 0x90; // FBuildPromotionTestSettings
		constexpr auto MaterialEditorPromotionTest = 0x280; // FMaterialEditorPromotionSettings
		constexpr auto ParticleEditorPromotionTest = 0x2b0; // FParticleEditorPromotionSettings
		constexpr auto BlueprintEditorPromotionTest = 0x2c0; // FBlueprintEditorPromotionSettings
		constexpr auto TestLevelFolders = 0x2f0; // TArray<FString>
		constexpr auto ExternalTools = 0x300; // TArray<FExternalToolDefinition>
		constexpr auto ImportExportTestDefinitions = 0x310; // TArray<FEditorImportExportTestDefinition>
		constexpr auto LaunchOnSettings = 0x320; // TArray<FLaunchOnTestSettings>
		constexpr auto DefaultScreenshotResolution = 0x330; // FIntPoint
		constexpr auto PIETestDuration = 0x338; // float
	}

	namespace n_UVaulting_AnimNotifyState {
		constexpr auto PlayMontage = 0x268; // UAnimMontage*
		constexpr auto StartPosition = 0x270; // float
		constexpr auto SmoothStartLocRange = 0x274; // FVector2D
		constexpr auto SmoothStartRotRange = 0x27c; // FVector2D
		constexpr auto MaxHeightRetentionTime = 0x284; // float
		constexpr auto MaxHeightRange = 0x288; // FVector2D
		constexpr auto EarlyBlendOutTimeRange = 0x290; // FVector2D
		constexpr auto ReverseDetachRange = 0x298; // FVector2D
		constexpr auto Enum_SimulateSpaceType = 0x2a0; // ESimulateSpace
		constexpr auto TMap_SimulateCurve = 0x2a8; // TMap<EAnimCurve, FRuntimeFloatCurve>
	}

	namespace n_UBlendSpace1D {
		constexpr auto bScaleAnimation = 0x148; // bool
	}

	namespace n_UUI_TransGuildActivityPoint {
		constexpr auto TransferPointText = 0x2d8; // UTextBlock*
		constexpr auto GongXunPointText = 0x2e0; // UTextBlock*
		constexpr auto ToDayLeftText = 0x2e8; // UTextBlock*
		constexpr auto ReducePointButton = 0x2f0; // UButton*
		constexpr auto AddPointButton = 0x2f8; // UButton*
		constexpr auto SubmitButton = 0x300; // UButton*
		constexpr auto CancelButton = 0x308; // UButton*
		constexpr auto TransferSlider = 0x310; // USlider*
	}

	namespace n_USlateSettings {
		constexpr auto bExplicitCanvasChildZOrder = 0x28; // bool
	}

	namespace n_UOvodusButton {
		constexpr auto bReceiveMouseMove = 0x428; // bool
		constexpr auto bReceiveMouseDown = 0x429; // bool
		constexpr auto bReceiveMouseDoubleClick = 0x42a; // bool
		constexpr auto bReceiveMouseUp = 0x42b; // bool
		constexpr auto bReceiveMouseEnter = 0x42c; // bool
		constexpr auto bReceiveMouseLeave = 0x42d; // bool
		constexpr auto AdvancedHitTexture = 0x430; // UTexture2D*
		constexpr auto AdvancedIgnoreHitAlpha = 0x438; // int32_t
		constexpr auto OnOvodusButtonClicked = 0x440; // FMulticastInlineDelegate
		constexpr auto OnOvodusButtonHovered = 0x450; // FMulticastInlineDelegate
		constexpr auto OnOvodusButtonUnhovered = 0x460; // FMulticastInlineDelegate
		constexpr auto OnOvodusButtonMouseDown = 0x470; // FMulticastInlineDelegate
		constexpr auto OnOvodusButtonMouseUp = 0x480; // FMulticastInlineDelegate
	}

	namespace n_USimpleDynamicMeshComponent {
		constexpr auto TangentsType = 0x4f8; // EDynamicMeshTangentCalcType
		constexpr auto bInvalidateProxyOnChange = 0x4f9; // bool
		constexpr auto bExplicitShowWireframe = 0x530; // bool
		constexpr auto bDrawOnTop = 0x580; // bool
	}

	namespace n_AOnlineBeaconHost {
		constexpr auto ListenPort = 0x340; // int32_t
		constexpr auto ClientActors = 0x348; // TArray<AOnlineBeaconClient*>
	}

	namespace n_UMovieSceneEnumTrack {
		constexpr auto Enum = 0xb0; // UEnum*
	}

	namespace n_USGHuangLi {
		constexpr auto YearText = 0x28; // FText
		constexpr auto MonthText = 0x40; // FText
		constexpr auto DayText = 0x58; // FText
		constexpr auto HuangLiNameText = 0x70; // TArray<FText>
		constexpr auto EffectNamesDetail = 0x80; // FHuangLiEffectNameDetail [0x4]
		constexpr auto BeginYear = 0x180; // int32_t
		constexpr auto BeginMonth = 0x184; // int32_t
		constexpr auto BeginDay = 0x188; // int32_t
		constexpr auto BeginHour = 0x18c; // int32_t
		constexpr auto BeginMinute = 0x190; // int32_t
		constexpr auto BeginSecond = 0x194; // int32_t
		constexpr auto HuangLiDaySeconds = 0x198; // int32_t
		constexpr auto XingShenEffects = 0x1a0; // FXingShenEffect [0xc]
		constexpr auto JianChuEffects = 0x560; // FJianChuEffect [0xc]
		constexpr auto XingXiuEffects = 0x920; // FXingXiuEffect [0x1c]
		constexpr auto HuangLiDataTable = 0x11e0; // UDataTable*
	}

	namespace n_UUI_GuildKPILog {
		constexpr auto PlayerNameText = 0x2d8; // UTextBlock*
		constexpr auto TotalPointText = 0x2e0; // UTextBlock*
		constexpr auto ModifyVerticalBox = 0x2e8; // UVerticalBox*
		constexpr auto EscButton = 0x2f0; // UButton*
		constexpr auto SaveLogButton = 0x2f8; // UButton*
		constexpr auto ListScrollBox = 0x300; // UScrollBox*
		constexpr auto GuildKPILogSlotClass = 0x308; // UGuildKPILogSlot*
	}

	namespace n_UARCandidateImage {
		constexpr auto CandidateTexture = 0x30; // UTexture2D*
		constexpr auto FriendlyName = 0x38; // FString
		constexpr auto Width = 0x48; // float
		constexpr auto Height = 0x4c; // float
		constexpr auto Orientation = 0x50; // EARCandidateImageOrientation
	}

	namespace n_UBTTask_RunBehaviorDynamic {
		constexpr auto InjectionTag = 0x70; // FGameplayTag
		constexpr auto DefaultBehaviorAsset = 0x78; // UBehaviorTree*
		constexpr auto BehaviorAsset = 0x80; // UBehaviorTree*
	}

	namespace n_ASGStructureTrap {
		constexpr auto TrapCharacter = 0xba0; // ASG_AnimalsCharacter*
		constexpr auto TrapCharacterTemplate = 0xba8; // TArray<FStructureTrapCharacters>
		constexpr auto bUsed = 0xbb8; // char : 1
		constexpr auto bReleased = 0xbb8; // char : 1
		constexpr auto bGetAnimalItem = 0xbb8; // char : 1
		constexpr auto TrapTime = 0xbbc; // int32_t
		constexpr auto TrapResetTime = 0xbc8; // int32_t
		constexpr auto SearchAnimalInterval = 0xbd8; // int32_t
		constexpr auto SearchAnimalRange = 0xbdc; // int32_t
		constexpr auto AnimalToTrapTime = 0xbe0; // int32_t
		constexpr auto UsedTrapTime = 0xc00; // int64_t
	}

	namespace n_UInterpTrackInstVectorMaterialParam {
		constexpr auto MaterialInstances = 0x28; // TArray<UMaterialInstanceDynamic*>
		constexpr auto ResetVectors = 0x38; // TArray<FVector>
		constexpr auto PrimitiveMaterialRefs = 0x48; // TArray<FPrimitiveMaterialRef>
		constexpr auto InstancedTrack = 0x58; // UInterpTrackVectorMaterialParam*
	}

	namespace n_UMaterialExpressionOneMinus {
		constexpr auto Input = 0x40; // FExpressionInput
	}

	namespace n_UBlackboardKeyType_NativeEnum {
		constexpr auto EnumName = 0x30; // FString
		constexpr auto EnumType = 0x40; // UEnum*
	}

	namespace n_UBlendSpace {
		constexpr auto AxisToScaleAnimation = 0x148; // EBlendSpaceAxis
	}

	namespace n_UPawnSensingComponent {
		constexpr auto HearingThreshold = 0xc0; // float
		constexpr auto LOSHearingThreshold = 0xc4; // float
		constexpr auto SightRadius = 0xc8; // float
		constexpr auto SensingInterval = 0xcc; // float
		constexpr auto HearingMaxSoundAge = 0xd0; // float
		constexpr auto bEnableSensingUpdates = 0xd4; // char : 1
		constexpr auto bOnlySensePlayers = 0xd4; // char : 1
		constexpr auto bSeePawns = 0xd4; // char : 1
		constexpr auto bHearNoises = 0xd4; // char : 1
		constexpr auto OnSeePawn = 0xe0; // FMulticastInlineDelegate
		constexpr auto OnHearNoise = 0xf0; // FMulticastInlineDelegate
		constexpr auto PeripheralVisionAngle = 0x100; // float
		constexpr auto PeripheralVisionCosine = 0x104; // float
	}

	namespace n_UParticleModuleSize_Seeded {
		constexpr auto RandomSeedInfo = 0x78; // FParticleRandomSeedInfo
	}

	namespace n_UNotificationTaxSlot {
		constexpr auto Image_2 = 0x268; // UImage*
		constexpr auto Image_3 = 0x270; // UImage*
		constexpr auto Image_4 = 0x278; // UImage*
		constexpr auto TextBlock_2 = 0x280; // UTextBlock*
		constexpr auto TextBlock_3 = 0x288; // UTextBlock*
		constexpr auto TextBlock_4 = 0x290; // UTextBlock*
		constexpr auto TextBlock_5 = 0x298; // UTextBlock*
	}

	namespace n_USetCollisionGeometryTool {
		constexpr auto Settings = 0x90; // USetCollisionGeometryToolProperties*
		constexpr auto VizSettings = 0x98; // UCollisionGeometryVisualizationProperties*
		constexpr auto CollisionProps = 0xa0; // UPhysicsObjectToolPropertySet*
		constexpr auto LineMaterial = 0xa8; // UMaterialInterface*
		constexpr auto PreviewGeom = 0xb0; // UPreviewGeometry*
	}

	namespace n_UMaterialExpressionConstant4Vector {
		constexpr auto Constant = 0x40; // FLinearColor
	}

	namespace n_USGFoliageInstancedStaticMeshComponent {
		constexpr auto bEnableNetworkGameplay = 0x6e0; // char : 1
		constexpr auto bScaleHealth = 0x6e0; // char : 1
		constexpr auto bIgnoreWeaponRebound = 0x6e0; // char : 1
		constexpr auto bUseDestructableDebris = 0x6e0; // char : 1
		constexpr auto bEnableHitShake = 0x6e0; // char : 1
		constexpr auto HealthScaleMultilier = 0x6e4; // float
		constexpr auto MinHealthScale = 0x6e8; // float
		constexpr auto MaxHealthScale = 0x6ec; // float
		constexpr auto EmbededComponentClass = 0x6f0; // USGExploitComponent*
		constexpr auto DestructableDebrisMaxReplicateRange = 0x6f8; // float
		constexpr auto DestroyedSound = 0x700; // USoundBase*
		constexpr auto DestructableActorClass = 0x708; // ASGDestructibleActor*
		constexpr auto InteractiveFXSpawnOffset = 0x710; // FVector
		constexpr auto InteractiveFX = 0x720; // UParticleSystem*
		constexpr auto InteractiveSound = 0x728; // USoundBase*
		constexpr auto ExploitScaleConfigs = 0x730; // TArray<FExploitScaleConfig>
		constexpr auto ElementsMaskStruct = 0x740; // FElementsMaskStruct
		constexpr auto ExploitComponent = 0x760; // USGExploitComponent*
	}

	namespace n_UMovieSceneParameterSection {
		constexpr auto BoolParameterNamesAndCurves = 0xe8; // TArray<FBoolParameterNameAndCurve>
		constexpr auto ScalarParameterNamesAndCurves = 0xf8; // TArray<FScalarParameterNameAndCurve>
		constexpr auto Vector2DParameterNamesAndCurves = 0x108; // TArray<FVector2DParameterNameAndCurves>
		constexpr auto VectorParameterNamesAndCurves = 0x118; // TArray<FVectorParameterNameAndCurves>
		constexpr auto ColorParameterNamesAndCurves = 0x128; // TArray<FColorParameterNameAndCurves>
		constexpr auto TransformParameterNamesAndCurves = 0x138; // TArray<FTransformParameterNameAndCurves>
	}

	namespace n_USoundNodeRandom {
		constexpr auto Weights = 0x48; // TArray<float>
		constexpr auto HasBeenUsed = 0x58; // TArray<bool>
		constexpr auto NumRandomUsed = 0x68; // int32_t
		constexpr auto PreselectAtLevelLoad = 0x6c; // int32_t
		constexpr auto bShouldExcludeFromBranchCulling = 0x70; // char : 1
		constexpr auto bSoundCueExcludedFromBranchCulling = 0x70; // char : 1
		constexpr auto bRandomizeWithoutReplacement = 0x70; // char : 1
	}

	namespace n_UUI_GuildEvent {
		constexpr auto GuildEventColumnTemplate = 0x2d8; // UGuildEventColumn*
		constexpr auto IconBrush = 0x2e0; // TSoftObjectPtr<UTexture2D> [0x7]
		constexpr auto UnknownIconBrush = 0x3f8; // TSoftObjectPtr<UTexture2D>
		constexpr auto TypeIconBrush = 0x420; // TSoftObjectPtr<UTexture2D> [0x7]
		constexpr auto UnknownTypeIconBrush = 0x538; // TSoftObjectPtr<UTexture2D>
		constexpr auto RecordTextColor = 0x560; // FString [0x10]
		constexpr auto EventRecordCount = 0x660; // int32_t
		constexpr auto ConflictMaterial = 0x668; // UMaterialInterface*
		constexpr auto ConflictMatColor = 0x670; // FLinearColor
		constexpr auto GuildEventPanel = 0x680; // UCanvasPanel*
		constexpr auto GuildEventScrollBox = 0x688; // UScrollBox*
		constexpr auto DetailPanel = 0x690; // UCanvasPanel*
		constexpr auto LoadingCanvas = 0x698; // UCanvasPanel*
		constexpr auto ReturnBtn = 0x6a0; // UButton*
		constexpr auto IconImg = 0x6a8; // UImage*
		constexpr auto TypeIconImg = 0x6b0; // UImage*
		constexpr auto EventGuildTypeText = 0x6b8; // UTextBlock*
		constexpr auto ConflictImg = 0x6c0; // UImage*
		constexpr auto ConflictTb = 0x6c8; // UTextBlock*
		constexpr auto DescriptionTb = 0x6d0; // UTextBlock*
		constexpr auto EventRecordScrollBox = 0x6d8; // UScrollBox*
		constexpr auto RtbEventRecord = 0x6e0; // URichTextBlock*
		constexpr auto GuileEventDialogPanel = 0x6e8; // UCanvasPanel*
		constexpr auto DialogCloseBtn = 0x6f0; // UButton*
		constexpr auto DialogConfirmBtn = 0x6f8; // UButton*
		constexpr auto CurRecords = 0x700; // TArray<FGuildEventRecord>
		constexpr auto CurEventRecordBeginIndex = 0x710; // int32_t
		constexpr auto CurEventRecordEndIndex = 0x714; // int32_t
		constexpr auto CurEventGuildType = 0x718; // EEventGuildType
	}

	namespace n_UParticleSystemReplay {
		constexpr auto ClipIDNumber = 0x28; // int32_t
	}

	namespace n_USecondarySmoothBrushOpProps {
		constexpr auto Strength = 0x60; // float
		constexpr auto Falloff = 0x64; // float
		constexpr auto bPreserveUVFlow = 0x68; // bool
	}

	namespace n_ASGStructureCheckVolume {
		constexpr auto bDisableNoTeam = 0x348; // char : 1
		constexpr auto bPreventCreateStructure = 0x348; // char : 1
		constexpr auto bAllowCreateStructure = 0x348; // char : 1
		constexpr auto OnlyAllowStructureTypeData = 0x350; // USGStructureCheckVolumeData*
		constexpr auto OnlyPreventStructureTypeData = 0x358; // USGStructureCheckVolumeData*
		constexpr auto StaticLinkStructure = 0x360; // ASGStructure*
		constexpr auto CheckVolumeName = 0x368; // FString
	}

	namespace n_UParticleModuleBeamSource {
		constexpr auto SourceMethod = 0x30; // Beam2SourceTargetMethod
		constexpr auto SourceName = 0x34; // FName
		constexpr auto bSourceAbsolute = 0x3c; // char : 1
		constexpr auto Source = 0x40; // FRawDistributionVector
		constexpr auto bLockSource = 0x88; // char : 1
		constexpr auto SourceTangentMethod = 0x8c; // Beam2SourceTargetTangentMethod
		constexpr auto SourceTangent = 0x90; // FRawDistributionVector
		constexpr auto bLockSourceTangent = 0xd8; // char : 1
		constexpr auto SourceStrength = 0xe0; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x110; // char : 1
	}

	namespace n_AInteractiveFoliageActor {
		constexpr auto CapsuleComponent = 0x320; // UCapsuleComponent*
		constexpr auto TouchingActorEntryPosition = 0x328; // FVector
		constexpr auto FoliageVelocity = 0x334; // FVector
		constexpr auto FoliageForce = 0x340; // FVector
		constexpr auto FoliagePosition = 0x34c; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x358; // float
		constexpr auto FoliageTouchImpulseScale = 0x35c; // float
		constexpr auto FoliageStiffness = 0x360; // float
		constexpr auto FoliageStiffnessQuadratic = 0x364; // float
		constexpr auto FoliageDamping = 0x368; // float
		constexpr auto MaxDamageImpulse = 0x36c; // float
		constexpr auto MaxTouchImpulse = 0x370; // float
		constexpr auto MaxForce = 0x374; // float
		constexpr auto Mass = 0x378; // float
	}

	namespace n_UGuildAuthoritySlot {
		constexpr auto OperateAuthTypeText = 0x2d8; // UTextBlock*
		constexpr auto OperateAuthComboBox = 0x2e0; // UGuildAuthorityComboBox*
		constexpr auto TipsDataButton = 0x2e8; // UDataButton*
		constexpr auto ButtonTipWidgetTemplate = 0x2f0; // USGToolTipWidget*
		constexpr auto ConfirmSubmitUIOverride = 0x2f8; // UUI_GenericConfirmationDialog*
	}

}